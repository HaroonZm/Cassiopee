================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importe le module sys pour accéder à des fonctionnalités spécifiques au système, comme sys.stdin

input = sys.stdin.readline  # Redéfinit l'entrée standard pour utiliser sys.stdin.readline qui lit une ligne de l'entrée standard plus efficacement

def main():  # Définit la fonction principale du programme, qui contient la logique principale

    # Lis la première ligne de l'entrée contenant deux entiers séparés par un espace : K et Q
    # map applique la fonction int (transformation en entier) sur chaque élément du résultat de input().split() (sépare la ligne en morceaux sur chaque espace)
    K, Q = map(int, input().split())
    
    # Lis la deuxième ligne, qui contient K entiers séparés par un espace
    # map applique int à chaque élément converti de l'entrée
    # list transforme le résultat de la map en liste
    D = list(map(int, input().split()))
    
    # Boucle pour traiter Q requêtes
    for _ in range(Q):
        # Lis les paramètres d'une requête : n, x, m
        n, x, m = map(int, input().split())
        
        # Calcule le reste modulo m de chaque D[i] et stocke les résultats dans une nouvelle liste md
        md = [D[i] % m for i in range(K)]
        
        smda = 0  # Initialisation d'une variable pour stocker la somme des md[i] pour i dans la première partie de la boucle (voir plus loin)
        mda0 = 0  # Initialise le compteur d'éléments md[i] qui valent zéro dans la même partie
        
        # Boucle sur les éléments md du début jusqu'à l'indice (n-1) % K (exclu)
        for i in range((n - 1) % K):
            # Si md[i] est égal à zéro, incrémente le compteur mda0
            if md[i] == 0:
                mda0 += 1
            # Ajoute md[i] à la somme
            smda += md[i]
        
        # Après la boucle précédente:
        smd = smda    # smd initialise la somme cumulative totale du reste des md sur l'intervalle complet [0, K)
        md0 = mda0    # md0 copie la valeur du nombre d'éléments nuls rencontrés dans la première partie
        
        # Boucle sur les éléments md du précédent index jusqu'à K (pour finir la séquence)
        for i in range((n - 1) % K, K):
            # Si md[i] est nul, incrémente le compteur md0
            if md[i] == 0:
                md0 += 1
            # Ajoute md[i] à la somme totale smd
            smd += md[i]
        
        # Calcule combien de cycles complets de longueur K sont contenus dans les (n-1) premiers éléments
        roop = (n - 1) // K
        
        # Calcule la valeur de res (le résultat final pour la requête)
        # Les différentes parties de la formule:
        # - n - 1 : nombre total d'étapes / éléments à considérer
        # - (x % m) : le reste de x modulo m, utilisé pour le calcul de "débordement"
        # - sum(md) * roop : la somme des valeurs md pour chaque cycle complet multipliée par le nombre de cycles complets
        # - smda : somme des md dans la première section partielle d'éléments
        # - md0 * roop : nombre de zéros dans md sur tous les cycles complets
        # - mda0 : nombre de zéros de la première section partielle
        # La division entière (avec //) fournit combien de fois la somme cumulée dépasse m
        res = n - 1 - (x % m + sum(md) * roop + smda) // m - md0 * roop - mda0
        
        # Affiche le résultat pour cette requête
        print(res)

# Appelle la fonction main pour démarrer le programme lorsque ce fichier est exécuté
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015895461663603783
    2. '\n' → logprob: -5.140895366668701
    3. '<|end|>' → logprob: -5.390895366668701
    4. '\' → logprob: -5.640895366668701
    5. '.readline' → logprob: -8.14089584350586
    6. '[' → logprob: -8.39089584350586
    7. '<|end|>' → logprob: -8.51589584350586
    8. 'import' → logprob: -8.51589584350586
    9. '```' → logprob: -8.64089584350586
    10. '' → logprob: -8.89089584350586

Token 4: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04196225851774216
    2. '<|end|>' → logprob: -4.291962146759033
    3. '  ' → logprob: -4.541962146759033
    4. '.' → logprob: -4.541962146759033
    5. '<|end|>' → logprob: -6.291962146759033
    6. 'import' → logprob: -7.166962146759033
    7. ' .' → logprob: -7.291962146759033
    8. 'space' → logprob: -8.166962623596191
    9. '.system' → logprob: -8.291962623596191
    10. '  

' → logprob: -8.666962623596191

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -2.9040898880339228e-05
    2. 'p' → logprob: -10.500028610229492
    3. 'por' → logprob: -14.500028610229492
    4. 'ported' → logprob: -14.750028610229492
    5. 'ports' → logprob: -15.750028610229492
    6. 'porter' → logprob: -16.000028610229492
    7. '```' → logprob: -17.000028610229492
    8. 'import' → logprob: -17.250028610229492
    9. 'prt' → logprob: -17.250028610229492
    10. 'порт' → logprob: -17.250028610229492

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05842006206512451
    2. 'rt' → logprob: -3.308420181274414
    3. ' ' → logprob: -4.183420181274414
    4. ' r' → logprob: -5.433420181274414
    5. ' d' → logprob: -9.558420181274414
    6. '  ' → logprob: -9.558420181274414
    7. ' rt' → logprob: -9.808420181274414
    8. 'nt' → logprob: -9.933420181274414
    9. 'port' → logprob: -10.058420181274414
    10. 'd' → logprob: -10.058420181274414

Token 7: ' module' (ID: 8827)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2249729186296463
    2. ' ' → logprob: -1.7249729633331299
    3. ' r' → logprob: -5.099972724914551
    4. 's' → logprob: -5.349972724914551
    5. 'space' → logprob: -5.599972724914551
    6. '_' → logprob: -5.599972724914551
    7. ' space' → logprob: -6.724972724914551
    8. ' sys' → logprob: -7.224972724914551
    9. '  ' → logprob: -7.474972724914551
    10. 'n' → logprob: -7.599972724914551

Token 8: ' sys' (ID: 12228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0844554454088211
    2. ',' → logprob: -3.2094554901123047
    3. ' ' → logprob: -4.084455490112305
    4. '' → logprob: -5.084455490112305
    5. '\' → logprob: -5.334455490112305
    6. '\n' → logprob: -5.584455490112305
    7. 'import' → logprob: -5.584455490112305
    8. '<|end|>' → logprob: -6.584455490112305
    9. '  ' → logprob: -7.459455490112305
    10. '[' → logprob: -7.584455490112305

Token 9: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12836450338363647
    2. '\n' → logprob: -2.7533645629882812
    3. 'import' → logprob: -3.8783645629882812
    4. '\' → logprob: -4.628364562988281
    5. ' ' → logprob: -4.753364562988281
    6. '
' → logprob: -5.003364562988281
    7. '' → logprob: -5.253364562988281
    8. ',' → logprob: -6.753364562988281
    9. '.import' → logprob: -7.003364562988281
    10. 'newline' → logprob: -7.003364562988281

Token 10: ' accéder' (ID: 120555)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.38443511724472046
    2. ' manip' → logprob: -3.0094351768493652
    3. ' pouvoir' → logprob: -3.2594351768493652
    4. ' la' → logprob: -3.3844351768493652
    5. ' accéder' → logprob: -3.6344351768493652
    6. ' récupérer' → logprob: -3.8844351768493652
    7. 'l' → logprob: -3.8844351768493652
    8. ' les' → logprob: -4.009435176849365
    9. ' permettre' → logprob: -4.384435176849365
    10. ' utiliser' → logprob: -4.384435176849365

Token 11: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04898234084248543
    2. ' .' → logprob: -3.2989823818206787
    3. ' ' → logprob: -5.6739821434021
    4. ' à' → logprob: -6.1739821434021
    5. ' aux' → logprob: -7.4239821434021
    6. ' au' → logprob: -7.5489821434021
    7. ' a' → logprob: -7.5489821434021
    8. '[' → logprob: -7.5489821434021
    9. '```' → logprob: -7.5489821434021
    10. '  ' → logprob: -7.6739821434021

Token 12: ' des' (ID: 731)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.430342435836792
    2. 's' → logprob: -1.555342435836792
    3. 'la' → logprob: -1.680342435836792
    4. ' l' → logprob: -2.305342435836792
    5. 'argv' → logprob: -2.305342435836792
    6. 'sys' → logprob: -3.180342435836792
    7. ' argv' → logprob: -3.430342435836792
    8. ' la' → logprob: -3.555342435836792
    9. ' sys' → logprob: -4.305342674255371
    10. 'les' → logprob: -4.555342674255371

Token 13: ' fonctionnalités' (ID: 111283)
  Prédit: ' arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arguments' → logprob: -0.4030589759349823
    2. ' informations' → logprob: -2.5280590057373047
    3. ' fonctionnalités' → logprob: -2.7780590057373047
    4. ' fonctions' → logprob: -3.0280590057373047
    5. ' espaces' → logprob: -3.0280590057373047
    6. 'arguments' → logprob: -3.9030590057373047
    7. ' ' → logprob: -5.153059005737305
    8. ' ' → logprob: -5.153059005737305
    9. ' modules' → logprob: -5.278059005737305
    10. ' information' → logprob: -5.278059005737305

Token 14: ' spécifiques' (ID: 110075)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07009337842464447
    2. 'import' → logprob: -3.1950933933258057
    3. '<|end|>' → logprob: -4.445093154907227
    4. '```' → logprob: -5.445093154907227
    5. '\' → logprob: -5.945093154907227
    6. ',' → logprob: -6.320093154907227
    7. ' .' → logprob: -6.695093154907227
    8. '
' → logprob: -7.320093154907227
    9. '\n' → logprob: -7.695093154907227
    10. '<|end|>' → logprob: -7.820093154907227

Token 15: ' au' (ID: 2791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6997734904289246
    2. '\n' → logprob: -1.3247735500335693
    3. '
' → logprob: -1.8247735500335693
    4. '\' → logprob: -3.4497735500335693
    5. 'import' → logprob: -4.19977331161499
    6. '' → logprob: -4.57477331161499
    7. '

' → logprob: -5.19977331161499
    8. ',' → logprob: -5.94977331161499
    9. '<|end|>' → logprob: -5.94977331161499
    10. '```' → logprob: -6.19977331161499

Token 16: ' système' (ID: 30034)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08230157196521759
    2. ' système' → logprob: -2.707301616668701
    3. 's' → logprob: -5.832301616668701
    4. ' system' → logprob: -6.207301616668701
    5. '.' → logprob: -6.457301616668701
    6. '_' → logprob: -7.082301616668701
    7. ' sys' → logprob: -7.457301616668701
    8. '  ' → logprob: -7.457301616668701
    9. ' ' → logprob: -7.707301616668701
    10. ' .' → logprob: -8.207301139831543

Token 17: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3495938777923584
    2. '\n' → logprob: -1.7245938777923584
    3. '
' → logprob: -2.8495938777923584
    4. '\' → logprob: -3.8495938777923584
    5. 'import' → logprob: -4.0995941162109375
    6. 'newline' → logprob: -5.2245941162109375
    7. '' → logprob: -5.4745941162109375
    8. ',' → logprob: -5.4745941162109375
    9. '

' → logprob: -6.3495941162109375
    10. '```' → logprob: -6.8495941162109375

Token 18: ' comme' (ID: 7971)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8252716660499573
    2. 'import' → logprob: -1.3252716064453125
    3. '\n' → logprob: -1.8252716064453125
    4. ',' → logprob: -2.8252716064453125
    5. '\' → logprob: -4.0752716064453125
    6. '
' → logprob: -4.2002716064453125
    7. ' .' → logprob: -4.3252716064453125
    8. ' ' → logprob: -5.0752716064453125
    9. '```' → logprob: -5.2002716064453125
    10. '.import' → logprob: -5.5752716064453125

Token 19: ' sys' (ID: 12228)
  Prédit: ' argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' argv' → logprob: -0.5439006090164185
    2. ' l' → logprob: -1.0439006090164185
    3. ' sys' → logprob: -3.668900489807129
    4. 'argv' → logprob: -3.918900489807129
    5. '.argv' → logprob: -5.043900489807129
    6. ' la' → logprob: -5.543900489807129
    7. ' les' → logprob: -5.668900489807129
    8. ' .' → logprob: -7.168900489807129
    9. ' ' → logprob: -7.168900489807129
    10. ' stdin' → logprob: -7.418900489807129

Token 20: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23807844519615173
    2. '.argv' → logprob: -1.7380784749984741
    3. '.stdout' → logprob: -4.238078594207764
    4. '.path' → logprob: -4.363078594207764
    5. '.exit' → logprob: -6.238078594207764
    6. '.stdin' → logprob: -6.238078594207764
    7. ' .' → logprob: -6.363078594207764
    8. '.stderr' → logprob: -6.363078594207764
    9. '.version' → logprob: -7.488078594207764
    10. '.ex' → logprob: -9.238078117370605

Token 21: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005701008252799511
    2. ',' → logprob: -6.880701065063477
    3. '
' → logprob: -6.880701065063477
    4. '.readline' → logprob: -6.880701065063477
    5. 'import' → logprob: -7.130701065063477
    6. '' → logprob: -7.880701065063477
    7. '\n' → logprob: -8.130701065063477
    8. ' ' → logprob: -8.380701065063477
    9. '.
' → logprob: -9.255701065063477
    10. '\' → logprob: -9.255701065063477

Token 22: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08075328916311264
    2. '.readline' → logprob: -3.0807533264160156
    3. 'import' → logprob: -4.705753326416016
    4. '
' → logprob: -4.830753326416016
    5. ',' → logprob: -5.080753326416016
    6. '\n' → logprob: -6.455753326416016
    7. '```' → logprob: -6.455753326416016
    8. '[' → logprob: -7.080753326416016
    9. '\' → logprob: -7.455753326416016
    10. '' → logprob: -7.580753326416016

Token 23: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4753723442554474
    2. '.' → logprob: -0.975372314453125
    3. '(.)' → logprob: -7.975372314453125
    4. '()' → logprob: -8.350372314453125
    5. '=' → logprob: -8.475372314453125
    6. ' (' → logprob: -8.975372314453125
    7. '[' → logprob: -9.475372314453125
    8. ')' → logprob: -9.600372314453125
    9. ' .' → logprob: -9.850372314453125
    10. ' =' → logprob: -10.475372314453125

Token 24: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4340551793575287
    2. 'sys' → logprob: -1.059055209159851
    3. 'input' → logprob: -5.559055328369141
    4. ' input' → logprob: -6.559055328369141
    5. '=sys' → logprob: -10.43405532836914
    6. '	sys' → logprob: -11.18405532836914
    7. '(sys' → logprob: -11.55905532836914
    8. ' ' → logprob: -11.80905532836914
    9. 'lambda' → logprob: -13.30905532836914
    10. ' lambda' → logprob: -13.30905532836914

Token 25: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00325328903272748
    2. '.stdin' → logprob: -5.87825345993042
    3. '.readline' → logprob: -8.003252983093262
    4. '[' → logprob: -10.128252983093262
    5. ' .' → logprob: -10.878252983093262
    6. '.setdefault' → logprob: -11.628252983093262
    7. '.stdout' → logprob: -12.128252983093262
    8. '.
' → logprob: -12.253252983093262
    9. '.input' → logprob: -12.503252983093262
    10. '.[' → logprob: -12.628252983093262

Token 26: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21177878975868225
    2. '.readline' → logprob: -1.8367787599563599
    3. '.read' → logprob: -3.4617788791656494
    4. '.readlines' → logprob: -9.71177864074707
    5. ' .' → logprob: -10.71177864074707
    6. 'read' → logprob: -11.08677864074707
    7. '.Read' → logprob: -11.21177864074707
    8. '```' → logprob: -11.96177864074707
    9. '.get' → logprob: -12.33677864074707
    10. '.
' → logprob: -12.33677864074707

Token 27: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5454915761947632
    2. '(' → logprob: -0.9204915761947632
    3. '(
' → logprob: -4.545491695404053
    4. '
' → logprob: -4.920491695404053
    5. '()
' → logprob: -6.545491695404053
    6. '(

' → logprob: -7.295491695404053
    7. '<|end|>' → logprob: -7.545491695404053
    8. ')' → logprob: -7.795491695404053
    9. ' ' → logprob: -8.670491218566895
    10. '()

' → logprob: -9.045491218566895

Token 28: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25762107968330383
    2. '(' → logprob: -1.5076210498809814
    3. '(
' → logprob: -6.0076212882995605
    4. '()
' → logprob: -6.6326212882995605
    5. '
' → logprob: -7.0076212882995605
    6. '(

' → logprob: -8.257620811462402
    7. '()

' → logprob: -8.507620811462402
    8. ')' → logprob: -8.882620811462402
    9. '().' → logprob: -9.382620811462402
    10. '#' → logprob: -9.757620811462402

Token 29: ' Red' (ID: 5952)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.300953984260559
    2. 'assign' → logprob: -1.800953984260559
    3. ' read' → logprob: -2.1759538650512695
    4. 'input' → logprob: -2.3009538650512695
    5. 'replace' → logprob: -2.3009538650512695
    6. ' input' → logprob: -2.9259538650512695
    7. ' assign' → logprob: -3.1759538650512695
    8. ' readline' → logprob: -3.5509538650512695
    9. ' remplacer' → logprob: -3.9259538650512695
    10. 'rem' → logprob: -4.1759538650512695

Token 30: 'éf' (ID: 126246)
  Prédit: 'éf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éf' → logprob: -0.132046177983284
    2. 'é' → logprob: -2.6320462226867676
    3. 'ef' → logprob: -3.0070462226867676
    4. 'efined' → logprob: -7.382046222686768
    5. '#' → logprob: -8.13204574584961
    6. 'irect' → logprob: -8.50704574584961
    7. 'ir' → logprob: -8.50704574584961
    8. 'e' → logprob: -8.63204574584961
    9. 'irection' → logprob: -9.25704574584961
    10. 'if' → logprob: -9.63204574584961

Token 31: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.47926950454711914
    2. 'inir' → logprob: -0.9792695045471191
    3. '_init' → logprob: -6.229269504547119
    4. 'in' → logprob: -6.479269504547119
    5. 'inition' → logprob: -7.479269504547119
    6. 'ini' → logprob: -7.604269504547119
    7. '```' → logprob: -9.479269027709961
    8. '=' → logprob: -9.604269027709961
    9. '#' → logprob: -9.854269027709961
    10. '_' → logprob: -10.229269027709961

Token 32: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08464682102203369
    2. '(input' → logprob: -2.834646701812744
    3. ' ' → logprob: -4.584646701812744
    4. 'input' → logprob: -4.709646701812744
    5. ' (' → logprob: -6.584646701812744
    6. '()' → logprob: -6.834646701812744
    7. '(
' → logprob: -8.084647178649902
    8. ' input' → logprob: -8.584647178649902
    9. ')' → logprob: -9.709647178649902
    10. '('' → logprob: -9.709647178649902

Token 33: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34169676899909973
    2. ''' → logprob: -1.7166967391967773
    3. 'e' → logprob: -2.5916967391967773
    4. 'a' → logprob: -4.091696739196777
    5. ' input' → logprob: -4.716696739196777
    6. ''entrée' → logprob: -6.216696739196777
    7. ' ' → logprob: -6.341696739196777
    8. '_' → logprob: -6.341696739196777
    9. 'i' → logprob: -6.966696739196777
    10. '`' → logprob: -7.466696739196777

Token 34: ' standard' (ID: 7024)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2653578519821167
    2. '<|end|>' → logprob: -1.8903578519821167
    3. '(' → logprob: -2.1403579711914062
    4. '()' → logprob: -2.2653579711914062
    5. ' ' → logprob: -2.3903579711914062
    6. '\' → logprob: -2.3903579711914062
    7. ')' → logprob: -2.7653579711914062
    8. '
' → logprob: -3.2653579711914062
    9. '' → logprob: -4.890357971191406
    10. '(
' → logprob: -5.140357971191406

Token 35: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8304302096366882
    2. '()' → logprob: -1.330430269241333
    3. '
' → logprob: -2.580430269241333
    4. '\n' → logprob: -2.830430269241333
    5. ' ' → logprob: -2.955430269241333
    6. '(
' → logprob: -3.330430269241333
    7. ')' → logprob: -3.955430269241333
    8. '\' → logprob: -4.205430030822754
    9. ' (' → logprob: -5.330430030822754
    10. '

' → logprob: -5.455430030822754

Token 36: ' utiliser' (ID: 43227)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.09736648947000504
    2. 'l' → logprob: -3.7223665714263916
    3. ' une' → logprob: -4.2223663330078125
    4. 'une' → logprob: -4.2223663330078125
    5. 'lecture' → logprob: -4.7223663330078125
    6. ' recevoir' → logprob: -4.9723663330078125
    7. ' lecture' → logprob: -5.5973663330078125
    8. 'optim' → logprob: -6.0973663330078125
    9. ' permettre' → logprob: -6.2223663330078125
    10. ' read' → logprob: -6.3473663330078125

Token 37: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.29989540576934814
    2. ' input' → logprob: -1.6748954057693481
    3. 'sys' → logprob: -3.7998952865600586
    4. ' sys' → logprob: -4.049895286560059
    5. 'l' → logprob: -4.924895286560059
    6. ' ' → logprob: -4.924895286560059
    7. ' l' → logprob: -5.174895286560059
    8. ' readline' → logprob: -5.424895286560059
    9. '(input' → logprob: -6.799895286560059
    10. '()' → logprob: -6.799895286560059

Token 38: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.16835516691207886
    2. '.' → logprob: -1.9183552265167236
    3. '.readline' → logprob: -4.9183549880981445
    4. '.stdout' → logprob: -7.5433549880981445
    5. '<|end|>' → logprob: -9.418354988098145
    6. ' .' → logprob: -9.793354988098145
    7. 'stdin' → logprob: -10.543354988098145
    8. '.input' → logprob: -10.793354988098145
    9. '.std' → logprob: -10.918354988098145
    10. '.argv' → logprob: -11.918354988098145

Token 39: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4184073209762573
    2. '.' → logprob: -1.4184073209762573
    3. '()' → logprob: -2.543407440185547
    4. '(' → logprob: -4.293407440185547
    5. ')' → logprob: -5.793407440185547
    6. '.read' → logprob: -6.168407440185547
    7. ' ' → logprob: -7.418407440185547
    8. '().' → logprob: -7.668407440185547
    9. '[' → logprob: -8.043407440185547
    10. '(
' → logprob: -9.168407440185547

Token 40: ' qui' (ID: 2780)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.536567747592926
    2. '
' → logprob: -1.2865676879882812
    3. '(
' → logprob: -2.6615676879882812
    4. '\n' → logprob: -3.6615676879882812
    5. '()' → logprob: -4.036567687988281
    6. '

' → logprob: -4.661567687988281
    7. '' → logprob: -5.536567687988281
    8. '(

' → logprob: -6.036567687988281
    9. '  
' → logprob: -6.661567687988281
    10. ' ' → logprob: -6.786567687988281

Token 41: ' lit' (ID: 11980)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.08708096295595169
    2. '()' → logprob: -3.712080955505371
    3. ' permet' → logprob: -3.712080955505371
    4. 'est' → logprob: -4.087080955505371
    5. ' optimise' → logprob: -5.962080955505371
    6. ' a' → logprob: -6.462080955505371
    7. ' prend' → logprob: -6.462080955505371
    8. ' ' → logprob: -6.462080955505371
    9. ' garantit' → logprob: -6.712080955505371
    10. ' optim' → logprob: -6.962080955505371

Token 42: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.755325198173523
    2. '()' → logprob: -0.880325198173523
    3. 'une' → logprob: -2.3803253173828125
    4. 'un' → logprob: -5.6303253173828125
    5. ' un' → logprob: -5.6303253173828125
    6. 'l' → logprob: -6.2553253173828125
    7. '()\' → logprob: -6.3803253173828125
    8. 'la' → logprob: -6.6303253173828125
    9. 'input' → logprob: -6.8803253173828125
    10. ' la' → logprob: -7.0053253173828125

Token 43: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.7085729837417603
    2. ' ligne' → logprob: -2.0835728645324707
    3. 'e' → logprob: -2.4585728645324707
    4. 'line' → logprob: -3.0835728645324707
    5. 'l' → logprob: -3.2085728645324707
    6. 'iquement' → logprob: -3.3335728645324707
    7. ' caractère' → logprob: -3.7085728645324707
    8. ' line' → logprob: -3.8335728645324707
    9. 'car' → logprob: -4.208572864532471
    10. 'texte' → logprob: -4.208572864532471

Token 44: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6769184470176697
    2. '(' → logprob: -1.0519185066223145
    3. '\n' → logprob: -2.8019185066223145
    4. '(
' → logprob: -3.0519185066223145
    5. '\' → logprob: -4.6769185066223145
    6. ' ' → logprob: -5.1769185066223145
    7. '
' → logprob: -5.6769185066223145
    8. '<|end|>' → logprob: -5.6769185066223145
    9. ')' → logprob: -6.3019185066223145
    10. ' (' → logprob: -6.6769185066223145

Token 45: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1267526149749756
    2. 'man' → logprob: -1.1267526149749756
    3. 'entrée' → logprob: -2.0017526149749756
    4. ' l' → logprob: -3.1267526149749756
    5. 'texte' → logprob: -3.5017526149749756
    6. 'input' → logprob: -3.6267526149749756
    7. ' manière' → logprob: -3.7517526149749756
    8. 'plus' → logprob: -3.8767526149749756
    9. ' input' → logprob: -4.251752853393555
    10. 'code' → logprob: -4.501752853393555

Token 46: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8467932343482971
    2. 'igne' → logprob: -1.0967931747436523
    3. 'e' → logprob: -2.4717931747436523
    4. ''entrée' → logprob: -2.9717931747436523
    5. 'input' → logprob: -3.3467931747436523
    6. 'entrée' → logprob: -3.3467931747436523
    7. 'ecture' → logprob: -5.096793174743652
    8. 'ig' → logprob: -5.596793174743652
    9. 'ine' → logprob: -5.846793174743652
    10. 'ent' → logprob: -5.971793174743652

Token 47: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3002016544342041
    2. ')' → logprob: -2.050201654434204
    3. '\n' → logprob: -3.050201654434204
    4. '.' → logprob: -3.675201654434204
    5. '().' → logprob: -4.175201416015625
    6. '\' → logprob: -4.300201416015625
    7. 's' → logprob: -5.050201416015625
    8. ' ' → logprob: -5.050201416015625
    9. '(' → logprob: -6.050201416015625
    10. '()\' → logprob: -6.550201416015625

Token 48: ' plus' (ID: 2932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33688923716545105
    2. '
' → logprob: -2.8368892669677734
    3. '(
' → logprob: -2.9618892669677734
    4. '\n' → logprob: -3.0868892669677734
    5. ' ' → logprob: -3.5868892669677734
    6. '()' → logprob: -3.8368892669677734
    7. '#' → logprob: -4.086889266967773
    8. '\' → logprob: -4.211889266967773
    9. ')' → logprob: -4.586889266967773
    10. '' → logprob: -4.836889266967773

Token 49: ' efficacement' (ID: 155449)
  Prédit: ' efficacement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficacement' → logprob: -0.28194186091423035
    2. ' rapidement' → logprob: -1.5319418907165527
    3. ' rapide' → logprob: -5.031941890716553
    4. 'rap' → logprob: -5.531941890716553
    5. 'rapid' → logprob: -5.781941890716553
    6. ' efficace' → logprob: -5.781941890716553
    7. 'vite' → logprob: -5.781941890716553
    8. ' vite' → logprob: -5.906941890716553
    9. 'efficient' → logprob: -5.906941890716553
    10. ' efficiently' → logprob: -6.656941890716553

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9007440805435181
    2. '\n' → logprob: -1.275744080543518
    3. '\' → logprob: -2.0257439613342285
    4. '#' → logprob: -3.0257439613342285
    5. '(' → logprob: -3.2757439613342285
    6. '

' → logprob: -3.7757439613342285
    7. ')' → logprob: -4.5257439613342285
    8. ' ' → logprob: -4.9007439613342285
    9. '' → logprob: -4.9007439613342285
    10. '(
' → logprob: -5.0257439613342285

Token 51: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1381288766860962
    2. '(' → logprob: -1.7631288766860962
    3. 'def' → logprob: -2.0131287574768066
    4. 'for' → logprob: -2.6381287574768066
    5. '\' → logprob: -2.8881287574768066
    6. '\n' → logprob: -3.0131287574768066
    7. '' → logprob: -3.3881287574768066
    8. '()' → logprob: -3.5131287574768066
    9. ')' → logprob: -4.138128757476807
    10. '
' → logprob: -4.263128757476807

Token 52: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6440998911857605
    2. ' process' → logprob: -1.6440999507904053
    3. ' read' → logprob: -2.0190999507904053
    4. ' my' → logprob: -2.8940999507904053
    5. ' space' → logprob: -3.7690999507904053
    6. ' calculate' → logprob: -3.8940999507904053
    7. ' main' → logprob: -4.394099712371826
    8. ' parse' → logprob: -5.019099712371826
    9. ' test' → logprob: -5.519099712371826
    10. ' ' → logprob: -5.769099712371826

Token 53: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007800149265676737
    2. '(' → logprob: -4.882800102233887
    3. ' ():' → logprob: -9.257800102233887
    4. '()' → logprob: -9.757800102233887
    5. ':' → logprob: -10.632800102233887
    6. '(:' → logprob: -11.257800102233887
    7. '(":' → logprob: -13.882800102233887
    8. '():
' → logprob: -14.507800102233887
    9. ' (' → logprob: -14.507800102233887
    10. '(
' → logprob: -14.632800102233887

Token 54: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4814889430999756
    2. '(' → logprob: -1.8564889430999756
    3. ' ' → logprob: -2.1064889430999756
    4. ':' → logprob: -3.3564889430999756
    5. '\' → logprob: -3.8564889430999756
    6. '    ' → logprob: -4.106489181518555
    7. '()' → logprob: -4.606489181518555
    8. '    
' → logprob: -4.981489181518555
    9. '\n' → logprob: -6.106489181518555
    10. ' 
' → logprob: -6.356489181518555

Token 55: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024051029235124588
    2. 'n' → logprob: -4.649051189422607
    3. ' ' → logprob: -5.524051189422607
    4. ':' → logprob: -6.024051189422607
    5. 'a' → logprob: -6.774051189422607
    6. 'input' → logprob: -6.774051189422607
    7. '(' → logprob: -7.024051189422607
    8. '    
' → logprob: -7.149051189422607
    9. '  ' → logprob: -7.399051189422607
    10. 'x' → logprob: -8.02405071258545

Token 56: ' Déf' (ID: 180635)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10945671051740646
    2. ' pass' → logprob: -2.734456777572632
    3. '   ' → logprob: -3.859456777572632
    4. ' ' → logprob: -5.234456539154053
    5. ' #' → logprob: -5.734456539154053
    6. '  ' → logprob: -5.859456539154053
    7. '    ' → logprob: -6.234456539154053
    8. '  ' → logprob: -6.859456539154053
    9. 'pass' → logprob: -7.234456539154053
    10. '#' → logprob: -7.359456539154053

Token 57: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.002672564936801791
    2. 'ini' → logprob: -7.1276726722717285
    3. '_init' → logprob: -7.5026726722717285
    4. 'inis' → logprob: -7.7526726722717285
    5. 'in' → logprob: -8.25267219543457
    6. 'inir' → logprob: -8.75267219543457
    7. 'int' → logprob: -9.00267219543457
    8. 'inition' → logprob: -9.25267219543457
    9. 'initi' → logprob: -10.25267219543457
    10. ' init' → logprob: -10.37767219543457

Token 58: ' la' (ID: 557)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.33032456040382385
    2. ' ' → logprob: -1.5803245306015015
    3. '()' → logprob: -3.330324649810791
    4. ' ):' → logprob: -4.830324649810791
    5. ' ():' → logprob: -4.830324649810791
    6. ' ()' → logprob: -5.080324649810791
    7. ' :' → logprob: -5.455324649810791
    8. ' la' → logprob: -6.080324649810791
    9. ' ' → logprob: -6.830324649810791
    10. '(' → logprob: -6.830324649810791

Token 59: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.44005730748176575
    2. ' fonction' → logprob: -1.0650572776794434
    3. ' function' → logprob: -4.940057277679443
    4. 'fon' → logprob: -6.065057277679443
    5. 'function' → logprob: -7.190057277679443
    6. ' ' → logprob: -7.940057277679443
    7. 'suite' → logprob: -8.565057754516602
    8. ' fonctionnal' → logprob: -9.690057754516602
    9. ' main' → logprob: -9.940057754516602
    10. 'entrée' → logprob: -9.940057754516602

Token 60: ' principale' (ID: 68926)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10615310817956924
    2. ' ' → logprob: -2.6061530113220215
    3. ' ' → logprob: -4.9811530113220215
    4. ' principale' → logprob: -4.9811530113220215
    5. ' def' → logprob: -5.3561530113220215
    6. '()' → logprob: -6.3561530113220215
    7. '  ' → logprob: -6.6061530113220215
    8. ' principal' → logprob: -6.8561530113220215
    9. 'def' → logprob: -7.3561530113220215
    10. 'main' → logprob: -7.7311530113220215

Token 61: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5436801314353943
    2. '():' → logprob: -1.293680191040039
    3. ':' → logprob: -2.043680191040039
    4. '()' → logprob: -4.543680191040039
    5. ' :' → logprob: -6.043680191040039
    6. '   ' → logprob: -7.418680191040039
    7. '(
' → logprob: -7.668680191040039
    8. ' ' → logprob: -7.793680191040039
    9. '(:' → logprob: -7.918680191040039
    10. ' ():' → logprob: -8.668680191040039

Token 62: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.21024905145168304
    2. ' programme' → logprob: -1.9602490663528442
    3. 'program' → logprob: -3.3352489471435547
    4. ' script' → logprob: -5.085248947143555
    5. 'script' → logprob: -5.335248947143555
    6. ' program' → logprob: -6.460248947143555
    7. ' code' → logprob: -8.210248947143555
    8. 'code' → logprob: -8.460248947143555
    9. 'programm' → logprob: -10.210248947143555
    10. 'programma' → logprob: -10.335248947143555

Token 63: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.664238452911377
    2. ':' → logprob: -1.039238452911377
    3. '(' → logprob: -2.664238452911377
    4. ' ' → logprob: -3.289238452911377
    5. '()' → logprob: -5.664238452911377
    6. ' :' → logprob: -5.789238452911377
    7. '    ' → logprob: -5.789238452911377
    8. '\' → logprob: -5.914238452911377
    9. '():' → logprob: -6.164238452911377
    10. '    
' → logprob: -6.289238452911377

Token 64: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01278250478208065
    2. ' ' → logprob: -5.512782573699951
    3. '    ' → logprob: -5.887782573699951
    4. '    
' → logprob: -6.262782573699951
    5. ' 
' → logprob: -6.262782573699951
    6. '  ' → logprob: -7.637782573699951
    7. ':' → logprob: -8.262782096862793
    8. '   
' → logprob: -8.262782096862793
    9. ' :' → logprob: -9.012782096862793
    10. '
' → logprob: -9.137782096862793

Token 65: ' contient' (ID: 89067)
  Prédit: ' prend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prend' → logprob: -1.6095938682556152
    2. ':' → logprob: -1.9845938682556152
    3. ' reads' → logprob: -1.9845938682556152
    4. ' lit' → logprob: -2.4845938682556152
    5. ' va' → logprob: -2.7345938682556152
    6. ' prendra' → logprob: -2.8595938682556152
    7. ' sera' → logprob: -3.2345938682556152
    8. '   ' → logprob: -3.6095938682556152
    9. ' est' → logprob: -3.6095938682556152
    10. ' récup' → logprob: -3.9845938682556152

Token 66: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2953549325466156
    2. '()' → logprob: -2.5453548431396484
    3. ' ' → logprob: -2.7953548431396484
    4. '<|end|>' → logprob: -3.4203548431396484
    5. '   ' → logprob: -3.7953548431396484
    6. ' la' → logprob: -3.9203548431396484
    7. '  ' → logprob: -4.920354843139648
    8. '    ' → logprob: -5.045354843139648
    9. '(' → logprob: -5.170354843139648
    10. ' a' → logprob: -5.545354843139648

Token 67: ' logique' (ID: 115350)
  Prédit: ' logique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' logique' → logprob: -0.34959039092063904
    2. 'log' → logprob: -1.4745904207229614
    3. ' log' → logprob: -3.099590301513672
    4. ' suite' → logprob: -4.974590301513672
    5. 'suite' → logprob: -4.974590301513672
    6. ' boucle' → logprob: -5.599590301513672
    7. ' logic' → logprob: -6.224590301513672
    8. 'logic' → logprob: -7.349590301513672
    9. 'bou' → logprob: -8.724590301513672
    10. ' #' → logprob: -9.224590301513672

Token 68: ' principale' (ID: 68926)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3067304193973541
    2. ' de' → logprob: -3.0567305088043213
    3. '   ' → logprob: -3.0567305088043213
    4. '<|end|>' → logprob: -3.3067305088043213
    5. '  ' → logprob: -3.9317305088043213
    6. ' principale' → logprob: -3.9317305088043213
    7. ':' → logprob: -3.9317305088043213
    8. 'def' → logprob: -4.681730270385742
    9. '    ' → logprob: -5.056730270385742
    10. ' des' → logprob: -5.181730270385742

Token 69: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39825761318206787
    2. '():' → logprob: -1.1482576131820679
    3. '(' → logprob: -5.148257732391357
    4. '()' → logprob: -6.148257732391357
    5. ' :' → logprob: -6.773257732391357
    6. '   ' → logprob: -7.023257732391357
    7. '
' → logprob: -7.523257732391357
    8. ' ' → logprob: -8.3982572555542
    9. ':
' → logprob: -8.6482572555542
    10. ' ():' → logprob: -9.1482572555542

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027243944350630045
    2. ' ' → logprob: -6.7527241706848145
    3. '    
' → logprob: -7.6277241706848145
    4. 'n' → logprob: -8.002724647521973
    5. '    ' → logprob: -8.252724647521973
    6. 'a' → logprob: -9.502724647521973
    7. ':' → logprob: -9.752724647521973
    8. '  ' → logprob: -9.877724647521973
    9. 'x' → logprob: -10.502724647521973
    10. ' 
' → logprob: -10.627724647521973

Token 71: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07446739077568054
    2. 'line' → logprob: -3.699467420578003
    3. 'user' → logprob: -4.324467182159424
    4. 'name' → logprob: -4.824467182159424
    5. '   ' → logprob: -5.324467182159424
    6. ' n' → logprob: -5.574467182159424
    7. 'N' → logprob: -5.949467182159424
    8. 'nombre' → logprob: -6.074467182159424
    9. 'data' → logprob: -6.574467182159424
    10. 't' → logprob: -6.699467182159424

Token 72: ' Lis' (ID: 29571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.358873724937439
    2. ' n' → logprob: -1.608873724937439
    3. ' pass' → logprob: -2.3588738441467285
    4. 'pass' → logprob: -2.3588738441467285
    5. 'n' → logprob: -2.4838738441467285
    6. '#' → logprob: -2.7338738441467285
    7. ' #' → logprob: -3.3588738441467285
    8. 'user' → logprob: -3.4838738441467285
    9. ' user' → logprob: -3.6088738441467285
    10. ' line' → logprob: -4.1088738441467285

Token 73: ' la' (ID: 557)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21218661963939667
    2. '   ' → logprob: -1.712186574935913
    3. 't' → logprob: -4.837186813354492
    4. 'te' → logprob: -7.712186813354492
    5. '    ' → logprob: -7.837186813354492
    6. 'ne' → logprob: -7.962186813354492
    7. '  ' → logprob: -8.087186813354492
    8. ' ' → logprob: -8.087186813354492
    9. ' e' → logprob: -8.337186813354492
    10. ' t' → logprob: -8.587186813354492

Token 74: ' première' (ID: 23423)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.5955408215522766
    2. ' première' → logprob: -2.345540761947632
    3. 'ligne' → logprob: -2.345540761947632
    4. 'l' → logprob: -2.845540761947632
    5. ' ' → logprob: -2.970540761947632
    6. 's' → logprob: -2.970540761947632
    7. 'prem' → logprob: -3.470540761947632
    8. 'entrée' → logprob: -4.595541000366211
    9. '   ' → logprob: -4.595541000366211
    10. ' prochaine' → logprob: -4.720541000366211

Token 75: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.20448805391788483
    2. ' ' → logprob: -1.7044880390167236
    3. ' line' → logprob: -6.329488277435303
    4. 'ligne' → logprob: -7.454488277435303
    5. '   ' → logprob: -7.954488277435303
    6. ' input' → logprob: -8.704487800598145
    7. '  ' → logprob: -10.454487800598145
    8. ' phrase' → logprob: -10.579487800598145
    9. 'line' → logprob: -10.829487800598145
    10. 'l' → logprob: -11.079487800598145

Token 76: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020047763362526894
    2. '    
' → logprob: -4.770047664642334
    3. '    ' → logprob: -5.020047664642334
    4. ' ' → logprob: -6.520047664642334
    5. '  ' → logprob: -7.145047664642334
    6. '   
' → logprob: -7.645047664642334
    7. ',' → logprob: -7.895047664642334
    8. 'input' → logprob: -8.270048141479492
    9. '  
' → logprob: -8.770048141479492
    10. '\' → logprob: -9.145048141479492

Token 77: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6165271997451782
    2. 'input' → logprob: -1.7415271997451782
    3. 'l' → logprob: -2.1165270805358887
    4. ' l' → logprob: -2.2415270805358887
    5. ' code' → logprob: -3.9915270805358887
    6. 'entrée' → logprob: -4.491527080535889
    7. ' la' → logprob: -5.116527080535889
    8. 's' → logprob: -5.241527080535889
    9. 'la' → logprob: -5.616527080535889
    10. ' ' → logprob: -5.616527080535889

Token 78: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.045627426356077194
    2. 'entrée' → logprob: -3.7956273555755615
    3. ''' → logprob: -4.545627593994141
    4. 'input' → logprob: -5.420627593994141
    5. 'e' → logprob: -5.670627593994141
    6. 'a' → logprob: -6.295627593994141
    7. 'es' → logprob: -7.045627593994141
    8. '’entrée' → logprob: -8.29562759399414
    9. ''ent' → logprob: -8.67062759399414
    10. ' input' → logprob: -8.92062759399414

Token 79: ' contenant' (ID: 131049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4026857614517212
    2. '    
' → logprob: -1.9026857614517212
    3. ' ' → logprob: -2.7776856422424316
    4. '    ' → logprob: -2.9026856422424316
    5. '   
' → logprob: -3.7776856422424316
    6. '  
' → logprob: -4.652685642242432
    7. '     
' → logprob: -5.027685642242432
    8. '  ' → logprob: -5.277685642242432
    9. '\' → logprob: -5.277685642242432
    10. ' 
' → logprob: -5.402685642242432

Token 80: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0073680877685546875
    2. ' l' → logprob: -5.882368087768555
    3. '    ' → logprob: -6.132368087768555
    4. ' la' → logprob: -7.132368087768555
    5. ' le' → logprob: -8.007368087768555
    6. '   ' → logprob: -8.132368087768555
    7. 'l' → logprob: -8.632368087768555
    8. ' un' → logprob: -8.757368087768555
    9. ' "' → logprob: -8.882368087768555
    10. '  ' → logprob: -9.007368087768555

Token 81: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0006619225605390966
    2. ' ent' → logprob: -8.750661849975586
    3. '  ' → logprob: -9.250661849975586
    4. ' espaces' → logprob: -9.250661849975586
    5. ' 
' → logprob: -10.125661849975586
    6. '  
' → logprob: -10.250661849975586
    7. ' caractères' → logprob: -10.250661849975586
    8. ' nombres' → logprob: -10.500661849975586
    9. '   ' → logprob: -11.000661849975586
    10. 'ent' → logprob: -11.375661849975586

Token 82: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.002981029450893402
    2. 'r' → logprob: -6.752981185913086
    3. 'i' → logprob: -7.502981185913086
    4. 'ières' → logprob: -7.502981185913086
    5. 't' → logprob: -7.627981185913086
    6. 'ier' → logprob: -10.002981185913086
    7. 'ires' → logprob: -10.252981185913086
    8. 'res' → logprob: -10.502981185913086
    9. 'ers' → logprob: -10.627981185913086
    10. '   ' → logprob: -10.877981185913086

Token 83: ' sépar' (ID: 97160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13589267432689667
    2. '   
' → logprob: -3.885892629623413
    3. 'n' → logprob: -4.385892868041992
    4. '(' → logprob: -4.510892868041992
    5. 'a' → logprob: -4.760892868041992
    6. ',' → logprob: -5.010892868041992
    7. '    ' → logprob: -5.010892868041992
    8. '   ' → logprob: -5.010892868041992
    9. ' )' → logprob: -5.010892868041992
    10. 's' → logprob: -5.135892868041992

Token 84: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.5772252082824707
    2. 'é' → logprob: -0.8272252082824707
    3. ' par' → logprob: -7.952225208282471
    4. 'e' → logprob: -7.952225208282471
    5. 'ée' → logprob: -8.452224731445312
    6. 'es' → logprob: -8.952224731445312
    7. '```' → logprob: -9.827224731445312
    8. 'par' → logprob: -10.077224731445312
    9. 'ées' → logprob: -10.452224731445312
    10. ''' → logprob: -10.827224731445312

Token 85: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6496065855026245
    2. ' par' → logprob: -0.8996065855026245
    3. 'par' → logprob: -2.899606704711914
    4. '  ' → logprob: -5.649606704711914
    5. 's' → logprob: -6.149606704711914
    6. '=' → logprob: -6.649606704711914
    7. ' by' → logprob: -6.774606704711914
    8. ''' → logprob: -6.899606704711914
    9. 'es' → logprob: -7.024606704711914
    10. ' )' → logprob: -7.024606704711914

Token 86: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6140336394309998
    2. 'un' → logprob: -1.4890336990356445
    3. ' ' → logprob: -1.6140336990356445
    4. ''un' → logprob: -4.2390336990356445
    5. ' espace' → logprob: -5.6140336990356445
    6. ''' → logprob: -5.6140336990356445
    7. '  ' → logprob: -6.2390336990356445
    8. 'space' → logprob: -6.4890336990356445
    9. ' l' → logprob: -6.4890336990356445
    10. ''espace' → logprob: -6.4890336990356445

Token 87: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.2112017273902893
    2. ''espace' → logprob: -2.4612016677856445
    3. ' ' → logprob: -3.2112016677856445
    4. 'es' → logprob: -3.7112016677856445
    5. ' espaces' → logprob: -4.2112016677856445
    6. ' space' → logprob: -4.4612016677856445
    7. ''esp' → logprob: -5.9612016677856445
    8. '’espace' → logprob: -6.2112016677856445
    9. ''' → logprob: -6.3362016677856445
    10. 'space' → logprob: -6.3362016677856445

Token 88: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2513418197631836
    2. 'n' → logprob: -1.3763418197631836
    3. '    
' → logprob: -2.1263418197631836
    4. ' ' → logprob: -2.3763418197631836
    5. '   
' → logprob: -2.5013418197631836
    6. ' 
' → logprob: -3.2513418197631836
    7. 'a' → logprob: -3.7513418197631836
    8. '  
' → logprob: -4.001341819763184
    9. 's' → logprob: -4.376341819763184
    10. '    ' → logprob: -4.376341819763184

Token 89: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4334259033203125
    2. 'n' → logprob: -1.5584259033203125
    3. 'a' → logprob: -3.6834259033203125
    4. 'l' → logprob: -3.8084259033203125
    5. 'u' → logprob: -4.1834259033203125
    6. 'x' → logprob: -4.1834259033203125
    7. 's' → logprob: -4.4334259033203125
    8. 'i' → logprob: -4.5584259033203125
    9. 't' → logprob: -4.8084259033203125
    10. 'd' → logprob: -5.4334259033203125

Token 90: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6810858249664307
    2. ',' → logprob: -1.3060858249664307
    3. ' ,' → logprob: -2.3060858249664307
    4. ' =' → logprob: -3.4310858249664307
    5. '   ' → logprob: -3.6810858249664307
    6. '    ' → logprob: -4.306085586547852
    7. '<|end|>' → logprob: -4.431085586547852
    8. ')' → logprob: -4.681085586547852
    9. ' )' → logprob: -4.806085586547852
    10. '  ' → logprob: -5.181085586547852

Token 91: ' Q' (ID: 1486)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.11458807438611984
    2. ' ' → logprob: -2.3645880222320557
    3. ' L' → logprob: -5.364588260650635
    4. '  ' → logprob: -5.489588260650635
    5. 'N' → logprob: -6.364588260650635
    6. ' M' → logprob: -6.489588260650635
    7. ' A' → logprob: -7.489588260650635
    8. ' n' → logprob: -7.989588260650635
    9. ' B' → logprob: -8.239587783813477
    10. ' T' → logprob: -8.364587783813477

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06183714419603348
    2. '    
' → logprob: -3.3118371963500977
    3. ' ' → logprob: -4.811837196350098
    4. '   
' → logprob: -5.436837196350098
    5. '    ' → logprob: -5.936837196350098
    6. '  ' → logprob: -6.561837196350098
    7. ' 
' → logprob: -6.561837196350098
    8. '  
' → logprob: -6.686837196350098
    9. '
' → logprob: -6.811837196350098
    10. 'n' → logprob: -7.186837196350098

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2202518880367279
    2. ' ' → logprob: -1.8452519178390503
    3. '    
' → logprob: -4.59525203704834
    4. '  ' → logprob: -4.84525203704834
    5. ' 
' → logprob: -5.47025203704834
    6. '   
' → logprob: -5.59525203704834
    7. '    ' → logprob: -5.72025203704834
    8. ')' → logprob: -5.97025203704834
    9. '  
' → logprob: -5.97025203704834
    10. '<|end|>' → logprob: -6.59525203704834

Token 94: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1814942359924316
    2. 'K' → logprob: -1.8064942359924316
    3. '    
' → logprob: -1.8064942359924316
    4. '   ' → logprob: -2.3064942359924316
    5. 'k' → logprob: -2.6814942359924316
    6. ' ' → logprob: -2.9314942359924316
    7. '   
' → logprob: -2.9314942359924316
    8. '  
' → logprob: -3.8064942359924316
    9. ' K' → logprob: -4.056494235992432
    10. '\' → logprob: -4.681494235992432

Token 95: ' map' (ID: 4014)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3192088603973389
    2. ' ' → logprob: -1.4442088603973389
    3. ' line' → logprob: -1.4442088603973389
    4. 'k' → logprob: -2.569208860397339
    5. ' K' → logprob: -2.819208860397339
    6. '    ' → logprob: -3.319208860397339
    7. 'K' → logprob: -3.944208860397339
    8. '    
' → logprob: -3.944208860397339
    9. 'line' → logprob: -4.444209098815918
    10. ' k' → logprob: -4.694209098815918

Token 96: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023802295327186584
    2. '(int' → logprob: -3.8988022804260254
    3. ' =' → logprob: -6.648802280426025
    4. '(
' → logprob: -7.023802280426025
    5. '=' → logprob: -7.773802280426025
    6. '=int' → logprob: -8.648802757263184
    7. '(input' → logprob: -8.898802757263184
    8. ' (' → logprob: -9.398802757263184
    9. ')' → logprob: -9.773802757263184
    10. 'int' → logprob: -10.273802757263184

Token 97: ' la' (ID: 557)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.46679505705833435
    2. '(' → logprob: -1.3417950868606567
    3. '(lambda' → logprob: -2.216794967651367
    4. '(str' → logprob: -6.841794967651367
    5. '(input' → logprob: -7.591794967651367
    6. 'int' → logprob: -7.841794967651367
    7. '(
' → logprob: -8.466794967651367
    8. ' int' → logprob: -9.091794967651367
    9. 'lambda' → logprob: -9.091794967651367
    10. '   ' → logprob: -9.466794967651367

Token 98: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0356411412358284
    2. ' int' → logprob: -3.4106411933898926
    3. 'str' → logprob: -7.285641193389893
    4. 'input' → logprob: -7.410641193389893
    5. ' input' → logprob: -8.285640716552734
    6. 'lambda' → logprob: -8.535640716552734
    7. '(int' → logprob: -9.910640716552734
    8. ' str' → logprob: -9.910640716552734
    9. ' lambda' → logprob: -10.410640716552734
    10. ' function' → logprob: -10.660640716552734

Token 99: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04621809348464012
    2. '(' → logprob: -3.796218156814575
    3. 'int' → logprob: -3.921218156814575
    4. '(str' → logprob: -6.296217918395996
    5. ' int' → logprob: -7.421217918395996
    6. '(lambda' → logprob: -8.171217918395996
    7. 'str' → logprob: -9.796217918395996
    8. '(
' → logprob: -10.421217918395996
    9. '```' → logprob: -11.046217918395996
    10. '[int' → logprob: -11.171217918395996

Token 100: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04831128194928169
    2. '(lambda' → logprob: -3.548311233520508
    3. '(input' → logprob: -4.548311233520508
    4. '(int' → logprob: -5.423311233520508
    5. '(
' → logprob: -6.298311233520508
    6. ',' → logprob: -7.673311233520508
    7. '   ' → logprob: -8.298311233520508
    8. ' (' → logprob: -8.673311233520508
    9. '    ' → logprob: -9.548311233520508
    10. '(str' → logprob: -9.673311233520508

Token 101: 'trans' (ID: 2623)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5588892102241516
    2. ' )' → logprob: -1.5588891506195068
    3. 'str' → logprob: -2.683889150619507
    4. ' str' → logprob: -2.808889150619507
    5. 'int' → logprob: -3.808889150619507
    6. 'input' → logprob: -4.308889389038086
    7. ' ' → logprob: -4.558889389038086
    8. ' int' → logprob: -4.808889389038086
    9. ' input' → logprob: -4.808889389038086
    10. ',' → logprob: -4.933889389038086

Token 102: 'formation' (ID: 4690)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.06015464663505554
    2. 'forme' → logprob: -3.185154676437378
    3. 'formation' → logprob: -5.435154438018799
    4. 'fo' → logprob: -5.560154438018799
    5. 'for' → logprob: -6.310154438018799
    6. 'former' → logprob: -6.310154438018799
    7. ')' → logprob: -7.310154438018799
    8. 'late' → logprob: -7.435154438018799
    9. 'forma' → logprob: -7.810154438018799
    10. '   ' → logprob: -7.810154438018799

Token 103: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1873704493045807
    2. ' )' → logprob: -2.562370538711548
    3. '(' → logprob: -3.437370538711548
    4. ',' → logprob: -3.562370538711548
    5. '(str' → logprob: -4.937370300292969
    6. ' ' → logprob: -4.937370300292969
    7. '   ' → logprob: -5.062370300292969
    8. '(int' → logprob: -5.062370300292969
    9. ' à' → logprob: -6.562370300292969
    10. '    ' → logprob: -7.187370300292969

Token 104: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5638361573219299
    2. 'ent' → logprob: -1.5638360977172852
    3. 'int' → logprob: -2.938836097717285
    4. ' entier' → logprob: -3.063836097717285
    5. ' ent' → logprob: -3.813836097717285
    6. ')' → logprob: -3.813836097717285
    7. 'str' → logprob: -3.938836097717285
    8. ' nombre' → logprob: -4.688836097717285
    9. ' str' → logprob: -4.813836097717285
    10. ' ' → logprob: -4.813836097717285

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14681729674339294
    2. ',' → logprob: -2.271817207336426
    3. ' )' → logprob: -3.771817207336426
    4. ' ' → logprob: -5.771817207336426
    5. '   ' → logprob: -5.896817207336426
    6. '(' → logprob: -6.271817207336426
    7. ' ,' → logprob: -6.896817207336426
    8. ' à' → logprob: -8.396817207336426
    9. '    ' → logprob: -8.521817207336426
    10. '(input' → logprob: -8.521817207336426

Token 106: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04406868666410446
    2. ' ' → logprob: -3.4190685749053955
    3. ' (' → logprob: -5.169068813323975
    4. '(
' → logprob: -6.169068813323975
    5. ',' → logprob: -7.544068813323975
    6. '   ' → logprob: -7.919068813323975
    7. ')' → logprob: -8.169068336486816
    8. '    ' → logprob: -8.419068336486816
    9. '  ' → logprob: -8.544068336486816
    10. '(input' → logprob: -8.919068336486816

Token 107: ' chaque' (ID: 21194)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.49188774824142456
    2. 'input' → logprob: -0.9918877482414246
    3. ' la' → logprob: -4.74188756942749
    4. ' l' → logprob: -5.86688756942749
    5. ' sys' → logprob: -5.99188756942749
    6. 'l' → logprob: -6.36688756942749
    7. 'sys' → logprob: -7.24188756942749
    8. 'la' → logprob: -7.74188756942749
    9. ' ' → logprob: -8.491888046264648
    10. 'line' → logprob: -8.616888046264648

Token 108: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.8762057423591614
    2. 'input' → logprob: -2.0012056827545166
    3. ' mot' → logprob: -2.5012056827545166
    4. 'mot' → logprob: -2.7512056827545166
    5. 'element' → logprob: -3.0012056827545166
    6. 'token' → logprob: -3.6262056827545166
    7. 'entrée' → logprob: -3.6262056827545166
    8. ' input' → logprob: -3.7512056827545166
    9. 'car' → logprob: -3.8762056827545166
    10. ' element' → logprob: -4.001205921173096

Token 109: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011378485709428787
    2. ' (' → logprob: -5.636378288269043
    3. ',' → logprob: -6.261378288269043
    4. '(input' → logprob: -6.261378288269043
    5. '(
' → logprob: -6.386378288269043
    6. '('' → logprob: -7.886378288269043
    7. '   ' → logprob: -8.011378288269043
    8. 'input' → logprob: -8.386378288269043
    9. ' ' → logprob: -8.636378288269043
    10. ')' → logprob: -8.886378288269043

Token 110: ' résultat' (ID: 62556)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6358920335769653
    2. ' input' → logprob: -0.7608920335769653
    3. ' sys' → logprob: -6.510891914367676
    4. 'sys' → logprob: -6.635891914367676
    5. ' ' → logprob: -9.510891914367676
    6. '(input' → logprob: -9.510891914367676
    7. ' next' → logprob: -9.760891914367676
    8. 'split' → logprob: -9.885891914367676
    9. 'line' → logprob: -10.010891914367676
    10. 'next' → logprob: -10.510891914367676

Token 111: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.318754106760025
    2. ' input' → logprob: -2.568754196166992
    3. 'input' → logprob: -3.318754196166992
    4. '=input' → logprob: -3.568754196166992
    5. '(input' → logprob: -3.693754196166992
    6. '=' → logprob: -3.693754196166992
    7. '   ' → logprob: -3.818754196166992
    8. ' =' → logprob: -4.193754196166992
    9. ' of' → logprob: -4.443754196166992
    10. ' ' → logprob: -5.443754196166992

Token 112: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5770530104637146
    2. ' input' → logprob: -0.8270530104637146
    3. 'l' → logprob: -7.827053070068359
    4. ' l' → logprob: -7.827053070068359
    5. '(input' → logprob: -8.45205307006836
    6. ' ' → logprob: -10.82705307006836
    7. '=input' → logprob: -11.07705307006836
    8. ' la' → logprob: -11.20205307006836
    9. '```' → logprob: -11.20205307006836
    10. 'split' → logprob: -12.32705307006836

Token 113: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003939955960959196
    2. '('' → logprob: -6.753940105438232
    3. ' (' → logprob: -6.753940105438232
    4. '(
' → logprob: -7.378940105438232
    5. '   ' → logprob: -7.878940105438232
    6. ',' → logprob: -8.753939628601074
    7. ' ' → logprob: -9.253939628601074
    8. ')' → logprob: -9.378939628601074
    9. '    ' → logprob: -9.378939628601074
    10. '("' → logprob: -10.753939628601074

Token 114: 'split' (ID: 13627)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1991058588027954
    2. 'K' → logprob: -1.8241058588027954
    3. ' K' → logprob: -1.9491058588027954
    4. '    
' → logprob: -2.324105739593506
    5. 'k' → logprob: -2.949105739593506
    6. '  
' → logprob: -2.949105739593506
    7. '(' → logprob: -3.074105739593506
    8. ' 
' → logprob: -3.199105739593506
    9. ' ' → logprob: -3.699105739593506
    10. '(K' → logprob: -4.324105739593506

Token 115: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.511353075504303
    2. '(' → logprob: -1.3863530158996582
    3. ')' → logprob: -2.136353015899658
    4. '   ' → logprob: -3.886353015899658
    5. '(
' → logprob: -5.386353015899658
    6. ' )' → logprob: -6.386353015899658
    7. ',' → logprob: -7.261353015899658
    8. '    
' → logprob: -7.261353015899658
    9. '()
' → logprob: -7.386353015899658
    10. '    ' → logprob: -7.636353015899658

Token 116: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2979600429534912
    2. '    
' → logprob: -1.6729600429534912
    3. ')' → logprob: -2.297960042953491
    4. ' 
' → logprob: -2.422960042953491
    5. 'K' → logprob: -2.672960042953491
    6. ' ' → logprob: -2.922960042953491
    7. '  
' → logprob: -3.047960042953491
    8. '(' → logprob: -3.047960042953491
    9. '   
' → logprob: -3.672960042953491
    10. '(K' → logprob: -3.672960042953491

Token 117: 'sé' (ID: 73483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5639791488647461
    2. 'input' → logprob: -1.188979148864746
    3. ' )' → logprob: -2.563979148864746
    4. ' input' → logprob: -3.938979148864746
    5. '   ' → logprob: -4.938979148864746
    6. ' la' → logprob: -5.313979148864746
    7. ' ' → logprob: -6.188979148864746
    8. 'l' → logprob: -6.313979148864746
    9. 'la' → logprob: -6.313979148864746
    10. 'line' → logprob: -6.438979148864746

Token 118: 'pare' (ID: 6900)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0740731805562973
    2. 'p' → logprob: -2.824073076248169
    3. 'paration' → logprob: -5.074073314666748
    4. 'pa' → logprob: -6.074073314666748
    5. 'parated' → logprob: -7.074073314666748
    6. 'parer' → logprob: -7.199073314666748
    7. 'pare' → logprob: -7.199073314666748
    8. 'para' → logprob: -8.32407283782959
    9. ' par' → logprob: -8.69907283782959
    10. '   ' → logprob: -9.19907283782959

Token 119: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01964818872511387
    2. ' la' → logprob: -5.39464807510376
    3. ' ' → logprob: -5.76964807510376
    4. ')' → logprob: -6.14464807510376
    5. '   ' → logprob: -6.39464807510376
    6. ' par' → logprob: -6.64464807510376
    7. ' )' → logprob: -6.89464807510376
    8. '(' → logprob: -7.26964807510376
    9. 'e' → logprob: -7.39464807510376
    10. ' les' → logprob: -7.39464807510376

Token 120: ' ligne' (ID: 19583)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.9609798789024353
    2. ' chaîne' → logprob: -1.08597993850708
    3. 'entrée' → logprob: -2.71097993850708
    4. 'input' → logprob: -2.96097993850708
    5. 'ligne' → logprob: -3.33597993850708
    6. 'cha' → logprob: -3.33597993850708
    7. ' ligne' → logprob: -3.96097993850708
    8. ' chaine' → logprob: -4.08597993850708
    9. ' ' → logprob: -4.33597993850708
    10. ' input' → logprob: -4.46097993850708

Token 121: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.23744535446167
    2. ' par' → logprob: -1.23744535446167
    3. ' )' → logprob: -1.36244535446167
    4. '()' → logprob: -1.98744535446167
    5. '())' → logprob: -4.48744535446167
    6. 'par' → logprob: -4.86244535446167
    7. ' ' → logprob: -6.11244535446167
    8. '('' → logprob: -6.86244535446167
    9. ' ()' → logprob: -7.61244535446167
    10. ' en' → logprob: -7.73744535446167

Token 122: ' morceaux' (ID: 133321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.9209415912628174
    2. ' chaînes' → logprob: -2.1709415912628174
    3. 'chaine' → logprob: -2.4209415912628174
    4. '"' → logprob: -2.4209415912628174
    5. ' espaces' → logprob: -2.4209415912628174
    6. ')' → logprob: -2.5459415912628174
    7. ' '' → logprob: -3.0459415912628174
    8. ' )' → logprob: -3.1709415912628174
    9. ' chaîne' → logprob: -3.2959415912628174
    10. 'tokens' → logprob: -3.5459415912628174

Token 123: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05049804598093033
    2. ' )' → logprob: -3.3004980087280273
    3. '()' → logprob: -4.675498008728027
    4. '())' → logprob: -6.550498008728027
    5. ' par' → logprob: -7.550498008728027
    6. '   ' → logprob: -7.925498008728027
    7. ',' → logprob: -8.175498008728027
    8. 'par' → logprob: -9.425498008728027
    9. ' ' → logprob: -10.550498008728027
    10. '('' → logprob: -10.800498008728027

Token 124: ' chaque' (ID: 21194)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9980793595314026
    2. ''' → logprob: -1.7480792999267578
    3. ' '' → logprob: -1.9980792999267578
    4. ' les' → logprob: -1.9980792999267578
    5. 'l' → logprob: -3.373079299926758
    6. ' )' → logprob: -3.373079299926758
    7. ' ' → logprob: -3.998079299926758
    8. ' la' → logprob: -3.998079299926758
    9. 'les' → logprob: -4.123079299926758
    10. ')' → logprob: -4.123079299926758

Token 125: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.14472460746765137
    2. ' ' → logprob: -2.7697246074676514
    3. ''espace' → logprob: -3.1447246074676514
    4. 'es' → logprob: -4.2697248458862305
    5. ' espaces' → logprob: -5.1447248458862305
    6. '  ' → logprob: -6.1447248458862305
    7. '  
' → logprob: -6.8947248458862305
    8. '’espace' → logprob: -7.0197248458862305
    9. ' )' → logprob: -7.0197248458862305
    10. 'esp' → logprob: -7.2697248458862305

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014373736921697855
    2. '   ' → logprob: -7.376437187194824
    3. ' )' → logprob: -7.376437187194824
    4. ')
' → logprob: -9.251437187194824
    5. ' ' → logprob: -11.001437187194824
    6. ',' → logprob: -11.751437187194824
    7. '))' → logprob: -11.751437187194824
    8. ').' → logprob: -11.876437187194824
    9. ')`' → logprob: -12.251437187194824
    10. '),' → logprob: -12.376437187194824

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5322213768959045
    2. '    
' → logprob: -1.2822213172912598
    3. 'K' → logprob: -2.9072213172912598
    4. ' 
' → logprob: -3.4072213172912598
    5. '  
' → logprob: -3.9072213172912598
    6. '   
' → logprob: -4.78222131729126
    7. 'k' → logprob: -5.53222131729126
    8. '
' → logprob: -5.53222131729126
    9. ' K' → logprob: -5.90722131729126
    10. ')' → logprob: -6.15722131729126

Token 128: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -0.05292591452598572
    2. '   ' → logprob: -3.8029258251190186
    3. '    
' → logprob: -4.677926063537598
    4. 'k' → logprob: -4.802926063537598
    5. ' K' → logprob: -4.802926063537598
    6. ' 
' → logprob: -6.802926063537598
    7. '    ' → logprob: -7.052926063537598
    8. '   
' → logprob: -7.302926063537598
    9. '  
' → logprob: -8.677926063537598
    10. '     
' → logprob: -8.802926063537598

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013393278641160578
    2. ',Q' → logprob: -9.375133514404297
    3. ' ,' → logprob: -10.000133514404297
    4. ',K' → logprob: -13.000133514404297
    5. ',
' → logprob: -14.500133514404297
    6. 'Q' → logprob: -16.125133514404297
    7. ',int' → logprob: -16.250133514404297
    8. ',S' → logprob: -16.250133514404297
    9. ',q' → logprob: -16.375133514404297
    10. ',J' → logprob: -16.625133514404297

Token 130: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.010100631043314934
    2. 'Q' → logprob: -4.635100841522217
    3. ' ' → logprob: -8.010100364685059
    4. ' ' → logprob: -11.635100364685059
    5. '  ' → logprob: -13.635100364685059
    6. '	Q' → logprob: -13.885100364685059
    7. '=' → logprob: -15.260100364685059
    8. ' ' → logprob: -15.385100364685059
    9. ' 
' → logprob: -15.635100364685059
    10. ',Q' → logprob: -16.010101318359375

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043055593967437744
    2. '=' → logprob: -3.168055534362793
    3. ' ' → logprob: -9.918055534362793
    4. ',' → logprob: -13.418055534362793
    5. '  ' → logprob: -13.668055534362793
    6. ')' → logprob: -13.668055534362793
    7. '   ' → logprob: -13.793055534362793
    8. ' =
' → logprob: -14.418055534362793
    9. '=int' → logprob: -14.543055534362793
    10. '=input' → logprob: -15.043055534362793

Token 132: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.001992278266698122
    2. 'map' → logprob: -6.251992225646973
    3. ' ' → logprob: -10.501992225646973
    4. ' list' → logprob: -10.626992225646973
    5. '	map' → logprob: -12.626992225646973
    6. ' ' → logprob: -12.876992225646973
    7. ' m' → logprob: -13.251992225646973
    8. ' ma' → logprob: -13.501992225646973
    9. 'm' → logprob: -13.751992225646973
    10. '(map' → logprob: -14.876992225646973

Token 133: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04305057227611542
    2. '(' → logprob: -3.168050527572632
    3. '(
' → logprob: -11.168050765991211
    4. '<int' → logprob: -11.793050765991211
    5. '(input' → logprob: -11.918050765991211
    6. ' (' → logprob: -12.043050765991211
    7. '(lambda' → logprob: -12.043050765991211
    8. '(str' → logprob: -12.418050765991211
    9. 'int' → logprob: -12.918050765991211
    10. '[int' → logprob: -13.293050765991211

Token 134: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06430859863758087
    2. ',' → logprob: -3.5643086433410645
    3. ',input' → logprob: -4.1893086433410645
    4. '(' → logprob: -4.4393086433410645
    5. ')' → logprob: -5.4393086433410645
    6. 'input' → logprob: -6.6893086433410645
    7. ' (' → logprob: -7.1893086433410645
    8. ')(' → logprob: -7.5643086433410645
    9. ' input' → logprob: -10.314308166503906
    10. '(
' → logprob: -10.314308166503906

Token 135: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25194641947746277
    2. 'input' → logprob: -1.5019464492797852
    3. '(input' → logprob: -12.001946449279785
    4. ' ' → logprob: -12.376946449279785
    5. ')' → logprob: -12.626946449279785
    6. '	input' → logprob: -13.751946449279785
    7. '_input' → logprob: -14.251946449279785
    8. '=input' → logprob: -14.626946449279785
    9. ',input' → logprob: -14.751946449279785
    10. '<input' → logprob: -15.376946449279785

Token 136: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.625866030342877e-05
    2. '()' → logprob: -9.375085830688477
    3. ' ().' → logprob: -14.250085830688477
    4. ')' → logprob: -15.250085830688477
    5. '(' → logprob: -15.375085830688477
    6. '())' → logprob: -15.625085830688477
    7. '()
' → logprob: -17.000085830688477
    8. ' ' → logprob: -17.500085830688477
    9. '().
' → logprob: -18.875085830688477
    10. '()[' → logprob: -18.875085830688477

Token 137: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00674793915823102
    2. 'strip' → logprob: -5.006747722625732
    3. 'rstrip' → logprob: -11.00674819946289
    4. ' split' → logprob: -11.63174819946289
    5. ')' → logprob: -12.13174819946289
    6. '(split' → logprob: -14.13174819946289
    7. 'read' → logprob: -14.63174819946289
    8. 'decode' → logprob: -15.63174819946289
    9. ' strip' → logprob: -15.88174819946289
    10. '```' → logprob: -16.75674819946289

Token 138: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.029703514650464058
    2. ')' → logprob: -4.154703617095947
    3. '()' → logprob: -4.654703617095947
    4. '()))' → logprob: -5.904703617095947
    5. '))' → logprob: -6.654703617095947
    6. '())
' → logprob: -10.404703140258789
    7. ' ())' → logprob: -12.154703140258789
    8. '(' → logprob: -12.654703140258789
    9. '()))
' → logprob: -13.529703140258789
    10. '());' → logprob: -14.029703140258789

Token 139: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03834027424454689
    2. '<|end|>' → logprob: -3.7883403301239014
    3. '\n' → logprob: -4.913340091705322
    4. ')' → logprob: -6.163340091705322
    5. '  
' → logprob: -6.413340091705322
    6. ' 
' → logprob: -7.163340091705322
    7. ' ' → logprob: -7.538340091705322
    8. '    
' → logprob: -7.788340091705322
    9. '

' → logprob: -7.788340091705322
    10. ':' → logprob: -8.03834056854248

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.036852478981018
    2. '<|end|>' → logprob: -1.036852478981018
    3. '
' → logprob: -1.536852478981018
    4. '    
' → logprob: -3.5368523597717285
    5. '<|end|>' → logprob: -4.4118523597717285
    6. ' ' → logprob: -5.2868523597717285
    7. ' 
' → logprob: -5.2868523597717285
    8. 'def' → logprob: -5.5368523597717285
    9. '  
' → logprob: -5.5368523597717285
    10. '#' → logprob: -6.0368523597717285

Token 141: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.3663055896759033
    2. 'result' → logprob: -1.4913055896759033
    3. 'for' → logprob: -2.1163055896759033
    4. 'cards' → logprob: -2.2413055896759033
    5. 'answers' → logprob: -2.7413055896759033
    6. 'answer' → logprob: -3.3663055896759033
    7. 'queries' → logprob: -3.7413055896759033
    8. 'res' → logprob: -3.9913055896759033
    9. 'points' → logprob: -4.116305351257324
    10. 'score' → logprob: -4.366305351257324

Token 142: ' Lis' (ID: 29571)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1745473146438599
    2. 'result' → logprob: -1.7995473146438599
    3. ' results' → logprob: -2.0495471954345703
    4. 'results' → logprob: -2.1745471954345703
    5. 'for' → logprob: -2.4245471954345703
    6. ' for' → logprob: -2.6745471954345703
    7. ' queries' → logprob: -3.2995471954345703
    8. '#' → logprob: -3.5495471954345703
    9. 'queries' → logprob: -4.92454719543457
    10. ' #' → logprob: -5.17454719543457

Token 143: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3927439749240875
    2. ' ' → logprob: -1.7677439451217651
    3. ' les' → logprob: -2.3927440643310547
    4. '()' → logprob: -3.1427440643310547
    5. ' l' → logprob: -5.017744064331055
    6. ' le' → logprob: -5.767744064331055
    7. ' Q' → logprob: -5.892744064331055
    8. ' une' → logprob: -6.767744064331055
    9. ' ' → logprob: -6.892744064331055
    10. ' K' → logprob: -7.017744064331055

Token 144: ' deuxième' (ID: 51664)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.7181658744812012
    2. 'liste' → logprob: -2.093165874481201
    3. ' ligne' → logprob: -2.468165874481201
    4. ' deuxième' → logprob: -2.468165874481201
    5. ' seconde' → logprob: -2.718165874481201
    6. 'ligne' → logprob: -2.968165874481201
    7. 'de' → logprob: -3.093165874481201
    8. ' suivante' → logprob: -4.218165874481201
    9. ' ' → logprob: -4.468165874481201
    10. ' prochaine' → logprob: -4.468165874481201

Token 145: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.16566422581672668
    2. 'ligne' → logprob: -1.9156641960144043
    3. 'line' → logprob: -6.040664196014404
    4. ' line' → logprob: -6.290664196014404
    5. ' ' → logprob: -7.165664196014404
    6. 'l' → logprob: -8.290664672851562
    7. ' ' → logprob: -9.540664672851562
    8. '   ' → logprob: -11.290664672851562
    9. '_line' → logprob: -11.790664672851562
    10. '#' → logprob: -11.790664672851562

Token 146: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01934703066945076
    2. ',' → logprob: -4.644347190856934
    3. ' =' → logprob: -5.644347190856934
    4. ' de' → logprob: -6.269347190856934
    5. ':' → logprob: -6.894347190856934
    6. ' ' → logprob: -7.019347190856934
    7. '  ' → logprob: -7.644347190856934
    8. '    ' → logprob: -8.144347190856934
    9. ' des' → logprob: -8.144347190856934
    10. ' K' → logprob: -8.769347190856934

Token 147: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.8172979950904846
    2. ' contenant' → logprob: -0.8172979950904846
    3. 'qui' → logprob: -3.44229793548584
    4. ' ' → logprob: -4.19229793548584
    5. 'cont' → logprob: -4.19229793548584
    6. ' la' → logprob: -4.69229793548584
    7. ' containing' → logprob: -4.94229793548584
    8. ' une' → logprob: -5.31729793548584
    9. ' laquelle' → logprob: -5.81729793548584
    10. ' les' → logprob: -5.94229793548584

Token 148: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.014071828685700893
    2. 'cont' → logprob: -4.514071941375732
    3. ' cont' → logprob: -6.889071941375732
    4. ' est' → logprob: -7.514071941375732
    5. ' donne' → logprob: -9.014071464538574
    6. 'est' → logprob: -9.014071464538574
    7. ' ' → logprob: -9.014071464538574
    8. '#' → logprob: -9.264071464538574
    9. ' contains' → logprob: -9.389071464538574
    10. 's' → logprob: -9.389071464538574

Token 149: ' K' (ID: 658)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8827477693557739
    2. ' Q' → logprob: -1.382747769355774
    3. ' les' → logprob: -1.882747769355774
    4. ' une' → logprob: -2.5077476501464844
    5. ' ' → logprob: -3.5077476501464844
    6. ' K' → logprob: -3.5077476501464844
    7. 'Q' → logprob: -3.8827476501464844
    8. ' le' → logprob: -5.007747650146484
    9. ' un' → logprob: -5.007747650146484
    10. 'les' → logprob: -6.382747650146484

Token 150: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.7745535969734192
    2. ' integers' → logprob: -1.0245535373687744
    3. 'ent' → logprob: -2.2745535373687744
    4. ' nombres' → logprob: -4.0245537757873535
    5. ' valeurs' → logprob: -4.2745537757873535
    6. 'inte' → logprob: -4.3995537757873535
    7. ' espaces' → logprob: -5.1495537757873535
    8. ' éléments' → logprob: -6.0245537757873535
    9. 'val' → logprob: -6.0870537757873535
    10. ' entier' → logprob: -6.3995537757873535

Token 151: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.004159483592957258
    2. 't' → logprob: -6.004159450531006
    3. 'ières' → logprob: -7.504159450531006
    4. 'er' → logprob: -8.129159927368164
    5. 'ieres' → logprob: -8.379159927368164
    6. 'ers' → logprob: -9.254159927368164
    7. 'eurs' → logprob: -9.754159927368164
    8. 'gers' → logprob: -9.879159927368164
    9. 'ti' → logprob: -10.129159927368164
    10. 'tiers' → logprob: -10.254159927368164

Token 152: ' sépar' (ID: 97160)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.0019724369049072
    2. 'A' → logprob: -1.2519724369049072
    3. '   ' → logprob: -2.0019724369049072
    4. 'a' → logprob: -2.7519724369049072
    5. 'values' → logprob: -3.0019724369049072
    6. ' values' → logprob: -3.5019724369049072
    7. ' a' → logprob: -4.626972198486328
    8. 'numbers' → logprob: -4.626972198486328
    9. ' numbers' → logprob: -5.001972198486328
    10. 's' → logprob: -5.376972198486328

Token 153: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.000568402698263526
    2. 'es' → logprob: -7.625568389892578
    3. 'é' → logprob: -10.000568389892578
    4. 's' → logprob: -11.375568389892578
    5. 'par' → logprob: -11.625568389892578
    6. 'ées' → logprob: -12.125568389892578
    7. 'rés' → logprob: -12.875568389892578
    8. 'ée' → logprob: -13.750568389892578
    9. ' par' → logprob: -13.750568389892578
    10. 'ÉS' → logprob: -13.875568389892578

Token 154: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.018340153619647026
    2. 'par' → logprob: -4.018340110778809
    3. ' by' → logprob: -9.393340110778809
    4. ' ' → logprob: -9.768340110778809
    5. 's' → logprob: -10.893340110778809
    6. '_par' → logprob: -12.143340110778809
    7. '  ' → logprob: -12.893340110778809
    8. 'Par' → logprob: -13.018340110778809
    9. 'e' → logprob: -13.143340110778809
    10. ',' → logprob: -13.143340110778809

Token 155: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.21639631688594818
    2. ' des' → logprob: -2.2163963317871094
    3. ' espace' → logprob: -3.3413963317871094
    4. ' espaces' → logprob: -3.4663963317871094
    5. 'un' → logprob: -5.091396331787109
    6. 'des' → logprob: -5.466396331787109
    7. 'spaces' → logprob: -5.841396331787109
    8. 'space' → logprob: -6.216396331787109
    9. ' ' → logprob: -6.966396331787109
    10. ''espace' → logprob: -7.716396331787109

Token 156: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.13386288285255432
    2. 'es' → logprob: -2.2588629722595215
    3. ''espace' → logprob: -5.0088629722595215
    4. 'esp' → logprob: -5.2588629722595215
    5. 'space' → logprob: -5.5088629722595215
    6. ' espaces' → logprob: -5.6338629722595215
    7. '’espace' → logprob: -7.7588629722595215
    8. ' space' → logprob: -7.8838629722595215
    9. ' ' → logprob: -8.133862495422363
    10. 's' → logprob: -9.883862495422363

Token 157: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.862801730632782
    2. ' A' → logprob: -1.7378017902374268
    3. '   ' → logprob: -1.7378017902374268
    4. 'S' → logprob: -2.9878017902374268
    5. 'a' → logprob: -3.9253017902374268
    6. 'numbers' → logprob: -3.9878017902374268
    7. ' S' → logprob: -4.362801551818848
    8. 'arr' → logprob: -4.487801551818848
    9. 's' → logprob: -4.550301551818848
    10. 'N' → logprob: -5.050301551818848

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035508956760168076
    2. 'numbers' → logprob: -4.91050910949707
    3. 's' → logprob: -5.16050910949707
    4. 'arr' → logprob: -5.91050910949707
    5. '    
' → logprob: -6.28550910949707
    6. '    ' → logprob: -6.28550910949707
    7. 'tokens' → logprob: -6.28550910949707
    8. 'points' → logprob: -6.53550910949707
    9. '  ' → logprob: -6.53550910949707
    10. 'values' → logprob: -6.66050910949707

Token 159: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8944833874702454
    2. ' A' → logprob: -1.7694833278656006
    3. 'cards' → logprob: -2.7694833278656006
    4. ' cards' → logprob: -2.8944833278656006
    5. 'arr' → logprob: -2.8944833278656006
    6. 'a' → logprob: -3.2694833278656006
    7. 'numbers' → logprob: -3.5194833278656006
    8. ' numbers' → logprob: -4.26948356628418
    9. 'coins' → logprob: -4.64448356628418
    10. 'p' → logprob: -4.64448356628418

Token 160: ' map' (ID: 4014)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7185049653053284
    2. ' A' → logprob: -1.4685049057006836
    3. 'arr' → logprob: -2.8435049057006836
    4. ' cards' → logprob: -3.4685049057006836
    5. 'numbers' → logprob: -3.5935049057006836
    6. 'cards' → logprob: -3.8435049057006836
    7. 'a' → logprob: -3.9685049057006836
    8. ' numbers' → logprob: -4.093504905700684
    9. ' arr' → logprob: -4.843504905700684
    10. 'nums' → logprob: -4.906004905700684

Token 161: ' applique' (ID: 180579)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.050943147391080856
    2. '(' → logprob: -3.17594313621521
    3. '=int' → logprob: -5.550943374633789
    4. ',' → logprob: -6.675943374633789
    5. 'int' → logprob: -6.925943374633789
    6. '   ' → logprob: -7.550943374633789
    7. ',int' → logprob: -8.300943374633789
    8. '<int' → logprob: -8.425943374633789
    9. ' =' → logprob: -9.050943374633789
    10. '=' → logprob: -9.175943374633789

Token 162: ' int' (ID: 677)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1636125147342682
    2. ' int' → logprob: -2.2886126041412354
    3. 'int' → logprob: -3.1636126041412354
    4. ' la' → logprob: -5.163612365722656
    5. '(' → logprob: -7.413612365722656
    6. '(lambda' → logprob: -7.913612365722656
    7. ' ' → logprob: -8.788612365722656
    8. ' lambda' → logprob: -9.163612365722656
    9. 'lambda' → logprob: -9.788612365722656
    10. '[int' → logprob: -9.913612365722656

Token 163: ' à' (ID: 1221)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.1944422721862793
    2. ',' → logprob: -1.3194422721862793
    3. '(' → logprob: -1.4444422721862793
    4. 'sur' → logprob: -2.4444422721862793
    5. '(int' → logprob: -3.0694422721862793
    6. ' à' → logprob: -3.8194422721862793
    7. 's' → logprob: -5.069442272186279
    8. '(lambda' → logprob: -5.194442272186279
    9. ' ' → logprob: -5.569442272186279
    10. '(input' → logprob: -6.319442272186279

Token 164: ' chaque' (ID: 21194)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8021796345710754
    2. ' chaque' → logprob: -1.8021795749664307
    3. ' la' → logprob: -2.0521795749664307
    4. 'input' → logprob: -2.3021795749664307
    5. ' l' → logprob: -2.8021795749664307
    6. '(input' → logprob: -3.6771795749664307
    7. 'l' → logprob: -3.9271795749664307
    8. 'list' → logprob: -4.55217981338501
    9. ' list' → logprob: -4.67717981338501
    10. 'la' → logprob: -4.80217981338501

Token 165: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.12086610496044159
    2. ' élément' → logprob: -2.745866060256958
    3. 'element' → logprob: -3.370866060256958
    4. 'val' → logprob: -5.120866298675537
    5. ' element' → logprob: -5.245866298675537
    6. 'elem' → logprob: -5.995866298675537
    7. '(' → logprob: -7.870866298675537
    8. 'nombre' → logprob: -8.245865821838379
    9. '(element' → logprob: -8.495865821838379
    10. ' valeur' → logprob: -9.120865821838379

Token 166: ' convert' (ID: 8452)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.275707721710205
    2. '(numbers' → logprob: -1.400707721710205
    3. '(' → logprob: -1.900707721710205
    4. '(input' → logprob: -2.400707721710205
    5. 's' → logprob: -3.650707721710205
    6. '(nums' → logprob: -3.900707721710205
    7. '   ' → logprob: -3.900707721710205
    8. '(arr' → logprob: -4.025707721710205
    9. 'numbers' → logprob: -4.275707721710205
    10. '(a' → logprob: -4.275707721710205

Token 167: 'i' (ID: 72)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.9499065279960632
    2. 'is' → logprob: -1.449906587600708
    3. 'issant' → logprob: -1.574906587600708
    4. 'i' → logprob: -1.949906587600708
    5. '```' → logprob: -4.324906349182129
    6. 'ir' → logprob: -4.574906349182129
    7. 'ant' → logprob: -6.699906349182129
    8. ' it' → logprob: -7.324906349182129
    9. '   ' → logprob: -7.824906349182129
    10. '#' → logprob: -7.824906349182129

Token 168: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0001870393753052
    2. 's' → logprob: -1.0001870393753052
    3. '(input' → logprob: -2.3751869201660156
    4. ' de' → logprob: -2.6251869201660156
    5. ' par' → logprob: -3.7501869201660156
    6. 'es' → logprob: -4.125186920166016
    7. ' ' → logprob: -4.375186920166016
    8. ',' → logprob: -4.375186920166016
    9. '(s' → logprob: -5.125186920166016
    10. '(e' → logprob: -5.375186920166016

Token 169: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31355568766593933
    2. ' input' → logprob: -1.3135557174682617
    3. '(input' → logprob: -8.188555717468262
    4. ' ' → logprob: -12.688555717468262
    5. '	input' → logprob: -13.063555717468262
    6. 'l' → logprob: -13.063555717468262
    7. '<input' → logprob: -13.688555717468262
    8. '=input' → logprob: -13.813555717468262
    9. '```' → logprob: -14.188555717468262
    10. ' l' → logprob: -14.188555717468262

Token 170: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09377366304397583
    2. ' input' → logprob: -2.468773603439331
    3. 'e' → logprob: -6.09377384185791
    4. '(input' → logprob: -7.09377384185791
    5. 'entrée' → logprob: -7.71877384185791
    6. ''entrée' → logprob: -7.84377384185791
    7. '`' → logprob: -8.09377384185791
    8. 'a' → logprob: -8.71877384185791
    9. '=input' → logprob: -8.96877384185791
    10. '[input' → logprob: -9.84377384185791

Token 171: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03561767190694809
    2. '()' → logprob: -3.4106175899505615
    3. '(),' → logprob: -7.660617828369141
    4. '()[' → logprob: -7.910617828369141
    5. '(input' → logprob: -8.28561782836914
    6. '(' → logprob: -8.28561782836914
    7. '()(' → logprob: -9.16061782836914
    8. 'input' → logprob: -9.53561782836914
    9. 's' → logprob: -9.91061782836914
    10. '())' → logprob: -10.03561782836914

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40970832109451294
    2. 'A' → logprob: -2.534708261489868
    3. ',' → logprob: -3.284708261489868
    4. 'numbers' → logprob: -3.284708261489868
    5. 'arr' → logprob: -3.784708261489868
    6. 's' → logprob: -3.784708261489868
    7. 'a' → logprob: -4.159708499908447
    8. ' A' → logprob: -4.284708499908447
    9. 'nums' → logprob: -4.534708499908447
    10. 'S' → logprob: -5.222208499908447

Token 173: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9189427495002747
    2. ' A' → logprob: -0.9189427495002747
    3. 'arr' → logprob: -3.66894268989563
    4. 'a' → logprob: -3.79394268989563
    5. '   ' → logprob: -3.91894268989563
    6. ' cards' → logprob: -3.91894268989563
    7. ' a' → logprob: -4.418942928314209
    8. 'numbers' → logprob: -4.606442928314209
    9. ' numbers' → logprob: -4.981442928314209
    10. 'values' → logprob: -5.043942928314209

Token 174: ' list' (ID: 1562)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.798335075378418
    2. ' A' → logprob: -1.048335075378418
    3. 'arr' → logprob: -3.423335075378418
    4. ' cards' → logprob: -3.798335075378418
    5. 'cards' → logprob: -3.923335075378418
    6. 'a' → logprob: -4.048335075378418
    7. 'numbers' → logprob: -4.173335075378418
    8. '   ' → logprob: -4.923335075378418
    9. ' numbers' → logprob: -5.173335075378418
    10. 'nums' → logprob: -5.173335075378418

Token 175: ' transforme' (ID: 184109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5561142563819885
    2. '_' → logprob: -1.5561141967773438
    3. '=' → logprob: -2.3061141967773438
    4. ' =' → logprob: -3.3061141967773438
    5. '()' → logprob: -3.6811141967773438
    6. 's' → logprob: -3.9311141967773438
    7. '_values' → logprob: -5.306114196777344
    8. '_numbers' → logprob: -5.306114196777344
    9. '_s' → logprob: -5.681114196777344
    10. '_of' → logprob: -5.681114196777344

Token 176: ' le' (ID: 505)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6778795123100281
    2. '(' → logprob: -1.0528795719146729
    3. '(input' → logprob: -2.552879571914673
    4. '(int' → logprob: -3.927879571914673
    5. '(
' → logprob: -4.052879333496094
    6. 'map' → logprob: -4.802879333496094
    7. 'int' → logprob: -5.052879333496094
    8. 'input' → logprob: -5.927879333496094
    9. ' la' → logprob: -6.302879333496094
    10. '(list' → logprob: -6.302879333496094

Token 177: ' résultat' (ID: 62556)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.05760575458407402
    2. ' map' → logprob: -2.932605743408203
    3. '(map' → logprob: -6.182605743408203
    4. 'input' → logprob: -8.307605743408203
    5. ' input' → logprob: -9.182605743408203
    6. 'result' → logprob: -9.682605743408203
    7. ' résultat' → logprob: -9.932605743408203
    8. ' ' → logprob: -10.182605743408203
    9. 'm' → logprob: -10.432605743408203
    10. 'ma' → logprob: -10.807605743408203

Token 178: ' de' (ID: 334)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3542301654815674
    2. '(input' → logprob: -2.2292301654815674
    3. ' en' → logprob: -2.6042301654815674
    4. '(' → logprob: -2.8542301654815674
    5. '(int' → logprob: -3.4792301654815674
    6. 'int' → logprob: -5.104229927062988
    7. 'input' → logprob: -5.729229927062988
    8. 'en' → logprob: -5.854229927062988
    9. ' into' → logprob: -6.104229927062988
    10. '(
' → logprob: -6.229229927062988

Token 179: ' la' (ID: 557)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12737981975078583
    2. ' map' → logprob: -2.127379894256592
    3. '(map' → logprob: -7.752379894256592
    4. '_map' → logprob: -12.252379417419434
    5. '	map' → logprob: -12.377379417419434
    6. 'input' → logprob: -12.752379417419434
    7. ' la' → logprob: -12.877379417419434
    8. ' ' → logprob: -13.502379417419434
    9. ',map' → logprob: -13.502379417419434
    10. 'm' → logprob: -14.127379417419434

Token 180: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0699601098895073
    2. ' map' → logprob: -2.694960117340088
    3. 'm' → logprob: -12.06995964050293
    4. ' ' → logprob: -12.06995964050293
    5. '	map' → logprob: -13.31995964050293
    6. '_map' → logprob: -13.56995964050293
    7. 'mapping' → logprob: -13.69495964050293
    8. 'input' → logprob: -13.69495964050293
    9. '(map' → logprob: -14.13245964050293
    10. ' ' → logprob: -14.19495964050293

Token 181: ' en' (ID: 469)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06112048774957657
    2. '(int' → logprob: -3.1861205101013184
    3. '(map' → logprob: -4.811120510101318
    4. 'input' → logprob: -5.061120510101318
    5. 'int' → logprob: -6.561120510101318
    6. '[int' → logprob: -6.561120510101318
    7. '<int' → logprob: -8.68612003326416
    8. 'map' → logprob: -9.18612003326416
    9. ' input' → logprob: -9.31112003326416
    10. '(' → logprob: -9.56112003326416

Token 182: ' liste' (ID: 31719)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.032098010182380676
    2. ' liste' → logprob: -3.6570980548858643
    3. 'une' → logprob: -5.282097816467285
    4. 'liste' → logprob: -8.157097816467285
    5. ' a' → logprob: -8.907097816467285
    6. '[]' → logprob: -9.282097816467285
    7. 'a' → logprob: -9.907097816467285
    8. ' list' → logprob: -9.907097816467285
    9. ' un' → logprob: -10.407097816467285
    10. '```' → logprob: -11.532097816467285

Token 183: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.7507764101028442
    2. 'arr' → logprob: -1.8757764101028442
    3. 'a' → logprob: -2.2507762908935547
    4. '   ' → logprob: -2.3757762908935547
    5. 'numbers' → logprob: -2.3757762908935547
    6. ' A' → logprob: -3.1257762908935547
    7. 'scores' → logprob: -3.3757762908935547
    8. '(' → logprob: -3.5007762908935547
    9. 's' → logprob: -3.8757762908935547
    10. '(numbers' → logprob: -4.000776290893555

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10518214106559753
    2. ' A' → logprob: -3.35518217086792
    3. 'A' → logprob: -3.48018217086792
    4. 'arr' → logprob: -5.73018217086792
    5. ' S' → logprob: -5.79268217086792
    6. 'S' → logprob: -5.79268217086792
    7. 'a' → logprob: -6.41768217086792
    8. 's' → logprob: -6.48018217086792
    9. '    
' → logprob: -6.54268217086792
    10. ' ' → logprob: -7.04268217086792

Token 185: ' D' (ID: 415)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0173237323760986
    2. ' A' → logprob: -1.2673237323760986
    3. ' cards' → logprob: -2.3923237323760986
    4. 'cards' → logprob: -2.8923237323760986
    5. 'arr' → logprob: -3.0173237323760986
    6. 'a' → logprob: -3.8923237323760986
    7. 'coins' → logprob: -4.2673234939575195
    8. '   ' → logprob: -4.5798234939575195
    9. 'p' → logprob: -5.0173234939575195
    10. ' a' → logprob: -5.1423234939575195

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01824219338595867
    2. '=' → logprob: -4.018242359161377
    3. 'ist' → logprob: -10.518241882324219
    4. ' ' → logprob: -10.768241882324219
    5. 's' → logprob: -11.143241882324219
    6. 'd' → logprob: -12.518241882324219
    7. '=[]' → logprob: -12.643241882324219
    8. 'D' → logprob: -12.768241882324219
    9. '_list' → logprob: -13.018241882324219
    10. '_' → logprob: -13.393241882324219

Token 187: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12692862749099731
    2. 'list' → logprob: -2.1269285678863525
    3. ' ' → logprob: -15.501928329467773
    4. '	list' → logprob: -16.001928329467773
    5. 'List' → logprob: -16.251928329467773
    6. '=list' → logprob: -16.751928329467773
    7. 'l' → logprob: -18.126928329467773
    8. ' ' → logprob: -18.251928329467773
    9. ' lis' → logprob: -18.626928329467773
    10. '(list' → logprob: -18.751928329467773

Token 188: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.48547863960266113
    2. '(' → logprob: -0.9854786396026611
    3. '(int' → logprob: -4.485478401184082
    4. '(
' → logprob: -10.235478401184082
    5. ' (' → logprob: -11.235478401184082
    6. '(list' → logprob: -11.610478401184082
    7. '(

' → logprob: -13.360478401184082
    8. '(mapping' → logprob: -13.735478401184082
    9. '(range' → logprob: -14.110478401184082
    10. '(m' → logprob: -14.360478401184082

Token 189: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004123280756175518
    2. '(' → logprob: -5.504123210906982
    3. 'int' → logprob: -10.37912368774414
    4. ' (' → logprob: -12.25412368774414
    5. '<int' → logprob: -12.75412368774414
    6. '(
' → logprob: -12.87912368774414
    7. ' int' → logprob: -13.00412368774414
    8. '[int' → logprob: -14.50412368774414
    9. '=int' → logprob: -15.00412368774414
    10. ',int' → logprob: -15.25412368774414

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012762965634465218
    2. ',input' → logprob: -4.387763023376465
    3. '(input' → logprob: -8.387763023376465
    4. ' ,' → logprob: -11.512763023376465
    5. '(' → logprob: -11.637763023376465
    6. 'input' → logprob: -12.012763023376465
    7. '(),' → logprob: -15.637763023376465
    8. ' input' → logprob: -16.13776206970215
    9. '),' → logprob: -16.26276206970215
    10. ' (' → logprob: -16.26276206970215

Token 191: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931636333465576
    2. ' input' → logprob: -0.6931636333465576
    3. '(input' → logprob: -11.568163871765137
    4. ' ' → logprob: -13.693163871765137
    5. '_input' → logprob: -13.943163871765137
    6. '	input' → logprob: -13.943163871765137
    7. ',input' → logprob: -14.068163871765137
    8. ')' → logprob: -14.193163871765137
    9. '=input' → logprob: -14.318163871765137
    10. '[input' → logprob: -14.568163871765137

Token 192: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. ' ().' → logprob: -15.25
    3. '()' → logprob: -16.375
    4. '.' → logprob: -18.375
    5. ').' → logprob: -20.75
    6. '.split' → logprob: -21.625
    7. '(' → logprob: -21.625
    8. '()
' → logprob: -21.875
    9. '()).' → logprob: -22.125
    10. ' .' → logprob: -22.5

Token 193: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.180258191714529e-06
    2. ' split' → logprob: -12.000008583068848
    3. 'strip' → logprob: -13.375008583068848
    4. '(split' → logprob: -15.500008583068848
    5. 'rstrip' → logprob: -16.50000762939453
    6. 'spl' → logprob: -17.37500762939453
    7. ')' → logprob: -17.37500762939453
    8. '.split' → logprob: -17.87500762939453
    9. ' ' → logprob: -19.25000762939453
    10. 'plit' → logprob: -19.37500762939453

Token 194: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006529803387820721
    2. '()' → logprob: -5.381529808044434
    3. '))' → logprob: -6.381529808044434
    4. '()))
' → logprob: -8.881529808044434
    5. '())' → logprob: -9.756529808044434
    6. '(' → logprob: -11.631529808044434
    7. '()));' → logprob: -12.631529808044434
    8. '()))

' → logprob: -12.756529808044434
    9. '   ' → logprob: -14.256529808044434
    10. '())))' → logprob: -14.631529808044434

Token 195: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0211395025253296
    2. 'for' → logprob: -1.2711395025253296
    3. 'result' → logprob: -2.271139621734619
    4. '#' → logprob: -2.521139621734619
    5. 'results' → logprob: -3.271139621734619
    6. 'answer' → logprob: -3.771139621734619
    7. 'answers' → logprob: -3.771139621734619
    8. 'queries' → logprob: -3.771139621734619
    9. 'res' → logprob: -4.021139621734619
    10. 'Q' → logprob: -4.896139621734619

Token 197: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030267829075455666
    2. 'results' → logprob: -4.780267715454102
    3. 'result' → logprob: -4.780267715454102
    4. 'queries' → logprob: -5.530267715454102
    5. '#' (adapté à ' #') → logprob: -5.780267715454102
    6. 'res' → logprob: -6.530267715454102
    7. 'answers' → logprob: -6.530267715454102
    8. 'Q' → logprob: -7.405267715454102
    9. 'answer' → logprob: -7.530267715454102
    10. '   ' → logprob: -7.655267715454102

Token 198: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6394491791725159
    2. ' for' → logprob: -0.8894491791725159
    3. '#' → logprob: -3.639449119567871
    4. 'Q' → logprob: -4.514449119567871
    5. 'results' → logprob: -5.389449119567871
    6. ' results' → logprob: -5.389449119567871
    7. ' queries' → logprob: -5.764449119567871
    8. ' result' → logprob: -6.014449119567871
    9. 'result' → logprob: -6.014449119567871
    10. ' #' → logprob: -6.264449119567871

Token 199: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.004318910650908947
    2. 'cler' → logprob: -5.754318714141846
    3. '   ' → logprob: -6.879318714141846
    4. ' cle' → logprob: -10.129319190979004
    5. 'c' → logprob: -10.379319190979004
    6. '       ' → logprob: -11.879319190979004
    7. 'clé' → logprob: -11.879319190979004
    8. '
' → logprob: -12.254319190979004
    9. '  ' → logprob: -12.504319190979004
    10. 'cl' → logprob: -12.754319190979004

Token 200: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0221398938447237
    2. 'for' → logprob: -3.89713978767395
    3. '   ' → logprob: -7.397140026092529
    4. '<|end|>' → logprob: -7.897140026092529
    5. '	for' → logprob: -8.272139549255371
    6. ' ' → logprob: -9.022139549255371
    7. ' Q' → logprob: -9.897139549255371
    8. ' ' → logprob: -10.397139549255371
    9. '<|end|>' → logprob: -10.397139549255371
    10. ':' → logprob: -10.772139549255371

Token 201: ' traiter' (ID: 105852)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.018207184970378876
    2. '_' → logprob: -4.01820707321167
    3. ' range' → logprob: -9.893207550048828
    4. ' ' → logprob: -12.518207550048828
    5. ' ' → logprob: -13.018207550048828
    6. ' i' → logprob: -14.643207550048828
    7. ' q' → logprob: -14.893207550048828
    8. 'range' → logprob: -17.518207550048828
    9. ' __' → logprob: -17.643207550048828
    10. ' Q' → logprob: -18.143207550048828

Token 202: ' Q' (ID: 1486)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6760073900222778
    2. '_' → logprob: -0.8010073900222778
    3. ' range' → logprob: -4.051007270812988
    4. ' Q' → logprob: -4.551007270812988
    5. ' ' → logprob: -5.426007270812988
    6. ' ' → logprob: -5.676007270812988
    7. '   ' → logprob: -6.051007270812988
    8. 'Q' → logprob: -6.801007270812988
    9. ' q' → logprob: -7.051007270812988
    10. 'range' → logprob: -7.301007270812988

Token 203: ' requ' (ID: 7028)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5596485733985901
    2. ' for' → logprob: -1.9346485137939453
    3. 'for' → logprob: -2.0596485137939453
    4. '_' → logprob: -3.3096485137939453
    5. ' i' → logprob: -3.3096485137939453
    6. ' _' → logprob: -3.4346485137939453
    7. ' ' → logprob: -4.059648513793945
    8. ':' → logprob: -5.559648513793945
    9. ' ,' → logprob: -5.559648513793945
    10. '  ' → logprob: -5.934648513793945

Token 204: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.00019984507525805384
    2. 'etes' → logprob: -8.625200271606445
    3. 'ètes' → logprob: -11.875200271606445
    4. 'ê' → logprob: -12.500200271606445
    5. 'ête' → logprob: -12.625200271606445
    6. 'êt' → logprob: -12.875200271606445
    7. 'êts' → logprob: -14.000200271606445
    8. 'tes' → logprob: -14.000200271606445
    9. '   ' → logprob: -14.500200271606445
    10. '#' → logprob: -14.750200271606445

Token 205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5059230327606201
    2. '   ' → logprob: -1.6309230327606201
    3. 'for' → logprob: -2.88092303276062
    4. ':' → logprob: -2.88092303276062
    5. '    
' → logprob: -3.38092303276062
    6. ' for' → logprob: -3.63092303276062
    7. '  
' → logprob: -4.255923271179199
    8. ' 
' → logprob: -5.880923271179199
    9. '\n' → logprob: -5.880923271179199
    10. '<|end|>' → logprob: -6.130923271179199

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3068391680717468
    2. 'for' → logprob: -2.3068392276763916
    3. ' for' → logprob: -2.9318392276763916
    4. '
' → logprob: -3.1818392276763916
    5. ':' → logprob: -3.5568392276763916
    6. '    
' → logprob: -3.6818392276763916
    7. '  
' → logprob: -4.9318389892578125
    8. ' 
' → logprob: -5.6818389892578125
    9. '	for' → logprob: -6.8068389892578125
    10. '\n' → logprob: -6.9318389892578125

Token 207: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.421323299407959
    2. ' for' → logprob: -1.546323299407959
    3. '   ' → logprob: -2.046323299407959
    4. '	for' → logprob: -6.921323299407959
    5. '
' → logprob: -8.046323776245117
    6. '    
' → logprob: -8.671323776245117
    7. ' 
' → logprob: -9.921323776245117
    8. ' ' → logprob: -11.171323776245117
    9. '  ' → logprob: -11.671323776245117
    10. '	
' → logprob: -11.671323776245117

Token 208: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0015272404998540878
    2. '_' → logprob: -6.626527309417725
    3. ' ' → logprob: -8.751526832580566
    4. ' i' → logprob: -10.126526832580566
    5. ' ' → logprob: -13.251526832580566
    6. ' ‌' → logprob: -14.126526832580566
    7. ' q' → logprob: -15.501526832580566
    8. ' in' → logprob: -15.626526832580566
    9. ' ​' → logprob: -15.751526832580566
    10. ' __' → logprob: -17.126527786254883

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03935348987579346
    2. 'in' → logprob: -3.289353370666504
    3. ' ' → logprob: -6.914353370666504
    4. '_' → logprob: -9.039353370666504
    5. '  ' → logprob: -9.164353370666504
    6. ' _' → logprob: -10.664353370666504
    7. 'i' → logprob: -11.539353370666504
    8. ' i' → logprob: -11.664353370666504
    9. '   ' → logprob: -11.914353370666504
    10. 's' → logprob: -11.914353370666504

Token 210: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009171743295155466
    2. ' range' → logprob: -7.000916957855225
    3. '(range' → logprob: -12.750917434692383
    4. '   ' → logprob: -14.375917434692383
    5. '	range' → logprob: -14.500917434692383
    6. ' ' → logprob: -14.750917434692383
    7. 'ange' → logprob: -15.000917434692383
    8. '```' → logprob: -15.500917434692383
    9. 'in' → logprob: -15.875917434692383
    10. '  ' → logprob: -16.000917434692383

Token 211: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.004186432808637619
    2. '(' → logprob: -5.504186630249023
    3. ' (' → logprob: -9.629186630249023
    4. 'Q' → logprob: -10.629186630249023
    5. ' Q' → logprob: -11.754186630249023
    6. '(range' → logprob: -12.004186630249023
    7. '(q' → logprob: -13.629186630249023
    8. 'range' → logprob: -14.379186630249023
    9. 'in' → logprob: -14.379186630249023
    10. ' in' → logprob: -14.754186630249023

Token 212: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018113377154804766
    2. '):
' → logprob: -9.000181198120117
    3. ':' → logprob: -9.875181198120117
    4. ' ):' → logprob: -12.375181198120117
    5. ')' → logprob: -13.875181198120117
    6. '():' → logprob: -14.250181198120117
    7. '):
' → logprob: -16.125181198120117
    8. '   ' → logprob: -17.125181198120117
    9. '}:' → logprob: -17.125181198120117
    10. '):

' → logprob: -17.500181198120117

Token 213: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015744805335998535
    2. ' :' → logprob: -4.890744686126709
    3. '       ' → logprob: -5.640744686126709
    4. '   ' → logprob: -6.265744686126709
    5. '():' → logprob: -6.390744686126709
    6. ':
' → logprob: -7.890744686126709
    7. '):' → logprob: -8.265745162963867
    8. '    ' → logprob: -9.515745162963867
    9. '<|end|>' → logprob: -9.765745162963867
    10. ' :
' → logprob: -10.015745162963867

Token 214: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8863147497177124
    2. 'x' → logprob: -1.3863147497177124
    3. '   ' → logprob: -2.511314868927002
    4. ' query' → logprob: -2.886314868927002
    5. 'query' → logprob: -3.511314868927002
    6. ' L' → logprob: -4.011314868927002
    7. '       ' → logprob: -4.136314868927002
    8. ' s' → logprob: -4.261314868927002
    9. ' X' → logprob: -4.511314868927002
    10. ' S' → logprob: -4.511314868927002

Token 215: ' Lis' (ID: 29571)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5286109447479248
    2. 'query' → logprob: -1.9036109447479248
    3. 't' → logprob: -3.028610944747925
    4. 'q' → logprob: -3.278610944747925
    5. ' x' → logprob: -3.403610944747925
    6. ' query' → logprob: -4.028611183166504
    7. 'X' → logprob: -4.028611183166504
    8. 'a' → logprob: -4.528611183166504
    9. 'c' → logprob: -4.528611183166504
    10. 'l' → logprob: -4.653611183166504

Token 216: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.084854006767273
    2. ' x' → logprob: -2.0848541259765625
    3. ' l' → logprob: -2.0848541259765625
    4. 'a' → logprob: -2.2098541259765625
    5. ' a' → logprob: -2.2098541259765625
    6. 'x' → logprob: -3.8348541259765625
    7. ' ' → logprob: -3.8348541259765625
    8. ' query' → logprob: -3.8348541259765625
    9. ' une' → logprob: -4.0848541259765625
    10. 'query' → logprob: -4.7098541259765625

Token 217: ' paramètres' (ID: 130696)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4571201801300049
    2. ' query' → logprob: -1.7071201801300049
    3. 'query' → logprob: -1.7071201801300049
    4. ' a' → logprob: -1.9571201801300049
    5. 'x' → logprob: -2.707120180130005
    6. ' x' → logprob: -3.332120180130005
    7. ' t' → logprob: -3.832120180130005
    8. ' L' → logprob: -4.582119941711426
    9. ' line' → logprob: -4.957119941711426
    10. ' data' → logprob: -4.957119941711426

Token 218: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030992750078439713
    2. '=' → logprob: -3.6559927463531494
    3. ' de' → logprob: -6.5309929847717285
    4. 'query' → logprob: -7.0309929847717285
    5. '   ' → logprob: -7.2809929847717285
    6. '=query' → logprob: -8.28099250793457
    7. 'de' → logprob: -8.53099250793457
    8. ',' → logprob: -8.90599250793457
    9. ' query' → logprob: -8.90599250793457
    10. ' ' → logprob: -9.03099250793457

Token 219: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.3166094124317169
    2. 'e' → logprob: -2.1916093826293945
    3. ''une' → logprob: -2.4416093826293945
    4. ''entrée' → logprob: -3.8166093826293945
    5. ' une' → logprob: -4.3166093826293945
    6. 'a' → logprob: -4.5666093826293945
    7. ' la' → logprob: -4.6916093826293945
    8. 'la' → logprob: -5.1916093826293945
    9. 'entrée' → logprob: -5.4416093826293945
    10. '’une' → logprob: -6.4416093826293945

Token 220: ' requ' (ID: 7028)
  Prédit: 'requ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requ' → logprob: -0.1207645833492279
    2. ' requ' → logprob: -2.3707644939422607
    3. 'ligne' → logprob: -4.37076473236084
    4. ' ligne' → logprob: -5.74576473236084
    5. 'query' → logprob: -5.99576473236084
    6. 'commande' → logprob: -7.62076473236084
    7. 'liste' → logprob: -7.74576473236084
    8. 'quête' → logprob: -7.99576473236084
    9. 're' → logprob: -8.87076473236084
    10. ' query' → logprob: -8.99576473236084

Token 221: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.00017016702622640878
    2. 'ete' → logprob: -8.75016975402832
    3. 'êtes' → logprob: -12.37516975402832
    4. 'ète' → logprob: -13.00016975402832
    5. 'ê' → logprob: -13.12516975402832
    6. '#' → logprob: -14.50016975402832
    7. '�' → logprob: -14.75016975402832
    8. 'é' → logprob: -15.00016975402832
    9. ' ' → logprob: -15.12516975402832
    10. '**' → logprob: -15.50016975402832

Token 222: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4002808928489685
    2. ' ' → logprob: -2.1502809524536133
    3. ' ,' → logprob: -2.1502809524536133
    4. ',' → logprob: -3.0252809524536133
    5. '       ' → logprob: -3.7752809524536133
    6. '=' → logprob: -5.275280952453613
    7. ' s' → logprob: -5.525280952453613
    8. '   ' → logprob: -6.150280952453613
    9. ' 
' → logprob: -6.150280952453613
    10. '        ' → logprob: -6.400280952453613

Token 223: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2394050359725952
    2. 'L' → logprob: -1.8644050359725952
    3. 'a' → logprob: -1.8644050359725952
    4. 'l' → logprob: -2.3644051551818848
    5. ' L' → logprob: -3.2394051551818848
    6. ' x' → logprob: -3.2394051551818848
    7. 'X' → logprob: -3.4894051551818848
    8. ' a' → logprob: -3.8644051551818848
    9. ' l' → logprob: -3.9894051551818848
    10. 'i' → logprob: -3.9894051551818848

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019394034519791603
    2. ' =' → logprob: -4.5193939208984375
    3. ' ,' → logprob: -6.3943939208984375
    4. 'a' → logprob: -6.5193939208984375
    5. '=' → logprob: -6.7693939208984375
    6. ',a' → logprob: -7.6443939208984375
    7. ',m' → logprob: -7.6443939208984375
    8. '1' → logprob: -8.269393920898438
    9. ',n' → logprob: -8.394393920898438
    10. 'u' → logprob: -8.519393920898438

Token 225: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6175156235694885
    2. 'm' → logprob: -2.2425155639648438
    3. 'k' → logprob: -2.4925155639648438
    4. ' x' → logprob: -2.6175155639648438
    5. 'a' → logprob: -3.8675155639648438
    6. 'l' → logprob: -3.8675155639648438
    7. 'd' → logprob: -3.9925155639648438
    8. 'q' → logprob: -3.9925155639648438
    9. ' m' → logprob: -4.117515563964844
    10. ' k' → logprob: -4.117515563964844

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013843651860952377
    2. ' =' → logprob: -5.013843536376953
    3. '=' → logprob: -5.138843536376953
    4. ' ,' → logprob: -6.763843536376953
    5. ',x' → logprob: -10.388843536376953
    6. ',n' → logprob: -10.513843536376953
    7. ' ' → logprob: -11.388843536376953
    8. 'n' → logprob: -12.013843536376953
    9. ',k' → logprob: -14.013843536376953
    10. ',y' → logprob: -14.138843536376953

Token 227: ' m' (ID: 284)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3001377284526825
    2. 'm' → logprob: -3.050137758255005
    3. 'k' → logprob: -3.300137758255005
    4. 'v' → logprob: -3.425137758255005
    5. 'd' → logprob: -3.425137758255005
    6. 'c' → logprob: -3.550137758255005
    7. 'a' → logprob: -3.675137758255005
    8. 'l' → logprob: -4.425137519836426
    9. ' y' → logprob: -4.425137519836426
    10. 'p' → logprob: -5.425137519836426

Token 228: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328028440475464
    2. '=' → logprob: -1.3132803440093994
    3. ',' → logprob: -11.06328010559082
    4. '   ' → logprob: -14.18828010559082
    5. 'n' → logprob: -14.31328010559082
    6. '       ' → logprob: -14.93828010559082
    7. '    ' → logprob: -14.93828010559082
    8. ' ' → logprob: -15.18828010559082
    9. '=n' → logprob: -16.18828010559082
    10. '=
' → logprob: -16.56328010559082

Token 229: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.116238534450531
    2. '=' → logprob: -2.241238594055176
    3. ',' → logprob: -6.116238594055176
    4. ' ' → logprob: -7.616238594055176
    5. '       ' → logprob: -7.616238594055176
    6. '   ' → logprob: -10.366238594055176
    7. ' ,' → logprob: -10.491238594055176
    8. '    ' → logprob: -10.866238594055176
    9. ' n' → logprob: -10.866238594055176
    10. ')' → logprob: -10.991238594055176

Token 230: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.47488266229629517
    2. ' n' → logprob: -0.9748826622962952
    3. ' =' → logprob: -7.34988260269165
    4. '=' → logprob: -9.849883079528809
    5. '       ' → logprob: -10.974883079528809
    6. ' ' → logprob: -11.099883079528809
    7. '   ' → logprob: -11.349883079528809
    8. ',' → logprob: -11.349883079528809
    9. '	n' → logprob: -11.349883079528809
    10. ',n' → logprob: -11.474883079528809

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.590104698669165e-05
    2. ',x' → logprob: -9.750085830688477
    3. ' ,' → logprob: -10.500085830688477
    4. 'x' → logprob: -17.000085830688477
    5. ',
' → logprob: -17.750085830688477
    6. ',m' → logprob: -18.250085830688477
    7. ',n' → logprob: -18.750085830688477
    8. '=' → logprob: -19.875085830688477
    9. ',k' → logprob: -20.375085830688477
    10. ',y' → logprob: -20.375085830688477

Token 232: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3869059085845947
    2. 'x' → logprob: -1.1369059085845947
    3. ' ' → logprob: -10.386905670166016
    4. '  ' → logprob: -13.886905670166016
    5. '	x' → logprob: -13.886905670166016
    6. '=' → logprob: -14.386905670166016
    7. ' =' → logprob: -15.136905670166016
    8. ',x' → logprob: -15.261905670166016
    9. ' ' → logprob: -15.511905670166016
    10. '    ' → logprob: -15.761905670166016

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022821188031230122
    2. '=' → logprob: -8.500227928161621
    3. ' =' → logprob: -10.875227928161621
    4. ' ,' → logprob: -12.625227928161621
    5. ',m' → logprob: -13.000227928161621
    6. 'm' → logprob: -16.500228881835938
    7. ' ' → logprob: -18.625228881835938
    8. ',n' → logprob: -18.750228881835938
    9. ',y' → logprob: -18.875228881835938
    10. ',q' → logprob: -19.312728881835938

Token 234: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5761026740074158
    2. 'm' → logprob: -0.8261026740074158
    3. ' ' → logprob: -9.201102256774902
    4. '  ' → logprob: -11.701102256774902
    5. '<|end|>' → logprob: -11.701102256774902
    6. '	m' → logprob: -11.951102256774902
    7. ' =' → logprob: -12.076102256774902
    8. ' y' → logprob: -12.201102256774902
    9. 'M' → logprob: -12.451102256774902
    10. '=' → logprob: -12.826102256774902

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020720958709717
    2. ' =' → logprob: -2.3502073287963867
    3. ')' → logprob: -15.100207328796387
    4. ' ' → logprob: -15.975207328796387
    5. ')=' → logprob: -16.72520637512207
    6. ',' → logprob: -17.35020637512207
    7. '＝' → logprob: -17.85020637512207
    8. '   ' → logprob: -18.60020637512207
    9. '=

' → logprob: -19.10020637512207
    10. '=int' → logprob: -19.47520637512207

Token 236: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00671584764495492
    2. 'map' → logprob: -5.006715774536133
    3. ' ' → logprob: -14.881715774536133
    4. '	map' → logprob: -15.881715774536133
    5. '(map' → logprob: -17.506715774536133
    6. ' ' → logprob: -18.006715774536133
    7. '.map' → logprob: -19.381715774536133
    8. ' list' → logprob: -19.631715774536133
    9. 'm' → logprob: -19.631715774536133
    10. '  ' → logprob: -20.006715774536133

Token 237: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.875005722045898
    3. 'int' → logprob: -13.250005722045898
    4. '<int' → logprob: -14.125005722045898
    5. '=int' → logprob: -15.125005722045898
    6. '[int' → logprob: -15.375005722045898
    7. ' int' → logprob: -16.7500057220459
    8. ',int' → logprob: -17.6250057220459
    9. '(in' → logprob: -18.1250057220459
    10. '(
' → logprob: -18.8750057220459

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014610696816816926
    2. ',input' → logprob: -6.626461029052734
    3. '(input' → logprob: -9.376461029052734
    4. '(' → logprob: -10.001461029052734
    5. 'input' → logprob: -12.876461029052734
    6. ' ,' → logprob: -13.626461029052734
    7. '(),' → logprob: -14.001461029052734
    8. ' (' → logprob: -15.501461029052734
    9. '=input' → logprob: -16.501461029052734
    10. ' input' → logprob: -16.751461029052734

Token 239: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3869703710079193
    2. 'input' → logprob: -1.1369704008102417
    3. '(input' → logprob: -9.261970520019531
    4. ')' → logprob: -13.136970520019531
    5. ',input' → logprob: -14.261970520019531
    6. '	input' → logprob: -14.636970520019531
    7. '=input' → logprob: -14.761970520019531
    8. '[input' → logprob: -14.761970520019531
    9. ' ' → logprob: -15.261970520019531
    10. '_input' → logprob: -15.636970520019531

Token 240: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -15.500000953674316
    3. ' ().' → logprob: -15.625000953674316
    4. '.' → logprob: -16.875
    5. ').' → logprob: -18.25
    6. '()).' → logprob: -19.25
    7. '>().' → logprob: -19.25
    8. ' .' → logprob: -19.625
    9. '(' → logprob: -21.0
    10. '()].' → logprob: -21.125

Token 241: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. '().' → logprob: -14.375001907348633
    3. ' split' → logprob: -14.625001907348633
    4. '(split' → logprob: -16.250001907348633
    5. 'strip' → logprob: -16.500001907348633
    6. '.split' → logprob: -17.250001907348633
    7. 'spl' → logprob: -17.250001907348633
    8. ').' → logprob: -17.750001907348633
    9. ')' → logprob: -18.000001907348633
    10. 'rstrip' → logprob: -18.625001907348633

Token 242: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.029819689691066742
    2. ')' → logprob: -3.7798197269439697
    3. '()' → logprob: -5.029819488525391
    4. '())
' → logprob: -12.02981948852539
    5. '(' → logprob: -13.15481948852539
    6. '()))' → logprob: -13.65481948852539
    7. ' ())' → logprob: -13.65481948852539
    8. '))' → logprob: -13.90481948852539
    9. ' )' → logprob: -14.52981948852539
    10. '()]' → logprob: -15.77981948852539

Token 243: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6250287294387817
    2. '<|end|>' → logprob: -1.2500287294387817
    3. '       ' → logprob: -2.000028610229492
    4. '        
' → logprob: -4.375028610229492
    5. '\n' → logprob: -4.625028610229492
    6. ' 
' → logprob: -4.750028610229492
    7. '  
' → logprob: -5.375028610229492
    8. '<|end|>' → logprob: -6.625028610229492
    9. '    
' → logprob: -6.750028610229492
    10. ' ' → logprob: -6.750028610229492

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012784861959517002
    2. '        
' → logprob: -5.887784957885742
    3. 'if' → logprob: -6.137784957885742
    4. '        ' → logprob: -6.262784957885742
    5. 'result' → logprob: -6.512784957885742
    6. ' if' → logprob: -6.762784957885742
    7. '   ' → logprob: -7.137784957885742
    8. 'sum' → logprob: -7.887784957885742
    9. '    ' → logprob: -8.012784957885742
    10. 's' → logprob: -8.262784957885742

Token 245: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4587128460407257
    2. 'result' → logprob: -1.9587128162384033
    3. 'res' → logprob: -2.3337128162384033
    4. 'r' → logprob: -2.4587128162384033
    5. 's' → logprob: -4.708713054656982
    6. 'ans' → logprob: -4.958713054656982
    7. '#' (adapté à ' #') → logprob: -5.208713054656982
    8. 'a' → logprob: -5.333713054656982
    9. 'x' → logprob: -5.458713054656982
    10. 'answer' → logprob: -5.833713054656982

Token 246: ' Cal' (ID: 4453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2804661989212036
    2. 'r' → logprob: -2.030466079711914
    3. 'res' → logprob: -3.280466079711914
    4. 'result' → logprob: -3.280466079711914
    5. '#' → logprob: -4.655466079711914
    6. 'a' → logprob: -5.405466079711914
    7. 'y' → logprob: -5.405466079711914
    8. 'x' → logprob: -5.530466079711914
    9. ' if' → logprob: -5.780466079711914
    10. 's' → logprob: -6.405466079711914

Token 247: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.5741551518440247
    2. 'cule' → logprob: -0.9491551518440247
    3. 'c' → logprob: -3.19915509223938
    4. '
' → logprob: -6.199155330657959
    5. '

' → logprob: -6.699155330657959
    6. 'culate' → logprob: -6.824155330657959
    7. '   ' → logprob: -6.949155330657959
    8. ' c' → logprob: -6.949155330657959
    9. '#' → logprob: -7.324155330657959
    10. ' cul' → logprob: -7.824155330657959

Token 248: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.9837737083435059
    2. ' result' → logprob: -2.233773708343506
    3. ' la' → logprob: -2.233773708343506
    4. ' y' → logprob: -2.358773708343506
    5. 'res' → logprob: -2.358773708343506
    6. 'result' → logprob: -2.483773708343506
    7. ' r' → logprob: -2.983773708343506
    8. ' =' → logprob: -3.108773708343506
    9. 'r' → logprob: -3.233773708343506
    10. ' l' → logprob: -3.483773708343506

Token 249: ' reste' (ID: 26769)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2577570676803589
    2. 'r' → logprob: -1.3827570676803589
    3. 'res' → logprob: -1.5077570676803589
    4. 'a' → logprob: -2.2577571868896484
    5. 'y' → logprob: -3.5077571868896484
    6. 'x' → logprob: -4.257757186889648
    7. ' r' → logprob: -4.507757186889648
    8. 'next' → logprob: -4.632757186889648
    9. 'ans' → logprob: -4.882757186889648
    10. 'answer' → logprob: -5.007757186889648

Token 250: ' modulo' (ID: 112372)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5380330085754395
    2. ' de' → logprob: -1.2880330085754395
    3. '=' → logprob: -2.4130330085754395
    4. '%' → logprob: -3.7880330085754395
    5. ' ' → logprob: -4.4130330085754395
    6. ' %' → logprob: -5.5380330085754395
    7. ',' → logprob: -6.0380330085754395
    8. ' %=' → logprob: -6.1630330085754395
    9. 's' → logprob: -7.1630330085754395
    10. ' n' → logprob: -7.1630330085754395

Token 251: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.32212164998054504
    2. 'm' → logprob: -1.3221216201782227
    3. ' x' → logprob: -5.697121620178223
    4. 'x' → logprob: -6.197121620178223
    5. ' ' → logprob: -6.447121620178223
    6. ' n' → logprob: -7.322121620178223
    7. 'D' → logprob: -8.072121620178223
    8. 'n' → logprob: -8.572121620178223
    9. ' D' → logprob: -8.947121620178223
    10. ' (' → logprob: -9.322121620178223

Token 252: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3336911201477051
    2. '=' → logprob: -1.458691120147705
    3. 'x' → logprob: -3.958691120147705
    4. ' x' → logprob: -4.083691120147705
    5. '       ' → logprob: -5.333691120147705
    6. ',' → logprob: -5.708691120147705
    7. ' n' → logprob: -6.583691120147705
    8. '        
' → logprob: -6.708691120147705
    9. 'n' → logprob: -6.833691120147705
    10. '        ' → logprob: -7.583691120147705

Token 253: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6327937245368958
    2. ' x' → logprob: -1.257793664932251
    3. '(x' → logprob: -2.257793664932251
    4. ' (' → logprob: -2.632793664932251
    5. 'pow' → logprob: -6.25779390335083
    6. '(n' → logprob: -6.50779390335083
    7. '((' → logprob: -6.88279390335083
    8. 'n' → logprob: -7.13279390335083
    9. '(' → logprob: -7.25779390335083
    10. ' n' → logprob: -7.63279390335083

Token 254: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7932676076889038
    2. ' D' → logprob: -1.0432676076889038
    3. ' (' → logprob: -3.4182677268981934
    4. '(D' → logprob: -3.5432677268981934
    5. 'element' → logprob: -4.043267726898193
    6. ' élément' → logprob: -4.168267726898193
    7. 'x' → logprob: -4.293267726898193
    8. ' element' → logprob: -4.793267726898193
    9. 'pow' → logprob: -4.793267726898193
    10. ' terme' → logprob: -4.793267726898193

Token 255: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15389592945575714
    2. '[' → logprob: -2.153895854949951
    3. '_i' → logprob: -4.028895854949951
    4. 'i' → logprob: -5.403895854949951
    5. '[n' → logprob: -6.528895854949951
    6. '[_' → logprob: -7.028895854949951
    7. '[x' → logprob: -7.278895854949951
    8. '_' → logprob: -8.77889633178711
    9. '[j' → logprob: -8.90389633178711
    10. '0' → logprob: -9.27889633178711

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03034842573106289
    2. '[i' → logprob: -4.530348300933838
    3. ' ]' → logprob: -4.655348300933838
    4. '])' → logprob: -5.405348300933838
    5. ']%' → logprob: -6.155348300933838
    6. '%' → logprob: -7.280348300933838
    7. '[n' → logprob: -7.530348300933838
    8. ']
' → logprob: -7.655348300933838
    9. '[' → logprob: -8.030348777770996
    10. '   ' → logprob: -8.655348777770996

Token 257: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8999570608139038
    2. '[i' → logprob: -1.6499570608139038
    3. '%' → logprob: -2.3999571800231934
    4. ' %' → logprob: -2.7749571800231934
    5. ' =' → logprob: -2.8999571800231934
    6. ' ' → logprob: -3.0249571800231934
    7. '[n' → logprob: -3.5249571800231934
    8. 'for' → logprob: -3.7749571800231934
    9. '       ' → logprob: -4.149957180023193
    10. ',' → logprob: -4.149957180023193

Token 258: ' stock' (ID: 6546)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4310778379440308
    2. ' accum' → logprob: -1.6810778379440308
    3. ' multipl' → logprob: -1.9310778379440308
    4. ' x' → logprob: -2.5560779571533203
    5. 's' → logprob: -3.1810779571533203
    6. ' sums' → logprob: -3.4310779571533203
    7. ' somme' → logprob: -3.6810779571533203
    8. ' les' → logprob: -3.8060779571533203
    9. ' sum' → logprob: -3.8060779571533203
    10. 'sum' → logprob: -4.05607795715332

Token 259: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5412006974220276
    2. ' =' → logprob: -1.6662006378173828
    3. 'er' → logprob: -2.541200637817383
    4. 'e' → logprob: -3.041200637817383
    5. '   ' → logprob: -3.166200637817383
    6. 'é' → logprob: -3.916200637817383
    7. ' D' → logprob: -4.041200637817383
    8. '=D' → logprob: -5.166200637817383
    9. '       ' → logprob: -5.791200637817383
    10. '[' → logprob: -6.416200637817383

Token 260: ' les' (ID: 1341)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9209315180778503
    2. ' =' → logprob: -1.9209315776824951
    3. ' D' → logprob: -2.295931577682495
    4. 'D' → logprob: -2.420931577682495
    5. '   ' → logprob: -3.545931577682495
    6. '(' → logprob: -3.545931577682495
    7. 's' → logprob: -3.545931577682495
    8. ' (' → logprob: -3.795931577682495
    9. 'd' → logprob: -3.920931577682495
    10. '(D' → logprob: -4.170931339263916

Token 261: ' résultats' (ID: 48985)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.8968085050582886
    2. '_' → logprob: -2.146808624267578
    3. '[i' → logprob: -2.146808624267578
    4. 'r' → logprob: -2.146808624267578
    5. '[' → logprob: -2.271808624267578
    6. 're' → logprob: -2.646808624267578
    7. 'mod' → logprob: -2.771808624267578
    8. '_mod' → logprob: -2.771808624267578
    9. '_d' → logprob: -2.896808624267578
    10. 'rema' → logprob: -4.146808624267578

Token 262: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05875115096569061
    2. '=' → logprob: -3.683751106262207
    3. '       ' → logprob: -4.433751106262207
    4. '_mod' → logprob: -4.933751106262207
    5. 'mod' → logprob: -4.933751106262207
    6. ' modulo' → logprob: -6.183751106262207
    7. '   ' → logprob: -6.433751106262207
    8. ' mod' → logprob: -7.433751106262207
    9. 'd' → logprob: -8.433751106262207
    10. ' D' → logprob: -9.058751106262207

Token 263: ' une' (ID: 2463)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4683998823165894
    2. 'res' → logprob: -1.9683998823165894
    3. 'rem' → logprob: -1.9683998823165894
    4. 'd' → logprob: -2.093400001525879
    5. 're' → logprob: -2.718400001525879
    6. 'mod' → logprob: -2.968400001525879
    7. 'D' → logprob: -3.093400001525879
    8. 'a' → logprob: -3.843400001525879
    9. 'rd' → logprob: -3.843400001525879
    10. 'rema' → logprob: -3.843400001525879

Token 264: ' nouvelle' (ID: 24562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05965817719697952
    2. 'liste' → logprob: -3.1846582889556885
    3. 'lst' → logprob: -4.434658050537109
    4. ' list' → logprob: -6.934658050537109
    5. 'tmp' → logprob: -7.309658050537109
    6. 'new' → logprob: -7.684658050537109
    7. 'mod' → logprob: -7.809658050537109
    8. '[' → logprob: -7.809658050537109
    9. '```' → logprob: -8.05965805053711
    10. 'res' → logprob: -8.30965805053711

Token 265: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.24980656802654266
    2. 'liste' → logprob: -1.999806523323059
    3. ' list' → logprob: -2.9998066425323486
    4. ' liste' → logprob: -3.3748066425323486
    5. '_list' → logprob: -7.3748064041137695
    6. 'lst' → logprob: -8.49980640411377
    7. '[' → logprob: -9.12480640411377
    8. '[]' → logprob: -9.12480640411377
    9. '_' → logprob: -9.37480640411377
    10. 'lista' → logprob: -9.49980640411377

Token 266: ' md' (ID: 17280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04563688114285469
    2. 'mod' → logprob: -4.0456366539001465
    3. ' mod' → logprob: -4.6706366539001465
    4. 'D' → logprob: -5.5456366539001465
    5. 're' → logprob: -6.0456366539001465
    6. 'd' → logprob: -6.0456366539001465
    7. 'r' → logprob: -6.5456366539001465
    8. 'R' → logprob: -7.0456366539001465
    9. ' D' → logprob: -7.0456366539001465
    10. 'mods' → logprob: -7.0456366539001465

Token 267: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03374389931559563
    2. '=' → logprob: -3.4087438583374023
    3. '   ' → logprob: -9.408743858337402
    4. 'md' → logprob: -12.408743858337402
    5. ' ' → logprob: -12.783743858337402
    6. 's' → logprob: -13.033743858337402
    7. '=[' → logprob: -13.283743858337402
    8. '    ' → logprob: -14.033743858337402
    9. ' =[' → logprob: -14.158743858337402
    10. '  ' → logprob: -14.283743858337402

Token 268: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27292510867118835
    2. '=' → logprob: -2.1479251384735107
    3. '       ' → logprob: -2.3979251384735107
    4. 'md' → logprob: -3.7729251384735107
    5. ' md' → logprob: -5.647924900054932
    6. '   ' → logprob: -5.772924900054932
    7. '        
' → logprob: -7.272924900054932
    8. '	md' → logprob: -8.52292537689209
    9. '[' → logprob: -8.89792537689209
    10. '    ' → logprob: -9.39792537689209

Token 269: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' (adapté à ' md') → logprob: -0.38911721110343933
    2. ' md' → logprob: -1.1391172409057617
    3. '       ' → logprob: -6.264117240905762
    4. '   ' → logprob: -8.264117240905762
    5. '	md' → logprob: -10.139117240905762
    6. '.md' → logprob: -10.764117240905762
    7. '    ' → logprob: -12.014117240905762
    8. ' ' → logprob: -12.764117240905762
    9. '        ' → logprob: -13.014117240905762
    10. '_md' → logprob: -13.139117240905762

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022604703903198
    2. ' =' → logprob: -1.9102261066436768
    3. '=[' → logprob: -14.785225868225098
    4. ',' → logprob: -15.160225868225098
    5. '[' → logprob: -15.285225868225098
    6. ' =[' → logprob: -15.535225868225098
    7. '=[]' → logprob: -15.535225868225098
    8. '＝' → logprob: -15.910225868225098
    9. ')' → logprob: -15.910225868225098
    10. ' ' → logprob: -16.160226821899414

Token 271: ' [' (ID: 723)
  Prédit: '[D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -1.060807704925537
    2. '[' → logprob: -1.560807704925537
    3. '[list' → logprob: -2.060807704925537
    4. '[i' → logprob: -2.060807704925537
    5. '[m' → logprob: -2.310807704925537
    6. ' [' → logprob: -3.060807704925537
    7. '[d' → logprob: -3.310807704925537
    8. '[(' → logprob: -6.060807704925537
    9. '[x' → logprob: -6.935807704925537
    10. '[n' → logprob: -7.560807704925537

Token 272: 'D' (ID: 35)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005917420145124197
    2. '(d' → logprob: -5.255917549133301
    3. 'di' → logprob: -7.505917549133301
    4. ' d' → logprob: -9.6309175491333
    5. 'D' → logprob: -10.2559175491333
    6. '(di' → logprob: -10.8809175491333
    7. '((' → logprob: -13.2559175491333
    8. 'Di' → logprob: -13.3809175491333
    9. '(D' → logprob: -13.5059175491333
    10. 'val' → logprob: -13.7559175491333

Token 273: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001833442016504705
    2. 'i' → logprob: -6.501833438873291
    3. '_i' → logprob: -8.12683391571045
    4. '[' → logprob: -11.75183391571045
    5. ']' → logprob: -12.25183391571045
    6. ' [' → logprob: -12.37683391571045
    7. '[j' → logprob: -13.00183391571045
    8. '[_' → logprob: -13.12683391571045
    9. '
' → logprob: -13.37683391571045
    10. '%' → logprob: -13.75183391571045

Token 274: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005033678840845823
    2. ']%' → logprob: -5.380033493041992
    3. '%' → logprob: -8.255033493041992
    4. '%i' → logprob: -9.505033493041992
    5. ' %' → logprob: -10.380033493041992
    6. ' ]' → logprob: -11.005033493041992
    7. ']
' → logprob: -11.755033493041992
    8. '%m' → logprob: -12.505033493041992
    9. ' ' → logprob: -12.630033493041992
    10. ' ' → logprob: -12.880033493041992

Token 275: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47022950649261475
    2. ' %' → logprob: -1.0952295064926147
    3. '%i' → logprob: -3.4702296257019043
    4. '%m' → logprob: -5.095229625701904
    5. ']' → logprob: -6.595229625701904
    6. '%d' → logprob: -6.970229625701904
    7. '%n' → logprob: -7.470229625701904
    8. ' ' → logprob: -9.095229148864746
    9. '%c' → logprob: -9.595229148864746
    10. '%s' → logprob: -9.595229148864746

Token 276: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.061967913061380386
    2. ' m' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.936967849731445
    4. '	m' → logprob: -16.311967849731445
    5. ' м' → logprob: -18.436967849731445
    6. '   ' → logprob: -18.686967849731445
    7. '  ' → logprob: -19.811967849731445
    8. ')m' → logprob: -19.936967849731445
    9. '%m' → logprob: -19.936967849731445
    10. '#m' → logprob: -19.936967849731445

Token 277: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3871445953845978
    2. 'for' → logprob: -1.1371445655822754
    3. ' ' → logprob: -8.512145042419434
    4. '   ' → logprob: -10.387145042419434
    5. '	for' → logprob: -10.637145042419434
    6. ']' → logprob: -12.137145042419434
    7. '  ' → logprob: -12.387145042419434
    8. '    ' → logprob: -13.012145042419434
    9. ')' → logprob: -13.262145042419434
    10. ' ' → logprob: -13.887145042419434

Token 278: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2332083284854889
    2. 'i' → logprob: -1.9832082986831665
    3. ' range' → logprob: -2.733208417892456
    4. 'range' → logprob: -5.233208179473877
    5. ' ' → logprob: -10.358208656311035
    6. '  ' → logprob: -12.733208656311035
    7. '	i' → logprob: -14.233208656311035
    8. ' ' → logprob: -14.358208656311035
    9. '   ' → logprob: -14.733208656311035
    10. ']' → logprob: -14.733208656311035

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16551907360553741
    2. 'in' → logprob: -2.5405189990997314
    3. ' range' → logprob: -3.0405189990997314
    4. 'range' → logprob: -3.6655189990997314
    5. ' ' → logprob: -8.165518760681152
    6. '  ' → logprob: -11.915518760681152
    7. ' i' → logprob: -12.040518760681152
    8. '	range' → logprob: -12.165518760681152
    9. '(range' → logprob: -12.665518760681152
    10. ']' → logprob: -12.665518760681152

Token 280: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061968810856342316
    2. ' range' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.436968803405762
    4. '	range' → logprob: -14.936968803405762
    5. '(range' → logprob: -16.311969757080078
    6. '   ' → logprob: -16.686969757080078
    7. '  ' → logprob: -17.436969757080078
    8. '
' → logprob: -17.936969757080078
    9. 'rang' → logprob: -18.311969757080078
    10. ']' → logprob: -19.061969757080078

Token 281: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.00046546570956707
    2. '(' → logprob: -8.250465393066406
    3. 'K' → logprob: -9.125465393066406
    4. '(len' → logprob: -9.375465393066406
    5. ' (' → logprob: -12.375465393066406
    6. ' K' → logprob: -13.000465393066406
    7. '(k' → logprob: -13.250465393066406
    8. '(
' → logprob: -13.750465393066406
    9. '   ' → logprob: -14.875465393066406
    10. '	K' → logprob: -15.000465393066406

Token 282: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012797261297237128
    2. ']' → logprob: -9.250127792358398
    3. ' )' → logprob: -11.250127792358398
    4. ')' → logprob: -11.375127792358398
    5. ' ]' → logprob: -12.125127792358398
    6. ')]
' → logprob: -13.875127792358398
    7. '   ' → logprob: -15.375127792358398
    8. '       ' → logprob: -16.0001277923584
    9. '}]' → logprob: -16.2501277923584
    10. ']]' → logprob: -16.2501277923584

Token 283: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5446553826332092
    2. '<|end|>' → logprob: -1.1696553230285645
    3. ' ' → logprob: -2.7946553230285645
    4. '
' → logprob: -4.1696553230285645
    5. '        ' → logprob: -4.4196553230285645
    6. '        
' → logprob: -4.5446553230285645
    7. '[' → logprob: -6.1696553230285645
    8. '   ' → logprob: -6.7946553230285645
    9. '<|end|>' → logprob: -6.9196553230285645
    10. '    ' → logprob: -7.0446553230285645

Token 285: ' sm' (ID: 1765)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5392825603485107
    2. '       ' → logprob: -1.5392825603485107
    3. 'sum' → logprob: -1.5392825603485107
    4. 'x' → logprob: -2.7892825603485107
    5. 'res' → logprob: -2.9142825603485107
    6. 'result' → logprob: -3.0392825603485107
    7. '        
' → logprob: -3.2892825603485107
    8. 'y' → logprob: -3.9142825603485107
    9. 'mod' → logprob: -4.03928279876709
    10. 'total' → logprob: -4.03928279876709

Token 286: 'da' (ID: 2529)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08919823169708252
    2. ' =' → logprob: -2.464198112487793
    3. 'a' → logprob: -10.089198112487793
    4. ',' → logprob: -10.214198112487793
    5. 'o' → logprob: -10.214198112487793
    6. '=sum' → logprob: -10.464198112487793
    7. '  ' → logprob: -10.714198112487793
    8. '   ' → logprob: -11.089198112487793
    9. '=[]' → logprob: -11.089198112487793
    10. ' ' → logprob: -11.214198112487793

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43076425790786743
    2. ' =' → logprob: -1.0557641983032227
    3. '=sum' → logprob: -7.180764198303223
    4. 'x' → logprob: -7.805764198303223
    5. 'p' → logprob: -7.805764198303223
    6. ',' → logprob: -8.930764198303223
    7. ' ' → logprob: -9.930764198303223
    8. 's' → logprob: -9.930764198303223
    9. 'sum' → logprob: -10.180764198303223
    10. 'r' → logprob: -10.430764198303223

Token 288: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4610592722892761
    2. ' x' → logprob: -1.961059331893921
    3. 'x' → logprob: -2.211059331893921
    4. ' ' → logprob: -2.711059331893921
    5. 'sum' → logprob: -4.211059093475342
    6. ' sum' → logprob: -4.211059093475342
    7. ' (' → logprob: -4.836059093475342
    8. ' [' → logprob: -5.211059093475342
    9. '(x' → logprob: -5.961059093475342
    10. '[x' → logprob: -5.961059093475342

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4246218502521515
    2. 'sum' → logprob: -1.174621820449829
    3. 'x' → logprob: -4.424622058868408
    4. ' sum' → logprob: -4.674622058868408
    5. '[' → logprob: -5.049622058868408
    6. '[x' → logprob: -5.674622058868408
    7. '(sum' → logprob: -6.424622058868408
    8. ' ' → logprob: -6.924622058868408
    9. ' [' → logprob: -7.299622058868408
    10. '[m' → logprob: -7.549622058868408

Token 290: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' Initial' (ID: 9209)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.188589408993721
    2. ' sm' → logprob: -2.563589334487915
    3. 'sm' → logprob: -3.563589334487915
    4. ' ' → logprob: -3.938589334487915
    5. 'sum' → logprob: -3.938589334487915
    6. 'for' → logprob: -4.313589572906494
    7. ' for' → logprob: -4.813589572906494
    8. ' sum' → logprob: -6.063589572906494
    9. 's' → logprob: -7.313589572906494
    10. '1' → logprob: -7.438589572906494

Token 293: 'isation' (ID: 6993)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5975805521011353
    2. 'isé' → logprob: -1.8475805521011353
    3. 'ize' → logprob: -2.2225804328918457
    4. 'ise' → logprob: -2.9725804328918457
    5. 'iser' → logprob: -3.2225804328918457
    6. 'is' → logprob: -3.9725804328918457
    7. 'se' → logprob: -4.347580432891846
    8. 'sm' → logprob: -4.597580432891846
    9. 'ized' → logprob: -4.972580432891846
    10. 'isée' → logprob: -5.597580432891846

Token 294: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9429323673248291
    2. 'u' → logprob: -1.317932367324829
    3. 'a' → logprob: -1.442932367324829
    4. ' la' → logprob: -2.692932367324829
    5. 'l' → logprob: -4.44293212890625
    6. '<|end|>' → logprob: -5.31793212890625
    7. ' l' → logprob: -5.69293212890625
    8. 's' → logprob: -5.81793212890625
    9. 'une' → logprob: -6.19293212890625
    10. 'la' → logprob: -6.69293212890625

Token 296: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.24003657698631287
    2. 's' → logprob: -1.6150366067886353
    3. 'sum' → logprob: -4.990036487579346
    4. 'som' → logprob: -5.865036487579346
    5. ' variable' → logprob: -6.115036487579346
    6. 'var' → logprob: -7.365036487579346
    7. '=' → logprob: -7.990036487579346
    8. 'acc' → logprob: -7.990036487579346
    9. 'int' → logprob: -8.115036964416504
    10. ' somme' → logprob: -9.115036964416504

Token 297: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: ' stock' (ID: 6546)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0674033910036087
    2. ' accum' → logprob: -3.1924033164978027
    3. 's' → logprob: -5.067403316497803
    4. ' acum' → logprob: -5.567403316497803
    5. ' accumulator' → logprob: -5.692403316497803
    6. ' accumulate' → logprob: -6.442403316497803
    7. 'l' → logprob: -6.692403316497803
    8. 'stock' → logprob: -7.067403316497803
    9. 'som' → logprob: -7.192403316497803
    10. ' stock' → logprob: -7.192403316497803

Token 299: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05418533459305763
    2. 'uler' → logprob: -3.054185390472412
    3. 'urer' → logprob: -5.679185390472412
    4. 'érer' → logprob: -6.304185390472412
    5. 'uer' → logprob: -9.179184913635254
    6. 'e' → logprob: -9.179184913635254
    7. 'erer' → logprob: -10.679184913635254
    8. 'u' → logprob: -10.804184913635254
    9. 'eur' → logprob: -11.429184913635254
    10. 'iner' → logprob: -11.429184913635254

Token 300: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.33343449234962463
    2. 'la' → logprob: -1.4584344625473022
    3. 's' → logprob: -4.083434581756592
    4. 'l' → logprob: -4.583434581756592
    5. ' le' → logprob: -4.833434581756592
    6. 'le' → logprob: -5.083434581756592
    7. 'sum' → logprob: -5.958434581756592
    8. ' ' → logprob: -6.083434581756592
    9. ' ' → logprob: -6.708434581756592
    10. 'sm' → logprob: -7.583434581756592

Token 301: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05446907505393028
    2. 'sum' → logprob: -3.554469108581543
    3. 'som' → logprob: -4.679469108581543
    4. 'm' → logprob: -4.929469108581543
    5. ' somme' → logprob: -5.804469108581543
    6. '0' → logprob: -6.679469108581543
    7. 'result' → logprob: -7.429469108581543
    8. 'mod' → logprob: -8.304469108581543
    9. 'sm' → logprob: -8.304469108581543
    10. ' som' → logprob: -8.304469108581543

Token 302: ' des' (ID: 731)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.22161473333835602
    2. '       ' → logprob: -3.2216148376464844
    3. 'mod' → logprob: -3.4716148376464844
    4. 'des' → logprob: -3.7216148376464844
    5. '<|end|>' → logprob: -4.221614837646484
    6. ' md' → logprob: -4.471614837646484
    7. ' des' → logprob: -4.596614837646484
    8. 's' → logprob: -4.721614837646484
    9. ' =' → logprob: -5.346614837646484
    10. '=' → logprob: -5.346614837646484

Token 303: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.048235852271318436
    2. '(md' → logprob: -3.6732358932495117
    3. ' md' → logprob: -4.048235893249512
    4. ' (' → logprob: -7.298235893249512
    5. 'multip' → logprob: -7.423235893249512
    6. '(m' → logprob: -7.923235893249512
    7. 'm' → logprob: -8.048235893249512
    8. 's' → logprob: -8.173235893249512
    9. '(' → logprob: -8.173235893249512
    10. 'mod' → logprob: -8.298235893249512

Token 304: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.915483295917511
    2. ' =' → logprob: -1.1654832363128662
    3. 'for' → logprob: -1.7904832363128662
    4. ' +=' → logprob: -3.415483236312866
    5. '+=' → logprob: -3.415483236312866
    6. ' for' → logprob: -4.290483474731445
    7. '<|end|>' → logprob: -4.790483474731445
    8. 'sum' → logprob: -5.540483474731445
    9. ' ' → logprob: -5.665483474731445
    10. '[:]' → logprob: -5.915483474731445

Token 305: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06610337644815445
    2. ' ]' → logprob: -2.941103458404541
    3. 's' → logprob: -5.691103458404541
    4. '])' → logprob: -6.191103458404541
    5. ')' → logprob: -6.691103458404541
    6. ']+' → logprob: -7.941103458404541
    7. ' *' → logprob: -8.066102981567383
    8. '   ' → logprob: -8.066102981567383
    9. ']
' → logprob: -8.066102981567383
    10. ' )' → logprob: -8.316102981567383

Token 306: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.086733877658844
    2. ' i' → logprob: -2.961733818054199
    3. 'l' → logprob: -4.586733818054199
    4. '_i' → logprob: -5.461733818054199
    5. '_' → logprob: -5.711733818054199
    6. 'la' → logprob: -6.086733818054199
    7. '(i' → logprob: -6.336733818054199
    8. ' la' → logprob: -7.086733818054199
    9. ')' → logprob: -7.211733818054199
    10. 'range' → logprob: -7.336733818054199

Token 308: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6498855352401733
    2. ' in' → logprob: -1.0248855352401733
    3. ' =' → logprob: -2.774885654449463
    4. ' <' → logprob: -3.899885654449463
    5. 'range' → logprob: -4.399885654449463
    6. ' range' → logprob: -4.524885654449463
    7. '<' → logprob: -5.774885654449463
    8. 'in' → logprob: -6.149885654449463
    9. 'for' → logprob: -7.149885654449463
    10. ' for' → logprob: -7.149885654449463

Token 309: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011144738644361496
    2. ' range' → logprob: -4.511144638061523
    3. '	range' → logprob: -10.011144638061523
    4. 'ra' → logprob: -11.011144638061523
    5. '(range' → logprob: -11.511144638061523
    6. 'r' → logprob: -12.261144638061523
    7. 'md' → logprob: -12.386144638061523
    8. '[' → logprob: -12.386144638061523
    9. '   ' → logprob: -12.886144638061523
    10. 'rang' → logprob: -13.011144638061523

Token 310: ' première' (ID: 23423)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067568132653832436
    2. ' range' → logprob: -5.006756782531738
    3. 'r' → logprob: -11.381756782531738
    4. '	range' → logprob: -11.756756782531738
    5. '
' → logprob: -11.881756782531738
    6. '(range' → logprob: -12.006756782531738
    7. '   ' → logprob: -12.881756782531738
    8. 'ra' → logprob: -13.631756782531738
    9. '[' → logprob: -13.631756782531738
    10. 'rang' → logprob: -14.131756782531738

Token 311: ' partie' (ID: 22139)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2276289016008377
    2. 'K' → logprob: -2.2276289463043213
    3. 'min' → logprob: -3.4776289463043213
    4. '(n' → logprob: -3.8526289463043213
    5. ' n' → logprob: -4.602628707885742
    6. 'm' → logprob: -4.977628707885742
    7. ' (' → logprob: -5.102628707885742
    8. ' K' → logprob: -5.227628707885742
    9. 'x' → logprob: -5.852628707885742
    10. ' min' → logprob: -6.352628707885742

Token 312: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7439275979995728
    2. '<|end|>' → logprob: -1.7439275979995728
    3. ' range' → logprob: -2.618927478790283
    4. 'K' → logprob: -3.368927478790283
    5. ' K' → logprob: -3.368927478790283
    6. '   ' → logprob: -3.493927478790283
    7. '       ' → logprob: -3.493927478790283
    8. ' of' → logprob: -3.743927478790283
    9. '(range' → logprob: -3.743927478790283
    10. 's' → logprob: -3.868927478790283

Token 313: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8890140056610107
    2. 'range' → logprob: -1.1390140056610107
    3. ' n' → logprob: -1.7640140056610107
    4. ' range' → logprob: -2.3890140056610107
    5. '<|end|>' → logprob: -6.13901424407959
    6. ' K' → logprob: -6.88901424407959
    7. ' ' → logprob: -7.88901424407959
    8. ' la' → logprob: -8.13901424407959
    9. 'the' → logprob: -8.13901424407959
    10. 'K' → logprob: -8.13901424407959

Token 314: ' boucle' (ID: 174211)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2728813588619232
    2. ' boucle' → logprob: -1.6478813886642456
    3. 'bou' → logprob: -3.772881269454956
    4. 'for' → logprob: -4.647881507873535
    5. 'sequence' → logprob: -5.397881507873535
    6. 'loop' → logprob: -6.272881507873535
    7. 'liste' → logprob: -6.272881507873535
    8. 's' → logprob: -6.522881507873535
    9. 'pl' → logprob: -7.022881507873535
    10. ' range' → logprob: -7.397881507873535

Token 315: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: 'voir' (ID: 8991)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007405250333249569
    2. ' range' → logprob: -5.1324052810668945
    3. ')' → logprob: -7.0074052810668945
    4. '(range' → logprob: -8.382405281066895
    5. 'md' → logprob: -8.507405281066895
    6. '   ' → logprob: -10.382405281066895
    7. 'K' → logprob: -10.757405281066895
    8. 'r' → logprob: -11.132405281066895
    9. '	range' → logprob: -11.507405281066895
    10. 'n' → logprob: -11.757405281066895

Token 317: ' plus' (ID: 2932)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2319047451019287
    2. 'le' → logprob: -1.3569047451019287
    3. 'range' → logprob: -1.6069047451019287
    4. 'comment' → logprob: -1.8569047451019287
    5. 'suite' → logprob: -3.8569047451019287
    6. ' la' → logprob: -4.231904983520508
    7. 'l' → logprob: -4.481904983520508
    8. ' range' → logprob: -4.606904983520508
    9. 'code' → logprob: -4.731904983520508
    10. '#' → logprob: -5.106904983520508

Token 318: ' loin' (ID: 40875)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.285270094871521
    2. ':' → logprob: -1.660270094871521
    3. 'range' → logprob: -1.785270094871521
    4. '       ' → logprob: -3.1602702140808105
    5. '+' → logprob: -3.2852702140808105
    6. ']' → logprob: -3.2852702140808105
    7. ' range' → logprob: -3.2852702140808105
    8. 'K' → logprob: -3.6602702140808105
    9. 'ieurs' → logprob: -3.6602702140808105
    10. '=' → logprob: -3.9102702140808105

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02152848243713379
    2. ' )' → logprob: -4.271528244018555
    3. '<|end|>' → logprob: -5.146528244018555
    4. ')
' → logprob: -8.021528244018555
    5. ' ' → logprob: -8.396528244018555
    6. ' ' → logprob: -8.521528244018555
    7. '
' → logprob: -9.271528244018555
    8. ',' → logprob: -9.271528244018555
    9. '<|end|>' → logprob: -9.521528244018555
    10. '),' → logprob: -9.646528244018555

Token 320: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6278793215751648
    2. '<|end|>' → logprob: -1.5028793811798096
    3. '        
' → logprob: -2.5028793811798096
    4. '       ' → logprob: -2.8778793811798096
    5. ' 
' → logprob: -3.6278793811798096
    6. ' ' → logprob: -3.6278793811798096
    7. '  
' → logprob: -3.8778793811798096
    8. '    
' → logprob: -4.6278791427612305
    9. '        ' → logprob: -5.0028791427612305
    10. '\n' → logprob: -6.3778791427612305

Token 321: ' m' (ID: 284)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.4361717700958252
    2. 's' → logprob: -2.436171770095825
    3. '       ' → logprob: -2.436171770095825
    4. 'i' → logprob: -2.561171770095825
    5. 'for' → logprob: -3.061171770095825
    6. 'sm' → logprob: -3.061171770095825
    7. ' s' → logprob: -3.186171770095825
    8. ' for' → logprob: -3.186171770095825
    9. ' sm' → logprob: -3.436171770095825
    10. ' sum' → logprob: -3.436171770095825

Token 322: 'da' (ID: 2529)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4813250303268433
    2. 'a' → logprob: -1.9813250303268433
    3. 'x' → logprob: -2.231325149536133
    4. 'ax' → logprob: -2.231325149536133
    5. 'ult' → logprob: -2.981325149536133
    6. 'od' → logprob: -3.106325149536133
    7. 's' → logprob: -3.356325149536133
    8. 'ul' → logprob: -3.356325149536133
    9. 'p' → logprob: -3.606325149536133
    10. 'sum' → logprob: -3.856325149536133

Token 323: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3296321630477905
    2. '=' → logprob: -1.7046321630477905
    3. 'x' → logprob: -2.32963228225708
    4. 'p' → logprob: -7.20463228225708
    5. 's' → logprob: -8.204631805419922
    6. ' ' → logprob: -8.579631805419922
    7. 'a' → logprob: -9.579631805419922
    8. '   ' → logprob: -9.704631805419922
    9. '  ' → logprob: -9.829631805419922
    10. 'sum' → logprob: -10.329631805419922

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05606136843562126
    2. '=' → logprob: -2.931061267852783
    3. '0' → logprob: -7.181061267852783
    4. ' ' → logprob: -8.931061744689941
    5. 'x' → logprob: -9.306061744689941
    6. 'a' → logprob: -9.806061744689941
    7. ',' → logprob: -10.181061744689941
    8. '_sum' → logprob: -10.806061744689941
    9. 'sum' → logprob: -10.806061744689941
    10. ' +=' → logprob: -11.556061744689941

Token 325: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7527711987495422
    2. 'md' → logprob: -0.8777711987495422
    3. ' md' → logprob: -2.7527711391448975
    4. ' ' → logprob: -4.377771377563477
    5. '(md' → logprob: -4.502771377563477
    6. 'm' → logprob: -5.127771377563477
    7. ' (' → logprob: -5.752771377563477
    8. 'sum' → logprob: -6.127771377563477
    9. '[' → logprob: -6.127771377563477
    10. '(' → logprob: -6.127771377563477

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4944821894168854
    2. 'md' → logprob: -0.994482159614563
    3. ' md' → logprob: -5.494482040405273
    4. '(md' → logprob: -5.494482040405273
    5. 'x' → logprob: -5.994482040405273
    6. 'sum' → logprob: -6.119482040405273
    7. '[' → logprob: -6.494482040405273
    8. 'm' → logprob: -6.619482040405273
    9. ' ' → logprob: -6.994482040405273
    10. '(' → logprob: -7.119482040405273

Token 327: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2112513780593872
    2. ' ' → logprob: -1.5862513780593872
    3. 'md' → logprob: -1.5862513780593872
    4. '#' → logprob: -2.3362512588500977
    5. '0' → logprob: -2.5862512588500977
    6. ' for' → logprob: -3.3362512588500977
    7. '<|end|>' → logprob: -3.9612512588500977
    8. ' md' → logprob: -4.086251258850098
    9. ' #' → logprob: -4.461251258850098
    10. '  ' → logprob: -4.836251258850098

Token 330: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47306692600250244
    2. '<|end|>' → logprob: -1.5980669260025024
    3. ' ' → logprob: -3.098066806793213
    4. 'd' → logprob: -3.598066806793213
    5. 'm' → logprob: -3.973066806793213
    6. ' la' → logprob: -4.473066806793213
    7. '=' → logprob: -4.598066806793213
    8. ' =' → logprob: -5.098066806793213
    9. 'e' → logprob: -5.223066806793213
    10. ' a' → logprob: -5.473066806793213

Token 331: ' compteur' (ID: 163344)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7139650583267212
    2. 'md' → logprob: -1.0889650583267212
    3. 'm' → logprob: -3.0889649391174316
    4. 'i' → logprob: -3.2139649391174316
    5. 's' → logprob: -3.7139649391174316
    6. 'mod' → logprob: -4.213964939117432
    7. 'sum' → logprob: -4.588964939117432
    8. 'acc' → logprob: -4.963964939117432
    9. ' md' → logprob: -5.088964939117432
    10. 'sm' → logprob: -5.713964939117432

Token 332: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5200462341308594
    2. '	' → logprob: -2.1450462341308594
    3. 'for' → logprob: -2.1450462341308594
    4. ' =' → logprob: -2.2700462341308594
    5. '<|end|>' → logprob: -2.3950462341308594
    6. '=' → logprob: -2.5200462341308594
    7. '	for' → logprob: -3.1450462341308594
    8. 'd' → logprob: -3.3950462341308594
    9. ' ' → logprob: -3.3950462341308594
    10. '    ' → logprob: -4.145046234130859

Token 333: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.752743661403656
    2. 'i' → logprob: -1.3777437210083008
    3. 'a' → logprob: -2.502743721008301
    4. 'md' → logprob: -3.127743721008301
    5. 'ans' → logprob: -3.377743721008301
    6. 'es' → logprob: -3.377743721008301
    7. 'u' → logprob: -3.877743721008301
    8. 's' → logprob: -4.127743721008301
    9. '0' → logprob: -5.502743721008301
    10. 'istance' → logprob: -5.752743721008301

Token 334: 'élé' (ID: 15228)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.2724839448928833
    2. 'i' → logprob: -3.1474838256835938
    3. 'a' → logprob: -3.3974838256835938
    4. 'ans' → logprob: -4.147483825683594
    5. 'es' → logprob: -4.147483825683594
    6. 'e' → logprob: -4.272483825683594
    7. 'occur' → logprob: -4.397483825683594
    8. '0' → logprob: -4.647483825683594
    9. ''' → logprob: -4.647483825683594
    10. ''une' → logprob: -5.022483825683594

Token 335: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.023398632183670998
    2. 'ment' → logprob: -3.7733986377716064
    3. 'm' → logprob: -10.773398399353027
    4. 'i' → logprob: -11.023398399353027
    5. '```' → logprob: -11.023398399353027
    6. 'me' → logprob: -11.273398399353027
    7. 'mente' → logprob: -11.398398399353027
    8. 'ements' → logprob: -11.523398399353027
    9. 'mentation' → logprob: -11.523398399353027
    10. 'men' → logprob: -11.648398399353027

Token 336: ' md' (ID: 17280)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: '[i' (ID: 1768)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.2758175134658813
    2. '=' → logprob: -1.9008175134658813
    3. '[' → logprob: -2.025817394256592
    4. ' =' → logprob: -2.525817394256592
    5. '[i' → logprob: -2.525817394256592
    6. ' %' → logprob: -2.650817394256592
    7. ' for' → logprob: -3.150817394256592
    8. 'for' → logprob: -3.275817394256592
    9. '[]' → logprob: -4.025817394256592
    10. ' +=' → logprob: -4.525817394256592

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013929477892816067
    2. 'dans' → logprob: -6.26392936706543
    3. ' ]' → logprob: -6.38892936706543
    4. ']=' → logprob: -6.51392936706543
    5. ' pour' → logprob: -6.76392936706543
    6. ')' → logprob: -6.88892936706543
    7. '])' → logprob: -7.01392936706543
    8. '%' → logprob: -7.13892936706543
    9. ']+=' → logprob: -7.13892936706543
    10. ' dans' → logprob: -7.38892936706543

Token 339: ' qui' (ID: 2780)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 340: ' valent' (ID: 148217)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.2021052837371826
    2. '<' → logprob: -1.3271052837371826
    3. '<=' → logprob: -1.9521052837371826
    4. 's' → logprob: -2.7021052837371826
    5. ' sont' → logprob: -3.0771052837371826
    6. 'ont' → logprob: -3.0771052837371826
    7. '==' → logprob: -3.2021052837371826
    8. '>=' → logprob: -3.4521052837371826
    9. ' <=' → logprob: -3.9521052837371826
    10. '=' → logprob: -4.952105522155762

Token 341: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17015938460826874
    2. 'm' → logprob: -2.670159339904785
    3. ' ' → logprob: -3.170159339904785
    4. ' m' → logprob: -3.295159339904785
    5. 'md' → logprob: -5.545159339904785
    6. ' md' → logprob: -6.295159339904785
    7. '1' → logprob: -7.670159339904785
    8. ' zero' → logprob: -7.795159339904785
    9. 'zero' → logprob: -8.545159339904785
    10. '=' → logprob: -8.670159339904785

Token 342: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1250307410955429
    2. '       ' → logprob: -2.625030755996704
    3. '<|end|>' → logprob: -3.625030755996704
    4. '        
' → logprob: -4.750030517578125
    5. '    
' → logprob: -5.625030517578125
    6. '  
' → logprob: -6.375030517578125
    7. '   ' → logprob: -7.000030517578125
    8. ' for' → logprob: -7.375030517578125
    9. '		
' → logprob: -7.750030517578125
    10. ' 
' → logprob: -7.750030517578125

Token 343: ' la' (ID: 557)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.009897744283080101
    2. ' md' → logprob: -4.759897708892822
    3. 'la' → logprob: -7.509897708892822
    4. 'range' → logprob: -7.884897708892822
    5. ' la' → logprob: -8.75989818572998
    6. ' range' → logprob: -10.00989818572998
    7. '(md' → logprob: -10.50989818572998
    8. 'l' → logprob: -10.63489818572998
    9. '[' → logprob: -10.75989818572998
    10. '   ' → logprob: -11.00989818572998

Token 344: ' même' (ID: 9679)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.05685419961810112
    2. 'range' → logprob: -3.181854248046875
    3. ' md' → logprob: -5.431854248046875
    4. 'prem' → logprob: -5.556854248046875
    5. 'for' → logprob: -5.806854248046875
    6. 'first' → logprob: -6.556854248046875
    7. ' range' → logprob: -7.681854248046875
    8. ' first' → logprob: -8.806854248046875
    9. ' for' → logprob: -8.931854248046875
    10. ' première' → logprob: -9.681854248046875

Token 345: ' partie' (ID: 22139)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41513434052467346
    2. 'for' → logprob: -2.2901344299316406
    3. 'part' → logprob: -2.2901344299316406
    4. ' partie' → logprob: -3.6651344299316406
    5. ' range' → logprob: -4.290134429931641
    6. 'portion' → logprob: -4.540134429931641
    7. '    
' → logprob: -4.540134429931641
    8. 'md' → logprob: -4.540134429931641
    9. ' part' → logprob: -4.665134429931641
    10. '   ' → logprob: -4.665134429931641

Token 346: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9897903800010681
    2. '<|end|>' → logprob: -1.114790439605713
    3. '    
' → logprob: -1.614790439605713
    4. '        
' → logprob: -3.489790439605713
    5. '       ' → logprob: -3.739790439605713
    6. '  
' → logprob: -4.489790439605713
    7. '   ' → logprob: -4.614790439605713
    8. '    ' → logprob: -5.114790439605713
    9. ' 
' → logprob: -5.614790439605713
    10. ' ' → logprob: -5.989790439605713

Token 347: '       ' (ID: 309)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.7533497214317322
    2. '       ' → logprob: -0.8783497214317322
    3. '<|end|>' → logprob: -2.503349781036377
    4. '    
' → logprob: -4.628349781036377
    5. '		
' → logprob: -5.003349781036377
    6. '   ' → logprob: -5.503349781036377
    7. '<|end|>' → logprob: -5.503349781036377
    8. '
' → logprob: -6.878349781036377
    9. '    ' → logprob: -7.128349781036377
    10. '        
        
' → logprob: -7.128349781036377

Token 348: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34224075078964233
    2. 'i' → logprob: -2.342240810394287
    3. '       ' → logprob: -2.717240810394287
    4. '#' (adapté à ' #') → logprob: -4.092240810394287
    5. 'cycle' → logprob: -4.092240810394287
    6. 'if' → logprob: -4.342240810394287
    7. 'full' → logprob: -4.342240810394287
    8. 'cnt' → logprob: -4.467240810394287
    9. 'r' → logprob: -4.967240810394287
    10. 'a' → logprob: -5.217240810394287

Token 349: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024676835164427757
    2. 'i' → logprob: -4.52467679977417
    3. '#' → logprob: -5.89967679977417
    4. 'md' → logprob: -6.64967679977417
    5. ' for' → logprob: -6.77467679977417
    6. 'cnt' → logprob: -6.89967679977417
    7. 's' → logprob: -7.52467679977417
    8. 'j' → logprob: -7.64967679977417
    9. 'sum' → logprob: -7.64967679977417
    10. 'idx' → logprob: -7.64967679977417

Token 350: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -5.5027299822540954e-05
    2. 'cles' → logprob: -10.875055313110352
    3. '   ' → logprob: -11.000055313110352
    4. 'c' → logprob: -11.625055313110352
    5. '       ' → logprob: -13.125055313110352
    6. 'le' → logprob: -13.375055313110352
    7. 'kle' → logprob: -13.750055313110352
    8. '#' → logprob: -13.875055313110352
    9. 'cler' → logprob: -14.250055313110352
    10. 'clé' → logprob: -14.250055313110352

Token 351: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39178499579429626
    2. ' for' → logprob: -1.1417850255966187
    3. '   ' → logprob: -5.891785144805908
    4. '       ' → logprob: -6.641785144805908
    5. ' i' → logprob: -7.891785144805908
    6. 'i' → logprob: -8.76678466796875
    7. 'range' → logprob: -9.64178466796875
    8. '(' → logprob: -10.26678466796875
    9. '	for' → logprob: -10.39178466796875
    10. '(i' → logprob: -10.39178466796875

Token 352: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07816529273986816
    2. 'i' → logprob: -3.328165292739868
    3. ' range' → logprob: -3.453165292739868
    4. 'md' → logprob: -5.828165054321289
    5. ' i' → logprob: -5.953165054321289
    6. '_' → logprob: -7.203165054321289
    7. 'K' → logprob: -7.828165054321289
    8. ' md' → logprob: -8.578165054321289
    9. ' ' → logprob: -9.203165054321289
    10. 'r' → logprob: -9.328165054321289

Token 353: ' éléments' (ID: 57375)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09006813913583755
    2. 'i' → logprob: -3.4650681018829346
    3. 'md' → logprob: -3.7150681018829346
    4. ' range' → logprob: -3.7150681018829346
    5. 'K' → logprob: -5.840068340301514
    6. '_' → logprob: -6.465068340301514
    7. 'r' → logprob: -7.965068340301514
    8. ' md' → logprob: -8.340067863464355
    9. 'k' → logprob: -8.590067863464355
    10. ' i' → logprob: -8.590067863464355

Token 354: ' md' (ID: 17280)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7676928043365479
    2. '       ' → logprob: -1.3926928043365479
    3. ' for' → logprob: -1.3926928043365479
    4. 'range' → logprob: -4.142692565917969
    5. '<|end|>' → logprob: -5.392692565917969
    6. ' range' → logprob: -5.517692565917969
    7. ' i' → logprob: -5.642692565917969
    8. '   ' → logprob: -5.892692565917969
    9. 'i' → logprob: -6.142692565917969
    10. '[i' → logprob: -6.517692565917969

Token 355: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007157426793128252
    2. ' for' → logprob: -5.382157325744629
    3. 'for' → logprob: -6.132157325744629
    4. '[:' → logprob: -8.757157325744629
    5. '[' → logprob: -10.132157325744629
    6. '[i' → logprob: -10.507157325744629
    7. ',' → logprob: -10.632157325744629
    8. ':' → logprob: -10.757157325744629
    9. '	for' → logprob: -11.007157325744629
    10. '        ' → logprob: -11.507157325744629

Token 356: ' début' (ID: 29589)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3266903758049011
    2. 'md' → logprob: -1.326690435409546
    3. ' range' → logprob: -4.826690196990967
    4. 'for' → logprob: -6.701690196990967
    5. ' md' → logprob: -7.201690196990967
    6. 'D' → logprob: -7.826690196990967
    7. '
' → logprob: -8.326690673828125
    8. '[' → logprob: -8.326690673828125
    9. 'K' → logprob: -8.451690673828125
    10. '   ' → logprob: -8.451690673828125

Token 357: ' jusqu' (ID: 21961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08683115243911743
    2. ' for' → logprob: -3.5868310928344727
    3. 'range' → logprob: -3.7118310928344727
    4. 'for' → logprob: -4.461831092834473
    5. ' range' → logprob: -4.711831092834473
    6. '(range' → logprob: -5.586831092834473
    7. ',' → logprob: -6.461831092834473
    8. '   ' → logprob: -7.086831092834473
    9. ':' → logprob: -7.461831092834473
    10. '[' → logprob: -7.961831092834473

Token 358: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.6581397652626038
    2. ' à' → logprob: -1.283139705657959
    3. 'à' → logprob: -2.408139705657959
    4. ''au' → logprob: -3.408139705657959
    5. '’à' → logprob: -3.783139705657959
    6. '       ' → logprob: -4.408139705657959
    7. 'au' → logprob: -4.533139705657959
    8. ' au' → logprob: -4.658139705657959
    9. 'a' → logprob: -5.158139705657959
    10. '   ' → logprob: -5.658139705657959

Token 359: ' l' (ID: 305)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.08093228936195374
    2. 'n' → logprob: -3.580932378768921
    3. ' K' → logprob: -3.955932378768921
    4. 'min' → logprob: -4.205932140350342
    5. ' min' → logprob: -5.080932140350342
    6. ' n' → logprob: -6.080932140350342
    7. '(' → logprob: -6.455932140350342
    8. 'm' → logprob: -6.580932140350342
    9. ' (' → logprob: -6.830932140350342
    10. '(min' → logprob: -7.330932140350342

Token 360: ''ind' (ID: 82245)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5124608874320984
    2. 'n' → logprob: -1.7624609470367432
    3. '(K' → logprob: -2.012460947036743
    4. 'min' → logprob: -3.262460947036743
    5. '(n' → logprob: -3.887460947036743
    6. ' K' → logprob: -4.637460708618164
    7. '(' → logprob: -5.137460708618164
    8. 'x' → logprob: -5.637460708618164
    9. '(min' → logprob: -5.637460708618164
    10. 'm' → logprob: -5.887460708618164

Token 361: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0011787971016019583
    2. 'ice' → logprob: -6.876178741455078
    3. 'e' → logprob: -8.876178741455078
    4. 'exe' → logprob: -12.501178741455078
    5. 'exp' → logprob: -15.126178741455078
    6. 'i' → logprob: -15.251178741455078
    7. 'exc' → logprob: -15.501178741455078
    8. '(ex' → logprob: -15.501178741455078
    9. '=' → logprob: -15.751178741455078
    10. 'ef' → logprob: -15.876178741455078

Token 362: ' (' (ID: 350)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3494410514831543
    2. ' K' → logprob: -1.4744410514831543
    3. ' (' → logprob: -4.224441051483154
    4. '(' → logprob: -4.349441051483154
    5. '(K' → logprob: -4.599441051483154
    6. 'min' → logprob: -5.099441051483154
    7. ' min' → logprob: -5.224441051483154
    8. 'n' → logprob: -5.349441051483154
    9. ' n' → logprob: -5.474441051483154
    10. '(n' → logprob: -6.349441051483154

Token 363: 'n' (ID: 77)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.23771686851978302
    2. 'n' → logprob: -2.1127169132232666
    3. 'min' → logprob: -2.9877169132232666
    4. 'x' → logprob: -4.3627166748046875
    5. 'm' → logprob: -4.3627166748046875
    6. '(n' → logprob: -5.7377166748046875
    7. ' K' → logprob: -5.9877166748046875
    8. '       ' → logprob: -6.6127166748046875
    9. '   ' → logprob: -6.7377166748046875
    10. ' min' → logprob: -6.7377166748046875

Token 364: '-' (ID: 12)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7925764322280884
    2. ' %' → logprob: -0.7925764322280884
    3. ' if' → logprob: -2.917576313018799
    4. 'if' → logprob: -3.542576313018799
    5. '%n' → logprob: -5.542576313018799
    6. ')' → logprob: -5.917576313018799
    7. 'min' → logprob: -6.792576313018799
    8. '-' → logprob: -6.917576313018799
    9. '%C' → logprob: -7.792576313018799
    10. '%B' → logprob: -7.792576313018799

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04695050045847893
    2. 'min' → logprob: -3.796950578689575
    3. 'K' → logprob: -4.796950340270996
    4. ' min' → logprob: -4.921950340270996
    5. ' ' → logprob: -5.421950340270996
    6. ' K' → logprob: -7.046950340270996
    7. ')' → logprob: -7.046950340270996
    8. '%' → logprob: -7.046950340270996
    9. '-' → logprob: -7.796950340270996
    10. '   ' → logprob: -8.796950340270996

Token 366: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5641722679138184
    2. '):' → logprob: -0.9391722679138184
    3. '):
' → logprob: -4.189172267913818
    4. '+' → logprob: -4.689172267913818
    5. ' )' → logprob: -5.314172267913818
    6. ' ):' → logprob: -5.939172267913818
    7. '   ' → logprob: -6.189172267913818
    8. ' if' → logprob: -6.314172267913818
    9. ' +' → logprob: -6.564172267913818
    10. '       ' → logprob: -7.064172267913818

Token 367: ' %' (ID: 1851)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.265847086906433
    2. 'for' → logprob: -1.390847086906433
    3. '       ' → logprob: -1.640847086906433
    4. 'if' → logprob: -2.1408472061157227
    5. ' for' → logprob: -2.3908472061157227
    6. ' if' → logprob: -3.1408472061157227
    7. 'range' → logprob: -4.890847206115723
    8. ':
' → logprob: -5.265847206115723
    9. ' and' → logprob: -6.390847206115723
    10. '   ' → logprob: -6.515847206115723

Token 368: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.026519961655139923
    2. ' K' → logprob: -3.651520013809204
    3. 'k' → logprob: -9.151519775390625
    4. 'n' → logprob: -10.026519775390625
    5. ' ' → logprob: -10.901519775390625
    6. ' (' → logprob: -11.276519775390625
    7. '(K' → logprob: -11.651519775390625
    8. ' n' → logprob: -12.026519775390625
    9. '(' → logprob: -12.276519775390625
    10. 'm' → logprob: -12.526519775390625

Token 369: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6791115403175354
    2. ' for' → logprob: -1.1791114807128906
    3. 'for' → logprob: -1.9291114807128906
    4. ':' → logprob: -3.6791114807128906
    5. 'range' → logprob: -5.054111480712891
    6. '(range' → logprob: -6.054111480712891
    7. ' range' → logprob: -6.179111480712891
    8. '	for' → logprob: -7.304111480712891
    9. '   ' → logprob: -7.679111480712891
    10. '<|end|>' → logprob: -8.05411148071289

Token 370: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5518903732299805
    2. '+' → logprob: -1.1768903732299805
    3. '):' → logprob: -2.6768903732299805
    4. ' )' → logprob: -3.4268903732299805
    5. ':' → logprob: -5.4268903732299805
    6. ' +' → logprob: -5.5518903732299805
    7. ' ):' → logprob: -5.8018903732299805
    8. '):
' → logprob: -7.1768903732299805
    9. ' ' → logprob: -8.17689037322998
    10. 'n' → logprob: -8.30189037322998

Token 371: 'cl' (ID: 565)
  Prédit: 'clusive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusive' → logprob: -1.339743971824646
    2. 'act' → logprob: -1.464743971824646
    3. 'clus' → logprob: -1.714743971824646
    4. 'cl' → logprob: -1.839743971824646
    5. 'p' → logprob: -2.7147440910339355
    6. '```' → logprob: -4.2147440910339355
    7. 'cept' → logprob: -4.4647440910339355
    8. ')' → logprob: -4.4647440910339355
    9. ']' → logprob: -4.4647440910339355
    10. 'clude' → logprob: -4.8397440910339355

Token 372: 'u' (ID: 84)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5820751190185547
    2. ':' → logprob: -1.7070751190185547
    3. 'act' → logprob: -2.5820751190185547
    4. 'clude' → logprob: -2.5820751190185547
    5. '):' → logprob: -3.2070751190185547
    6. 'lude' → logprob: -3.7070751190185547
    7. 'if' → logprob: -4.207075119018555
    8. 'clus' → logprob: -5.707075119018555
    9. 'cl' → logprob: -5.707075119018555
    10. 'cept' → logprob: -5.832075119018555

Token 373: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8886272311210632
    2. '):' → logprob: -1.638627290725708
    3. ' +' → logprob: -1.763627290725708
    4. ')' → logprob: -1.763627290725708
    5. ' )' → logprob: -3.763627290725708
    6. ' ):' → logprob: -3.763627290725708
    7. '):
' → logprob: -6.263627052307129
    8. ':' → logprob: -7.638627052307129
    9. ' ]' → logprob: -7.763627052307129
    10. ']' → logprob: -7.888627052307129

Token 374: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.500468373298645
    2. ' for' → logprob: -2.0004682540893555
    3. '       ' → logprob: -2.7504682540893555
    4. '<|end|>' → logprob: -3.2504682540893555
    5. '   ' → logprob: -3.3754682540893555
    6. 'for' → logprob: -3.7504682540893555
    7. '  
' → logprob: -4.0004682540893555
    8. ' :' → logprob: -4.0004682540893555
    9. ' 
' → logprob: -4.2504682540893555
    10. '    
' → logprob: -5.1254682540893555

Token 375: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.815758228302002
    2. '       ' → logprob: -0.940758228302002
    3. 'for' (adapté à ' for') → logprob: -1.815758228302002
    4. ' i' → logprob: -7.440758228302002
    5. ' limit' → logprob: -7.815758228302002
    6. 'start' → logprob: -8.190757751464844
    7. '        
' → logprob: -8.190757751464844
    8. 'limit' → logprob: -8.190757751464844
    9. 'idx' → logprob: -8.190757751464844
    10. ' idx' → logprob: -8.315757751464844

Token 376: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08992520719766617
    2. 'i' → logprob: -2.4649252891540527
    3. ' ' → logprob: -7.839925289154053
    4. '	i' → logprob: -8.464924812316895
    5. ' j' → logprob: -9.464924812316895
    6. 'j' → logprob: -9.964924812316895
    7. '   ' → logprob: -10.089924812316895
    8. '_' → logprob: -10.527424812316895
    9. '_i' → logprob: -10.589924812316895
    10. ' _' → logprob: -10.714924812316895

Token 377: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016109442338347435
    2. 'in' → logprob: -4.141109466552734
    3. ' ' → logprob: -9.641109466552734
    4. '	in' → logprob: -12.516109466552734
    5. 's' → logprob: -13.641109466552734
    6. ')' → logprob: -14.016109466552734
    7. ',' → logprob: -14.141109466552734
    8. 'In' → logprob: -14.266109466552734
    9. '  ' → logprob: -14.391109466552734
    10. '=' → logprob: -14.766109466552734

Token 378: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006782623939216137
    2. 'range' → logprob: -5.006782531738281
    3. '(range' → logprob: -10.131782531738281
    4. '	range' → logprob: -11.256782531738281
    5. ' ' → logprob: -11.381782531738281
    6. ' xrange' → logprob: -13.631782531738281
    7. '  ' → logprob: -14.506782531738281
    8. '<|end|>' → logprob: -14.506782531738281
    9. '   ' → logprob: -15.381782531738281
    10. '_range' → logprob: -15.381782531738281

Token 379: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.32918718457221985
    2. ' (' → logprob: -2.2041871547698975
    3. '(' → logprob: -2.4541871547698975
    4. '(n' → logprob: -2.5791871547698975
    5. ' ((' → logprob: -4.829187393188477
    6. '(
' → logprob: -8.704187393188477
    7. ' ' → logprob: -9.454187393188477
    8. '(((' → logprob: -10.454187393188477
    9. '(min' → logprob: -10.704187393188477
    10. '   ' → logprob: -11.579187393188477

Token 380: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06393125653266907
    2. '(n' → logprob: -2.8139312267303467
    3. ' n' → logprob: -6.563931465148926
    4. ' (' → logprob: -7.563931465148926
    5. '   ' → logprob: -10.813931465148926
    6. '	n' → logprob: -12.563931465148926
    7. '(' → logprob: -13.188931465148926
    8. '((' → logprob: -13.188931465148926
    9. ' ' → logprob: -13.313931465148926
    10. ')n' → logprob: -14.376431465148926

Token 381: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.689683198928833
    2. '%' → logprob: -1.189683198928833
    3. ' %' → logprob: -1.939683198928833
    4. ' -' → logprob: -3.064683198928833
    5. ')' → logprob: -6.314682960510254
    6. ' ' → logprob: -7.064682960510254
    7. ')%' → logprob: -8.189682960510254
    8. '%i' → logprob: -9.064682960510254
    9. ' )' → logprob: -9.189682960510254
    10. '   ' → logprob: -9.564682960510254

Token 382: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008065330912359059
    2. ' ' → logprob: -7.1258063316345215
    3. '   ' → logprob: -14.25080680847168
    4. ')' → logprob: -15.31330680847168
    5. '<|end|>' → logprob: -15.50080680847168
    6. '  ' → logprob: -15.62580680847168
    7. '```' → logprob: -15.87580680847168
    8. '...' → logprob: -15.93830680847168
    9. '۱' → logprob: -16.37580680847168
    10. '
' → logprob: -16.50080680847168

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.273621405242011e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.875032424926758
    4. '
' → logprob: -15.875032424926758
    5. '```' → logprob: -16.125032424926758
    6. '۱' → logprob: -16.250032424926758
    7. ')' → logprob: -16.562532424926758
    8. '

' → logprob: -16.750032424926758
    9. '１' → logprob: -16.812532424926758
    10. '১' → logprob: -17.187532424926758

Token 384: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012727351859211922
    2. ')%' → logprob: -7.001272678375244
    3. ' )' → logprob: -8.626273155212402
    4. '%' → logprob: -8.751273155212402
    5. ' %' → logprob: -11.001273155212402
    6. '   ' → logprob: -13.376273155212402
    7. ')
' → logprob: -13.751273155212402
    8. '+' → logprob: -14.126273155212402
    9. ' ' → logprob: -14.251273155212402
    10. ' ' → logprob: -14.501273155212402

Token 385: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11786874383687973
    2. '%' → logprob: -2.242868661880493
    3. ')' → logprob: -5.492868900299072
    4. ' ' → logprob: -7.367868900299072
    5. ')%' → logprob: -8.492868423461914
    6. ' )' → logprob: -9.992868423461914
    7. '   ' → logprob: -11.492868423461914
    8. '	' → logprob: -12.242868423461914
    9. '  ' → logprob: -12.867868423461914
    10. ' ' → logprob: -12.867868423461914

Token 386: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.07893022149801254
    2. ' K' → logprob: -2.578930139541626
    3. 'k' → logprob: -11.078929901123047
    4. ' ' → logprob: -11.703929901123047
    5. '   ' → logprob: -11.828929901123047
    6. ')' → logprob: -12.703929901123047
    7. '(K' → logprob: -13.328929901123047
    8. '	K' → logprob: -13.828929901123047
    9. ' (' → logprob: -14.203929901123047
    10. '    ' → logprob: -14.578929901123047

Token 387: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002692770678550005
    2. '):
' → logprob: -6.002692699432373
    3. '+' → logprob: -9.002693176269531
    4. ' ):' → logprob: -9.752693176269531
    5. ')' → logprob: -11.127693176269531
    6. '):
' → logprob: -12.002693176269531
    7. '       ' → logprob: -12.752693176269531
    8. ':' → logprob: -12.877693176269531
    9. ' +' → logprob: -13.002693176269531
    10. '):

' → logprob: -13.377693176269531

Token 388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040465500205755234
    2. 'sm' → logprob: -3.9154655933380127
    3. '       ' → logprob: -4.665465354919434
    4. '   ' → logprob: -5.665465354919434
    5. ' sm' → logprob: -5.915465354919434
    6. ' if' → logprob: -6.290465354919434
    7. 'if' → logprob: -6.415465354919434
    8. 's' → logprob: -8.040465354919434
    9. 'md' → logprob: -9.165465354919434
    10. ' ' → logprob: -10.165465354919434

Token 389: ' #' (ID: 1069)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.42770659923553467
    2. ' sm' → logprob: -1.3027065992355347
    3. '       ' → logprob: -3.427706718444824
    4. '   ' → logprob: -3.677706718444824
    5. '           ' → logprob: -4.302706718444824
    6. 'if' → logprob: -6.177706718444824
    7. ' if' → logprob: -6.802706718444824
    8. '        
' → logprob: -8.052706718444824
    9. ' ' → logprob: -8.177706718444824
    10. 's' → logprob: -8.552706718444824

Token 390: ' Si' (ID: 7832)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.04190178960561752
    2. 'if' → logprob: -3.6669018268585205
    3. 'val' → logprob: -5.041901588439941
    4. 'v' → logprob: -6.041901588439941
    5. 's' → logprob: -6.166901588439941
    6. '   ' → logprob: -6.666901588439941
    7. 'a' → logprob: -6.916901588439941
    8. 'md' → logprob: -7.416901588439941
    9. '       ' → logprob: -7.791901588439941
    10. 'value' → logprob: -8.166901588439941

Token 391: ' md' (ID: 17280)
  Prédit: ' md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' md' → logprob: -0.3870026767253876
    2. 'md' → logprob: -1.13700270652771
    3. '(md' → logprob: -10.137002944946289
    4. '	md' → logprob: -10.137002944946289
    5. '   ' → logprob: -10.387002944946289
    6. '           ' → logprob: -11.762002944946289
    7. '    ' → logprob: -12.762002944946289
    8. '       ' → logprob: -12.887002944946289
    9. ' ' → logprob: -13.512002944946289
    10. ' ' → logprob: -13.637002944946289

Token 392: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.5014188799541444e-05
    2. '[' → logprob: -10.375044822692871
    3. ' [' → logprob: -11.500044822692871
    4. '[I' → logprob: -13.625044822692871
    5. 'i' → logprob: -14.125044822692871
    6. 'md' → logprob: -14.375044822692871
    7. '```' → logprob: -15.250044822692871
    8. '
' → logprob: -15.750044822692871
    9. '[
' → logprob: -15.875044822692871
    10. '\[' → logprob: -16.125045776367188

Token 393: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07068291306495667
    2. ']==' → logprob: -2.945683002471924
    3. ']!=' → logprob: -4.445683002471924
    4. '==' → logprob: -6.320683002471924
    5. '!=' → logprob: -7.195683002471924
    6. ']:' → logprob: -7.570683002471924
    7. ' ]' → logprob: -7.820683002471924
    8. ']:
' → logprob: -8.820682525634766
    9. ']>' → logprob: -9.320682525634766
    10. ' ==' → logprob: -9.320682525634766

Token 394: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6107597947120667
    2. ' ==' → logprob: -0.8607597947120667
    3. '!=' → logprob: -3.985759735107422
    4. ' !=' → logprob: -4.235759735107422
    5. '>' → logprob: -7.235759735107422
    6. '%' → logprob: -9.235759735107422
    7. ' >' → logprob: -9.235759735107422
    8. ':' → logprob: -9.610759735107422
    9. '=' → logprob: -10.360759735107422
    10. ' ' → logprob: -10.485759735107422

Token 395: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13598361611366272
    2. ' ' → logprob: -2.13598370552063
    3. ' not' → logprob: -5.135983467102051
    4. 'not' → logprob: -7.135983467102051
    5. ' ==' → logprob: -7.635983467102051
    6. '<|end|>' → logprob: -7.635983467102051
    7. '==' → logprob: -7.885983467102051
    8. ' zero' → logprob: -8.26098346710205
    9. '=' → logprob: -8.63598346710205
    10. '>' → logprob: -9.01098346710205

Token 396: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6764976978302002
    2. '0' → logprob: -1.1764976978302002
    3. 'md' → logprob: -2.6764976978302
    4. 'à' → logprob: -3.1764976978302
    5. ' ' → logprob: -4.176497459411621
    6. ' md' → logprob: -4.426497459411621
    7. '(md' → logprob: -4.926497459411621
    8. '=' → logprob: -5.051497459411621
    9. '           ' → logprob: -5.051497459411621
    10. '==' → logprob: -5.176497459411621

Token 397: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031859094742685556
    2. ' ' → logprob: -5.753185749053955
    3. 'm' → logprob: -12.503186225891113
    4. ' ' → logprob: -14.128186225891113
    5. '1' → logprob: -14.690686225891113
    6. '   ' → logprob: -14.690686225891113
    7. '  ' → logprob: -14.878186225891113
    8. ' m' → logprob: -15.128186225891113
    9. '```' → logprob: -15.128186225891113
    10. '    ' → logprob: -15.565686225891113

Token 398: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.633367121219635
    2. '           ' → logprob: -0.883367121219635
    3. ':
' → logprob: -4.00836706161499
    4. ',' → logprob: -4.38336706161499
    5. ' if' → logprob: -4.63336706161499
    6. ' and' → logprob: -4.88336706161499
    7. '       ' → logprob: -6.38336706161499
    8. '               ' → logprob: -6.50836706161499
    9. '<|end|>' → logprob: -6.50836706161499
    10. 'if' → logprob: -7.13336706161499

Token 399: ' incr' (ID: 52395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4904126226902008
    2. 'm' → logprob: -1.6154125928878784
    3. ' m' → logprob: -2.740412712097168
    4. '               ' → logprob: -2.865412712097168
    5. ' if' → logprob: -3.240412712097168
    6. 'if' → logprob: -3.615412712097168
    7. '            
' → logprob: -7.865412712097168
    8. '```' → logprob: -8.740412712097168
    9. ' ' → logprob: -8.990412712097168
    10. '       ' → logprob: -9.115412712097168

Token 400: 'é' (ID: 377)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8645079731941223
    2. 'ement' → logprob: -1.8645079135894775
    3. 'ment' → logprob: -1.9895079135894775
    4. 'm' → logprob: -1.9895079135894775
    5. 'mente' → logprob: -2.8645079135894775
    6. '               ' → logprob: -3.6145079135894775
    7. 'ément' → logprob: -3.6145079135894775
    8. 'rement' → logprob: -4.114508152008057
    9. '       ' → logprob: -4.364508152008057
    10. 'emment' → logprob: -6.864508152008057

Token 401: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.015004085376858711
    2. 'ment' → logprob: -4.2650041580200195
    3. 'm' → logprob: -8.76500415802002
    4. 'me' → logprob: -8.89000415802002
    5. 'mentation' → logprob: -8.89000415802002
    6. 'mentar' → logprob: -9.39000415802002
    7. 'mental' → logprob: -9.51500415802002
    8. 'men' → logprob: -9.64000415802002
    9. 'mented' → logprob: -10.26500415802002
    10. 'ments' → logprob: -10.51500415802002

Token 402: ' le' (ID: 505)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5759592652320862
    2. ' m' → logprob: -0.8259592652320862
    3. '           ' → logprob: -11.450959205627441
    4. '	m' → logprob: -12.950959205627441
    5. '
' → logprob: -13.075959205627441
    6. '(m' → logprob: -13.700959205627441
    7. '            
' → logprob: -14.450959205627441
    8. '1' → logprob: -14.700959205627441
    9. '       ' → logprob: -14.700959205627441
    10. ' ' → logprob: -14.700959205627441

Token 403: ' compteur' (ID: 163344)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00043233807082287967
    2. ' m' → logprob: -7.75043249130249
    3. 'sm' → logprob: -14.250432014465332
    4. '   ' → logprob: -15.250432014465332
    5. '	m' → logprob: -15.375432014465332
    6. 's' → logprob: -15.375432014465332
    7. ' ' → logprob: -15.625432014465332
    8. '    ' → logprob: -17.50043296813965
    9. '```' → logprob: -18.12543296813965
    10. '1' → logprob: -18.37543296813965

Token 404: ' m' (ID: 284)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012444903142750263
    2. '               ' → logprob: -5.012444972991943
    3. ' if' → logprob: -5.887444972991943
    4. 'if' → logprob: -6.137444972991943
    5. ':' → logprob: -8.012444496154785
    6. '       ' → logprob: -9.262444496154785
    7. 'm' → logprob: -9.387444496154785
    8. '	       ' → logprob: -10.012444496154785
    9. '          ' → logprob: -10.387444496154785
    10. ' m' → logprob: -10.512444496154785

Token 405: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -2.9875325708417222e-05
    2. 'a' → logprob: -11.125029563903809
    3. 'd' → logprob: -11.875029563903809
    4. ' da' → logprob: -13.375029563903809
    5. '```' → logprob: -13.625029563903809
    6. '   ' → logprob: -14.000029563903809
    7. '  ' → logprob: -14.125029563903809
    8. '
' → logprob: -14.500029563903809
    9. '_da' → logprob: -15.000029563903809
    10. '``' → logprob: -15.125029563903809

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007166040013544261
    2. '+' → logprob: -7.750716686248779
    3. '+=' → logprob: -9.250716209411621
    4. ' +=' → logprob: -9.750716209411621
    5. 'a' → logprob: -10.500716209411621
    6. '```' → logprob: -10.750716209411621
    7. ' +' → logprob: -11.125716209411621
    8. '++' → logprob: -11.250716209411621
    9. '_' → logprob: -11.375716209411621
    10. 'o' → logprob: -11.625716209411621

Token 407: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010453189723193645
    2. '       ' → logprob: -5.385453224182129
    3. '               ' → logprob: -5.760453224182129
    4. '<|end|>' → logprob: -6.760453224182129
    5. ' if' → logprob: -8.135453224182129
    6. '            
' → logprob: -8.135453224182129
    7. '   ' → logprob: -8.760453224182129
    8. '          ' → logprob: -8.760453224182129
    9. ':' → logprob: -9.010453224182129
    10. 'if' → logprob: -9.385453224182129

Token 408: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09028078615665436
    2. ':' → logprob: -3.215280771255493
    3. '               ' → logprob: -3.465280771255493
    4. ' if' → logprob: -4.590281009674072
    5. 'if' → logprob: -6.340281009674072
    6. '<|end|>' → logprob: -6.590281009674072
    7. '       ' → logprob: -7.715281009674072
    8. ':
' → logprob: -8.090280532836914
    9. ' :' → logprob: -8.965280532836914
    10. ' and' → logprob: -9.340280532836914

Token 409: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061149198561906815
    2. ' if' → logprob: -3.1861491203308105
    3. 'if' (adapté à ' if') → logprob: -4.0611491203308105
    4. '               ' → logprob: -8.061149597167969
    5. '       ' → logprob: -8.311149597167969
    6. '   ' → logprob: -9.436149597167969
    7. '          ' → logprob: -10.811149597167969
    8. '		' → logprob: -10.936149597167969
    9. '	if' → logprob: -11.061149597167969
    10. '	       ' → logprob: -11.061149597167969

Token 410: ' md' (ID: 17280)
  Prédit: ' md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' md' → logprob: -0.1602371335029602
    2. 'md' → logprob: -1.9102370738983154
    3. '	md' → logprob: -11.660237312316895
    4. '(md' → logprob: -12.535237312316895
    5. ' ' → logprob: -14.910237312316895
    6. '.md' → logprob: -15.285237312316895
    7. ' ' → logprob: -16.785236358642578
    8. '/md' → logprob: -16.910236358642578
    9. '   ' → logprob: -17.160236358642578
    10. '    ' → logprob: -17.660236358642578

Token 411: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016074994346126914
    2. '[' → logprob: -8.750161170959473
    3. ' [' → logprob: -13.500161170959473
    4. 'i' → logprob: -15.250161170959473
    5. '[
' → logprob: -15.625161170959473
    6. '[I' → logprob: -15.750161170959473
    7. '```' → logprob: -16.500160217285156
    8. '\[' → logprob: -16.625160217285156
    9. ' ' → logprob: -17.125160217285156
    10. '[j' → logprob: -18.000160217285156

Token 412: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42811527848243713
    2. '==' → logprob: -1.1781152486801147
    3. ']' → logprob: -3.3031153678894043
    4. ']==' → logprob: -5.803115367889404
    5. ')' → logprob: -8.553114891052246
    6. ' ' → logprob: -8.803114891052246
    7. ' ]' → logprob: -8.803114891052246
    8. '[' → logprob: -9.553114891052246
    9. '=' → logprob: -10.928114891052246
    10. ')==' → logprob: -11.303114891052246

Token 413: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519718110561371
    2. '==' → logprob: -1.5019718408584595
    3. ' !=' → logprob: -11.251972198486328
    4. '[' → logprob: -11.626972198486328
    5. ' ' → logprob: -11.876972198486328
    6. '!=' → logprob: -12.501972198486328
    7. '=' → logprob: -12.626972198486328
    8. '0' → logprob: -13.751972198486328
    9. ')' → logprob: -13.876972198486328
    10. ')==' → logprob: -13.876972198486328

Token 414: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048587486147880554
    2. ' ' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.173587799072266
    4. ' ' → logprob: -17.173587799072266
    5. '  ' → logprob: -17.423587799072266
    6. '```' → logprob: -17.923587799072266
    7. '<|end|>' → logprob: -19.048587799072266
    8. '	' → logprob: -19.048587799072266
    9. ' ' → logprob: -19.423587799072266
    10. '    ' → logprob: -19.548587799072266

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -22.750001907348633
    4. '```' → logprob: -23.000001907348633
    5. '   ' → logprob: -23.500001907348633
    6. ' ' → logprob: -23.875001907348633
    7. '  ' → logprob: -24.875001907348633
    8. '=' → logprob: -25.500001907348633
    9. '<|end|>' → logprob: -25.750001907348633
    10. '０' → logprob: -25.750001907348633

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014737824909389019
    2. ':
' → logprob: -4.264737606048584
    3. '           ' → logprob: -8.014738082885742
    4. '               ' → logprob: -8.639738082885742
    5. '):' → logprob: -10.264738082885742
    6. '):
' → logprob: -11.014738082885742
    7. '       ' → logprob: -12.514738082885742
    8. ' :' → logprob: -12.764738082885742
    9. ')' → logprob: -13.014738082885742
    10. ',' → logprob: -13.139738082885742

Token 417: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007687662728130817
    2. '           ' → logprob: -5.382687568664551
    3. '	           ' → logprob: -6.632687568664551
    4. '                
' → logprob: -7.757687568664551
    5. '	       ' → logprob: -8.00768756866455
    6. '            
' → logprob: -8.00768756866455
    7. ' m' → logprob: -8.25768756866455
    8. '
' → logprob: -9.13268756866455
    9. '			' → logprob: -9.13268756866455
    10. '			   ' → logprob: -10.38268756866455

Token 418: ' m' (ID: 284)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2791479229927063
    2. ' m' → logprob: -2.0291478633880615
    3. 'm' (adapté à ' m') → logprob: -2.2791478633880615
    4. '           ' → logprob: -5.279148101806641
    5. '                   ' → logprob: -5.404148101806641
    6. '   ' → logprob: -9.52914810180664
    7. '	m' → logprob: -10.65414810180664
    8. '                ' → logprob: -11.15414810180664
    9. '			' → logprob: -11.90414810180664
    10. '
' → logprob: -12.02914810180664

Token 419: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -16.5
    3. ' da' → logprob: -17.25
    4. 'd' → logprob: -17.25
    5. '_da' → logprob: -18.125
    6. 'да' → logprob: -18.625
    7. 'dae' → logprob: -19.625
    8. 'ma' → logprob: -19.875
    9. 'dao' → logprob: -20.375
    10. '```' → logprob: -20.5

Token 420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'o' → logprob: -19.875
    3. ' ' → logprob: -20.25
    4. '۰' → logprob: -20.625
    5. '```' → logprob: -21.75
    6. '[' → logprob: -22.125
    7. '０' → logprob: -22.125
    8. '_' → logprob: -22.25
    9. '٠' → logprob: -22.25
    10. 'O' → logprob: -22.5

Token 421: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2519320547580719
    2. ' +=' → logprob: -1.5019320249557495
    3. '+' → logprob: -13.376932144165039
    4. ']+=' → logprob: -14.376932144165039
    5. '=' → logprob: -14.751932144165039
    6. '   ' → logprob: -15.626932144165039
    7. '           ' → logprob: -16.25193214416504
    8. '               ' → logprob: -17.62693214416504
    9. '    ' → logprob: -17.75193214416504
    10. '       ' → logprob: -17.87693214416504

Token 422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.875179290771484
    4. '
' → logprob: -20.125179290771484
    5. '  ' → logprob: -20.250179290771484
    6. ' ' → logprob: -20.375179290771484
    7. '	' → logprob: -20.500179290771484
    8. '0' → logprob: -21.250179290771484
    9. '2' → logprob: -21.750179290771484
    10. '```' → logprob: -21.875179290771484

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.7500057220459
    4. '  ' → logprob: -20.3750057220459
    5. '<|end|>' → logprob: -20.6250057220459
    6. '```' → logprob: -20.7500057220459
    7. '2' → logprob: -21.1250057220459
    8. '
' → logprob: -21.3125057220459
    9. '	' → logprob: -21.5625057220459
    10. '0' → logprob: -21.5625057220459

Token 424: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13386641442775726
    2. ' else' → logprob: -2.633866310119629
    3. 'else' → logprob: -3.508866310119629
    4. '
' → logprob: -4.258866310119629
    5. '            
' → logprob: -5.633866310119629
    6. ' 
' → logprob: -6.258866310119629
    7. '    
' → logprob: -6.383866310119629
    8. '  
' → logprob: -7.133866310119629
    9. '        
' → logprob: -8.508866310119629
    10. '               ' → logprob: -8.883866310119629

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05014515668153763
    2. '<|end|>' → logprob: -3.425145149230957
    3. ' else' → logprob: -5.050145149230957
    4. '               ' → logprob: -5.425145149230957
    5. 'else' → logprob: -5.925145149230957
    6. ' ' → logprob: -7.050145149230957
    7. '		' → logprob: -7.800145149230957
    8. 'continue' → logprob: -8.300145149230957
    9. '[' → logprob: -8.550145149230957
    10. '<|end|>' → logprob: -8.925145149230957

Token 426: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7201353907585144
    2. '           ' → logprob: -1.3451354503631592
    3. ' else' → logprob: -1.9701354503631592
    4. '       ' → logprob: -3.095135450363159
    5. ' sm' → logprob: -3.220135450363159
    6. 'sm' → logprob: -3.595135450363159
    7. '        ' → logprob: -8.970135688781738
    8. '   ' → logprob: -9.595135688781738
    9. '               ' → logprob: -9.595135688781738
    10. ' ' → logprob: -9.720135688781738

Token 427: ' Aj' (ID: 28294)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.24446193873882294
    2. 'else' → logprob: -1.8694618940353394
    3. ' sm' → logprob: -2.994462013244629
    4. '       ' → logprob: -5.119462013244629
    5. ' else' → logprob: -5.744462013244629
    6. '           ' → logprob: -6.119462013244629
    7. '   ' → logprob: -6.869462013244629
    8. '    ' → logprob: -10.619462013244629
    9. '               ' → logprob: -10.744462013244629
    10. ' ' → logprob: -10.744462013244629

Token 428: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.7558822631835938
    2. 'outer' → logprob: -0.7558822631835938
    3. 'out' → logprob: -3.5058822631835938
    4. 'outez' → logprob: -3.5058822631835938
    5. 'outes' → logprob: -8.505882263183594
    6. '       ' → logprob: -8.755882263183594
    7. 'uste' → logprob: -9.255882263183594
    8. 'ust' → logprob: -9.380882263183594
    9. '   ' → logprob: -9.880882263183594
    10. 'sm' → logprob: -10.255882263183594

Token 429: ' md' (ID: 17280)
  Prédit: ' md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' md' → logprob: -0.0795079693198204
    2. 'md' → logprob: -2.579508066177368
    3. ' sm' → logprob: -7.454507827758789
    4. '(md' → logprob: -10.329507827758789
    5. '	md' → logprob: -12.704507827758789
    6. 'sm' → logprob: -12.704507827758789
    7. '.md' → logprob: -16.32950782775879
    8. ' (' → logprob: -16.95450782775879
    9. ' ' → logprob: -17.07950782775879
    10. ' ' → logprob: -17.57950782775879

Token 430: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -10.875020980834961
    3. ' [' → logprob: -13.125020980834961
    4. '```' → logprob: -15.625020980834961
    5. '   ' → logprob: -16.75002098083496
    6. 'i' → logprob: -16.75002098083496
    7. '[
' → logprob: -17.87502098083496
    8. '[I' → logprob: -18.12502098083496
    9. ' ' → logprob: -18.87502098083496
    10. '[j' → logprob: -19.37502098083496

Token 431: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.568666934967041
    2. ' ]' → logprob: -1.443666934967041
    3. ')' → logprob: -1.943666934967041
    4. ' )' → logprob: -3.443666934967041
    5. '<|end|>' → logprob: -4.943666934967041
    6. ' to' → logprob: -5.068666934967041
    7. '[i' → logprob: -6.068666934967041
    8. '])' → logprob: -6.568666934967041
    9. '           ' → logprob: -6.693666934967041
    10. ']+=' → logprob: -7.193666934967041

Token 432: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09841951727867126
    2. '<|end|>' → logprob: -2.848419427871704
    3. 'to' → logprob: -3.598419427871704
    4. '<|end|>' → logprob: -5.973419666290283
    5. '       ' → logprob: -6.098419666290283
    6. ' +=' → logprob: -6.848419666290283
    7. ' ' → logprob: -7.473419666290283
    8. '           ' → logprob: -7.598419666290283
    9. '        ' → logprob: -7.973419666290283
    10. '   ' → logprob: -8.348419189453125

Token 433: ' la' (ID: 557)
  Prédit: ' sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.0059296246618032455
    2. 'sm' → logprob: -5.130929470062256
    3. '	sm' → logprob: -14.505929946899414
    4. 's' → logprob: -15.005929946899414
    5. '(sm' → logprob: -16.255929946899414
    6. ' ' → logprob: -16.880929946899414
    7. 'md' → logprob: -17.505929946899414
    8. '_sm' → logprob: -17.505929946899414
    9. ' smr' → logprob: -17.755929946899414
    10. ' ' → logprob: -17.880929946899414

Token 434: ' somme' (ID: 64484)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.02328682132065296
    2. ' sm' → logprob: -3.773286819458008
    3. 's' → logprob: -10.148286819458008
    4. '	sm' → logprob: -14.148286819458008
    5. '_sm' → logprob: -14.523286819458008
    6. 'sd' → logprob: -15.398286819458008
    7. 'sp' → logprob: -15.648286819458008
    8. 'Sm' → logprob: -15.898286819458008
    9. 'sum' → logprob: -16.148286819458008
    10. '```' → logprob: -17.023286819458008

Token 435: '
' (ID: 198)
  Prédit: ' sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.12860426306724548
    2. 'sm' → logprob: -2.1286041736602783
    3. ' +=' → logprob: -6.628604412078857
    4. '           ' → logprob: -8.2536039352417
    5. '+=' → logprob: -10.0036039352417
    6. ' +' → logprob: -10.8786039352417
    7. '+' → logprob: -11.5036039352417
    8. '(sm' → logprob: -12.2536039352417
    9. '               ' → logprob: -13.0036039352417
    10. '	sm' → logprob: -13.0036039352417

Token 436: '           ' (ID: 352)
  Prédit: ' sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.15222816169261932
    2. 'sm' → logprob: -2.0272281169891357
    3. ' +=' → logprob: -4.902228355407715
    4. '           ' → logprob: -6.527228355407715
    5. '+=' → logprob: -7.527228355407715
    6. '            
' → logprob: -11.152228355407715
    7. '=' → logprob: -11.402228355407715
    8. ' +' → logprob: -11.902228355407715
    9. '	sm' → logprob: -11.902228355407715
    10. ' 
' → logprob: -12.152228355407715

Token 437: ' sm' (ID: 1765)
  Prédit: ' sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.31437456607818604
    2. 'sm' (adapté à ' sm') → logprob: -1.314374566078186
    3. '           ' → logprob: -6.8143744468688965
    4. '       ' → logprob: -11.939374923706055
    5. '               ' → logprob: -12.814374923706055
    6. '	sm' → logprob: -13.064374923706055
    7. '   ' → logprob: -13.564374923706055
    8. '          ' → logprob: -15.064374923706055
    9. '  ' → logprob: -15.564374923706055
    10. ' ' → logprob: -15.564374923706055

Token 438: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.00016432604752480984
    2. 'd' → logprob: -8.875164031982422
    3. '   ' → logprob: -11.500164031982422
    4. ' da' → logprob: -12.000164031982422
    5. ' +=' → logprob: -12.375164031982422
    6. 'a' → logprob: -14.250164031982422
    7. '  ' → logprob: -14.375164031982422
    8. '    ' → logprob: -14.625164031982422
    9. '       ' → logprob: -14.875164031982422
    10. 'dao' → logprob: -15.000164031982422

Token 439: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20142590999603271
    2. '+=' → logprob: -1.7014259099960327
    3. '+' → logprob: -11.701425552368164
    4. ' +' → logprob: -13.576425552368164
    5. ']+=' → logprob: -13.576425552368164
    6. '    ' → logprob: -14.701425552368164
    7. '        ' → logprob: -14.826425552368164
    8. ' ' → logprob: -15.451425552368164
    9. '+=(' → logprob: -16.076425552368164
    10. '=' → logprob: -16.201425552368164

Token 440: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.06197429448366165
    2. ' md' → logprob: -2.811974287033081
    3. '	md' → logprob: -12.06197452545166
    4. '(md' → logprob: -14.81197452545166
    5. ' ' → logprob: -15.43697452545166
    6. '   ' → logprob: -15.93697452545166
    7. '.md' → logprob: -16.936973571777344
    8. ' ' → logprob: -17.436973571777344
    9. '_md' → logprob: -17.561973571777344
    10. 'Md' → logprob: -18.311973571777344

Token 441: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -11.125021934509277
    3. 'i' → logprob: -12.000021934509277
    4. '```' → logprob: -14.625021934509277
    5. 'd' → logprob: -15.000021934509277
    6. 'a' → logprob: -15.250021934509277
    7. '[
' → logprob: -16.625022888183594
    8. ' [' → logprob: -16.750022888183594
    9. ' i' → logprob: -17.250022888183594
    10. '(i' → logprob: -17.625022888183594

Token 442: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13260750472545624
    2. ']' → logprob: -2.5076074600219727
    3. '<|end|>' → logprob: -3.2576074600219727
    4. ' )' → logprob: -6.257607460021973
    5. ' ]' → logprob: -6.757607460021973
    6. '}' → logprob: -7.757607460021973
    7. '<|end|>' → logprob: -7.757607460021973
    8. '+' → logprob: -8.757607460021973
    9. ' ' → logprob: -10.757607460021973
    10. '```' → logprob: -11.007607460021973

Token 443: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5899715423583984
    2. '<|end|>' → logprob: -0.8399715423583984
    3. ' 
' → logprob: -5.714971542358398
    4. '       ' → logprob: -5.839971542358398
    5. '\n' → logprob: -6.089971542358398
    6. '  
' → logprob: -6.839971542358398
    7. '+' → logprob: -6.839971542358398
    8. ' ' → logprob: -7.214971542358398
    9. '<|end|>' → logprob: -7.839971542358398
    10. '        
' → logprob: -7.839971542358398

Token 444: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23239140212535858
    2. '+' → logprob: -2.857391357421875
    3. '<|end|>' → logprob: -3.232391357421875
    4. '        
' → logprob: -3.732391357421875
    5. '        ' → logprob: -4.107391357421875
    6. ' if' → logprob: -4.232391357421875
    7. ' ' → logprob: -4.732391357421875
    8. '
' → logprob: -4.982391357421875
    9. ' 
' → logprob: -5.232391357421875
    10. 'if' → logprob: -5.232391357421875

Token 446: ' Après' (ID: 47562)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28463855385780334
    2. '#' → logprob: -2.2846386432647705
    3. 'i' → logprob: -3.1596386432647705
    4. 'print' → logprob: -3.6596386432647705
    5. 'sm' → logprob: -4.159638404846191
    6. 'rest' → logprob: -4.534638404846191
    7. 'm' → logprob: -4.909638404846191
    8. 'rem' → logprob: -5.159638404846191
    9. '   ' → logprob: -5.659638404846191
    10. 'result' → logprob: -5.659638404846191

Token 447: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0428357124328613
    2. ' la' → logprob: -1.7928357124328613
    3. ' for' → logprob: -2.4178357124328613
    4. ' cette' → logprob: -2.4178357124328613
    5. 'la' → logprob: -2.5428357124328613
    6. ' this' → logprob: -2.7928357124328613
    7. ' cela' → logprob: -3.4178357124328613
    8. ' ce' → logprob: -4.042835712432861
    9. 'this' → logprob: -4.042835712432861
    10. '#' → logprob: -4.417835712432861

Token 448: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20445024967193604
    2. 'bou' → logprob: -1.954450249671936
    3. ' boucle' → logprob: -4.0794501304626465
    4. 'ligne' → logprob: -5.2044501304626465
    5. ' for' → logprob: -5.3294501304626465
    6. 'comment' → logprob: -5.5794501304626465
    7. ':' → logprob: -6.3294501304626465
    8. 'loop' → logprob: -6.3294501304626465
    9. 'if' → logprob: -6.4544501304626465
    10. 'prem' → logprob: -6.7044501304626465

Token 449: ' précédente' (ID: 177319)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 450: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6847494840621948
    2. 'if' → logprob: -1.8097494840621948
    3. 'rest' → logprob: -2.4347496032714844
    4. 'r' → logprob: -3.0597496032714844
    5. ' if' → logprob: -3.4347496032714844
    6. '#' → logprob: -3.8097496032714844
    7. 'rem' → logprob: -4.184749603271484
    8. '        
' → logprob: -4.184749603271484
    9. 'reste' → logprob: -4.184749603271484
    10. '   ' → logprob: -4.184749603271484

Token 452: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' (adapté à ' sm') → logprob: -1.7332572937011719
    2. 'm' → logprob: -2.108257293701172
    3. 'r' → logprob: -2.108257293701172
    4. '#' → logprob: -2.358257293701172
    5. 'rest' → logprob: -3.108257293701172
    6. 'md' → logprob: -3.108257293701172
    7. 's' → logprob: -3.108257293701172
    8. 'rem' → logprob: -3.358257293701172
    9. 'if' → logprob: -3.358257293701172
    10. 'res' → logprob: -3.733257293701172

Token 453: 'd' (ID: 67)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -7.553032628493384e-05
    2. 'd' → logprob: -10.375075340270996
    3. 'a' → logprob: -11.250075340270996
    4. 'ada' → logprob: -11.750075340270996
    5. '=' → logprob: -12.375075340270996
    6. ' da' → logprob: -12.875075340270996
    7. 'dae' → logprob: -12.875075340270996
    8. 'eda' → logprob: -13.625075340270996
    9. ' =' → logprob: -13.750075340270996
    10. '.' → logprob: -13.750075340270996

Token 454: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04547469690442085
    2. '=' → logprob: -3.2954747676849365
    3. ' =' → logprob: -5.045474529266357
    4. ' +=' → logprob: -7.670474529266357
    5. '+=' → logprob: -7.795474529266357
    6. 'b' → logprob: -10.545475006103516
    7. '=a' → logprob: -11.545475006103516
    8. '   ' → logprob: -12.170475006103516
    9. 'A' → logprob: -12.295475006103516
    10. 'а' → logprob: -12.545475006103516

Token 455: ' sm' (ID: 1765)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20215943455696106
    2. ' sum' → logprob: -1.8271594047546387
    3. 'sm' → logprob: -4.327159404754639
    4. '(sum' → logprob: -5.202159404754639
    5. ' sm' → logprob: -6.077159404754639
    6. '0' → logprob: -8.077159881591797
    7. ' (' → logprob: -8.327159881591797
    8. '(sm' → logprob: -9.452159881591797
    9. '(n' → logprob: -9.577159881591797
    10. 'n' → logprob: -9.577159881591797

Token 456: 'da' (ID: 2529)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6490402221679688
    2. 'da' → logprob: -0.8990402221679688
    3. 'd' → logprob: -3.0240402221679688
    4. 'od' → logprob: -4.899040222167969
    5. '%' → logprob: -5.149040222167969
    6. '[' → logprob: -5.399040222167969
    7. '[a' → logprob: -7.149040222167969
    8. '   ' → logprob: -7.774040222167969
    9. 'md' → logprob: -7.774040222167969
    10. 'oda' → logprob: -8.024040222167969

Token 457: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1835470348596573
    2. '+' → logprob: -1.808547019958496
    3. '<|end|>' → logprob: -6.558547019958496
    4. '%' → logprob: -7.058547019958496
    5. ' %' → logprob: -7.183547019958496
    6. ' ' → logprob: -8.558547019958496
    7. ' *' → logprob: -9.308547019958496
    8. ' +=' → logprob: -9.933547019958496
    9. '#' → logprob: -10.058547019958496
    10. ' +
' → logprob: -10.183547019958496

Token 458: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07954297214746475
    2. ' +' → logprob: -2.579542875289917
    3. '%' → logprob: -7.704543113708496
    4. '*' → logprob: -10.204543113708496
    5. '
' → logprob: -10.329543113708496
    6. '#' (adapté à ' #') → logprob: -10.454543113708496
    7. '       ' → logprob: -10.829543113708496
    8. '+s' → logprob: -11.079543113708496
    9. ' %' → logprob: -11.704543113708496
    10. '+
' → logprob: -11.829543113708496

Token 459: ' sm' (ID: 1765)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4643380641937256
    2. 'sum' → logprob: -1.9643380641937256
    3. 's' → logprob: -2.7143380641937256
    4. ' +' → logprob: -2.7143380641937256
    5. 'sm' → logprob: -3.3393380641937256
    6. '
' → logprob: -3.4643380641937256
    7. '#' → logprob: -5.339338302612305
    8. '       ' → logprob: -5.839338302612305
    9. ' sm' → logprob: -6.089338302612305
    10. 'md' → logprob: -6.214338302612305

Token 460: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16777706146240234
    2. '+=' → logprob: -2.4177770614624023
    3. ' +=' → logprob: -3.1677770614624023
    4. '+' → logprob: -4.542777061462402
    5. '=' → logprob: -4.542777061462402
    6. ' =' → logprob: -6.542777061462402
    7. ' +' → logprob: -8.042777061462402
    8. '+d' → logprob: -9.792777061462402
    9. '   ' → logprob: -9.917777061462402
    10. ' ' → logprob: -11.042777061462402

Token 461: ' initialise' (ID: 145250)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9193151593208313
    2. '+' → logprob: -1.2943150997161865
    3. '+=' → logprob: -1.7943150997161865
    4. ' +' → logprob: -2.4193150997161865
    5. '=' → logprob: -3.2943150997161865
    6. '<|end|>' → logprob: -3.7943150997161865
    7. ' =' → logprob: -4.544315338134766
    8. ' ' → logprob: -7.919315338134766
    9. '<|end|>' → logprob: -8.419315338134766
    10. '#' → logprob: -8.669315338134766

Token 462: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.26080626249313354
    2. 'sum' → logprob: -1.6358063220977783
    3. 'som' → logprob: -4.010806083679199
    4. ' somme' → logprob: -4.260806083679199
    5. 'sm' → logprob: -6.885806083679199
    6. ' sum' → logprob: -8.1358060836792
    7. 'prem' → logprob: -8.5108060836792
    8. 'total' → logprob: -8.6358060836792
    9. 'summ' → logprob: -9.0108060836792
    10. 'mod' → logprob: -9.1358060836792

Token 464: ' cumulative' (ID: 75628)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' totale' (ID: 52898)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' reste' (ID: 26769)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.03031754307448864
    2. ' md' → logprob: -4.030317306518555
    3. 'mod' → logprob: -5.530317306518555
    4. 'sm' → logprob: -5.780317306518555
    5. 's' → logprob: -6.905317306518555
    6. 'm' → logprob: -7.155317306518555
    7. ' sm' → logprob: -7.155317306518555
    8. ' reste' → logprob: -7.155317306518555
    9. 'reste' → logprob: -8.155317306518555
    10. ' modulo' → logprob: -9.030317306518555

Token 468: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.07732332497835159
    2. 'élé' → logprob: -3.0773234367370605
    3. 'D' → logprob: -4.8273234367370605
    4. 'mod' → logprob: -4.9523234367370605
    5. ' md' → logprob: -5.7023234367370605
    6. 'm' → logprob: -5.8273234367370605
    7. ' éléments' → logprob: -6.8273234367370605
    8. ' D' → logprob: -6.9523234367370605
    9. 'elements' → logprob: -6.9523234367370605
    10. 'prem' → logprob: -7.3273234367370605

Token 470: ' sur' (ID: 1512)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.312023639678955
    2. '<|end|>' → logprob: -1.312023639678955
    3. '[' → logprob: -2.687023639678955
    4. '+' → logprob: -2.812023639678955
    5. ' +' → logprob: -2.937023639678955
    6. 'for' → logprob: -3.312023639678955
    7. 's' → logprob: -3.437023639678955
    8. '       ' → logprob: -3.812023639678955
    9. 'd' → logprob: -3.812023639678955
    10. 'md' → logprob: -3.937023639678955

Token 471: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41505277156829834
    2. 'n' → logprob: -2.040052890777588
    3. 'md' → logprob: -2.665052890777588
    4. 'D' → logprob: -3.665052890777588
    5. ')' → logprob: -3.915052890777588
    6. 'l' → logprob: -4.165052890777588
    7. 'la' → logprob: -4.290052890777588
    8. ' range' → logprob: -4.415052890777588
    9. ' la' → logprob: -4.915052890777588
    10. 'all' → logprob: -4.915052890777588

Token 472: ''' (ID: 6)
  Prédit: ''ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.858429491519928
    2. 'range' → logprob: -1.7334294319152832
    3. 'ensemble' → logprob: -1.8584294319152832
    4. 'a' → logprob: -2.608429431915283
    5. 'ent' → logprob: -2.733429431915283
    6. 'e' → logprob: -3.358429431915283
    7. 'n' → logprob: -3.858429431915283
    8. 'prem' → logprob: -3.983429431915283
    9. '’ensemble' → logprob: -5.608429431915283
    10. '`' → logprob: -5.858429431915283

Token 473: 'interval' (ID: 37558)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.2743435502052307
    2. 'interval' → logprob: -2.024343490600586
    3. 'ent' → logprob: -3.024343490600586
    4. ''ensemble' → logprob: -3.899343490600586
    5. 'range' → logprob: -4.149343490600586
    6. 'n' → logprob: -5.024343490600586
    7. 'input' → logprob: -5.649343490600586
    8. 'enti' → logprob: -5.774343490600586
    9. 'indice' → logprob: -6.274343490600586
    10. 'ar' → logprob: -7.024343490600586

Token 474: 'le' (ID: 282)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7685597538948059
    2. 'val' → logprob: -1.1435596942901611
    3. 'v' → logprob: -2.393559694290161
    4. '(n' → logprob: -3.893559694290161
    5. 'n' → logprob: -4.39355993270874
    6. ')' → logprob: -4.51855993270874
    7. '=' → logprob: -4.51855993270874
    8. '(' → logprob: -5.01855993270874
    9. 'u' → logprob: -5.14355993270874
    10. '       ' → logprob: -5.14355993270874

Token 475: ' complet' (ID: 5127)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5524308681488037
    2. '<|end|>' → logprob: -1.5524308681488037
    3. ' +' → logprob: -1.6774308681488037
    4. '       ' → logprob: -4.177431106567383
    5. '        ' → logprob: -6.302431106567383
    6. '
' → logprob: -6.427431106567383
    7. '        
' → logprob: -6.677431106567383
    8. '+
' → logprob: -7.552431106567383
    9. 's' → logprob: -7.552431106567383
    10. ',' → logprob: -7.927431106567383

Token 476: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.263379693031311
    2. '+' → logprob: -1.388379693031311
    3. '<|end|>' → logprob: -1.388379693031311
    4. ' +' → logprob: -1.638379693031311
    5. '        
' → logprob: -4.7633795738220215
    6. '
' → logprob: -5.8883795738220215
    7. '   ' → logprob: -6.6383795738220215
    8. 'for' → logprob: -6.8883795738220215
    9. '...' → logprob: -6.8883795738220215
    10. '<|end|>' → logprob: -7.0133795738220215

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31825509667396545
    2. 'n' → logprob: -2.1932551860809326
    3. ':' → logprob: -2.8182551860809326
    4. '(' → logprob: -2.9432551860809326
    5. ':n' → logprob: -3.4432551860809326
    6. '(n' → logprob: -5.3182549476623535
    7. '1' → logprob: -5.4432549476623535
    8. ':(' → logprob: -6.6932549476623535
    9. 'range' → logprob: -6.9432549476623535
    10. 'K' → logprob: -7.1932549476623535

Token 478: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9168546199798584
    2. ' :' → logprob: -1.0418546199798584
    3. ']' → logprob: -2.5418546199798584
    4. ',' → logprob: -2.5418546199798584
    5. ':n' → logprob: -2.9168546199798584
    6. ' ,' → logprob: -4.9168548583984375
    7. ':]' → logprob: -5.0418548583984375
    8. '+' → logprob: -5.6668548583984375
    9. ':(' → logprob: -5.6668548583984375
    10. '...' → logprob: -5.7918548583984375

Token 479: ' K' (ID: 658)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4287576377391815
    2. ' (' → logprob: -1.678757667541504
    3. 'n' → logprob: -2.178757667541504
    4. 'K' → logprob: -3.678757667541504
    5. '(K' → logprob: -4.678757667541504
    6. ' n' → logprob: -5.303757667541504
    7. ']' → logprob: -6.053757667541504
    8. '(' → logprob: -6.053757667541504
    9. ' K' → logprob: -6.678757667541504
    10. ')' → logprob: -7.553757667541504

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5998862981796265
    2. ']' → logprob: -0.8498862981796265
    3. '-' → logprob: -4.599886417388916
    4. '])' → logprob: -6.099886417388916
    5. ')
' → logprob: -6.349886417388916
    6. ':' → logprob: -6.349886417388916
    7. ' )' → logprob: -7.099886417388916
    8. ')]' → logprob: -7.099886417388916
    9. '+' → logprob: -7.474886417388916
    10. ']
' → logprob: -7.474886417388916

Token 481: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26947543025016785
    2. ' +' → logprob: -2.3944754600524902
    3. '<|end|>' → logprob: -2.3944754600524902
    4. '+
' → logprob: -3.7694754600524902
    5. ' 
' → logprob: -4.51947546005249
    6. '
' → logprob: -4.89447546005249
    7. ' +
' → logprob: -5.76947546005249
    8. ' ' → logprob: -6.14447546005249
    9. ' for' → logprob: -6.64447546005249
    10. 'for' → logprob: -7.14447546005249

Token 482: ' md' (ID: 17280)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2708952724933624
    2. ' +' → logprob: -1.64589524269104
    3. ' for' → logprob: -3.89589524269104
    4. 'for' → logprob: -4.270895481109619
    5. '<|end|>' → logprob: -5.895895481109619
    6. 's' → logprob: -6.520895481109619
    7. '+
' → logprob: -6.645895481109619
    8. ' +=' → logprob: -7.020895481109619
    9. '
' → logprob: -7.770895481109619
    10. ' ' → logprob: -7.895895481109619

Token 483: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6245433688163757
    2. '_sum' → logprob: -2.1245434284210205
    3. '=' → logprob: -2.2495434284210205
    4. ' =' → logprob: -2.2495434284210205
    5. 'sum' → logprob: -3.3745434284210205
    6. '_mod' → logprob: -3.7495434284210205
    7. 'a' → logprob: -4.499543190002441
    8. 'm' → logprob: -4.499543190002441
    9. 'mod' → logprob: -4.624543190002441
    10. '_' → logprob: -4.749543190002441

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38755616545677185
    2. '=' → logprob: -1.1375561952590942
    3. ' +=' → logprob: -7.512556076049805
    4. '+=' → logprob: -9.887556076049805
    5. '_count' → logprob: -10.762556076049805
    6. 'count' → logprob: -10.762556076049805
    7. '0' → logprob: -11.512556076049805
    8. ' ' → logprob: -12.012556076049805
    9. '   ' → logprob: -12.262556076049805
    10. '_' → logprob: -12.387556076049805

Token 485: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13721361756324768
    2. ' m' → logprob: -2.137213706970215
    3. '0' → logprob: -5.387213706970215
    4. 'md' → logprob: -6.137213706970215
    5. ' ' → logprob: -7.012213706970215
    6. 'K' → logprob: -7.512213706970215
    7. 'sum' → logprob: -7.887213706970215
    8. ' K' → logprob: -8.012213706970215
    9. 'sm' → logprob: -8.012213706970215
    10. ' sm' → logprob: -8.012213706970215

Token 486: 'da' (ID: 2529)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07172289490699768
    2. 'a' → logprob: -2.696722984313965
    3. 'da' → logprob: -7.321722984313965
    4. '-' → logprob: -7.821722984313965
    5. ' -' → logprob: -8.446722984313965
    6. 'd' → logprob: -8.946722984313965
    7. '[' → logprob: -9.446722984313965
    8. '[K' → logprob: -10.446722984313965
    9. '[a' → logprob: -10.571722984313965
    10. 'ax' → logprob: -10.571722984313965

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '+' → logprob: -17.5
    4. '۰' → logprob: -17.75
    5. '_' → logprob: -18.0
    6. ' +' → logprob: -18.375
    7. '```' → logprob: -18.875
    8. '   ' → logprob: -19.125
    9. '[' → logprob: -19.25
    10. '０' → logprob: -19.5

Token 488: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.002342707710340619
    2. '#' → logprob: -6.627342700958252
    3. 'for' → logprob: -7.752342700958252
    4. ' md' → logprob: -8.25234317779541
    5. 'm' → logprob: -8.62734317779541
    6. 'sm' → logprob: -9.87734317779541
    7. '0' → logprob: -10.75234317779541
    8. 'if' → logprob: -11.37734317779541
    9. ' for' → logprob: -11.62734317779541
    10. '   ' → logprob: -11.75234317779541

Token 491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.610702363715973e-06
    2. '=' → logprob: -12.125009536743164
    3. ' =' → logprob: -13.000009536743164
    4. ' ' → logprob: -14.375009536743164
    5. '<|end|>' → logprob: -14.500009536743164
    6. 'a' → logprob: -16.375009536743164
    7. '_' → logprob: -16.500009536743164
    8. '```' → logprob: -16.500009536743164
    9. '  ' → logprob: -17.000009536743164
    10. '[' → logprob: -17.125009536743164

Token 492: ' copie' (ID: 134141)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: ' valeur' (ID: 41664)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.1689596148207784e-05
    2. ' m' → logprob: -10.250051498413086
    3. 'comp' → logprob: -11.625051498413086
    4. '0' → logprob: -13.125051498413086
    5. 'nombre' → logprob: -13.250051498413086
    6. 'counter' → logprob: -13.625051498413086
    7. ' compteur' → logprob: -13.625051498413086
    8. 'md' → logprob: -15.125051498413086
    9. 'count' → logprob: -15.250051498413086
    10. '
' → logprob: -15.375051498413086

Token 495: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ' nombre' (ID: 9733)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001835141738411039
    2. 'md' → logprob: -9.75018310546875
    3. 'comp' → logprob: -9.75018310546875
    4. ' m' → logprob: -10.25018310546875
    5. ' compteur' → logprob: -11.00018310546875
    6. 'counter' → logprob: -11.87518310546875
    7. '   ' → logprob: -13.37518310546875
    8. '0' → logprob: -13.87518310546875
    9. 'contador' → logprob: -14.25018310546875
    10. '```' → logprob: -14.50018310546875

Token 497: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.41480323672294617
    2. 'de' → logprob: -1.7898032665252686
    3. ' d' → logprob: -2.5398032665252686
    4. ' de' → logprob: -2.9148032665252686
    5. 'md' → logprob: -4.1648030281066895
    6. 'm' → logprob: -4.7898030281066895
    7. ' of' → logprob: -4.7898030281066895
    8. '0' → logprob: -6.0398030281066895
    9. 'of' → logprob: -6.5398030281066895
    10. 'des' → logprob: -7.2898030281066895

Token 498: ''' (ID: 6)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.20208697021007538
    2. 'élé' → logprob: -1.9520869255065918
    3. 'elements' → logprob: -3.952086925506592
    4. 'm' → logprob: -5.077086925506592
    5. 'z' → logprob: -5.202086925506592
    6. '0' → logprob: -5.702086925506592
    7. ' éléments' → logprob: -6.827086925506592
    8. 'zeros' → logprob: -7.077086925506592
    9. ' elements' → logprob: -7.327086925506592
    10. 'elem' → logprob: -7.327086925506592

Token 499: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1640922874212265
    2. 'md' → logprob: -2.0390923023223877
    3. 'elements' → logprob: -4.164092063903809
    4. 'z' → logprob: -5.789092063903809
    5. ' éléments' → logprob: -7.289092063903809
    6. 'm' → logprob: -7.664092063903809
    7. '0' → logprob: -8.039092063903809
    8. 'zeros' → logprob: -8.414092063903809
    9. 'él' → logprob: -8.664092063903809
    10. 'é' → logprob: -8.789092063903809

Token 500: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.1485084593296051
    2. 'ents' → logprob: -2.1485085487365723
    3. 'ements' → logprob: -4.898508548736572
    4. 'éments' → logprob: -4.898508548736572
    5. 'ment' → logprob: -6.398508548736572
    6. 'm' → logprob: -6.398508548736572
    7. 'nts' → logprob: -7.523508548736572
    8. 'lements' → logprob: -7.648508548736572
    9. 'ts' → logprob: -7.648508548736572
    10. '```' → logprob: -8.148508071899414

Token 501: ' n' (ID: 297)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.011421258561313152
    2. ' md' → logprob: -5.011421203613281
    3. '0' → logprob: -6.636421203613281
    4. 'zero' → logprob: -7.261421203613281
    5. '<|end|>' → logprob: -7.386421203613281
    6. 'zeros' → logprob: -7.511421203613281
    7. ' zéro' → logprob: -8.636421203613281
    8. ' zero' → logprob: -8.886421203613281
    9. 'null' → logprob: -8.886421203613281
    10. '```' → logprob: -8.886421203613281

Token 502: 'uls' (ID: 13433)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.35548898577690125
    2. 'd' → logprob: -2.6054890155792236
    3. '[i' → logprob: -3.1054890155792236
    4. '==' → logprob: -3.2304890155792236
    5. '[' → logprob: -3.9804890155792236
    6. 'ull' → logprob: -4.2304887771606445
    7. '```' → logprob: -4.2304887771606445
    8. 'dans' → logprob: -4.3554887771606445
    9. '%' → logprob: -4.6054887771606445
    10. ' ==' → logprob: -5.2304887771606445

Token 503: ' rencontr' (ID: 49751)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.015246429480612278
    2. 'dans' → logprob: -4.640246391296387
    3. 'ées' → logprob: -6.390246391296387
    4. 'ant' → logprob: -6.515246391296387
    5. 'es' → logprob: -7.015246391296387
    6. 'é' → logprob: -8.515246391296387
    7. '0' → logprob: -8.640246391296387
    8. 'ent' → logprob: -8.765246391296387
    9. ' dans' → logprob: -9.015246391296387
    10. 'aux' → logprob: -9.140246391296387

Token 505: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ' la' (ID: 557)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.020451020449399948
    2. 'sm' → logprob: -4.395451068878174
    3. ' md' → logprob: -5.645451068878174
    4. 'the' → logprob: -6.395451068878174
    5. 'la' → logprob: -7.145451068878174
    6. ' sm' → logprob: -7.770451068878174
    7. 'this' → logprob: -8.145450592041016
    8. ' the' → logprob: -8.270450592041016
    9. 'm' → logprob: -8.395450592041016
    10. ' la' → logprob: -8.520450592041016

Token 507: ' première' (ID: 23423)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.21865126490592957
    2. 'prem' → logprob: -2.843651294708252
    3. 'for' → logprob: -3.093651294708252
    4. 'range' → logprob: -3.218651294708252
    5. ' md' → logprob: -4.218651294708252
    6. 'part' → logprob: -4.968651294708252
    7. 'segment' → logprob: -5.218651294708252
    8. 'sm' → logprob: -5.343651294708252
    9. '#' → logprob: -5.593651294708252
    10. 'interval' → logprob: -5.718651294708252

Token 508: ' partie' (ID: 22139)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.658318042755127
    2. 'part' → logprob: -1.658318042755127
    3. '<|end|>' → logprob: -2.533318042755127
    4. ' partie' → logprob: -3.033318042755127
    5. '   ' → logprob: -3.283318042755127
    6. ' portion' → logprob: -3.908318042755127
    7. ' segment' → logprob: -4.158318042755127
    8. 'for' → logprob: -4.658318042755127
    9. ' ' → logprob: -4.908318042755127
    10. ')' → logprob: -5.033318042755127

Token 509: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12653060257434845
    2. '<|end|>' → logprob: -2.376530647277832
    3. '        
' → logprob: -4.876530647277832
    4. '+' → logprob: -5.126530647277832
    5. '   ' → logprob: -5.501530647277832
    6. '
' → logprob: -6.501530647277832
    7. ' +' → logprob: -6.626530647277832
    8. '        ' → logprob: -7.376530647277832
    9. ' 
' → logprob: -7.501530647277832
    10. ' ' → logprob: -7.626530647277832

Token 511: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40737953782081604
    2. ' for' → logprob: -1.6573795080184937
    3. '       ' → logprob: -3.032379627227783
    4. '
' → logprob: -3.157379627227783
    5. '        
' → logprob: -4.032379627227783
    6. 'if' → logprob: -4.532379627227783
    7. '#' (adapté à ' #') → logprob: -5.282379627227783
    8. '<|end|>' → logprob: -5.782379627227783
    9. ' if' → logprob: -6.032379627227783
    10. '    
' → logprob: -6.157379627227783

Token 512: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0335921086370945
    2. 'if' → logprob: -4.033592224121094
    3. '#' → logprob: -5.158592224121094
    4. '       ' → logprob: -5.783592224121094
    5. 'i' → logprob: -6.283592224121094
    6. 'sm' → logprob: -6.658592224121094
    7. ' for' → logprob: -7.533592224121094
    8. 'rest' → logprob: -7.658592224121094
    9. 'rem' → logprob: -8.033592224121094
    10. 'md' → logprob: -8.158592224121094

Token 513: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.37422263622283936
    2. 'range' → logprob: -1.6242226362228394
    3. 'r' → logprob: -2.249222755432129
    4. 'rk' → logprob: -6.124222755432129
    5. 'reak' → logprob: -6.874222755432129
    6. 'e' → logprob: -7.249222755432129
    7. ' for' → logprob: -7.249222755432129
    8. 'ck' → logprob: -7.249222755432129
    9. 'op' → logprob: -7.374222755432129
    10. 'k' → logprob: -7.624222755432129

Token 514: ' sur' (ID: 1512)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5159541964530945
    2. 'for' → logprob: -1.6409542560577393
    3. ' in' → logprob: -1.7659542560577393
    4. 'in' → logprob: -3.6409542560577393
    5. '(' → logprob: -4.89095401763916
    6. ' (' → logprob: -6.89095401763916
    7. '(range' → logprob: -6.89095401763916
    8. '       ' → logprob: -7.64095401763916
    9. 'range' → logprob: -7.64095401763916
    10. '   ' → logprob: -8.39095401763916

Token 515: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036323845852166414
    2. ' range' → logprob: -5.628632545471191
    3. 'i' → logprob: -10.753632545471191
    4. '(range' → logprob: -12.003632545471191
    5. '	range' → logprob: -13.253632545471191
    6. '
' → logprob: -14.753632545471191
    7. ')' → logprob: -14.878632545471191
    8. 'in' → logprob: -15.253632545471191
    9. ' ' → logprob: -15.628632545471191
    10. 'for' → logprob: -15.753632545471191

Token 516: ' éléments' (ID: 57375)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03037467785179615
    2. ' range' → logprob: -3.530374765396118
    3. 'i' → logprob: -7.655374526977539
    4. '(range' → logprob: -9.905374526977539
    5. ' i' → logprob: -10.905374526977539
    6. '	range' → logprob: -11.405374526977539
    7. ' ' → logprob: -11.405374526977539
    8. '   ' → logprob: -11.530374526977539
    9. 'for' → logprob: -12.030374526977539
    10. ')' → logprob: -12.155374526977539

Token 517: ' md' (ID: 17280)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08634588122367859
    2. '(range' → logprob: -3.086345911026001
    3. 'md' → logprob: -3.836345911026001
    4. ' range' → logprob: -4.711345672607422
    5. 'for' → logprob: -6.086345672607422
    6. 'in' → logprob: -6.836345672607422
    7. '(md' → logprob: -7.211345672607422
    8. ' in' → logprob: -7.461345672607422
    9. '(' → logprob: -7.586345672607422
    10. ')' → logprob: -7.836345672607422

Token 518: ' du' (ID: 1462)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5816033482551575
    2. ' in' → logprob: -1.0816032886505127
    3. '[i' → logprob: -3.7066032886505127
    4. 'range' → logprob: -3.7066032886505127
    5. 'for' → logprob: -3.8316032886505127
    6. '[' → logprob: -4.331603527069092
    7. '(range' → logprob: -4.956603527069092
    8. ' range' → logprob: -5.331603527069092
    9. ' for' → logprob: -5.706603527069092
    10. 'i' → logprob: -7.331603527069092

Token 519: ' précédent' (ID: 128462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.30987483263015747
    2. ' range' → logprob: -1.6848747730255127
    3. '((' → logprob: -3.0598747730255127
    4. '0' → logprob: -3.9348747730255127
    5. '(range' → logprob: -5.434875011444092
    6. '(' → logprob: -5.684875011444092
    7. '(i' → logprob: -6.559875011444092
    8. 'for' → logprob: -6.559875011444092
    9. ' (' → logprob: -6.809875011444092
    10. 'i' → logprob: -7.309875011444092

Token 520: ' index' (ID: 3472)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17229783535003662
    2. '((' → logprob: -2.672297954559326
    3. 'K' → logprob: -3.172297954559326
    4. 'for' → logprob: -3.547297954559326
    5. '(range' → logprob: -5.422297954559326
    6. '(i' → logprob: -5.547297954559326
    7. '(K' → logprob: -6.172297954559326
    8. '_K' → logprob: -6.172297954559326
    9. 'i' → logprob: -6.297297954559326
    10. ' range' → logprob: -6.422297954559326

Token 521: ' jusqu' (ID: 21961)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.1891405582427979
    2. '((' → logprob: -1.4391405582427979
    3. ',' → logprob: -1.9391405582427979
    4. 'range' → logprob: -2.189140558242798
    5. 'for' → logprob: -2.314140558242798
    6. '(range' → logprob: -3.564140558242798
    7. '[i' → logprob: -3.814140558242798
    8. ' for' → logprob: -4.064140319824219
    9. '(i' → logprob: -4.814140319824219
    10. '[' → logprob: -5.439140319824219

Token 522: ''à' (ID: 33688)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.037861183285713196
    2. '(' → logprob: -4.662861347198486
    3. ' (' → logprob: -4.662861347198486
    4. '(K' → logprob: -4.662861347198486
    5. 'K' → logprob: -5.787861347198486
    6. ' K' → logprob: -6.287861347198486
    7. ' ((' → logprob: -6.412861347198486
    8. '[(' → logprob: -7.412861347198486
    9. ',' → logprob: -7.662861347198486
    10. 'range' → logprob: -8.162860870361328

Token 523: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.040238916873931885
    2. ' K' → logprob: -3.665238857269287
    3. 'range' → logprob: -5.290238857269287
    4. '(K' → logprob: -5.790238857269287
    5. '(' → logprob: -6.415238857269287
    6. ' (' → logprob: -6.415238857269287
    7. '((' → logprob: -6.540238857269287
    8. ' range' → logprob: -7.290238857269287
    9. 'n' → logprob: -9.790239334106445
    10. '(range' → logprob: -9.915239334106445

Token 524: ' (' (ID: 350)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.6744533181190491
    2. ',' → logprob: -1.5494532585144043
    3. '(i' → logprob: -2.1744532585144043
    4. 'for' → logprob: -2.7994532585144043
    5. 'range' → logprob: -2.7994532585144043
    6. '(' → logprob: -4.049453258514404
    7. ' for' → logprob: -5.049453258514404
    8. ' range' → logprob: -5.674453258514404
    9. '((' → logprob: -6.049453258514404
    10. '       ' → logprob: -6.174453258514404

Token 525: 'pour' (ID: 52723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7958187460899353
    2. 'for' → logprob: -1.42081880569458
    3. '((' → logprob: -1.42081880569458
    4. '(i' → logprob: -3.79581880569458
    5. ',' → logprob: -4.67081880569458
    6. '(range' → logprob: -4.67081880569458
    7. 'i' → logprob: -4.67081880569458
    8. ' for' → logprob: -5.04581880569458
    9. ' range' → logprob: -5.67081880569458
    10. 'in' → logprob: -7.04581880569458

Token 526: ' finir' (ID: 97022)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2482762187719345
    2. ' i' → logprob: -1.9982762336730957
    3. 'range' → logprob: -2.7482762336730957
    4. ' range' → logprob: -3.9982762336730957
    5. '(i' → logprob: -6.623276233673096
    6. ')' → logprob: -9.623275756835938
    7. '(' → logprob: -9.748275756835938
    8. 'for' → logprob: -9.748275756835938
    9. ' ' → logprob: -10.123275756835938
    10. ' (' → logprob: -10.435775756835938

Token 527: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31472718715667725
    2. '((' → logprob: -1.6897271871566772
    3. 'range' → logprob: -4.064727306365967
    4. '(i' → logprob: -4.314727306365967
    5. '):' → logprob: -4.564727306365967
    6. '(n' → logprob: -4.564727306365967
    7. '(' → logprob: -4.939727306365967
    8. ' (' → logprob: -5.189727306365967
    9. '):
' → logprob: -5.814727306365967
    10. '(range' → logprob: -5.814727306365967

Token 528: ' sé' (ID: 7462)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.934546709060669
    2. 'range' → logprob: -1.184546709060669
    3. ' range' → logprob: -1.934546709060669
    4. '):' → logprob: -3.059546709060669
    5. ' K' → logprob: -3.559546709060669
    6. 'n' → logprob: -4.05954647064209
    7. ':' → logprob: -4.18454647064209
    8. '):
' → logprob: -4.30954647064209
    9. ')' → logprob: -4.43454647064209
    10. ',' → logprob: -5.18454647064209

Token 529: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.39093318581581116
    2. 'range' → logprob: -1.2659331560134888
    3. 'rie' → logprob: -4.765933036804199
    4. 'lection' → logprob: -5.015933036804199
    5. '(range' → logprob: -5.015933036804199
    6. 'gment' → logprob: -5.515933036804199
    7. ')' → logprob: -5.890933036804199
    8. 'm' → logprob: -6.265933036804199
    9. '((' → logprob: -6.390933036804199
    10. 'lect' → logprob: -6.765933036804199

Token 530: ')
' (ID: 446)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03945181891322136
    2. ',' → logprob: -3.914451837539673
    3. '(i' → logprob: -5.414451599121094
    4. 'for' → logprob: -5.414451599121094
    5. 'range' → logprob: -5.789451599121094
    6. '(range' → logprob: -6.164451599121094
    7. '[(' → logprob: -6.789451599121094
    8. '(' → logprob: -7.414451599121094
    9. '+' → logprob: -7.914451599121094
    10. ':' → logprob: -7.914451599121094

Token 531: '       ' (ID: 309)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.701807975769043
    2. '(range' → logprob: -1.326807975769043
    3. ' in' → logprob: -2.451807975769043
    4. 'for' → logprob: -2.701807975769043
    5. ' range' → logprob: -3.576807975769043
    6. 'in' → logprob: -3.701807975769043
    7. ' for' → logprob: -3.701807975769043
    8. ',' → logprob: -5.201807975769043
    9. '(' → logprob: -6.576807975769043
    10. ':' → logprob: -7.576807975769043

Token 532: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06458579003810883
    2. ' for' → logprob: -3.3145856857299805
    3. 'range' → logprob: -3.9395856857299805
    4. ' in' → logprob: -5.3145856857299805
    5. '(range' → logprob: -7.5645856857299805
    6. 'in' → logprob: -7.9395856857299805
    7. ' range' → logprob: -7.9395856857299805
    8. 'from' → logprob: -8.31458568572998
    9. '   ' → logprob: -8.56458568572998
    10. '(i' → logprob: -10.56458568572998

Token 533: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25201478600502014
    2. ' i' → logprob: -1.5020147562026978
    3. '	i' → logprob: -10.752015113830566
    4. 'j' → logprob: -10.877015113830566
    5. ' ' → logprob: -11.127015113830566
    6. 'I' → logprob: -12.752015113830566
    7. '   ' → logprob: -12.814515113830566
    8. '_i' → logprob: -12.877015113830566
    9. ' j' → logprob: -13.189515113830566
    10. '[i' → logprob: -13.502015113830566

Token 534: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07899289578199387
    2. 'in' → logprob: -2.5789928436279297
    3. '((' → logprob: -10.20399284362793
    4. ' _' → logprob: -11.45399284362793
    5. '_' → logprob: -11.57899284362793
    6. ' ((' → logprob: -11.70399284362793
    7. 'range' → logprob: -11.70399284362793
    8. '   ' → logprob: -11.95399284362793
    9. ' ' → logprob: -12.45399284362793
    10. '	in' → logprob: -12.57899284362793

Token 535: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12704527378082275
    2. ' range' → logprob: -2.127045154571533
    3. ' in' → logprob: -10.252045631408691
    4. 'in' → logprob: -10.502045631408691
    5. '((' → logprob: -11.127045631408691
    6. '   ' → logprob: -11.502045631408691
    7. '(range' → logprob: -11.627045631408691
    8. ' ' → logprob: -12.002045631408691
    9. 're' → logprob: -12.752045631408691
    10. '_' → logprob: -13.002045631408691

Token 536: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.5941604690160602e-05
    2. '(' → logprob: -11.500025749206543
    3. '(n' → logprob: -12.125025749206543
    4. '(((' → logprob: -12.625025749206543
    5. '(i' → logprob: -12.625025749206543
    6. ' ((' → logprob: -13.000025749206543
    7. '((_' → logprob: -14.750025749206543
    8. '(_' → logprob: -14.875025749206543
    9. '[(' → logprob: -15.250025749206543
    10. '(max' → logprob: -15.625025749206543

Token 537: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0015671150758862495
    2. 'n' → logprob: -6.5015668869018555
    3. ' (' → logprob: -9.876566886901855
    4. '((' → logprob: -11.876566886901855
    5. '(' → logprob: -12.501566886901855
    6. '(
' → logprob: -14.001566886901855
    7. '   ' → logprob: -14.251566886901855
    8. '
' → logprob: -15.376566886901855
    9. ' n' → logprob: -15.626566886901855
    10. '{' → logprob: -16.189067840576172

Token 538: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22604888677597046
    2. '-' → logprob: -1.6010489463806152
    3. ' ' → logprob: -8.976048469543457
    4. '   ' → logprob: -9.226048469543457
    5. ' %' → logprob: -9.226048469543457
    6. '[' → logprob: -9.476048469543457
    7. '%' → logprob: -9.601048469543457
    8. '
' → logprob: -9.976048469543457
    9. '(' → logprob: -10.726048469543457
    10. ')' → logprob: -11.163548469543457

Token 539: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001328572048805654
    2. ' ' → logprob: -6.626328468322754
    3. '   ' → logprob: -13.751328468322754
    4. '<|end|>' → logprob: -14.751328468322754
    5. '...' → logprob: -15.376328468322754
    6. '```' → logprob: -15.938828468322754
    7. '[' → logprob: -16.31382942199707
    8. '  ' → logprob: -16.37632942199707
    9. '2' → logprob: -16.43882942199707
    10. '<|end|>' → logprob: -16.56382942199707

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009140860638581216
    2. ' ' → logprob: -7.000914096832275
    3. '   ' → logprob: -14.500913619995117
    4. '
' → logprob: -15.250913619995117
    5. '  ' → logprob: -15.438413619995117
    6. 'K' → logprob: -15.750913619995117
    7. '(' → logprob: -15.938413619995117
    8. '-' → logprob: -15.938413619995117
    9. '```' → logprob: -16.063413619995117
    10. '2' → logprob: -16.375913619995117

Token 541: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10341084003448486
    2. ',' → logprob: -2.3534107208251953
    3. ')%' → logprob: -5.978410720825195
    4. '),' → logprob: -7.853410720825195
    5. ' ,' → logprob: -8.853410720825195
    6. '   ' → logprob: -10.353410720825195
    7. '%' → logprob: -10.603410720825195
    8. ' )' → logprob: -10.603410720825195
    9. '+' → logprob: -11.353410720825195
    10. '(),' → logprob: -11.728410720825195

Token 542: ' %' (ID: 1851)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03974342346191406
    2. '%' → logprob: -3.789743423461914
    3. ' %' → logprob: -4.539743423461914
    4. ' ,' → logprob: -5.414743423461914
    5. '%,' → logprob: -6.789743423461914
    6. ' %,' → logprob: -10.539743423461914
    7. ' ' → logprob: -10.914743423461914
    8. ',K' → logprob: -11.039743423461914
    9. '   ' → logprob: -11.289743423461914
    10. '       ' → logprob: -11.789743423461914

Token 543: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.04300559684634209
    2. ' K' → logprob: -3.1680057048797607
    3. ' ' → logprob: -13.16800594329834
    4. '	K' → logprob: -13.29300594329834
    5. '   ' → logprob: -13.41800594329834
    6. '>K' → logprob: -15.04300594329834
    7. ')' → logprob: -15.29300594329834
    8. '  ' → logprob: -15.41800594329834
    9. '_K' → logprob: -16.293004989624023
    10. '    ' → logprob: -16.418004989624023

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013946419348940253
    2. ' ,' → logprob: -6.626394748687744
    3. ',K' → logprob: -9.626394271850586
    4. 'K' → logprob: -13.876394271850586
    5. ',n' → logprob: -14.251394271850586
    6. ',k' → logprob: -14.626394271850586
    7. ',len' → logprob: -15.626394271850586
    8. '   ' → logprob: -16.376394271850586
    9. ',
' → logprob: -16.376394271850586
    10. ',m' → logprob: -16.376394271850586

Token 545: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0011749862460419536
    2. ' K' → logprob: -6.7511749267578125
    3. '	K' → logprob: -13.001174926757812
    4. '   ' → logprob: -13.126174926757812
    5. '       ' → logprob: -15.251174926757812
    6. '  ' → logprob: -16.501174926757812
    7. ' ' → logprob: -16.501174926757812
    8. '>K' → logprob: -17.376174926757812
    9. '    ' → logprob: -17.626174926757812
    10. '[K' → logprob: -18.001174926757812

Token 546: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47446519136428833
    2. '):
' → logprob: -0.9744651913642883
    3. '):
' → logprob: -8.099465370178223
    4. ':' → logprob: -10.224465370178223
    5. '       ' → logprob: -10.724465370178223
    6. '   ' → logprob: -11.849465370178223
    7. ')' → logprob: -11.849465370178223
    8. '):

' → logprob: -12.849465370178223
    9. ']:' → logprob: -12.974465370178223
    10. '           ' → logprob: -13.599465370178223

Token 547: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23504672944545746
    2. '       ' → logprob: -1.9850467443466187
    3. '   ' → logprob: -3.235046625137329
    4. '           ' → logprob: -4.110046863555908
    5. ':
' → logprob: -4.985046863555908
    6. ' if' → logprob: -5.485046863555908
    7. '
' → logprob: -6.110046863555908
    8. '):
' → logprob: -6.610046863555908
    9. ':' → logprob: -6.985046863555908
    10. '```' → logprob: -8.11004638671875

Token 548: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018322953954339027
    2. '#' (adapté à ' #') → logprob: -5.018322944641113
    3. '       ' → logprob: -5.143322944641113
    4. '           ' → logprob: -5.393322944641113
    5. 'sm' → logprob: -7.393322944641113
    6. '   ' → logprob: -8.268322944641113
    7. 'md' → logprob: -8.393322944641113
    8. ' if' → logprob: -10.518322944641113
    9. '```' → logprob: -11.268322944641113
    10. '
' → logprob: -12.518322944641113

Token 549: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005562512087635696
    2. '           ' → logprob: -7.750556468963623
    3. 'sm' → logprob: -9.500555992126465
    4. '       ' → logprob: -10.375555992126465
    5. ' if' → logprob: -11.875555992126465
    6. 'md' → logprob: -12.125555992126465
    7. '```' → logprob: -13.000555992126465
    8. '
' → logprob: -13.375555992126465
    9. '   ' → logprob: -13.500555992126465
    10. 's' → logprob: -14.250555992126465

Token 550: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.06198651343584061
    2. ' md' → logprob: -2.8119864463806152
    3. '   ' → logprob: -12.186986923217773
    4. '(md' → logprob: -12.561986923217773
    5. '	md' → logprob: -12.686986923217773
    6. '           ' → logprob: -13.061986923217773
    7. '       ' → logprob: -13.311986923217773
    8. '    ' → logprob: -14.186986923217773
    9. ' ' → logprob: -14.311986923217773
    10. '.md' → logprob: -14.936986923217773

Token 551: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7835754988482222e-05
    2. '[' → logprob: -11.625018119812012
    3. 'md' → logprob: -12.625018119812012
    4. ' [' → logprob: -13.000018119812012
    5. 'i' → logprob: -13.375018119812012
    6. '[I' → logprob: -14.625018119812012
    7. '[
' → logprob: -15.250018119812012
    8. '```' → logprob: -15.500018119812012
    9. '[int' → logprob: -15.750018119812012
    10. '[m' → logprob: -16.500017166137695

Token 552: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1605055034160614
    2. '==' → logprob: -1.9105055332183838
    3. ']' → logprob: -9.035505294799805
    4. ']==' → logprob: -9.035505294799805
    5. ')' → logprob: -11.160505294799805
    6. ')==' → logprob: -11.910505294799805
    7. '[' → logprob: -11.910505294799805
    8. ' ' → logprob: -12.160505294799805
    9. '[i' → logprob: -12.660505294799805
    10. '=' → logprob: -12.910505294799805

Token 553: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5231464505195618
    2. ' ==' → logprob: -0.8981464505195618
    3. '=' → logprob: -11.898146629333496
    4. '==
' → logprob: -12.523146629333496
    5. '```' → logprob: -13.023146629333496
    6. '0' → logprob: -13.273146629333496
    7. '!=' → logprob: -13.273146629333496
    8. ' ' → logprob: -13.773146629333496
    9. ']==' → logprob: -14.273146629333496
    10. ' !=' → logprob: -14.273146629333496

Token 554: ' nul' (ID: 64435)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11285382509231567
    2. ' ' → logprob: -2.237853765487671
    3. '==' → logprob: -11.73785400390625
    4. '=' → logprob: -12.11285400390625
    5. '   ' → logprob: -12.36285400390625
    6. '1' → logprob: -13.11285400390625
    7. '```' → logprob: -13.11285400390625
    8. ' ==' → logprob: -13.42535400390625
    9. '  ' → logprob: -13.92535400390625
    10. 'not' → logprob: -13.98785400390625

Token 555: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4359595775604248
    2. ':
' → logprob: -1.1859595775604248
    3. '               ' → logprob: -3.435959577560425
    4. '           ' → logprob: -5.060959815979004
    5. '==' → logprob: -5.435959815979004
    6. ',' → logprob: -5.560959815979004
    7. ' ==' → logprob: -7.560959815979004
    8. ' if' → logprob: -9.435959815979004
    9. '<|end|>' → logprob: -9.435959815979004
    10. 'if' → logprob: -9.810959815979004

Token 556: ' incr' (ID: 52395)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.033006127923727036
    2. ' md' → logprob: -3.658006191253662
    3. '               ' → logprob: -5.408006191253662
    4. '           ' → logprob: -6.158006191253662
    5. '	md' → logprob: -9.908005714416504
    6. 'm' → logprob: -10.783005714416504
    7. '       ' → logprob: -12.408005714416504
    8. ' m' → logprob: -12.908005714416504
    9. '   ' → logprob: -12.908005714416504
    10. '.md' → logprob: -13.533005714416504

Token 557: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4372161328792572
    2. 'ément' → logprob: -1.0622161626815796
    3. 'm' → logprob: -5.687216281890869
    4. 'ement' → logprob: -6.562216281890869
    5. 'ém' → logprob: -6.812216281890869
    6. 'éments' → logprob: -6.812216281890869
    7. 'mente' → logprob: -7.312216281890869
    8. 'emente' → logprob: -8.437215805053711
    9. 'ép' → logprob: -8.687215805053711
    10. '   ' → logprob: -10.187215805053711

Token 558: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.24280114471912384
    2. 'mente' → logprob: -1.6178011894226074
    3. 'm' → logprob: -4.867801189422607
    4. '   ' → logprob: -5.992801189422607
    5. '       ' → logprob: -6.367801189422607
    6. 'nte' → logprob: -6.492801189422607
    7. '               ' → logprob: -7.367801189422607
    8. 'mentation' → logprob: -7.492801189422607
    9. 'mented' → logprob: -7.617801189422607
    10. '           ' → logprob: -7.742801189422607

Token 559: ' le' (ID: 505)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.009016446769237518
    2. 'm' → logprob: -4.759016513824463
    3. ' md' → logprob: -8.134016036987305
    4. '   ' → logprob: -9.759016036987305
    5. ' m' → logprob: -10.384016036987305
    6. '       ' → logprob: -11.884016036987305
    7. '	md' → logprob: -12.634016036987305
    8. '           ' → logprob: -13.009016036987305
    9. '  ' → logprob: -13.384016036987305
    10. '    ' → logprob: -13.634016036987305

Token 560: ' compteur' (ID: 163344)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.0028105827514082193
    2. 'm' → logprob: -5.877810478210449
    3. ' md' → logprob: -12.50281047821045
    4. '```' → logprob: -14.50281047821045
    5. '   ' → logprob: -14.75281047821045
    6. ' m' → logprob: -15.75281047821045
    7. 'counter' → logprob: -16.002811431884766
    8. '	md' → logprob: -16.252811431884766
    9. 'mp' → logprob: -16.752811431884766
    10. 'mb' → logprob: -16.877811431884766

Token 561: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.0004260276327840984
    2. ' md' → logprob: -8.625426292419434
    3. 'if' → logprob: -9.125426292419434
    4. '           ' → logprob: -9.375426292419434
    5. 'm' → logprob: -10.250426292419434
    6. '       ' → logprob: -11.875426292419434
    7. '               ' → logprob: -12.625426292419434
    8. ' if' → logprob: -12.875426292419434
    9. '   ' → logprob: -13.000426292419434
    10. '	md' → logprob: -14.000426292419434

Token 562: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5213274309644476e-05
    2. '[i' → logprob: -11.125015258789062
    3. '```' → logprob: -15.250015258789062
    4. 'd' → logprob: -16.875015258789062
    5. '[' → logprob: -17.125015258789062
    6. 'i' → logprob: -17.500015258789062
    7. '０' → logprob: -17.750015258789062
    8. 'md' → logprob: -18.000015258789062
    9. ' ' → logprob: -18.125015258789062
    10. '_' → logprob: -18.250015258789062

Token 563: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001827384578064084
    2. '               ' → logprob: -6.626827239990234
    3. 'if' → logprob: -8.251827239990234
    4. ' if' → logprob: -9.126827239990234
    5. ':' → logprob: -10.001827239990234
    6. '```' → logprob: -10.251827239990234
    7. 'md' → logprob: -10.376827239990234
    8. '.' → logprob: -12.251827239990234
    9. ':
' → logprob: -13.126827239990234
    10. '		' → logprob: -13.126827239990234

Token 564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003404687449801713
    2. 'if' → logprob: -8.375340461730957
    3. ' if' → logprob: -9.250340461730957
    4. '       ' → logprob: -12.000340461730957
    5. '```' → logprob: -12.750340461730957
    6. '               ' → logprob: -13.250340461730957
    7. 'md' → logprob: -13.625340461730957
    8. '		' → logprob: -14.500340461730957
    9. '   ' → logprob: -15.000340461730957
    10. '	       ' → logprob: -15.125340461730957

Token 565: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005587508203461766
    2. '           ' → logprob: -7.500558853149414
    3. ' if' → logprob: -12.750558853149414
    4. 'md' → logprob: -13.250558853149414
    5. '       ' → logprob: -14.625558853149414
    6. '               ' → logprob: -14.750558853149414
    7. '   ' → logprob: -15.250558853149414
    8. '	if' → logprob: -17.125558853149414
    9. '```' → logprob: -18.625558853149414
    10. ' ' → logprob: -19.375558853149414

Token 566: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.0024756586644798517
    2. ' md' → logprob: -6.002475738525391
    3. '	md' → logprob: -17.25247573852539
    4. '(md' → logprob: -17.37747573852539
    5. '   ' → logprob: -19.37747573852539
    6. ' ' → logprob: -19.75247573852539
    7. '.md' → logprob: -20.50247573852539
    8. '  ' → logprob: -22.62747573852539
    9. '/md' → logprob: -22.75247573852539
    10. 'not' → logprob: -22.87747573852539

Token 567: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.500007629394531
    3. 'i' → logprob: -12.625007629394531
    4. '```' → logprob: -15.000007629394531
    5. '\[' → logprob: -15.750007629394531
    6. ' [' → logprob: -16.37500762939453
    7. '[
' → logprob: -16.50000762939453
    8. '[I' → logprob: -16.50000762939453
    9. 'd' → logprob: -16.62500762939453
    10. 'md' → logprob: -17.25000762939453

Token 568: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6952356696128845
    2. ']' → logprob: -1.4452357292175293
    3. '==' → logprob: -1.4452357292175293
    4. ']==' → logprob: -3.5702357292175293
    5. '[' → logprob: -7.070235729217529
    6. '[i' → logprob: -8.070235252380371
    7. ')' → logprob: -9.195235252380371
    8. ' ]' → logprob: -9.445235252380371
    9. ' ' → logprob: -9.695235252380371
    10. ')==' → logprob: -10.445235252380371

Token 569: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3134324252605438
    2. ' ==' → logprob: -1.3134324550628662
    3. '0' → logprob: -8.813432693481445
    4. '[' → logprob: -11.688432693481445
    5. '==
' → logprob: -11.938432693481445
    6. '```' → logprob: -12.813432693481445
    7. '=' → logprob: -13.313432693481445
    8. ']==' → logprob: -13.813432693481445
    9. ' ' → logprob: -14.563432693481445
    10. '[]' → logprob: -15.438432693481445

Token 570: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858759790658951
    2. ' ' → logprob: -3.0485875606536865
    3. '   ' → logprob: -15.923587799072266
    4. '  ' → logprob: -16.298587799072266
    5. ' ' → logprob: -17.923587799072266
    6. '	' → logprob: -18.798587799072266
    7. '۰' → logprob: -19.048587799072266
    8. '    ' → logprob: -19.548587799072266
    9. '```' → logprob: -19.548587799072266
    10. '     ' → logprob: -20.423587799072266

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006268949946388602
    2. ' ' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.875626564025879
    4. '=' → logprob: -16.375627517700195
    5. '  ' → logprob: -17.250627517700195
    6. '```' → logprob: -17.250627517700195
    7. '۰' → logprob: -18.188127517700195
    8. '	' → logprob: -18.188127517700195
    9. '==' → logprob: -18.250627517700195
    10. 'm' → logprob: -18.688127517700195

Token 572: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8451861143112183
    2. ':
' → logprob: -0.8451861143112183
    3. ':' → logprob: -1.9701861143112183
    4. '           ' → logprob: -6.720186233520508
    5. 'md' → logprob: -8.095186233520508
    6. '):
' → logprob: -9.720186233520508
    7. '```' → logprob: -11.595186233520508
    8. '.md' → logprob: -12.345186233520508
    9. '                   ' → logprob: -12.470186233520508
    10. ':
' → logprob: -12.720186233520508

Token 573: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030390983447432518
    2. 'md' → logprob: -3.530390977859497
    3. '           ' → logprob: -7.405391216278076
    4. '                   ' → logprob: -11.280390739440918
    5. ' md' → logprob: -11.405390739440918
    6. '```' → logprob: -12.405390739440918
    7. '       ' → logprob: -13.530390739440918
    8. '   ' → logprob: -13.905390739440918
    9. '              ' → logprob: -14.155390739440918
    10. '	md' → logprob: -14.655390739440918

Token 574: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' (adapté à ' md') → logprob: -2.546478935983032e-05
    2. '               ' → logprob: -10.750025749206543
    3. ' md' → logprob: -12.625025749206543
    4. '           ' → logprob: -15.125025749206543
    5. '                   ' → logprob: -15.375025749206543
    6. '```' → logprob: -16.000024795532227
    7. '	md' → logprob: -17.750024795532227
    8. '
' → logprob: -17.875024795532227
    9. '   ' → logprob: -18.125024795532227
    10. '``' → logprob: -19.125024795532227

Token 575: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '۰' → logprob: -20.25
    3. '```' → logprob: -20.375
    4. '０' → logprob: -21.125
    5. '[' → logprob: -21.5
    6. '
' → logprob: -21.625
    7. 'd' → logprob: -21.875
    8. '০' → logprob: -22.625
    9. ' ' → logprob: -22.625
    10. 'o' → logprob: -22.75

Token 576: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10021228343248367
    2. ' +=' → logprob: -2.350212335586548
    3. '           ' → logprob: -12.725212097167969
    4. '+' → logprob: -13.475212097167969
    5. ']+=' → logprob: -14.600212097167969
    6. '               ' → logprob: -15.350212097167969
    7. '```' → logprob: -15.350212097167969
    8. '   ' → logprob: -16.35021209716797
    9. '       ' → logprob: -16.60021209716797
    10. '=' → logprob: -16.97521209716797

Token 577: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.0000057220459
    4. '```' → logprob: -18.3750057220459
    5. '       ' → logprob: -19.0000057220459
    6. '           ' → logprob: -19.2500057220459
    7. '  ' → logprob: -20.2500057220459
    8. '	' → logprob: -20.3750057220459
    9. '
' → logprob: -20.7500057220459
    10. '１' → logprob: -21.2500057220459

Token 578: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '```' → logprob: -20.125001907348633
    5. '１' → logprob: -20.875001907348633
    6. '
' → logprob: -21.062501907348633
    7. '0' → logprob: -21.062501907348633
    8. '۱' → logprob: -21.187501907348633
    9. '	' → logprob: -21.375001907348633
    10. '  ' → logprob: -21.437501907348633

Token 579: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006784050725400448
    2. '               ' → logprob: -5.256783962249756
    3. '       ' → logprob: -8.006784439086914
    4. 's' → logprob: -8.256784439086914
    5. 'sm' → logprob: -8.256784439086914
    6. '            
' → logprob: -8.881784439086914
    7. '          ' → logprob: -9.006784439086914
    8. '<|end|>' → logprob: -9.006784439086914
    9. ' sm' → logprob: -9.506784439086914
    10. '
' → logprob: -10.006784439086914

Token 580: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019896593876183033
    2. '<|end|>' → logprob: -7.001989841461182
    3. '       ' → logprob: -8.251989364624023
    4. ' sm' → logprob: -8.501989364624023
    5. 'sm' → logprob: -8.501989364624023
    6. 's' → logprob: -9.501989364624023
    7. '	       ' → logprob: -9.876989364624023
    8. '
' → logprob: -10.001989364624023
    9. '		' → logprob: -10.376989364624023
    10. '```' → logprob: -10.376989364624023

Token 581: ' #' (ID: 1069)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.280140221118927
    2. '           ' → logprob: -1.7801401615142822
    3. ' sm' → logprob: -2.9051401615142822
    4. '       ' → logprob: -4.030140399932861
    5. '   ' → logprob: -7.030140399932861
    6. '```' → logprob: -7.155140399932861
    7. 's' → logprob: -7.405140399932861
    8. '               ' → logprob: -8.530139923095703
    9. '	sm' → logprob: -8.905139923095703
    10. ' ' → logprob: -9.405139923095703

Token 582: ' Aj' (ID: 28294)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011335576884448528
    2. 'sm' → logprob: -4.511335372924805
    3. ' sm' → logprob: -8.636335372924805
    4. '           ' → logprob: -9.511335372924805
    5. '       ' → logprob: -10.386335372924805
    6. '   ' → logprob: -12.511335372924805
    7. '
' → logprob: -14.761335372924805
    8. ' s' → logprob: -15.136335372924805
    9. '               ' → logprob: -15.136335372924805
    10. ' ' → logprob: -15.761335372924805

Token 583: 'oute' (ID: 3509)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8355758190155029
    2. 'dd' → logprob: -1.585575819015503
    3. 'sm' → logprob: -1.585575819015503
    4. 'd' → logprob: -2.460575819015503
    5. 's' → logprob: -3.710575819015503
    6. 'dj' → logprob: -4.335576057434082
    7. 'dds' → logprob: -4.460576057434082
    8. 'ss' → logprob: -4.710576057434082
    9. 'sj' → logprob: -6.085576057434082
    10. 'sd' → logprob: -6.085576057434082

Token 584: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.25193271040916443
    2. ' md' → logprob: -1.5019327402114868
    3. '	md' → logprob: -13.001933097839355
    4. '(md' → logprob: -13.876933097839355
    5. '.md' → logprob: -15.501933097839355
    6. '```' → logprob: -17.25193214416504
    7. '
' → logprob: -17.25193214416504
    8. 'm' → logprob: -17.50193214416504
    9. 'sm' → logprob: -17.87693214416504
    10. '_md' → logprob: -17.87693214416504

Token 585: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. '```' → logprob: -15.75
    4. 'i' → logprob: -16.625
    5. '(i' → logprob: -17.125
    6. ' i' → logprob: -18.25
    7. ' [' → logprob: -18.375
    8. '   ' → logprob: -19.5
    9. '
' → logprob: -20.25
    10. '[I' → logprob: -20.375

Token 586: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09174507111310959
    2. ']' → logprob: -2.716745138168335
    3. ')' → logprob: -4.216744899749756
    4. '           ' → logprob: -5.341744899749756
    5. '```' → logprob: -7.216744899749756
    6. ']+=' → logprob: -7.841744899749756
    7. ' to' → logprob: -8.716745376586914
    8. '               ' → logprob: -8.841745376586914
    9. '       ' → logprob: -8.966745376586914
    10. ' ]' → logprob: -9.591745376586914

Token 587: ' à' (ID: 1221)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2629900574684143
    2. ' to' → logprob: -1.7629899978637695
    3. '+=' → logprob: -3.1379899978637695
    4. 'to' → logprob: -4.6379899978637695
    5. '           ' → logprob: -5.5129899978637695
    6. '```' → logprob: -7.2629899978637695
    7. '       ' → logprob: -7.7629899978637695
    8. '<|end|>' → logprob: -8.51298999786377
    9. '        ' → logprob: -8.63798999786377
    10. ' à' → logprob: -8.76298999786377

Token 588: ' la' (ID: 557)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.5776041150093079
    2. ' md' → logprob: -0.8276041150093079
    3. ' sm' → logprob: -6.452604293823242
    4. 'sm' → logprob: -9.577604293823242
    5. '	md' → logprob: -11.452604293823242
    6. '(md' → logprob: -13.202604293823242
    7. '+' → logprob: -13.452604293823242
    8. 'm' → logprob: -13.702604293823242
    9. ' ' → logprob: -14.577604293823242
    10. ' +' → logprob: -14.702604293823242

Token 589: ' somme' (ID: 64484)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.5171912312507629
    2. ' sm' → logprob: -1.1421911716461182
    3. 'md' → logprob: -3.017191171646118
    4. 's' → logprob: -3.892191171646118
    5. 'sum' → logprob: -4.517191410064697
    6. ' md' → logprob: -6.142191410064697
    7. ' sum' → logprob: -7.267191410064697
    8. '```' → logprob: -7.392191410064697
    9. '+' → logprob: -7.892191410064697
    10. 'sd' → logprob: -9.017190933227539

Token 590: ' totale' (ID: 52898)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17396941781044006
    2. '+=' → logprob: -2.4239695072174072
    3. '           ' → logprob: -2.7989695072174072
    4. 's' → logprob: -5.173969268798828
    5. '       ' → logprob: -6.673969268798828
    6. '+' → logprob: -7.173969268798828
    7. ' sm' → logprob: -7.298969268798828
    8. '               ' → logprob: -7.673969268798828
    9. '```' → logprob: -7.923969268798828
    10. '<|end|>' → logprob: -8.423969268798828

Token 591: ' sm' (ID: 1765)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023714052513241768
    2. '+' → logprob: -5.148714065551758
    3. '       ' → logprob: -5.273714065551758
    4. '```' → logprob: -5.648714065551758
    5. ' +=' → logprob: -5.773714065551758
    6. '               ' → logprob: -6.898714065551758
    7. ' sm' → logprob: -7.148714065551758
    8. ' +' → logprob: -7.398714065551758
    9. '=' → logprob: -7.648714065551758
    10. '+=' → logprob: -7.648714065551758

Token 592: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.811348480870947e-05
    2. 'md' → logprob: -10.62504768371582
    3. ' +=' → logprob: -11.50004768371582
    4. '   ' → logprob: -12.25004768371582
    5. 'da' → logprob: -12.87504768371582
    6. '           ' → logprob: -13.50004768371582
    7. ' d' → logprob: -13.75004768371582
    8. '+=' → logprob: -14.37504768371582
    9. '    ' → logprob: -14.50004768371582
    10. '  ' → logprob: -14.75004768371582

Token 593: '
' (ID: 198)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.21813152730464935
    2. '+=' → logprob: -1.9681315422058105
    3. '           ' → logprob: -2.9681315422058105
    4. '+' → logprob: -5.9681315422058105
    5. 's' → logprob: -7.0931315422058105
    6. ' +' → logprob: -7.9681315422058105
    7. '+s' → logprob: -8.593131065368652
    8. '=' → logprob: -8.718131065368652
    9. '<|end|>' → logprob: -8.843131065368652
    10. '```' → logprob: -8.968131065368652

Token 594: '           ' (ID: 352)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7545915246009827
    2. '+' → logprob: -1.254591464996338
    3. '+=' → logprob: -2.379591464996338
    4. '           ' → logprob: -2.879591464996338
    5. ' +' → logprob: -3.254591464996338
    6. ' sm' → logprob: -3.629591464996338
    7. '```' → logprob: -4.754591464996338
    8. 's' → logprob: -5.004591464996338
    9. '       ' → logprob: -5.629591464996338
    10. '+s' → logprob: -5.879591464996338

Token 595: ' sm' (ID: 1765)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004215639550238848
    2. ' sm' → logprob: -5.504215717315674
    3. 'sm' (adapté à ' sm') → logprob: -9.004215240478516
    4. '           ' → logprob: -11.879215240478516
    5. '+' → logprob: -12.879215240478516
    6. '```' → logprob: -12.879215240478516
    7. ' s' → logprob: -13.879215240478516
    8. '`s' → logprob: -15.254215240478516
    9. '	s' → logprob: -15.629215240478516
    10. '               ' → logprob: -15.629215240478516

Token 596: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.392202976712724e-06
    2. ' +=' → logprob: -13.375006675720215
    3. 'da' → logprob: -13.750006675720215
    4. 's' → logprob: -14.125006675720215
    5. '+=' → logprob: -14.125006675720215
    6. '   ' → logprob: -14.250006675720215
    7. 'a' → logprob: -14.625006675720215
    8. 'д' → logprob: -15.375006675720215
    9. ' d' → logprob: -16.0000057220459
    10. 'sd' → logprob: -16.1250057220459

Token 597: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38690802454948425
    2. ' +=' → logprob: -1.1369080543518066
    3. '+' → logprob: -10.261907577514648
    4. ' +' → logprob: -13.636907577514648
    5. ']+=' → logprob: -14.636907577514648
    6. '=' → logprob: -16.01190757751465
    7. '+=(' → logprob: -16.38690757751465
    8. '```' → logprob: -17.01190757751465
    9. '   ' → logprob: -17.13690757751465
    10. '       ' → logprob: -17.26190757751465

Token 598: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.04858918860554695
    2. ' md' → logprob: -3.0485892295837402
    3. '	md' → logprob: -13.298588752746582
    4. '(md' → logprob: -16.6735897064209
    5. '.md' → logprob: -17.1735897064209
    6. ' ' → logprob: -17.2985897064209
    7. '_md' → logprob: -18.5485897064209
    8. '   ' → logprob: -18.7985897064209
    9. '/md' → logprob: -20.1735897064209
    10. '-md' → logprob: -20.4235897064209

Token 599: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7491250875755213e-05
    2. '[' → logprob: -10.625027656555176
    3. 'i' → logprob: -13.000027656555176
    4. '```' → logprob: -14.875027656555176
    5. '   ' → logprob: -15.875027656555176
    6. ' [' → logprob: -16.75002670288086
    7. '(i' → logprob: -17.37502670288086
    8. 'd' → logprob: -17.50002670288086
    9. '[I' → logprob: -17.50002670288086
    10. '\[' → logprob: -17.62502670288086

Token 600: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003619217313826084
    2. ')' → logprob: -8.750362396240234
    3. '[i' → logprob: -9.375362396240234
    4. ']
' → logprob: -9.500362396240234
    5. ' ]' → logprob: -10.375362396240234
    6. '[' → logprob: -12.375362396240234
    7. ')]' → logprob: -12.625362396240234
    8. '])' → logprob: -13.875362396240234
    9. '       ' → logprob: -14.125362396240234
    10. '+' → logprob: -14.250362396240234

Token 601: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0298018716275692
    2. '        
' → logprob: -4.279801845550537
    3. '<|end|>' → logprob: -4.654801845550537
    4. '
' → logprob: -5.529801845550537
    5. '   ' → logprob: -7.154801845550537
    6. '#' → logprob: -7.904801845550537
    7. '```' → logprob: -8.529802322387695
    8. 'if' → logprob: -8.779802322387695
    9. '    
' → logprob: -9.279802322387695
    10. '            
' → logprob: -9.904802322387695

Token 603: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27384093403816223
    2. 'if' → logprob: -2.27384090423584
    3. 'rest' → logprob: -3.39884090423584
    4. ' if' → logprob: -3.77384090423584
    5. 's' → logprob: -4.39884090423584
    6. '#' (adapté à ' #') → logprob: -4.39884090423584
    7. '        
' → logprob: -4.64884090423584
    8. 'sum' → logprob: -4.64884090423584
    9. '```' → logprob: -5.14884090423584
    10. '   ' → logprob: -5.14884090423584

Token 604: ' Cal' (ID: 4453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0553691387176514
    2. 'r' → logprob: -2.1803691387176514
    3. '#' → logprob: -2.3053691387176514
    4. 'full' → logprob: -2.4303691387176514
    5. 'sum' → logprob: -3.0553691387176514
    6. 'res' → logprob: -3.0553691387176514
    7. 'total' → logprob: -3.3053691387176514
    8. 'cycle' → logprob: -3.3053691387176514
    9. 'rest' → logprob: -4.1803693771362305
    10. 'q' → logprob: -4.4303693771362305

Token 605: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.32533514499664307
    2. 'cule' → logprob: -1.700335144996643
    3. 'c' → logprob: -2.7003350257873535
    4. 'culate' → logprob: -3.8253350257873535
    5. 'cula' → logprob: -6.8253350257873535
    6. '```' → logprob: -7.0753350257873535
    7. '
' → logprob: -7.2003350257873535
    8. '#' → logprob: -7.4503350257873535
    9. 'cules' → logprob: -7.7003350257873535
    10. '

' → logprob: -8.450335502624512

Token 606: ' combien' (ID: 106648)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.9024312496185303
    2. 'r' → logprob: -2.2774312496185303
    3. 'q' → logprob: -2.7774312496185303
    4. 'total' → logprob: -2.7774312496185303
    5. 'ans' → logprob: -2.9024312496185303
    6. ' full' → logprob: -3.0274312496185303
    7. 'sum' → logprob: -3.0274312496185303
    8. 'result' → logprob: -3.0274312496185303
    9. ' q' → logprob: -3.2774312496185303
    10. ' r' → logprob: -3.2774312496185303

Token 607: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.527722954750061
    2. 'de' → logprob: -1.777722954750061
    3. ' of' → logprob: -3.2777228355407715
    4. '_cycles' → logprob: -3.5277228355407715
    5. 'full' → logprob: -3.6527228355407715
    6. 'cycles' → logprob: -3.7777228355407715
    7. ' full' → logprob: -4.1527228355407715
    8. '   ' → logprob: -4.6527228355407715
    9. ' complet' → logprob: -4.7777228355407715
    10. ' cycles' → logprob: -4.9027228355407715

Token 608: ' cycles' (ID: 41478)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -0.4098011553287506
    2. 'full' → logprob: -1.9098011255264282
    3. 'fois' → logprob: -2.9098012447357178
    4. 't' → logprob: -3.1598012447357178
    5. 'complete' → logprob: -4.034801006317139
    6. 'K' → logprob: -4.034801006317139
    7. 'times' → logprob: -4.409801006317139
    8. 'ent' → logprob: -4.659801006317139
    9. '```' → logprob: -4.909801006317139
    10. 'f' → logprob: -6.034801006317139

Token 609: ' comple' (ID: 2149)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8201884031295776
    2. ' =' → logprob: -1.4451884031295776
    3. '   ' → logprob: -2.320188522338867
    4. 'compl' → logprob: -2.445188522338867
    5. '_com' → logprob: -3.445188522338867
    6. ' comple' → logprob: -3.445188522338867
    7. ' de' → logprob: -4.445188522338867
    8. '=' → logprob: -4.570188522338867
    9. 'de' → logprob: -4.570188522338867
    10. '_cycles' → logprob: -5.320188522338867

Token 610: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.18929284811019897
    2. 't' → logprob: -1.9392929077148438
    3. 'tes' → logprob: -3.6892929077148438
    4. 'te' → logprob: -6.064292907714844
    5. '```' → logprob: -7.064292907714844
    6. 'plets' → logprob: -8.564292907714844
    7. 'ets' → logprob: -9.564292907714844
    8. 'ats' → logprob: -9.689292907714844
    9. '#' → logprob: -10.689292907714844
    10. 'nts' → logprob: -10.814292907714844

Token 611: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1273092031478882
    2. 'com' → logprob: -1.3773092031478882
    3. ' =' → logprob: -2.2523093223571777
    4. 'c' → logprob: -2.8773093223571777
    5. ' comple' → logprob: -3.0023093223571777
    6. 'compl' → logprob: -3.1273093223571777
    7. 'de' → logprob: -3.2523093223571777
    8. ' de' → logprob: -3.3773093223571777
    9. '=' → logprob: -3.6273093223571777
    10. '       ' → logprob: -4.002309322357178

Token 612: ' longueur' (ID: 104613)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004143692087382078
    2. ' K' → logprob: -5.629143714904785
    3. 'md' → logprob: -7.879143714904785
    4. 'n' → logprob: -9.504143714904785
    5. 'm' → logprob: -10.629143714904785
    6. 'k' → logprob: -10.754143714904785
    7. '(K' → logprob: -11.629143714904785
    8. 'l' → logprob: -11.879143714904785
    9. '```' → logprob: -12.254143714904785
    10. 's' → logprob: -12.754143714904785

Token 613: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0059496560133993626
    2. ' K' → logprob: -5.1309494972229
    3. '
' → logprob: -12.255949974060059
    4. '```' → logprob: -12.630949974060059
    5. '   ' → logprob: -12.755949974060059
    6. 'k' → logprob: -12.880949974060059
    7. '(K' → logprob: -13.130949974060059
    8. '`' → logprob: -13.630949974060059
    9. ' ' → logprob: -14.255949974060059
    10. ' ' → logprob: -14.630949974060059

Token 614: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5332903265953064
    2. '=' → logprob: -1.0332903861999512
    3. '   ' → logprob: -4.158290386199951
    4. 'com' → logprob: -4.158290386199951
    5. 'cycles' → logprob: -5.158290386199951
    6. 'complete' → logprob: -6.033290386199951
    7. 'c' → logprob: -6.033290386199951
    8. 'compl' → logprob: -6.283290386199951
    9. '       ' → logprob: -6.408290386199951
    10. 'full' → logprob: -6.533290386199951

Token 615: ' contenus' (ID: 129602)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6256475448608398
    2. '(n' → logprob: -1.2506475448608398
    3. ' n' → logprob: -3.12564754486084
    4. ' contenu' → logprob: -3.50064754486084
    5. 'dans' → logprob: -4.00064754486084
    6. 'com' → logprob: -4.37564754486084
    7. ' inclus' → logprob: -4.75064754486084
    8. ' compris' → logprob: -4.75064754486084
    9. 'conten' → logprob: -4.75064754486084
    10. ' dans' → logprob: -5.00064754486084

Token 616: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.589744508266449
    2. 'dans' → logprob: -0.964744508266449
    3. '       ' → logprob: -3.5897445678710938
    4. ' =' → logprob: -5.089744567871094
    5. ' in' → logprob: -5.464744567871094
    6. 'n' → logprob: -5.714744567871094
    7. 'cycles' → logprob: -5.714744567871094
    8. '   ' → logprob: -5.964744567871094
    9. ' complet' → logprob: -6.214744567871094
    10. '=' → logprob: -6.464744567871094

Token 617: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09340053796768188
    2. ' n' → logprob: -2.468400478363037
    3. '(n' → logprob: -5.468400478363037
    4. ' (' → logprob: -8.468400955200195
    5. '   ' → logprob: -11.468400955200195
    6. '```' → logprob: -12.343400955200195
    7. '(' → logprob: -12.968400955200195
    8. '
' → logprob: -13.093400955200195
    9. '((' → logprob: -14.093400955200195
    10. '	n' → logprob: -14.468400955200195

Token 618: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10381799936294556
    2. '(n' → logprob: -2.853817939758301
    3. ' n' → logprob: -3.228817939758301
    4. ' (' → logprob: -6.603817939758301
    5. '(' → logprob: -11.8538179397583
    6. '```' → logprob: -12.4788179397583
    7. '   ' → logprob: -12.6038179397583
    8. '\n' → logprob: -13.1038179397583
    9. '[n' → logprob: -13.2288179397583
    10. '
' → logprob: -13.4788179397583

Token 619: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023408988490700722
    2. ' n' → logprob: -3.773408889770508
    3. '(n' → logprob: -8.898408889770508
    4. ' (' → logprob: -10.648408889770508
    5. '   ' → logprob: -13.898408889770508
    6. '
' → logprob: -14.273408889770508
    7. ')n' → logprob: -14.273408889770508
    8. '	n' → logprob: -15.648408889770508
    9. '       ' → logprob: -15.898408889770508
    10. ' ' → logprob: -15.898408889770508

Token 620: '-' (ID: 12)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.014598513022065163
    2. ')' → logprob: -5.139598369598389
    3. '//' → logprob: -5.139598369598389
    4. ' ' → logprob: -6.514598369598389
    5. '```' → logprob: -7.889598369598389
    6. ' )' → logprob: -8.264598846435547
    7. ' ' → logprob: -8.889598846435547
    8. '-' → logprob: -9.264598846435547
    9. '_' → logprob: -9.264598846435547
    10. '`' → logprob: -9.764598846435547

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007150564808398485
    2. ' ' → logprob: -5.507150650024414
    3. ')' → logprob: -6.757150650024414
    4. '```' → logprob: -7.507150650024414
    5. ' ' → logprob: -8.007150650024414
    6. 'n' → logprob: -8.507150650024414
    7. '   ' → logprob: -8.882150650024414
    8. '-' → logprob: -9.007150650024414
    9. '`' → logprob: -9.507150650024414
    10. ' )' → logprob: -9.507150650024414

Token 622: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03851441666483879
    2. ' //' → logprob: -3.4135143756866455
    3. ' )' → logprob: -5.913514614105225
    4. '//' → logprob: -6.788514614105225
    5. ')//' → logprob: -7.413514614105225
    6. '```' → logprob: -9.163514137268066
    7. ' ' → logprob: -9.288514137268066
    8. ' ' → logprob: -9.663514137268066
    9. '   ' → logprob: -9.788514137268066
    10. ')
' → logprob: -11.413514137268066

Token 623: ' premiers' (ID: 59140)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.022347306832671165
    2. '//' → logprob: -4.522347450256348
    3. ' //
' → logprob: -5.647347450256348
    4. ' #' → logprob: -6.772347450256348
    5. ' ' → logprob: -7.022347450256348
    6. '   ' → logprob: -7.147347450256348
    7. '#' → logprob: -7.522347450256348
    8. 'div' → logprob: -7.647347450256348
    9. '_' → logprob: -7.647347450256348
    10. ' ' → logprob: -7.772347450256348

Token 624: ' éléments' (ID: 57375)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.0615113973617554
    2. '(n' → logprob: -1.3115113973617554
    3. '//' → logprob: -2.311511516571045
    4. 'cycles' → logprob: -2.311511516571045
    5. 'tokens' → logprob: -3.061511516571045
    6. 'n' → logprob: -3.561511516571045
    7. ' //' → logprob: -3.936511516571045
    8. ' (' → logprob: -4.186511516571045
    9. ' n' → logprob: -4.686511516571045
    10. '(' → logprob: -4.936511516571045

Token 625: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4084370732307434
    2. 'full' → logprob: -2.0334370136260986
    3. 'c' → logprob: -3.4084370136260986
    4. 'cycles' → logprob: -3.4084370136260986
    5. '        
' → logprob: -3.9084370136260986
    6. '
' → logprob: -4.033437252044678
    7. '   ' → logprob: -4.158437252044678
    8. 'cycle' → logprob: -4.158437252044678
    9. ' full' → logprob: -4.158437252044678
    10. 'cnt' → logprob: -4.908437252044678

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6541875004768372
    2. ' full' → logprob: -2.0291874408721924
    3. 'full' → logprob: -2.2791874408721924
    4. 'cycles' → logprob: -2.7791874408721924
    5. '        
' → logprob: -3.2791874408721924
    6. 'cycle' → logprob: -3.7791874408721924
    7. '   ' → logprob: -4.0291876792907715
    8. 'c' → logprob: -4.0291876792907715
    9. ' cycles' → logprob: -4.1541876792907715
    10. ' c' → logprob: -4.5291876792907715

Token 627: ' ro' (ID: 974)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -0.5134214162826538
    2. 'full' → logprob: -1.3884214162826538
    3. 'c' → logprob: -3.0134215354919434
    4. 'cycle' → logprob: -3.2634215354919434
    5. ' full' → logprob: -4.138421535491943
    6. 'q' → logprob: -4.138421535491943
    7. ' cycles' → logprob: -4.138421535491943
    8. 'cnt' → logprob: -5.138421535491943
    9. 'count' → logprob: -6.513421535491943
    10. 'num' → logprob: -7.013421535491943

Token 628: 'op' (ID: 467)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018528925254940987
    2. '=' → logprob: -5.018528938293457
    3. 'und' → logprob: -6.393528938293457
    4. 't' → logprob: -6.518528938293457
    5. 'cks' → logprob: -6.518528938293457
    6. 'unds' → logprob: -6.893528938293457
    7. '=(' → logprob: -7.018528938293457
    8. 'll' → logprob: -7.143528938293457
    9. 'l' → logprob: -7.393528938293457
    10. 'w' → logprob: -7.393528938293457

Token 629: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6953923106193542
    2. ' =' → logprob: -1.070392370223999
    3. '_count' → logprob: -1.945392370223999
    4. '_cycles' → logprob: -5.32039213180542
    5. '=' → logprob: -5.69539213180542
    6. '_cnt' → logprob: -5.82039213180542
    7. 'Count' → logprob: -6.82039213180542
    8. 'c' → logprob: -7.69539213180542
    9. 'count' → logprob: -7.94539213180542
    10. '_' → logprob: -7.94539213180542

Token 630: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4741179645061493
    2. ' (' → logprob: -0.9741179943084717
    3. ' ' → logprob: -11.47411823272705
    4. '((' → logprob: -11.47411823272705
    5. '   ' → logprob: -11.72411823272705
    6. '(' → logprob: -12.34911823272705
    7. '
' → logprob: -12.84911823272705
    8. '(N' → logprob: -12.97411823272705
    9. '  ' → logprob: -14.34911823272705
    10. '(max' → logprob: -14.59911823272705

Token 631: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16646189987659454
    2. '(n' → logprob: -1.9164619445800781
    3. ' n' → logprob: -5.666461944580078
    4. ' (' → logprob: -5.916461944580078
    5. '   ' → logprob: -9.916461944580078
    6. '	n' → logprob: -12.166461944580078
    7. '(' → logprob: -13.666461944580078
    8. '_n' → logprob: -14.166461944580078
    9. '       ' → logprob: -14.166461944580078
    10. '    ' → logprob: -14.166461944580078

Token 632: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4748886525630951
    2. '-' → logprob: -0.9748886823654175
    3. ' //' → logprob: -8.099888801574707
    4. ')' → logprob: -8.474888801574707
    5. ' ' → logprob: -8.599888801574707
    6. '1' → logprob: -9.849888801574707
    7. '[' → logprob: -11.099888801574707
    8. '   ' → logprob: -11.474888801574707
    9. '```' → logprob: -11.599888801574707
    10. ' ' → logprob: -12.099888801574707

Token 633: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011734402505680919
    2. ' ' → logprob: -6.751173496246338
    3. '   ' → logprob: -13.00117301940918
    4. '2' → logprob: -14.75117301940918
    5. '       ' → logprob: -15.87617301940918
    6. '```' → logprob: -16.25117301940918
    7. ')' → logprob: -16.50117301940918
    8. '  ' → logprob: -16.50117301940918
    9. '`' → logprob: -17.12617301940918
    10. '    ' → logprob: -17.25117301940918

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.873571692267433e-05
    2. ' ' → logprob: -9.625068664550781
    3. '2' → logprob: -13.000068664550781
    4. '   ' → logprob: -16.25006866455078
    5. '```' → logprob: -16.43756866455078
    6. ')' → logprob: -17.06256866455078
    7. '<|end|>' → logprob: -17.43756866455078
    8. '۱' → logprob: -17.62506866455078
    9. '１' → logprob: -17.62506866455078
    10. '  ' → logprob: -17.68756866455078

Token 635: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011343709047650918
    2. ' )' → logprob: -9.750113487243652
    3. ')//' → logprob: -9.875113487243652
    4. ' //' → logprob: -13.375113487243652
    5. '//' → logprob: -13.625113487243652
    6. ')
' → logprob: -14.375113487243652
    7. '#' → logprob: -15.875113487243652
    8. '")' → logprob: -16.000112533569336
    9. '   ' → logprob: -16.625112533569336
    10. '）' → logprob: -17.375112533569336

Token 636: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.001353329629637301
    2. '//' → logprob: -6.6263532638549805
    3. ')' → logprob: -11.50135326385498
    4. ' ' → logprob: -11.75135326385498
    5. ' ' → logprob: -12.25135326385498
    6. ' //
' → logprob: -14.12635326385498
    7. 'div' → logprob: -14.37635326385498
    8. '<|end|>' → logprob: -14.50135326385498
    9. '```' → logprob: -14.62635326385498
    10. ')//' → logprob: -14.87635326385498

Token 637: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0002614550176076591
    2. ' K' → logprob: -8.250261306762695
    3. '	K' → logprob: -16.875261306762695
    4. 'k' → logprob: -17.500261306762695
    5. '   ' → logprob: -17.750261306762695
    6. '>K' → logprob: -19.250261306762695
    7. '
' → logprob: -19.625261306762695
    8. ' ' → logprob: -20.375261306762695
    9. '       ' → logprob: -20.500261306762695
    10. 'Ｋ' → logprob: -20.750261306762695

Token 638: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.354366272687912
    2. '<|end|>' → logprob: -1.9793663024902344
    3. '        
' → logprob: -2.4793663024902344
    4. '+' → logprob: -3.3543663024902344
    5. ' ' → logprob: -5.104366302490234
    6. '#' → logprob: -5.354366302490234
    7. '        ' → logprob: -5.354366302490234
    8. '
' → logprob: -5.604366302490234
    9. ' 
' → logprob: -5.854366302490234
    10. '   ' → logprob: -5.979366302490234

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06653957813978195
    2. 's' → logprob: -3.4415395259857178
    3. '        
' → logprob: -4.316539764404297
    4. 'sm' → logprob: -4.566539764404297
    5. 'if' → logprob: -6.316539764404297
    6. ' sm' → logprob: -6.441539764404297
    7. 'rest' → logprob: -6.691539764404297
    8. '   ' → logprob: -7.316539764404297
    9. 'sum' → logprob: -7.441539764404297
    10. 'ro' → logprob: -7.691539764404297

Token 640: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.3786437511444092
    2. 'res' → logprob: -1.5036437511444092
    3. 'total' → logprob: -2.253643751144409
    4. 'ans' → logprob: -2.378643751144409
    5. 'sum' → logprob: -2.378643751144409
    6. 'sm' → logprob: -2.503643751144409
    7. 's' → logprob: -2.878643751144409
    8. 'result' → logprob: -3.503643751144409
    9. 'if' → logprob: -3.878643751144409
    10. 'answer' → logprob: -4.253643989562988

Token 641: ' Cal' (ID: 4453)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.349596381187439
    2. 'if' → logprob: -1.474596381187439
    3. 'sm' → logprob: -1.599596381187439
    4. '#' → logprob: -2.4745965003967285
    5. 'ans' → logprob: -2.9745965003967285
    6. 'x' → logprob: -3.2245965003967285
    7. 'total' → logprob: -3.3495965003967285
    8. 's' → logprob: -3.7245965003967285
    9. 'result' → logprob: -3.9745965003967285
    10. 'r' → logprob: -4.4745965003967285

Token 642: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.3015448749065399
    2. 'cul' → logprob: -1.4265449047088623
    3. 'c' → logprob: -4.301544666290283
    4. 'cules' → logprob: -5.801544666290283
    5. 'culate' → logprob: -6.176544666290283
    6. '
' → logprob: -7.426544666290283
    7. '```' → logprob: -8.176545143127441
    8. 's' → logprob: -8.801545143127441
    9. '

' → logprob: -9.051545143127441
    10. '#' → logprob: -9.426545143127441

Token 643: ' la' (ID: 557)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -1.572127103805542
    2. ' sm' → logprob: -2.072127103805542
    3. 'res' → logprob: -2.447127103805542
    4. 's' → logprob: -2.572127103805542
    5. 'le' → logprob: -2.572127103805542
    6. ' la' → logprob: -2.572127103805542
    7. '(s' → logprob: -2.947127103805542
    8. 'la' → logprob: -3.197127103805542
    9. 'x' → logprob: -3.697127103805542
    10. 'total' → logprob: -3.822127103805542

Token 644: ' valeur' (ID: 41664)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1054471731185913
    2. 'res' → logprob: -1.7304471731185913
    3. 's' → logprob: -2.230447292327881
    4. 'total' → logprob: -2.480447292327881
    5. 'sum' → logprob: -2.605447292327881
    6. 'reste' → logprob: -3.105447292327881
    7. 'rés' → logprob: -3.355447292327881
    8. 'val' → logprob: -3.855447292327881
    9. 'part' → logprob: -4.105447292327881
    10. 'rest' → logprob: -4.105447292327881

Token 645: ' de' (ID: 334)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.8401553630828857
    2. 'r' → logprob: -1.9651553630828857
    3. 'res' → logprob: -2.0901553630828857
    4. 'final' → logprob: -2.0901553630828857
    5. 'mod' → logprob: -2.8401553630828857
    6. 'rest' → logprob: -3.2151553630828857
    7. ' =' → logprob: -3.2151553630828857
    8. 'de' → logprob: -3.3401553630828857
    9. 'ans' → logprob: -3.8401553630828857
    10. ' de' → logprob: -3.8401553630828857

Token 646: ' res' (ID: 694)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7620881199836731
    2. '(x' → logprob: -1.2620880603790283
    3. 'ans' → logprob: -3.1370880603790283
    4. 'res' → logprob: -3.2620880603790283
    5. '(s' → logprob: -3.2620880603790283
    6. 'sm' → logprob: -3.7620880603790283
    7. 's' → logprob: -4.512088298797607
    8. '(res' → logprob: -4.637088298797607
    9. '(sm' → logprob: -4.637088298797607
    10. ' (' → logprob: -4.762088298797607

Token 647: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08936417102813721
    2. '=' → logprob: -2.4643640518188477
    3. 'ult' → logprob: -7.839364051818848
    4. 'ultat' → logprob: -11.714364051818848
    5. 's' → logprob: -11.964364051818848
    6. ' ' → logprob: -13.089364051818848
    7. 't' → logprob: -13.214364051818848
    8. 'ults' → logprob: -13.464364051818848
    9. '```' → logprob: -13.464364051818848
    10. 'idual' → logprob: -13.589364051818848

Token 648: 'le' (ID: 282)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7073118090629578
    2. '(x' → logprob: -0.8323118090629578
    3. '(s' → logprob: -3.9573118686676025
    4. 'sm' → logprob: -4.082311630249023
    5. ' (' → logprob: -4.457311630249023
    6. ' x' → logprob: -4.707311630249023
    7. '(sm' → logprob: -5.832311630249023
    8. '((' → logprob: -5.957311630249023
    9. '(' → logprob: -6.332311630249023
    10. 's' → logprob: -6.457311630249023

Token 649: ' résultat' (ID: 62556)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5230517983436584
    2. ' x' → logprob: -1.5230517387390137
    3. 'res' → logprob: -2.6480517387390137
    4. ' (' → logprob: -3.2730517387390137
    5. '(x' → logprob: -3.5230517387390137
    6. 'r' → logprob: -4.898051738739014
    7. 'result' → logprob: -5.023051738739014
    8. 'sm' → logprob: -5.148051738739014
    9. 's' → logprob: -5.398051738739014
    10. ' res' → logprob: -5.648051738739014

Token 650: ' final' (ID: 1721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4773051142692566
    2. ')' → logprob: -1.2273051738739014
    3. '=' → logprob: -2.4773051738739014
    4. 'final' → logprob: -7.227304935455322
    5. '```' → logprob: -7.352304935455322
    6. '<|end|>' → logprob: -8.47730541229248
    7. ' )' → logprob: -8.60230541229248
    8. ')=' → logprob: -8.97730541229248
    9. ',' → logprob: -9.35230541229248
    10. '
' → logprob: -9.60230541229248

Token 651: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5327688455581665
    2. '=' → logprob: -0.9077688455581665
    3. ')' → logprob: -4.657768726348877
    4. ' )' → logprob: -10.282769203186035
    5. ' ' → logprob: -10.782769203186035
    6. '
' → logprob: -11.157769203186035
    7. '=
' → logprob: -12.032769203186035
    8. ' =
' → logprob: -12.282769203186035
    9. ',' → logprob: -12.407769203186035
    10. ')=' → logprob: -12.532769203186035

Token 652: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.689373254776001
    2. 'x' → logprob: -0.939373254776001
    3. ' (' → logprob: -2.689373254776001
    4. ' la' → logprob: -4.564373016357422
    5. '(x' → logprob: -4.564373016357422
    6. ')' → logprob: -5.439373016357422
    7. ' n' → logprob: -6.189373016357422
    8. 'n' → logprob: -6.439373016357422
    9. '(' → logprob: -6.814373016357422
    10. 'l' → logprob: -6.939373016357422

Token 653: ' requ' (ID: 7028)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.9804881811141968
    2. 'res' → logprob: -1.6054881811141968
    3. 'x' → logprob: -1.9804881811141968
    4. 'r' → logprob: -3.2304883003234863
    5. 'print' → logprob: -3.2304883003234863
    6. 'for' → logprob: -3.3554883003234863
    7. 'i' → logprob: -4.230488300323486
    8. 'requ' → logprob: -4.355488300323486
    9. '```' → logprob: -4.480488300323486
    10. 'reste' → logprob: -4.480488300323486

Token 654: 'ête' (ID: 16808)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30625396966934204
    2. 'ête' → logprob: -1.4312539100646973
    3. 'êt' → logprob: -4.056253910064697
    4. 'rés' → logprob: -6.431253910064697
    5. 'ultat' → logprob: -6.931253910064697
    6. 'és' → logprob: -7.556253910064697
    7. ' s' → logprob: -7.806253910064697
    8. 'ponse' → logprob: -8.056254386901855
    9. 'ète' → logprob: -8.181254386901855
    10. '```' → logprob: -8.181254386901855

Token 655: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.190652534365654
    2. ' =' → logprob: -2.44065260887146
    3. '=' → logprob: -2.56565260887146
    4. ' )' → logprob: -4.690652370452881
    5. ')=' → logprob: -8.190652847290039
    6. '       ' → logprob: -9.440652847290039
    7. ' =)' → logprob: -11.190652847290039
    8. ',' → logprob: -11.690652847290039
    9. ')
' → logprob: -11.815652847290039
    10. '        ' → logprob: -11.815652847290039

Token 656: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3398771584033966
    2. '       ' → logprob: -1.3398771286010742
    3. 'x' → logprob: -4.214877128601074
    4. ' res' → logprob: -5.214877128601074
    5. ' =' → logprob: -6.214877128601074
    6. '=' → logprob: -6.339877128601074
    7. ' x' → logprob: -7.089877128601074
    8. '        
' → logprob: -7.589877128601074
    9. 'result' → logprob: -7.714877128601074
    10. '```' → logprob: -8.589877128601074

Token 657: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0002647927321959287
    2. 'x' → logprob: -9.000265121459961
    3. ' res' → logprob: -9.125265121459961
    4. 'result' → logprob: -11.250265121459961
    5. '(res' → logprob: -12.000265121459961
    6. 'if' → logprob: -12.500265121459961
    7. '   ' → logprob: -13.000265121459961
    8. 'ans' → logprob: -13.375265121459961
    9. '(x' → logprob: -13.875265121459961
    10. 'r' → logprob: -14.000265121459961

Token 658: ' Les' (ID: 7029)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0001334559783572331
    2. 'if' → logprob: -10.000133514404297
    3. ' res' → logprob: -10.500133514404297
    4. 'x' → logprob: -11.000133514404297
    5. 'result' → logprob: -11.000133514404297
    6. '```' → logprob: -11.875133514404297
    7. '
' → logprob: -12.000133514404297
    8. '   ' → logprob: -12.500133514404297
    9. '       ' → logprob: -13.250133514404297
    10. '#' → logprob: -13.625133514404297

Token 659: ' différentes' (ID: 41398)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2592829763889313
    2. '#' → logprob: -3.2592830657958984
    3. ' res' → logprob: -3.5092830657958984
    4. 'if' → logprob: -3.7592830657958984
    5. 'result' → logprob: -3.7592830657958984
    6. 'rest' → logprob: -3.8842830657958984
    7. ' =' → logprob: -4.134283065795898
    8. 'rés' → logprob: -4.384283065795898
    9. 'md' → logprob: -5.384283065795898
    10. 'for' → logprob: -5.446783065795898

Token 660: ' parties' (ID: 13531)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2822052240371704
    2. ' =' → logprob: -1.5322052240371704
    3. 'res' → logprob: -1.9072052240371704
    4. '#' → logprob: -2.657205104827881
    5. ' parts' → logprob: -2.782205104827881
    6. ' +=' → logprob: -3.282205104827881
    7. ' lignes' → logprob: -3.532205104827881
    8. 'parts' → logprob: -3.907205104827881
    9. 'part' → logprob: -4.157205104827881
    10. '   ' → logprob: -4.407205104827881

Token 661: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07031930238008499
    2. ' =' → logprob: -2.695319414138794
    3. '=
' → logprob: -8.195319175720215
    4. 'res' → logprob: -10.195319175720215
    5. ' =
' → logprob: -11.445319175720215
    6. ')' → logprob: -11.570319175720215
    7. '#' → logprob: -11.945319175720215
    8. '+=' → logprob: -11.945319175720215
    9. '       ' → logprob: -12.570319175720215
    10. ' ' → logprob: -12.570319175720215

Token 662: ' la' (ID: 557)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.29743534326553345
    2. 'la' → logprob: -1.9224352836608887
    3. ' la' → logprob: -2.4224352836608887
    4. 'l' → logprob: -4.922435283660889
    5. ' res' → logprob: -5.172435283660889
    6. '(res' → logprob: -5.922435283660889
    7. 'x' → logprob: -6.422435283660889
    8. 'md' → logprob: -6.797435283660889
    9. ' l' → logprob: -7.422435283660889
    10. 'le' → logprob: -7.422435283660889

Token 663: ' formule' (ID: 84316)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5799990296363831
    2. 'rés' → logprob: -1.4549989700317383
    3. 'val' → logprob: -2.8299989700317383
    4. 'ligne' → logprob: -3.0799989700317383
    5. 'result' → logprob: -3.7049989700317383
    6. 'code' → logprob: -3.8299989700317383
    7. 's' → logprob: -4.579998970031738
    8. '#' → logprob: -5.454998970031738
    9. 'value' → logprob: -5.579998970031738
    10. ' ligne' → logprob: -5.829998970031738

Token 664: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6290907263755798
    2. '=' → logprob: -1.2540907859802246
    3. 'res' → logprob: -1.7540907859802246
    4. '       ' → logprob: -5.879090785980225
    5. ' res' → logprob: -6.504090785980225
    6. '
' → logprob: -6.754090785980225
    7. '=
' → logprob: -7.504090785980225
    8. ')' → logprob: -7.879090785980225
    9. '=res' → logprob: -7.879090785980225
    10. '        
' → logprob: -8.004090309143066

Token 665: '       ' (ID: 309)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0434819832444191
    2. ' res' → logprob: -3.4184820652008057
    3. 'result' → logprob: -5.168481826782227
    4. 'x' → logprob: -6.293481826782227
    5. '       ' → logprob: -7.543481826782227
    6. ' x' → logprob: -7.668481826782227
    7. ' result' → logprob: -8.168481826782227
    8. ' (' → logprob: -8.793481826782227
    9. 'ans' → logprob: -8.793481826782227
    10. ' ans' → logprob: -8.793481826782227

Token 666: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004302645567804575
    2. 'result' → logprob: -6.129302501678467
    3. 'x' → logprob: -6.629302501678467
    4. ' res' → logprob: -8.129302978515625
    5. '(x' → logprob: -8.379302978515625
    6. '(res' → logprob: -8.754302978515625
    7. 'ans' → logprob: -9.504302978515625
    8. '((' → logprob: -11.754302978515625
    9. 'r' → logprob: -11.879302978515625
    10. '   ' → logprob: -13.004302978515625

Token 667: ' -' (ID: 533)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004853141959756613
    2. ' res' → logprob: -5.879853248596191
    3. 'result' → logprob: -7.254853248596191
    4. 'x' → logprob: -7.504853248596191
    5. '(res' → logprob: -8.629853248596191
    6. '(x' → logprob: -9.504853248596191
    7. 'ans' → logprob: -9.754853248596191
    8. 's' → logprob: -9.754853248596191
    9. '```' → logprob: -9.754853248596191
    10. '   ' → logprob: -10.004853248596191

Token 668: ' n' (ID: 297)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6810933351516724
    2. 'x' → logprob: -0.8060933351516724
    3. 'res' → logprob: -4.181093215942383
    4. '((' → logprob: -4.681093215942383
    5. '(res' → logprob: -5.056093215942383
    6. '(s' → logprob: -5.681093215942383
    7. 'sm' → logprob: -5.931093215942383
    8. '(sm' → logprob: -5.931093215942383
    9. '(ro' → logprob: -6.181093215942383
    10. ' x' → logprob: -6.306093215942383

Token 669: ' -' (ID: 533)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.35147616267204285
    2. '*' → logprob: -1.2264761924743652
    3. '*x' → logprob: -6.101476192474365
    4. '%' → logprob: -7.726476192474365
    5. '-' → logprob: -8.976475715637207
    6. '*(' → logprob: -10.476475715637207
    7. '*n' → logprob: -10.476475715637207
    8. ' %' → logprob: -10.726475715637207
    9. ')' → logprob: -11.101475715637207
    10. '+' → logprob: -11.351475715637207

Token 670: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02030373178422451
    2. 'md' → logprob: -4.770303726196289
    3. 'x' → logprob: -5.395303726196289
    4. 'ro' → logprob: -6.395303726196289
    5. ' ' → logprob: -6.520303726196289
    6. '(' → logprob: -6.645303726196289
    7. 'm' → logprob: -7.395303726196289
    8. 'res' → logprob: -8.145303726196289
    9. ' x' → logprob: -8.395303726196289
    10. '(ro' → logprob: -8.645303726196289

Token 671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054110702127218246
    2. 'ro' → logprob: -3.1791107654571533
    3. 'md' → logprob: -5.179110527038574
    4. '(' → logprob: -6.054110527038574
    5. 'x' → logprob: -6.554110527038574
    6. '(ro' → logprob: -7.679110527038574
    7. 'm' → logprob: -8.179110527038574
    8. 'res' → logprob: -8.179110527038574
    9. 'sm' → logprob: -9.179110527038574
    10. ' ' → logprob: -9.804110527038574

Token 672: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06601186841726303
    2. ')*' → logprob: -3.941011905670166
    3. ' )' → logprob: -4.441011905670166
    4. '+' → logprob: -4.691011905670166
    5. ' -' → logprob: -4.816011905670166
    6. '-' → logprob: -5.066011905670166
    7. ' +' → logprob: -5.441011905670166
    8. ' *' → logprob: -6.691011905670166
    9. '*' → logprob: -6.691011905670166
    10. ')*(' → logprob: -7.941011905670166

Token 673: ' nombre' (ID: 9733)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8967119455337524
    2. ')' → logprob: -1.2717119455337524
    3. '*' → logprob: -1.5217119455337524
    4. '(n' → logprob: -3.146711826324463
    5. ' (' → logprob: -4.271711826324463
    6. '*(' → logprob: -4.771711826324463
    7. ')*' → logprob: -5.396711826324463
    8. 'x' → logprob: -5.396711826324463
    9. ' )' → logprob: -5.396711826324463
    10. '(x' → logprob: -5.771711826324463

Token 674: ' total' (ID: 3609)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.038844108581543
    2. ' -' → logprob: -1.038844108581543
    3. '<|end|>' → logprob: -1.663844108581543
    4. '-' → logprob: -2.663844108581543
    5. ' *' → logprob: -5.163844108581543
    6. '(n' → logprob: -5.538844108581543
    7. ' )' → logprob: -5.538844108581543
    8. ' +' → logprob: -5.913844108581543
    9. '<|end|>' → logprob: -6.288844108581543
    10. '+' → logprob: -6.413844108581543

Token 675: ' d' (ID: 272)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8871511816978455
    2. ')' → logprob: -1.1371512413024902
    3. '<|end|>' → logprob: -2.0121512413024902
    4. '-' → logprob: -2.3871512413024902
    5. ' )' → logprob: -4.51215124130249
    6. '(n' → logprob: -4.51215124130249
    7. ' ' → logprob: -4.88715124130249
    8. '+' → logprob: -6.51215124130249
    9. ' +' → logprob: -6.88715124130249
    10. ' (' → logprob: -6.88715124130249

Token 676: ''ét' (ID: 23771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44398272037506104
    2. 'md' → logprob: -2.8189826011657715
    3. 's' → logprob: -3.6939826011657715
    4. ' (' → logprob: -3.6939826011657715
    5. 'mod' → logprob: -3.6939826011657715
    6. ' )' → logprob: -3.9439826011657715
    7. 'x' → logprob: -3.9439826011657715
    8. '1' → logprob: -4.0689826011657715
    9. '_' → logprob: -4.1939826011657715
    10. ' ' → logprob: -4.4439826011657715

Token 677: 'apes' (ID: 11864)
  Prédit: 'apes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apes' → logprob: -0.03784649819135666
    2. 'er' → logprob: -4.662846565246582
    3. 'ages' → logprob: -5.787846565246582
    4. 'ats' → logprob: -5.912846565246582
    5. 'udi' → logprob: -6.037846565246582
    6. 'erm' → logprob: -6.162846565246582
    7. 'ape' → logprob: -6.162846565246582
    8. 'elements' → logprob: -6.287846565246582
    9. 'ants' → logprob: -6.537846565246582
    10. 'ant' → logprob: -6.537846565246582

Token 678: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.941999614238739
    2. '+' → logprob: -1.1919996738433838
    3. ' +' → logprob: -1.9419996738433838
    4. '<|end|>' → logprob: -2.441999673843384
    5. ' -' → logprob: -3.816999673843384
    6. ' *' → logprob: -4.191999435424805
    7. '-' → logprob: -4.566999435424805
    8. ' )' → logprob: -4.941999435424805
    9. '*' → logprob: -4.941999435424805
    10. '       ' → logprob: -5.566999435424805

Token 679: ' éléments' (ID: 57375)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9626868367195129
    2. ')' → logprob: -1.9626867771148682
    3. 'x' → logprob: -1.9626867771148682
    4. '<|end|>' → logprob: -2.212686777114868
    5. 'm' → logprob: -2.962686777114868
    6. '2' → logprob: -3.337686777114868
    7. '
' → logprob: -3.712686777114868
    8. '```' → logprob: -4.087687015533447
    9. 'n' → logprob: -4.337687015533447
    10. 'K' → logprob: -4.587687015533447

Token 680: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5575570464134216
    2. '+' → logprob: -1.4325571060180664
    3. ' +' → logprob: -2.1825571060180664
    4. '<|end|>' → logprob: -3.0575571060180664
    5. '       ' → logprob: -5.057557106018066
    6. ' )' → logprob: -5.182557106018066
    7. '*' → logprob: -5.682557106018066
    8. ' *' → logprob: -6.057557106018066
    9. '-' → logprob: -6.807557106018066
    10. ' +
' → logprob: -6.932557106018066

Token 681: ' considérer' (ID: 172894)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.7904350757598877
    2. 'consider' → logprob: -1.9154350757598877
    3. 'process' → logprob: -2.1654350757598877
    4. ' traiter' → logprob: -2.9154350757598877
    5. 'aj' → logprob: -3.0404350757598877
    6. 'calcul' → logprob: -3.5404350757598877
    7. 'prendre' → logprob: -3.6654350757598877
    8. 'addition' → logprob: -3.7904350757598877
    9. 'acc' → logprob: -3.9154350757598877
    10. 'cons' → logprob: -4.040434837341309

Token 682: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7044802308082581
    2. ')' → logprob: -1.8294801712036133
    3. ' +' → logprob: -1.8294801712036133
    4. '<|end|>' → logprob: -1.9544801712036133
    5. '       ' → logprob: -3.8294801712036133
    6. '*' → logprob: -5.954480171203613
    7. ' *' → logprob: -6.204480171203613
    8. ' )' → logprob: -6.329480171203613
    9. ' ' → logprob: -6.329480171203613
    10. '<|end|>' → logprob: -6.454480171203613

Token 683: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0305571556091309
    2. 'res' → logprob: -1.2805571556091309
    3. ' +' → logprob: -1.7805571556091309
    4. ')' → logprob: -2.905557155609131
    5. 'x' → logprob: -3.155557155609131
    6. ' res' → logprob: -3.655557155609131
    7. '       ' → logprob: -4.155557155609131
    8. ' x' → logprob: -4.405557155609131
    9. '[' → logprob: -4.905557155609131
    10. ' =' → logprob: -5.155557155609131

Token 684: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11364142596721649
    2. ' res' → logprob: -2.4886415004730225
    3. '       ' → logprob: -4.113641262054443
    4. 'result' → logprob: -5.863641262054443
    5. ' +' → logprob: -7.113641262054443
    6. '+' → logprob: -7.113641262054443
    7. '```' → logprob: -7.238641262054443
    8. ')' → logprob: -7.363641262054443
    9. 'rest' → logprob: -7.863641262054443
    10. 'x' → logprob: -8.363641738891602

Token 685: ' -' (ID: 533)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.013860820792615414
    2. 'result' → logprob: -5.138860702514648
    3. ' res' → logprob: -5.388860702514648
    4. '
' → logprob: -6.513860702514648
    5. 'rest' → logprob: -7.888860702514648
    6. '+' → logprob: -8.388860702514648
    7. 'ans' → logprob: -8.513860702514648
    8. '       ' → logprob: -8.513860702514648
    9. 's' → logprob: -9.013860702514648
    10. 'x' → logprob: -9.138860702514648

Token 686: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6791220903396606
    2. '(x' → logprob: -1.5541220903396606
    3. '(n' → logprob: -2.304121971130371
    4. '(ro' → logprob: -3.179121971130371
    5. '((' → logprob: -3.429121971130371
    6. 'ro' → logprob: -3.679121971130371
    7. '(m' → logprob: -3.804121971130371
    8. 'm' → logprob: -4.054121971130371
    9. 'md' → logprob: -4.304121971130371
    10. 'n' → logprob: -4.679121971130371

Token 687: 'x' (ID: 87)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.7781316041946411
    2. 'md' → logprob: -2.0281314849853516
    3. 'sm' → logprob: -2.0281314849853516
    4. 'x' → logprob: -2.1531314849853516
    5. 'm' → logprob: -2.9031314849853516
    6. 's' → logprob: -3.2781314849853516
    7. 'n' → logprob: -3.4031314849853516
    8. '(ro' → logprob: -4.778131484985352
    9. 'res' → logprob: -4.903131484985352
    10. '(m' → logprob: -5.278131484985352

Token 688: ' %' (ID: 1851)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6172202825546265
    2. ' %' → logprob: -1.4922202825546265
    3. '-' → logprob: -2.367220401763916
    4. '%' → logprob: -2.617220401763916
    5. ' +' → logprob: -3.492220401763916
    6. '+' → logprob: -4.117220401763916
    7. ' *' → logprob: -4.367220401763916
    8. ')' → logprob: -5.492220401763916
    9. '*' → logprob: -6.242220401763916
    10. ' )' → logprob: -6.367220401763916

Token 689: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002485765377059579
    2. ' m' → logprob: -6.002485752105713
    3. ' ' → logprob: -13.127486228942871
    4. ')' → logprob: -13.752486228942871
    5. '
' → logprob: -13.752486228942871
    6. '   ' → logprob: -13.877486228942871
    7. '(m' → logprob: -14.314986228942871
    8. 'x' → logprob: -14.502486228942871
    9. '```' → logprob: -14.752486228942871
    10. ')m' → logprob: -14.814986228942871

Token 690: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005268265027552843
    2. ' )' → logprob: -5.505268096923828
    3. '+' → logprob: -7.630268096923828
    4. ' +' → logprob: -8.630268096923828
    5. '))' → logprob: -8.630268096923828
    6. ')%' → logprob: -9.130268096923828
    7. ')+' → logprob: -10.005268096923828
    8. ')
' → logprob: -10.505268096923828
    9. ' -' → logprob: -10.880268096923828
    10. ')))' → logprob: -11.005268096923828

Token 691: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2969670593738556
    2. '+' → logprob: -1.9219670295715332
    3. '%' → logprob: -2.796967029571533
    4. ' +' → logprob: -3.671967029571533
    5. ')%' → logprob: -5.171967029571533
    6. ' )' → logprob: -5.296967029571533
    7. '*' → logprob: -5.546967029571533
    8. '-' → logprob: -5.796967029571533
    9. ' *' → logprob: -6.296967029571533
    10. ' %' → logprob: -6.546967029571533

Token 692: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21798314154148102
    2. '(x' → logprob: -1.9679831266403198
    3. ' (' → logprob: -3.4679832458496094
    4. ')' → logprob: -4.842983245849609
    5. '(' → logprob: -5.217983245849609
    6. ' x' → logprob: -5.342983245849609
    7. '(n' → logprob: -5.842983245849609
    8. '<|end|>' → logprob: -6.717983245849609
    9. ')x' → logprob: -6.967983245849609
    10. 'm' → logprob: -7.967983245849609

Token 693: ' reste' (ID: 26769)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21483950316905975
    2. '<|end|>' → logprob: -1.9648394584655762
    3. '%' → logprob: -3.839839458465576
    4. ' )' → logprob: -5.339839458465576
    5. 'n' → logprob: -5.464839458465576
    6. '(n' → logprob: -5.839839458465576
    7. 'x' → logprob: -5.839839458465576
    8. 'm' → logprob: -5.964839458465576
    9. '(' → logprob: -6.339839458465576
    10. ' (' → logprob: -6.714839458465576

Token 694: ' de' (ID: 334)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8378700613975525
    2. '+' → logprob: -1.2128701210021973
    3. ')' → logprob: -1.3378701210021973
    4. ' )' → logprob: -6.212870121002197
    5. '%' → logprob: -6.462870121002197
    6. ')%' → logprob: -7.087870121002197
    7. ' -' → logprob: -7.212870121002197
    8. '-' → logprob: -7.337870121002197
    9. ' %' → logprob: -7.462870121002197
    10. ' *' → logprob: -8.837869644165039

Token 695: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13045285642147064
    2. ' x' → logprob: -2.130452871322632
    3. '(x' → logprob: -5.880452632904053
    4. ' (' → logprob: -7.255452632904053
    5. '(' → logprob: -11.380453109741211
    6. ' ' → logprob: -12.630453109741211
    7. ')x' → logprob: -13.005453109741211
    8. '	x' → logprob: -14.380453109741211
    9. ')' → logprob: -14.755453109741211
    10. '<|end|>' → logprob: -15.630453109741211

Token 696: ' modulo' (ID: 112372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11729244887828827
    2. '%' → logprob: -2.6172924041748047
    3. ' %' → logprob: -4.117292404174805
    4. ')%' → logprob: -4.617292404174805
    5. ' )' → logprob: -4.992292404174805
    6. '+' → logprob: -5.742292404174805
    7. ' +' → logprob: -6.867292404174805
    8. ' ' → logprob: -9.242292404174805
    9. ' ' → logprob: -9.742292404174805
    10. '%n' → logprob: -10.617292404174805

Token 697: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10037985444068909
    2. ' m' → logprob: -2.3503799438476562
    3. ')' → logprob: -10.100379943847656
    4. '(m' → logprob: -10.225379943847656
    5. '(' → logprob: -10.475379943847656
    6. '```' → logprob: -10.725379943847656
    7. ' ' → logprob: -10.975379943847656
    8. ' (' → logprob: -11.725379943847656
    9. ' ' → logprob: -12.225379943847656
    10. '   ' → logprob: -12.600379943847656

Token 698: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2796376049518585
    2. '+' → logprob: -2.404637575149536
    3. ' +' → logprob: -2.404637575149536
    4. ' *' → logprob: -3.529637575149536
    5. ')*' → logprob: -4.904637813568115
    6. '*' → logprob: -4.904637813568115
    7. ' )' → logprob: -5.029637813568115
    8. '<|end|>' → logprob: -6.154637813568115
    9. '       ' → logprob: -6.279637813568115
    10. ' +
' → logprob: -6.404637813568115

Token 699: ' utilisé' (ID: 53138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08409955352544785
    2. ' +' → logprob: -3.459099531173706
    3. ' )' → logprob: -3.834099531173706
    4. '+' → logprob: -4.584099769592285
    5. '%' → logprob: -6.084099769592285
    6. '#' → logprob: -6.334099769592285
    7. '       ' → logprob: -6.459099769592285
    8. '*' → logprob: -6.584099769592285
    9. ' *' → logprob: -6.584099769592285
    10. ' +
' → logprob: -6.834099769592285

Token 700: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5144294500350952
    2. '+' → logprob: -1.0144294500350952
    3. ' +' → logprob: -3.7644295692443848
    4. '%' → logprob: -4.639429569244385
    5. ' )' → logprob: -5.889429569244385
    6. '*' → logprob: -6.514429569244385
    7. ')+' → logprob: -7.639429569244385
    8. '#' → logprob: -8.139429092407227
    9. ')*' → logprob: -8.389429092407227
    10. ' *' → logprob: -8.514429092407227

Token 701: ' le' (ID: 505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1241059303283691
    2. ')' → logprob: -1.6241059303283691
    3. ' (' → logprob: -2.249105930328369
    4. 'm' → logprob: -2.874105930328369
    5. 'n' → logprob: -3.249105930328369
    6. '(n' → logprob: -3.374105930328369
    7. '(' → logprob: -3.499105930328369
    8. 'res' → logprob: -3.499105930328369
    9. ' x' → logprob: -3.499105930328369
    10. '(x' → logprob: -3.749105930328369

Token 702: ' calcul' (ID: 7559)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.6890533566474915
    2. ')' → logprob: -1.8140532970428467
    3. 'x' → logprob: -2.0640532970428467
    4. 'calcul' → logprob: -2.5640532970428467
    5. 'res' → logprob: -3.1890532970428467
    6. '%' → logprob: -4.564053535461426
    7. ' modulo' → logprob: -4.689053535461426
    8. ' )' → logprob: -4.814053535461426
    9. 'n' → logprob: -4.814053535461426
    10. '+' → logprob: -5.189053535461426

Token 703: ' de' (ID: 334)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1306675672531128
    2. ')' → logprob: -1.2556675672531128
    3. '+' → logprob: -1.2556675672531128
    4. ' -' → logprob: -3.6306676864624023
    5. '-' → logprob: -4.130667686462402
    6. ' *' → logprob: -4.130667686462402
    7. ' )' → logprob: -4.505667686462402
    8. '%' → logprob: -4.630667686462402
    9. '*' → logprob: -4.880667686462402
    10. '+
' → logprob: -4.880667686462402

Token 704: ' "' (ID: 392)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7211366295814514
    2. 'res' → logprob: -1.5961365699768066
    3. '(x' → logprob: -2.5961365699768066
    4. '(res' → logprob: -2.7211365699768066
    5. 'x' → logprob: -2.8461365699768066
    6. 'la' → logprob: -3.8461365699768066
    7. '(m' → logprob: -4.346136569976807
    8. ' (' → logprob: -4.471136569976807
    9. ' m' → logprob: -4.721136569976807
    10. '(n' → logprob: -4.721136569976807

Token 705: 'dé' (ID: 98340)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.15526966750621796
    2. ' m' → logprob: -3.1552696228027344
    3. '(x' → logprob: -3.6552696228027344
    4. ' (' → logprob: -4.405269622802734
    5. 'res' → logprob: -4.405269622802734
    6. '(m' → logprob: -4.655269622802734
    7. ')' → logprob: -4.905269622802734
    8. 'x' → logprob: -4.905269622802734
    9. '(res' → logprob: -5.655269622802734
    10. '(n' → logprob: -5.655269622802734

Token 706: 'bord' (ID: 63002)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.22123661637306213
    2. ')' → logprob: -2.3462367057800293
    3. 'r' → logprob: -2.8462367057800293
    4. '%' → logprob: -4.096236705780029
    5. ' )' → logprob: -4.846236705780029
    6. '+' → logprob: -5.471236705780029
    7. 'x' → logprob: -5.846236705780029
    8. ' %' → logprob: -5.971236705780029
    9. ' f' → logprob: -6.971236705780029
    10. ')%' → logprob: -7.096236705780029

Token 707: 'ement' (ID: 962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4211435616016388
    2. ' )' → logprob: -2.4211435317993164
    3. ' ")' → logprob: -2.6711435317993164
    4. '")' → logprob: -2.9211435317993164
    5. '"' → logprob: -3.7961435317993164
    6. ' modulo' → logprob: -4.046143531799316
    7. ' %' → logprob: -4.171143531799316
    8. '%' → logprob: -4.671143531799316
    9. 'e' → logprob: -4.921143531799316
    10. ')")' → logprob: -5.046143531799316

Token 708: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12081940472126007
    2. ' )' → logprob: -2.870819330215454
    3. '")' → logprob: -3.745819330215454
    4. ' +' → logprob: -4.245819568634033
    5. ')"' → logprob: -4.995819568634033
    6. '+' → logprob: -5.245819568634033
    7. '"' → logprob: -6.370819568634033
    8. ')")' → logprob: -6.620819568634033
    9. '       ' → logprob: -6.870819568634033
    10. ')+' → logprob: -7.370819568634033

Token 709: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2028196156024933
    2. ' +' → logprob: -2.702819585800171
    3. '       ' → logprob: -3.077819585800171
    4. '+' → logprob: -3.702819585800171
    5. ' )' → logprob: -3.702819585800171
    6. '<|end|>' → logprob: -5.32781982421875
    7. ' +
' → logprob: -5.57781982421875
    8. '
' → logprob: -5.82781982421875
    9. ')+' → logprob: -6.32781982421875
    10. '+
' → logprob: -6.95281982421875

Token 710: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6982834935188293
    2. ' +' → logprob: -1.4482834339141846
    3. 'res' → logprob: -2.3232834339141846
    4. ')' → logprob: -2.3232834339141846
    5. '%' → logprob: -4.073283672332764
    6. '+
' → logprob: -4.323283672332764
    7. ' %' → logprob: -4.948283672332764
    8. ' +
' → logprob: -4.948283672332764
    9. ' )' → logprob: -5.323283672332764
    10. '
' → logprob: -5.448283672332764

Token 711: ' -' (ID: 533)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03266708552837372
    2. ' res' → logprob: -4.28266716003418
    3. 'result' → logprob: -5.15766716003418
    4. ')' → logprob: -5.40766716003418
    5. '
' → logprob: -5.53266716003418
    6. '       ' → logprob: -6.28266716003418
    7. ' +' → logprob: -7.40766716003418
    8. '+' → logprob: -7.78266716003418
    9. ' result' → logprob: -8.78266716003418
    10. '   ' → logprob: -9.15766716003418

Token 712: ' sum' (ID: 4215)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.9868877530097961
    2. 'md' → logprob: -1.7368876934051514
    3. ' sm' → logprob: -2.1118876934051514
    4. ' (' → logprob: -2.3618876934051514
    5. '(' → logprob: -2.6118876934051514
    6. '((' → logprob: -3.7368876934051514
    7. '(m' → logprob: -3.9868876934051514
    8. '(sm' → logprob: -4.1118879318237305
    9. '(md' → logprob: -4.2368879318237305
    10. '(x' → logprob: -4.3618879318237305

Token 713: '(md' (ID: 113930)
  Prédit: '(md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.319445937871933
    2. 'md' → logprob: -1.6944459676742554
    3. '(sm' → logprob: -3.194445848464966
    4. '(s' → logprob: -3.819445848464966
    5. 'sm' → logprob: -4.694446086883545
    6. '(m' → logprob: -5.569446086883545
    7. 's' → logprob: -5.819446086883545
    8. '(' → logprob: -6.069446086883545
    9. 'ma' → logprob: -6.444446086883545
    10. 'm' → logprob: -6.819446086883545

Token 714: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007076105568557978
    2. '))' → logprob: -5.382076263427734
    3. '[:' → logprob: -7.257076263427734
    4. ')%' → logprob: -7.632076263427734
    5. '[i' → logprob: -7.882076263427734
    6. ')
' → logprob: -8.632076263427734
    7. ')))' → logprob: -8.882076263427734
    8. ')])' → logprob: -9.632076263427734
    9. ')+' → logprob: -9.757076263427734
    10. '[' → logprob: -9.757076263427734

Token 715: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11946872621774673
    2. ' +' → logprob: -3.8694686889648438
    3. '[' → logprob: -3.9944686889648438
    4. ' )' → logprob: -4.244468688964844
    5. '<|end|>' → logprob: -4.744468688964844
    6. '()' → logprob: -5.369468688964844
    7. '   ' → logprob: -5.369468688964844
    8. ']' → logprob: -5.619468688964844
    9. '#' → logprob: -5.619468688964844
    10. '%' → logprob: -5.744468688964844

Token 716: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.00195515644736588
    2. '(ro' → logprob: -6.751955032348633
    3. ' ro' → logprob: -7.376955032348633
    4. '(' → logprob: -9.626955032348633
    5. 'n' → logprob: -11.001955032348633
    6. ' (' → logprob: -11.126955032348633
    7. '```' → logprob: -12.001955032348633
    8. 'rop' → logprob: -12.001955032348633
    9. 'K' → logprob: -12.314455032348633
    10. '(n' → logprob: -12.689455032348633

Token 717: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.007720794063061476
    2. 'o' → logprob: -5.757720947265625
    3. 'od' → logprob: -6.007720947265625
    4. 'of' → logprob: -7.382720947265625
    5. 'ol' → logprob: -7.632720947265625
    6. 'p' → logprob: -8.757720947265625
    7. '(op' → logprob: -9.007720947265625
    8. 'd' → logprob: -9.257720947265625
    9. '(' → logprob: -9.632720947265625
    10. 'x' → logprob: -9.882720947265625

Token 718: ' :' (ID: 712)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5302253365516663
    2. ' *' → logprob: -1.5302252769470215
    3. ')' → logprob: -2.2802252769470215
    4. '+' → logprob: -2.9052252769470215
    5. '*' → logprob: -4.0302252769470215
    6. '       ' → logprob: -5.6552252769470215
    7. ' )' → logprob: -6.1552252769470215
    8. '<|end|>' → logprob: -6.1552252769470215
    9. '#' → logprob: -6.2802252769470215
    10. '        ' → logprob: -6.6552252769470215

Token 719: ' la' (ID: 557)
  Prédit: ' sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.6589542627334595
    2. 's' → logprob: -0.7839542627334595
    3. ' (' → logprob: -4.28395414352417
    4. '(s' → logprob: -4.78395414352417
    5. '(' → logprob: -6.65895414352417
    6. ' s' → logprob: -7.03395414352417
    7. 'sm' → logprob: -8.033954620361328
    8. 'md' → logprob: -8.033954620361328
    9. ' ro' → logprob: -8.408954620361328
    10. '(sm' → logprob: -8.783954620361328

Token 720: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4290199279785156
    2. 'sm' → logprob: -1.6790199279785156
    3. 'md' → logprob: -1.6790199279785156
    4. ' (' → logprob: -2.5540199279785156
    5. ' sm' → logprob: -2.5540199279785156
    6. 'sum' → logprob: -3.0540199279785156
    7. '(' → logprob: -3.3040199279785156
    8. ')' → logprob: -3.5540199279785156
    9. '(s' → logprob: -4.179019927978516
    10. ' sum' → logprob: -4.429019927978516

Token 721: ' des' (ID: 731)
  Prédit: '(md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.06251879036426544
    2. 'md' → logprob: -3.687518835067749
    3. '(' → logprob: -4.06251859664917
    4. '(sum' → logprob: -5.68751859664917
    5. 's' → logprob: -5.81251859664917
    6. 'of' → logprob: -5.93751859664917
    7. '(s' → logprob: -6.18751859664917
    8. 'sum' → logprob: -6.68751859664917
    9. ' (' → logprob: -7.18751859664917
    10. '(D' → logprob: -7.31251859664917

Token 722: ' valeurs' (ID: 73668)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.03455599024891853
    2. 's' → logprob: -3.6595559120178223
    3. ' md' → logprob: -6.034555912017822
    4. '(md' → logprob: -6.034555912017822
    5. 'sm' → logprob: -6.409555912017822
    6. ' sm' → logprob: -7.159555912017822
    7. 'm' → logprob: -7.409555912017822
    8. '(' → logprob: -9.03455638885498
    9. '(s' → logprob: -9.53455638885498
    10. '(m' → logprob: -10.03455638885498

Token 723: ' md' (ID: 17280)
  Prédit: '(md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.7352148294448853
    2. '(' → logprob: -1.4852148294448853
    3. 'md' → logprob: -2.6102147102355957
    4. '(D' → logprob: -2.8602147102355957
    5. ')' → logprob: -3.1102147102355957
    6. '(
' → logprob: -4.110214710235596
    7. '#' → logprob: -4.235214710235596
    8. '*' → logprob: -4.360214710235596
    9. ' *' → logprob: -4.610214710235596
    10. ' (' → logprob: -4.735214710235596

Token 724: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0205152034759521
    2. ' =' → logprob: -1.2705152034759521
    3. '=' → logprob: -2.020515203475952
    4. ' +' → logprob: -2.645515203475952
    5. '[' → logprob: -3.145515203475952
    6. ' *' → logprob: -3.770515203475952
    7. '+' → logprob: -4.270515441894531
    8. '#' → logprob: -4.645515441894531
    9. ' )' → logprob: -4.895515441894531
    10. '   ' → logprob: -4.895515441894531

Token 725: ' chaque' (ID: 21194)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.5517704486846924
    2. ' ro' → logprob: -1.0517704486846924
    3. 'm' → logprob: -3.5517704486846924
    4. 'K' → logprob: -4.301770210266113
    5. 'md' → logprob: -4.426770210266113
    6. ' K' → logprob: -5.426770210266113
    7. ' sm' → logprob: -5.426770210266113
    8. ' m' → logprob: -5.676770210266113
    9. 's' → logprob: -6.176770210266113
    10. '(ro' → logprob: -6.926770210266113

Token 726: ' cycle' (ID: 15839)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: ' complet' (ID: 5127)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7463833689689636
    2. ')' → logprob: -1.6213834285736084
    3. '       ' → logprob: -1.6213834285736084
    4. '+' → logprob: -3.2463834285736084
    5. ' =' → logprob: -4.496383190155029
    6. ' *' → logprob: -4.496383190155029
    7. '[' → logprob: -4.746383190155029
    8. '        ' → logprob: -4.871383190155029
    9. '   ' → logprob: -4.871383190155029
    10. ' )' → logprob: -4.996383190155029

Token 728: ' multip' (ID: 17524)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.485851526260376
    2. ' +' → logprob: -1.735851526260376
    3. '<|end|>' → logprob: -2.360851526260376
    4. '+' → logprob: -2.735851526260376
    5. '       ' → logprob: -4.735851287841797
    6. ' *' → logprob: -4.860851287841797
    7. ' )' → logprob: -5.110851287841797
    8. ']' → logprob: -5.735851287841797
    9. ')+' → logprob: -5.860851287841797
    10. '   ' → logprob: -5.860851287841797

Token 729: 'li' (ID: 1307)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.996817946434021
    2. 'ip' → logprob: -1.371817946434021
    3. 'ipl' → logprob: -1.621817946434021
    4. 'plied' → logprob: -3.7468180656433105
    5. '(' → logprob: -3.8718180656433105
    6. 'lié' → logprob: -4.1218180656433105
    7. ' (' → logprob: -4.3718180656433105
    8. 'ply' → logprob: -4.8718180656433105
    9. 'er' → logprob: -5.3718180656433105
    10. ')' → logprob: -5.3718180656433105

Token 730: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.7233392596244812
    2. 'i' → logprob: -1.223339319229126
    3. 'é' → logprob: -1.973339319229126
    4. 'ié' → logprob: -2.723339319229126
    5. 'li' → logprob: -5.223339080810547
    6. 'lié' → logprob: -5.848339080810547
    7. 'ie' → logprob: -6.598339080810547
    8. 'quée' → logprob: -7.223339080810547
    9. 'iqué' → logprob: -7.473339080810547
    10. 'ed' → logprob: -7.473339080810547

Token 731: ' par' (ID: 686)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.2008238136768341
    2. '(ro' → logprob: -1.9508237838745117
    3. ' ro' → logprob: -4.325823783874512
    4. '(' → logprob: -4.575823783874512
    5. ' (' → logprob: -5.200823783874512
    6. ')' → logprob: -5.700823783874512
    7. '<|end|>' → logprob: -6.325823783874512
    8. '```' → logprob: -6.825823783874512
    9. 'roq' → logprob: -7.825823783874512
    10. '       ' → logprob: -8.013323783874512

Token 732: ' le' (ID: 505)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.3870196044445038
    2. ' ro' → logprob: -1.1370196342468262
    3. '(ro' → logprob: -9.387019157409668
    4. ' ' → logprob: -11.012019157409668
    5. ' ' → logprob: -11.449519157409668
    6. '_ro' → logprob: -12.387019157409668
    7. 'rop' → logprob: -13.012019157409668
    8. 'roff' → logprob: -13.074519157409668
    9. '```' → logprob: -13.074519157409668
    10. 's' → logprob: -13.449519157409668

Token 733: ' nombre' (ID: 9733)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.3136257529258728
    2. ' ro' → logprob: -1.3136258125305176
    3. '(ro' → logprob: -9.43862533569336
    4. '```' → logprob: -9.81362533569336
    5. '`' → logprob: -10.31362533569336
    6. ' ' → logprob: -10.87612533569336
    7. 'roff' → logprob: -10.93862533569336
    8. '1' → logprob: -11.12612533569336
    9. '_ro' → logprob: -11.12612533569336
    10. ' ' → logprob: -11.18862533569336

Token 734: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47124436497688293
    2. ')' → logprob: -2.2212443351745605
    3. 'md' → logprob: -3.0962443351745605
    4. '+' → logprob: -3.3462443351745605
    5. 'of' → logprob: -3.3462443351745605
    6. '(md' → logprob: -3.8462443351745605
    7. '*' → logprob: -3.8462443351745605
    8. '=' → logprob: -3.9712443351745605
    9. ' of' → logprob: -4.5962443351745605
    10. '(
' → logprob: -4.7212443351745605

Token 735: ' cycles' (ID: 41478)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.010291678830981255
    2. ' ro' → logprob: -4.635291576385498
    3. '```' → logprob: -9.135292053222656
    4. '1' → logprob: -9.510292053222656
    5. '(ro' → logprob: -9.885292053222656
    6. ' ' → logprob: -9.885292053222656
    7. ')' → logprob: -10.510292053222656
    8. ' ' → logprob: -11.072792053222656
    9. 'rop' → logprob: -11.135292053222656
    10. '`' → logprob: -11.260292053222656

Token 736: ' comple' (ID: 2149)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9640989303588867
    2. ' +' → logprob: -1.0890989303588867
    3. ')' → logprob: -2.2140989303588867
    4. '+' → logprob: -2.3390989303588867
    5. '<|end|>' → logprob: -3.8390989303588867
    6. '   ' → logprob: -4.839098930358887
    7. ' +
' → logprob: -4.839098930358887
    8. '+
' → logprob: -5.464098930358887
    9. ' *' → logprob: -5.714098930358887
    10. 'res' → logprob: -5.714098930358887

Token 737: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.6198301911354065
    2. 't' → logprob: -1.6198301315307617
    3. 'tes' → logprob: -1.7448301315307617
    4. 'te' → logprob: -3.3698301315307617
    5. 'et' → logprob: -4.369830131530762
    6. 'étés' → logprob: -4.494830131530762
    7. 'let' → logprob: -4.869830131530762
    8. ')' → logprob: -4.994830131530762
    9. 'ets' → logprob: -5.494830131530762
    10. 'lets' → logprob: -6.494830131530762

Token 738: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11580342799425125
    2. 'res' → logprob: -2.7408034801483154
    3. ')' → logprob: -4.490803241729736
    4. '+' → logprob: -4.615803241729736
    5. ' +' → logprob: -4.615803241729736
    6. '        
' → logprob: -5.990803241729736
    7. '   ' → logprob: -6.365803241729736
    8. '
' → logprob: -6.615803241729736
    9. '<|end|>' → logprob: -6.740803241729736
    10. ' *' → logprob: -7.115803241729736

Token 739: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8540588617324829
    2. ' +' → logprob: -1.354058861732483
    3. ')' → logprob: -1.854058861732483
    4. '       ' → logprob: -2.8540587425231934
    5. '<|end|>' → logprob: -3.6040587425231934
    6. '[' → logprob: -3.8540587425231934
    7. ' ' → logprob: -4.479058742523193
    8. ' +
' → logprob: -4.979058742523193
    9. '+
' → logprob: -5.104058742523193
    10. ' *' → logprob: -5.354058742523193

Token 740: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.15968622267246246
    2. ' +' → logprob: -2.909686326980591
    3. ' res' → logprob: -3.159686326980591
    4. '+' → logprob: -4.034686088562012
    5. '       ' → logprob: -4.034686088562012
    6. 'result' → logprob: -4.534686088562012
    7. ' result' → logprob: -7.034686088562012
    8. '
' → logprob: -7.659686088562012
    9. ' +
' → logprob: -7.659686088562012
    10. 'rest' → logprob: -7.659686088562012

Token 741: ' -' (ID: 533)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.18010230362415314
    2. ' res' → logprob: -2.1801023483276367
    3. ' +' → logprob: -4.180102348327637
    4. '       ' → logprob: -4.430102348327637
    5. 'result' → logprob: -4.555102348327637
    6. '+' → logprob: -5.055102348327637
    7. ' =' → logprob: -6.680102348327637
    8. ' result' → logprob: -6.805102348327637
    9. '```' → logprob: -7.180102348327637
    10. '   ' → logprob: -7.555102348327637

Token 742: ' sm' (ID: 1765)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6302260160446167
    2. 'sm' → logprob: -1.6302260160446167
    3. '(x' → logprob: -1.8802260160446167
    4. '(ro' → logprob: -3.6302261352539062
    5. '(((' → logprob: -3.8802261352539062
    6. '(sm' → logprob: -4.005226135253906
    7. 'ro' → logprob: -4.255226135253906
    8. 'md' → logprob: -4.755226135253906
    9. '(n' → logprob: -5.380226135253906
    10. 'x' → logprob: -5.505226135253906

Token 743: 'da' (ID: 2529)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007794944569468498
    2. 'da' → logprob: -4.8827948570251465
    3. 'a' → logprob: -10.570295333862305
    4. '\' → logprob: -10.945295333862305
    5. '   ' → logprob: -11.320295333862305
    6. 'д' → logprob: -11.382795333862305
    7. '```' → logprob: -11.382795333862305
    8. '-' → logprob: -11.507795333862305
    9. ')' → logprob: -11.945295333862305
    10. ' -' → logprob: -12.007795333862305

Token 744: ' :' (ID: 712)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2556731104850769
    2. ')' → logprob: -2.2556731700897217
    3. '+' → logprob: -2.2556731700897217
    4. ' *' → logprob: -5.630672931671143
    5. ' )' → logprob: -5.880672931671143
    6. ' +
' → logprob: -5.880672931671143
    7. '
' → logprob: -7.005672931671143
    8. ')+' → logprob: -7.255672931671143
    9. '#' → logprob: -7.380672931671143
    10. '*' → logprob: -7.880672931671143

Token 745: ' somme' (ID: 64484)
  Prédit: ' sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.4070080518722534
    2. 'sm' → logprob: -1.1570080518722534
    3. ' (' → logprob: -4.532008171081543
    4. 'md' → logprob: -6.282008171081543
    5. '(sm' → logprob: -6.532008171081543
    6. ' +' → logprob: -6.657008171081543
    7. '+' → logprob: -7.032008171081543
    8. ' x' → logprob: -7.657008171081543
    9. 's' → logprob: -7.782008171081543
    10. ' md' → logprob: -7.907008171081543

Token 746: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4324345290660858
    2. '+' → logprob: -1.4324345588684082
    3. ' +' → logprob: -2.682434558868408
    4. ')+' → logprob: -4.807434558868408
    5. 'md' → logprob: -5.182434558868408
    6. ' )' → logprob: -5.307434558868408
    7. '(md' → logprob: -5.807434558868408
    8. '#' → logprob: -6.432434558868408
    9. '   ' → logprob: -6.557434558868408
    10. '=' → logprob: -6.682434558868408

Token 747: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.020548075437545776
    2. ' md' → logprob: -4.270547866821289
    3. '(md' → logprob: -6.395547866821289
    4. '[' → logprob: -7.145547866821289
    5. 'prem' → logprob: -7.145547866821289
    6. ')' → logprob: -7.645547866821289
    7. '[i' → logprob: -7.645547866821289
    8. ']' → logprob: -7.770547866821289
    9. ' [' → logprob: -8.520547866821289
    10. 'élé' → logprob: -8.770547866821289

Token 748: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7074153423309326
    2. ' *' → logprob: -1.5824153423309326
    3. ' +' → logprob: -2.2074153423309326
    4. '[' → logprob: -3.7074153423309326
    5. '+' → logprob: -3.8324153423309326
    6. ' %' → logprob: -3.9574153423309326
    7. '[n' → logprob: -4.332415580749512
    8. ' )' → logprob: -4.457415580749512
    9. '   ' → logprob: -4.457415580749512
    10. '%' → logprob: -4.582415580749512

Token 749: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3495853543281555
    2. 'la' → logprob: -1.5995852947235107
    3. ' la' → logprob: -3.8495852947235107
    4. 'the' → logprob: -4.22458553314209
    5. '((' → logprob: -4.47458553314209
    6. '(range' → logprob: -4.72458553314209
    7. ')' → logprob: -4.97458553314209
    8. ' range' → logprob: -5.22458553314209
    9. '(' → logprob: -5.47458553314209
    10. 'l' → logprob: -5.59958553314209

Token 750: ' première' (ID: 23423)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4755399525165558
    2. 'prem' → logprob: -1.1005399227142334
    3. 'first' → logprob: -4.8505401611328125
    4. ')' → logprob: -4.9755401611328125
    5. ' range' → logprob: -5.1005401611328125
    6. 'part' → logprob: -5.3505401611328125
    7. 'for' → logprob: -5.4755401611328125
    8. ' première' → logprob: -5.6005401611328125
    9. '(range' → logprob: -5.7255401611328125
    10. '(' → logprob: -6.6005401611328125

Token 751: ' section' (ID: 7102)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.6318535804748535
    2. ')' → logprob: -1.3818535804748535
    3. ' part' → logprob: -2.6318535804748535
    4. ' partie' → logprob: -3.3818535804748535
    5. ' )' → logprob: -4.1318535804748535
    6. ']' → logprob: -4.6318535804748535
    7. '+' → logprob: -4.6318535804748535
    8. '   ' → logprob: -4.7568535804748535
    9. 'portion' → logprob: -5.0068535804748535
    10. ' +' → logprob: -5.1318535804748535

Token 752: ' part' (ID: 997)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.32346785068511963
    2. '+' → logprob: -2.44846773147583
    3. '       ' → logprob: -2.57346773147583
    4. ')' → logprob: -2.69846773147583
    5. '
' → logprob: -3.94846773147583
    6. '        
' → logprob: -5.07346773147583
    7. ' +
' → logprob: -6.07346773147583
    8. '        ' → logprob: -6.19846773147583
    9. ' )' → logprob: -6.32346773147583
    10. ' *' → logprob: -6.44846773147583

Token 753: 'ielle' (ID: 22380)
  Prédit: 'ielle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ielle' → logprob: -0.6675366163253784
    2. 'ie' → logprob: -0.7925366163253784
    3. 'e' → logprob: -3.792536735534668
    4. 'iel' → logprob: -5.917536735534668
    5. 'iale' → logprob: -5.917536735534668
    6. '```' → logprob: -6.542536735534668
    7. ')' → logprob: -7.042536735534668
    8. 'i' → logprob: -8.042536735534668
    9. '
' → logprob: -8.042536735534668
    10. '       ' → logprob: -8.167536735534668

Token 754: ' d' (ID: 272)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7324454188346863
    2. '       ' → logprob: -1.357445478439331
    3. ')' → logprob: -2.357445478439331
    4. '+' → logprob: -2.482445478439331
    5. '
' → logprob: -3.732445478439331
    6. '        
' → logprob: -4.107445240020752
    7. '   ' → logprob: -5.107445240020752
    8. ' )' → logprob: -5.232445240020752
    9. ' +
' → logprob: -5.607445240020752
    10. ' ' → logprob: -5.732445240020752

Token 755: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5035930871963501
    2. ']' → logprob: -2.5035929679870605
    3. 'range' → logprob: -2.5035929679870605
    4. '[' → logprob: -3.0035929679870605
    5. 'md' → logprob: -4.0035929679870605
    6. '(' → logprob: -4.3785929679870605
    7. '(range' → logprob: -4.3785929679870605
    8. ' (' → logprob: -4.5035929679870605
    9. '```' → logprob: -4.5035929679870605
    10. ' ' → logprob: -4.7535929679870605

Token 756: 'élé' (ID: 15228)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7701920866966248
    2. 'range' → logprob: -1.1451921463012695
    3. ')' → logprob: -3.3951921463012695
    4. 'l' → logprob: -3.6451921463012695
    5. '(range' → logprob: -3.8951921463012695
    6. 'i' → logprob: -4.1451921463012695
    7. ' la' → logprob: -4.2701921463012695
    8. 'the' → logprob: -4.5201921463012695
    9. 'le' → logprob: -4.5201921463012695
    10. '[' → logprob: -4.8951921463012695

Token 757: 'ments' (ID: 1626)
  Prédit: 'lle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lle' → logprob: -1.3534387350082397
    2. 'ie' → logprob: -1.6034387350082397
    3. 'e' → logprob: -2.1034388542175293
    4. 'ielle' → logprob: -2.7284388542175293
    5. 'rie' → logprob: -2.7284388542175293
    6. 'r' → logprob: -3.1034388542175293
    7. 'n' → logprob: -3.1034388542175293
    8. 'tion' → logprob: -3.4784388542175293
    9. 'le' → logprob: -3.7284388542175293
    10. 'l' → logprob: -3.9784388542175293

Token 758: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3052321672439575
    2. ')' → logprob: -1.6802321672439575
    3. '<|end|>' → logprob: -1.6802321672439575
    4. '+' → logprob: -2.180232048034668
    5. ' +' → logprob: -2.305232048034668
    6. ' ' → logprob: -2.680232048034668
    7. '        ' → logprob: -4.430232048034668
    8. '[' → logprob: -4.555232048034668
    9. ' )' → logprob: -4.930232048034668
    10. '
' → logprob: -5.305232048034668

Token 759: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2775043249130249
    2. ' +' → logprob: -2.1525044441223145
    3. '       ' → logprob: -3.1525044441223145
    4. ' ' → logprob: -3.2775044441223145
    5. ')' → logprob: -4.5275044441223145
    6. '        ' → logprob: -4.6525044441223145
    7. '[' → logprob: -5.1525044441223145
    8. '+
' → logprob: -5.9025044441223145
    9. '        
' → logprob: -6.2775044441223145
    10. ' +
' → logprob: -6.4025044441223145

Token 760: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6647138595581055
    2. '+' → logprob: -1.4147138595581055
    3. 'res' → logprob: -2.5397138595581055
    4. 'result' → logprob: -2.6647138595581055
    5. ' +' → logprob: -3.2897138595581055
    6. ')' → logprob: -4.1647138595581055
    7. '        
' → logprob: -4.5397138595581055
    8. '        ' → logprob: -5.2897138595581055
    9. ' result' → logprob: -5.5397138595581055
    10. ' res' → logprob: -5.5397138595581055

Token 761: ' -' (ID: 533)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03221171349287033
    2. ' res' → logprob: -3.9072117805480957
    3. 'result' → logprob: -4.782211780548096
    4. '       ' → logprob: -7.032211780548096
    5. '   ' → logprob: -7.907211780548096
    6. '+' → logprob: -7.907211780548096
    7. ' +' → logprob: -8.032211303710938
    8. '
' → logprob: -8.032211303710938
    9. ' result' → logprob: -8.532211303710938
    10. ' =' → logprob: -8.782211303710938

Token 762: ' md' (ID: 17280)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5101884603500366
    2. 'sm' → logprob: -2.135188579559326
    3. '((' → logprob: -2.385188579559326
    4. 'md' → logprob: -3.010188579559326
    5. 'x' → logprob: -3.260188579559326
    6. ' (' → logprob: -4.135188579559326
    7. 'res' → logprob: -4.260188579559326
    8. ' sm' → logprob: -4.385188579559326
    9. 'm' → logprob: -4.635188579559326
    10. '(md' → logprob: -4.885188579559326

Token 763: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010496005415916443
    2. '```' → logprob: -8.001049995422363
    3. '_' → logprob: -8.501049995422363
    4. '[' → logprob: -8.876049995422363
    5. '
' → logprob: -9.813549995422363
    6. '#' → logprob: -10.501049995422363
    7. ')' → logprob: -10.813549995422363
    8. 'a' → logprob: -11.251049995422363
    9. '`' → logprob: -11.438549995422363
    10. '=' → logprob: -11.438549995422363

Token 764: ' *' (ID: 425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15704688429832458
    2. '=' → logprob: -2.4070467948913574
    3. ')' → logprob: -3.5320467948913574
    4. '0' → logprob: -4.782046794891357
    5. '+' → logprob: -5.407046794891357
    6. ' ' → logprob: -5.907046794891357
    7. ' +=' → logprob: -6.907046794891357
    8. '
' → logprob: -6.907046794891357
    9. 'res' → logprob: -6.907046794891357
    10. '<|end|>' → logprob: -6.907046794891357

Token 765: ' ro' (ID: 974)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.24809066951274872
    2. 'm' → logprob: -2.8730907440185547
    3. ' (' → logprob: -2.8730907440185547
    4. '((' → logprob: -3.2480907440185547
    5. '(n' → logprob: -3.7480907440185547
    6. '(' → logprob: -3.9980907440185547
    7. '(m' → logprob: -4.248090744018555
    8. '1' → logprob: -5.123090744018555
    9. 'x' → logprob: -6.623090744018555
    10. ' ((' → logprob: -6.748090744018555

Token 766: 'op' (ID: 467)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5092289447784424
    2. '0' → logprob: -1.8842289447784424
    3. 'op' → logprob: -2.1342289447784424
    4. ' (' → logprob: -3.0092289447784424
    5. 'o' → logprob: -3.0092289447784424
    6. 'x' → logprob: -4.759228706359863
    7. 'p' → logprob: -4.759228706359863
    8. '1' → logprob: -6.259228706359863
    9. ' ' → logprob: -6.259228706359863
    10. 'm' → logprob: -6.509228706359863

Token 767: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08829689025878906
    2. '=' → logprob: -2.588296890258789
    3. ')' → logprob: -5.713296890258789
    4. '
' → logprob: -6.838296890258789
    5. ' +=' → logprob: -6.838296890258789
    6. '+' → logprob: -6.963296890258789
    7. '<|end|>' → logprob: -7.713296890258789
    8. ' +' → logprob: -7.963296890258789
    9. '+=' → logprob: -8.213296890258789
    10. '       ' → logprob: -8.213296890258789

Token 768: ' nombre' (ID: 9733)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1392467021942139
    2. 'md' → logprob: -1.7642467021942139
    3. ' md' → logprob: -2.139246702194214
    4. ' ro' → logprob: -2.389246702194214
    5. '(m' → logprob: -3.014246702194214
    6. '(n' → logprob: -3.264246702194214
    7. '(md' → logprob: -3.264246702194214
    8. '(x' → logprob: -3.514246702194214
    9. ' m' → logprob: -3.639246702194214
    10. 'ro' → logprob: -3.889246702194214

Token 769: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4280209541320801
    2. ' *' → logprob: -1.67802095413208
    3. '*(' → logprob: -2.17802095413208
    4. '(' → logprob: -3.92802095413208
    5. '0' → logprob: -4.67802095413208
    6. ' (' → logprob: -4.80302095413208
    7. '(n' → logprob: -5.30302095413208
    8. '   ' → logprob: -6.92802095413208
    9. 'of' → logprob: -7.17802095413208
    10. '(m' → logprob: -7.42802095413208

Token 770: ' z' (ID: 579)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.6908564567565918
    2. 'm' → logprob: -1.5658564567565918
    3. ' m' → logprob: -2.065856456756592
    4. '0' → logprob: -2.690856456756592
    5. ' md' → logprob: -3.315856456756592
    6. ' (' → logprob: -3.690856456756592
    7. '(m' → logprob: -4.815856456756592
    8. '1' → logprob: -4.940856456756592
    9. ' ' → logprob: -5.315856456756592
    10. '(' → logprob: -6.190856456756592

Token 771: 'éros' (ID: 120888)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7919026613235474
    2. '0' → logprob: -1.4169026613235474
    3. 'ero' → logprob: -1.6669026613235474
    4. ' (' → logprob: -3.041902542114258
    5. 'éro' → logprob: -4.291902542114258
    6. 'eros' → logprob: -4.416902542114258
    7. '   ' → logprob: -4.541902542114258
    8. ' zero' → logprob: -4.916902542114258
    9. ' md' → logprob: -5.416902542114258
    10. '  ' → logprob: -5.541902542114258

Token 772: ' dans' (ID: 2671)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0396424531936646
    2. '+' → logprob: -1.4146424531936646
    3. ' =' → logprob: -2.039642333984375
    4. ')' → logprob: -2.414642333984375
    5. ' *' → logprob: -2.914642333984375
    6. '       ' → logprob: -3.789642333984375
    7. '=' → logprob: -3.914642333984375
    8. '<|end|>' → logprob: -4.039642333984375
    9. ' ' → logprob: -4.164642333984375
    10. '*' → logprob: -4.914642333984375

Token 773: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.3496590554714203
    2. ' md' → logprob: -1.2246590852737427
    3. 'm' → logprob: -7.599658966064453
    4. ' m' → logprob: -7.974658966064453
    5. '1' → logprob: -9.099658966064453
    6. '0' → logprob: -9.099658966064453
    7. '(md' → logprob: -9.849658966064453
    8. '	md' → logprob: -10.724658966064453
    9. ' ' → logprob: -10.974658966064453
    10. '    ' → logprob: -11.474658966064453

Token 774: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6086897253990173
    2. '       ' → logprob: -1.983689785003662
    3. '
' → logprob: -2.108689785003662
    4. ' +' → logprob: -3.358689785003662
    5. '        
' → logprob: -3.358689785003662
    6. ')' → logprob: -3.733689785003662
    7. '=' → logprob: -3.983689785003662
    8. '   ' → logprob: -4.233689785003662
    9. 'res' → logprob: -4.483689785003662
    10. '+' → logprob: -4.608689785003662

Token 775: ' tous' (ID: 10688)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.37933841347694397
    2. 'md' → logprob: -1.7543383836746216
    3. ' ro' → logprob: -2.254338502883911
    4. ' md' → logprob: -4.504338264465332
    5. ' m' → logprob: -4.879338264465332
    6. 'm' → logprob: -4.879338264465332
    7. '1' → logprob: -5.004338264465332
    8. '(ro' → logprob: -7.129338264465332
    9. '0' → logprob: -7.254338264465332
    10. ' ' → logprob: -7.379338264465332

Token 776: ' les' (ID: 1341)
  Prédit: ' ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ro' → logprob: -0.8828010559082031
    2. ' md' → logprob: -1.3828010559082031
    3. 'md' → logprob: -1.7578010559082031
    4. 'ro' → logprob: -2.507801055908203
    5. ' m' → logprob: -3.007801055908203
    6. 'm' → logprob: -5.007801055908203
    7. ' (' → logprob: -5.132801055908203
    8. '0' → logprob: -5.257801055908203
    9. '(ro' → logprob: -5.382801055908203
    10. ' ' → logprob: -6.132801055908203

Token 777: ' cycles' (ID: 41478)
  Prédit: 'cycles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycles' → logprob: -0.6815639138221741
    2. 'ro' → logprob: -0.9315639138221741
    3. ' cycles' → logprob: -2.5565638542175293
    4. ' ro' → logprob: -4.056563854217529
    5. ')' → logprob: -6.806563854217529
    6. 'loops' → logprob: -7.681563854217529
    7. 'rou' → logprob: -7.806563854217529
    8. '_cycles' → logprob: -8.056564331054688
    9. '```' → logprob: -8.181564331054688
    10. ' ' → logprob: -8.431564331054688

Token 778: ' comple' (ID: 2149)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7392903566360474
    2. ' +' → logprob: -1.7392903566360474
    3. '+' → logprob: -1.9892903566360474
    4. ')' → logprob: -3.114290237426758
    5. ' =' → logprob: -3.239290237426758
    6. '       ' → logprob: -3.614290237426758
    7. ' res' → logprob: -3.739290237426758
    8. '=' → logprob: -3.989290237426758
    9. '   ' → logprob: -3.989290237426758
    10. 'result' → logprob: -4.489290237426758

Token 779: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.8995431661605835
    2. 'tes' → logprob: -1.1495431661605835
    3. 't' → logprob: -1.5245431661605835
    4. 'te' → logprob: -3.274543285369873
    5. ')' → logprob: -4.649543285369873
    6. '```' → logprob: -5.274543285369873
    7. 'x' → logprob: -6.649543285369873
    8. 'plet' → logprob: -7.024543285369873
    9. 's' → logprob: -7.024543285369873
    10. 'ted' → logprob: -7.274543285369873

Token 780: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8578891158103943
    2. 'res' → logprob: -1.232889175415039
    3. '
' → logprob: -1.607889175415039
    4. '        
' → logprob: -3.607889175415039
    5. ' res' → logprob: -3.857889175415039
    6. 'result' → logprob: -4.982889175415039
    7. '   ' → logprob: -5.107889175415039
    8. ' +' → logprob: -5.107889175415039
    9. ' =' → logprob: -5.482889175415039
    10. '+' → logprob: -5.857889175415039

Token 781: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.760779082775116
    2. '       ' → logprob: -1.7607791423797607
    3. ' +' → logprob: -2.0107791423797607
    4. ')' → logprob: -2.5107791423797607
    5. ' =' → logprob: -2.7607791423797607
    6. '=' → logprob: -3.5107791423797607
    7. '<|end|>' → logprob: -4.760778903961182
    8. ' +
' → logprob: -4.885778903961182
    9. '   ' → logprob: -5.010778903961182
    10. '+
' → logprob: -5.010778903961182

Token 782: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0764726996421814
    2. '       ' → logprob: -3.951472759246826
    3. ' res' → logprob: -3.951472759246826
    4. '
' → logprob: -4.451472759246826
    5. 'result' → logprob: -4.576472759246826
    6. ')' → logprob: -4.951472759246826
    7. ' +' → logprob: -6.701472759246826
    8. ' =' → logprob: -6.951472759246826
    9. '        
' → logprob: -7.076472759246826
    10. '   ' → logprob: -7.326472759246826

Token 783: ' -' (ID: 533)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.3108350038528442
    2. ' =' → logprob: -1.6858350038528442
    3. '       ' → logprob: -2.0608348846435547
    4. ')' → logprob: -2.6858348846435547
    5. '=' → logprob: -2.6858348846435547
    6. '```' → logprob: -3.1858348846435547
    7. '(' → logprob: -3.4358348846435547
    8. '   ' → logprob: -3.5608348846435547
    9. '+' → logprob: -3.8108348846435547
    10. 'result' → logprob: -3.8108348846435547

Token 784: ' m' (ID: 284)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.9546525478363037
    2. '(x' → logprob: -0.9546525478363037
    3. 'x' → logprob: -2.7046525478363037
    4. 'res' → logprob: -2.9546525478363037
    5. 'sm' → logprob: -3.7046525478363037
    6. '(n' → logprob: -4.204652786254883
    7. 'md' → logprob: -4.454652786254883
    8. '(((' → logprob: -4.579652786254883
    9. ' (' → logprob: -4.954652786254883
    10. '(s' → logprob: -5.079652786254883

Token 785: 'da' (ID: 2529)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1240757703781128
    2. ' %' → logprob: -1.8740757703781128
    3. '0' → logprob: -1.9990757703781128
    4. ' -' → logprob: -2.1240758895874023
    5. ' *' → logprob: -2.3740758895874023
    6. '%' → logprob: -2.3740758895874023
    7. 'od' → logprob: -3.6240758895874023
    8. '-' → logprob: -4.499075889587402
    9. ' ' → logprob: -4.874075889587402
    10. ' +' → logprob: -4.874075889587402

Token 786: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003588224353734404
    2. '_' → logprob: -9.500358581542969
    3. ' ' → logprob: -9.875358581542969
    4. '```' → logprob: -10.125358581542969
    5. ' *' → logprob: -10.375358581542969
    6. 'a' → logprob: -10.500358581542969
    7. '`' → logprob: -10.812858581542969
    8. '*' → logprob: -11.250358581542969
    9. ')' → logprob: -11.312858581542969
    10. '[' → logprob: -11.937858581542969

Token 787: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.392208218574524
    2. ' =' → logprob: -1.392208218574524
    3. '=' → logprob: -1.642208218574524
    4. '+' → logprob: -2.0172080993652344
    5. ' +' → logprob: -3.2672080993652344
    6. '<|end|>' → logprob: -3.2672080993652344
    7. '%' → logprob: -3.7672080993652344
    8. ' %' → logprob: -4.017208099365234
    9. ' ' → logprob: -4.017208099365234
    10. ' *' → logprob: -5.017208099365234

Token 788: ' nombre' (ID: 9733)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.5777119994163513
    2. ' (' → logprob: -1.827712059020996
    3. ' md' → logprob: -2.702712059020996
    4. ' m' → logprob: -2.827712059020996
    5. 'm' → logprob: -3.577712059020996
    6. '1' → logprob: -3.827712059020996
    7. '0' → logprob: -3.952712059020996
    8. ' ' → logprob: -4.202712059020996
    9. '(md' → logprob: -4.452712059020996
    10. '(n' → logprob: -4.452712059020996

Token 789: ' de' (ID: 334)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.664313793182373
    2. '*' → logprob: -2.164313793182373
    3. ' of' → logprob: -2.414313793182373
    4. ')' → logprob: -2.914313793182373
    5. ' ' → logprob: -3.164313793182373
    6. 'of' → logprob: -3.289313793182373
    7. ' +' → logprob: -3.539313793182373
    8. '    ' → logprob: -4.039313793182373
    9. '+' → logprob: -4.039313793182373
    10. '   ' → logprob: -4.289313793182373

Token 790: ' z' (ID: 579)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.8506165146827698
    2. '0' → logprob: -1.225616455078125
    3. '1' → logprob: -1.850616455078125
    4. 'm' → logprob: -2.725616455078125
    5. ' ' → logprob: -4.350616455078125
    6. ')' → logprob: -4.475616455078125
    7. ' m' → logprob: -5.100616455078125
    8. 'ro' → logprob: -5.600616455078125
    9. 'x' → logprob: -5.850616455078125
    10. ' ' → logprob: -6.225616455078125

Token 791: 'éros' (ID: 120888)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7466344833374023
    2. ' +' → logprob: -1.6216344833374023
    3. '+' → logprob: -2.1216344833374023
    4. ' ' → logprob: -2.1216344833374023
    5. '0' → logprob: -3.2466344833374023
    6. '+=' → logprob: -3.9966344833374023
    7. ' ' → logprob: -5.621634483337402
    8. ')' → logprob: -5.746634483337402
    9. ' =' → logprob: -5.871634483337402
    10. '=' → logprob: -5.996634483337402

Token 792: ' de' (ID: 334)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9041538834571838
    2. ')' → logprob: -1.029153823852539
    3. '[' → logprob: -2.529153823852539
    4. ' +' → logprob: -2.904153823852539
    5. '-' → logprob: -4.154153823852539
    6. '=' → logprob: -4.404153823852539
    7. ']' → logprob: -4.779153823852539
    8. '   ' → logprob: -4.904153823852539
    9. '*' → logprob: -5.154153823852539
    10. '+
' → logprob: -5.154153823852539

Token 793: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5240650177001953
    2. '1' → logprob: -1.8990650177001953
    3. ' ro' → logprob: -3.1490650177001953
    4. '+' → logprob: -3.2740650177001953
    5. ' +' → logprob: -3.2740650177001953
    6. 'ro' → logprob: -3.7740650177001953
    7. '
' → logprob: -3.8990650177001953
    8. '0' → logprob: -4.149065017700195
    9. '<|end|>' → logprob: -4.274065017700195
    10. ' ' → logprob: -4.649065017700195

Token 794: ' première' (ID: 23423)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.01721499115228653
    2. 'part' → logprob: -4.392214775085449
    3. ' première' → logprob: -5.517214775085449
    4. 'first' → logprob: -7.892214775085449
    5. '1' → logprob: -9.89221477508545
    6. ' ' → logprob: -10.26721477508545
    7. '```' → logprob: -10.26721477508545
    8. '   ' → logprob: -11.14221477508545
    9. 'pr' → logprob: -11.14221477508545
    10. ' partie' → logprob: -11.14221477508545

Token 795: ' section' (ID: 7102)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9440457224845886
    2. '0' → logprob: -1.3190457820892334
    3. 'ligne' → logprob: -2.3190457820892334
    4. ')' → logprob: -2.6940457820892334
    5. '
' → logprob: -3.1940457820892334
    6. '```' → logprob: -3.4440457820892334
    7. 'part' → logprob: -4.319045543670654
    8. '       ' → logprob: -4.569045543670654
    9. ' )' → logprob: -4.694045543670654
    10. '+' → logprob: -4.819045543670654

Token 796: ' part' (ID: 997)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36513450741767883
    2. '=' → logprob: -1.3651344776153564
    3. '+' → logprob: -4.4901347160339355
    4. ')' → logprob: -4.9901347160339355
    5. ' +' → logprob: -5.1151347160339355
    6. ' ' → logprob: -5.6151347160339355
    7. ':' → logprob: -5.7401347160339355
    8. ' 
' → logprob: -5.7401347160339355
    9. ' +=' → logprob: -5.8651347160339355
    10. ' =
' → logprob: -6.1151347160339355

Token 797: 'ielle' (ID: 22380)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1679590940475464
    2. '+=' → logprob: -2.417959213256836
    3. ')' → logprob: -3.917959213256836
    4. ' =' → logprob: -4.542959213256836
    5. ' )' → logprob: -4.917959213256836
    6. '=' → logprob: -4.917959213256836
    7. ' +' → logprob: -5.167959213256836
    8. '0' → logprob: -5.667959213256836
    9. '+' → logprob: -5.792959213256836
    10. '   ' → logprob: -6.042959213256836

Token 798: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.274876356124878
    2. ' +' → logprob: -1.524876356124878
    3. '       ' → logprob: -2.399876356124878
    4. '
' → logprob: -2.524876356124878
    5. ' %' → logprob: -2.899876356124878
    6. '+' → logprob: -2.899876356124878
    7. '=' → logprob: -3.024876356124878
    8. ')' → logprob: -3.274876356124878
    9. '   ' → logprob: -3.899876356124878
    10. '        
' → logprob: -3.899876356124878

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1482769101858139
    2. ')' → logprob: -3.1482768058776855
    3. 'res' → logprob: -3.6482768058776855
    4. '<|end|>' → logprob: -4.3982768058776855
    5. 'result' → logprob: -4.3982768058776855
    6. ' +' → logprob: -4.6482768058776855
    7. '   ' → logprob: -5.1482768058776855
    8. '+' → logprob: -5.2732768058776855
    9. ' =' → logprob: -5.6482768058776855
    10. '
' → logprob: -5.8982768058776855

Token 800: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.025624386966228485
    2. ' res' → logprob: -5.0256242752075195
    3. 'result' → logprob: -5.1506242752075195
    4. '
' → logprob: -5.5256242752075195
    5. '       ' → logprob: -5.7756242752075195
    6. '=' → logprob: -6.5256242752075195
    7. ' =' → logprob: -6.6506242752075195
    8. '        
' → logprob: -7.5256242752075195
    9. '   ' → logprob: -7.6506242752075195
    10. ')' → logprob: -7.9006242752075195

Token 801: ' La' (ID: 3038)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07162746787071228
    2. '       ' → logprob: -3.571627378463745
    3. '=' → logprob: -4.696627616882324
    4. 'result' → logprob: -4.821627616882324
    5. '
' → logprob: -5.196627616882324
    6. '```' → logprob: -5.196627616882324
    7. '=
' → logprob: -5.571627616882324
    8. ' =' → logprob: -5.696627616882324
    9. ' res' → logprob: -6.321627616882324
    10. '        
' → logprob: -6.946627616882324

Token 802: ' division' (ID: 21629)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.34765371680259705
    2. 'result' → logprob: -1.8476537466049194
    3. ' res' → logprob: -2.84765362739563
    4. '
' → logprob: -3.84765362739563
    5. ' result' → logprob: -3.84765362739563
    6. '       ' → logprob: -5.222653865814209
    7. '   ' → logprob: -5.347653865814209
    8. 'if' → logprob: -5.597653865814209
    9. 'rest' → logprob: -5.847653865814209
    10. 'r' → logprob: -6.222653865814209

Token 803: ' entière' (ID: 61583)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6013280153274536
    2. '=' → logprob: -1.9763280153274536
    3. ')' → logprob: -2.226327896118164
    4. ' /' → logprob: -2.601327896118164
    5. '/' → logprob: -2.976327896118164
    6. ' //' → logprob: -4.226327896118164
    7. '[' → logprob: -4.351327896118164
    8. '   ' → logprob: -4.726327896118164
    9. '(' → logprob: -4.976327896118164
    10. '       ' → logprob: -5.101327896118164

Token 804: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.285462349653244
    2. '=' → logprob: -1.6604623794555664
    3. '(' → logprob: -4.285462379455566
    4. ' (' → logprob: -5.035462379455566
    5. ')' → logprob: -5.160462379455566
    6. '[' → logprob: -5.410462379455566
    7. ',' → logprob: -5.535462379455566
    8. '   ' → logprob: -5.785462379455566
    9. ' //' → logprob: -5.785462379455566
    10. '       ' → logprob: -5.910462379455566

Token 805: 'avec' (ID: 64065)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3200695514678955
    2. '//' → logprob: -1.3200695514678955
    3. '(n' → logprob: -1.4450695514678955
    4. ' (' → logprob: -2.6950695514678955
    5. ' //' → logprob: -3.0700695514678955
    6. '(' → logprob: -3.0700695514678955
    7. '=' → logprob: -3.9450695514678955
    8. 'n' → logprob: -4.320069313049316
    9. ' n' → logprob: -5.445069313049316
    10. '/' → logprob: -5.570069313049316

Token 806: ' //' (ID: 602)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3845491409301758
    2. 'm' → logprob: -1.3845491409301758
    3. ')' → logprob: -1.6345491409301758
    4. '(' → logprob: -2.384549140930176
    5. ' m' → logprob: -3.009549140930176
    6. 'n' → logprob: -3.759549140930176
    7. ' (' → logprob: -3.884549140930176
    8. ' ' → logprob: -3.884549140930176
    9. '/' → logprob: -4.134549140930176
    10. ' /' → logprob: -4.134549140930176

Token 807: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03724082559347153
    2. ' )' → logprob: -3.537240743637085
    3. '2' → logprob: -6.662240982055664
    4. '=' → logprob: -6.787240982055664
    5. '1' → logprob: -6.912240982055664
    6. ' ' → logprob: -6.912240982055664
    7. ' (' → logprob: -7.287240982055664
    8. '(n' → logprob: -7.287240982055664
    9. '(' → logprob: -7.912240982055664
    10. ',' → logprob: -8.412240982055664

Token 808: ' fournit' (ID: 123615)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25460556149482727
    2. '=' → logprob: -1.6296055316925049
    3. 'res' → logprob: -4.004605770111084
    4. ')' → logprob: -5.879605770111084
    5. 'result' → logprob: -6.254605770111084
    6. ' =
' → logprob: -6.379605770111084
    7. ' res' → logprob: -7.129605770111084
    8. '=
' → logprob: -7.879605770111084
    9. '
' → logprob: -8.129605293273926
    10. ' )' → logprob: -8.254605293273926

Token 809: ' combien' (ID: 106648)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.32975655794143677
    2. ' ((' → logprob: -1.954756498336792
    3. '((' → logprob: -2.454756498336792
    4. '(n' → logprob: -3.079756498336792
    5. '(' → logprob: -5.954756736755371
    6. '   ' → logprob: -6.829756736755371
    7. '(((' → logprob: -7.329756736755371
    8. '(
' → logprob: -7.454756736755371
    9. ' (((' → logprob: -7.454756736755371
    10. '```' → logprob: -8.079756736755371

Token 810: ' de' (ID: 334)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.49212732911109924
    2. ' (' → logprob: -1.9921272993087769
    3. ' ((' → logprob: -2.6171274185180664
    4. '       ' → logprob: -3.1171274185180664
    5. '   ' → logprob: -3.2421274185180664
    6. ' de' → logprob: -3.6171274185180664
    7. '(n' → logprob: -3.8671274185180664
    8. '(' → logprob: -4.117127418518066
    9. 'de' → logprob: -5.367127418518066
    10. '(((' → logprob: -5.492127418518066

Token 811: ' fois' (ID: 14697)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7592756152153015
    2. '(n' → logprob: -1.1342756748199463
    3. ' (' → logprob: -2.3842756748199463
    4. '(x' → logprob: -2.7592756748199463
    5. ' ((' → logprob: -3.7592756748199463
    6. '(' → logprob: -4.259275436401367
    7. '1' → logprob: -5.259275436401367
    8. '(((' → logprob: -6.134275436401367
    9. '```' → logprob: -6.259275436401367
    10. 'x' → logprob: -6.759275436401367

Token 812: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2073899209499359
    2. '(n' → logprob: -2.7073898315429688
    3. '((' → logprob: -3.0823898315429688
    4. '(' → logprob: -3.9573898315429688
    5. ' ((' → logprob: -3.9573898315429688
    6. '   ' → logprob: -4.582389831542969
    7. '(x' → logprob: -4.707389831542969
    8. '       ' → logprob: -5.082389831542969
    9. 'x' → logprob: -6.332389831542969
    10. '(((' → logprob: -6.582389831542969

Token 813: ' somme' (ID: 64484)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7138150930404663
    2. ' (' → logprob: -1.2138150930404663
    3. '(' → logprob: -2.463815212249756
    4. '(x' → logprob: -3.463815212249756
    5. 'n' → logprob: -3.588815212249756
    6. 'm' → logprob: -4.463815212249756
    7. ' n' → logprob: -4.588815212249756
    8. '((' → logprob: -4.713815212249756
    9. '(m' → logprob: -4.963815212249756
    10. 'x' → logprob: -5.338815212249756

Token 814: ' cumul' (ID: 163119)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4141783118247986
    2. '   ' → logprob: -2.1641783714294434
    3. '       ' → logprob: -2.1641783714294434
    4. 'result' → logprob: -3.7891783714294434
    5. ' res' → logprob: -3.9141783714294434
    6. ' (' → logprob: -4.414178371429443
    7. 'div' → logprob: -4.789178371429443
    8. '           ' → logprob: -4.789178371429443
    9. '((' → logprob: -4.914178371429443
    10. '(' → logprob: -5.039178371429443

Token 815: 'ée' (ID: 2894)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.219396948814392
    2. '//' → logprob: -1.844396948814392
    3. '/' → logprob: -2.0943970680236816
    4. ')' → logprob: -2.3443970680236816
    5. ' //' → logprob: -2.4693970680236816
    6. '   ' → logprob: -2.7193970680236816
    7. '(' → logprob: -3.2193970680236816
    8. ' (' → logprob: -3.5943970680236816
    9. ' /' → logprob: -3.7193970680236816
    10. 'div' → logprob: -3.9693970680236816

Token 816: ' dépasse' (ID: 165701)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9019212126731873
    2. ' (' → logprob: -1.901921272277832
    3. '       ' → logprob: -2.151921272277832
    4. '(n' → logprob: -2.401921272277832
    5. '   ' → logprob: -3.026921272277832
    6. ')' → logprob: -3.151921272277832
    7. '((' → logprob: -3.651921272277832
    8. '1' → logprob: -4.401921272277832
    9. ' )' → logprob: -4.776921272277832
    10. '```' → logprob: -4.901921272277832

Token 817: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5381765365600586
    2. ' m' → logprob: -1.0381765365600586
    3. ' (' → logprob: -3.5381765365600586
    4. '       ' → logprob: -4.038176536560059
    5. '(m' → logprob: -4.788176536560059
    6. '((' → logprob: -6.913176536560059
    7. '1' → logprob: -7.163176536560059
    8. '(' → logprob: -7.163176536560059
    9. ' le' → logprob: -7.288176536560059
    10. '           ' → logprob: -7.288176536560059

Token 818: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.84003084897995
    2. '   ' → logprob: -1.2150309085845947
    3. ')' → logprob: -2.4650309085845947
    4. 'result' → logprob: -2.4650309085845947
    5. ' =' → logprob: -3.7150309085845947
    6. 'res' → logprob: -4.090030670166016
    7. '        
' → logprob: -4.715030670166016
    8. '=' → logprob: -4.840030670166016
    9. '
' → logprob: -4.840030670166016
    10. ' result' → logprob: -4.965030670166016

Token 819: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3117755651473999
    2. ' (' → logprob: -2.9367756843566895
    3. '(n' → logprob: -3.3117756843566895
    4. ')' → logprob: -3.4367756843566895
    5. ' =' → logprob: -3.9367756843566895
    6. ' +' → logprob: -4.1867756843566895
    7. '   ' → logprob: -4.3117756843566895
    8. '        
' → logprob: -4.6867756843566895
    9. ' (
' → logprob: -4.8117756843566895
    10. '((' → logprob: -4.8117756843566895

Token 820: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37676483392715454
    2. 'res' (adapté à ' res') → logprob: -1.2517647743225098
    3. ' res' → logprob: -4.25176477432251
    4. '   ' → logprob: -5.62676477432251
    5. '        
' → logprob: -5.87676477432251
    6. 'result' → logprob: -6.00176477432251
    7. 'return' → logprob: -6.75176477432251
    8. ')' → logprob: -7.00176477432251
    9. ' 
' → logprob: -7.25176477432251
    10. '           ' → logprob: -7.87676477432251

Token 821: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043067704886198044
    2. '=' → logprob: -3.168067693710327
    3. ' ' → logprob: -10.293067932128906
    4. ' +=' → logprob: -11.793067932128906
    5. '   ' → logprob: -11.793067932128906
    6. ')' → logprob: -12.043067932128906
    7. ',' → logprob: -12.418067932128906
    8. '	' → logprob: -12.793067932128906
    9. ' ' → logprob: -13.168067932128906
    10. '```' → logprob: -13.918067932128906

Token 822: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.32050395011901855
    2. '((' → logprob: -1.4455039501190186
    3. ' (' → logprob: -4.195504188537598
    4. 'n' → logprob: -4.820504188537598
    5. '(x' → logprob: -4.820504188537598
    6. '(((' → logprob: -5.695504188537598
    7. ' ((' → logprob: -5.820504188537598
    8. '(' → logprob: -7.320504188537598
    9. ' n' → logprob: -9.195504188537598
    10. 'x' → logprob: -9.320504188537598

Token 823: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3437349796295166
    2. '-' → logprob: -1.3437349796295166
    3. '<|end|>' → logprob: -4.8437347412109375
    4. ' *' → logprob: -5.0937347412109375
    5. '*' → logprob: -5.2187347412109375
    6. ' ' → logprob: -5.7187347412109375
    7. ')' → logprob: -6.2187347412109375
    8. '<|end|>' → logprob: -6.5937347412109375
    9. '   ' → logprob: -6.9687347412109375
    10. ' %' → logprob: -7.4687347412109375

Token 824: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015943869948387146
    2. ' ' → logprob: -8.75015926361084
    3. '(' → logprob: -14.75015926361084
    4. '
' → logprob: -15.00015926361084
    5. '   ' → logprob: -16.125160217285156
    6. '```' → logprob: -17.125160217285156
    7. '       ' → logprob: -17.375160217285156
    8. ' (' → logprob: -17.875160217285156
    9. ' ' → logprob: -18.500160217285156
    10. 'res' → logprob: -18.625160217285156

Token 825: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000249061529757455
    2. '(' → logprob: -8.375248908996582
    3. '((' → logprob: -11.375248908996582
    4. ' ' → logprob: -12.875248908996582
    5. '(res' → logprob: -14.000248908996582
    6. '(m' → logprob: -14.500248908996582
    7. '(((' → logprob: -14.500248908996582
    8. ' (' → logprob: -14.500248908996582
    9. 'res' → logprob: -14.625248908996582
    10. '
' → logprob: -14.750248908996582

Token 826: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.42033135890960693
    2. '+' → logprob: -1.170331358909607
    3. '<|end|>' → logprob: -4.1703314781188965
    4. ' -' → logprob: -4.5453314781188965
    5. ')' → logprob: -5.9203314781188965
    6. ' +
' → logprob: -6.4203314781188965
    7. '-' → logprob: -6.6703314781188965
    8. '+
' → logprob: -8.295331001281738
    9. '<|end|>' → logprob: -8.295331001281738
    10. ' ' → logprob: -8.545331001281738

Token 827: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.11600524187088013
    2. '(x' → logprob: -2.3660051822662354
    3. ' ((' → logprob: -5.4910054206848145
    4. '(((' → logprob: -5.7410054206848145
    5. ' (' → logprob: -5.8660054206848145
    6. '(n' → logprob: -6.1160054206848145
    7. '(' → logprob: -6.6160054206848145
    8. '(md' → logprob: -7.1160054206848145
    9. '(m' → logprob: -7.2410054206848145
    10. '   ' → logprob: -8.741004943847656

Token 828: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0783345103263855
    2. '((' → logprob: -2.7033345699310303
    3. 'x' → logprob: -5.328334331512451
    4. '(n' → logprob: -6.953334331512451
    5. '(' → logprob: -7.203334331512451
    6. ' (' → logprob: -7.453334331512451
    7. '(((' → logprob: -7.828334331512451
    8. '(md' → logprob: -7.953334331512451
    9. '(m' → logprob: -8.07833480834961
    10. ' ((' → logprob: -9.95333480834961

Token 829: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.523185133934021
    2. '%' → logprob: -0.898185133934021
    3. ' ' → logprob: -11.023184776306152
    4. '%x' → logprob: -11.148184776306152
    5. '%n' → logprob: -12.398184776306152
    6. '%m' → logprob: -12.398184776306152
    7. '```' → logprob: -12.648184776306152
    8. ')' → logprob: -12.898184776306152
    9. ' ' → logprob: -13.148184776306152
    10. '%s' → logprob: -13.148184776306152

Token 830: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00014001218369230628
    2. ' m' → logprob: -8.875140190124512
    3. ')m' → logprob: -17.500139236450195
    4. '   ' → logprob: -18.375139236450195
    5. '	m' → logprob: -18.500139236450195
    6. ')' → logprob: -18.500139236450195
    7. '```' → logprob: -19.375139236450195
    8. '
' → logprob: -19.875139236450195
    9. '[m' → logprob: -20.250139236450195
    10. ' м' → logprob: -20.375139236450195

Token 831: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3698047697544098
    2. ' +' → logprob: -1.2448047399520874
    3. ')' → logprob: -3.869804859161377
    4. '-' → logprob: -9.494804382324219
    5. ')//' → logprob: -9.869804382324219
    6. ' +
' → logprob: -10.494804382324219
    7. '+
' → logprob: -10.619804382324219
    8. ' )' → logprob: -10.994804382324219
    9. ' -' → logprob: -11.244804382324219
    10. ' ' → logprob: -11.244804382324219

Token 832: ' sum' (ID: 4215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49915197491645813
    2. 'sm' → logprob: -1.6241519451141357
    3. 'ro' → logprob: -1.8741519451141357
    4. '(ro' → logprob: -4.124152183532715
    5. ' sm' → logprob: -4.749152183532715
    6. '(s' → logprob: -4.999152183532715
    7. '(' → logprob: -5.749152183532715
    8. 'res' → logprob: -5.999152183532715
    9. '(sm' → logprob: -5.999152183532715
    10. 'md' → logprob: -7.124152183532715

Token 833: '(md' (ID: 113930)
  Prédit: '(md'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.0005991425714455545
    2. 'md' → logprob: -7.500598907470703
    3. '(' → logprob: -10.125598907470703
    4. '(m' → logprob: -13.500598907470703
    5. '	md' → logprob: -14.000598907470703
    6. ')' → logprob: -14.125598907470703
    7. 's' → logprob: -14.125598907470703
    8. ' (' → logprob: -14.625598907470703
    9. '.md' → logprob: -14.750598907470703
    10. ' md' → logprob: -15.250598907470703

Token 834: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20141255855560303
    2. '[:' → logprob: -2.0764126777648926
    3. '[' → logprob: -3.4514126777648926
    4. '))' → logprob: -4.076412677764893
    5. '[i' → logprob: -5.826412677764893
    6. ')*' → logprob: -6.701412677764893
    7. ')[' → logprob: -6.951412677764893
    8. 'res' → logprob: -7.201412677764893
    9. '[
' → logprob: -7.951412677764893
    10. '[(' → logprob: -8.076412200927734

Token 835: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3222200572490692
    2. '*' → logprob: -1.6972200870513916
    3. ' *' → logprob: -2.5722200870513916
    4. ')*' → logprob: -4.4472198486328125
    5. ' )' → logprob: -6.3222198486328125
    6. '+' → logprob: -7.0722198486328125
    7. '   ' → logprob: -7.8222198486328125
    8. ' +' → logprob: -7.9472198486328125
    9. '))' → logprob: -8.572219848632812
    10. '*)' → logprob: -8.697219848632812

Token 836: ' ro' (ID: 974)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.1605168730020523
    2. ' ro' → logprob: -1.9105168581008911
    3. '(ro' → logprob: -8.410516738891602
    4. '_ro' → logprob: -11.285516738891602
    5. 'res' → logprob: -11.910516738891602
    6. ' ' → logprob: -12.160516738891602
    7. 'roff' → logprob: -12.285516738891602
    8. 'roach' → logprob: -12.285516738891602
    9. 'rop' → logprob: -12.410516738891602
    10. 'rove' → logprob: -12.598016738891602

Token 837: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -3.8889261304575484e-06
    2. 'p' → logprob: -13.250003814697266
    3. 'оп' → logprob: -13.875003814697266
    4. '(op' → logprob: -14.625003814697266
    5. 'o' → logprob: -15.875003814697266
    6. '	op' → logprob: -16.000003814697266
    7. 'opcode' → logprob: -16.375003814697266
    8. ' op' → logprob: -17.125003814697266
    9. 'opleft' → logprob: -17.125003814697266
    10. '[' → logprob: -17.625003814697266

Token 838: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.560975968837738
    2. ' +' → logprob: -1.0609760284423828
    3. ')' → logprob: -2.685976028442383
    4. ' -' → logprob: -4.685976028442383
    5. '-' → logprob: -5.685976028442383
    6. ' )' → logprob: -7.685976028442383
    7. '       ' → logprob: -7.935976028442383
    8. '<|end|>' → logprob: -8.310976028442383
    9. '           ' → logprob: -8.560976028442383
    10. ' +
' → logprob: -8.685976028442383

Token 839: ' sm' (ID: 1765)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -9.138441237155348e-05
    2. 's' → logprob: -9.750091552734375
    3. ' sm' → logprob: -10.375091552734375
    4. 'md' → logprob: -14.250091552734375
    5. '(sm' → logprob: -14.375091552734375
    6. '   ' → logprob: -15.750091552734375
    7. '	sm' → logprob: -16.125091552734375
    8. 'sd' → logprob: -16.500091552734375
    9. 'm' → logprob: -16.625091552734375
    10. '       ' → logprob: -17.375091552734375

Token 840: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.0013770181685686111
    2. 'a' → logprob: -6.626377105712891
    3. 'd' → logprob: -10.12637710571289
    4. 'ad' → logprob: -13.37637710571289
    5. 'да' → logprob: -13.50137710571289
    6. '
' → logprob: -13.75137710571289
    7. 'ada' → logprob: -13.87637710571289
    8. 'ta' → logprob: -14.00137710571289
    9. '   ' → logprob: -14.37637710571289
    10. ' da' → logprob: -14.75137710571289

Token 841: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013041982427239418
    2. ')//' → logprob: -5.388041973114014
    3. ' )' → logprob: -5.388041973114014
    4. '+' → logprob: -6.388041973114014
    5. '-' → logprob: -6.763041973114014
    6. '   ' → logprob: -8.138042449951172
    7. ' -' → logprob: -8.138042449951172
    8. ' +' → logprob: -8.513042449951172
    9. '       ' → logprob: -9.638042449951172
    10. '//' → logprob: -10.263042449951172

Token 842: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09390401095151901
    2. ' //' → logprob: -2.8439040184020996
    3. '//' → logprob: -4.3439040184021
    4. ' )' → logprob: -4.5939040184021
    5. ')//' → logprob: -5.8439040184021
    6. '+' → logprob: -6.0939040184021
    7. ' ' → logprob: -6.9689040184021
    8. '```' → logprob: -7.4689040184021
    9. '   ' → logprob: -7.8439040184021
    10. ' +' → logprob: -8.468903541564941

Token 843: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.8624639324116288e-06
    2. ' m' → logprob: -13.250001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '[m' → logprob: -19.500001907348633
    5. ' ' → logprob: -19.625001907348633
    6. '	m' → logprob: -19.750001907348633
    7. '1' → logprob: -20.125001907348633
    8. '<m' → logprob: -20.625001907348633
    9. '       ' → logprob: -20.750001907348633
    10. ' ' → logprob: -20.750001907348633

Token 844: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 845: ' md' (ID: 17280)
  Prédit: '(md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.3966555595397949
    2. 'md' → logprob: -1.271655559539795
    3. '(m' → logprob: -3.146655559539795
    4. '(' → logprob: -7.021655559539795
    5. ' (' → logprob: -7.271655559539795
    6. 'm' → logprob: -7.396655559539795
    7. '((' → logprob: -7.396655559539795
    8. ' md' → logprob: -8.396656036376953
    9. '(min' → logprob: -8.646656036376953
    10. '(max' → logprob: -8.896656036376953

Token 846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '[' → logprob: -15.625011444091797
    4. '_' → logprob: -15.625011444091797
    5. 'O' → logprob: -17.000011444091797
    6. 'o' → logprob: -17.250011444091797
    7. '  ' → logprob: -18.250011444091797
    8. '```' → logprob: -18.562511444091797
    9. '０' → logprob: -18.625011444091797
    10. '   ' → logprob: -18.812511444091797

Token 847: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.43875569105148315
    2. '<|end|>' → logprob: -2.063755750656128
    3. ' -' → logprob: -2.188755750656128
    4. '*' → logprob: -2.938755750656128
    5. ' +' → logprob: -3.688755750656128
    6. '0' → logprob: -4.563755512237549
    7. '-' → logprob: -5.063755512237549
    8. '   ' → logprob: -5.188755512237549
    9. ' ' → logprob: -5.563755512237549
    10. '+' → logprob: -5.938755512237549

Token 848: ' ro' (ID: 974)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.078382134437561
    2. 'ro' → logprob: -1.078382134437561
    3. 'm' → logprob: -2.2033820152282715
    4. '0' → logprob: -2.3283820152282715
    5. 'res' → logprob: -2.9533820152282715
    6. '(ro' → logprob: -4.2033820152282715
    7. '(x' → logprob: -4.7033820152282715
    8. '(m' → logprob: -4.9533820152282715
    9. 'K' → logprob: -5.0783820152282715
    10. '(' → logprob: -5.7033820152282715

Token 849: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0003479785518720746
    2. 'p' → logprob: -8.000348091125488
    3. '0' → logprob: -11.625348091125488
    4. 'оп' → logprob: -13.625348091125488
    5. '1' → logprob: -13.875348091125488
    6. 'o' → logprob: -15.250348091125488
    7. '2' → logprob: -15.500348091125488
    8. 'opf' → logprob: -16.000347137451172
    9. 'ops' → logprob: -16.125347137451172
    10. '(op' → logprob: -16.250347137451172

Token 850: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1301071047782898
    2. ' -' → logprob: -2.1301071643829346
    3. '+' → logprob: -6.2551069259643555
    4. '-m' → logprob: -7.0051069259643555
    5. ' +' → logprob: -9.005106925964355
    6. '       ' → logprob: -9.005106925964355
    7. '+m' → logprob: -10.630106925964355
    8. '   ' → logprob: -10.880106925964355
    9. '<|end|>' → logprob: -11.005106925964355
    10. '	' → logprob: -11.005106925964355

Token 851: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00010187433508690447
    2. ' m' → logprob: -9.250102043151855
    3. '1' → logprob: -12.875102043151855
    4. '(m' → logprob: -13.500102043151855
    5. '   ' → logprob: -13.750102043151855
    6. '(' → logprob: -15.375102043151855
    7. '	m' → logprob: -15.875102043151855
    8. '           ' → logprob: -16.00010108947754
    9. '       ' → logprob: -16.62510108947754
    10. '    ' → logprob: -16.87510108947754

Token 852: 'da' (ID: 2529)
  Prédit: 'da'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.3185378611087799
    2. 'a' → logprob: -1.3185378313064575
    3. '0' → logprob: -5.318537712097168
    4. 'd' → logprob: -9.193537712097168
    5. '   ' → logprob: -9.943537712097168
    6. '```' → logprob: -10.068537712097168
    7. ' ' → logprob: -10.568537712097168
    8. '  ' → logprob: -10.818537712097168
    9. ' da' → logprob: -11.568537712097168
    10. '	' → logprob: -11.693537712097168

Token 853: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. 'o' → logprob: -17.125
    4. '۰' → logprob: -17.25
    5. '```' → logprob: -17.625
    6. '_' → logprob: -17.625
    7. '０' → logprob: -18.5625
    8. '   ' → logprob: -18.9375
    9. '০' → logprob: -19.25
    10. '[' → logprob: -19.4375

Token 854: '
        
' (ID: 20417)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 855: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 856: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004275107756257057
    2. '   ' → logprob: -6.004275321960449
    3. '       ' → logprob: -6.629275321960449
    4. ' print' → logprob: -8.50427532196045
    5. 'return' → logprob: -8.50427532196045
    6. 'if' → logprob: -10.87927532196045
    7. '```' → logprob: -11.25427532196045
    8. '<|end|>' → logprob: -11.25427532196045
    9. '	print' → logprob: -11.87927532196045
    10. 'for' → logprob: -12.25427532196045

Token 857: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.991464786347933e-05
    2. '       ' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.875060081481934
    4. ' print' → logprob: -14.500060081481934
    5. 'if' → logprob: -16.750059127807617
    6. '```' → logprob: -17.000059127807617
    7. '
' → logprob: -18.125059127807617
    8. 'x' → logprob: -18.750059127807617
    9. '        
' → logprob: -18.750059127807617
    10. 'res' → logprob: -18.750059127807617

Token 858: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.012741546146571636
    2. 'icher' → logprob: -4.512741565704346
    3. 'ich' → logprob: -7.012741565704346
    4. '#' → logprob: -7.762741565704346
    5. 'ichage' → logprob: -8.512741088867188
    6. 'ic' → logprob: -9.012741088867188
    7. '   ' → logprob: -11.387741088867188
    8. 'f' → logprob: -11.762741088867188
    9. 'che' → logprob: -12.512741088867188
    10. '```' → logprob: -12.512741088867188

Token 859: ' le' (ID: 505)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00319304340519011
    2. 'res' → logprob: -5.753192901611328
    3. 'print' → logprob: -11.253192901611328
    4. '(' → logprob: -13.378192901611328
    5. '(print' → logprob: -14.878192901611328
    6. '(result' → logprob: -16.003192901611328
    7. '   ' → logprob: -16.128192901611328
    8. ' res' → logprob: -16.628192901611328
    9. '(
' → logprob: -17.253192901611328
    10. '(str' → logprob: -17.378192901611328

Token 860: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3652020990848541
    2. 'res' → logprob: -1.3652020692825317
    3. '(res' → logprob: -2.9902021884918213
    4. '(' → logprob: -8.865201950073242
    5. 'result' → logprob: -9.615201950073242
    6. '(print' → logprob: -9.740201950073242
    7. '
' → logprob: -10.490201950073242
    8. '   ' → logprob: -10.990201950073242
    9. ' (' → logprob: -12.115201950073242
    10. '(
' → logprob: -12.240201950073242

Token 861: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06230779364705086
    2. '       ' → logprob: -2.812307834625244
    3. ' print' → logprob: -8.312307357788086
    4. '(' → logprob: -10.062307357788086
    5. '```' → logprob: -10.062307357788086
    6. '(print' → logprob: -12.312307357788086
    7. '   ' → logprob: -13.562307357788086
    8. '        
' → logprob: -13.937307357788086
    9. '`' → logprob: -14.687307357788086
    10. '``' → logprob: -15.187307357788086

Token 862: ' cette' (ID: 7696)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0016980338841676712
    2. '(res' → logprob: -7.126698017120361
    3. ' res' → logprob: -7.251698017120361
    4. 'print' → logprob: -9.12669849395752
    5. '   ' → logprob: -9.75169849395752
    6. '       ' → logprob: -11.50169849395752
    7. '
' → logprob: -13.12669849395752
    8. 'result' → logprob: -13.75169849395752
    9. ')' → logprob: -14.00169849395752
    10. '(' → logprob: -14.62669849395752

Token 863: ' requ' (ID: 7028)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7735627889633179
    2. 'print' → logprob: -1.0235627889633179
    3. '   ' → logprob: -3.2735629081726074
    4. ' )' → logprob: -3.7735629081726074
    5. 'for' → logprob: -3.8985629081726074
    6. 'res' → logprob: -4.148562908172607
    7. '```' → logprob: -4.148562908172607
    8. 'query' → logprob: -4.648562908172607
    9. 'request' → logprob: -4.898562908172607
    10. ' ' → logprob: -5.023562908172607

Token 864: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -6.52788148727268e-05
    2. 'êt' → logprob: -10.625064849853516
    3. 'ê' → logprob: -10.875064849853516
    4. 'ete' → logprob: -11.250064849853516
    5. 'ète' → logprob: -12.000064849853516
    6. 'êtes' → logprob: -14.000064849853516
    7. 'être' → logprob: -14.875064849853516
    8. '^' → logprob: -15.250064849853516
    9. 'ôte' → logprob: -15.250064849853516
    10. ' ' → logprob: -15.375064849853516

Token 865: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6934492588043213
    2. 'print' → logprob: -0.6934492588043213
    3. ' print' → logprob: -8.693449020385742
    4. '```' → logprob: -9.068449020385742
    5. '        
' → logprob: -11.193449020385742
    6. '   ' → logprob: -13.193449020385742
    7. '
' → logprob: -13.318449020385742
    8. '``' → logprob: -14.318449020385742
    9. '	print' → logprob: -14.943449020385742
    10. '`' → logprob: -15.318449020385742

Token 866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5775536298751831
    2. 'print' → logprob: -0.8275536298751831
    3. ' print' → logprob: -6.452553749084473
    4. '```' → logprob: -10.452553749084473
    5. '
' → logprob: -12.577553749084473
    6. '   ' → logprob: -13.202553749084473
    7. '        
' → logprob: -13.577553749084473
    8. '``' → logprob: -15.452553749084473
    9. '           ' → logprob: -16.077552795410156
    10. '	print' → logprob: -16.202552795410156

Token 867: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.500001907348633
    3. '```' → logprob: -16.000001907348633
    4. '       ' → logprob: -16.750001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '	print' → logprob: -23.250001907348633
    7. '
' → logprob: -23.500001907348633
    8. '``' → logprob: -23.750001907348633
    9. '`' → logprob: -25.000001907348633
    10. 'println' → logprob: -25.250001907348633

Token 868: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.750009536743164
    3. 'res' → logprob: -13.500009536743164
    4. '(
' → logprob: -18.250009536743164
    5. ' (' → logprob: -19.000009536743164
    6. '(result' → logprob: -20.500009536743164
    7. ' res' → logprob: -20.750009536743164
    8. '(re' → logprob: -20.875009536743164
    9. '	res' → logprob: -21.000009536743164
    10. '$res' → logprob: -21.250009536743164

Token 869: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. ' )' → logprob: -12.000012397766113
    3. ')
' → logprob: -13.000012397766113
    4. ')`' → logprob: -13.875012397766113
    5. '   ' → logprob: -14.000012397766113
    6. '       ' → logprob: -14.500012397766113
    7. '()' → logprob: -14.875012397766113
    8. '`)' → logprob: -15.000012397766113
    9. '())' → logprob: -15.375012397766113
    10. '```' → logprob: -16.375011444091797

Token 870: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 871: ' App' (ID: 2583)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011861001141369343
    2. '<|end|>' → logprob: -4.6368608474731445
    3. 'main' → logprob: -6.5118608474731445
    4. '```' → logprob: -8.261860847473145
    5. '#' → logprob: -8.886860847473145
    6. '
' → logprob: -9.136860847473145
    7. ' if' → logprob: -9.386860847473145
    8. '(main' → logprob: -11.761860847473145
    9. '<|end|>' → logprob: -12.136860847473145
    10. 'If' → logprob: -13.011860847473145

Token 872: 'elle' (ID: 3486)
  Prédit: 'ear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ear' → logprob: -0.12018799036741257
    2. 'le' → logprob: -3.120187997817993
    3. 'end' → logprob: -4.495187759399414
    4. 'ly' → logprob: -4.495187759399414
    5. 'e' → logprob: -4.620187759399414
    6. 'if' → logprob: -4.620187759399414
    7. 'lication' → logprob: -4.870187759399414
    8. 'en' → logprob: -5.620187759399414
    9. 'er' → logprob: -5.745187759399414
    10. 'roach' → logprob: -5.995187759399414

Token 873: ' la' (ID: 557)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.13420024514198303
    2. 'if' → logprob: -2.13420033454895
    3. '()' → logprob: -5.384200096130371
    4. '(main' → logprob: -6.634200096130371
    5. ' main' → logprob: -6.759200096130371
    6. '(' → logprob: -9.634200096130371
    7. '(
' → logprob: -10.134200096130371
    8. '()
' → logprob: -10.384200096130371
    9. '_main' → logprob: -10.884200096130371
    10. '__' → logprob: -11.884200096130371

Token 874: ' fonction' (ID: 17610)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005326962564140558
    2. 'if' → logprob: -5.255326747894287
    3. ' main' → logprob: -9.380327224731445
    4. '__' → logprob: -12.255327224731445
    5. 'def' → logprob: -12.755327224731445
    6. '```' → logprob: -14.380327224731445
    7. '_main' → logprob: -15.255327224731445
    8. '(main' → logprob: -15.630327224731445
    9. '	main' → logprob: -17.255327224731445
    10. ' if' → logprob: -17.880327224731445

Token 875: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.016555091366171837
    2. 'if' → logprob: -4.266555309295654
    3. '()
' → logprob: -6.266555309295654
    4. '()' → logprob: -7.766555309295654
    5. '(main' → logprob: -10.766554832458496
    6. '
' → logprob: -11.016554832458496
    7. ' main' → logprob: -11.266554832458496
    8. '(
' → logprob: -11.641554832458496
    9. '```' → logprob: -12.891554832458496
    10. '()

' → logprob: -13.016554832458496

Token 876: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1273164302110672
    2. 'if' → logprob: -2.127316474914551
    3. 'main' → logprob: -8.75231647491455
    4. '

' → logprob: -9.50231647491455
    5. '<|end|>' → logprob: -9.75231647491455
    6. '
' → logprob: -9.87731647491455
    7. '```' → logprob: -11.25231647491455
    8. ' if' → logprob: -11.25231647491455
    9. '  
' → logprob: -12.00231647491455
    10. '(main' → logprob: -12.37731647491455

Token 877: ' dém' (ID: 34947)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6418922543525696
    2. 'if' → logprob: -0.7668922543525696
    3. ' main' → logprob: -5.016892433166504
    4. 'run' → logprob: -6.266892433166504
    5. ' if' → logprob: -8.766892433166504
    6. '__' → logprob: -8.766892433166504
    7. '```' → logprob: -9.016892433166504
    8. 'execute' → logprob: -9.266892433166504
    9. ' run' → logprob: -9.641892433166504
    10. 'invoke' → logprob: -10.391892433166504

Token 878: 'arrer' (ID: 85856)
  Prédit: 'arrer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrer' → logprob: -5.490809417096898e-05
    2. 'arr' → logprob: -10.125055313110352
    3. 'ar' → logprob: -11.875055313110352
    4. 'arer' → logprob: -11.875055313110352
    5. 'arrera' → logprob: -14.750055313110352
    6. 'arrage' → logprob: -16.12505531311035
    7. '#' → logprob: -16.12505531311035
    8. 'orrer' → logprob: -16.25005531311035
    9. '```' → logprob: -17.12505531311035
    10. 'urr' → logprob: -17.37505531311035

Token 879: ' le' (ID: 505)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5523329973220825
    2. 'if' → logprob: -1.3023329973220825
    3. '()
' → logprob: -2.677332878112793
    4. 'main' → logprob: -2.802332878112793
    5. '(main' → logprob: -4.052332878112793
    6. '()' → logprob: -5.927332878112793
    7. '(
' → logprob: -6.927332878112793
    8. '```' → logprob: -7.177332878112793
    9. '()

' → logprob: -7.302332878112793
    10. '

' → logprob: -8.927332878112793

Token 880: ' programme' (ID: 18190)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.6960428357124329
    2. 'programme' → logprob: -0.6960428357124329
    3. 'script' → logprob: -6.446043014526367
    4. 'if' → logprob: -7.696043014526367
    5. 'programm' → logprob: -7.946043014526367
    6. ' programme' → logprob: -8.446043014526367
    7. '```' → logprob: -8.696043014526367
    8. ' program' → logprob: -9.946043014526367
    9. 'programma' → logprob: -10.446043014526367
    10. 'execution' → logprob: -11.071043014526367

Token 881: ' lorsque' (ID: 39361)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17241743206977844
    2. '
' → logprob: -1.922417402267456
    3. '<|end|>' → logprob: -4.672417640686035
    4. 'main' → logprob: -6.547417640686035
    5. ' if' → logprob: -7.547417640686035
    6. '(main' → logprob: -7.922417640686035
    7. '```' → logprob: -9.297417640686035
    8. '(
' → logprob: -9.422417640686035
    9. '\n' → logprob: -10.047417640686035
    10. '()' → logprob: -10.297417640686035

Token 882: ' ce' (ID: 2357)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -3.249780638725497e-05
    2. 'if' → logprob: -10.750032424926758
    3. ' __' → logprob: -12.250032424926758
    4. '```' → logprob: -13.125032424926758
    5. 'the' → logprob: -13.375032424926758
    6. 'name' → logprob: -14.250032424926758
    7. ''' → logprob: -14.375032424926758
    8. '"' → logprob: -14.750032424926758
    9. 'True' → logprob: -15.000032424926758
    10. 'import' → logprob: -15.250032424926758

Token 883: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1479196846485138
    2. 'n' → logprob: -3.2729196548461914
    3. 'name' → logprob: -3.3979196548461914
    4. ''est' → logprob: -4.022919654846191
    5. 'if' → logprob: -4.272919654846191
    6. 'est' → logprob: -4.397919654846191
    7. '#' → logprob: -5.272919654846191
    8. 'is' → logprob: -5.897919654846191
    9. '`' → logprob: -6.147919654846191
    10. '```' → logprob: -6.272919654846191

Token 884: ' est' (ID: 893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25067803263664246
    2. 'is' → logprob: -1.7506780624389648
    3. '__' → logprob: -3.375678062438965
    4. '==' → logprob: -5.250678062438965
    5. '```' → logprob: -5.625678062438965
    6. ' is' → logprob: -6.000678062438965
    7. '#' → logprob: -7.250678062438965
    8. ' ==' → logprob: -7.500678062438965
    9. 'est' → logprob: -8.000678062438965
    10. 'name' → logprob: -9.125678062438965

Token 885: ' exécut' (ID: 165350)
  Prédit: 'execut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'execut' → logprob: -0.7401336431503296
    2. 'ex' → logprob: -1.2401336431503296
    3. ' exécut' → logprob: -2.240133762359619
    4. '__' → logprob: -2.365133762359619
    5. 'run' → logprob: -3.615133762359619
    6. ' run' → logprob: -6.740133762359619
    7. 'import' → logprob: -6.740133762359619
    8. ' executed' → logprob: -7.365133762359619
    9. '_ex' → logprob: -7.490133762359619
    10. 'le' → logprob: -7.740133762359619

Token 886: 'é' (ID: 377)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0016785101033747196
    2. ' if' → logprob: -7.001678466796875
    3. '
' → logprob: -8.251678466796875
    4. '__' → logprob: -8.501678466796875
    5. '_' → logprob: -9.751678466796875
    6. '```' → logprob: -10.001678466796875
    7. 'ion' → logprob: -10.126678466796875
    8. '(
' → logprob: -10.501678466796875
    9. '_if' → logprob: -10.501678466796875
    10. '_
' → logprob: -11.376678466796875

Token 887: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0384429469704628
    2. 'if' → logprob: -3.288442850112915
    3. '

' → logprob: -8.038442611694336
    4. '<|end|>' → logprob: -10.913442611694336
    5. ' if' → logprob: -11.038442611694336
    6. '  
' → logprob: -11.163442611694336
    7. '```' → logprob: -11.163442611694336
    8. '
' → logprob: -11.538442611694336
    9. ' 
' → logprob: -13.413442611694336
    10. 'main' → logprob: -13.538442611694336

Token 888: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018417751416563988
    2. 'main' → logprob: -6.7518415451049805
    3. '
' → logprob: -7.3768415451049805
    4. '```' → logprob: -10.12684154510498
    5. ' if' → logprob: -12.37684154510498
    6. '<|end|>' → logprob: -14.12684154510498
    7. '``' → logprob: -15.25184154510498
    8. '  
' → logprob: -15.87684154510498
    9. '(main' → logprob: -15.87684154510498
    10. ' main' → logprob: -16.126842498779297

Token 889: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 887
Tokens correctement prédits (1ère position, stricte): 213
Tokens correctement prédits (1ère position, avec adaptation): 223
Tokens correctement prédits (top 10): 476
Précision stricte (1ère position): 24.01%
Précision adaptée (1ère position): 25.14%
Précision (top 10): 53.66%
================================================================================
