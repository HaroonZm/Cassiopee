================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, mul

A, B = map(int, input().split())
choices = sorted([A, B], reverse=True)
result = reduce(add, (choices[0], max(choices[0] - 1, choices[1])))
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.6123510599136353
    2. 'wrap' → logprob: -0.8623510599136353
    3. 'reduce' → logprob: -3.4873509407043457
    4. 'l' → logprob: -6.112350940704346
    5. ' wraps' → logprob: -6.362350940704346
    6. 'cached' → logprob: -7.612350940704346
    7. 'cache' → logprob: -7.987350940704346
    8. 'cmp' → logprob: -9.112351417541504
    9. '```' → logprob: -9.237351417541504
    10. ' partial' → logprob: -9.487351417541504

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03205633908510208
    2. 'def' → logprob: -4.1570563316345215
    3. '\' → logprob: -4.6570563316345215
    4. ' ' → logprob: -6.0320563316345215
    5. '(
' → logprob: -6.9070563316345215
    6. ',' → logprob: -7.1570563316345215
    7. '(lambda' → logprob: -7.9070563316345215
    8. '```' → logprob: -8.28205680847168
    9. ' (' → logprob: -8.40705680847168
    10. 'd' → logprob: -8.65705680847168

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.16751143336296082
    2. ' itertools' → logprob: -2.292511463165283
    3. ' math' → logprob: -3.917511463165283
    4. ' collections' → logprob: -3.917511463165283
    5. 'operator' → logprob: -4.417511463165283
    6. 'collections' → logprob: -7.792511463165283
    7. 'math' → logprob: -8.042510986328125
    8. ' typing' → logprob: -8.042510986328125
    9. ' os' → logprob: -8.667510986328125
    10. ' ' → logprob: -9.667510986328125

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06650790572166443
    2. 'import' → logprob: -2.8165078163146973
    3. '.' → logprob: -5.566507816314697
    4. ' ' → logprob: -7.441507816314697
    5. ' .' → logprob: -10.066508293151855
    6. '.import' → logprob: -10.191508293151855
    7. '	import' → logprob: -11.066508293151855
    8. '_import' → logprob: -12.066508293151855
    9. '-import' → logprob: -13.316508293151855
    10. ' ,' → logprob: -13.316508293151855

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.3398696780204773
    2. ' import' → logprob: -1.964869737625122
    3. 'add' → logprob: -2.714869737625122
    4. ' mul' → logprob: -2.839869737625122
    5. ' ' → logprob: -4.714869499206543
    6. 'import' → logprob: -4.964869499206543
    7. 'mul' → logprob: -5.089869499206543
    8. ' item' → logprob: -7.839869499206543
    9. '```' → logprob: -8.964869499206543
    10. ' icon' → logprob: -9.339869499206543

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.535179853439331
    2. '\n' → logprob: -1.535179853439331
    3. '\' → logprob: -2.410179853439331
    4. '(
' → logprob: -2.785179853439331
    5. ',' → logprob: -4.91018009185791
    6. 'newline' → logprob: -5.16018009185791
    7. 'def' → logprob: -5.28518009185791
    8. '
' → logprob: -5.78518009185791
    9. 'result' → logprob: -5.91018009185791
    10. '#' → logprob: -6.03518009185791

Token 10: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.652916431427002
    2. 'mul' → logprob: -0.777916431427002
    3. ' sub' → logprob: -4.652916431427002
    4. 'sub' → logprob: -4.652916431427002
    5. '```' → logprob: -8.652915954589844
    6. 'getitem' → logprob: -8.777915954589844
    7. ' i' → logprob: -8.902915954589844
    8. 'item' → logprob: -9.027915954589844
    9. ' ' → logprob: -9.277915954589844
    10. 'i' → logprob: -9.527915954589844

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005076021887362003
    2. '(
' → logprob: -5.755075931549072
    3. ',' → logprob: -7.505075931549072
    4. '\' → logprob: -7.880075931549072
    5. '#' → logprob: -8.25507640838623
    6. '\(' → logprob: -8.50507640838623
    7. '\n' → logprob: -9.63007640838623
    8. 'def' → logprob: -9.75507640838623
    9. '```' → logprob: -9.75507640838623
    10. '(

' → logprob: -9.88007640838623

Token 12: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08733584731817245
    2. ',' → logprob: -3.4623358249664307
    3. 'def' → logprob: -4.21233606338501
    4. '(
' → logprob: -4.46233606338501
    5. '\' → logprob: -4.58733606338501
    6. '#' → logprob: -5.33733606338501
    7. 'a' → logprob: -6.08733606338501
    8. '[' → logprob: -6.58733606338501
    9. '*' → logprob: -6.71233606338501
    10. '\n' → logprob: -7.08733606338501

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.146370992064476
    2. '=' → logprob: -2.2713708877563477
    3. ' ' → logprob: -4.646370887756348
    4. '.' → logprob: -5.021370887756348
    5. 'dd' → logprob: -5.146370887756348
    6. '_' → logprob: -5.896370887756348
    7. ',' → logprob: -6.146370887756348
    8. '[' → logprob: -6.521370887756348
    9. 'B' → logprob: -6.771370887756348
    10. '  ' → logprob: -8.396370887756348

Token 14: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.6330466270446777
    2. 'B' → logprob: -0.7580466270446777
    3. ' =' → logprob: -8.758047103881836
    4. '=' → logprob: -9.008047103881836
    5. ' ' → logprob: -9.633047103881836
    6. '*' → logprob: -10.883047103881836
    7. 'b' → logprob: -11.383047103881836
    8. '[' → logprob: -11.508047103881836
    9. ' *' → logprob: -11.883047103881836
    10. ',' → logprob: -12.008047103881836

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07920965552330017
    2. '=' → logprob: -2.579209566116333
    3. ',' → logprob: -8.204209327697754
    4. ')' → logprob: -11.079209327697754
    5. ' ' → logprob: -11.454209327697754
    6. '_' → logprob: -11.954209327697754
    7. '[' → logprob: -12.204209327697754
    8. ' ,' → logprob: -12.954209327697754
    9. '<|end|>' → logprob: -13.579209327697754
    10. '  ' → logprob: -13.829209327697754

Token 16: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05310001224279404
    2. '0' → logprob: -3.678100109100342
    3. '1' → logprob: -4.053100109100342
    4. '10' → logprob: -5.678100109100342
    5. ' (' → logprob: -6.803100109100342
    6. '5' → logprob: -6.928100109100342
    7. ' [],' → logprob: -7.303100109100342
    8. ' map' → logprob: -7.553100109100342
    9. ' [' → logprob: -7.553100109100342
    10. ' []' → logprob: -8.053099632263184

Token 17: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10609382390975952
    2. '(int' → logprob: -2.4810938835144043
    3. '(lambda' → logprob: -4.231093883514404
    4. '(str' → logprob: -6.231093883514404
    5. '(input' → logprob: -8.856093406677246
    6. '(eval' → logprob: -9.606093406677246
    7. 'int' → logprob: -9.856093406677246
    8. '(len' → logprob: -10.356093406677246
    9. '<|end|>' → logprob: -10.356093406677246
    10. '(range' → logprob: -11.356093406677246

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05103366822004318
    2. '(' → logprob: -3.4260337352752686
    3. ')' → logprob: -4.8010334968566895
    4. 'input' → logprob: -4.9260334968566895
    5. ',' → logprob: -8.176033973693848
    6. '(stdin' → logprob: -8.426033973693848
    7. ',input' → logprob: -8.551033973693848
    8. ' input' → logprob: -8.551033973693848
    9. '(user' → logprob: -9.551033973693848
    10. '```' → logprob: -9.676033973693848

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009817004203796387
    2. ' input' → logprob: -4.634817123413086
    3. '(input' → logprob: -10.259817123413086
    4. ')' → logprob: -11.009817123413086
    5. ',input' → logprob: -12.134817123413086
    6. '=input' → logprob: -13.259817123413086
    7. ' ' → logprob: -14.134817123413086
    8. '	input' → logprob: -14.759817123413086
    9. 'open' → logprob: -14.884817123413086
    10. '```' → logprob: -15.509817123413086

Token 20: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5687054395675659
    2. '()' → logprob: -1.068705439567566
    3. '(' → logprob: -2.8187055587768555
    4. ')' → logprob: -3.8187055587768555
    5. '(()' → logprob: -6.4437055587768555
    6. '());' → logprob: -6.4437055587768555
    7. '().' → logprob: -6.6937055587768555
    8. '('' → logprob: -6.9437055587768555
    9. '(),' → logprob: -7.1937055587768555
    10. '();)' → logprob: -7.4437055587768555

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006323783891275525
    2. 'strip' → logprob: -7.375632286071777
    3. 'rstrip' → logprob: -12.750632286071777
    4. ' split' → logprob: -13.250632286071777
    5. ')' → logprob: -15.000632286071777
    6. 'spl' → logprob: -15.125632286071777
    7. '(split' → logprob: -15.250632286071777
    8. 'read' → logprob: -15.250632286071777
    9. '().' → logprob: -17.625633239746094
    10. ' ' → logprob: -18.000633239746094

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31471672654151917
    2. '))' → logprob: -1.3147166967391968
    3. '())' → logprob: -6.689716815948486
    4. '()))' → logprob: -9.564716339111328
    5. '),' → logprob: -10.189716339111328
    6. '()' → logprob: -10.189716339111328
    7. '`)' → logprob: -11.064716339111328
    8. ')))' → logprob: -11.314716339111328
    9. ')`' → logprob: -11.814716339111328
    10. ''))' → logprob: -12.314716339111328

Token 23: 'choices' (ID: 56195)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2177979052066803
    2. 'numbers' → logprob: -2.8427979946136475
    3. 's' → logprob: -3.8427979946136475
    4. 'res' → logprob: -4.092797756195068
    5. 'print' → logprob: -4.342797756195068
    6. 'nums' → logprob: -4.467797756195068
    7. 'lst' → logprob: -4.592797756195068
    8. 'data' → logprob: -4.592797756195068
    9. 'product' → logprob: -4.967797756195068
    10. 'a' → logprob: -5.092797756195068

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2960772216320038
    2. '=' → logprob: -1.4210772514343262
    3. '[' → logprob: -4.671077251434326
    4. '_' → logprob: -6.046077251434326
    5. '.' → logprob: -6.671077251434326
    6. '(' → logprob: -7.421077251434326
    7. ')' → logprob: -7.671077251434326
    8. '[]' → logprob: -8.671076774597168
    9. '[:]' → logprob: -8.796076774597168
    10. 's' → logprob: -9.296076774597168

Token 25: ' sorted' (ID: 20099)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.927959144115448
    2. '[' → logprob: -1.4279592037200928
    3. '[list' → logprob: -2.0529592037200928
    4. '[int' → logprob: -2.8029592037200928
    5. '['' → logprob: -3.0529592037200928
    6. ' [' → logprob: -3.3029592037200928
    7. 'list' → logprob: -3.3029592037200928
    8. '[]' → logprob: -4.177958965301514
    9. '[a' → logprob: -4.427958965301514
    10. ' list' → logprob: -4.927958965301514

Token 26: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4109688997268677
    2. '([' → logprob: -1.4109688997268677
    3. '((' → logprob: -2.660968780517578
    4. '([(' → logprob: -5.035968780517578
    5. '(list' → logprob: -5.285968780517578
    6. '(range' → logprob: -5.285968780517578
    7. '(lambda' → logprob: -6.535968780517578
    8. '([
' → logprob: -6.785968780517578
    9. '([...' → logprob: -7.285968780517578
    10. '({' → logprob: -7.535968780517578

Token 27: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.051321353763341904
    2. 'int' → logprob: -3.926321268081665
    3. '0' → logprob: -4.176321506500244
    4. '1' → logprob: -5.176321506500244
    5. ' A' → logprob: -6.176321506500244
    6. 'mul' → logprob: -6.176321506500244
    7. '*' → logprob: -6.676321506500244
    8. '(int' → logprob: -7.301321506500244
    9. '(A' → logprob: -7.426321506500244
    10. 'add' → logprob: -7.426321506500244

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004321168176829815
    2. ' ,' → logprob: -5.879321098327637
    3. '*' → logprob: -7.504321098327637
    4. ',B' → logprob: -8.379321098327637
    5. '+' → logprob: -8.504321098327637
    6. ' +' → logprob: -8.629321098327637
    7. ' *' → logprob: -8.629321098327637
    8. ' ' → logprob: -10.254321098327637
    9. '-' → logprob: -10.379321098327637
    10. '**' → logprob: -10.754321098327637

Token 29: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.17977619171142578
    2. 'B' → logprob: -1.8047761917114258
    3. ' ' → logprob: -11.054776191711426
    4. ' ' → logprob: -12.929776191711426
    5. '10' → logprob: -13.867276191711426
    6. ',B' → logprob: -13.867276191711426
    7. ' A' → logprob: -13.992276191711426
    8. 'A' → logprob: -14.179776191711426
    9. '1' → logprob: -14.179776191711426
    10. '20' → logprob: -14.242276191711426

Token 30: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04844382777810097
    2. ',' → logprob: -3.6734437942504883
    3. '],' → logprob: -4.173443794250488
    4. ']))' → logprob: -5.798443794250488
    5. ']' → logprob: -6.548443794250488
    6. ')' → logprob: -6.673443794250488
    7. ')])' → logprob: -8.548443794250488
    8. ' ])' → logprob: -8.798443794250488
    9. '[' → logprob: -9.798443794250488
    10. '),' → logprob: -10.048443794250488

Token 31: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.6624014377593994
    2. ' reverse' → logprob: -1.5374014377593994
    3. ' key' → logprob: -1.7874014377593994
    4. 'key' → logprob: -2.2874014377593994
    5. ')' → logprob: -8.28740119934082
    6. ' ' → logprob: -9.53740119934082
    7. '(reverse' → logprob: -9.91240119934082
    8. 're' → logprob: -10.66240119934082
    9. '   ' → logprob: -10.66240119934082
    10. ' )' → logprob: -10.78740119934082

Token 32: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.001935065840370953
    2. '=' → logprob: -6.251935005187988
    3. '=False' → logprob: -12.376935005187988
    4. ')' → logprob: -13.501935005187988
    5. ' =' → logprob: -15.876935005187988
    6. 'True' → logprob: -16.001935958862305
    7. '(True' → logprob: -16.126935958862305
    8. ')=' → logprob: -16.251935958862305
    9. '=
' → logprob: -16.376935958862305
    10. ',' → logprob: -16.751935958862305

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.865583706414327e-05
    2. '])' → logprob: -10.00009822845459
    3. '))' → logprob: -11.12509822845459
    4. ']' → logprob: -11.25009822845459
    5. ')])' → logprob: -11.75009822845459
    6. ')
' → logprob: -12.00009822845459
    7. '[' → logprob: -12.50009822845459
    8. '`)' → logprob: -13.25009822845459
    9. ',' → logprob: -13.25009822845459
    10. '),' → logprob: -14.12509822845459

Token 34: 'result' (ID: 2521)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.7658249139785767
    2. 'if' → logprob: -2.015824794769287
    3. 'choices' → logprob: -2.390824794769287
    4. '[' → logprob: -2.515824794769287
    5. '*' → logprob: -2.640824794769287
    6. '\n' → logprob: -2.765824794769287
    7. ')' → logprob: -2.765824794769287
    8. 'print' → logprob: -3.140824794769287
    9. '\' → logprob: -3.640824794769287
    10. ',' → logprob: -3.890824794769287

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31496959924697876
    2. '=' → logprob: -1.314969539642334
    3. '_' → logprob: -7.064969539642334
    4. ')' → logprob: -7.689969539642334
    5. 's' → logprob: -8.689970016479492
    6. ' ' → logprob: -9.689970016479492
    7. '(' → logprob: -9.814970016479492
    8. '[' → logprob: -10.939970016479492
    9. '<|end|>' → logprob: -10.939970016479492
    10. ',' → logprob: -11.064970016479492

Token 36: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.0435253381729126
    2. ' reduce' → logprob: -1.2935253381729126
    3. ' choices' → logprob: -1.6685253381729126
    4. 'choices' → logprob: -2.168525218963623
    5. 'mul' → logprob: -3.293525218963623
    6. ' mul' → logprob: -3.543525218963623
    7. ' add' → logprob: -6.418525218963623
    8. '0' → logprob: -7.168525218963623
    9. 'add' → logprob: -7.293525218963623
    10. '1' → logprob: -8.543525695800781

Token 37: '(add' (ID: 40159)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5250523090362549
    2. '(' → logprob: -1.2750523090362549
    3. '(add' → logprob: -2.150052309036255
    4. '(lambda' → logprob: -4.400052070617676
    5. '(operator' → logprob: -8.275052070617676
    6. '(
' → logprob: -11.275052070617676
    7. '((' → logprob: -11.650052070617676
    8. '(mu' → logprob: -12.275052070617676
    9. ' (' → logprob: -12.400052070617676
    10. 'mul' → logprob: -12.775052070617676

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.911954500945285e-05
    2. ' ,' → logprob: -9.625088691711426
    3. '(' → logprob: -12.000088691711426
    4. 'choices' → logprob: -12.250088691711426
    5. ',
' → logprob: -12.250088691711426
    6. '   ' → logprob: -13.875088691711426
    7. '`,' → logprob: -14.000088691711426
    8. ',[' → logprob: -14.125088691711426
    9. ')' → logprob: -14.625088691711426
    10. ' (' → logprob: -14.750088691711426

Token 39: ' (' (ID: 350)
  Prédit: 'choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.38699886202812195
    2. ' choices' → logprob: -1.1369988918304443
    3. '[' → logprob: -10.011999130249023
    4. ')' → logprob: -10.511999130249023
    5. ' [' → logprob: -11.136999130249023
    6. '_choices' → logprob: -11.636999130249023
    7. 'choice' → logprob: -12.011999130249023
    8. '(' → logprob: -12.386999130249023
    9. ' ' → logprob: -12.761999130249023
    10. '   ' → logprob: -13.011999130249023

Token 40: 'choices' (ID: 56195)
  Prédit: 'choices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.03434592857956886
    2. ' choices' → logprob: -4.534346103668213
    3. 'range' → logprob: -4.534346103668213
    4. '[' → logprob: -6.034346103668213
    5. 'choice' → logprob: -6.034346103668213
    6. 'x' → logprob: -6.034346103668213
    7. '[i' → logprob: -6.659346103668213
    8. 'i' → logprob: -7.159346103668213
    9. 'map' → logprob: -7.284346103668213
    10. '(' → logprob: -7.534346103668213

Token 41: '[' (ID: 58)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13879276812076569
    2. '[:' → logprob: -3.1387927532196045
    3. '[i' → logprob: -3.2637927532196045
    4. '[:-' → logprob: -3.7637927532196045
    5. '[' → logprob: -4.638792991638184
    6. ')))' → logprob: -5.263792991638184
    7. ')' → logprob: -5.388792991638184
    8. '**' → logprob: -7.263792991638184
    9. '[::-' → logprob: -7.513792991638184
    10. '),' → logprob: -7.638792991638184

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7273977398872375
    2. 'i' → logprob: -0.7273977398872375
    3. ':' → logprob: -4.602397918701172
    4. ']))' → logprob: -5.227397918701172
    5. ':i' → logprob: -5.352397918701172
    6. 'x' → logprob: -5.477397918701172
    7. '[i' → logprob: -6.227397918701172
    8. ' ' → logprob: -6.602397918701172
    9. '1' → logprob: -6.852397918701172
    10. ' i' → logprob: -6.852397918701172

Token 43: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12782439589500427
    2. '**' → logprob: -3.127824306488037
    3. ' ,' → logprob: -3.627824306488037
    4. ' **' → logprob: -4.752824306488037
    5. ' ' → logprob: -5.127824306488037
    6. '+' → logprob: -5.502824306488037
    7. ' -' → logprob: -5.502824306488037
    8. ' +' → logprob: -5.627824306488037
    9. ' *' → logprob: -5.627824306488037
    10. ' for' → logprob: -5.627824306488037

Token 44: ' max' (ID: 2999)
  Prédit: ' choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choices' → logprob: -0.47505420446395874
    2. 'choices' → logprob: -0.9750542044639587
    3. ' ' → logprob: -8.225053787231445
    4. ')' → logprob: -8.975053787231445
    5. '*' → logprob: -9.350053787231445
    6. ' *' → logprob: -9.475053787231445
    7. '0' → logprob: -9.725053787231445
    8. 'choice' → logprob: -10.037553787231445
    9. '1' → logprob: -10.225053787231445
    10. '    ' → logprob: -10.537553787231445

Token 45: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001115808030590415
    2. 'choices' → logprob: -7.626115798950195
    3. '(*' → logprob: -8.251115798950195
    4. '([' → logprob: -9.001115798950195
    5. '(A' → logprob: -9.876115798950195
    6. '(choice' → logprob: -10.001115798950195
    7. '((' → logprob: -10.126115798950195
    8. ' choices' → logprob: -10.876115798950195
    9. '(`' → logprob: -10.876115798950195
    10. '(range' → logprob: -11.751115798950195

Token 46: 'choices' (ID: 56195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7036108374595642
    2. 'choices' → logprob: -0.7036108374595642
    3. '0' → logprob: -5.453610897064209
    4. ' choices' → logprob: -5.953610897064209
    5. '1' → logprob: -6.578610897064209
    6. '(*' → logprob: -7.953610897064209
    7. '(choice' → logprob: -8.32861042022705
    8. 'A' → logprob: -8.82861042022705
    9. 'choice' → logprob: -8.82861042022705
    10. ' ' → logprob: -9.07861042022705

Token 47: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5426405668258667
    2. '[' → logprob: -1.1676405668258667
    3. '-' → logprob: -2.7926406860351562
    4. ')' → logprob: -4.292640686035156
    5. ' -' → logprob: -4.667640686035156
    6. '))' → logprob: -5.042640686035156
    7. '([' → logprob: -5.667640686035156
    8. '(*' → logprob: -6.292640686035156
    9. ' ' → logprob: -6.417640686035156
    10. '*' → logprob: -6.542640686035156

Token 48: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18376559019088745
    2. '0' → logprob: -1.9337656497955322
    3. ')' → logprob: -4.058765411376953
    4. '[' → logprob: -6.058765411376953
    5. ')])' → logprob: -6.433765411376953
    6. ')]' → logprob: -7.683765411376953
    7. ']))' → logprob: -7.933765411376953
    8. '))' → logprob: -7.933765411376953
    9. '])' → logprob: -8.058765411376953
    10. ' ' → logprob: -8.683765411376953

Token 49: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7472829222679138
    2. ' -' → logprob: -1.2472829818725586
    3. '-' → logprob: -1.4972829818725586
    4. '+' → logprob: -5.872282981872559
    5. ' ,' → logprob: -5.997282981872559
    6. '),' → logprob: -6.247282981872559
    7. '*' → logprob: -6.247282981872559
    8. ')' → logprob: -6.372282981872559
    9. ' ' → logprob: -6.872282981872559
    10. ' +' → logprob: -6.997282981872559

Token 50: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5086445212364197
    2. ' -' → logprob: -1.3836445808410645
    3. '-' → logprob: -2.3836445808410645
    4. ' ,' → logprob: -3.5086445808410645
    5. '+' → logprob: -5.5086445808410645
    6. ')' → logprob: -5.5086445808410645
    7. '*' → logprob: -5.6336445808410645
    8. '**' → logprob: -6.0086445808410645
    9. ' *' → logprob: -6.0086445808410645
    10. ' +' → logprob: -6.2586445808410645

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9085323214530945
    2. 'choices' → logprob: -0.9085323214530945
    3. ' choices' → logprob: -1.9085323810577393
    4. ' ' → logprob: -3.2835323810577393
    5. '2' → logprob: -5.15853214263916
    6. '3' → logprob: -6.78353214263916
    7. '5' → logprob: -8.03353214263916
    8. '4' → logprob: -9.03353214263916
    9. '10' → logprob: -9.28353214263916
    10. '0' → logprob: -9.78353214263916

Token 52: '1' (ID: 16)
  Prédit: 'choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.509800910949707
    2. '1' → logprob: -1.009800910949707
    3. ' choices' → logprob: -3.884800910949707
    4. ' ' → logprob: -5.134800910949707
    5. '2' → logprob: -5.384800910949707
    6. '3' → logprob: -6.134800910949707
    7. '5' → logprob: -7.259800910949707
    8. '10' → logprob: -8.634800910949707
    9. '4' → logprob: -8.884800910949707
    10. '0' → logprob: -9.384800910949707

Token 53: ',' (ID: 11)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.6394306421279907
    2. '))' → logprob: -1.5144306421279907
    3. ',' → logprob: -1.8894306421279907
    4. ')' → logprob: -2.514430522918701
    5. '),' → logprob: -5.014430522918701
    6. ' ' → logprob: -5.264430522918701
    7. '-' → logprob: -5.764430522918701
    8. ' ))' → logprob: -6.889430522918701
    9. '+' → logprob: -7.139430522918701
    10. ' ,' → logprob: -7.264430522918701

Token 54: ' choices' (ID: 14494)
  Prédit: 'choices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choices' → logprob: -0.4434695541858673
    2. ' choices' → logprob: -1.318469524383545
    3. '0' → logprob: -2.943469524383545
    4. '1' → logprob: -3.568469524383545
    5. ' ' → logprob: -4.693469524383545
    6. '2' → logprob: -8.068470001220703
    7. '3' → logprob: -10.005970001220703
    8. 'choice' → logprob: -10.193470001220703
    9. ')' → logprob: -10.693470001220703
    10. '(' → logprob: -10.755970001220703

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011868205183418468
    2. '1' → logprob: -9.375118255615234
    3. '0' → logprob: -11.000118255615234
    4. ')' → logprob: -12.000118255615234
    5. '[
' → logprob: -12.500118255615234
    6. '(' → logprob: -13.625118255615234
    7. '2' → logprob: -14.000118255615234
    8. ' [' → logprob: -14.250118255615234
    9. '<|end|>' → logprob: -14.375118255615234
    10. ' ' → logprob: -14.625118255615234

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006578696193173528
    2. '0' → logprob: -7.37565803527832
    3. ' ' → logprob: -10.62565803527832
    4. '[' → logprob: -12.50065803527832
    5. ')' → logprob: -14.31315803527832
    6. '```' → logprob: -14.43815803527832
    7. ']' → logprob: -14.87565803527832
    8. '   ' → logprob: -14.93815803527832
    9. '])' → logprob: -15.25065803527832
    10. '  ' → logprob: -15.37565803527832

Token 57: '])))
' (ID: 146875)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.06679251790046692
    2. '),' → logprob: -3.5667924880981445
    3. ')' → logprob: -3.8167924880981445
    4. '))' → logprob: -4.5667924880981445
    5. '))))' → logprob: -6.3167924880981445
    6. ')),' → logprob: -7.4417924880981445
    7. ' ' → logprob: -7.6917924880981445
    8. '-' → logprob: -7.9417924880981445
    9. '))),' → logprob: -8.691792488098145
    10. '+' → logprob: -9.066792488098145

Token 58: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016516048344783485
    2. '))' → logprob: -9.125164985656738
    3. ')
' → logprob: -11.250164985656738
    4. ')))' → logprob: -11.250164985656738
    5. '())' → logprob: -12.375164985656738
    6. '[' → logprob: -12.375164985656738
    7. '```' → logprob: -12.375164985656738
    8. ',' → logprob: -12.875164985656738
    9. ')`' → logprob: -12.875164985656738
    10. ' )' → logprob: -13.000164985656738

Token 59: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133896291255951
    2. '(result' → logprob: -1.3133896589279175
    3. 'result' → logprob: -9.438389778137207
    4. '((' → logprob: -11.563389778137207
    5. '('' → logprob: -11.813389778137207
    6. '()' → logprob: -11.938389778137207
    7. '(results' → logprob: -12.438389778137207
    8. '("("' → logprob: -12.563389778137207
    9. ' (' → logprob: -12.688389778137207
    10. '(`' → logprob: -13.063389778137207

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016049737110733986
    2. '))' → logprob: -4.141049861907959
    3. ')))' → logprob: -11.8910493850708
    4. ' )' → logprob: -12.5160493850708
    5. '`)' → logprob: -14.0160493850708
    6. ',' → logprob: -14.1410493850708
    7. '(' → logprob: -14.3910493850708
    8. '[' → logprob: -14.3910493850708
    9. '])' → logprob: -14.6410493850708
    10. '()' → logprob: -15.2660493850708


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 58
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 34.48%
Précision adaptée (1ère position): 34.48%
Précision (top 10): 74.14%
================================================================================
