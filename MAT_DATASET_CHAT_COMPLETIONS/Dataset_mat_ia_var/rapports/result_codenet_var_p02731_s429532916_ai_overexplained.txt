================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une valeur au clavier (sous forme de texte)
# La fonction input() attend que l'utilisateur entre quelque chose puis appuie sur Entrée
# Le résultat de input() est toujours une chaîne de caractères (string)
n = int(input())  # Convertit la chaîne de caractères obtenue en un entier (int) en utilisant la fonction int()
                  # La variable n stocke donc une valeur numérique entière

# Divise la valeur de n par 3
# L'opérateur de division (/) retourne toujours un nombre à virgule flottante (float) même si n est divisible par 3
result = n / 3  # Par exemple, si n vaut 9, alors result sera égal à 3.0 (un float, pas un int)

# Calcule le cube de result, c'est-à-dire l'élève result à la puissance 3
# L'opérateur ** est l'opérateur de puissance en Python
final_result = result ** 3  # Si result vaut 3, final_result vaudra 27 (car 3 × 3 × 3 = 27)

# Affiche le résultat final à l'écran pour que l'utilisateur puisse le voir
# La fonction print() affiche ce qui est passé entre parenthèses
print(final_result)  # Imprime la valeur de final_result sur la console
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0955102443695068
    2. 's' → logprob: -1.4705102443695068
    3. ' ' → logprob: -1.9705102443695068
    4. ':' → logprob: -2.095510244369507
    5. ' de' → logprob: -2.345510244369507
    6. ''' → logprob: -3.845510244369507
    7. ' d' → logprob: -4.345510482788086
    8. '```' → logprob: -4.345510482788086
    9. ' =' → logprob: -4.970510482788086
    10. ' :' → logprob: -5.220510482788086

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006261508446186781
    2. ' l' → logprob: -5.256261348724365
    3. 'user' → logprob: -7.506261348724365
    4. 'util' → logprob: -8.631261825561523
    5. 'la' → logprob: -10.006261825561523
    6. 'un' → logprob: -10.131261825561523
    7. '`' → logprob: -10.381261825561523
    8. '#' → logprob: -10.506261825561523
    9. '```' → logprob: -10.506261825561523
    10. ' ' → logprob: -11.131261825561523

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.12758591771125793
    2. ''' → logprob: -2.5025858879089355
    3. 'u' → logprob: -4.0025858879089355
    4. 'a' → logprob: -4.8775858879089355
    5. 'e' → logprob: -5.0025858879089355
    6. '’utilisateur' → logprob: -5.8775858879089355
    7. ' utilisateur' → logprob: -7.2525858879089355
    8. 'é' → logprob: -8.002586364746094
    9. 'util' → logprob: -8.002586364746094
    10. ''espace' → logprob: -8.502586364746094

Token 6: ' de' (ID: 334)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.8802700638771057
    2. 'nom' → logprob: -0.8802700638771057
    3. 'n' → logprob: -2.255270004272461
    4. 'user' → logprob: -3.755270004272461
    5. 'print' → logprob: -4.755270004272461
    6. 's' → logprob: -4.880270004272461
    7. 'input' → logprob: -5.005270004272461
    8. 'username' → logprob: -5.255270004272461
    9. '`' → logprob: -5.880270004272461
    10. 'prenom' → logprob: -6.005270004272461

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.035118166357278824
    2. ' saisir' → logprob: -3.7851181030273438
    3. 'r' → logprob: -5.285118103027344
    4. 'entr' → logprob: -5.410118103027344
    5. '```' → logprob: -6.785118103027344
    6. 'sa' → logprob: -8.785118103027344
    7. ' ' → logprob: -8.910118103027344
    8. ' entrer' → logprob: -9.285118103027344
    9. '#' → logprob: -9.410118103027344
    10. 'don' → logprob: -9.660118103027344

Token 8: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10791686922311783
    2. ' une' → logprob: -2.982916831970215
    3. ' un' → logprob: -3.982916831970215
    4. '_' → logprob: -4.107916831970215
    5. 's' → logprob: -5.857916831970215
    6. ''' → logprob: -6.107916831970215
    7. ' ' → logprob: -6.357916831970215
    8. ' la' → logprob: -6.482916831970215
    9. 'une' → logprob: -7.107916831970215
    10. ' le' → logprob: -7.232916831970215

Token 9: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33796027302742004
    2. ' chaîne' → logprob: -2.0879602432250977
    3. ' phrase' → logprob: -2.4629602432250977
    4. 'chaine' → logprob: -3.5879602432250977
    5. 'phrase' → logprob: -4.087960243225098
    6. ' ligne' → logprob: -4.962960243225098
    7. ' chaine' → logprob: -5.337960243225098
    8. 'space' → logprob: -5.587960243225098
    9. ' valeur' → logprob: -6.087960243225098
    10. ' ' → logprob: -6.337960243225098

Token 10: ' au' (ID: 2791)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2572648227214813
    2. 'val' → logprob: -2.6322648525238037
    3. 'value' → logprob: -3.0072648525238037
    4. 'x' → logprob: -3.5072648525238037
    5. '_' → logprob: -3.8822648525238037
    6. 's' → logprob: -4.132264614105225
    7. 'input' → logprob: -4.382264614105225
    8. 'i' → logprob: -5.257264614105225
    9. 'user' → logprob: -5.257264614105225
    10. '#' → logprob: -5.882264614105225

Token 11: ' clavier' (ID: 187878)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.38654235005378723
    2. 'input' → logprob: -2.136542320251465
    3. 'pr' → logprob: -2.886542320251465
    4. 'next' → logprob: -4.011542320251465
    5. 'format' → logprob: -4.136542320251465
    6. ' clavier' → logprob: -4.261542320251465
    7. 'tour' → logprob: -4.261542320251465
    8. 't' → logprob: -4.511542320251465
    9. 'code' → logprob: -4.636542320251465
    10. '#' → logprob: -5.011542320251465

Token 12: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20120103657245636
    2. 'i' → logprob: -3.2012009620666504
    3. 'input' → logprob: -3.3262009620666504
    4. 'value' → logprob: -3.5762009620666504
    5. 'x' → logprob: -3.8262009620666504
    6. 'val' → logprob: -3.9512009620666504
    7. 'n' → logprob: -4.95120096206665
    8. '```' → logprob: -5.20120096206665
    9. '\n' → logprob: -5.20120096206665
    10. '_' → logprob: -5.70120096206665

Token 13: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002644144929945469
    2. ' )' → logprob: -7.252644062042236
    3. '`)' → logprob: -7.502644062042236
    4. '#' → logprob: -8.252644538879395
    5. '')' → logprob: -8.502644538879395
    6. '")' → logprob: -8.502644538879395
    7. '):' → logprob: -8.502644538879395
    8. 'n' → logprob: -9.002644538879395
    9. 's' → logprob: -9.127644538879395
    10. ':' → logprob: -10.377644538879395

Token 14: 'ous' (ID: 784)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6196001172065735
    2. 'r' → logprob: -1.4946000576019287
    3. ')' → logprob: -2.3696000576019287
    4. 'u' → logprob: -2.8696000576019287
    5. 'i' → logprob: -3.2446000576019287
    6. ' )' → logprob: -4.619600296020508
    7. '=' → logprob: -4.744600296020508
    8. 'ur' → logprob: -5.369600296020508
    9. 's' → logprob: -5.369600296020508
    10. '#' → logprob: -5.619600296020508

Token 15: ' forme' (ID: 27450)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.3185043931007385
    2. 'python' → logprob: -2.4435043334960938
    3. 'forme' → logprob: -2.9435043334960938
    4. ' forme' → logprob: -3.0685043334960938
    5. '```' → logprob: -4.193504333496094
    6. 'form' → logprob: -4.443504333496094
    7. ' Python' → logprob: -4.568504333496094
    8. '_python' → logprob: -4.818504333496094
    9. 'chaine' → logprob: -5.068504333496094
    10. 'la' → logprob: -5.193504333496094

Token 16: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1393151730298996
    2. ' ' → logprob: -3.014315128326416
    3. '_' → logprob: -3.264315128326416
    4. 'd' → logprob: -3.764315128326416
    5. ' de' → logprob: -4.764315128326416
    6. ' )' → logprob: -5.764315128326416
    7. ')' → logprob: -6.014315128326416
    8. ''' → logprob: -6.139315128326416
    9. ' #' → logprob: -7.139315128326416
    10. 'space' → logprob: -7.264315128326416

Token 17: ' texte' (ID: 53492)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7762543559074402
    2. 'string' → logprob: -1.151254415512085
    3. 'str' → logprob: -2.026254415512085
    4. 'cha' → logprob: -3.026254415512085
    5. 'texte' → logprob: -3.651254415512085
    6. 'ent' → logprob: -5.026254177093506
    7. 'comment' → logprob: -5.526254177093506
    8. 'nombre' → logprob: -6.651254177093506
    9. 'int' → logprob: -6.776254177093506
    10. 'input' → logprob: -6.901254177093506

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004953731782734394
    2. '#' → logprob: -5.379953861236572
    3. ' )' → logprob: -8.879953384399414
    4. '")' → logprob: -10.379953384399414
    5. ')#' → logprob: -10.379953384399414
    6. 'e' → logprob: -10.629953384399414
    7. '`)' → logprob: -10.629953384399414
    8. 's' → logprob: -11.004953384399414
    9. '')' → logprob: -11.254953384399414
    10. ',' → logprob: -12.129953384399414

Token 19: '#' (ID: 2)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8836649656295776
    2. 'v' → logprob: -1.5086649656295776
    3. 'input' → logprob: -2.008665084838867
    4. 's' → logprob: -2.383665084838867
    5. 'value' → logprob: -3.758665084838867
    6. 'user' → logprob: -3.758665084838867
    7. 'i' → logprob: -4.258665084838867
    8. 'x' → logprob: -4.258665084838867
    9. 'n' → logprob: -4.383665084838867
    10. 'entrée' → logprob: -4.633665084838867

Token 20: ' La' (ID: 3038)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.24591471254825592
    2. 'value' → logprob: -1.8709146976470947
    3. 'user' → logprob: -3.7459146976470947
    4. 's' → logprob: -3.9959146976470947
    5. 'input' → logprob: -4.245914936065674
    6. 'print' → logprob: -6.120914936065674
    7. ' valeur' → logprob: -7.120914936065674
    8. '#' → logprob: -7.120914936065674
    9. 'entrée' → logprob: -7.120914936065674
    10. 'v' → logprob: -7.745914936065674

Token 21: ' fonction' (ID: 17610)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12397199124097824
    2. ' valeur' → logprob: -2.498971939086914
    3. 'value' → logprob: -4.373971939086914
    4. ' val' → logprob: -4.998971939086914
    5. 's' → logprob: -5.373971939086914
    6. ' ' → logprob: -5.998971939086914
    7. 'variable' → logprob: -6.498971939086914
    8. '#' → logprob: -6.498971939086914
    9. ' value' → logprob: -6.873971939086914
    10. 'v' → logprob: -7.623971939086914

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.025033017620444298
    2. ' input' → logprob: -3.7750329971313477
    3. 'def' → logprob: -6.400032997131348
    4. '=input' → logprob: -9.150032997131348
    5. 's' → logprob: -11.650032997131348
    6. 'print' → logprob: -13.150032997131348
    7. ' def' → logprob: -13.150032997131348
    8. '`' → logprob: -13.650032997131348
    9. '```' → logprob: -13.775032997131348
    10. '(input' → logprob: -13.900032997131348

Token 23: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002918446552939713
    2. '()' → logprob: -9.00029182434082
    3. '('' → logprob: -9.87529182434082
    4. '(
' → logprob: -10.12529182434082
    5. ' (' → logprob: -10.37529182434082
    6. '("' → logprob: -10.75029182434082
    7. ')' → logprob: -11.25029182434082
    8. '("""' → logprob: -12.75029182434082
    9. ' ' → logprob: -13.50029182434082
    10. '(

' → logprob: -13.75029182434082

Token 24: ' attend' (ID: 13384)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004810184706002474
    2. ' ' → logprob: -6.754810333251953
    3. '#' → logprob: -7.379810333251953
    4. ' (' → logprob: -7.504810333251953
    5. ')' → logprob: -7.629810333251953
    6. '.' → logprob: -7.754810333251953
    7. '()' → logprob: -7.879810333251953
    8. '(
' → logprob: -8.129810333251953
    9. ',' → logprob: -8.879810333251953
    10. '_' → logprob: -9.129810333251953

Token 25: ' que' (ID: 661)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.193502426147461
    2. ' ' → logprob: -1.193502426147461
    3. ' une' → logprob: -1.568502426147461
    4. ' )' → logprob: -3.568502426147461
    5. '  ' → logprob: -3.693502426147461
    6. ' (' → logprob: -3.818502426147461
    7. 's' → logprob: -4.068502426147461
    8. ''' → logprob: -4.443502426147461
    9. ' toujours' → logprob: -4.443502426147461
    10. ' un' → logprob: -4.818502426147461

Token 26: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.19712983071804047
    2. 'l' → logprob: -1.8221298456192017
    3. ')' → logprob: -5.447129726409912
    4. ' )' → logprob: -5.697129726409912
    5. ''utilisateur' → logprob: -5.822129726409912
    6. ' utilisateur' → logprob: -6.572129726409912
    7. ' ' → logprob: -6.822129726409912
    8. '()' → logprob: -6.822129726409912
    9. '’utilisateur' → logprob: -7.822129726409912
    10. 'util' → logprob: -7.947129726409912

Token 27: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.018128758296370506
    2. ''' → logprob: -4.268128871917725
    3. '’utilisateur' → logprob: -6.018128871917725
    4. 'a' → logprob: -7.018128871917725
    5. 'u' → logprob: -8.143128395080566
    6. ''util' → logprob: -9.393128395080566
    7. ''user' → logprob: -9.643128395080566
    8. ' utilisateur' → logprob: -9.768128395080566
    9. 'e' → logprob: -10.518128395080566
    10. ''us' → logprob: -10.643128395080566

Token 28: ' entre' (ID: 3853)
  Prédit: ' sais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sais' → logprob: -0.32945868372917175
    2. ' app' → logprob: -1.4544587135314941
    3. ' frappe' → logprob: -4.079458713531494
    4. ' tape' → logprob: -4.204458713531494
    5. ' entre' → logprob: -5.454458713531494
    6. 'app' → logprob: -5.704458713531494
    7. ' ' → logprob: -5.704458713531494
    8. 's' → logprob: -6.079458713531494
    9. 'r' → logprob: -7.579458713531494
    10. ' saisir' → logprob: -8.579458236694336

Token 29: ' quelque' (ID: 36359)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7996035218238831
    2. ' une' → logprob: -1.1746034622192383
    3. ' un' → logprob: -2.6746034622192383
    4. 'une' → logprob: -2.7996034622192383
    5. 'r' → logprob: -2.9246034622192383
    6. ' du' → logprob: -4.549603462219238
    7. 'un' → logprob: -4.799603462219238
    8. '  ' → logprob: -5.424603462219238
    9. '_' → logprob: -5.424603462219238
    10. '\' → logprob: -5.799603462219238

Token 30: ' chose' (ID: 15505)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.05629127100110054
    2. ' chose' → logprob: -2.931291341781616
    3. '#' → logprob: -7.806291103363037
    4. '_ch' → logprob: -7.931291103363037
    5. 'cho' → logprob: -8.806291580200195
    6. '_' → logprob: -9.056291580200195
    7. '-ch' → logprob: -9.556291580200195
    8. 'c' → logprob: -9.681291580200195
    9. 'que' → logprob: -9.681291580200195
    10. 's' → logprob: -10.306291580200195

Token 31: ' puis' (ID: 18766)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7692186832427979
    2. '#' → logprob: -1.6442186832427979
    3. 'val' → logprob: -2.144218683242798
    4. '_' → logprob: -3.394218683242798
    5. 'user' → logprob: -3.644218683242798
    6. 'x' → logprob: -3.769218683242798
    7. 'u' → logprob: -3.894218683242798
    8. 'value' → logprob: -4.144218444824219
    9. ' ' → logprob: -4.269218444824219
    10. 's' → logprob: -4.394218444824219

Token 32: ' app' (ID: 1053)
  Prédit: ' app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.1300155371427536
    2. ' return' → logprob: -3.0050156116485596
    3. ' retourne' → logprob: -3.1300156116485596
    4. 'app' → logprob: -4.0050153732299805
    5. '\' → logprob: -5.5050153732299805
    6. 'r' → logprob: -6.7550153732299805
    7. ' ren' → logprob: -7.0050153732299805
    8. 'return' → logprob: -7.1300153732299805
    9. ' fasse' → logprob: -7.5050153732299805
    10. ' valide' → logprob: -7.8800153732299805

Token 33: 'uie' (ID: 123775)
  Prédit: 'uie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uie' → logprob: -0.007099312264472246
    2. 'uye' → logprob: -6.257099151611328
    3. 'u' → logprob: -6.382099151611328
    4. 'ara' → logprob: -6.632099151611328
    5. 'ui' → logprob: -6.882099151611328
    6. 'ar' → logprob: -8.257099151611328
    7. 'uy' → logprob: -8.257099151611328
    8. 'uyer' → logprob: -9.132099151611328
    9. 'uyant' → logprob: -9.132099151611328
    10. 'elle' → logprob: -9.382099151611328

Token 34: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6099526286125183
    2. ' sur' → logprob: -1.109952688217163
    3. 'sur' → logprob: -2.109952688217163
    4. '_sur' → logprob: -5.734952449798584
    5. 'space' → logprob: -7.359952449798584
    6. '\' → logprob: -8.484952926635742
    7. '_' → logprob: -8.484952926635742
    8. 's' → logprob: -8.609952926635742
    9. '(space' → logprob: -8.609952926635742
    10. '<' → logprob: -8.984952926635742

Token 35: ' Entr' (ID: 50650)
  Prédit: 'Entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.02886373922228813
    2. ' Entr' → logprob: -4.278863906860352
    3. 'entrée' → logprob: -4.903863906860352
    4. 'Enter' → logprob: -5.153863906860352
    5. 'entr' → logprob: -7.403863906860352
    6. ' entrée' → logprob: -8.403863906860352
    7. ' Enter' → logprob: -8.903863906860352
    8. ' ' → logprob: -9.028863906860352
    9. '<' → logprob: -9.778863906860352
    10. '"' → logprob: -9.903863906860352

Token 36: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0025520040653645992
    2. 'é' → logprob: -6.002552032470703
    3. 'er' → logprob: -9.502552032470703
    4. 'ee' → logprob: -13.877552032470703
    5. 'ées' → logprob: -15.127552032470703
    6. 'e' → logprob: -15.377552032470703
    7. 'éer' → logprob: -16.377552032470703
    8. '%C' → logprob: -16.877552032470703
    9. 'É' → logprob: -17.002552032470703
    10. '```' → logprob: -17.752552032470703

Token 37: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.513016939163208
    2. 'val' → logprob: -1.888016939163208
    3. '#' → logprob: -2.388016939163208
    4. 'x' → logprob: -3.263016939163208
    5. 'n' → logprob: -3.388016939163208
    6. 'u' → logprob: -3.888016939163208
    7. 'value' → logprob: -4.138016700744629
    8. 'user' → logprob: -4.513016700744629
    9. 's' → logprob: -4.763016700744629
    10. '```' → logprob: -5.638016700744629

Token 38: '#' (ID: 2)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.30769848823547363
    2. 'user' → logprob: -2.5576984882354736
    3. 'x' → logprob: -2.6826984882354736
    4. 'value' → logprob: -3.3076984882354736
    5. 'v' → logprob: -3.6826984882354736
    6. 'nom' → logprob: -4.4326982498168945
    7. 'n' → logprob: -4.4326982498168945
    8. 's' → logprob: -4.4326982498168945
    9. '#' → logprob: -5.5576982498168945
    10. 'a' → logprob: -5.8076982498168945

Token 39: ' Le' (ID: 2018)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.42551639676094055
    2. 'value' → logprob: -2.300516366958618
    3. 'x' → logprob: -2.925516366958618
    4. 'user' → logprob: -3.175516366958618
    5. 'v' → logprob: -3.300516366958618
    6. 'n' → logprob: -3.425516366958618
    7. 's' → logprob: -3.550516366958618
    8. 'nom' → logprob: -3.925516366958618
    9. '#' → logprob: -4.925516605377197
    10. 'a' → logprob: -5.175516605377197

Token 40: ' résultat' (ID: 62556)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3074692487716675
    2. '#' → logprob: -1.4324692487716675
    3. '_' → logprob: -2.432469367980957
    4. 'val' → logprob: -2.432469367980957
    5. 'texte' → logprob: -2.432469367980957
    6. ' #' → logprob: -2.807469367980957
    7. 'a' → logprob: -2.932469367980957
    8. 's' → logprob: -3.682469367980957
    9. 'input' → logprob: -4.557469367980957
    10. 'n' → logprob: -4.682469367980957

Token 41: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026636049151420593
    2. '=' → logprob: -3.6516361236572266
    3. ' ' → logprob: -8.901636123657227
    4. 's' → logprob: -9.151636123657227
    5. '_' → logprob: -10.026636123657227
    6. ' est' → logprob: -11.151636123657227
    7. '=input' → logprob: -11.401636123657227
    8. 'est' → logprob: -11.526636123657227
    9. ')' → logprob: -13.026636123657227
    10. ' ' → logprob: -13.401636123657227

Token 42: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.18487852811813354
    2. 'input' → logprob: -1.8098785877227783
    3. ' l' → logprob: -5.809878349304199
    4. 'l' → logprob: -6.184878349304199
    5. ' la' → logprob: -10.6848783493042
    6. ' ' → logprob: -11.3098783493042
    7. '=input' → logprob: -11.4348783493042
    8. '_input' → logprob: -12.6848783493042
    9. '	input' → logprob: -12.6848783493042
    10. 'la' → logprob: -13.3098783493042

Token 43: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004773530177772045
    2. '()' → logprob: -5.5047736167907715
    3. '(
' → logprob: -7.7547736167907715
    4. '('' → logprob: -9.504773139953613
    5. '(

' → logprob: -9.879773139953613
    6. 's' → logprob: -10.504773139953613
    7. '("' → logprob: -10.629773139953613
    8. ')' → logprob: -10.754773139953613
    9. '("("' → logprob: -11.254773139953613
    10. '=' → logprob: -11.504773139953613

Token 44: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10153578966856003
    2. ' =' → logprob: -2.9765357971191406
    3. ' est' → logprob: -3.7265357971191406
    4. ')' → logprob: -4.851535797119141
    5. ' )' → logprob: -4.851535797119141
    6. '=' → logprob: -6.601535797119141
    7. '()' → logprob: -7.351535797119141
    8. ',' → logprob: -7.601535797119141
    9. '_' → logprob: -7.601535797119141
    10. ' s' → logprob: -7.726535797119141

Token 45: ' toujours' (ID: 16867)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8663915991783142
    2. ' ' → logprob: -1.366391658782959
    3. ''' → logprob: -1.866391658782959
    4. ' "' → logprob: -3.366391658782959
    5. ' '' → logprob: -3.491391658782959
    6. ' un' → logprob: -3.616391658782959
    7. ' a' → logprob: -3.991391658782959
    8. ' une' → logprob: -4.491391658782959
    9. '  ' → logprob: -4.741391658782959
    10. ''un' → logprob: -5.491391658782959

Token 46: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.029770735651254654
    2. 'une' → logprob: -3.654770851135254
    3. ' de' → logprob: -6.654770851135254
    4. ' ' → logprob: -7.404770851135254
    5. ' ' → logprob: -7.404770851135254
    6. ' un' → logprob: -7.904770851135254
    7. 'de' → logprob: -8.404770851135254
    8. ''une' → logprob: -8.654770851135254
    9. 's' → logprob: -9.404770851135254
    10. 'un' → logprob: -11.154770851135254

Token 47: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.05949071794748306
    2. ' chaine' → logprob: -3.55949068069458
    3. ' ' → logprob: -3.93449068069458
    4. 'chaine' → logprob: -5.43449068069458
    5. ' string' → logprob: -5.93449068069458
    6. 's' → logprob: -7.18449068069458
    7. 'str' → logprob: -7.43449068069458
    8. ' str' → logprob: -7.55949068069458
    9. ' chaînes' → logprob: -7.93449068069458
    10. 'cha' → logprob: -8.559491157531738

Token 48: ' de' (ID: 334)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7408720254898071
    2. '.' → logprob: -1.6158720254898071
    3. '(' → logprob: -2.4908719062805176
    4. '\n' → logprob: -2.8658719062805176
    5. '#' → logprob: -2.9908719062805176
    6. ')' → logprob: -3.3658719062805176
    7. ',' → logprob: -3.7408719062805176
    8. '```' → logprob: -4.240871906280518
    9. ' ' → logprob: -4.615871906280518
    10. '(
' → logprob: -4.740871906280518

Token 49: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.25291740894317627
    2. ' caractères' → logprob: -1.5029174089431763
    3. 'texte' → logprob: -7.127917289733887
    4. ' caracteres' → logprob: -9.752917289733887
    5. ' caractère' → logprob: -9.877917289733887
    6. ' caract' → logprob: -10.127917289733887
    7. '#' → logprob: -12.127917289733887
    8. '(car' → logprob: -12.127917289733887
    9. 'chars' → logprob: -12.502917289733887
    10. ' ' → logprob: -13.002917289733887

Token 50: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4273588955402374
    2. '#' → logprob: -2.302358865737915
    3. 'val' → logprob: -2.802358865737915
    4. 'n' → logprob: -2.802358865737915
    5. '\n' → logprob: -3.302358865737915
    6. 'u' → logprob: -4.052359104156494
    7. 's' → logprob: -4.552359104156494
    8. '\' → logprob: -4.802359104156494
    9. 'value' → logprob: -4.802359104156494
    10. '
' → logprob: -4.927359104156494

Token 51: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009635079186409712
    2. '')' → logprob: -7.3759636878967285
    3. '")' → logprob: -9.00096321105957
    4. ' )' → logprob: -9.00096321105957
    5. ').' → logprob: -10.62596321105957
    6. '),' → logprob: -11.62596321105957
    7. ',' → logprob: -11.87596321105957
    8. '`)' → logprob: -11.87596321105957
    9. 'chaine' → logprob: -12.25096321105957
    10. ''' → logprob: -12.37596321105957

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003598952607717365
    2. '#' → logprob: -8.750359535217285
    3. '')' → logprob: -9.500359535217285
    4. '")' → logprob: -9.625359535217285
    5. '`)' → logprob: -10.750359535217285
    6. ' )' → logprob: -10.875359535217285
    7. ')`' → logprob: -12.125359535217285
    8. ')#' → logprob: -12.750359535217285
    9. '```' → logprob: -12.875359535217285
    10. 'e' → logprob: -13.375359535217285

Token 53: 'n' (ID: 77)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3539944291114807
    2. '#' → logprob: -2.353994369506836
    3. 'n' → logprob: -2.353994369506836
    4. 'x' → logprob: -3.103994369506836
    5. 'u' → logprob: -3.728994369506836
    6. '\n' → logprob: -4.853994369506836
    7. '\' → logprob: -4.978994369506836
    8. 'a' → logprob: -5.478994369506836
    9. 'val' → logprob: -5.728994369506836
    10. 'i' → logprob: -5.728994369506836

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012618540786206722
    2. '=' → logprob: -4.512618541717529
    3. ' ' → logprob: -6.512618541717529
    4. '  ' → logprob: -10.762618064880371
    5. 'u' → logprob: -11.387618064880371
    6. ' ' → logprob: -11.887618064880371
    7. 'umber' → logprob: -11.887618064880371
    8. '   ' → logprob: -11.887618064880371
    9. 'um' → logprob: -12.012618064880371
    10. '=input' → logprob: -12.137618064880371

Token 55: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10020752996206284
    2. 'input' → logprob: -2.350207567214966
    3. '=input' → logprob: -15.475207328796387
    4. '(input' → logprob: -15.725207328796387
    5. ' ' → logprob: -15.725207328796387
    6. ' ' → logprob: -16.225208282470703
    7. '	input' → logprob: -16.475208282470703
    8. ' int' → logprob: -16.600208282470703
    9. 'int' → logprob: -16.850208282470703
    10. '<input' → logprob: -17.600208282470703

Token 56: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.038070179522037506
    2. '(' → logprob: -3.2880702018737793
    3. 'input' → logprob: -10.788069725036621
    4. ' (' → logprob: -12.163069725036621
    5. '(
' → logprob: -12.913069725036621
    6. '=input' → logprob: -15.663069725036621
    7. '('' → logprob: -16.413070678710938
    8. '(

' → logprob: -16.663070678710938
    9. '(in' → logprob: -16.788070678710938
    10. '<input' → logprob: -16.788070678710938

Token 57: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2917010486125946
    2. '()' → logprob: -1.666701078414917
    3. '('' → logprob: -3.541701078414917
    4. '())' → logprob: -4.166700839996338
    5. '("' → logprob: -4.416700839996338
    6. '("("' → logprob: -5.166700839996338
    7. '(""))' → logprob: -7.291700839996338
    8. '("")' → logprob: -7.416700839996338
    9. '(">' → logprob: -8.791701316833496
    10. ')' → logprob: -8.916701316833496

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2260922193527222
    2. '<|end|>' → logprob: -1.3510922193527222
    3. ')' → logprob: -1.6010922193527222
    4. '+' → logprob: -2.4760923385620117
    5. '#' → logprob: -2.9760923385620117
    6. '*' → logprob: -2.9760923385620117
    7. '(' → logprob: -3.9760923385620117
    8. '
' → logprob: -4.601092338562012
    9. '\' → logprob: -4.726092338562012
    10. '\n' → logprob: -4.851092338562012

Token 59: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33388689160346985
    2. ' ' → logprob: -2.2088868618011475
    3. '*' → logprob: -2.5838868618011475
    4. ')' → logprob: -3.2088868618011475
    5. '<|end|>' → logprob: -3.4588868618011475
    6. '#' → logprob: -4.333887100219727
    7. ' +' → logprob: -6.083887100219727
    8. ' *' → logprob: -6.333887100219727
    9. ' 
' → logprob: -6.583887100219727
    10. '
' → logprob: -6.833887100219727

Token 60: ' Convert' (ID: 15629)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05791371688246727
    2. ')' → logprob: -3.6829137802124023
    3. ' )' → logprob: -4.432913780212402
    4. '<|end|>' → logprob: -5.057913780212402
    5. ' "' → logprob: -6.182913780212402
    6. '"' → logprob: -6.182913780212402
    7. '  ' → logprob: -6.307913780212402
    8. '#' → logprob: -6.557913780212402
    9. ' Enter' → logprob: -7.057913780212402
    10. ' n' → logprob: -7.307913780212402

Token 61: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037486525252461433
    2. 'ation' → logprob: -7.253748416900635
    3. ')' → logprob: -7.378748416900635
    4. '(
' → logprob: -7.753748416900635
    5. '(input' → logprob: -8.003748893737793
    6. ' (' → logprob: -8.003748893737793
    7. 'e' → logprob: -8.253748893737793
    8. 'er' → logprob: -8.378748893737793
    9. '()' → logprob: -8.628748893737793
    10. '(n' → logprob: -8.628748893737793

Token 62: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014759796671569347
    2. '(input' → logprob: -4.6397600173950195
    3. '()' → logprob: -6.3897600173950195
    4. '("' → logprob: -6.8897600173950195
    5. ' ' → logprob: -7.2647600173950195
    6. '('' → logprob: -7.8897600173950195
    7. '("")' → logprob: -8.01476001739502
    8. ' (' → logprob: -8.88976001739502
    9. '("""' → logprob: -8.88976001739502
    10. '<|end|>' → logprob: -9.26476001739502

Token 63: ' chaîne' (ID: 89288)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9696602821350098
    2. 'input' → logprob: -1.7196602821350098
    3. ' chaîne' → logprob: -1.9696602821350098
    4. 'entrée' → logprob: -2.7196602821350098
    5. 'chaine' → logprob: -2.7196602821350098
    6. 'texte' → logprob: -2.9696602821350098
    7. 'val' → logprob: -3.7196602821350098
    8. 's' → logprob: -3.8446602821350098
    9. 'ent' → logprob: -3.8446602821350098
    10. 'n' → logprob: -4.46966028213501

Token 64: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4873506426811218
    2. ' ' → logprob: -1.7373507022857666
    3. '(' → logprob: -2.2373507022857666
    4. 's' → logprob: -3.3623507022857666
    5. ' (' → logprob: -4.1123504638671875
    6. ')' → logprob: -4.2373504638671875
    7. '("' → logprob: -5.2373504638671875
    8. 'en' → logprob: -5.6123504638671875
    9. '"' → logprob: -5.6123504638671875
    10. ' "' → logprob: -5.9873504638671875

Token 65: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.13927575945854187
    2. 'car' → logprob: -2.1392757892608643
    3. ' caractère' → logprob: -5.014275550842285
    4. ' caract' → logprob: -5.889275550842285
    5. 'texte' → logprob: -6.639275550842285
    6. 'n' → logprob: -7.639275550842285
    7. ' caracteres' → logprob: -7.889275550842285
    8. 'entrée' → logprob: -8.264275550842285
    9. 'l' → logprob: -9.389275550842285
    10. 'la' → logprob: -10.014275550842285

Token 66: ' obten' (ID: 28150)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2956232726573944
    2. ' en' → logprob: -1.4206233024597168
    3. ' )' → logprob: -5.420623302459717
    4. ')' → logprob: -5.920623302459717
    5. '(' → logprob: -6.670623302459717
    6. ' (' → logprob: -6.795623302459717
    7. 'en' → logprob: -6.795623302459717
    8. '  ' → logprob: -7.045623302459717
    9. ''en' → logprob: -7.670623302459717
    10. '"' → logprob: -8.045622825622559

Token 67: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.004009065218269825
    2. 'u' → logprob: -5.629009246826172
    3. 'enue' → logprob: -7.879009246826172
    4. '"' → logprob: -12.004009246826172
    5. '   ' → logprob: -12.129009246826172
    6. '```' → logprob: -12.504009246826172
    7. 'e' → logprob: -12.879009246826172
    8. '

' → logprob: -13.004009246826172
    9. '`' → logprob: -13.129009246826172
    10. '"""' → logprob: -14.004009246826172

Token 68: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.05264942720532417
    2. ' ' → logprob: -3.30264949798584
    3. ')' → logprob: -4.67764949798584
    4. ' )' → logprob: -5.92764949798584
    5. 'en' → logprob: -6.55264949798584
    6. ' a' → logprob: -8.30264949798584
    7. ''en' → logprob: -8.92764949798584
    8. ' into' → logprob: -9.05264949798584
    9. ' au' → logprob: -9.42764949798584
    10. '  ' → logprob: -9.80264949798584

Token 69: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4806494414806366
    2. ' un' → logprob: -0.980649471282959
    3. ' une' → logprob: -6.605649471282959
    4. '  ' → logprob: -6.605649471282959
    5. ' entier' → logprob: -6.730649471282959
    6. ' nombre' → logprob: -7.480649471282959
    7. ' ' → logprob: -7.855649471282959
    8. 'un' → logprob: -7.980649471282959
    9. ' int' → logprob: -7.980649471282959
    10. ' espace' → logprob: -8.2306489944458

Token 70: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.23413096368312836
    2. 'ent' → logprob: -2.484130859375
    3. ' nombre' → logprob: -3.109130859375
    4. ' ' → logprob: -3.234130859375
    5. 'nombre' → logprob: -3.484130859375
    6. 'e' → logprob: -5.359130859375
    7. ' ' → logprob: -6.109130859375
    8. ' espace' → logprob: -7.734130859375
    9. ' ent' → logprob: -7.984130859375
    10. '  ' → logprob: -8.109130859375

Token 71: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24944640696048737
    2. '*' → logprob: -2.124446392059326
    3. ' ' → logprob: -3.624446392059326
    4. '\' → logprob: -3.749446392059326
    5. ' 
' → logprob: -4.124446392059326
    6. '+
' → logprob: -4.999446392059326
    7. '#' → logprob: -5.124446392059326
    8. ')' → logprob: -5.374446392059326
    9. '.' → logprob: -5.999446392059326
    10. ':' → logprob: -6.124446392059326

Token 72: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02869277447462082
    2. ' )' → logprob: -3.6536927223205566
    3. 'nombre' → logprob: -7.528692722320557
    4. ')n' → logprob: -7.903692722320557
    5. ' entier' → logprob: -7.903692722320557
    6. 'ent' → logprob: -8.278693199157715
    7. 'n' → logprob: -8.403693199157715
    8. '')' → logprob: -9.028693199157715
    9. ' nombre' → logprob: -9.153693199157715
    10. ' n' → logprob: -9.153693199157715

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003051917883567512
    2. ' )' → logprob: -8.37530517578125
    3. '))' → logprob: -9.62530517578125
    4. '()' → logprob: -12.50030517578125
    5. '`)' → logprob: -14.00030517578125
    6. '')' → logprob: -14.25030517578125
    7. '())' → logprob: -14.25030517578125
    8. ')#' → logprob: -14.25030517578125
    9. '(' → logprob: -14.50030517578125
    10. ')`' → logprob: -14.87530517578125

Token 74: ' en' (ID: 469)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26541444659233093
    2. ' ' → logprob: -2.8904144763946533
    3. '*' → logprob: -3.1404144763946533
    4. ')' → logprob: -3.6404144763946533
    5. ' 
' → logprob: -3.7654144763946533
    6. '\n' → logprob: -3.8904144763946533
    7. '+
' → logprob: -4.140414237976074
    8. '
' → logprob: -4.265414237976074
    9. '\' → logprob: -4.890414237976074
    10. '<|end|>' → logprob: -5.140414237976074

Token 75: ' utilisant' (ID: 92474)
  Prédit: ' cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cas' → logprob: -0.35031038522720337
    2. '```' → logprob: -2.9753103256225586
    3. 'cas' → logprob: -3.1003103256225586
    4. 't' → logprob: -3.2253103256225586
    5. 'viron' → logprob: -4.475310325622559
    6. 'entrée' → logprob: -4.475310325622559
    7. 'tr' → logprob: -4.725310325622559
    8. ' Python' → logprob: -4.725310325622559
    9. 'tré' → logprob: -4.725310325622559
    10. 'tre' → logprob: -5.100310325622559

Token 76: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3636993169784546
    2. ')' → logprob: -1.4886993169784546
    3. ' int' → logprob: -1.8636993169784546
    4. 'l' → logprob: -2.738699436187744
    5. ' )' → logprob: -2.738699436187744
    6. ' ' → logprob: -2.988699436187744
    7. ' l' → logprob: -3.113699436187744
    8. ' la' → logprob: -3.363699436187744
    9. '(' → logprob: -3.988699436187744
    10. '(int' → logprob: -4.238699436187744

Token 77: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.3829861283302307
    2. ' fonction' → logprob: -1.882986068725586
    3. 'int' → logprob: -2.507986068725586
    4. ' int' → logprob: -4.257986068725586
    5. ')' → logprob: -4.382986068725586
    6. '  ' → logprob: -4.507986068725586
    7. ' même' → logprob: -4.757986068725586
    8. ' ' → logprob: -5.132986068725586
    9. '   ' → logprob: -5.382986068725586
    10. 's' → logprob: -5.507986068725586

Token 78: ' int' (ID: 677)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03984402120113373
    2. ' ' → logprob: -4.289844036102295
    3. ')' → logprob: -4.414844036102295
    4. '(
' → logprob: -5.039844036102295
    5. '(int' → logprob: -6.289844036102295
    6. 'int' → logprob: -7.164844036102295
    7. ' (' → logprob: -7.414844036102295
    8. ''' → logprob: -7.789844036102295
    9. '`' → logprob: -7.914844036102295
    10. '(input' → logprob: -7.914844036102295

Token 79: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5996931195259094
    2. '+' → logprob: -1.5996930599212646
    3. ')' → logprob: -2.7246930599212646
    4. '*' → logprob: -3.0996930599212646
    5. ' ' → logprob: -3.3496930599212646
    6. '#' → logprob: -3.9746930599212646
    7. 'n' → logprob: -4.224693298339844
    8. '\n' → logprob: -4.474693298339844
    9. '
' → logprob: -4.724693298339844
    10. ' 
' → logprob: -4.849693298339844

Token 80: '                 ' (ID: 2902)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5860686898231506
    2. ' 
' → logprob: -1.8360686302185059
    3. '
' → logprob: -2.711068630218506
    4. '*' → logprob: -2.711068630218506
    5. '+
' → logprob: -2.836068630218506
    6. '#' → logprob: -3.586068630218506
    7. 'i' → logprob: -3.961068630218506
    8. ' ' → logprob: -4.836068630218506
    9. 'if' → logprob: -5.461068630218506
    10. ',' → logprob: -5.586068630218506

Token 81: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8555689454078674
    2. ')' → logprob: -1.7305688858032227
    3. ' ' → logprob: -2.2305688858032227
    4. 'n' → logprob: -2.3555688858032227
    5. '
' → logprob: -3.3555688858032227
    6. '\n' → logprob: -3.3555688858032227
    7. 'if' → logprob: -3.4805688858032227
    8. 'i' → logprob: -3.8555688858032227
    9. ' 
' → logprob: -4.355568885803223
    10. '(' → logprob: -4.480568885803223

Token 82: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7204239368438721
    2. 'if' → logprob: -1.970423936843872
    3. ' ' → logprob: -1.970423936843872
    4. 'n' → logprob: -2.345423936843872
    5. 'i' → logprob: -3.220423936843872
    6. '
' → logprob: -3.595423936843872
    7. ' 
' → logprob: -4.095423698425293
    8. '  
' → logprob: -4.470423698425293
    9. 'print' → logprob: -4.720423698425293
    10. ' if' → logprob: -4.845423698425293

Token 83: ' variable' (ID: 11076)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3455002009868622
    2. ' valeur' → logprob: -2.3455002307891846
    3. ' ' → logprob: -2.8455002307891846
    4. 's' → logprob: -2.9705002307891846
    5. '#' → logprob: -3.4705002307891846
    6. ' n' → logprob: -3.8455002307891846
    7. 'r' → logprob: -4.7204999923706055
    8. ' #' → logprob: -5.5954999923706055
    9. 'i' → logprob: -5.8454999923706055
    10. ' variable' → logprob: -6.2204999923706055

Token 84: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.738032341003418
    2. ' n' → logprob: -1.238032341003418
    3. 'n' → logprob: -1.488032341003418
    4. ' ' → logprob: -5.863032341003418
    5. '  ' → logprob: -6.363032341003418
    6. ' `' → logprob: -6.863032341003418
    7. '`' → logprob: -8.488032341003418
    8. 'space' → logprob: -9.863032341003418
    9. ' '' → logprob: -9.988032341003418
    10. ' ```' → logprob: -10.113032341003418

Token 85: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004640168976038694
    2. '  ' → logprob: -6.629640102386475
    3. ' =' → logprob: -7.129640102386475
    4. ' contient' → logprob: -7.754640102386475
    5. '<|end|>' → logprob: -8.004640579223633
    6. '=' → logprob: -8.379640579223633
    7. '  
' → logprob: -8.629640579223633
    8. 'space' → logprob: -9.129640579223633
    9. '_' → logprob: -9.254640579223633
    10. ' 
' → logprob: -9.254640579223633

Token 86: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.584861744660884e-05
    2. 'é' → logprob: -11.125045776367188
    3. 'ent' → logprob: -11.625045776367188
    4. 'ée' → logprob: -11.750045776367188
    5. 'age' → logprob: -12.750045776367188
    6. ' e' → logprob: -12.750045776367188
    7. 'er' → logprob: -13.250045776367188
    8. 'ant' → logprob: -13.375045776367188
    9. 'a' → logprob: -13.500045776367188
    10. 'era' → logprob: -14.375045776367188

Token 87: ' donc' (ID: 14206)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6645835041999817
    2. ' l' → logprob: -1.039583444595337
    3. ' le' → logprob: -2.664583444595337
    4. 'l' → logprob: -3.414583444595337
    5. ' la' → logprob: -4.164583683013916
    6. '  ' → logprob: -5.289583683013916
    7. ' ' → logprob: -5.664583683013916
    8. 'le' → logprob: -6.664583683013916
    9. 's' → logprob: -7.039583683013916
    10. 'la' → logprob: -7.664583683013916

Token 88: ' une' (ID: 2463)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8534899950027466
    2. ' le' → logprob: -0.9784899950027466
    3. ' la' → logprob: -1.9784899950027466
    4. 'l' → logprob: -3.728489875793457
    5. ' ' → logprob: -3.728489875793457
    6. 'le' → logprob: -5.603489875793457
    7. 'la' → logprob: -6.228489875793457
    8. ' une' → logprob: -6.228489875793457
    9. ' ' → logprob: -6.603489875793457
    10. ' un' → logprob: -6.978489875793457

Token 89: ' valeur' (ID: 41664)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -1.1540244817733765
    2. ' valeur' → logprob: -1.6540244817733765
    3. 'nombre' → logprob: -2.029024600982666
    4. ' entier' → logprob: -2.029024600982666
    5. 'ent' → logprob: -2.154024600982666
    6. 'n' → logprob: -3.279024600982666
    7. ' ' → logprob: -4.029024600982666
    8. ' ' → logprob: -4.654024600982666
    9. 'val' → logprob: -4.779024600982666
    10. 's' → logprob: -4.779024600982666

Token 90: ' numérique' (ID: 73962)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42074674367904663
    2. ' entière' → logprob: -1.4207468032836914
    3. ' numérique' → logprob: -2.5457468032836914
    4. 'ent' → logprob: -4.545746803283691
    5. '  ' → logprob: -5.545746803283691
    6. ' ' → logprob: -6.295746803283691
    7. ' entier' → logprob: -6.295746803283691
    8. ' ent' → logprob: -6.920746803283691
    9. ' qui' → logprob: -7.295746803283691
    10. ' enti' → logprob: -7.670746803283691

Token 91: ' entière' (ID: 61583)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.3412559032440186
    2. '
' → logprob: -1.4662559032440186
    3. '+' → logprob: -2.2162559032440186
    4. ' ' → logprob: -2.2162559032440186
    5. '#' → logprob: -3.0912559032440186
    6. '\n' → logprob: -3.2162559032440186
    7. '*' → logprob: -3.2162559032440186
    8. '.' → logprob: -3.3412559032440186
    9. '  
' → logprob: -3.4662559032440186
    10. 'n' → logprob: -3.9662559032440186

Token 92: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5721205472946167
    2. '+' → logprob: -1.9471205472946167
    3. ' 
' → logprob: -2.0721206665039062
    4. '#' → logprob: -2.4471206665039062
    5. '
' → logprob: -2.5721206665039062
    6. 'n' → logprob: -2.6971206665039062
    7. '.' → logprob: -2.8221206665039062
    8. '\n' → logprob: -2.8221206665039062
    9. '*' → logprob: -3.0721206665039062
    10. '<|end|>' → logprob: -3.5721206665039062

Token 93: '#' (ID: 2)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.684337317943573
    2. '#' → logprob: -1.9343373775482178
    3. '
' → logprob: -1.9343373775482178
    4. ' 
' → logprob: -2.5593373775482178
    5. ' ' → logprob: -3.8093373775482178
    6. 'for' → logprob: -4.309337139129639
    7. 'n' → logprob: -4.434337139129639
    8. ',' → logprob: -4.434337139129639
    9. 'f' → logprob: -4.559337139129639
    10. 'if' → logprob: -4.559337139129639

Token 94: ' Div' (ID: 12302)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3653702437877655
    2. ' for' → logprob: -2.115370273590088
    3. 'if' → logprob: -2.615370273590088
    4. 's' → logprob: -3.365370273590088
    5. ' if' → logprob: -3.365370273590088
    6. 'i' → logprob: -4.490370273590088
    7. '#' → logprob: -4.615370273590088
    8. ' #' → logprob: -4.865370273590088
    9. 'factor' → logprob: -5.240370273590088
    10. ' i' → logprob: -6.365370273590088

Token 95: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.488361120223999
    2. 'iser' → logprob: -1.738361120223999
    3. 'is' → logprob: -2.488361120223999
    4. 'ision' → logprob: -2.738361120223999
    5. 'isible' → logprob: -4.113361358642578
    6. 'isé' → logprob: -4.488361358642578
    7. 'isez' → logprob: -4.863361358642578
    8. 'e' → logprob: -4.988361358642578
    9. ' is' → logprob: -5.238361358642578
    10. 'iseur' → logprob: -5.363361358642578

Token 96: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07621382176876068
    2. 'n' → logprob: -2.701213836669922
    3. ' la' → logprob: -5.701213836669922
    4. ' le' → logprob: -6.951213836669922
    5. ' ' → logprob: -7.076213836669922
    6. 'e' → logprob: -8.701213836669922
    7. 's' → logprob: -8.701213836669922
    8. 'le' → logprob: -8.701213836669922
    9. 'l' → logprob: -9.201213836669922
    10. '#' → logprob: -9.201213836669922

Token 97: ' valeur' (ID: 41664)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.585261344909668
    2. 'n' → logprob: -0.960261344909668
    3. 'nombre' → logprob: -4.085261344909668
    4. ' chaîne' → logprob: -4.585261344909668
    5. ' nombre' → logprob: -5.085261344909668
    6. ' ' → logprob: -5.210261344909668
    7. ' valeur' → logprob: -5.335261344909668
    8. 'val' → logprob: -5.585261344909668
    9. 'chaine' → logprob: -6.335261344909668
    10. '10' → logprob: -6.460261344909668

Token 98: ' de' (ID: 334)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1273132711648941
    2. 'n' → logprob: -2.1273133754730225
    3. ' ' → logprob: -8.627313613891602
    4. ' par' → logprob: -9.377313613891602
    5. 'par' → logprob: -9.877313613891602
    6. ' entière' → logprob: -10.752313613891602
    7. ' ' → logprob: -11.877313613891602
    8. '#' → logprob: -12.252313613891602
    9. 'de' → logprob: -12.502313613891602
    10. 'a' → logprob: -13.002313613891602

Token 99: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5231705904006958
    2. ' n' → logprob: -0.8981705904006958
    3. ' ' → logprob: -10.648170471191406
    4. 'l' → logprob: -11.898170471191406
    5. 's' → logprob: -12.273170471191406
    6. ' la' → logprob: -12.398170471191406
    7. '	n' → logprob: -13.023170471191406
    8. 'a' → logprob: -13.773170471191406
    9. ' l' → logprob: -13.898170471191406
    10. '```' → logprob: -14.398170471191406

Token 100: ' par' (ID: 686)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.43492382764816284
    2. ' par' → logprob: -1.4349238872528076
    3. '/' → logprob: -2.8099238872528076
    4. 'par' → logprob: -3.1849238872528076
    5. ' ' → logprob: -4.8099236488342285
    6. ' by' → logprob: -7.1849236488342285
    7. ' en' → logprob: -7.3099236488342285
    8. '/div' → logprob: -7.6849236488342285
    9. 'div' → logprob: -7.8099236488342285
    10. ',' → logprob: -7.8099236488342285

Token 101: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47607025504112244
    2. '2' → logprob: -0.9760702848434448
    3. ' ' → logprob: -6.726070404052734
    4. 'de' → logprob: -7.851070404052734
    5. '3' → logprob: -8.476070404052734
    6. '10' → logprob: -9.601070404052734
    7. ' deux' → logprob: -10.351070404052734
    8. '5' → logprob: -11.351070404052734
    9. '```' → logprob: -11.351070404052734
    10. '7' → logprob: -11.476070404052734

Token 102: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025512888096272945
    2. 'de' → logprob: -7.127551078796387
    3. '3' → logprob: -7.252551078796387
    4. ' ' → logprob: -7.502551078796387
    5. '10' → logprob: -8.502551078796387
    6. '5' → logprob: -8.877551078796387
    7. '4' → logprob: -9.877551078796387
    8. '6' → logprob: -10.752551078796387
    9. '1' → logprob: -11.002551078796387
    10. '7' → logprob: -11.252551078796387

Token 103: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5734512209892273
    2. 'n' → logprob: -2.448451280593872
    3. ' /' → logprob: -2.948451280593872
    4. 'r' → logprob: -3.198451280593872
    5. '
' → logprob: -3.323451280593872
    6. ' /
' → logprob: -3.323451280593872
    7. ' 
' → logprob: -3.573451280593872
    8. '' → logprob: -3.698451280593872
    9. ' result' → logprob: -4.198451042175293
    10. ',' → logprob: -4.323451042175293

Token 104: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3001520335674286
    2. 'r' → logprob: -1.925152063369751
    3. ' result' → logprob: -3.800152063369751
    4. 'n' → logprob: -3.800152063369751
    5. 'res' → logprob: -3.925152063369751
    6. 're' → logprob: -4.800151824951172
    7. 'q' → logprob: -5.425151824951172
    8. ' r' → logprob: -5.550151824951172
    9. '```' → logprob: -5.550151824951172
    10. 'd' → logprob: -5.800151824951172

Token 105: ' L' (ID: 451)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.29617953300476074
    2. ' result' → logprob: -2.0461795330047607
    3. 'r' → logprob: -3.6711795330047607
    4. 'q' → logprob: -3.7961795330047607
    5. 'quot' → logprob: -4.04617977142334
    6. 'div' → logprob: -4.67117977142334
    7. 'res' → logprob: -4.79617977142334
    8. ' quotient' → logprob: -4.79617977142334
    9. ' resultat' → logprob: -4.92117977142334
    10. ' r' → logprob: -5.29617977142334

Token 106: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.26712101697921753
    2. 'r' → logprob: -2.5171210765838623
    3. 'a' → logprob: -3.2671210765838623
    4. '#' → logprob: -3.3921210765838623
    5. 'o' → logprob: -4.642120838165283
    6. 'result' → logprob: -4.642120838165283
    7. ' r' → logprob: -5.392120838165283
    8. ' result' → logprob: -5.392120838165283
    9. ' #' → logprob: -5.517120838165283
    10. ' e' → logprob: -5.517120838165283

Token 107: 'érateur' (ID: 108528)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.023867715150117874
    2. 'er' → logprob: -4.648867607116699
    3. 'érateur' → logprob: -5.023867607116699
    4. 'ér' → logprob: -5.648867607116699
    5. 'é' → logprob: -6.023867607116699
    6. 'érations' → logprob: -7.023867607116699
    7. 'éré' → logprob: -8.7738676071167
    8. 'èr' → logprob: -9.3988676071167
    9. 'éra' → logprob: -9.6488676071167
    10. 'e' → logprob: -10.2738676071167

Token 108: ' de' (ID: 334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -1.122606635093689
    2. '%' → logprob: -1.247606635093689
    3. ' /' → logprob: -1.622606635093689
    4. ' %' → logprob: -1.747606635093689
    5. ' ' → logprob: -5.7476067543029785
    6. ' //' → logprob: -5.7476067543029785
    7. ' modulo' → logprob: -6.1226067543029785
    8. '//' → logprob: -6.2476067543029785
    9. '_' → logprob: -6.7476067543029785
    10. ' ' → logprob: -7.1226067543029785

Token 109: ' division' (ID: 21629)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3293617069721222
    2. 'division' → logprob: -2.9543616771698
    3. ' division' → logprob: -3.0793616771698
    4. '/' → logprob: -3.2043616771698
    5. ' %' → logprob: -3.3293616771698
    6. ' modulo' → logprob: -3.4543616771698
    7. 'mod' → logprob: -3.8293616771698
    8. '```' → logprob: -4.579361915588379
    9. ' /' → logprob: -4.829361915588379
    10. ' ' → logprob: -4.829361915588379

Token 110: ' (' (ID: 350)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.114467091858387
    2. ' /' → logprob: -2.239467144012451
    3. ' ' → logprob: -7.989467144012451
    4. ' //' → logprob: -8.239466667175293
    5. ' entière' → logprob: -8.739466667175293
    6. '```' → logprob: -8.864466667175293
    7. ' classique' → logprob: -9.114466667175293
    8. '//' → logprob: -9.114466667175293
    9. 's' → logprob: -9.489466667175293
    10. '/tr' → logprob: -9.864466667175293

Token 111: '/)' (ID: 85322)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.17240549623966217
    2. '/)' → logprob: -2.047405481338501
    3. ' /' → logprob: -3.672405481338501
    4. '//' → logprob: -6.42240571975708
    5. ')' → logprob: -7.04740571975708
    6. 'n' → logprob: -7.92240571975708
    7. '/')' → logprob: -8.172405242919922
    8. ' //' → logprob: -8.422405242919922
    9. ' )' → logprob: -9.172405242919922
    10. ' ' → logprob: -9.922405242919922

Token 112: ' retourne' (ID: 178818)
  Prédit: ' ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ren' → logprob: -0.18724381923675537
    2. ' retourne' → logprob: -1.9372438192367554
    3. ' donne' → logprob: -4.312243938446045
    4. 'ren' → logprob: -5.562243938446045
    5. ' /' → logprob: -6.312243938446045
    6. '/' → logprob: -6.437243938446045
    7. ' produit' → logprob: -6.937243938446045
    8. ' ' → logprob: -7.187243938446045
    9. ' réalise' → logprob: -7.687243938446045
    10. ' effect' → logprob: -7.687243938446045

Token 113: ' toujours' (ID: 16867)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.12505221366882324
    2. 'un' → logprob: -2.2500522136688232
    3. ' une' → logprob: -4.875052452087402
    4. 'une' → logprob: -5.750052452087402
    5. 'a' → logprob: -7.250052452087402
    6. ''un' → logprob: -8.500052452087402
    7. ' toujours' → logprob: -8.500052452087402
    8. ' ' → logprob: -9.750052452087402
    9. ' a' → logprob: -10.000052452087402
    10. 'u' → logprob: -10.875052452087402

Token 114: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.38071468472480774
    2. ' un' → logprob: -1.2557146549224854
    3. 'une' → logprob: -4.1307148933410645
    4. 'a' → logprob: -4.8807148933410645
    5. ' une' → logprob: -5.2557148933410645
    6. ''un' → logprob: -6.0057148933410645
    7. 'u' → logprob: -9.255714416503906
    8. ''une' → logprob: -9.630714416503906
    9. '	un' → logprob: -9.755714416503906
    10. '’un' → logprob: -10.755714416503906

Token 115: ' nombre' (ID: 9733)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.19974221289157867
    2. ' float' → logprob: -2.449742317199707
    3. 'nombre' → logprob: -2.699742317199707
    4. ' flott' → logprob: -4.324742317199707
    5. ' nombre' → logprob: -4.824742317199707
    6. 'fl' → logprob: -6.324742317199707
    7. 'e' → logprob: -6.949742317199707
    8. 'n' → logprob: -7.324742317199707
    9. 'flo' → logprob: -8.199742317199707
    10. '_float' → logprob: -8.449742317199707

Token 116: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1727606058120728
    2. ' flott' → logprob: -1.1727606058120728
    3. ' à' → logprob: -2.172760486602783
    4. 'f' → logprob: -2.172760486602783
    5. 'float' → logprob: -3.297760486602783
    6. ' float' → logprob: -3.422760486602783
    7. 'à' → logprob: -4.172760486602783
    8. ' (' → logprob: -5.172760486602783
    9. '<|end|>' → logprob: -5.172760486602783
    10. ' réel' → logprob: -5.172760486602783

Token 117: ' virg' (ID: 165362)
  Prédit: 'vir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vir' → logprob: -0.0773298367857933
    2. 'float' → logprob: -3.7023298740386963
    3. ' virg' → logprob: -3.8273298740386963
    4. '```' → logprob: -4.077329635620117
    5. ' ' → logprob: -5.077329635620117
    6. '   ' → logprob: -6.827329635620117
    7. '

' → logprob: -7.702329635620117
    8. 'v' → logprob: -8.202329635620117
    9. 'floating' → logprob: -8.202329635620117
    10. 'val' → logprob: -8.452329635620117

Token 118: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0011858227662742138
    2. 'ale' → logprob: -7.626185894012451
    3. 'e' → logprob: -7.751185894012451
    4. 'ulaire' → logprob: -9.126185417175293
    5. 'ulé' → logprob: -10.501185417175293
    6. 'er' → logprob: -10.751185417175293
    7. 'ula' → logprob: -11.126185417175293
    8. 'le' → logprob: -11.126185417175293
    9. 'ille' → logprob: -11.501185417175293
    10. 'elle' → logprob: -11.751185417175293

Token 119: ' flott' (ID: 108700)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.39019960165023804
    2. ' flott' → logprob: -2.515199661254883
    3. ' ' → logprob: -2.640199661254883
    4. 'n' → logprob: -3.265199661254883
    5. ' f' → logprob: -3.515199661254883
    6. ' n' → logprob: -3.765199661254883
    7. ',' → logprob: -4.265199661254883
    8. 'a' → logprob: -4.390199661254883
    9. '3' → logprob: -5.015199661254883
    10. '  
' → logprob: -5.265199661254883

Token 120: 'ante' (ID: 2116)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6731501817703247
    2. 'é' → logprob: -1.7981501817703247
    3. 'ée' → logprob: -2.298150062561035
    4. 'u' → logprob: -2.548150062561035
    5. '.' → logprob: -2.923150062561035
    6. 'ante' → logprob: -3.423150062561035
    7. 'eur' → logprob: -3.548150062561035
    8. 'o' → logprob: -4.048150062561035
    9. 'ue' → logprob: -6.048150062561035
    10. '-' → logprob: -7.048150062561035

Token 121: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3133369982242584
    2. 'r' → logprob: -2.3133370876312256
    3. ' result' → logprob: -2.6883370876312256
    4. 'v' → logprob: -3.1883370876312256
    5. 'n' → logprob: -3.6883370876312256
    6. ',' → logprob: -4.6883368492126465
    7. ' résultat' → logprob: -5.5633368492126465
    8. 'f' → logprob: -5.6883368492126465
    9. ' resultat' → logprob: -5.6883368492126465
    10. 'res' → logprob: -5.8133368492126465

Token 122: 'float' (ID: 7829)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.3606565594673157
    2. ')' → logprob: -1.610656499862671
    3. 'float' → logprob: -3.110656499862671
    4. ' )' → logprob: -3.610656499862671
    5. ' ' → logprob: -4.48565673828125
    6. ' flott' → logprob: -5.11065673828125
    7. '.' → logprob: -5.23565673828125
    8. ',' → logprob: -6.36065673828125
    9. 'flo' → logprob: -6.98565673828125
    10. ' fl' → logprob: -7.23565673828125

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004342767875641584
    2. ')
' → logprob: -6.379342555999756
    3. ',' → logprob: -6.754342555999756
    4. 's' → logprob: -8.004343032836914
    5. ' )' → logprob: -8.129343032836914
    6. '.' → logprob: -8.629343032836914
    7. '),' → logprob: -9.129343032836914
    8. 'n' → logprob: -9.254343032836914
    9. ').' → logprob: -10.004343032836914
    10. ')

' → logprob: -10.254343032836914

Token 124: ' même' (ID: 9679)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.139724850654602
    2. '
' → logprob: -1.389724850654602
    3. 'n' → logprob: -1.889724850654602
    4. ',' → logprob: -2.5147247314453125
    5. '  
' → logprob: -2.8897247314453125
    6. ' 
' → logprob: -3.6397247314453125
    7. '' → logprob: -3.8897247314453125
    8. '\n' → logprob: -4.0147247314453125
    9. 'r' → logprob: -4.1397247314453125
    10. 's' → logprob: -4.8897247314453125

Token 125: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.6716532707214355
    2. 'si' → logprob: -0.9216532707214355
    3. 's' → logprob: -2.7966532707214355
    4. '<|end|>' → logprob: -4.6716532707214355
    5. ' lorsque' → logprob: -5.1716532707214355
    6. ' if' → logprob: -5.7966532707214355
    7. ' ' → logprob: -6.0466532707214355
    8. ' quand' → logprob: -6.1716532707214355
    9. ' lorsqu' → logprob: -6.5466532707214355
    10. ' s' → logprob: -6.7966532707214355

Token 126: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12107439339160919
    2. ' les' → logprob: -3.3710744380950928
    3. 'les' → logprob: -3.6210744380950928
    4. ' n' → logprob: -3.8710744380950928
    5. 'la' → logprob: -4.371074199676514
    6. ' la' → logprob: -4.621074199676514
    7. 'l' → logprob: -5.496074199676514
    8. ' le' → logprob: -6.371074199676514
    9. 'le' → logprob: -6.621074199676514
    10. 'div' → logprob: -7.496074199676514

Token 127: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5376916527748108
    2. '%' → logprob: -0.9126916527748108
    3. ' ' → logprob: -4.537691593170166
    4. ' /' → logprob: -6.912691593170166
    5. '<|end|>' → logprob: -7.037691593170166
    6. '/' → logprob: -7.787691593170166
    7. ' est' → logprob: -7.912691593170166
    8. 'est' → logprob: -8.287692070007324
    9. ' divisible' → logprob: -8.537692070007324
    10. '%n' → logprob: -8.912692070007324

Token 128: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.6365159153938293
    2. 'div' → logprob: -0.7615159153938293
    3. 'ent' → logprob: -6.386516094207764
    4. '3' → logprob: -7.011516094207764
    5. ' divis' → logprob: -8.136515617370605
    6. 'exact' → logprob: -8.636515617370605
    7. ' ' → logprob: -9.011515617370605
    8. 'isible' → logprob: -9.136515617370605
    9. 'int' → logprob: -9.386515617370605
    10. '/' → logprob: -9.386515617370605

Token 129: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.32045978307724
    2. ' par' → logprob: -1.5704598426818848
    3. '3' → logprob: -3.1954598426818848
    4. ' ' → logprob: -5.070459842681885
    5. '/' → logprob: -5.195459842681885
    6. ' /' → logprob: -5.445459842681885
    7. 'exact' → logprob: -7.070459842681885
    8. 'ent' → logprob: -7.070459842681885
    9. '  ' → logprob: -7.195459842681885
    10. '<|end|>' → logprob: -7.195459842681885

Token 130: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011066683568060398
    2. ' ' → logprob: -4.511066913604736
    3. ' trois' → logprob: -11.386066436767578
    4. ' ' → logprob: -12.261066436767578
    5. '  ' → logprob: -14.136066436767578
    6. '```' → logprob: -14.761066436767578
    7. '<|end|>' → logprob: -14.886066436767578
    8. ' three' → logprob: -15.136066436767578
    9. ' Trois' → logprob: -15.636066436767578
    10. '1' → logprob: -16.261066436767578

Token 131: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.25003719329834
    3. ' trois' → logprob: -14.50003719329834
    4. '```' → logprob: -15.37503719329834
    5. ' ' → logprob: -16.375036239624023
    6. '' → logprob: -16.500036239624023
    7. '6' → logprob: -16.750036239624023
    8. '1' → logprob: -17.000036239624023
    9. '۳' → logprob: -17.375036239624023
    10. '３' → logprob: -17.625036239624023

Token 132: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06365533918142319
    2. 'r' → logprob: -4.188655376434326
    3. 'div' → logprob: -4.313655376434326
    4. 'quot' → logprob: -4.938655376434326
    5. 'division' → logprob: -5.188655376434326
    6. 'q' → logprob: -5.313655376434326
    7. ' result' → logprob: -5.313655376434326
    8. 'res' → logprob: -5.938655376434326
    9. 'v' → logprob: -6.313655376434326
    10. 'd' → logprob: -6.563655376434326

Token 133: 'result' (ID: 2521)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7409936189651489
    2. 'result' → logprob: -0.8659936189651489
    3. 'd' → logprob: -2.9909934997558594
    4. 'v' → logprob: -3.8659934997558594
    5. 'res' → logprob: -4.865993499755859
    6. 'q' → logprob: -4.990993499755859
    7. ' result' → logprob: -5.740993499755859
    8. 'n' → logprob: -6.240993499755859
    9. 'x' → logprob: -6.365993499755859
    10. 'm' → logprob: -6.615993499755859

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31444039940834045
    2. 'at' → logprob: -1.814440369606018
    3. '=' → logprob: -2.5644404888153076
    4. '_' → logprob: -3.6894404888153076
    5. ' ' → logprob: -5.6894402503967285
    6. 's' → logprob: -7.6894402503967285
    7. 'ats' → logprob: -7.8144402503967285
    8. 'a' → logprob: -8.064440727233887
    9. ')' → logprob: -9.814440727233887
    10. 'e' → logprob: -9.939440727233887

Token 135: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009757505729794502
    2. 'n' → logprob: -4.6347575187683105
    3. ' ' → logprob: -14.134757041931152
    4. ' ' → logprob: -14.884757041931152
    5. '	n' → logprob: -15.259757041931152
    6. ' 
' → logprob: -16.38475799560547
    7. '```' → logprob: -17.13475799560547
    8. '3' → logprob: -17.38475799560547
    9. ' ' → logprob: -17.75975799560547
    10. ' /' → logprob: -17.75975799560547

Token 136: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.06198001280426979
    2. '/' → logprob: -2.8119800090789795
    3. ' ' → logprob: -12.061980247497559
    4. ' ' → logprob: -12.561980247497559
    5. ')' → logprob: -13.311980247497559
    6. ' /
' → logprob: -14.686980247497559
    7. '```' → logprob: -15.061980247497559
    8. 's' → logprob: -15.811980247497559
    9. '3' → logprob: -15.936980247497559
    10. '"' → logprob: -16.561979293823242

Token 137: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -18.375335693359375
    4. ' ' → logprob: -19.250335693359375
    5. '۳' → logprob: -19.500335693359375
    6. '  ' → logprob: -19.750335693359375
    7. '３' → logprob: -20.625335693359375
    8. '   ' → logprob: -20.875335693359375
    9. '' → logprob: -21.125335693359375
    10. '٣' → logprob: -21.625335693359375

Token 138: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -18.25
    4. '۳' → logprob: -20.375
    5. '   ' → logprob: -20.625
    6. '３' → logprob: -20.875
    7. '  ' → logprob: -20.875
    8. '' → logprob: -21.125
    9. '٣' → logprob: -21.5
    10. '৩' → logprob: -21.875

Token 139: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3697774112224579
    2. '
' → logprob: -1.2447774410247803
    3. '#' → logprob: -4.744777202606201
    4. '<|end|>' → logprob: -5.619777202606201
    5. '  
' → logprob: -5.869777202606201
    6. '\n' → logprob: -6.619777202606201
    7. ' 
' → logprob: -6.869777202606201
    8. ' ' → logprob: -7.494777202606201
    9. ')' → logprob: -7.494777202606201
    10. '
' → logprob: -8.11977767944336

Token 140: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04970311000943184
    2. '
' → logprob: -3.5497031211853027
    3. '#' → logprob: -4.049703121185303
    4. ' 
' → logprob: -7.799703121185303
    5. '#print' → logprob: -8.049702644348145
    6. 'result' → logprob: -8.174702644348145
    7. '  
' → logprob: -8.299702644348145
    8. '\n' → logprob: -8.674702644348145
    9. '' → logprob: -8.799702644348145
    10. '
' → logprob: -8.924702644348145

Token 141: ' Par' (ID: 3371)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0383603498339653
    2. ' print' → logprob: -3.538360357284546
    3. '#' → logprob: -5.413360118865967
    4. 'result' → logprob: -6.163360118865967
    5. '
' → logprob: -7.913360118865967
    6. '3' → logprob: -8.538360595703125
    7. 'Print' → logprob: -8.663360595703125
    8. ' result' → logprob: -8.663360595703125
    9. '#print' → logprob: -8.663360595703125
    10. ' ' → logprob: -9.038360595703125

Token 142: ' exemple' (ID: 26320)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.3088642358779907
    2. 't' → logprob: -1.6838642358779907
    3. ' défaut' → logprob: -4.183864116668701
    4. 'tie' → logprob: -4.808864116668701
    5. ' conséquent' → logprob: -4.808864116668701
    6. 'ce' → logprob: -5.558864116668701
    7. 'ti' → logprob: -5.683864116668701
    8. 'don' → logprob: -5.683864116668701
    9. ' fois' → logprob: -5.933864116668701
    10. ' ex' → logprob: -5.933864116668701

Token 143: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.104679174721241
    2. '3' → logprob: -3.1046791076660156
    3. '4' → logprob: -4.479679107666016
    4. ',' → logprob: -4.729679107666016
    5. ' 
' → logprob: -4.854679107666016
    6. '2' → logprob: -4.979679107666016
    7. '0' → logprob: -5.229679107666016
    8. '6' → logprob: -5.854679107666016
    9. ' ,' → logprob: -5.854679107666016
    10. '1' → logprob: -6.229679107666016

Token 144: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4560021758079529
    2. '1' → logprob: -1.2060022354125977
    3. '2' → logprob: -2.9560022354125977
    4. '3' → logprob: -5.081002235412598
    5. '0' → logprob: -5.706002235412598
    6. 'result' → logprob: -6.206002235412598
    7. ' result' → logprob: -6.706002235412598
    8. '4' → logprob: -7.831002235412598
    9. ' n' → logprob: -7.956002235412598
    10. 'print' → logprob: -8.331002235412598

Token 145: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0970100611448288
    2. 'n' → logprob: -2.4720101356506348
    3. ' ' → logprob: -4.972010135650635
    4. '3' → logprob: -6.972010135650635
    5. '6' → logprob: -9.847009658813477
    6. '10' → logprob: -10.222009658813477
    7. '4' → logprob: -11.222009658813477
    8. ' ' → logprob: -11.472009658813477
    9. '7' → logprob: -11.972009658813477
    10. '2' → logprob: -11.972009658813477

Token 146: ' vaut' (ID: 83004)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044289156794548035
    2. ' =' → logprob: -3.1692891120910645
    3. ' vaut' → logprob: -7.5442891120910645
    4. ' ' → logprob: -8.294289588928223
    5. '<|end|>' → logprob: -8.794289588928223
    6. ' est' → logprob: -9.169289588928223
    7. '==' → logprob: -9.294289588928223
    8. 'est' → logprob: -9.919289588928223
    9. ' is' → logprob: -10.169289588928223
    10. ' ==' → logprob: -10.544289588928223

Token 147: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4848776161670685
    2. ' ' → logprob: -1.109877586364746
    3. '6' → logprob: -3.234877586364746
    4. '3' → logprob: -4.484877586364746
    5. '12' → logprob: -5.734877586364746
    6. '18' → logprob: -7.484877586364746
    7. '15' → logprob: -9.109877586364746
    8. '1' → logprob: -10.234877586364746
    9. '  ' → logprob: -11.484877586364746
    10. '```' → logprob: -11.484877586364746

Token 148: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.22422797977924347
    2. '6' → logprob: -1.974228024482727
    3. '3' → logprob: -3.2242279052734375
    4. ' ' → logprob: -4.4742279052734375
    5. '12' → logprob: -4.7242279052734375
    6. '15' → logprob: -6.3492279052734375
    7. '```' → logprob: -9.849227905273438
    8. '18' → logprob: -9.974227905273438
    9. '30' → logprob: -11.099227905273438
    10. '27' → logprob: -11.474227905273438

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10185570269823074
    2. ' ,' → logprob: -2.351855754852295
    3. ',
' → logprob: -7.726855754852295
    4. '.' → logprob: -7.976855754852295
    5. ' ' → logprob: -8.226855278015137
    6. 'result' → logprob: -8.476855278015137
    7. ',result' → logprob: -9.601855278015137
    8. 'print' → logprob: -9.601855278015137
    9. ' ,
' → logprob: -9.851855278015137
    10. ' result' → logprob: -10.351855278015137

Token 150: ' alors' (ID: 17971)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.11320006847381592
    2. 'result' → logprob: -2.3632001876831055
    3. ' print' → logprob: -5.1132001876831055
    4. 'print' → logprob: -5.7382001876831055
    5. ' le' → logprob: -6.2382001876831055
    6. 'le' → logprob: -7.8632001876831055
    7. ' la' → logprob: -8.238200187683105
    8. ' resultat' → logprob: -8.238200187683105
    9. ' ' → logprob: -8.488200187683105
    10. ' ' → logprob: -8.613200187683105

Token 151: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5236127376556396
    2. 'result' → logprob: -0.8986127376556396
    3. '3' → logprob: -8.648612976074219
    4. 'print' → logprob: -9.023612976074219
    5. '9' → logprob: -9.773612976074219
    6. ' ' → logprob: -10.273612976074219
    7. ' resultat' → logprob: -10.773612976074219
    8. ' résultat' → logprob: -11.273612976074219
    9. ' print' → logprob: -11.523612976074219
    10. ' le' → logprob: -12.023612976074219

Token 152: ' sera' (ID: 15511)
  Prédit: ' vaut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vaut' → logprob: -0.03905728831887245
    2. ' va' → logprob: -3.7890572547912598
    3. '<|end|>' → logprob: -5.03905725479126
    4. ' =' → logprob: -5.53905725479126
    5. ' sera' → logprob: -5.91405725479126
    6. ' will' → logprob: -7.78905725479126
    7. ' ' → logprob: -7.78905725479126
    8. ' fera' → logprob: -8.289057731628418
    9. '=' → logprob: -8.289057731628418
    10. 'va' → logprob: -8.414057731628418

Token 153: ' égal' (ID: 15059)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10022392123937607
    2. ' ' → logprob: -2.350224018096924
    3. '"' → logprob: -12.100223541259766
    4. '`' → logprob: -12.475223541259766
    5. '```' → logprob: -12.850223541259766
    6. ''' → logprob: -13.537723541259766
    7. ' ' → logprob: -13.912723541259766
    8. '
' → logprob: -14.162723541259766
    9. ' `' → logprob: -15.287723541259766
    10. '' → logprob: -15.475223541259766

Token 154: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326562762260437
    2. '3' → logprob: -0.7576562762260437
    3. ' to' → logprob: -10.25765609741211
    4. ' à' → logprob: -11.50765609741211
    5. '```' → logprob: -12.88265609741211
    6. 'to' → logprob: -13.00765609741211
    7. ' ' → logprob: -13.63265609741211
    8. 'à' → logprob: -14.38265609741211
    9. '"' → logprob: -14.69515609741211
    10. ' =' → logprob: -14.69515609741211

Token 155: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0232466422021389
    2. ' ' → logprob: -3.7732465267181396
    3. '`' → logprob: -14.898246765136719
    4. '"' → logprob: -15.273246765136719
    5. '```' → logprob: -15.523246765136719
    6. ' ' → logprob: -16.08574676513672
    7. ''' → logprob: -16.96074676513672
    8. '' → logprob: -17.77324676513672
    9. ' ' → logprob: -17.83574676513672
    10. '​' → logprob: -17.96074676513672

Token 156: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.659005157416686e-05
    2. ' ' → logprob: -9.625066757202148
    3. '```' → logprob: -14.750066757202148
    4. '' → logprob: -17.75006675720215
    5. '`' → logprob: -18.00006675720215
    6. '۳' → logprob: -18.12506675720215
    7. '
' → logprob: -18.25006675720215
    8. '"' → logprob: -18.93756675720215
    9. '３' → logprob: -18.93756675720215
    10. '  ' → logprob: -19.06256675720215

Token 157: '.' (ID: 13)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2060774713754654
    2. '
' → logprob: -2.4560775756835938
    3. '.' → logprob: -3.3310775756835938
    4. '<|end|>' → logprob: -3.8310775756835938
    5. '#' → logprob: -4.331077575683594
    6. '  
' → logprob: -4.706077575683594
    7. '' → logprob: -5.581077575683594
    8. '*' → logprob: -5.581077575683594
    9. ',' → logprob: -5.956077575683594
    10. '```' → logprob: -6.456077575683594

Token 158: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31245943903923035
    2. '
' → logprob: -1.9374594688415527
    3. '#' → logprob: -3.3124594688415527
    4. '' → logprob: -3.4374594688415527
    5. 'p' → logprob: -4.562459468841553
    6. '.' → logprob: -4.687459468841553
    7. '  
' → logprob: -4.687459468841553
    8. ' 
' → logprob: -5.687459468841553
    9. ' ' → logprob: -5.687459468841553
    10. 'result' → logprob: -5.812459468841553

Token 160: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.43157583475112915
    2. 'float' → logprob: -1.8065757751464844
    3. ')' → logprob: -2.6815757751464844
    4. ''un' → logprob: -3.3065757751464844
    5. 'une' → logprob: -3.4315757751464844
    6. ' un' → logprob: -3.5565757751464844
    7. '3' → logprob: -5.056575775146484
    8. 'nombre' → logprob: -5.556575775146484
    9. 'a' → logprob: -6.431575775146484
    10. 'fl' → logprob: -6.556575775146484

Token 161: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.8315590023994446
    2. ' nombre' → logprob: -1.5815589427947998
    3. 'float' → logprob: -1.5815589427947998
    4. 'nombre' → logprob: -2.0815589427948
    5. ' ' → logprob: -4.456559181213379
    6. ' flott' → logprob: -4.581559181213379
    7. ' entier' → logprob: -6.456559181213379
    8. 'f' → logprob: -6.706559181213379
    9. 'ent' → logprob: -7.206559181213379
    10. '```' → logprob: -7.706559181213379

Token 162: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007269040681421757
    2. '
' → logprob: -6.007268905639648
    3. '#' → logprob: -6.507268905639648
    4. ')
' → logprob: -6.757268905639648
    5. ' )' → logprob: -6.882268905639648
    6. '\n' → logprob: -8.132268905639648
    7. '.' → logprob: -8.757268905639648
    8. '' → logprob: -9.132268905639648
    9. 'print' → logprob: -9.257268905639648
    10. '")' → logprob: -10.132268905639648

Token 163: ' pas' (ID: 2173)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.655197024345398
    2. 'not' → logprob: -2.0301971435546875
    3. ' et' → logprob: -2.2801971435546875
    4. ')' → logprob: -2.7801971435546875
    5. ' pas' → logprob: -2.7801971435546875
    6. ' non' → logprob: -3.5301971435546875
    7. 'et' → logprob: -3.9051971435546875
    8. ' )' → logprob: -4.1551971435546875
    9. ' ' → logprob: -4.7801971435546875
    10. 'non' → logprob: -5.1551971435546875

Token 164: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8190223574638367
    2. 'un' → logprob: -1.0690224170684814
    3. '3' → logprob: -1.5690224170684814
    4. ' ' → logprob: -5.569022178649902
    5. 'à' → logprob: -6.569022178649902
    6. ' à' → logprob: -6.819022178649902
    7. 'ent' → logprob: -8.194022178649902
    8. '9' → logprob: -8.819022178649902
    9. ' juste' → logprob: -8.819022178649902
    10. 'just' → logprob: -9.194022178649902

Token 165: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.037034641951322556
    2. 'ent' → logprob: -3.787034749984741
    3. ' int' → logprob: -4.662034511566162
    4. '3' → logprob: -6.162034511566162
    5. ' entier' → logprob: -6.287034511566162
    6. 'integer' → logprob: -9.28703498840332
    7. 'nombre' → logprob: -9.41203498840332
    8. ' ' → logprob: -10.91203498840332
    9. '<int' → logprob: -11.03703498840332
    10. '```' → logprob: -11.28703498840332

Token 166: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.79811754100956e-05
    2. ')
' → logprob: -11.250038146972656
    3. ' )' → logprob: -11.250038146972656
    4. '#' → logprob: -12.625038146972656
    5. ')#' → logprob: -12.625038146972656
    6. '`)' → logprob: -13.375038146972656
    7. ')

' → logprob: -14.375038146972656
    8. '')' → logprob: -14.500038146972656
    9. ').' → logprob: -14.500038146972656
    10. '))' → logprob: -14.750038146972656

Token 167: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01505550742149353
    2. '#' → logprob: -4.6400556564331055
    3. 'p' → logprob: -5.7650556564331055
    4. 'result' → logprob: -6.3900556564331055
    5. 'pr' → logprob: -8.515055656433105
    6. 'r' → logprob: -9.265055656433105
    7. 'if' → logprob: -10.390055656433105
    8. '#print' → logprob: -10.515055656433105
    9. 'prin' → logprob: -10.515055656433105
    10. 'n' → logprob: -10.890055656433105

Token 168: ' Cal' (ID: 4453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008607231429778039
    2. '#' → logprob: -7.125860691070557
    3. 'result' → logprob: -10.625861167907715
    4. '#print' → logprob: -11.375861167907715
    5. 'Print' → logprob: -12.000861167907715
    6. 'if' → logprob: -12.500861167907715
    7. 'prin' → logprob: -12.875861167907715
    8. 'pr' → logprob: -13.250861167907715
    9. 'Pr' → logprob: -13.625861167907715
    10. '```' → logprob: -13.875861167907715

Token 169: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.36158791184425354
    2. 'cul' → logprob: -1.2365878820419312
    3. 'c' → logprob: -4.611588001251221
    4. 'culate' → logprob: -6.111588001251221
    5. 'cules' → logprob: -7.736588001251221
    6. '#' → logprob: -8.486587524414062
    7. 'cula' → logprob: -9.486587524414062
    8. '```' → logprob: -10.486587524414062
    9. 'r' → logprob: -10.736587524414062
    10. 'cut' → logprob: -11.236587524414062

Token 170: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.19129584729671478
    2. ' le' → logprob: -2.441295862197876
    3. 'le' → logprob: -3.691295862197876
    4. 'la' → logprob: -4.066295623779297
    5. 're' → logprob: -4.191295623779297
    6. ' l' → logprob: -4.691295623779297
    7. 'result' → logprob: -5.191295623779297
    8. ' ' → logprob: -5.816295623779297
    9. ' result' → logprob: -5.941295623779297
    10. 'l' → logprob: -6.066295623779297

Token 171: ' cube' (ID: 46822)
  Prédit: ' reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.5034775733947754
    2. 'reste' → logprob: -1.0034775733947754
    3. ' résultat' → logprob: -4.753477573394775
    4. 'rest' → logprob: -5.003477573394775
    5. 'rés' → logprob: -5.628477573394775
    6. 'quot' → logprob: -5.753477573394775
    7. 're' → logprob: -6.378477573394775
    8. ' quotient' → logprob: -6.503477573394775
    9. 'nombre' → logprob: -7.378477573394775
    10. ' rest' → logprob: -7.378477573394775

Token 172: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16482023894786835
    2. ' de' → logprob: -2.7898201942443848
    3. 'n' → logprob: -3.2898201942443848
    4. 'de' → logprob: -4.539820194244385
    5. '(result' → logprob: -4.789820194244385
    6. '()' → logprob: -5.039820194244385
    7. ' result' → logprob: -5.164820194244385
    8. '_' → logprob: -5.289820194244385
    9. '_result' → logprob: -5.289820194244385
    10. 'r' → logprob: -6.164820194244385

Token 173: ' result' (ID: 1534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0662195682525635
    2. ' n' → logprob: -1.0662195682525635
    3. 'result' → logprob: -1.6912195682525635
    4. ' result' → logprob: -2.0662195682525635
    5. ' ' → logprob: -9.066219329833984
    6. ' resultat' → logprob: -9.691219329833984
    7. ' la' → logprob: -9.941219329833984
    8. 'r' → logprob: -10.066219329833984
    9. '(result' → logprob: -10.191219329833984
    10. 'l' → logprob: -10.316219329833984

Token 174: ',' (ID: 11)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.003230948466807604
    2. '**' → logprob: -6.503231048583984
    3. ' result' → logprob: -6.753231048583984
    4. ' **' → logprob: -8.628231048583984
    5. 'res' → logprob: -8.878231048583984
    6. ' =' → logprob: -9.128231048583984
    7. '_result' → logprob: -10.628231048583984
    8. '
' → logprob: -10.753231048583984
    9. '**
' → logprob: -10.878231048583984
    10. 'r' → logprob: -10.878231048583984

Token 175: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5150100588798523
    2. ' result' → logprob: -1.640010118484497
    3. ' soit' → logprob: -2.515010118484497
    4. 'result' → logprob: -2.765010118484497
    5. ' ' → logprob: -3.265010118484497
    6. ' i' → logprob: -4.515009880065918
    7. ' qui' → logprob: -5.890009880065918
    8. ' which' → logprob: -6.265009880065918
    9. ' ce' → logprob: -6.515009880065918
    10. ' et' → logprob: -6.640009880065918

Token 176: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.13538753986358643
    2. '-à' → logprob: -3.260387420654297
    3. 'est' → logprob: -3.510387420654297
    4. '#' → logprob: -3.760387420654297
    5. 'e' → logprob: -4.635387420654297
    6. '=' → logprob: -5.135387420654297
    7. 'à' → logprob: -5.510387420654297
    8. ''''' → logprob: -6.135387420654297
    9. '’est' → logprob: -6.385387420654297
    10. ' =' → logprob: -6.385387420654297

Token 177: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.06825175136327744
    2. '-' → logprob: -3.568251848220825
    3. 'à' → logprob: -3.693251848220825
    4. ' à' → logprob: -5.443251609802246
    5. 'result' → logprob: -6.318251609802246
    6. '=' → logprob: -6.568251609802246
    7. 'a' → logprob: -6.693251609802246
    8. ' ' → logprob: -6.818251609802246
    9. ' =' → logprob: -7.068251609802246
    10. ' result' → logprob: -7.318251609802246

Token 178: '-dire' (ID: 76064)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3143782615661621
    2. '-dire' → logprob: -1.314378261566162
    3. '-' → logprob: -7.689378261566162
    4. 'a' → logprob: -8.68937873840332
    5. ' dire' → logprob: -8.68937873840332
    6. 'd' → logprob: -9.18937873840332
    7. 'à' → logprob: -9.93937873840332
    8. 'di' → logprob: -10.31437873840332
    9. '```' → logprob: -10.43937873840332
    10. '-à' → logprob: -10.81437873840332

Token 179: ' l' (ID: 305)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3887062966823578
    2. 'result' → logprob: -1.1387063264846802
    3. ' le' → logprob: -7.138706207275391
    4. ' résultat' → logprob: -8.01370620727539
    5. ' resultat' → logprob: -8.88870620727539
    6. ' ' → logprob: -9.26370620727539
    7. '```' → logprob: -9.26370620727539
    8. ' la' → logprob: -9.38870620727539
    9. '	result' → logprob: -9.63870620727539
    10. ' ' → logprob: -9.63870620727539

Token 180: ''él' (ID: 114184)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11291005462408066
    2. 'a' → logprob: -2.737910032272339
    3. ''é' → logprob: -3.612910032272339
    4. '**' → logprob: -4.487910270690918
    5. ''e' → logprob: -7.362910270690918
    6. ' résultat' → logprob: -7.487910270690918
    7. 'result' → logprob: -8.237910270690918
    8. ''a' → logprob: -8.487910270690918
    9. ' result' → logprob: -8.612910270690918
    10. ''ex' → logprob: -8.862910270690918

Token 181: 'ève' (ID: 41151)
  Prédit: 'ev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ev' → logprob: -0.34809157252311707
    2. 'èvement' → logprob: -2.0980916023254395
    3. 'év' → logprob: -2.2230916023254395
    4. 'èv' → logprob: -3.7230916023254395
    5. 'e' → logprob: -3.9730916023254395
    6. 'é' → logprob: -5.5980916023254395
    7. 'ève' → logprob: -5.7230916023254395
    8. 'è' → logprob: -6.0980916023254395
    9. 'ément' → logprob: -6.3480916023254395
    10. '#' → logprob: -6.3480916023254395

Token 182: ' result' (ID: 1534)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3624253273010254
    2. 's' → logprob: -2.2374253273010254
    3. ' **' → logprob: -2.9874253273010254
    4. ''' → logprob: -3.3624253273010254
    5. 'r' → logprob: -3.4874253273010254
    6. '*' → logprob: -3.4874253273010254
    7. ''s' → logprob: -4.737425327301025
    8. 'e' → logprob: -5.112425327301025
    9. 'ment' → logprob: -5.362425327301025
    10. 'nt' → logprob: -5.362425327301025

Token 183: ' à' (ID: 1221)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.6454083323478699
    2. '**' → logprob: -0.7704083323478699
    3. '*' → logprob: -4.8954081535339355
    4. ' *' → logprob: -5.8954081535339355
    5. '_' → logprob: -6.8954081535339355
    6. ' =' → logprob: -8.020408630371094
    7. '=' → logprob: -8.520408630371094
    8. ' ' → logprob: -8.645408630371094
    9. 's' → logprob: -8.895408630371094
    10. 'e' → logprob: -9.520408630371094

Token 184: ' la' (ID: 557)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004943289794027805
    2. ' ' → logprob: -5.379943370819092
    3. ' la' → logprob: -8.754942893981934
    4. ' puissance' → logprob: -10.004942893981934
    5. '```' → logprob: -10.629942893981934
    6. ' power' → logprob: -11.004942893981934
    7. 'l' → logprob: -11.504942893981934
    8. 'power' → logprob: -11.629942893981934
    9. 'pow' → logprob: -11.629942893981934
    10. ' trois' → logprob: -11.754942893981934

Token 185: ' puissance' (ID: 63494)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0018477243138477206
    2. 'pu' → logprob: -6.751847743988037
    3. ' puissance' → logprob: -8.376847267150879
    4. 'tro' → logprob: -8.751847267150879
    5. 'power' → logprob: -8.876847267150879
    6. ' ' → logprob: -9.126847267150879
    7. 'pow' → logprob: -11.001847267150879
    8. ' troisième' → logprob: -11.376847267150879
    9. '³' → logprob: -12.251847267150879
    10. '```' → logprob: -12.876847267150879

Token 186: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0036469954065978527
    2. ' ' → logprob: -5.6286468505859375
    3. '```' → logprob: -11.003646850585938
    4. 'result' → logprob: -11.128646850585938
    5. ' result' → logprob: -12.378646850585938
    6. ' trois' → logprob: -12.378646850585938
    7. '  ' → logprob: -13.503646850585938
    8. '³' → logprob: -14.003646850585938
    9. '(' → logprob: -14.378646850585938
    10. ' ' → logprob: -14.503646850585938

Token 187: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4140441635390744e-05
    2. ' ' → logprob: -11.625014305114746
    3. '```' → logprob: -12.250014305114746
    4. '`' → logprob: -16.75001335144043
    5. '³' → logprob: -16.87501335144043
    6. ' ' → logprob: -17.25001335144043
    7. '  ' → logprob: -17.62501335144043
    8. '۳' → logprob: -17.87501335144043
    9. '
' → logprob: -18.00001335144043
    10. '' → logprob: -18.25001335144043

Token 188: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0077448016963899136
    2. 'res' → logprob: -6.007744789123535
    3. 'r' → logprob: -6.257744789123535
    4. '**' → logprob: -6.632744789123535
    5. ' result' → logprob: -6.882744789123535
    6. '
' → logprob: -8.507744789123535
    7. ' =' → logprob: -8.757744789123535
    8. '```' → logprob: -9.757744789123535
    9. '  
' → logprob: -9.757744789123535
    10. '_result' → logprob: -9.882744789123535

Token 189: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06646997481584549
    2. 'cube' → logprob: -2.81646990776062
    3. 'cub' → logprob: -5.816470146179199
    4. 'c' → logprob: -7.066470146179199
    5. '**' → logprob: -8.8164701461792
    6. ' result' → logprob: -8.8164701461792
    7. 'res' → logprob: -9.4414701461792
    8. 'power' → logprob: -9.5664701461792
    9. '```' → logprob: -9.6914701461792
    10. ' cube' → logprob: -9.9414701461792

Token 190: ' L' (ID: 451)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5581771731376648
    2. 'cube' → logprob: -0.9331771731376648
    3. 'cub' → logprob: -4.3081769943237305
    4. ' result' → logprob: -4.9331769943237305
    5. ' cube' → logprob: -5.0581769943237305
    6. 'power' → logprob: -5.3081769943237305
    7. 'c' → logprob: -6.5581769943237305
    8. 'pow' → logprob: -8.18317699432373
    9. 'print' → logprob: -8.55817699432373
    10. 'powered' → logprob: -9.18317699432373

Token 191: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0401132106781006
    2. 'result' → logprob: -1.4151132106781006
    3. '**' → logprob: -1.4151132106781006
    4. 'a' → logprob: -3.0401132106781006
    5. ''' → logprob: -3.6651132106781006
    6. '_' → logprob: -3.6651132106781006
    7. '#' → logprob: -4.66511344909668
    8. '_result' → logprob: -4.66511344909668
    9. ' **' → logprob: -4.91511344909668
    10. ' result' → logprob: -4.91511344909668

Token 192: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -0.07981079816818237
    2. 'ér' → logprob: -3.079810857772827
    3. 'é' → logprob: -3.829810857772827
    4. 'er' → logprob: -5.079810619354248
    5. 'ération' → logprob: -7.079810619354248
    6. '#' → logprob: -7.704810619354248
    7. 'èr' → logprob: -7.954810619354248
    8. 'éra' → logprob: -9.079811096191406
    9. 'éro' → logprob: -9.079811096191406
    10. 'érer' → logprob: -9.329811096191406

Token 193: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1798413246870041
    2. ' **' → logprob: -1.8048412799835205
    3. '*' → logprob: -10.554841041564941
    4. ' ' → logprob: -10.929841041564941
    5. '***' → logprob: -11.554841041564941
    6. '_' → logprob: -11.679841041564941
    7. '=' → logprob: -11.804841041564941
    8. ' ' → logprob: -11.929841041564941
    9. ' **)' → logprob: -12.554841041564941
    10. ' *' → logprob: -12.804841041564941

Token 194: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6352682709693909
    2. '3' → logprob: -0.7602682709693909
    3. '<|end|>' → logprob: -6.760268211364746
    4. '2' → logprob: -7.135268211364746
    5. ' ```' → logprob: -8.385268211364746
    6. '```' → logprob: -8.760268211364746
    7. '  ' → logprob: -8.885268211364746
    8. ' ' → logprob: -10.010268211364746
    9. '<|end|>' → logprob: -10.510268211364746
    10. ' **' → logprob: -10.885268211364746

Token 195: ' l' (ID: 305)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.0536775141954422
    2. ' l' → logprob: -3.678677558898926
    3. ' un' → logprob: -4.553677558898926
    4. ' utilisée' → logprob: -5.303677558898926
    5. ' ' → logprob: -5.678677558898926
    6. ' used' → logprob: -6.303677558898926
    7. '**' → logprob: -6.553677558898926
    8. 'l' → logprob: -7.428677558898926
    9. ' **' → logprob: -7.678677558898926
    10. '3' → logprob: -8.053677558898926

Token 196: ''op' (ID: 70747)
  Prédit: ''op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''op' → logprob: -0.20983299612998962
    2. ''ex' → logprob: -1.834833025932312
    3. ''' → logprob: -3.9598329067230225
    4. '’op' → logprob: -5.709833145141602
    5. ''é' → logprob: -6.459833145141602
    6. '**' → logprob: -7.209833145141602
    7. 'ex' → logprob: -7.209833145141602
    8. '<|end|>' → logprob: -7.209833145141602
    9. 'e' → logprob: -7.459833145141602
    10. ''exp' → logprob: -7.834833145141602

Token 197: 'érateur' (ID: 108528)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7215352654457092
    2. 'érateur' → logprob: -0.7215352654457092
    3. 'ér' → logprob: -4.4715352058410645
    4. 'éra' → logprob: -4.7215352058410645
    5. 'er' → logprob: -5.9715352058410645
    6. 'é' → logprob: -6.3465352058410645
    7. 'éré' → logprob: -7.0965352058410645
    8. 'ération' → logprob: -7.5965352058410645
    9. 'ért' → logprob: -8.096535682678223
    10. 'érer' → logprob: -8.596535682678223

Token 198: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0500587560236454
    2. 'd' → logprob: -3.8000588417053223
    3. '**' → logprob: -4.050058841705322
    4. ' de' → logprob: -5.425058841705322
    5. ' exponent' → logprob: -5.925058841705322
    6. ' **' → logprob: -7.425058841705322
    7. 'de' → logprob: -8.050058364868164
    8. ' ' → logprob: -8.300058364868164
    9. 'ex' → logprob: -9.050058364868164
    10. ' puissance' → logprob: -9.050058364868164

Token 199: ' puissance' (ID: 63494)
  Prédit: ' puissance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puissance' → logprob: -0.009315777570009232
    2. 'ex' → logprob: -5.6343159675598145
    3. 'pu' → logprob: -5.8843159675598145
    4. ' exponent' → logprob: -7.0093159675598145
    5. ' puiss' → logprob: -7.2593159675598145
    6. '**' → logprob: -7.2593159675598145
    7. ' l' → logprob: -8.134315490722656
    8. '```' → logprob: -8.884315490722656
    9. 'l' → logprob: -10.259315490722656
    10. ' ' → logprob: -10.509315490722656

Token 200: ' en' (ID: 469)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.040388453751802444
    2. ' result' → logprob: -3.290388345718384
    3. 'res' → logprob: -7.040388584136963
    4. 'cube' → logprob: -7.290388584136963
    5. ' cube' → logprob: -8.290388107299805
    6. ' resultat' → logprob: -8.540388107299805
    7. '
' → logprob: -9.790388107299805
    8. 'cub' → logprob: -10.040388107299805
    9. 'final' → logprob: -10.165388107299805
    10. ' résultat' → logprob: -10.290388107299805

Token 201: ' Python' (ID: 26534)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.09174485504627228
    2. ' Python' → logprob: -2.716744899749756
    3. 'python' → logprob: -3.841744899749756
    4. ' python' → logprob: -9.341744422912598
    5. 'py' → logprob: -11.091744422912598
    6. 'ython' → logprob: -11.841744422912598
    7. '.python' → logprob: -13.216744422912598
    8. '_python' → logprob: -13.216744422912598
    9. ' ' → logprob: -14.591744422912598
    10. '.py' → logprob: -14.591744422912598

Token 202: '
' (ID: 198)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.38779351115226746
    2. 'result' → logprob: -1.2627935409545898
    3. ' cube' → logprob: -4.01279354095459
    4. 'cub' → logprob: -4.51279354095459
    5. 'power' → logprob: -5.51279354095459
    6. ' result' → logprob: -5.76279354095459
    7. 'final' → logprob: -7.01279354095459
    8. 'c' → logprob: -7.51279354095459
    9. 'value' → logprob: -8.26279354095459
    10. 'answer' → logprob: -9.26279354095459

Token 203: 'final' (ID: 17196)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.10069561004638672
    2. 'result' → logprob: -2.4756956100463867
    3. 'cub' → logprob: -4.725695610046387
    4. 'power' → logprob: -6.975695610046387
    5. ' cube' → logprob: -7.100695610046387
    6. 'print' → logprob: -7.475695610046387
    7. 'c' → logprob: -8.600695610046387
    8. 'final' → logprob: -9.100695610046387
    9. 'output' → logprob: -10.350695610046387
    10. 'answer' → logprob: -10.350695610046387

Token 204: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.021150287240743637
    2. '_' → logprob: -4.2711501121521
    3. ' =' → logprob: -5.5211501121521
    4. 'result' → logprob: -6.0211501121521
    5. '=' → logprob: -8.396150588989258
    6. '_value' → logprob: -9.146150588989258
    7. ' result' → logprob: -9.521150588989258
    8. ' _' → logprob: -10.271150588989258
    9. '=result' → logprob: -10.521150588989258
    10. '_results' → logprob: -11.396150588989258

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165983535349369
    2. '=' → logprob: -4.264165878295898
    3. ' ' → logprob: -13.514165878295898
    4. 's' → logprob: -13.889165878295898
    5. ' ' → logprob: -16.1391658782959
    6. '_' → logprob: -17.7641658782959
    7. '  ' → logprob: -17.7641658782959
    8. '=result' → logprob: -17.7641658782959
    9. ')' → logprob: -18.1391658782959
    10. ' =
' → logprob: -18.2641658782959

Token 206: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1602243334054947
    2. ' result' → logprob: -1.9102243185043335
    3. '(result' → logprob: -15.285223960876465
    4. ' ' → logprob: -18.41022491455078
    5. '	result' → logprob: -18.91022491455078
    6. ' ' → logprob: -18.91022491455078
    7. 'r' → logprob: -19.53522491455078
    8. ' resultat' → logprob: -19.78522491455078
    9. 'Result' → logprob: -20.03522491455078
    10. 'final' → logprob: -20.16022491455078

Token 207: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5759397745132446
    2. ' **' → logprob: -0.8259397745132446
    3. ' *' → logprob: -15.825940132141113
    4. ' ' → logprob: -15.950940132141113
    5. '*' → logprob: -16.200939178466797
    6. ' **
' → logprob: -17.950939178466797
    7. ' ' → logprob: -18.200939178466797
    8. '**
' → logprob: -19.200939178466797
    9. '```' → logprob: -19.700939178466797
    10. '**

' → logprob: -19.825939178466797

Token 208: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '  ' → logprob: -20.750001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '```' → logprob: -20.875001907348633
    6. '۳' → logprob: -21.250001907348633
    7. '３' → logprob: -22.250001907348633
    8. ' ' → logprob: -22.750001907348633
    9. '³' → logprob: -23.000001907348633
    10. '٣' → logprob: -23.000001907348633

Token 209: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -20.0
    4. '   ' → logprob: -20.625
    5. '۳' → logprob: -21.0
    6. '  ' → logprob: -21.875
    7. '٣' → logprob: -22.125
    8. '３' → logprob: -22.125
    9. '³' → logprob: -22.625
    10. '' → logprob: -23.0

Token 210: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002092922804877162
    2. '<|end|>' → logprob: -6.8770928382873535
    3. '
' → logprob: -7.3770928382873535
    4. '#' → logprob: -8.127093315124512
    5. '#print' → logprob: -10.127093315124512
    6. ' print' → logprob: -10.127093315124512
    7. ')' → logprob: -10.127093315124512
    8. '```' → logprob: -12.127093315124512
    9. '(print' → logprob: -12.752093315124512
    10. '  
' → logprob: -12.877093315124512

Token 211: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.054048363119363785
    2. '
' → logprob: -3.3040482997894287
    3. '<|end|>' → logprob: -4.429048538208008
    4. '#' → logprob: -6.304048538208008
    5. '\n' → logprob: -6.679048538208008
    6. ')' → logprob: -8.429048538208008
    7. '```' → logprob: -8.804048538208008
    8. ' print' → logprob: -9.304048538208008
    9. 'n' → logprob: -9.429048538208008
    10. '#print' → logprob: -9.554048538208008

Token 212: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.856408536899835e-05
    2. ' print' → logprob: -10.875028610229492
    3. '#' → logprob: -12.500028610229492
    4. '#print' → logprob: -12.875028610229492
    5. 'final' → logprob: -13.125028610229492
    6. '
' → logprob: -15.000028610229492
    7. '```' → logprob: -15.250028610229492
    8. 'pr' → logprob: -15.500028610229492
    9. '(print' → logprob: -16.125028610229492
    10. 'prin' → logprob: -16.375028610229492

Token 213: ' result' (ID: 1534)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3386116623878479
    2. 'n' → logprob: -1.4636116027832031
    3. ' result' → logprob: -3.463611602783203
    4. 'result' → logprob: -4.463611602783203
    5. ' final' → logprob: -4.838611602783203
    6. 'final' → logprob: -5.463611602783203
    7. ' ' → logprob: -8.213611602783203
    8. ' ' → logprob: -8.713611602783203
    9. '9' → logprob: -9.463611602783203
    10. '3' → logprob: -9.463611602783203

Token 214: ' vaut' (ID: 83004)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.44221532344818115
    2. ' vaut' → logprob: -1.1922153234481812
    3. ' est' → logprob: -3.9422154426574707
    4. ' ' → logprob: -4.317215442657471
    5. '==' → logprob: -4.442215442657471
    6. ' =' → logprob: -5.317215442657471
    7. '=' → logprob: -6.192215442657471
    8. ' #' → logprob: -7.942215442657471
    9. ' s' → logprob: -8.317214965820312
    10. ' a' → logprob: -8.442214965820312

Token 215: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14274191856384277
    2. '3' → logprob: -2.0177419185638428
    3. '9' → logprob: -9.767742156982422
    4. ' ' → logprob: -13.142742156982422
    5. '  ' → logprob: -13.267742156982422
    6. '0' → logprob: -13.392742156982422
    7. '6' → logprob: -13.642742156982422
    8. '1' → logprob: -14.017742156982422
    9. '4' → logprob: -14.142742156982422
    10. '2' → logprob: -15.142742156982422

Token 216: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0020221394952386618
    2. ' ' → logprob: -6.2520222663879395
    3. '9' → logprob: -10.252021789550781
    4. '27' → logprob: -10.502021789550781
    5. '2' → logprob: -11.252021789550781
    6. '1' → logprob: -12.252021789550781
    7. '0' → logprob: -12.377021789550781
    8. '4' → logprob: -12.627021789550781
    9. '  ' → logprob: -13.814521789550781
    10. '10' → logprob: -13.877021789550781

Token 217: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0720619261264801
    2. ',' → logprob: -2.9470620155334473
    3. '0' → logprob: -5.447062015533447
    4. ' ,' → logprob: -5.447062015533447
    5. ' .' → logprob: -5.822062015533447
    6. ' ' → logprob: -6.322062015533447
    7. '  ' → logprob: -6.447062015533447
    8. '<|end|>' → logprob: -6.947062015533447
    9. '3' → logprob: -8.697061538696289
    10. '6' → logprob: -9.072061538696289

Token 218: ' final' (ID: 1721)
  Prédit: ' final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' final' → logprob: -0.6156131029129028
    2. ' print' → logprob: -1.4906131029129028
    3. ' alors' → logprob: -1.7406131029129028
    4. ' ' → logprob: -3.4906129837036133
    5. 'final' → logprob: -4.490612983703613
    6. ' #' → logprob: -4.615612983703613
    7. 'print' → logprob: -6.240612983703613
    8. ' la' → logprob: -6.615612983703613
    9. ' ' → logprob: -6.990612983703613
    10. ' n' → logprob: -7.490612983703613

Token 219: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.009899163618683815
    2. '_' → logprob: -4.884899139404297
    3. ' _' → logprob: -6.259899139404297
    4. 'result' → logprob: -8.134899139404297
    5. ' result' → logprob: -10.384899139404297
    6. '_value' → logprob: -11.884899139404297
    7. '_results' → logprob: -11.884899139404297
    8. '_res' → logprob: -11.884899139404297
    9. ' ' → logprob: -12.134899139404297
    10. 'e' → logprob: -12.134899139404297

Token 220: ' va' (ID: 3423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9043868184089661
    2. '<|end|>' → logprob: -1.9043867588043213
    3. ' sera' → logprob: -2.0293867588043213
    4. '#' → logprob: -2.1543867588043213
    5. ' #' → logprob: -2.6543867588043213
    6. ' =' → logprob: -3.0293867588043213
    7. ' vaut' → logprob: -3.5293867588043213
    8. ' est' → logprob: -4.2793869972229
    9. ' ==' → logprob: -5.2793869972229
    10. '=' → logprob: -5.2793869972229

Token 221: 'ud' (ID: 527)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9292755722999573
    2. ' être' → logprob: -1.4292755126953125
    3. ' val' → logprob: -1.8042755126953125
    4. ' égal' → logprob: -2.4292755126953125
    5. ' =' → logprob: -3.0542755126953125
    6. '3' → logprob: -3.3042755126953125
    7. '  ' → logprob: -5.3042755126953125
    8. ' devenir' → logprob: -5.6792755126953125
    9. ' ég' → logprob: -6.1792755126953125
    10. '=' → logprob: -6.1792755126953125

Token 222: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.13490651547908783
    2. 'oir' → logprob: -2.509906530380249
    3. '3' → logprob: -3.634906530380249
    4. ' ' → logprob: -4.75990629196167
    5. 'ir' → logprob: -5.38490629196167
    6. 're' → logprob: -6.63490629196167
    7. 'r' → logprob: -7.38490629196167
    8. '   ' → logprob: -7.50990629196167
    9. 'er' → logprob: -7.50990629196167
    10. '9' → logprob: -7.75990629196167

Token 223: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6931636333465576
    2. '27' → logprob: -0.6931636333465576
    3. '81' → logprob: -12.193163871765137
    4. '3' → logprob: -12.318163871765137
    5. '```' → logprob: -12.943163871765137
    6. '  ' → logprob: -13.568163871765137
    7. ' ' → logprob: -13.693163871765137
    8. '   ' → logprob: -14.693163871765137
    9. '9' → logprob: -15.380663871765137
    10. '=' → logprob: -15.880663871765137

Token 224: '27' (ID: 2092)
  Prédit: '27'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -0.009763529524207115
    2. ' ' → logprob: -4.634763717651367
    3. '3' → logprob: -12.259763717651367
    4. '```' → logprob: -14.134763717651367
    5. '81' → logprob: -14.384763717651367
    6. '  ' → logprob: -14.509763717651367
    7. '   ' → logprob: -14.634763717651367
    8. ' ' → logprob: -16.384763717651367
    9. '=' → logprob: -16.947263717651367
    10. '
' → logprob: -17.134763717651367

Token 225: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009808859322220087
    2. '#' → logprob: -7.250980854034424
    3. '<|end|>' → logprob: -8.750981330871582
    4. ' print' → logprob: -10.250981330871582
    5. ')' → logprob: -10.375981330871582
    6. '#print' → logprob: -10.750981330871582
    7. '
' → logprob: -11.375981330871582
    8. '(print' → logprob: -12.750981330871582
    9. '```' → logprob: -12.875981330871582
    10. '.' → logprob: -13.125981330871582

Token 226: 'car' (ID: 6830)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011716793291270733
    2. '3' → logprob: -5.136716842651367
    3. 'float' → logprob: -5.761716842651367
    4. ' float' → logprob: -6.761716842651367
    5. ' .' → logprob: -7.886716842651367
    6. ' ' → logprob: -8.011716842651367
    7. ')' → logprob: -8.011716842651367
    8. ' un' → logprob: -9.261716842651367
    9. '(float' → logprob: -9.511716842651367
    10. '.float' → logprob: -10.136716842651367

Token 227: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.47420263290405273
    2. ' ' → logprob: -0.9742026329040527
    3. ' result' → logprob: -10.099203109741211
    4. '  ' → logprob: -10.724203109741211
    5. ' ' → logprob: -11.099203109741211
    6. '   ' → logprob: -11.474203109741211
    7. ' (' → logprob: -11.474203109741211
    8. '
' → logprob: -11.849203109741211
    9. 'result' → logprob: -12.224203109741211
    10. '    ' → logprob: -12.349203109741211

Token 228: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.009902583435177803
    2. ' ' → logprob: -4.634902477264404
    3. ' result' → logprob: -9.634902954101562
    4. 'result' → logprob: -9.884902954101562
    5. '   ' → logprob: -11.759902954101562
    6. 'final' → logprob: -12.384902954101562
    7. ' final' → logprob: -12.634902954101562
    8. '27' → logprob: -12.759902954101562
    9. ' (' → logprob: -12.884902954101562
    10. '  ' → logprob: -12.884902954101562

Token 229: ' ×' (ID: 33839)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.48635247349739075
    2. '**' → logprob: -0.9863524436950684
    3. '.' → logprob: -5.486352443695068
    4. ' *' → logprob: -5.736352443695068
    5. ')' → logprob: -6.361352443695068
    6. ' ' → logprob: -6.986352443695068
    7. '*' → logprob: -7.236352443695068
    8. ')**' → logprob: -7.611352443695068
    9. '3' → logprob: -7.736352443695068
    10. ' ' → logprob: -8.486352920532227

Token 230: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003764093853533268
    2. ' ' → logprob: -5.6287641525268555
    3. 'result' → logprob: -9.003764152526855
    4. ' result' → logprob: -11.128764152526855
    5. '   ' → logprob: -11.753764152526855
    6. '
' → logprob: -12.378764152526855
    7. '  ' → logprob: -12.378764152526855
    8. 'final' → logprob: -12.628764152526855
    9. '```' → logprob: -12.878764152526855
    10. ' ' → logprob: -13.753764152526855

Token 231: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004001641063950956
    2. ' ' → logprob: -7.875400066375732
    3. 'result' → logprob: -11.12540054321289
    4. '27' → logprob: -13.87540054321289
    5. '
' → logprob: -14.00040054321289
    6. ' result' → logprob: -14.37540054321289
    7. ' ' → logprob: -14.50040054321289
    8. '   ' → logprob: -14.62540054321289
    9. '  ' → logprob: -14.75040054321289
    10. '```' → logprob: -14.75040054321289

Token 232: ' ×' (ID: 33839)
  Prédit: ' ×'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ×' → logprob: -0.05000625550746918
    2. '×' → logprob: -3.425006151199341
    3. ' *' → logprob: -4.92500638961792
    4. '*' → logprob: -5.42500638961792
    5. ' ' → logprob: -5.55000638961792
    6. ' ' → logprob: -8.175005912780762
    7. '**' → logprob: -8.925005912780762
    8. ' **' → logprob: -9.550005912780762
    9. ')' → logprob: -10.175005912780762
    10. 'times' → logprob: -10.550005912780762

Token 233: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010330495424568653
    2. ' ' → logprob: -6.876032829284668
    3. 'result' → logprob: -15.626032829284668
    4. '   ' → logprob: -16.876033782958984
    5. '  ' → logprob: -17.001033782958984
    6. '
' → logprob: -17.251033782958984
    7. ' ' → logprob: -17.501033782958984
    8. ' result' → logprob: -17.751033782958984
    9. '```' → logprob: -18.376033782958984
    10. '³' → logprob: -19.001033782958984

Token 234: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '33' → logprob: -16.625028610229492
    4. 'result' → logprob: -16.750028610229492
    5. '27' → logprob: -17.000028610229492
    6. '³' → logprob: -17.250028610229492
    7. '  ' → logprob: -17.750028610229492
    8. '۳' → logprob: -18.250028610229492
    9. 'final' → logprob: -18.250028610229492
    10. ')' → logprob: -18.250028610229492

Token 235: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004934602184221148
    2. ' )' → logprob: -8.000493049621582
    3. '#' → logprob: -9.625493049621582
    4. ').' → logprob: -10.375493049621582
    5. ')
' → logprob: -10.875493049621582
    6. '`)' → logprob: -12.125493049621582
    7. ')

' → logprob: -12.500493049621582
    8. '')' → logprob: -12.625493049621582
    9. ')**' → logprob: -12.625493049621582
    10. ')#' → logprob: -12.625493049621582

Token 236: ' ' (ID: 220)
  Prédit: '27'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -0.008674138225615025
    2. ' ' → logprob: -4.758674144744873
    3. '3' → logprob: -9.883673667907715
    4. ' final' → logprob: -12.633673667907715
    5. 'final' → logprob: -12.883673667907715
    6. '9' → logprob: -13.758673667907715
    7. '  ' → logprob: -14.883673667907715
    8. '29' → logprob: -15.008673667907715
    9. '   ' → logprob: -15.258673667907715
    10. '28' → logprob: -15.633673667907715

Token 237: '27' (ID: 2092)
  Prédit: '27'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -4.47757811343763e-05
    2. '3' → logprob: -10.375044822692871
    3. ' ' → logprob: -11.250044822692871
    4. '```' → logprob: -14.875044822692871
    5. 'final' → logprob: -17.125043869018555
    6. '   ' → logprob: -17.375043869018555
    7. ')' → logprob: -18.125043869018555
    8. '`' → logprob: -18.500043869018555
    9. '  ' → logprob: -18.500043869018555
    10. '``' → logprob: -18.625043869018555

Token 238: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012892624363303185
    2. ' )' → logprob: -9.375128746032715
    3. ')
' → logprob: -11.000128746032715
    4. '#' → logprob: -12.125128746032715
    5. ')**' → logprob: -12.625128746032715
    6. '`)' → logprob: -12.750128746032715
    7. ')#' → logprob: -12.875128746032715
    8. ')

' → logprob: -13.000128746032715
    9. '))' → logprob: -13.500128746032715
    10. '')' → logprob: -13.500128746032715

Token 239: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '#' → logprob: -15.375
    3. '#print' → logprob: -15.875
    4. ' print' → logprob: -17.125
    5. 'pr' → logprob: -17.875
    6. 'prin' → logprob: -18.25
    7. '```' → logprob: -18.75
    8. 'p' → logprob: -18.75
    9. 'final' → logprob: -19.5
    10. 'pri' → logprob: -19.75

Token 240: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '#print' → logprob: -16.375
    3. 'prin' → logprob: -16.75
    4. '#' → logprob: -16.875
    5. ' print' → logprob: -17.125
    6. 'pr' → logprob: -18.875
    7. '```' → logprob: -19.875
    8. 'Print' → logprob: -20.25
    9. 'pri' → logprob: -21.25
    10. '
' → logprob: -21.5

Token 241: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0034915003925561905
    2. 'icher' → logprob: -5.753491401672363
    3. '#' → logprob: -9.003491401672363
    4. 'fic' → logprob: -9.878491401672363
    5. 'ichage' → logprob: -9.878491401672363
    6. 'f' → logprob: -10.003491401672363
    7. 'ich' → logprob: -10.628491401672363
    8. 'ic' → logprob: -11.628491401672363
    9. 'print' → logprob: -12.753491401672363
    10. '   ' → logprob: -13.003491401672363

Token 242: ' le' (ID: 505)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.008216077461838722
    2. '(' → logprob: -5.00821590423584
    3. 'final' → logprob: -6.88321590423584
    4. '(print' → logprob: -8.38321590423584
    5. 'print' → logprob: -8.50821590423584
    6. '(f' → logprob: -10.88321590423584
    7. '(fin' → logprob: -11.13321590423584
    8. '(int' → logprob: -12.75821590423584
    9. '()' → logprob: -12.75821590423584
    10. ' (' → logprob: -13.38321590423584

Token 243: ' résultat' (ID: 62556)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.2567577660083771
    2. '(final' → logprob: -1.5067577362060547
    3. '(' → logprob: -6.006757736206055
    4. ' final' → logprob: -6.881757736206055
    5. 'result' → logprob: -7.131757736206055
    6. 's' → logprob: -8.881757736206055
    7. ' résultat' → logprob: -9.256757736206055
    8. 'r' → logprob: -9.381757736206055
    9. 'rés' → logprob: -9.381757736206055
    10. 'print' → logprob: -10.631757736206055

Token 244: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '
' → logprob: -17.0
    4. '(print' → logprob: -18.875
    5. '```' → logprob: -20.25
    6. '#print' → logprob: -20.5
    7. 'pr' → logprob: -20.875
    8. '.print' → logprob: -21.125
    9. 'prin' → logprob: -21.25
    10. ')
' → logprob: -22.0

Token 245: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -14.750000953674316
    3. ' print' → logprob: -15.250000953674316
    4. '(print' → logprob: -17.125
    5. '```' → logprob: -18.0
    6. '#print' → logprob: -19.875
    7. ')
' → logprob: -20.5
    8. 'final' → logprob: -20.5
    9. '.print' → logprob: -21.125
    10. '(' → logprob: -21.125

Token 246: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09392072260379791
    2. ' l' → logprob: -2.4689207077026367
    3. 'la' → logprob: -5.718920707702637
    4. 'à' → logprob: -8.093920707702637
    5. 'lac' → logprob: -8.468920707702637
    6. '	l' → logprob: -8.843920707702637
    7. ' ' → logprob: -8.843920707702637
    8. ' ' → logprob: -8.968920707702637
    9. '#' → logprob: -9.093920707702637
    10. 'é' → logprob: -9.343920707702637

Token 247: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2887004017829895
    2. ''écran' → logprob: -1.4137003421783447
    3. 'e' → logprob: -5.163700580596924
    4. 'é' → logprob: -7.038700580596924
    5. '’écran' → logprob: -7.663700580596924
    6. ''utilisateur' → logprob: -8.288700103759766
    7. '#' → logprob: -9.288700103759766
    8. 'print' → logprob: -11.413700103759766
    9. ''''' → logprob: -11.663700103759766
    10. ' écran' → logprob: -11.663700103759766

Token 248: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. '```' → logprob: -20.875
    4. 'prin' → logprob: -21.5
    5. '
' → logprob: -22.0
    6. '.print' → logprob: -22.625
    7. '#print' → logprob: -22.75
    8. '(print' → logprob: -22.875
    9. 'pr' → logprob: -23.25
    10. 'final' → logprob: -23.25

Token 249: ' que' (ID: 661)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06410345435142517
    2. 'l' → logprob: -2.814103364944458
    3. ' utilisateur' → logprob: -7.314103603363037
    4. ' que' → logprob: -8.189103126525879
    5. ' ' → logprob: -8.439103126525879
    6. ' user' → logprob: -8.814103126525879
    7. 'print' → logprob: -8.939103126525879
    8. '_l' → logprob: -9.064103126525879
    9. '_' → logprob: -9.314103126525879
    10. ' test' → logprob: -9.814103126525879

Token 250: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2595157325267792
    2. 'l' → logprob: -1.5095157623291016
    3. 'print' → logprob: -5.134515762329102
    4. ' utilisateur' → logprob: -7.384515762329102
    5. ' user' → logprob: -8.134515762329102
    6. ' print' → logprob: -8.259515762329102
    7. 'final' → logprob: -8.884515762329102
    8. ' ' → logprob: -9.759515762329102
    9. '#' → logprob: -9.884515762329102
    10. 'user' → logprob: -10.009515762329102

Token 251: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0011827271664515138
    2. ' utilisateur' → logprob: -7.376182556152344
    3. 'util' → logprob: -8.376182556152344
    4. '’utilisateur' → logprob: -8.501182556152344
    5. 'a' → logprob: -9.626182556152344
    6. '#' → logprob: -10.876182556152344
    7. 'e' → logprob: -11.251182556152344
    8. ''' → logprob: -11.376182556152344
    9. ''util' → logprob: -12.001182556152344
    10. ''user' → logprob: -12.751182556152344

Token 252: ' puisse' (ID: 77890)
  Prédit: ' puisse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puisse' → logprob: -0.521535336971283
    2. 'p' → logprob: -1.0215353965759277
    3. 'print' → logprob: -4.146535396575928
    4. 'pu' → logprob: -4.646535396575928
    5. 'compr' → logprob: -4.771535396575928
    6. 's' → logprob: -5.771535396575928
    7. '   ' → logprob: -6.021535396575928
    8. '#' → logprob: -6.521535396575928
    9. ' compr' → logprob: -6.771535396575928
    10. 'voit' → logprob: -7.021535396575928

Token 253: ' le' (ID: 505)
  Prédit: 'voir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voir' → logprob: -0.4261087477207184
    2. 'le' → logprob: -1.801108717918396
    3. 'print' → logprob: -2.3011088371276855
    4. ' voir' → logprob: -2.6761088371276855
    5. ' le' → logprob: -4.4261088371276855
    6. ' print' → logprob: -8.176108360290527
    7. 'Voir' → logprob: -8.551108360290527
    8. 'l' → logprob: -8.926108360290527
    9. 'visual' → logprob: -9.176108360290527
    10. '#' → logprob: -9.926108360290527

Token 254: ' voir' (ID: 20611)
  Prédit: 'voir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voir' → logprob: -0.017065001651644707
    2. ' voir' → logprob: -4.142065048217773
    3. 'print' → logprob: -8.267065048217773
    4. 'vo' → logprob: -8.517065048217773
    5. 'visual' → logprob: -8.767065048217773
    6. 'l' → logprob: -9.017065048217773
    7. 'voire' → logprob: -9.017065048217773
    8. 'Voir' → logprob: -9.392065048217773
    9. 'voit' → logprob: -10.017065048217773
    10. '#' → logprob: -11.517065048217773

Token 255: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. '```' → logprob: -21.125
    4. '
' → logprob: -22.75
    5. 'prin' → logprob: -22.875
    6. '#print' → logprob: -23.125
    7. 'pr' → logprob: -23.625
    8. '.print' → logprob: -24.125
    9. '(print' → logprob: -25.375
    10. 'Print' → logprob: -25.5

Token 256: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.0
    3. '```' → logprob: -22.375
    4. '#print' → logprob: -22.875
    5. 'prin' → logprob: -23.0
    6. 'pr' → logprob: -23.75
    7. 'Print' → logprob: -25.0
    8. '
' → logprob: -25.125
    9. '.print' → logprob: -25.5
    10. 'pri' → logprob: -26.25

Token 257: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.625
    3. 'prin' → logprob: -19.0
    4. 'pr' → logprob: -19.375
    5. '```' → logprob: -19.75
    6. '#print' → logprob: -20.5
    7. '
' → logprob: -21.375
    8. 'p' → logprob: -21.375
    9. 'pri' → logprob: -21.5
    10. '#' → logprob: -22.625

Token 258: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. 'prin' → logprob: -17.000001907348633
    4. 'pr' → logprob: -17.125001907348633
    5. '#print' → logprob: -18.250001907348633
    6. '#' → logprob: -19.500001907348633
    7. 'final' → logprob: -19.625001907348633
    8. 'p' → logprob: -19.750001907348633
    9. '```' → logprob: -21.250001907348633
    10. 'pri' → logprob: -21.500001907348633

Token 259: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029750484973192215
    2. ' print' → logprob: -3.5297505855560303
    3. 'prin' → logprob: -18.40475082397461
    4. 'pr' → logprob: -18.77975082397461
    5. '(print' → logprob: -19.27975082397461
    6. '```' → logprob: -19.40475082397461
    7. ' prin' → logprob: -19.52975082397461
    8. '.print' → logprob: -20.27975082397461
    9. '`' → logprob: -20.65475082397461
    10. '#print' → logprob: -20.90475082397461

Token 260: '()' (ID: 416)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.3512439727783203
    2. '()' → logprob: -1.8512439727783203
    3. '(' → logprob: -1.9762439727783203
    4. '(print' → logprob: -7.60124397277832
    5. '(f' → logprob: -11.35124397277832
    6. 'final' → logprob: -11.60124397277832
    7. '('' → logprob: -12.22624397277832
    8. '("' → logprob: -12.35124397277832
    9. ' (' → logprob: -12.35124397277832
    10. ' ()' → logprob: -12.60124397277832

Token 261: ' affiche' (ID: 127479)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.08573378622531891
    2. '(print' → logprob: -3.0857338905334473
    3. '(' → logprob: -3.3357338905334473
    4. '()' → logprob: -7.460733890533447
    5. '(result' → logprob: -8.835733413696289
    6. 'print' → logprob: -9.335733413696289
    7. 'final' → logprob: -10.585733413696289
    8. '(output' → logprob: -10.710733413696289
    9. ' (' → logprob: -11.335733413696289
    10. '(display' → logprob: -12.960733413696289

Token 262: ' ce' (ID: 2357)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.00041482248343527317
    2. 'final' → logprob: -8.375414848327637
    3. '(' → logprob: -9.000414848327637
    4. '()' → logprob: -9.750414848327637
    5. '(f' → logprob: -13.875414848327637
    6. '(fin' → logprob: -14.625414848327637
    7. ' (' → logprob: -14.875414848327637
    8. '("' → logprob: -15.125414848327637
    9. ' final' → logprob: -15.125414848327637
    10. '("")' → logprob: -16.62541389465332

Token 263: ' qui' (ID: 2780)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.22245927155017853
    2. ' final' → logprob: -2.722459316253662
    3. ' qui' → logprob: -2.972459316253662
    4. ' que' → logprob: -3.222459316253662
    5. 'qui' → logprob: -3.347459316253662
    6. 'que' → logprob: -5.347459316253662
    7. 'qu' → logprob: -6.972459316253662
    8. ' qu' → logprob: -7.347459316253662
    9. 'la' → logprob: -8.472458839416504
    10. '(final' → logprob: -8.847458839416504

Token 264: ' est' (ID: 893)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5197044610977173
    2. '(final' → logprob: -1.1447044610977173
    3. 'final' → logprob: -2.6447043418884277
    4. 'est' → logprob: -5.394704341888428
    5. 'su' → logprob: -5.769704341888428
    6. '()' → logprob: -6.269704341888428
    7. 'a' → logprob: -6.644704341888428
    8. 's' → logprob: -7.144704341888428
    9. '(f' → logprob: -7.769704341888428
    10. ' final' → logprob: -7.894704341888428

Token 265: ' passé' (ID: 40520)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.2152644693851471
    2. 'pass' → logprob: -2.7152645587921143
    3. 'entre' → logprob: -2.9652645587921143
    4. 'dans' → logprob: -2.9652645587921143
    5. ' final' → logprob: -4.340264320373535
    6. 'à' → logprob: -6.090264320373535
    7. ' passé' → logprob: -6.465264320373535
    8. 'd' → logprob: -6.715264320373535
    9. 'mis' → logprob: -7.215264320373535
    10. 'f' → logprob: -7.465264320373535

Token 266: ' entre' (ID: 3853)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.38989728689193726
    2. '(' → logprob: -1.139897346496582
    3. '(print' → logprob: -6.139897346496582
    4. '(
' → logprob: -7.514897346496582
    5. '()' → logprob: -9.889897346496582
    6. 'final' → logprob: -10.139897346496582
    7. 'print' → logprob: -10.264897346496582
    8. 'dans' → logprob: -10.514897346496582
    9. '(

' → logprob: -10.889897346496582
    10. 'au' → logprob: -10.889897346496582

Token 267: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.011397935450077057
    2. '()' → logprob: -4.511397838592529
    3. 'les' → logprob: -8.761398315429688
    4. '(' → logprob: -9.386398315429688
    5. '(parent' → logprob: -9.511398315429688
    6. 'par' → logprob: -11.261398315429688
    7. 'print' → logprob: -12.261398315429688
    8. '```' → logprob: -12.511398315429688
    9. 'Parent' → logprob: -12.636398315429688
    10. 'paren' → logprob: -13.011398315429688

Token 268: 'h' (ID: 71)
  Prédit: 'èses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'èses' → logprob: -0.001189510803669691
    2. 'eses' → logprob: -7.001189708709717
    3. 'es' → logprob: -8.751189231872559
    4. 'ès' → logprob: -9.876189231872559
    5. 'èse' → logprob: -10.376189231872559
    6. 'ses' → logprob: -11.501189231872559
    7. 'heses' → logprob: -12.001189231872559
    8. '`' → logprob: -12.126189231872559
    9. 'è' → logprob: -12.376189231872559
    10. 'ères' → logprob: -12.501189231872559

Token 269: 'èses' (ID: 188395)
  Prédit: 'èses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èses' → logprob: -0.0011539128609001637
    2. 'eses' → logprob: -7.626153945922852
    3. 'es' → logprob: -7.876153945922852
    4. 'ès' → logprob: -9.001153945922852
    5. 'ses' → logprob: -9.126153945922852
    6. 'èse' → logprob: -10.751153945922852
    7. 'ères' → logprob: -10.876153945922852
    8. 'è' → logprob: -11.876153945922852
    9. '`' → logprob: -13.376153945922852
    10. '```' → logprob: -14.626153945922852

Token 270: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000363590574124828
    2. '(print' → logprob: -8.37536334991455
    3. 'final' → logprob: -9.00036334991455
    4. '(final' → logprob: -11.62536334991455
    5. ' print' → logprob: -14.87536334991455
    6. '(' → logprob: -16.000364303588867
    7. '```' → logprob: -16.250364303588867
    8. '#print' → logprob: -17.375364303588867
    9. '(
' → logprob: -18.375364303588867
    10. 'Print' → logprob: -18.375364303588867

Token 271: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. '```' → logprob: -18.25
    4. '(print' → logprob: -20.125
    5. 'final' → logprob: -20.25
    6. 'prin' → logprob: -21.5
    7. 'pr' → logprob: -21.625
    8. '#print' → logprob: -22.0
    9. '.print' → logprob: -22.875
    10. '
' → logprob: -23.25

Token 272: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.07889220863580704
    2. '(' → logprob: -2.578892230987549
    3. ' (' → logprob: -14.20389175415039
    4. '(f' → logprob: -14.45389175415039
    5. '(
' → logprob: -14.57889175415039
    6. '(fin' → logprob: -15.07889175415039
    7. '()' → logprob: -15.70389175415039
    8. 'final' → logprob: -16.07889175415039
    9. '(print' → logprob: -16.32889175415039
    10. '(F' → logprob: -17.07889175415039

Token 273: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.5928495486150496e-05
    2. 'result' → logprob: -12.500016212463379
    3. '_final' → logprob: -12.500016212463379
    4. '_res' → logprob: -13.000016212463379
    5. '_' → logprob: -13.125016212463379
    6. ')' → logprob: -13.250016212463379
    7. '_results' → logprob: -13.500016212463379
    8. ' _' → logprob: -14.750016212463379
    9. ')_' → logprob: -15.000016212463379
    10. '_RESULT' → logprob: -16.000015258789062

Token 274: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -16.875
    4. ')`' → logprob: -17.875
    5. '()' → logprob: -18.375
    6. ')
' → logprob: -18.5
    7. ')#' → logprob: -19.5
    8. '())' → logprob: -19.75
    9. ')}' → logprob: -20.75
    10. '）' → logprob: -20.75

Token 275: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' Im' (ID: 3133)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.047667838633060455
    2. 'prim' → logprob: -3.2976677417755127
    3. 'p' → logprob: -5.547667980194092
    4. 'primer' → logprob: -5.672667980194092
    5. 'port' → logprob: -6.922667980194092
    6. 'porte' → logprob: -7.422667980194092
    7. 'pression' → logprob: -8.047667503356934
    8. 'r' → logprob: -9.797667503356934
    9. 'pr' → logprob: -9.922667503356934
    10. 'm' → logprob: -9.922667503356934

Token 279: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1856304407119751
    2. '(' → logprob: -1.810630440711975
    3. '(final' → logprob: -5.4356303215026855
    4. '("")' → logprob: -6.8106303215026855
    5. '(
' → logprob: -9.060630798339844
    6. ')' → logprob: -10.060630798339844
    7. 'final' → logprob: -10.185630798339844
    8. '()
' → logprob: -10.185630798339844
    9. '\n' → logprob: -10.560630798339844
    10. '()\' → logprob: -10.685630798339844

Token 280: ' valeur' (ID: 41664)
  Prédit: ' résultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.8053702116012573
    2. ' valeur' → logprob: -1.6803702116012573
    3. 'rés' → logprob: -2.680370330810547
    4. 'result' → logprob: -2.805370330810547
    5. 'val' → logprob: -2.930370330810547
    6. 'final' → logprob: -3.055370330810547
    7. ' cube' → logprob: -3.305370330810547
    8. ' result' → logprob: -3.430370330810547
    9. 'cube' → logprob: -3.555370330810547
    10. ' final' → logprob: -4.305370330810547

Token 281: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3683834969997406
    2. ')' → logprob: -2.1183834075927734
    3. '(' → logprob: -2.4933834075927734
    4. '.' → logprob: -3.8683834075927734
    5. '()' → logprob: -3.8683834075927734
    6. '  ' → logprob: -4.368383407592773
    7. 'final' → logprob: -4.868383407592773
    8. ' (' → logprob: -5.118383407592773
    9. ' )' → logprob: -5.118383407592773
    10. '<|end|>' → logprob: -5.118383407592773

Token 282: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.008621666580438614
    2. ' final' → logprob: -4.758621692657471
    3. 'result' → logprob: -12.258621215820312
    4. '(final' → logprob: -13.008621215820312
    5. ' result' → logprob: -17.133621215820312
    6. ' ' → logprob: -17.508621215820312
    7. '_final' → logprob: -18.383621215820312
    8. 'f' → logprob: -18.758621215820312
    9. '	final' → logprob: -18.883621215820312
    10. 'Final' → logprob: -18.883621215820312

Token 283: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.007416732143610716
    2. '_final' → logprob: -5.257416725158691
    3. '_' → logprob: -6.257416725158691
    4. ' _' → logprob: -9.132416725158691
    5. 'result' → logprob: -10.007416725158691
    6. '_res' → logprob: -10.132416725158691
    7. '_results' → logprob: -10.257416725158691
    8. 'final' → logprob: -11.382416725158691
    9. 'e' → logprob: -12.382416725158691
    10. '"_' → logprob: -13.007416725158691

Token 284: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.29223671555519104
    2. 'l' → logprob: -2.292236804962158
    3. 'la' → logprob: -2.542236804962158
    4. ' une' → logprob: -2.792236804962158
    5. 'e' → logprob: -6.042236804962158
    6. 'é' → logprob: -6.167236804962158
    7. ' ' → logprob: -6.292236804962158
    8. ' la' → logprob: -6.542236804962158
    9. '\' → logprob: -7.042236804962158
    10. ''une' → logprob: -7.167236804962158

Token 286: ' console' (ID: 3887)
  Prédit: 'console'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'console' → logprob: -0.18802140653133392
    2. 'é' → logprob: -2.438021421432495
    3. ' console' → logprob: -2.938021421432495
    4. ''écran' → logprob: -4.813021183013916
    5. 'e' → logprob: -5.438021183013916
    6. 'ligne' → logprob: -5.563021183013916
    7. 's' → logprob: -5.688021183013916
    8. 'n' → logprob: -6.313021183013916
    9. 'à' → logprob: -6.438021183013916
    10. 'screen' → logprob: -6.688021183013916


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 284
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 72
Tokens correctement prédits (top 10): 181
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 25.35%
Précision (top 10): 63.73%
================================================================================
