================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander une entrée à l'utilisateur pour 'n', qui sera le nombre dont nous allons analyser les chiffres.
# On convertit l'entrée en string (chaîne de caractères) pour pouvoir accéder à ses chiffres individuellement.
n = str(input())

# Demander une entrée à l'utilisateur pour 'p', qui représentera le nombre de chiffres "non zéros" à considérer.
# On convertit cette entrée en un entier avec int(), car on fera des opérations mathématiques dessus.
p = int(input())

# Calculer le nombre total de chiffres dans la chaîne 'n' à l'aide de la fonction len().
# keta contiendra donc la longueur de 'n'.
keta = len(n)

# Initialiser la variable 'Dp' qui sera notre tableau de programmation dynamique (DP).
# C'est une liste 3D (trois dimensions) :
#   Dp[i][j][bound]
#   i : indice du chiffre actuel que nous traitons (0 à keta)
#   j : nombre de chiffres non-zéros utilisés jusqu'ici (0 à keta)
#   bound (0 ou 1) : 
#       1 signifie que l'on est encore "à la limite" de 'n' (c'est-à-dire les chiffres n'ont jamais dépassé n),
#       0 signifie qu'on a déjà pris une valeur plus petite donc on peut choisir n'importe quel chiffre de 0 à 9 librement.
# À chaque niveau, on initialise la valeur à 0, car au départ, il n'existe aucun nombre construit.
Dp = [[[0 for _ in range(2)] for _ in range(keta+1)]for _ in range(keta+1)]

# On initialise le point de départ :
# Dp[0][0][1] = 1 veut dire : il existe exactement 1 façon de ne rien avoir choisi,
# zéro chiffre non-zéro utilisé, et on est (par défaut) à la borne (bound == 1) 
Dp[0][0][1] = 1

# La boucle principale traite chaque chiffre de la gauche vers la droite.
# 'i' : correspond au chiffre sur lequel on se trouve (de 0 jusqu'à keta-1, car range(keta) exclut keta)
for i in range(keta):
    # 'j' : nombre de chiffres non-zéro utilisés jusqu'à présent (de 0 à i inclus)
    for j in range(i+1):
        # On va essayer tous les chiffres possibles (de 0 à 9 inclus) pour cette position.
        for k in range(10):
            # Comme le DP distingue entre les transitions qui sont encore sur la limite de n ou pas,
            # on doit séparer le cas k==0 (on place un 0) du cas k!=0 (on place un chiffre non-zéro)
            if k == 0:
                # Si on place un 0 à cette position :
                # Premier cas : tant qu'on n'a pas dépassé la valeur de n,
                # donc si k < int(n[i]), alors on passe dans zone libre (bound 0)
                if k < int(n[i]):
                    #     - On ajoute tous les cas où on était déjà en zone libre (bound 0)
                    Dp[i+1][j][0] += Dp[i][j][0]
                    #     - On ajoute aussi tous les cas où on était encore à la limite (bound 1)
                    Dp[i+1][j][0] += Dp[i][j][1]
                # Deuxième cas : si k égal au chiffre de n à la position i, on reste sur la "limite"
                elif k == int(n[i]):
                    # On ajoute les façons où on continue à suivre la limite (bound 1)
                    Dp[i+1][j][1] += Dp[i][j][1]
                    # Mais si on était déjà libéré de la borne (bound 0), on continue simplement.
                    Dp[i+1][j][0] += Dp[i][j][0]
                # Troisième cas : k > n[i]; impossible si on est encore sur la borne, mais on peut continuer en bound 0
                else:
                    Dp[i+1][j][0] += Dp[i][j][0]
            else:
                # Si on place un chiffre non-zéro à cette position :
                if k < int(n[i]):
                    # On tombe dans la zone "libre" à partir de maintenant (bound 0)
                    # Pour chaque solution, on incrémente le nombre de chiffres non-zéro utilisés (j+1)
                    Dp[i+1][j+1][0] += Dp[i][j][0]
                    Dp[i+1][j+1][0] += Dp[i][j][1]
                elif k == int(n[i]):
                    # On reste à la borne (bound 1) dans les cas où on était encore lié à la limite ("tight")
                    Dp[i+1][j+1][1] += Dp[i][j][1]
                    # Mais on peut aussi continuer en zone libre (bound 0)
                    Dp[i+1][j+1][0] += Dp[i][j][0]
                else:
                    # k > n[i] : seulement possible en bound 0
                    Dp[i+1][j+1][0] += Dp[i][j][0]

# Après avoir traité tous les chiffres, il ne reste plus qu'à donner la réponse selon la contrainte sur le nombre de chiffres non-zéro.
# Si p, le nombre de chiffres non-zéros à utiliser, est plus grand que le nombre total de chiffres, il ne peut pas y avoir de nombre de ce type.
if p > keta:
    print(0)
else:
    # Sinon, la réponse est la somme des deux états (borne respectée et borne dépassée) pour le dernier chiffre et p chiffres non-zéro
    print(sum(Dp[-1][p]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1562509685754776
    2. ' à' → logprob: -2.6562509536743164
    3. ' =' → logprob: -3.7812509536743164
    4. ' a' → logprob: -5.031250953674316
    5. ' la' → logprob: -5.031250953674316
    6. '_' → logprob: -5.156250953674316
    7. ' de' → logprob: -5.281250953674316
    8. ' une' → logprob: -5.656250953674316
    9. ' un' → logprob: -5.781250953674316
    10. 'à' → logprob: -5.906250953674316

Token 4: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.09066332876682281
    2. 's' → logprob: -3.715663433074951
    3. 'chaine' → logprob: -3.965663433074951
    4. 'val' → logprob: -4.465663433074951
    5. ' ' → logprob: -5.215663433074951
    6. 'input' → logprob: -5.715663433074951
    7. 'nom' → logprob: -5.840663433074951
    8. ' entrée' → logprob: -5.840663433074951
    9. 'entr' → logprob: -5.965663433074951
    10. '#' → logprob: -6.340663433074951

Token 5: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38424065709114075
    2. '```' → logprob: -2.3842406272888184
    3. 'input' → logprob: -2.3842406272888184
    4. '`' → logprob: -3.5092406272888184
    5. 'user' → logprob: -3.5092406272888184
    6. 'i' → logprob: -3.8842406272888184
    7. 's' → logprob: -4.634240627288818
    8. 'x' → logprob: -4.759240627288818
    9. 'e' → logprob: -5.134240627288818
    10. ' ' → logprob: -5.634240627288818

Token 6: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005812536925077438
    2. ' l' → logprob: -5.255812644958496
    3. '	l' → logprob: -8.130812644958496
    4. 'util' → logprob: -9.505812644958496
    5. 'user' → logprob: -10.130812644958496
    6. '­l' → logprob: -10.130812644958496
    7. '```' → logprob: -10.255812644958496
    8. '#' → logprob: -10.630812644958496
    9. ' ' → logprob: -11.005812644958496
    10. ''utilisateur' → logprob: -11.630812644958496

Token 7: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.003573580412194133
    2. ''' → logprob: -6.253573417663574
    3. 'u' → logprob: -7.378573417663574
    4. '’utilisateur' → logprob: -7.378573417663574
    5. ''util' → logprob: -8.628573417663574
    6. 'util' → logprob: -9.753573417663574
    7. ''us' → logprob: -9.753573417663574
    8. ' utilisateur' → logprob: -10.128573417663574
    9. ''user' → logprob: -11.253573417663574
    10. '_util' → logprob: -11.378573417663574

Token 8: ' pour' (ID: 1930)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.05989083647727966
    2. 'input' → logprob: -2.9348907470703125
    3. '```' → logprob: -6.3098907470703125
    4. '`' → logprob: -6.5598907470703125
    5. 'u' → logprob: -7.4348907470703125
    6. 'username' → logprob: -8.309890747070312
    7. 'name' → logprob: -8.809890747070312
    8. 'print' → logprob: -9.184890747070312
    9. 's' → logprob: -9.434890747070312
    10. 'variable' → logprob: -9.809890747070312

Token 9: ' '' (ID: 461)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7557811737060547
    2. 's' → logprob: -0.8807811737060547
    3. ' l' → logprob: -4.005781173706055
    4. 'une' → logprob: -4.130781173706055
    5. 'la' → logprob: -4.255781173706055
    6. 'r' → logprob: -4.630781173706055
    7. 'nom' → logprob: -4.880781173706055
    8. ' la' → logprob: -5.005781173706055
    9. 'contin' → logprob: -5.130781173706055
    10. ' saisir' → logprob: -5.130781173706055

Token 10: 'n' (ID: 77)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.9934978485107422
    2. 'le' → logprob: -1.3684978485107422
    3. 'l' → logprob: -2.243497848510742
    4. 'la' → logprob: -2.368497848510742
    5. 'son' → logprob: -2.993497848510742
    6. 'une' → logprob: -3.618497848510742
    7. 'un' → logprob: -3.618497848510742
    8. 'nombre' → logprob: -4.493497848510742
    9. 's' → logprob: -4.868497848510742
    10. 'username' → logprob: -5.118497848510742

Token 11: '',' (ID: 787)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9424659013748169
    2. '=' → logprob: -1.567465901374817
    3. ' =' → logprob: -2.5674657821655273
    4. ''' → logprob: -2.5674657821655273
    5. '_' → logprob: -2.6924657821655273
    6. ')' → logprob: -2.6924657821655273
    7. ':' → logprob: -3.1924657821655273
    8. 'umber' → logprob: -4.192465782165527
    9. 'e' → logprob: -4.317465782165527
    10. ',' → logprob: -5.067465782165527

Token 12: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004122569225728512
    2. ' n' → logprob: -5.504122734069824
    3. ' =' → logprob: -10.504122734069824
    4. '```' → logprob: -11.629122734069824
    5. 'x' → logprob: -14.254122734069824
    6. 'a' → logprob: -14.254122734069824
    7. '=' → logprob: -14.254122734069824
    8. 'input' → logprob: -14.379122734069824
    9. ' ' → logprob: -14.379122734069824
    10. ' :' → logprob: -14.504122734069824

Token 13: ' sera' (ID: 15511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2736898958683014
    2. 'est' → logprob: -2.6486899852752686
    3. '=' → logprob: -2.8986899852752686
    4. ' sera' → logprob: -3.5236899852752686
    5. 's' → logprob: -4.1486897468566895
    6. ' représente' → logprob: -4.3986897468566895
    7. ' doit' → logprob: -4.5236897468566895
    8. ' est' → logprob: -4.5236897468566895
    9. ' correspond' → logprob: -4.6486897468566895
    10. ' vaut' → logprob: -6.1486897468566895

Token 14: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2506047189235687
    2. ' le' → logprob: -2.2506046295166016
    3. 'la' → logprob: -2.5006046295166016
    4. ' la' → logprob: -4.250604629516602
    5. ' utilisé' → logprob: -5.125604629516602
    6. 'util' → logprob: -5.250604629516602
    7. 'nombre' → logprob: -5.875604629516602
    8. ' utilisée' → logprob: -6.000604629516602
    9. 'une' → logprob: -7.250604629516602
    10. 'l' → logprob: -7.625604629516602

Token 15: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.47534117102622986
    2. 'nombre' → logprob: -0.9753412008285522
    3. 'n' → logprob: -7.475341320037842
    4. ' ' → logprob: -8.100340843200684
    5. ' nom' → logprob: -9.475340843200684
    6. '   ' → logprob: -9.975340843200684
    7. 'Nombre' → logprob: -10.225340843200684
    8. ' ' → logprob: -10.475340843200684
    9. '_nombre' → logprob: -10.475340843200684
    10. ' nombres' → logprob: -10.975340843200684

Token 16: ' dont' (ID: 11562)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2266257256269455
    2. ' ' → logprob: -1.726625680923462
    3. 'n' → logprob: -4.976625919342041
    4. '=' → logprob: -5.101625919342041
    5. ' =' → logprob: -5.101625919342041
    6. ')' → logprob: -6.601625919342041
    7. ''' → logprob: -7.101625919342041
    8. ' )' → logprob: -7.226625919342041
    9. ' n' → logprob: -7.851625919342041
    10. '#' → logprob: -7.976625919342041

Token 17: ' nous' (ID: 6176)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9263670444488525
    2. 'l' → logprob: -1.9263670444488525
    3. 'on' → logprob: -1.9263670444488525
    4. ''on' → logprob: -2.1763670444488525
    5. 'vous' → logprob: -3.5513670444488525
    6. 'n' → logprob: -3.6763670444488525
    7. 'val' → logprob: -3.9263670444488525
    8. 's' → logprob: -4.051366806030273
    9. '```' → logprob: -4.176366806030273
    10. 'le' → logprob: -4.551366806030273

Token 18: ' allons' (ID: 97647)
  Prédit: ' voulons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voulons' → logprob: -0.6220646500587463
    2. 'v' → logprob: -1.8720645904541016
    3. ' ' → logprob: -1.9970645904541016
    4. ' allons' → logprob: -2.3720645904541016
    5. 'sou' → logprob: -3.4970645904541016
    6. 'voud' → logprob: -4.372064590454102
    7. '_v' → logprob: -5.122064590454102
    8. 'vou' → logprob: -5.122064590454102
    9. 's' → logprob: -5.747064590454102
    10. ' voulez' → logprob: -6.122064590454102

Token 19: ' analyser' (ID: 104487)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.6843866109848022
    2. ' calcul' → logprob: -1.5593866109848022
    3. 'factor' → logprob: -1.6843866109848022
    4. ' ' → logprob: -4.184386730194092
    5. 'é' → logprob: -4.309386730194092
    6. ' calc' → logprob: -4.809386730194092
    7. 'cal' → logprob: -4.934386730194092
    8. ' factor' → logprob: -5.309386730194092
    9. ' factorial' → logprob: -5.309386730194092
    10. 'comp' → logprob: -5.434386730194092

Token 20: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11240199953317642
    2. ':' → logprob: -3.2374019622802734
    3. ' ' → logprob: -4.237401962280273
    4. '```' → logprob: -4.737401962280273
    5. '.' → logprob: -4.862401962280273
    6. ''' → logprob: -4.987401962280273
    7. ' :' → logprob: -5.237401962280273
    8. '_' → logprob: -5.362401962280273
    9. '`' → logprob: -5.737401962280273
    10. 's' → logprob: -5.862401962280273

Token 21: ' chiffres' (ID: 105565)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4717531204223633
    2. 'div' → logprob: -2.2217531204223633
    3. ' occurrences' → logprob: -2.4717531204223633
    4. ' facteurs' → logprob: -3.4717531204223633
    5. '  ' → logprob: -3.9717531204223633
    6. ' lignes' → logprob: -4.471753120422363
    7. ' termes' → logprob: -4.471753120422363
    8. ' divis' → logprob: -4.846753120422363
    9. ' nombres' → logprob: -4.846753120422363
    10. '   ' → logprob: -4.971753120422363

Token 22: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2007883671903983e-05
    2. '```' → logprob: -11.625021934509277
    3. '#' → logprob: -12.500021934509277
    4. ' ' → logprob: -13.000021934509277
    5. ' n' → logprob: -13.625021934509277
    6. '`' → logprob: -13.750021934509277
    7. 'i' → logprob: -14.000021934509277
    8. ',' → logprob: -14.125021934509277
    9. 'x' → logprob: -14.375021934509277
    10. '\n' → logprob: -14.625021934509277

Token 23: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.2729995988775045e-06
    2. '```' → logprob: -12.750006675720215
    3. '#' → logprob: -14.000006675720215
    4. ' ' → logprob: -14.250006675720215
    5. '' → logprob: -15.125006675720215
    6. '\n' → logprob: -15.250006675720215
    7. ',' → logprob: -15.375006675720215
    8. '\' → logprob: -15.500006675720215
    9. '`' → logprob: -15.500006675720215
    10. '
' → logprob: -15.875006675720215

Token 24: ' On' (ID: 2160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011057846248149872
    2. ' n' → logprob: -4.5110578536987305
    3. ' ' → logprob: -12.26105785369873
    4. '#' → logprob: -13.38605785369873
    5. ' 
' → logprob: -13.51105785369873
    6. ' ' → logprob: -14.76105785369873
    7. '```' → logprob: -14.88605785369873
    8. ' #' → logprob: -15.13605785369873
    9. ' 

' → logprob: -15.76105785369873
    10. ' ```' → logprob: -15.88605785369873

Token 25: ' convert' (ID: 8452)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811269462108612
    2. ' n' → logprob: -1.9061269760131836
    3. 'n' → logprob: -2.6561269760131836
    4. '=' → logprob: -3.7811269760131836
    5. ' ' → logprob: -6.406126976013184
    6. 's' → logprob: -7.531126976013184
    7. '_' → logprob: -7.906126976013184
    8. '_n' → logprob: -8.406126976013184
    9. 'def' → logprob: -9.406126976013184
    10. '=n' → logprob: -9.906126976013184

Token 26: 'it' (ID: 278)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0241645574569702
    2. 't' → logprob: -1.2741645574569702
    3. 'i' → logprob: -1.3991645574569702
    4. 'er' → logprob: -2.7741646766662598
    5. 'ir' → logprob: -3.6491646766662598
    6. 'r' → logprob: -4.14916467666626
    7. 'it' → logprob: -5.39916467666626
    8. 'ert' → logprob: -5.64916467666626
    9. 'a' → logprob: -7.27416467666626
    10. '#' → logprob: -7.52416467666626

Token 27: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2699044644832611
    2. ' l' → logprob: -2.519904375076294
    3. ' n' → logprob: -2.519904375076294
    4. ' la' → logprob: -3.644904375076294
    5. ' le' → logprob: -4.019904613494873
    6. '_' → logprob: -4.769904613494873
    7. 'n' → logprob: -4.769904613494873
    8. 'l' → logprob: -5.269904613494873
    9. ' input' → logprob: -5.644904613494873
    10. ' ' → logprob: -6.019904613494873

Token 28: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7187111973762512
    2. 'a' → logprob: -1.0937111377716064
    3. 'e' → logprob: -2.7187111377716064
    4. ''a' → logprob: -3.4687111377716064
    5. ''espace' → logprob: -4.2187113761901855
    6. ''ent' → logprob: -4.4687113761901855
    7. ''entrée' → logprob: -4.7187113761901855
    8. ''utilisateur' → logprob: -4.7187113761901855
    9. ''on' → logprob: -4.9687113761901855
    10. ' '' → logprob: -5.3437113761901855

Token 29: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5504831671714783
    2. 'n' → logprob: -1.425483226776123
    3. ' n' → logprob: -2.425483226776123
    4. ' =' → logprob: -3.550483226776123
    5. '_' → logprob: -3.925483226776123
    6. '(' → logprob: -4.800483226776123
    7. ',' → logprob: -5.050483226776123
    8. '=' → logprob: -5.925483226776123
    9. ' (' → logprob: -5.925483226776123
    10. ':' → logprob: -6.175483226776123

Token 30: ' string' (ID: 1621)
  Prédit: ' entier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entier' → logprob: -1.0198627710342407
    2. ' int' → logprob: -1.1448627710342407
    3. ' ' → logprob: -1.3948627710342407
    4. ' ' → logprob: -3.144862651824951
    5. ' integer' → logprob: -4.519862651824951
    6. ' ent' → logprob: -5.019862651824951
    7. ' un' → logprob: -6.019862651824951
    8. ' an' → logprob: -6.144862651824951
    9. 'int' → logprob: -6.144862651824951
    10. ' nombre' → logprob: -6.269862651824951

Token 31: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010877089807763696
    2. ',' → logprob: -8.50108814239502
    3. '.' → logprob: -8.87608814239502
    4. 's' → logprob: -9.25108814239502
    5. '```' → logprob: -9.25108814239502
    6. ' n' → logprob: -9.37608814239502
    7. ':' → logprob: -9.50108814239502
    8. '\n' → logprob: -9.87608814239502
    9. '#' → logprob: -10.12608814239502
    10. '`' → logprob: -10.25108814239502

Token 32: 'cha' (ID: 3836)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004132661037147045
    2. ' )' → logprob: -6.6291327476501465
    3. ' afin' → logprob: -7.3791327476501465
    4. '')' → logprob: -7.5041327476501465
    5. ' pour' → logprob: -7.6291327476501465
    6. 'pour' → logprob: -8.129132270812988
    7. 'str' → logprob: -8.504132270812988
    8. '")' → logprob: -9.004132270812988
    9. '`)' → logprob: -9.754132270812988
    10. ')n' → logprob: -9.754132270812988

Token 33: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.7534555196762085
    2. 'ne' → logprob: -0.8784555196762085
    3. 'ine' → logprob: -3.128455638885498
    4. 'z' → logprob: -4.128455638885498
    5. 'î' → logprob: -4.503455638885498
    6. '```' → logprob: -4.503455638885498
    7. 'i' → logprob: -5.003455638885498
    8. 'e' → logprob: -5.003455638885498
    9. 'ı' → logprob: -5.628455638885498
    10. 'n' → logprob: -6.253455638885498

Token 34: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4747060537338257
    2. ' de' → logprob: -1.0997060537338257
    3. 'de' → logprob: -3.3497061729431152
    4. '')' → logprob: -5.099706172943115
    5. ' )' → logprob: -6.474706172943115
    6. ' pour' → logprob: -7.349706172943115
    7. ''' → logprob: -7.474706172943115
    8. '")' → logprob: -8.349705696105957
    9. ' afin' → logprob: -8.974705696105957
    10. '"' → logprob: -9.099705696105957

Token 35: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6964526176452637
    2. ' caractères' → logprob: -0.6964526176452637
    3. ' caracteres' → logprob: -6.196452617645264
    4. 'texte' → logprob: -7.696452617645264
    5. ' caract' → logprob: -8.071453094482422
    6. ' caractère' → logprob: -8.446453094482422
    7. ')' → logprob: -9.946453094482422
    8. '#' → logprob: -10.071453094482422
    9. '```' → logprob: -10.196453094482422
    10. 'characters' → logprob: -10.696453094482422

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009612430003471673
    2. '')' → logprob: -8.500961303710938
    3. ' )' → logprob: -8.625961303710938
    4. ')n' → logprob: -8.625961303710938
    5. ').' → logprob: -9.250961303710938
    6. 'n' → logprob: -9.250961303710938
    7. '#' → logprob: -9.875961303710938
    8. ',' → logprob: -10.625961303710938
    9. 's' → logprob: -10.750961303710938
    10. '),' → logprob: -11.250961303710938

Token 37: ' pour' (ID: 1930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00914273876696825
    2. '.' → logprob: -6.009142875671387
    3. ',' → logprob: -6.384142875671387
    4. '```' → logprob: -6.759142875671387
    5. '`' → logprob: -7.009142875671387
    6. '#' → logprob: -7.884142875671387
    7. ' =' → logprob: -8.009142875671387
    8. 'input' → logprob: -8.009142875671387
    9. ')' → logprob: -8.259142875671387
    10. ':' → logprob: -8.384142875671387

Token 38: ' pouvoir' (ID: 27197)
  Prédit: ' pouvoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pouvoir' → logprob: -0.04814053699374199
    2. ' faciliter' → logprob: -4.048140525817871
    3. ' ' → logprob: -4.423140525817871
    4. ' analyser' → logprob: -5.423140525817871
    5. ' permettre' → logprob: -5.423140525817871
    6. ' traiter' → logprob: -6.298140525817871
    7. ' compter' → logprob: -6.673140525817871
    8. ' effectuer' → logprob: -7.173140525817871
    9. ' parcour' → logprob: -7.548140525817871
    10. ' continuer' → logprob: -7.798140525817871

Token 39: ' accéder' (ID: 120555)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -1.0002461671829224
    2. ' traiter' → logprob: -1.5002461671829224
    3. ' it' → logprob: -2.125246047973633
    4. ' manip' → logprob: -2.250246047973633
    5. ' analyser' → logprob: -2.875246047973633
    6. ' iter' → logprob: -3.125246047973633
    7. ' accéder' → logprob: -4.000246047973633
    8. ' l' → logprob: -4.500246047973633
    9. ' pouvoir' → logprob: -4.750246047973633
    10. ' effectuer' → logprob: -5.250246047973633

Token 40: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2428250312805176
    2. '[' → logprob: -1.7428250312805176
    3. ' au' → logprob: -1.7428250312805176
    4. '_' → logprob: -1.9928250312805176
    5. ' aux' → logprob: -2.4928250312805176
    6. ' à' → logprob: -2.4928250312805176
    7. 'au' → logprob: -3.8678250312805176
    8. '[]' → logprob: -4.117825031280518
    9. 's' → logprob: -4.992825031280518
    10. ' a' → logprob: -5.867825031280518

Token 41: ' ses' (ID: 6707)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.00990376528352499
    2. ' each' → logprob: -6.009903907775879
    3. ' l' → logprob: -6.634903907775879
    4. ' chacun' → logprob: -6.634903907775879
    5. 'each' → logprob: -7.009903907775879
    6. ' n' → logprob: -7.509903907775879
    7. 'cha' → logprob: -7.759903907775879
    8. 'Chaque' → logprob: -7.759903907775879
    9. ' chacune' → logprob: -7.759903907775879
    10. 's' → logprob: -7.884903907775879

Token 42: ' chiffres' (ID: 105565)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.48597997426986694
    2. ' chiffres' → logprob: -1.3609800338745117
    3. 'ch' → logprob: -2.6109800338745117
    4. 'car' → logprob: -3.4859800338745117
    5. ' ' → logprob: -4.735980033874512
    6. 'c' → logprob: -5.485980033874512
    7. ' caract' → logprob: -5.610980033874512
    8. 'd' → logprob: -6.860980033874512
    9. ' caracteres' → logprob: -7.235980033874512
    10. '```' → logprob: -7.360980033874512

Token 43: ' individ' (ID: 3928)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.240481914370321e-05
    2. '```' → logprob: -11.250052452087402
    3. '.' → logprob: -11.625052452087402
    4. ',' → logprob: -11.625052452087402
    5. '
' → logprob: -12.250052452087402
    6. '#' → logprob: -12.375052452087402
    7. '\n' → logprob: -12.625052452087402
    8. ':' → logprob: -13.500052452087402
    9. '`' → logprob: -13.625052452087402
    10. 'x' → logprob: -13.625052452087402

Token 44: 'uellement' (ID: 36026)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.012223886325955391
    2. 's' → logprob: -5.012223720550537
    3. 'us' → logprob: -5.387223720550537
    4. 'uels' → logprob: -8.262224197387695
    5. '```' → logprob: -8.762224197387695
    6. 'm' → logprob: -9.137224197387695
    7. 'uls' → logprob: -9.637224197387695
    8. 'ux' → logprob: -9.887224197387695
    9. '`' → logprob: -10.137224197387695
    10. 'ue' → logprob: -10.387224197387695

Token 45: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9623810658231378e-05
    2. '#' → logprob: -11.875020027160645
    3. '```' → logprob: -12.250020027160645
    4. '`' → logprob: -13.125020027160645
    5. ',' → logprob: -13.125020027160645
    6. '\n' → logprob: -13.625020027160645
    7. '\' → logprob: -14.250020027160645
    8. '.' → logprob: -14.750020027160645
    9. '
' → logprob: -15.375020027160645
    10. 'x' → logprob: -15.500020027160645

Token 46: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2007883671903983e-05
    2. '```' → logprob: -10.875021934509277
    3. '\' → logprob: -14.125021934509277
    4. '#' → logprob: -14.250021934509277
    5. '\n' → logprob: -14.375021934509277
    6. '`' → logprob: -14.375021934509277
    7. '
' → logprob: -15.125021934509277
    8. '``' → logprob: -16.500022888183594
    9. 'i' → logprob: -17.375022888183594
    10. '

' → logprob: -17.625022888183594

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10112860798835754
    2. '=' → logprob: -2.351128578186035
    3. '_str' → logprob: -7.476128578186035
    4. '_' → logprob: -8.351128578186035
    5. 's' → logprob: -9.476128578186035
    6. ' ' → logprob: -11.476128578186035
    7. '_input' → logprob: -12.101128578186035
    8. '_string' → logprob: -12.101128578186035
    9. 'str' → logprob: -12.351128578186035
    10. '=input' → logprob: -12.601128578186035

Token 48: ' str' (ID: 989)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1003357395529747
    2. 'input' → logprob: -2.3503358364105225
    3. ' str' → logprob: -9.975336074829102
    4. 'str' → logprob: -10.225336074829102
    5. ' int' → logprob: -10.975336074829102
    6. ' ' → logprob: -11.225336074829102
    7. ' ' → logprob: -12.100336074829102
    8. 'int' → logprob: -12.350336074829102
    9. '	input' → logprob: -12.850336074829102
    10. '(input' → logprob: -14.600336074829102

Token 49: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5760787725448608
    2. '(' → logprob: -0.8260787725448608
    3. '(
' → logprob: -9.451078414916992
    4. '(int' → logprob: -10.451078414916992
    5. 'input' → logprob: -11.076078414916992
    6. '()' → logprob: -11.701078414916992
    7. '(

' → logprob: -13.326078414916992
    8. ' (' → logprob: -13.451078414916992
    9. '(in' → logprob: -13.826078414916992
    10. '(eval' → logprob: -14.201078414916992

Token 50: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007439327891916037
    2. '('' → logprob: -5.632439136505127
    3. '()' → logprob: -6.507439136505127
    4. '("' → logprob: -7.507439136505127
    5. '())' → logprob: -7.507439136505127
    6. '("("' → logprob: -7.632439136505127
    7. '(""))' → logprob: -8.132439613342285
    8. '(">' → logprob: -8.632439613342285
    9. ')' → logprob: -9.382439613342285
    10. '(
' → logprob: -9.632439613342285

Token 51: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1773442178964615
    2. '[' → logprob: -2.80234432220459
    3. ')' → logprob: -2.92734432220459
    4. '#' → logprob: -3.55234432220459
    5. 'n' → logprob: -5.17734432220459
    6. '[:]' → logprob: -6.17734432220459
    7. ' ' → logprob: -6.42734432220459
    8. '=' → logprob: -6.80234432220459
    9. 's' → logprob: -6.80234432220459
    10. ':' → logprob: -7.05234432220459

Token 52: ' Dem' (ID: 9458)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5016530752182007
    2. 'count' → logprob: -1.5016530752182007
    3. 's' → logprob: -2.0016531944274902
    4. 'digits' → logprob: -2.3766531944274902
    5. 'sum' → logprob: -2.7516531944274902
    6. 'c' → logprob: -2.8766531944274902
    7. 'total' → logprob: -2.8766531944274902
    8. 'd' → logprob: -3.5016531944274902
    9. 'digit' → logprob: -3.5016531944274902
    10. ' #' → logprob: -3.8766531944274902

Token 53: 'ander' (ID: 9330)
  Prédit: 'ander'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ander' → logprob: -0.5382893085479736
    2. 'andez' → logprob: -1.1632893085479736
    3. 'a' → logprob: -2.5382893085479736
    4. 'ande' → logprob: -4.6632890701293945
    5. 'e' → logprob: -4.7882890701293945
    6. 'and' → logprob: -5.6632890701293945
    7. '#' → logprob: -6.5382890701293945
    8. 'an' → logprob: -6.6632890701293945
    9. 'er' → logprob: -8.788289070129395
    10. 'ar' → logprob: -9.288289070129395

Token 54: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5329084396362305
    2. '(' → logprob: -2.0329084396362305
    3. '()' → logprob: -3.4079084396362305
    4. ' #' → logprob: -3.5329084396362305
    5. ' (' → logprob: -3.6579084396362305
    6. ' la' → logprob: -3.6579084396362305
    7. '<|end|>' → logprob: -3.6579084396362305
    8. ' ' → logprob: -3.7829084396362305
    9. ')' → logprob: -4.2829084396362305
    10. ' un' → logprob: -4.4079084396362305

Token 55: ' entrée' (ID: 95590)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.3748824894428253
    2. ' ' → logprob: -1.749882459640503
    3. 'nombre' → logprob: -3.249882459640503
    4. 'aut' → logprob: -4.374882698059082
    5. 'n' → logprob: -4.499882698059082
    6. ' autre' → logprob: -4.624882698059082
    7. 's' → logprob: -4.874882698059082
    8. ' espace' → logprob: -4.999882698059082
    9. 'space' → logprob: -5.499882698059082
    10. 'es' → logprob: -5.749882698059082

Token 56: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41705918312072754
    2. '()' → logprob: -1.1670591831207275
    3. ' à' → logprob: -5.542058944702148
    4. ' (' → logprob: -5.542058944702148
    5. 's' → logprob: -5.667058944702148
    6. ')' → logprob: -5.667058944702148
    7. '('' → logprob: -6.167058944702148
    8. ' ' → logprob: -6.667058944702148
    9. 'a' → logprob: -6.667058944702148
    10. '_' → logprob: -6.792058944702148

Token 57: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8946546316146851
    2. 'l' → logprob: -1.019654631614685
    3. ' n' → logprob: -2.5196547508239746
    4. ' ' → logprob: -3.1446547508239746
    5. 'n' → logprob: -3.2696547508239746
    6. ''utilisateur' → logprob: -3.2696547508239746
    7. 'a' → logprob: -5.269654750823975
    8. '```' → logprob: -5.644654750823975
    9. '<|end|>' → logprob: -5.894654750823975
    10. 'space' → logprob: -6.269654750823975

Token 58: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.17573893070220947
    2. 'a' → logprob: -2.67573881149292
    3. ''' → logprob: -2.92573881149292
    4. 'e' → logprob: -3.55073881149292
    5. 'u' → logprob: -5.42573881149292
    6. ''a' → logprob: -6.30073881149292
    7. ''autre' → logprob: -6.80073881149292
    8. '’utilisateur' → logprob: -7.42573881149292
    9. '')' → logprob: -8.300739288330078
    10. 'i' → logprob: -8.550739288330078

Token 59: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8303213119506836
    2. '<|end|>' → logprob: -1.4553213119506836
    3. ' ' → logprob: -2.0803213119506836
    4. 'for' → logprob: -3.0803213119506836
    5. ' pour' → logprob: -3.4553213119506836
    6. 's' → logprob: -3.5803213119506836
    7. ')' → logprob: -4.205321311950684
    8. ' #' → logprob: -4.205321311950684
    9. 'pour' → logprob: -4.205321311950684
    10. 'n' → logprob: -4.830321311950684

Token 60: ' '' (ID: 461)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.631226658821106
    2. 'l' → logprob: -2.3812265396118164
    3. ''' → logprob: -2.5062265396118164
    4. ' un' → logprob: -2.8812265396118164
    5. ' le' → logprob: -2.8812265396118164
    6. ' '' → logprob: -3.1312265396118164
    7. ' la' → logprob: -3.5062265396118164
    8. '"' → logprob: -3.7562265396118164
    9. ' ' → logprob: -4.006226539611816
    10. ''un' → logprob: -4.256226539611816

Token 61: 'p' (ID: 79)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6604300141334534
    2. 'm' → logprob: -1.2854299545288086
    3. ' k' → logprob: -2.6604299545288086
    4. 'p' → logprob: -3.4104299545288086
    5. ' m' → logprob: -3.5354299545288086
    6. 'd' → logprob: -4.285429954528809
    7. 's' → logprob: -4.285429954528809
    8. 'x' → logprob: -4.910429954528809
    9. 't' → logprob: -5.160429954528809
    10. ' p' → logprob: -5.285429954528809

Token 62: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06569723039865494
    2. ' )' → logprob: -4.065697193145752
    3. '')' → logprob: -4.315697193145752
    4. 'rompt' → logprob: -4.940697193145752
    5. ' =' → logprob: -5.440697193145752
    6. 'e' → logprob: -5.440697193145752
    7. 'our' → logprob: -6.065697193145752
    8. 'a' → logprob: -6.190697193145752
    9. 'er' → logprob: -6.315697193145752
    10. '=' → logprob: -6.315697193145752

Token 63: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5757161378860474
    2. ' )' → logprob: -1.2007161378860474
    3. ')' → logprob: -3.325716018676758
    4. ' p' → logprob: -4.075716018676758
    5. 'a' → logprob: -4.200716018676758
    6. ' a' → logprob: -4.200716018676758
    7. 'p' → logprob: -4.825716018676758
    8. ' =' → logprob: -4.950716018676758
    9. 'n' → logprob: -5.200716018676758
    10. ' n' → logprob: -5.825716018676758

Token 64: ' représent' (ID: 42664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11525967717170715
    2. '=' → logprob: -2.2402596473693848
    3. ' ' → logprob: -6.865259647369385
    4. ')' → logprob: -7.990259647369385
    5. 's' → logprob: -8.365260124206543
    6. '<|end|>' → logprob: -8.615260124206543
    7. 'a' → logprob: -9.115260124206543
    8. 'n' → logprob: -10.115260124206543
    9. '>' → logprob: -10.240260124206543
    10. ' )' → logprob: -10.365260124206543

Token 65: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.028210656717419624
    2. 'era' → logprob: -3.6532106399536133
    3. 'er' → logprob: -6.903210639953613
    4. 'ant' → logprob: -7.528210639953613
    5. 'ent' → logprob: -8.778210639953613
    6. 'a' → logprob: -9.653210639953613
    7. '```' → logprob: -9.653210639953613
    8. '#' → logprob: -10.278210639953613
    9. 'é' → logprob: -10.778210639953613
    10. 'е' → logprob: -12.403210639953613

Token 66: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5669928193092346
    2. 'ex' → logprob: -1.0669927597045898
    3. 'le' → logprob: -3.06699275970459
    4. ' l' → logprob: -4.06699275970459
    5. 'la' → logprob: -4.94199275970459
    6. ' ' → logprob: -5.31699275970459
    7. ' la' → logprob: -5.56699275970459
    8. 'pu' → logprob: -6.31699275970459
    9. ' ' → logprob: -7.19199275970459
    10. ' puissance' → logprob: -7.19199275970459

Token 67: ' nombre' (ID: 9733)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8756887316703796
    2. 'pu' → logprob: -1.0006887912750244
    3. 'ex' → logprob: -2.0006887912750244
    4. 'nombre' → logprob: -3.6256887912750244
    5. 'élé' → logprob: -4.000688552856445
    6. ' puissance' → logprob: -4.750688552856445
    7. 'é' → logprob: -5.125688552856445
    8. 'power' → logprob: -5.750688552856445
    9. 'n' → logprob: -6.125688552856445
    10. ' nombre' → logprob: -6.500688552856445

Token 68: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0490823984146118
    2. ' des' → logprob: -1.1740823984146118
    3. ' d' → logprob: -1.4240823984146118
    4. '<|end|>' → logprob: -2.6740822792053223
    5. 'de' → logprob: -5.424082279205322
    6. ' ' → logprob: -5.549082279205322
    7. 'd' → logprob: -5.549082279205322
    8. '  ' → logprob: -5.799082279205322
    9. 'des' → logprob: -5.924082279205322
    10. ' exponent' → logprob: -5.924082279205322

Token 69: ' chiffres' (ID: 105565)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1646731197834015
    2. ' )' → logprob: -3.664673089981079
    3. ')' → logprob: -3.789673089981079
    4. '<|end|>' → logprob: -3.789673089981079
    5. 'p' → logprob: -4.539673328399658
    6. '  ' → logprob: -4.539673328399658
    7. 't' → logprob: -4.789673328399658
    8. ' espaces' → logprob: -4.914673328399658
    9. ' chiffres' → logprob: -5.289673328399658
    10. 'élé' → logprob: -5.664673328399658

Token 70: ' "' (ID: 392)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: 'non' (ID: 11741)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.37172573804855347
    2. ' "' → logprob: -2.3717257976531982
    3. ')' → logprob: -2.4967257976531982
    4. 'à' → logprob: -2.7467257976531982
    5. 's' → logprob: -3.8717257976531982
    6. ' )' → logprob: -4.246725559234619
    7. ' ' → logprob: -4.871725559234619
    8. '<|end|>' → logprob: -5.746725559234619
    9. '"' → logprob: -5.871725559234619
    10. 'd' → logprob: -6.121725559234619

Token 72: ' z' (ID: 579)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.4354989528656006
    2. '0' → logprob: -2.1854989528656006
    3. 's' → logprob: -2.3104989528656006
    4. '-' → logprob: -2.4354989528656006
    5. ' null' → logprob: -2.5604989528656006
    6. '_' → logprob: -2.8104989528656006
    7. 'n' → logprob: -2.9354989528656006
    8. 'd' → logprob: -3.4354989528656006
    9. ' nul' → logprob: -3.6854989528656006
    10. ' espaces' → logprob: -3.9354989528656006

Token 73: 'éros' (ID: 120888)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.9889861941337585
    2. 'éros' → logprob: -1.2389862537384033
    3. 'éro' → logprob: -1.3639862537384033
    4. 'ero' → logprob: -2.7389862537384033
    5. 'e' → logprob: -5.238986015319824
    6. 'eros' → logprob: -5.863986015319824
    7. 'ér' → logprob: -6.363986015319824
    8. '&eacute' → logprob: -6.863986015319824
    9. ' ' → logprob: -7.238986015319824
    10. 'ė' → logprob: -7.988986015319824

Token 74: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6428634524345398
    2. '")' → logprob: -1.3928635120391846
    3. ')' → logprob: -2.3928635120391846
    4. ' "' → logprob: -2.5178635120391846
    5. ' à' → logprob: -3.7678635120391846
    6. ' ")' → logprob: -4.7678632736206055
    7. ' cons' → logprob: -5.2678632736206055
    8. 's' → logprob: -5.5178632736206055
    9. 'p' → logprob: -6.1428632736206055
    10. ' )' → logprob: -6.2678632736206055

Token 75: ' à' (ID: 1221)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.15694846212863922
    2. ' p' → logprob: -2.2819485664367676
    3. ' =' → logprob: -3.4069485664367676
    4. 'n' → logprob: -6.031948566436768
    5. ' ' → logprob: -6.531948566436768
    6. ',' → logprob: -6.656948566436768
    7. '=' → logprob: -6.906948566436768
    8. ')' → logprob: -7.031948566436768
    9. '<|end|>' → logprob: -7.406948566436768
    10. ' )' → logprob: -7.656948566436768

Token 76: ' considérer' (ID: 172894)
  Prédit: ' prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prendre' → logprob: -1.4062753915786743
    2. ' compter' → logprob: -1.5312753915786743
    3. ' analyser' → logprob: -1.6562753915786743
    4. ' considérer' → logprob: -1.9062753915786743
    5. 'prendre' → logprob: -3.6562752723693848
    6. ' conserver' → logprob: -3.9062752723693848
    7. 'consider' → logprob: -4.031275272369385
    8. 'an' → logprob: -4.031275272369385
    9. ' vérifier' → logprob: -4.031275272369385
    10. ' examiner' → logprob: -4.156275272369385

Token 77: '.
' (ID: 558)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004754545632749796
    2. ' p' → logprob: -6.504754543304443
    3. 'n' → logprob: -6.754754543304443
    4. ')' → logprob: -7.004754543304443
    5. ' ' → logprob: -7.379754543304443
    6. '(p' → logprob: -9.129755020141602
    7. '(' → logprob: -9.379755020141602
    8. ' )' → logprob: -9.504755020141602
    9. '()' → logprob: -9.629755020141602
    10. ' =' → logprob: -9.754755020141602

Token 78: '#' (ID: 2)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007611720357090235
    2. ' p' → logprob: -4.8826117515563965
    3. ' 
' → logprob: -12.507611274719238
    4. ' ' → logprob: -14.382611274719238
    5. '
' → logprob: -14.632611274719238
    6. '  
' → logprob: -16.007612228393555
    7. '```' → logprob: -16.132612228393555
    8. ',' → logprob: -16.632612228393555
    9. '_p' → logprob: -16.757612228393555
    10. ' ,' → logprob: -16.882612228393555

Token 79: ' On' (ID: 2160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019330393988639116
    2. ' p' → logprob: -6.2519330978393555
    3. ' 
' → logprob: -13.626933097839355
    4. ' ' → logprob: -13.751933097839355
    5. '```' → logprob: -14.376933097839355
    6. '#' → logprob: -14.626933097839355
    7. ' ' → logprob: -15.626933097839355
    8. 'n' → logprob: -15.876933097839355
    9. '_p' → logprob: -15.876933097839355
    10. '  
' → logprob: -16.12693214416504

Token 80: ' convert' (ID: 8452)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05037371441721916
    2. '=' → logprob: -3.5503737926483154
    3. ' ' → logprob: -4.050373554229736
    4. 'p' → logprob: -6.425373554229736
    5. ' p' → logprob: -6.675373554229736
    6. 'n' → logprob: -10.050374031066895
    7. 's' → logprob: -11.675374031066895
    8. '  ' → logprob: -11.925374031066895
    9. '.' → logprob: -12.050374031066895
    10. ',' → logprob: -12.050374031066895

Token 81: 'it' (ID: 278)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ode' → logprob: -1.0027142763137817
    2. 'er' → logprob: -1.2527142763137817
    3. 't' → logprob: -1.5027142763137817
    4. 'oder' → logprob: -3.002714157104492
    5. 'od' → logprob: -3.877714157104492
    6. 'r' → logprob: -5.002714157104492
    7. 'user' → logprob: -5.127714157104492
    8. ' =' → logprob: -5.252714157104492
    9. 'str' → logprob: -5.377714157104492
    10. 'code' → logprob: -6.002714157104492

Token 82: ' cette' (ID: 7696)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.09578331559896469
    2. 'p' → logprob: -2.470783233642578
    3. ' ' → logprob: -5.595783233642578
    4. 'l' → logprob: -6.470783233642578
    5. ' l' → logprob: -6.720783233642578
    6. '(p' → logprob: -9.970783233642578
    7. 'n' → logprob: -10.345783233642578
    8. ' la' → logprob: -10.345783233642578
    9. '```' → logprob: -10.470783233642578
    10. ' (' → logprob: -10.595783233642578

Token 83: ' entrée' (ID: 95590)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.634668231010437
    2. 'p' → logprob: -0.884668231010437
    3. 'int' → logprob: -3.6346683502197266
    4. 'n' → logprob: -5.134668350219727
    5. ' espace' → logprob: -5.384668350219727
    6. ' )' → logprob: -5.759668350219727
    7. ' int' → logprob: -5.759668350219727
    8. ' space' → logprob: -5.884668350219727
    9. 'space' → logprob: -6.634668350219727
    10. ' ' → logprob: -6.634668350219727

Token 84: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.002315833931788802
    2. 'en' → logprob: -6.877315998077393
    3. ' in' → logprob: -8.127315521240234
    4. 'n' → logprob: -8.627315521240234
    5. ')' → logprob: -8.752315521240234
    6. '<|end|>' → logprob: -8.752315521240234
    7. ' ' → logprob: -9.377315521240234
    8. ' )' → logprob: -9.377315521240234
    9. ' =' → logprob: -9.502315521240234
    10. 's' → logprob: -10.002315521240234

Token 85: ' un' (ID: 537)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.676023542881012
    2. 'int' → logprob: -0.801023542881012
    3. ' integer' → logprob: -3.926023483276367
    4. ' entier' → logprob: -4.176023483276367
    5. 'ent' → logprob: -6.176023483276367
    6. ' ent' → logprob: -6.301023483276367
    7. ' ' → logprob: -7.051023483276367
    8. 'n' → logprob: -7.426023483276367
    9. '=int' → logprob: -8.051023483276367
    10. ' i' → logprob: -8.051023483276367

Token 86: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6446629762649536
    2. ' entier' → logprob: -1.0196629762649536
    3. ' int' → logprob: -2.894662857055664
    4. 'int' → logprob: -3.769662857055664
    5. ' ' → logprob: -4.019662857055664
    6. 'ent' → logprob: -4.769662857055664
    7. ' nombre' → logprob: -5.894662857055664
    8. ' integer' → logprob: -5.894662857055664
    9. ' ent' → logprob: -7.269662857055664
    10. 'i' → logprob: -7.394662857055664

Token 87: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.798206090927124
    2. 'p' → logprob: -1.173206090927124
    3. ' p' → logprob: -1.548206090927124
    4. ' (' → logprob: -4.548206329345703
    5. 'n' → logprob: -4.923206329345703
    6. '(' → logprob: -5.673206329345703
    7. ' )' → logprob: -6.548206329345703
    8. ',' → logprob: -6.923206329345703
    9. '(p' → logprob: -7.048206329345703
    10. ' ,' → logprob: -7.173206329345703

Token 88: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.23241011798381805
    2. 'int' → logprob: -1.6074100732803345
    3. ' ' → logprob: -5.232409954071045
    4. '=int' → logprob: -6.982409954071045
    5. ' ' → logprob: -8.982410430908203
    6. 'l' → logprob: -9.107410430908203
    7. '(int' → logprob: -9.482410430908203
    8. 'space' → logprob: -9.482410430908203
    9. 'n' → logprob: -9.857410430908203
    10. '[int' → logprob: -9.857410430908203

Token 89: '(),' (ID: 2547)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5349507331848145
    2. 'p' → logprob: -1.0349507331848145
    3. '(p' → logprob: -3.0349507331848145
    4. '()' → logprob: -4.6599507331848145
    5. '(
' → logprob: -7.1599507331848145
    6. ' p' → logprob: -8.784950256347656
    7. ')' → logprob: -8.909950256347656
    8. ',' → logprob: -8.909950256347656
    9. ' (' → logprob: -9.159950256347656
    10. 'n' → logprob: -9.534950256347656

Token 90: ' car' (ID: 1669)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.34447208046913147
    2. ' ' → logprob: -1.469472050666809
    3. 'p' → logprob: -2.9694721698760986
    4. ' )' → logprob: -5.2194719314575195
    5. ')' → logprob: -6.3444719314575195
    6. 'n' → logprob: -6.8444719314575195
    7. ' n' → logprob: -7.3444719314575195
    8. ' ,' → logprob: -8.34447193145752
    9. 'space' → logprob: -8.84447193145752
    10. ' a' → logprob: -8.84447193145752

Token 91: ' on' (ID: 402)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9507579803466797
    2. ' n' → logprob: -1.4507579803466797
    3. ' ' → logprob: -1.7007579803466797
    4. ' input' → logprob: -2.2007579803466797
    5. 'input' → logprob: -3.2007579803466797
    6. 'n' → logprob: -4.32575798034668
    7. 'p' → logprob: -4.32575798034668
    8. ' l' → logprob: -5.57575798034668
    9. ' on' → logprob: -6.07575798034668
    10. '  ' → logprob: -6.70075798034668

Token 92: ' fera' (ID: 69827)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.3390648365020752
    2. ' veut' → logprob: -1.4640648365020752
    3. ' a' → logprob: -1.9640648365020752
    4. ' devra' → logprob: -2.214064836502075
    5. 'a' → logprob: -2.339064836502075
    6. ' souhaite' → logprob: -2.464064836502075
    7. ' doit' → logprob: -3.214064836502075
    8. ' ' → logprob: -4.464064598083496
    9. ' n' → logprob: -5.964064598083496
    10. 'n' → logprob: -5.964064598083496

Token 93: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.36690574884414673
    2. 'des' → logprob: -1.241905689239502
    3. ' ' → logprob: -4.991905689239502
    4. ' p' → logprob: -5.491905689239502
    5. ' les' → logprob: -5.491905689239502
    6. 'p' → logprob: -7.491905689239502
    7. 'les' → logprob: -7.741905689239502
    8. 'a' → logprob: -8.36690616607666
    9. ' un' → logprob: -8.36690616607666
    10. 'l' → logprob: -8.61690616607666

Token 94: ' opérations' (ID: 102793)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.10183707624673843
    2. ' calcul' → logprob: -2.476837158203125
    3. 'compar' → logprob: -5.351837158203125
    4. ' opérations' → logprob: -5.726837158203125
    5. ' traitements' → logprob: -6.226837158203125
    6. 'trait' → logprob: -6.726837158203125
    7. ' calculations' → logprob: -8.351837158203125
    8. 'operations' → logprob: -8.601837158203125
    9. 'man' → logprob: -8.851837158203125
    10. 'op' → logprob: -9.101837158203125

Token 95: ' math' (ID: 13324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6520941257476807
    2. ' p' → logprob: -1.6520941257476807
    3. ' (' → logprob: -1.7770941257476807
    4. 'p' → logprob: -1.7770941257476807
    5. 'n' → logprob: -2.1520941257476807
    6. '()' → logprob: -2.9020941257476807
    7. ' ' → logprob: -2.9020941257476807
    8. '(p' → logprob: -4.527093887329102
    9. ' n' → logprob: -4.777093887329102
    10. ' )' → logprob: -5.527093887329102

Token 96: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.00790045689791441
    2. 'étiques' → logprob: -5.257900238037109
    3. 'ématique' → logprob: -6.257900238037109
    4. 'ém' → logprob: -7.757900238037109
    5. 'é' → logprob: -8.88290023803711
    6. '#' → logprob: -9.63290023803711
    7. 'p' → logprob: -10.13290023803711
    8. 's' → logprob: -10.88290023803711
    9. 'étique' → logprob: -11.38290023803711
    10. '```' → logprob: -12.25790023803711

Token 97: ' dessus' (ID: 67454)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.661924421787262
    2. '()' → logprob: -1.4119243621826172
    3. '(' → logprob: -2.036924362182617
    4. '(p' → logprob: -2.411924362182617
    5. 'n' → logprob: -4.911924362182617
    6. ' p' → logprob: -5.411924362182617
    7. ')' → logprob: -5.911924362182617
    8. ' (' → logprob: -6.161924362182617
    9. '(
' → logprob: -6.911924362182617
    10. ' ' → logprob: -7.661924362182617

Token 98: '.
' (ID: 558)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0028417224530130625
    2. ' p' → logprob: -5.877841949462891
    3. ' 
' → logprob: -11.00284194946289
    4. 'n' → logprob: -12.00284194946289
    5. ')' → logprob: -12.75284194946289
    6. '
' → logprob: -12.87784194946289
    7. ',' → logprob: -13.37784194946289
    8. '<|end|>' → logprob: -13.50284194946289
    9. '  
' → logprob: -14.00284194946289
    10. ')p' → logprob: -14.12784194946289

Token 99: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.696889623621246e-06
    2. ' p' → logprob: -12.87500286102295
    3. '```' → logprob: -17.500001907348633
    4. '
' → logprob: -19.250001907348633
    5. ' 
' → logprob: -19.875001907348633
    6. '	p' → logprob: -21.875001907348633
    7. '  
' → logprob: -21.875001907348633
    8. 'n' → logprob: -22.375001907348633
    9. '`' → logprob: -22.375001907348633
    10. '    
' → logprob: -22.500001907348633

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052354102954268456
    2. '=' → logprob: -5.255235195159912
    3. '=int' → logprob: -13.88023567199707
    4. ' ' → logprob: -14.38023567199707
    5. ' ' → logprob: -16.38023567199707
    6. ')' → logprob: -17.75523567199707
    7. 'p' → logprob: -18.13023567199707
    8. '=input' → logprob: -18.13023567199707
    9. '  ' → logprob: -18.38023567199707
    10. '=p' → logprob: -19.13023567199707

Token 101: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.001502598519437015
    2. 'int' → logprob: -6.501502513885498
    3. '=int' → logprob: -15.876502990722656
    4. ' ' → logprob: -16.251502990722656
    5. ' ' → logprob: -16.501502990722656
    6. '(int' → logprob: -17.876502990722656
    7. '<int' → logprob: -18.501502990722656
    8. '[int' → logprob: -18.626502990722656
    9. '	int' → logprob: -19.126502990722656
    10. ' intval' → logprob: -20.001502990722656

Token 102: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018221933394670486
    2. '(' → logprob: -4.018221855163574
    3. ' (' → logprob: -10.518221855163574
    4. '()' → logprob: -10.518221855163574
    5. '(str' → logprob: -11.018221855163574
    6. 'input' → logprob: -14.768221855163574
    7. '(s' → logprob: -15.768221855163574
    8. '(
' → logprob: -15.768221855163574
    9. '=input' → logprob: -16.26822280883789
    10. '(inp' → logprob: -16.39322280883789

Token 103: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01867682673037052
    2. '()' → logprob: -4.0186767578125
    3. ')' → logprob: -7.6436767578125
    4. ' ())' → logprob: -10.3936767578125
    5. '(' → logprob: -11.6436767578125
    6. '()
' → logprob: -12.6436767578125
    7. '())
' → logprob: -12.7686767578125
    8. '();)' → logprob: -14.0186767578125
    9. '()))' → logprob: -15.2686767578125
    10. '())

' → logprob: -15.3936767578125

Token 104: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.81547611951828
    2. 's' → logprob: -1.1904761791229248
    3. '
' → logprob: -2.190476179122925
    4. 'n' → logprob: -3.440476179122925
    5. 'sum' → logprob: -3.815476179122925
    6. 'result' → logprob: -4.065475940704346
    7. '\n' → logprob: -4.190475940704346
    8. '\' → logprob: -4.440475940704346
    9. 'count' → logprob: -5.065475940704346
    10. ' 
' → logprob: -5.065475940704346

Token 105: ' Calcul' (ID: 57243)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6998066902160645
    2. 'result' → logprob: -1.0748066902160645
    3. 'n' → logprob: -2.9498066902160645
    4. 's' → logprob: -3.8248066902160645
    5. 'digits' → logprob: -4.0748066902160645
    6. 'product' → logprob: -4.3248066902160645
    7. 'max' → logprob: -4.5748066902160645
    8. 'count' → logprob: -4.6998066902160645
    9. ' #' → logprob: -5.6998066902160645
    10. 'c' → logprob: -5.6998066902160645

Token 106: 'er' (ID: 259)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5217587947845459
    2. 's' → logprob: -1.521758794784546
    3. ' result' → logprob: -2.896758794784546
    4. '_' → logprob: -3.146758794784546
    5. '=' → logprob: -3.896758794784546
    6. ' =' → logprob: -3.896758794784546
    7. '#' → logprob: -4.021759033203125
    8. 'total' → logprob: -5.021759033203125
    9. 'sum' → logprob: -5.146759033203125
    10. ' ' → logprob: -5.521759033203125

Token 107: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4472447633743286
    2. 'n' → logprob: -1.8222447633743286
    3. 's' → logprob: -1.8222447633743286
    4. 'result' → logprob: -2.197244644165039
    5. ' ' → logprob: -2.197244644165039
    6. '(' → logprob: -2.697244644165039
    7. ' =' → logprob: -3.947244644165039
    8. 'sum' → logprob: -3.947244644165039
    9. 'length' → logprob: -4.572244644165039
    10. '=' → logprob: -4.697244644165039

Token 108: ' nombre' (ID: 9733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8658262491226196
    2. 'nombre' → logprob: -1.6158262491226196
    3. 'result' → logprob: -2.24082612991333
    4. 'total' → logprob: -2.61582612991333
    5. 'length' → logprob: -3.11582612991333
    6. 'len' → logprob: -3.74082612991333
    7. 'sum' → logprob: -4.11582612991333
    8. ' nombre' → logprob: -4.24082612991333
    9. 'n' → logprob: -4.36582612991333
    10. 'product' → logprob: -4.49082612991333

Token 109: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.506635069847107
    2. 'total' → logprob: -1.631635069847107
    3. '_de' → logprob: -2.1316351890563965
    4. '_' → logprob: -2.2566351890563965
    5. '_total' → logprob: -2.6316351890563965
    6. ' =' → logprob: -2.7566351890563965
    7. 'de' → logprob: -3.1316351890563965
    8. ' de' → logprob: -3.3816351890563965
    9. ' total' → logprob: -3.3816351890563965
    10. '_des' → logprob: -3.7566351890563965

Token 110: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4865873456001282
    2. '_de' → logprob: -1.6115872859954834
    3. 'de' → logprob: -1.9865872859954834
    4. ' de' → logprob: -3.6115872859954834
    5. '_total' → logprob: -4.9865875244140625
    6. '_d' → logprob: -5.7365875244140625
    7. 'd' → logprob: -6.1115875244140625
    8. 's' → logprob: -6.1115875244140625
    9. 'total' → logprob: -6.3615875244140625
    10. '_des' → logprob: -6.3615875244140625

Token 111: ' chiffres' (ID: 105565)
  Prédit: ' chiffres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffres' → logprob: -0.029560469090938568
    2. ' digits' → logprob: -4.404560565948486
    3. ' caractères' → logprob: -4.529560565948486
    4. 'digits' → logprob: -6.654560565948486
    5. 'c' → logprob: -6.779560565948486
    6. 'ch' → logprob: -6.904560565948486
    7. 'd' → logprob: -7.154560565948486
    8. '_' → logprob: -7.654560565948486
    9. ' ' → logprob: -8.529560089111328
    10. '```' → logprob: -8.904560089111328

Token 112: ' dans' (ID: 2671)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6651378273963928
    2. 'd' → logprob: -2.040137767791748
    3. 'length' → logprob: -2.040137767791748
    4. 't' → logprob: -2.165137767791748
    5. 'n' → logprob: -3.040137767791748
    6. 'len' → logprob: -4.040137767791748
    7. ' =' → logprob: -4.415137767791748
    8. 'l' → logprob: -4.915137767791748
    9. 'leng' → logprob: -5.540137767791748
    10. 'digits' → logprob: -5.540137767791748

Token 113: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4287855923175812
    2. ' n' → logprob: -1.0537855625152588
    3. ' la' → logprob: -10.17878532409668
    4. '(n' → logprob: -10.55378532409668
    5. 'la' → logprob: -11.80378532409668
    6. 'l' → logprob: -12.55378532409668
    7. ' ' → logprob: -13.05378532409668
    8. ' ' → logprob: -13.30378532409668
    9. ' le' → logprob: -13.80378532409668
    10. '	n' → logprob: -13.92878532409668

Token 114: ' chaîne' (ID: 89288)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08977004140615463
    2. ' n' → logprob: -2.4647700786590576
    3. ' chaîne' → logprob: -8.089770317077637
    4. ' chaine' → logprob: -9.089770317077637
    5. ' string' → logprob: -9.214770317077637
    6. 'chaine' → logprob: -9.214770317077637
    7. 'string' → logprob: -9.589770317077637
    8. 's' → logprob: -10.089770317077637
    9. ' code' → logprob: -10.214770317077637
    10. 'len' → logprob: -11.714770317077637

Token 115: ' '' (ID: 461)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.22033680975437164
    2. 'total' → logprob: -2.2203369140625
    3. 'digits' → logprob: -3.4703369140625
    4. 'long' → logprob: -3.7203369140625
    5. 'n' → logprob: -4.3453369140625
    6. 'nombre' → logprob: -5.3453369140625
    7. 'len' → logprob: -5.7203369140625
    8. 'digit' → logprob: -5.8453369140625
    9. 'leng' → logprob: -5.9703369140625
    10. 'd' → logprob: -6.4703369140625

Token 116: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.554343366995454e-05
    2. ' n' → logprob: -9.375085830688477
    3. '(n' → logprob: -14.625085830688477
    4. ')n' → logprob: -16.000085830688477
    5. '`' → logprob: -17.125085830688477
    6. '```' → logprob: -17.250085830688477
    7. ')' → logprob: -17.750085830688477
    8. '_n' → logprob: -18.000085830688477
    9. '	n' → logprob: -18.375085830688477
    10. 's' → logprob: -19.625085830688477

Token 117: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07675161212682724
    2. 'length' → logprob: -3.326751708984375
    3. 'len' → logprob: -3.951751708984375
    4. 'n' → logprob: -4.451751708984375
    5. ' )' → logprob: -6.076751708984375
    6. '#' → logprob: -7.201751708984375
    7. '.' → logprob: -7.326751708984375
    8. 'long' → logprob: -7.576751708984375
    9. 'l' → logprob: -7.701751708984375
    10. 't' → logprob: -7.951751708984375

Token 118: ' à' (ID: 1221)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3717314898967743
    2. 'total' → logprob: -1.8717315196990967
    3. 'n' → logprob: -2.9967315196990967
    4. 'len' → logprob: -2.9967315196990967
    5. 'long' → logprob: -4.121731281280518
    6. 'l' → logprob: -4.621731281280518
    7. 'nb' → logprob: -4.871731281280518
    8. 'nombre' → logprob: -5.121731281280518
    9. 't' → logprob: -5.246731281280518
    10. 'digits' → logprob: -5.871731281280518

Token 119: ' l' (ID: 305)
  Prédit: ' analyser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' analyser' → logprob: -0.5876230597496033
    2. 'an' → logprob: -1.712623119354248
    3. 'len' → logprob: -2.837623119354248
    4. ' considérer' → logprob: -2.962623119354248
    5. ' partir' → logprob: -3.462623119354248
    6. ' prendre' → logprob: -3.837623119354248
    7. 'n' → logprob: -3.962623119354248
    8. ' examiner' → logprob: -4.462623119354248
    9. ' traiter' → logprob: -4.587623119354248
    10. 'consider' → logprob: -4.962623119354248

Token 120: ''aide' (ID: 75684)
  Prédit: ''aide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aide' → logprob: -0.2848798334598541
    2. 'a' → logprob: -1.7848798036575317
    3. 'len' → logprob: -3.5348799228668213
    4. 'e' → logprob: -4.659879684448242
    5. 'ength' → logprob: -5.034879684448242
    6. '=len' → logprob: -5.159879684448242
    7. 'ist' → logprob: -6.159879684448242
    8. ''' → logprob: -6.284879684448242
    9. 'length' → logprob: -6.534879684448242
    10. 'i' → logprob: -6.534879684448242

Token 121: ' de' (ID: 334)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.22561727464199066
    2. '(len' → logprob: -1.8506172895431519
    3. ' de' → logprob: -3.8506171703338623
    4. ' len' → logprob: -4.475617408752441
    5. 'de' → logprob: -4.725617408752441
    6. '(' → logprob: -5.975617408752441
    7. '=len' → logprob: -8.350617408752441
    8. ')' → logprob: -8.850617408752441
    9. '()' → logprob: -9.100617408752441
    10. '#' → logprob: -9.975617408752441

Token 122: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10020741820335388
    2. ' len' → logprob: -2.3502073287963867
    3. '(len' → logprob: -14.975207328796387
    4. '=len' → logprob: -15.725207328796387
    5. '```' → logprob: -16.225208282470703
    6. ' la' → logprob: -16.350208282470703
    7. '	len' → logprob: -17.100208282470703
    8. '`' → logprob: -17.475208282470703
    9. 'la' → logprob: -18.350208282470703
    10. '[len' → logprob: -18.350208282470703

Token 123: ' fonction' (ID: 17610)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.749814019713085e-06
    2. ' len' → logprob: -12.000006675720215
    3. 'length' → logprob: -14.750006675720215
    4. '```' → logprob: -16.62500762939453
    5. 'leng' → logprob: -16.62500762939453
    6. 'fonction' → logprob: -17.87500762939453
    7. 'le' → logprob: -18.12500762939453
    8. '(len' → logprob: -18.25000762939453
    9. '=len' → logprob: -18.62500762939453
    10. 'l' → logprob: -19.00000762939453

Token 124: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3868749439716339
    2. ' len' → logprob: -1.1368749141693115
    3. '(len' → logprob: -12.51187515258789
    4. '=len' → logprob: -15.63687515258789
    5. '	len' → logprob: -16.76187515258789
    6. '[len' → logprob: -17.88687515258789
    7. '_len' → logprob: -18.26187515258789
    8. ',len' → logprob: -18.63687515258789
    9. '`' → logprob: -18.88687515258789
    10. '<len' → logprob: -19.38687515258789

Token 125: '().
' (ID: 58434)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47268417477607727
    2. '(' → logprob: -1.8476841449737549
    3. '(n' → logprob: -2.097684144973755
    4. 'length' → logprob: -3.347684144973755
    5. '()' → logprob: -4.097684383392334
    6. 'len' → logprob: -4.847684383392334
    7. 's' → logprob: -5.097684383392334
    8. 'nombre' → logprob: -5.097684383392334
    9. 'total' → logprob: -5.222684383392334
    10. 'long' → logprob: -5.597684383392334

Token 126: '#' (ID: 2)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.06173168867826462
    2. 'total' → logprob: -3.6867315769195557
    3. 'len' → logprob: -4.311731815338135
    4. 'long' → logprob: -4.936731815338135
    5. 'count' → logprob: -5.436731815338135
    6. 'n' → logprob: -5.936731815338135
    7. 'leng' → logprob: -6.311731815338135
    8. 'digits' → logprob: -6.436731815338135
    9. 'l' → logprob: -6.811731815338135
    10. 'nombre' → logprob: -7.311731815338135

Token 127: ' k' (ID: 372)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.16855110228061676
    2. 'total' → logprob: -2.168551206588745
    3. ' length' → logprob: -3.543551206588745
    4. ' total' → logprob: -5.543550968170166
    5. 'count' → logprob: -6.293550968170166
    6. 'long' → logprob: -6.418550968170166
    7. 'len' → logprob: -7.043550968170166
    8. ' longueur' → logprob: -7.043550968170166
    9. 'num' → logprob: -7.418550968170166
    10. 'l' → logprob: -7.543550968170166

Token 128: 'eta' (ID: 3589)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023254914209246635
    2. '=' → logprob: -3.773254871368408
    3. 'k' → logprob: -12.898255348205566
    4. ' ' → logprob: -13.273255348205566
    5. '=len' → logprob: -13.398255348205566
    6. ' ' → logprob: -14.023255348205566
    7. '_' → logprob: -14.523255348205566
    8. 'n' → logprob: -14.773255348205566
    9. 'len' → logprob: -15.273255348205566
    10. 'p' → logprob: -15.523255348205566

Token 129: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14096608757972717
    2. '=' → logprob: -2.7659661769866943
    3. 's' → logprob: -2.7659661769866943
    4. '_len' → logprob: -6.265965938568115
    5. '_length' → logprob: -6.515965938568115
    6. '_n' → logprob: -7.140965938568115
    7. '_count' → logprob: -7.640965938568115
    8. '_' → logprob: -8.140966415405273
    9. '=len' → logprob: -8.265966415405273
    10. 'len' → logprob: -8.890966415405273

Token 130: 'i' (ID: 72)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4218851327896118
    2. 'inue' → logprob: -1.4218851327896118
    3. '=' → logprob: -3.1718850135803223
    4. 'inu' → logprob: -3.9218850135803223
    5. '=len' → logprob: -4.296885013580322
    6. 'ent' → logprob: -4.796885013580322
    7. 'ient' → logprob: -5.421885013580322
    8. 'in' → logprob: -5.546885013580322
    9. '_len' → logprob: -5.921885013580322
    10. 'e' → logprob: -6.296885013580322

Token 131: 'endra' (ID: 32364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1681586056947708
    2. 'nent' → logprob: -3.043158531188965
    3. 'ent' → logprob: -3.293158531188965
    4. 'nu' → logprob: -3.418158531188965
    5. 'nt' → logprob: -3.793158531188965
    6. 'ner' → logprob: -5.043158531188965
    7. 'nts' → logprob: -6.168158531188965
    8. 'neur' → logprob: -6.793158531188965
    9. 'ns' → logprob: -7.168158531188965
    10. 'er' → logprob: -7.418158531188965

Token 132: ' donc' (ID: 14206)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4973170757293701
    2. ' la' → logprob: -1.6223170757293701
    3. ' k' → logprob: -1.8723170757293701
    4. ' le' → logprob: -2.24731707572937
    5. '=len' → logprob: -2.49731707572937
    6. 'le' → logprob: -2.99731707572937
    7. ' len' → logprob: -2.99731707572937
    8. 'k' → logprob: -3.12231707572937
    9. '=k' → logprob: -3.49731707572937
    10. 'la' → logprob: -3.62231707572937

Token 133: ' la' (ID: 557)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9923121929168701
    2. ' la' → logprob: -1.1173121929168701
    3. ' le' → logprob: -1.8673121929168701
    4. ' k' → logprob: -2.61731219291687
    5. ' ' → logprob: -3.11731219291687
    6. 'len' → logprob: -4.617312431335449
    7. ' l' → logprob: -4.992312431335449
    8. '=len' → logprob: -5.742312431335449
    9. 'k' → logprob: -6.242312431335449
    10. 'le' → logprob: -6.367312431335449

Token 134: ' longueur' (ID: 104613)
  Prédit: ' longueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.04748902842402458
    2. ' nombre' → logprob: -4.422489166259766
    3. ' length' → logprob: -4.672489166259766
    4. 'len' → logprob: -4.672489166259766
    5. 'nombre' → logprob: -5.672489166259766
    6. ' len' → logprob: -5.672489166259766
    7. 'long' → logprob: -5.672489166259766
    8. ' longe' → logprob: -6.922489166259766
    9. ' long' → logprob: -7.047489166259766
    10. ' taille' → logprob: -7.047489166259766

Token 135: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09419850260019302
    2. '(n' → logprob: -2.71919846534729
    3. '_' → logprob: -4.344198703765869
    4. '=' → logprob: -5.344198703765869
    5. ' =' → logprob: -6.219198703765869
    6. ' (' → logprob: -6.594198703765869
    7. '_n' → logprob: -6.594198703765869
    8. 'n' → logprob: -8.344198226928711
    9. '_de' → logprob: -8.344198226928711
    10. 's' → logprob: -8.469198226928711

Token 136: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5763199925422668
    2. ' n' → logprob: -0.8263199925422668
    3. '(n' → logprob: -7.951320171356201
    4. ' ' → logprob: -11.826319694519043
    5. ' la' → logprob: -12.326319694519043
    6. '(' → logprob: -12.701319694519043
    7. '	n' → logprob: -12.701319694519043
    8. ' (' → logprob: -13.076319694519043
    9. ')n' → logprob: -13.076319694519043
    10. ' ' → logprob: -13.826319694519043

Token 137: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005930101033300161
    2. ' n' → logprob: -5.130929946899414
    3. '(n' → logprob: -14.505929946899414
    4. ')n' → logprob: -14.505929946899414
    5. '	n' → logprob: -15.255929946899414
    6. '_n' → logprob: -16.630929946899414
    7. ' ' → logprob: -17.130929946899414
    8. ')' → logprob: -17.255929946899414
    9. '`' → logprob: -17.380929946899414
    10. '```' → logprob: -17.505929946899414

Token 138: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053574807941913605
    2. 'n' → logprob: -3.303574800491333
    3. '(n' → logprob: -4.678575038909912
    4. '(' → logprob: -5.428575038909912
    5. ')n' → logprob: -7.553575038909912
    6. 'k' → logprob: -8.303574562072754
    7. ' )' → logprob: -9.053574562072754
    8. ' =' → logprob: -9.053574562072754
    9. '()' → logprob: -9.053574562072754
    10. 's' → logprob: -9.178574562072754

Token 139: 'keta' (ID: 92011)
  Prédit: 'keta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.00019936825265176594
    2. 'k' → logprob: -9.250199317932129
    3. '```' → logprob: -10.250199317932129
    4. 'kta' → logprob: -10.375199317932129
    5. ' k' → logprob: -11.125199317932129
    6. '
' → logprob: -12.625199317932129
    7. 'kata' → logprob: -13.250199317932129
    8. 'n' → logprob: -13.375199317932129
    9. ' =' → logprob: -13.375199317932129
    10. '(k' → logprob: -13.750199317932129

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142942667007446
    2. '=' → logprob: -1.7014293670654297
    3. '=len' → logprob: -11.32642936706543
    4. ' ' → logprob: -13.70142936706543
    5. '=k' → logprob: -13.95142936706543
    6. '＝' → logprob: -14.32642936706543
    7. ' ' → logprob: -15.07642936706543
    8. '=n' → logprob: -15.20142936706543
    9. 's' → logprob: -15.32642936706543
    10. '=int' → logprob: -15.32642936706543

Token 141: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5759404897689819
    2. ' len' → logprob: -0.8259404897689819
    3. '(len' → logprob: -13.825940132141113
    4. '	len' → logprob: -16.70094108581543
    5. '[len' → logprob: -18.70094108581543
    6. '=len' → logprob: -18.82594108581543
    7. ' ' → logprob: -19.82594108581543
    8. ',len' → logprob: -20.32594108581543
    9. 'Len' → logprob: -20.45094108581543
    10. ' ' → logprob: -20.45094108581543

Token 142: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004079708829522133
    2. '(' → logprob: -5.504079818725586
    3. ' (' → logprob: -13.629079818725586
    4. '(k' → logprob: -17.129079818725586
    5. '(
' → logprob: -17.254079818725586
    6. '()' → logprob: -18.879079818725586
    7. '((' → logprob: -19.004079818725586
    8. '('' → logprob: -19.129079818725586
    9. '(

' → logprob: -19.629079818725586
    10. '(nt' → logprob: -20.004079818725586

Token 143: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.625001907348633
    3. ')
' → logprob: -15.625001907348633
    4. ')#' → logprob: -16.875001907348633
    5. '))' → logprob: -17.375001907348633
    6. ')

' → logprob: -18.625001907348633
    7. ')`' → logprob: -18.625001907348633
    8. ')n' → logprob: -18.750001907348633
    9. '#' → logprob: -19.125001907348633
    10. '')' → logprob: -20.125001907348633

Token 144: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8865272402763367
    2. 'result' → logprob: -1.5115272998809814
    3. '#' → logprob: -1.6365272998809814
    4. ' 
' → logprob: -2.8865272998809814
    5. 'p' → logprob: -3.7615272998809814
    6. 's' → logprob: -3.8865272998809814
    7. 'i' → logprob: -4.386527061462402
    8. 'sum' → logprob: -4.636527061462402
    9. 'max' → logprob: -4.761527061462402
    10. '  
' → logprob: -5.136527061462402

Token 145: ' Initial' (ID: 9209)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9945063591003418
    2. 'count' → logprob: -1.4945063591003418
    3. 'non' → logprob: -2.244506359100342
    4. 'total' → logprob: -2.744506359100342
    5. 'for' → logprob: -2.869506359100342
    6. 's' → logprob: -3.119506359100342
    7. '#' → logprob: -3.369506359100342
    8. 'res' → logprob: -3.744506359100342
    9. 'sum' → logprob: -3.994506359100342
    10. 'i' → logprob: -4.369506359100342

Token 146: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.03853346034884453
    2. 'isation' → logprob: -4.663533687591553
    3. 'ise' → logprob: -4.788533687591553
    4. 'er' → logprob: -5.038533687591553
    5. 'ize' → logprob: -5.788533687591553
    6. 'e' → logprob: -6.663533687591553
    7. '#' → logprob: -6.913533687591553
    8. 'isateur' → logprob: -6.913533687591553
    9. 'izer' → logprob: -7.038533687591553
    10. 'is' → logprob: -7.163533687591553

Token 147: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9776003360748291
    2. ' count' → logprob: -1.977600336074829
    3. 'result' → logprob: -2.852600336074829
    4. ' un' → logprob: -2.977600336074829
    5. ' une' → logprob: -2.977600336074829
    6. ' res' → logprob: -2.977600336074829
    7. 's' → logprob: -3.227600336074829
    8. 'sum' → logprob: -3.227600336074829
    9. ' result' → logprob: -3.352600336074829
    10. 'res' → logprob: -3.352600336074829

Token 148: ' variable' (ID: 11076)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8963702917098999
    2. 'result' → logprob: -1.1463702917099
    3. 'comp' → logprob: -1.7713702917099
    4. 's' → logprob: -3.3963704109191895
    5. 'res' → logprob: -3.7713704109191895
    6. 'total' → logprob: -4.3963704109191895
    7. 'prod' → logprob: -4.6463704109191895
    8. 'product' → logprob: -5.2713704109191895
    9. 'produ' → logprob: -5.3963704109191895
    10. 'counter' → logprob: -5.6463704109191895

Token 149: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9144838452339172
    2. 'count' → logprob: -1.4144837856292725
    3. ' result' → logprob: -2.4144837856292725
    4. ' count' → logprob: -2.6644837856292725
    5. ' res' → logprob: -3.4144837856292725
    6. 'res' → logprob: -3.7894837856292725
    7. 's' → logprob: -4.039484024047852
    8. ' compteur' → logprob: -4.039484024047852
    9. 'i' → logprob: -4.164484024047852
    10. ' i' → logprob: -4.414484024047852

Token 150: 'Dp' (ID: 116458)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8089675903320312
    2. 'result' → logprob: -0.9339675903320312
    3. 'res' → logprob: -3.0589675903320312
    4. 's' → logprob: -4.308967590332031
    5. 'total' → logprob: -4.308967590332031
    6. 'non' → logprob: -4.433967590332031
    7. 'prod' → logprob: -4.558967590332031
    8. 'product' → logprob: -4.683967590332031
    9. 'ans' → logprob: -4.683967590332031
    10. 'sum' → logprob: -4.933967590332031

Token 151: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029981542378664017
    2. ''' → logprob: -4.40498161315918
    3. '=' → logprob: -5.02998161315918
    4. '=[]' → logprob: -6.40498161315918
    5. 'p' → logprob: -6.52998161315918
    6. 'r' → logprob: -6.77998161315918
    7. '0' → logprob: -7.27998161315918
    8. 'a' → logprob: -7.27998161315918
    9. 'os' → logprob: -7.90498161315918
    10. '']' → logprob: -8.15498161315918

Token 152: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048649366945028305
    2. '=' → logprob: -3.048649311065674
    3. ' ' → logprob: -11.298649787902832
    4. '=[]' → logprob: -11.423649787902832
    5. ' =[' → logprob: -11.673649787902832
    6. 'p' → logprob: -11.923649787902832
    7. ',' → logprob: -12.173649787902832
    8. '0' → logprob: -12.298649787902832
    9. '=[' → logprob: -12.548649787902832
    10. 's' → logprob: -12.798649787902832

Token 153: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5235979557037354
    2. ' =' → logprob: -0.8985979557037354
    3. ' ' → logprob: -8.648597717285156
    4. 's' → logprob: -9.648597717285156
    5. ' va' → logprob: -9.773597717285156
    6. ' sera' → logprob: -10.023597717285156
    7. '=[]' → logprob: -11.023597717285156
    8. ',' → logprob: -11.273597717285156
    9. ' ' → logprob: -11.898597717285156
    10. '=""' → logprob: -12.148597717285156

Token 154: ' notre' (ID: 12092)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11405855417251587
    2. ' ' → logprob: -2.614058494567871
    3. '[]' → logprob: -3.864058494567871
    4. ' []' → logprob: -5.239058494567871
    5. '1' → logprob: -5.364058494567871
    6. '=' → logprob: -6.489058494567871
    7. ' égal' → logprob: -7.989058494567871
    8. '[' → logprob: -8.114058494567871
    9. ' [' → logprob: -8.239058494567871
    10. '{}' → logprob: -8.489058494567871

Token 155: ' tableau' (ID: 67053)
  Prédit: ' produit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.13597123324871063
    2. ' compteur' → logprob: -2.8859713077545166
    3. ' résultat' → logprob: -3.7609713077545166
    4. ' product' → logprob: -4.3859710693359375
    5. 'result' → logprob: -5.0109710693359375
    6. ' nombre' → logprob: -5.1359710693359375
    7. 'product' → logprob: -5.5109710693359375
    8. ' result' → logprob: -5.8859710693359375
    9. ' tableau' → logprob: -6.0109710693359375
    10. 'p' → logprob: -6.6359710693359375

Token 156: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1927545666694641
    2. '[]' → logprob: -2.5677545070648193
    3. '[' → logprob: -2.6927545070648193
    4. '=[]' → logprob: -4.567754745483398
    5. '=' → logprob: -5.067754745483398
    6. 'Dp' → logprob: -5.192754745483398
    7. 'dp' → logprob: -5.692754745483398
    8. '[:]' → logprob: -6.817754745483398
    9. '=[' → logprob: -7.442754745483398
    10. 'D' → logprob: -7.692754745483398

Token 157: ' programmation' (ID: 166376)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9075312614440918
    2. 'dp' → logprob: -1.7825312614440918
    3. 'int' → logprob: -2.407531261444092
    4. '0' → logprob: -2.532531261444092
    5. ' taille' → logprob: -3.157531261444092
    6. ' [' → logprob: -3.282531261444092
    7. ' int' → logprob: -3.407531261444092
    8. 'p' → logprob: -3.407531261444092
    9. ' p' → logprob: -3.907531261444092
    10. '[int' → logprob: -4.407531261444092

Token 158: ' dynamique' (ID: 98708)
  Prédit: ' dynamique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamique' → logprob: -1.2931950092315674
    2. '_' → logprob: -1.6681950092315674
    3. 'dp' → logprob: -2.0431950092315674
    4. '_dp' → logprob: -2.1681950092315674
    5. 'dynamic' → logprob: -2.9181950092315674
    6. '_dynamic' → logprob: -3.0431950092315674
    7. 'd' → logprob: -3.5431950092315674
    8. 'D' → logprob: -3.5431950092315674
    9. ' dynamic' → logprob: -3.5431950092315674
    10. ' =' → logprob: -3.5431950092315674

Token 159: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07455690205097198
    2. '=' → logprob: -2.699556827545166
    3. 'Dp' → logprob: -5.824556827545166
    4. 'dp' → logprob: -7.824556827545166
    5. ' ' → logprob: -7.949556827545166
    6. '[' → logprob: -8.074557304382324
    7. 'DP' → logprob: -9.324557304382324
    8. '=[' → logprob: -9.324557304382324
    9. '[]' → logprob: -9.574557304382324
    10. '=[]' → logprob: -9.574557304382324

Token 160: 'DP' (ID: 16851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23408615589141846
    2. '[' → logprob: -1.9840861558914185
    3. ' [' → logprob: -3.609086036682129
    4. '[]' → logprob: -4.234086036682129
    5. ' )' → logprob: -4.484086036682129
    6. '[])' → logprob: -5.484086036682129
    7. 'dp' → logprob: -5.609086036682129
    8. '[p' → logprob: -5.984086036682129
    9. '[n' → logprob: -6.984086036682129
    10. '),' → logprob: -6.984086036682129

Token 161: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7584919929504395
    2. ' =' → logprob: -0.7584919929504395
    3. '=' → logprob: -3.3834919929504395
    4. '[]' → logprob: -4.7584919929504395
    5. ']' → logprob: -5.2584919929504395
    6. ',' → logprob: -6.0084919929504395
    7. '')' → logprob: -6.1334919929504395
    8. '[' → logprob: -6.1334919929504395
    9. '=[]' → logprob: -6.3834919929504395
    10. ' )' → logprob: -6.7584919929504395

Token 162: '#' (ID: 2)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.317459374666214
    2. ' D' → logprob: -1.3174593448638916
    3. 'D' → logprob: -5.692459583282471
    4. '[' → logprob: -8.317459106445312
    5. 'DP' → logprob: -8.567459106445312
    6. ' [' → logprob: -8.692459106445312
    7. 'dp' → logprob: -9.192459106445312
    8. ' =' → logprob: -10.192459106445312
    9. '[D' → logprob: -11.317459106445312
    10. '[]' → logprob: -11.442459106445312

Token 163: ' C' (ID: 363)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.003175456076860428
    2. 'D' → logprob: -6.253175258636475
    3. ' D' → logprob: -6.878175258636475
    4. 'DP' → logprob: -8.628175735473633
    5. 'dp' → logprob: -10.253175735473633
    6. '#' → logprob: -14.253175735473633
    7. 'Dm' → logprob: -15.253175735473633
    8. 'Dn' → logprob: -16.003175735473633
    9. '_dp' → logprob: -16.128175735473633
    10. 'import' → logprob: -16.128175735473633

Token 164: ''est' (ID: 6616)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05120017006993294
    2. ' =' → logprob: -3.3012001514434814
    3. 'P' → logprob: -6.0512003898620605
    4. '_p' → logprob: -6.3012003898620605
    5. 'Dp' → logprob: -6.3012003898620605
    6. '_' → logprob: -6.5512003898620605
    7. 'dp' → logprob: -7.0512003898620605
    8. '=[]' → logprob: -7.1762003898620605
    9. '=' → logprob: -7.3012003898620605
    10. '#' → logprob: -7.4262003898620605

Token 165: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.04150525853037834
    2. ' un' → logprob: -3.7915053367614746
    3. 'une' → logprob: -4.166505336761475
    4. ' a' → logprob: -6.666505336761475
    5. 'a' → logprob: -7.416505336761475
    6. '[]' → logprob: -8.041504859924316
    7. 'un' → logprob: -8.791504859924316
    8. '[' → logprob: -9.416504859924316
    9. ' []' → logprob: -9.791504859924316
    10. ' [' → logprob: -10.916504859924316

Token 166: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8043708801269531
    2. '[[' → logprob: -1.5543708801269531
    3. '[' → logprob: -1.6793708801269531
    4. '[]' → logprob: -3.179370880126953
    5. ' list' → logprob: -3.429370880126953
    6. 'liste' → logprob: -3.929370880126953
    7. ' [' → logprob: -4.054370880126953
    8. ' [[[' → logprob: -4.429370880126953
    9. 'dict' → logprob: -4.679370880126953
    10. ' [[' → logprob: -4.929370880126953

Token 167: ' ' (ID: 220)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5351359248161316
    2. '[' → logprob: -1.4101359844207764
    3. ' =' → logprob: -2.1601359844207764
    4. ' [' → logprob: -4.035135746002197
    5. 'de' → logprob: -4.910135746002197
    6. '[]' → logprob: -5.035135746002197
    7. ' à' → logprob: -5.160135746002197
    8. '=[' → logprob: -5.160135746002197
    9. ' of' → logprob: -5.535135746002197
    10. ' d' → logprob: -6.910135746002197

Token 168: '3' (ID: 18)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0975567027926445
    2. ' de' → logprob: -2.9725565910339355
    3. 'de' → logprob: -4.3475565910339355
    4. '[]' → logprob: -4.3475565910339355
    5. ' [' → logprob: -5.4725565910339355
    6. ' of' → logprob: -5.9725565910339355
    7. 'of' → logprob: -6.0975565910339355
    8. '[
' → logprob: -6.7225565910339355
    9. ' =' → logprob: -7.2225565910339355
    10. '[n' → logprob: -7.7225565910339355

Token 169: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5309827327728271
    2. 'd' → logprob: -1.0309827327728271
    3. ' -' → logprob: -3.280982732772827
    4. '[' → logprob: -5.280982971191406
    5. '-dimensional' → logprob: -5.530982971191406
    6. '-d' → logprob: -5.905982971191406
    7. '[-' → logprob: -6.405982971191406
    8. '-' → logprob: -7.155982971191406
    9. '[]' → logprob: -7.155982971191406
    10. 'dim' → logprob: -7.280982971191406

Token 170: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.315205842256546
    2. 'dp' → logprob: -2.5652058124542236
    3. ' de' → logprob: -3.0652058124542236
    4. ' =' → logprob: -3.4402058124542236
    5. ' dp' → logprob: -4.315206050872803
    6. '=[' → logprob: -4.565206050872803
    7. '[]' → logprob: -4.690206050872803
    8. ' [' → logprob: -4.690206050872803
    9. 'DP' → logprob: -4.815206050872803
    10. 'Dp' → logprob: -4.940206050872803

Token 171: 'tro' (ID: 33770)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8287056684494019
    2. ' [[[' → logprob: -1.3287056684494019
    3. '[int' → logprob: -2.4537057876586914
    4. '[' → logprob: -2.8287057876586914
    5. '[k' → logprob: -2.8287057876586914
    6. '[[' → logprob: -3.7037057876586914
    7. ' [' → logprob: -3.9537057876586914
    8. ' )' → logprob: -4.328705787658691
    9. ' list' → logprob: -4.578705787658691
    10. 'list' → logprob: -4.953705787658691

Token 172: 'is' (ID: 276)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3171444535255432
    2. '-d' → logprob: -1.8171443939208984
    3. 'D' → logprob: -2.8171443939208984
    4. '-dimensional' → logprob: -3.8171443939208984
    5. 'dim' → logprob: -4.567144393920898
    6. 'is' → logprob: -5.067144393920898
    7. '-' → logprob: -5.442144393920898
    8. '_dim' → logprob: -5.817144393920898
    9. '-D' → logprob: -8.067144393920898
    10. 'dimension' → logprob: -8.067144393920898

Token 173: ' dimensions' (ID: 23995)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6447657942771912
    2. '-dimensional' → logprob: -1.144765853881836
    3. 'dim' → logprob: -3.519765853881836
    4. '-d' → logprob: -3.519765853881836
    5. '[]' → logprob: -3.894765853881836
    6. ' [' → logprob: -4.144765853881836
    7. '-' → logprob: -4.269765853881836
    8. 'd' → logprob: -4.644765853881836
    9. 'dimensions' → logprob: -5.019765853881836
    10. '[
' → logprob: -5.269765853881836

Token 174: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04176288843154907
    2. '[' → logprob: -3.4167628288269043
    3. '=[' → logprob: -6.416762828826904
    4. ' )' → logprob: -6.666762828826904
    5. ',' → logprob: -7.166762828826904
    6. '[]' → logprob: -7.166762828826904
    7. ']' → logprob: -7.416762828826904
    8. ' =' → logprob: -7.416762828826904
    9. '=' → logprob: -8.166763305664062
    10. '[])' → logprob: -8.291763305664062

Token 175: ' :
' (ID: 10039)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8081214427947998
    2. ' =' → logprob: -0.9331214427947998
    3. 'dp' → logprob: -3.1831214427948
    4. ' dp' → logprob: -3.4331214427948
    5. ' ' → logprob: -3.5581214427948
    6. '_dp' → logprob: -4.058121681213379
    7. ',' → logprob: -4.808121681213379
    8. 'Dp' → logprob: -5.183121681213379
    9. ' [' → logprob: -5.433121681213379
    10. '=' → logprob: -5.558121681213379

Token 176: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8891676664352417
    2. ' [[[' → logprob: -1.0141676664352417
    3. ' [' → logprob: -1.7641676664352417
    4. '[[' → logprob: -3.8891677856445312
    5. '[
' → logprob: -4.889167785644531
    6. 'dp' → logprob: -5.014167785644531
    7. ' [
' → logprob: -5.264167785644531
    8. ' dp' → logprob: -5.639167785644531
    9. ' [[' → logprob: -5.639167785644531
    10. ' D' → logprob: -5.889167785644531

Token 177: '  ' (ID: 256)
  Prédit: ' [[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[[' → logprob: -0.18911269307136536
    2. 'Dp' → logprob: -3.064112663269043
    3. '[[' → logprob: -3.189112663269043
    4. ' D' → logprob: -3.189112663269043
    5. '[' → logprob: -4.189112663269043
    6. ' [' → logprob: -4.689112663269043
    7. 'dp' → logprob: -4.689112663269043
    8. ' dp' → logprob: -5.189112663269043
    9. ' [[' → logprob: -7.064112663269043
    10. ' ' → logprob: -7.189112663269043

Token 178: ' D' (ID: 415)
  Prédit: ' [[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[[' → logprob: -0.1272275298833847
    2. '[[' → logprob: -2.752227544784546
    3. '[' → logprob: -3.877227544784546
    4. 'dp' → logprob: -4.377227306365967
    5. ' [' → logprob: -5.252227306365967
    6. 'Dp' → logprob: -5.252227306365967
    7. ' dp' → logprob: -5.502227306365967
    8. '[k' → logprob: -6.127227306365967
    9. '[
' → logprob: -6.502227306365967
    10. ' D' → logprob: -7.252227306365967

Token 179: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.8126592193730175e-05
    2. ' =' → logprob: -9.8750581741333
    3. '
' → logprob: -14.0000581741333
    4. '=' → logprob: -14.2500581741333
    5. 'п' → logprob: -14.5000581741333
    6. ' p' → logprob: -14.5000581741333
    7. '```' → logprob: -15.3125581741333
    8. '_p' → logprob: -15.3750581741333
    9. '

' → logprob: -15.3750581741333
    10. ')' → logprob: -15.3750581741333

Token 180: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14324624836444855
    2. '=' → logprob: -2.0182461738586426
    3. '=[' → logprob: -7.518246173858643
    4. '=[[' → logprob: -11.1432466506958
    5. '[' → logprob: -12.2682466506958
    6. '=[]' → logprob: -12.7682466506958
    7. ' =[' → logprob: -12.7682466506958
    8. ' ' → logprob: -13.7682466506958
    9. 'p' → logprob: -14.6432466506958
    10. ']' → logprob: -15.3932466506958

Token 181: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09788957238197327
    2. ']' → logprob: -2.4728896617889404
    3. ' ][' → logprob: -4.972889423370361
    4. ']=' → logprob: -7.097889423370361
    5. ' =' → logprob: -7.972889423370361
    6. ' ]' → logprob: -7.972889423370361
    7. '=' → logprob: -8.59788990020752
    8. ' ' → logprob: -9.72288990020752
    9. '][-' → logprob: -9.72288990020752
    10. '][]' → logprob: -10.09788990020752

Token 182: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012502583675086498
    2. '][' → logprob: -4.762502670288086
    3. 'p' → logprob: -6.762502670288086
    4. 'k' → logprob: -7.887502670288086
    5. 's' → logprob: -8.512502670288086
    6. 'digits' → logprob: -8.637502670288086
    7. 'digit' → logprob: -8.637502670288086
    8. ']' → logprob: -8.762502670288086
    9. 'd' → logprob: -8.762502670288086
    10. '0' → logprob: -8.762502670288086

Token 183: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008781790733337402
    2. ']' → logprob: -4.758781909942627
    3. ' ][' → logprob: -9.008781433105469
    4. '][]' → logprob: -10.508781433105469
    5. ']=' → logprob: -12.508781433105469
    6. '][:' → logprob: -13.133781433105469
    7. ' ]' → logprob: -13.133781433105469
    8. '],' → logprob: -13.133781433105469
    9. '=' → logprob: -13.258781433105469
    10. '[' → logprob: -13.633781433105469

Token 184: 'bound' (ID: 18791)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03294580057263374
    2. '0' → logprob: -4.15794563293457
    3. 'l' → logprob: -4.78294563293457
    4. ']' → logprob: -6.78294563293457
    5. 'd' → logprob: -6.78294563293457
    6. 's' → logprob: -6.90794563293457
    7. 'z' → logprob: -6.90794563293457
    8. 't' → logprob: -7.03294563293457
    9. 'x' → logprob: -7.78294563293457
    10. 'c' → logprob: -7.78294563293457

Token 185: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009451943449676037
    2. ' ]' → logprob: -4.759451866149902
    3. 's' → logprob: -7.759451866149902
    4. ']=' → logprob: -8.884451866149902
    5. 't' → logprob: -9.134451866149902
    6. 'y' → logprob: -10.134451866149902
    7. 'e' → logprob: -10.509451866149902
    8. '_]' → logprob: -11.509451866149902
    9. 'x' → logprob: -11.634451866149902
    10. ' ' → logprob: -11.884451866149902

Token 186: '#' (ID: 2)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22558900713920593
    2. '=' → logprob: -1.6005890369415283
    3. ' =[' → logprob: -9.35058879852295
    4. '=[' → logprob: -9.72558879852295
    5. '=[]' → logprob: -11.22558879852295
    6. ' ' → logprob: -12.35058879852295
    7. '[' → logprob: -12.60058879852295
    8. ']' → logprob: -12.72558879852295
    9. 'import' → logprob: -13.47558879852295
    10. ' =
' → logprob: -14.10058879852295

Token 187: '  ' (ID: 256)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10035708546638489
    2. '=' → logprob: -2.3503570556640625
    3. ' =[' → logprob: -9.225357055664062
    4. '=[' → logprob: -10.225357055664062
    5. ' ' → logprob: -11.975357055664062
    6. '[' → logprob: -12.225357055664062
    7. ' =
' → logprob: -13.850357055664062
    8. 'n' → logprob: -14.350357055664062
    9. '=[]' → logprob: -14.475357055664062
    10. ',' → logprob: -15.100357055664062

Token 188: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17987507581710815
    2. '=' → logprob: -1.804875135421753
    3. ' =[' → logprob: -9.679875373840332
    4. '=[' → logprob: -10.054875373840332
    5. ' ' → logprob: -11.429875373840332
    6. '[' → logprob: -12.179875373840332
    7. ']' → logprob: -12.554875373840332
    8. ' =
' → logprob: -13.804875373840332
    9. ' ]' → logprob: -14.179875373840332
    10. '0' → logprob: -14.429875373840332

Token 189: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8156895637512207
    2. ' =' → logprob: -1.1906895637512207
    3. ']' → logprob: -1.9406895637512207
    4. '][' → logprob: -2.6906895637512207
    5. '<|end|>' → logprob: -4.565689563751221
    6. ' in' → logprob: -4.690689563751221
    7. ']=' → logprob: -4.815689563751221
    8. 'import' → logprob: -6.315689563751221
    9. 's' → logprob: -6.565689563751221
    10. ',' → logprob: -6.565689563751221

Token 190: ' indice' (ID: 90848)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2665075361728668
    2. '0' → logprob: -2.016507625579834
    3. ' i' → logprob: -2.641507625579834
    4. ' position' → logprob: -4.266507625579834
    5. ' index' → logprob: -5.641507625579834
    6. ' int' → logprob: -5.766507625579834
    7. 'indice' → logprob: -6.516507625579834
    8. 'position' → logprob: -6.766507625579834
    9. 'i' → logprob: -6.766507625579834
    10. ' indice' → logprob: -7.766507625579834

Token 191: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' chiffre' (ID: 107420)
  Prédit: ' chiffre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffre' → logprob: -0.4401184320449829
    2. ' caractère' → logprob: -1.940118432044983
    3. ' prochain' → logprob: -2.6901183128356934
    4. ' ' → logprob: -3.3151183128356934
    5. 'digit' → logprob: -4.065118312835693
    6. 'i' → logprob: -4.190118312835693
    7. 'n' → logprob: -4.315118312835693
    8. ' i' → logprob: -4.440118312835693
    9. 'ch' → logprob: -4.690118312835693
    10. 'car' → logprob: -5.190118312835693

Token 193: ' actuel' (ID: 113646)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' que' (ID: 661)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.307625412940979
    2. '<|end|>' → logprob: -1.682625412940979
    3. ' =' → logprob: -3.9326252937316895
    4. '=' → logprob: -4.0576252937316895
    5. '[' → logprob: -4.3076252937316895
    6. '][' → logprob: -4.5576252937316895
    7. ',' → logprob: -5.1826252937316895
    8. '[i' → logprob: -5.5576252937316895
    9. '<|end|>' → logprob: -6.1826252937316895
    10. ' ]' → logprob: -6.4326252937316895

Token 195: ' nous' (ID: 6176)
  Prédit: ' nous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nous' → logprob: -0.6194648146629333
    2. ' l' → logprob: -1.2444648742675781
    3. ' we' → logprob: -2.494464874267578
    4. ' n' → logprob: -3.369464874267578
    5. ' on' → logprob: -3.994464874267578
    6. ''on' → logprob: -4.494464874267578
    7. 'n' → logprob: -4.869464874267578
    8. ' ' → logprob: -5.619464874267578
    9. 'nous' → logprob: -5.619464874267578
    10. 'on' → logprob: -6.119464874267578

Token 196: ' trait' (ID: 15458)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4803116023540497
    2. 'trait' → logprob: -1.730311632156372
    3. ' trait' → logprob: -3.105311632156372
    4. 'tra' → logprob: -3.230311632156372
    5. 'exam' → logprob: -3.980311632156372
    6. ' allons' → logprob: -4.230311393737793
    7. 'an' → logprob: -4.230311393737793
    8. ' traiter' → logprob: -4.355311393737793
    9. ' voulons' → logprob: -5.230311393737793
    10. 'v' → logprob: -5.230311393737793

Token 197: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.008441883139312267
    2. 'e' → logprob: -5.508441925048828
    3. ']' → logprob: -5.758441925048828
    4. 'ant' → logprob: -7.758441925048828
    5. '#' → logprob: -8.008441925048828
    6. 'é' → logprob: -9.133441925048828
    7. '=' → logprob: -9.508441925048828
    8. 'on' → logprob: -10.258441925048828
    9. 'ent' → logprob: -10.383441925048828
    10. 'n' → logprob: -10.383441925048828

Token 198: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2983851730823517
    2. ']' → logprob: -2.2983851432800293
    3. '<|end|>' → logprob: -2.4233851432800293
    4. '=' → logprob: -3.2983851432800293
    5. ' ' → logprob: -4.923385143280029
    6. '][' → logprob: -5.048385143280029
    7. ' ]' → logprob: -5.548385143280029
    8. '[i' → logprob: -5.673385143280029
    9. '[' → logprob: -6.173385143280029
    10. ',' → logprob: -6.548385143280029

Token 199: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37450000643730164
    2. '])' → logprob: -2.749500036239624
    3. ']' → logprob: -3.249500036239624
    4. ' ' → logprob: -3.249500036239624
    5. ' )' → logprob: -3.249500036239624
    6. ' ])' → logprob: -3.499500036239624
    7. ' ]' → logprob: -3.624500036239624
    8. ' n' → logprob: -3.874500036239624
    9. ' =' → logprob: -4.499499797821045
    10. '][' → logprob: -4.624499797821045

Token 200: ' à' (ID: 1221)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12094384431838989
    2. '+' → logprob: -3.370943784713745
    3. ']' → logprob: -3.620943784713745
    4. '])' → logprob: -3.870943784713745
    5. ',' → logprob: -4.745944023132324
    6. ')' → logprob: -5.120944023132324
    7. ' ][' → logprob: -5.620944023132324
    8. ':' → logprob: -6.495944023132324
    9. '...' → logprob: -6.495944023132324
    10. ']+' → logprob: -6.620944023132324

Token 201: ' k' (ID: 372)
  Prédit: 'keta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.4316927492618561
    2. ' k' → logprob: -1.0566927194595337
    3. 'k' → logprob: -5.931692600250244
    4. ' p' → logprob: -9.306693077087402
    5. ' ' → logprob: -9.931693077087402
    6. 'kta' → logprob: -9.931693077087402
    7. '	k' → logprob: -10.431693077087402
    8. ' n' → logprob: -10.994193077087402
    9. '```' → logprob: -11.744193077087402
    10. ' kete' → logprob: -12.431693077087402

Token 202: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -0.008649553172290325
    2. 'a' → logprob: -4.8836493492126465
    3. 'e' → logprob: -7.1336493492126465
    4. 'ata' → logprob: -8.883649826049805
    5. 'ETA' → logprob: -10.883649826049805
    6. '+' → logprob: -11.008649826049805
    7. '-' → logprob: -11.133649826049805
    8. '])' → logprob: -11.383649826049805
    9. ')' → logprob: -11.633649826049805
    10. '#' → logprob: -11.758649826049805

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05623909831047058
    2. '-' → logprob: -2.931239128112793
    3. '+' → logprob: -7.306239128112793
    4. ' -' → logprob: -8.306239128112793
    5. ' )' → logprob: -8.681239128112793
    6. ']' → logprob: -9.806239128112793
    7. '),' → logprob: -10.181239128112793
    8. '-)' → logprob: -10.556239128112793
    9. '#' → logprob: -10.806239128112793
    10. '])' → logprob: -11.056239128112793

Token 204: '#' (ID: 2)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40642088651657104
    2. '=' → logprob: -1.6564209461212158
    3. '[' → logprob: -2.906420946121216
    4. 'Dp' → logprob: -3.156420946121216
    5. '<|end|>' → logprob: -4.781420707702637
    6. 'dp' → logprob: -4.781420707702637
    7. 'D' → logprob: -5.406420707702637
    8. ']' → logprob: -5.531420707702637
    9. 'n' → logprob: -5.656420707702637
    10. ' ' → logprob: -5.781420707702637

Token 205: '  ' (ID: 256)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.6315209865570068
    2. ' =' → logprob: -1.6315209865570068
    3. '[' → logprob: -2.131520986557007
    4. '<|end|>' → logprob: -3.131520986557007
    5. 'dp' → logprob: -3.756520986557007
    6. '=' → logprob: -4.006521224975586
    7. '[
' → logprob: -4.256521224975586
    8. 'p' → logprob: -4.506521224975586
    9. ']' → logprob: -5.131521224975586
    10. '_dp' → logprob: -5.631521224975586

Token 206: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.03913123905658722
    2. ' j' → logprob: -3.9141311645507812
    3. 'p' → logprob: -4.289131164550781
    4. '0' → logprob: -6.414131164550781
    5. '
' → logprob: -7.664131164550781
    6. '2' → logprob: -7.664131164550781
    7. '3' → logprob: -8.039131164550781
    8. ' p' → logprob: -8.164131164550781
    9. ' ' → logprob: -8.289131164550781
    10. 'k' → logprob: -8.414131164550781

Token 207: ' :' (ID: 712)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.042405687272548676
    2. ' ][' → logprob: -4.042405605316162
    3. ']' → logprob: -4.667405605316162
    4. ' =' → logprob: -5.167405605316162
    5. '=' → logprob: -5.417405605316162
    6. '+' → logprob: -6.417405605316162
    7. ' ' → logprob: -7.167405605316162
    8. '[' → logprob: -7.542405605316162
    9. ' in' → logprob: -7.917405605316162
    10. ']=' → logprob: -8.04240608215332

Token 208: ' nombre' (ID: 9733)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04505885764956474
    2. ' p' → logprob: -3.1700589656829834
    3. '(p' → logprob: -7.420058727264404
    4. '0' → logprob: -7.545058727264404
    5. ' (' → logprob: -7.920058727264404
    6. ' nombre' → logprob: -8.795059204101562
    7. ' number' → logprob: -8.795059204101562
    8. 'nombre' → logprob: -9.170059204101562
    9. 'number' → logprob: -9.795059204101562
    10. ' ' → logprob: -10.545059204101562

Token 209: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.15316550433635712
    2. ' de' → logprob: -2.903165578842163
    3. 'des' → logprob: -3.653165578842163
    4. '<|end|>' → logprob: -4.153165340423584
    5. '_des' → logprob: -4.403165340423584
    6. ' of' → logprob: -4.403165340423584
    7. 'de' → logprob: -5.153165340423584
    8. ' ' → logprob: -5.403165340423584
    9. ' d' → logprob: -5.528165340423584
    10. 'd' → logprob: -6.653165340423584

Token 210: ' chiffres' (ID: 105565)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4623872637748718
    2. ' non' → logprob: -1.7123873233795166
    3. ' chiffres' → logprob: -2.3373873233795166
    4. '0' → logprob: -3.4623873233795166
    5. ' digits' → logprob: -4.0873870849609375
    6. 'non' → logprob: -4.3373870849609375
    7. ' caractères' → logprob: -4.9623870849609375
    8. 'digits' → logprob: -4.9623870849609375
    9. ' espaces' → logprob: -6.0873870849609375
    10. ' p' → logprob: -6.3373870849609375

Token 211: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.29112517833709717
    2. 'non' → logprob: -1.4161251783370972
    3. '_non' → logprob: -5.166125297546387
    4. 'nonnull' → logprob: -6.166125297546387
    5. ' ' → logprob: -7.666125297546387
    6. ' sélection' → logprob: -8.541125297546387
    7. ' utilisés' → logprob: -8.666125297546387
    8. ' pris' → logprob: -8.791125297546387
    9. 'not' → logprob: -9.166125297546387
    10. ' ' → logprob: -9.541125297546387

Token 212: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9906250238418579
    2. 'z' → logprob: -1.115625023841858
    3. 'zero' → logprob: -2.2406249046325684
    4. ' zéro' → logprob: -2.7406249046325684
    5. ' zeros' → logprob: -2.8656249046325684
    6. 'zeros' → logprob: -3.2406249046325684
    7. ' zero' → logprob: -3.6156249046325684
    8. ' z' → logprob: -5.365624904632568
    9. 'n' → logprob: -7.115624904632568
    10. 'zer' → logprob: -7.240624904632568

Token 213: 'éros' (ID: 120888)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.013727730140089989
    2. 'e' → logprob: -5.01372766494751
    3. 'eros' → logprob: -5.01372766494751
    4. 'éro' → logprob: -8.513728141784668
    5. 'er' → logprob: -10.138728141784668
    6. 'éros' → logprob: -10.388728141784668
    7. 'erro' → logprob: -10.638728141784668
    8. 'eroo' → logprob: -11.888728141784668
    9. '```' → logprob: -11.888728141784668
    10. '#' → logprob: -12.388728141784668

Token 214: ' utilisés' (ID: 94258)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' jusqu' (ID: 21961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ''ici' (ID: 162066)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.04856124520301819
    2. '’à' → logprob: -3.9235613346099854
    3. ''ici' → logprob: -4.548561096191406
    4. 'à' → logprob: -5.048561096191406
    5. 'i' → logprob: -5.298561096191406
    6. ''au' → logprob: -6.173561096191406
    7. ''' → logprob: -7.298561096191406
    8. ''i' → logprob: -7.548561096191406
    9. ' à' → logprob: -7.798561096191406
    10. '’ici' → logprob: -7.798561096191406

Token 217: ' (' (ID: 350)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3304748237133026
    2. ',' → logprob: -2.705474853515625
    3. '<|end|>' → logprob: -2.830474853515625
    4. '#' → logprob: -2.955474853515625
    5. ']' → logprob: -3.205474853515625
    6. '[' → logprob: -4.330474853515625
    7. ' =' → logprob: -4.705474853515625
    8. '   ' → logprob: -4.955474853515625
    9. ' ' → logprob: -5.330474853515625
    10. '  ' → logprob: -5.705474853515625

Token 218: '0' (ID: 15)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29643818736076355
    2. ' p' → logprob: -2.296438217163086
    3. ')' → logprob: -2.921438217163086
    4. '0' → logprob: -3.546438217163086
    5. ',' → logprob: -3.921438217163086
    6. 'keta' → logprob: -4.421438217163086
    7. 'k' → logprob: -4.671438217163086
    8. ' ' → logprob: -5.171438217163086
    9. ' ,' → logprob: -5.171438217163086
    10. 'n' → logprob: -5.671438217163086

Token 219: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06645715236663818
    2. ' +' → logprob: -2.8164572715759277
    3. ')' → logprob: -5.816457271575928
    4. ',' → logprob: -7.441457271575928
    5. ' jusqu' → logprob: -8.44145679473877
    6. '+)' → logprob: -8.56645679473877
    7. '][' → logprob: -9.56645679473877
    8. '+k' → logprob: -9.69145679473877
    9. ')+' → logprob: -9.94145679473877
    10. ']+' → logprob: -10.19145679473877

Token 220: ' k' (ID: 372)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3504684269428253
    2. ' p' → logprob: -1.225468397140503
    3. 'keta' → logprob: -6.350468635559082
    4. 'k' → logprob: -8.850468635559082
    5. ' ' → logprob: -9.725468635559082
    6. ' k' → logprob: -10.850468635559082
    7. 'n' → logprob: -11.100468635559082
    8. '	p' → logprob: -11.850468635559082
    9. ' n' → logprob: -12.537968635559082
    10. '   ' → logprob: -12.850468635559082

Token 221: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -6.337155355140567e-05
    2. 'a' → logprob: -11.250062942504883
    3. 'p' → logprob: -11.375062942504883
    4. 'ata' → logprob: -11.500062942504883
    5. '#' → logprob: -12.000062942504883
    6. 'e' → logprob: -12.375062942504883
    7. 'ета' → logprob: -13.000062942504883
    8. 'ETA' → logprob: -13.125062942504883
    9. '}' → logprob: -13.750062942504883
    10. '   ' → logprob: -13.875062942504883

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3865804672241211
    2. '+' → logprob: -1.261580467224121
    3. '#' → logprob: -4.511580467224121
    4. ']' → logprob: -4.511580467224121
    5. '][' → logprob: -5.011580467224121
    6. ')
' → logprob: -5.511580467224121
    7. '])' → logprob: -6.136580467224121
    8. ' +' → logprob: -7.011580467224121
    9. '[' → logprob: -8.386580467224121
    10. ',' → logprob: -8.511580467224121

Token 223: '#' (ID: 2)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.029996460303664207
    2. '#' → logprob: -3.529996395111084
    3. 'bound' → logprob: -9.404996871948242
    4. 'dp' → logprob: -10.029996871948242
    5. '_dp' → logprob: -11.154996871948242
    6. 'import' → logprob: -11.154996871948242
    7. '
' → logprob: -11.279996871948242
    8. 'p' → logprob: -11.529996871948242
    9. 'D' → logprob: -11.529996871948242
    10. '[' → logprob: -11.654996871948242

Token 224: '  ' (ID: 256)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0002820736262947321
    2. ' D' → logprob: -8.500282287597656
    3. 'D' → logprob: -10.000282287597656
    4. '
' → logprob: -10.750282287597656
    5. 'dp' → logprob: -11.875282287597656
    6. '#' → logprob: -13.875282287597656
    7. '_dp' → logprob: -14.375282287597656
    8. 'DP' → logprob: -14.500282287597656
    9. 'Dn' → logprob: -14.750282287597656
    10. 'd' → logprob: -15.125282287597656

Token 225: ' bound' (ID: 11608)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14151839911937714
    2. '1' → logprob: -2.2665183544158936
    3. 'bound' (adapté à ' bound') → logprob: -3.7665183544158936
    4. '0' → logprob: -6.266518592834473
    5. '
' → logprob: -7.016518592834473
    6. ' ' → logprob: -7.141518592834473
    7. ' bound' → logprob: -7.516518592834473
    8. '][' → logprob: -8.266518592834473
    9. 'b' → logprob: -9.016518592834473
    10. '3' → logprob: -9.016518592834473

Token 226: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7230135798454285
    2. ' =' → logprob: -0.8480135798454285
    3. ']' → logprob: -2.4730136394500732
    4. ']=' → logprob: -6.723013401031494
    5. 's' → logprob: -7.598013401031494
    6. '[' → logprob: -9.348013877868652
    7. '][' → logprob: -9.473013877868652
    8. '=[' → logprob: -9.723013877868652
    9. ')' → logprob: -10.098013877868652
    10. ' ]' → logprob: -10.598013877868652

Token 227: '0' (ID: 15)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5935607552528381
    2. '=' → logprob: -1.4685606956481934
    3. ' =' → logprob: -2.7185606956481934
    4. ')' → logprob: -3.0935606956481934
    5. '2' → logprob: -3.5935606956481934
    6. '3' → logprob: -3.8435606956481934
    7. ' +' → logprob: -3.9685606956481934
    8. ' ' → logprob: -4.093560695648193
    9. ']' → logprob: -4.968560695648193
    10. '][' → logprob: -5.218560695648193

Token 228: ' ou' (ID: 2031)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10871617496013641
    2. ' +' → logprob: -2.6087162494659424
    3. ')' → logprob: -4.733716011047363
    4. ',' → logprob: -4.858716011047363
    5. ']' → logprob: -5.733716011047363
    6. '=' → logprob: -6.108716011047363
    7. '+
' → logprob: -6.483716011047363
    8. '+)' → logprob: -6.483716011047363
    9. ' =' → logprob: -6.858716011047363
    10. '][' → logprob: -7.483716011047363

Token 229: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016034485772252083
    2. ' ' → logprob: -4.1410346031188965
    3. '   ' → logprob: -16.141035079956055
    4. ' ' → logprob: -16.516035079956055
    5. ')' → logprob: -17.641035079956055
    6. '2' → logprob: -18.141035079956055
    7. '
' → logprob: -18.141035079956055
    8. '```' → logprob: -18.516035079956055
    9. '１' → logprob: -19.141035079956055
    10. '	' → logprob: -19.328535079956055

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. ')' → logprob: -18.000001907348633
    4. '１' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.375001907348633
    6. '```' → logprob: -18.750001907348633
    7. '=' → logprob: -19.687501907348633
    8. ' ' → logprob: -19.750001907348633
    9. 'bound' → logprob: -19.750001907348633
    10. ',' → logprob: -19.875001907348633

Token 231: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013832957483828068
    2. '])' → logprob: -4.513833045959473
    3. ']=' → logprob: -7.013833045959473
    4. ')' → logprob: -7.013833045959473
    5. ' ]' → logprob: -7.013833045959473
    6. ']
' → logprob: -11.263833045959473
    7. ')]' → logprob: -11.388833045959473
    8. '#' → logprob: -11.513833045959473
    9. ' ])' → logprob: -11.513833045959473
    10. ' )' → logprob: -12.013833045959473

Token 232: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4748474955558777
    2. '=' → logprob: -0.9748474955558777
    3. ']' → logprob: -7.349847316741943
    4. ']=' → logprob: -9.849847793579102
    5. 'Dp' → logprob: -10.474847793579102
    6. ' =[' → logprob: -11.599847793579102
    7. '=[' → logprob: -11.724847793579102
    8. ' ' → logprob: -11.974847793579102
    9. 'dp' → logprob: -12.349847793579102
    10. ')' → logprob: -12.474847793579102

Token 233: ' 
' (ID: 793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3309029340744019
    2. ' int' → logprob: -1.7059029340744019
    3. '0' → logprob: -1.8309029340744019
    4. '[' → logprob: -2.2059030532836914
    5. '1' → logprob: -2.3309030532836914
    6. ' [' → logprob: -2.7059030532836914
    7. 'int' → logprob: -3.8309030532836914
    8. '2' → logprob: -4.080903053283691
    9. ')' → logprob: -4.455903053283691
    10. '[int' → logprob: -4.580903053283691

Token 234: '#' (ID: 2)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26776212453842163
    2. '[' → logprob: -2.5177621841430664
    3. ' ' → logprob: -2.5177621841430664
    4. '=' → logprob: -3.3927621841430664
    5. '<|end|>' → logprob: -4.517762184143066
    6. '  ' → logprob: -5.142762184143066
    7. ']' → logprob: -5.267762184143066
    8. ' [' → logprob: -5.392762184143066
    9. '[
' → logprob: -6.392762184143066
    10. ' ]' → logprob: -6.517762184143066

Token 235: '      ' (ID: 1699)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32394635677337646
    2. '[
' → logprob: -1.6989463567733765
    3. ' [' → logprob: -3.073946475982666
    4. ' [
' → logprob: -3.823946475982666
    5. ' ' → logprob: -4.823946475982666
    6. '[[' → logprob: -5.073946475982666
    7. '0' → logprob: -5.323946475982666
    8. ']' → logprob: -6.073946475982666
    9. '2' → logprob: -6.448946475982666
    10. ' [[' → logprob: -7.198946475982666

Token 236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20691053569316864
    2. ' ' → logprob: -1.706910490989685
    3. ' int' → logprob: -5.456910610198975
    4. 'int' → logprob: -7.581910610198975
    5. '1' → logprob: -8.081910133361816
    6. ')' → logprob: -9.831910133361816
    7. ' bound' → logprob: -9.831910133361816
    8. '  ' → logprob: -10.206910133361816
    9. ' #' → logprob: -10.581910133361816
    10. 'True' → logprob: -11.331910133361816

Token 237: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21356578171253204
    2. ' ' → logprob: -1.8385658264160156
    3. '1' → logprob: -3.7135658264160156
    4. '[' → logprob: -6.338565826416016
    5. 'True' → logprob: -6.338565826416016
    6. ' int' → logprob: -6.588565826416016
    7. ' True' → logprob: -7.088565826416016
    8. 'int' → logprob: -7.213565826416016
    9. ' [' → logprob: -7.838565826416016
    10. ')' → logprob: -7.963565826416016

Token 238: ' signifie' (ID: 81149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7127834558486938
    2. ']' → logprob: -1.3377834558486938
    3. ' =' → logprob: -2.5877833366394043
    4. '=' → logprob: -3.0877833366394043
    5. ',' → logprob: -3.0877833366394043
    6. ' )' → logprob: -4.212783336639404
    7. ' ,' → logprob: -4.337783336639404
    8. ' ' → logprob: -4.462783336639404
    9. ' ]' → logprob: -4.712783336639404
    10. '<|end|>' → logprob: -4.837783336639404

Token 239: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.057655151933431625
    2. ' qu' → logprob: -3.682655096054077
    3. ' that' → logprob: -4.057655334472656
    4. 'qu' → logprob: -5.057655334472656
    5. 'que' → logprob: -5.557655334472656
    6. 'that' → logprob: -6.307655334472656
    7. ' we' → logprob: -7.682655334472656
    8. '#' → logprob: -8.682655334472656
    9. ' ' → logprob: -9.432655334472656
    10. ' strict' → logprob: -9.557655334472656

Token 240: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6504022479057312
    2. 'on' → logprob: -1.275402307510376
    3. ' nous' → logprob: -2.025402307510376
    4. ' la' → logprob: -4.150402069091797
    5. 'nous' → logprob: -4.275402069091797
    6. 'la' → logprob: -4.400402069091797
    7. ' we' → logprob: -5.275402069091797
    8. ' l' → logprob: -5.525402069091797
    9. 'le' → logprob: -5.525402069091797
    10. 'l' → logprob: -5.650402069091797

Token 241: ''on' (ID: 25812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4365317225456238
    2. 'i' → logprob: -2.0615317821502686
    3. ' n' → logprob: -2.9365317821502686
    4. 'im' → logprob: -3.3115317821502686
    5. 'imit' → logprob: -3.4365317821502686
    6. 'e' → logprob: -4.1865315437316895
    7. 'imited' → logprob: -4.1865315437316895
    8. 'imité' → logprob: -4.1865315437316895
    9. 'a' → logprob: -4.6865315437316895
    10. 'p' → logprob: -5.0615315437316895

Token 242: ' est' (ID: 893)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8181118965148926
    2. 'est' → logprob: -1.5681118965148926
    3. ' est' → logprob: -2.1931118965148926
    4. ' respecte' → logprob: -2.9431118965148926
    5. ' limite' → logprob: -3.3181118965148926
    6. 'continue' → logprob: -3.3181118965148926
    7. ' doit' → logprob: -4.193111896514893
    8. 's' → logprob: -4.193111896514893
    9. 'n' → logprob: -4.943111896514893
    10. '#' → logprob: -5.068111896514893

Token 243: ' encore' (ID: 14043)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.6473835110664368
    2. 'dans' → logprob: -1.772383451461792
    3. ' lié' → logprob: -1.897383451461792
    4. ' strict' → logprob: -2.897383451461792
    5. ' limité' → logprob: -3.522383451461792
    6. ' toujours' → logprob: -4.147383689880371
    7. ' encore' → logprob: -4.647383689880371
    8. ' sous' → logprob: -4.647383689880371
    9. 'strict' → logprob: -4.897383689880371
    10. ' liée' → logprob: -5.272383689880371

Token 244: ' "' (ID: 392)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.43449485301971436
    2. ' lié' → logprob: -1.6844948530197144
    3. 'dans' → logprob: -2.559494972229004
    4. ' limité' → logprob: -3.059494972229004
    5. ' à' → logprob: -5.309494972229004
    6. ' strict' → logprob: -5.684494972229004
    7. ' sous' → logprob: -5.684494972229004
    8. 'strict' → logprob: -5.684494972229004
    9. 'limit' → logprob: -5.684494972229004
    10. 's' → logprob: -5.809494972229004

Token 245: 'à' (ID: 708)
  Prédit: ' bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bound' → logprob: -1.8210468292236328
    2. ' dans' → logprob: -1.9460468292236328
    3. ' limité' → logprob: -2.196046829223633
    4. ' True' → logprob: -2.446046829223633
    5. 'dans' → logprob: -2.571046829223633
    6. ' lié' → logprob: -2.821046829223633
    7. 'lim' → logprob: -2.821046829223633
    8. 'limit' → logprob: -3.321046829223633
    9. 'strict' → logprob: -3.446046829223633
    10. ' strict' → logprob: -3.571046829223633

Token 246: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.16161055862903595
    2. 'lim' → logprob: -2.2866106033325195
    3. ' la' → logprob: -3.7866106033325195
    4. 'l' → logprob: -3.9116106033325195
    5. 'bound' → logprob: -6.0366106033325195
    6. 'borne' → logprob: -7.7866106033325195
    7. 'le' → logprob: -7.9116106033325195
    8. '```' → logprob: -8.16161060333252
    9. ' ' → logprob: -8.41161060333252
    10. 'b' → logprob: -8.41161060333252

Token 247: ' limite' (ID: 48939)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.6040021777153015
    2. 'borne' → logprob: -0.9790021777153015
    3. 'bound' → logprob: -3.1040022373199463
    4. 'b' → logprob: -4.604001998901367
    5. 'limit' → logprob: -5.229001998901367
    6. ' limite' → logprob: -5.354001998901367
    7. '```' → logprob: -5.354001998901367
    8. 'born' → logprob: -5.729001998901367
    9. 'max' → logprob: -7.354001998901367
    10. 'bor' → logprob: -7.354001998901367

Token 248: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2603435516357422
    2. '",' → logprob: -2.260343551635742
    3. ' du' → logprob: -3.385343551635742
    4. 'de' → logprob: -3.510343551635742
    5. ' de' → logprob: -3.635343551635742
    6. '")' → logprob: -5.010343551635742
    7. ' "' → logprob: -5.510343551635742
    8. ' ",' → logprob: -5.635343551635742
    9. ',' → logprob: -6.010343551635742
    10. 's' → logprob: -6.260343551635742

Token 249: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' '' (ID: 461)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2907509803771973
    2. 'la' → logprob: -1.4157509803771973
    3. 'n' → logprob: -1.5407509803771973
    4. ' la' → logprob: -1.6657509803771973
    5. ' l' → logprob: -2.9157509803771973
    6. ' n' → logprob: -3.7907509803771973
    7. 'le' → logprob: -7.540750980377197
    8. ' ce' → logprob: -8.040750503540039
    9. 'val' → logprob: -8.415750503540039
    10. 's' → logprob: -8.790750503540039

Token 251: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2814008593559265
    2. ' n' → logprob: -1.4064009189605713
    3. ' ' → logprob: -9.406400680541992
    4. '	n' → logprob: -10.156400680541992
    5. 'l' → logprob: -10.406400680541992
    6. ' ' → logprob: -11.156400680541992
    7. ')n' → logprob: -11.156400680541992
    8. ' la' → logprob: -11.281400680541992
    9. 'la' → logprob: -11.968900680541992
    10. 'p' → logprob: -12.031400680541992

Token 252: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026518689468503
    2. ',' → logprob: -4.401518821716309
    3. ' )' → logprob: -5.151518821716309
    4. '<|end|>' → logprob: -5.776518821716309
    5. '')' → logprob: -6.651518821716309
    6. '")' → logprob: -6.776518821716309
    7. '),' → logprob: -7.026518821716309
    8. ']' → logprob: -8.401518821716309
    9. ' ,' → logprob: -8.651518821716309
    10. ' ' → logprob: -8.651518821716309

Token 253: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24973738193511963
    2. ')' → logprob: -2.24973726272583
    3. '<|end|>' → logprob: -3.24973726272583
    4. '[' → logprob: -3.62473726272583
    5. 'Dp' → logprob: -4.24973726272583
    6. '][' → logprob: -4.62473726272583
    7. ',' → logprob: -4.99973726272583
    8. ' =' → logprob: -5.37473726272583
    9. '=' → logprob: -5.49973726272583
    10. '])' → logprob: -6.37473726272583

Token 254: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03195600211620331
    2. ' )' → logprob: -4.531956195831299
    3. '])' → logprob: -5.906956195831299
    4. 'n' → logprob: -5.906956195831299
    5. ']' → logprob: -6.031956195831299
    6. ' ' → logprob: -6.156956195831299
    7. ')n' → logprob: -6.281956195831299
    8. ' n' → logprob: -6.406956195831299
    9. '<|end|>' → logprob: -6.656956195831299
    10. '1' → logprob: -6.906956195831299

Token 255: ''est' (ID: 6616)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27904799580574036
    2. 'ont' → logprob: -1.904047966003418
    3. '=' → logprob: -3.654047966003418
    4. ')' → logprob: -4.029047966003418
    5. ']' → logprob: -4.154047966003418
    6. '])' → logprob: -4.779047966003418
    7. 'e' → logprob: -5.154047966003418
    8. '#' → logprob: -5.654047966003418
    9. '1' → logprob: -5.904047966003418
    10. 'on' → logprob: -6.279047966003418

Token 256: '-à' (ID: 56297)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.049194574356079
    2. '-à' → logprob: -1.049194574356079
    3. '[' → logprob: -2.674194574356079
    4. '#' → logprob: -2.799194574356079
    5. '1' → logprob: -3.174194574356079
    6. 'n' → logprob: -3.549194574356079
    7. ' à' → logprob: -4.0491943359375
    8. '=' → logprob: -4.9241943359375
    9. 'l' → logprob: -5.0491943359375
    10. ')' → logprob: -5.1741943359375

Token 257: '-dire' (ID: 76064)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007829842157661915
    2. '[[' → logprob: -5.382829666137695
    3. '[
' → logprob: -6.382829666137695
    4. ' [' → logprob: -6.632829666137695
    5. ' [[' → logprob: -9.632829666137695
    6. '1' → logprob: -9.882829666137695
    7. 'n' → logprob: -10.882829666137695
    8. ' ' → logprob: -11.132829666137695
    9. ' [
' → logprob: -11.632829666137695
    10. ')' → logprob: -11.757829666137695

Token 258: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41402873396873474
    2. ' [' → logprob: -1.6640287637710571
    3. '[
' → logprob: -3.1640286445617676
    4. 'True' → logprob: -3.4140286445617676
    5. ' [
' → logprob: -3.7890286445617676
    6. 'n' → logprob: -4.414028644561768
    7. ' True' → logprob: -4.539028644561768
    8. '1' → logprob: -5.039028644561768
    9. ' n' → logprob: -5.414028644561768
    10. ')' → logprob: -5.414028644561768

Token 259: ' chiffres' (ID: 105565)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.4668409526348114
    2. '[' → logprob: -1.4668409824371338
    3. 'keta' → logprob: -2.841840982437134
    4. '[
' → logprob: -3.216840982437134
    5. ' [' → logprob: -4.341840744018555
    6. '[[' → logprob: -4.591840744018555
    7. ')' → logprob: -4.716840744018555
    8. '[n' → logprob: -6.341840744018555
    9. '])' → logprob: -6.591840744018555
    10. ']' → logprob: -6.716840744018555

Token 260: ' n' (ID: 297)
  Prédit: ' suivants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -1.1270853281021118
    2. '[' → logprob: -2.0020852088928223
    3. ')' → logprob: -2.8770852088928223
    4. ' =' → logprob: -3.0020852088928223
    5. ' suivant' → logprob: -3.6270852088928223
    6. ' jusqu' → logprob: -3.6270852088928223
    7. 'max' → logprob: -3.7520852088928223
    8. ' rest' → logprob: -3.8770852088928223
    9. ' ' → logprob: -4.002085208892822
    10. ' possibles' → logprob: -4.002085208892822

Token 261: ''ont' (ID: 64195)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5422281622886658
    2. '[' → logprob: -1.7922282218933105
    3. ' =' → logprob: -2.6672282218933105
    4. ']' → logprob: -2.7922282218933105
    5. ' ][' → logprob: -3.7922282218933105
    6. '[i' → logprob: -4.1672282218933105
    7. '=' → logprob: -4.4172282218933105
    8. ' [' → logprob: -5.4172282218933105
    9. 'p' → logprob: -5.4172282218933105
    10. '+' → logprob: -5.4172282218933105

Token 262: ' jamais' (ID: 23077)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3850691020488739
    2. '[' → logprob: -2.0100691318511963
    3. ' been' → logprob: -2.5100691318511963
    4. '_' → logprob: -3.5100691318511963
    5. ')' → logprob: -3.8850691318511963
    6. ' été' → logprob: -4.510068893432617
    7. '[]' → logprob: -4.885068893432617
    8. ' ]' → logprob: -5.135068893432617
    9. ' [' → logprob: -5.510068893432617
    10. ' ' → logprob: -5.635068893432617

Token 263: ' dépass' (ID: 99759)
  Prédit: ' dépass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépass' → logprob: -0.009066780097782612
    2. ' été' → logprob: -5.759066581726074
    3. 'été' → logprob: -6.009066581726074
    4. 'dé' → logprob: -6.509066581726074
    5. 'ex' → logprob: -7.759066581726074
    6. ' dépasse' → logprob: -7.884066581726074
    7. ' dépasser' → logprob: -8.384066581726074
    8. ' exceeded' → logprob: -8.384066581726074
    9. 'd' → logprob: -8.759066581726074
    10. ' exceed' → logprob: -9.259066581726074

Token 264: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.24975919723510742
    2. 'ed' → logprob: -2.3747591972351074
    3. ' ' → logprob: -2.7497591972351074
    4. ']' → logprob: -3.6247591972351074
    5. 'ée' → logprob: -4.874759197235107
    6. '1' → logprob: -5.124759197235107
    7. '=' → logprob: -5.249759197235107
    8. '0' → logprob: -5.624759197235107
    9. 'n' → logprob: -5.999759197235107
    10. '[' → logprob: -6.249759197235107

Token 265: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.49623075127601624
    2. 'n' → logprob: -2.1212308406829834
    3. ')' → logprob: -2.7462308406829834
    4. ' ' → logprob: -2.9962308406829834
    5. ' k' → logprob: -3.1212308406829834
    6. '1' → logprob: -3.6212308406829834
    7. ')n' → logprob: -3.6212308406829834
    8. ' )' → logprob: -4.121230602264404
    9. 'k' → logprob: -4.496230602264404
    10. ' ]' → logprob: -5.371230602264404

Token 266: '),
' (ID: 2313)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9547158479690552
    2. ']' → logprob: -1.0797158479690552
    3. ' ]' → logprob: -2.3297157287597656
    4. ' +' → logprob: -3.0797157287597656
    5. '][' → logprob: -3.0797157287597656
    6. ')' → logprob: -3.8297157287597656
    7. ' ][' → logprob: -3.9547157287597656
    8. '])' → logprob: -4.454715728759766
    9. ' )' → logprob: -4.579715728759766
    10. ' ' → logprob: -5.204715728759766

Token 267: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5788918137550354
    2. ' [[[' → logprob: -1.9538917541503906
    3. '[
' → logprob: -2.0788917541503906
    4. '[[' → logprob: -2.4538917541503906
    5. ' [' → logprob: -3.0788917541503906
    6. ' [[' → logprob: -5.328891754150391
    7. ' ' → logprob: -5.328891754150391
    8. '=' → logprob: -5.453891754150391
    9. 'Dp' → logprob: -5.453891754150391
    10. ' [
' → logprob: -5.453891754150391

Token 268: '      ' (ID: 1699)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.4455586671829224
    2. ' [[[' → logprob: -1.8205586671829224
    3. '[' → logprob: -2.070558547973633
    4. '[
' → logprob: -2.070558547973633
    5. ']' → logprob: -2.570558547973633
    6. '[[' → logprob: -3.320558547973633
    7. ' D' → logprob: -3.570558547973633
    8. ' ]' → logprob: -3.570558547973633
    9. ' [' → logprob: -3.695558547973633
    10. 'size' → logprob: -3.820558547973633

Token 269: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8669217228889465
    2. '0' → logprob: -0.9919217228889465
    3. '1' → logprob: -2.1169216632843018
    4. '[' → logprob: -3.3669216632843018
    5. '#' → logprob: -4.116921901702881
    6. '
' → logprob: -4.866921901702881
    7. '[
' → logprob: -4.991921901702881
    8. ']' → logprob: -5.366921901702881
    9. ' ]' → logprob: -5.741921901702881
    10. ')' → logprob: -5.741921901702881

Token 270: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6422879695892334
    2. ' =' → logprob: -1.7672879695892334
    3. '[' → logprob: -2.3922879695892334
    4. '[
' → logprob: -2.8922879695892334
    5. '[[' → logprob: -3.2672879695892334
    6. '=[' → logprob: -3.6422879695892334
    7. ' [[[' → logprob: -3.8922879695892334
    8. ']' → logprob: -4.2672882080078125
    9. ' [' → logprob: -4.3922882080078125
    10. '=[[' → logprob: -4.7672882080078125

Token 271: ' signifie' (ID: 81149)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7137933969497681
    2. '<|end|>' → logprob: -1.713793396949768
    3. '[' → logprob: -1.963793396949768
    4. ' =' → logprob: -2.4637932777404785
    5. '=' → logprob: -3.0887932777404785
    6. ']=' → logprob: -3.9637932777404785
    7. ' ]' → logprob: -4.0887932777404785
    8. ')' → logprob: -4.5887932777404785
    9. '<|end|>' → logprob: -6.0887932777404785
    10. '=[' → logprob: -6.3387932777404785

Token 272: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7570978403091431
    2. '[' → logprob: -0.8820978403091431
    3. ' ' → logprob: -3.8820977210998535
    4. ')' → logprob: -4.2570977210998535
    5. '<|end|>' → logprob: -4.2570977210998535
    6. ' =' → logprob: -4.5070977210998535
    7. ' ' → logprob: -4.6320977210998535
    8. ' [' → logprob: -4.8820977210998535
    9. ' )' → logprob: -5.1320977210998535
    10. ' that' → logprob: -5.1320977210998535

Token 273: ''on' (ID: 25812)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2180251181125641
    2. ' [' → logprob: -2.0930252075195312
    3. ' ' → logprob: -3.2180252075195312
    4. ' =' → logprob: -3.9680252075195312
    5. '[
' → logprob: -5.468025207519531
    6. '=' → logprob: -5.843025207519531
    7. ' [
' → logprob: -5.843025207519531
    8. ']' → logprob: -7.343025207519531
    9. ' n' → logprob: -7.468025207519531
    10. '  ' → logprob: -7.468025207519531

Token 274: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.292494297027588
    2. ']' → logprob: -1.417494297027588
    3. '[' → logprob: -1.792494297027588
    4. ')' → logprob: -2.917494297027588
    5. '=' → logprob: -3.042494297027588
    6. ' ]' → logprob: -3.292494297027588
    7. 'n' → logprob: -3.542494297027588
    8. ' n' → logprob: -3.667494297027588
    9. '[]' → logprob: -4.292494297027588
    10. 'initialized' → logprob: -4.542494297027588

Token 275: ' déjà' (ID: 21229)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6819416284561157
    2. ' [' → logprob: -0.9319416284561157
    3. ' [
' → logprob: -3.306941509246826
    4. '[
' → logprob: -3.556941509246826
    5. '[[' → logprob: -4.431941509246826
    6. ' [[' → logprob: -4.931941509246826
    7. ' dépass' → logprob: -5.181941509246826
    8. '[]' → logprob: -5.556941509246826
    9. ' rempli' → logprob: -7.056941509246826
    10. ' ' → logprob: -7.306941509246826

Token 276: ' pris' (ID: 17549)
  Prédit: ' dépass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dépass' → logprob: -0.04634317383170128
    2. 'dé' → logprob: -3.2963430881500244
    3. 'd' → logprob: -5.6713433265686035
    4. ' dépasse' → logprob: -7.1713433265686035
    5. ' dé' → logprob: -7.4213433265686035
    6. ' quitté' → logprob: -7.9213433265686035
    7. ' sorti' → logprob: -7.9213433265686035
    8. 'lib' → logprob: -8.171342849731445
    9. ' dep' → logprob: -8.296342849731445
    10. ' dépasser' → logprob: -8.671342849731445

Token 277: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5815686583518982
    2. '[' → logprob: -1.331568717956543
    3. ' [
' → logprob: -2.581568717956543
    4. ' ' → logprob: -3.206568717956543
    5. ' une' → logprob: -3.456568717956543
    6. ' un' → logprob: -4.456568717956543
    7. '1' → logprob: -5.456568717956543
    8. '[
' → logprob: -5.831568717956543
    9. ' space' → logprob: -5.956568717956543
    10. 'space' → logprob: -6.831568717956543

Token 278: ' valeur' (ID: 41664)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -1.7377997636795044
    2. ' moins' → logprob: -1.8627997636795044
    3. 'n' → logprob: -2.612799644470215
    4. ' espace' → logprob: -2.737799644470215
    5. ' moindre' → logprob: -2.862799644470215
    6. '0' → logprob: -2.987799644470215
    7. 'space' → logprob: -3.362799644470215
    8. ' ' → logprob: -3.487799644470215
    9. ' #' → logprob: -3.612799644470215
    10. ' inférieur' → logprob: -3.612799644470215

Token 279: ' plus' (ID: 2932)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7104371190071106
    2. '=' → logprob: -1.4604370594024658
    3. ' =' → logprob: -1.9604370594024658
    4. '_' → logprob: -2.960437059402466
    5. ' [' → logprob: -3.460437059402466
    6. ' ' → logprob: -3.585437059402466
    7. ' [[[' → logprob: -5.710437297821045
    8. '=[' → logprob: -5.835437297821045
    9. ' _' → logprob: -5.960437297821045
    10. '[
' → logprob: -6.085437297821045

Token 280: ' petite' (ID: 28119)
  Prédit: ' grande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -1.2916508913040161
    2. ' basse' → logprob: -1.7916508913040161
    3. ' élevée' → logprob: -1.9166508913040161
    4. ' petite' → logprob: -2.1666507720947266
    5. ' small' → logprob: -3.0416507720947266
    6. ' faible' → logprob: -3.0416507720947266
    7. ' petit' → logprob: -3.4166507720947266
    8. '```' → logprob: -3.5416507720947266
    9. ' large' → logprob: -3.6666507720947266
    10. ' ' → logprob: -3.9166507720947266

Token 281: ' donc' (ID: 14206)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20914241671562195
    2. '=' → logprob: -2.9591424465179443
    3. ']' → logprob: -2.9591424465179443
    4. '[' → logprob: -3.4591424465179443
    5. 'Dp' → logprob: -3.9591424465179443
    6. ' ]' → logprob: -4.209142208099365
    7. '_dp' → logprob: -4.959142208099365
    8. ']=' → logprob: -5.959142208099365
    9. ' =[' → logprob: -6.459142208099365
    10. '=[' → logprob: -6.584142208099365

Token 282: ' on' (ID: 402)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6373624801635742
    2. ' ' → logprob: -2.262362480163574
    3. ')' → logprob: -2.512362480163574
    4. ' [' → logprob: -2.637362480163574
    5. 'n' → logprob: -2.887362480163574
    6. ' )' → logprob: -3.387362480163574
    7. ' ]' → logprob: -3.512362480163574
    8. ' [
' → logprob: -4.012362480163574
    9. ' n' → logprob: -4.387362480163574
    10. '<|end|>' → logprob: -4.387362480163574

Token 283: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.2841251790523529
    2. ' a' → logprob: -2.4091250896453857
    3. ' peux' → logprob: -2.5341250896453857
    4. '[' → logprob: -4.284125328063965
    5. ' pourra' → logprob: -4.534125328063965
    6. 'a' → logprob: -4.659125328063965
    7. ' continue' → logprob: -4.659125328063965
    8. ' n' → logprob: -5.534125328063965
    9. ' va' → logprob: -5.659125328063965
    10. 'n' → logprob: -5.909125328063965

Token 284: ' choisir' (ID: 47004)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.8202660083770752
    2. ' prendre' → logprob: -1.8202660083770752
    3. 'mettre' → logprob: -2.195266008377075
    4. ' choisir' → logprob: -2.445266008377075
    5. ' utiliser' → logprob: -2.945266008377075
    6. 'faire' → logprob: -3.695266008377075
    7. 'cho' → logprob: -3.945266008377075
    8. 'dé' → logprob: -4.070265769958496
    9. ' continuer' → logprob: -4.320265769958496
    10. 'util' → logprob: -4.570265769958496

Token 285: ' n' (ID: 297)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0476419925689697
    2. ' [' → logprob: -1.0476419925689697
    3. '[
' → logprob: -2.4226419925689697
    4. ' [
' → logprob: -2.6726419925689697
    5. ' ' → logprob: -3.4226419925689697
    6. ' ]' → logprob: -4.422641754150391
    7. ' )' → logprob: -4.422641754150391
    8. 'n' → logprob: -4.547641754150391
    9. ' n' → logprob: -4.672641754150391
    10. ' =' → logprob: -4.797641754150391

Token 286: ''importe' (ID: 103032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1847052127122879
    2. ' +' → logprob: -2.5597052574157715
    3. '[' → logprob: -4.0597052574157715
    4. ' -' → logprob: -4.3097052574157715
    5. '[i' → logprob: -4.6847052574157715
    6. ']' → logprob: -4.8097052574157715
    7. 'n' → logprob: -5.1847052574157715
    8. 'p' → logprob: -5.9347052574157715
    9. ' [' → logprob: -6.0597052574157715
    10. '-' → logprob: -6.0597052574157715

Token 287: ' quel' (ID: 10613)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5925781726837158
    2. ' des' → logprob: -1.8425781726837158
    3. '    ' → logprob: -2.467578172683716
    4. '   ' → logprob: -2.592578172683716
    5. '#' → logprob: -3.217578172683716
    6. 'import' → logprob: -3.342578172683716
    7. '  ' → logprob: -3.342578172683716
    8. 'une' → logprob: -3.467578172683716
    9. '[' → logprob: -3.592578172683716
    10. ' une' → logprob: -3.592578172683716

Token 288: ' chiffre' (ID: 107420)
  Prédit: ' chiffre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffre' → logprob: -0.31717780232429504
    2. 'nombre' → logprob: -2.6921777725219727
    3. 'digit' → logprob: -3.0671777725219727
    4. 'ch' → logprob: -3.0671777725219727
    5. ' nombre' → logprob: -3.1921777725219727
    6. 'val' → logprob: -3.5671777725219727
    7. 'car' → logprob: -4.942177772521973
    8. 'n' → logprob: -5.067177772521973
    9. ' caractère' → logprob: -5.942177772521973
    10. ' ' → logprob: -5.942177772521973

Token 289: ' de' (ID: 334)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.022366542369127274
    2. '=' → logprob: -4.522366523742676
    3. ' =' → logprob: -4.522366523742676
    4. ' D' → logprob: -9.272366523742676
    5. 'D' → logprob: -9.522366523742676
    6. '=
' → logprob: -9.522366523742676
    7. 'DP' → logprob: -10.397366523742676
    8. '_dp' → logprob: -10.397366523742676
    9. 'dp' → logprob: -10.647366523742676
    10. '
' → logprob: -10.897366523742676

Token 290: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2010449171066284
    2. ' range' → logprob: -1.4510449171066284
    3. '0' → logprob: -1.5760449171066284
    4. 'range' → logprob: -1.8260449171066284
    5. '1' → logprob: -2.826045036315918
    6. ' [' → logprob: -4.576045036315918
    7. ' n' → logprob: -4.701045036315918
    8. '[' → logprob: -4.951045036315918
    9. 'n' → logprob: -5.201045036315918
    10. ' k' → logprob: -6.576045036315918

Token 291: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.910851776599884
    2. '9' → logprob: -1.1608517169952393
    3. '0' → logprob: -2.6608517169952393
    4. 'range' → logprob: -2.7858517169952393
    5. ' ' → logprob: -3.0358517169952393
    6. 'n' → logprob: -3.5358517169952393
    7. '10' → logprob: -4.035851955413818
    8. '```' → logprob: -4.410851955413818
    9. 'l' → logprob: -4.535851955413818
    10. ' range' → logprob: -4.785851955413818

Token 292: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3307165503501892
    2. ',' → logprob: -1.830716609954834
    3. ' ]' → logprob: -3.830716609954834
    4. '...' → logprob: -4.080716609954834
    5. ' jusqu' → logprob: -4.455716609954834
    6. '][' → logprob: -4.580716609954834
    7. ')' → logprob: -4.830716609954834
    8. ' à' → logprob: -4.955716609954834
    9. '#' → logprob: -4.955716609954834
    10. '..' → logprob: -5.455716609954834

Token 293: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.016754040494561195
    2. ' ' → logprob: -4.891754150390625
    3. 'n' → logprob: -5.141754150390625
    4. 'keta' → logprob: -6.266754150390625
    5. 'p' → logprob: -7.641754150390625
    6. ' n' → logprob: -7.891754150390625
    7. 'k' → logprob: -8.391754150390625
    8. ' p' → logprob: -9.391754150390625
    9. '1' → logprob: -10.266754150390625
    10. 'int' → logprob: -10.391754150390625

Token 294: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0004948906716890633
    2. ' ' → logprob: -7.625494956970215
    3. 'p' → logprob: -12.375494956970215
    4. 'n' → logprob: -14.250494956970215
    5. '10' → logprob: -14.625494956970215
    6. '1' → logprob: -14.625494956970215
    7. '```' → logprob: -15.000494956970215
    8. ' p' → logprob: -15.125494956970215
    9. '   ' → logprob: -15.750494956970215
    10. '0' → logprob: -16.1254940032959

Token 295: ' libre' (ID: 25486)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.3385322391986847
    2. '=' → logprob: -1.4635322093963623
    3. ' =' → logprob: -2.9635322093963623
    4. 'D' → logprob: -6.713532447814941
    5. '[' → logprob: -6.838532447814941
    6. 'DP' → logprob: -7.838532447814941
    7. 'dp' → logprob: -7.963532447814941
    8. '=
' → logprob: -8.338532447814941
    9. '=[' → logprob: -8.338532447814941
    10. '_dp' → logprob: -9.088532447814941

Token 296: 'ment' (ID: 508)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.028510550037026405
    2. '=' → logprob: -4.278510570526123
    3. ' =' → logprob: -4.278510570526123
    4. ' D' → logprob: -9.028510093688965
    5. ']' → logprob: -9.028510093688965
    6. 'D' → logprob: -10.153510093688965
    7. '=
' → logprob: -10.653510093688965
    8. ']=' → logprob: -10.778510093688965
    9. '=[' → logprob: -11.528510093688965
    10. ' =
' → logprob: -11.778510093688965

Token 297: '.
' (ID: 558)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.011906351894140244
    2. '=' → logprob: -5.136906147003174
    3. ' =' → logprob: -5.261906147003174
    4. 'dp' → logprob: -7.886906147003174
    5. '=
' → logprob: -8.886906623840332
    6. '_dp' → logprob: -9.136906623840332
    7. 'DP' → logprob: -9.886906623840332
    8. '
' → logprob: -10.386906623840332
    9. 'D' → logprob: -10.511906623840332
    10. ' =
' → logprob: -11.261906623840332

Token 298: '#' (ID: 2)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.010977078229188919
    2. ' =' → logprob: -5.010977268218994
    3. '=' → logprob: -5.635977268218994
    4. 'DP' → logprob: -8.510976791381836
    5. 'dp' → logprob: -8.760976791381836
    6. 'D' → logprob: -9.260976791381836
    7. '_dp' → logprob: -9.510976791381836
    8. '[' → logprob: -10.010976791381836
    9. ' D' → logprob: -10.510976791381836
    10. '
' → logprob: -10.885976791381836

Token 299: ' À' (ID: 27643)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.25605344772338867
    2. '=' → logprob: -1.6310534477233887
    3. ' =' → logprob: -3.6310534477233887
    4. 'dp' → logprob: -6.506053447723389
    5. '[' → logprob: -7.006053447723389
    6. '_dp' → logprob: -7.631053447723389
    7. '=
' → logprob: -8.631053924560547
    8. 'DP' → logprob: -8.756053924560547
    9. '=[' → logprob: -8.881053924560547
    10. 'D' → logprob: -9.006053924560547

Token 300: ' chaque' (ID: 21194)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.6564282774925232
    2. '[' → logprob: -0.7814282774925232
    3. '[
' → logprob: -4.531428337097168
    4. ' [[[' → logprob: -4.656428337097168
    5. ' [' → logprob: -6.406428337097168
    6. ' [[' → logprob: -6.531428337097168
    7. ' [
' → logprob: -9.531428337097168
    8. ' ' → logprob: -10.531428337097168
    9. '[]' → logprob: -11.281428337097168
    10. '[i' → logprob: -11.406428337097168

Token 301: ' niveau' (ID: 21708)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9900980591773987
    2. '=' → logprob: -1.365097999572754
    3. ' =' → logprob: -1.490097999572754
    4. ' [' → logprob: -3.240097999572754
    5. '[
' → logprob: -3.365097999572754
    6. '[i' → logprob: -4.240097999572754
    7. '_' → logprob: -4.740097999572754
    8. ' ' → logprob: -4.740097999572754
    9. '=[' → logprob: -4.865097999572754
    10. '
' → logprob: -5.115097999572754

Token 302: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6689996123313904
    2. ' =' → logprob: -1.1689996719360352
    3. '=' → logprob: -3.293999671936035
    4. '_' → logprob: -3.418999671936035
    5. '[i' → logprob: -3.793999671936035
    6. ']' → logprob: -3.918999671936035
    7. ',' → logprob: -4.293999671936035
    8. '[
' → logprob: -4.918999671936035
    9. ' ' → logprob: -5.043999671936035
    10. '<|end|>' → logprob: -5.293999671936035

Token 303: ' on' (ID: 402)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.7105507850646973
    2. 'D' → logprob: -1.8355507850646973
    3. ' D' → logprob: -2.0855507850646973
    4. '[' → logprob: -2.0855507850646973
    5. '[
' → logprob: -3.5855507850646973
    6. ' ' → logprob: -3.8355507850646973
    7. ' [' → logprob: -4.460550785064697
    8. '   ' → logprob: -5.085550785064697
    9. ' n' → logprob: -5.335550785064697
    10. 'n' → logprob: -5.335550785064697

Token 304: ' initialise' (ID: 145250)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5471063852310181
    2. ' =' → logprob: -1.172106385231018
    3. '[' → logprob: -2.5471062660217285
    4. '=[' → logprob: -4.2971062660217285
    5. '[
' → logprob: -5.7971062660217285
    6. ' initialize' → logprob: -5.7971062660217285
    7. '=[[' → logprob: -5.9221062660217285
    8. ' [' → logprob: -6.0471062660217285
    9. 'initialize' → logprob: -6.2971062660217285
    10. '*' → logprob: -6.7971062660217285

Token 305: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.716205894947052
    2. ' [' → logprob: -0.716205894947052
    3. ' [[[' → logprob: -4.591206073760986
    4. '[[' → logprob: -5.091206073760986
    5. '[
' → logprob: -5.966206073760986
    6. ' [[' → logprob: -6.216206073760986
    7. ' [
' → logprob: -6.591206073760986
    8. '0' → logprob: -8.466205596923828
    9. ' ' → logprob: -8.841205596923828
    10. ' =' → logprob: -9.341205596923828

Token 306: ' valeur' (ID: 41664)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3304104208946228
    2. ' [' → logprob: -1.7054104804992676
    3. '[[' → logprob: -3.8304104804992676
    4. '[
' → logprob: -3.9554104804992676
    5. ' ' → logprob: -4.330410480499268
    6. '0' → logprob: -4.330410480499268
    7. ' [[' → logprob: -4.455410480499268
    8. ' [[[' → logprob: -4.455410480499268
    9. ' [
' → logprob: -5.205410480499268
    10. '  ' → logprob: -7.830410480499268

Token 307: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2791293859481812
    2. ' =' → logprob: -1.4041293859481812
    3. ' ' → logprob: -1.7791293859481812
    4. '=' → logprob: -2.1541295051574707
    5. '[' → logprob: -2.5291295051574707
    6. 's' → logprob: -3.2791295051574707
    7. 'Dp' → logprob: -3.7791295051574707
    8. '   ' → logprob: -4.279129505157471
    9. ' de' → logprob: -4.279129505157471
    10. '  ' → logprob: -5.154129505157471

Token 308: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01696467213332653
    2. ' ' → logprob: -4.641964435577393
    3. '[' → logprob: -5.016964435577393
    4. ' [' → logprob: -7.641964435577393
    5. '[[' → logprob: -10.64196491241455
    6. 'False' → logprob: -11.14196491241455
    7. '[
' → logprob: -11.39196491241455
    8. '-' → logprob: -11.64196491241455
    9. ' -' → logprob: -12.51696491241455
    10. '1' → logprob: -12.89196491241455

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00047583275591023266
    2. '[' → logprob: -8.250475883483887
    3. ' ' → logprob: -9.250475883483887
    4. '[[' → logprob: -9.375475883483887
    5. 'False' → logprob: -10.500475883483887
    6. '-' → logprob: -13.000475883483887
    7. '[
' → logprob: -13.500475883483887
    8. ' [' → logprob: -14.250475883483887
    9. '[]' → logprob: -14.625475883483887
    10. ' [[' → logprob: -14.750475883483887

Token 310: ',' (ID: 11)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -4.584861744660884e-05
    2. ' =' → logprob: -10.375045776367188
    3. '=' → logprob: -11.750045776367188
    4. '
' → logprob: -12.500045776367188
    5. '=
' → logprob: -13.750045776367188
    6. 'D' → logprob: -14.750045776367188
    7. ' D' → logprob: -14.875045776367188
    8. 'DP' → logprob: -14.875045776367188
    9. ' =
' → logprob: -16.000045776367188
    10. '_dp' → logprob: -16.000045776367188

Token 311: ' car' (ID: 1669)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.3237028121948242
    2. ' D' → logprob: -2.323702812194824
    3. '[' → logprob: -2.573702812194824
    4. ' [' → logprob: -3.323702812194824
    5. '[[' → logprob: -4.073702812194824
    6. 'D' → logprob: -4.198702812194824
    7. '[
' → logprob: -4.323702812194824
    8. ' [[[' → logprob: -4.448702812194824
    9. ' [
' → logprob: -5.948702812194824
    10. ' ' → logprob: -6.698702812194824

Token 312: ' au' (ID: 2791)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3877611756324768
    2. ' ' → logprob: -1.137761116027832
    3. ')' → logprob: -8.137761116027832
    4. 'Dp' → logprob: -8.887761116027832
    5. '  ' → logprob: -9.762761116027832
    6. ' on' → logprob: -9.887761116027832
    7. ' for' → logprob: -10.387761116027832
    8. '1' → logprob: -10.512761116027832
    9. ' )' → logprob: -10.512761116027832
    10. '#' → logprob: -10.512761116027832

Token 313: ' départ' (ID: 32693)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48890334367752075
    2. ']' → logprob: -1.363903284072876
    3. 'n' → logprob: -2.363903284072876
    4. ' ]' → logprob: -5.238903522491455
    5. ' [' → logprob: -5.363903522491455
    6. ')' → logprob: -5.363903522491455
    7. '[i' → logprob: -5.738903522491455
    8. ' ' → logprob: -5.738903522491455
    9. '])' → logprob: -6.363903522491455
    10. '#' → logprob: -6.363903522491455

Token 314: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8331167101860046
    2. ')' → logprob: -1.2081167697906494
    3. ' for' → logprob: -1.9581167697906494
    4. ',' → logprob: -3.4581167697906494
    5. ' )' → logprob: -3.4581167697906494
    6. 'for' → logprob: -4.20811653137207
    7. ' ]' → logprob: -4.20811653137207
    8. ']' → logprob: -4.58311653137207
    9. ' ,' → logprob: -4.58311653137207
    10. '  ' → logprob: -5.95811653137207

Token 315: ' il' (ID: 1793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43106478452682495
    2. '0' → logprob: -1.0560648441314697
    3. '[' → logprob: -6.556064605712891
    4. ' [' → logprob: -7.681064605712891
    5. '  ' → logprob: -8.30606460571289
    6. ')' → logprob: -9.55606460571289
    7. '   ' → logprob: -9.80606460571289
    8. '    ' → logprob: -10.43106460571289
    9. ' )' → logprob: -10.93106460571289
    10. 'n' → logprob: -11.55606460571289

Token 316: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3216278851032257
    2. ' =' → logprob: -1.3216278553009033
    3. ' s' → logprob: -5.821628093719482
    4. 's' → logprob: -6.321628093719482
    5. ' ' → logprob: -6.821628093719482
    6. ' n' → logprob: -7.446628093719482
    7. '=[]' → logprob: -7.696628093719482
    8. ' est' → logprob: -8.446627616882324
    9. ')' → logprob: -8.446627616882324
    10. 'n' → logprob: -9.071627616882324

Token 317: ''ex' (ID: 23472)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.40568208694458
    2. ''y' → logprob: -1.40568208694458
    3. ''est' → logprob: -2.28068208694458
    4. 'a' → logprob: -2.40568208694458
    5. 'y' → logprob: -2.65568208694458
    6. ''' → logprob: -2.65568208694458
    7. 'n' → logprob: -3.28068208694458
    8. ' y' → logprob: -3.65568208694458
    9. 's' → logprob: -3.78068208694458
    10. ''ex' → logprob: -4.65568208694458

Token 318: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.5656154155731201
    2. 'p' → logprob: -0.9406154155731201
    3. 'ist' → logprob: -3.44061541557312
    4. 'pl' → logprob: -5.940615653991699
    5. '#' → logprob: -6.815615653991699
    6. 'istant' → logprob: -6.815615653991699
    7. '=' → logprob: -7.815615653991699
    8. 't' → logprob: -7.815615653991699
    9. 'plore' → logprob: -7.815615653991699
    10. '0' → logprob: -8.0656156539917

Token 319: ' aucun' (ID: 41678)
  Prédit: ' aucune'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucune' → logprob: -1.3189154863357544
    2. ' aucun' → logprob: -1.5689154863357544
    3. ' des' → logprob: -2.318915367126465
    4. ' une' → logprob: -2.318915367126465
    5. ' ' → logprob: -2.693915367126465
    6. ' pas' → logprob: -2.693915367126465
    7. 'auc' → logprob: -2.818915367126465
    8. ' un' → logprob: -3.068915367126465
    9. 's' → logprob: -3.443915367126465
    10. '  ' → logprob: -4.693915367126465

Token 320: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8353528380393982
    2. ' ' → logprob: -1.960352897644043
    3. 'nombre' → logprob: -2.210352897644043
    4. 'comb' → logprob: -3.085352897644043
    5. 's' → logprob: -3.460352897644043
    6. 'poss' → logprob: -3.710352897644043
    7. ' résultat' → logprob: -3.710352897644043
    8. 'count' → logprob: -4.085352897644043
    9. ' chemin' → logprob: -4.085352897644043
    10. ' ways' → logprob: -4.085352897644043

Token 321: ' construit' (ID: 119882)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.07465426623821259
    2. '[' → logprob: -3.6996543407440186
    3. ' D' → logprob: -3.9496543407440186
    4. ' =' → logprob: -4.8246541023254395
    5. 'D' → logprob: -5.5746541023254395
    6. '[
' → logprob: -5.6996541023254395
    7. '_dp' → logprob: -5.9496541023254395
    8. 'dp' → logprob: -6.0746541023254395
    9. ' ' → logprob: -6.9496541023254395
    10. 's' → logprob: -6.9496541023254395

Token 322: '.
' (ID: 558)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.009688561782240868
    2. ' =' → logprob: -5.009688377380371
    3. '=' → logprob: -6.009688377380371
    4. '=
' → logprob: -9.009688377380371
    5. '
' → logprob: -9.009688377380371
    6. 'D' → logprob: -9.634688377380371
    7. '[' → logprob: -10.134688377380371
    8. ' =
' → logprob: -10.134688377380371
    9. ' D' → logprob: -10.384688377380371
    10. ',' → logprob: -11.009688377380371

Token 323: 'Dp' (ID: 116458)
  Prédit: 'Dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.00016504127415828407
    2. '=' → logprob: -9.500164985656738
    3. ' =' → logprob: -10.375164985656738
    4. '[' → logprob: -10.750164985656738
    5. 'D' → logprob: -11.375164985656738
    6. '=
' → logprob: -11.500164985656738
    7. '[
' → logprob: -11.750164985656738
    8. '
' → logprob: -12.750164985656738
    9. ' D' → logprob: -13.625164985656738
    10. 'dp' → logprob: -13.750164985656738

Token 324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061995700001716614
    2. ' =' → logprob: -2.8119957447052
    3. '=[' → logprob: -10.686995506286621
    4. '=[[' → logprob: -12.311995506286621
    5. '=[]' → logprob: -15.186995506286621
    6. '＝' → logprob: -15.561995506286621
    7. ' =[' → logprob: -16.311996459960938
    8. '[' → logprob: -16.436996459960938
    9. ' ' → logprob: -16.811996459960938
    10. '[[' → logprob: -16.936996459960938

Token 325: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.08067300915718079
    2. ' [[[' → logprob: -2.5806729793548584
    3. '[' → logprob: -6.3306732177734375
    4. ' [' → logprob: -14.705673217773438
    5. '0' → logprob: -15.455673217773438
    6. '[
' → logprob: -16.205673217773438
    7. '[]' → logprob: -17.580673217773438
    8. ' ' → logprob: -17.705673217773438
    9. ' [[' → logprob: -17.955673217773438
    10. '   ' → logprob: -18.580673217773438

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '[' → logprob: -15.375000953674316
    4. '000' → logprob: -18.625001907348633
    5. 'False' → logprob: -18.750001907348633
    6. '(' → logprob: -19.000001907348633
    7. '{' → logprob: -19.125001907348633
    8. '00' → logprob: -19.250001907348633
    9. '-' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.875001907348633

Token 327: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4320755898952484
    2. 'for' → logprob: -1.0570756196975708
    3. ']' → logprob: -5.807075500488281
    4. ')' → logprob: -8.557075500488281
    5. ']*' → logprob: -9.307075500488281
    6. ' ' → logprob: -10.057075500488281
    7. '	for' → logprob: -11.557075500488281
    8. ' ]' → logprob: -12.182075500488281
    9. '   ' → logprob: -12.182075500488281
    10. '  ' → logprob: -12.557075500488281

Token 328: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04508211091160774
    2. ' _' → logprob: -3.4200820922851562
    3. ' in' → logprob: -5.295082092285156
    4. ' range' → logprob: -6.920082092285156
    5. 'range' → logprob: -6.920082092285156
    6. '_bound' → logprob: -6.920082092285156
    7. '_j' → logprob: -7.295082092285156
    8. '_b' → logprob: -7.295082092285156
    9. '_range' → logprob: -7.920082092285156
    10. 'bound' → logprob: -8.170082092285156

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31340479850769043
    2. 'in' → logprob: -1.3134047985076904
    3. 'range' → logprob: -9.06340503692627
    4. ' ' → logprob: -11.18840503692627
    5. 'In' → logprob: -13.06340503692627
    6. '  ' → logprob: -13.31340503692627
    7. 'bound' → logprob: -13.31340503692627
    8. '0' → logprob: -14.06340503692627
    9. '    ' → logprob: -14.31340503692627
    10. ']' → logprob: -14.31340503692627

Token 330: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006716674659401178
    2. ' range' → logprob: -5.006716728210449
    3. '(range' → logprob: -14.50671672821045
    4. '[' → logprob: -14.75671672821045
    5. '(' → logprob: -14.88171672821045
    6. '	range' → logprob: -17.131715774536133
    7. ' ' → logprob: -17.631715774536133
    8. ']' → logprob: -17.881715774536133
    9. '   ' → logprob: -18.381715774536133
    10. '  ' → logprob: -18.631715774536133

Token 331: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1002405434846878
    2. '2' → logprob: -2.350240468978882
    3. ' ' → logprob: -10.850240707397461
    4. ' (' → logprob: -11.475240707397461
    5. '(
' → logprob: -13.225240707397461
    6. '   ' → logprob: -13.975240707397461
    7. ']' → logprob: -14.600240707397461
    8. '
' → logprob: -14.600240707397461
    9. ')' → logprob: -16.35024070739746
    10. '  ' → logprob: -16.72524070739746

Token 332: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.750004768371582
    4. ')' → logprob: -17.1250057220459
    5. '
' → logprob: -19.3750057220459
    6. '  ' → logprob: -19.5000057220459
    7. '(' → logprob: -19.6250057220459
    8. '    ' → logprob: -19.8750057220459
    9. '3' → logprob: -20.1250057220459
    10. ')]' → logprob: -20.1250057220459

Token 333: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.906711546937004e-05
    2. ']' → logprob: -10.625048637390137
    3. ' )' → logprob: -11.125048637390137
    4. ')' → logprob: -11.875048637390137
    5. ')]
' → logprob: -13.625048637390137
    6. ' ]' → logprob: -13.750048637390137
    7. ']]' → logprob: -14.875048637390137
    8. '])' → logprob: -16.250049591064453
    9. ')]
' → logprob: -16.750049591064453
    10. '}]' → logprob: -17.625049591064453

Token 334: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07890840619802475
    2. 'for' → logprob: -2.5789084434509277
    3. ']' → logprob: -11.45390796661377
    4. '	for' → logprob: -12.45390796661377
    5. ' ' → logprob: -13.57890796661377
    6. ')' → logprob: -13.70390796661377
    7. '   ' → logprob: -13.70390796661377
    8. '  ' → logprob: -15.82890796661377
    9. '           ' → logprob: -16.328908920288086
    10. ',' → logprob: -16.453908920288086

Token 335: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0741102546453476
    2. ' range' → logprob: -3.449110269546509
    3. '_' → logprob: -4.07411003112793
    4. 'in' → logprob: -4.32411003112793
    5. 'range' → logprob: -5.32411003112793
    6. ' _' → logprob: -6.32411003112793
    7. ' j' → logprob: -6.57411003112793
    8. ' i' → logprob: -8.07411003112793
    9. ' p' → logprob: -8.32411003112793
    10. 'p' → logprob: -8.69911003112793

Token 336: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009962661191821098
    2. 'in' → logprob: -4.759962558746338
    3. 'range' → logprob: -7.134962558746338
    4. ' range' → logprob: -7.509962558746338
    5. ' ' → logprob: -13.134963035583496
    6. '_' → logprob: -15.634963035583496
    7. '(range' → logprob: -16.00996208190918
    8. '   ' → logprob: -16.75996208190918
    9. '<|end|>' → logprob: -16.88496208190918
    10. 'n' → logprob: -16.88496208190918

Token 337: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519374191761017
    2. ' range' → logprob: -1.5019373893737793
    3. '(range' → logprob: -11.751937866210938
    4. '	range' → logprob: -15.876937866210938
    5. ' ' → logprob: -16.126937866210938
    6. 'ran' → logprob: -16.876937866210938
    7. 'rang' → logprob: -17.126937866210938
    8. ' in' → logprob: -17.251937866210938
    9. 'in' → logprob: -17.251937866210938
    10. '   ' → logprob: -17.376937866210938

Token 338: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.7848862373502925e-05
    2. '(range' → logprob: -10.875027656555176
    3. '(' → logprob: -12.125027656555176
    4. '(p' → logprob: -13.500027656555176
    5. ' (' → logprob: -13.625027656555176
    6. '((' → logprob: -14.500027656555176
    7. '(n' → logprob: -15.625027656555176
    8. 'range' → logprob: -16.500028610229492
    9. ' range' → logprob: -17.125028610229492
    10. '(K' → logprob: -18.125028610229492

Token 339: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -0.00022535098833031952
    2. 'ata' → logprob: -9.750225067138672
    3. 'a' → logprob: -9.875225067138672
    4. '   ' → logprob: -10.750225067138672
    5. 'e' → logprob: -11.000225067138672
    6. 'range' → logprob: -11.875225067138672
    7. 'ета' → logprob: -12.000225067138672
    8. 'ta' → logprob: -12.125225067138672
    9. ' ' → logprob: -12.250225067138672
    10. '    ' → logprob: -12.500225067138672

Token 340: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012516246177256107
    2. ' +' → logprob: -4.387516021728516
    3. ')]' → logprob: -12.012516021728516
    4. '＋' → logprob: -15.887516021728516
    5. ')' → logprob: -16.012516021728516
    6. 'plus' → logprob: -16.637516021728516
    7. ')])' → logprob: -16.887516021728516
    8. '+
' → logprob: -17.137516021728516
    9. 'p' → logprob: -17.137516021728516
    10. ' plus' → logprob: -17.637516021728516

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012390372576192021
    2. 'k' → logprob: -7.501238822937012
    3. '(k' → logprob: -8.126238822937012
    4. ' ' → logprob: -9.126238822937012
    5. '2' → logprob: -9.751238822937012
    6. '+' → logprob: -9.876238822937012
    7. 'p' → logprob: -9.876238822937012
    8. '(p' → logprob: -10.251238822937012
    9. '(n' → logprob: -10.876238822937012
    10. '(' → logprob: -11.126238822937012

Token 342: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.100890152156353
    2. ']' → logprob: -2.3508901596069336
    3. ']]' → logprob: -7.850890159606934
    4. ' ]' → logprob: -8.225890159606934
    5. '}]' → logprob: -10.725890159606934
    6. ' ]]' → logprob: -13.600890159606934
    7. ' }]' → logprob: -14.100890159606934
    8. '])' → logprob: -14.225890159606934
    9. ']}' → logprob: -14.850890159606934
    10. ')' → logprob: -15.100890159606934

Token 343: 'for' (ID: 1938)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04301460087299347
    2. 'for' → logprob: -3.1680145263671875
    3. '	for' → logprob: -11.793014526367188
    4. ']' → logprob: -12.293014526367188
    5. '   ' → logprob: -13.543014526367188
    6. ' ' → logprob: -13.793014526367188
    7. '    ' → logprob: -15.043014526367188
    8. '        ' → logprob: -16.168014526367188
    9. ' ]' → logprob: -16.293014526367188
    10. '  ' → logprob: -16.418014526367188

Token 344: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.019721360877156258
    2. ' range' → logprob: -4.644721508026123
    3. 'range' → logprob: -5.269721508026123
    4. '_range' → logprob: -5.894721508026123
    5. '_k' → logprob: -7.019721508026123
    6. ' _' → logprob: -7.269721508026123
    7. '_i' → logprob: -8.269721031188965
    8. '_in' → logprob: -9.644721031188965
    9. ' in' → logprob: -10.269721031188965
    10. 'i' → logprob: -10.769721031188965

Token 345: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741581380367279
    2. 'in' → logprob: -0.9741581678390503
    3. 'range' → logprob: -9.47415828704834
    4. '_' → logprob: -13.59915828704834
    5. ' range' → logprob: -13.84915828704834
    6. 'k' → logprob: -14.34915828704834
    7. ' ' → logprob: -15.34915828704834
    8. '(k' → logprob: -15.34915828704834
    9. ' _' → logprob: -15.59915828704834
    10. '(' → logprob: -15.59915828704834

Token 346: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -17.505233764648438
    4. '	range' → logprob: -21.505233764648438
    5. ' ' → logprob: -22.005233764648438
    6. 'r' → logprob: -22.005233764648438
    7. 'k' → logprob: -22.130233764648438
    8. 'n' → logprob: -22.630233764648438
    9. 'rang' → logprob: -22.755233764648438
    10. '   ' → logprob: -23.130233764648438

Token 347: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.3544423381972592e-05
    2. '(range' → logprob: -11.62501335144043
    3. '(' → logprob: -13.37501335144043
    4. ' (' → logprob: -13.50001335144043
    5. 'range' → logprob: -13.50001335144043
    6. '((' → logprob: -16.12501335144043
    7. ' range' → logprob: -16.12501335144043
    8. '(n' → logprob: -18.25001335144043
    9. '(len' → logprob: -18.25001335144043
    10. 'k' → logprob: -19.12501335144043

Token 348: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -5.5577775128767826e-06
    2. 'ata' → logprob: -12.375005722045898
    3. 'ta' → logprob: -14.625005722045898
    4. ' eta' → logprob: -15.125005722045898
    5. 'e' → logprob: -15.500005722045898
    6. 'a' → logprob: -16.0000057220459
    7. 'ета' → logprob: -16.6250057220459
    8. 'ETA' → logprob: -17.0000057220459
    9. 'ota' → logprob: -18.0000057220459
    10. 'keta' → logprob: -18.5000057220459

Token 349: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020903978496789932
    2. ')]' → logprob: -3.895904064178467
    3. ')])' → logprob: -8.020903587341309
    4. ' +' → logprob: -11.020903587341309
    5. ')' → logprob: -11.645903587341309
    6. '])]' → logprob: -12.145903587341309
    7. ')],' → logprob: -13.520903587341309
    8. ']' → logprob: -14.645903587341309
    9. '])' → logprob: -15.020903587341309
    10. ')+' → logprob: -15.770903587341309

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.25000286102295
    3. '+' → logprob: -14.75000286102295
    4. '2' → logprob: -16.000001907348633
    5. '１' → logprob: -16.375001907348633
    6. '```' → logprob: -17.625001907348633
    7. ')' → logprob: -18.000001907348633
    8. '۱' → logprob: -18.437501907348633
    9. '   ' → logprob: -19.125001907348633
    10. '১' → logprob: -19.312501907348633

Token 351: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004085524007678032
    2. ']' → logprob: -5.504085540771484
    3. ')' → logprob: -12.379085540771484
    4. '])]' → logprob: -13.754085540771484
    5. ']]' → logprob: -14.504085540771484
    6. ')],' → logprob: -14.879085540771484
    7. '])' → logprob: -15.004085540771484
    8. ' ]' → logprob: -15.004085540771484
    9. '}]' → logprob: -15.754085540771484
    10. ')])' → logprob: -16.129085540771484

Token 352: '#' (ID: 2)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -7.076218025758862e-05
    2. '
' → logprob: -9.625070571899414
    3. '  
' → logprob: -13.250070571899414
    4. 'DP' → logprob: -13.875070571899414
    5. 'dp' → logprob: -14.625070571899414
    6. '#' → logprob: -15.125070571899414
    7. ' 
' → logprob: -15.125070571899414
    8. ']' → logprob: -16.000070571899414
    9. '```' → logprob: -16.125070571899414
    10. '    
' → logprob: -16.375070571899414

Token 353: ' On' (ID: 2160)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.00038443657103925943
    2. '#' → logprob: -7.875384330749512
    3. 'DP' → logprob: -13.250384330749512
    4. 'Dn' → logprob: -13.625384330749512
    5. '
' → logprob: -14.750384330749512
    6. 'dp' → logprob: -15.000384330749512
    7. 'Dj' → logprob: -16.750385284423828
    8. 'D' → logprob: -16.750385284423828
    9. 'Dv' → logprob: -17.125385284423828
    10. 'Df' → logprob: -17.250385284423828

Token 354: ' initialise' (ID: 145250)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.03896614536643028
    2. '[' → logprob: -3.413966178894043
    3. '_dp' → logprob: -6.288966178894043
    4. 'dp' → logprob: -6.538966178894043
    5. '#' → logprob: -7.663966178894043
    6. ' =' → logprob: -8.038966178894043
    7. 's' → logprob: -8.288966178894043
    8. 'n' → logprob: -8.413966178894043
    9. 'DP' → logprob: -9.038966178894043
    10. ']' → logprob: -9.163966178894043

Token 355: ' le' (ID: 505)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -4.978233846486546e-05
    2. ' D' → logprob: -10.750049591064453
    3. '
' → logprob: -11.000049591064453
    4. 'D' → logprob: -12.750049591064453
    5. '[' → logprob: -13.000049591064453
    6. 'dp' → logprob: -13.125049591064453
    7. ' ' → logprob: -13.500049591064453
    8. '_dp' → logprob: -13.750049591064453
    9. ' dp' → logprob: -15.000049591064453
    10. 'Dn' → logprob: -15.500049591064453

Token 356: ' point' (ID: 2438)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.9361264946837764e-07
    2. 'dp' → logprob: -17.875
    3. 'DP' → logprob: -18.0
    4. 'Dn' → logprob: -18.0
    5. ' ' → logprob: -18.125
    6. '_dp' → logprob: -18.25
    7. '[' → logprob: -18.5
    8. '  ' → logprob: -19.0
    9. 'Dj' → logprob: -19.0
    10. 'Dd' → logprob: -19.125

Token 357: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.30140528082847595
    2. '_' → logprob: -2.551405191421509
    3. ' de' → logprob: -2.551405191421509
    4. 'de' → logprob: -3.176405191421509
    5. '_de' → logprob: -4.176405429840088
    6. 'd' → logprob: -4.426405429840088
    7. 's' → logprob: -5.051405429840088
    8. ' =' → logprob: -5.051405429840088
    9. '_d' → logprob: -5.176405429840088
    10. '=' → logprob: -5.176405429840088

Token 358: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.004513431340456009
    2. 'depart' → logprob: -5.504513263702393
    3. ' départ' → logprob: -7.879513263702393
    4. 'd' → logprob: -10.25451374053955
    5. 'dp' → logprob: -11.50451374053955
    6. 'departure' → logprob: -12.25451374053955
    7. 'dep' → logprob: -12.50451374053955
    8. 'de' → logprob: -14.37951374053955
    9. '0' → logprob: -14.62951374053955
    10. 'vue' → logprob: -14.62951374053955

Token 359: ' :
' (ID: 10039)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.00017278951418120414
    2. '[' → logprob: -8.75017261505127
    3. '0' → logprob: -11.37517261505127
    4. '][' → logprob: -13.62517261505127
    5. '
' → logprob: -14.50017261505127
    6. ']' → logprob: -15.25017261505127
    7. ' D' → logprob: -15.75017261505127
    8. 'dp' → logprob: -16.250173568725586
    9. 'Dn' → logprob: -16.250173568725586
    10. '1' → logprob: -16.500173568725586

Token 360: '#' (ID: 2)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -9.088346359931165e-07
    2. ' D' → logprob: -14.250000953674316
    3. 'Dn' → logprob: -16.875
    4. '1' → logprob: -16.875
    5. '0' → logprob: -17.0
    6. 'dp' → logprob: -18.5
    7. 'D' → logprob: -18.625
    8. '
' → logprob: -19.0
    9. 'Dd' → logprob: -19.0
    10. '	D' → logprob: -19.25

Token 361: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: 0.0
    2. '0' → logprob: -18.0
    3. 'dp' → logprob: -18.875
    4. '1' → logprob: -18.875
    5. '
' → logprob: -19.25
    6. 'DP' → logprob: -19.375
    7. '[' → logprob: -19.375
    8. 'Dn' → logprob: -20.0
    9. '_dp' → logprob: -20.75
    10. 'Dc' → logprob: -21.5

Token 362: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. '[p' → logprob: -15.75
    4. ' p' → logprob: -17.25
    5. 'Dp' → logprob: -18.75
    6. 'P' → logprob: -19.25
    7. 'п' → logprob: -19.5
    8. '_p' → logprob: -20.25
    9. '```' → logprob: -20.375
    10. 'pp' → logprob: -20.75

Token 363: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.36574100604048e-06
    2. '][' → logprob: -13.125004768371582
    3. '0' → logprob: -14.750004768371582
    4. 'dp' → logprob: -15.000004768371582
    5. 'Dp' → logprob: -15.125004768371582
    6. 's' → logprob: -15.250004768371582
    7. ' [' → logprob: -15.625004768371582
    8. '```' → logprob: -15.875004768371582
    9. ')[' → logprob: -16.000003814697266
    10. '}[' → logprob: -16.000003814697266

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -13.125003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '０' → logprob: -15.875003814697266
    5. '#' → logprob: -16.625003814697266
    6. '۰' → logprob: -17.125003814697266
    7. '
' → logprob: -17.250003814697266
    8. '00' → logprob: -18.125003814697266
    9. '000' → logprob: -18.125003814697266
    10. '```' → logprob: -18.125003814697266

Token 365: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00025037277373485267
    2. '[' → logprob: -8.875250816345215
    3. ']' → logprob: -9.125250816345215
    4. '0' → logprob: -14.250250816345215
    5. ' ][' → logprob: -14.625250816345215
    6. '#' → logprob: -15.750250816345215
    7. ']][' → logprob: -16.8752498626709
    8. ''][' → logprob: -16.8752498626709
    9. ']
' → logprob: -16.8752498626709
    10. '"][' → logprob: -17.0002498626709

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -17.875
    4. '０' → logprob: -18.625
    5. '000' → logprob: -18.75
    6. '०' → logprob: -19.625
    7. '[' → logprob: -19.875
    8. '০' → logprob: -19.875
    9. '00' → logprob: -20.75
    10. '1' → logprob: -21.125

Token 367: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.057743949990254e-05
    2. ']' → logprob: -11.500020980834961
    3. '[' → logprob: -11.625020980834961
    4. ' ][' → logprob: -14.000020980834961
    5. '1' → logprob: -14.625020980834961
    6. '

' → logprob: -17.62502098083496
    7. '0' → logprob: -17.62502098083496
    8. '=' → logprob: -18.00002098083496
    9. ''][' → logprob: -18.00002098083496
    10. ']=' → logprob: -18.12502098083496

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.000000953674316
    4. 'True' → logprob: -15.750000953674316
    5. 'true' → logprob: -18.250001907348633
    6. '１' → logprob: -19.000001907348633
    7. '<|end|>' → logprob: -19.000001907348633
    8. ']' → logprob: -19.750001907348633
    9. ' True' → logprob: -19.875001907348633
    10. '১' → logprob: -20.187501907348633

Token 369: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.700132997939363e-05
    2. ']=' → logprob: -11.000017166137695
    3. ' ]' → logprob: -15.375017166137695
    4. '=' → logprob: -17.750017166137695
    5. ']+=' → logprob: -18.000017166137695
    6. ')' → logprob: -19.500017166137695
    7. ' ' → logprob: -20.750017166137695
    8. ']
' → logprob: -20.875017166137695
    9. '1' → logprob: -21.125017166137695
    10. ']

' → logprob: -21.750017166137695

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589076846838
    2. ' =' → logprob: -3.048588991165161
    3. ']' → logprob: -13.673588752746582
    4. ']=' → logprob: -14.798588752746582
    5. '＝' → logprob: -16.2985897064209
    6. '[' → logprob: -17.2985897064209
    7. '+=' → logprob: -17.4235897064209
    8. ' ' → logprob: -18.1735897064209
    9. ' +=' → logprob: -18.5485897064209
    10. '=True' → logprob: -18.7985897064209

Token 371: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '１' → logprob: -20.5
    4. '0' → logprob: -20.875
    5. '۱' → logprob: -21.125
    6. '```' → logprob: -21.25
    7. '   ' → logprob: -21.375
    8. '`' → logprob: -21.875
    9. '১' → logprob: -22.125
    10. '१' → logprob: -22.375

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '0' → logprob: -19.375
    4. '１' → logprob: -19.5
    5. '۱' → logprob: -20.25
    6. '১' → logprob: -20.625
    7. 'int' → logprob: -20.75
    8. '```' → logprob: -20.75
    9. '१' → logprob: -21.25
    10. '
' → logprob: -21.25

Token 373: ' veut' (ID: 41653)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0004744023026432842
    2. '
' → logprob: -8.000473976135254
    3. '=' → logprob: -9.250473976135254
    4. ' =' → logprob: -10.875473976135254
    5. '[' → logprob: -12.125473976135254
    6. ']' → logprob: -12.250473976135254
    7. 'D' → logprob: -12.625473976135254
    8. '  
' → logprob: -13.125473976135254
    9. ' 
' → logprob: -13.250473976135254
    10. '=
' → logprob: -13.875473976135254

Token 374: ' dire' (ID: 4071)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.08845467865467072
    2. ' dire' → logprob: -3.3384547233581543
    3. '=' → logprob: -3.9634547233581543
    4. '#' → logprob: -4.213454723358154
    5. '-dire' → logprob: -5.463454723358154
    6. 'dir' → logprob: -5.588454723358154
    7. 'sign' → logprob: -5.713454723358154
    8. 'val' → logprob: -6.463454723358154
    9. 'ind' → logprob: -8.088454246520996
    10. ' #' → logprob: -8.213454246520996

Token 375: ' :' (ID: 712)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.5984930992126465
    2. '#' → logprob: -1.4734930992126465
    3. ' qu' → logprob: -1.7234930992126465
    4. 'que' → logprob: -4.2234930992126465
    5. 'qu' → logprob: -4.2234930992126465
    6. ' that' → logprob: -5.0984930992126465
    7. ' #' → logprob: -5.7234930992126465
    8. '1' → logprob: -6.2234930992126465
    9. ' ' → logprob: -6.7234930992126465
    10. 'that' → logprob: -7.0984930992126465

Token 376: ' il' (ID: 1793)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02578705921769142
    2. ' ' → logprob: -3.900787115097046
    3. '#' → logprob: -5.400786876678467
    4. 'Dp' → logprob: -8.025787353515625
    5. ' que' → logprob: -9.275787353515625
    6. ' #' → logprob: -9.275787353515625
    7. 'que' → logprob: -9.525787353515625
    8. 'Il' → logprob: -10.275787353515625
    9. ' qu' → logprob: -10.775787353515625
    10. 'qu' → logprob: -10.775787353515625

Token 377: ' existe' (ID: 19498)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.35352322459220886
    2. 'y' → logprob: -1.9785232543945312
    3. 'n' → logprob: -2.6035232543945312
    4. ' n' → logprob: -2.6035232543945312
    5. 's' → logprob: -5.103523254394531
    6. '#' → logprob: -5.853523254394531
    7. ''y' → logprob: -6.603523254394531
    8. 'ya' → logprob: -8.853523254394531
    9. 'x' → logprob: -8.978523254394531
    10. ' ' → logprob: -9.103523254394531

Token 378: ' exactement' (ID: 108701)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2679904699325562
    2. ' une' → logprob: -1.5179904699325562
    3. ' exactement' → logprob: -2.1429905891418457
    4. ' ' → logprob: -2.2679905891418457
    5. 'exact' → logprob: -2.6429905891418457
    6. ' un' → logprob: -2.6429905891418457
    7. 'un' → logprob: -3.1429905891418457
    8. 'une' → logprob: -3.2679905891418457
    9. '<|end|>' → logprob: -3.2679905891418457
    10. ' exactly' → logprob: -4.892990589141846

Token 379: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6331329941749573
    2. ' ' → logprob: -1.1331329345703125
    3. ' une' → logprob: -2.3831329345703125
    4. '<|end|>' → logprob: -3.5081329345703125
    5. ' un' → logprob: -3.8831329345703125
    6. 'une' → logprob: -6.3831329345703125
    7. 'un' → logprob: -6.8831329345703125
    8. ' exactement' → logprob: -7.5081329345703125
    9. '  ' → logprob: -7.7581329345703125
    10. 'exact' → logprob: -8.758132934570312

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'un' → logprob: -16.125032424926758
    4. '  ' → logprob: -16.750032424926758
    5. 'une' → logprob: -16.750032424926758
    6. ' une' → logprob: -17.125032424926758
    7. ' un' → logprob: -18.500032424926758
    8. '0' → logprob: -18.625032424926758
    9. '<|end|>' → logprob: -19.000032424926758
    10. ' one' → logprob: -19.125032424926758

Token 381: ' façon' (ID: 33381)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.17075227200984955
    2. 'man' → logprob: -2.1707522869110107
    3. ' nombre' → logprob: -4.295752048492432
    4. ' façon' → logprob: -4.670752048492432
    5. 'fa' → logprob: -5.170752048492432
    6. 'way' → logprob: -5.545752048492432
    7. ' manière' → logprob: -5.545752048492432
    8. 'poss' → logprob: -5.920752048492432
    9. '```' → logprob: -7.420752048492432
    10. 'number' → logprob: -7.795752048492432

Token 382: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.7610710263252258
    2. ' construire' → logprob: -1.261070966720581
    3. ' commencer' → logprob: -1.511070966720581
    4. 'ne' → logprob: -4.63607120513916
    5. 'comm' → logprob: -5.63607120513916
    6. ' choisir' → logprob: -5.76107120513916
    7. 'construct' → logprob: -6.01107120513916
    8. 'faire' → logprob: -6.13607120513916
    9. ' faire' → logprob: -6.76107120513916
    10. ' dém' → logprob: -6.88607120513916

Token 384: ' rien' (ID: 23082)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2116849273443222
    2. 'r' → logprob: -1.9616849422454834
    3. ' pas' → logprob: -3.0866849422454834
    4. ' rien' → logprob: -5.461684703826904
    5. 'prendre' → logprob: -8.836685180664062
    6. 'faire' → logprob: -10.711685180664062
    7. 'avoir' → logprob: -10.961685180664062
    8. ' prendre' → logprob: -10.961685180664062
    9. '#' → logprob: -11.711685180664062
    10. 'mettre' → logprob: -12.461685180664062

Token 385: ' avoir' (ID: 16595)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.028911910951137543
    2. ' faire' → logprob: -3.653911828994751
    3. 'f' → logprob: -7.40391206741333
    4. 'prendre' → logprob: -7.52891206741333
    5. 'avoir' → logprob: -7.90391206741333
    6. ' choisir' → logprob: -8.028911590576172
    7. 'cho' → logprob: -8.278911590576172
    8. 'Faire' → logprob: -9.278911590576172
    9. '-faire' → logprob: -9.403911590576172
    10. 'fait' → logprob: -9.653911590576172

Token 386: ' choisi' (ID: 77245)
  Prédit: ' fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fait' → logprob: -0.7778111696243286
    2. 'fait' → logprob: -1.0278111696243286
    3. ' construit' → logprob: -3.277811050415039
    4. 'faire' → logprob: -3.527811050415039
    5. 'f' → logprob: -3.527811050415039
    6. 'Dp' → logprob: -3.652811050415039
    7. 'dp' → logprob: -3.902811050415039
    8. 'D' → logprob: -5.402811050415039
    9. '#' → logprob: -5.402811050415039
    10. 'pour' → logprob: -5.527811050415039

Token 387: ',
' (ID: 412)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.12932540476322174
    2. ']' → logprob: -2.1293253898620605
    3. ')' → logprob: -7.6293253898620605
    4. ' ]' → logprob: -7.7543253898620605
    5. ',' → logprob: -7.8793253898620605
    6. '[' → logprob: -8.129325866699219
    7. '#' → logprob: -8.504325866699219
    8. '
' → logprob: -8.879325866699219
    9. '.' → logprob: -9.504325866699219
    10. '_dp' → logprob: -9.629325866699219

Token 388: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13312019407749176
    2. 'c' → logprob: -2.63312029838562
    3. 'car' → logprob: -3.38312029838562
    4. ' c' → logprob: -5.508120059967041
    5. ' #' → logprob: -5.633120059967041
    6. ' ce' → logprob: -5.883120059967041
    7. 'so' → logprob: -6.133120059967041
    8. 'ce' → logprob: -6.508120059967041
    9. 'et' → logprob: -6.758120059967041
    10. ' car' → logprob: -7.133120059967041

Token 389: ' zéro' (ID: 182040)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05176518112421036
    2. ' #' → logprob: -3.801765203475952
    3. 'car' → logprob: -4.426764965057373
    4. 'Dp' → logprob: -5.301764965057373
    5. ' ' → logprob: -5.551764965057373
    6. 'c' → logprob: -6.301764965057373
    7. ' car' → logprob: -6.426764965057373
    8. 's' → logprob: -7.176764965057373
    9. '<|end|>' → logprob: -8.176765441894531
    10. 'which' → logprob: -8.176765441894531

Token 390: ' chiffre' (ID: 107420)
  Prédit: ' chiffres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chiffres' → logprob: -0.7161902785301208
    2. '<|end|>' → logprob: -1.2161903381347656
    3. ' digits' → logprob: -3.4661903381347656
    4. 'digits' → logprob: -3.9661903381347656
    5. ' pour' → logprob: -4.466190338134766
    6. '.' → logprob: -4.716190338134766
    7. ' de' → logprob: -4.716190338134766
    8. ')' → logprob: -4.716190338134766
    9. ' ' → logprob: -4.966190338134766
    10. 'nombre' → logprob: -5.091190338134766

Token 391: ' non' (ID: 2893)
  Prédit: ' choisi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' choisi' → logprob: -0.30499598383903503
    2. 'cho' → logprob: -2.6799960136413574
    3. 'chosen' → logprob: -3.3049960136413574
    4. 's' → logprob: -3.3049960136413574
    5. '<|end|>' → logprob: -4.179996013641357
    6. 'pour' → logprob: -4.179996013641357
    7. 'selected' → logprob: -4.179996013641357
    8. ' chosen' → logprob: -4.929996013641357
    9. ' pour' → logprob: -5.054996013641357
    10. ' chois' → logprob: -5.179996013641357

Token 392: '-z' (ID: 16826)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -1.0880341529846191
    2. 'z' → logprob: -1.4630341529846191
    3. '0' → logprob: -1.7130341529846191
    4. ' zéro' → logprob: -1.7130341529846191
    5. ' zero' → logprob: -3.088034152984619
    6. 'zeros' → logprob: -4.713034152984619
    7. '-z' → logprob: -5.213034152984619
    8. ' z' → logprob: -5.338034152984619
    9. ' zeros' → logprob: -6.338034152984619
    10. '-zero' → logprob: -6.463034152984619

Token 393: 'éro' (ID: 28155)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.8300275206565857
    2. 'éro' → logprob: -1.0800275802612305
    3. 'éros' → logprob: -1.5800275802612305
    4. 'eros' → logprob: -4.0800275802612305
    5. 'e' → logprob: -8.20502758026123
    6. '#' → logprob: -8.45502758026123
    7. 'erro' → logprob: -8.58002758026123
    8. 'ro' → logprob: -9.45502758026123
    9. '%C' → logprob: -9.58002758026123
    10. '"' → logprob: -9.70502758026123

Token 394: ' utilisé' (ID: 53138)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1055050790309906
    2. 'Dp' → logprob: -2.8555049896240234
    3. ']=' → logprob: -4.605504989624023
    4. ',' → logprob: -4.730504989624023
    5. '.' → logprob: -5.605504989624023
    6. '=' → logprob: -5.605504989624023
    7. 's' → logprob: -5.730504989624023
    8. ')' → logprob: -6.230504989624023
    9. '#' → logprob: -6.230504989624023
    10. '[' → logprob: -7.105504989624023

Token 395: ',' (ID: 11)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.007933096960186958
    2. ']' → logprob: -4.882933139801025
    3. ',' → logprob: -8.882932662963867
    4. '
' → logprob: -9.382932662963867
    5. '#' → logprob: -10.882932662963867
    6. ')' → logprob: -10.882932662963867
    7. 'DP' → logprob: -11.257932662963867
    8. '.' → logprob: -11.382932662963867
    9. 'dp' → logprob: -12.007932662963867
    10. ']
' → logprob: -12.007932662963867

Token 396: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6733681559562683
    2. 'Dp' → logprob: -1.173368215560913
    3. '
' → logprob: -2.673368215560913
    4. '1' → logprob: -3.548368215560913
    5. '0' → logprob: -4.048367977142334
    6. ')' → logprob: -4.298367977142334
    7. ' ' → logprob: -4.798367977142334
    8. 'n' → logprob: -5.173367977142334
    9. ']' → logprob: -5.298367977142334
    10. ' 
' → logprob: -5.298367977142334

Token 397: ' on' (ID: 402)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24212418496608734
    2. 'bound' → logprob: -2.492124080657959
    3. ' ' → logprob: -3.242124080657959
    4. 'le' → logprob: -3.867124080657959
    5. ' toujours' → logprob: -4.617124080657959
    6. ' bound' → logprob: -4.742124080657959
    7. 'être' → logprob: -5.242124080657959
    8. 'la' → logprob: -5.367124080657959
    9. ' le' → logprob: -5.367124080657959
    10. 'l' → logprob: -5.867124080657959

Token 398: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7022641897201538
    2. 'est' → logprob: -1.4522641897201538
    3. 'reste' → logprob: -2.3272643089294434
    4. ' reste' → logprob: -2.8272643089294434
    5. ' suis' → logprob: -3.2022643089294434
    6. 's' → logprob: -3.9522643089294434
    7. ' sommes' → logprob: -3.9522643089294434
    8. ' êtes' → logprob: -4.827264308929443
    9. '#' → logprob: -4.952264308929443
    10. ' rest' → logprob: -5.202264308929443

Token 399: ' (' (ID: 350)
  Prédit: ' encore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' encore' → logprob: -0.8305209875106812
    2. 'tou' → logprob: -1.4555209875106812
    3. 'enc' → logprob: -2.0805211067199707
    4. ' toujours' → logprob: -2.5805211067199707
    5. 'à' → logprob: -2.8305211067199707
    6. 'dans' → logprob: -3.8305211067199707
    7. 'exact' → logprob: -4.205521106719971
    8. ' à' → logprob: -4.330521106719971
    9. 'strict' → logprob: -4.955521106719971
    10. ' enc' → logprob: -5.330521106719971

Token 400: 'par' (ID: 796)
  Prédit: 'tou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tou' → logprob: -0.493052214384079
    2. ' toujours' → logprob: -1.3680522441864014
    3. ' encore' → logprob: -2.9930522441864014
    4. 'dans' → logprob: -3.9930522441864014
    5. 'enc' → logprob: -4.368052005767822
    6. 'strict' → logprob: -4.368052005767822
    7. 'exact' → logprob: -4.493052005767822
    8. 'à' → logprob: -4.493052005767822
    9. 'still' → logprob: -4.868052005767822
    10. ' à' → logprob: -6.493052005767822

Token 401: ' défaut' (ID: 79375)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4643224477767944
    2. '
' → logprob: -2.089322566986084
    3. 'rapport' → logprob: -2.214322566986084
    4. 'dé' → logprob: -2.339322566986084
    5. 'still' → logprob: -2.589322566986084
    6. 'fois' → logprob: -2.839322566986084
    7. 'enc' → logprob: -3.089322566986084
    8. 'fait' → logprob: -3.214322566986084
    9. 'ailleurs' → logprob: -3.214322566986084
    10. '```' → logprob: -3.839322566986084

Token 402: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020125459879636765
    2. ' à' → logprob: -5.020125389099121
    3. 'à' → logprob: -5.770125389099121
    4. ' )' → logprob: -6.145125389099121
    5. ' toujours' → logprob: -6.270125389099121
    6. ' au' → logprob: -6.520125389099121
    7. ' encore' → logprob: -6.520125389099121
    8. 'dans' → logprob: -6.895125389099121
    9. ',' → logprob: -7.020125389099121
    10. ' dans' → logprob: -7.645125389099121

Token 403: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.7089097499847412
    2. 'dans' → logprob: -1.0839097499847412
    3. ' à' → logprob: -2.458909749984741
    4. ' dans' → logprob: -3.708909749984741
    5. ' encore' → logprob: -4.20890998840332
    6. 'tou' → logprob: -4.58390998840332
    7. 'strict' → logprob: -4.70890998840332
    8. ' limité' → logprob: -5.45890998840332
    9. 'enc' → logprob: -5.58390998840332
    10. ' toujours' → logprob: -5.70890998840332

Token 404: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016541017219424248
    2. 'bound' → logprob: -4.391541004180908
    3. ' ' → logprob: -6.016541004180908
    4. ' bound' → logprob: -7.266541004180908
    5. 'l' → logprob: -7.891541004180908
    6. 'la' → logprob: -8.016541481018066
    7. ' la' → logprob: -9.641541481018066
    8. 'True' → logprob: -10.141541481018066
    9. ' True' → logprob: -10.641541481018066
    10. 'lim' → logprob: -11.016541481018066

Token 405: ' borne' (ID: 111819)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.03517352417111397
    2. 'borne' → logprob: -3.9101734161376953
    3. ' limite' → logprob: -4.535173416137695
    4. 'limit' → logprob: -5.910173416137695
    5. 'front' → logprob: -7.535173416137695
    6. 'bound' → logprob: -8.285173416137695
    7. 'born' → logprob: -9.785173416137695
    8. '1' → logprob: -10.160173416137695
    9. ' frontière' → logprob: -10.285173416137695
    10. 'bord' → logprob: -10.410173416137695

Token 406: ' (' (ID: 350)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.058360133320093155
    2. '=' → logprob: -4.3083600997924805
    3. 'D' → logprob: -4.5583600997924805
    4. '.' → logprob: -4.6833600997924805
    5. ' =' → logprob: -5.6833600997924805
    6. ']' → logprob: -5.8083600997924805
    7. ',' → logprob: -6.0583600997924805
    8. 'strict' → logprob: -6.1833600997924805
    9. '1' → logprob: -6.5583600997924805
    10. 's' → logprob: -6.6833600997924805

Token 407: 'bound' (ID: 18791)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.511095404624939
    2. 'True' → logprob: -1.011095404624939
    3. ' True' → logprob: -4.0110955238342285
    4. ')' → logprob: -4.2610955238342285
    5. 'la' → logprob: -7.2610955238342285
    6. 'pour' → logprob: -7.3860955238342285
    7. 'dans' → logprob: -7.7610955238342285
    8. ' ' → logprob: -7.8860955238342285
    9. 'le' → logprob: -7.8860955238342285
    10. 'int' → logprob: -8.76109504699707

Token 408: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030143950134515762
    2. ')]' → logprob: -3.780143976211548
    3. ')])' → logprob: -5.655143737792969
    4. ' )' → logprob: -6.655143737792969
    5. ']' → logprob: -6.655143737792969
    6. '])' → logprob: -8.530143737792969
    7. '1' → logprob: -9.405143737792969
    8. '=' → logprob: -9.405143737792969
    9. ' ' → logprob: -9.530143737792969
    10. ')
' → logprob: -9.905143737792969

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. 'True' → logprob: -17.625625610351562
    4. '   ' → logprob: -18.375625610351562
    5. '
' → logprob: -19.000625610351562
    6. ' True' → logprob: -19.375625610351562
    7. ')' → logprob: -19.500625610351562
    8. '  ' → logprob: -20.000625610351562
    9. '```' → logprob: -20.125625610351562
    10. '0' → logprob: -20.750625610351562

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'True' → logprob: -20.0
    4. '```' → logprob: -21.0
    5. '   ' → logprob: -22.125
    6. '0' → logprob: -22.5
    7. '
' → logprob: -23.0
    8. ')' → logprob: -23.5
    9. '１' → logprob: -23.5
    10. 'true' → logprob: -23.75

Token 411: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00041148843592964113
    2. ')]' → logprob: -8.625411033630371
    3. ' ]' → logprob: -8.875411033630371
    4. ')' → logprob: -9.500411033630371
    5. ']
' → logprob: -11.250411033630371
    6. ']

' → logprob: -14.375411033630371
    7. ']=' → logprob: -14.500411033630371
    8. ']]' → logprob: -14.625411033630371
    9. '#' → logprob: -15.000411033630371
    10. '])' → logprob: -15.250411033630371

Token 412: ' 
' (ID: 793)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -3.173704271830502e-06
    2. '
' → logprob: -12.87500286102295
    3. ']' → logprob: -15.00000286102295
    4. ']
' → logprob: -15.87500286102295
    5. 'DP' → logprob: -16.875003814697266
    6. 'D' → logprob: -17.750003814697266
    7. '[' → logprob: -18.250003814697266
    8. 'Dn' → logprob: -18.500003814697266
    9. '#' → logprob: -19.250003814697266
    10. '

' → logprob: -19.375003814697266

Token 413: 'Dp' (ID: 116458)
  Prédit: 'Dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -8.895480277715251e-06
    2. ']' → logprob: -12.000008583068848
    3. '
' → logprob: -13.125008583068848
    4. ']
' → logprob: -14.625008583068848
    5. 'DP' → logprob: -16.000009536743164
    6. 'D' → logprob: -16.875009536743164
    7. '#' → logprob: -17.875009536743164
    8. ')' → logprob: -18.250009536743164
    9. 'dp' → logprob: -18.250009536743164
    10. 'Dn' → logprob: -18.250009536743164

Token 414: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.5
    3. '][' → logprob: -17.0
    4. '```' → logprob: -17.375
    5. ' [' → logprob: -17.5
    6. '\[' → logprob: -17.75
    7. '=' → logprob: -19.375
    8. '}[' → logprob: -19.375
    9. 's' → logprob: -19.75
    10. '
' → logprob: -20.0

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '０' → logprob: -21.5
    4. '۰' → logprob: -21.75
    5. '000' → logprob: -22.75
    6. '
' → logprob: -22.875
    7. '[' → logprob: -23.125
    8. '00' → logprob: -23.375
    9. '   ' → logprob: -23.875
    10. '٠' → logprob: -23.875

Token 416: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.047134305234067e-05
    2. ']' → logprob: -11.000030517578125
    3. '[' → logprob: -11.375030517578125
    4. ' ][' → logprob: -13.125030517578125
    5. '0' → logprob: -16.625030517578125
    6. '"][' → logprob: -16.750030517578125
    7. ''][' → logprob: -17.250030517578125
    8. ']][' → logprob: -17.500030517578125
    9. ']
' → logprob: -18.375030517578125
    10. ' ' → logprob: -18.875030517578125

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۰' → logprob: -19.875
    4. '<|end|>' → logprob: -20.0
    5. '０' → logprob: -21.5
    6. '00' → logprob: -22.25
    7. '০' → logprob: -22.875
    8. '000' → logprob: -23.0
    9. '٠' → logprob: -24.25
    10. '०' → logprob: -24.25

Token 418: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011510594777064398
    2. ']' → logprob: -9.500115394592285
    3. '[' → logprob: -10.250115394592285
    4. ' ][' → logprob: -12.375115394592285
    5. '1' → logprob: -15.000115394592285
    6. '"][' → logprob: -16.00011444091797
    7. ''][' → logprob: -16.25011444091797
    8. ']][' → logprob: -17.00011444091797
    9. ']
' → logprob: -17.62511444091797
    10. '	' → logprob: -18.62511444091797

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -20.5
    4. '<|end|>' → logprob: -20.75
    5. '```' → logprob: -21.375
    6. '
' → logprob: -22.125
    7. 'True' → logprob: -22.375
    8. '۱' → logprob: -22.625
    9. '   ' → logprob: -22.875
    10. '１' → logprob: -23.0

Token 420: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020425561524461955
    2. ']=' → logprob: -8.500204086303711
    3. ' ]' → logprob: -14.500204086303711
    4. '=' → logprob: -15.375204086303711
    5. ']+=' → logprob: -18.37520408630371
    6. ']
' → logprob: -19.25020408630371
    7. ')' → logprob: -19.37520408630371
    8. ']

' → logprob: -19.37520408630371
    9. ']==' → logprob: -19.87520408630371
    10. '']' → logprob: -20.50020408630371

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038065019994974136
    2. ' =' → logprob: -3.288064956665039
    3. ']=' → logprob: -11.163064956665039
    4. ']' → logprob: -11.663064956665039
    5. ')=' → logprob: -15.538064956665039
    6. '＝' → logprob: -16.41306495666504
    7. '=

' → logprob: -16.41306495666504
    8. '[' → logprob: -16.66306495666504
    9. '=[' → logprob: -16.91306495666504
    10. ')' → logprob: -16.91306495666504

Token 422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -22.5
    4. '۱' → logprob: -22.75
    5. '１' → logprob: -23.25
    6. '' → logprob: -23.375
    7. '   ' → logprob: -23.625
    8. '0' → logprob: -24.25
    9. '১' → logprob: -24.5
    10. '१' → logprob: -25.0

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '   ' → logprob: -22.625
    4. '```' → logprob: -23.375
    5. '１' → logprob: -23.5
    6. '' → logprob: -23.875
    7. '۱' → logprob: -24.125
    8. '0' → logprob: -24.875
    9. '  ' → logprob: -25.0
    10. '১' → logprob: -25.5

Token 424: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001173917087726295
    2. ' for' → logprob: -6.876173973083496
    3. '
' → logprob: -8.876173973083496
    4. '#' → logprob: -14.376173973083496
    5. 'n' → logprob: -15.001173973083496
    6. 'i' → logprob: -15.876173973083496
    7. ')' → logprob: -16.25117301940918
    8. '
' → logprob: -16.37617301940918
    9. '```' → logprob: -16.50117301940918
    10. '

' → logprob: -16.62617301940918

Token 425: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.167648876318708e-05
    2. ' for' → logprob: -10.125041961669922
    3. 'i' → logprob: -13.500041961669922
    4. '#' → logprob: -15.500041961669922
    5. ')' → logprob: -18.000041961669922
    6. '```' → logprob: -18.500041961669922
    7. '	for' → logprob: -19.000041961669922
    8. '
' → logprob: -19.375041961669922
    9. 'f' → logprob: -20.375041961669922
    10. 'n' → logprob: -20.375041961669922

Token 426: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.750000953674316
    3. 'i' → logprob: -15.875000953674316
    4. '#' → logprob: -16.25
    5. 'import' → logprob: -17.625
    6. 'from' → logprob: -17.75
    7. '
' → logprob: -18.875
    8. '```' → logprob: -19.25
    9. '	for' → logprob: -22.125
    10. 'def' → logprob: -22.125

Token 427: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004933681804686785
    2. ' for' → logprob: -5.379933834075928
    3. 'or' → logprob: -8.12993335723877
    4. '#' → logprob: -11.25493335723877
    5. 'r' → logprob: -13.50493335723877
    6. 'pour' → logprob: -14.00493335723877
    7. 's' → logprob: -14.12993335723877
    8. '```' → logprob: -14.12993335723877
    9. '`' → logprob: -14.75493335723877
    10. '
' → logprob: -14.87993335723877

Token 428: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1602274775505066
    2. ' for' → logprob: -1.9102275371551514
    3. 'i' → logprob: -13.66022777557373
    4. 'pour' → logprob: -14.03522777557373
    5. ' pour' → logprob: -14.53522777557373
    6. 's' → logprob: -14.78522777557373
    7. ' i' → logprob: -15.16022777557373
    8. '
' → logprob: -16.160226821899414
    9. '_' → logprob: -17.285226821899414
    10. '#' → logprob: -17.535226821899414

Token 429: ' traite' (ID: 180696)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.639096970204264e-05
    2. ' for' → logprob: -9.250096321105957
    3. 'i' → logprob: -15.500096321105957
    4. '
' → logprob: -16.750097274780273
    5. 'n' → logprob: -19.375097274780273
    6. ':' → logprob: -19.625097274780273
    7. '	for' → logprob: -19.750097274780273
    8. 'f' → logprob: -20.000097274780273
    9. '#' → logprob: -20.125097274780273
    10. '```' → logprob: -20.250097274780273

Token 430: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3781856894493103
    2. ' i' → logprob: -1.753185749053955
    3. ' for' → logprob: -2.628185749053955
    4. 'for' → logprob: -2.753185749053955
    5. ' ' → logprob: -5.503185749053955
    6. 's' → logprob: -7.378185749053955
    7. 'e' → logprob: -8.128185272216797
    8. '_' → logprob: -8.378185272216797
    9. ' pour' → logprob: -9.378185272216797
    10. '  ' → logprob: -9.753185272216797

Token 431: ' chiffre' (ID: 107420)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16102926433086395
    2. ' i' → logprob: -1.9110292196273804
    3. ' ' → logprob: -7.41102933883667
    4. '_' → logprob: -9.536028861999512
    5. ' for' → logprob: -9.786028861999512
    6. 'for' → logprob: -9.911028861999512
    7. ' ' → logprob: -12.036028861999512
    8. ' _' → logprob: -12.286028861999512
    9. 'digit' → logprob: -13.036028861999512
    10. ' in' → logprob: -13.661028861999512

Token 432: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0092121921479702
    2. ' for' → logprob: -4.759212017059326
    3. 'i' → logprob: -7.634212017059326
    4. '
' → logprob: -10.259212493896484
    5. 'n' → logprob: -10.884212493896484
    6. 'in' → logprob: -11.009212493896484
    7. ':' → logprob: -11.634212493896484
    8. ' i' → logprob: -11.634212493896484
    9. '```' → logprob: -12.009212493896484
    10. ' in' → logprob: -12.134212493896484

Token 433: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10124894976615906
    2. ' n' → logprob: -2.3512489795684814
    3. 'range' → logprob: -7.476248741149902
    4. ' range' → logprob: -7.726248741149902
    5. ' la' → logprob: -10.976248741149902
    6. '	n' → logprob: -12.101248741149902
    7. ' ' → logprob: -13.226248741149902
    8. '`' → logprob: -13.726248741149902
    9. ' ' → logprob: -13.851248741149902
    10. 'k' → logprob: -14.101248741149902

Token 434: ' gauche' (ID: 58367)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009977981681004167
    2. ' n' → logprob: -7.000998020172119
    3. 'range' → logprob: -10.125997543334961
    4. ' range' → logprob: -11.000997543334961
    5. 'chaine' → logprob: -11.000997543334961
    6. '	n' → logprob: -13.000997543334961
    7. ' for' → logprob: -13.125997543334961
    8. 'for' → logprob: -13.125997543334961
    9. 'string' → logprob: -13.625997543334961
    10. '#' → logprob: -14.000997543334961

Token 435: ' vers' (ID: 3640)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7261849641799927
    2. 'à' → logprob: -1.2261849641799927
    3. 'for' → logprob: -1.7261849641799927
    4. ' for' → logprob: -3.476184844970703
    5. 'pour' → logprob: -6.351184844970703
    6. 'n' → logprob: -6.601184844970703
    7. 'to' → logprob: -6.601184844970703
    8. 'i' → logprob: -6.851184844970703
    9. ' to' → logprob: -6.976184844970703
    10. 'vers' → logprob: -7.226184844970703

Token 436: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.00031305922311730683
    2. ' la' → logprob: -8.125312805175781
    3. '_la' → logprob: -11.375312805175781
    4. 'dro' → logprob: -13.250312805175781
    5. 'le' → logprob: -13.750312805175781
    6. ' ' → logprob: -14.000312805175781
    7. 'La' → logprob: -14.375312805175781
    8. '-la' → logprob: -15.625312805175781
    9. '#' → logprob: -15.750312805175781
    10. '0' → logprob: -16.25031280517578

Token 437: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -7.135819760151207e-05
    2. ' droite' → logprob: -9.75007152557373
    3. 'Dro' → logprob: -11.87507152557373
    4. 'd' → logprob: -13.50007152557373
    5. 'right' → logprob: -13.50007152557373
    6. '-dro' → logprob: -13.87507152557373
    7. '```' → logprob: -13.87507152557373
    8. '#' → logprob: -14.12507152557373
    9. '
' → logprob: -15.50007152557373
    10. 'dre' → logprob: -16.375070571899414

Token 438: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006432149093598127
    2. ' for' → logprob: -7.375643253326416
    3. 'i' → logprob: -11.125642776489258
    4. '
' → logprob: -13.375642776489258
    5. 'n' → logprob: -15.750642776489258
    6. '```' → logprob: -17.125642776489258
    7. ')' → logprob: -17.500642776489258
    8. 'f' → logprob: -17.750642776489258
    9. '	for' → logprob: -17.875642776489258
    10. '0' → logprob: -18.375642776489258

Token 439: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0445127372804563e-05
    2. ' for' → logprob: -11.50001049041748
    3. 'i' → logprob: -15.50001049041748
    4. '
' → logprob: -20.250009536743164
    5. '```' → logprob: -20.875009536743164
    6. '	for' → logprob: -21.125009536743164
    7. ')' → logprob: -22.625009536743164
    8. '0' → logprob: -23.000009536743164
    9. 'n' → logprob: -24.000009536743164
    10. 'from' → logprob: -24.125009536743164

Token 440: ' '' (ID: 461)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9361264946837764e-07
    2. ' for' → logprob: -15.75
    3. 'i' → logprob: -19.0
    4. '
' → logprob: -22.25
    5. '	for' → logprob: -23.5
    6. 'from' → logprob: -23.75
    7. 'fo' → logprob: -24.5
    8. '```' → logprob: -24.75
    9. '0' → logprob: -25.125
    10. 'For' → logprob: -25.75

Token 441: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01245561521500349
    2. 'for' → logprob: -4.512455463409424
    3. ' i' → logprob: -6.637455463409424
    4. ' for' → logprob: -9.262455940246582
    5. '_i' → logprob: -15.137455940246582
    6. ')' → logprob: -15.387455940246582
    7. 'range' → logprob: -15.637455940246582
    8. '	i' → logprob: -15.762455940246582
    9. '_' → logprob: -16.262454986572266
    10. 'keta' → logprob: -16.512454986572266

Token 442: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3037470579147339
    2. 'in' → logprob: -1.6787470579147339
    3. ''' → logprob: -3.0537471771240234
    4. ')' → logprob: -4.678747177124023
    5. '+' → logprob: -5.428747177124023
    6. 'for' → logprob: -6.053747177124023
    7. 'range' → logprob: -6.303747177124023
    8. ',' → logprob: -6.553747177124023
    9. 'n' → logprob: -6.928747177124023
    10. ']' → logprob: -6.928747177124023

Token 443: ' :' (ID: 712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7377656102180481
    2. '=' → logprob: -0.8627656102180481
    3. ' =' → logprob: -2.4877655506134033
    4. 'in' → logprob: -4.737765789031982
    5. ',' → logprob: -5.112765789031982
    6. ' ' → logprob: -6.737765789031982
    7. 'for' → logprob: -8.362765312194824
    8. ')' → logprob: -8.737765312194824
    9. ' for' → logprob: -8.862765312194824
    10. 'n' → logprob: -9.987765312194824

Token 444: ' correspond' (ID: 11095)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017721280455589294
    2. ' ' → logprob: -4.392721176147461
    3. ' range' → logprob: -6.392721176147461
    4. ' i' → logprob: -6.767721176147461
    5. ' for' → logprob: -7.142721176147461
    6. 'i' → logprob: -7.267721176147461
    7. 'for' → logprob: -7.642721176147461
    8. 'range' → logprob: -7.892721176147461
    9. ' in' → logprob: -10.642721176147461
    10. '1' → logprob: -12.017721176147461

Token 445: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5444668531417847
    2. ' to' → logprob: -1.0444668531417847
    3. 'to' → logprob: -3.919466972351074
    4. ' in' → logprob: -4.044466972351074
    5. ' a' → logprob: -4.669466972351074
    6. ' i' → logprob: -5.044466972351074
    7. ' au' → logprob: -5.794466972351074
    8. ' ' → logprob: -6.294466972351074
    9. 'à' → logprob: -6.419466972351074
    10. 'i' → logprob: -6.544466972351074

Token 446: ' chiffre' (ID: 107420)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14867982268333435
    2. 'i' → logprob: -2.023679733276367
    3. ' i' → logprob: -5.648679733276367
    4. ' ' → logprob: -6.898679733276367
    5. ' current' → logprob: -7.273679733276367
    6. 'current' → logprob: -8.023679733276367
    7. 'indice' → logprob: -9.148679733276367
    8. ' range' → logprob: -9.523679733276367
    9. 'range' → logprob: -9.773679733276367
    10. 'digit' → logprob: -10.148679733276367

Token 447: ' sur' (ID: 1512)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03836677595973015
    2. 'in' → logprob: -3.2883667945861816
    3. ' ' → logprob: -9.413366317749023
    4. '+' → logprob: -9.913366317749023
    5. '=' → logprob: -10.038366317749023
    6. 'for' → logprob: -10.288366317749023
    7. ' =' → logprob: -10.788366317749023
    8. ' i' → logprob: -11.038366317749023
    9. ' for' → logprob: -11.163366317749023
    10. ',' → logprob: -11.288366317749023

Token 448: ' lequel' (ID: 55154)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6330446004867554
    2. ' range' → logprob: -0.7580446004867554
    3. ' la' → logprob: -7.883044719696045
    4. ' ' → logprob: -11.258044242858887
    5. 'la' → logprob: -11.383044242858887
    6. '(range' → logprob: -11.508044242858887
    7. '	range' → logprob: -11.633044242858887
    8. 'i' → logprob: -12.508044242858887
    9. 'l' → logprob: -12.758044242858887
    10. 'rang' → logprob: -12.883044242858887

Token 449: ' on' (ID: 402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7823117971420288
    2. ' range' → logprob: -0.7823117971420288
    3. 'range' → logprob: -2.9073119163513184
    4. 'i' → logprob: -3.5323119163513184
    5. ' la' → logprob: -6.782311916351318
    6. ' in' → logprob: -9.53231143951416
    7. ' ' → logprob: -9.78231143951416
    8. ' which' → logprob: -9.90731143951416
    9. ')' → logprob: -10.53231143951416
    10. '   ' → logprob: -10.78231143951416

Token 450: ' se' (ID: 458)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4366849958896637
    2. ' range' → logprob: -1.0616849660873413
    3. ' i' → logprob: -6.061685085296631
    4. ' va' → logprob: -6.311685085296631
    5. 'i' → logprob: -7.311685085296631
    6. 'ranges' → logprob: -7.311685085296631
    7. ' iter' → logprob: -8.061684608459473
    8. 'va' → logprob: -8.436684608459473
    9. ' traite' → logprob: -8.436684608459473
    10. ' for' → logprob: -8.686684608459473

Token 451: ' trouve' (ID: 30913)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.06440708041191101
    2. ' trouve' → logprob: -4.064406871795654
    3. 't' → logprob: -4.564406871795654
    4. 'position' → logprob: -4.689406871795654
    5. 'base' → logprob: -6.064406871795654
    6. '_place' → logprob: -6.439406871795654
    7. 'found' → logprob: -6.689406871795654
    8. 'app' → logprob: -6.689406871795654
    9. 'lace' → logprob: -6.689406871795654
    10. 'plac' → logprob: -6.939406871795654

Token 452: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19171389937400818
    2. ' for' → logprob: -2.441713809967041
    3. ' in' → logprob: -2.566713809967041
    4. 'in' → logprob: -4.816713809967041
    5. 'range' → logprob: -6.816713809967041
    6. '
' → logprob: -7.441713809967041
    7. ',' → logprob: -8.1917142868042
    8. 'i' → logprob: -8.5667142868042
    9. ')' → logprob: -9.0667142868042
    10. '=' → logprob: -9.8167142868042

Token 453: 'de' (ID: 613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3552054166793823
    2. ')' → logprob: -1.4802054166793823
    3. ' i' → logprob: -3.355205535888672
    4. '0' → logprob: -4.355205535888672
    5. ')i' → logprob: -4.480205535888672
    6. ' )' → logprob: -4.855205535888672
    7. ' range' → logprob: -5.730205535888672
    8. 'range' → logprob: -7.730205535888672
    9. ' ' → logprob: -8.480205535888672
    10. ' for' → logprob: -9.355205535888672

Token 454: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1633135825395584
    2. 'range' → logprob: -1.913313627243042
    3. '0' → logprob: -5.788313388824463
    4. ' ' → logprob: -10.913313865661621
    5. '1' → logprob: -14.038313865661621
    6. ')' → logprob: -14.413313865661621
    7. '(range' → logprob: -14.913313865661621
    8. ' xrange' → logprob: -15.038313865661621
    9. ' i' → logprob: -15.288313865661621
    10. '	range' → logprob: -15.413313865661621

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054255127906799316
    2. 'range' → logprob: -3.0542550086975098
    3. ' range' → logprob: -5.17925500869751
    4. ' ' → logprob: -10.929255485534668
    5. 'i' → logprob: -14.054255485534668
    6. '1' → logprob: -14.554255485534668
    7. '	range' → logprob: -16.42925453186035
    8. '(range' → logprob: -16.67925453186035
    9. ' i' → logprob: -17.05425453186035
    10. ')' → logprob: -17.05425453186035

Token 456: ' jusqu' (ID: 21961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6677955389022827
    2. ' à' → logprob: -1.1677955389022827
    3. ',' → logprob: -3.1677956581115723
    4. ' jusqu' → logprob: -3.6677956581115723
    5. ' to' → logprob: -4.167795658111572
    6. 'for' → logprob: -4.542795658111572
    7. 'to' → logprob: -4.667795658111572
    8. 'import' → logprob: -4.667795658111572
    9. ' )' → logprob: -4.917795658111572
    10. ' in' → logprob: -4.917795658111572

Token 457: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.05158507078886032
    2. '’à' → logprob: -4.1765851974487305
    3. 'à' → logprob: -4.3015851974487305
    4. ' à' → logprob: -4.8015851974487305
    5. 'a' → logprob: -5.3015851974487305
    6. ''au' → logprob: -5.4265851974487305
    7. 'au' → logprob: -6.1765851974487305
    8. ''a' → logprob: -7.8015851974487305
    9. ' a' → logprob: -8.42658519744873
    10. 'i' → logprob: -8.55158519744873

Token 458: ' k' (ID: 372)
  Prédit: 'keta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.16772928833961487
    2. ' k' → logprob: -1.9177292585372925
    3. 'k' → logprob: -4.917729377746582
    4. 'kta' → logprob: -10.167729377746582
    5. '	k' → logprob: -10.417729377746582
    6. ' ' → logprob: -10.917729377746582
    7. '```' → logprob: -10.917729377746582
    8. 'jeta' → logprob: -12.167729377746582
    9. 'ket' → logprob: -12.605229377746582
    10. ' kapa' → logprob: -12.730229377746582

Token 459: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -2.975612187583465e-05
    2. 'e' → logprob: -10.500029563903809
    3. 'ata' → logprob: -14.500029563903809
    4. 'a' → logprob: -14.875029563903809
    5. 'ETA' → logprob: -14.875029563903809
    6. '#' → logprob: -15.250029563903809
    7. 'ета' → logprob: -15.875029563903809
    8. ' eta' → logprob: -16.125030517578125
    9. 'éta' → logprob: -16.125030517578125
    10. '   ' → logprob: -16.750030517578125

Token 460: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004078401252627373
    2. ')' → logprob: -6.504078388214111
    3. '+' → logprob: -6.504078388214111
    4. '):
' → logprob: -7.004078388214111
    5. ' ):' → logprob: -9.50407886505127
    6. ']:' → logprob: -10.25407886505127
    7. ':' → logprob: -11.75407886505127
    8. '):

' → logprob: -11.87907886505127
    9. ']):' → logprob: -11.87907886505127
    10. '):
' → logprob: -12.00407886505127

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019463682547211647
    2. ')' → logprob: -6.251946449279785
    3. '-' → logprob: -11.626946449279785
    4. ' ' → logprob: -11.751946449279785
    5. '```' → logprob: -14.376946449279785
    6. ')-' → logprob: -16.62694549560547
    7. ')`' → logprob: -16.87694549560547
    8. '),' → logprob: -16.87694549560547
    9. '):' → logprob: -17.00194549560547
    10. ' )' → logprob: -17.12694549560547

Token 462: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04456407204270363
    2. ')' → logprob: -3.5445640087127686
    3. '):
' → logprob: -4.794564247131348
    4. 'for' → logprob: -6.044564247131348
    5. ']:' → logprob: -6.294564247131348
    6. ':' → logprob: -7.294564247131348
    7. ']' → logprob: -7.419564247131348
    8. '+' → logprob: -8.169564247131348
    9. 'in' → logprob: -8.919564247131348
    10. ' ):' → logprob: -8.919564247131348

Token 463: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39998555183410645
    2. ' i' → logprob: -1.7749855518341064
    3. ' )' → logprob: -2.0249855518341064
    4. 'i' → logprob: -4.274985313415527
    5. '):' → logprob: -5.274985313415527
    6. ' for' → logprob: -5.649985313415527
    7. ' ):' → logprob: -6.024985313415527
    8. 'for' → logprob: -6.649985313415527
    9. ')i' → logprob: -8.149985313415527
    10. ' in' → logprob: -8.274985313415527

Token 464: ' range' (ID: 3352)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5099434852600098
    2. ' k' → logprob: -1.7599434852600098
    3. 'i' → logprob: -2.3849434852600098
    4. 'k' → logprob: -2.3849434852600098
    5. 'keta' → logprob: -3.3849434852600098
    6. 'range' → logprob: -5.25994348526001
    7. ' range' → logprob: -5.75994348526001
    8. ')' → logprob: -8.384943008422852
    9. 'n' → logprob: -9.134943008422852
    10. ' ' → logprob: -9.759943008422852

Token 465: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0006342819542624056
    2. '(' → logprob: -7.37563419342041
    3. '(
' → logprob: -13.00063419342041
    4. '(n' → logprob: -13.25063419342041
    5. '(len' → logprob: -13.87563419342041
    6. ' (' → logprob: -13.87563419342041
    7. ')' → logprob: -14.25063419342041
    8. '(i' → logprob: -14.62563419342041
    9. ')(' → logprob: -15.00063419342041
    10. ' k' → logprob: -16.125635147094727

Token 466: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -9.984787902794778e-05
    2. 'ata' → logprob: -10.375100135803223
    3. ')' → logprob: -10.750100135803223
    4. '_eta' → logprob: -11.500100135803223
    5. '))' → logprob: -11.750100135803223
    6. 'ETA' → logprob: -11.875100135803223
    7. '(' → logprob: -12.000100135803223
    8. ' eta' → logprob: -12.500100135803223
    9. 'ета' → logprob: -12.750100135803223
    10. 'e' → logprob: -13.375100135803223

Token 467: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21044881641864777
    2. ')' → logprob: -1.7104488611221313
    3. ')):' → logprob: -4.835448741912842
    4. '))' → logprob: -7.335448741912842
    5. ' ):' → logprob: -8.71044921875
    6. '):
' → logprob: -8.96044921875
    7. ':' → logprob: -10.83544921875
    8. '+' → logprob: -10.83544921875
    9. ' )' → logprob: -11.33544921875
    10. ')):
' → logprob: -11.46044921875

Token 468: ' excl' (ID: 57282)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.050467558205127716
    2. ')' → logprob: -3.1754674911499023
    3. ':' → logprob: -5.050467491149902
    4. '):
' → logprob: -7.175467491149902
    5. ' ):' → logprob: -8.675467491149902
    6. 'for' → logprob: -9.925467491149902
    7. ' )' → logprob: -11.425467491149902
    8. 'in' → logprob: -12.300467491149902
    9. ' for' → logprob: -12.300467491149902
    10. ',' → logprob: -12.675467491149902

Token 469: 'ut' (ID: 339)
  Prédit: '=k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=k' → logprob: -0.37986433506011963
    2. '=' → logprob: -1.2548643350601196
    3. 'ect' → logprob: -4.37986421585083
    4. '(k' → logprob: -4.75486421585083
    5. 'ent' → logprob: -6.37986421585083
    6. 'range' → logprob: -6.50486421585083
    7. 'e' → logprob: -6.87986421585083
    8. 't' → logprob: -6.87986421585083
    9. ')' → logprob: -7.50486421585083
    10. ' k' → logprob: -7.75486421585083

Token 470: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.01654641330242157
    2. 'k' → logprob: -4.891546249389648
    3. 'keta' → logprob: -4.891546249389648
    4. '(' → logprob: -7.016546249389648
    5. ')' → logprob: -7.766546249389648
    6. ' k' → logprob: -10.641546249389648
    7. 'kta' → logprob: -11.391546249389648
    8. '(n' → logprob: -11.766546249389648
    9. '	k' → logprob: -11.891546249389648
    10. ',k' → logprob: -12.141546249389648

Token 471: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -0.09610368311405182
    2. ')' → logprob: -2.4711036682128906
    3. '(' → logprob: -5.221103668212891
    4. '))' → logprob: -7.221103668212891
    5. 'keta' → logprob: -8.84610366821289
    6. 'etra' → logprob: -9.09610366821289
    7. 'ata' → logprob: -9.34610366821289
    8. 'ETA' → logprob: -9.34610366821289
    9. ')`' → logprob: -9.47110366821289
    10. 'et' → logprob: -9.84610366821289

Token 472: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0020539083052426577
    2. ')' → logprob: -6.252053737640381
    3. '):
' → logprob: -9.127054214477539
    4. ':' → logprob: -12.002054214477539
    5. ' ):' → logprob: -12.377054214477539
    6. '():' → logprob: -13.252054214477539
    7. ']:' → logprob: -14.502054214477539
    8. ')):' → logprob: -14.502054214477539
    9. ')：' → logprob: -14.502054214477539
    10. '#' → logprob: -14.877054214477539

Token 473: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011806100606918335
    2. ' for' → logprob: -4.511806011199951
    3. ':' → logprob: -7.636806011199951
    4. 'i' → logprob: -8.51180648803711
    5. 'n' → logprob: -10.13680648803711
    6. '
' → logprob: -11.01180648803711
    7. ':
' → logprob: -12.38680648803711
    8. ' 
' → logprob: -12.63680648803711
    9. '```' → logprob: -12.88680648803711
    10. '[i' → logprob: -13.38680648803711

Token 474: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0016447148518636823
    2. ' ' → logprob: -6.876644611358643
    3. 'i' → logprob: -7.501644611358643
    4. ' ' → logprob: -9.8766450881958
    5. '  ' → logprob: -12.7516450881958
    6. ' ‌' → logprob: -13.6266450881958
    7. ' ' → logprob: -13.7516450881958
    8. '	i' → logprob: -13.7516450881958
    9. ' in' → logprob: -14.6266450881958
    10. ' _' → logprob: -14.6266450881958

Token 475: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005936859175562859
    2. 'in' → logprob: -5.130936622619629
    3. ' ' → logprob: -11.880936622619629
    4. '	in' → logprob: -14.505936622619629
    5. '1' → logprob: -16.005937576293945
    6. ' ' → logprob: -16.130937576293945
    7. ' i' → logprob: -16.255937576293945
    8. ',' → logprob: -16.255937576293945
    9. 'In' → logprob: -16.755937576293945
    10. 's' → logprob: -16.880937576293945

Token 476: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2014182209968567
    2. 'range' → logprob: -1.701418161392212
    3. '(range' → logprob: -12.826417922973633
    4. '0' → logprob: -14.076417922973633
    5. ' ' → logprob: -14.701417922973633
    6. '(' → logprob: -14.826417922973633
    7. ' in' → logprob: -14.826417922973633
    8. 'in' → logprob: -16.326417922973633
    9. '	range' → logprob: -16.451417922973633
    10. ')' → logprob: -17.576417922973633

Token 477: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0015030752401798964
    2. '(' → logprob: -6.501502990722656
    3. ' (' → logprob: -15.251502990722656
    4. '(
' → logprob: -15.626502990722656
    5. '(i' → logprob: -16.001502990722656
    6. '(n' → logprob: -16.251502990722656
    7. '(len' → logprob: -16.501502990722656
    8. 'k' → logprob: -17.876502990722656
    9. '1' → logprob: -18.751502990722656
    10. '((' → logprob: -19.001502990722656

Token 478: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -2.45848218582978e-06
    2. ' eta' → logprob: -13.75000286102295
    3. 'ata' → logprob: -14.12500286102295
    4. 'ETA' → logprob: -15.00000286102295
    5. 'ета' → logprob: -16.500001907348633
    6. '(' → logprob: -17.125001907348633
    7. ' ' → logprob: -17.625001907348633
    8. '_eta' → logprob: -17.750001907348633
    9. 'keta' → logprob: -17.750001907348633
    10. '#' → logprob: -17.875001907348633

Token 479: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00025966696557588875
    2. '):
' → logprob: -8.625259399414062
    3. ' ):' → logprob: -9.500259399414062
    4. ')' → logprob: -12.875259399414062
    5. ':' → logprob: -13.875259399414062
    6. '):
' → logprob: -14.000259399414062
    7. '+' → logprob: -14.500259399414062
    8. '():' → logprob: -16.125259399414062
    9. '):

' → logprob: -16.875259399414062
    10. ')：' → logprob: -17.000259399414062

Token 480: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3638407289981842
    2. ' max' → logprob: -2.1138408184051514
    3. '   ' → logprob: -2.3638408184051514
    4. ' limit' → logprob: -3.8638408184051514
    5. 'for' → logprob: -3.9888408184051514
    6. 'max' → logprob: -4.488840579986572
    7. ' bound' → logprob: -4.488840579986572
    8. ' ' → logprob: -4.613840579986572
    9. ' ' → logprob: -5.363840579986572
    10. 'limit' → logprob: -5.863840579986572

Token 481: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19141998887062073
    2. ' for' → logprob: -2.566420078277588
    3. 'max' → logprob: -3.191420078277588
    4. 'digit' → logprob: -3.691420078277588
    5. 'limit' → logprob: -3.941420078277588
    6. 'lim' → logprob: -5.941420078277588
    7. ' max' → logprob: -6.191420078277588
    8. ' digit' → logprob: -6.566420078277588
    9. '   ' → logprob: -6.816420078277588
    10. 'd' → logprob: -6.941420078277588

Token 482: ' '' (ID: 461)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7601930499076843
    2. 'limit' → logprob: -1.260193109512329
    3. 'lim' → logprob: -2.135193109512329
    4. 'for' → logprob: -2.885193109512329
    5. 'upper' → logprob: -3.635193109512329
    6. 'up' → logprob: -3.760193109512329
    7. 'digit' → logprob: -4.51019287109375
    8. 'ub' → logprob: -6.01019287109375
    9. 'num' → logprob: -6.38519287109375
    10. 'm' → logprob: -6.38519287109375

Token 483: 'j' (ID: 73)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9631797671318054
    2. 'j' → logprob: -1.5881798267364502
    3. 'digit' → logprob: -1.5881798267364502
    4. 'for' → logprob: -2.96317982673645
    5. 'x' → logprob: -3.46317982673645
    6. 'bound' → logprob: -3.58817982673645
    7. 'c' → logprob: -4.088179588317871
    8. 'limit' → logprob: -4.338179588317871
    9. 'n' → logprob: -4.588179588317871
    10. 'num' → logprob: -4.713179588317871

Token 484: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024931374937295914
    2. ')' → logprob: -6.627492904663086
    3. ' for' → logprob: -7.377492904663086
    4. 'for' → logprob: -8.127492904663086
    5. 'in' → logprob: -8.502492904663086
    6. ' ' → logprob: -10.752492904663086
    7. ' )' → logprob: -11.627492904663086
    8. ',' → logprob: -12.252492904663086
    9. '+' → logprob: -12.627492904663086
    10. '   ' → logprob: -13.752492904663086

Token 485: ' :' (ID: 712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025097651407122612
    2. 'in' → logprob: -3.775097608566284
    3. 'for' → logprob: -7.150097846984863
    4. ' for' → logprob: -7.400097846984863
    5. ' ' → logprob: -9.025097846984863
    6. ')' → logprob: -9.150097846984863
    7. '   ' → logprob: -9.525097846984863
    8. ' =' → logprob: -9.900097846984863
    9. '=' → logprob: -10.150097846984863
    10. ',' → logprob: -10.275097846984863

Token 486: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3721350133419037
    2. 'range' → logprob: -1.372135043144226
    3. ' range' → logprob: -3.4971349239349365
    4. ' for' → logprob: -3.6221349239349365
    5. ' in' → logprob: -9.247135162353516
    6. '0' → logprob: -10.247135162353516
    7. 'in' → logprob: -10.997135162353516
    8. '   ' → logprob: -11.497135162353516
    9. ' ' → logprob: -12.872135162353516
    10. 'j' → logprob: -14.122135162353516

Token 487: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19352060556411743
    2. '+' → logprob: -2.4435205459594727
    3. 'in' → logprob: -3.8185205459594727
    4. 'for' → logprob: -3.9435205459594727
    5. ' de' → logprob: -4.068520545959473
    6. ' for' → logprob: -4.443520545959473
    7. ')' → logprob: -4.943520545959473
    8. '   ' → logprob: -6.068520545959473
    9. ' +' → logprob: -6.068520545959473
    10. ' en' → logprob: -6.568520545959473

Token 488: ' chiffres' (ID: 105565)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1459304839372635
    2. ' range' → logprob: -2.145930528640747
    3. 'non' → logprob: -4.770930290222168
    4. ' non' → logprob: -5.520930290222168
    5. 'for' → logprob: -6.270930290222168
    6. 'p' → logprob: -6.520930290222168
    7. ' p' → logprob: -7.270930290222168
    8. 'dp' → logprob: -8.020930290222168
    9. 'n' → logprob: -8.145930290222168
    10. ' for' → logprob: -8.270930290222168

Token 489: ' non' (ID: 2893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008652388118207455
    2. ' non' → logprob: -5.258652210235596
    3. ' en' → logprob: -6.633652210235596
    4. 'in' → logprob: -7.008652210235596
    5. 'non' → logprob: -7.633652210235596
    6. '_non' → logprob: -8.133652687072754
    7. 'for' → logprob: -9.133652687072754
    8. ' for' → logprob: -9.133652687072754
    9. ' ' → logprob: -9.383652687072754
    10. ')' → logprob: -10.758652687072754

Token 490: '-z' (ID: 16826)
  Prédit: '_zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.6581082940101624
    2. 'zero' → logprob: -1.9081082344055176
    3. ' zéro' → logprob: -2.1581082344055176
    4. '_j' → logprob: -2.7831082344055176
    5. ' zero' → logprob: -3.0331082344055176
    6. '0' → logprob: -3.1581082344055176
    7. '   ' → logprob: -4.033108234405518
    8. '_' → logprob: -4.033108234405518
    9. '_z' → logprob: -4.408108234405518
    10. ' zeros' → logprob: -5.158108234405518

Token 491: 'éro' (ID: 28155)
  Prédit: 'éros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.04748561605811119
    2. 'eros' → logprob: -3.172485589981079
    3. 'éro' → logprob: -5.797485828399658
    4. 'ero' → logprob: -6.922485828399658
    5. '{' → logprob: -9.6724853515625
    6. '_' → logprob: -9.7974853515625
    7. 'zeros' → logprob: -10.2974853515625
    8. '#' → logprob: -10.5474853515625
    9. '`' → logprob: -10.6724853515625
    10. '0' → logprob: -10.6724853515625

Token 492: ' utilisés' (ID: 94258)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.321317583322525
    2. 'in' → logprob: -1.9463175535202026
    3. 'for' → logprob: -2.071317672729492
    4. ' for' → logprob: -5.196317672729492
    5. ' ' → logprob: -9.196317672729492
    6. 'en' → logprob: -9.571317672729492
    7. 'pour' → logprob: -9.571317672729492
    8. ' en' → logprob: -9.821317672729492
    9. ')' → logprob: -9.946317672729492
    10. '   ' → logprob: -10.446317672729492

Token 493: ' jusqu' (ID: 21961)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25215211510658264
    2. 'for' → logprob: -1.8771520853042603
    3. ' for' → logprob: -2.75215220451355
    4. 'in' → logprob: -5.502151966094971
    5. '   ' → logprob: -6.252151966094971
    6. ' en' → logprob: -11.377152442932129
    7. ' ' → logprob: -11.377152442932129
    8. ',' → logprob: -11.752152442932129
    9. ' range' → logprob: -11.877152442932129
    10. 'range' → logprob: -12.127152442932129

Token 494: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.10770678520202637
    2. 'à' → logprob: -3.3577067852020264
    3. '+' → logprob: -3.9827067852020264
    4. '’à' → logprob: -3.9827067852020264
    5. ' à' → logprob: -4.7327070236206055
    6. '=' → logprob: -5.3577070236206055
    7. ''ici' → logprob: -5.7327070236206055
    8. 'i' → logprob: -5.8577070236206055
    9. '(i' → logprob: -6.3577070236206055
    10. 'j' → logprob: -6.4827070236206055

Token 495: ' présent' (ID: 24129)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007046760059893131
    2. ' i' → logprob: -5.382046699523926
    3. 'j' → logprob: -6.257046699523926
    4. 'range' → logprob: -8.007046699523926
    5. 'now' → logprob: -9.382046699523926
    6. ' j' → logprob: -10.132046699523926
    7. ' ' → logprob: -11.257046699523926
    8. ' range' → logprob: -11.757046699523926
    9. '   ' → logprob: -11.757046699523926
    10. ' maintenant' → logprob: -12.007046699523926

Token 496: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7985203862190247
    2. ' for' → logprob: -1.0485203266143799
    3. 'for' → logprob: -1.6735203266143799
    4. ' in' → logprob: -4.548520565032959
    5. ':' → logprob: -7.923520565032959
    6. '	for' → logprob: -7.923520565032959
    7. 'in' → logprob: -8.0485200881958
    8. ' ' → logprob: -8.5485200881958
    9. '  ' → logprob: -9.9235200881958
    10. ',' → logprob: -10.0485200881958

Token 497: 'de' (ID: 613)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9670988917350769
    2. ' j' → logprob: -1.8420989513397217
    3. 'for' → logprob: -1.9670989513397217
    4. 'range' → logprob: -2.2170989513397217
    5. ' range' → logprob: -2.2170989513397217
    6. ' for' → logprob: -3.0920989513397217
    7. '   ' → logprob: -3.5920989513397217
    8. 'k' → logprob: -3.9670989513397217
    9. ')' → logprob: -5.467098712921143
    10. ' k' → logprob: -6.342098712921143

Token 498: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06048358604311943
    2. 'j' → logprob: -3.685483694076538
    3. ' j' → logprob: -4.185483455657959
    4. 'k' → logprob: -4.935483455657959
    5. 'keta' → logprob: -5.560483455657959
    6. ' ' → logprob: -5.685483455657959
    7. ' k' → logprob: -6.310483455657959
    8. ' p' → logprob: -7.060483455657959
    9. 'p' → logprob: -7.310483455657959
    10. '   ' → logprob: -8.810483932495117

Token 499: '0' (ID: 15)
  Prédit: 'keta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.4150807559490204
    2. '0' → logprob: -1.1650807857513428
    3. 'k' → logprob: -4.165080547332764
    4. 'p' → logprob: -4.665080547332764
    5. 'range' → logprob: -6.415080547332764
    6. 'kta' → logprob: -8.165081024169922
    7. 'j' → logprob: -8.290081024169922
    8. ' p' → logprob: -9.290081024169922
    9. 'i' → logprob: -9.415081024169922
    10. ' ' → logprob: -9.415081024169922

Token 500: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18798306584358215
    2. ' ,' → logprob: -2.3129830360412598
    3. ' à' → logprob: -3.5629830360412598
    4. ' in' → logprob: -4.06298303604126
    5. ' for' → logprob: -5.68798303604126
    6. ' jusqu' → logprob: -5.81298303604126
    7. ',k' → logprob: -5.81298303604126
    8. 'for' → logprob: -5.93798303604126
    9. ',j' → logprob: -5.93798303604126
    10. ')' → logprob: -6.06298303604126

Token 501: ' i' (ID: 575)
  Prédit: 'keta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.07952623814344406
    2. 'k' → logprob: -3.57952618598938
    3. ' k' → logprob: -3.82952618598938
    4. ' i' → logprob: -4.579526424407959
    5. ' j' → logprob: -5.079526424407959
    6. 'i' → logprob: -5.454526424407959
    7. ' p' → logprob: -5.954526424407959
    8. 'j' → logprob: -6.829526424407959
    9. 'p' → logprob: -7.079526424407959
    10. 'jeta' → logprob: -7.829526424407959

Token 502: ' inclus' (ID: 11891)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026341866701841354
    2. ' +' → logprob: -3.6513419151306152
    3. '):
' → logprob: -11.276341438293457
    4. '   ' → logprob: -11.401341438293457
    5. ')+' → logprob: -11.901341438293457
    6. '):' → logprob: -11.901341438293457
    7. ')' → logprob: -13.151341438293457
    8. '+
' → logprob: -14.276341438293457
    9. '()+' → logprob: -14.526341438293457
    10. ' plus' → logprob: -15.526341438293457

Token 503: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009372343309223652
    2. ' +' → logprob: -4.759372234344482
    3. '):
' → logprob: -8.13437271118164
    4. '   ' → logprob: -8.25937271118164
    5. '):' → logprob: -9.13437271118164
    6. 'for' → logprob: -9.88437271118164
    7. ')' → logprob: -12.13437271118164
    8. ',' → logprob: -12.38437271118164
    9. '+i' → logprob: -12.38437271118164
    10. ' for' → logprob: -12.50937271118164

Token 504: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39711636304855347
    2. '   ' → logprob: -1.3971164226531982
    3. 'for' → logprob: -2.5221164226531982
    4. '	for' → logprob: -9.022116661071777
    5. ' ' → logprob: -11.647116661071777
    6. ' in' → logprob: -12.772116661071777
    7. ':' → logprob: -12.772116661071777
    8. '  ' → logprob: -12.897116661071777
    9. '       ' → logprob: -13.272116661071777
    10. '    ' → logprob: -13.522116661071777

Token 505: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4686006009578705
    2. ' for' → logprob: -1.3436006307601929
    3. '   ' → logprob: -2.2186005115509033
    4. ' range' → logprob: -5.968600749969482
    5. 'range' → logprob: -6.343600749969482
    6. '	for' → logprob: -9.718600273132324
    7. ' ' → logprob: -10.093600273132324
    8. '       ' → logprob: -11.218600273132324
    9. '  ' → logprob: -11.718600273132324
    10. ' in' → logprob: -11.968600273132324

Token 506: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.575955331325531
    2. ' j' → logprob: -0.825955331325531
    3. '   ' → logprob: -11.575955390930176
    4. ' ' → logprob: -13.325955390930176
    5. '	j' → logprob: -13.575955390930176
    6. '_j' → logprob: -14.200955390930176
    7. '    ' → logprob: -14.825955390930176
    8. 'range' → logprob: -14.825955390930176
    9. ' ' → logprob: -15.075955390930176
    10. '(j' → logprob: -15.325955390930176

Token 507: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00462841521948576
    2. 'in' → logprob: -5.3796281814575195
    3. '+' → logprob: -11.87962818145752
    4. ' ' → logprob: -14.37962818145752
    5. ')' → logprob: -15.00462818145752
    6. '	in' → logprob: -16.379629135131836
    7. 'range' → logprob: -16.879629135131836
    8. '1' → logprob: -17.004629135131836
    9. '[' → logprob: -17.254629135131836
    10. '(' → logprob: -17.629629135131836

Token 508: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038043901324272156
    2. ' range' → logprob: -3.288043975830078
    3. '(range' → logprob: -13.913043975830078
    4. '   ' → logprob: -14.163043975830078
    5. ' ' → logprob: -14.663043975830078
    6. 'in' → logprob: -16.163043975830078
    7. '  ' → logprob: -16.538043975830078
    8. '	range' → logprob: -16.913043975830078
    9. '    ' → logprob: -17.163043975830078
    10. 'i' → logprob: -18.788043975830078

Token 509: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004914227407425642
    2. '(j' → logprob: -5.504914283752441
    3. '(' → logprob: -7.754914283752441
    4. '(k' → logprob: -8.129914283752441
    5. '(range' → logprob: -9.379914283752441
    6. 'range' → logprob: -11.004914283752441
    7. ' range' → logprob: -12.004914283752441
    8. ' (' → logprob: -12.754914283752441
    9. '((' → logprob: -14.129914283752441
    10. '(n' → logprob: -15.004914283752441

Token 510: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005236717872321606
    2. ' +' → logprob: -5.255236625671387
    3. '+
' → logprob: -13.630236625671387
    4. '   ' → logprob: -14.255236625671387
    5. ')+' → logprob: -14.755236625671387
    6. ' ' → logprob: -15.505236625671387
    7. ' +
' → logprob: -16.380237579345703
    8. ')' → logprob: -16.505237579345703
    9. '++' → logprob: -16.505237579345703
    10. '＋' → logprob: -16.630237579345703

Token 511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009791390039026737
    2. '2' → logprob: -4.634791374206543
    3. ' ' → logprob: -10.259791374206543
    4. '   ' → logprob: -15.134791374206543
    5. '
' → logprob: -16.75979232788086
    6. '(' → logprob: -18.38479232788086
    7. ')' → logprob: -18.50979232788086
    8. '+' → logprob: -19.00979232788086
    9. '```' → logprob: -19.00979232788086
    10. '  ' → logprob: -19.13479232788086

Token 512: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007400614558719099
    2. ' +' → logprob: -7.375740051269531
    3. '):' → logprob: -9.625740051269531
    4. '):
' → logprob: -10.125740051269531
    5. '()+' → logprob: -12.750740051269531
    6. '+
' → logprob: -13.750740051269531
    7. '   ' → logprob: -13.875740051269531
    8. ')+' → logprob: -13.875740051269531
    9. '{' → logprob: -14.750740051269531
    10. '1' → logprob: -15.625740051269531

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003180563682690263
    2. ' for' → logprob: -6.003180503845215
    3. '   ' → logprob: -8.128180503845215
    4. 'for' → logprob: -8.628180503845215
    5. '	' → logprob: -9.378180503845215
    6. ',' → logprob: -10.003180503845215
    7. ':' → logprob: -10.253180503845215
    8. '	   ' → logprob: -11.253180503845215
    9. '#' → logprob: -11.628180503845215
    10. '    ' → logprob: -11.753180503845215

Token 514: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.817064106464386
    2. ' for' → logprob: -1.4420640468597412
    3. '       ' → logprob: -1.6920640468597412
    4. 'for' → logprob: -2.192064046859741
    5. '		' → logprob: -4.56706428527832
    6. '	' → logprob: -5.06706428527832
    7. '	       ' → logprob: -5.94206428527832
    8. '   ' → logprob: -6.31706428527832
    9. '	   ' → logprob: -6.31706428527832
    10. ' ' → logprob: -6.56706428527832

Token 515: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.842555426876061e-06
    2. ' for' → logprob: -12.500004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '       ' → logprob: -17.0000057220459
    5. '	for' → logprob: -18.1250057220459
    6. ' ' → logprob: -18.7500057220459
    7. '           ' → logprob: -19.8750057220459
    8. '﻿' → logprob: -20.2500057220459
    9. '
' → logprob: -20.7500057220459
    10. 'if' → logprob: -21.5000057220459

Token 516: ' va' (ID: 3423)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5326858758926392
    2. 'for' → logprob: -0.9076858758926392
    3. ' in' → logprob: -5.53268575668335
    4. '   ' → logprob: -6.28268575668335
    5. '=' → logprob: -6.40768575668335
    6. ' =' → logprob: -7.03268575668335
    7. 's' → logprob: -8.032686233520508
    8. '	for' → logprob: -8.282686233520508
    9. 'in' → logprob: -8.907686233520508
    10. '       ' → logprob: -9.282686233520508

Token 517: ' essayer' (ID: 92713)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03851407393813133
    2. ' range' → logprob: -3.5385141372680664
    3. 'for' → logprob: -5.288514137268066
    4. ' ' → logprob: -6.538514137268066
    5. ' d' → logprob: -7.538514137268066
    6. '   ' → logprob: -8.038514137268066
    7. 'range' → logprob: -8.288514137268066
    8. ' _' → logprob: -8.538514137268066
    9. ' s' → logprob: -9.288514137268066
    10. '    ' → logprob: -9.413514137268066

Token 518: ' tous' (ID: 10688)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07835336029529572
    2. '   ' → logprob: -3.4533534049987793
    3. 'for' → logprob: -4.203353404998779
    4. '           ' → logprob: -4.578353404998779
    5. '       ' → logprob: -5.328353404998779
    6. '    ' → logprob: -5.453353404998779
    7. ' ' → logprob: -5.703353404998779
    8. ':' → logprob: -6.828353404998779
    9. ' range' → logprob: -7.203353404998779
    10. ' d' → logprob: -7.328353404998779

Token 519: ' les' (ID: 1341)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3198239207267761
    2. ' for' → logprob: -1.819823980331421
    3. 'd' → logprob: -3.694823980331421
    4. ' digits' → logprob: -3.944823980331421
    5. '   ' → logprob: -4.319823741912842
    6. ' digit' → logprob: -4.444823741912842
    7. ' possible' → logprob: -4.569823741912842
    8. 'for' → logprob: -5.069823741912842
    9. 'digits' → logprob: -5.694823741912842
    10. ' ' → logprob: -5.944823741912842

Token 520: ' chiffres' (ID: 105565)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12315128743648529
    2. 'digit' → logprob: -3.3731513023376465
    3. 'x' → logprob: -3.7481513023376465
    4. 'num' → logprob: -4.3731513023376465
    5. 'digits' → logprob: -4.3731513023376465
    6. 'possible' → logprob: -4.6231513023376465
    7. 'for' → logprob: -4.8731513023376465
    8. 'dig' → logprob: -4.9981513023376465
    9. 'next' → logprob: -6.2481513023376465
    10. 'c' → logprob: -6.4981513023376465

Token 521: ' possibles' (ID: 97753)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4744635224342346
    2. ' d' → logprob: -1.7244634628295898
    3. ' for' → logprob: -2.22446346282959
    4. 'd' → logprob: -2.97446346282959
    5. 'for' → logprob: -3.72446346282959
    6. '   ' → logprob: -6.09946346282959
    7. 'in' → logprob: -6.59946346282959
    8. ' ' → logprob: -6.84946346282959
    9. ' x' → logprob: -6.84946346282959
    10. ' from' → logprob: -6.97446346282959

Token 522: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39672231674194336
    2. 'for' → logprob: -1.6467223167419434
    3. ' d' → logprob: -2.8967223167419434
    4. ' in' → logprob: -2.8967223167419434
    5. 'd' → logprob: -4.271722316741943
    6. 'from' → logprob: -6.271722316741943
    7. ' from' → logprob: -6.396722316741943
    8. '       ' → logprob: -6.521722316741943
    9. '   ' → logprob: -6.646722316741943
    10. '           ' → logprob: -6.896722316741943

Token 523: 'de' (ID: 613)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2704956531524658
    2. ' d' → logprob: -2.270495653152466
    3. 'for' → logprob: -3.270495653152466
    4. ' for' → logprob: -3.520495653152466
    5. 'digit' → logprob: -4.145495414733887
    6. '0' → logprob: -4.520495414733887
    7. 'k' → logprob: -4.895495414733887
    8. 'num' → logprob: -4.895495414733887
    9. ' num' → logprob: -5.270495414733887
    10. ' digit' → logprob: -5.270495414733887

Token 524: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931896805763245
    2. ' ' → logprob: -0.6931896805763245
    3. ' range' → logprob: -11.06818962097168
    4. '   ' → logprob: -12.56818962097168
    5. 'range' → logprob: -12.56818962097168
    6. ')' → logprob: -12.81818962097168
    7. '9' → logprob: -12.94318962097168
    8. 'd' → logprob: -13.31818962097168
    9. ' ' → logprob: -13.56818962097168
    10. ' )' → logprob: -13.69318962097168

Token 525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021904718596488237
    2. ' ' → logprob: -6.127190589904785
    3. 'range' → logprob: -13.377190589904785
    4. ')' → logprob: -13.877190589904785
    5. ' range' → logprob: -13.877190589904785
    6. '9' → logprob: -15.002190589904785
    7. '1' → logprob: -15.377190589904785
    8. ',' → logprob: -15.502190589904785
    9. '   ' → logprob: -16.00218963623047
    10. '10' → logprob: -16.31468963623047

Token 526: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05393711104989052
    2. ' à' → logprob: -3.1789371967315674
    3. ' ,' → logprob: -4.678936958312988
    4. '9' → logprob: -7.303936958312988
    5. 'à' → logprob: -7.803936958312988
    6. '10' → logprob: -8.428936958312988
    7. ' ' → logprob: -9.928936958312988
    8. ' jusqu' → logprob: -10.053936958312988
    9. '   ' → logprob: -10.303936958312988
    10. '0' → logprob: -10.303936958312988

Token 527: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.026886986568570137
    2. ' ' → logprob: -3.6518869400024414
    3. ' n' → logprob: -8.651886940002441
    4. '(n' → logprob: -8.776886940002441
    5. ' (' → logprob: -8.901886940002441
    6. 'n' → logprob: -9.776886940002441
    7. '(' → logprob: -9.776886940002441
    8. '(
' → logprob: -13.526886940002441
    9. '10' → logprob: -13.526886940002441
    10. '```' → logprob: -14.026886940002441

Token 528: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.945094355614856e-05
    2. ' ' → logprob: -10.125069618225098
    3. '10' → logprob: -10.500069618225098
    4. 'n' → logprob: -14.125069618225098
    5. '(n' → logprob: -15.125069618225098
    6. '(' → logprob: -15.500069618225098
    7. '```' → logprob: -15.625069618225098
    8. ' n' → logprob: -15.750069618225098
    9. '   ' → logprob: -15.875069618225098
    10. '
' → logprob: -17.00006866455078

Token 529: ' inclus' (ID: 11891)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5631262063980103
    2. '):' → logprob: -1.1881262063980103
    3. ':' → logprob: -3.1881260871887207
    4. ')' → logprob: -3.3131260871887207
    5. ' ):
' → logprob: -4.688126087188721
    6. ' for' → logprob: -4.813126087188721
    7. '0' → logprob: -5.063126087188721
    8. 'for' → logprob: -5.188126087188721
    9. '9' → logprob: -5.313126087188721
    10. '       ' → logprob: -5.563126087188721

Token 530: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5200763940811157
    2. ' for' → logprob: -2.395076274871826
    3. '):' → logprob: -2.520076274871826
    4. ':' → logprob: -2.645076274871826
    5. '       ' → logprob: -3.395076274871826
    6. '9' → logprob: -3.645076274871826
    7. ')' → logprob: -3.770076274871826
    8. '0' → logprob: -3.770076274871826
    9. 'for' → logprob: -3.770076274871826
    10. ',' → logprob: -5.020076274871826

Token 531: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3171996772289276
    2. 'for' → logprob: -1.44219970703125
    3. '       ' → logprob: -3.69219970703125
    4. '   ' → logprob: -5.06719970703125
    5. ':' → logprob: -6.19219970703125
    6. '	for' → logprob: -7.44219970703125
    7. '           ' → logprob: -7.56719970703125
    8. ',' → logprob: -8.44219970703125
    9. ':
' → logprob: -8.44219970703125
    10. ' ' → logprob: -9.19219970703125

Token 532: ' cette' (ID: 7696)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.29172900319099426
    2. 'd' → logprob: -2.041728973388672
    3. ' digit' → logprob: -3.166728973388672
    4. ' c' → logprob: -4.041728973388672
    5. ' x' → logprob: -4.416728973388672
    6. ' num' → logprob: -4.541728973388672
    7. 'digit' → logprob: -5.541728973388672
    8. 'x' → logprob: -5.666728973388672
    9. ' k' → logprob: -5.666728973388672
    10. ' t' → logprob: -5.791728973388672

Token 533: ' position' (ID: 4010)
  Prédit: ' digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.41076356172561646
    2. 'digit' → logprob: -1.2857635021209717
    3. 'd' → logprob: -3.7857635021209717
    4. ' d' → logprob: -3.9107635021209717
    5. ' ' → logprob: -6.035763740539551
    6. ' c' → logprob: -6.035763740539551
    7. 'ch' → logprob: -6.160763740539551
    8. ' chiffre' → logprob: -6.535763740539551
    9. 'c' → logprob: -6.660763740539551
    10. ' num' → logprob: -6.660763740539551

Token 534: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20574243366718292
    2. 'for' → logprob: -1.7057424783706665
    3. '   ' → logprob: -5.830742359161377
    4. '	for' → logprob: -6.830742359161377
    5. '       ' → logprob: -9.330742835998535
    6. ' ' → logprob: -9.955742835998535
    7. ' ' → logprob: -10.455742835998535
    8. ':' → logprob: -10.580742835998535
    9. '  ' → logprob: -11.205742835998535
    10. '    ' → logprob: -11.330742835998535

Token 535: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35939615964889526
    2. 'for' → logprob: -1.60939621925354
    3. '       ' → logprob: -2.35939621925354
    4. '   ' → logprob: -5.609395980834961
    5. '           ' → logprob: -5.734395980834961
    6. '	for' → logprob: -8.984395980834961
    7. ' ' → logprob: -9.234395980834961
    8. '	' → logprob: -10.109395980834961
    9. ' ' → logprob: -10.109395980834961
    10. ':' → logprob: -10.609395980834961

Token 536: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10024365782737732
    2. ' for' → logprob: -2.35024356842041
    3. '       ' → logprob: -11.22524356842041
    4. '   ' → logprob: -11.35024356842041
    5. '	for' → logprob: -11.60024356842041
    6. ' ' → logprob: -14.47524356842041
    7. ' ' → logprob: -14.72524356842041
    8. 'range' → logprob: -14.85024356842041
    9. '    ' → logprob: -15.10024356842041
    10. '0' → logprob: -15.47524356842041

Token 537: ' k' (ID: 372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6056985855102539
    2. 'x' → logprob: -1.480698585510254
    3. 'digit' → logprob: -2.730698585510254
    4. 'dig' → logprob: -2.980698585510254
    5. 'num' → logprob: -3.605698585510254
    6. 'k' → logprob: -3.855698585510254
    7. 'c' → logprob: -4.105698585510254
    8. 't' → logprob: -4.355698585510254
    9. 'a' → logprob: -5.105698585510254
    10. 'l' → logprob: -5.480698585510254

Token 538: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009770373813807964
    2. 'in' → logprob: -4.634770393371582
    3. ' ' → logprob: -11.509770393371582
    4. ')' → logprob: -13.759770393371582
    5. 'k' → logprob: -14.384770393371582
    6. 'n' → logprob: -14.509770393371582
    7. 'range' → logprob: -14.634770393371582
    8. ',' → logprob: -15.009770393371582
    9. '0' → logprob: -15.634770393371582
    10. ' ' → logprob: -15.884770393371582

Token 539: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.575946033000946
    2. 'range' → logprob: -0.825946033000946
    3. '10' → logprob: -12.700945854187012
    4. '(range' → logprob: -12.950945854187012
    5. '	range' → logprob: -14.825945854187012
    6. ' ' → logprob: -15.075945854187012
    7. '9' → logprob: -15.950945854187012
    8. ')' → logprob: -15.950945854187012
    9. '0' → logprob: -16.075946807861328
    10. '[' → logprob: -16.825946807861328

Token 540: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008757318137213588
    2. '10' → logprob: -7.250875949859619
    3. '(n' → logprob: -9.500875473022461
    4. ' (' → logprob: -9.875875473022461
    5. '(k' → logprob: -10.875875473022461
    6. ' ' → logprob: -11.500875473022461
    7. '(
' → logprob: -12.250875473022461
    8. '((' → logprob: -12.625875473022461
    9. '0' → logprob: -13.500875473022461
    10. '(int' → logprob: -16.00087547302246

Token 541: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00029244067263789475
    2. '0' → logprob: -8.875292778015137
    3. ' ' → logprob: -9.000292778015137
    4. '(' → logprob: -10.750292778015137
    5. '11' → logprob: -13.250292778015137
    6. '(n' → logprob: -13.500292778015137
    7. 'n' → logprob: -13.500292778015137
    8. 'k' → logprob: -13.875292778015137
    9. ' (' → logprob: -15.000292778015137
    10. '   ' → logprob: -15.125292778015137

Token 542: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018169023096561432
    2. '):
' → logprob: -4.018168926239014
    3. '):
' → logprob: -12.018169403076172
    4. '+' → logprob: -12.143169403076172
    5. ' ):' → logprob: -12.268169403076172
    6. ':' → logprob: -13.768169403076172
    7. '       ' → logprob: -14.393169403076172
    8. '):

' → logprob: -14.893169403076172
    9. ')' → logprob: -15.018169403076172
    10. '   ' → logprob: -15.518169403076172

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004457297269254923
    2. '<|end|>' → logprob: -6.379457473754883
    3. '       ' → logprob: -6.629457473754883
    4. '            
' → logprob: -8.254457473754883
    5. ',' → logprob: -8.254457473754883
    6. '               ' → logprob: -8.879457473754883
    7. ':' → logprob: -9.004457473754883
    8. '#' → logprob: -9.129457473754883
    9. ' if' → logprob: -9.379457473754883
    10. '	       ' → logprob: -9.754457473754883

Token 544: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2281871885061264
    2. 'if' → logprob: -2.728187084197998
    3. ' if' → logprob: -2.853187084197998
    4. '#' (adapté à ' #') → logprob: -3.103187084197998
    5. 'bound' → logprob: -4.478187084197998
    6. ' bound' → logprob: -4.978187084197998
    7. '           ' → logprob: -5.228187084197998
    8. ' #' → logprob: -6.478187084197998
    9. '                ' → logprob: -6.478187084197998
    10. '                   ' → logprob: -6.603187084197998

Token 545: ' Comme' (ID: 53252)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3792572319507599
    2. 'max' → logprob: -1.7542572021484375
    3. 'limit' → logprob: -2.5042572021484375
    4. 'bound' → logprob: -3.5042572021484375
    5. 'upper' → logprob: -4.7542572021484375
    6. 'for' → logprob: -4.8792572021484375
    7. 'lim' → logprob: -4.8792572021484375
    8. '           ' → logprob: -6.7542572021484375
    9. 'up' → logprob: -6.7542572021484375
    10. '#' → logprob: -6.8792572021484375

Token 546: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.677074134349823
    2. 'Dp' → logprob: -1.8020741939544678
    3. ' k' → logprob: -2.1770741939544678
    4. 'n' → logprob: -2.3020741939544678
    5. ' n' → logprob: -2.6770741939544678
    6. ' D' → logprob: -4.552073955535889
    7. 'D' → logprob: -4.927073955535889
    8. ' (' → logprob: -5.552073955535889
    9. '(k' → logprob: -5.677073955535889
    10. 'bound' → logprob: -5.677073955535889

Token 547: ' DP' (ID: 51992)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06681503355503082
    2. 'n' → logprob: -3.066815137863159
    3. 'Dp' → logprob: -4.56681489944458
    4. 'i' → logprob: -5.81681489944458
    5. ' k' → logprob: -6.19181489944458
    6. 'bound' → logprob: -7.19181489944458
    7. ' n' → logprob: -7.94181489944458
    8. '(k' → logprob: -8.066815376281738
    9. 'j' → logprob: -8.191815376281738
    10. '(n' → logprob: -8.566815376281738

Token 548: ' distingue' (ID: 138285)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.19016870856285095
    2. '[' → logprob: -1.8151687383651733
    3. ' [' → logprob: -6.815168857574463
    4. '[min' → logprob: -6.940168857574463
    5. '[j' → logprob: -7.190168857574463
    6. '[state' → logprob: -7.315168857574463
    7. 'est' → logprob: -7.440168857574463
    8. '[n' → logprob: -7.565168857574463
    9. '[next' → logprob: -7.565168857574463
    10. 's' → logprob: -7.815168857574463

Token 549: ' entre' (ID: 3853)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9816831350326538
    2. ' les' → logprob: -2.2316832542419434
    3. ' la' → logprob: -2.2316832542419434
    4. 'if' → logprob: -2.3566832542419434
    5. ' entre' → logprob: -2.4816832542419434
    6. ' le' → logprob: -2.8566832542419434
    7. ' between' → logprob: -3.7316832542419434
    8. 's' → logprob: -3.8566832542419434
    9. ' l' → logprob: -4.106683254241943
    10. 'le' → logprob: -4.356683254241943

Token 550: ' les' (ID: 1341)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3790883421897888
    2. 'Dp' → logprob: -2.1290884017944336
    3. 'k' → logprob: -2.3790884017944336
    4. '1' → logprob: -3.3790884017944336
    5. 'bound' → logprob: -3.5040884017944336
    6. 'n' → logprob: -5.004088401794434
    7. ' ' → logprob: -5.254088401794434
    8. 'j' → logprob: -5.379088401794434
    9. '2' → logprob: -5.629088401794434
    10. '10' → logprob: -6.004088401794434

Token 551: ' transitions' (ID: 59824)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.7402287721633911
    2. '0' → logprob: -0.9902287721633911
    3. '1' → logprob: -2.1152286529541016
    4. 'True' → logprob: -4.615228652954102
    5. 'b' → logprob: -5.740228652954102
    6. ' bound' → logprob: -5.865228652954102
    7. 'limit' → logprob: -6.115228652954102
    8. ' ' → logprob: -6.240228652954102
    9. 'Dp' → logprob: -6.240228652954102
    10. 'bounded' → logprob: -6.365228652954102

Token 552: ' qui' (ID: 2780)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5015026330947876
    2. ' if' → logprob: -2.001502513885498
    3. '           ' → logprob: -2.876502513885498
    4. ',' → logprob: -3.001502513885498
    5. 'if' → logprob: -3.251502513885498
    6. ':' → logprob: -3.751502513885498
    7. '               ' → logprob: -3.751502513885498
    8. '   ' → logprob: -4.001502513885498
    9. '       ' → logprob: -5.251502513885498
    10. '            ' → logprob: -5.376502513885498

Token 553: ' sont' (ID: 5242)
  Prédit: ' dépass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dépass' → logprob: -0.7542703747749329
    2. ' respect' → logprob: -2.129270315170288
    3. 's' → logprob: -2.379270315170288
    4. 'ont' → logprob: -2.629270315170288
    5. 'respect' → logprob: -3.004270315170288
    6. 'limit' → logprob: -3.379270315170288
    7. 'n' → logprob: -3.379270315170288
    8. ' restent' → logprob: -3.504270315170288
    9. 'ne' → logprob: -4.379270553588867
    10. 'su' → logprob: -4.629270553588867

Token 554: ' encore' (ID: 14043)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.8606916069984436
    2. 'dans' → logprob: -1.4856915473937988
    3. 'limit' → logprob: -2.110691547393799
    4. 'bounded' → logprob: -2.735691547393799
    5. 'born' → logprob: -3.360691547393799
    6. ' dans' → logprob: -3.985691547393799
    7. ' liées' → logprob: -4.110691547393799
    8. ' bound' → logprob: -4.485691547393799
    9. 'lim' → logprob: -4.485691547393799
    10. 'borne' → logprob: -4.735691547393799

Token 555: ' sur' (ID: 1512)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.5166865587234497
    2. 'à' → logprob: -1.7666865587234497
    3. ' à' → logprob: -2.89168643951416
    4. ' dans' → logprob: -3.01668643951416
    5. 'bound' → logprob: -3.01668643951416
    6. 'born' → logprob: -4.01668643951416
    7. ' liées' → logprob: -4.39168643951416
    8. 'limit' → logprob: -4.51668643951416
    9. 'borne' → logprob: -4.76668643951416
    10. 'bounded' → logprob: -4.89168643951416

Token 556: ' la' (ID: 557)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.5052127242088318
    2. 'la' → logprob: -1.5052127838134766
    3. ' la' → logprob: -3.0052127838134766
    4. ' bound' → logprob: -3.5052127838134766
    5. '1' → logprob: -3.8802127838134766
    6. 'l' → logprob: -4.005212783813477
    7. 'n' → logprob: -4.130212783813477
    8. 'le' → logprob: -4.380212783813477
    9. 'the' → logprob: -4.880212783813477
    10. 'b' → logprob: -5.380212783813477

Token 557: ' limite' (ID: 48939)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.07790938019752502
    2. ' bound' → logprob: -3.827909469604492
    3. 'lim' → logprob: -4.077909469604492
    4. 'limit' → logprob: -4.202909469604492
    5. ' limite' → logprob: -4.577909469604492
    6. 'n' → logprob: -6.202909469604492
    7. 'borne' → logprob: -6.452909469604492
    8. ' ' → logprob: -6.452909469604492
    9. '   ' → logprob: -6.952909469604492
    10. 'b' → logprob: -7.077909469604492

Token 558: ' de' (ID: 334)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16162151098251343
    2. ' or' → logprob: -2.286621570587158
    3. 'and' → logprob: -3.161621570587158
    4. ' et' → logprob: -6.411621570587158
    5. 'et' → logprob: -6.786621570587158
    6. '           ' → logprob: -7.411621570587158
    7. 'or' → logprob: -7.911621570587158
    8. ':' → logprob: -8.16162109375
    9. ' if' → logprob: -8.28662109375
    10. '               ' → logprob: -8.53662109375

Token 559: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08017153292894363
    2. 'la' → logprob: -3.705171585083008
    3. ' n' → logprob: -3.830171585083008
    4. 'bound' → logprob: -4.205171585083008
    5. 'l' → logprob: -4.955171585083008
    6. ' bound' → logprob: -5.705171585083008
    7. '1' → logprob: -6.080171585083008
    8. ' la' → logprob: -6.205171585083008
    9. 'k' → logprob: -8.205171585083008
    10. '9' → logprob: -8.955171585083008

Token 560: ' ou' (ID: 2031)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17105332016944885
    2. 'and' → logprob: -2.796053409576416
    3. ' or' → logprob: -3.421053409576416
    4. ':' → logprob: -4.296053409576416
    5. '[' → logprob: -4.421053409576416
    6. ' et' → logprob: -4.546053409576416
    7. ',' → logprob: -5.171053409576416
    8. ']' → logprob: -5.296053409576416
    9. 'et' → logprob: -5.546053409576416
    10. '           ' → logprob: -5.921053409576416

Token 561: ' pas' (ID: 2173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2980097830295563
    2. 'la' → logprob: -2.0480098724365234
    3. ' not' → logprob: -2.7980098724365234
    4. ' la' → logprob: -4.173009872436523
    5. '1' → logprob: -4.673009872436523
    6. '=' → logprob: -4.923009872436523
    7. 'l' → logprob: -4.923009872436523
    8. 'pas' → logprob: -5.048009872436523
    9. 'n' → logprob: -5.548009872436523
    10. 'bound' → logprob: -5.798009872436523

Token 562: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2582642436027527
    2. ',' → logprob: -2.2582643032073975
    3. '           ' → logprob: -2.7582643032073975
    4. '               ' → logprob: -3.5082643032073975
    5. ':
' → logprob: -4.133264064788818
    6. ' :' → logprob: -5.008264064788818
    7. ' and' → logprob: -6.008264064788818
    8. '                   ' → logprob: -7.508264064788818
    9. ',
' → logprob: -8.133264541625977
    10. ' ,' → logprob: -8.133264541625977

Token 563: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16325697302818298
    2. '           ' → logprob: -1.9132570028305054
    3. '                   ' → logprob: -6.663257122039795
    4. '#' → logprob: -6.663257122039795
    5. ' for' → logprob: -8.913256645202637
    6. ' #' → logprob: -9.538256645202637
    7. '             ' → logprob: -9.913256645202637
    8. 'for' → logprob: -10.038256645202637
    9. '              ' → logprob: -10.038256645202637
    10. '	           ' → logprob: -10.913256645202637

Token 564: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8147333860397339
    2. '               ' → logprob: -1.0647333860397339
    3. ' for' → logprob: -1.5647333860397339
    4. '                   ' → logprob: -7.564733505249023
    5. ' bound' → logprob: -7.689733505249023
    6. 'bound' → logprob: -8.064733505249023
    7. '                ' → logprob: -8.439733505249023
    8. 'if' → logprob: -8.564733505249023
    9. '           ' → logprob: -8.689733505249023
    10. '                               ' → logprob: -8.689733505249023

Token 565: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49850374460220337
    2. 'bound' → logprob: -1.7485036849975586
    3. 'for' → logprob: -2.7485036849975586
    4. 'max' → logprob: -2.9985036849975586
    5. 'upper' → logprob: -3.1235036849975586
    6. 'limit' → logprob: -3.6235036849975586
    7. '#' → logprob: -4.748503684997559
    8. 'up' → logprob: -5.123503684997559
    9. 'lim' → logprob: -5.248503684997559
    10. 'n' → logprob: -5.373503684997559

Token 566: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11989746987819672
    2. ' for' → logprob: -2.6198973655700684
    3. '           ' → logprob: -3.4948973655700684
    4. 's' → logprob: -5.744897365570068
    5. 'continue' → logprob: -6.494897365570068
    6. '#' → logprob: -7.369897365570068
    7. '   ' → logprob: -7.619897365570068
    8. '               ' → logprob: -7.619897365570068
    9. ' continue' → logprob: -7.619897365570068
    10. 'in' → logprob: -7.744897365570068

Token 567: ' sé' (ID: 7462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31112730503082275
    2. ' for' → logprob: -2.436127185821533
    3. '           ' → logprob: -2.936127185821533
    4. 'continue' → logprob: -3.311127185821533
    5. ' continuer' → logprob: -3.936127185821533
    6. ' continue' → logprob: -3.936127185821533
    7. '   ' → logprob: -4.936127185821533
    8. '#' → logprob: -5.061127185821533
    9. 'contin' → logprob: -5.061127185821533
    10. '    ' → logprob: -5.561127185821533

Token 568: 'parer' (ID: 48041)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33074429631233215
    2. 'parer' → logprob: -1.3307442665100098
    3. 'par' → logprob: -4.58074426651001
    4. ' for' → logprob: -5.45574426651001
    5. '#' → logprob: -6.58074426651001
    6. 'paration' → logprob: -8.205744743347168
    7. '```' → logprob: -8.330744743347168
    8. 'lect' → logprob: -8.705744743347168
    9. 'pare' → logprob: -9.080744743347168
    10. 'lection' → logprob: -9.080744743347168

Token 569: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032494855113327503
    2. ' for' → logprob: -5.753249645233154
    3. 'bound' → logprob: -9.753249168395996
    4. 'pour' → logprob: -12.503249168395996
    5. '               ' → logprob: -13.378249168395996
    6. '   ' → logprob: -13.503249168395996
    7. '           ' → logprob: -13.628249168395996
    8. ' bound' → logprob: -13.628249168395996
    9. ' ' → logprob: -13.878249168395996
    10. '       ' → logprob: -14.378249168395996

Token 570: ' cas' (ID: 2108)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006765818223357201
    2. 'bound' → logprob: -5.631765842437744
    3. ' for' → logprob: -5.881765842437744
    4. '0' → logprob: -9.131765365600586
    5. 'b' → logprob: -9.381765365600586
    6. '2' → logprob: -9.506765365600586
    7. ' bound' → logprob: -10.506765365600586
    8. '```' → logprob: -11.381765365600586
    9. ' ' → logprob: -11.506765365600586
    10. 'pour' → logprob: -11.881765365600586

Token 571: ' k' (ID: 372)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6536980271339417
    2. '               ' → logprob: -1.0286979675292969
    3. 'for' → logprob: -2.653697967529297
    4. 's' → logprob: -4.153697967529297
    5. '           ' → logprob: -4.153697967529297
    6. ' ' → logprob: -5.153697967529297
    7. '                   ' → logprob: -5.903697967529297
    8. ' in' → logprob: -6.278697967529297
    9. '   ' → logprob: -6.403697967529297
    10. ' if' → logprob: -6.653697967529297

Token 572: '==' (ID: 560)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.39342841506004333
    2. '<=' → logprob: -1.1434284448623657
    3. ' ==' → logprob: -6.518428325653076
    4. ' <' → logprob: -7.018428325653076
    5. ' >' → logprob: -7.018428325653076
    6. '==' → logprob: -7.393428325653076
    7. '<' → logprob: -7.893428325653076
    8. ' =' → logprob: -8.143428802490234
    9. '=' → logprob: -8.143428802490234
    10. '>' → logprob: -8.268428802490234

Token 573: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04052457585930824
    2. '0' → logprob: -3.790524482727051
    3. '9' → logprob: -5.165524482727051
    4. ' int' → logprob: -5.290524482727051
    5. 'k' → logprob: -5.665524482727051
    6. 'n' → logprob: -6.665524482727051
    7. '10' → logprob: -7.790524482727051
    8. '(' → logprob: -8.16552448272705
    9. '(int' → logprob: -8.16552448272705
    10. ' ' → logprob: -8.79052448272705

Token 574: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050364188849925995
    2. ':' → logprob: -3.3003642559051514
    3. ' for' → logprob: -5.050364017486572
    4. '               ' → logprob: -6.300364017486572
    5. ':
' → logprob: -6.800364017486572
    6. ' :' → logprob: -7.050364017486572
    7. 'for' → logprob: -7.675364017486572
    8. ',' → logprob: -7.675364017486572
    9. ' and' → logprob: -8.80036449432373
    10. '       ' → logprob: -9.05036449432373

Token 575: 'on' (ID: 263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9587823152542114
    2. 'n' → logprob: -2.333782196044922
    3. ' n' → logprob: -2.458782196044922
    4. 'k' → logprob: -2.583782196044922
    5. '):' → logprob: -2.583782196044922
    6. ' k' → logprob: -2.833782196044922
    7. ' )' → logprob: -3.458782196044922
    8. '):
' → logprob: -3.583782196044922
    9. ' bound' → logprob: -3.708782196044922
    10. 'if' → logprob: -4.083782196044922

Token 576: ' place' (ID: 2475)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5813255906105042
    2. '<=' → logprob: -1.7063255310058594
    3. ' <=' → logprob: -2.4563255310058594
    4. 'n' → logprob: -2.7063255310058594
    5. 'continue' → logprob: -3.2063255310058594
    6. ' n' → logprob: -4.331325531005859
    7. '<' → logprob: -5.581325531005859
    8. ')' → logprob: -5.581325531005859
    9. ' ==' → logprob: -5.706325531005859
    10. ' <' → logprob: -5.831325531005859

Token 577: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.1901556253433228
    2. '0' → logprob: -1.9401556253433228
    3. 'le' → logprob: -1.9401556253433228
    4. ' k' → logprob: -2.065155506134033
    5. 'un' → logprob: -2.190155506134033
    6. 'k' → logprob: -2.690155506134033
    7. ' ' → logprob: -3.940155506134033
    8. ' le' → logprob: -4.190155506134033
    9. ')' → logprob: -4.315155506134033
    10. 'n' → logprob: -4.565155506134033

Token 578: ' ' (ID: 220)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.5941789746284485
    2. '0' → logprob: -1.7191789150238037
    3. ' chiffre' → logprob: -2.5941789150238037
    4. 'digit' → logprob: -2.8441789150238037
    5. 'z' → logprob: -3.4691789150238037
    6. 'zero' → logprob: -3.5941789150238037
    7. ' zéro' → logprob: -4.344179153442383
    8. ' digit' → logprob: -4.844179153442383
    9. 'k' → logprob: -5.094179153442383
    10. ' z' → logprob: -5.094179153442383

Token 579: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.514575719833374
    2. 'ch' → logprob: -1.639575719833374
    3. 'z' → logprob: -2.139575719833374
    4. 'digit' → logprob: -3.139575719833374
    5. 'zero' → logprob: -3.389575719833374
    6. 'non' → logprob: -5.264575958251953
    7. 'k' → logprob: -6.389575958251953
    8. '```' → logprob: -7.014575958251953
    9. ')' → logprob: -7.389575958251953
    10. ' ' → logprob: -7.639575958251953

Token 580: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05029061436653137
    2. ' )' → logprob: -3.550290584564209
    3. '):' → logprob: -5.050290584564209
    4. '           ' → logprob: -5.550290584564209
    5. '               ' → logprob: -6.300290584564209
    6. ' if' → logprob: -6.800290584564209
    7. ' or' → logprob: -6.800290584564209
    8. ' et' → logprob: -6.925290584564209
    9. ' ou' → logprob: -7.425290584564209
    10. '                   ' → logprob: -7.550290584564209

Token 581: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0344112329185009
    2. ':' → logprob: -4.409411430358887
    3. ' for' → logprob: -4.784411430358887
    4. '               ' → logprob: -5.534411430358887
    5. ',' → logprob: -6.534411430358887
    6. '<|end|>' → logprob: -6.534411430358887
    7. ':
' → logprob: -6.659411430358887
    8. 'for' → logprob: -7.034411430358887
    9. '            ' → logprob: -7.284411430358887
    10. ' and' → logprob: -7.284411430358887

Token 582: ' cas' (ID: 2108)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2248233556747437
    2. 'bound' → logprob: -1.4748233556747437
    3. 'for' → logprob: -1.5998233556747437
    4. ' bound' → logprob: -2.724823474884033
    5. '0' → logprob: -2.724823474884033
    6. '#' → logprob: -3.599823474884033
    7. 'la' → logprob: -3.974823474884033
    8. ' k' → logprob: -4.099823474884033
    9. ' for' → logprob: -4.349823474884033
    10. 'l' → logprob: -4.974823474884033

Token 583: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8363268971443176
    2. ' k' → logprob: -0.8363268971443176
    3. ' n' → logprob: -3.586326837539673
    4. ' ' → logprob: -4.586327075958252
    5. 'n' → logprob: -4.586327075958252
    6. '    ' → logprob: -4.711327075958252
    7. 'Dp' → logprob: -4.711327075958252
    8. ' (' → logprob: -4.836327075958252
    9. '(' → logprob: -5.086327075958252
    10. 'bound' → logprob: -5.586327075958252

Token 584: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.44598132371902466
    2. '>' → logprob: -1.3209812641143799
    3. ' !=' → logprob: -3.07098126411438
    4. ' >' → logprob: -3.19598126411438
    5. '==' → logprob: -6.445981502532959
    6. '<=' → logprob: -6.445981502532959
    7. '>=' → logprob: -6.820981502532959
    8. '<' → logprob: -7.695981502532959
    9. ' <' → logprob: -8.8209810256958
    10. ' <=' → logprob: -8.8209810256958

Token 585: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009177703177556396
    2. ' ' → logprob: -7.000917911529541
    3. '=' → logprob: -12.875917434692383
    4. 'k' → logprob: -13.625917434692383
    5. '```' → logprob: -13.875917434692383
    6. '1' → logprob: -15.125917434692383
    7. ' ' → logprob: -15.500917434692383
    8. '   ' → logprob: -15.875917434692383
    9. '  ' → logprob: -16.188417434692383
    10. ' k' → logprob: -16.188417434692383

Token 586: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40210962295532227
    2. ':' → logprob: -1.1521096229553223
    3. ':
' → logprob: -5.027109622955322
    4. '               ' → logprob: -5.527109622955322
    5. ' for' → logprob: -6.277109622955322
    6. ',' → logprob: -7.402109622955322
    7. ' :' → logprob: -7.527109622955322
    8. 'for' → logprob: -8.277109146118164
    9. '.' → logprob: -8.527109146118164
    10. ' and' → logprob: -9.152109146118164

Token 587: 'on' (ID: 263)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.41834571957588196
    2. 'on' → logprob: -1.1683456897735596
    3. '#' → logprob: -4.043345928192139
    4. ' #' → logprob: -6.168345928192139
    5. '           ' → logprob: -6.418345928192139
    6. ' ' → logprob: -6.668345928192139
    7. ' nous' → logprob: -6.793345928192139
    8. 'nous' → logprob: -7.043345928192139
    9. ' ' → logprob: -7.168345928192139
    10. '               ' → logprob: -7.168345928192139

Token 588: ' place' (ID: 2475)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.806303083896637
    2. 'continue' → logprob: -1.0563030242919922
    3. ' place' → logprob: -2.806303024291992
    4. 'contin' → logprob: -3.806303024291992
    5. 'place' → logprob: -3.806303024291992
    6. 'n' → logprob: -4.056303024291992
    7. 'aj' → logprob: -4.431303024291992
    8. ' doit' → logprob: -4.806303024291992
    9. ')' → logprob: -4.931303024291992
    10. ' ajoute' → logprob: -5.181303024291992

Token 589: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.01833629421889782
    2. 'un' → logprob: -4.018336296081543
    3. ' a' → logprob: -9.393336296081543
    4. ' une' → logprob: -10.518336296081543
    5. 'a' → logprob: -10.893336296081543
    6. ' ' → logprob: -11.143336296081543
    7. ')' → logprob: -11.393336296081543
    8. 'non' → logprob: -11.643336296081543
    9. ' non' → logprob: -12.268336296081543
    10. ' ' → logprob: -12.268336296081543

Token 590: ' chiffre' (ID: 107420)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31598514318466187
    2. 'non' → logprob: -1.8159852027893066
    3. ' k' → logprob: -3.1909852027893066
    4. '0' → logprob: -3.5659852027893066
    5. ' non' → logprob: -3.5659852027893066
    6. 'ch' → logprob: -6.065985202789307
    7. ' ' → logprob: -6.815985202789307
    8. 'zero' → logprob: -6.940985202789307
    9. ' chiffre' → logprob: -6.940985202789307
    10. '1' → logprob: -7.065985202789307

Token 591: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.13876298069953918
    2. 'non' → logprob: -2.263762950897217
    3. ' !=' → logprob: -4.263762950897217
    4. ')' → logprob: -5.388762950897217
    5. '!=' → logprob: -5.763762950897217
    6. ' différent' → logprob: -6.263762950897217
    7. ' )' → logprob: -7.013762950897217
    8. ' different' → logprob: -8.888763427734375
    9. '_non' → logprob: -8.888763427734375
    10. '   ' → logprob: -9.013763427734375

Token 592: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006620396394282579
    2. '=' → logprob: -5.381620407104492
    3. '_' → logprob: -7.256620407104492
    4. 'zero' → logprob: -8.506620407104492
    5. '_zero' → logprob: -8.506620407104492
    6. ' ' → logprob: -8.631620407104492
    7. 'z' → logprob: -8.631620407104492
    8. ' =' → logprob: -8.756620407104492
    9. ' zéro' → logprob: -9.506620407104492
    10. ' zero' → logprob: -9.506620407104492

Token 593: 'éro' (ID: 28155)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.6481603980064392
    2. 'éro' → logprob: -0.7731603980064392
    3. 'ro' → logprob: -4.898160457611084
    4. '0' → logprob: -5.523160457611084
    5. 'éros' → logprob: -7.023160457611084
    6. '```' → logprob: -7.148160457611084
    7. ' ' → logprob: -7.398160457611084
    8. '#' → logprob: -8.898159980773926
    9. '\' → logprob: -9.148159980773926
    10. 'erro' → logprob: -9.148159980773926

Token 594: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4690452516078949
    2. '):
' → logprob: -1.4690452814102173
    3. ')' → logprob: -2.0940451622009277
    4. ').' → logprob: -4.969045162200928
    5. '           ' → logprob: -5.594045162200928
    6. 'if' → logprob: -5.594045162200928
    7. '):

' → logprob: -6.844045162200928
    8. '               ' → logprob: -7.469045162200928
    9. 'for' → logprob: -7.469045162200928
    10. '   ' → logprob: -7.469045162200928

Token 595: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02659577690064907
    2. ' for' → logprob: -4.901595592498779
    3. 'for' → logprob: -5.276595592498779
    4. '               ' → logprob: -5.401595592498779
    5. '<|end|>' → logprob: -5.651595592498779
    6. '            
' → logprob: -6.526595592498779
    7. '            ' → logprob: -6.651595592498779
    8. '       ' → logprob: -7.276595592498779
    9. ',' → logprob: -7.901595592498779
    10. '          ' → logprob: -8.401596069335938

Token 596: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19853916764259338
    2. 'for' → logprob: -2.5735392570495605
    3. ' for' → logprob: -2.6985392570495605
    4. 'if' (adapté à ' if') → logprob: -3.9485392570495605
    5. ' if' → logprob: -4.8235392570495605
    6. '               ' → logprob: -5.4485392570495605
    7. '#' → logprob: -6.1985392570495605
    8. '            ' → logprob: -6.8235392570495605
    9. '            
' → logprob: -7.8235392570495605
    10. ' ' → logprob: -9.073538780212402

Token 597: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09154058247804642
    2. ' k' → logprob: -2.466540575027466
    3. 'Dp' → logprob: -6.466540813446045
    4. '(k' → logprob: -7.841540813446045
    5. 'n' → logprob: -8.841540336608887
    6. ' D' → logprob: -9.341540336608887
    7. ' n' → logprob: -9.466540336608887
    8. ' ' → logprob: -9.716540336608887
    9. 'D' → logprob: -9.716540336608887
    10. 'j' → logprob: -10.091540336608887

Token 598: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4422367513179779
    2. ' <=' → logprob: -1.4422367811203003
    3. '==' → logprob: -3.0672366619110107
    4. '<' → logprob: -3.1922366619110107
    5. ' ==' → logprob: -3.8172366619110107
    6. ' <' → logprob: -4.69223690032959
    7. '<n' → logprob: -6.69223690032959
    8. '>' → logprob: -8.19223690032959
    9. '!=' → logprob: -8.69223690032959
    10. '0' → logprob: -9.31723690032959

Token 599: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008051026379689574
    2. ' ' → logprob: -7.125804901123047
    3. 'n' → logprob: -15.250804901123047
    4. '=' → logprob: -16.438304901123047
    5. '۰' → logprob: -17.000804901123047
    6. 'k' → logprob: -17.125804901123047
    7. '...' → logprob: -17.500804901123047
    8. '1' → logprob: -17.625804901123047
    9. '<|end|>' → logprob: -17.813304901123047
    10. '   ' → logprob: -18.188304901123047

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -18.37502098083496
    4. '=' → logprob: -18.50002098083496
    5. '1' → logprob: -18.75002098083496
    6. '۰' → logprob: -19.25002098083496
    7. '#' → logprob: -19.31252098083496
    8. ' ' → logprob: -19.75002098083496
    9. '   ' → logprob: -19.81252098083496
    10. '[' → logprob: -20.06252098083496

Token 601: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0682922899723053
    2. ' and' → logprob: -2.8182923793792725
    3. ':
' → logprob: -5.318292140960693
    4. ' :' → logprob: -7.443292140960693
    5. 'and' → logprob: -7.943292140960693
    6. '           ' → logprob: -8.693292617797852
    7. '               ' → logprob: -8.818292617797852
    8. ' or' → logprob: -10.068292617797852
    9. '):' → logprob: -11.193292617797852
    10. ',' → logprob: -11.568292617797852

Token 602: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06384167820215225
    2. ':' → logprob: -3.0638415813446045
    3. '           ' → logprob: -5.063841819763184
    4. ' and' → logprob: -5.688841819763184
    5. '<|end|>' → logprob: -6.313841819763184
    6. ' :' → logprob: -7.188841819763184
    7. '                       ' → logprob: -7.813841819763184
    8. ':
' → logprob: -8.063841819763184
    9. '                
' → logprob: -8.313841819763184
    10. '              ' → logprob: -8.438841819763184

Token 603: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20277999341487885
    2. ' for' → logprob: -1.82778000831604
    3. 'if' → logprob: -4.702779769897461
    4. '               ' → logprob: -5.202779769897461
    5. '                   ' → logprob: -5.827779769897461
    6. '#' (adapté à ' #') → logprob: -6.327779769897461
    7. ' if' → logprob: -6.577779769897461
    8. 'continue' → logprob: -6.702779769897461
    9. '                       ' → logprob: -8.577779769897461
    10. ' #' → logprob: -9.077779769897461

Token 604: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8078810572624207
    2. 'for' → logprob: -0.8078810572624207
    3. 'max' → logprob: -3.8078811168670654
    4. '#' → logprob: -3.9328811168670654
    5. 'Dp' → logprob: -4.057880878448486
    6. ' for' → logprob: -4.432880878448486
    7. ' if' → logprob: -4.432880878448486
    8. 'limit' → logprob: -4.932880878448486
    9. 'bound' → logprob: -5.182880878448486
    10. '               ' → logprob: -6.182880878448486

Token 605: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20869947969913483
    2. 'n' → logprob: -1.8336994647979736
    3. 'Dp' → logprob: -4.083699703216553
    4. 'j' → logprob: -5.083699703216553
    5. ' k' → logprob: -6.083699703216553
    6. ' n' → logprob: -6.833699703216553
    7. 'i' → logprob: -7.333699703216553
    8. '(n' → logprob: -8.083699226379395
    9. '(k' → logprob: -8.083699226379395
    10. 'bound' → logprob: -8.708699226379395

Token 606: ' place' (ID: 2475)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.39180949330329895
    2. 'continue' → logprob: -1.7668094635009766
    3. ' place' → logprob: -3.1418094635009766
    4. 'n' → logprob: -4.266809463500977
    5. 'dp' → logprob: -4.391809463500977
    6. '#' → logprob: -4.516809463500977
    7. 's' → logprob: -4.516809463500977
    8. 'place' → logprob: -4.766809463500977
    9. '0' → logprob: -5.141809463500977
    10. 'contin' → logprob: -5.266809463500977

Token 607: ' un' (ID: 537)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4346266984939575
    2. '0' → logprob: -1.1846266984939575
    3. ' k' → logprob: -3.434626579284668
    4. 'n' → logprob: -5.059626579284668
    5. ' ' → logprob: -5.309626579284668
    6. ' n' → logprob: -6.434626579284668
    7. '   ' → logprob: -7.809626579284668
    8. 'Dp' → logprob: -8.059626579284668
    9. 'j' → logprob: -8.434626579284668
    10. '(n' → logprob: -9.184626579284668

Token 608: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006324975984171033
    2. 'zero' → logprob: -8.250632286071777
    3. ' ' → logprob: -8.375632286071777
    4. 'k' → logprob: -9.375632286071777
    5. '#' → logprob: -11.250632286071777
    6. 'digit' → logprob: -11.625632286071777
    7. '1' → logprob: -12.125632286071777
    8. 'non' → logprob: -12.250632286071777
    9. 'bound' → logprob: -12.500632286071777
    10. ' zero' → logprob: -12.750632286071777

Token 609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006640886887907982
    2. 'k' → logprob: -5.131640911102295
    3. 'zero' → logprob: -8.131640434265137
    4. 'n' → logprob: -8.631640434265137
    5. 'j' → logprob: -9.631640434265137
    6. 'Dp' → logprob: -9.756640434265137
    7. ' ' → logprob: -11.256640434265137
    8. 'DP' → logprob: -11.381640434265137
    9. '   ' → logprob: -11.381640434265137
    10. 'non' → logprob: -11.506640434265137

Token 610: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051856301724910736
    2. ':
' → logprob: -3.676856279373169
    3. ' and' → logprob: -4.176856517791748
    4. ',' → logprob: -5.801856517791748
    5. ' :' → logprob: -5.801856517791748
    6. '                   ' → logprob: -7.051856517791748
    7. '               ' → logprob: -7.051856517791748
    8. 'and' → logprob: -7.801856517791748
    9. '                           ' → logprob: -8.17685604095459
    10. ' :
' → logprob: -8.42685604095459

Token 611: ' cette' (ID: 7696)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2220393717288971
    2. 'k' → logprob: -2.7220394611358643
    3. 'n' → logprob: -3.0970394611358643
    4. 'this' → logprob: -3.3470394611358643
    5. 'j' → logprob: -4.222039222717285
    6. 'Dp' → logprob: -4.472039222717285
    7. 'l' → logprob: -4.722039222717285
    8. 'la' → logprob: -5.347039222717285
    9. '[i' → logprob: -5.847039222717285
    10. ' i' → logprob: -6.097039222717285

Token 612: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.1133759021759033
    2. 'i' → logprob: -1.3633759021759033
    3. 'position' → logprob: -2.1133759021759033
    4. '][' → logprob: -2.1133759021759033
    5. ' i' → logprob: -3.2383759021759033
    6. '[i' → logprob: -3.3633759021759033
    7. '[' → logprob: -3.6133759021759033
    8. ' ][' → logprob: -3.9883759021759033
    9. ' point' → logprob: -4.238375663757324
    10. 'point' → logprob: -4.863375663757324

Token 613: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035971008241176605
    2. ' and' → logprob: -4.035971164703369
    3. ':
' → logprob: -4.160971164703369
    4. ',' → logprob: -7.035971164703369
    5. ' :' → logprob: -7.785971164703369
    6. 'and' → logprob: -8.285970687866211
    7. '                   ' → logprob: -8.285970687866211
    8. '               ' → logprob: -9.410970687866211
    9. '                           ' → logprob: -9.660970687866211
    10. '                       ' → logprob: -10.785970687866211

Token 614: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4123296737670898
    2. '                   ' → logprob: -1.4123296737670898
    3. ' if' → logprob: -1.5373296737670898
    4. 'for' → logprob: -2.28732967376709
    5. '               ' → logprob: -2.41232967376709
    6. 'if' → logprob: -2.53732967376709
    7. 'bound' → logprob: -4.91232967376709
    8. ' bound' → logprob: -5.28732967376709
    9. 'limit' → logprob: -6.16232967376709
    10. '                       ' → logprob: -6.28732967376709

Token 615: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5464184284210205
    2. 'for' → logprob: -1.6714184284210205
    3. 'Dp' → logprob: -1.6714184284210205
    4. 'bound' → logprob: -4.046418190002441
    5. 'max' → logprob: -5.171418190002441
    6. ' if' → logprob: -5.171418190002441
    7. 'limit' → logprob: -5.796418190002441
    8. '                   ' → logprob: -5.796418190002441
    9. ' for' → logprob: -6.046418190002441
    10. '               ' → logprob: -6.171418190002441

Token 616: ' Premier' (ID: 27686)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6350633502006531
    2. 'Dp' → logprob: -0.8850633502006531
    3. 'for' → logprob: -3.635063409805298
    4. 'max' → logprob: -4.635063171386719
    5. 'limit' → logprob: -5.385063171386719
    6. '#' → logprob: -5.635063171386719
    7. 'upper' → logprob: -5.760063171386719
    8. 'bound' → logprob: -5.760063171386719
    9. ' if' → logprob: -6.510063171386719
    10. 'up' → logprob: -6.635063171386719

Token 617: ' cas' (ID: 2108)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7034541368484497
    2. ' if' → logprob: -2.07845401763916
    3. 'bound' → logprob: -2.07845401763916
    4. 'Dp' → logprob: -3.20345401763916
    5. 'indent' → logprob: -3.57845401763916
    6. '_bound' → logprob: -3.95345401763916
    7. ' bound' → logprob: -3.95345401763916
    8. 'for' → logprob: -4.07845401763916
    9. ' indent' → logprob: -4.20345401763916
    10. 'continue' → logprob: -4.20345401763916

Token 618: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.486228585243225
    2. ' if' → logprob: -1.486228585243225
    3. 'if' → logprob: -1.611228585243225
    4. '               ' → logprob: -1.986228585243225
    5. ' :' → logprob: -2.4862284660339355
    6. ' for' → logprob: -3.7362284660339355
    7. 'for' → logprob: -3.7362284660339355
    8. '                   ' → logprob: -3.9862284660339355
    9. ' =' → logprob: -4.1112284660339355
    10. ':
' → logprob: -4.3612284660339355

Token 619: ' tant' (ID: 16235)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7675799131393433
    2. 'for' → logprob: -1.7675799131393433
    3. 'Dp' → logprob: -1.7675799131393433
    4. ' if' → logprob: -1.8925799131393433
    5. ' for' → logprob: -3.767580032348633
    6. ' D' → logprob: -4.267580032348633
    7. 'D' → logprob: -6.267580032348633
    8. 'k' → logprob: -6.267580032348633
    9. 'bound' → logprob: -7.267580032348633
    10. ' k' → logprob: -7.517580032348633

Token 620: ' qu' (ID: 474)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1217390298843384
    2. ' que' → logprob: -1.1217390298843384
    3. 'if' → logprob: -1.8717390298843384
    4. '                   ' → logprob: -2.371738910675049
    5. '           ' → logprob: -3.246738910675049
    6. '#' → logprob: -4.871738910675049
    7. 'ôt' → logprob: -4.871738910675049
    8. 'is' → logprob: -4.996738910675049
    9. 'que' → logprob: -5.246738910675049
    10. 'that' → logprob: -5.621738910675049

Token 621: ''on' (ID: 25812)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.8747055530548096
    2. 'k' → logprob: -1.2497055530548096
    3. ' k' → logprob: -2.4997055530548096
    4. ' D' → logprob: -2.4997055530548096
    5. 'D' → logprob: -2.6247055530548096
    6. 'i' → logprob: -4.2497053146362305
    7. ' que' → logprob: -4.6247053146362305
    8. 'j' → logprob: -4.7497053146362305
    9. ' j' → logprob: -4.8747053146362305
    10. 'n' → logprob: -5.2497053146362305

Token 622: ' n' (ID: 297)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.6032068133354187
    2. ' continue' → logprob: -2.4782068729400635
    3. ' n' → logprob: -2.7282068729400635
    4. 'n' → logprob: -2.7282068729400635
    5. 'bound' → logprob: -3.1032068729400635
    6. ' bound' → logprob: -3.3532068729400635
    7. 'dp' → logprob: -3.4782068729400635
    8. '<=' → logprob: -3.8532068729400635
    9. 'k' → logprob: -4.478206634521484
    10. 'continue' → logprob: -4.728206634521484

Token 623: ''a' (ID: 10443)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.06448353081941605
    2. '[i' → logprob: -4.189483642578125
    3. '[' → logprob: -4.314483642578125
    4. '][' → logprob: -4.939483642578125
    5. '           ' → logprob: -5.939483642578125
    6. '               ' → logprob: -6.064483642578125
    7. '#' → logprob: -6.189483642578125
    8. '<=' → logprob: -6.189483642578125
    9. '_dp' → logprob: -6.189483642578125
    10. 'i' → logprob: -6.439483642578125

Token 624: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2141794115304947
    2. 'Dp' → logprob: -1.7141793966293335
    3. ' pas' → logprob: -5.089179515838623
    4. 'dp' → logprob: -5.839179515838623
    5. 'not' → logprob: -6.464179515838623
    6. 'j' → logprob: -8.089179039001465
    7. '0' → logprob: -8.589179039001465
    8. 'i' → logprob: -8.714179039001465
    9. 'Pas' → logprob: -8.714179039001465
    10. 'plus' → logprob: -8.839179039001465

Token 625: ' dépass' (ID: 99759)
  Prédit: ' dépass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dépass' → logprob: -0.23808260262012482
    2. 'Dp' → logprob: -2.1130826473236084
    3. 'dp' → logprob: -3.6130826473236084
    4. 'ex' → logprob: -4.238082408905029
    5. 'k' → logprob: -4.363082408905029
    6. 'pas' → logprob: -5.113082408905029
    7. 'dé' → logprob: -5.238082408905029
    8. 'n' → logprob: -6.113082408905029
    9. 'cho' → logprob: -6.238082408905029
    10. ' placé' → logprob: -6.238082408905029

Token 626: 'é' (ID: 377)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0792174339294434
    2. ' la' → logprob: -1.0792174339294434
    3. 'u' → logprob: -2.2042174339294434
    4. ' n' → logprob: -2.9542174339294434
    5. '=' → logprob: -3.8292174339294434
    6. 'é' → logprob: -3.9542174339294434
    7. 'le' → logprob: -4.079217433929443
    8. 'la' → logprob: -4.079217433929443
    9. 'i' → logprob: -4.204217433929443
    10. ' =' → logprob: -4.454217433929443

Token 627: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24095745384693146
    2. 'k' → logprob: -2.490957498550415
    3. 'Dp' → logprob: -2.615957498550415
    4. 'bound' → logprob: -3.740957498550415
    5. ' n' → logprob: -4.615957260131836
    6. '9' → logprob: -4.740957260131836
    7. 'keta' → logprob: -5.740957260131836
    8. '10' → logprob: -5.865957260131836
    9. ' bound' → logprob: -5.865957260131836
    10. '1' → logprob: -6.865957260131836

Token 628: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43844074010849
    2. 'bound' → logprob: -1.3134407997131348
    3. ' bound' → logprob: -3.3134407997131348
    4. '9' → logprob: -4.438440799713135
    5. 'Dp' → logprob: -4.938440799713135
    6. '1' → logprob: -5.188440799713135
    7. 'keta' → logprob: -5.188440799713135
    8. 'k' → logprob: -5.438440799713135
    9. ' n' → logprob: -5.563440799713135
    10. '10' → logprob: -5.813440799713135

Token 629: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2506818771362305
    2. 'n' → logprob: -1.5006818771362305
    3. '=' → logprob: -2.1256818771362305
    4. 'if' → logprob: -2.2506818771362305
    5. 'Dp' → logprob: -2.5006818771362305
    6. 'bound' → logprob: -3.1256818771362305
    7. 'de' → logprob: -3.8756818771362305
    8. 'dp' → logprob: -4.2506818771362305
    9. 'max' → logprob: -4.2506818771362305
    10. ' de' → logprob: -4.3756818771362305

Token 630: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.21344926953315735
    2. 'n' → logprob: -1.713449239730835
    3. ' int' → logprob: -4.838449478149414
    4. ' n' → logprob: -5.588449478149414
    5. '[int' → logprob: -9.463449478149414
    6. '(int' → logprob: -9.963449478149414
    7. '   ' → logprob: -9.963449478149414
    8. '10' → logprob: -10.463449478149414
    9. '(n' → logprob: -10.713449478149414
    10. '
' → logprob: -11.838449478149414

Token 631: ',
' (ID: 412)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15814509987831116
    2. 'if' → logprob: -3.2831451892852783
    3. ' or' → logprob: -3.2831451892852783
    4. ' and' → logprob: -3.7831451892852783
    5. '[' → logprob: -4.658144950866699
    6. ' if' → logprob: -4.908144950866699
    7. ',' → logprob: -5.158144950866699
    8. '               ' → logprob: -5.533144950866699
    9. '           ' → logprob: -5.533144950866699
    10. 'and' → logprob: -5.783144950866699

Token 632: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34222131967544556
    2. 'if' → logprob: -1.7172212600708008
    3. ' for' → logprob: -2.967221260070801
    4. '                   ' → logprob: -3.342221260070801
    5. 'for' → logprob: -4.092221260070801
    6. '               ' → logprob: -5.592221260070801
    7. ' bound' → logprob: -6.467221260070801
    8. 'bound' → logprob: -7.967221260070801
    9. '                       ' → logprob: -8.8422212600708
    10. ' ' → logprob: -9.2172212600708

Token 633: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.055092498660087585
    2. ' if' → logprob: -3.6800925731658936
    3. 'for' → logprob: -3.6800925731658936
    4. '                   ' → logprob: -6.5550923347473145
    5. ' for' → logprob: -6.9300923347473145
    6. 'bound' → logprob: -7.8050923347473145
    7. 'continue' → logprob: -9.430092811584473
    8. '               ' → logprob: -9.680092811584473
    9. '                       ' → logprob: -9.805092811584473
    10. '#' (adapté à ' #') → logprob: -9.805092811584473

Token 634: ' donc' (ID: 14206)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03132876008749008
    2. 'for' → logprob: -4.6563286781311035
    3. 'bound' → logprob: -5.0313286781311035
    4. 'max' → logprob: -5.4063286781311035
    5. ' if' → logprob: -5.5313286781311035
    6. 'Dp' → logprob: -6.0313286781311035
    7. 'upper' → logprob: -6.1563286781311035
    8. 'limit' → logprob: -6.9063286781311035
    9. '#' → logprob: -9.031329154968262
    10. ' upper' → logprob: -9.156329154968262

Token 635: ' si' (ID: 1784)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2642206847667694
    2. 'if' → logprob: -1.8892207145690918
    3. '(k' → logprob: -3.264220714569092
    4. 'bound' → logprob: -4.639220714569092
    5. 'n' → logprob: -4.764220714569092
    6. ' k' → logprob: -5.014220714569092
    7. '(n' → logprob: -5.139220714569092
    8. ' if' → logprob: -5.514220714569092
    9. 'Dp' → logprob: -6.014220714569092
    10. ' (' → logprob: -6.764220714569092

Token 636: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.042943235486745834
    2. ' k' → logprob: -3.417943239212036
    3. 'n' → logprob: -5.417943000793457
    4. '(k' → logprob: -6.042943000793457
    5. ' n' → logprob: -7.292943000793457
    6. '(n' → logprob: -7.542943000793457
    7. 'Dp' → logprob: -7.792943000793457
    8. 'bound' → logprob: -8.792943000793457
    9. ' (' → logprob: -9.292943000793457
    10. '(' → logprob: -9.417943000793457

Token 637: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6327886581420898
    2. '<=' → logprob: -0.7577886581420898
    3. '```' → logprob: -10.38278865814209
    4. 'k' → logprob: -10.75778865814209
    5. ')<=' → logprob: -10.75778865814209
    6. '<n' → logprob: -11.13278865814209
    7. 'e' → logprob: -11.25778865814209
    8. '<' → logprob: -11.25778865814209
    9. '==' → logprob: -11.75778865814209
    10. '=' → logprob: -11.75778865814209

Token 638: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0016787484055384994
    2. ' int' → logprob: -7.001678943634033
    3. '=int' → logprob: -7.376678943634033
    4. '=' → logprob: -10.126678466796875
    5. 'n' → logprob: -10.626678466796875
    6. '(int' → logprob: -10.876678466796875
    7. '10' → logprob: -11.001678466796875
    8. 'ord' → logprob: -11.376678466796875
    9. '9' → logprob: -12.126678466796875
    10. 'keta' → logprob: -12.251678466796875

Token 639: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00040576665196567774
    2. 'n' → logprob: -7.875405788421631
    3. '(' → logprob: -11.250405311584473
    4. ' (' → logprob: -12.000405311584473
    5. '[n' → logprob: -12.375405311584473
    6. ' n' → logprob: -14.000405311584473
    7. '(
' → logprob: -14.750405311584473
    8. '#' → logprob: -14.875405311584473
    9. '   ' → logprob: -16.37540626525879
    10. ' ' → logprob: -16.37540626525879

Token 640: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023882099776528776
    2. '[n' → logprob: -8.500238418579102
    3. '[' → logprob: -10.500238418579102
    4. '[k' → logprob: -13.250238418579102
    5. ')' → logprob: -13.375238418579102
    6. ' [' → logprob: -13.625238418579102
    7. 'n' → logprob: -14.125238418579102
    8. '```' → logprob: -14.250238418579102
    9. '[j' → logprob: -14.875238418579102
    10. '(i' → logprob: -14.875238418579102

Token 641: ']),' (ID: 19560)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1104394793510437
    2. '])' → logprob: -2.4854395389556885
    3. ']):' → logprob: -4.110439300537109
    4. '[' → logprob: -6.485439300537109
    5. ']),' → logprob: -6.610439300537109
    6. ']' → logprob: -6.985439300537109
    7. ']):
' → logprob: -7.610439300537109
    8. '[j' → logprob: -9.48543930053711
    9. ']))' → logprob: -9.61043930053711
    10. '])):
' → logprob: -9.61043930053711

Token 642: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.513785481452942
    2. ':' → logprob: -1.638785481452942
    3. ' if' → logprob: -1.638785481452942
    4. ' continue' → logprob: -2.0137853622436523
    5. 'continue' → logprob: -2.3887853622436523
    6. ' and' → logprob: -2.8887853622436523
    7. '                           ' → logprob: -3.5137853622436523
    8. '                               ' → logprob: -4.138785362243652
    9. ' or' → logprob: -4.138785362243652
    10. '                       ' → logprob: -4.638785362243652

Token 643: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.18980412185192108
    2. ' k' → logprob: -3.1898040771484375
    3. 'if' → logprob: -3.3148040771484375
    4. ' if' → logprob: -3.5648040771484375
    5. 'n' → logprob: -4.1898040771484375
    6. 'Dp' → logprob: -4.3148040771484375
    7. 'continue' → logprob: -4.3148040771484375
    8. ' continue' → logprob: -4.8148040771484375
    9. ' n' → logprob: -5.8148040771484375
    10. 'bound' → logprob: -5.9398040771484375

Token 644: ' passe' (ID: 22210)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9760208129882812
    2. 'continue' → logprob: -0.9760208129882812
    3. ' peux' → logprob: -2.9760208129882812
    4. 's' → logprob: -3.7260208129882812
    5. '#' → logprob: -3.8510208129882812
    6. ' peut' → logprob: -3.9760208129882812
    7. 'pe' → logprob: -3.9760208129882812
    8. 'k' → logprob: -4.476020812988281
    9. 'break' → logprob: -4.726020812988281
    10. '<' → logprob: -4.976020812988281

Token 645: ' dans' (ID: 2671)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2017087936401367
    2. 'Dp' → logprob: -1.4517087936401367
    3. ' ' → logprob: -1.7017087936401367
    4. 'bound' → logprob: -2.7017087936401367
    5. ' to' → logprob: -3.2017087936401367
    6. 'to' → logprob: -3.2017087936401367
    7. '=' → logprob: -3.8267087936401367
    8. ' bound' → logprob: -4.076708793640137
    9. '1' → logprob: -4.201708793640137
    10. '               ' → logprob: -4.326708793640137

Token 646: ' zone' (ID: 15070)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026865271851420403
    2. 'Dp' → logprob: -3.776865243911743
    3. ' ' → logprob: -5.901865482330322
    4. 'bound' → logprob: -7.901865482330322
    5. '[' → logprob: -8.651865005493164
    6. '1' → logprob: -10.339365005493164
    7. '```' → logprob: -10.401865005493164
    8. 'DP' → logprob: -10.589365005493164
    9. '(' → logprob: -10.776865005493164
    10. ' bound' → logprob: -10.776865005493164

Token 647: ' libre' (ID: 25486)
  Prédit: ' libre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' libre' → logprob: -1.025322675704956
    2. ' =' → logprob: -1.525322675704956
    3. 'free' → logprob: -2.275322675704956
    4. '0' → logprob: -2.275322675704956
    5. ' ' → logprob: -2.775322675704956
    6. '=' → logprob: -3.525322675704956
    7. '[' → logprob: -3.650322675704956
    8. 'lib' → logprob: -3.775322675704956
    9. '_free' → logprob: -3.900322675704956
    10. 'b' → logprob: -5.025322914123535

Token 648: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4599835276603699
    2. ' and' → logprob: -1.8349835872650146
    3. ' or' → logprob: -2.0849835872650146
    4. '               ' → logprob: -3.8349835872650146
    5. '           ' → logprob: -4.0849833488464355
    6. 'and' → logprob: -4.5849833488464355
    7. ' if' → logprob: -4.9599833488464355
    8. ',' → logprob: -5.0849833488464355
    9. ' :' → logprob: -5.2099833488464355
    10. ':
' → logprob: -5.3349833488464355

Token 649: 'bound' (ID: 18791)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5744678974151611
    2. '1' → logprob: -1.9494678974151611
    3. 'Dp' → logprob: -2.324467897415161
    4. ')' → logprob: -2.574467897415161
    5. ' ' → logprob: -3.699467897415161
    6. 'k' → logprob: -3.824467897415161
    7. 'bound' → logprob: -4.324467658996582
    8. 'if' → logprob: -4.324467658996582
    9. '):
' → logprob: -5.324467658996582
    10. ' k' → logprob: -5.449467658996582

Token 650: ' ' (ID: 220)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7095386385917664
    2. ' ==' → logprob: -1.0845386981964111
    3. ']' → logprob: -2.709538698196411
    4. '])' → logprob: -3.084538698196411
    5. ')' → logprob: -3.834538698196411
    6. ']==' → logprob: -4.209538459777832
    7. ' and' → logprob: -5.084538459777832
    8. '=' → logprob: -6.084538459777832
    9. '0' → logprob: -6.834538459777832
    10. ' or' → logprob: -6.959538459777832

Token 651: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18755567073822021
    2. '0' → logprob: -2.4375557899475098
    3. ' =' → logprob: -2.8125557899475098
    4. '==' → logprob: -4.56255578994751
    5. ' ==' → logprob: -4.68755578994751
    6. ')' → logprob: -6.68755578994751
    7. ' ' → logprob: -7.56255578994751
    8. '           ' → logprob: -8.187555313110352
    9. ']' → logprob: -8.312555313110352
    10. '[' → logprob: -8.312555313110352

Token 652: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0461227893829346
    2. ')' → logprob: -1.1711227893829346
    3. '):
' → logprob: -2.4211227893829346
    4. '               ' → logprob: -2.5461227893829346
    5. ':' → logprob: -2.6711227893829346
    6. '           ' → logprob: -3.6711227893829346
    7. ' and' → logprob: -3.7961227893829346
    8. ' or' → logprob: -4.1711225509643555
    9. '                   ' → logprob: -4.2961225509643555
    10. '                       ' → logprob: -5.1711225509643555

Token 653: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3795118033885956
    2. '           ' → logprob: -1.754511833190918
    3. '               ' → logprob: -2.879511833190918
    4. ' and' → logprob: -3.754511833190918
    5. '                       ' → logprob: -4.504511833190918
    6. '                   ' → logprob: -4.879511833190918
    7. 'if' → logprob: -4.879511833190918
    8. ':
' → logprob: -5.004511833190918
    9. ' or' → logprob: -5.129511833190918
    10. 'and' → logprob: -5.254511833190918

Token 654: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3233833312988281
    2. 'if' (adapté à ' if') → logprob: -1.4483833312988281
    3. ':' → logprob: -1.6983833312988281
    4. ' if' → logprob: -1.8233833312988281
    5. '           ' → logprob: -2.323383331298828
    6. '                   ' → logprob: -4.073383331298828
    7. '                       ' → logprob: -4.823383331298828
    8. ':
' → logprob: -4.823383331298828
    9. ' :' → logprob: -5.073383331298828
    10. '                           ' → logprob: -6.198383331298828

Token 655: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014495131559669971
    2. ' k' → logprob: -4.264494895935059
    3. 'int' → logprob: -8.889494895935059
    4. 'Dp' → logprob: -9.514494895935059
    5. ' ' → logprob: -10.764494895935059
    6. '0' → logprob: -10.764494895935059
    7. ' int' → logprob: -11.014494895935059
    8. '(k' → logprob: -11.389494895935059
    9. '   ' → logprob: -11.514494895935059
    10. 'n' → logprob: -11.639494895935059

Token 656: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09542535245418549
    2. '<' → logprob: -2.4704253673553467
    3. ' <=' → logprob: -5.220425128936768
    4. '<=' → logprob: -7.595425128936768
    5. ' ' → logprob: -8.470425605773926
    6. ' ==' → logprob: -9.220425605773926
    7. '<n' → logprob: -9.470425605773926
    8. '<int' → logprob: -9.845425605773926
    9. '==' → logprob: -10.970425605773926
    10. ')' → logprob: -11.220425605773926

Token 657: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005234713666141033
    2. ' int' → logprob: -5.255234718322754
    3. '=int' → logprob: -15.005234718322754
    4. '(int' → logprob: -15.880234718322754
    5. ' ' → logprob: -16.130233764648438
    6. '[int' → logprob: -16.755233764648438
    7. '	int' → logprob: -16.880233764648438
    8. '10' → logprob: -17.005233764648438
    9. '0' → logprob: -17.130233764648438
    10. '   ' → logprob: -17.380233764648438

Token 658: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5570885807392187e-05
    2. '(' → logprob: -11.750015258789062
    3. 'n' → logprob: -11.875015258789062
    4. ' (' → logprob: -14.375015258789062
    5. ' n' → logprob: -17.250015258789062
    6. '(
' → logprob: -17.625015258789062
    7. '[n' → logprob: -18.625015258789062
    8. '((' → logprob: -21.250015258789062
    9. '	n' → logprob: -21.375015258789062
    10. 's' → logprob: -21.500015258789062

Token 659: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001519325451226905
    2. '[' → logprob: -8.875151634216309
    3. ' [' → logprob: -12.125151634216309
    4. '[n' → logprob: -12.375151634216309
    5. '[k' → logprob: -13.875151634216309
    6. '[I' → logprob: -14.500151634216309
    7. ')' → logprob: -15.125151634216309
    8. '[j' → logprob: -15.125151634216309
    9. '[
' → logprob: -16.500152587890625
    10. 'i' → logprob: -16.875152587890625

Token 660: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.11691983789205551
    2. ']):
' → logprob: -2.491919755935669
    3. '):' → logprob: -4.741919994354248
    4. '])' → logprob: -5.116919994354248
    5. ']' → logprob: -5.241919994354248
    6. '[i' → logprob: -5.366919994354248
    7. ')' → logprob: -6.241919994354248
    8. '):
' → logprob: -7.991919994354248
    9. ')]' → logprob: -9.24191951751709
    10. '[' → logprob: -9.49191951751709

Token 661: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11778440326452255
    2. ' :' → logprob: -3.1177845001220703
    3. '                   ' → logprob: -3.9927845001220703
    4. ':
' → logprob: -3.9927845001220703
    5. '               ' → logprob: -4.49278450012207
    6. '                       ' → logprob: -4.86778450012207
    7. '                           ' → logprob: -5.74278450012207
    8. '                               ' → logprob: -5.74278450012207
    9. ' :
' → logprob: -6.49278450012207
    10. '):' → logprob: -7.61778450012207

Token 662: ' #' (ID: 1069)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.07535353302955627
    2. '                       ' → logprob: -2.8253536224365234
    3. '                   ' → logprob: -4.700353622436523
    4. '                           ' → logprob: -6.700353622436523
    5. '                               ' → logprob: -7.450353622436523
    6. ' for' → logprob: -8.200353622436523
    7. '               ' → logprob: -8.325353622436523
    8. '0' → logprob: -8.450353622436523
    9. '	D' → logprob: -8.700353622436523
    10. ' D' → logprob: -8.700353622436523

Token 663: '    ' (ID: 257)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -2.570319702499546e-05
    2. 'for' → logprob: -11.500025749206543
    3. '                   ' → logprob: -12.125025749206543
    4. '                       ' → logprob: -12.875025749206543
    5. ' for' → logprob: -13.250025749206543
    6. 'Dj' → logprob: -13.500025749206543
    7. 'DP' → logprob: -14.125025749206543
    8. '                           ' → logprob: -14.250025749206543
    9. 'dp' → logprob: -14.875025749206543
    10. 'Dv' → logprob: -15.000025749206543

Token 664: ' -' (ID: 533)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.6405310816480778e-05
    2. ' D' → logprob: -11.750016212463379
    3. '                   ' → logprob: -12.875016212463379
    4. 'if' → logprob: -14.125016212463379
    5. '                       ' → logprob: -14.125016212463379
    6. 'for' → logprob: -14.125016212463379
    7. 'Dj' → logprob: -14.375016212463379
    8. 'Dn' → logprob: -15.125016212463379
    9. '                           ' → logprob: -15.250016212463379
    10. 'DP' → logprob: -15.250016212463379

Token 665: ' On' (ID: 2160)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.001541046192869544
    2. ' D' → logprob: -6.6265411376953125
    3. '0' → logprob: -9.751541137695312
    4. '                   ' → logprob: -10.501541137695312
    5. '                       ' → logprob: -10.501541137695312
    6. '   ' → logprob: -11.376541137695312
    7. '                           ' → logprob: -11.376541137695312
    8. 'D' → logprob: -11.626541137695312
    9. 'for' → logprob: -12.251541137695312
    10. ' ' → logprob: -12.501541137695312

Token 666: ' ajoute' (ID: 91611)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.007839066907763481
    2. 'for' → logprob: -6.132839202880859
    3. ' D' → logprob: -7.132839202880859
    4. '[' → logprob: -7.382839202880859
    5. '][' → logprob: -7.507839202880859
    6. ']' → logprob: -7.882839202880859
    7. '=' → logprob: -8.00783920288086
    8. '+=' → logprob: -8.00783920288086
    9. 'D' → logprob: -8.38283920288086
    10. ' +=' → logprob: -8.50783920288086

Token 667: ' tous' (ID: 10688)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.006887053605169058
    2. ' D' → logprob: -5.006886959075928
    3. '                   ' → logprob: -9.881887435913086
    4. '                       ' → logprob: -10.506887435913086
    5. '                           ' → logprob: -11.006887435913086
    6. '   ' → logprob: -11.256887435913086
    7. '               ' → logprob: -11.506887435913086
    8. 'dp' → logprob: -12.006887435913086
    9. '0' → logprob: -12.131887435913086
    10. '                               ' → logprob: -12.506887435913086

Token 668: ' les' (ID: 1341)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.005860770586878061
    2. '(D' → logprob: -6.005860805511475
    3. ' D' → logprob: -6.255860805511475
    4. '[' → logprob: -8.005860328674316
    5. '[D' → logprob: -8.255860328674316
    6. '(' → logprob: -9.255860328674316
    7. '   ' → logprob: -9.380860328674316
    8. 'dp' → logprob: -9.380860328674316
    9. '           ' → logprob: -9.630860328674316
    10. '               ' → logprob: -9.755860328674316

Token 669: ' cas' (ID: 2108)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.002061045728623867
    2. ' D' → logprob: -7.002060890197754
    3. 'for' → logprob: -8.502060890197754
    4. '[' → logprob: -9.002060890197754
    5. 'dp' → logprob: -9.002060890197754
    6. 'DP' → logprob: -9.752060890197754
    7. 'k' → logprob: -10.127060890197754
    8. '1' → logprob: -10.252060890197754
    9. '[D' → logprob: -10.252060890197754
    10. 'D' → logprob: -10.252060890197754

Token 670: ' où' (ID: 15113)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4787518382072449
    2. '                   ' → logprob: -1.4787518978118896
    3. 'Dp' → logprob: -2.7287518978118896
    4. ' for' → logprob: -3.9787518978118896
    5. 'for' → logprob: -4.1037516593933105
    6. '[' → logprob: -4.3537516593933105
    7. '                           ' → logprob: -4.6037516593933105
    8. '(dp' → logprob: -5.1037516593933105
    9. ' =' → logprob: -5.9787516593933105
    10. '                               ' → logprob: -6.2287516593933105

Token 671: ' on' (ID: 402)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.03385787829756737
    2. ' D' → logprob: -3.408857822418213
    3. '               ' → logprob: -10.408858299255371
    4. '   ' → logprob: -10.408858299255371
    5. '0' → logprob: -10.533858299255371
    6. '           ' → logprob: -10.658858299255371
    7. 'D' → logprob: -10.908858299255371
    8. 'Dn' → logprob: -11.533858299255371
    9. 'i' → logprob: -11.658858299255371
    10. 'DP' → logprob: -12.033858299255371

Token 672: ' était' (ID: 16647)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.010435269214212894
    2. 'continue' → logprob: -6.010435104370117
    3. 'n' → logprob: -7.010435104370117
    4. ' continue' → logprob: -7.260435104370117
    5. '#' → logprob: -7.510435104370117
    6. 'contin' → logprob: -7.635435104370117
    7. 'a' → logprob: -8.260435104370117
    8. 's' → logprob: -8.260435104370117
    9. '           ' → logprob: -8.385435104370117
    10. '[' → logprob: -8.385435104370117

Token 673: ' déjà' (ID: 21229)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.002346157329156995
    2. ' D' → logprob: -6.627346038818359
    3. '0' → logprob: -8.00234603881836
    4. '                   ' → logprob: -8.37734603881836
    5. '               ' → logprob: -9.12734603881836
    6. '                       ' → logprob: -9.62734603881836
    7. '[' → logprob: -10.12734603881836
    8. ' ' → logprob: -10.37734603881836
    9. '                           ' → logprob: -10.75234603881836
    10. '           ' → logprob: -10.75234603881836

Token 674: ' en' (ID: 469)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0024376162327826023
    2. '0' → logprob: -6.377437591552734
    3. 'bound' → logprob: -8.752437591552734
    4. ' D' → logprob: -9.127437591552734
    5. 'free' → logprob: -9.252437591552734
    6. 'lib' → logprob: -9.502437591552734
    7. ' libre' → logprob: -10.002437591552734
    8. ' ' → logprob: -10.252437591552734
    9. '   ' → logprob: -10.377437591552734
    10. '[' → logprob: -10.627437591552734

Token 675: ' zone' (ID: 15070)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.06623949110507965
    2. 'bound' → logprob: -3.441239595413208
    3. '0' → logprob: -3.816239595413208
    4. ' D' → logprob: -5.941239356994629
    5. '[' → logprob: -6.066239356994629
    6. 'free' → logprob: -6.441239356994629
    7. ' bound' → logprob: -6.566239356994629
    8. 'D' → logprob: -7.066239356994629
    9. ' ' → logprob: -7.941239356994629
    10. ' free' → logprob: -8.691239356994629

Token 676: ' libre' (ID: 25486)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6371745467185974
    2. ' libre' → logprob: -0.8871745467185974
    3. 'lib' → logprob: -3.512174606323242
    4. 'free' → logprob: -4.137174606323242
    5. ' ' → logprob: -4.512174606323242
    6. ' free' → logprob: -7.137174606323242
    7. 'Libre' → logprob: -7.887174606323242
    8. ' libres' → logprob: -8.262174606323242
    9. '   ' → logprob: -8.387174606323242
    10. '```' → logprob: -8.512174606323242

Token 677: ' (' (ID: 350)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.5825093984603882
    2. '                   ' → logprob: -1.7075093984603882
    3. '
' → logprob: -2.4575095176696777
    4. '                       ' → logprob: -2.8325095176696777
    5. '                           ' → logprob: -3.3325095176696777
    6. ' for' → logprob: -4.082509517669678
    7. '               ' → logprob: -4.082509517669678
    8. ':
' → logprob: -4.332509517669678
    9. 'for' → logprob: -4.582509517669678
    10. '[' → logprob: -4.832509517669678

Token 678: 'bound' (ID: 18791)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.22739863395690918
    2. '0' → logprob: -2.352398633956909
    3. 'for' → logprob: -2.602398633956909
    4. 'j' → logprob: -4.977398872375488
    5. 'i' → logprob: -4.977398872375488
    6. ' for' → logprob: -5.477398872375488
    7. ' ' → logprob: -5.602398872375488
    8. ')' → logprob: -6.602398872375488
    9. ' D' → logprob: -6.852398872375488
    10. 'D' → logprob: -6.852398872375488

Token 679: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06331602483987808
    2. '][' → logprob: -3.5633161067962646
    3. '[' → logprob: -3.8133161067962646
    4. ' ' → logprob: -5.3133158683776855
    5. '=' → logprob: -5.9383158683776855
    6. '==' → logprob: -7.3133158683776855
    7. ']' → logprob: -7.6883158683776855
    8. ' [' → logprob: -7.9383158683776855
    9. '               ' → logprob: -8.188316345214844
    10. '           ' → logprob: -8.313316345214844

Token 680: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009924896992743015
    2. '1' → logprob: -5.75992488861084
    3. '][' → logprob: -5.88492488861084
    4. ' ' → logprob: -6.25992488861084
    5. '[' → logprob: -6.75992488861084
    6. '=' → logprob: -8.88492488861084
    7. '
' → logprob: -9.25992488861084
    8. '```' → logprob: -9.25992488861084
    9. ')' → logprob: -9.50992488861084
    10. ']' → logprob: -9.63492488861084

Token 681: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04175533726811409
    2. '                       ' → logprob: -4.041755199432373
    3. '               ' → logprob: -5.041755199432373
    4. 'for' → logprob: -5.291755199432373
    5. '                           ' → logprob: -5.916755199432373
    6. ',' → logprob: -6.041755199432373
    7. '           ' → logprob: -6.541755199432373
    8. ')' → logprob: -7.041755199432373
    9. ' for' → logprob: -7.041755199432373
    10. ']' → logprob: -7.291755199432373

Token 682: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.531300961971283
    2. '                       ' → logprob: -1.1563010215759277
    3. '                           ' → logprob: -3.2813010215759277
    4. '               ' → logprob: -3.7813010215759277
    5. ' for' → logprob: -4.656301021575928
    6. '                               ' → logprob: -4.781301021575928
    7. 'for' → logprob: -5.156301021575928
    8. ' and' → logprob: -6.406301021575928
    9. ':' → logprob: -6.781301021575928
    10. ',' → logprob: -6.906301021575928

Token 683: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.017226237803697586
    2. '                       ' → logprob: -4.267226219177246
    3. '                   ' → logprob: -6.392226219177246
    4. '                           ' → logprob: -7.267226219177246
    5. '                               ' → logprob: -8.392226219177246
    6. 'for' → logprob: -9.142226219177246
    7. ' for' → logprob: -9.267226219177246
    8. ' D' → logprob: -10.017226219177246
    9. '                     ' → logprob: -10.517226219177246
    10. 'Dj' → logprob: -10.767226219177246

Token 684: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.961759259458631e-06
    2. '[i' → logprob: -12.625004768371582
    3. '[p' → logprob: -13.875004768371582
    4. ' p' → logprob: -14.875004768371582
    5. 'Dp' → logprob: -16.2500057220459
    6. '```' → logprob: -17.1250057220459
    7. '[' → logprob: -17.3750057220459
    8. 'P' → logprob: -17.5000057220459
    9. '   ' → logprob: -18.0000057220459
    10. '
' → logprob: -18.2500057220459

Token 685: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.968312951968983e-06
    2. '[' → logprob: -11.875009536743164
    3. ' [' → logprob: -14.375009536743164
    4. 'Dp' → logprob: -14.500009536743164
    5. '[j' → logprob: -15.000009536743164
    6. 'i' → logprob: -15.000009536743164
    7. '[I' → logprob: -15.125009536743164
    8. '[k' → logprob: -15.625009536743164
    9. '```' → logprob: -15.750009536743164
    10. '][' → logprob: -15.750009536743164

Token 686: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004330532974563539
    2. ' ][' → logprob: -8.000432968139648
    3. ']' → logprob: -10.375432968139648
    4. '+' → logprob: -11.125432968139648
    5. ' ' → logprob: -11.250432968139648
    6. '[' → logprob: -11.250432968139648
    7. '[i' → logprob: -11.375432968139648
    8. '   ' → logprob: -11.750432968139648
    9. ']][' → logprob: -13.875432968139648
    10. '][_' → logprob: -14.250432968139648

Token 687: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.158350151963532e-05
    2. 'j' → logprob: -10.125061988830566
    3. '][' → logprob: -11.125061988830566
    4. ' ' → logprob: -12.125061988830566
    5. '   ' → logprob: -14.250061988830566
    6. '[j' → logprob: -15.750061988830566
    7. '0' → logprob: -15.750061988830566
    8. '[' → logprob: -17.12506103515625
    9. 'k' → logprob: -17.37506103515625
    10. '       ' → logprob: -17.62506103515625

Token 688: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004552215104922652
    2. ']' → logprob: -8.125454902648926
    3. '[' → logprob: -9.500454902648926
    4. ' ][' → logprob: -10.000454902648926
    5. ' ' → logprob: -12.000454902648926
    6. '[j' → logprob: -12.250454902648926
    7. '   ' → logprob: -12.375454902648926
    8. '                   ' → logprob: -12.875454902648926
    9. '[i' → logprob: -13.000454902648926
    10. ']][' → logprob: -13.000454902648926

Token 689: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.941850526549388e-06
    2. ' j' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.875007629394531
    4. '0' → logprob: -14.375007629394531
    5. '	j' → logprob: -15.250007629394531
    6. '[j' → logprob: -15.500007629394531
    7. '_j' → logprob: -16.00000762939453
    8. ' ' → logprob: -16.87500762939453
    9. '(j' → logprob: -16.87500762939453
    10. '           ' → logprob: -17.12500762939453

Token 690: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002237566513940692
    2. '[' → logprob: -6.127237796783447
    3. ' ][' → logprob: -10.627237319946289
    4. ']' → logprob: -11.002237319946289
    5. '0' → logprob: -12.752237319946289
    6. '   ' → logprob: -13.377237319946289
    7. ']+=' → logprob: -13.377237319946289
    8. ' ' → logprob: -13.877237319946289
    9. '=' → logprob: -14.502237319946289
    10. '+' → logprob: -14.752237319946289

Token 691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. '1' → logprob: -11.25001335144043
    3. ' ' → logprob: -16.37501335144043
    4. '   ' → logprob: -17.00001335144043
    5. '۰' → logprob: -17.62501335144043
    6. '```' → logprob: -18.25001335144043
    7. '(' → logprob: -18.81251335144043
    8. '０' → logprob: -18.93751335144043
    9. 'k' → logprob: -19.18751335144043
    10. '`' → logprob: -19.25001335144043

Token 692: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12698008120059967
    2. ']+=' → logprob: -2.1269800662994385
    3. ']+' → logprob: -11.00197982788086
    4. '+=' → logprob: -11.00197982788086
    5. ' ]' → logprob: -11.50197982788086
    6. '+' → logprob: -12.50197982788086
    7. '+]' → logprob: -12.75197982788086
    8. ' +=' → logprob: -15.00197982788086
    9. ')' → logprob: -15.00197982788086
    10. '           ' → logprob: -15.25197982788086

Token 693: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.010226419195532799
    2. ' +=' → logprob: -4.760226249694824
    3. ']+=' → logprob: -6.760226249694824
    4. '=' → logprob: -7.760226249694824
    5. '+' → logprob: -10.885226249694824
    6. '+=(' → logprob: -13.260226249694824
    7. '[' → logprob: -13.885226249694824
    8. ']' → logprob: -13.885226249694824
    9. '```' → logprob: -14.135226249694824
    10. '   ' → logprob: -14.385226249694824

Token 694: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -8.180258191714529e-06
    2. ' D' → logprob: -12.625008583068848
    3. '   ' → logprob: -12.875008583068848
    4. ' ' → logprob: -14.125008583068848
    5. '  ' → logprob: -14.375008583068848
    6. '	D' → logprob: -15.000008583068848
    7. 'sum' → logprob: -16.12500762939453
    8. 'DP' → logprob: -16.12500762939453
    9. '0' → logprob: -16.25000762939453
    10. '    ' → logprob: -16.37500762939453

Token 695: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.128163257315464e-07
    2. '[p' → logprob: -16.75
    3. '<p' → logprob: -17.25
    4. 'Dp' → logprob: -17.75
    5. '```' → logprob: -17.8125
    6. 'P' → logprob: -18.125
    7. 'п' → logprob: -18.375
    8. ' p' → logprob: -18.375
    9. '*p' → logprob: -18.5625
    10. '<|end|>' → logprob: -19.125

Token 696: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3544423381972592e-05
    2. 'i' → logprob: -11.25001335144043
    3. ' i' → logprob: -16.00001335144043
    4. '```' → logprob: -16.12501335144043
    5. '[j' → logprob: -16.50001335144043
    6. 's' → logprob: -17.25001335144043
    7. '[I' → logprob: -17.37501335144043
    8. ' [' → logprob: -17.37501335144043
    9. '][' → logprob: -17.62501335144043
    10. '<|end|>' → logprob: -18.00001335144043

Token 697: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.31852987408638
    2. '[i' → logprob: -1.3185298442840576
    3. '[' → logprob: -5.443530082702637
    4. 'i' → logprob: -7.443530082702637
    5. '[j' → logprob: -8.943530082702637
    6. '[user' → logprob: -9.818530082702637
    7. ']' → logprob: -11.068530082702637
    8. '<|end|>' → logprob: -11.193530082702637
    9. '][_' → logprob: -11.318530082702637
    10. ''][' → logprob: -11.318530082702637

Token 698: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.625001907348633
    3. '0' → logprob: -14.500001907348633
    4. 'k' → logprob: -15.500001907348633
    5. '	j' → logprob: -15.875001907348633
    6. ' ' → logprob: -16.500001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '[j' → logprob: -18.125001907348633
    9. '  ' → logprob: -18.750001907348633
    10. '$j' → logprob: -18.750001907348633

Token 699: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12705819308757782
    2. '[' → logprob: -2.127058267593384
    3. '0' → logprob: -9.252058029174805
    4. ']' → logprob: -11.252058029174805
    5. ' ][' → logprob: -11.627058029174805
    6. '}[' → logprob: -12.627058029174805
    7. ')[' → logprob: -13.252058029174805
    8. ' [' → logprob: -13.252058029174805
    9. ''][' → logprob: -13.502058029174805
    10. '"][' → logprob: -14.502058029174805

Token 700: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004309076175559312
    2. '1' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.437931060791016
    4. ' ' → logprob: -17.062931060791016
    5. '۰' → logprob: -17.125431060791016
    6. 'bound' → logprob: -17.375431060791016
    7. '[' → logprob: -17.437931060791016
    8. ']' → logprob: -17.875431060791016
    9. '```' → logprob: -18.375431060791016
    10. '０' → logprob: -18.437931060791016

Token 701: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00471100676804781
    2. ']+' → logprob: -6.004711151123047
    3. ']
' → logprob: -6.379711151123047
    4. ' ]' → logprob: -8.254711151123047
    5. '           ' → logprob: -8.629711151123047
    6. '               ' → logprob: -10.129711151123047
    7. '                   ' → logprob: -11.004711151123047
    8. '+' → logprob: -11.254711151123047
    9. ']+=' → logprob: -11.504711151123047
    10. ']
' → logprob: -12.129711151123047

Token 702: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4855768084526062
    2. '
' → logprob: -1.985576868057251
    3. '                    
' → logprob: -2.235576868057251
    4. '               ' → logprob: -2.610576868057251
    5. ' 
' → logprob: -4.360576629638672
    6. '  
' → logprob: -4.735576629638672
    7. '           ' → logprob: -4.985576629638672
    8. '                    ' → logprob: -5.235576629638672
    9. '				' → logprob: -5.360576629638672
    10. '                        
' → logprob: -5.485576629638672

Token 703: ' #' (ID: 1069)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.5938209891319275
    2. '                   ' → logprob: -0.8438209891319275
    3. '               ' → logprob: -4.468821048736572
    4. '           ' → logprob: -5.843821048736572
    5. '                    
' → logprob: -7.468821048736572
    6. '
' → logprob: -7.468821048736572
    7. '                    ' → logprob: -8.093820571899414
    8. '+' → logprob: -8.343820571899414
    9. '                ' → logprob: -8.343820571899414
    10. '                  ' → logprob: -8.718820571899414

Token 704: '    ' (ID: 257)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.08176289498806
    2. '                   ' → logprob: -2.5817627906799316
    3. '               ' → logprob: -6.206762790679932
    4. '           ' → logprob: -8.33176326751709
    5. ' D' → logprob: -8.83176326751709
    6. '                  ' → logprob: -9.95676326751709
    7. '                ' → logprob: -10.08176326751709
    8. '   ' → logprob: -10.20676326751709
    9. '                    ' → logprob: -10.20676326751709
    10. '                 ' → logprob: -10.20676326751709

Token 705: ' -' (ID: 533)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.044591210782527924
    2. '                   ' → logprob: -3.794591188430786
    3. '               ' → logprob: -4.794591426849365
    4. ' D' → logprob: -5.169591426849365
    5. '           ' → logprob: -5.544591426849365
    6. '                ' → logprob: -7.419591426849365
    7. ' ' → logprob: -8.169590950012207
    8. '                    ' → logprob: -8.419590950012207
    9. ' ' → logprob: -8.544590950012207
    10. '
' → logprob: -8.669590950012207

Token 706: ' On' (ID: 2160)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0006621609791181982
    2. ' D' → logprob: -7.375662326812744
    3. '   ' → logprob: -11.375661849975586
    4. 'for' → logprob: -12.250661849975586
    5. '           ' → logprob: -12.625661849975586
    6. 'DP' → logprob: -13.000661849975586
    7. '               ' → logprob: -13.000661849975586
    8. ' ' → logprob: -13.625661849975586
    9. '       ' → logprob: -13.750661849975586
    10. '    ' → logprob: -13.750661849975586

Token 707: ' ajoute' (ID: 91611)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.00030078491545282304
    2. '+=' → logprob: -9.125300407409668
    3. ' +=' → logprob: -9.750300407409668
    4. 'continue' → logprob: -10.750300407409668
    5. 'dp' → logprob: -11.625300407409668
    6. '                   ' → logprob: -11.625300407409668
    7. '           ' → logprob: -11.625300407409668
    8. 'for' → logprob: -11.875300407409668
    9. ']+=' → logprob: -11.875300407409668
    10. ' also' → logprob: -12.000300407409668

Token 708: ' aussi' (ID: 9894)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.47635558247566223
    2. ' D' → logprob: -0.9763555526733398
    3. '	D' → logprob: -6.60135555267334
    4. '(D' → logprob: -8.10135555267334
    5. ' ' → logprob: -8.85135555267334
    6. ' ' → logprob: -9.22635555267334
    7. '   ' → logprob: -9.35135555267334
    8. ' Dj' → logprob: -9.85135555267334
    9. 'Dj' → logprob: -10.35135555267334
    10. '    ' → logprob: -10.47635555267334

Token 709: ' tous' (ID: 10688)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.014280802570283413
    2. ' D' → logprob: -4.264280796051025
    3. '	D' → logprob: -11.014281272888184
    4. ' ' → logprob: -11.139281272888184
    5. 'Dj' → logprob: -11.264281272888184
    6. '   ' → logprob: -11.389281272888184
    7. 'DP' → logprob: -11.514281272888184
    8. '(D' → logprob: -11.639281272888184
    9. '                   ' → logprob: -12.139281272888184
    10. 'Dn' → logprob: -12.264281272888184

Token 710: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.812046468257904
    2. '(D' → logprob: -1.0620465278625488
    3. 'Dp' → logprob: -1.6870465278625488
    4. '[' → logprob: -4.562046527862549
    5. ' les' → logprob: -5.187046527862549
    6. ' ' → logprob: -6.437046527862549
    7. 'le' → logprob: -6.687046527862549
    8. '(' → logprob: -6.812046527862549
    9. '[D' → logprob: -6.937046527862549
    10. 'the' → logprob: -7.562046527862549

Token 711: ' cas' (ID: 2108)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.0325924449716695e-05
    2. 'for' → logprob: -12.25001049041748
    3. 'Dn' → logprob: -13.37501049041748
    4. '[i' → logprob: -14.00001049041748
    5. 'DP' → logprob: -14.12501049041748
    6. 'Dj' → logprob: -14.62501049041748
    7. 'Dt' → logprob: -14.75001049041748
    8. '[' → logprob: -14.87501049041748
    9. '
' → logprob: -15.87501049041748
    10. ' for' → logprob: -16.000009536743164

Token 712: ' où' (ID: 15113)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01394569780677557
    2. '                   ' → logprob: -4.763945579528809
    3. '               ' → logprob: -6.013945579528809
    4. '[' → logprob: -6.138945579528809
    5. '           ' → logprob: -8.263945579528809
    6. '                       ' → logprob: -9.013945579528809
    7. '[j' → logprob: -9.388945579528809
    8. 'où' → logprob: -9.888945579528809
    9. '(i' → logprob: -11.263945579528809
    10. '                           ' → logprob: -11.388945579528809

Token 713: ' on' (ID: 402)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.009784658439457417
    2. ' D' → logprob: -4.634784698486328
    3. '[i' → logprob: -12.009784698486328
    4. 'i' → logprob: -12.384784698486328
    5. 'Dn' → logprob: -12.634784698486328
    6. ' ' → logprob: -13.009784698486328
    7. '	D' → logprob: -13.009784698486328
    8. ' i' → logprob: -13.134784698486328
    9. '   ' → logprob: -13.509784698486328
    10. '[' → logprob: -14.009784698486328

Token 714: ' était' (ID: 16647)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007168204989284277
    2. 'i' → logprob: -6.007168292999268
    3. 'Dp' → logprob: -6.507168292999268
    4. '```' → logprob: -6.507168292999268
    5. '[' → logprob: -6.757168292999268
    6. ' i' → logprob: -9.50716781616211
    7. 'dp' → logprob: -9.63216781616211
    8. ' ' → logprob: -9.63216781616211
    9. '1' → logprob: -9.75716781616211
    10. ' [' → logprob: -10.13216781616211

Token 715: ' encore' (ID: 14043)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005186082329601049
    2. 'Dp' → logprob: -5.505186080932617
    3. 'i' → logprob: -7.005186080932617
    4. '```' → logprob: -10.380186080932617
    5. '(i' → logprob: -10.505186080932617
    6. '0' → logprob: -10.755186080932617
    7. ' ' → logprob: -11.380186080932617
    8. '                   ' → logprob: -11.505186080932617
    9. '               ' → logprob: -11.505186080932617
    10. '[' → logprob: -11.505186080932617

Token 716: ' à' (ID: 1221)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.3321773409843445
    2. '1' → logprob: -2.0821774005889893
    3. '0' → logprob: -2.9571774005889893
    4. 'à' → logprob: -3.3321774005889893
    5. '[i' → logprob: -3.5821774005889893
    6. 'bound' → logprob: -4.08217716217041
    7. ' ' → logprob: -4.95717716217041
    8. '[' → logprob: -5.20717716217041
    9. ' à' → logprob: -5.33217716217041
    10. '   ' → logprob: -6.20717716217041

Token 717: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05520733445882797
    2. 'bound' → logprob: -3.1802072525024414
    3. '0' → logprob: -5.555207252502441
    4. ' ' → logprob: -5.805207252502441
    5. 'Dp' → logprob: -6.430207252502441
    6. '```' → logprob: -6.930207252502441
    7. 'l' → logprob: -7.055207252502441
    8. 'la' → logprob: -7.430207252502441
    9. 'lim' → logprob: -8.180207252502441
    10. 'limit' → logprob: -8.305207252502441

Token 718: ' limite' (ID: 48939)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.480067640542984
    2. 'bound' → logprob: -1.6050676107406616
    3. 'lim' → logprob: -2.105067729949951
    4. 'limit' → logprob: -3.230067729949951
    5. 'borne' → logprob: -4.480067729949951
    6. ' limite' → logprob: -5.980067729949951
    7. '```' → logprob: -6.105067729949951
    8. '[' → logprob: -7.730067729949951
    9. '[i' → logprob: -7.980067729949951
    10. 'b' → logprob: -8.105067253112793

Token 719: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2545217275619507
    2. 'Dp' → logprob: -1.7545217275619507
    3. '[i' → logprob: -3.2545218467712402
    4. '               ' → logprob: -5.50452184677124
    5. '[' → logprob: -5.75452184677124
    6. '           ' → logprob: -6.37952184677124
    7. '```' → logprob: -7.62952184677124
    8. '][' → logprob: -7.75452184677124
    9. '                       ' → logprob: -7.75452184677124
    10. ' (' → logprob: -8.004521369934082

Token 720: 'bound' (ID: 18791)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19075706601142883
    2. 'i' → logprob: -1.8157570362091064
    3. 'Dp' → logprob: -5.1907572746276855
    4. ' i' → logprob: -5.9407572746276855
    5. ' ' → logprob: -6.0657572746276855
    6. '[i' → logprob: -8.690756797790527
    7. '0' → logprob: -9.065756797790527
    8. '   ' → logprob: -9.565756797790527
    9. '  ' → logprob: -11.190756797790527
    10. '(i' → logprob: -11.565756797790527

Token 721: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5261711478233337
    2. '1' → logprob: -1.1511712074279785
    3. '0' → logprob: -2.6511712074279785
    4. '[i' → logprob: -4.4011712074279785
    5. '][' → logprob: -5.4011712074279785
    6. '[' → logprob: -5.9011712074279785
    7. '   ' → logprob: -6.4011712074279785
    8. ' [' → logprob: -7.7761712074279785
    9. ' ][' → logprob: -8.65117073059082
    10. '```' → logprob: -9.02617073059082

Token 722: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6446159482002258
    2. '0' → logprob: -0.7696159482002258
    3. ' ' → logprob: -4.51961612701416
    4. '[i' → logprob: -7.14461612701416
    5. '   ' → logprob: -9.26961612701416
    6. '```' → logprob: -9.64461612701416
    7. '[' → logprob: -10.39461612701416
    8. 'i' → logprob: -11.39461612701416
    9. '`' → logprob: -11.89461612701416
    10. ']' → logprob: -12.08211612701416

Token 723: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5283402800559998
    2. ']' → logprob: -1.1533403396606445
    3. ')' → logprob: -2.4033403396606445
    4. '               ' → logprob: -6.4033403396606445
    5. ']
' → logprob: -7.0283403396606445
    6. ')
' → logprob: -7.6533403396606445
    7. '])' → logprob: -8.028340339660645
    8. '           ' → logprob: -8.653340339660645
    9. ')]' → logprob: -8.778340339660645
    10. 'Dp' → logprob: -8.778340339660645

Token 724: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0049873050302267075
    2. 'Dp' → logprob: -6.1299872398376465
    3. '               ' → logprob: -6.6299872398376465
    4. '           ' → logprob: -8.129987716674805
    5. '```' → logprob: -8.629987716674805
    6. '                       ' → logprob: -8.879987716674805
    7. '                    
' → logprob: -9.004987716674805
    8. '[' → logprob: -9.129987716674805
    9. '(D' → logprob: -9.129987716674805
    10. '                    ' → logprob: -9.254987716674805

Token 725: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.030215196311473846
    2. '                   ' → logprob: -3.530215263366699
    3. '               ' → logprob: -8.6552152633667
    4. '           ' → logprob: -9.1552152633667
    5. '```' → logprob: -9.9052152633667
    6. 'Dj' → logprob: -10.2802152633667
    7. '                       ' → logprob: -10.6552152633667
    8. '
' → logprob: -10.6552152633667
    9. 'DP' → logprob: -11.9052152633667
    10. '       ' → logprob: -11.9052152633667

Token 726: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. 'Dp' → logprob: -17.25
    3. '[p' → logprob: -17.625
    4. '[' → logprob: -19.875
    5. '```' → logprob: -19.875
    6. ' p' → logprob: -20.25
    7. '_p' → logprob: -20.25
    8. '[i' → logprob: -20.5
    9. 'dp' → logprob: -20.75
    10. 'п' → logprob: -20.875

Token 727: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. '```' → logprob: -15.75
    4. ' [' → logprob: -17.0
    5. 'i' → logprob: -17.5
    6. '[I' → logprob: -17.625
    7. '   ' → logprob: -18.625
    8. '[j' → logprob: -18.875
    9. '
' → logprob: -18.875
    10. ' ' → logprob: -19.25

Token 728: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6763765811920166
    2. '][' → logprob: -0.8013765811920166
    3. '[i' → logprob: -3.1763765811920166
    4. '[' → logprob: -7.5513763427734375
    5. 'i' → logprob: -8.676376342773438
    6. '```' → logprob: -9.176376342773438
    7. '+i' → logprob: -9.801376342773438
    8. ' ][' → logprob: -9.926376342773438
    9. ']+' → logprob: -10.801376342773438
    10. ']' → logprob: -10.801376342773438

Token 729: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038967495784163475
    2. 'i' → logprob: -5.628896713256836
    3. '[i' → logprob: -8.628896713256836
    4. '][' → logprob: -9.753896713256836
    5. '+' → logprob: -10.378896713256836
    6. '[' → logprob: -11.128896713256836
    7. '(i' → logprob: -12.503896713256836
    8. ' ' → logprob: -12.628896713256836
    9. '```' → logprob: -13.003896713256836
    10. ' i' → logprob: -14.003896713256836

Token 730: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.010004444979131222
    2. '[i' → logprob: -4.63500452041626
    3. '[' → logprob: -8.760004043579102
    4. '}[' → logprob: -10.010004043579102
    5. ' ][' → logprob: -10.885004043579102
    6. '[j' → logprob: -11.760004043579102
    7. ']' → logprob: -12.385004043579102
    8. ')[' → logprob: -12.760004043579102
    9. '>[' → logprob: -12.885004043579102
    10. ']][' → logprob: -13.260004043579102

Token 731: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.250001907348633
    3. '[j' → logprob: -14.750001907348633
    4. '	j' → logprob: -16.500001907348633
    5. '$j' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '_j' → logprob: -19.500001907348633
    8. ',j' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.750001907348633
    10. 'J' → logprob: -19.750001907348633

Token 732: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004472348664421588
    2. '[' → logprob: -7.7504472732543945
    3. ' ][' → logprob: -11.250447273254395
    4. ']' → logprob: -13.750447273254395
    5. '0' → logprob: -14.250447273254395
    6. ']][' → logprob: -15.000447273254395
    7. ''][' → logprob: -15.125447273254395
    8. '"][' → logprob: -15.500447273254395
    9. '```' → logprob: -15.500447273254395
    10. ' [' → logprob: -16.000446319580078

Token 733: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. '1' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.875003814697266
    4. ' ' → logprob: -17.125003814697266
    5. '[' → logprob: -17.500003814697266
    6. '۰' → logprob: -17.750003814697266
    7. '	' → logprob: -17.937503814697266
    8. '```' → logprob: -18.375003814697266
    9. '０' → logprob: -18.875003814697266
    10. '`' → logprob: -18.937503814697266

Token 734: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013269031187519431
    2. ']+=' → logprob: -6.626327037811279
    3. ' ]' → logprob: -14.001326560974121
    4. ']+' → logprob: -16.001327514648438
    5. ']
' → logprob: -18.501327514648438
    6. ')' → logprob: -18.501327514648438
    7. '}' → logprob: -18.751327514648438
    8. '']' → logprob: -19.001327514648438
    9. '+=' → logprob: -19.626327514648438
    10. '"]' → logprob: -19.751327514648438

Token 735: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015478298300877213
    2. ' +=' → logprob: -6.501547813415527
    3. ']+=' → logprob: -10.001547813415527
    4. '+=(' → logprob: -15.626547813415527
    5. '=' → logprob: -17.001548767089844
    6. '+' → logprob: -18.126548767089844
    7. '+='' → logprob: -18.876548767089844
    8. '+="' → logprob: -19.501548767089844
    9. '	' → logprob: -20.001548767089844
    10. '[' → logprob: -20.751548767089844

Token 736: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0005607772618532181
    2. ' D' → logprob: -7.500560760498047
    3. ' ' → logprob: -13.125560760498047
    4. '   ' → logprob: -13.250560760498047
    5. '	D' → logprob: -14.250560760498047
    6. 'DP' → logprob: -14.250560760498047
    7. '  ' → logprob: -14.500560760498047
    8. 'Dn' → logprob: -14.625560760498047
    9. 'Df' → logprob: -15.000560760498047
    10. 'dp' → logprob: -15.750560760498047

Token 737: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.166338137816638e-05
    2. 'Dp' → logprob: -10.375031471252441
    3. '[p' → logprob: -15.875031471252441
    4. ' p' → logprob: -16.250032424926758
    5. '_p' → logprob: -16.625032424926758
    6. '[i' → logprob: -16.875032424926758
    7. '[' → logprob: -17.500032424926758
    8. 'Lp' → logprob: -17.750032424926758
    9. '`' → logprob: -18.500032424926758
    10. 'i' → logprob: -18.750032424926758

Token 738: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.625000953674316
    3. '```' → logprob: -15.750000953674316
    4. '[' → logprob: -17.25
    5. '[user' → logprob: -17.375
    6. 'user' → logprob: -18.5
    7. ' [' → logprob: -18.75
    8. '[I' → logprob: -18.875
    9. '[u' → logprob: -19.375
    10. '
' → logprob: -19.375

Token 739: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38700243830680847
    2. '[i' → logprob: -1.1370024681091309
    3. '}[' → logprob: -10.012001991271973
    4. 'i' → logprob: -10.137001991271973
    5. '[' → logprob: -11.387001991271973
    6. ']' → logprob: -11.637001991271973
    7. ' ][' → logprob: -11.887001991271973
    8. ']][' → logprob: -12.887001991271973
    9. '[][' → logprob: -13.012001991271973
    10. ' [' → logprob: -13.137001991271973

Token 740: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00023119196703191847
    2. 'i' → logprob: -8.37523078918457
    3. ' j' → logprob: -14.37523078918457
    4. '```' → logprob: -17.87523078918457
    5. '[j' → logprob: -18.37523078918457
    6. ' ' → logprob: -18.62523078918457
    7. '	j' → logprob: -18.62523078918457
    8. ' i' → logprob: -19.00023078918457
    9. 'k' → logprob: -19.37523078918457
    10. '][' → logprob: -19.50023078918457

Token 741: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001515100128017366
    2. '[' → logprob: -6.501514911651611
    3. '}[' → logprob: -12.25151538848877
    4. ' ][' → logprob: -13.00151538848877
    5. '[i' → logprob: -13.25151538848877
    6. ''][' → logprob: -14.12651538848877
    7. '"][' → logprob: -14.25151538848877
    8. ']' → logprob: -14.25151538848877
    9. ')[' → logprob: -14.62651538848877
    10. '1' → logprob: -15.00151538848877

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '<|end|>' → logprob: -17.125
    4. '0' → logprob: -18.5
    5. '[' → logprob: -19.125
    6. '   ' → logprob: -19.5
    7. '```' → logprob: -20.5
    8. '`' → logprob: -21.0
    9. '...' → logprob: -21.125
    10. '<|end|>' → logprob: -21.125

Token 743: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001023162854835391
    2. ']
' → logprob: -7.001023292541504
    3. '               ' → logprob: -9.376023292541504
    4. ')' → logprob: -11.501023292541504
    5. '           ' → logprob: -12.376023292541504
    6. '                   ' → logprob: -12.376023292541504
    7. ' ]' → logprob: -12.626023292541504
    8. ']
' → logprob: -13.001023292541504
    9. '])' → logprob: -14.251023292541504
    10. ')]' → logprob: -14.751023292541504

Token 744: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009638626128435135
    2. '                   ' → logprob: -5.009638786315918
    3. 'elif' → logprob: -6.634638786315918
    4. 'else' → logprob: -7.009638786315918
    5. '```' → logprob: -8.259638786315918
    6. '           ' → logprob: -8.759638786315918
    7. '                ' → logprob: -9.384638786315918
    8. ' else' → logprob: -9.509638786315918
    9. '                       ' → logprob: -10.384638786315918
    10. '              ' → logprob: -10.759638786315918

Token 745: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16200530529022217
    2. 'elif' → logprob: -1.9120053052902222
    3. 'else' → logprob: -6.787005424499512
    4. ' elif' → logprob: -7.662005424499512
    5. '           ' → logprob: -9.287005424499512
    6. '			' → logprob: -10.162005424499512
    7. '	           ' → logprob: -11.037005424499512
    8. '              ' → logprob: -11.662005424499512
    9. ' else' → logprob: -12.037005424499512
    10. 'elseif' → logprob: -12.037005424499512

Token 746: ' Deux' (ID: 92086)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0001398929744027555
    2. ' elif' → logprob: -9.625140190124512
    3. '               ' → logprob: -9.875140190124512
    4. 'else' → logprob: -10.750140190124512
    5. '                   ' → logprob: -14.500140190124512
    6. 'el' → logprob: -16.500139236450195
    7. '           ' → logprob: -16.500139236450195
    8. 'elseif' → logprob: -16.875139236450195
    9. '...' → logprob: -17.750139236450195
    10. '	elif' → logprob: -17.875139236450195

Token 747: 'ième' (ID: 41126)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0007514976896345615
    2. 'el' → logprob: -7.375751495361328
    3. ' elif' → logprob: -9.250751495361328
    4. 'é' → logprob: -11.750751495361328
    5. 'else' → logprob: -11.875751495361328
    6. 'e' → logprob: -12.250751495361328
    7. 'eli' → logprob: -12.375751495361328
    8. 'él' → logprob: -13.250751495361328
    9. 'El' → logprob: -13.875751495361328
    10. 'elim' → logprob: -14.750751495361328

Token 748: ' cas' (ID: 2108)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.19355618953704834
    2. 'case' → logprob: -2.568556308746338
    3. 'cas' → logprob: -2.818556308746338
    4. ' cas' → logprob: -4.068556308746338
    5. ':' → logprob: -4.568556308746338
    6. ' elif' → logprob: -5.443556308746338
    7. 'else' → logprob: -5.568556308746338
    8. ' case' → logprob: -5.943556308746338
    9. 'if' → logprob: -7.068556308746338
    10. '```' → logprob: -8.81855583190918

Token 749: ' :' (ID: 712)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.28575775027275085
    2. ' elif' → logprob: -1.7857577800750732
    3. '               ' → logprob: -2.6607577800750732
    4. 'else' → logprob: -5.160757541656494
    5. ' else' → logprob: -6.285757541656494
    6. ':' → logprob: -6.535757541656494
    7. '           ' → logprob: -6.660757541656494
    8. ' :' → logprob: -8.535758018493652
    9. 'el' → logprob: -8.660758018493652
    10. '```' → logprob: -9.035758018493652

Token 750: ' si' (ID: 1784)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4758912920951843
    2. 'k' → logprob: -0.9758912920951843
    3. ' k' → logprob: -6.85089111328125
    4. ' elif' → logprob: -7.35089111328125
    5. 'if' → logprob: -9.47589111328125
    6. 'el' → logprob: -11.10089111328125
    7. 'else' → logprob: -11.22589111328125
    8. '```' → logprob: -12.85089111328125
    9. '               ' → logprob: -14.10089111328125
    10. 'elseif' → logprob: -14.10089111328125

Token 751: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.054890409111976624
    2. ' k' → logprob: -2.9298903942108154
    3. 'elif' → logprob: -12.554890632629395
    4. '(k' → logprob: -14.054890632629395
    5. '   ' → logprob: -14.429890632629395
    6. 'else' → logprob: -14.804890632629395
    7. ' ' → logprob: -15.054890632629395
    8. '	k' → logprob: -15.117390632629395
    9. '    ' → logprob: -15.179890632629395
    10. '```' → logprob: -15.679890632629395

Token 752: ' égal' (ID: 15059)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38695651292800903
    2. '==' → logprob: -1.1369564533233643
    3. ' <=' → logprob: -10.261956214904785
    4. '<=' → logprob: -10.636956214904785
    5. '=' → logprob: -11.261956214904785
    6. ']==' → logprob: -12.761956214904785
    7. '==
' → logprob: -13.261956214904785
    8. '===' → logprob: -13.386956214904785
    9. ' =' → logprob: -13.636956214904785
    10. ' ===' → logprob: -13.886956214904785

Token 753: ' au' (ID: 2791)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23864737153053284
    2. '=' → logprob: -2.2386474609375
    3. ' ==' → logprob: -2.6136474609375
    4. 's' → logprob: -3.4886474609375
    5. 'e' → logprob: -7.1136474609375
    6. ' =' → logprob: -7.4886474609375
    7. '=int' → logprob: -8.6136474609375
    8. ')' → logprob: -9.7386474609375
    9. 'k' → logprob: -10.1136474609375
    10. 'es' → logprob: -10.2386474609375

Token 754: ' chiffre' (ID: 107420)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005419504595920444
    2. ' int' → logprob: -7.625542163848877
    3. '0' → logprob: -10.000541687011719
    4. 'k' → logprob: -12.250541687011719
    5. '=int' → logprob: -13.000541687011719
    6. '(int' → logprob: -14.000541687011719
    7. ' ' → logprob: -15.625541687011719
    8. '[int' → logprob: -16.00054168701172
    9. ' k' → logprob: -16.50054168701172
    10. '   ' → logprob: -16.50054168701172

Token 755: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6115423440933228
    2. '==' → logprob: -0.9865423440933228
    3. 'k' → logprob: -4.236542224884033
    4. '=' → logprob: -4.611542224884033
    5. '[i' → logprob: -4.861542224884033
    6. 'n' → logprob: -4.986542224884033
    7. ' =' → logprob: -5.111542224884033
    8. '(k' → logprob: -5.361542224884033
    9. '[k' → logprob: -5.486542224884033
    10. 'elif' → logprob: -5.611542224884033

Token 756: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027559475973248482
    2. ' n' → logprob: -3.902559518814087
    3. 'int' → logprob: -5.152559280395508
    4. '(n' → logprob: -6.902559280395508
    5. '[n' → logprob: -9.152559280395508
    6. ' int' → logprob: -10.027559280395508
    7. '[int' → logprob: -11.027559280395508
    8. '	n' → logprob: -11.402559280395508
    9. ')n' → logprob: -12.027559280395508
    10. '(int' → logprob: -12.277559280395508

Token 757: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004979863297194242
    2. '[' → logprob: -8.375497817993164
    3. '(i' → logprob: -9.750497817993164
    4. 'elif' → logprob: -9.875497817993164
    5. '               ' → logprob: -10.375497817993164
    6. '           ' → logprob: -10.750497817993164
    7. '[int' → logprob: -10.750497817993164
    8. '][' → logprob: -10.750497817993164
    9. '                   ' → logprob: -11.250497817993164
    10. '[k' → logprob: -11.375497817993164

Token 758: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008942373096942902
    2. '[i' → logprob: -5.258942604064941
    3. 'int' → logprob: -5.883942604064941
    4. '```' → logprob: -8.008942604064941
    5. 'l' → logprob: -8.258942604064941
    6. ' i' → logprob: -9.258942604064941
    7. ']' → logprob: -9.508942604064941
    8. '(i' → logprob: -10.133942604064941
    9. '   ' → logprob: -10.883942604064941
    10. '1' → logprob: -11.133942604064941

Token 759: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5765307545661926
    2. '[i' → logprob: -0.8265307545661926
    3. ' i' → logprob: -7.826530933380127
    4. '[' → logprob: -8.826530456542969
    5. '(i' → logprob: -10.951530456542969
    6. 'position' → logprob: -11.701530456542969
    7. ']' → logprob: -12.576530456542969
    8. '```' → logprob: -12.701530456542969
    9. '_i' → logprob: -13.076530456542969
    10. '{i' → logprob: -13.201530456542969

Token 760: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2569546103477478
    2. 'i' → logprob: -1.5069546699523926
    3. ' i' → logprob: -5.756954669952393
    4. 'k' → logprob: -7.881954669952393
    5. '(i' → logprob: -7.881954669952393
    6. '```' → logprob: -7.881954669952393
    7. '==' → logprob: -8.881954193115234
    8. '[' → logprob: -9.131954193115234
    9. ']' → logprob: -9.631954193115234
    10. ' ==' → logprob: -9.756954193115234

Token 761: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23284099996089935
    2. '           ' → logprob: -2.3578410148620605
    3. 'elif' → logprob: -2.4828410148620605
    4. ':' → logprob: -4.3578410148620605
    5. ' ==' → logprob: -5.2328410148620605
    6. '==' → logprob: -5.3578410148620605
    7. ' elif' → logprob: -5.8578410148620605
    8. 'else' → logprob: -6.3578410148620605
    9. '                   ' → logprob: -7.8578410148620605
    10. ']' → logprob: -8.607840538024902

Token 762: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07009626924991608
    2. 'elif' → logprob: -2.820096254348755
    3. '           ' → logprob: -5.695096492767334
    4. ' elif' → logprob: -6.320096492767334
    5. '                   ' → logprob: -6.820096492767334
    6. ' if' → logprob: -7.320096492767334
    7. 'if' → logprob: -7.695096492767334
    8. '```' → logprob: -7.695096492767334
    9. 'else' → logprob: -8.820096015930176
    10. '                ' → logprob: -9.945096015930176

Token 763: ' reste' (ID: 26769)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4234534502029419
    2. 'else' → logprob: -1.173453450202942
    3. '==' → logprob: -4.548453330993652
    4. ' else' → logprob: -5.173453330993652
    5. 'if' → logprob: -5.548453330993652
    6. '[' → logprob: -5.548453330993652
    7. '```' → logprob: -5.798453330993652
    8. ' elif' → logprob: -6.173453330993652
    9. '           ' → logprob: -6.423453330993652
    10. ']' → logprob: -6.548453330993652

Token 764: ' sur' (ID: 1512)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.7035775780677795
    2. 'bound' → logprob: -1.9535775184631348
    3. '               ' → logprob: -2.4535775184631348
    4. '[' → logprob: -2.8285775184631348
    5. '                   ' → logprob: -3.0785775184631348
    6. ' dans' → logprob: -3.0785775184631348
    7. 'dans' → logprob: -3.5785775184631348
    8. ' bound' → logprob: -4.203577518463135
    9. '==' → logprob: -4.328577518463135
    10. ' ==' → logprob: -4.953577518463135

Token 765: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003952424507588148
    2. ' ' → logprob: -6.253952503204346
    3. 'bound' → logprob: -7.003952503204346
    4. '```' → logprob: -7.628952503204346
    5. 'l' → logprob: -8.628952026367188
    6. 'Dp' → logprob: -9.003952026367188
    7. ' bound' → logprob: -9.628952026367188
    8. 'i' → logprob: -10.128952026367188
    9. '[' → logprob: -10.128952026367188
    10. '   ' → logprob: -10.128952026367188

Token 766: ' "' (ID: 392)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002202474744990468
    2. 'bound' → logprob: -6.25220251083374
    3. '```' → logprob: -8.502202033996582
    4. ' ' → logprob: -10.377202033996582
    5. 'if' → logprob: -11.377202033996582
    6. '   ' → logprob: -11.627202033996582
    7. ' bound' → logprob: -12.252202033996582
    8. '[' → logprob: -12.627202033996582
    9. '[i' → logprob: -13.502202033996582
    10. '=' → logprob: -13.752202033996582

Token 767: 'lim' (ID: 5406)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.046121906489133835
    2. 'bound' → logprob: -3.171121835708618
    3. '```' → logprob: -5.921122074127197
    4. ' ' → logprob: -9.171121597290039
    5. '=' → logprob: -9.171121597290039
    6. ' bound' → logprob: -9.796121597290039
    7. 'i' → logprob: -10.296121597290039
    8. 'borne' → logprob: -10.796121597290039
    9. '==' → logprob: -10.921121597290039
    10. '`' → logprob: -11.421121597290039

Token 768: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.001907097059302032
    2. 'it' → logprob: -6.501906871795654
    3. '1' → logprob: -8.876907348632812
    4. 'i' → logprob: -9.501907348632812
    5. 'te' → logprob: -9.751907348632812
    6. '```' → logprob: -9.876907348632812
    7. '#' → logprob: -11.251907348632812
    8. 'e' → logprob: -12.001907348632812
    9. 'im' → logprob: -12.376907348632812
    10. '_' → logprob: -12.501907348632812

Token 769: '"
' (ID: 1092)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027420079335570335
    2. '                   ' → logprob: -3.9024200439453125
    3. ' (' → logprob: -6.6524200439453125
    4. '           ' → logprob: -6.6524200439453125
    5. '[' → logprob: -6.7774200439453125
    6. ':' → logprob: -7.2774200439453125
    7. '```' → logprob: -7.7774200439453125
    8. '                       ' → logprob: -8.152420043945312
    9. '1' → logprob: -8.277420043945312
    10. '(' → logprob: -8.277420043945312

Token 770: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17458069324493408
    2. '                   ' → logprob: -2.1745805740356445
    3. '```' → logprob: -3.9245805740356445
    4. '           ' → logprob: -4.0495805740356445
    5. ':' → logprob: -5.5495805740356445
    6. '                       ' → logprob: -5.9245805740356445
    7. 'elif' → logprob: -7.5495805740356445
    8. ' elif' → logprob: -8.174580574035645
    9. ' and' → logprob: -8.299580574035645
    10. '                    
' → logprob: -8.674580574035645

Token 771: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06997933983802795
    2. '                   ' → logprob: -2.819979429244995
    3. '```' → logprob: -5.194979190826416
    4. '           ' → logprob: -7.569979190826416
    5. '                       ' → logprob: -7.694979190826416
    6. '[' → logprob: -8.319979667663574
    7. 'else' → logprob: -8.319979667663574
    8. ':' → logprob: -8.569979667663574
    9. 'elif' (adapté à ' elif') → logprob: -8.819979667663574
    10. '                ' → logprob: -8.819979667663574

Token 772: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.043014831840991974
    2. 'k' → logprob: -3.1680147647857666
    3. 'int' → logprob: -11.793014526367188
    4. ' int' → logprob: -13.168014526367188
    5. '	k' → logprob: -13.668014526367188
    6. '(k' → logprob: -13.668014526367188
    7. ' ' → logprob: -13.918014526367188
    8. '0' → logprob: -14.918014526367188
    9. ' ' → logprob: -14.918014526367188
    10. ' (' → logprob: -15.043014526367188

Token 773: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38689419627189636
    2. '==' → logprob: -1.1368942260742188
    3. '[' → logprob: -11.386894226074219
    4. ']==' → logprob: -12.011894226074219
    5. '==
' → logprob: -13.511894226074219
    6. '=' → logprob: -13.636894226074219
    7. ')==' → logprob: -13.886894226074219
    8. '===' → logprob: -14.511894226074219
    9. '[]' → logprob: -14.761894226074219
    10. ']' → logprob: -15.261894226074219

Token 774: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019286326132714748
    2. ' int' → logprob: -6.251928806304932
    3. '(int' → logprob: -18.751928329467773
    4. '[int' → logprob: -19.251928329467773
    5. '=int' → logprob: -19.501928329467773
    6. '	int' → logprob: -20.001928329467773
    7. '<int' → logprob: -20.251928329467773
    8. ' ' → logprob: -20.501928329467773
    9. '   ' → logprob: -20.751928329467773
    10. ':int' → logprob: -20.751928329467773

Token 775: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.50000286102295
    3. 'n' → logprob: -13.50000286102295
    4. ' (' → logprob: -16.250003814697266
    5. '(
' → logprob: -18.750003814697266
    6. ' n' → logprob: -20.750003814697266
    7. '[n' → logprob: -21.375003814697266
    8. '	n' → logprob: -23.125003814697266
    9. '((' → logprob: -23.375003814697266
    10. 's' → logprob: -23.375003814697266

Token 776: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.9160102712921798e-05
    2. '[n' → logprob: -11.125029563903809
    3. '(i' → logprob: -11.875029563903809
    4. '[' → logprob: -12.375029563903809
    5. 'n' → logprob: -13.625029563903809
    6. '[
' → logprob: -14.125029563903809
    7. ' [' → logprob: -14.500029563903809
    8. 'i' → logprob: -14.875029563903809
    9. ')' → logprob: -15.875029563903809
    10. '```' → logprob: -17.250028610229492

Token 777: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.33980119228363037
    2. ']):' → logprob: -1.8398011922836304
    3. '):
' → logprob: -2.21480131149292
    4. '):' → logprob: -4.33980131149292
    5. '[i' → logprob: -5.71480131149292
    6. ')' → logprob: -6.08980131149292
    7. ')]' → logprob: -7.58980131149292
    8. '])' → logprob: -7.71480131149292
    9. ']' → logprob: -8.214800834655762
    10. '[' → logprob: -9.589800834655762

Token 778: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22907039523124695
    2. '               ' → logprob: -1.8540704250335693
    3. '                       ' → logprob: -3.1040704250335693
    4. '                           ' → logprob: -6.60407018661499
    5. '                               ' → logprob: -7.72907018661499
    6. ':' → logprob: -8.229070663452148
    7. ':
' → logprob: -8.479070663452148
    8. 'Dp' → logprob: -8.604070663452148
    9. '```' → logprob: -8.729070663452148
    10. '           ' → logprob: -8.854070663452148

Token 779: ' #' (ID: 1069)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0016943422378972173
    2. '               ' → logprob: -7.251694202423096
    3. '                   ' → logprob: -7.251694202423096
    4. '                       ' → logprob: -8.751694679260254
    5. 'D' → logprob: -10.501694679260254
    6. '	D' → logprob: -11.251694679260254
    7. ' D' → logprob: -11.751694679260254
    8. 'DP' → logprob: -11.751694679260254
    9. 'Dv' → logprob: -11.751694679260254
    10. '                    ' → logprob: -12.126694679260254

Token 780: ' On' (ID: 2160)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.03916769102215767
    2. '                   ' → logprob: -3.289167642593384
    3. '                       ' → logprob: -7.289167881011963
    4. '               ' → logprob: -8.414167404174805
    5. 'D' → logprob: -9.164167404174805
    6. '                  ' → logprob: -10.789167404174805
    7. '                    ' → logprob: -10.789167404174805
    8. '           ' → logprob: -11.039167404174805
    9. 'DP' → logprob: -11.414167404174805
    10. '                           ' → logprob: -11.539167404174805

Token 781: ' ajoute' (ID: 91611)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -5.44312788406387e-05
    2. 'continue' → logprob: -10.750054359436035
    3. 'DP' → logprob: -12.000054359436035
    4. 'dp' → logprob: -12.250054359436035
    5. 'p' → logprob: -12.750054359436035
    6. '[i' → logprob: -13.000054359436035
    7. 'Dn' → logprob: -13.000054359436035
    8. '_dp' → logprob: -13.125054359436035
    9. '+=' → logprob: -13.250054359436035
    10. '```' → logprob: -13.375054359436035

Token 782: ' les' (ID: 1341)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -9.150362166110426e-05
    2. '                   ' → logprob: -9.875091552734375
    3. '(D' → logprob: -11.125091552734375
    4. 'Dj' → logprob: -12.000091552734375
    5. ' D' → logprob: -12.750091552734375
    6. 'DP' → logprob: -12.875091552734375
    7. 'Dn' → logprob: -13.000091552734375
    8. '                       ' → logprob: -13.375091552734375
    9. '               ' → logprob: -13.375091552734375
    10. 'D' → logprob: -13.625091552734375

Token 783: ' façons' (ID: 165958)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.9623810658231378e-05
    2. ' D' → logprob: -11.000020027160645
    3. 'Dn' → logprob: -13.750020027160645
    4. 'DP' → logprob: -13.875020027160645
    5. 'D' → logprob: -15.500020027160645
    6. 'Df' → logprob: -15.625020027160645
    7. 'Dd' → logprob: -16.375019073486328
    8. 'Dj' → logprob: -16.500019073486328
    9. 'Dt' → logprob: -17.125019073486328
    10. 'dp' → logprob: -17.250019073486328

Token 784: ' où' (ID: 15113)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.13165050745010376
    2. '                   ' → logprob: -2.381650447845459
    3. '                       ' → logprob: -4.631650447845459
    4. '[' → logprob: -5.006650447845459
    5. '               ' → logprob: -5.256650447845459
    6. '[i' → logprob: -5.631650447845459
    7. '[D' → logprob: -6.506650447845459
    8. '(D' → logprob: -7.131650447845459
    9. ' de' → logprob: -7.381650447845459
    10. '                           ' → logprob: -7.756650447845459

Token 785: ' on' (ID: 402)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.00041494169272482395
    2. ' D' → logprob: -7.875414848327637
    3. '               ' → logprob: -12.000414848327637
    4. '	D' → logprob: -12.250414848327637
    5. '   ' → logprob: -12.500414848327637
    6. '           ' → logprob: -12.500414848327637
    7. 'Dn' → logprob: -12.625414848327637
    8. '                   ' → logprob: -12.750414848327637
    9. 'i' → logprob: -13.500414848327637
    10. '```' → logprob: -13.625414848327637

Token 786: ' continue' (ID: 4901)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.019492361694574356
    2. 'rest' → logprob: -4.519492149353027
    3. 'ét' → logprob: -5.144492149353027
    4. 'reste' → logprob: -6.769492149353027
    5. 'éta' → logprob: -7.769492149353027
    6. '[' → logprob: -8.269492149353027
    7. 'est' → logprob: -8.769492149353027
    8. '[i' → logprob: -9.019492149353027
    9. 'avait' → logprob: -9.269492149353027
    10. '```' → logprob: -9.269492149353027

Token 787: ' à' (ID: 1221)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.03638526797294617
    2. '                   ' → logprob: -3.9113852977752686
    3. '                       ' → logprob: -4.5363850593566895
    4. 'à' → logprob: -6.4113850593566895
    5. 'DP' → logprob: -6.5363850593566895
    6. '               ' → logprob: -7.7863850593566895
    7. 'Dj' → logprob: -8.786385536193848
    8. '[' → logprob: -8.786385536193848
    9. ' à' → logprob: -8.911385536193848
    10. '                           ' → logprob: -8.911385536193848

Token 788: ' suivre' (ID: 54188)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0035118109080940485
    2. 'D' → logprob: -5.753511905670166
    3. '1' → logprob: -9.003511428833008
    4. 'DP' → logprob: -9.253511428833008
    5. 'Dn' → logprob: -10.628511428833008
    6. ' D' → logprob: -10.878511428833008
    7. '[' → logprob: -11.128511428833008
    8. '   ' → logprob: -12.128511428833008
    9. 'Dw' → logprob: -12.253511428833008
    10. 'Df' → logprob: -12.503511428833008

Token 789: ' la' (ID: 557)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0006129555404186249
    2. ' D' → logprob: -7.750612735748291
    3. '   ' → logprob: -9.62561321258545
    4. 'Dn' → logprob: -10.12561321258545
    5. 'n' → logprob: -10.50061321258545
    6. '	D' → logprob: -11.25061321258545
    7. '           ' → logprob: -11.62561321258545
    8. ' ' → logprob: -12.37561321258545
    9. '               ' → logprob: -12.37561321258545
    10. '       ' → logprob: -12.75061321258545

Token 790: ' limite' (ID: 48939)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25568437576293945
    2. 'bound' → logprob: -1.8806843757629395
    3. 'lim' → logprob: -3.3806843757629395
    4. 'n' → logprob: -3.5056843757629395
    5. 'Dp' → logprob: -6.1306843757629395
    6. '[' → logprob: -6.2556843757629395
    7. 'limit' → logprob: -6.5056843757629395
    8. '```' → logprob: -6.6306843757629395
    9. ' bound' → logprob: -7.7556843757629395
    10. '[i' → logprob: -8.005683898925781

Token 791: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014544579200446606
    2. 'Dp' → logprob: -4.264544486999512
    3. '                       ' → logprob: -8.764544486999512
    4. '               ' → logprob: -10.264544486999512
    5. '                  ' → logprob: -10.389544486999512
    6. '           ' → logprob: -10.514544486999512
    7. '```' → logprob: -10.639544486999512
    8. '                    ' → logprob: -10.889544486999512
    9. ',' → logprob: -11.264544486999512
    10. '                           ' → logprob: -11.264544486999512

Token 792: 'bound' (ID: 18791)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -14.750001907348633
    3. ' D' → logprob: -14.750001907348633
    4. 'Dn' → logprob: -15.000001907348633
    5. '	D' → logprob: -15.625001907348633
    6. 'DP' → logprob: -16.125001907348633
    7. 'D' → logprob: -16.250001907348633
    8. ')' → logprob: -16.250001907348633
    9. 'Dj' → logprob: -16.250001907348633
    10. 'Df' → logprob: -16.375001907348633

Token 793: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005852473899722099
    2. '[i' → logprob: -5.630852699279785
    3. '[' → logprob: -6.130852699279785
    4. ' ' → logprob: -10.255852699279785
    5. '][' → logprob: -10.755852699279785
    6. '   ' → logprob: -12.505852699279785
    7. '=' → logprob: -12.630852699279785
    8. '               ' → logprob: -12.880852699279785
    9. '           ' → logprob: -13.005852699279785
    10. '                   ' → logprob: -13.380852699279785

Token 794: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.50000286102295
    3. '[i' → logprob: -14.25000286102295
    4. '[' → logprob: -14.87500286102295
    5. '```' → logprob: -15.00000286102295
    6. '   ' → logprob: -15.87500286102295
    7. 'i' → logprob: -17.375003814697266
    8. '=' → logprob: -18.125003814697266
    9. '           ' → logprob: -18.125003814697266
    10. '       ' → logprob: -18.375003814697266

Token 795: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025254839565604925
    2. ']+=' → logprob: -6.752525329589844
    3. ')' → logprob: -7.877525329589844
    4. '])' → logprob: -8.127525329589844
    5. '               ' → logprob: -8.252525329589844
    6. '                   ' → logprob: -8.752525329589844
    7. ' ]' → logprob: -9.627525329589844
    8. '][' → logprob: -9.752525329589844
    9. ']+' → logprob: -9.877525329589844
    10. ']
' → logprob: -10.377525329589844

Token 796: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013728899881243706
    2. '                       ' → logprob: -4.388729095458984
    3. 'Dp' → logprob: -7.513729095458984
    4. '                           ' → logprob: -8.388729095458984
    5. '               ' → logprob: -8.763729095458984
    6. '```' → logprob: -9.138729095458984
    7. ':' → logprob: -10.513729095458984
    8. '           ' → logprob: -10.638729095458984
    9. '                    ' → logprob: -10.638729095458984
    10. '                    
' → logprob: -11.388729095458984

Token 797: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.259079363080673e-05
    2. '                   ' → logprob: -11.625012397766113
    3. '               ' → logprob: -13.750012397766113
    4. 'D' (adapté à ' D') → logprob: -14.125012397766113
    5. 'Dj' → logprob: -14.750012397766113
    6. 'DP' → logprob: -15.000012397766113
    7. '                       ' → logprob: -15.375012397766113
    8. 'Dn' → logprob: -15.625012397766113
    9. 'Df' → logprob: -15.625012397766113
    10. 'Dv' → logprob: -15.625012397766113

Token 798: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.1888679839321412e-05
    2. 'Dp' → logprob: -10.750021934509277
    3. 'dp' → logprob: -16.75002098083496
    4. '[' → logprob: -16.87502098083496
    5. ' p' → logprob: -17.00002098083496
    6. '[p' → logprob: -17.25002098083496
    7. '#' → logprob: -17.87502098083496
    8. '`' → logprob: -18.00002098083496
    9. '```' → logprob: -18.00002098083496
    10. 'Lp' → logprob: -18.37502098083496

Token 799: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.625
    3. '[' → logprob: -16.375
    4. '```' → logprob: -16.5
    5. '[I' → logprob: -17.875
    6. '\[' → logprob: -19.25
    7. ' [' → logprob: -20.125
    8. '[u' → logprob: -20.375
    9. '[j' → logprob: -20.5
    10. '(i' → logprob: -20.5

Token 800: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5762583017349243
    2. '][' → logprob: -0.8262583017349243
    3. '[i' → logprob: -8.701258659362793
    4. '[' → logprob: -9.826258659362793
    5. ' ][' → logprob: -9.951258659362793
    6. ' +' → logprob: -10.826258659362793
    7. ']' → logprob: -11.326258659362793
    8. '+i' → logprob: -12.076258659362793
    9. 'i' → logprob: -12.826258659362793
    10. '"][' → logprob: -13.201258659362793

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.500014305114746
    3. 'i' → logprob: -13.750014305114746
    4. '+' → logprob: -13.875014305114746
    5. '][' → logprob: -14.125014305114746
    6. '[i' → logprob: -14.500014305114746
    7. ' ' → logprob: -14.875014305114746
    8. '```' → logprob: -16.00001335144043
    9. '   ' → logprob: -17.75001335144043
    10. ']' → logprob: -17.87501335144043

Token 802: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00899730809032917
    2. '[' → logprob: -4.758997440338135
    3. '[i' → logprob: -8.133996963500977
    4. '[j' → logprob: -10.758996963500977
    5. ' ][' → logprob: -10.758996963500977
    6. '}[' → logprob: -11.758996963500977
    7. '[][' → logprob: -12.133996963500977
    8. '>[' → logprob: -12.383996963500977
    9. '```' → logprob: -12.508996963500977
    10. '           ' → logprob: -12.633996963500977

Token 803: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.723973582556937e-05
    2. ' j' → logprob: -11.000017166137695
    3. '[j' → logprob: -15.000017166137695
    4. '	j' → logprob: -16.625017166137695
    5. '$j' → logprob: -17.625017166137695
    6. '   ' → logprob: -18.000017166137695
    7. ' ' → logprob: -19.125017166137695
    8. '    ' → logprob: -20.000017166137695
    9. ':j' → logprob: -20.000017166137695
    10. '```' → logprob: -20.125017166137695

Token 804: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010986098641296849
    2. '[' → logprob: -9.250109672546387
    3. ' ][' → logprob: -11.875109672546387
    4. ']' → logprob: -12.000109672546387
    5. '"][' → logprob: -15.750109672546387
    6. ''][' → logprob: -16.250110626220703
    7. '```' → logprob: -17.125110626220703
    8. '   ' → logprob: -17.125110626220703
    9. '1' → logprob: -17.250110626220703
    10. ' ' → logprob: -17.500110626220703

Token 805: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -19.125
    4. '0' → logprob: -20.25
    5. '۱' → logprob: -20.75
    6. '```' → logprob: -20.875
    7. '１' → logprob: -21.125
    8. '  ' → logprob: -21.375
    9. '' → logprob: -21.625
    10. '
' → logprob: -21.875

Token 806: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011703446507453918
    2. ']+=' → logprob: -6.7511701583862305
    3. ' ]' → logprob: -16.501171112060547
    4. '+=' → logprob: -18.876171112060547
    5. ')' → logprob: -18.876171112060547
    6. ']+' → logprob: -19.001171112060547
    7. '```' → logprob: -19.376171112060547
    8. ']
' → logprob: -19.501171112060547
    9. '"]' → logprob: -20.126171112060547
    10. '']' → logprob: -20.626171112060547

Token 807: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0068938047625124454
    2. ' +=' → logprob: -5.006893634796143
    3. ']+=' → logprob: -8.6318941116333
    4. '=' → logprob: -16.506893157958984
    5. '+=(' → logprob: -17.631893157958984
    6. '	' → logprob: -18.381893157958984
    7. '+='' → logprob: -18.381893157958984
    8. '+="' → logprob: -18.631893157958984
    9. '```' → logprob: -18.756893157958984
    10. '+' → logprob: -19.006893157958984

Token 808: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: 0.0
    2. 'DP' → logprob: -18.75
    3. ' D' → logprob: -19.125
    4. 'Df' → logprob: -19.75
    5. '   ' → logprob: -20.375
    6. 'Dn' → logprob: -20.375
    7. '	D' → logprob: -20.5
    8. 'Dd' → logprob: -20.5
    9. 'Dc' → logprob: -20.625
    10. 'Dt' → logprob: -21.125

Token 809: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.128163257315464e-07
    2. 'Dp' → logprob: -15.625
    3. '[p' → logprob: -18.375
    4. '[i' → logprob: -18.75
    5. 'P' → logprob: -18.75
    6. '[' → logprob: -18.875
    7. ' p' → logprob: -18.875
    8. '_p' → logprob: -19.0
    9. 'п' → logprob: -19.125
    10. '```' → logprob: -19.375

Token 810: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -14.875
    3. '```' → logprob: -19.25
    4. '(i' → logprob: -20.0
    5. '[' → logprob: -20.125
    6. '{i' → logprob: -20.75
    7. '[j' → logprob: -21.75
    8. ' [' → logprob: -22.0
    9. '][' → logprob: -22.25
    10. 'I' → logprob: -22.625

Token 811: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012554042041301727
    2. '[i' → logprob: -4.387554168701172
    3. ']' → logprob: -11.387554168701172
    4. '[' → logprob: -11.762554168701172
    5. ' ][' → logprob: -11.887554168701172
    6. 'i' → logprob: -12.262554168701172
    7. '"][' → logprob: -12.262554168701172
    8. '[j' → logprob: -12.887554168701172
    9. ''][' → logprob: -13.262554168701172
    10. '}[' → logprob: -13.762554168701172

Token 812: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5048530030981055e-06
    2. ' j' → logprob: -13.500001907348633
    3. '	j' → logprob: -17.125001907348633
    4. '[j' → logprob: -18.000001907348633
    5. ' ' → logprob: -18.625001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '$j' → logprob: -19.375001907348633
    8. 'k' → logprob: -19.500001907348633
    9. 'i' → logprob: -20.000001907348633
    10. '0' → logprob: -20.000001907348633

Token 813: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007455448503606021
    2. '[' → logprob: -7.25074577331543
    3. ' ][' → logprob: -11.00074577331543
    4. '[i' → logprob: -12.12574577331543
    5. '"][' → logprob: -12.37574577331543
    6. ']' → logprob: -12.50074577331543
    7. ''][' → logprob: -13.12574577331543
    8. '}[' → logprob: -14.00074577331543
    9. '>[' → logprob: -14.37574577331543
    10. ')[' → logprob: -14.62574577331543

Token 814: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -19.125
    4. '１' → logprob: -21.375
    5. '  ' → logprob: -21.75
    6. '۱' → logprob: -21.75
    7. '১' → logprob: -22.0
    8. '0' → logprob: -22.25
    9. '```' → logprob: -22.25
    10. '	' → logprob: -22.5

Token 815: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03818298876285553
    2. '               ' → logprob: -3.5381829738616943
    3. '                   ' → logprob: -5.788183212280273
    4. '           ' → logprob: -5.913183212280273
    5. '<|end|>' → logprob: -6.788183212280273
    6. ')' → logprob: -7.163183212280273
    7. ']
' → logprob: -8.538183212280273
    8. '                ' → logprob: -9.538183212280273
    9. '		           ' → logprob: -10.163183212280273
    10. ' ]' → logprob: -10.288183212280273

Token 816: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010533296503126621
    2. 'else' → logprob: -4.635533332824707
    3. '                   ' → logprob: -7.885533332824707
    4. ' else' → logprob: -8.635533332824707
    5. '```' → logprob: -8.760533332824707
    6. '           ' → logprob: -10.635533332824707
    7. 'elif' → logprob: -10.885533332824707
    8. '			' → logprob: -11.510533332824707
    9. '              ' → logprob: -12.385533332824707
    10. 'continue' → logprob: -12.510533332824707

Token 817: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21756163239479065
    2. 'Dp' → logprob: -1.7175616025924683
    3. 'else' → logprob: -4.842561721801758
    4. '                   ' → logprob: -5.592561721801758
    5. '           ' → logprob: -6.342561721801758
    6. 'continue' → logprob: -7.217561721801758
    7. 'D' → logprob: -7.592561721801758
    8. ' else' → logprob: -8.092561721801758
    9. '              ' → logprob: -8.342561721801758
    10. 'elif' → logprob: -8.717561721801758

Token 818: ' Mais' (ID: 13880)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.03052651137113571
    2. '                   ' → logprob: -3.5305263996124268
    3. '               ' → logprob: -7.655526638031006
    4. 'D' → logprob: -8.905526161193848
    5. 'DP' → logprob: -10.030526161193848
    6. '           ' → logprob: -10.405526161193848
    7. '                  ' → logprob: -10.655526161193848
    8. 'Dj' → logprob: -11.030526161193848
    9. '```' → logprob: -11.405526161193848
    10. '                 ' → logprob: -11.780526161193848

Token 819: ' si' (ID: 1784)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.017590569332242012
    2. '                   ' → logprob: -4.642590522766113
    3. '               ' → logprob: -5.267590522766113
    4. '           ' → logprob: -7.017590522766113
    5. ' D' → logprob: -8.642590522766113
    6. '#' → logprob: -8.642590522766113
    7. 'D' → logprob: -8.767590522766113
    8. ' aussi' → logprob: -8.892590522766113
    9. 'Dj' → logprob: -9.017590522766113
    10. '                ' → logprob: -9.142590522766113

Token 820: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13262304663658142
    2. ' k' → logprob: -2.1326229572296143
    3. 'bound' → logprob: -6.132623195648193
    4. ' bound' → logprob: -7.132623195648193
    5. '0' → logprob: -7.382623195648193
    6. 'int' → logprob: -7.507623195648193
    7. 'i' → logprob: -8.507622718811035
    8. 'n' → logprob: -8.632622718811035
    9. ' ' → logprob: -8.757622718811035
    10. 'not' → logprob: -8.820122718811035

Token 821: ' était' (ID: 16647)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2976968586444855
    2. 'i' → logprob: -2.422696828842163
    3. '[i' → logprob: -2.922696828842163
    4. '==' → logprob: -3.547696828842163
    5. 'continue' → logprob: -3.672696828842163
    6. '                   ' → logprob: -5.172697067260742
    7. ' k' → logprob: -5.297697067260742
    8. 'else' → logprob: -5.297697067260742
    9. ' continue' → logprob: -5.422697067260742
    10. ' i' → logprob: -5.422697067260742

Token 822: ' déjà' (ID: 21229)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2390972375869751
    2. 'Dp' → logprob: -1.989097237586975
    3. 'k' → logprob: -3.2390971183776855
    4. 'bound' → logprob: -4.2390971183776855
    5. '[i' → logprob: -4.4890971183776855
    6. ' ' → logprob: -6.2390971183776855
    7. '               ' → logprob: -6.3640971183776855
    8. '                   ' → logprob: -6.8640971183776855
    9. 'dp' → logprob: -7.1140971183776855
    10. '[k' → logprob: -7.2390971183776855

Token 823: ' lib' (ID: 5090)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.4459618628025055
    2. 'bound' → logprob: -1.695961833000183
    3. '0' → logprob: -1.820961833000183
    4. ' ' → logprob: -4.945961952209473
    5. 'in' → logprob: -6.695961952209473
    6. ' bound' → logprob: -6.820961952209473
    7. 'dans' → logprob: -7.070961952209473
    8. 'en' → logprob: -7.195961952209473
    9. 'DP' → logprob: -7.445961952209473
    10. ' in' → logprob: -7.570961952209473

Token 824: 'éré' (ID: 33338)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.35864320397377014
    2. 'érée' → logprob: -1.6086431741714478
    3. 'éré' → logprob: -2.6086432933807373
    4. 'ère' → logprob: -4.358643054962158
    5. 'ére' → logprob: -5.358643054962158
    6. 'rée' → logprob: -5.983643054962158
    7. 'é' → logprob: -6.233643054962158
    8. 'e' → logprob: -6.608643054962158
    9. 'ré' → logprob: -6.608643054962158
    10. 'er' → logprob: -6.858643054962158

Token 825: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06784448027610779
    2. '[' → logprob: -3.9428443908691406
    3. ':' → logprob: -4.567844390869141
    4. '               ' → logprob: -4.692844390869141
    5. ',' → logprob: -4.692844390869141
    6. '                       ' → logprob: -5.317844390869141
    7. '0' → logprob: -5.692844390869141
    8. ':
' → logprob: -5.692844390869141
    9. '                    ' → logprob: -6.817844390869141
    10. ' (' → logprob: -7.067844390869141

Token 826: ' la' (ID: 557)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0139986053109169
    2. 'bound' → logprob: -4.513998508453369
    3. ' bound' → logprob: -6.638998508453369
    4. 'la' → logprob: -7.263998508453369
    5. ' D' → logprob: -8.013998985290527
    6. 'l' → logprob: -8.263998985290527
    7. ' la' → logprob: -8.388998985290527
    8. '0' → logprob: -11.013998985290527
    9. '[' → logprob: -11.138998985290527
    10. 'Bound' → logprob: -11.263998985290527

Token 827: ' borne' (ID: 111819)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.3010310232639313
    2. 'bound' → logprob: -1.8010309934616089
    3. 'limit' → logprob: -2.4260311126708984
    4. ' limite' → logprob: -5.676031112670898
    5. '0' → logprob: -6.551031112670898
    6. 'borne' → logprob: -6.926031112670898
    7. '1' → logprob: -8.301031112670898
    8. '[' → logprob: -9.676031112670898
    9. ' bound' → logprob: -10.051031112670898
    10. 'zone' → logprob: -10.176031112670898

Token 828: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.46227169036865234
    2. ',' → logprob: -1.4622716903686523
    3. '[' → logprob: -2.4622716903686523
    4. '               ' → logprob: -4.087271690368652
    5. '0' → logprob: -4.837271690368652
    6. ':
' → logprob: -5.087271690368652
    7. ' (' → logprob: -5.212271690368652
    8. '                       ' → logprob: -5.337271690368652
    9. '(' → logprob: -5.587271690368652
    10. ':' → logprob: -5.712271690368652

Token 829: 'bound' (ID: 18791)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2748261094093323
    2. 'Dp' → logprob: -1.8998260498046875
    3. 'k' → logprob: -2.8998260498046875
    4. 'bound' → logprob: -3.6498260498046875
    5. 'i' → logprob: -6.1498260498046875
    6. ')' → logprob: -6.3998260498046875
    7. '1' → logprob: -7.0248260498046875
    8. ' ' → logprob: -7.1498260498046875
    9. ' k' → logprob: -7.2748260498046875
    10. ' bound' → logprob: -7.3998260498046875

Token 830: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1302197128534317
    2. ' ' → logprob: -2.1302196979522705
    3. '[' → logprob: -6.00521993637085
    4. '==' → logprob: -7.75521993637085
    5. ' [' → logprob: -9.255219459533691
    6. '```' → logprob: -9.505219459533691
    7. ')' → logprob: -9.880219459533691
    8. ' ==' → logprob: -10.130219459533691
    9. '=' → logprob: -10.130219459533691
    10. ' ' → logprob: -10.880219459533691

Token 831: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008023341186344624
    2. '1' → logprob: -4.883023262023926
    3. ' ' → logprob: -8.258023262023926
    4. '```' → logprob: -9.133023262023926
    5. '[' → logprob: -10.883023262023926
    6. ')' → logprob: -11.008023262023926
    7. ']' → logprob: -12.633023262023926
    8. '][' → logprob: -13.383023262023926
    9. '==' → logprob: -13.383023262023926
    10. '   ' → logprob: -13.633023262023926

Token 832: '),' (ID: 936)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.45654356479644775
    2. '):
' → logprob: -1.0815435647964478
    3. ']:
' → logprob: -4.331543445587158
    4. ')' → logprob: -5.331543445587158
    5. '):' → logprob: -5.831543445587158
    6. ']' → logprob: -6.331543445587158
    7. '               ' → logprob: -6.456543445587158
    8. '                       ' → logprob: -7.206543445587158
    9. '],' → logprob: -7.456543445587158
    10. '),' → logprob: -7.456543445587158

Token 833: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.36186209321022034
    2. ' D' → logprob: -1.861862063407898
    3. '                       ' → logprob: -1.986862063407898
    4. 'Dp' → logprob: -5.7368621826171875
    5. '                           ' → logprob: -6.1118621826171875
    6. 'D' → logprob: -6.1118621826171875
    7. '                    ' → logprob: -7.1118621826171875
    8. '               ' → logprob: -7.2368621826171875
    9. '                     ' → logprob: -8.111862182617188
    10. '   ' → logprob: -8.486862182617188

Token 834: ' continue' (ID: 4901)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.5691367983818054
    2. 'for' → logprob: -2.31913685798645
    3. 'continue' → logprob: -3.06913685798645
    4. '                   ' → logprob: -3.06913685798645
    5. ':
' → logprob: -3.56913685798645
    6. '                       ' → logprob: -3.56913685798645
    7. 'n' → logprob: -3.56913685798645
    8. '```' → logprob: -3.94413685798645
    9. '           ' → logprob: -4.069136619567871
    10. '#' → logprob: -4.069136619567871

Token 835: ' simplement' (ID: 45065)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015203109942376614
    2. '                       ' → logprob: -4.39020299911499
    3. 'Dp' → logprob: -6.64020299911499
    4. '               ' → logprob: -7.51520299911499
    5. '       ' → logprob: -8.640203475952148
    6. '   ' → logprob: -9.140203475952148
    7. '           ' → logprob: -9.390203475952148
    8. '[' → logprob: -9.890203475952148
    9. '                    ' → logprob: -9.890203475952148
    10. '```' → logprob: -10.140203475952148

Token 836: '.
' (ID: 558)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.012033800594508648
    2. '                   ' → logprob: -4.512033939361572
    3. ' D' → logprob: -7.387033939361572
    4. 'D' → logprob: -8.887033462524414
    5. '                       ' → logprob: -9.012033462524414
    6. 'DP' → logprob: -10.887033462524414
    7. 'Dj' → logprob: -10.887033462524414
    8. '               ' → logprob: -11.012033462524414
    9. '                    ' → logprob: -11.137033462524414
    10. ' ' → logprob: -12.512033462524414

Token 837: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0048779272474348545
    2. 'Dp' → logprob: -5.379878044128418
    3. '               ' → logprob: -9.254878044128418
    4. '           ' → logprob: -9.629878044128418
    5. '```' → logprob: -10.129878044128418
    6. 'D' → logprob: -10.629878044128418
    7. '                       ' → logprob: -11.129878044128418
    8. '       ' → logprob: -12.504878044128418
    9. '   ' → logprob: -12.754878044128418
    10. ' D' → logprob: -12.879878044128418

Token 838: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.10953010618686676
    2. '                   ' → logprob: -2.359530210494995
    3. 'D' (adapté à ' D') → logprob: -5.234529972076416
    4. ' D' → logprob: -5.609529972076416
    5. '               ' → logprob: -9.109530448913574
    6. '```' → logprob: -9.484530448913574
    7. 'Dj' → logprob: -10.984530448913574
    8. 'DP' → logprob: -10.984530448913574
    9. '           ' → logprob: -11.359530448913574
    10. '                       ' → logprob: -11.359530448913574

Token 839: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.875000953674316
    3. '[p' → logprob: -15.875000953674316
    4. '[i' → logprob: -16.25
    5. ' p' → logprob: -17.375
    6. '```' → logprob: -17.5
    7. '_p' → logprob: -18.625
    8. ''p' → logprob: -19.25
    9. '\[' → logprob: -19.25
    10. 'п' → logprob: -19.375

Token 840: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -17.0
    3. 'i' → logprob: -17.875
    4. '```' → logprob: -17.875
    5. '[I' → logprob: -19.375
    6. ' [' → logprob: -20.5
    7. 'p' → logprob: -20.625
    8. '\[' → logprob: -20.875
    9. '[j' → logprob: -21.375
    10. '{i' → logprob: -21.625

Token 841: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2762981653213501
    2. '[i' → logprob: -1.65129816532135
    3. '][' → logprob: -3.0262980461120605
    4. '[' → logprob: -7.0262980461120605
    5. 'i' → logprob: -9.401298522949219
    6. '```' → logprob: -10.026298522949219
    7. ' ][' → logprob: -11.151298522949219
    8. ' [' → logprob: -11.276298522949219
    9. ')[' → logprob: -11.401298522949219
    10. '+[' → logprob: -11.651298522949219

Token 842: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07574282586574554
    2. '+' → logprob: -2.700742721557617
    3. 'i' → logprob: -5.200742721557617
    4. '[i' → logprob: -9.075742721557617
    5. '][' → logprob: -9.825742721557617
    6. '[' → logprob: -9.950742721557617
    7. '```' → logprob: -10.700742721557617
    8. ' ' → logprob: -11.450742721557617
    9. 'j' → logprob: -11.575742721557617
    10. '   ' → logprob: -12.825742721557617

Token 843: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016193432733416557
    2. '][' → logprob: -4.141193389892578
    3. '[j' → logprob: -9.891193389892578
    4. ' [' → logprob: -10.141193389892578
    5. '```' → logprob: -10.766193389892578
    6. '}[' → logprob: -11.266193389892578
    7. '[' → logprob: -11.516193389892578
    8. ')[' → logprob: -11.891193389892578
    9. '           ' → logprob: -12.516193389892578
    10. ' ][' → logprob: -12.891193389892578

Token 844: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012570773833431304
    2. 'i' → logprob: -9.000125885009766
    3. ' j' → logprob: -13.125125885009766
    4. '[j' → logprob: -15.250125885009766
    5. '[i' → logprob: -17.875125885009766
    6. '   ' → logprob: -18.375125885009766
    7. '```' → logprob: -18.375125885009766
    8. '	j' → logprob: -18.625125885009766
    9. ' ' → logprob: -20.125125885009766
    10. ' i' → logprob: -20.375125885009766

Token 845: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00027897433028556406
    2. '[' → logprob: -8.250279426574707
    3. ' ][' → logprob: -11.375279426574707
    4. ']' → logprob: -12.375279426574707
    5. '```' → logprob: -14.875279426574707
    6. '           ' → logprob: -15.250279426574707
    7. '0' → logprob: -15.750279426574707
    8. ''][' → logprob: -16.00027847290039
    9. '	' → logprob: -16.25027847290039
    10. ']][' → logprob: -16.25027847290039

Token 846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.625
    3. '[' → logprob: -16.25
    4. '   ' → logprob: -17.625
    5. ' ' → logprob: -17.75
    6. '```' → logprob: -18.125
    7. '
' → logprob: -18.375
    8. '۰' → logprob: -19.625
    9. ']' → logprob: -19.875
    10. 'k' → logprob: -19.9375

Token 847: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014178436249494553
    2. ']+=' → logprob: -4.264178276062012
    3. '+=' → logprob: -12.514178276062012
    4. ' ]' → logprob: -12.889178276062012
    5. ']+' → logprob: -12.889178276062012
    6. '                   ' → logprob: -13.014178276062012
    7. '[' → logprob: -13.764178276062012
    8. '           ' → logprob: -13.889178276062012
    9. '               ' → logprob: -14.014178276062012
    10. ' +=' → logprob: -15.139178276062012

Token 848: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018351279199123383
    2. ' +=' → logprob: -4.018351078033447
    3. ']+=' → logprob: -8.518351554870605
    4. '[' → logprob: -13.643351554870605
    5. '+=(' → logprob: -16.26835060119629
    6. '```' → logprob: -16.76835060119629
    7. '=' → logprob: -16.76835060119629
    8. '	' → logprob: -17.14335060119629
    9. '+' → logprob: -17.26835060119629
    10. ']' → logprob: -17.89335060119629

Token 849: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -5.512236498361744e-07
    2. ' D' → logprob: -14.625000953674316
    3. 'Df' → logprob: -17.625
    4. 'Dn' → logprob: -17.625
    5. '   ' → logprob: -18.375
    6. 'DP' → logprob: -18.625
    7. 'Dd' → logprob: -19.125
    8. ' ' → logprob: -19.375
    9. 'Dv' → logprob: -19.5
    10. 'Dc' → logprob: -19.5

Token 850: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.693167507648468
    2. 'Dp' → logprob: -0.693167507648468
    3. 'i' → logprob: -12.568167686462402
    4. 'Rp' → logprob: -12.693167686462402
    5. '[i' → logprob: -12.693167686462402
    6. 'Lp' → logprob: -13.068167686462402
    7. '_p' → logprob: -13.693167686462402
    8. 'Tp' → logprob: -13.818167686462402
    9. 'P' → logprob: -13.943167686462402
    10. 'D' → logprob: -14.193167686462402

Token 851: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.000000953674316
    3. '```' → logprob: -17.5
    4. '[' → logprob: -18.0
    5. '(i' → logprob: -19.25
    6. '{i' → logprob: -19.875
    7. '`' → logprob: -20.125
    8. 's' → logprob: -20.5
    9. ' [' → logprob: -20.75
    10. '
' → logprob: -20.875

Token 852: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003422567679081112
    2. '[i' → logprob: -8.00034236907959
    3. ' ][' → logprob: -12.00034236907959
    4. ']' → logprob: -15.37534236907959
    5. '}[' → logprob: -16.000341415405273
    6. '[j' → logprob: -16.125341415405273
    7. 'i' → logprob: -16.375341415405273
    8. '   ' → logprob: -16.625341415405273
    9. '[' → logprob: -17.000341415405273
    10. '	' → logprob: -18.375341415405273

Token 853: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.438573680294212e-06
    2. 'i' → logprob: -12.250005722045898
    3. ' j' → logprob: -15.000005722045898
    4. '[j' → logprob: -15.250005722045898
    5. 'k' → logprob: -17.5000057220459
    6. '   ' → logprob: -18.3750057220459
    7. '	j' → logprob: -18.3750057220459
    8. '[i' → logprob: -19.3750057220459
    9. '][' → logprob: -19.5000057220459
    10. '```' → logprob: -19.5000057220459

Token 854: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0046218992210924625
    2. '[' → logprob: -5.504621982574463
    3. '[j' → logprob: -8.129621505737305
    4. '0' → logprob: -9.129621505737305
    5. '[i' → logprob: -10.129621505737305
    6. 'j' → logprob: -10.504621505737305
    7. ' ][' → logprob: -10.754621505737305
    8. ']' → logprob: -11.254621505737305
    9. '}[' → logprob: -11.379621505737305
    10. ' [' → logprob: -11.754621505737305

Token 855: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '   ' → logprob: -20.5
    4. '۰' → logprob: -20.625
    5. '[' → logprob: -21.25
    6. '```' → logprob: -21.25
    7. '０' → logprob: -21.75
    8. '1' → logprob: -22.0
    9. '০' → logprob: -22.375
    10. '  ' → logprob: -23.5

Token 856: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03184319660067558
    2. '<|end|>' → logprob: -4.031843185424805
    3. '           ' → logprob: -5.031843185424805
    4. '               ' → logprob: -5.531843185424805
    5. ']' → logprob: -6.156843185424805
    6. '<|end|>' → logprob: -7.906843185424805
    7. '```' → logprob: -8.656843185424805
    8. '                   ' → logprob: -9.156843185424805
    9. ' )' → logprob: -9.656843185424805
    10. ')return' → logprob: -10.281843185424805

Token 857: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21188074350357056
    2. 'else' → logprob: -1.7118806838989258
    3. ' else' → logprob: -5.336880683898926
    4. '```' → logprob: -5.336880683898926
    5. '           ' → logprob: -7.961880683898926
    6. '			' → logprob: -8.211880683898926
    7. 'elif' → logprob: -9.461880683898926
    8. '                   ' → logprob: -10.836880683898926
    9. '	           ' → logprob: -10.961880683898926
    10. 'continue' → logprob: -11.086880683898926

Token 858: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2649329900741577
    2. 'else' → logprob: -1.5149329900741577
    3. ' else' → logprob: -4.889933109283447
    4. '           ' → logprob: -5.264933109283447
    5. 'elif' → logprob: -9.389932632446289
    6. '			' → logprob: -9.639932632446289
    7. '```' → logprob: -10.389932632446289
    8. '	           ' → logprob: -11.014932632446289
    9. '	else' → logprob: -11.764932632446289
    10. '		' → logprob: -12.264932632446289

Token 859: ' Tro' (ID: 29037)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04320128634572029
    2. '               ' → logprob: -3.918201208114624
    3. ' else' → logprob: -4.043201446533203
    4. 'elif' → logprob: -5.918201446533203
    5. 'continue' → logprob: -6.293201446533203
    6. '           ' → logprob: -8.418201446533203
    7. ' elif' → logprob: -10.668201446533203
    8. ' continue' → logprob: -10.918201446533203
    9. '#' → logprob: -11.168201446533203
    10. '```' → logprob: -11.168201446533203

Token 860: 'isième' (ID: 70717)
  Prédit: 'isi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isi' → logprob: -0.43906018137931824
    2. 'isième' → logprob: -1.0640602111816406
    3. 'is' → logprob: -4.689060211181641
    4. 'si' → logprob: -7.439060211181641
    5. 'p' → logprob: -8.93906021118164
    6. 'ti' → logprob: -9.43906021118164
    7. 'isie' → logprob: -10.56406021118164
    8. 'us' → logprob: -10.56406021118164
    9. 'uv' → logprob: -10.81406021118164
    10. 'ssi' → logprob: -10.81406021118164

Token 861: ' cas' (ID: 2108)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.021924981847405434
    2. ' else' → logprob: -3.8969249725341797
    3. 'elif' → logprob: -6.64692497253418
    4. ':' → logprob: -9.89692497253418
    5. ' elif' → logprob: -10.77192497253418
    6. '	else' → logprob: -12.39692497253418
    7. 'case' → logprob: -13.02192497253418
    8. '   ' → logprob: -13.14692497253418
    9. '```' → logprob: -13.64692497253418
    10. '_else' → logprob: -14.14692497253418

Token 862: ' :' (ID: 712)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.737626850605011
    2. ' else' → logprob: -0.987626850605011
    3. ':' → logprob: -1.9876267910003662
    4. '               ' → logprob: -5.112627029418945
    5. ' elif' → logprob: -6.112627029418945
    6. 'elif' → logprob: -6.362627029418945
    7. ' :' → logprob: -6.362627029418945
    8. '           ' → logprob: -7.737627029418945
    9. '                   ' → logprob: -9.737627029418945
    10. ':
' → logprob: -9.737627029418945

Token 863: ' k' (ID: 372)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22956621646881104
    2. 'elif' → logprob: -1.729566216468811
    3. ' else' → logprob: -3.7295660972595215
    4. ' elif' → logprob: -5.8545660972595215
    5. '               ' → logprob: -7.4795660972595215
    6. '                   ' → logprob: -9.10456657409668
    7. 'if' → logprob: -9.35456657409668
    8. '```' → logprob: -9.47956657409668
    9. '           ' → logprob: -11.10456657409668
    10. 'k' → logprob: -11.10456657409668

Token 864: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22548198699951172
    2. '>' → logprob: -1.6004819869995117
    3. 'else' → logprob: -10.225481986999512
    4. 'elif' → logprob: -11.600481986999512
    5. ' <' → logprob: -12.100481986999512
    6. ' else' → logprob: -12.600481986999512
    7. '```' → logprob: -13.100481986999512
    8. ' elif' → logprob: -13.350481986999512
    9. '[' → logprob: -13.600481986999512
    10. ')' → logprob: -13.725481986999512

Token 865: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006716079078614712
    2. ' int' → logprob: -5.006716251373291
    3. '=int' → logprob: -14.881715774536133
    4. '               ' → logprob: -15.131715774536133
    5. '(int' → logprob: -15.881715774536133
    6. '	int' → logprob: -17.256715774536133
    7. '[int' → logprob: -17.506715774536133
    8. '                   ' → logprob: -17.881715774536133
    9. '<int' → logprob: -18.131715774536133
    10. ':int' → logprob: -18.256715774536133

Token 866: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3080716346157715e-05
    2. '[int' → logprob: -11.250022888183594
    3. '[' → logprob: -12.000022888183594
    4. '```' → logprob: -13.000022888183594
    5. '[j' → logprob: -15.000022888183594
    6. '[I' → logprob: -15.000022888183594
    7. ' [' → logprob: -15.500022888183594
    8. '(i' → logprob: -15.875022888183594
    9. '[k' → logprob: -16.250022888183594
    10. '           ' → logprob: -16.500022888183594

Token 867: '];' (ID: 11464)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.26428887248039246
    2. ']' → logprob: -2.139288902282715
    3. ']:
' → logprob: -2.514288902282715
    4. '               ' → logprob: -4.889288902282715
    5. '):' → logprob: -5.139288902282715
    6. '[i' → logprob: -5.389288902282715
    7. '                   ' → logprob: -5.514288902282715
    8. ']):' → logprob: -5.639288902282715
    9. ']):
' → logprob: -6.264288902282715
    10. ']>' → logprob: -6.389288902282715

Token 868: ' impossible' (ID: 19786)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6381285786628723
    2. ' continue' → logprob: -1.5131285190582275
    3. 'continue' → logprob: -2.1381285190582275
    4. '                   ' → logprob: -2.2631285190582275
    5. 'pass' → logprob: -4.888128757476807
    6. '           ' → logprob: -5.138128757476807
    7. ' pass' → logprob: -5.388128757476807
    8. '	continue' → logprob: -6.138128757476807
    9. 'else' → logprob: -6.263128757476807
    10. '                       ' → logprob: -6.513128757476807

Token 869: ' si' (ID: 1784)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06568662822246552
    2. '                   ' → logprob: -3.4406867027282715
    3. '           ' → logprob: -3.9406867027282715
    4. 'continue' → logprob: -5.1906867027282715
    5. ' continue' → logprob: -6.0656867027282715
    6. ':' → logprob: -6.0656867027282715
    7. 'else' → logprob: -7.0656867027282715
    8. '.' → logprob: -8.315686225891113
    9. '                       ' → logprob: -8.565686225891113
    10. ' else' → logprob: -8.565686225891113

Token 870: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4325922131538391
    2. ' k' → logprob: -1.3075921535491943
    3. ' bound' → logprob: -2.9325921535491943
    4. 'bound' → logprob: -4.057592391967773
    5. 'True' → logprob: -5.432592391967773
    6. ' True' → logprob: -6.682592391967773
    7. '0' → logprob: -7.057592391967773
    8. 'i' → logprob: -7.432592391967773
    9. ' i' → logprob: -7.557592391967773
    10. '(k' → logprob: -7.807592391967773

Token 871: ' est' (ID: 893)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4426902532577515
    2. 'continue' → logprob: -1.5676902532577515
    3. ' continue' → logprob: -1.9426902532577515
    4. 'place' → logprob: -2.442690372467041
    5. ' place' → logprob: -2.942690372467041
    6. '0' → logprob: -3.442690372467041
    7. 'est' → logprob: -3.942690372467041
    8. ' dépasse' → logprob: -3.942690372467041
    9. ''ve' → logprob: -4.067690372467041
    10. '#' → logprob: -4.192690372467041

Token 872: ' encore' (ID: 14043)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.17012569308280945
    2. 'dans' → logprob: -2.795125722885132
    3. 'still' → logprob: -3.670125722885132
    4. 'sur' → logprob: -3.795125722885132
    5. 'en' → logprob: -3.920125722885132
    6. ' bound' → logprob: -4.795125484466553
    7. ' encore' → logprob: -4.920125484466553
    8. 'à' → logprob: -5.545125484466553
    9. '-bound' → logprob: -6.420125484466553
    10. 'in' → logprob: -6.795125484466553

Token 873: ' sur' (ID: 1512)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.07227885723114014
    2. ' à' → logprob: -3.1972789764404297
    3. 'bound' → logprob: -3.9472789764404297
    4. '1' → logprob: -5.44727897644043
    5. ' bound' → logprob: -6.57227897644043
    6. 'sur' → logprob: -6.94727897644043
    7. 'dans' → logprob: -7.07227897644043
    8. ' ' → logprob: -7.32227897644043
    9. '```' → logprob: -7.57227897644043
    10. 'À' → logprob: -8.57227897644043

Token 874: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008990817703306675
    2. 'la' → logprob: -5.50899076461792
    3. 'bound' → logprob: -6.13399076461792
    4. ' la' → logprob: -7.13399076461792
    5. ' ' → logprob: -7.38399076461792
    6. 'l' → logprob: -7.38399076461792
    7. '```' → logprob: -8.133991241455078
    8. ' bound' → logprob: -8.383991241455078
    9. '0' → logprob: -9.383991241455078
    10. 'Dp' → logprob: -10.383991241455078

Token 875: ' borne' (ID: 111819)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25976666808128357
    2. 'bound' → logprob: -2.1347665786743164
    3. 'lim' → logprob: -2.7597665786743164
    4. 'limit' → logprob: -3.1347665786743164
    5. '0' → logprob: -7.009766578674316
    6. '```' → logprob: -7.009766578674316
    7. ' limite' → logprob: -7.134766578674316
    8. 'borne' → logprob: -8.134766578674316
    9. ' ' → logprob: -8.384766578674316
    10. ' bound' → logprob: -8.884766578674316

Token 876: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36536508798599243
    2. '                   ' → logprob: -1.6153650283813477
    3. '           ' → logprob: -2.7403650283813477
    4. 'else' → logprob: -4.240365028381348
    5. 'continue' → logprob: -5.115365028381348
    6. ' continue' → logprob: -5.240365028381348
    7. ' else' → logprob: -5.615365028381348
    8. ':' → logprob: -5.740365028381348
    9. '                       ' → logprob: -5.740365028381348
    10. '.' → logprob: -6.615365028381348

Token 877: ' mais' (ID: 2899)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2238961160182953
    2. '               ' → logprob: -2.098896026611328
    3. '                       ' → logprob: -2.848896026611328
    4. '           ' → logprob: -5.223896026611328
    5. 'continue' → logprob: -5.723896026611328
    6. '                           ' → logprob: -5.848896026611328
    7. ' continue' → logprob: -6.223896026611328
    8. '                    ' → logprob: -6.598896026611328
    9. '                ' → logprob: -7.098896026611328
    10. '                               ' → logprob: -7.223896026611328

Token 878: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0166120529174805
    2. '#' → logprob: -1.1416120529174805
    3. '                   ' → logprob: -1.5166120529174805
    4. 'Dp' → logprob: -3.0166120529174805
    5. 'for' → logprob: -4.0166120529174805
    6. 'continue' → logprob: -4.8916120529174805
    7. 'pass' → logprob: -5.1416120529174805
    8. '           ' → logprob: -5.7666120529174805
    9. 'True' → logprob: -5.8916120529174805
    10. 'k' → logprob: -6.3916120529174805

Token 879: ' peut' (ID: 9216)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9843844771385193
    2. 'else' → logprob: -1.109384536743164
    3. 'continue' → logprob: -1.859384536743164
    4. ' else' → logprob: -2.609384536743164
    5. '               ' → logprob: -3.609384536743164
    6. '[' → logprob: -3.859384536743164
    7. ']' → logprob: -5.609384536743164
    8. '           ' → logprob: -5.734384536743164
    9. '                   ' → logprob: -5.984384536743164
    10. 'n' → logprob: -6.109384536743164

Token 880: ' continuer' (ID: 75597)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.38817355036735535
    2. ' continue' → logprob: -1.8881735801696777
    3. '                   ' → logprob: -2.2631735801696777
    4. '               ' → logprob: -3.2631735801696777
    5. ' continuer' → logprob: -4.263173580169678
    6. 'contin' → logprob: -4.513173580169678
    7. '           ' → logprob: -7.138173580169678
    8. '```' → logprob: -7.513173580169678
    9. ' continues' → logprob: -8.13817310333252
    10. '                       ' → logprob: -8.26317310333252

Token 881: ' en' (ID: 469)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47655922174453735
    2. '                   ' → logprob: -0.9765592217445374
    3. '           ' → logprob: -6.851559162139893
    4. '                       ' → logprob: -7.976559162139893
    5. ' with' → logprob: -8.85155963897705
    6. '```' → logprob: -9.22655963897705
    7. 'Dp' → logprob: -9.47655963897705
    8. '.' → logprob: -9.47655963897705
    9. '                ' → logprob: -9.60155963897705
    10. '                
' → logprob: -9.85155963897705

Token 882: ' bound' (ID: 11608)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.7893074154853821
    2. '0' → logprob: -1.2893073558807373
    3. 'Dp' → logprob: -2.1643073558807373
    4. 'zone' → logprob: -2.5393073558807373
    5. ' zone' → logprob: -3.4143073558807373
    6. 'continu' → logprob: -4.414307594299316
    7. ' bound' → logprob: -4.664307594299316
    8. '```' → logprob: -5.289307594299316
    9. 'lib' → logprob: -5.914307594299316
    10. ' ' → logprob: -5.914307594299316

Token 883: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027669763192534447
    2. '[' → logprob: -3.777669668197632
    3. ' ' → logprob: -6.152669906616211
    4. '               ' → logprob: -7.027669906616211
    5. '                   ' → logprob: -7.527669906616211
    6. '           ' → logprob: -7.777669906616211
    7. '```' → logprob: -9.402669906616211
    8. '1' → logprob: -9.527669906616211
    9. '=' → logprob: -9.902669906616211
    10. '   ' → logprob: -10.152669906616211

Token 884: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007968813297338784
    2. ' ' → logprob: -7.500796794891357
    3. '1' → logprob: -9.000797271728516
    4. '[' → logprob: -9.250797271728516
    5. '   ' → logprob: -11.750797271728516
    6. '               ' → logprob: -12.375797271728516
    7. '```' → logprob: -12.375797271728516
    8. '`' → logprob: -13.125797271728516
    9. '           ' → logprob: -13.250797271728516
    10. '                   ' → logprob: -13.375797271728516

Token 885: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.578537106513977
    2. '                   ' → logprob: -0.828537106513977
    3. '           ' → logprob: -7.5785369873046875
    4. ')' → logprob: -8.203536987304688
    5. '[' → logprob: -8.203536987304688
    6. ':' → logprob: -8.578536987304688
    7. '                       ' → logprob: -8.828536987304688
    8. '```' → logprob: -8.828536987304688
    9. ':
' → logprob: -9.078536987304688
    10. ']' → logprob: -9.328536987304688

Token 886: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6943985223770142
    2. '                   ' → logprob: -0.6943985223770142
    3. '           ' → logprob: -7.319398403167725
    4. '                       ' → logprob: -8.569398880004883
    5. '                ' → logprob: -8.819398880004883
    6. '```' → logprob: -9.319398880004883
    7. '              ' → logprob: -10.319398880004883
    8. '                  ' → logprob: -10.819398880004883
    9. '                    ' → logprob: -10.944398880004883
    10. '                           ' → logprob: -11.444398880004883

Token 887: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.44586554169654846
    2. '                   ' → logprob: -1.195865511894226
    3. 'else' (adapté à ' else') → logprob: -3.3208656311035156
    4. ' else' → logprob: -4.445865631103516
    5. 'continue' → logprob: -6.070865631103516
    6. ' continue' → logprob: -6.195865631103516
    7. '           ' → logprob: -6.320865631103516
    8. 'elif' → logprob: -6.695865631103516
    9. 'Dp' → logprob: -7.320865631103516
    10. '```' → logprob: -8.195865631103516

Token 888: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40658554434776306
    2. '                   ' → logprob: -1.1565855741500854
    3. ':' → logprob: -4.531585693359375
    4. ':
' → logprob: -5.031585693359375
    5. '           ' → logprob: -7.281585693359375
    6. '                       ' → logprob: -7.906585693359375
    7. '                ' → logprob: -8.031585693359375
    8. '{
' → logprob: -8.281585693359375
    9. '{' → logprob: -8.656585693359375
    10. '                    ' → logprob: -9.656585693359375

Token 889: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014945597387850285
    2. '               ' → logprob: -4.2649455070495605
    3. '                       ' → logprob: -7.8899455070495605
    4. '                    ' → logprob: -9.014945983886719
    5. '                ' → logprob: -9.264945983886719
    6. '           ' → logprob: -9.764945983886719
    7. '                  ' → logprob: -10.389945983886719
    8. 'Dp' → logprob: -10.389945983886719
    9. '                           ' → logprob: -10.514945983886719
    10. '   ' → logprob: -11.389945983886719

Token 890: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.005055383313447237
    2. '                   ' → logprob: -5.5050554275512695
    3. '               ' → logprob: -7.8800554275512695
    4. 'continue' → logprob: -8.00505542755127
    5. '           ' → logprob: -9.63005542755127
    6. '0' → logprob: -10.00505542755127
    7. '   ' → logprob: -10.50505542755127
    8. '                       ' → logprob: -10.63005542755127
    9. ' continue' → logprob: -10.63005542755127
    10. '                    ' → logprob: -11.25505542755127

Token 891: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.034592388459714e-06
    2. '0' → logprob: -12.625005722045898
    3. '#' → logprob: -14.000005722045898
    4. '[' → logprob: -15.562505722045898
    5. '```' → logprob: -15.687505722045898
    6. ' p' → logprob: -15.937505722045898
    7. 'Dp' → logprob: -16.0625057220459
    8. ' ' → logprob: -16.0625057220459
    9. 'п' → logprob: -16.2500057220459
    10. '=' → logprob: -16.8125057220459

Token 892: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. 'i' → logprob: -13.250001907348633
    3. '[' → logprob: -17.125001907348633
    4. '```' → logprob: -17.250001907348633
    5. '[I' → logprob: -18.875001907348633
    6. 's' → logprob: -19.875001907348633
    7. '[int' → logprob: -20.000001907348633
    8. '[j' → logprob: -20.000001907348633
    9. ' i' → logprob: -20.500001907348633
    10. 'w' → logprob: -20.750001907348633

Token 893: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0023410427384078503
    2. '[' → logprob: -7.002341270446777
    3. '[i' → logprob: -7.252341270446777
    4. '][' → logprob: -7.252341270446777
    5. '```' → logprob: -12.252341270446777
    6. '+[' → logprob: -13.002341270446777
    7. 'i' → logprob: -13.377341270446777
    8. ' +' → logprob: -14.752341270446777
    9. ' [' → logprob: -15.002341270446777
    10. '}[' → logprob: -15.502341270446777

Token 894: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013619012897834182
    2. '+' → logprob: -7.001361846923828
    3. 'i' → logprob: -8.001361846923828
    4. '][' → logprob: -9.501361846923828
    5. '[i' → logprob: -10.876361846923828
    6. '[' → logprob: -11.501361846923828
    7. ' ' → logprob: -12.751361846923828
    8. '```' → logprob: -12.876361846923828
    9. '0' → logprob: -13.876361846923828
    10. '>' → logprob: -14.376361846923828

Token 895: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014034447958692908
    2. '[' → logprob: -7.001403331756592
    3. '[j' → logprob: -7.751403331756592
    4. '           ' → logprob: -10.50140380859375
    5. ' ][' → logprob: -12.00140380859375
    6. ']' → logprob: -12.50140380859375
    7. '}[' → logprob: -12.62640380859375
    8. '[i' → logprob: -13.12640380859375
    9. '>[' → logprob: -13.12640380859375
    10. '```' → logprob: -13.12640380859375

Token 896: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5048530030981055e-06
    2. '[j' → logprob: -14.000001907348633
    3. ' j' → logprob: -14.375001907348633
    4. '	j' → logprob: -18.625001907348633
    5. '$j' → logprob: -19.000001907348633
    6. '   ' → logprob: -21.250001907348633
    7. ',j' → logprob: -21.500001907348633
    8. '][' → logprob: -21.750001907348633
    9. '```' → logprob: -21.875001907348633
    10. '(j' → logprob: -22.250001907348633

Token 897: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00976482592523098
    2. '[' → logprob: -4.634764671325684
    3. ']' → logprob: -12.884764671325684
    4. '0' → logprob: -12.884764671325684
    5. ' ][' → logprob: -13.384764671325684
    6. '}[' → logprob: -14.509764671325684
    7. '>[' → logprob: -15.134764671325684
    8. '```' → logprob: -15.259764671325684
    9. '>' → logprob: -15.384764671325684
    10. ''][' → logprob: -15.509764671325684

Token 898: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '1' → logprob: -18.75
    3. '۰' → logprob: -19.25
    4. '０' → logprob: -20.375
    5. '```' → logprob: -21.25
    6. ' ' → logprob: -21.5
    7. '০' → logprob: -21.5
    8. '[' → logprob: -21.625
    9. '   ' → logprob: -21.75
    10. '٠' → logprob: -22.375

Token 899: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001502717612311244
    2. ']+=' → logprob: -6.501502513885498
    3. ' ]' → logprob: -15.376502990722656
    4. ']+' → logprob: -15.751502990722656
    5. '+=' → logprob: -17.376502990722656
    6. '][' → logprob: -17.751502990722656
    7. ']
' → logprob: -18.126502990722656
    8. '```' → logprob: -18.126502990722656
    9. ')' → logprob: -18.251502990722656
    10. '']' → logprob: -18.501502990722656

Token 900: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00012451570364646614
    2. ']+=' → logprob: -9.25012493133545
    3. ' +=' → logprob: -10.50012493133545
    4. '[' → logprob: -15.37512493133545
    5. '=' → logprob: -15.50012493133545
    6. '+' → logprob: -15.62512493133545
    7. '```' → logprob: -15.87512493133545
    8. '+=(' → logprob: -17.500123977661133
    9. '           ' → logprob: -17.625123977661133
    10. ']' → logprob: -17.875123977661133

Token 901: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -4.36574100604048e-06
    2. '0' → logprob: -12.500004768371582
    3. ' D' → logprob: -15.375004768371582
    4. 'DP' → logprob: -16.125003814697266
    5. 'D' → logprob: -17.000003814697266
    6. 'Dn' → logprob: -17.625003814697266
    7. '	D' → logprob: -17.750003814697266
    8. 'Dj' → logprob: -17.875003814697266
    9. 'Dc' → logprob: -18.000003814697266
    10. 'Df' → logprob: -18.125003814697266

Token 902: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5048530030981055e-06
    2. 'Dp' → logprob: -13.625001907348633
    3. '[i' → logprob: -15.625001907348633
    4. '[p' → logprob: -16.750001907348633
    5. '
' → logprob: -17.375001907348633
    6. '[' → logprob: -17.750001907348633
    7. 'i' → logprob: -17.750001907348633
    8. ' p' → logprob: -18.000001907348633
    9. '_p' → logprob: -18.125001907348633
    10. 'P' → logprob: -18.625001907348633

Token 903: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. 'i' → logprob: -12.87500286102295
    3. '```' → logprob: -16.625001907348633
    4. '[' → logprob: -16.750001907348633
    5. ' [' → logprob: -17.250001907348633
    6. '][' → logprob: -17.500001907348633
    7. '[user' → logprob: -18.125001907348633
    8. '
' → logprob: -18.250001907348633
    9. '[j' → logprob: -18.375001907348633
    10. 'user' → logprob: -18.625001907348633

Token 904: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.47626737493556e-05
    2. '[i' → logprob: -10.50003433227539
    3. ' ][' → logprob: -12.12503433227539
    4. ']' → logprob: -14.25003433227539
    5. '   ' → logprob: -15.25003433227539
    6. 'i' → logprob: -15.37503433227539
    7. '[' → logprob: -16.00003433227539
    8. ' ' → logprob: -16.50003433227539
    9. '+' → logprob: -16.50003433227539
    10. '[j' → logprob: -16.62503433227539

Token 905: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.026302969083189964
    2. 'i' → logprob: -3.6513030529022217
    3. ' j' → logprob: -14.0263032913208
    4. '[i' → logprob: -14.1513032913208
    5. 'k' → logprob: -14.9013032913208
    6. ' i' → logprob: -15.4013032913208
    7. '[j' → logprob: -15.4013032913208
    8. '][' → logprob: -15.6513032913208
    9. '```' → logprob: -16.901302337646484
    10. '	j' → logprob: -17.151302337646484

Token 906: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10027708113193512
    2. '][' → logprob: -2.3502771854400635
    3. '0' → logprob: -9.975276947021484
    4. '}[' → logprob: -11.350276947021484
    5. ' [' → logprob: -12.225276947021484
    6. ''][' → logprob: -13.475276947021484
    7. ')[' → logprob: -13.600276947021484
    8. ']' → logprob: -13.975276947021484
    9. '>[' → logprob: -13.975276947021484
    10. '```' → logprob: -14.350276947021484

Token 907: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '۰' → logprob: -18.0
    3. ' ' → logprob: -18.375
    4. '０' → logprob: -19.375
    5. '০' → logprob: -19.625
    6. '1' → logprob: -20.0
    7. '[' → logprob: -20.0
    8. '<|end|>' → logprob: -20.5
    9. '```' → logprob: -20.5625
    10. '०' → logprob: -20.8125

Token 908: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0533099174499512
    2. ']' → logprob: -1.1783099174499512
    3. ')' → logprob: -1.3033099174499512
    4. '               ' → logprob: -2.928309917449951
    5. '<|end|>' → logprob: -4.178309917449951
    6. '                   ' → logprob: -6.678309917449951
    7. '])' → logprob: -7.928309917449951
    8. '<|end|>' → logprob: -8.30331039428711
    9. '       ' → logprob: -8.42831039428711
    10. ')]' → logprob: -8.92831039428711

Token 909: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0732979029417038
    2. 'else' → logprob: -3.0732979774475098
    3. '               ' → logprob: -3.9482979774475098
    4. ' else' → logprob: -5.57329797744751
    5. 'elif' → logprob: -7.32329797744751
    6. '		' → logprob: -8.448297500610352
    7. '```' → logprob: -8.823297500610352
    8. 'continue' → logprob: -9.448297500610352
    9. '	       ' → logprob: -9.448297500610352
    10. '                   ' → logprob: -10.448297500610352

Token 910: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1603340059518814
    2. '           ' → logprob: -2.4103341102600098
    3. ' else' → logprob: -2.9103341102600098
    4. '               ' → logprob: -5.66033411026001
    5. 'elif' → logprob: -8.285333633422852
    6. '```' → logprob: -9.660333633422852
    7. 'continue' → logprob: -10.410333633422852
    8. '		' → logprob: -10.785333633422852
    9. ' elif' → logprob: -10.910333633422852
    10. '       ' → logprob: -12.410333633422852

Token 911: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1830337643623352
    2. ':
' → logprob: -1.9330337047576904
    3. '               ' → logprob: -3.9330337047576904
    4. ' :' → logprob: -6.4330339431762695
    5. ' :
' → logprob: -7.1830339431762695
    6. '           ' → logprob: -8.68303394317627
    7. '#' → logprob: -9.55803394317627
    8. '[' → logprob: -10.05803394317627
    9. ' if' → logprob: -10.18303394317627
    10. '                   ' → logprob: -10.30803394317627

Token 912: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17455346882343292
    2. '#' → logprob: -2.049553394317627
    3. 'if' → logprob: -3.799553394317627
    4. ' if' → logprob: -4.924553394317627
    5. ' #' → logprob: -6.924553394317627
    6. '           ' → logprob: -7.424553394317627
    7. '```' → logprob: -9.799553871154785
    8. '              ' → logprob: -10.799553871154785
    9. '   ' → logprob: -11.424553871154785
    10. '                ' → logprob: -11.424553871154785

Token 913: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00040576665196567774
    2. ' if' → logprob: -8.375405311584473
    3. '               ' → logprob: -9.125405311584473
    4. 'for' → logprob: -10.125405311584473
    5. '#' (adapté à ' #') → logprob: -11.125405311584473
    6. '                   ' → logprob: -11.875405311584473
    7. '           ' → logprob: -12.875405311584473
    8. '```' → logprob: -13.375405311584473
    9. '                       ' → logprob: -15.875405311584473
    10. '   ' → logprob: -15.875405311584473

Token 914: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004507731180638075
    2. '#' → logprob: -6.254507541656494
    3. '               ' → logprob: -6.254507541656494
    4. ' if' → logprob: -7.504507541656494
    5. 'for' → logprob: -10.129508018493652
    6. '                   ' → logprob: -10.754508018493652
    7. 'new' → logprob: -11.004508018493652
    8. '           ' → logprob: -11.504508018493652
    9. 'Dp' → logprob: -12.504508018493652
    10. '```' → logprob: -13.004508018493652

Token 915: ' on' (ID: 402)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2570452392101288
    2. 'k' → logprob: -1.5070452690124512
    3. ' j' → logprob: -5.507045269012451
    4. 'j' → logprob: -7.007045269012451
    5. ' ' → logprob: -10.382044792175293
    6. ' p' → logprob: -10.632044792175293
    7. '(k' → logprob: -10.757044792175293
    8. 'p' → logprob: -11.007044792175293
    9. 'D' → logprob: -11.757044792175293
    10. '   ' → logprob: -12.069544792175293

Token 916: ' place' (ID: 2475)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06078828126192093
    2. ' k' → logprob: -3.68578839302063
    3. 'j' → logprob: -4.185788154602051
    4. 'place' → logprob: -4.685788154602051
    5. ' place' → logprob: -6.185788154602051
    6. 'Dp' → logprob: -7.060788154602051
    7. 'placement' → logprob: -7.310788154602051
    8. 'placer' → logprob: -7.310788154602051
    9. 'placed' → logprob: -7.435788154602051
    10. ' j' → logprob: -7.435788154602051

Token 917: ' un' (ID: 537)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.781653106212616
    2. ' k' → logprob: -0.781653106212616
    3. ' j' → logprob: -3.7816531658172607
    4. ' non' → logprob: -3.7816531658172607
    5. ' un' → logprob: -4.281652927398682
    6. 'j' → logprob: -5.031652927398682
    7. 'non' → logprob: -5.156652927398682
    8. ' a' → logprob: -5.781652927398682
    9. ' not' → logprob: -5.906652927398682
    10. ' ' → logprob: -5.906652927398682

Token 918: ' chiffre' (ID: 107420)
  Prédit: ' chiffre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chiffre' → logprob: -1.0202538967132568
    2. ' non' → logprob: -1.3952538967132568
    3. 'ch' → logprob: -1.6452538967132568
    4. '0' → logprob: -2.395253896713257
    5. 'non' → logprob: -2.520253896713257
    6. ' ' → logprob: -4.145254135131836
    7. 'k' → logprob: -5.645254135131836
    8. ' ch' → logprob: -6.020254135131836
    9. '1' → logprob: -6.645254135131836
    10. ' chiffres' → logprob: -7.020254135131836

Token 919: ' non' (ID: 2893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.017443090677261353
    2. '!=' → logprob: -4.1424431800842285
    3. ' non' → logprob: -6.7674431800842285
    4. ' >' → logprob: -9.51744270324707
    5. ' ' → logprob: -9.89244270324707
    6. 'non' → logprob: -10.14244270324707
    7. '>' → logprob: -11.26744270324707
    8. '[' → logprob: -11.39244270324707
    9. ' >=' → logprob: -11.64244270324707
    10. '_non' → logprob: -12.01744270324707

Token 920: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015512908808887005
    2. '-' → logprob: -4.890512943267822
    3. '=' → logprob: -5.265512943267822
    4. '_' → logprob: -6.140512943267822
    5. ' ' → logprob: -8.140512466430664
    6. '-zero' → logprob: -9.890512466430664
    7. ' =' → logprob: -10.015512466430664
    8. '-z' → logprob: -10.015512466430664
    9. ' -' → logprob: -10.140512466430664
    10. '   ' → logprob: -10.890512466430664

Token 921: 'éro' (ID: 28155)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.20439311861991882
    2. 'éro' → logprob: -1.7043931484222412
    3. '0' → logprob: -6.204392910003662
    4. 'ro' → logprob: -7.454392910003662
    5. '```' → logprob: -9.20439338684082
    6. ' ' → logprob: -9.82939338684082
    7. 'éros' → logprob: -9.95439338684082
    8. 'erro' → logprob: -10.45439338684082
    9. 'e' → logprob: -10.45439338684082
    10. 'é' → logprob: -10.57939338684082

Token 922: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42844802141189575
    2. ':
' → logprob: -1.553447961807251
    3. '               ' → logprob: -2.303447961807251
    4. '                   ' → logprob: -4.30344820022583
    5. ' if' → logprob: -4.55344820022583
    6. '<|end|>' → logprob: -5.92844820022583
    7. ' and' → logprob: -6.42844820022583
    8. ' :' → logprob: -6.55344820022583
    9. '           ' → logprob: -7.05344820022583
    10. ' (' → logprob: -7.42844820022583

Token 923: ' cette' (ID: 7696)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28799372911453247
    2. 'i' → logprob: -2.4129936695098877
    3. 'this' → logprob: -2.4129936695098877
    4. 'j' → logprob: -3.7879936695098877
    5. ' cette' → logprob: -3.7879936695098877
    6. 'l' → logprob: -4.662993907928467
    7. 'la' → logprob: -5.537993907928467
    8. 'position' → logprob: -5.787993907928467
    9. ' this' → logprob: -5.787993907928467
    10. ' k' → logprob: -6.412993907928467

Token 924: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.1282282918691635
    2. ' position' → logprob: -2.128228187561035
    3. '[position' → logprob: -7.628228187561035
    4. '_position' → logprob: -7.753228187561035
    5. '.position' → logprob: -9.253228187561035
    6. 'osition' → logprob: -9.253228187561035
    7. '(position' → logprob: -9.628228187561035
    8. '位置' → logprob: -10.128228187561035
    9. '	position' → logprob: -10.628228187561035
    10. 'pos' → logprob: -10.628228187561035

Token 925: ' :
' (ID: 10039)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7321012616157532
    2. ':
' → logprob: -0.9821012616157532
    3. ':' → logprob: -2.1071012020111084
    4. '                   ' → logprob: -4.3571014404296875
    5. ' if' → logprob: -5.4821014404296875
    6. ' and' → logprob: -5.9821014404296875
    7. 'if' → logprob: -7.3571014404296875
    8. '):
' → logprob: -7.8571014404296875
    9. '                ' → logprob: -7.9821014404296875
    10. '           ' → logprob: -7.9821014404296875

Token 926: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3937934339046478
    2. '               ' → logprob: -1.1437934637069702
    3. '#' → logprob: -5.64379358291626
    4. ' if' → logprob: -6.01879358291626
    5. '           ' → logprob: -7.51879358291626
    6. '```' → logprob: -8.768793106079102
    7. '                   ' → logprob: -9.018793106079102
    8. '              ' → logprob: -10.518793106079102
    9. 'for' → logprob: -10.643793106079102
    10. '                ' → logprob: -10.643793106079102

Token 927: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0014816515613347292
    2. ' if' → logprob: -7.251481533050537
    3. '               ' → logprob: -7.501481533050537
    4. '#' → logprob: -9.001482009887695
    5. '                   ' → logprob: -10.001482009887695
    6. 'for' → logprob: -10.876482009887695
    7. '```' → logprob: -11.501482009887695
    8. 'bound' → logprob: -11.751482009887695
    9. '           ' → logprob: -11.876482009887695
    10. 'max' → logprob: -13.001482009887695

Token 928: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08552708476781845
    2. 'j' → logprob: -2.585527181625366
    3. ' k' → logprob: -5.460526943206787
    4. ' j' → logprob: -6.710526943206787
    5. 'p' → logprob: -7.460526943206787
    6. '(k' → logprob: -8.835527420043945
    7. 'bound' → logprob: -9.335527420043945
    8. 'i' → logprob: -9.335527420043945
    9. '1' → logprob: -9.585527420043945
    10. 'int' → logprob: -10.210527420043945

Token 929: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18434889614582062
    2. '<' → logprob: -2.1843488216400146
    3. ' >' → logprob: -3.8093488216400146
    4. ' <=' → logprob: -3.8093488216400146
    5. '>' → logprob: -5.059349060058594
    6. '<=' → logprob: -5.434349060058594
    7. '<int' → logprob: -7.934349060058594
    8. ' !=' → logprob: -9.434349060058594
    9. ' ==' → logprob: -9.559349060058594
    10. ' ' → logprob: -9.809349060058594

Token 930: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002475777640938759
    2. ' int' → logprob: -6.002475738525391
    3. '=int' → logprob: -18.00247573852539
    4. ' ' → logprob: -19.12747573852539
    5. '10' → logprob: -19.12747573852539
    6. '(int' → logprob: -19.37747573852539
    7. '<int' → logprob: -19.62747573852539
    8. ':int' → logprob: -20.87747573852539
    9. '[int' → logprob: -21.12747573852539
    10. '	int' → logprob: -21.12747573852539

Token 931: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.500001907348633
    3. 'n' → logprob: -15.000001907348633
    4. ' (' → logprob: -19.250001907348633
    5. '(
' → logprob: -19.500001907348633
    6. ' n' → logprob: -21.250001907348633
    7. '[n' → logprob: -22.250001907348633
    8. '	n' → logprob: -22.750001907348633
    9. '<n' → logprob: -23.375001907348633
    10. ')n' → logprob: -23.500001907348633

Token 932: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. '[I' → logprob: -15.875001907348633
    4. 'i' → logprob: -16.375001907348633
    5. '[n' → logprob: -16.750001907348633
    6. '(i' → logprob: -16.750001907348633
    7. '[user' → logprob: -17.000001907348633
    8. ' [' → logprob: -17.125001907348633
    9. '[
' → logprob: -17.125001907348633
    10. '```' → logprob: -17.125001907348633

Token 933: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4790065586566925
    2. '):' → logprob: -0.9790065288543701
    3. ']):' → logprob: -5.854006767272949
    4. ']):
' → logprob: -6.604006767272949
    5. ')' → logprob: -8.22900676727295
    6. '[i' → logprob: -8.22900676727295
    7. '):
' → logprob: -10.35400676727295
    8. '               ' → logprob: -10.35400676727295
    9. '           ' → logprob: -10.72900676727295
    10. ']:' → logprob: -11.22900676727295

Token 934: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003693420672789216
    2. '               ' → logprob: -6.253693580627441
    3. '   ' → logprob: -7.253693580627441
    4. '```' → logprob: -7.378693580627441
    5. '                       ' → logprob: -8.503693580627441
    6. ':
' → logprob: -9.628693580627441
    7. '                  ' → logprob: -10.503693580627441
    8. '#' → logprob: -10.753693580627441
    9. '<|end|>' → logprob: -11.003693580627441
    10. '                 ' → logprob: -11.378693580627441

Token 935: ' #' (ID: 1069)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.00024715426843613386
    2. '                   ' → logprob: -8.37524700164795
    3. '               ' → logprob: -12.00024700164795
    4. '                       ' → logprob: -12.75024700164795
    5. 'Dj' → logprob: -13.25024700164795
    6. '#' (adapté à ' #') → logprob: -13.37524700164795
    7. 'Dv' → logprob: -14.25024700164795
    8. 'DP' → logprob: -14.50024700164795
    9. 'Dw' → logprob: -14.50024700164795
    10. 'Dn' → logprob: -14.87524700164795

Token 936: ' On' (ID: 2160)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0009618389885872602
    2. '                   ' → logprob: -7.125961780548096
    3. 'if' → logprob: -9.125962257385254
    4. '               ' → logprob: -10.750962257385254
    5. '                       ' → logprob: -11.500962257385254
    6. 'DP' → logprob: -12.125962257385254
    7. '#' → logprob: -12.375962257385254
    8. '   ' → logprob: -12.750962257385254
    9. 'Dj' → logprob: -13.875962257385254
    10. '           ' → logprob: -14.625962257385254

Token 937: ' tombe' (ID: 106773)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.402405709028244
    2. 'p' → logprob: -1.1524057388305664
    3. 'dp' → logprob: -5.152405738830566
    4. '               ' → logprob: -6.027405738830566
    5. '           ' → logprob: -6.152405738830566
    6. '#' → logprob: -6.902405738830566
    7. '                   ' → logprob: -7.527405738830566
    8. ' +=' → logprob: -7.902405738830566
    9. 'd' → logprob: -8.277405738830566
    10. '             ' → logprob: -8.277405738830566

Token 938: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.7530957460403442
    2. 'dans' → logprob: -0.7530957460403442
    3. 'into' → logprob: -4.628095626831055
    4. ' into' → logprob: -4.753095626831055
    5. '[' → logprob: -5.003095626831055
    6. '                   ' → logprob: -5.003095626831055
    7. 'Dans' → logprob: -5.128095626831055
    8. 'in' → logprob: -5.253095626831055
    9. 'n' → logprob: -6.253095626831055
    10. '               ' → logprob: -6.253095626831055

Token 939: ' la' (ID: 557)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.013190940022468567
    2. '0' → logprob: -4.763190746307373
    3. ' D' → logprob: -5.888190746307373
    4. '[' → logprob: -7.013190746307373
    5. 'D' → logprob: -7.513190746307373
    6. ' ' → logprob: -8.513191223144531
    7. 'bound' → logprob: -10.388191223144531
    8. 'DP' → logprob: -11.138191223144531
    9. '[D' → logprob: -11.388191223144531
    10. 'Dj' → logprob: -11.638191223144531

Token 940: ' zone' (ID: 15070)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.7930374145507812
    2. '0' → logprob: -1.4180374145507812
    3. '[' → logprob: -1.6680374145507812
    4. 'Dp' → logprob: -2.4180374145507812
    5. ' bound' → logprob: -3.6680374145507812
    6. 'zone' → logprob: -7.293037414550781
    7. 'D' → logprob: -7.418037414550781
    8. ' ' → logprob: -8.418037414550781
    9. '-bound' → logprob: -8.793037414550781
    10. '```' → logprob: -9.418037414550781

Token 941: ' "' (ID: 392)
  Prédit: ' libre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' libre' → logprob: -0.20213507115840912
    2. 'lib' → logprob: -1.8271350860595703
    3. '0' → logprob: -4.07713508605957
    4. 'free' → logprob: -6.20213508605957
    5. '[' → logprob: -6.70213508605957
    6. ' free' → logprob: -7.32713508605957
    7. ' ' → logprob: -7.95213508605957
    8. ' ' → logprob: -8.45213508605957
    9. ' libres' → logprob: -8.57713508605957
    10. 'Libre' → logprob: -8.82713508605957

Token 942: 'lib' (ID: 5997)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. 'free' → logprob: -14.500001907348633
    4. '[' → logprob: -15.625001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '#' → logprob: -17.875001907348633
    7. '```' → logprob: -18.250001907348633
    8. '(' → logprob: -18.250001907348633
    9. '1' → logprob: -18.375001907348633
    10. 'lib' → logprob: -18.437501907348633

Token 943: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -2.141186450899113e-05
    2. 'ree' → logprob: -12.625020980834961
    3. 'r' → logprob: -12.750020980834961
    4. 'rée' → logprob: -12.750020980834961
    5. 'ré' → logprob: -12.875020980834961
    6. '0' → logprob: -12.875020980834961
    7. '```' → logprob: -13.250020980834961
    8. 'e' → logprob: -13.250020980834961
    9. 'érée' → logprob: -14.125020980834961
    10. '{' → logprob: -14.875020980834961

Token 944: '"' (ID: 1)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7585484981536865
    2. '0' → logprob: -1.1335484981536865
    3. ' (' → logprob: -2.1335484981536865
    4. '(' → logprob: -2.8835484981536865
    5. '```' → logprob: -4.383548736572266
    6. '"' → logprob: -5.133548736572266
    7. 'Dp' → logprob: -5.758548736572266
    8. ' ' → logprob: -5.883548736572266
    9. '][' → logprob: -6.133548736572266
    10. ' [' → logprob: -6.383548736572266

Token 945: ' à' (ID: 1221)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05198657140135765
    2. 'Dp' → logprob: -3.3019864559173584
    3. '               ' → logprob: -5.3019866943359375
    4. '                       ' → logprob: -5.5519866943359375
    5. '[' → logprob: -6.3019866943359375
    6. ':
' → logprob: -6.8019866943359375
    7. ':' → logprob: -7.0519866943359375
    8. '(D' → logprob: -8.676986694335938
    9. '```' → logprob: -8.676986694335938
    10. '           ' → logprob: -8.801986694335938

Token 946: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015583331696689129
    2. 'Dp' → logprob: -4.390583515167236
    3. '[' → logprob: -6.140583515167236
    4. 'bound' → logprob: -7.390583515167236
    5. ' ' → logprob: -8.640583038330078
    6. ' bound' → logprob: -10.140583038330078
    7. '#' → logprob: -11.515583038330078
    8. '```' → logprob: -11.515583038330078
    9. '[i' → logprob: -11.640583038330078
    10. 'DP' → logprob: -11.765583038330078

Token 947: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8538209199905396
    2. 'Dp' → logprob: -1.2288209199905396
    3. '0' → logprob: -1.3538209199905396
    4. '[i' → logprob: -5.10382080078125
    5. 'de' → logprob: -5.85382080078125
    6. ' de' → logprob: -5.97882080078125
    7. 'D' → logprob: -6.10382080078125
    8. 'i' → logprob: -6.22882080078125
    9. '```' → logprob: -6.72882080078125
    10. ' ' → logprob: -7.10382080078125

Token 948: ' maintenant' (ID: 35735)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.7612627148628235
    2. 'Dp' → logprob: -0.7612627148628235
    3. '0' → logprob: -3.3862626552581787
    4. ' bound' → logprob: -3.7612626552581787
    5. 'i' → logprob: -5.511262893676758
    6. 'k' → logprob: -6.511262893676758
    7. 'Bound' → logprob: -7.886262893676758
    8. '[' → logprob: -7.886262893676758
    9. ' ' → logprob: -8.011262893676758
    10. 'DP' → logprob: -8.261262893676758

Token 949: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015083568170666695
    2. '                       ' → logprob: -4.3900837898254395
    3. ':' → logprob: -6.3900837898254395
    4. '               ' → logprob: -7.2650837898254395
    5. '           ' → logprob: -10.265083312988281
    6. '```' → logprob: -10.515083312988281
    7. '                    ' → logprob: -10.765083312988281
    8. ',' → logprob: -11.015083312988281
    9. 'Dp' → logprob: -11.015083312988281
    10. '       ' → logprob: -11.265083312988281

Token 950: 'bound' (ID: 18791)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0025303566362708807
    2. '0' → logprob: -6.127530574798584
    3. '                   ' → logprob: -9.502530097961426
    4. '               ' → logprob: -9.627530097961426
    5. 'D' → logprob: -9.877530097961426
    6. ')' → logprob: -10.377530097961426
    7. 'Dj' → logprob: -10.752530097961426
    8. 'DP' → logprob: -10.877530097961426
    9. '           ' → logprob: -10.877530097961426
    10. '   ' → logprob: -11.752530097961426

Token 951: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007013487163931131
    2. ' ' → logprob: -5.257013320922852
    3. '[' → logprob: -6.382013320922852
    4. '][' → logprob: -10.382013320922852
    5. '=' → logprob: -11.132013320922852
    6. '```' → logprob: -11.507013320922852
    7. '                   ' → logprob: -12.257013320922852
    8. '
' → logprob: -12.382013320922852
    9. ' [' → logprob: -12.632013320922852
    10. '           ' → logprob: -12.632013320922852

Token 952: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.000007629394531
    3. '[' → logprob: -14.500007629394531
    4. '                   ' → logprob: -15.375007629394531
    5. '               ' → logprob: -15.875007629394531
    6. '           ' → logprob: -16.50000762939453
    7. '   ' → logprob: -17.37500762939453
    8. '                       ' → logprob: -18.12500762939453
    9. '][' → logprob: -18.37500762939453
    10. '                           ' → logprob: -18.75000762939453

Token 953: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05691839009523392
    2. '):' → logprob: -3.9319183826446533
    3. '):
' → logprob: -3.9319183826446533
    4. ')' → logprob: -4.556918621063232
    5. '                       ' → logprob: -5.806918621063232
    6. '               ' → logprob: -6.181918621063232
    7. '```' → logprob: -8.931918144226074
    8. ':' → logprob: -9.556918144226074
    9. '                    ' → logprob: -9.681918144226074
    10. '           ' → logprob: -9.681918144226074

Token 954: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05830514430999756
    2. 'Dp' → logprob: -3.308305263519287
    3. '                       ' → logprob: -3.933305263519287
    4. '               ' → logprob: -8.683304786682129
    5. '```' → logprob: -9.433304786682129
    6. '                    ' → logprob: -9.808304786682129
    7. '                     ' → logprob: -10.308304786682129
    8. '           ' → logprob: -10.433304786682129
    9. '                           ' → logprob: -10.683304786682129
    10. '                  ' → logprob: -11.183304786682129

Token 955: ' #' (ID: 1069)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.000271706550847739
    2. '                   ' → logprob: -8.250271797180176
    3. '                       ' → logprob: -12.500271797180176
    4. 'Dj' → logprob: -13.125271797180176
    5. '               ' → logprob: -13.375271797180176
    6. 'D' → logprob: -14.000271797180176
    7. 'DP' → logprob: -14.750271797180176
    8. 'Df' → logprob: -14.875271797180176
    9. 'Dv' → logprob: -15.625271797180176
    10. '```' → logprob: -15.625271797180176

Token 956: ' Pour' (ID: 13931)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.007815174758434296
    2. '                   ' → logprob: -4.882815361022949
    3. '                       ' → logprob: -9.13281536102295
    4. '               ' → logprob: -9.88281536102295
    5. ' D' → logprob: -11.25781536102295
    6. 'DP' → logprob: -12.38281536102295
    7. '```' → logprob: -12.50781536102295
    8. '                           ' → logprob: -12.63281536102295
    9. '           ' → logprob: -12.75781536102295
    10. 'D' → logprob: -12.75781536102295

Token 957: ' chaque' (ID: 21194)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.7302150726318359
    2. 'j' → logprob: -1.230215072631836
    3. ' j' → logprob: -1.855215072631836
    4. 'D' → logprob: -3.480215072631836
    5. 'k' → logprob: -4.480215072631836
    6. ' D' → logprob: -4.855215072631836
    7. ' k' → logprob: -5.355215072631836
    8. 'l' → logprob: -5.730215072631836
    9. ' l' → logprob: -6.230215072631836
    10. 'Dj' → logprob: -6.605215072631836

Token 958: ' solution' (ID: 7578)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.2192801535129547
    2. 'j' → logprob: -1.8442801237106323
    3. ' j' → logprob: -3.844280242919922
    4. 'k' → logprob: -5.719280242919922
    5. 'D' → logprob: -6.094280242919922
    6. 'bound' → logprob: -6.219280242919922
    7. '```' → logprob: -6.469280242919922
    8. ' D' → logprob: -6.594280242919922
    9. 'i' → logprob: -6.844280242919922
    10. ' bound' → logprob: -7.344280242919922

Token 959: ',' (ID: 11)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.25925207138061523
    2. '[i' → logprob: -1.8842520713806152
    3. ' in' → logprob: -3.7592520713806152
    4. 'in' → logprob: -4.759252071380615
    5. '               ' → logprob: -4.884252071380615
    6. '[' → logprob: -4.884252071380615
    7. '                   ' → logprob: -5.009252071380615
    8. 'for' → logprob: -5.759252071380615
    9. '           ' → logprob: -6.134252071380615
    10. ' [' → logprob: -6.259252071380615

Token 960: ' on' (ID: 402)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.2155853509902954
    2. ' D' → logprob: -1.7155853509902954
    3. 'D' → logprob: -4.465585231781006
    4. '                   ' → logprob: -6.590585231781006
    5. '                       ' → logprob: -7.965585231781006
    6. '```' → logprob: -8.590585708618164
    7. ' for' → logprob: -8.715585708618164
    8. '                           ' → logprob: -9.590585708618164
    9. 'for' → logprob: -9.590585708618164
    10. '               ' → logprob: -9.715585708618164

Token 961: ' incr' (ID: 52395)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0004848922253586352
    2. 'D' → logprob: -8.625484466552734
    3. '                   ' → logprob: -9.250484466552734
    4. ' D' → logprob: -10.000484466552734
    5. 'Ds' → logprob: -10.375484466552734
    6. '           ' → logprob: -11.000484466552734
    7. '               ' → logprob: -11.125484466552734
    8. '                       ' → logprob: -11.375484466552734
    9. '                           ' → logprob: -11.625484466552734
    10. 'Dj' → logprob: -11.750484466552734

Token 962: 'é' (ID: 377)
  Prédit: 'rement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.19344763457775116
    2. 'Dp' → logprob: -2.8184475898742676
    3. 're' → logprob: -3.4434475898742676
    4. 'ément' → logprob: -3.5684475898742676
    5. 'D' → logprob: -3.8184475898742676
    6. 'l' → logprob: -4.568447589874268
    7. 'é' → logprob: -4.943447589874268
    8. 'mente' → logprob: -5.318447589874268
    9. 'ment' → logprob: -5.568447589874268
    10. 'ré' → logprob: -6.568447589874268

Token 963: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.47935405373573303
    2. 'mente' → logprob: -0.9793540239334106
    3. 'm' → logprob: -5.729353904724121
    4. 'j' → logprob: -7.979353904724121
    5. 'mentar' → logprob: -8.104353904724121
    6. 'ments' → logprob: -8.479353904724121
    7. '[' → logprob: -8.604353904724121
    8. 'mented' → logprob: -8.729353904724121
    9. 'mentation' → logprob: -9.104353904724121
    10. 'men' → logprob: -9.354353904724121

Token 964: ' le' (ID: 505)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.021873895078897476
    2. 'j' → logprob: -4.271873950958252
    3. 'Dj' → logprob: -5.396873950958252
    4. '   ' → logprob: -6.521873950958252
    5. '[j' → logprob: -8.021873474121094
    6. '               ' → logprob: -8.021873474121094
    7. '           ' → logprob: -8.146873474121094
    8. ' j' → logprob: -8.521873474121094
    9. '                   ' → logprob: -8.521873474121094
    10. 'DP' → logprob: -9.646873474121094

Token 965: ' nombre' (ID: 9733)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22711151838302612
    2. 'Dp' → logprob: -1.602111577987671
    3. 'D' → logprob: -8.10211181640625
    4. ' j' → logprob: -8.22711181640625
    5. '[j' → logprob: -8.35211181640625
    6. 'nombre' → logprob: -8.35211181640625
    7. 'Dj' → logprob: -8.72711181640625
    8. '```' → logprob: -9.60211181640625
    9. '   ' → logprob: -9.72711181640625
    10. 'DP' → logprob: -9.97711181640625

Token 966: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7622829675674438
    2. '[j' → logprob: -1.1372829675674438
    3. 'de' → logprob: -2.0122828483581543
    4. 'Dp' → logprob: -4.012282848358154
    5. '_de' → logprob: -4.887282848358154
    6. '[' → logprob: -5.012282848358154
    7. 'j' → logprob: -5.262282848358154
    8. '   ' → logprob: -5.387282848358154
    9. ' ' → logprob: -5.637282848358154
    10. ' j' → logprob: -5.762282848358154

Token 967: ' chiffres' (ID: 105565)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0016644697170704603
    2. ' j' → logprob: -6.751664638519287
    3. '[j' → logprob: -8.751664161682129
    4. 'non' → logprob: -9.126664161682129
    5. 'Dp' → logprob: -9.501664161682129
    6. ' non' → logprob: -9.626664161682129
    7. '(j' → logprob: -10.251664161682129
    8. '```' → logprob: -10.751664161682129
    9. '
' → logprob: -12.126664161682129
    10. ' ' → logprob: -12.626664161682129

Token 968: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.27803003787994385
    2. ' non' → logprob: -1.5280300378799438
    3. ' j' → logprob: -4.528029918670654
    4. '_non' → logprob: -4.903029918670654
    5. 'j' → logprob: -5.903029918670654
    6. '[j' → logprob: -6.278029918670654
    7. '   ' → logprob: -6.903029918670654
    8. ' ' → logprob: -7.403029918670654
    9. 'nonnull' → logprob: -8.278030395507812
    10. '+' → logprob: -8.653030395507812

Token 969: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7256868481636047
    2. 'zero' → logprob: -1.85068678855896
    3. '_zero' → logprob: -2.35068678855896
    4. '-zero' → logprob: -2.47568678855896
    5. 'zeros' → logprob: -2.85068678855896
    6. '-z' → logprob: -3.10068678855896
    7. '_z' → logprob: -3.60068678855896
    8. ' zeros' → logprob: -4.225687026977539
    9. '_' → logprob: -4.600687026977539
    10. 'z' → logprob: -5.350687026977539

Token 970: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.3262704908847809
    2. 'ero' → logprob: -1.5762704610824585
    3. 'éros' → logprob: -3.076270580291748
    4. 'eros' → logprob: -4.576270580291748
    5. '0' → logprob: -5.451270580291748
    6. '```' → logprob: -6.326270580291748
    7. '[' → logprob: -6.576270580291748
    8. '_' → logprob: -6.826270580291748
    9. '%C' → logprob: -7.076270580291748
    10. 'ro' → logprob: -7.826270580291748

Token 971: ' utilisés' (ID: 94258)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.08830464631319046
    2. 'used' → logprob: -3.0883047580718994
    3. ' used' → logprob: -3.8383047580718994
    4. ' utilisé' → logprob: -5.46330451965332
    5. '[j' → logprob: -5.58830451965332
    6. ' utilisés' → logprob: -6.21330451965332
    7. 'util' → logprob: -6.21330451965332
    8. '               ' → logprob: -6.46330451965332
    9. '_used' → logprob: -7.58830451965332
    10. '           ' → logprob: -7.96330451965332

Token 972: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13131962716579437
    2. 'Dp' → logprob: -2.131319522857666
    3. '               ' → logprob: -5.881319522857666
    4. '                       ' → logprob: -7.256319522857666
    5. ',' → logprob: -8.756319999694824
    6. '[' → logprob: -8.881319999694824
    7. '           ' → logprob: -9.006319999694824
    8. '                  ' → logprob: -9.506319999694824
    9. 'D' → logprob: -9.881319999694824
    10. '[D' → logprob: -9.881319999694824

Token 973: 'j' (ID: 73)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.00031615851912647486
    2. '                   ' → logprob: -9.250316619873047
    3. ' D' → logprob: -9.750316619873047
    4. '   ' → logprob: -10.000316619873047
    5. '               ' → logprob: -10.000316619873047
    6. '           ' → logprob: -10.625316619873047
    7. '  ' → logprob: -11.625316619873047
    8. ')' → logprob: -12.125316619873047
    9. 'Dj' → logprob: -12.625316619873047
    10. 'D' → logprob: -12.750316619873047

Token 974: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00039504567394033074
    2. ' +' → logprob: -8.000394821166992
    3. '][' → logprob: -10.625394821166992
    4. '+
' → logprob: -11.000394821166992
    5. '+j' → logprob: -12.625394821166992
    6. ']+' → logprob: -12.625394821166992
    7. '+[' → logprob: -13.000394821166992
    8. '＋' → logprob: -13.125394821166992
    9. '+=' → logprob: -13.250394821166992
    10. ')+' → logprob: -13.625394821166992

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.8828707804204896e-05
    2. ' ' → logprob: -10.125048637390137
    3. '                   ' → logprob: -12.500048637390137
    4. '   ' → logprob: -13.000048637390137
    5. '+' → logprob: -14.375048637390137
    6. '           ' → logprob: -14.500048637390137
    7. '                       ' → logprob: -14.875048637390137
    8. '               ' → logprob: -15.000048637390137
    9. '                           ' → logprob: -15.500048637390137
    10. '```' → logprob: -15.750048637390137

Token 976: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016574084758758545
    2. ')
' → logprob: -4.766573905944824
    3. '               ' → logprob: -6.141573905944824
    4. '                   ' → logprob: -6.391573905944824
    5. '])' → logprob: -6.891573905944824
    6. '):
' → logprob: -7.016573905944824
    7. ')]' → logprob: -7.391573905944824
    8. ']' → logprob: -7.516573905944824
    9. ' )' → logprob: -8.641573905944824
    10. '):' → logprob: -9.266573905944824

Token 977: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007433873601257801
    2. '                       ' → logprob: -5.132433891296387
    3. '               ' → logprob: -6.882433891296387
    4. 'Dp' → logprob: -8.257433891296387
    5. '           ' → logprob: -9.757433891296387
    6. '                           ' → logprob: -10.007433891296387
    7. '```' → logprob: -10.632433891296387
    8. '                    ' → logprob: -10.632433891296387
    9. '       ' → logprob: -10.882433891296387
    10. '                  ' → logprob: -11.382433891296387

Token 978: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0005395700572989881
    2. '                   ' → logprob: -7.750539779663086
    3. 'if' → logprob: -10.125539779663086
    4. '               ' → logprob: -10.875539779663086
    5. '                       ' → logprob: -11.375539779663086
    6. ' if' → logprob: -11.500539779663086
    7. ' D' → logprob: -11.875539779663086
    8. 'D' (adapté à ' D') → logprob: -12.250539779663086
    9. 'Dj' → logprob: -12.875539779663086
    10. '                           ' → logprob: -13.125539779663086

Token 979: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. '[p' → logprob: -17.125
    3. ' p' → logprob: -17.625
    4. '```' → logprob: -18.75
    5. '
' → logprob: -19.0
    6. '_p' → logprob: -19.25
    7. '[' → logprob: -19.25
    8. '<p' → logprob: -19.25
    9. '$p' → logprob: -19.375
    10. '	p' → logprob: -19.625

Token 980: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. 'i' → logprob: -13.500001907348633
    3. '[' → logprob: -15.375001907348633
    4. '```' → logprob: -16.375001907348633
    5. '[j' → logprob: -17.375001907348633
    6. '[I' → logprob: -18.000001907348633
    7. ' [' → logprob: -18.375001907348633
    8. '[
' → logprob: -19.000001907348633
    9. '[int' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.625001907348633

Token 981: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.45848218582978e-06
    2. ' +' → logprob: -13.12500286102295
    3. '+i' → logprob: -15.75000286102295
    4. '[' → logprob: -16.000001907348633
    5. ']+' → logprob: -16.750001907348633
    6. '1' → logprob: -16.875001907348633
    7. '＋' → logprob: -17.250001907348633
    8. '][' → logprob: -17.250001907348633
    9. '+[' → logprob: -18.125001907348633
    10. '+
' → logprob: -18.875001907348633

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. '+' → logprob: -11.62501049041748
    3. ' ' → logprob: -14.25001049041748
    4. '[' → logprob: -15.62501049041748
    5. '   ' → logprob: -15.75001049041748
    6. '```' → logprob: -17.000009536743164
    7. '[i' → logprob: -17.250009536743164
    8. '{' → logprob: -17.250009536743164
    9. 'i' → logprob: -17.812509536743164
    10. '][' → logprob: -18.125009536743164

Token 983: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004951290902681649
    2. '[j' → logprob: -8.000494956970215
    3. '[i' → logprob: -9.125494956970215
    4. ' ][' → logprob: -11.125494956970215
    5. ']' → logprob: -11.375494956970215
    6. '[' → logprob: -11.625494956970215
    7. '           ' → logprob: -12.375494956970215
    8. '   ' → logprob: -12.625494956970215
    9. ')[' → logprob: -13.250494956970215
    10. '```' → logprob: -13.875494956970215

Token 984: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.704273118884885e-07
    2. ' j' → logprob: -14.875000953674316
    3. '   ' → logprob: -16.125
    4. '(j' → logprob: -16.625
    5. '[j' → logprob: -16.75
    6. '	j' → logprob: -18.0
    7. 'min' → logprob: -19.0
    8. '$j' → logprob: -19.125
    9. '
' → logprob: -19.375
    10. ',j' → logprob: -19.5

Token 985: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055932529270648956
    2. '][' → logprob: -3.3059325218200684
    3. '[' → logprob: -4.055932521820068
    4. '+[' → logprob: -8.680932998657227
    5. '[j' → logprob: -9.180932998657227
    6. '+j' → logprob: -10.430932998657227
    7. ' +' → logprob: -10.555932998657227
    8. ']+' → logprob: -11.055932998657227
    9. ']' → logprob: -11.680932998657227
    10. '   ' → logprob: -11.680932998657227

Token 986: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. '+' → logprob: -15.875000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '           ' → logprob: -16.625001907348633
    6. '```' → logprob: -16.750001907348633
    7. '
' → logprob: -17.750001907348633
    8. '                   ' → logprob: -18.250001907348633
    9. '       ' → logprob: -18.562501907348633
    10. '               ' → logprob: -18.937501907348633

Token 987: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002925598528236151
    2. '[' → logprob: -8.250292778015137
    3. ']' → logprob: -10.875292778015137
    4. ' ][' → logprob: -11.375292778015137
    5. ']][' → logprob: -15.500292778015137
    6. '   ' → logprob: -15.875292778015137
    7. ''][' → logprob: -16.00029182434082
    8. '```' → logprob: -16.62529182434082
    9. ')][' → logprob: -16.75029182434082
    10. '[][' → logprob: -16.87529182434082

Token 988: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -21.125
    3. '۰' → logprob: -22.375
    4. '０' → logprob: -23.375
    5. '   ' → logprob: -23.375
    6. '০' → logprob: -24.25
    7. '[' → logprob: -24.75
    8. ' ' → logprob: -25.75
    9. '```' → logprob: -25.75
    10. '٠' → logprob: -26.1875

Token 989: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011709370883181691
    2. ']+=' → logprob: -6.751171112060547
    3. ' ]' → logprob: -14.251171112060547
    4. '+=' → logprob: -17.876171112060547
    5. ']+' → logprob: -17.876171112060547
    6. '```' → logprob: -18.001171112060547
    7. '   ' → logprob: -18.626171112060547
    8. ']
' → logprob: -18.751171112060547
    9. ')' → logprob: -18.751171112060547
    10. '           ' → logprob: -19.001171112060547

Token 990: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0025000330060720444
    2. ' +=' → logprob: -6.002500057220459
    3. ']+=' → logprob: -10.6274995803833
    4. '+=(' → logprob: -17.252500534057617
    5. '+='' → logprob: -18.127500534057617
    6. '```' → logprob: -18.627500534057617
    7. '+="' → logprob: -19.002500534057617
    8. '   ' → logprob: -19.002500534057617
    9. '           ' → logprob: -19.877500534057617
    10. '+' → logprob: -20.127500534057617

Token 991: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -2.8325677703833207e-05
    2. ' D' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.750028610229492
    4. 'DP' → logprob: -15.875028610229492
    5. 'Dn' → logprob: -16.125028610229492
    6. 'Df' → logprob: -16.375028610229492
    7. ' ' → logprob: -16.500028610229492
    8. '	D' → logprob: -17.000028610229492
    9. 'Dc' → logprob: -17.000028610229492
    10. 'Dd' → logprob: -17.125028610229492

Token 992: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. 'Dp' → logprob: -16.375
    3. ' p' → logprob: -17.5
    4. '[p' → logprob: -18.375
    5. '[' → logprob: -19.0
    6. '_p' → logprob: -19.125
    7. 'P' → logprob: -19.75
    8. '[i' → logprob: -19.9375
    9. '```' → logprob: -20.0
    10. 'i' → logprob: -20.25

Token 993: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.034592388459714e-06
    2. 'i' → logprob: -12.125005722045898
    3. ' [' → logprob: -15.625005722045898
    4. '[' → logprob: -15.875005722045898
    5. '```' → logprob: -16.0000057220459
    6. ' i' → logprob: -17.7500057220459
    7. '
' → logprob: -18.0000057220459
    8. '[
' → logprob: -18.0000057220459
    9. '[I' → logprob: -18.3750057220459
    10. '(i' → logprob: -18.5000057220459

Token 994: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01820402964949608
    2. '][' → logprob: -4.018204212188721
    3. '[j' → logprob: -10.268203735351562
    4. '[' → logprob: -11.268203735351562
    5. ' ][' → logprob: -13.393203735351562
    6. '}[' → logprob: -13.893203735351562
    7. ' [' → logprob: -14.018203735351562
    8. 'i' → logprob: -14.018203735351562
    9. '```' → logprob: -14.393203735351562
    10. '[k' → logprob: -14.643203735351562

Token 995: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6240566083070007e-06
    2. ' j' → logprob: -13.750001907348633
    3. '	j' → logprob: -14.500001907348633
    4. 'k' → logprob: -16.875001907348633
    5. '[j' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '$j' → logprob: -19.625001907348633
    8. '_j' → logprob: -20.000001907348633
    9. '0' → logprob: -20.250001907348633
    10. '```' → logprob: -20.625001907348633

Token 996: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10044744610786438
    2. '][' → logprob: -2.350447416305542
    3. '0' → logprob: -9.725447654724121
    4. '}[' → logprob: -9.850447654724121
    5. '>[' → logprob: -10.350447654724121
    6. ')[' → logprob: -10.475447654724121
    7. ' [' → logprob: -11.225447654724121
    8. ''][' → logprob: -11.600447654724121
    9. '```' → logprob: -11.725447654724121
    10. ' ][' → logprob: -12.350447654724121

Token 997: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '1' → logprob: -17.125
    4. '   ' → logprob: -18.25
    5. '۰' → logprob: -18.25
    6. '０' → logprob: -19.375
    7. '[' → logprob: -19.9375
    8. '	' → logprob: -20.0
    9. '০' → logprob: -20.9375
    10. '०' → logprob: -21.125

Token 998: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1397627890110016
    2. '               ' → logprob: -2.3897628784179688
    3. ']
' → logprob: -3.8897628784179688
    4. '           ' → logprob: -4.514762878417969
    5. '                   ' → logprob: -5.139762878417969
    6. ')' → logprob: -8.139762878417969
    7. '   ' → logprob: -8.389762878417969
    8. ' ]' → logprob: -8.764762878417969
    9. '       ' → logprob: -9.139762878417969
    10. '			' → logprob: -9.264762878417969

Token 999: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029121503233909607
    2. '               ' → logprob: -4.279121398925781
    3. '```' → logprob: -4.404121398925781
    4. 'Dp' → logprob: -7.029121398925781
    5. '           ' → logprob: -7.404121398925781
    6. '``' → logprob: -8.654121398925781
    7. '                    ' → logprob: -8.779121398925781
    8. 'D' → logprob: -8.779121398925781
    9. '                  ' → logprob: -9.029121398925781
    10. '                ' → logprob: -9.029121398925781

Token 1000: ' D' (ID: 415)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06714682281017303
    2. 'Dp' → logprob: -3.0671467781066895
    3. 'D' (adapté à ' D') → logprob: -4.0671467781066895
    4. '               ' → logprob: -7.4421467781066895
    5. '```' → logprob: -7.6921467781066895
    6. '                       ' → logprob: -9.442147254943848
    7. '                  ' → logprob: -10.317147254943848
    8. '           ' → logprob: -10.942147254943848
    9. 'Dj' → logprob: -11.067147254943848
    10. '                    ' → logprob: -11.067147254943848

Token 1001: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.896309739408025e-07
    2. '[p' → logprob: -15.125000953674316
    3. '```' → logprob: -15.750000953674316
    4. '[' → logprob: -15.875000953674316
    5. '[i' → logprob: -16.125
    6. '_p' → logprob: -16.75
    7. ' p' → logprob: -18.0
    8. 'P' → logprob: -18.125
    9. '+=' → logprob: -18.125
    10. '+' → logprob: -18.125

Token 1002: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.500000953674316
    3. 'i' → logprob: -14.875000953674316
    4. '```' → logprob: -16.375001907348633
    5. '
' → logprob: -17.750001907348633
    6. '[
' → logprob: -19.375001907348633
    7. '+' → logprob: -19.500001907348633
    8. ' [' → logprob: -19.625001907348633
    9. '[I' → logprob: -19.625001907348633
    10. '   ' → logprob: -20.000001907348633

Token 1003: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.000001907348633
    3. '+[' → logprob: -14.625001907348633
    4. '][' → logprob: -15.625001907348633
    5. ' +' → logprob: -16.500001907348633
    6. '1' → logprob: -16.875001907348633
    7. '+i' → logprob: -17.750001907348633
    8. '+
' → logprob: -18.000001907348633
    9. 'i' → logprob: -18.250001907348633
    10. ']+' → logprob: -19.125001907348633

Token 1004: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028989017009735107
    2. 'i' → logprob: -6.252898693084717
    3. '+' → logprob: -7.002898693084717
    4. '[i' → logprob: -10.752899169921875
    5. '(i' → logprob: -11.127899169921875
    6. 'j' → logprob: -11.502899169921875
    7. '```' → logprob: -12.127899169921875
    8. '[' → logprob: -12.752899169921875
    9. '   ' → logprob: -14.315399169921875
    10. '][' → logprob: -14.565399169921875

Token 1005: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.21609249711036682
    2. '[i' → logprob: -2.341092586517334
    3. '[j' → logprob: -2.341092586517334
    4. '           ' → logprob: -6.591092586517334
    5. '[' → logprob: -8.091092109680176
    6. '               ' → logprob: -9.716092109680176
    7. '                   ' → logprob: -10.216092109680176
    8. ' [' → logprob: -10.841092109680176
    9. '   ' → logprob: -10.966092109680176
    10. '	' → logprob: -11.341092109680176

Token 1006: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3782830137643032e-05
    2. '[j' → logprob: -11.50001335144043
    3. ' j' → logprob: -12.87501335144043
    4. '```' → logprob: -14.87501335144043
    5. '   ' → logprob: -15.75001335144043
    6. 'i' → logprob: -15.75001335144043
    7. '	j' → logprob: -16.37501335144043
    8. '[' → logprob: -16.37501335144043
    9. 'user' → logprob: -16.50001335144043
    10. '$j' → logprob: -17.00001335144043

Token 1007: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001358400477329269
    2. '][' → logprob: -9.12513542175293
    3. '[' → logprob: -10.62513542175293
    4. '+[' → logprob: -14.25013542175293
    5. ' +' → logprob: -14.37513542175293
    6. '   ' → logprob: -14.75013542175293
    7. '+j' → logprob: -15.00013542175293
    8. '```' → logprob: -15.75013542175293
    9. '[j' → logprob: -16.25013542175293
    10. '           ' → logprob: -16.37513542175293

Token 1008: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021021578868385404
    2. 'j' → logprob: -8.62520980834961
    3. '+' → logprob: -10.50020980834961
    4. '[' → logprob: -13.37520980834961
    5. '0' → logprob: -14.62520980834961
    6. '[j' → logprob: -15.00020980834961
    7. '][' → logprob: -15.68770980834961
    8. ' ' → logprob: -15.87520980834961
    9. '```' → logprob: -15.93770980834961
    10. '
' → logprob: -16.00020980834961

Token 1009: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0067225913517177105
    2. '[' → logprob: -5.006722450256348
    3. ' ][' → logprob: -12.756722450256348
    4. ']' → logprob: -14.256722450256348
    5. '[][' → logprob: -14.381722450256348
    6. '}[' → logprob: -14.506722450256348
    7. '[j' → logprob: -14.756722450256348
    8. '           ' → logprob: -14.881722450256348
    9. '>[' → logprob: -14.881722450256348
    10. ']][' → logprob: -15.131722450256348

Token 1010: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010958074126392603
    2. '0' → logprob: -7.001095771789551
    3. '[' → logprob: -8.62609577178955
    4. 'j' → logprob: -12.62609577178955
    5. 'i' → logprob: -14.00109577178955
    6. '```' → logprob: -15.62609577178955
    7. '
' → logprob: -15.75109577178955
    8. '[i' → logprob: -15.75109577178955
    9. 'Dp' → logprob: -15.87609577178955
    10. '   ' → logprob: -16.126096725463867

Token 1011: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014174441806972027
    2. ']+=' → logprob: -4.264174461364746
    3. ']+' → logprob: -11.639174461364746
    4. '+=' → logprob: -13.764174461364746
    5. ' ]' → logprob: -14.514174461364746
    6. '[' → logprob: -15.514174461364746
    7. '+]' → logprob: -15.764174461364746
    8. '```' → logprob: -16.13917350769043
    9. '][' → logprob: -16.63917350769043
    10. '+' → logprob: -17.26417350769043

Token 1012: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00027718624914996326
    2. ']+=' → logprob: -8.625277519226074
    3. ' +=' → logprob: -9.250277519226074
    4. '[' → logprob: -14.625277519226074
    5. '+=(' → logprob: -14.750277519226074
    6. '+' → logprob: -15.125277519226074
    7. '```' → logprob: -15.500277519226074
    8. ']' → logprob: -16.500276565551758
    9. '+='' → logprob: -17.250276565551758
    10. '=' → logprob: -17.625276565551758

Token 1013: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.00038145645521581173
    2. ' D' → logprob: -7.8753814697265625
    3. 'Dn' → logprob: -14.625381469726562
    4. 'Df' → logprob: -15.125381469726562
    5. 'DP' → logprob: -15.250381469726562
    6. 'Dd' → logprob: -15.750381469726562
    7. ' ' → logprob: -16.375381469726562
    8. 'Dv' → logprob: -16.750381469726562
    9. '   ' → logprob: -17.000381469726562
    10. 'D' → logprob: -17.125381469726562

Token 1014: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.7432603272027336e-06
    2. 'Dp' → logprob: -13.375001907348633
    3. '[p' → logprob: -16.750001907348633
    4. 'P' → logprob: -17.125001907348633
    5. '[' → logprob: -17.250001907348633
    6. '_p' → logprob: -18.250001907348633
    7. ' p' → logprob: -18.625001907348633
    8. '[i' → logprob: -20.000001907348633
    9. '```' → logprob: -20.375001907348633
    10. '<p' → logprob: -20.375001907348633

Token 1015: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.000000953674316
    3. '```' → logprob: -16.250001907348633
    4. '[' → logprob: -17.125001907348633
    5. '[user' → logprob: -18.625001907348633
    6. '(i' → logprob: -19.125001907348633
    7. '[j' → logprob: -19.375001907348633
    8. '[I' → logprob: -19.375001907348633
    9. 's' → logprob: -19.750001907348633
    10. 'user' → logprob: -19.750001907348633

Token 1016: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6932157874107361
    2. '][' → logprob: -0.6932157874107361
    3. 'i' → logprob: -10.068215370178223
    4. '}[' → logprob: -11.818215370178223
    5. '[' → logprob: -11.943215370178223
    6. ' ][' → logprob: -12.443215370178223
    7. '```' → logprob: -12.943215370178223
    8. '   ' → logprob: -13.943215370178223
    9. ']' → logprob: -14.068215370178223
    10. ' [' → logprob: -14.318215370178223

Token 1017: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.816093228830141e-06
    2. 'i' → logprob: -13.00000286102295
    3. ' j' → logprob: -15.25000286102295
    4. '[j' → logprob: -15.75000286102295
    5. '```' → logprob: -15.87500286102295
    6. '	j' → logprob: -16.750001907348633
    7. '
' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.000001907348633
    9. 'k' → logprob: -18.375001907348633
    10. '[' → logprob: -18.500001907348633

Token 1018: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22549253702163696
    2. '[' → logprob: -1.6004924774169922
    3. '1' → logprob: -10.100492477416992
    4. '}[' → logprob: -11.100492477416992
    5. ' ][' → logprob: -12.350492477416992
    6. ')[' → logprob: -12.350492477416992
    7. ' [' → logprob: -12.600492477416992
    8. '   ' → logprob: -12.975492477416992
    9. '>[' → logprob: -13.600492477416992
    10. '```' → logprob: -13.600492477416992

Token 1019: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. ' ' → logprob: -16.5
    4. '<|end|>' → logprob: -17.25
    5. '0' → logprob: -18.0
    6. '```' → logprob: -18.125
    7. '   ' → logprob: -18.375
    8. '[
' → logprob: -19.75
    9. '...' → logprob: -19.875
    10. '#' → logprob: -20.0

Token 1020: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005201471503823996
    2. '<|end|>' → logprob: -8.375519752502441
    3. ']
' → logprob: -9.250519752502441
    4. '               ' → logprob: -9.500519752502441
    5. ' ]' → logprob: -9.625519752502441
    6. ')' → logprob: -10.750519752502441
    7. '           ' → logprob: -11.500519752502441
    8. '                   ' → logprob: -12.125519752502441
    9. '<|end|>' → logprob: -12.375519752502441
    10. '']' → logprob: -12.875519752502441

Token 1021: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09051012247800827
    2. '```' → logprob: -3.340510129928589
    3. 'elif' → logprob: -3.715510129928589
    4. '                   ' → logprob: -4.34050989151001
    5. '<|end|>' → logprob: -4.96550989151001
    6. '           ' → logprob: -6.34050989151001
    7. '                ' → logprob: -6.84050989151001
    8. ' elif' → logprob: -6.96550989151001
    9. '                       ' → logprob: -7.21550989151001
    10. '       ' → logprob: -7.96550989151001

Token 1022: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22269389033317566
    2. '                   ' → logprob: -2.472693920135498
    3. 'elif' (adapté à ' elif') → logprob: -2.597693920135498
    4. '```' → logprob: -3.347693920135498
    5. 'else' → logprob: -6.222693920135498
    6. ' elif' → logprob: -6.722693920135498
    7. '                ' → logprob: -7.347693920135498
    8. '                       ' → logprob: -7.597693920135498
    9. '           ' → logprob: -7.597693920135498
    10. '                               ' → logprob: -8.84769344329834

Token 1023: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.34846681356430054
    2. ' k' → logprob: -1.2234668731689453
    3. '               ' → logprob: -12.223466873168945
    4. '           ' → logprob: -12.848466873168945
    5. '                   ' → logprob: -12.973466873168945
    6. '(k' → logprob: -12.973466873168945
    7. ' ' → logprob: -13.473466873168945
    8. '            ' → logprob: -13.848466873168945
    9. '	k' → logprob: -14.035966873168945
    10. ' ' → logprob: -14.285966873168945

Token 1024: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07067647576332092
    2. '==' → logprob: -2.695676565170288
    3. ' <' → logprob: -7.320676326751709
    4. '<' → logprob: -9.820676803588867
    5. '<int' → logprob: -11.320676803588867
    6. '[' → logprob: -12.445676803588867
    7. '```' → logprob: -12.695676803588867
    8. ' <=' → logprob: -13.445676803588867
    9. '=' → logprob: -14.445676803588867
    10. '[int' → logprob: -14.570676803588867

Token 1025: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132672905921936
    2. ' int' → logprob: -1.3132672309875488
    3. '(int' → logprob: -12.563267707824707
    4. '[int' → logprob: -13.688267707824707
    5. '=int' → logprob: -14.688267707824707
    6. '<int' → logprob: -14.938267707824707
    7. ':int' → logprob: -16.81326675415039
    8. '	int' → logprob: -17.43826675415039
    9. ' ' → logprob: -18.56326675415039
    10. ']int' → logprob: -18.56326675415039

Token 1026: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.173704271830502e-06
    2. 'n' → logprob: -12.75000286102295
    3. '(' → logprob: -15.75000286102295
    4. ' (' → logprob: -18.000003814697266
    5. '[n' → logprob: -18.125003814697266
    6. '(
' → logprob: -18.750003814697266
    7. ' n' → logprob: -19.250003814697266
    8. '<n' → logprob: -19.750003814697266
    9. '	n' → logprob: -20.375003814697266
    10. '(int' → logprob: -20.875003814697266

Token 1027: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5688076019287109
    2. '(n' → logprob: -0.9438076019287109
    3. 'n' → logprob: -3.943807601928711
    4. '(i' → logprob: -4.068807601928711
    5. '[n' → logprob: -4.818807601928711
    6. ' n' → logprob: -10.443807601928711
    7. 'i' → logprob: -10.943807601928711
    8. '[' → logprob: -11.443807601928711
    9. '	n' → logprob: -11.443807601928711
    10. '```' → logprob: -11.818807601928711

Token 1028: ']):
' (ID: 51989)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5284726023674011
    2. ']):
' → logprob: -1.153472661972046
    3. '[i' → logprob: -3.153472661972046
    4. '])[' → logprob: -4.028472423553467
    5. ']):' → logprob: -4.153472423553467
    6. ')][' → logprob: -4.403472423553467
    7. ']' → logprob: -6.278472423553467
    8. '):
' → logprob: -6.653472423553467
    9. ']:
' → logprob: -6.903472423553467
    10. ')[' → logprob: -7.403472423553467

Token 1029: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020515278447419405
    2. '               ' → logprob: -7.25205135345459
    3. '```' → logprob: -7.37705135345459
    4. '[' → logprob: -7.87705135345459
    5. '                       ' → logprob: -8.75205135345459
    6. '	               ' → logprob: -10.12705135345459
    7. ' ' → logprob: -10.50205135345459
    8. '                    ' → logprob: -10.87705135345459
    9. '                 ' → logprob: -11.00205135345459
    10. '                  ' → logprob: -11.25205135345459

Token 1030: ' #' (ID: 1069)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.7251713275909424
    2. '                   ' → logprob: -0.8501713275909424
    3. 'D' → logprob: -3.1001713275909424
    4. '               ' → logprob: -3.3501713275909424
    5. ' D' → logprob: -5.600171089172363
    6. '                       ' → logprob: -5.850171089172363
    7. '```' → logprob: -8.350171089172363
    8. '   ' → logprob: -8.475171089172363
    9. '	D' → logprob: -8.600171089172363
    10. '                    ' → logprob: -8.725171089172363

Token 1031: ' On' (ID: 2160)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.24325531721115112
    2. 'D' → logprob: -2.243255376815796
    3. '                   ' → logprob: -2.243255376815796
    4. '               ' → logprob: -5.743255138397217
    5. '```' → logprob: -8.618255615234375
    6. '                       ' → logprob: -9.618255615234375
    7. 'Df' → logprob: -10.368255615234375
    8. ' D' → logprob: -10.368255615234375
    9. 'DP' → logprob: -10.493255615234375
    10. 'Dj' → logprob: -10.868255615234375

Token 1032: ' reste' (ID: 26769)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0013680962147191167
    2. 'D' → logprob: -7.501368045806885
    3. '+=' → logprob: -8.126368522644043
    4. '[' → logprob: -9.126368522644043
    5. '               ' → logprob: -9.376368522644043
    6. '```' → logprob: -9.626368522644043
    7. ' +=' → logprob: -10.001368522644043
    8. 'dp' → logprob: -10.626368522644043
    9. 'DP' → logprob: -10.626368522644043
    10. ' D' → logprob: -10.876368522644043

Token 1033: ' à' (ID: 1221)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0005160979344509542
    2. '                   ' → logprob: -8.125515937805176
    3. '               ' → logprob: -9.250515937805176
    4. 'DP' → logprob: -10.250515937805176
    5. '[' → logprob: -10.375515937805176
    6. '           ' → logprob: -11.000515937805176
    7. 'Dj' → logprob: -11.750515937805176
    8. '[i' → logprob: -12.125515937805176
    9. '_dp' → logprob: -12.875515937805176
    10. '                       ' → logprob: -13.000515937805176

Token 1034: ' la' (ID: 557)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0044174171052873135
    2. ' D' → logprob: -5.879417419433594
    3. '1' → logprob: -7.004417419433594
    4. 'D' → logprob: -7.504417419433594
    5. '[' → logprob: -10.129417419433594
    6. ' ' → logprob: -10.379417419433594
    7. 'Dn' → logprob: -11.629417419433594
    8. '[i' → logprob: -11.629417419433594
    9. 'Dj' → logprob: -11.629417419433594
    10. 'DP' → logprob: -11.754417419433594

Token 1035: ' borne' (ID: 111819)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5144472122192383
    2. 'Dp' → logprob: -1.0144472122192383
    3. '[' → logprob: -3.8894472122192383
    4. '[i' → logprob: -5.014447212219238
    5. '```' → logprob: -5.764447212219238
    6. 'D' → logprob: -6.014447212219238
    7. 'bound' → logprob: -6.014447212219238
    8. 'Dj' → logprob: -7.764447212219238
    9. 'DP' → logprob: -8.014447212219238
    10. '+' → logprob: -8.139447212219238

Token 1036: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2359081655740738
    2. 'Dp' → logprob: -1.6109081506729126
    3. 'D' → logprob: -5.610908031463623
    4. '```' → logprob: -5.610908031463623
    5. '[' → logprob: -7.235908031463623
    6. '                       ' → logprob: -7.235908031463623
    7. '               ' → logprob: -7.485908031463623
    8. 'Dj' → logprob: -8.110908508300781
    9. '                    ' → logprob: -8.860908508300781
    10. '[D' → logprob: -8.985908508300781

Token 1037: 'bound' (ID: 18791)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.08044226467609406
    2. '1' → logprob: -2.580442190170288
    3. 'i' → logprob: -6.580442428588867
    4. 'DP' → logprob: -9.955442428588867
    5. 'D' → logprob: -10.455442428588867
    6. '   ' → logprob: -11.205442428588867
    7. '0' → logprob: -11.455442428588867
    8. '```' → logprob: -11.455442428588867
    9. '[i' → logprob: -11.580442428588867
    10. ' ' → logprob: -11.580442428588867

Token 1038: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29474836587905884
    2. '[' → logprob: -1.419748306274414
    3. '][' → logprob: -4.419748306274414
    4. '[i' → logprob: -7.919748306274414
    5. '==' → logprob: -8.044748306274414
    6. '```' → logprob: -8.044748306274414
    7. ' ' → logprob: -8.919748306274414
    8. ' [' → logprob: -9.044748306274414
    9. ')[' → logprob: -9.919748306274414
    10. ']' → logprob: -10.294748306274414

Token 1039: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013742801966145635
    2. '[' → logprob: -6.751374244689941
    3. '][' → logprob: -8.876374244689941
    4. '[i' → logprob: -10.126374244689941
    5. '```' → logprob: -11.751374244689941
    6. ' ' → logprob: -12.001374244689941
    7. '+' → logprob: -12.626374244689941
    8. ' [' → logprob: -13.126374244689941
    9. ']' → logprob: -13.876374244689941
    10. '==' → logprob: -14.001374244689941

Token 1040: ')' (ID: 8)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.43545398116111755
    2. '][' → logprob: -1.43545401096344
    3. '               ' → logprob: -2.6854538917541504
    4. '):
' → logprob: -4.56045389175415
    5. '[' → logprob: -4.68545389175415
    6. '                       ' → logprob: -4.68545389175415
    7. ')' → logprob: -5.43545389175415
    8. ')[' → logprob: -5.43545389175415
    9. '```' → logprob: -5.68545389175415
    10. ']' → logprob: -6.56045389175415

Token 1041: ' dans' (ID: 2671)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03970792144536972
    2. '                       ' → logprob: -4.414708137512207
    3. '[' → logprob: -5.039708137512207
    4. '```' → logprob: -5.164708137512207
    5. '               ' → logprob: -5.414708137512207
    6. ':' → logprob: -5.414708137512207
    7. ':
' → logprob: -6.164708137512207
    8. '                           ' → logprob: -6.914708137512207
    9. '                    ' → logprob: -7.539708137512207
    10. '[D' → logprob: -8.289708137512207

Token 1042: ' les' (ID: 1341)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -9.186122770188376e-05
    2. 'D' → logprob: -10.250091552734375
    3. ' D' → logprob: -10.750091552734375
    4. 'DP' → logprob: -11.375091552734375
    5. '```' → logprob: -12.000091552734375
    6. 'Df' → logprob: -12.750091552734375
    7. 'Dj' → logprob: -13.000091552734375
    8. '#' → logprob: -13.125091552734375
    9. '[' → logprob: -13.375091552734375
    10. '   ' → logprob: -13.625091552734375

Token 1043: ' cas' (ID: 2108)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0007258945843204856
    2. 'D' → logprob: -8.125725746154785
    3. 'DP' → logprob: -8.625725746154785
    4. '```' → logprob: -10.125725746154785
    5. 'range' → logprob: -10.375725746154785
    6. '[' → logprob: -10.375725746154785
    7. '[i' → logprob: -10.500725746154785
    8. 'dp' → logprob: -10.875725746154785
    9. 'next' → logprob: -11.500725746154785
    10. ']' → logprob: -11.750725746154785

Token 1044: ' où' (ID: 15113)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3406837582588196
    2. '                   ' → logprob: -1.7156836986541748
    3. 'Dp' → logprob: -2.340683698654175
    4. '[' → logprob: -5.590683937072754
    5. 'i' → logprob: -5.590683937072754
    6. '               ' → logprob: -6.715683937072754
    7. '                       ' → logprob: -7.340683937072754
    8. 'DP' → logprob: -7.590683937072754
    9. 'D' → logprob: -7.840683937072754
    10. '           ' → logprob: -8.215683937072754

Token 1045: ' on' (ID: 402)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0016620856476947665
    2. ' D' → logprob: -6.876662254333496
    3. 'k' → logprob: -7.751662254333496
    4. 'D' → logprob: -9.126662254333496
    5. ' k' → logprob: -10.126662254333496
    6. 'j' → logprob: -11.501662254333496
    7. '```' → logprob: -11.626662254333496
    8. 'Dj' → logprob: -12.251662254333496
    9. 'Dn' → logprob: -12.376662254333496
    10. 'DP' → logprob: -12.876662254333496

Token 1046: ' était' (ID: 16647)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.10995995998382568
    2. '[i' → logprob: -2.6099600791931152
    3. '[' → logprob: -3.8599600791931152
    4. '```' → logprob: -5.859960079193115
    5. 'i' → logprob: -6.734960079193115
    6. 'est' → logprob: -6.859960079193115
    7. 'continue' → logprob: -7.109960079193115
    8. '[j' → logprob: -7.609960079193115
    9. 'a' → logprob: -7.609960079193115
    10. 'reste' → logprob: -8.359959602355957

Token 1047: ' encore' (ID: 14043)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0035371133126318455
    2. '[i' → logprob: -5.878537178039551
    3. '[' → logprob: -7.878537178039551
    4. '1' → logprob: -9.37853717803955
    5. 'i' → logprob: -9.87853717803955
    6. '           ' → logprob: -10.12853717803955
    7. '   ' → logprob: -10.37853717803955
    8. '               ' → logprob: -10.50353717803955
    9. ' D' → logprob: -11.12853717803955
    10. '                   ' → logprob: -11.25353717803955

Token 1048: ' lié' (ID: 140626)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.17665570974349976
    2. '1' → logprob: -2.6766557693481445
    3. 'à' → logprob: -2.8016557693481445
    4. '[' → logprob: -3.6766557693481445
    5. ' à' → logprob: -6.1766557693481445
    6. 'bound' → logprob: -6.5516557693481445
    7. '```' → logprob: -6.6766557693481445
    8. '[i' → logprob: -7.3016557693481445
    9. 'dans' → logprob: -7.8016557693481445
    10. 'sur' → logprob: -8.426655769348145

Token 1049: ' à' (ID: 1221)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5357104539871216
    2. '[i' → logprob: -1.1607104539871216
    3. '```' → logprob: -3.660710334777832
    4. '               ' → logprob: -3.910710334777832
    5. '                       ' → logprob: -4.035710334777832
    6. '[' → logprob: -4.035710334777832
    7. '][' → logprob: -4.410710334777832
    8. 'Dp' → logprob: -5.785710334777832
    9. '           ' → logprob: -6.785710334777832
    10. ']' → logprob: -7.285710334777832

Token 1050: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29804766178131104
    2. 'Dp' → logprob: -1.423047661781311
    3. '1' → logprob: -4.4230475425720215
    4. ' n' → logprob: -5.9230475425720215
    5. 'bound' → logprob: -7.4230475425720215
    6. 'la' → logprob: -7.7980475425720215
    7. 'l' → logprob: -7.9230475425720215
    8. 'int' → logprob: -8.54804801940918
    9. '```' → logprob: -8.92304801940918
    10. 'k' → logprob: -9.04804801940918

Token 1051: ' limite' (ID: 48939)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00697549432516098
    2. '1' → logprob: -5.5069756507873535
    3. 'bound' → logprob: -6.6319756507873535
    4. '```' → logprob: -7.7569756507873535
    5. ' n' → logprob: -8.131975173950195
    6. 'i' → logprob: -8.381975173950195
    7. 'Dp' → logprob: -8.756975173950195
    8. '[i' → logprob: -8.881975173950195
    9. '[n' → logprob: -9.381975173950195
    10. '[' → logprob: -9.381975173950195

Token 1052: ' ("' (ID: 7109)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004733791574835777
    2. '                       ' → logprob: -5.754733562469482
    3. '               ' → logprob: -7.504733562469482
    4. 'Dp' → logprob: -7.754733562469482
    5. '                           ' → logprob: -8.75473403930664
    6. '```' → logprob: -9.12973403930664
    7. '                    ' → logprob: -9.75473403930664
    8. '           ' → logprob: -10.25473403930664
    9. '   ' → logprob: -10.50473403930664
    10. '                  ' → logprob: -10.50473403930664

Token 1053: 'tight' (ID: 182037)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3562808632850647
    2. 'Dp' → logprob: -1.98128080368042
    3. 'bound' → logprob: -2.23128080368042
    4. 'i' → logprob: -3.35628080368042
    5. '```' → logprob: -4.60628080368042
    6. 'k' → logprob: -5.73128080368042
    7. 'n' → logprob: -6.10628080368042
    8. '[i' → logprob: -7.35628080368042
    9. '``' → logprob: -7.60628080368042
    10. 'j' → logprob: -7.85628080368042

Token 1054: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.24805161356925964
    2. '")[' → logprob: -2.123051643371582
    3. '"):
' → logprob: -3.373051643371582
    4. '"):' → logprob: -4.373051643371582
    5. '[' → logprob: -4.498051643371582
    6. '"' → logprob: -4.498051643371582
    7. ' ")' → logprob: -5.373051643371582
    8. '1' → logprob: -5.373051643371582
    9. '")
' → logprob: -5.498051643371582
    10. ' ")[' → logprob: -5.748051643371582

Token 1055: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.039860621094703674
    2. '                       ' → logprob: -3.289860725402832
    3. '```' → logprob: -6.539860725402832
    4. '                    ' → logprob: -9.164860725402832
    5. '                           ' → logprob: -10.039860725402832
    6. '[' → logprob: -10.289860725402832
    7. '               ' → logprob: -10.289860725402832
    8. 'Dp' → logprob: -10.664860725402832
    9. '                     ' → logprob: -10.914860725402832
    10. '                               ' → logprob: -10.914860725402832

Token 1056: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.005904265213757753
    2. '                   ' → logprob: -5.880904197692871
    3. 'D' (adapté à ' D') → logprob: -6.630904197692871
    4. ' D' → logprob: -7.130904197692871
    5. '                       ' → logprob: -7.380904197692871
    6. '                           ' → logprob: -9.255904197692871
    7. '               ' → logprob: -9.380904197692871
    8. '                               ' → logprob: -9.505904197692871
    9. 'DP' → logprob: -10.880904197692871
    10. '	D' → logprob: -11.380904197692871

Token 1057: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4498052223643754e-05
    2. '[i' → logprob: -11.625014305114746
    3. '[' → logprob: -12.875014305114746
    4. 'P' → logprob: -13.750014305114746
    5. 'i' → logprob: -14.500014305114746
    6. '
' → logprob: -15.000014305114746
    7. '_p' → logprob: -15.250014305114746
    8. '[
' → logprob: -16.125015258789062
    9. '][' → logprob: -16.125015258789062
    10. '```' → logprob: -16.125015258789062

Token 1058: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -13.25000286102295
    3. '[' → logprob: -13.62500286102295
    4. 'i' → logprob: -15.50000286102295
    5. '[I' → logprob: -17.000003814697266
    6. '\[' → logprob: -18.000003814697266
    7. '
' → logprob: -18.000003814697266
    8. '`' → logprob: -18.375003814697266
    9. '(i' → logprob: -18.750003814697266
    10. '``' → logprob: -19.125003814697266

Token 1059: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004653099924325943
    2. '[i' → logprob: -5.504652976989746
    3. '[' → logprob: -7.504652976989746
    4. 'i' → logprob: -11.629652976989746
    5. '][' → logprob: -12.254652976989746
    6. '```' → logprob: -12.629652976989746
    7. ' +' → logprob: -12.754652976989746
    8. '+i' → logprob: -13.004652976989746
    9. '+
' → logprob: -14.504652976989746
    10. '+[' → logprob: -15.004652976989746

Token 1060: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.576469898223877
    2. '+' → logprob: -0.826469898223877
    3. 'i' → logprob: -7.701469898223877
    4. '```' → logprob: -10.451469421386719
    5. '][' → logprob: -11.201469421386719
    6. '[i' → logprob: -11.326469421386719
    7. '[' → logprob: -12.201469421386719
    8. ' ' → logprob: -12.951469421386719
    9. '   ' → logprob: -13.076469421386719
    10. ' +' → logprob: -13.201469421386719

Token 1061: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.058410171419382095
    2. '[i' → logprob: -2.933410167694092
    3. '[' → logprob: -5.808410167694092
    4. '[j' → logprob: -8.43341064453125
    5. '           ' → logprob: -8.55841064453125
    6. '               ' → logprob: -10.30841064453125
    7. ' ][' → logprob: -11.05841064453125
    8. '[][' → logprob: -11.30841064453125
    9. '}[' → logprob: -11.93341064453125
    10. ')[' → logprob: -12.05841064453125

Token 1062: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.4849443838757e-06
    2. ' j' → logprob: -13.125004768371582
    3. '[j' → logprob: -13.125004768371582
    4. '$j' → logprob: -15.250004768371582
    5. '	j' → logprob: -16.500003814697266
    6. '```' → logprob: -17.625003814697266
    7. ',j' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.000003814697266
    9. '<|end|>' → logprob: -18.125003814697266
    10. '...' → logprob: -18.375003814697266

Token 1063: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0031595381442457438
    2. '[' → logprob: -5.878159523010254
    3. '+' → logprob: -8.628159523010254
    4. '           ' → logprob: -9.628159523010254
    5. '   ' → logprob: -10.378159523010254
    6. '       ' → logprob: -11.003159523010254
    7. '[j' → logprob: -11.128159523010254
    8. '               ' → logprob: -11.253159523010254
    9. ']' → logprob: -11.628159523010254
    10. '```' → logprob: -12.128159523010254

Token 1064: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005436192732304335
    2. 'j' → logprob: -7.875543594360352
    3. '+' → logprob: -8.750543594360352
    4. '```' → logprob: -13.500543594360352
    5. '[j' → logprob: -13.750543594360352
    6. '   ' → logprob: -14.375543594360352
    7. '
' → logprob: -14.375543594360352
    8. '[' → logprob: -14.500543594360352
    9. '][' → logprob: -15.875543594360352
    10. '       ' → logprob: -16.00054359436035

Token 1065: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004450892156455666
    2. '[' → logprob: -7.7504448890686035
    3. ' ][' → logprob: -11.500445365905762
    4. ']' → logprob: -12.875445365905762
    5. ''][' → logprob: -15.500445365905762
    6. ']][' → logprob: -15.500445365905762
    7. '"][' → logprob: -15.625445365905762
    8. '}[' → logprob: -15.625445365905762
    9. '[][' → logprob: -16.000444412231445
    10. '[j' → logprob: -16.000444412231445

Token 1066: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -20.25
    4. '```' → logprob: -20.75
    5. '   ' → logprob: -21.0
    6. '
' → logprob: -21.0
    7. '<|end|>' → logprob: -21.625
    8. '[' → logprob: -21.625
    9. '...' → logprob: -21.75
    10. ']' → logprob: -22.375

Token 1067: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003177952254191041
    2. ']+=' → logprob: -5.753178119659424
    3. ' ]' → logprob: -15.878177642822266
    4. ']+' → logprob: -17.128177642822266
    5. '+=' → logprob: -17.378177642822266
    6. '```' → logprob: -18.128177642822266
    7. '']' → logprob: -18.628177642822266
    8. '           ' → logprob: -18.878177642822266
    9. '"]' → logprob: -19.253177642822266
    10. ']
' → logprob: -19.378177642822266

Token 1068: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03883657604455948
    2. ' +=' → logprob: -3.2888364791870117
    3. ']+=' → logprob: -7.163836479187012
    4. '                   ' → logprob: -11.663836479187012
    5. '```' → logprob: -12.288836479187012
    6. '           ' → logprob: -13.288836479187012
    7. '                    ' → logprob: -13.413836479187012
    8. '            ' → logprob: -13.788836479187012
    9. '               ' → logprob: -13.913836479187012
    10. '+' → logprob: -14.663836479187012

Token 1069: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -4.320199877838604e-07
    2. 'DP' → logprob: -15.25
    3. 'Df' → logprob: -17.5
    4. ' D' → logprob: -18.125
    5. 'Dd' → logprob: -18.125
    6. 'Dn' → logprob: -18.5
    7. '   ' → logprob: -18.75
    8. 'Dc' → logprob: -19.25
    9. 'Dm' → logprob: -19.25
    10. 'Dt' → logprob: -19.25

Token 1070: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10021012276411057
    2. 'Dp' → logprob: -2.350210189819336
    3. 'P' → logprob: -13.475210189819336
    4. 'Lp' → logprob: -14.475210189819336
    5. 'Tp' → logprob: -15.350210189819336
    6. '
' → logprob: -15.475210189819336
    7. '_p' → logprob: -15.600210189819336
    8. 'Rp' → logprob: -15.725210189819336
    9. '```' → logprob: -15.850210189819336
    10. 'D' → logprob: -15.975210189819336

Token 1071: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.500000953674316
    3. '```' → logprob: -18.125
    4. '[' → logprob: -18.5
    5. '(i' → logprob: -18.625
    6. '[I' → logprob: -20.25
    7. '{i' → logprob: -20.375
    8. ' [' → logprob: -20.875
    9. '
' → logprob: -21.0
    10. '[j' → logprob: -21.375

Token 1072: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03805985301733017
    2. '[i' → logprob: -3.288059949874878
    3. 'i' → logprob: -11.913060188293457
    4. '}[' → logprob: -12.163060188293457
    5. ']' → logprob: -12.913060188293457
    6. '[' → logprob: -14.038060188293457
    7. ' ][' → logprob: -14.038060188293457
    8. '```' → logprob: -14.663060188293457
    9. '>[' → logprob: -15.038060188293457
    10. ']][' → logprob: -15.413060188293457

Token 1073: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -13.000001907348633
    3. '$j' → logprob: -17.625001907348633
    4. '	j' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '[j' → logprob: -18.125001907348633
    7. 'i' → logprob: -19.750001907348633
    8. '```' → logprob: -19.875001907348633
    9. ',j' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.125001907348633

Token 1074: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007166040013544261
    2. '[' → logprob: -7.250716686248779
    3. '1' → logprob: -12.625716209411621
    4. ' ][' → logprob: -13.875716209411621
    5. ''][' → logprob: -14.250716209411621
    6. ']' → logprob: -14.250716209411621
    7. '"][' → logprob: -14.750716209411621
    8. '}[' → logprob: -15.500716209411621
    9. '```' → logprob: -15.875716209411621
    10. 's' → logprob: -16.875717163085938

Token 1075: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.375
    3. ' ' → logprob: -18.125
    4. '```' → logprob: -19.125
    5. '   ' → logprob: -19.25
    6. '１' → logprob: -20.25
    7. '`' → logprob: -20.75
    8. '
' → logprob: -20.9375
    9. '১' → logprob: -20.9375
    10. '' → logprob: -21.0

Token 1076: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.34233957529067993
    2. ']' → logprob: -1.4673395156860352
    3. '               ' → logprob: -3.217339515686035
    4. ')' → logprob: -4.467339515686035
    5. ']
' → logprob: -6.092339515686035
    6. '           ' → logprob: -6.092339515686035
    7. '<|end|>' → logprob: -6.842339515686035
    8. '                       ' → logprob: -7.092339515686035
    9. '                           ' → logprob: -8.092339515686035
    10. '                ' → logprob: -8.342339515686035

Token 1077: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07037940621376038
    2. '```' → logprob: -2.9453794956207275
    3. '               ' → logprob: -4.445379257202148
    4. '                       ' → logprob: -7.070379257202148
    5. '                    
' → logprob: -7.570379257202148
    6. '                    ' → logprob: -7.695379257202148
    7. '``' → logprob: -7.945379257202148
    8. '                               ' → logprob: -8.070379257202148
    9. '                ' → logprob: -8.570379257202148
    10. '                           ' → logprob: -8.695379257202148

Token 1078: ' #' (ID: 1069)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.08405394852161407
    2. '                   ' → logprob: -2.5840539932250977
    3. 'D' → logprob: -5.334053993225098
    4. '               ' → logprob: -8.834053993225098
    5. '```' → logprob: -9.209053993225098
    6. '                       ' → logprob: -10.834053993225098
    7. 'Dj' → logprob: -11.084053993225098
    8. 'DP' → logprob: -11.209053993225098
    9. '                  ' → logprob: -11.584053993225098
    10. '                 ' → logprob: -12.584053993225098

Token 1079: ' Mais' (ID: 13880)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -7.040457421680912e-05
    2. '                   ' → logprob: -9.875070571899414
    3. '               ' → logprob: -11.125070571899414
    4. 'DP' → logprob: -13.500070571899414
    5. 'D' → logprob: -13.875070571899414
    6. '           ' → logprob: -14.500070571899414
    7. 'Df' → logprob: -15.125070571899414
    8. 'Dj' → logprob: -15.125070571899414
    9. '```' → logprob: -15.125070571899414
    10. 'Dn' → logprob: -16.000070571899414

Token 1080: ' on' (ID: 402)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -8.2994620242971e-06
    2. ' D' → logprob: -12.375008583068848
    3. 'D' → logprob: -13.375008583068848
    4. 'Dn' → logprob: -14.125008583068848
    5. '                   ' → logprob: -14.500008583068848
    6. 'DP' → logprob: -15.000008583068848
    7. 'Dj' → logprob: -15.125008583068848
    8. '               ' → logprob: -15.625008583068848
    9. 'Df' → logprob: -15.625008583068848
    10. 'Dv' → logprob: -15.875008583068848

Token 1081: ' peut' (ID: 9216)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.6606557965278625
    2. '[' → logprob: -1.4106557369232178
    3. 'D' → logprob: -1.7856557369232178
    4. ' continue' → logprob: -3.9106557369232178
    5. 'continue' → logprob: -3.9106557369232178
    6. '```' → logprob: -4.035655975341797
    7. '+' → logprob: -5.910655975341797
    8. ']' → logprob: -6.285655975341797
    9. '...' → logprob: -6.410655975341797
    10. '+=' → logprob: -6.535655975341797

Token 1082: ' aussi' (ID: 9894)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.5796938538551331
    2. 'continue' → logprob: -1.5796937942504883
    3. ' continuer' → logprob: -2.5796937942504883
    4. '[' → logprob: -3.2046937942504883
    5. ' continue' → logprob: -3.8296937942504883
    6. '                   ' → logprob: -3.8296937942504883
    7. '               ' → logprob: -4.079693794250488
    8. 'contin' → logprob: -4.079693794250488
    9. 'D' → logprob: -4.829693794250488
    10. '                       ' → logprob: -4.954693794250488

Token 1083: ' continuer' (ID: 75597)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.1279553291387856e-05
    2. 'DP' → logprob: -12.250011444091797
    3. '```' → logprob: -13.125011444091797
    4. 'continue' → logprob: -14.000011444091797
    5. 'Dj' → logprob: -14.375011444091797
    6. 'Dn' → logprob: -14.500011444091797
    7. 'D' → logprob: -14.625011444091797
    8. '                   ' → logprob: -15.000011444091797
    9. ' D' → logprob: -15.000011444091797
    10. 'dp' → logprob: -15.250011444091797

Token 1084: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.033669352531433
    2. '                   ' → logprob: -1.408669352531433
    3. '```' → logprob: -1.658669352531433
    4. '               ' → logprob: -2.6586694717407227
    5. 'Dp' → logprob: -3.0336694717407227
    6. ' D' → logprob: -3.7836694717407227
    7. 'D' → logprob: -3.9086694717407227
    8. '                       ' → logprob: -4.158669471740723
    9. '           ' → logprob: -4.783669471740723
    10. '                        
' → logprob: -5.658669471740723

Token 1085: ' zone' (ID: 15070)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0005649457452818751
    2. ' bound' → logprob: -8.625564575195312
    3. '0' → logprob: -9.500564575195312
    4. ' D' → logprob: -9.500564575195312
    5. 'bound' → logprob: -9.625564575195312
    6. '[' → logprob: -9.750564575195312
    7. '```' → logprob: -10.125564575195312
    8. 'D' → logprob: -10.375564575195312
    9. 'DP' → logprob: -10.500564575195312
    10. 'dp' → logprob: -13.000564575195312

Token 1086: ' libre' (ID: 25486)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4107396900653839
    2. '0' → logprob: -1.2857396602630615
    3. ' libre' → logprob: -3.5357396602630615
    4. 'lib' → logprob: -4.035739898681641
    5. 'free' → logprob: -4.660739898681641
    6. ' ' → logprob: -6.035739898681641
    7. '```' → logprob: -7.285739898681641
    8. ' free' → logprob: -7.785739898681641
    9. 'Libre' → logprob: -8.53573989868164
    10. ' libres' → logprob: -9.28573989868164

Token 1087: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8794931173324585
    2. '[' → logprob: -1.0044931173324585
    3. 'Dp' → logprob: -2.254493236541748
    4. '```' → logprob: -3.004493236541748
    5. '               ' → logprob: -3.129493236541748
    6. '           ' → logprob: -4.754493236541748
    7. '                       ' → logprob: -5.629493236541748
    8. ' D' → logprob: -6.129493236541748
    9. '                           ' → logprob: -7.129493236541748
    10. '                    ' → logprob: -7.379493236541748

Token 1088: 'bound' (ID: 18791)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0001532401074655354
    2. ' D' → logprob: -8.875153541564941
    3. 'D' → logprob: -11.375153541564941
    4. 'Dn' → logprob: -14.000153541564941
    5. 'DP' → logprob: -14.625153541564941
    6. 'Dv' → logprob: -15.875153541564941
    7. '```' → logprob: -16.000152587890625
    8. 'Dd' → logprob: -16.500152587890625
    9. '   ' → logprob: -16.625152587890625
    10. 'Df' → logprob: -16.750152587890625

Token 1089: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31100013852119446
    2. '[' → logprob: -1.436000108718872
    3. ' ' → logprob: -3.561000108718872
    4. ' [' → logprob: -7.561000347137451
    5. '```' → logprob: -8.060999870300293
    6. '                   ' → logprob: -9.685999870300293
    7. ' ' → logprob: -10.810999870300293
    8. '               ' → logprob: -10.935999870300293
    9. '           ' → logprob: -11.060999870300293
    10. '][' → logprob: -11.435999870300293

Token 1090: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005952148232609034
    2. '[' → logprob: -5.13095235824585
    3. ' ' → logprob: -11.505951881408691
    4. '```' → logprob: -11.505951881408691
    5. '][' → logprob: -13.630951881408691
    6. ' [' → logprob: -14.380951881408691
    7. '   ' → logprob: -15.005951881408691
    8. '[i' → logprob: -15.255951881408691
    9. ' ' → logprob: -15.505951881408691
    10. ')' → logprob: -16.005952835083008

Token 1091: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.646517813205719
    2. ']' → logprob: -1.0215177536010742
    3. ')' → logprob: -2.771517753601074
    4. '[' → logprob: -4.271517753601074
    5. '][' → logprob: -4.521517753601074
    6. '```' → logprob: -4.521517753601074
    7. '               ' → logprob: -4.896517753601074
    8. ']
' → logprob: -5.521517753601074
    9. ')
' → logprob: -6.271517753601074
    10. '           ' → logprob: -6.896517753601074

Token 1092: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.212559774518013
    2. '```' → logprob: -2.212559700012207
    3. 'Dp' → logprob: -2.837559700012207
    4. '[' → logprob: -4.587559700012207
    5. '               ' → logprob: -5.087559700012207
    6. '``' → logprob: -6.462559700012207
    7. '           ' → logprob: -6.712559700012207
    8. '                    ' → logprob: -7.212559700012207
    9. '                       ' → logprob: -7.337559700012207
    10. '`' → logprob: -7.462559700012207

Token 1093: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0010293578961864114
    2. ' D' → logprob: -7.0010294914245605
    3. 'D' (adapté à ' D') → logprob: -9.626029014587402
    4. '```' → logprob: -10.751029014587402
    5. '                   ' → logprob: -11.001029014587402
    6. 'DP' → logprob: -12.501029014587402
    7. 'Dv' → logprob: -12.751029014587402
    8. '               ' → logprob: -13.501029014587402
    9. 'Dj' → logprob: -14.001029014587402
    10. 'Df' → logprob: -14.001029014587402

Token 1094: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3856492842023727e-06
    2. '[i' → logprob: -13.875000953674316
    3. '[' → logprob: -15.750000953674316
    4. '_p' → logprob: -16.375001907348633
    5. '[p' → logprob: -16.625001907348633
    6. ' p' → logprob: -16.750001907348633
    7. 'i' → logprob: -17.250001907348633
    8. '
' → logprob: -17.375001907348633
    9. 'Dp' → logprob: -17.375001907348633
    10. '```' → logprob: -18.250001907348633

Token 1095: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0037080387119203806
    2. '[' → logprob: -5.6287078857421875
    3. 'i' → logprob: -10.128707885742188
    4. '+' → logprob: -10.753707885742188
    5. '```' → logprob: -10.753707885742188
    6. 'p' → logprob: -11.878707885742188
    7. '
' → logprob: -12.753707885742188
    8. '`' → logprob: -13.128707885742188
    9. '_i' → logprob: -13.253707885742188
    10. '   ' → logprob: -13.378707885742188

Token 1096: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011021859245374799
    2. '[' → logprob: -9.375110626220703
    3. '][' → logprob: -10.625110626220703
    4. '+[' → logprob: -15.125110626220703
    5. '+
' → logprob: -15.875110626220703
    6. 'i' → logprob: -16.000110626220703
    7. ']+' → logprob: -16.000110626220703
    8. '```' → logprob: -16.375110626220703
    9. '1' → logprob: -16.500110626220703
    10. '[i' → logprob: -16.750110626220703

Token 1097: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02978902868926525
    2. '+' → logprob: -3.5297889709472656
    3. '```' → logprob: -10.779788970947266
    4. 'i' → logprob: -11.779788970947266
    5. '[' → logprob: -12.779788970947266
    6. '[i' → logprob: -13.279788970947266
    7. ' ' → logprob: -13.529788970947266
    8. '][' → logprob: -14.029788970947266
    9. '   ' → logprob: -14.279788970947266
    10. ' +' → logprob: -15.154788970947266

Token 1098: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.048699893057346344
    2. '][' → logprob: -3.0486998558044434
    3. '[' → logprob: -9.923700332641602
    4. '[j' → logprob: -10.798700332641602
    5. '```' → logprob: -11.298700332641602
    6. 'i' → logprob: -11.423700332641602
    7. '}[' → logprob: -12.048700332641602
    8. '           ' → logprob: -12.673700332641602
    9. ' ][' → logprob: -13.298700332641602
    10. ' [' → logprob: -13.673700332641602

Token 1099: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.981667537620524e-06
    2. ' j' → logprob: -13.750001907348633
    3. '```' → logprob: -14.625001907348633
    4. '[j' → logprob: -14.750001907348633
    5. 'i' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '	j' → logprob: -17.625001907348633
    8. '           ' → logprob: -18.125001907348633
    9. '       ' → logprob: -18.250001907348633
    10. '$j' → logprob: -18.875001907348633

Token 1100: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16090524196624756
    2. '+' → logprob: -1.9109052419662476
    3. '[' → logprob: -7.410905361175537
    4. ' ][' → logprob: -10.410904884338379
    5. '[j' → logprob: -11.660904884338379
    6. '   ' → logprob: -11.660904884338379
    7. ']' → logprob: -12.285904884338379
    8. '           ' → logprob: -12.285904884338379
    9. '```' → logprob: -12.910904884338379
    10. '0' → logprob: -13.535904884338379

Token 1101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5296880006790161
    2. '0' → logprob: -0.9046880006790161
    3. 'j' → logprob: -5.154687881469727
    4. '+' → logprob: -7.279687881469727
    5. ' ' → logprob: -10.529687881469727
    6. '```' → logprob: -10.529687881469727
    7. '   ' → logprob: -11.529687881469727
    8. '[' → logprob: -12.279687881469727
    9. '[j' → logprob: -12.904687881469727
    10. '][' → logprob: -13.029687881469727

Token 1102: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00047214110963977873
    2. '[' → logprob: -7.750472068786621
    3. ' ][' → logprob: -10.625472068786621
    4. '           ' → logprob: -12.375472068786621
    5. '[i' → logprob: -12.500472068786621
    6. ']][' → logprob: -13.750472068786621
    7. '[][' → logprob: -14.000472068786621
    8. '}[' → logprob: -14.000472068786621
    9. '[j' → logprob: -14.125472068786621
    10. ']' → logprob: -14.250472068786621

Token 1103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. 'j' → logprob: -12.75000286102295
    3. '[' → logprob: -15.75000286102295
    4. '
' → logprob: -16.750003814697266
    5. 'k' → logprob: -16.875003814697266
    6. ' ' → logprob: -17.500003814697266
    7. '```' → logprob: -18.750003814697266
    8. '   ' → logprob: -18.875003814697266
    9. 'Dp' → logprob: -19.500003814697266
    10. '`' → logprob: -20.500003814697266

Token 1104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016234830021858215
    2. ']+=' → logprob: -4.141234874725342
    3. ']+' → logprob: -8.641234397888184
    4. ' ]' → logprob: -11.516234397888184
    5. '```' → logprob: -12.516234397888184
    6. '[' → logprob: -12.516234397888184
    7. '           ' → logprob: -13.641234397888184
    8. '+=' → logprob: -13.891234397888184
    9. '][' → logprob: -14.016234397888184
    10. ')' → logprob: -14.266234397888184

Token 1105: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.374941885471344
    2. ' +=' → logprob: -1.2499418258666992
    3. '[' → logprob: -4.249941825866699
    4. ']+=' → logprob: -4.499941825866699
    5. '```' → logprob: -8.7499418258667
    6. '           ' → logprob: -8.8749418258667
    7. '+' → logprob: -8.9999418258667
    8. ']' → logprob: -9.3749418258667
    9. '          ' → logprob: -10.3749418258667
    10. '                   ' → logprob: -10.4999418258667

Token 1106: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.1472419600977446e-06
    2. ' D' → logprob: -14.375000953674316
    3. 'DP' → logprob: -15.125000953674316
    4. 'Df' → logprob: -16.125001907348633
    5. 'Dn' → logprob: -17.250001907348633
    6. 'Dd' → logprob: -17.250001907348633
    7. 'Dv' → logprob: -17.375001907348633
    8. 'Dj' → logprob: -17.875001907348633
    9. 'D' → logprob: -17.875001907348633
    10. 'Dm' → logprob: -18.250001907348633

Token 1107: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.107425062713446e-06
    2. '[i' → logprob: -12.000006675720215
    3. '[' → logprob: -15.000006675720215
    4. 'Dp' → logprob: -15.125006675720215
    5. '_p' → logprob: -16.25000762939453
    6. 'P' → logprob: -16.62500762939453
    7. '[p' → logprob: -16.62500762939453
    8. '
' → logprob: -17.25000762939453
    9. ' p' → logprob: -17.37500762939453
    10. '```' → logprob: -17.75000762939453

Token 1108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.771655115589965e-05
    2. '][' → logprob: -11.750018119812012
    3. '[' → logprob: -12.500018119812012
    4. ' [' → logprob: -13.375018119812012
    5. '```' → logprob: -13.625018119812012
    6. 'i' → logprob: -14.125018119812012
    7. '[j' → logprob: -14.500018119812012
    8. '   ' → logprob: -14.500018119812012
    9. '	' → logprob: -14.750018119812012
    10. ']' → logprob: -15.500018119812012

Token 1109: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00023512568441219628
    2. '[i' → logprob: -9.000235557556152
    3. ' ][' → logprob: -9.375235557556152
    4. ']' → logprob: -10.750235557556152
    5. '   ' → logprob: -13.375235557556152
    6. '[j' → logprob: -14.125235557556152
    7. '[' → logprob: -14.250235557556152
    8. '	' → logprob: -15.125235557556152
    9. 'i' → logprob: -15.125235557556152
    10. ']][' → logprob: -15.250235557556152

Token 1110: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0564331205387134e-05
    2. '[j' → logprob: -11.62501049041748
    3. '```' → logprob: -14.50001049041748
    4. ' j' → logprob: -14.75001049041748
    5. 'i' → logprob: -14.87501049041748
    6. '	j' → logprob: -15.62501049041748
    7. '][' → logprob: -16.875011444091797
    8. '   ' → logprob: -17.250011444091797
    9. '$j' → logprob: -17.250011444091797
    10. '[' → logprob: -17.625011444091797

Token 1111: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.015195829793810844
    2. '[' → logprob: -4.265195846557617
    3. '[i' → logprob: -7.640195846557617
    4. '[j' → logprob: -8.390195846557617
    5. '}[' → logprob: -8.765195846557617
    6. ' ][' → logprob: -10.390195846557617
    7. '>[' → logprob: -10.515195846557617
    8. '           ' → logprob: -11.015195846557617
    9. '[k' → logprob: -11.140195846557617
    10. '"][' → logprob: -11.515195846557617

Token 1112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -18.625
    5. '[' → logprob: -18.875
    6. '۰' → logprob: -19.125
    7. '1' → logprob: -19.25
    8. 'j' → logprob: -20.8125
    9. '０' → logprob: -20.9375
    10. 'k' → logprob: -21.0

Token 1113: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04501441866159439
    2. '<|end|>' → logprob: -3.5450143814086914
    3. '               ' → logprob: -4.670014381408691
    4. '           ' → logprob: -5.920014381408691
    5. ']' → logprob: -6.670014381408691
    6. '<|end|>' → logprob: -7.545014381408691
    7. ' )' → logprob: -7.670014381408691
    8. '                   ' → logprob: -8.045014381408691
    9. '```' → logprob: -9.045014381408691
    10. '       ' → logprob: -9.920014381408691

Token 1114: '               ' (ID: 506)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7519391179084778
    2. 'print' → logprob: -1.126939058303833
    3. '```' → logprob: -2.251939058303833
    4. 'result' → logprob: -2.751939058303833
    5. '           ' → logprob: -4.626939296722412
    6. '
' → logprob: -5.001939296722412
    7. 'final' → logprob: -5.751939296722412
    8. ')' → logprob: -6.126939296722412
    9. 'sum' → logprob: -6.251939296722412
    10. '       ' → logprob: -6.376939296722412

Token 1115: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038124118000268936
    2. 'else' (adapté à ' else') → logprob: -4.163124084472656
    3. '                ' → logprob: -5.163124084472656
    4. '           ' → logprob: -5.663124084472656
    5. ' else' → logprob: -5.913124084472656
    6. '#' → logprob: -6.163124084472656
    7. '            ' → logprob: -6.413124084472656
    8. '<|end|>' → logprob: -6.413124084472656
    9. '              ' → logprob: -6.913124084472656
    10. '```' → logprob: -7.413124084472656

Token 1116: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09244653582572937
    2. '               ' → logprob: -2.8424465656280518
    3. ':' → logprob: -3.5924465656280518
    4. ':
' → logprob: -7.467446327209473
    5. '[' → logprob: -7.717446327209473
    6. '                ' → logprob: -8.092446327209473
    7. '                       ' → logprob: -8.092446327209473
    8. '                    ' → logprob: -8.467446327209473
    9. '{' → logprob: -8.592446327209473
    10. ' :' → logprob: -8.967446327209473

Token 1117: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000943980470765382
    2. '                       ' → logprob: -7.750944137573242
    3. '               ' → logprob: -8.375944137573242
    4. '```' → logprob: -9.250944137573242
    5. '                    ' → logprob: -9.625944137573242
    6. '                  ' → logprob: -10.625944137573242
    7. ' D' → logprob: -11.250944137573242
    8. '                           ' → logprob: -11.500944137573242
    9. '                               ' → logprob: -11.500944137573242
    10. 'Dp' → logprob: -11.500944137573242

Token 1118: ' #' (ID: 1069)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.004015122540295124
    2. '                   ' → logprob: -5.87901496887207
    3. '               ' → logprob: -7.00401496887207
    4. 'D' → logprob: -8.25401496887207
    5. '           ' → logprob: -11.37901496887207
    6. '                       ' → logprob: -12.12901496887207
    7. 'DP' → logprob: -12.37901496887207
    8. '                ' → logprob: -12.50401496887207
    9. ' D' → logprob: -12.87901496887207
    10. '                    ' → logprob: -13.12901496887207

Token 1119: ' k' (ID: 372)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.009597073309123516
    2. '                   ' → logprob: -5.009597301483154
    3. 'D' → logprob: -6.509597301483154
    4. '               ' → logprob: -6.634597301483154
    5. '                ' → logprob: -11.384596824645996
    6. '           ' → logprob: -11.759596824645996
    7. '[' → logprob: -12.009596824645996
    8. '                    ' → logprob: -12.259596824645996
    9. '                  ' → logprob: -12.259596824645996
    10. '```' → logprob: -12.259596824645996

Token 1120: ' >' (ID: 1424)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4325447678565979
    2. '>' → logprob: -1.3075447082519531
    3. '                   ' → logprob: -3.557544708251953
    4. '```' → logprob: -4.182544708251953
    5. '0' → logprob: -4.307544708251953
    6. '+' → logprob: -5.307544708251953
    7. '_' → logprob: -5.432544708251953
    8. ' >' → logprob: -5.432544708251953
    9. '               ' → logprob: -6.057544708251953
    10. '           ' → logprob: -6.432544708251953

Token 1121: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14865364134311676
    2. 'Dp' → logprob: -2.023653745651245
    3. ' int' → logprob: -5.398653507232666
    4. 'k' → logprob: -7.523653507232666
    5. ' D' → logprob: -8.398653984069824
    6. '0' → logprob: -8.648653984069824
    7. 'n' → logprob: -9.398653984069824
    8. '10' → logprob: -9.398653984069824
    9. '   ' → logprob: -9.398653984069824
    10. ' k' → logprob: -9.648653984069824

Token 1122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006538204033859074
    2. '[' → logprob: -7.6256537437438965
    3. '+' → logprob: -8.875654220581055
    4. '][' → logprob: -11.500654220581055
    5. '[j' → logprob: -11.875654220581055
    6. '```' → logprob: -13.000654220581055
    7. 'i' → logprob: -13.500654220581055
    8. ')[' → logprob: -13.875654220581055
    9. '[int' → logprob: -14.000654220581055
    10. ')' → logprob: -14.250654220581055

Token 1123: ']' (ID: 60)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2696121633052826
    2. ':
' → logprob: -2.2696120738983154
    3. '               ' → logprob: -2.8946120738983154
    4. '][' → logprob: -3.2696120738983154
    5. ']:
' → logprob: -4.1446123123168945
    6. '[' → logprob: -4.3946123123168945
    7. ']' → logprob: -5.2696123123168945
    8. '```' → logprob: -5.8946123123168945
    9. '           ' → logprob: -7.5196123123168945
    10. '0' → logprob: -7.5196123123168945

Token 1124: ' :' (ID: 712)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026211237534880638
    2. '[' → logprob: -4.651211261749268
    3. '                       ' → logprob: -4.901211261749268
    4. ':
' → logprob: -5.526211261749268
    5. '                           ' → logprob: -7.151211261749268
    6. '                    ' → logprob: -7.276211261749268
    7. '```' → logprob: -7.276211261749268
    8. '               ' → logprob: -7.651211261749268
    9. ' :
' → logprob: -8.15121078491211
    10. '   ' → logprob: -8.52621078491211

Token 1125: ' seulement' (ID: 32072)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.2675096392631531
    2. '                   ' → logprob: -2.017509698867798
    3. 'continue' → logprob: -2.892509698867798
    4. '               ' → logprob: -4.017509460449219
    5. ' continue' → logprob: -4.267509460449219
    6. 'pass' → logprob: -6.017509460449219
    7. '   ' → logprob: -6.392509460449219
    8. '           ' → logprob: -6.392509460449219
    9. '0' → logprob: -6.392509460449219
    10. '                    ' → logprob: -6.767509460449219

Token 1126: ' possible' (ID: 4149)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.02872266061604023
    2. '0' → logprob: -4.278722763061523
    3. '                   ' → logprob: -5.403722763061523
    4. ' D' → logprob: -5.653722763061523
    5. 'D' → logprob: -6.653722763061523
    6. '               ' → logprob: -6.903722763061523
    7. 'Dj' → logprob: -7.153722763061523
    8. '   ' → logprob: -7.528722763061523
    9. 'continue' → logprob: -7.653722763061523
    10. ' continue' → logprob: -7.778722763061523

Token 1127: ' en' (ID: 469)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23039831221103668
    2. '               ' → logprob: -2.605398416519165
    3. '[' → logprob: -2.855398416519165
    4. 'if' → logprob: -3.355398416519165
    5. ' if' → logprob: -3.855398416519165
    6. '```' → logprob: -5.105398178100586
    7. '                       ' → logprob: -6.230398178100586
    8. '           ' → logprob: -6.480398178100586
    9. ':' → logprob: -6.605398178100586
    10. ':
' → logprob: -6.605398178100586

Token 1128: ' bound' (ID: 11608)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.46303197741508484
    2. ' bound' → logprob: -1.3380320072174072
    3. '0' → logprob: -2.5880320072174072
    4. '[' → logprob: -4.088031768798828
    5. 'Dp' → logprob: -4.338031768798828
    6. ' ' → logprob: -6.088031768798828
    7. '```' → logprob: -8.088031768798828
    8. '-bound' → logprob: -9.088031768798828
    9. 'Bound' → logprob: -9.213031768798828
    10. '_bound' → logprob: -9.963031768798828

Token 1129: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13614509999752045
    2. ' ' → logprob: -2.1361451148986816
    3. '[' → logprob: -4.761145114898682
    4. '_' → logprob: -9.261144638061523
    5. '1' → logprob: -9.511144638061523
    6. '==' → logprob: -9.511144638061523
    7. ' ==' → logprob: -10.136144638061523
    8. ' [' → logprob: -10.136144638061523
    9. ' =' → logprob: -10.136144638061523
    10. '=' → logprob: -10.386144638061523

Token 1130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033976484555751085
    2. ' ' → logprob: -6.128397464752197
    3. '[' → logprob: -6.878397464752197
    4. '```' → logprob: -8.878397941589355
    5. ' [' → logprob: -10.503397941589355
    6. '   ' → logprob: -12.253397941589355
    7. '`' → logprob: -12.878397941589355
    8. '][' → logprob: -13.128397941589355
    9. '``' → logprob: -13.253397941589355
    10. '  ' → logprob: -14.253397941589355

Token 1131: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010409542359411716
    2. '[' → logprob: -5.385409355163574
    3. '               ' → logprob: -5.760409355163574
    4. '```' → logprob: -7.135409355163574
    5. ':' → logprob: -7.635409355163574
    6. '                       ' → logprob: -7.760409355163574
    7. ':
' → logprob: -8.260409355163574
    8. '                    ' → logprob: -9.135409355163574
    9. 'Dp' → logprob: -9.260409355163574
    10. ')' → logprob: -9.385409355163574

Token 1132: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07936064153909683
    2. '```' → logprob: -3.3293607234954834
    3. 'Dp' → logprob: -3.7043607234954834
    4. '[' → logprob: -5.329360485076904
    5. '               ' → logprob: -5.704360485076904
    6. '                       ' → logprob: -5.954360485076904
    7. '``' → logprob: -6.704360485076904
    8. '                           ' → logprob: -6.954360485076904
    9. '                    ' → logprob: -7.454360485076904
    10. '   ' → logprob: -7.954360485076904

Token 1133: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0088523393496871
    2. '                   ' → logprob: -4.883852481842041
    3. 'D' (adapté à ' D') → logprob: -6.883852481842041
    4. '               ' → logprob: -9.383852005004883
    5. ' D' → logprob: -10.258852005004883
    6. '                       ' → logprob: -11.008852005004883
    7. '                    ' → logprob: -11.133852005004883
    8. '                  ' → logprob: -11.383852005004883
    9. 'DP' → logprob: -11.383852005004883
    10. '                 ' → logprob: -11.883852005004883

Token 1134: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.37500286102295
    3. '[i' → logprob: -14.12500286102295
    4. '_p' → logprob: -15.62500286102295
    5. 'P' → logprob: -16.500001907348633
    6. '[p' → logprob: -16.500001907348633
    7. '+' → logprob: -16.750001907348633
    8. '```' → logprob: -17.375001907348633
    9. '
' → logprob: -18.375001907348633
    10. '``' → logprob: -18.750001907348633

Token 1135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.75
    3. 'i' → logprob: -16.25
    4. '[' → logprob: -17.125
    5. '[I' → logprob: -17.125
    6. ' [' → logprob: -19.125
    7. '           ' → logprob: -20.125
    8. '   ' → logprob: -20.25
    9. '``' → logprob: -20.375
    10. '[j' → logprob: -21.125

Token 1136: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.125000953674316
    3. '][' → logprob: -15.375000953674316
    4. ' +' → logprob: -15.500000953674316
    5. '＋' → logprob: -17.375
    6. '+i' → logprob: -17.625
    7. '[i' → logprob: -18.0
    8. '+[' → logprob: -18.5
    9. '```' → logprob: -18.75
    10. '1' → logprob: -18.75

Token 1137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014192303642630577
    2. '+' → logprob: -4.2641921043396
    3. '[i' → logprob: -11.764192581176758
    4. 'i' → logprob: -12.014192581176758
    5. '[' → logprob: -12.264192581176758
    6. '```' → logprob: -12.514192581176758
    7. ' ' → logprob: -13.139192581176758
    8. '0' → logprob: -14.264192581176758
    9. 'j' → logprob: -14.264192581176758
    10. '][' → logprob: -14.639192581176758

Token 1138: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006779080722481012
    2. '[' → logprob: -5.506779193878174
    3. '[j' → logprob: -6.006779193878174
    4. '           ' → logprob: -8.881778717041016
    5. ' ][' → logprob: -10.756778717041016
    6. ']' → logprob: -11.381778717041016
    7. '               ' → logprob: -11.756778717041016
    8. '   ' → logprob: -11.881778717041016
    9. '       ' → logprob: -12.131778717041016
    10. ' [' → logprob: -12.131778717041016

Token 1139: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.13388703338569e-06
    2. ' j' → logprob: -11.625009536743164
    3. '[j' → logprob: -15.625009536743164
    4. '	j' → logprob: -17.125009536743164
    5. '$j' → logprob: -17.750009536743164
    6. ',j' → logprob: -18.500009536743164
    7. '_j' → logprob: -18.750009536743164
    8. '   ' → logprob: -19.250009536743164
    9. '[' → logprob: -19.250009536743164
    10. '
' → logprob: -19.625009536743164

Token 1140: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6667014360427856
    2. '+' → logprob: -0.7917014360427856
    3. '[' → logprob: -3.416701316833496
    4. '1' → logprob: -7.416701316833496
    5. '```' → logprob: -9.666701316833496
    6. '0' → logprob: -11.666701316833496
    7. ' ][' → logprob: -11.916701316833496
    8. ']' → logprob: -11.916701316833496
    9. '   ' → logprob: -12.666701316833496
    10. '           ' → logprob: -12.916701316833496

Token 1141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.016616291366518e-05
    2. '+' → logprob: -10.125070571899414
    3. '0' → logprob: -10.750070571899414
    4. '[' → logprob: -12.000070571899414
    5. '```' → logprob: -13.625070571899414
    6. '][' → logprob: -14.000070571899414
    7. ' ' → logprob: -15.625070571899414
    8. '   ' → logprob: -16.125070571899414
    9. '
' → logprob: -16.500070571899414
    10. '>' → logprob: -16.875070571899414

Token 1142: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001709209755063057
    2. '[' → logprob: -6.376708984375
    3. ' ][' → logprob: -12.501708984375
    4. '0' → logprob: -13.626708984375
    5. ']' → logprob: -14.626708984375
    6. ''][' → logprob: -14.876708984375
    7. '```' → logprob: -15.126708984375
    8. ']][' → logprob: -15.251708984375
    9. '           ' → logprob: -15.251708984375
    10. '>[' → logprob: -16.126708984375

Token 1143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -17.25
    3. ' ' → logprob: -18.875
    4. '
' → logprob: -19.625
    5. '０' → logprob: -21.75
    6. '۰' → logprob: -21.75
    7. '   ' → logprob: -21.875
    8. '```' → logprob: -22.0
    9. '

' → logprob: -23.625
    10. '  ' → logprob: -24.125

Token 1144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001206423039548099
    2. ']+=' → logprob: -6.751206398010254
    3. '][' → logprob: -10.376206398010254
    4. ']+' → logprob: -13.501206398010254
    5. ' ]' → logprob: -13.626206398010254
    6. '           ' → logprob: -14.001206398010254
    7. '[' → logprob: -14.751206398010254
    8. '                   ' → logprob: -14.876206398010254
    9. '```' → logprob: -15.751206398010254
    10. '               ' → logprob: -15.751206398010254

Token 1145: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.021146314218640327
    2. ' +=' → logprob: -3.896146297454834
    3. ']+=' → logprob: -8.521146774291992
    4. '[' → logprob: -8.521146774291992
    5. '                   ' → logprob: -9.646146774291992
    6. '```' → logprob: -9.771146774291992
    7. '           ' → logprob: -9.896146774291992
    8. '               ' → logprob: -11.646146774291992
    9. '                    ' → logprob: -11.771146774291992
    10. '            ' → logprob: -12.271146774291992

Token 1146: ' D' (ID: 415)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -1.5048530030981055e-06
    2. ' D' → logprob: -13.625001907348633
    3. 'Df' → logprob: -16.375001907348633
    4. 'Dn' → logprob: -16.375001907348633
    5. 'D' → logprob: -17.625001907348633
    6. 'Dd' → logprob: -17.875001907348633
    7. 'DP' → logprob: -18.000001907348633
    8. 'Dc' → logprob: -18.000001907348633
    9. 'Dm' → logprob: -18.000001907348633
    10. 'Dv' → logprob: -18.375001907348633

Token 1147: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.522638169466518e-05
    2. 'Dp' → logprob: -10.625024795532227
    3. '[p' → logprob: -14.625024795532227
    4. '[' → logprob: -15.625024795532227
    5. '_p' → logprob: -16.625024795532227
    6. ' p' → logprob: -17.750024795532227
    7. '[i' → logprob: -17.875024795532227
    8. '
' → logprob: -18.125024795532227
    9. 'D' → logprob: -18.125024795532227
    10. '`' → logprob: -18.250024795532227

Token 1148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -13.875000953674316
    3. '[' → logprob: -17.750001907348633
    4. '```' → logprob: -18.125001907348633
    5. ' [' → logprob: -18.625001907348633
    6. '[I' → logprob: -19.750001907348633
    7. '[user' → logprob: -19.875001907348633
    8. '[j' → logprob: -20.000001907348633
    9. '(i' → logprob: -20.375001907348633
    10. '][' → logprob: -20.375001907348633

Token 1149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.4034345187828876e-05
    2. ' ][' → logprob: -11.50002384185791
    3. '[i' → logprob: -12.37502384185791
    4. '+' → logprob: -12.37502384185791
    5. ']' → logprob: -12.75002384185791
    6. '   ' → logprob: -14.12502384185791
    7. '-' → logprob: -14.75002384185791
    8. '[j' → logprob: -14.87502384185791
    9. '[' → logprob: -15.00002384185791
    10. ' ' → logprob: -15.12502384185791

Token 1150: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.935296834039036e-06
    2. ' j' → logprob: -12.75000286102295
    3. '	j' → logprob: -17.125003814697266
    4. '[j' → logprob: -17.500003814697266
    5. 'k' → logprob: -18.125003814697266
    6. '_j' → logprob: -18.875003814697266
    7. 'user' → logprob: -19.375003814697266
    8. '   ' → logprob: -19.375003814697266
    9. '$j' → logprob: -19.500003814697266
    10. '[' → logprob: -19.625003814697266

Token 1151: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001574971480295062
    2. '[' → logprob: -6.626574993133545
    3. '[j' → logprob: -8.876574516296387
    4. ' ][' → logprob: -9.751574516296387
    5. ']' → logprob: -11.626574516296387
    6. '+' → logprob: -11.626574516296387
    7. '           ' → logprob: -11.876574516296387
    8. '   ' → logprob: -12.376574516296387
    9. '1' → logprob: -12.376574516296387
    10. 'j' → logprob: -12.626574516296387

Token 1152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. 'k' → logprob: -16.625
    3. ' ' → logprob: -17.5
    4. '1' → logprob: -17.75
    5. 'j' → logprob: -18.5
    6. '   ' → logprob: -19.125
    7. '۰' → logprob: -19.5
    8. '[' → logprob: -19.875
    9. '```' → logprob: -19.875
    10. '０' → logprob: -20.5625

Token 1153: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01199198979884386
    2. '<|end|>' → logprob: -5.13699197769165
    3. ')' → logprob: -5.26199197769165
    4. '           ' → logprob: -7.76199197769165
    5. '               ' → logprob: -9.386992454528809
    6. '```' → logprob: -9.636992454528809
    7. ' ]' → logprob: -9.886992454528809
    8. '<|end|>' → logprob: -9.886992454528809
    9. '}' → logprob: -10.136992454528809
    10. '       ' → logprob: -10.261992454528809

Token 1154: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06892349570989609
    2. '#' → logprob: -2.8189234733581543
    3. 'answer' → logprob: -5.943923473358154
    4. 'print' → logprob: -6.068923473358154
    5. 'res' → logprob: -6.818923473358154
    6. 'sum' → logprob: -8.068923950195312
    7. 'total' → logprob: -8.693923950195312
    8. 'rés' → logprob: -9.068923950195312
    9. '```' → logprob: -9.818923950195312
    10. 'p' → logprob: -10.193923950195312

Token 1155: ' Après' (ID: 47562)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18572667241096497
    2. 'print' → logprob: -1.9357266426086426
    3. 'answer' → logprob: -4.060726642608643
    4. 'res' → logprob: -5.685726642608643
    5. 'ans' → logprob: -5.685726642608643
    6. 'total' → logprob: -7.310726642608643
    7. '#' → logprob: -8.0607271194458
    8. 'rés' → logprob: -9.4357271194458
    9. 'count' → logprob: -10.6857271194458
    10. 'output' → logprob: -11.4357271194458

Token 1156: ' avoir' (ID: 16595)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4970284700393677
    2. 'range' → logprob: -1.7470284700393677
    3. 'la' → logprob: -1.8720284700393677
    4. '#' → logprob: -3.497028350830078
    5. ' la' → logprob: -3.997028350830078
    6. 'le' → logprob: -4.622028350830078
    7. 'l' → logprob: -6.747028350830078
    8. '```' → logprob: -6.872028350830078
    9. 'the' → logprob: -6.997028350830078
    10. 'les' → logprob: -8.247028350830078

Token 1157: ' traité' (ID: 160836)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15823067724704742
    2. '#' → logprob: -2.408230781555176
    3. 'calcul' → logprob: -3.033230781555176
    4. 'range' → logprob: -5.283230781555176
    5. 'com' → logprob: -7.408230781555176
    6. 'print' → logprob: -7.408230781555176
    7. 'fait' → logprob: -7.658230781555176
    8. 'sum' → logprob: -7.783230781555176
    9. 's' → logprob: -8.783230781555176
    10. ' parcour' → logprob: -8.908230781555176

Token 1158: ' tous' (ID: 10688)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6247453093528748
    2. 'range' → logprob: -1.8747453689575195
    3. 'la' → logprob: -2.1247453689575195
    4. '#' → logprob: -2.8747453689575195
    5. 'le' → logprob: -2.8747453689575195
    6. 'n' → logprob: -3.6247453689575195
    7. 'k' → logprob: -3.7497453689575195
    8. 'l' → logprob: -4.6247453689575195
    9. ' la' → logprob: -5.2497453689575195
    10. '```' → logprob: -6.2497453689575195

Token 1159: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.070212721824646
    2. '(i' → logprob: -1.320212721824646
    3. 'le' → logprob: -2.0702128410339355
    4. '(k' → logprob: -2.6952128410339355
    5. 'i' → logprob: -3.1952128410339355
    6. 'k' → logprob: -3.3202128410339355
    7. 'la' → logprob: -3.4452128410339355
    8. '#' → logprob: -4.1952128410339355
    9. 'n' → logprob: -4.1952128410339355
    10. 'digits' → logprob: -4.1952128410339355

Token 1160: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.37309661507606506
    2. 'digits' → logprob: -1.6230965852737427
    3. '```' → logprob: -3.1230967044830322
    4. 'i' → logprob: -3.2480967044830322
    5. 'range' → logprob: -4.498096466064453
    6. ' chiffres' → logprob: -4.498096466064453
    7. 'indices' → logprob: -5.998096466064453
    8. 'k' → logprob: -6.248096466064453
    9. 'for' → logprob: -6.998096466064453
    10. 'car' → logprob: -7.248096466064453

Token 1161: ',' (ID: 11)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.45063868165016174
    2. '#' → logprob: -1.2006386518478394
    3. 'answer' → logprob: -3.825638771057129
    4. 'total' → logprob: -4.075638771057129
    5. 'print' → logprob: -4.450638771057129
    6. 'res' → logprob: -4.700638771057129
    7. 'count' → logprob: -7.575638771057129
    8. 'p' → logprob: -7.825638771057129
    9. 'ans' → logprob: -7.950638771057129
    10. '
' → logprob: -8.075638771057129

Token 1162: ' il' (ID: 1793)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.015241727232933044
    2. 'answer' → logprob: -5.265241622924805
    3. 'res' → logprob: -5.640241622924805
    4. 'rés' → logprob: -5.640241622924805
    5. '#' → logprob: -6.140241622924805
    6. 'ans' → logprob: -8.265241622924805
    7. 'total' → logprob: -8.265241622924805
    8. 'print' → logprob: -9.515241622924805
    9. 'ré' → logprob: -10.015241622924805
    10. 'r' → logprob: -10.140241622924805

Token 1163: ' ne' (ID: 453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24066737294197083
    2. 's' → logprob: -2.2406673431396484
    3. 'print' → logprob: -2.3656673431396484
    4. 'total' → logprob: -4.865667343139648
    5. 'sum' → logprob: -6.740667343139648
    6. 'result' → logprob: -7.115667343139648
    7. 'est' → logprob: -7.490667343139648
    8. 'p' → logprob: -7.490667343139648
    9. '=' → logprob: -7.615667343139648
    10. ' print' → logprob: -7.865667343139648

Token 1164: ' reste' (ID: 26769)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22053676843643188
    2. 'reste' → logprob: -2.720536708831787
    3. 'rest' → logprob: -2.845536708831787
    4. 's' → logprob: -3.470536708831787
    5. ' reste' → logprob: -4.470536708831787
    6. 'f' → logprob: -4.595536708831787
    7. 'remaining' → logprob: -5.345536708831787
    8. 'print' → logprob: -5.595536708831787
    9. 'est' → logprob: -5.595536708831787
    10. 'remain' → logprob: -5.720536708831787

Token 1165: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.1295493096113205
    2. '#' → logprob: -3.129549264907837
    3. 'qu' → logprob: -3.254549264907837
    4. 'pas' → logprob: -4.379549503326416
    5. 'que' → logprob: -5.129549503326416
    6. ' que' → logprob: -5.504549503326416
    7. ' qu' → logprob: -5.504549503326416
    8. ' plus' → logprob: -5.629549503326416
    9. '[]' → logprob: -5.879549503326416
    10. ' pas' → logprob: -6.629549503326416

Token 1166: ' qu' (ID: 474)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.39656680822372437
    2. 'plus' → logprob: -1.6465668678283691
    3. ' qu' → logprob: -2.021566867828369
    4. ' plus' → logprob: -6.771566867828369
    5. '#' → logprob: -7.521566867828369
    6. 'que' → logprob: -8.396566390991211
    7. 'print' → logprob: -9.771566390991211
    8. '```' → logprob: -9.896566390991211
    9. '(qu' → logprob: -10.146566390991211
    10. ' que' → logprob: -10.146566390991211

Token 1167: ''à' (ID: 33688)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.37020742893218994
    2. ''à' → logprob: -1.74520742893219
    3. 'a' → logprob: -2.3702073097229004
    4. '#' → logprob: -3.6202073097229004
    5. 'print' → logprob: -5.4952073097229
    6. '’à' → logprob: -5.6202073097229
    7. 'au' → logprob: -6.7452073097229
    8. ' à' → logprob: -6.8702073097229
    9. '   ' → logprob: -6.9952073097229
    10. '=' → logprob: -7.2452073097229

Token 1168: ' donner' (ID: 32394)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002913678181357682
    2. 'result' → logprob: -9.37529182434082
    3. 'sum' → logprob: -9.62529182434082
    4. 's' → logprob: -10.00029182434082
    5. '#' → logprob: -10.62529182434082
    6. 'total' → logprob: -10.62529182434082
    7. 'pr' → logprob: -10.87529182434082
    8. 'prin' → logprob: -11.00029182434082
    9. 'prendre' → logprob: -13.50029182434082
    10. 'calcul' → logprob: -13.62529182434082

Token 1169: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011200371198356152
    2. 'la' → logprob: -4.636200428009033
    3. ' print' → logprob: -7.511200428009033
    4. 'sum' → logprob: -8.011199951171875
    5. ' la' → logprob: -8.386199951171875
    6. 'le' → logprob: -8.886199951171875
    7. 'result' → logprob: -9.011199951171875
    8. '#' → logprob: -10.261199951171875
    9. 'une' → logprob: -11.136199951171875
    10. 'l' → logprob: -12.261199951171875

Token 1170: ' réponse' (ID: 50332)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04915033280849457
    2. 'result' → logprob: -3.049150228500366
    3. 'answer' → logprob: -8.049150466918945
    4. 'rés' → logprob: -9.299150466918945
    5. 's' → logprob: -9.674150466918945
    6. 'sum' → logprob: -10.424150466918945
    7. 'total' → logprob: -11.174150466918945
    8. 'output' → logprob: -11.299150466918945
    9. '#' → logprob: -11.424150466918945
    10. ' print' → logprob: -12.049150466918945

Token 1171: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0440426766872406
    2. 'result' → logprob: -3.2940425872802734
    3. 'answer' → logprob: -5.169042587280273
    4. 'total' → logprob: -8.669042587280273
    5. 'res' → logprob: -9.919042587280273
    6. 'r' → logprob: -10.544042587280273
    7. 'ans' → logprob: -11.044042587280273
    8. '
' → logprob: -11.794042587280273
    9. 'ret' → logprob: -12.169042587280273
    10. 'response' → logprob: -12.294042587280273

Token 1172: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10995419323444366
    2. 'p' → logprob: -2.3599541187286377
    3. '#' → logprob: -5.109954357147217
    4. 'sum' → logprob: -6.859954357147217
    5. 'result' → logprob: -6.859954357147217
    6. '```' → logprob: -7.734954357147217
    7. 'Dp' → logprob: -7.734954357147217
    8. 'la' → logprob: -8.234953880310059
    9. '
' → logprob: -8.734953880310059
    10. 'le' → logprob: -9.984953880310059

Token 1173: ' contr' (ID: 6030)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0033774571493268013
    2. 'result' → logprob: -6.378377437591553
    3. 'p' → logprob: -7.253377437591553
    4. '#' → logprob: -7.253377437591553
    5. '
' → logprob: -9.628377914428711
    6. 'rés' → logprob: -10.003377914428711
    7. 'sum' → logprob: -10.128377914428711
    8. '```' → logprob: -10.628377914428711
    9. ' print' → logprob: -10.878377914428711
    10. 'answer' → logprob: -11.003377914428711

Token 1174: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.020081758499145508
    2. 'aint' → logprob: -4.520081520080566
    3. '#' → logprob: -4.770081520080566
    4. 'ain' → logprob: -9.145081520080566
    5. 'aste' → logprob: -9.520081520080566
    6. '
' → logprob: -9.645081520080566
    7. 'iante' → logprob: -9.770081520080566
    8. 'aine' → logprob: -10.145081520080566
    9. 'raine' → logprob: -10.270081520080566
    10. 'raint' → logprob: -10.520081520080566

Token 1175: ' sur' (ID: 1512)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11810001730918884
    2. 'result' → logprob: -2.2430999279022217
    3. '#' → logprob: -6.243100166320801
    4. 'res' → logprob: -6.493100166320801
    5. 'answer' → logprob: -7.743100166320801
    6. 'rés' → logprob: -7.743100166320801
    7. 'for' → logprob: -7.868100166320801
    8. 'total' → logprob: -8.4931001663208
    9. 'r' → logprob: -9.3681001663208
    10. 's' → logprob: -9.8681001663208

Token 1176: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006776464288122952
    2. ' p' → logprob: -8.000678062438965
    3. 'le' → logprob: -8.875678062438965
    4. 'l' → logprob: -9.500678062438965
    5. 'la' → logprob: -10.250678062438965
    6. 'non' → logprob: -10.250678062438965
    7. '```' → logprob: -11.250678062438965
    8. ' le' → logprob: -11.500678062438965
    9. 'the' → logprob: -11.875678062438965
    10. 'j' → logprob: -12.500678062438965

Token 1177: ' nombre' (ID: 9733)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006459563039243221
    2. 'nombre' → logprob: -5.256459712982178
    3. '```' → logprob: -8.13145923614502
    4. 'print' → logprob: -8.63145923614502
    5. '
' → logprob: -9.13145923614502
    6. 'result' → logprob: -9.25645923614502
    7. 'P' → logprob: -9.50645923614502
    8. 'j' → logprob: -9.50645923614502
    9. '#' → logprob: -9.75645923614502
    10. 'sum' → logprob: -9.75645923614502

Token 1178: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8400490283966064
    2. 'de' → logprob: -0.9650490283966064
    3. '#' → logprob: -2.4650490283966064
    4. 'print' → logprob: -3.3400490283966064
    5. 'for' → logprob: -3.7150490283966064
    6. 'answer' → logprob: -4.465048789978027
    7. 'res' → logprob: -4.590048789978027
    8. 'total' → logprob: -5.090048789978027
    9. 'ré' → logprob: -5.715048789978027
    10. 'rés' → logprob: -5.840048789978027

Token 1179: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.1526346206665039
    2. 'non' → logprob: -2.402634620666504
    3. 'digits' → logprob: -3.527634620666504
    4. '```' → logprob: -4.402634620666504
    5. 'car' → logprob: -5.402634620666504
    6. ' chiffres' → logprob: -5.652634620666504
    7. 'c' → logprob: -7.027634620666504
    8. ' non' → logprob: -9.277634620666504
    9. 'd' → logprob: -9.652634620666504
    10. ' digits' → logprob: -10.152634620666504

Token 1180: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.0015052208909764886
    2. 'p' → logprob: -7.626505374908447
    3. '```' → logprob: -7.751505374908447
    4. '_non' → logprob: -8.626504898071289
    5. ' non' → logprob: -8.751504898071289
    6. '非' → logprob: -9.751504898071289
    7. 'nonnull' → logprob: -10.376504898071289
    8. '
' → logprob: -10.376504898071289
    9. 'for' → logprob: -10.751504898071289
    10. '`' → logprob: -11.001504898071289

Token 1181: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21318645775318146
    2. 'z' → logprob: -2.463186502456665
    3. '_z' → logprob: -2.838186502456665
    4. '_' → logprob: -3.838186502456665
    5. '-z' → logprob: -4.463186264038086
    6. 'zeros' → logprob: -4.713186264038086
    7. '_zero' → logprob: -6.588186264038086
    8. ' zeros' → logprob: -6.713186264038086
    9. ' zéro' → logprob: -7.088186264038086
    10. '-' → logprob: -7.338186264038086

Token 1182: 'éro' (ID: 28155)
  Prédit: 'éros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.794425904750824
    2. 'éro' → logprob: -1.2944259643554688
    3. 'ero' → logprob: -1.7944259643554688
    4. 'eros' → logprob: -3.6694259643554688
    5. 'ro' → logprob: -3.7944259643554688
    6. '```' → logprob: -4.169425964355469
    7. '#' → logprob: -4.794425964355469
    8. '_' → logprob: -5.169425964355469
    9. '0' → logprob: -5.419425964355469
    10. 'ros' → logprob: -5.544425964355469

Token 1183: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7749379277229309
    2. 'answer' → logprob: -1.0249378681182861
    3. 'result' → logprob: -1.7749378681182861
    4. 'res' → logprob: -5.774938106536865
    5. 'total' → logprob: -5.899938106536865
    6. 'p' → logprob: -6.399938106536865
    7. 'ans' → logprob: -7.149938106536865
    8. 'for' → logprob: -7.149938106536865
    9. 'r' → logprob: -7.274938106536865
    10. '=' → logprob: -8.149937629699707

Token 1184: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04200787469744682
    2. 'result' → logprob: -3.2920079231262207
    3. 'answer' → logprob: -5.542007923126221
    4. 'total' → logprob: -11.167007446289062
    5. 'res' → logprob: -11.667007446289062
    6. '
' → logprob: -12.042007446289062
    7. ' print' → logprob: -13.292007446289062
    8. 'ans' → logprob: -13.542007446289062
    9. 'rés' → logprob: -13.542007446289062
    10. 'r' → logprob: -13.792007446289062

Token 1185: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1830962896347046
    2. 'result' → logprob: -2.183096408843994
    3. 'answer' → logprob: -2.933096408843994
    4. 'ans' → logprob: -6.933096408843994
    5. 'res' → logprob: -7.933096408843994
    6. 'rés' → logprob: -10.933095932006836
    7. 'total' → logprob: -11.058095932006836
    8. 'r' → logprob: -12.558095932006836
    9. 'ret' → logprob: -12.808095932006836
    10. 'output' → logprob: -12.808095932006836

Token 1186: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.47500839829444885
    2. 'p' → logprob: -0.9750083684921265
    3. ' j' → logprob: -7.350008487701416
    4. 'j' → logprob: -8.475008010864258
    5. ' ' → logprob: -10.850008010864258
    6. ' k' → logprob: -11.475008010864258
    7. '(p' → logprob: -11.850008010864258
    8. 'k' → logprob: -12.225008010864258
    9. ' __' → logprob: -12.350008010864258
    10. '__' → logprob: -12.475008010864258

Token 1187: ',' (ID: 11)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5005197525024414
    2. ' <=' → logprob: -1.6255197525024414
    3. '>' → logprob: -2.5005197525024414
    4. '>=' → logprob: -2.6255197525024414
    5. ' >=' → logprob: -4.000519752502441
    6. '==' → logprob: -4.375519752502441
    7. ' >' → logprob: -5.000519752502441
    8. ' ==' → logprob: -6.125519752502441
    9. '=' → logprob: -6.750519752502441
    10. '[' → logprob: -7.500519752502441

Token 1188: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.026601791381836
    2. '>' → logprob: -1.526601791381836
    3. '<=' → logprob: -2.151601791381836
    4. '0' → logprob: -2.276601791381836
    5. '#' → logprob: -3.276601791381836
    6. '=' → logprob: -3.526601791381836
    7. '>=' → logprob: -3.526601791381836
    8. ' p' → logprob: -3.526601791381836
    9. '==' → logprob: -3.651601791381836
    10. ' <=' → logprob: -4.901601791381836

Token 1189: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6558351516723633
    2. 'p' → logprob: -1.5308351516723633
    3. 'non' → logprob: -2.4058351516723633
    4. 's' → logprob: -3.4058351516723633
    5. '#' → logprob: -3.9058351516723633
    6. 'total' → logprob: -4.030835151672363
    7. ' nombre' → logprob: -4.280835151672363
    8. '<=' → logprob: -4.530835151672363
    9. 'number' → logprob: -4.905835151672363
    10. '>' → logprob: -4.905835151672363

Token 1190: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6053541302680969
    2. '_non' → logprob: -1.8553540706634521
    3. 'non' → logprob: -2.855354070663452
    4. '<=' → logprob: -2.980354070663452
    5. 'de' → logprob: -3.480354070663452
    6. ' =' → logprob: -3.605354070663452
    7. ' non' → logprob: -3.855354070663452
    8. '!=' → logprob: -4.105354309082031
    9. '>' → logprob: -4.230354309082031
    10. 'p' → logprob: -4.605354309082031

Token 1191: ' chiffres' (ID: 105565)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.7628806829452515
    2. 'non' → logprob: -0.7628806829452515
    3. 'digits' → logprob: -3.137880802154541
    4. '```' → logprob: -4.387880802154541
    5. ' chiffres' → logprob: -5.262880802154541
    6. 'car' → logprob: -6.012880802154541
    7. 'zeros' → logprob: -6.887880802154541
    8. ' non' → logprob: -7.012880802154541
    9. 'c' → logprob: -8.012880325317383
    10. ' digits' → logprob: -8.637880325317383

Token 1192: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.14645306766033173
    2. ' non' → logprob: -2.2714531421661377
    3. '_non' → logprob: -4.021452903747559
    4. 'nonnull' → logprob: -5.271452903747559
    5. '!=' → logprob: -5.396452903747559
    6. '```' → logprob: -6.521452903747559
    7. '>' → logprob: -6.771452903747559
    8. '==' → logprob: -7.271452903747559
    9. ' !=' → logprob: -7.396452903747559
    10. '=' → logprob: -8.146452903747559

Token 1193: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.21476343274116516
    2. '0' → logprob: -2.4647634029388428
    3. '=' → logprob: -3.3397634029388428
    4. 'z' → logprob: -3.5897634029388428
    5. '-zero' → logprob: -4.089763641357422
    6. '-' → logprob: -4.964763641357422
    7. '_' → logprob: -5.214763641357422
    8. '=z' → logprob: -5.339763641357422
    9. '_z' → logprob: -5.589763641357422
    10. 'zero' → logprob: -5.714763641357422

Token 1194: 'éros' (ID: 120888)
  Prédit: 'éro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.3488270342350006
    2. 'éros' → logprob: -1.2238270044326782
    3. '_' → logprob: -9.098827362060547
    4. ' ' → logprob: -9.723827362060547
    5. '```' → logprob: -10.098827362060547
    6. '0' → logprob: -10.973827362060547
    7. 'ero' → logprob: -11.223827362060547
    8. '%C' → logprob: -11.223827362060547
    9. 'é' → logprob: -11.723827362060547
    10. '_ro' → logprob: -11.848827362060547

Token 1195: ' à' (ID: 1221)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5546402335166931
    2. '>' → logprob: -1.429640293121338
    3. ' <=' → logprob: -3.054640293121338
    4. '=' → logprob: -3.554640293121338
    5. 'est' → logprob: -3.804640293121338
    6. '!=' → logprob: -3.804640293121338
    7. ' est' → logprob: -3.804640293121338
    8. ' is' → logprob: -4.554640293121338
    9. ' non' → logprob: -4.679640293121338
    10. '>=' → logprob: -5.429640293121338

Token 1196: ' utiliser' (ID: 43227)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.5573785901069641
    2. 'consider' → logprob: -0.9323785901069641
    3. 'comp' → logprob: -4.557378768920898
    4. 'prendre' → logprob: -4.807378768920898
    5. 'util' → logprob: -5.307378768920898
    6. 'penser' → logprob: -6.307378768920898
    7. ' considérer' → logprob: -6.807378768920898
    8. 'con' → logprob: -7.057378768920898
    9. '#' → logprob: -7.432378768920898
    10. '```' → logprob: -7.557378768920898

Token 1197: ',' (ID: 11)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1060589849948883
    2. ' <=' → logprob: -2.6060590744018555
    3. '==' → logprob: -3.9810590744018555
    4. ' ==' → logprob: -5.9810590744018555
    5. '>=' → logprob: -6.2310590744018555
    6. ' est' → logprob: -7.4810590744018555
    7. 'p' → logprob: -7.6060590744018555
    8. '=' → logprob: -7.6060590744018555
    9. 'est' → logprob: -7.8560590744018555
    10. '#' → logprob: -7.8560590744018555

Token 1198: ' est' (ID: 893)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4970945417881012
    2. '>=' → logprob: -1.7470945119857788
    3. 'p' → logprob: -2.8720946311950684
    4. '#' → logprob: -3.4970946311950684
    5. ' est' → logprob: -3.9970946311950684
    6. 'is' → logprob: -4.122094631195068
    7. ' <=' → logprob: -4.122094631195068
    8. 'est' → logprob: -4.372094631195068
    9. '<p' → logprob: -4.372094631195068
    10. '<' → logprob: -4.997094631195068

Token 1199: ' plus' (ID: 2932)
  Prédit: 'keta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.11521091312170029
    2. '0' → logprob: -2.740211009979248
    3. '<=' → logprob: -4.240211009979248
    4. 'p' → logprob: -4.240211009979248
    5. 'k' → logprob: -4.865211009979248
    6. 'not' → logprob: -6.740211009979248
    7. 'kta' → logprob: -6.865211009979248
    8. ' p' → logprob: -7.490211009979248
    9. ' <=' → logprob: -7.615211009979248
    10. '>=' → logprob: -8.11521053314209

Token 1200: ' grand' (ID: 6363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23110246658325195
    2. '<=' → logprob: -2.106102466583252
    3. 'que' → logprob: -3.356102466583252
    4. 'than' → logprob: -3.981102466583252
    5. '=k' → logprob: -4.356102466583252
    6. 'le' → logprob: -5.981102466583252
    7. ' than' → logprob: -5.981102466583252
    8. 'k' → logprob: -6.231102466583252
    9. '```' → logprob: -6.481102466583252
    10. 'grand' → logprob: -6.481102466583252

Token 1201: ' que' (ID: 661)
  Prédit: ' than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' than' → logprob: -0.4445641338825226
    2. ' que' → logprob: -1.4445641040802002
    3. 'que' → logprob: -2.3195641040802
    4. '=' → logprob: -4.319564342498779
    5. 'than' → logprob: -4.819564342498779
    6. ' =' → logprob: -7.569564342498779
    7. ' or' → logprob: -7.694564342498779
    8. 'ou' → logprob: -8.069563865661621
    9. 'or' → logprob: -8.319563865661621
    10. 'p' → logprob: -8.319563865661621

Token 1202: ' le' (ID: 505)
  Prédit: 'keta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.00010151672904612496
    2. 'k' → logprob: -9.875101089477539
    3. ' k' → logprob: -10.625101089477539
    4. '```' → logprob: -11.000101089477539
    5. 'kta' → logprob: -13.125101089477539
    6. 'jeta' → logprob: -13.875101089477539
    7. '	k' → logprob: -14.250101089477539
    8. 'ket' → logprob: -14.375101089477539
    9. 'len' → logprob: -14.875101089477539
    10. ' ' → logprob: -14.875101089477539

Token 1203: ' nombre' (ID: 9733)
  Prédit: 'keta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.002808202290907502
    2. 'len' → logprob: -6.002808094024658
    3. '```' → logprob: -8.627808570861816
    4. 'kta' → logprob: -9.502808570861816
    5. 'jeta' → logprob: -11.127808570861816
    6. ' len' → logprob: -11.377808570861816
    7. 'n' → logprob: -11.502808570861816
    8. 'kea' → logprob: -12.377808570861816
    9. 'k' → logprob: -12.377808570861816
    10. 'length' → logprob: -12.627808570861816

Token 1204: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0226377248764038
    2. '_' → logprob: -1.1476377248764038
    3. ' >=' → logprob: -3.1476378440856934
    4. '+' → logprob: -3.3976378440856934
    5. ' <=' → logprob: -3.3976378440856934
    6. 'de' → logprob: -3.7726378440856934
    7. '_total' → logprob: -3.8976378440856934
    8. ' >' → logprob: -4.147637844085693
    9. '>=' → logprob: -4.272637844085693
    10. ' -' → logprob: -4.272637844085693

Token 1205: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9042478203773499
    2. 'de' → logprob: -0.9042478203773499
    3. '>' → logprob: -2.779247760772705
    4. 'n' → logprob: -3.154247760772705
    5. '(n' → logprob: -4.029247760772705
    6. '>=' → logprob: -4.279247760772705
    7. ' n' → logprob: -4.529247760772705
    8. ':' → logprob: -4.654247760772705
    9. 'of' → logprob: -5.029247760772705
    10. '_de' → logprob: -5.154247760772705

Token 1206: ' chiffres' (ID: 105565)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5118685364723206
    2. 'keta' → logprob: -1.1368684768676758
    3. 'n' → logprob: -2.761868476867676
    4. 'ch' → logprob: -5.136868476867676
    5. 'car' → logprob: -5.636868476867676
    6. ' digits' → logprob: -5.886868476867676
    7. '```' → logprob: -6.386868476867676
    8. ' chiffres' → logprob: -7.636868476867676
    9. 'chars' → logprob: -8.511868476867676
    10. 'kta' → logprob: -8.511868476867676

Token 1207: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15356217324733734
    2. ' or' → logprob: -2.403562068939209
    3. ':
' → logprob: -3.903562068939209
    4. '>' → logprob: -4.778562068939209
    5. ' >' → logprob: -5.278562068939209
    6. 'n' → logprob: -5.653562068939209
    7. 'dans' → logprob: -5.778562068939209
    8. '>=' → logprob: -6.028562068939209
    9. ' >=' → logprob: -6.278562068939209
    10. ' in' → logprob: -6.778562068939209

Token 1208: ' il' (ID: 1793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002712738234549761
    2. ' print' → logprob: -6.377712726593018
    3. 'result' → logprob: -7.377712726593018
    4. '#' → logprob: -8.752713203430176
    5. 'p' → logprob: -8.752713203430176
    6. '   ' → logprob: -10.252713203430176
    7. 'if' → logprob: -12.002713203430176
    8. ':' → logprob: -12.627713203430176
    9. '
' → logprob: -12.627713203430176
    10. ' p' → logprob: -12.752713203430176

Token 1209: ' ne' (ID: 453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22876478731632233
    2. ' =' → logprob: -1.9787647724151611
    3. 'print' → logprob: -4.47876501083374
    4. '#' → logprob: -4.85376501083374
    5. '+=' → logprob: -4.97876501083374
    6. '>' → logprob: -5.10376501083374
    7. '=
' → logprob: -5.10376501083374
    8. ' continue' → logprob: -5.10376501083374
    9. ' print' → logprob: -5.35376501083374
    10. 'if' → logprob: -5.85376501083374

Token 1210: ' peut' (ID: 9216)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39502403140068054
    2. '=' → logprob: -1.645024061203003
    3. 's' → logprob: -2.145024061203003
    4. ' =' → logprob: -5.145023822784424
    5. 'pas' → logprob: -6.270023822784424
    6. 'f' → logprob: -6.770023822784424
    7. 'n' → logprob: -6.770023822784424
    8. '#' → logprob: -6.895023822784424
    9. 'continue' → logprob: -6.895023822784424
    10. '```' → logprob: -6.895023822784424

Token 1211: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.060682158917188644
    2. '```' → logprob: -3.8106820583343506
    3. 'y' → logprob: -4.06068229675293
    4. ' pas' → logprob: -4.81068229675293
    5. '#' → logprob: -6.06068229675293
    6. 'avoir' → logprob: -6.31068229675293
    7. 'ex' → logprob: -6.43568229675293
    8. ''y' → logprob: -7.18568229675293
    9. 'être' → logprob: -7.31068229675293
    10. '_pas' → logprob: -7.31068229675293

Token 1212: ' y' (ID: 342)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0010819945018738508
    2. 'y' → logprob: -7.501081943511963
    3. ' ex' → logprob: -8.626082420349121
    4. 'exist' → logprob: -8.626082420349121
    5. 'être' → logprob: -9.251082420349121
    6. ' y' → logprob: -10.126082420349121
    7. 'avoir' → logprob: -11.251082420349121
    8. '#' → logprob: -13.001082420349121
    9. ''ex' → logprob: -13.001082420349121
    10. 'import' → logprob: -13.251082420349121

Token 1213: ' avoir' (ID: 16595)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.004246031399816275
    2. 'ex' → logprob: -6.254246234893799
    3. ' avoir' → logprob: -6.629246234893799
    4. ''avoir' → logprob: -7.004246234893799
    5. 'voir' → logprob: -9.75424575805664
    6. '’avoir' → logprob: -11.50424575805664
    7. 'être' → logprob: -12.12924575805664
    8. 'a' → logprob: -12.50424575805664
    9. 'venir' → logprob: -13.87924575805664
    10. 'y' → logprob: -14.00424575805664

Token 1214: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.4456762373447418
    2. ' de' → logprob: -1.0706762075424194
    3. '0' → logprob: -4.695676326751709
    4. 'print' → logprob: -5.445676326751709
    5. 'une' → logprob: -6.570676326751709
    6. 'd' → logprob: -6.945676326751709
    7. ' ' → logprob: -8.32067584991455
    8. 'n' → logprob: -8.82067584991455
    9. '1' → logprob: -9.57067584991455
    10. 'auc' → logprob: -9.57067584991455

Token 1215: ' nombre' (ID: 9733)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9827442765235901
    2. ' résultat' → logprob: -1.3577442169189453
    3. 'result' → logprob: -2.2327442169189453
    4. 'rés' → logprob: -2.6077442169189453
    5. 'nombre' → logprob: -2.7327442169189453
    6. ' réponse' → logprob: -3.8577442169189453
    7. 's' → logprob: -4.107744216918945
    8. 'n' → logprob: -4.107744216918945
    9. ' résultats' → logprob: -4.607744216918945
    10. 'solution' → logprob: -4.732744216918945

Token 1216: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11505155265331268
    2. 'possible' → logprob: -2.615051507949829
    3. 'print' → logprob: -3.490051507949829
    4. 'result' → logprob: -6.365051746368408
    5. '#' → logprob: -7.240051746368408
    6. '```' → logprob: -7.740051746368408
    7. 'val' → logprob: -8.24005126953125
    8. 'à' → logprob: -8.24005126953125
    9. 'poss' → logprob: -8.24005126953125
    10. '_possible' → logprob: -8.36505126953125

Token 1217: ' ce' (ID: 2357)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7563359141349792
    2. 'n' → logprob: -1.131335973739624
    3. 'digits' → logprob: -1.881335973739624
    4. 'non' → logprob: -4.006335735321045
    5. 'p' → logprob: -5.256335735321045
    6. 'ch' → logprob: -5.381335735321045
    7. 'car' → logprob: -5.506335735321045
    8. 's' → logprob: -5.756335735321045
    9. 't' → logprob: -6.006335735321045
    10. 'val' → logprob: -6.131335735321045

Token 1218: ' type' (ID: 1490)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.24033033847808838
    2. 'fait' → logprob: -2.740330219268799
    3. '#' → logprob: -3.240330219268799
    4. 'tail' → logprob: -4.115330219268799
    5. 'size' → logprob: -4.240330219268799
    6. 'qui' → logprob: -4.740330219268799
    7. 'n' → logprob: -4.990330219268799
    8. 'p' → logprob: -4.990330219268799
    9. 'length' → logprob: -5.240330219268799
    10. 'faite' → logprob: -5.490330219268799

Token 1219: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.27633991837501526
    2. 'if' → logprob: -1.7763398885726929
    3. ':
' → logprob: -3.1513400077819824
    4. ':' → logprob: -3.6513400077819824
    5. '#' → logprob: -7.026340007781982
    6. 'result' → logprob: -7.026340007781982
    7. '```' → logprob: -8.526339530944824
    8. 'else' → logprob: -8.651339530944824
    9. 'output' → logprob: -8.776339530944824
    10. ' print' → logprob: -8.901339530944824

Token 1220: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08042070269584656
    2. 'print' → logprob: -2.580420732498169
    3. 'result' → logprob: -6.83042049407959
    4. '```' → logprob: -7.95542049407959
    5. 'for' → logprob: -10.33042049407959
    6. '
' → logprob: -10.70542049407959
    7. '``' → logprob: -10.83042049407959
    8. ' if' → logprob: -11.83042049407959
    9. 'answer' → logprob: -11.83042049407959
    10. 'p' → logprob: -12.70542049407959

Token 1221: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6931482553482056
    2. ' p' → logprob: -0.6931482553482056
    3. '   ' → logprob: -14.693148612976074
    4. ' ' → logprob: -15.443148612976074
    5. '(p' → logprob: -15.443148612976074
    6. '	p' → logprob: -15.818148612976074
    7. '_p' → logprob: -16.818147659301758
    8. ' ' → logprob: -16.818147659301758
    9. '  ' → logprob: -17.943147659301758
    10. '<p' → logprob: -18.068147659301758

Token 1222: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4744037389755249
    2. '>' → logprob: -0.9744037389755249
    3. ' <=' → logprob: -8.474403381347656
    4. '<=' → logprob: -9.224403381347656
    5. ' >
' → logprob: -11.724403381347656
    6. '>
' → logprob: -12.849403381347656
    7. '>=' → logprob: -12.974403381347656
    8. ' >
' → logprob: -13.224403381347656
    9. ' >=' → logprob: -13.599403381347656
    10. '>#' → logprob: -14.724403381347656

Token 1223: ' k' (ID: 372)
  Prédit: 'keta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keta' → logprob: -0.014300431124866009
    2. ' k' → logprob: -4.264300346374512
    3. 'k' → logprob: -9.014300346374512
    4. '	k' → logprob: -12.264300346374512
    5. '```' → logprob: -13.014300346374512
    6. 'ket' → logprob: -13.264300346374512
    7. 'kta' → logprob: -13.514300346374512
    8. ' ' → logprob: -14.389300346374512
    9. ' ket' → logprob: -14.514300346374512
    10. 'jeta' → logprob: -14.639300346374512

Token 1224: 'eta' (ID: 3589)
  Prédit: 'eta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eta' → logprob: -1.318681188422488e-05
    2. 'a' → logprob: -12.25001335144043
    3. 'ata' → logprob: -12.25001335144043
    4. 'ta' → logprob: -12.75001335144043
    5. 'éta' → logprob: -15.75001335144043
    6. 'ета' → logprob: -16.00001335144043
    7. 'ota' → logprob: -16.12501335144043
    8. 'e' → logprob: -16.50001335144043
    9. 'ea' → logprob: -16.62501335144043
    10. 'ETA' → logprob: -17.00001335144043

Token 1225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22576594352722168
    2. ':
' → logprob: -1.6007659435272217
    3. ':return' → logprob: -8.1007661819458
    4. ' :' → logprob: -10.9757661819458
    5. '   ' → logprob: -10.9757661819458
    6. ' :
' → logprob: -12.3507661819458
    7. ' or' → logprob: -12.4757661819458
    8. ':
' → logprob: -13.1007661819458
    9. '):
' → logprob: -13.7257661819458
    10. ':

' → logprob: -14.2257661819458

Token 1226: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07421651482582092
    2. '   ' → logprob: -2.949216604232788
    3. ' print' → logprob: -4.074216365814209
    4. '```' → logprob: -6.324216365814209
    5. '
' → logprob: -8.699216842651367
    6. '``' → logprob: -9.449216842651367
    7. ':
' → logprob: -10.824216842651367
    8. '    
' → logprob: -10.824216842651367
    9. '	print' → logprob: -10.949216842651367
    10. 'return' → logprob: -11.074216842651367

Token 1227: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011617878044489771
    2. '
' → logprob: -10.125116348266602
    3. ' print' → logprob: -10.125116348266602
    4. '```' → logprob: -10.375116348266602
    5. '0' → logprob: -13.125116348266602
    6. '   ' → logprob: -13.375116348266602
    7. '``' → logprob: -14.000116348266602
    8. '    
' → logprob: -16.2501163482666
    9. 'return' → logprob: -16.6251163482666
    10. '	print' → logprob: -16.7501163482666

Token 1228: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004624868277460337
    2. '0' → logprob: -5.379624843597412
    3. '(
' → logprob: -13.00462532043457
    4. '("' → logprob: -13.50462532043457
    5. ' (' → logprob: -14.50462532043457
    6. '('' → logprob: -15.12962532043457
    7. '(-' → logprob: -16.25462532043457
    8. '()' → logprob: -16.25462532043457
    9. '()
' → logprob: -18.50462532043457
    10. ' ' → logprob: -18.62962532043457

Token 1229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. ')' → logprob: -20.5
    4. '   ' → logprob: -20.625
    5. '"' → logprob: -21.125
    6. '000' → logprob: -22.625
    7. '00' → logprob: -22.625
    8. '０' → logprob: -23.0
    9. '`' → logprob: -23.125
    10. '```' → logprob: -23.625

Token 1230: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03813685104250908
    2. ')
' → logprob: -3.2881369590759277
    3. 'else' → logprob: -9.28813648223877
    4. ')
' → logprob: -14.28813648223877
    5. '   ' → logprob: -14.41313648223877
    6. ')return' → logprob: -14.66313648223877
    7. ' )' → logprob: -14.91313648223877
    8. ')`
' → logprob: -15.16313648223877
    9. ')#' → logprob: -16.163137435913086
    10. ')`' → logprob: -16.288137435913086

Token 1231: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.723352049040841e-06
    2. 'elif' → logprob: -12.500004768371582
    3. ' else' → logprob: -13.875004768371582
    4. '```' → logprob: -18.375003814697266
    5. 'elses' → logprob: -18.625003814697266
    6. '    
' → logprob: -19.125003814697266
    7. '_else' → logprob: -19.125003814697266
    8. '}else' → logprob: -19.375003814697266
    9. '
' → logprob: -19.375003814697266
    10. 'elser' → logprob: -19.500003814697266

Token 1232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38697078824043274
    2. ':
' → logprob: -1.1369707584381104
    3. '   ' → logprob: -9.886970520019531
    4. ' :
' → logprob: -10.386970520019531
    5. ' :' → logprob: -11.511970520019531
    6. 'print' → logprob: -12.511970520019531
    7. ':

' → logprob: -13.136970520019531
    8. ':
' → logprob: -14.386970520019531
    9. '():
' → logprob: -14.636970520019531
    10. '[' → logprob: -15.011970520019531

Token 1233: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000926826149225235
    2. '   ' → logprob: -7.250926971435547
    3. ' print' → logprob: -8.500926971435547
    4. '```' → logprob: -11.750926971435547
    5. '	print' → logprob: -12.375926971435547
    6. '(print' → logprob: -14.625926971435547
    7. '    
' → logprob: -15.625926971435547
    8. 'sum' → logprob: -15.750926971435547
    9. '``' → logprob: -15.750926971435547
    10. '
' → logprob: -16.125926971435547

Token 1234: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002690840628929436
    2. 'result' → logprob: -8.250268936157227
    3. 'answer' → logprob: -12.125268936157227
    4. 'ans' → logprob: -14.250268936157227
    5. 'res' → logprob: -14.250268936157227
    6. ' print' → logprob: -14.500268936157227
    7. '
' → logprob: -14.875268936157227
    8. 'total' → logprob: -16.000268936157227
    9. '   ' → logprob: -16.625268936157227
    10. '```' → logprob: -17.875268936157227

Token 1235: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023937668651342392
    2. 'result' → logprob: -3.773937702178955
    3. 'answer' → logprob: -7.523937702178955
    4. 'res' → logprob: -9.773937225341797
    5. 'total' → logprob: -10.023937225341797
    6. 'ans' → logprob: -10.273937225341797
    7. 'rés' → logprob: -11.523937225341797
    8. ' print' → logprob: -13.273937225341797
    9. 'pr' → logprob: -14.023937225341797
    10. 'r' → logprob: -14.398937225341797

Token 1236: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015806859591975808
    2. ':' → logprob: -6.876580715179443
    3. 'print' → logprob: -7.876580715179443
    4. ' print' → logprob: -9.251580238342285
    5. ':
' → logprob: -9.751580238342285
    6. '       ' → logprob: -11.376580238342285
    7. '	print' → logprob: -14.126580238342285
    8. '    ' → logprob: -14.751580238342285
    9. ' :' → logprob: -15.376580238342285
    10. '   ' → logprob: -15.751580238342285

Token 1237: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08137569576501846
    2. ' print' → logprob: -2.8313755989074707
    3. '   ' → logprob: -3.9563755989074707
    4. 'result' → logprob: -9.581376075744629
    5. ' result' → logprob: -12.081376075744629
    6. '```' → logprob: -12.581376075744629
    7. '
' → logprob: -13.206376075744629
    8. '    ' → logprob: -13.331376075744629
    9. 'total' → logprob: -13.331376075744629
    10. 'sum' → logprob: -13.456376075744629

Token 1238: ' réponse' (ID: 50332)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014438070356845856
    2. 'result' → logprob: -6.751443862915039
    3. 'answer' → logprob: -8.751443862915039
    4. ' print' → logprob: -9.876443862915039
    5. 'res' → logprob: -10.751443862915039
    6. 'total' → logprob: -11.126443862915039
    7. '   ' → logprob: -11.751443862915039
    8. 'ans' → logprob: -12.376443862915039
    9. 'r' → logprob: -12.876443862915039
    10. '#' → logprob: -12.876443862915039

Token 1239: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4674094021320343
    2. '   ' → logprob: -1.092409372329712
    3. '=' → logprob: -3.342409372329712
    4. 'print' → logprob: -6.217409610748291
    5. '=sum' → logprob: -7.967409610748291
    6. ' print' → logprob: -8.967409133911133
    7. '    ' → logprob: -9.717409133911133
    8. '  ' → logprob: -11.592409133911133
    9. '(print' → logprob: -11.717409133911133
    10. '=len' → logprob: -11.842409133911133

Token 1240: ' la' (ID: 557)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0004610551695805043
    2. ' D' → logprob: -8.875460624694824
    3. 'sum' → logprob: -9.000460624694824
    4. '(D' → logprob: -9.375460624694824
    5. 'print' → logprob: -9.500460624694824
    6. '   ' → logprob: -11.125460624694824
    7. ' sum' → logprob: -11.875460624694824
    8. 'Dm' → logprob: -12.500460624694824
    9. 'D' → logprob: -12.750460624694824
    10. 'Dv' → logprob: -13.000460624694824

Token 1241: ' somme' (ID: 64484)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.05182891711592674
    2. 'print' → logprob: -3.4268288612365723
    3. 'sum' → logprob: -4.051828861236572
    4. 's' → logprob: -8.30182933807373
    5. 'DP' → logprob: -9.42682933807373
    6. 'som' → logprob: -10.17682933807373
    7. ' somme' → logprob: -10.17682933807373
    8. 'result' → logprob: -10.30182933807373
    9. '#' → logprob: -10.30182933807373
    10. ' sum' → logprob: -10.80182933807373

Token 1242: ' des' (ID: 731)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.024260254576802254
    2. '(' → logprob: -3.7742602825164795
    3. '(
' → logprob: -7.2742600440979
    4. 'Dp' → logprob: -8.899260520935059
    5. '   ' → logprob: -9.274260520935059
    6. '=' → logprob: -10.399260520935059
    7. 'print' → logprob: -10.399260520935059
    8. ' (' → logprob: -11.899260520935059
    9. '(sum' → logprob: -12.524260520935059
    10. '((' → logprob: -12.524260520935059

Token 1243: ' deux' (ID: 10301)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -8.363617962459102e-05
    2. '[D' → logprob: -10.250083923339844
    3. '(D' → logprob: -10.625083923339844
    4. ' D' → logprob: -10.875083923339844
    5. 'DP' → logprob: -13.375083923339844
    6. 'print' → logprob: -13.750083923339844
    7. '[' → logprob: -14.000083923339844
    8. '[
' → logprob: -14.000083923339844
    9. 'Dn' → logprob: -15.625083923339844
    10. 'D' → logprob: -15.750083923339844

Token 1244: ' états' (ID: 184259)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.14031235873699188
    2. 'D' → logprob: -2.765312433242798
    3. ' D' → logprob: -3.390312433242798
    4. '[D' → logprob: -3.765312433242798
    5. '[' → logprob: -4.765312194824219
    6. 'print' → logprob: -7.390312194824219
    7. '   ' → logprob: -7.765312194824219
    8. '(D' → logprob: -8.640312194824219
    9. 'indices' → logprob: -8.765312194824219
    10. '[
' → logprob: -9.015312194824219

Token 1245: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14321401715278625
    2. 'print' → logprob: -2.268213987350464
    3. '(D' → logprob: -4.143214225769043
    4. 'Dp' → logprob: -4.643214225769043
    5. '[' → logprob: -6.268214225769043
    6. ' print' → logprob: -7.768214225769043
    7. '[D' → logprob: -7.768214225769043
    8. 'for' → logprob: -7.768214225769043
    9. '(' → logprob: -8.143214225769043
    10. 'final' → logprob: -8.768214225769043

Token 1246: 'borne' (ID: 52545)
  Prédit: 'Dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dp' → logprob: -0.0009193199803121388
    2. ' D' → logprob: -7.000919342041016
    3. '   ' → logprob: -12.625919342041016
    4. 'D' → logprob: -13.000919342041016
    5. 'Dn' → logprob: -14.625919342041016
    6. 'Df' → logprob: -14.875919342041016
    7. '  ' → logprob: -15.125919342041016
    8. 'DP' → logprob: -15.500919342041016
    9. '	D' → logprob: -15.625919342041016
    10. 'Dv' → logprob: -15.625919342041016

Token 1247: ' respect' (ID: 5618)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10919788479804993
    2. '][' → logprob: -2.9841978549957275
    3. ')' → logprob: -4.359198093414307
    4. ')[' → logprob: -4.609198093414307
    5. ' [' → logprob: -4.734198093414307
    6. '[p' → logprob: -5.109198093414307
    7. '   ' → logprob: -5.109198093414307
    8. ',' → logprob: -6.109198093414307
    9. '```' → logprob: -6.359198093414307
    10. '[][' → logprob: -6.734198093414307

Token 1248: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.05474933981895447
    2. 'ant' → logprob: -3.4297492504119873
    3. 'és' → logprob: -4.554749488830566
    4. 'ées' → logprob: -4.804749488830566
    5. 'é' → logprob: -6.429749488830566
    6. 'ee' → logprob: -8.054749488830566
    7. '=' → logprob: -10.179749488830566
    8. '[' → logprob: -10.429749488830566
    9. '{' → logprob: -10.554749488830566
    10. '```' → logprob: -10.679749488830566

Token 1249: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8874741196632385
    2. '[' → logprob: -1.3874740600585938
    3. ' et' → logprob: -2.0124740600585938
    4. ')' → logprob: -2.8874740600585938
    5. '][' → logprob: -3.5124740600585938
    6. ',' → logprob: -3.8874740600585938
    7. '[p' → logprob: -4.012474060058594
    8. '+' → logprob: -4.137474060058594
    9. ']' → logprob: -4.262474060058594
    10. ' and' → logprob: -4.387474060058594

Token 1250: ' borne' (ID: 111819)
  Prédit: 'lib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lib' → logprob: -0.03293980285525322
    2. ' libre' → logprob: -3.532939910888672
    3. 'non' → logprob: -6.907939910888672
    4. '0' → logprob: -7.407939910888672
    5. 'bound' → logprob: -7.907939910888672
    6. 'borne' → logprob: -8.032939910888672
    7. 'free' → logprob: -8.907939910888672
    8. ' ' → logprob: -9.032939910888672
    9. ' non' → logprob: -9.032939910888672
    10. 'zone' → logprob: -9.032939910888672

Token 1251: ' dépass' (ID: 99759)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.33669471740722656
    2. 'lib' → logprob: -2.2116947174072266
    3. ']' → logprob: -3.4616947174072266
    4. ')' → logprob: -3.5866947174072266
    5. ' respect' → logprob: -3.5866947174072266
    6. '0' → logprob: -3.7116947174072266
    7. ' dépass' → logprob: -3.8366947174072266
    8. '```' → logprob: -4.961694717407227
    9. 'atte' → logprob: -5.086694717407227
    10. ',' → logprob: -5.211694717407227

Token 1252: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0009649383719079196
    2. 'ee' → logprob: -7.875965118408203
    3. '0' → logprob: -8.625965118408203
    4. 'é' → logprob: -9.125965118408203
    5. '1' → logprob: -9.625965118408203
    6. 'e' → logprob: -9.875965118408203
    7. '{' → logprob: -9.875965118408203
    8. '2' → logprob: -10.750965118408203
    9. '=' → logprob: -11.250965118408203
    10. '   ' → logprob: -11.750965118408203

Token 1253: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16840875148773193
    2. ')[' → logprob: -2.6684088706970215
    3. '   ' → logprob: -3.0434088706970215
    4. ')
' → logprob: -3.9184088706970215
    5. '[D' → logprob: -4.6684088706970215
    6. 'Dp' → logprob: -6.5434088706970215
    7. ',' → logprob: -6.7934088706970215
    8. '[' → logprob: -6.9184088706970215
    9. ' )' → logprob: -6.9184088706970215
    10. '):' → logprob: -7.4184088706970215

Token 1254: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10081373900175095
    2. 'print' → logprob: -2.350813627243042
    3. ' print' → logprob: -7.975813865661621
    4. '```' → logprob: -8.475813865661621
    5. '(print' → logprob: -10.350813865661621
    6. '[' → logprob: -12.100813865661621
    7. '(' → logprob: -12.975813865661621
    8. '.print' → logprob: -13.350813865661621
    9. ',' → logprob: -13.350813865661621
    10. ' =' → logprob: -13.350813865661621

Token 1255: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09707561880350113
    2. 'Dp' → logprob: -2.8470757007598877
    3. ' p' → logprob: -4.472075462341309
    4. 'print' → logprob: -4.597075462341309
    5. 'j' → logprob: -4.847075462341309
    6. '   ' → logprob: -5.472075462341309
    7. ' j' → logprob: -7.597075462341309
    8. ' print' → logprob: -9.097075462341309
    9. 'le' → logprob: -10.347075462341309
    10. ' D' → logprob: -10.347075462341309

Token 1256: ' dernier' (ID: 27982)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08293277770280838
    2. 'Dp' → logprob: -2.582932710647583
    3. 'j' → logprob: -6.082932949066162
    4. 'nombre' → logprob: -7.582932949066162
    5. 'keta' → logprob: -7.582932949066162
    6. '```' → logprob: -8.957932472229004
    7. 'k' → logprob: -9.332932472229004
    8. '#' → logprob: -9.707932472229004
    9. 'n' → logprob: -9.832932472229004
    10. ' p' → logprob: -10.082932472229004

Token 1257: ' chiffre' (ID: 107420)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9363536238670349
    2. 'indice' → logprob: -0.9363536238670349
    3. '[i' → logprob: -1.9363536834716797
    4. 'niveau' → logprob: -3.3113536834716797
    5. 'index' → logprob: -4.68635368347168
    6. 'print' → logprob: -5.06135368347168
    7. '
' → logprob: -5.81135368347168
    8. '```' → logprob: -5.81135368347168
    9. 'n' → logprob: -5.93635368347168
    10. 'idx' → logprob: -6.43635368347168

Token 1258: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5822606682777405
    2. 'print' → logprob: -0.8322606682777405
    3. ' =' → logprob: -5.957260608673096
    4. ' print' → logprob: -6.082260608673096
    5. '=' → logprob: -7.582260608673096
    6. '(print' → logprob: -8.332261085510254
    7. 'Dp' → logprob: -8.832261085510254
    8. '[D' → logprob: -9.332261085510254
    9. '```' → logprob: -9.957261085510254
    10. ',' → logprob: -9.957261085510254

Token 1259: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.043761685490608215
    2. 'le' → logprob: -3.793761730194092
    3. 'la' → logprob: -4.668761730194092
    4. 'j' → logprob: -5.668761730194092
    5. ' p' → logprob: -5.918761730194092
    6. ' le' → logprob: -6.043761730194092
    7. ' la' → logprob: -6.418761730194092
    8. 'nombre' → logprob: -7.918761730194092
    9. '#' → logprob: -9.293761253356934
    10. '   ' → logprob: -9.793761253356934

Token 1260: ' chiffres' (ID: 105565)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22834299504756927
    2. '][' → logprob: -1.9783430099487305
    3. '[j' → logprob: -3.9783430099487305
    4. 'print' → logprob: -4.1033430099487305
    5. '
' → logprob: -4.7283430099487305
    6. ']' → logprob: -4.8533430099487305
    7. '    
' → logprob: -5.4783430099487305
    8. ']
' → logprob: -6.3533430099487305
    9. '[' → logprob: -6.4783430099487305
    10. '  ' → logprob: -7.1033430099487305

Token 1261: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.5519714951515198
    2. '   ' → logprob: -0.9269714951515198
    3. 'used' → logprob: -5.426971435546875
    4. 'util' → logprob: -5.551971435546875
    5. '[' → logprob: -5.676971435546875
    6. '_non' → logprob: -5.676971435546875
    7. '[i' → logprob: -5.801971435546875
    8. '       ' → logprob: -5.926971435546875
    9. ' non' → logprob: -6.426971435546875
    10. ' utilisé' → logprob: -6.926971435546875

Token 1262: '-z' (ID: 16826)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020369263365864754
    2. 'zero' → logprob: -4.520369052886963
    3. 'z' → logprob: -5.645369052886963
    4. '-z' → logprob: -6.270369052886963
    5. '-zero' → logprob: -6.770369052886963
    6. ' zéro' → logprob: -7.020369052886963
    7. '   ' → logprob: -7.145369052886963
    8. 'zeros' → logprob: -7.895369052886963
    9. 'zer' → logprob: -8.770369529724121
    10. '_zero' → logprob: -9.020369529724121

Token 1263: 'éro' (ID: 28155)
  Prédit: 'éro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éro' → logprob: -0.06707090139389038
    2. 'ero' → logprob: -2.817070960998535
    3. 'ro' → logprob: -6.192070960998535
    4. 'éros' → logprob: -7.067070960998535
    5. '```' → logprob: -7.692070960998535
    6. '{
' → logprob: -8.192070960998535
    7. '0' → logprob: -8.567070960998535
    8. '
' → logprob: -8.942070960998535
    9. '{' → logprob: -9.067070960998535
    10. '#' → logprob: -9.067070960998535

Token 1264: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2526146471500397
    2. '   ' → logprob: -1.5026146173477173
    3. ' print' → logprob: -8.627614974975586
    4. '(print' → logprob: -9.002614974975586
    5. '```' → logprob: -9.502614974975586
    6. ')' → logprob: -9.752614974975586
    7. ',' → logprob: -10.127614974975586
    8. ' =' → logprob: -10.252614974975586
    9. '
' → logprob: -10.377614974975586
    10. 'Dp' → logprob: -10.377614974975586

Token 1265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3092620074748993
    2. 'print' → logprob: -1.4342620372772217
    3. ' print' → logprob: -3.8092620372772217
    4. '```' → logprob: -5.809261798858643
    5. '    ' → logprob: -6.559261798858643
    6. '(print' → logprob: -8.3092622756958
    7. 'Dp' → logprob: -8.5592622756958
    8. '       ' → logprob: -9.0592622756958
    9. '[' → logprob: -9.4342622756958
    10. '(' → logprob: -9.5592622756958

Token 1266: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.25
    4. 'result' → logprob: -21.75
    5. '```' → logprob: -24.375
    6. '	print' → logprob: -24.75
    7. 'Print' → logprob: -25.625
    8. '(print' → logprob: -25.875
    9. '_print' → logprob: -26.0
    10. 'printf' → logprob: -26.25

Token 1267: '(sum' (ID: 45528)
  Prédit: '(D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -7.612634362885728e-05
    2. 'Dp' → logprob: -10.125076293945312
    3. '(' → logprob: -10.250076293945312
    4. 'D' → logprob: -15.125076293945312
    5. '(
' → logprob: -15.500076293945312
    6. '((' → logprob: -16.750076293945312
    7. '(dp' → logprob: -16.875076293945312
    8. 'DP' → logprob: -18.250076293945312
    9. ' (' → logprob: -19.000076293945312
    10. '(sum' → logprob: -19.500076293945312

Token 1268: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -6.32523515378125e-05
    2. '([' → logprob: -10.375062942504883
    3. 'Dp' → logprob: -10.500062942504883
    4. '(' → logprob: -12.375062942504883
    5. '((' → logprob: -16.000062942504883
    6. '(
' → logprob: -16.625062942504883
    7. '(dp' → logprob: -16.875062942504883
    8. '[' → logprob: -18.375062942504883
    9. ' (' → logprob: -18.875062942504883
    10. '[D' → logprob: -19.000062942504883

Token 1269: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.372294698550832e-06
    2. 'Dp' → logprob: -11.625009536743164
    3. '[p' → logprob: -15.000009536743164
    4. ' p' → logprob: -17.125009536743164
    5. '[i' → logprob: -18.250009536743164
    6. '[' → logprob: -18.750009536743164
    7. '_p' → logprob: -19.125009536743164
    8. 'Tp' → logprob: -19.250009536743164
    9. '[n' → logprob: -19.375009536743164
    10. '$p' → logprob: -19.625009536743164

Token 1270: '[-' (ID: 17503)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00018041854491457343
    2. '[-' → logprob: -9.6251802444458
    3. '[' → logprob: -9.8751802444458
    4. '[len' → logprob: -9.8751802444458
    5. '[n' → logprob: -11.5001802444458
    6. '[i' → logprob: -14.3751802444458
    7. ')[' → logprob: -15.3751802444458
    8. ' [' → logprob: -15.7501802444458
    9. '[key' → logprob: -16.500181198120117
    10. '[int' → logprob: -16.500181198120117

Token 1271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '[' → logprob: -12.000011444091797
    3. '][' → logprob: -12.625011444091797
    4. 'p' → logprob: -14.375011444091797
    5. '```' → logprob: -15.000011444091797
    6. '   ' → logprob: -15.625011444091797
    7. '-' → logprob: -15.750011444091797
    8. ' ' → logprob: -15.937511444091797
    9. '``' → logprob: -16.062511444091797
    10. '(' → logprob: -16.062511444091797

Token 1272: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007791309617459774
    2. '[p' → logprob: -7.750779151916504
    3. '][-' → logprob: -8.125779151916504
    4. '[' → logprob: -10.750779151916504
    5. ']' → logprob: -11.375779151916504
    6. ' ][' → logprob: -12.000779151916504
    7. '[-' → logprob: -12.375779151916504
    8. 'p' → logprob: -12.500779151916504
    9. '   ' → logprob: -13.625779151916504
    10. '])' → logprob: -14.500779151916504

Token 1273: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.9361264946837764e-07
    2. '[p' → logprob: -16.625
    3. ' p' → logprob: -19.75
    4. '<p' → logprob: -20.75
    5. ')p' → logprob: -22.375
    6. '   ' → logprob: -23.25
    7. '
' → logprob: -23.5
    8. '(p' → logprob: -23.625
    9. '{' → logprob: -23.875
    10. ''p' → logprob: -24.25

Token 1274: ']))' (ID: 20259)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03710241988301277
    2. ']))' → logprob: -3.412102460861206
    3. '])' → logprob: -5.912102222442627
    4. '][:' → logprob: -7.287102222442627
    5. ']' → logprob: -10.537102699279785
    6. ']))
' → logprob: -11.537102699279785
    7. '])[' → logprob: -12.162102699279785
    8. '])+' → logprob: -12.412102699279785
    9. '[' → logprob: -12.537102699279785
    10. '])))' → logprob: -12.912102699279785


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1272
Tokens correctement prédits (1ère position, stricte): 374
Tokens correctement prédits (1ère position, avec adaptation): 381
Tokens correctement prédits (top 10): 726
Précision stricte (1ère position): 29.40%
Précision adaptée (1ère position): 29.95%
Précision (top 10): 57.08%
================================================================================
