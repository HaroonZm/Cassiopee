================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    N = int(input())
    S = input()
    dp = []
    for _ in range(N+1):
        dp.append([0]*(N+1))
    res = 0
    i = N-1
    while i >= 0:
        ch = S[i]
        # style fonctionnel pour la boucle intérieure
        def process_j(j):
            nonlocal res
            if ch == S[j]:
                dp[i][j] = dp[i+1][j+1] + 1
            else:
                pass
            res = max(res, min(dp[i][j], j-i))
        for j in range(N-1, i-1, -1):
            process_j(j)
        i -= 1
    print(res)
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.741634726524353
    2. ' =' → logprob: -0.741634726524353
    3. ' ' → logprob: -3.9916348457336426
    4. '_' → logprob: -4.116634845733643
    5. ',' → logprob: -5.741634845733643
    6. '   ' → logprob: -5.991634845733643
    7. '  ' → logprob: -6.241634845733643
    8. '.' → logprob: -6.491634845733643
    9. ')' → logprob: -6.616634845733643
    10. '    ' → logprob: -7.991634845733643

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0870286300778389
    2. ' ' → logprob: -2.962028741836548
    3. 'int' → logprob: -3.587028741836548
    4. '10' → logprob: -5.712028503417969
    5. ' input' → logprob: -8.462028503417969
    6. '5' → logprob: -8.962028503417969
    7. '20' → logprob: -9.212028503417969
    8. '0' → logprob: -9.462028503417969
    9. 'input' → logprob: -10.212028503417969
    10. '40' → logprob: -11.337028503417969

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009632955305278301
    2. '(input' → logprob: -4.7596330642700195
    3. '('' → logprob: -7.1346330642700195
    4. ' (' → logprob: -9.75963306427002
    5. '()' → logprob: -9.75963306427002
    6. 'input' → logprob: -10.63463306427002
    7. '("' → logprob: -10.88463306427002
    8. '(N' → logprob: -11.13463306427002
    9. ''' → logprob: -11.38463306427002
    10. '(
' → logprob: -11.63463306427002

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13632121682167053
    2. '()' → logprob: -2.3863213062286377
    3. '())' → logprob: -4.011321067810059
    4. ')' → logprob: -4.261321067810059
    5. '('' → logprob: -6.886321067810059
    6. '(""))' → logprob: -7.386321067810059
    7. '(
' → logprob: -8.011321067810059
    8. '()))' → logprob: -8.011321067810059
    9. '("("' → logprob: -8.511321067810059
    10. '))' → logprob: -8.511321067810059

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10952894389629364
    2. 'for' → logprob: -3.7345290184020996
    3. '    
' → logprob: -4.2345290184021
    4. '\' → logprob: -4.4845290184021
    5. '\n' → logprob: -4.6095290184021
    6. '```' → logprob: -4.6095290184021
    7. ' for' → logprob: -4.7345290184021
    8. '`' → logprob: -5.1095290184021
    9. ')' → logprob: -5.3595290184021
    10. 'if' → logprob: -6.1095290184021

Token 10: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7490378618240356
    2. 'for' → logprob: -1.7490378618240356
    3. 'i' → logprob: -1.9990378618240356
    4. ' for' → logprob: -2.624037742614746
    5. 'if' → logprob: -2.999037742614746
    6. 's' → logprob: -3.249037742614746
    7. ' ' → logprob: -3.374037742614746
    8. 'n' → logprob: -3.374037742614746
    9. '```' → logprob: -3.374037742614746
    10. ''' → logprob: -3.499037742614746

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056947316974401474
    2. '=' → logprob: -3.5569472312927246
    3. '.' → logprob: -4.306947231292725
    4. ' ' → logprob: -4.681947231292725
    5. '[' → logprob: -6.056947231292725
    6. '_' → logprob: -7.181947231292725
    7. '=input' → logprob: -9.056947708129883
    8. '[i' → logprob: -9.181947708129883
    9. '   ' → logprob: -9.306947708129883
    10. ')' → logprob: -9.306947708129883

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08913183957338333
    2. 'input' → logprob: -2.4641318321228027
    3. ' ' → logprob: -9.589132308959961
    4. ' []' → logprob: -10.839132308959961
    5. '(input' → logprob: -11.089132308959961
    6. '   ' → logprob: -11.089132308959961
    7. '=input' → logprob: -11.089132308959961
    8. '"' → logprob: -11.339132308959961
    9. '[input' → logprob: -11.589132308959961
    10. ' "' → logprob: -12.089132308959961

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008359606377780437
    2. '()' → logprob: -4.883359432220459
    3. '('' → logprob: -8.508359909057617
    4. ')' → logprob: -9.383359909057617
    5. ''' → logprob: -9.508359909057617
    6. ' (' → logprob: -9.633359909057617
    7. '"' → logprob: -9.633359909057617
    8. '(
' → logprob: -10.133359909057617
    9. '```' → logprob: -10.258359909057617
    10. '`' → logprob: -10.508359909057617

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8396193385124207
    2. ' ' → logprob: -0.9646193385124207
    3. '
' → logprob: -3.5896193981170654
    4. ':' → logprob: -3.8396193981170654
    5. '    
' → logprob: -4.089619159698486
    6. ')' → logprob: -4.089619159698486
    7. ' 
' → logprob: -4.464619159698486
    8. '  
' → logprob: -4.464619159698486
    9. '<|end|>' → logprob: -4.714619159698486
    10. 'for' → logprob: -4.839619159698486

Token 15: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4025830328464508
    2. 'i' → logprob: -2.527583122253418
    3. 'c' → logprob: -3.277583122253418
    4. ' ' → logprob: -3.402583122253418
    5. 'd' → logprob: -3.652583122253418
    6. 'for' → logprob: -3.652583122253418
    7. '_' → logprob: -3.777583122253418
    8. ')' → logprob: -4.027583122253418
    9. ''' → logprob: -4.777583122253418
    10. ' for' → logprob: -4.902583122253418

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08233921974897385
    2. ' =' → logprob: -2.582339286804199
    3. '=' → logprob: -6.457339286804199
    4. ' ' → logprob: -6.582339286804199
    5. '_' → logprob: -8.0823392868042
    6. ' [' → logprob: -9.9573392868042
    7. '  ' → logprob: -10.7073392868042
    8. '   ' → logprob: -10.8323392868042
    9. '[]' → logprob: -10.9573392868042
    10. '[i' → logprob: -11.4573392868042

Token 17: ' []
' (ID: 8911)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.38122549653053284
    2. ' [' → logprob: -1.3812254667282104
    3. '[[' → logprob: -3.2562255859375
    4. '[' → logprob: -3.6312255859375
    5. ' [[[' → logprob: -7.8812255859375
    6. ' [{}' → logprob: -8.6312255859375
    7. '[-' → logprob: -10.6312255859375
    8. ' [[]' → logprob: -10.7562255859375
    9. ' [-' → logprob: -11.0062255859375
    10. '[{' → logprob: -11.1312255859375

Token 18: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06925058364868164
    2. '(' → logprob: -2.8192505836486816
    3. '_' → logprob: -5.819250583648682
    4. '   ' → logprob: -6.694250583648682
    5. '=' → logprob: -7.194250583648682
    6. ' =' → logprob: -7.694250583648682
    7. ' ' → logprob: -8.194250106811523
    8. ' for' → logprob: -8.694250106811523
    9. ' (' → logprob: -8.819250106811523
    10. 'for' → logprob: -8.819250106811523

Token 19: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003214665222913027
    2. ' [' → logprob: -6.5032148361206055
    3. '   ' → logprob: -7.3782148361206055
    4. ' ' → logprob: -8.378214836120605
    5. '_' → logprob: -8.378214836120605
    6. '\t' → logprob: -8.628214836120605
    7. ' for' → logprob: -9.378214836120605
    8. '[n' → logprob: -9.628214836120605
    9. '\[' → logprob: -9.753214836120605
    10. '\' → logprob: -9.878214836120605

Token 20: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03821808844804764
    2. ' _' → logprob: -4.038218021392822
    3. ' ' → logprob: -4.788218021392822
    4. '_' → logprob: -5.163218021392822
    5. 'i' → logprob: -5.163218021392822
    6. ' ‌' → logprob: -10.78821849822998
    7. ' ' → logprob: -11.03821849822998
    8. ' range' → logprob: -11.16321849822998
    9. ' ▁' → logprob: -11.91321849822998
    10. '	i' → logprob: -12.03821849822998

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009927613660693169
    2. ' i' → logprob: -5.134927749633789
    3. ' ' → logprob: -6.384927749633789
    4. 'i' → logprob: -6.509927749633789
    5. 'in' → logprob: -7.259927749633789
    6. '  ' → logprob: -10.759927749633789
    7. 'range' → logprob: -11.009927749633789
    8. ' _' → logprob: -11.259927749633789
    9. '   ' → logprob: -11.384927749633789
    10. 'n' → logprob: -11.384927749633789

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000627610192168504
    2. ' range' → logprob: -7.375627517700195
    3. 'ran' → logprob: -14.875627517700195
    4. '(range' → logprob: -16.000627517700195
    5. 'rang' → logprob: -16.000627517700195
    6. ' ' → logprob: -16.500627517700195
    7. '```' → logprob: -16.500627517700195
    8. 'r' → logprob: -16.625627517700195
    9. 'ange' → logprob: -16.750627517700195
    10. 'ra' → logprob: -16.875627517700195

Token 23: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22703668475151062
    2. '(N' → logprob: -1.727036714553833
    3. ' range' → logprob: -4.227036476135254
    4. '(range' → logprob: -4.977036476135254
    5. ' (' → logprob: -6.477036476135254
    6. ' N' → logprob: -6.727036476135254
    7. 'range' → logprob: -7.477036476135254
    8. '(n' → logprob: -8.352036476135254
    9. 'N' → logprob: -8.477036476135254
    10. '(
' → logprob: -10.227036476135254

Token 24: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10069496184587479
    2. ')' → logprob: -2.7256948947906494
    3. '+' → logprob: -3.6006948947906494
    4. '):
' → logprob: -6.9756951332092285
    5. ':' → logprob: -7.1006951332092285
    6. ' +' → logprob: -7.3506951332092285
    7. ' ):' → logprob: -7.9756951332092285
    8. '   ' → logprob: -9.10069465637207
    9. ' )' → logprob: -9.60069465637207
    10. ' ' → logprob: -11.10069465637207

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030400342075154185
    2. '2' → logprob: -8.625304222106934
    3. ' ' → logprob: -9.000304222106934
    4. '3' → logprob: -14.750304222106934
    5. '5' → logprob: -15.875304222106934
    6. '   ' → logprob: -16.375303268432617
    7. '  ' → logprob: -16.437803268432617
    8. '10' → logprob: -16.750303268432617
    9. '+' → logprob: -16.812803268432617
    10. 'N' → logprob: -16.937803268432617

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008208861574530602
    2. ':' → logprob: -5.258208751678467
    3. ')' → logprob: -6.133208751678467
    4. '):
' → logprob: -7.633208751678467
    5. ',' → logprob: -8.883209228515625
    6. ' ):' → logprob: -9.008209228515625
    7. ']:' → logprob: -10.883209228515625
    8. '   ' → logprob: -11.133209228515625
    9. '):
' → logprob: -12.383209228515625
    10. ' ' → logprob: -12.383209228515625

Token 27: '       ' (ID: 309)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5261260867118835
    2. '[' → logprob: -0.9011260867118835
    3. '    ' → logprob: -6.526125907897949
    4. ' ' → logprob: -7.401125907897949
    5. ' []' → logprob: -7.651125907897949
    6. ' dp' → logprob: -9.15112590789795
    7. '   ' → logprob: -9.27612590789795
    8. 'dp' → logprob: -9.52612590789795
    9. '0' → logprob: -9.65112590789795
    10. '[]' → logprob: -10.15112590789795

Token 28: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6743229627609253
    2. 'dp' (adapté à ' dp') → logprob: -0.9243229627609253
    3. '[' → logprob: -2.549323081970215
    4. ' [' → logprob: -4.174323081970215
    5. '   ' → logprob: -9.049323081970215
    6. '	dp' → logprob: -10.424323081970215
    7. '0' → logprob: -11.049323081970215
    8. ' ' → logprob: -11.799323081970215
    9. '_dp' → logprob: -12.674323081970215
    10. '(dp' → logprob: -13.174323081970215

Token 29: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20146654546260834
    2. '.' → logprob: -1.7014665603637695
    3. ' .' → logprob: -10.32646656036377
    4. '.extend' → logprob: -11.95146656036377
    5. '.app' → logprob: -12.32646656036377
    6. '.ap' → logprob: -12.32646656036377
    7. 'append' → logprob: -13.70146656036377
    8. '=' → logprob: -13.82646656036377
    9. '.=' → logprob: -13.82646656036377
    10. ' ' → logprob: -14.95146656036377

Token 30: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0006028342177160084
    2. '(' → logprob: -8.375602722167969
    3. '({' → logprob: -8.625602722167969
    4. '([-' → logprob: -9.000602722167969
    5. '([]' → logprob: -10.250602722167969
    6. '[' → logprob: -11.250602722167969
    7. '([[' → logprob: -11.625602722167969
    8. '(['' → logprob: -12.125602722167969
    9. '((' → logprob: -13.500602722167969
    10. '(False' → logprob: -13.750602722167969

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5286186933517456
    2. 'False' → logprob: -0.9036186933517456
    3. '[' → logprob: -6.278618812561035
    4. 'float' → logprob: -6.653618812561035
    5. ' False' → logprob: -7.153618812561035
    6. '-' → logprob: -7.403618812561035
    7. ' ' → logprob: -7.528618812561035
    8. '100' → logprob: -10.028618812561035
    9. ' [' → logprob: -10.153618812561035
    10. '(False' → logprob: -10.278618812561035

Token 32: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0420171283185482
    2. ']*(' → logprob: -3.7920172214508057
    3. ']*' → logprob: -4.167016983032227
    4. ' for' → logprob: -6.667016983032227
    5. ' ]' → logprob: -6.792016983032227
    6. ',' → logprob: -7.292016983032227
    7. 'for' → logprob: -11.917016983032227
    8. ']+' → logprob: -12.167016983032227
    9. '])' → logprob: -12.542016983032227
    10. ' ,' → logprob: -13.542016983032227

Token 33: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4021129012107849
    2. '3' → logprob: -2.4021129608154297
    3. '4' → logprob: -3.0271129608154297
    4. '11' → logprob: -3.1521129608154297
    5. '10' → logprob: -3.5271129608154297
    6. '7' → logprob: -3.7771129608154297
    7. '2' → logprob: -3.9021129608154297
    8. '5' → logprob: -4.02711296081543
    9. '27' → logprob: -4.40211296081543
    10. '6' → logprob: -5.02711296081543

Token 34: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.107425062713446e-06
    2. ' +' → logprob: -11.875006675720215
    3. '+
' → logprob: -16.37500762939453
    4. '*' → logprob: -18.12500762939453
    5. '＋' → logprob: -18.50000762939453
    6. '```' → logprob: -18.75000762939453
    7. '1' → logprob: -19.31250762939453
    8. '2' → logprob: -19.37500762939453
    9. '-' → logprob: -19.56250762939453
    10. 'plus' → logprob: -19.87500762939453

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. '2' → logprob: -8.875158309936523
    3. ' ' → logprob: -11.000158309936523
    4. '１' → logprob: -15.250158309936523
    5. ')' → logprob: -15.437658309936523
    6. '   ' → logprob: -15.750158309936523
    7. '+' → logprob: -15.937658309936523
    8. '```' → logprob: -16.125158309936523
    9. '۱' → logprob: -16.250158309936523
    10. '  ' → logprob: -16.375158309936523

Token 36: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759616494178772
    2. ')' → logprob: -0.8259616494178772
    3. ')))' → logprob: -11.70096206665039
    4. ')
' → logprob: -12.20096206665039
    5. '))
' → logprob: -12.20096206665039
    6. ' ))' → logprob: -13.07596206665039
    7. ' )' → logprob: -14.45096206665039
    8. '   ' → logprob: -14.82596206665039
    9. '),' → logprob: -15.20096206665039
    10. ''))' → logprob: -16.45096206665039

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6297553181648254
    2. '   ' → logprob: -1.2547552585601807
    3. '<|end|>' → logprob: -2.5047552585601807
    4. ' 
' → logprob: -3.3797552585601807
    5. ' ' → logprob: -3.3797552585601807
    6. '    
' → logprob: -4.62975549697876
    7. '[' → logprob: -4.87975549697876
    8. '  
' → logprob: -5.87975549697876
    9. '\' → logprob: -6.12975549697876
    10. '' → logprob: -6.12975549697876

Token 38: ' res' (ID: 694)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.2310844659805298
    2. '\' → logprob: -1.6060844659805298
    3. '
' → logprob: -1.9810844659805298
    4. '   ' → logprob: -2.2310843467712402
    5. '\n' → logprob: -2.3560843467712402
    6. ' ' → logprob: -2.7310843467712402
    7. '    
' → logprob: -3.1060843467712402
    8. '<|end|>' → logprob: -3.9810843467712402
    9. '  
' → logprob: -4.98108434677124
    10. '#' → logprob: -5.35608434677124

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07766520977020264
    2. '[' → logprob: -2.827665328979492
    3. ' ' → logprob: -4.452665328979492
    4. '=' → logprob: -6.077665328979492
    5. ' +=' → logprob: -7.952665328979492
    6. '  ' → logprob: -8.202665328979492
    7. '[:]' → logprob: -8.202665328979492
    8. '[]' → logprob: -8.452665328979492
    9. '   ' → logprob: -9.077665328979492
    10. '.' → logprob: -9.202665328979492

Token 40: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5913913249969482
    2. '0' → logprob: -0.8413913249969482
    3. ' N' → logprob: -4.716391563415527
    4. ' float' → logprob: -6.341391563415527
    5. ' max' → logprob: -6.591391563415527
    6. '"' → logprob: -7.841391563415527
    7. 'N' → logprob: -7.841391563415527
    8. 'float' → logprob: -7.966391563415527
    9. ' dp' → logprob: -8.216391563415527
    10. 'max' → logprob: -8.216391563415527

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011385081335902214
    2. 'N' → logprob: -5.011384963989258
    3. '1' → logprob: -6.511384963989258
    4. 'max' → logprob: -7.011384963989258
    5. 'float' → logprob: -7.136384963989258
    6. 'dp' → logprob: -7.261384963989258
    7. '-' → logprob: -8.511384963989258
    8. ' ' → logprob: -8.761384963989258
    9. '[' → logprob: -9.261384963989258
    10. 'S' → logprob: -9.636384963989258

Token 42: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28303155303001404
    2. '   ' → logprob: -2.158031463623047
    3. ' for' → logprob: -3.033031463623047
    4. '\n' → logprob: -3.158031463623047
    5. ' ' → logprob: -4.533031463623047
    6. 'for' → logprob: -4.658031463623047
    7. ' 
' → logprob: -5.033031463623047
    8. '    
' → logprob: -5.533031463623047
    9. '' → logprob: -5.908031463623047
    10. '<|end|>' → logprob: -6.033031463623047

Token 43: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5297002792358398
    2. ' for' → logprob: -1.4047002792358398
    3. '   ' → logprob: -2.27970027923584
    4. ' 
' → logprob: -4.02970027923584
    5. 'for' → logprob: -4.15470027923584
    6. '\n' → logprob: -4.27970027923584
    7. ' ' → logprob: -5.02970027923584
    8. '	for' → logprob: -5.90470027923584
    9. '<|end|>' → logprob: -6.15470027923584
    10. '    
' → logprob: -6.27970027923584

Token 44: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6933692693710327
    2. 'for' → logprob: -0.6933692693710327
    3. '   ' → logprob: -9.318368911743164
    4. '```' → logprob: -9.943368911743164
    5. '
' → logprob: -10.193368911743164
    6. ' ' → logprob: -10.818368911743164
    7. '\n' → logprob: -11.068368911743164
    8. '	for' → logprob: -12.568368911743164
    9. ' 
' → logprob: -13.193368911743164
    10. '' → logprob: -13.943368911743164

Token 45: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013268934562802315
    2. '=' → logprob: -5.013268947601318
    3. ' ' → logprob: -5.888268947601318
    4. ' =' → logprob: -6.513268947601318
    5. ' n' → logprob: -7.138268947601318
    6. 'f' → logprob: -7.263268947601318
    7. ',' → logprob: -8.38826847076416
    8. '+' → logprob: -8.38826847076416
    9. 's' → logprob: -9.01326847076416
    10. 'nd' → logprob: -9.38826847076416

Token 46: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18681055307388306
    2. ' ' → logprob: -1.9368104934692383
    3. '1' → logprob: -4.061810493469238
    4. 'N' → logprob: -5.186810493469238
    5. ' N' → logprob: -5.686810493469238
    6. '  ' → logprob: -11.311810493469238
    7. '2' → logprob: -11.311810493469238
    8. '   ' → logprob: -12.686810493469238
    9. 's' → logprob: -12.936810493469238
    10. '-' → logprob: -13.936810493469238

Token 47: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.23244327306747437
    2. ' -' → logprob: -1.8574433326721191
    3. ' ' → logprob: -2.982443332672119
    4. ')' → logprob: -8.607442855834961
    5. '```' → logprob: -9.232442855834961
    6. '<|end|>' → logprob: -9.357442855834961
    7. '>' → logprob: -9.857442855834961
    8. '  ' → logprob: -9.982442855834961
    9. '0' → logprob: -10.482442855834961
    10. ' ```' → logprob: -11.232442855834961

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00034023032640106976
    2. '2' → logprob: -8.250340461730957
    3. ' ' → logprob: -9.500340461730957
    4. '```' → logprob: -14.625340461730957
    5. '6' → logprob: -14.687840461730957
    6. '   ' → logprob: -14.750340461730957
    7. '3' → logprob: -15.125340461730957
    8. '`' → logprob: -15.500340461730957
    9. 'for' → logprob: -15.750340461730957
    10. '-' → logprob: -15.812840461730957

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008292826823890209
    2. ' ' → logprob: -7.625829219818115
    3. 'i' → logprob: -8.000829696655273
    4. '  ' → logprob: -12.875829696655273
    5. '	i' → logprob: -14.125829696655273
    6. '0' → logprob: -14.750829696655273
    7. '<|end|>' → logprob: -14.750829696655273
    8. '    ' → logprob: -15.000829696655273
    9. ' ' → logprob: -15.000829696655273
    10. '   ' → logprob: -15.500829696655273

Token 53: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4326331615447998
    2. '>=' → logprob: -1.0576331615447998
    3. '>' → logprob: -6.182633399963379
    4. ' >' → logprob: -6.307633399963379
    5. ' ' → logprob: -10.932633399963379
    6. '-' → logprob: -12.307633399963379
    7. '+' → logprob: -12.682633399963379
    8. ')>=' → logprob: -13.307633399963379
    9. '[' → logprob: -13.432633399963379
    10. '≥' → logprob: -13.432633399963379

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000920869642868638
    2. ' ' → logprob: -7.00092077255249
    3. '1' → logprob: -11.625921249389648
    4. '   ' → logprob: -15.250921249389648
    5. '2' → logprob: -16.93842124938965
    6. 'i' → logprob: -17.31342124938965
    7. '```' → logprob: -17.37592124938965
    8. '  ' → logprob: -18.43842124938965
    9. ' ' → logprob: -18.43842124938965
    10. '[' → logprob: -18.68842124938965

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.250041007995605
    3. '1' → logprob: -12.125041007995605
    4. '   ' → logprob: -16.187541961669922
    5. '2' → logprob: -17.125041961669922
    6. '۰' → logprob: -18.500041961669922
    7. '00' → logprob: -18.875041961669922
    8. '```' → logprob: -19.062541961669922
    9. '  ' → logprob: -19.187541961669922
    10. '=' → logprob: -19.250041961669922

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006705015548504889
    2. ':
' → logprob: -8.000670433044434
    3. ' and' → logprob: -8.375670433044434
    4. ' :' → logprob: -9.375670433044434
    5. '   ' → logprob: -11.500670433044434
    6. 'and' → logprob: -12.250670433044434
    7. '):' → logprob: -13.500670433044434
    8. ',' → logprob: -14.500670433044434
    9. ':**' → logprob: -14.875670433044434
    10. '():' → logprob: -15.125670433044434

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1438971310853958
    2. '    ' → logprob: -2.39389705657959
    3. '   ' → logprob: -3.76889705657959
    4. ' if' → logprob: -4.64389705657959
    5. ' ' → logprob: -5.39389705657959
    6. 'if' → logprob: -6.39389705657959
    7. 'j' → logprob: -7.39389705657959
    8. ' j' → logprob: -7.89389705657959
    9. '	   ' → logprob: -7.89389705657959
    10. '```' → logprob: -7.89389705657959

Token 58: ' ch' (ID: 549)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.067754365503788
    2. ' j' → logprob: -3.5677542686462402
    3. 'if' → logprob: -4.06775426864624
    4. ' if' → logprob: -4.81775426864624
    5. '   ' → logprob: -5.44275426864624
    6. '       ' → logprob: -6.06775426864624
    7. 'i' → logprob: -6.56775426864624
    8. '    ' → logprob: -6.81775426864624
    9. 'for' → logprob: -7.44275426864624
    10. 'dp' → logprob: -7.56775426864624

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015063728205859661
    2. '=' → logprob: -4.265063762664795
    3. ' ' → logprob: -7.140063762664795
    4. '   ' → logprob: -10.390063285827637
    5. 'a' → logprob: -11.390063285827637
    6. '  ' → logprob: -11.640063285827637
    7. '=S' → logprob: -11.765063285827637
    8. 's' → logprob: -12.015063285827637
    9. ',' → logprob: -12.140063285827637
    10. ' ==' → logprob: -12.265063285827637

Token 60: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.11365131288766861
    2. 'S' → logprob: -2.2386512756347656
    3. ' ' → logprob: -7.863651275634766
    4. ' '' → logprob: -8.113651275634766
    5. ''S' → logprob: -9.988651275634766
    6. ''' → logprob: -10.238651275634766
    7. ' ' → logprob: -10.738651275634766
    8. 's' → logprob: -11.488651275634766
    9. '   ' → logprob: -11.738651275634766
    10. '  ' → logprob: -12.488651275634766

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00039254239527508616
    2. '[' → logprob: -7.875392436981201
    3. ' [' → logprob: -11.62539291381836
    4. '[I' → logprob: -14.37539291381836
    5. '[j' → logprob: -14.50039291381836
    6. '[S' → logprob: -15.00039291381836
    7. '[]' → logprob: -15.25039291381836
    8. '[ch' → logprob: -15.25039291381836
    9. '```' → logprob: -15.50039291381836
    10. '[s' → logprob: -15.62539291381836

Token 62: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8087073564529419
    2. '])' → logprob: -0.8087073564529419
    3. '])
' → logprob: -2.5587072372436523
    4. ']
' → logprob: -3.5587072372436523
    5. ')' → logprob: -6.933707237243652
    6. ')
' → logprob: -7.808707237243652
    7. ']==' → logprob: -7.933707237243652
    8. ':' → logprob: -8.308707237243652
    9. ' ])' → logprob: -8.558707237243652
    10. ')]' → logprob: -8.808707237243652

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4708302319049835
    2. '<|end|>' → logprob: -1.2208302021026611
    3. ' ' → logprob: -3.220830202102661
    4. '        ' → logprob: -4.22083044052124
    5. '
' → logprob: -5.34583044052124
    6. '    ' → logprob: -5.59583044052124
    7. '<|end|>' → logprob: -5.59583044052124
    8. '   ' → logprob: -5.59583044052124
    9. ' if' → logprob: -5.97083044052124
    10. 'if' → logprob: -6.72083044052124

Token 64: ' #' (ID: 1069)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05647335574030876
    2. 'if' → logprob: -4.181473255157471
    3. ' j' → logprob: -4.806473255157471
    4. '       ' → logprob: -4.931473255157471
    5. 'for' → logprob: -4.931473255157471
    6. '   ' → logprob: -5.056473255157471
    7. 'count' → logprob: -5.931473255157471
    8. 'dp' → logprob: -6.306473255157471
    9. ' if' → logprob: -6.681473255157471
    10. 'l' → logprob: -7.056473255157471

Token 65: ' style' (ID: 2713)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7522078156471252
    2. ' for' → logprob: -1.6272077560424805
    3. ' j' → logprob: -1.8772077560424805
    4. 'for' → logprob: -2.0022077560424805
    5. ' if' → logprob: -4.0022077560424805
    6. 'if' → logprob: -4.2522077560424805
    7. '   ' → logprob: -6.0022077560424805
    8. ' dp' → logprob: -6.0022077560424805
    9. 'dp' → logprob: -6.0022077560424805
    10. ' ' → logprob: -7.6272077560424805

Token 66: ' fonction' (ID: 17610)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20458318293094635
    2. '=' → logprob: -1.8295831680297852
    3. 'if' → logprob: -4.329583168029785
    4. ' if' → logprob: -5.829583168029785
    5. 's' → logprob: -6.329583168029785
    6. ':' → logprob: -6.954583168029785
    7. ' ' → logprob: -7.829583168029785
    8. '    ' → logprob: -7.829583168029785
    9. 'for' → logprob: -7.954583168029785
    10. '        ' → logprob: -7.954583168029785

Token 67: 'nel' (ID: 10085)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0200365781784058
    2. '   ' → logprob: -2.1450366973876953
    3. 's' → logprob: -2.3950366973876953
    4. ' =' → logprob: -2.5200366973876953
    5. 'def' → logprob: -2.6450366973876953
    6. ':' → logprob: -3.2700366973876953
    7. 'al' → logprob: -3.3950366973876953
    8. ' ' → logprob: -3.5200366973876953
    9. 'for' → logprob: -3.6450366973876953
    10. ' for' → logprob: -3.6450366973876953

Token 68: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0475224256515503
    2. ' if' → logprob: -1.5475224256515503
    3. 'if' → logprob: -2.04752254486084
    4. 'for' → logprob: -2.42252254486084
    5. 'i' → logprob: -2.54752254486084
    6. ' ' → logprob: -3.29752254486084
    7. ' i' → logprob: -3.42252254486084
    8. '    ' → logprob: -4.54752254486084
    9. 'j' → logprob: -4.67252254486084
    10. 's' → logprob: -4.67252254486084

Token 69: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.687591552734375
    2. 'le' → logprob: -2.062591552734375
    3. 'l' → logprob: -2.437591552734375
    4. ' i' → logprob: -2.562591552734375
    5. ' la' → logprob: -2.937591552734375
    6. 'les' → logprob: -2.937591552734375
    7. ' le' → logprob: -3.312591552734375
    8. ' ' → logprob: -3.437591552734375
    9. 'calcul' → logprob: -3.687591552734375
    10. 'r' → logprob: -3.812591552734375

Token 70: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.627333402633667
    2. 'compar' → logprob: -2.502333402633667
    3. 'suite' → logprob: -2.502333402633667
    4. 'while' → logprob: -2.877333402633667
    5. ' comparaison' → logprob: -3.002333402633667
    6. ' suite' → logprob: -3.127333402633667
    7. 'v' → logprob: -3.252333402633667
    8. ' boucle' → logprob: -3.377333402633667
    9. 'pro' → logprob: -3.627333402633667
    10. 's' → logprob: -3.627333402633667

Token 71: ' intérieure' (ID: 135392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49889540672302246
    2. 'j' → logprob: -1.4988954067230225
    3. 'for' → logprob: -2.7488954067230225
    4. ' for' → logprob: -3.1238954067230225
    5. ' j' → logprob: -3.7488954067230225
    6. 'if' → logprob: -4.498895645141602
    7. ' if' → logprob: -5.123895645141602
    8. '   ' → logprob: -5.248895645141602
    9. 'while' → logprob: -5.248895645141602
    10. 'i' → logprob: -6.248895645141602

Token 72: '
' (ID: 198)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9125009775161743
    2. '       ' → logprob: -1.1625009775161743
    3. '   ' → logprob: -1.7875009775161743
    4. ' for' → logprob: -3.0375008583068848
    5. ' j' → logprob: -3.1625008583068848
    6. 'for' → logprob: -4.787500858306885
    7. '```' → logprob: -4.912500858306885
    8. '    ' → logprob: -5.537500858306885
    9. '
' → logprob: -6.537500858306885
    10. ',j' → logprob: -7.037500858306885

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04729291424155235
    2. '<|end|>' → logprob: -3.922292947769165
    3. ' for' → logprob: -5.172292709350586
    4. '   ' → logprob: -5.297292709350586
    5. '        
' → logprob: -5.797292709350586
    6. '
' → logprob: -5.797292709350586
    7. '<|end|>' → logprob: -6.047292709350586
    8. 'j' → logprob: -6.172292709350586
    9. '        ' → logprob: -6.922292709350586
    10. ',' → logprob: -7.172292709350586

Token 74: ' def' (ID: 1056)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4153991639614105
    2. ' j' → logprob: -2.0403990745544434
    3. '       ' → logprob: -2.2903990745544434
    4. ' for' → logprob: -2.5403990745544434
    5. 'for' → logprob: -3.9153990745544434
    6. 'def' (adapté à ' def') → logprob: -6.165399074554443
    7. '   ' → logprob: -6.415399074554443
    8. '    ' → logprob: -6.665399074554443
    9. ' def' → logprob: -6.665399074554443
    10. '```' → logprob: -6.665399074554443

Token 75: ' process' (ID: 2273)
  Prédit: ' inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inner' → logprob: -0.5733711123466492
    2. ' helper' → logprob: -2.698371171951294
    3. ' check' → logprob: -2.823371171951294
    4. ' f' → logprob: -2.948371171951294
    5. ' j' → logprob: -3.198371171951294
    6. ' process' → logprob: -3.573371171951294
    7. ' update' → logprob: -3.823371171951294
    8. 'inner' → logprob: -3.823371171951294
    9. ' compute' → logprob: -3.948371171951294
    10. ' loop' → logprob: -4.073370933532715

Token 76: '_j' (ID: 12021)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0020484323613345623
    2. '(k' → logprob: -7.252048492431641
    3. '(' → logprob: -7.752048492431641
    4. 'j' → logprob: -8.25204849243164
    5. '(i' → logprob: -8.75204849243164
    6. '()' → logprob: -9.12704849243164
    7. '(x' → logprob: -9.37704849243164
    8. ' (' → logprob: -9.50204849243164
    9. '```' → logprob: -10.50204849243164
    10. '(l' → logprob: -10.75204849243164

Token 77: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00044032474397681653
    2. '(' → logprob: -8.75044059753418
    3. '(i' → logprob: -9.25044059753418
    4. ' (' → logprob: -9.75044059753418
    5. '():' → logprob: -10.25044059753418
    6. '   ' → logprob: -10.75044059753418
    7. '       ' → logprob: -11.37544059753418
    8. 'j' → logprob: -11.87544059753418
    9. '(k' → logprob: -11.87544059753418
    10. '(J' → logprob: -11.87544059753418

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018116753781214356
    2. '):
' → logprob: -7.001811504364014
    3. '       ' → logprob: -8.126811981201172
    4. ':' → logprob: -8.501811981201172
    5. '   ' → logprob: -8.751811981201172
    6. ')' → logprob: -9.626811981201172
    7. ' ):' → logprob: -9.626811981201172
    8. '):
' → logprob: -10.376811981201172
    9. ',' → logprob: -11.001811981201172
    10. ' ' → logprob: -11.376811981201172

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9194210171699524
    2. ' ' → logprob: -1.6694209575653076
    3. ' if' → logprob: -1.6694209575653076
    4. ':' → logprob: -2.0444209575653076
    5. '       ' → logprob: -3.0444209575653076
    6. '<|end|>' → logprob: -3.7944209575653076
    7. ' :' → logprob: -5.294421195983887
    8. '   ' → logprob: -5.294421195983887
    9. '        ' → logprob: -5.544421195983887
    10. '<|end|>' → logprob: -6.044421195983887

Token 80: ' non' (ID: 2893)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.032634783536195755
    2. 'if' → logprob: -4.282634735107422
    3. ' non' → logprob: -4.782634735107422
    4. '           ' → logprob: -5.032634735107422
    5. ' return' → logprob: -7.157634735107422
    6. ' ' → logprob: -7.282634735107422
    7. 'non' (adapté à ' non') → logprob: -7.657634735107422
    8. '       ' → logprob: -7.782634735107422
    9. '   ' → logprob: -8.407634735107422
    10. ' dp' → logprob: -8.657634735107422

Token 81: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -5.512236498361744e-07
    2. 'locals' → logprob: -15.250000953674316
    3. ' local' → logprob: -16.375
    4. 'lo' → logprob: -17.0
    5. 'loc' → logprob: -17.0
    6. 'l' → logprob: -17.25
    7. '   ' → logprob: -19.375
    8. '	local' → logprob: -19.625
    9. 'locale' → logprob: -20.25
    10. 'lok' → logprob: -20.375

Token 82: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.18528629839420319
    2. 'res' → logprob: -2.435286283493042
    3. ' dp' → logprob: -2.685286283493042
    4. 'dp' → logprob: -4.810286521911621
    5. ' i' → logprob: -5.810286521911621
    6. ' ch' → logprob: -7.310286521911621
    7. 'i' → logprob: -7.935286521911621
    8. ' j' → logprob: -7.935286521911621
    9. ' ' → logprob: -8.185286521911621
    10. '   ' → logprob: -8.935286521911621

Token 83: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025766834616661072
    2. ',' → logprob: -4.025766849517822
    3. '<|end|>' → logprob: -6.150766849517822
    4. ' if' → logprob: -6.775766849517822
    5. '               ' → logprob: -6.900766849517822
    6. '
' → logprob: -7.400766849517822
    7. ' ' → logprob: -7.525766849517822
    8. '            
' → logprob: -8.025766372680664
    9. '       ' → logprob: -8.150766372680664
    10. '<|end|>' → logprob: -8.275766372680664

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08040828257799149
    2. ' if' → logprob: -3.0804083347320557
    3. ' ' → logprob: -4.580408096313477
    4. '<|end|>' → logprob: -4.955408096313477
    5. '               ' → logprob: -5.205408096313477
    6. '            
' → logprob: -6.080408096313477
    7. 'if' → logprob: -6.330408096313477
    8. '            ' → logprob: -6.580408096313477
    9. ',' → logprob: -7.580408096313477
    10. ' 
' → logprob: -7.955408096313477

Token 85: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12218053638935089
    2. ' if' → logprob: -2.247180461883545
    3. '           ' → logprob: -5.872180461883545
    4. 'res' → logprob: -6.872180461883545
    5. 'dp' → logprob: -6.997180461883545
    6. 'return' → logprob: -7.122180461883545
    7. 'for' → logprob: -7.372180461883545
    8. 'non' → logprob: -7.372180461883545
    9. ' res' → logprob: -7.622180461883545
    10. 'while' → logprob: -8.247180938720703

Token 86: ' ch' (ID: 549)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7617604732513428
    2. ' S' → logprob: -0.8867604732513428
    3. 'j' → logprob: -3.5117604732513428
    4. ' ch' → logprob: -3.5117604732513428
    5. ' i' → logprob: -4.011760711669922
    6. ' dp' → logprob: -4.011760711669922
    7. 'S' → logprob: -4.261760711669922
    8. ' ' → logprob: -4.886760711669922
    9. 'dp' → logprob: -6.761760711669922
    10. 'i' → logprob: -7.511760711669922

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09229589253664017
    2. '==' → logprob: -2.4672958850860596
    3. ' !=' → logprob: -6.342296123504639
    4. ' in' → logprob: -6.842296123504639
    5. '!=' → logprob: -8.59229564666748
    6. ' ' → logprob: -9.21729564666748
    7. '=' → logprob: -9.96729564666748
    8. ' not' → logprob: -10.09229564666748
    9. ' <' → logprob: -11.21729564666748
    10. 'in' → logprob: -11.34229564666748

Token 88: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14999641478061676
    2. ' S' → logprob: -2.399996519088745
    3. ''' → logprob: -3.524996519088745
    4. ''S' → logprob: -4.274996280670166
    5. ' '' → logprob: -5.899996280670166
    6. ' ' → logprob: -7.774996280670166
    7. ' '('' → logprob: -8.149996757507324
    8. '   ' → logprob: -8.399996757507324
    9. '')' → logprob: -8.399996757507324
    10. '  ' → logprob: -8.837496757507324

Token 89: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00688965804874897
    2. 'j' → logprob: -5.131889820098877
    3. '[i' → logprob: -7.631889820098877
    4. '[' → logprob: -8.006889343261719
    5. '[N' → logprob: -9.756889343261719
    6. ' j' → logprob: -10.006889343261719
    7. ' [' → logprob: -11.506889343261719
    8. '   ' → logprob: -12.256889343261719
    9. '```' → logprob: -12.381889343261719
    10. '_j' → logprob: -12.506889343261719

Token 90: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.3597550392150879
    2. ']' → logprob: -1.609755039215088
    3. ']:
' → logprob: -2.734755039215088
    4. '):' → logprob: -4.234755039215088
    5. ']):' → logprob: -4.609755039215088
    6. '):
' → logprob: -5.734755039215088
    7. ']):
' → logprob: -6.109755039215088
    8. '-' → logprob: -6.734755039215088
    9. ')' → logprob: -6.984755039215088
    10. ']:
' → logprob: -7.109755039215088

Token 91: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35804101824760437
    2. ' and' → logprob: -1.6080410480499268
    3. ':' → logprob: -2.3580410480499268
    4. ':
' → logprob: -6.483040809631348
    5. 'and' → logprob: -6.608040809631348
    6. ' :' → logprob: -7.483040809631348
    7. '<|end|>' → logprob: -7.483040809631348
    8. ' ' → logprob: -7.858040809631348
    9. '                ' → logprob: -7.983040809631348
    10. '           ' → logprob: -8.483040809631348

Token 92: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.1745525598526001
    2. 'dp' (adapté à ' dp') → logprob: -1.9245525598526
    3. '                   ' → logprob: -4.9245524406433105
    4. '               ' → logprob: -5.4245524406433105
    5. ' ' → logprob: -6.6745524406433105
    6. '	dp' → logprob: -7.1745524406433105
    7. ' if' → logprob: -9.049552917480469
    8. ' ' → logprob: -9.549552917480469
    9. '                ' → logprob: -9.924552917480469
    10. '   ' → logprob: -10.049552917480469

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000559108448214829
    2. '[j' → logprob: -7.750559329986572
    3. '][' → logprob: -9.500558853149414
    4. '[' → logprob: -10.250558853149414
    5. '[I' → logprob: -11.375558853149414
    6. '```' → logprob: -13.625558853149414
    7. 'i' → logprob: -13.750558853149414
    8. '   ' → logprob: -14.000558853149414
    9. '       ' → logprob: -14.375558853149414
    10. '[N' → logprob: -15.000558853149414

Token 94: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004450889769941568
    2. '+' → logprob: -5.504450798034668
    3. ' ][' → logprob: -8.754450798034668
    4. ']' → logprob: -9.129450798034668
    5. '[j' → logprob: -9.754450798034668
    6. '+j' → logprob: -11.004450798034668
    7. '   ' → logprob: -11.879450798034668
    8. ' +' → logprob: -12.129450798034668
    9. '[' → logprob: -12.254450798034668
    10. ' ' → logprob: -12.379450798034668

Token 95: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.078839502763003e-05
    2. ' j' → logprob: -10.250090599060059
    3. 'i' → logprob: -10.625090599060059
    4. '   ' → logprob: -10.750090599060059
    5. ']' → logprob: -12.750090599060059
    6. '+' → logprob: -13.375090599060059
    7. ' ' → logprob: -13.750090599060059
    8. '           ' → logprob: -14.000090599060059
    9. '    ' → logprob: -14.125090599060059
    10. '1' → logprob: -14.750090599060059

Token 96: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018515352858230472
    2. '+' → logprob: -7.126851558685303
    3. ' ]' → logprob: -7.251851558685303
    4. ']+=' → logprob: -9.001851081848145
    5. ']+' → logprob: -9.501851081848145
    6. ']=' → logprob: -10.001851081848145
    7. '   ' → logprob: -10.126851081848145
    8. ' +' → logprob: -11.251851081848145
    9. '           ' → logprob: -11.876851081848145
    10. '1' → logprob: -12.251851081848145

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4760096073150635
    2. '=' → logprob: -0.9760096073150635
    3. ' +=' → logprob: -6.601009368896484
    4. '+=' → logprob: -7.601009368896484
    5. ' ' → logprob: -10.851009368896484
    6. '+' → logprob: -11.601009368896484
    7. '   ' → logprob: -11.726009368896484
    8. '    ' → logprob: -11.976009368896484
    9. '1' → logprob: -12.351009368896484
    10. '            ' → logprob: -12.726009368896484

Token 98: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4995294511318207
    2. '1' → logprob: -0.9995294809341431
    3. ' dp' → logprob: -4.1245293617248535
    4. ' ' → logprob: -5.1245293617248535
    5. '2' → logprob: -6.7495293617248535
    6. '   ' → logprob: -6.8745293617248535
    7. '0' → logprob: -8.874529838562012
    8. 'max' → logprob: -8.999529838562012
    9. '(dp' → logprob: -8.999529838562012
    10. '  ' → logprob: -9.249529838562012

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004362113773822784
    2. 'i' → logprob: -5.629362106323242
    3. '```' → logprob: -8.129362106323242
    4. '+' → logprob: -8.379362106323242
    5. ' i' → logprob: -9.879362106323242
    6. '[j' → logprob: -10.004362106323242
    7. '   ' → logprob: -10.379362106323242
    8. '(i' → logprob: -10.879362106323242
    9. ' +' → logprob: -11.504362106323242
    10. '][' → logprob: -11.504362106323242

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003039154689759016
    2. ' +' → logprob: -6.253039360046387
    3. '1' → logprob: -7.253039360046387
    4. '[' → logprob: -8.628039360046387
    5. '][' → logprob: -9.628039360046387
    6. ' ' → logprob: -9.628039360046387
    7. '   ' → logprob: -10.128039360046387
    8. '[j' → logprob: -11.003039360046387
    9. '```' → logprob: -11.253039360046387
    10. '[i' → logprob: -12.003039360046387

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.250008583068848
    4. '+' → logprob: -16.875009536743164
    5. '2' → logprob: -17.125009536743164
    6. '```' → logprob: -17.875009536743164
    7. '
' → logprob: -18.625009536743164
    8. '  ' → logprob: -19.250009536743164
    9. '[' → logprob: -20.000009536743164
    10. '    ' → logprob: -20.125009536743164

Token 102: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004849342163652182
    2. '[j' → logprob: -5.879849433898926
    3. '   ' → logprob: -7.629849433898926
    4. '+' → logprob: -7.754849433898926
    5. ' ' → logprob: -7.754849433898926
    6. ' ][' → logprob: -8.504849433898926
    7. 'j' → logprob: -9.129849433898926
    8. '       ' → logprob: -9.879849433898926
    9. '"][' → logprob: -9.879849433898926
    10. '           ' → logprob: -10.004849433898926

Token 103: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9862216504407115e-05
    2. '[j' → logprob: -11.250020027160645
    3. ' j' → logprob: -12.500020027160645
    4. '   ' → logprob: -13.250020027160645
    5. '	j' → logprob: -15.500020027160645
    6. '```' → logprob: -15.750020027160645
    7. ',j' → logprob: -16.000019073486328
    8. '(j' → logprob: -16.125019073486328
    9. '+' → logprob: -16.250019073486328
    10. ' ' → logprob: -16.375019073486328

Token 104: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017033906187862158
    2. '-' → logprob: -6.751703262329102
    3. '1' → logprob: -7.876703262329102
    4. ' +' → logprob: -8.876703262329102
    5. '   ' → logprob: -12.126703262329102
    6. ']+' → logprob: -12.751703262329102
    7. ']' → logprob: -13.376703262329102
    8. '```' → logprob: -13.876703262329102
    9. ' -' → logprob: -14.126703262329102
    10. ' ' → logprob: -14.626703262329102

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4285862057004124e-05
    2. ' ' → logprob: -10.62503433227539
    3. ']' → logprob: -12.37503433227539
    4. '+' → logprob: -12.50003433227539
    5. '   ' → logprob: -13.50003433227539
    6. ']+' → logprob: -15.00003433227539
    7. '```' → logprob: -16.37503433227539
    8. '       ' → logprob: -16.50003433227539
    9. '           ' → logprob: -17.25003433227539
    10. '  ' → logprob: -17.87503433227539

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027148166671395302
    2. ']+' → logprob: -3.6521482467651367
    3. ' +' → logprob: -8.152148246765137
    4. '+' → logprob: -8.152148246765137
    5. ' ]' → logprob: -8.277148246765137
    6. '   ' → logprob: -12.652148246765137
    7. '']' → logprob: -13.402148246765137
    8. '"]' → logprob: -13.527148246765137
    9. '+]' → logprob: -13.652148246765137
    10. ' plus' → logprob: -13.777148246765137

Token 107: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31332096457481384
    2. ' +' → logprob: -1.3133209943771362
    3. '               ' → logprob: -10.063321113586426
    4. ']+' → logprob: -12.438321113586426
    5. '                   ' → logprob: -12.938321113586426
    6. '                ' → logprob: -13.313321113586426
    7. '()+' → logprob: -13.688321113586426
    8. ' ' → logprob: -13.813321113586426
    9. ' plus' → logprob: -13.938321113586426
    10. '1' → logprob: -14.188321113586426

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009357591043226421
    2. ' ' → logprob: -7.1259355545043945
    3. '   ' → logprob: -9.000935554504395
    4. '2' → logprob: -12.250935554504395
    5. '           ' → logprob: -13.875935554504395
    6. '  ' → logprob: -13.875935554504395
    7. '       ' → logprob: -14.875935554504395
    8. '    ' → logprob: -15.500935554504395
    9. '               ' → logprob: -15.500935554504395
    10. ' ' → logprob: -16.12593650817871

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002205828350270167
    2. ' ' → logprob: -8.75022029876709
    3. '   ' → logprob: -9.87522029876709
    4. '2' → logprob: -11.62522029876709
    5. '  ' → logprob: -14.12522029876709
    6. '           ' → logprob: -15.00022029876709
    7. '4' → logprob: -15.62522029876709
    8. '       ' → logprob: -15.75022029876709
    9. '    ' → logprob: -16.500221252441406
    10. '(' → logprob: -17.062721252441406

Token 110: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47625279426574707
    2. '           ' → logprob: -1.351252794265747
    3. '
' → logprob: -2.601252794265747
    4. '       ' → logprob: -4.351252555847168
    5. '<|end|>' → logprob: -4.726252555847168
    6. '                ' → logprob: -4.851252555847168
    7. '            ' → logprob: -5.476252555847168
    8. ' ' → logprob: -6.226252555847168
    9. '\n' → logprob: -6.601252555847168
    10. '        ' → logprob: -6.976252555847168

Token 111: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2488852739334106
    2. '           ' → logprob: -1.2488852739334106
    3. '               ' → logprob: -1.4988852739334106
    4. '
' → logprob: -1.9988852739334106
    5. '<|end|>' → logprob: -2.998885154724121
    6. '   ' → logprob: -5.498885154724121
    7. 'return' → logprob: -6.623885154724121
    8. ' return' → logprob: -6.623885154724121
    9. ')' → logprob: -6.873885154724121
    10. '	' → logprob: -6.998885154724121

Token 112: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4681626856327057
    2. ' else' → logprob: -1.4681626558303833
    3. '       ' → logprob: -2.468162775039673
    4. 'else' (adapté à ' else') → logprob: -2.968162775039673
    5. '               ' → logprob: -5.593162536621094
    6. ' return' → logprob: -7.093162536621094
    7. ' ' → logprob: -7.343162536621094
    8. '   ' → logprob: -7.718162536621094
    9. 'return' → logprob: -7.843162536621094
    10. '            ' → logprob: -8.093162536621094

Token 113: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05495404824614525
    2. ' dp' → logprob: -3.4299540519714355
    3. ':
' → logprob: -4.4299540519714355
    4. ':' → logprob: -5.4299540519714355
    5. '           ' → logprob: -5.6799540519714355
    6. 'dp' → logprob: -7.4299540519714355
    7. ' :
' → logprob: -8.179953575134277
    8. '              ' → logprob: -9.679953575134277
    9. ' =' → logprob: -9.929953575134277
    10. '                ' → logprob: -9.929953575134277

Token 114: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028056619688868523
    2. ' dp' → logprob: -3.6530566215515137
    3. 'dp' → logprob: -6.403056621551514
    4. '           ' → logprob: -9.903056144714355
    5. '	dp' → logprob: -11.028056144714355
    6. '                   ' → logprob: -12.028056144714355
    7. '```' → logprob: -12.153056144714355
    8. '                ' → logprob: -12.528056144714355
    9. ' ' → logprob: -12.778056144714355
    10. '              ' → logprob: -12.903056144714355

Token 115: ' pass' (ID: 1853)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25272613763809204
    2. ' dp' → logprob: -1.5027260780334473
    3. '               ' → logprob: -7.377726078033447
    4. '	dp' → logprob: -9.502726554870605
    5. '           ' → logprob: -10.002726554870605
    6. ' ' → logprob: -10.752726554870605
    7. '                   ' → logprob: -11.252726554870605
    8. '   ' → logprob: -12.377726554870605
    9. '                ' → logprob: -12.752726554870605
    10. '0' → logprob: -13.002726554870605

Token 116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008471788838505745
    2. '           ' → logprob: -5.133471965789795
    3. '<|end|>' → logprob: -7.133471965789795
    4. ' else' → logprob: -7.258471965789795
    5. 'else' → logprob: -8.133471488952637
    6. '   ' → logprob: -8.258471488952637
    7. 'return' → logprob: -8.633471488952637
    8. ' return' → logprob: -9.258471488952637
    9. '               ' → logprob: -9.633471488952637
    10. ' ' → logprob: -10.008471488952637

Token 117: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7018924355506897
    2. 'else' → logprob: -1.451892375946045
    3. '       ' → logprob: -1.826892375946045
    4. ' else' → logprob: -3.201892375946045
    5. '           ' → logprob: -3.701892375946045
    6. ' return' → logprob: -3.826892375946045
    7. 'dp' → logprob: -4.326892375946045
    8. '   ' → logprob: -5.451892375946045
    9. 'elif' → logprob: -6.451892375946045
    10. ' dp' → logprob: -7.326892375946045

Token 118: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06228640303015709
    2. '       ' → logprob: -3.312286376953125
    3. 'else' → logprob: -4.437286376953125
    4. ' return' → logprob: -5.062286376953125
    5. '           ' → logprob: -6.187286376953125
    6. 'res' (adapté à ' res') → logprob: -6.437286376953125
    7. '   ' → logprob: -7.187286376953125
    8. 'j' → logprob: -7.812286376953125
    9. ' else' → logprob: -8.312286376953125
    10. 'i' → logprob: -8.312286376953125

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20014122128486633
    2. ' +=' → logprob: -2.075141191482544
    3. '=' → logprob: -2.950141191482544
    4. '+=' → logprob: -5.700141429901123
    5. '   ' → logprob: -9.325140953063965
    6. ' ' → logprob: -10.700140953063965
    7. '=max' → logprob: -10.950140953063965
    8. ' |=' → logprob: -11.825140953063965
    9. 'max' → logprob: -12.325140953063965
    10. ' max' → logprob: -12.325140953063965

Token 120: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1269291490316391
    2. 'max' → logprob: -2.1269290447235107
    3. '	max' → logprob: -14.50192928314209
    4. '(max' → logprob: -15.00192928314209
    5. '=max' → logprob: -16.876928329467773
    6. ' dp' → logprob: -17.251928329467773
    7. '   ' → logprob: -17.376928329467773
    8. 'dp' → logprob: -17.501928329467773
    9. '[max' → logprob: -17.501928329467773
    10. '            ' → logprob: -18.001928329467773

Token 121: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0005593468667939305
    2. '(' → logprob: -7.500559329986572
    3. ' (' → logprob: -12.00055980682373
    4. 'res' → logprob: -15.50055980682373
    5. ' res' → logprob: -16.875558853149414
    6. ',res' → logprob: -18.500558853149414
    7. '(max' → logprob: -18.625558853149414
    8. '(
' → logprob: -18.625558853149414
    9. '	res' → logprob: -19.125558853149414
    10. ')' → logprob: -20.125558853149414

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038962822407484055
    2. ',res' → logprob: -3.2889628410339355
    3. 'res' → logprob: -7.6639628410339355
    4. ' ,' → logprob: -8.038962364196777
    5. '(res' → logprob: -9.038962364196777
    6. '(' → logprob: -12.538962364196777
    7. '   ' → logprob: -13.163962364196777
    8. ' res' → logprob: -13.288962364196777
    9. ' ' → logprob: -13.538962364196777
    10. ')' → logprob: -14.038962364196777

Token 123: ' min' (ID: 1349)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.693166196346283
    2. ' dp' → logprob: -0.693166196346283
    3. '	dp' → logprob: -11.69316577911377
    4. '           ' → logprob: -11.81816577911377
    5. '               ' → logprob: -13.44316577911377
    6. '(dp' → logprob: -14.69316577911377
    7. ' ' → logprob: -15.44316577911377
    8. '            ' → logprob: -15.56816577911377
    9. '_dp' → logprob: -15.56816577911377
    10. '                   ' → logprob: -15.81816577911377

Token 124: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0067225913517177105
    2. '(i' → logprob: -5.506722450256348
    3. '(' → logprob: -6.131722450256348
    4. '(j' → logprob: -8.381722450256348
    5. ' (' → logprob: -9.131722450256348
    6. ')' → logprob: -9.756722450256348
    7. ')(' → logprob: -10.631722450256348
    8. '(
' → logprob: -11.131722450256348
    9. 'dp' → logprob: -11.256722450256348
    10. '((' → logprob: -12.131722450256348

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '[I' → logprob: -12.625005722045898
    3. '[' → logprob: -14.625005722045898
    4. ')' → logprob: -14.750005722045898
    5. '[j' → logprob: -15.625005722045898
    6. ')[' → logprob: -15.750005722045898
    7. '[int' → logprob: -16.0000057220459
    8. '<|end|>' → logprob: -16.2500057220459
    9. '[N' → logprob: -16.7500057220459
    10. '[ind' → logprob: -17.1250057220459

Token 126: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02469823509454727
    2. '[i' → logprob: -3.899698257446289
    3. '[j' → logprob: -5.524698257446289
    4. '[' → logprob: -9.524698257446289
    5. ' ][' → logprob: -10.399698257446289
    6. ')[' → logprob: -11.149698257446289
    7. ']' → logprob: -11.524698257446289
    8. '[I' → logprob: -12.149698257446289
    9. '}[' → logprob: -12.399698257446289
    10. '   ' → logprob: -12.649698257446289

Token 127: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.024617046117782593
    2. 'i' → logprob: -3.7746169567108154
    3. '[j' → logprob: -7.2746171951293945
    4. '[i' → logprob: -7.5246171951293945
    5. '][' → logprob: -9.399617195129395
    6. '[' → logprob: -11.024617195129395
    7. ' j' → logprob: -11.149617195129395
    8. ')' → logprob: -11.899617195129395
    9. ',j' → logprob: -12.774617195129395
    10. ']' → logprob: -12.899617195129395

Token 128: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05925402045249939
    2. ' ,' → logprob: -2.9342539310455322
    3. ',j' → logprob: -5.684254169464111
    4. ',i' → logprob: -7.059254169464111
    5. ',n' → logprob: -10.684253692626953
    6. ',
' → logprob: -10.934253692626953
    7. '   ' → logprob: -11.684253692626953
    8. '],' → logprob: -11.684253692626953
    9. ',len' → logprob: -11.809253692626953
    10. ' ,
' → logprob: -12.559253692626953

Token 129: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11286841332912445
    2. ' j' → logprob: -2.237868309020996
    3. ' ' → logprob: -11.237868309020996
    4. '   ' → logprob: -11.362868309020996
    5. '    ' → logprob: -11.862868309020996
    6. '	j' → logprob: -12.362868309020996
    7. ' ' → logprob: -13.112868309020996
    8. 'i' → logprob: -13.612868309020996
    9. '  ' → logprob: -13.737868309020996
    10. '(j' → logprob: -14.362868309020996

Token 130: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47473183274269104
    2. '-' → logprob: -0.9747318029403687
    3. '-i' → logprob: -7.349731922149658
    4. '   ' → logprob: -12.4747314453125
    5. ' ' → logprob: -12.4747314453125
    6. ')' → logprob: -12.7247314453125
    7. '-
' → logprob: -14.7247314453125
    8. '−' → logprob: -15.7247314453125
    9. '-(' → logprob: -16.5997314453125
    10. '           ' → logprob: -16.5997314453125

Token 131: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.012589944526553154
    2. '))
' → logprob: -5.262589931488037
    3. '-' → logprob: -5.637589931488037
    4. ' -' → logprob: -6.262589931488037
    5. ' ))' → logprob: -6.387589931488037
    6. ')' → logprob: -9.387590408325195
    7. ')))' → logprob: -10.137590408325195
    8. ' ))
' → logprob: -10.512590408325195
    9. '   ' → logprob: -11.762590408325195
    10. ' ' → logprob: -11.887590408325195

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08044204115867615
    2. '           ' → logprob: -2.705441951751709
    3. '   ' → logprob: -5.080441951751709
    4. '	return' → logprob: -6.080441951751709
    5. 'return' → logprob: -7.080441951751709
    6. ' return' → logprob: -7.330441951751709
    7. '	' → logprob: -8.455442428588867
    8. '	       ' → logprob: -9.330442428588867
    9. '	   ' → logprob: -9.330442428588867
    10. '
' → logprob: -10.955442428588867

Token 133: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7835030555725098
    2. '       ' → logprob: -0.7835030555725098
    3. ' return' → logprob: -3.0335030555725098
    4. 'return' → logprob: -3.5335030555725098
    5. '	return' → logprob: -5.15850305557251
    6. ' for' → logprob: -6.53350305557251
    7. '	' → logprob: -7.90850305557251
    8. ' ' → logprob: -7.90850305557251
    9. '           ' → logprob: -7.90850305557251
    10. 'for' (adapté à ' for') → logprob: -8.408502578735352

Token 134: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0008946668240241706
    2. 'j' → logprob: -7.125894546508789
    3. ' ' → logprob: -9.500894546508789
    4. '_j' → logprob: -11.750894546508789
    5. ' _' → logprob: -12.625894546508789
    6. '_' → logprob: -13.750894546508789
    7. ' ' → logprob: -13.875894546508789
    8. '  ' → logprob: -14.125894546508789
    9. '	j' → logprob: -14.750894546508789
    10. ' in' → logprob: -14.875894546508789

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12706691026687622
    2. 'in' → logprob: -2.1270668506622314
    3. ' ' → logprob: -9.377066612243652
    4. 'range' → logprob: -10.627066612243652
    5. '	in' → logprob: -11.627066612243652
    6. ' range' → logprob: -11.752066612243652
    7. '  ' → logprob: -12.752066612243652
    8. ')' → logprob: -12.877066612243652
    9. '   ' → logprob: -13.377066612243652
    10. '<|end|>' → logprob: -13.377066612243652

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759456157684326
    2. ' range' → logprob: -0.8259456157684326
    3. '(range' → logprob: -12.825945854187012
    4. '   ' → logprob: -13.950945854187012
    5. 're' → logprob: -14.075945854187012
    6. ' ' → logprob: -14.200945854187012
    7. '	range' → logprob: -15.200945854187012
    8. '  ' → logprob: -15.325945854187012
    9. 'i' → logprob: -15.825945854187012
    10. 'r' → logprob: -16.575944900512695

Token 137: '(N' (ID: 10564)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.250005722045898
    3. '(N' → logprob: -14.250005722045898
    4. 'i' → logprob: -15.375005722045898
    5. ' (' → logprob: -16.7500057220459
    6. '(j' → logprob: -18.2500057220459
    7. '(I' → logprob: -19.1250057220459
    8. '(n' → logprob: -19.2500057220459
    9. ' i' → logprob: -19.2500057220459
    10. '[i' → logprob: -19.2500057220459

Token 138: '-' (ID: 12)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09293223172426224
    2. ')' → logprob: -3.5929322242736816
    3. '(i' → logprob: -3.9679322242736816
    4. '-' → logprob: -4.592932224273682
    5. ' i' → logprob: -4.592932224273682
    6. '):' → logprob: -4.967932224273682
    7. '):
' → logprob: -5.467932224273682
    8. '[i' → logprob: -5.717932224273682
    9. '   ' → logprob: -6.092932224273682
    10. ')i' → logprob: -6.217932224273682

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043972869752906263
    2. ' ' → logprob: -7.750439643859863
    3. '2' → logprob: -12.750439643859863
    4. '   ' → logprob: -13.500439643859863
    5. '(' → logprob: -13.875439643859863
    6. 'i' → logprob: -14.000439643859863
    7. '-' → logprob: -14.500439643859863
    8. ')' → logprob: -14.750439643859863
    9. '(i' → logprob: -14.875439643859863
    10. ' i' → logprob: -14.937939643859863

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01386305596679449
    2. ' ,' → logprob: -5.0138630867004395
    3. ',-' → logprob: -5.5138630867004395
    4. ',i' → logprob: -6.3888630867004395
    5. '):' → logprob: -7.6388630867004395
    6. '-' → logprob: -7.8888630867004395
    7. ' -' → logprob: -8.763862609863281
    8. '   ' → logprob: -8.888862609863281
    9. ' ,-' → logprob: -9.513862609863281
    10. '+' → logprob: -10.138862609863281

Token 141: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00980472844094038
    2. ' i' → logprob: -4.634804725646973
    3. '   ' → logprob: -11.009804725646973
    4. '-' → logprob: -11.259804725646973
    5. ' -' → logprob: -11.634804725646973
    6. '    ' → logprob: -12.634804725646973
    7. ' ' → logprob: -13.384804725646973
    8. '-i' → logprob: -13.509804725646973
    9. '0' → logprob: -13.759804725646973
    10. '     ' → logprob: -14.009804725646973

Token 142: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011801034212112427
    2. ',-' → logprob: -5.011801242828369
    3. ' ,' → logprob: -5.886801242828369
    4. ',i' → logprob: -6.761801242828369
    5. '+' → logprob: -7.386801242828369
    6. '   ' → logprob: -9.136800765991211
    7. ',+' → logprob: -9.261800765991211
    8. ',j' → logprob: -9.511800765991211
    9. '-' → logprob: -9.636800765991211
    10. '+,' → logprob: -10.136800765991211

Token 143: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08159194886684418
    2. '1' → logprob: -2.956591844558716
    3. '0' → logprob: -4.331592082977295
    4. 'res' → logprob: -5.456592082977295
    5. '-' → logprob: -5.956592082977295
    6. ' i' → logprob: -6.206592082977295
    7. ' ' → logprob: -6.706592082977295
    8. 'j' → logprob: -6.956592082977295
    9. '   ' → logprob: -6.956592082977295
    10. '-i' → logprob: -8.081591606140137

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.200866237282753
    2. ',-' → logprob: -1.8258662223815918
    3. ' ,' → logprob: -4.200866222381592
    4. '-' → logprob: -5.450866222381592
    5. '       ' → logprob: -7.200866222381592
    6. ' ,-' → logprob: -7.700866222381592
    7. ' -' → logprob: -8.32586669921875
    8. '   ' → logprob: -9.45086669921875
    9. '           ' → logprob: -10.32586669921875
    10. '      ' → logprob: -11.45086669921875

Token 145: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024801772087812424
    2. ' -' → logprob: -6.0024800300598145
    3. ' ' → logprob: -13.002480506896973
    4. '   ' → logprob: -13.627480506896973
    5. '           ' → logprob: -15.127480506896973
    6. '       ' → logprob: -15.627480506896973
    7. '  ' → logprob: -15.752480506896973
    8. '     ' → logprob: -16.377479553222656
    9. '    ' → logprob: -16.877479553222656
    10. ')' → logprob: -17.002479553222656

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.00000762939453
    4. ')' → logprob: -16.62500762939453
    5. '-' → logprob: -16.75000762939453
    6. '2' → logprob: -16.87500762939453
    7. '):
' → logprob: -17.12500762939453
    8. '```' → logprob: -17.12500762939453
    9. '  ' → logprob: -18.43750762939453
    10. ',' → logprob: -18.43750762939453

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1006244644522667
    2. '):
' → logprob: -2.3506245613098145
    3. ':' → logprob: -8.725624084472656
    4. ')' → logprob: -9.475624084472656
    5. '   ' → logprob: -10.100624084472656
    6. ',' → logprob: -10.225624084472656
    7. '):-' → logprob: -10.225624084472656
    8. ' ):' → logprob: -10.600624084472656
    9. '):
' → logprob: -11.225624084472656
    10. '-' → logprob: -11.725624084472656

Token 148: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.128385305404663
    2. ' process' → logprob: -1.128385305404663
    3. 'process' → logprob: -1.753385305404663
    4. '
' → logprob: -2.253385305404663
    5. '(process' → logprob: -3.378385305404663
    6. '	process' → logprob: -3.878385305404663
    7. '           ' → logprob: -5.003385543823242
    8. ' 
' → logprob: -6.003385543823242
    9. '	' → logprob: -6.003385543823242
    10. '/process' → logprob: -7.003385543823242

Token 149: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.3871408700942993
    2. ' process' → logprob: -1.1371408700942993
    3. '               ' → logprob: -9.262141227722168
    4. '	process' → logprob: -9.387141227722168
    5. '           ' → logprob: -9.512141227722168
    6. '
' → logprob: -11.887141227722168
    7. '   ' → logprob: -12.637141227722168
    8. ' proces' → logprob: -13.387141227722168
    9. '       ' → logprob: -13.512141227722168
    10. '(process' → logprob: -13.887141227722168

Token 150: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.9361264946837764e-07
    2. 'j' → logprob: -16.125
    3. '(j' → logprob: -18.625
    4. '_' → logprob: -18.625
    5. '_js' → logprob: -20.5
    6. '```' → logprob: -20.5
    7. '_i' → logprob: -20.625
    8. '[j' → logprob: -21.625
    9. ' _' → logprob: -21.875
    10. ' j' → logprob: -22.0

Token 151: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -6.837811088189483e-05
    2. '(' → logprob: -10.125068664550781
    3. 'j' → logprob: -11.125068664550781
    4. ' (' → logprob: -11.250068664550781
    5. '[j' → logprob: -15.750068664550781
    6. '(
' → logprob: -16.00006866455078
    7. ' j' → logprob: -16.00006866455078
    8. '(i' → logprob: -17.25006866455078
    9. ',j' → logprob: -18.25006866455078
    10. ' ' → logprob: -18.62506866455078

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -15.125007629394531
    4. '())' → logprob: -15.625007629394531
    5. '))' → logprob: -16.50000762939453
    6. ')}' → logprob: -17.87500762939453
    7. ')`' → logprob: -18.00000762939453
    8. '<|end|>' → logprob: -18.12500762939453
    9. '()' → logprob: -18.37500762939453
    10. ')}}' → logprob: -18.62500762939453

Token 153: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43951717019081116
    2. '<|end|>' → logprob: -1.5645171403884888
    3. '       ' → logprob: -1.9395171403884888
    4. '<|end|>' → logprob: -7.314517021179199
    5. '\n' → logprob: -7.689517021179199
    6. '
' → logprob: -7.814517021179199
    7. 'return' → logprob: -8.0645170211792
    8. ')' → logprob: -8.1895170211792
    9. '           ' → logprob: -8.8145170211792
    10. ' return' → logprob: -9.3145170211792

Token 154: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.39807063341140747
    2. '   ' → logprob: -1.1480705738067627
    3. ' i' → logprob: -4.648070812225342
    4. '       ' → logprob: -6.523070812225342
    5. '	i' → logprob: -9.523070335388184
    6. '
' → logprob: -12.023070335388184
    7. '```' → logprob: -13.398070335388184
    8. '  ' → logprob: -13.398070335388184
    9. '    
' → logprob: -13.648070335388184
    10. '    ' → logprob: -14.023070335388184

Token 155: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4811386466026306
    2. '-=' → logprob: -1.1061387062072754
    3. '-' → logprob: -2.9811387062072754
    4. ' -' → logprob: -8.231138229370117
    5. ' ' → logprob: -10.231138229370117
    6. '=' → logprob: -10.606138229370117
    7. '   ' → logprob: -11.731138229370117
    8. '<|end|>' → logprob: -12.481138229370117
    9. '  ' → logprob: -13.106138229370117
    10. '```' → logprob: -13.106138229370117

Token 156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.750009536743164
    4. '  ' → logprob: -19.625009536743164
    5. '<|end|>' → logprob: -20.500009536743164
    6. '```' → logprob: -20.875009536743164
    7. '۱' → logprob: -21.375009536743164
    8. '１' → logprob: -21.500009536743164
    9. ' ' → logprob: -22.312509536743164
    10. '       ' → logprob: -22.375009536743164

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.375001907348633
    4. '```' → logprob: -19.750001907348633
    5. '  ' → logprob: -20.125001907348633
    6. '       ' → logprob: -21.562501907348633
    7. '۱' → logprob: -21.812501907348633
    8. '１' → logprob: -21.937501907348633
    9. '<|end|>' → logprob: -22.125001907348633
    10. '﻿' → logprob: -22.187501907348633

Token 158: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4784780740737915
    2. '   ' → logprob: -0.9784780740737915
    3. 'if' → logprob: -6.353477954864502
    4. '<|end|>' → logprob: -6.728477954864502
    5. ' return' → logprob: -6.978477954864502
    6. 'print' (adapté à ' print') → logprob: -8.22847843170166
    7. '	return' → logprob: -9.35347843170166
    8. '```' → logprob: -9.97847843170166
    9. '}' → logprob: -10.72847843170166
    10. '...' → logprob: -10.85347843170166

Token 161: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0019770495127886534
    2. '(' → logprob: -6.25197696685791
    3. '()' → logprob: -10.12697696685791
    4. 'res' → logprob: -12.25197696685791
    5. ' (' → logprob: -13.00197696685791
    6. '(max' → logprob: -14.50197696685791
    7. '(len' → logprob: -14.75197696685791
    8. '(
' → logprob: -15.25197696685791
    9. ' res' → logprob: -16.626977920532227
    10. '(sum' → logprob: -16.876977920532227

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '))' → logprob: -15.625000953674316
    5. ')`' → logprob: -16.5
    6. ')}' → logprob: -17.875
    7. '()' → logprob: -18.625
    8. '())' → logprob: -18.75
    9. '`)' → logprob: -19.0
    10. ')}}' → logprob: -19.125

Token 163: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 162
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 45.06%
Précision adaptée (1ère position): 46.91%
Précision (top 10): 83.33%
================================================================================
