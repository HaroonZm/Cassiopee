================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
mod = 10**9 + 7
N = int(input()) # nb, taille
# 5D array... maybe there's a better way but let's do it like this for now
dp = [[[[[0]*4 for _ in range(4)] for _ in range(4)] for _ in range(4)] for _ in range(N+1)]

# init pour n=3 (pas super clair mais c'est comme ça)
for i in range(4):
    for j in range(4):
        for k in range(4):
            for l in range(4):
                # only if i==0 (bizarre mais bon)
                if i == 0:
                    dp[3][i][j][k][l] = 1

# on interdit certains patterns sur la "queue"
for i in range(4):
    # franchement c'est pas hyper lisible, faudrait une fonction mais j'ai la flemme
    dp[3][i][0][1][2]=0
    dp[3][i][1][0][2]=0
    dp[3][i][0][2][1]=0

for n in range(4,N+1):
    for i in range(4):
        for j in range(4):
            for k in range(4):
                for l in range(4):
                    # c'est long...
                    for x in range(4):
                        # bon, là c'est pas joli mais ça marche normalement
                        if (str(j)+str(k)+str(l) != "012") and (str(j)+str(k)+str(l) != "102") and (str(j)+str(k)+str(l) != "021") and (str(i)+str(k)+str(l) != "012") and (str(i)+str(j)+str(l) != "012"):
                            dp[n][i][j][k][l] = (dp[n][i][j][k][l] + dp[n-1][x][i][j][k]) % mod

total = 0
for i in range(4):
    for j in range(4):
        for k in range(4):
            for l in range(4):
                total = (total + dp[N][i][j][k][l]) % mod

print(total)
# pas sûr de tout comprendre, mais ça doit marcher ?
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'mod' (ID: 4847)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7673812508583069
    2. 'math' → logprob: -1.892381191253662
    3. ' ' → logprob: -2.767381191253662
    4. '__' → logprob: -2.892381191253662
    5. '1' → logprob: -3.017381191253662
    6. '100' → logprob: -3.392381191253662
    7. '42' → logprob: -3.517381191253662
    8. '123' → logprob: -3.767381191253662
    9. 'pow' → logprob: -4.517381191253662
    10. 'torch' → logprob: -4.517381191253662

Token 4: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08230014145374298
    2. '%' → logprob: -3.3323001861572266
    3. '**' → logprob: -3.8323001861572266
    4. '+' → logprob: -4.832300186157227
    5. '\' → logprob: -5.207300186157227
    6. '```' → logprob: -5.707300186157227
    7. '\n' → logprob: -6.332300186157227
    8. '#' → logprob: -7.082300186157227
    9. '=' → logprob: -7.207300186157227
    10. '`' → logprob: -7.707300186157227

Token 5: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.165027217415627e-05
    2. '6' → logprob: -11.125021934509277
    3. '```' → logprob: -12.250021934509277
    4. '09' → logprob: -14.000021934509277
    5. ' ' → logprob: -14.125021934509277
    6. '``' → logprob: -16.37502098083496
    7. '8' → logprob: -16.37502098083496
    8. '5' → logprob: -16.37502098083496
    9. '3' → logprob: -16.62502098083496
    10. '0' → logprob: -17.12502098083496

Token 6: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014060820103622973
    2. ' +' → logprob: -8.875140190124512
    3. '```' → logprob: -15.000140190124512
    4. '+
' → logprob: -15.875140190124512
    5. '7' → logprob: -16.250141143798828
    6. '+

' → logprob: -16.625141143798828
    7. '＋' → logprob: -17.500141143798828
    8. '6' → logprob: -18.500141143798828
    9. '`' → logprob: -18.625141143798828
    10. '+</' → logprob: -18.875141143798828

Token 7: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '+' → logprob: -16.000003814697266
    4. '```' → logprob: -17.750003814697266
    5. ' ' → logprob: -19.750003814697266
    6. '   ' → logprob: -20.125003814697266
    7. '_' → logprob: -20.375003814697266
    8. '07' → logprob: -20.500003814697266
    9. '9' → logprob: -20.687503814697266
    10. '``' → logprob: -20.687503814697266

Token 8: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.75
    3. '```' → logprob: -17.75
    4. ' ' → logprob: -18.25
    5. '``' → logprob: -21.125
    6. '07' → logprob: -21.25
    7. '   ' → logprob: -21.625
    8. '37' → logprob: -22.0625
    9. '' → logprob: -22.25
    10. '9' → logprob: -22.3125

Token 9: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.093725323677063
    2. '#' → logprob: -1.593725323677063
    3. ',' → logprob: -1.968725323677063
    4. ')' → logprob: -2.7187252044677734
    5. '\n' → logprob: -2.8437252044677734
    6. '
' → logprob: -3.0937252044677734
    7. '\' → logprob: -3.3437252044677734
    8. '**' → logprob: -3.7187252044677734
    9. '```' → logprob: -4.093725204467773
    10. '=' → logprob: -4.093725204467773

Token 10: 'N' (ID: 45)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.36610496044158936
    2. '\' → logprob: -2.116105079650879
    3. '
' → logprob: -2.366105079650879
    4. '*' → logprob: -3.366105079650879
    5. '```' → logprob: -4.116105079650879
    6. '#' → logprob: -4.241105079650879
    7. '**' → logprob: -4.991105079650879
    8. ')' → logprob: -5.616105079650879
    9. '\r' → logprob: -5.866105079650879
    10. '' → logprob: -5.866105079650879

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.410955786705017
    2. '_' → logprob: -1.785955786705017
    3. ' ' → logprob: -1.910955786705017
    4. '[' → logprob: -2.0359559059143066
    5. '**' → logprob: -2.4109559059143066
    6. ')' → logprob: -2.7859559059143066
    7. '*' → logprob: -3.0359559059143066
    8. '=' → logprob: -3.7859559059143066
    9. '+' → logprob: -4.285955905914307
    10. '<|end|>' → logprob: -4.285955905914307

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6069740653038025
    2. ' int' → logprob: -1.1069741249084473
    3. 'int' → logprob: -2.7319741249084473
    4. '10' → logprob: -3.2319741249084473
    5. '100' → logprob: -3.9819741249084473
    6. '5' → logprob: -7.606974124908447
    7. '0' → logprob: -7.981974124908447
    8. '1' → logprob: -8.856973648071289
    9. '20' → logprob: -9.231973648071289
    10. '50' → logprob: -9.731973648071289

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011125932214781642
    2. '('' → logprob: -7.126112461090088
    3. ''' → logprob: -9.251112937927246
    4. '(input' → logprob: -9.626112937927246
    5. '(
' → logprob: -10.126112937927246
    6. '```' → logprob: -10.751112937927246
    7. '(N' → logprob: -11.126112937927246
    8. '`' → logprob: -11.251112937927246
    9. '(`' → logprob: -11.251112937927246
    10. '("("' → logprob: -11.501112937927246

Token 14: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022068656980991364
    2. '())' → logprob: -3.897068738937378
    3. '()' → logprob: -6.897068500518799
    4. '))' → logprob: -8.147068977355957
    5. '(' → logprob: -8.647068977355957
    6. '`)' → logprob: -10.397068977355957
    7. ' )' → logprob: -12.272068977355957
    8. '')' → logprob: -12.397068977355957
    9. '```' → logprob: -13.022068977355957
    10. ')`' → logprob: -13.897068977355957

Token 15: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4191773533821106
    2. 'dp' → logprob: -2.419177293777466
    3. 'result' → logprob: -2.544177293777466
    4. 'A' → logprob: -2.669177293777466
    5. 's' → logprob: -3.669177293777466
    6. 'arr' → logprob: -4.169177532196045
    7. 'data' → logprob: -4.294177532196045
    8. 'for' → logprob: -4.544177532196045
    9. 'res' → logprob: -5.044177532196045
    10. 'd' → logprob: -5.294177532196045

Token 16: ' nb' (ID: 28791)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01785244047641754
    2. 'a' → logprob: -5.517852306365967
    3. ' A' → logprob: -5.892852306365967
    4. ' \' → logprob: -6.267852306365967
    5. ')' → logprob: -6.392852306365967
    6. ' a' → logprob: -7.017852306365967
    7. ' array' → logprob: -7.142852306365967
    8. 'arr' → logprob: -7.642852306365967
    9. 'array' → logprob: -7.767852306365967
    10. '  ' → logprob: -7.892852306365967

Token 17: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1485310792922974
    2. ' =' → logprob: -1.2735310792922974
    3. '_' → logprob: -1.8985310792922974
    4. 's' → logprob: -2.648530960083008
    5. ' of' → logprob: -3.273530960083008
    6. ')' → logprob: -3.523530960083008
    7. '[' → logprob: -4.023530960083008
    8. '_tokens' → logprob: -4.273530960083008
    9. '_of' → logprob: -4.398530960083008
    10. '_s' → logprob: -4.523530960083008

Token 18: ' taille' (ID: 41644)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23391315340995789
    2. ')' → logprob: -1.7339131832122803
    3. ' )' → logprob: -4.108912944793701
    4. '_' → logprob: -5.233912944793701
    5. 's' → logprob: -5.858912944793701
    6. 'a' → logprob: -5.858912944793701
    7. ' a' → logprob: -7.358912944793701
    8. 'n' → logprob: -7.733912944793701
    9. ',' → logprob: -8.10891342163086
    10. ''' → logprob: -8.10891342163086

Token 19: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6729920506477356
    2. 's' → logprob: -2.047991991043091
    3. 'a' → logprob: -2.172991991043091
    4. '\' → logprob: -2.547991991043091
    5. 'n' → logprob: -3.047991991043091
    6. ' ' → logprob: -3.922991991043091
    7. 'for' → logprob: -4.04799222946167
    8. ')' → logprob: -4.17299222946167
    9. '' → logprob: -4.54799222946167
    10. 'result' → logprob: -4.54799222946167

Token 20: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8494511842727661
    2. 'result' → logprob: -1.3494511842727661
    3. 'A' → logprob: -2.3494510650634766
    4. 'dp' → logprob: -2.7244510650634766
    5. 'arr' → logprob: -2.9744510650634766
    6. 's' → logprob: -3.0994510650634766
    7. 'res' → logprob: -4.349451065063477
    8. 'count' → logprob: -4.974451065063477
    9. 'data' → logprob: -5.349451065063477
    10. 'n' → logprob: -5.974451065063477

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7324749827384949
    2. 's' → logprob: -1.7324750423431396
    3. 'a' → logprob: -2.1074750423431396
    4. 'd' → logprob: -3.3574750423431396
    5. 'for' → logprob: -3.4824750423431396
    6. ' for' → logprob: -3.7324750423431396
    7. ' a' → logprob: -3.9824750423431396
    8. 'result' → logprob: -4.2324748039245605
    9. ' result' → logprob: -4.7324748039245605
    10. 'A' → logprob: -4.8574748039245605

Token 22: '5' (ID: 20)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03601321578025818
    2. 'A' → logprob: -4.536013126373291
    3. 'arr' → logprob: -5.161013126373291
    4. 'a' → logprob: -5.161013126373291
    5. 'fact' → logprob: -5.911013126373291
    6. 'def' → logprob: -6.411013126373291
    7. 'd' → logprob: -6.661013126373291
    8. 'from' → logprob: -6.911013126373291
    9. 'lst' → logprob: -6.911013126373291
    10. 'data' → logprob: -7.411013126373291

Token 23: 'D' (ID: 35)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42020249366760254
    2. ')' → logprob: -2.4202024936676025
    3. '#' → logprob: -2.7952024936676025
    4. '*' → logprob: -3.2952024936676025
    5. 'a' → logprob: -3.4202024936676025
    6. 'n' → logprob: -3.4202024936676025
    7. ',' → logprob: -4.670202255249023
    8. '.' → logprob: -4.670202255249023
    9. '_' → logprob: -4.920202255249023
    10. '%' → logprob: -5.045202255249023

Token 24: ' array' (ID: 2644)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9842727780342102
    2. ' dp' → logprob: -1.1092727184295654
    3. '_' → logprob: -1.6092727184295654
    4. 'd' → logprob: -3.4842727184295654
    5. ' _' → logprob: -4.6092729568481445
    6. ' ' → logprob: -4.8592729568481445
    7. '_dp' → logprob: -4.8592729568481445
    8. 'D' → logprob: -4.9842729568481445
    9. 'DP' → logprob: -5.1092729568481445
    10. 'a' → logprob: -5.4842729568481445

Token 25: '...' (ID: 1008)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8464569449424744
    2. ' dp' → logprob: -0.8464569449424744
    3. 'd' → logprob: -2.846457004547119
    4. 'a' → logprob: -3.721457004547119
    5. '[' → logprob: -3.846457004547119
    6. ' d' → logprob: -5.221457004547119
    7. ' ' → logprob: -5.346457004547119
    8. 'DP' → logprob: -5.596457004547119
    9. '_dp' → logprob: -5.721457004547119
    10. 'arr' → logprob: -5.846457004547119

Token 26: ' maybe' (ID: 10112)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4495985805988312
    2. ' ' → logprob: -1.6995985507965088
    3. '_' → logprob: -2.949598550796509
    4. 'd' → logprob: -3.824598550796509
    5. 'a' → logprob: -3.824598550796509
    6. 'm' → logprob: -3.949598550796509
    7. 'dp' → logprob: -4.574598789215088
    8. '<|end|>' → logprob: -4.699598789215088
    9. ' dp' → logprob: -4.949598789215088
    10. ' [' → logprob: -5.449598789215088

Token 27: ' there's' (ID: 15333)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3564051389694214
    2. 'dp' → logprob: -2.106405258178711
    3. ' ' → logprob: -2.231405258178711
    4. 'd' → logprob: -3.481405258178711
    5. 'a' → logprob: -4.481405258178711
    6. '_' → logprob: -5.106405258178711
    7. ' d' → logprob: -5.481405258178711
    8. 'DP' → logprob: -5.981405258178711
    9. '[' → logprob: -6.106405258178711
    10. '_dp' → logprob: -6.231405258178711

Token 28: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.23565486073493958
    2. ' ' → logprob: -2.860654830932617
    3. ' an' → logprob: -2.860654830932617
    4. '[' → logprob: -3.235654830932617
    5. ')' → logprob: -4.360654830932617
    6. 'a' → logprob: -4.860654830932617
    7. ' no' → logprob: -4.860654830932617
    8. '    ' → logprob: -5.360654830932617
    9. '  ' → logprob: -6.235654830932617
    10. ']' → logprob: -6.235654830932617

Token 29: ' better' (ID: 3432)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9125366806983948
    2. ' ' → logprob: -1.91253662109375
    3. ' space' → logprob: -1.91253662109375
    4. 'space' → logprob: -2.66253662109375
    5. 'n' → logprob: -2.91253662109375
    6. ' dp' → logprob: -3.41253662109375
    7. ' [' → logprob: -3.53753662109375
    8. ' ]' → logprob: -4.28753662109375
    9. ' [[[' → logprob: -4.41253662109375
    10. 'dp' → logprob: -4.53753662109375

Token 30: ' way' (ID: 2006)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0891730785369873
    2. ' ' → logprob: -1.4641730785369873
    3. ' way' → logprob: -2.2141730785369873
    4. 'space' → logprob: -2.4641730785369873
    5. ' space' → logprob: -2.7141730785369873
    6. ' approach' → logprob: -3.0891730785369873
    7. ')' → logprob: -3.0891730785369873
    8. ' )' → logprob: -3.9641730785369873
    9. ' _' → logprob: -4.089173316955566
    10. '<|end|>' → logprob: -4.214173316955566

Token 31: ' but' (ID: 889)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4685436487197876
    2. 'd' → logprob: -1.8435436487197876
    3. ' dp' → logprob: -1.9685436487197876
    4. '_' → logprob: -2.218543529510498
    5. 'dp' → logprob: -2.218543529510498
    6. ' ' → logprob: -2.843543529510498
    7. '[' → logprob: -3.093543529510498
    8. 'A' → logprob: -3.843543529510498
    9. 'm' → logprob: -3.968543529510498
    10. ' a' → logprob: -4.593543529510498

Token 32: ' let's' (ID: 35717)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.21616096794605255
    2. ' ' → logprob: -2.841161012649536
    3. ' d' → logprob: -2.966161012649536
    4. 'dp' → logprob: -3.341161012649536
    5. 'd' → logprob: -3.466161012649536
    6. 'a' → logprob: -5.966160774230957
    7. 'import' → logprob: -6.091160774230957
    8. ' a' → logprob: -6.466160774230957
    9. ')' → logprob: -6.466160774230957
    10. ' import' → logprob: -6.591160774230957

Token 33: ' do' (ID: 621)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.3795244693756104
    2. ' use' → logprob: -1.5045244693756104
    3. ' do' → logprob: -2.0045244693756104
    4. ' initialize' → logprob: -2.2545244693756104
    5. ' ' → logprob: -3.1295244693756104
    6. ' try' → logprob: -3.3795244693756104
    7. ' create' → logprob: -3.5045244693756104
    8. 'initialize' → logprob: -3.7545244693756104
    9. 'import' → logprob: -3.8795244693756104
    10. ' make' → logprob: -4.004524230957031

Token 34: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016672920435667038
    2. '[' → logprob: -5.0166730880737305
    3. ' 
' → logprob: -5.8916730880737305
    4. 'n' → logprob: -6.8916730880737305
    5. ' ```' → logprob: -7.2666730880737305
    6. '```' → logprob: -7.3916730880737305
    7. '[
' → logprob: -7.5166730880737305
    8. '  
' → logprob: -7.6416730880737305
    9. 'a' → logprob: -7.8916730880737305
    10. ' ]' → logprob: -8.01667308807373

Token 35: ' like' (ID: 1299)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7068803310394287
    2. ' dp' → logprob: -1.5818803310394287
    3. 'a' → logprob: -2.5818803310394287
    4. 'arr' → logprob: -3.0818803310394287
    5. '[' → logprob: -3.2068803310394287
    6. ' 
' → logprob: -4.331880569458008
    7. 'array' → logprob: -4.331880569458008
    8. 'DP' → logprob: -4.331880569458008
    9. 'A' → logprob: -4.456880569458008
    10. '
' → logprob: -4.581880569458008

Token 36: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.037247370928525925
    2. 'this' → logprob: -3.6622474193573
    3. ' that' → logprob: -4.537247180938721
    4. 'that' → logprob: -9.037247657775879
    5. '[]' → logprob: -10.912247657775879
    6. ' it' → logprob: -11.787247657775879
    7. ' [' → logprob: -12.037247657775879
    8. '[' → logprob: -12.662247657775879
    9. ' ' → logprob: -12.912247657775879
    10. ' lists' → logprob: -12.912247657775879

Token 37: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1406805515289307
    2. '[' → logprob: -1.2656805515289307
    3. 'arr' → logprob: -2.3906805515289307
    4. 'A' → logprob: -3.1406805515289307
    5. '
' → logprob: -3.1406805515289307
    6. 'dp' → logprob: -3.5156805515289307
    7. 'm' → logprob: -3.7656805515289307
    8. 'array' → logprob: -3.7656805515289307
    9. 'd' → logprob: -4.015680313110352
    10. 'mod' → logprob: -4.140680313110352

Token 38: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.011106302961707115
    2. 'now' → logprob: -5.511106491088867
    3. ' i' → logprob: -5.511106491088867
    4. '_' → logprob: -6.386106491088867
    5. '_now' → logprob: -7.261106491088867
    6. ' _' → logprob: -8.386106491088867
    7. 'i' → logprob: -8.761106491088867
    8. ' maintenant' → logprob: -9.886106491088867
    9. ' ' → logprob: -10.136106491088867
    10. ' the' → logprob: -10.886106491088867

Token 39: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49115556478500366
    2. '
' → logprob: -1.9911556243896484
    3. 'a' → logprob: -2.2411556243896484
    4. 'd' → logprob: -3.4911556243896484
    5. ' dp' → logprob: -3.8661556243896484
    6. 'DP' → logprob: -4.241155624389648
    7. 'A' → logprob: -4.241155624389648
    8. 'arr' → logprob: -4.241155624389648
    9. ' 
' → logprob: -5.116155624389648
    10. '[' → logprob: -5.116155624389648

Token 40: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09696623682975769
    2. ' dp' → logprob: -3.09696626663208
    3. 'd' → logprob: -3.97196626663208
    4. 'DP' → logprob: -5.22196626663208
    5. 'D' → logprob: -5.34696626663208
    6. 'a' → logprob: -5.47196626663208
    7. 'A' → logprob: -5.47196626663208
    8. 'arr' → logprob: -5.84696626663208
    9. 'dims' → logprob: -6.47196626663208
    10. 'dimensions' → logprob: -6.97196626663208

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24770596623420715
    2. '[' → logprob: -1.7477059364318848
    3. '=' → logprob: -3.1227059364318848
    4. ' ' → logprob: -7.622705936431885
    5. ' =[' → logprob: -7.872705936431885
    6. '=[' → logprob: -8.747706413269043
    7. ' [' → logprob: -8.997706413269043
    8. '```' → logprob: -11.997706413269043
    9. '[:]' → logprob: -12.122706413269043
    10. '_' → logprob: -12.247706413269043

Token 42: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.1635694056749344
    2. '[[' → logprob: -1.913569450378418
    3. '[' → logprob: -6.288569450378418
    4. ' [' → logprob: -7.038569450378418
    5. ' [[[' → logprob: -7.663569450378418
    6. ' []' → logprob: -9.413569450378418
    7. ' [{}' → logprob: -10.413569450378418
    8. ' ' → logprob: -12.163569450378418
    9. ' {}' → logprob: -12.538569450378418
    10. '[(' → logprob: -12.663569450378418

Token 43: '[[' (ID: 26245)
  Prédit: '[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.13098359107971191
    2. '[' → logprob: -2.380983591079712
    3. '0' → logprob: -3.505983591079712
    4. 'False' → logprob: -8.380983352661133
    5. ' [[' → logprob: -11.005983352661133
    6. '[
' → logprob: -11.130983352661133
    7. ' [' → logprob: -11.255983352661133
    8. ' [[[' → logprob: -12.630983352661133
    9. ']' → logprob: -13.005983352661133
    10. 'None' → logprob: -13.130983352661133

Token 44: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008773396722972393
    2. '[' → logprob: -4.758773326873779
    3. '[[' → logprob: -9.133773803710938
    4. 'False' → logprob: -10.883773803710938
    5. ' ' → logprob: -11.258773803710938
    6. '-' → logprob: -12.008773803710938
    7. '[
' → logprob: -12.008773803710938
    8. ' [' → logprob: -13.258773803710938
    9. '[-' → logprob: -13.883773803710938
    10. ']' → logprob: -13.883773803710938

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.049755782238208e-05
    2. '-' → logprob: -10.62505054473877
    3. ' ' → logprob: -11.00005054473877
    4. 'False' → logprob: -12.00005054473877
    5. 'None' → logprob: -13.50005054473877
    6. '[' → logprob: -14.00005054473877
    7. ']' → logprob: -15.12505054473877
    8. '(' → logprob: -15.37505054473877
    9. 'int' → logprob: -16.000049591064453
    10. 'float' → logprob: -16.937549591064453

Token 46: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4107697010040283
    2. ' for' → logprob: -1.2857697010040283
    3. ']*' → logprob: -3.1607697010040283
    4. ' ]' → logprob: -4.160769462585449
    5. 'for' → logprob: -6.160769462585449
    6. ' ' → logprob: -9.16076946258545
    7. ']*(' → logprob: -9.16076946258545
    8. ']]' → logprob: -10.66076946258545
    9. ']+' → logprob: -11.03576946258545
    10. '0' → logprob: -11.16076946258545

Token 47: '4' (ID: 19)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.528572678565979
    2. '2' → logprob: -1.903572678565979
    3. '10' → logprob: -3.0285725593566895
    4. '3' → logprob: -3.5285725593566895
    5. '(' → logprob: -3.6535725593566895
    6. '5' → logprob: -3.6535725593566895
    7. '(N' → logprob: -3.7785725593566895
    8. '4' → logprob: -4.0285725593566895
    9. 'N' → logprob: -4.1535725593566895
    10. '51' → logprob: -4.2785725593566895

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42889150977134705
    2. 'for' → logprob: -1.0538915395736694
    3. ')' → logprob: -9.1788911819458
    4. ']' → logprob: -9.8038911819458
    5. ' ' → logprob: -11.6788911819458
    6. '	for' → logprob: -11.8038911819458
    7. '   ' → logprob: -13.1788911819458
    8. '  ' → logprob: -13.4288911819458
    9. '```' → logprob: -13.5538911819458
    10. '+' → logprob: -13.9288911819458

Token 49: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07242578268051147
    2. ' range' → logprob: -2.6974258422851562
    3. '_' → logprob: -6.197425842285156
    4. ' ' → logprob: -8.822425842285156
    5. ' i' → logprob: -8.947425842285156
    6. ' in' → logprob: -9.197425842285156
    7. ' j' → logprob: -9.947425842285156
    8. 'range' → logprob: -11.822425842285156
    9. ' r' → logprob: -12.072425842285156
    10. '_range' → logprob: -12.072425842285156

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003957608714699745
    2. ' range' → logprob: -8.125395774841309
    3. 'range' → logprob: -9.875395774841309
    4. 'in' → logprob: -10.250395774841309
    5. ' ' → logprob: -11.375395774841309
    6. '<|end|>' → logprob: -14.375395774841309
    7. ' xrange' → logprob: -16.000394821166992
    8. '(range' → logprob: -16.250394821166992
    9. ')' → logprob: -16.250394821166992
    10. 's' → logprob: -16.500394821166992

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0019287518225610256
    2. 'range' → logprob: -6.251928806304932
    3. '(range' → logprob: -16.876928329467773
    4. '	range' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.251928329467773
    6. ' xrange' → logprob: -18.876928329467773
    7. '  ' → logprob: -19.126928329467773
    8. '_range' → logprob: -19.251928329467773
    9. ' rang' → logprob: -19.501928329467773
    10. '   ' → logprob: -19.751928329467773

Token 52: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02373640611767769
    2. '(N' → logprob: -3.8987364768981934
    3. '4' → logprob: -6.398736476898193
    4. ' (' → logprob: -6.898736476898193
    5. ' ' → logprob: -9.148736000061035
    6. '((' → logprob: -9.148736000061035
    7. '3' → logprob: -9.773736000061035
    8. '5' → logprob: -9.773736000061035
    9. '7' → logprob: -10.523736000061035
    10. '6' → logprob: -11.086236000061035

Token 53: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4320332109928131
    2. '4' → logprob: -1.5570331811904907
    3. '5' → logprob: -2.8070333003997803
    4. '3' → logprob: -3.8070333003997803
    5. '10' → logprob: -4.057033061981201
    6. '2' → logprob: -4.682033061981201
    7. '7' → logprob: -4.932033061981201
    8. '6' → logprob: -5.182033061981201
    9. '9' → logprob: -5.307033061981201
    10. '11' → logprob: -5.557033061981201

Token 54: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.05683380365371704
    2. ')' → logprob: -2.9318337440490723
    3. ']' → logprob: -6.306833744049072
    4. ' )' → logprob: -9.30683422088623
    5. ' ]' → logprob: -11.18183422088623
    6. ' ' → logprob: -11.80683422088623
    7. '   ' → logprob: -12.30683422088623
    8. ']]' → logprob: -13.43183422088623
    9. '])' → logprob: -13.43183422088623
    10. '  ' → logprob: -13.80683422088623

Token 55: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20220033824443817
    2. 'for' → logprob: -1.7022002935409546
    3. ']' → logprob: -7.327200412750244
    4. '	for' → logprob: -9.952199935913086
    5. ' in' → logprob: -10.077199935913086
    6. '   ' → logprob: -11.452199935913086
    7. ' ' → logprob: -11.952199935913086
    8. '    ' → logprob: -12.202199935913086
    9. ' ]' → logprob: -12.452199935913086
    10. 'in' → logprob: -12.827199935913086

Token 56: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04744594171643257
    2. ' _' → logprob: -3.4224460124969482
    3. '_' → logprob: -4.422445774078369
    4. '(range' → logprob: -7.297445774078369
    5. 'range' → logprob: -7.547445774078369
    6. ' in' → logprob: -7.922445774078369
    7. '_range' → logprob: -9.172446250915527
    8. ' i' → logprob: -11.547446250915527
    9. '	range' → logprob: -11.672446250915527
    10. ' ' → logprob: -12.172446250915527

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04839680343866348
    2. 'range' → logprob: -3.9233968257904053
    3. ' range' → logprob: -4.298396587371826
    4. 'in' → logprob: -4.298396587371826
    5. '(range' → logprob: -8.173397064208984
    6. '(' → logprob: -12.173397064208984
    7. '_range' → logprob: -13.798397064208984
    8. '	range' → logprob: -14.423397064208984
    9. ' ' → logprob: -15.298397064208984
    10. 'ange' → logprob: -15.673397064208984

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.017716005444526672
    2. 'range' → logprob: -4.142715930938721
    3. '(range' → logprob: -6.392715930938721
    4. '4' → logprob: -13.392716407775879
    5. '	range' → logprob: -13.392716407775879
    6. '(' → logprob: -13.767716407775879
    7. '[' → logprob: -14.017716407775879
    8. ' ' → logprob: -14.267716407775879
    9. ' (' → logprob: -14.767716407775879
    10. '_range' → logprob: -16.267715454101562

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015728295547887683
    2. '(N' → logprob: -6.501572608947754
    3. ' (' → logprob: -9.876572608947754
    4. '((' → logprob: -11.251572608947754
    5. '(range' → logprob: -12.751572608947754
    6. '(n' → logprob: -13.876572608947754
    7. '4' → logprob: -14.126572608947754
    8. ' ' → logprob: -14.751572608947754
    9. '(s' → logprob: -15.626572608947754
    10. '(M' → logprob: -16.37657356262207

Token 60: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0749611034989357
    2. '5' → logprob: -2.8249611854553223
    3. 'N' → logprob: -4.699961185455322
    4. '10' → logprob: -6.949961185455322
    5. '2' → logprob: -7.574961185455322
    6. ' ' → logprob: -7.699961185455322
    7. '6' → logprob: -7.824961185455322
    8. '3' → logprob: -7.824961185455322
    9. '7' → logprob: -7.824961185455322
    10. '11' → logprob: -7.949961185455322

Token 61: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7087439894676208
    2. ')]' → logprob: -0.7087439894676208
    3. ')' → logprob: -4.208744049072266
    4. ' ]' → logprob: -7.958744049072266
    5. ']]' → logprob: -9.708744049072266
    6. '])' → logprob: -9.708744049072266
    7. 'for' → logprob: -10.083744049072266
    8. '   ' → logprob: -10.208744049072266
    9. ' for' → logprob: -10.458744049072266
    10. ' )' → logprob: -10.958744049072266

Token 62: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07898496091365814
    2. 'for' → logprob: -2.5789849758148193
    3. '	for' → logprob: -10.453985214233398
    4. ']' → logprob: -10.828985214233398
    5. '    ' → logprob: -11.203985214233398
    6. '   ' → logprob: -11.453985214233398
    7. ' in' → logprob: -11.828985214233398
    8. ' ' → logprob: -12.328985214233398
    9. '        ' → logprob: -12.828985214233398
    10. '       ' → logprob: -13.578985214233398

Token 63: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4059728980064392
    2. ' range' → logprob: -1.155972957611084
    3. '_' → logprob: -4.030972957611084
    4. ' in' → logprob: -6.780972957611084
    5. 'range' → logprob: -11.280972480773926
    6. '_range' → logprob: -11.655972480773926
    7. '(range' → logprob: -12.905972480773926
    8. ' i' → logprob: -13.405972480773926
    9. ' ' → logprob: -13.530972480773926
    10. '	range' → logprob: -15.155972480773926

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01073214691132307
    2. '_' → logprob: -4.885732173919678
    3. 'in' → logprob: -5.885732173919678
    4. ' _' → logprob: -8.88573169708252
    5. ' range' → logprob: -9.13573169708252
    6. 'range' → logprob: -9.51073169708252
    7. '_in' → logprob: -11.63573169708252
    8. ' ' → logprob: -12.01073169708252
    9. '(range' → logprob: -13.38573169708252
    10. '(' → logprob: -13.63573169708252

Token 65: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5762177109718323
    2. 'range' → logprob: -0.8262177109718323
    3. '(range' → logprob: -8.201217651367188
    4. ' in' → logprob: -12.701217651367188
    5. '	range' → logprob: -15.451217651367188
    6. '   ' → logprob: -15.576217651367188
    7. 'in' → logprob: -15.826217651367188
    8. '(N' → logprob: -16.826217651367188
    9. ' ' → logprob: -16.951217651367188
    10. 'N' → logprob: -17.076217651367188

Token 66: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14281435310840607
    2. '(N' → logprob: -2.0178143978118896
    3. ' (' → logprob: -9.517814636230469
    4. '(range' → logprob: -10.267814636230469
    5. '(n' → logprob: -11.267814636230469
    6. '((' → logprob: -11.517814636230469
    7. '4' → logprob: -12.517814636230469
    8. ' range' → logprob: -14.017814636230469
    9. ' ' → logprob: -14.017814636230469
    10. 'N' → logprob: -14.767814636230469

Token 67: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5435939431190491
    2. '4' → logprob: -0.9185939431190491
    3. '5' → logprob: -4.168593883514404
    4. ' N' → logprob: -6.418593883514404
    5. '3' → logprob: -6.668593883514404
    6. ' ' → logprob: -7.168593883514404
    7. '7' → logprob: -8.168594360351562
    8. '10' → logprob: -8.418594360351562
    9. '2' → logprob: -8.668594360351562
    10. '(N' → logprob: -9.293594360351562

Token 68: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10034911334514618
    2. ']' → logprob: -2.350349187850952
    3. ']]' → logprob: -9.225349426269531
    4. ')' → logprob: -10.475349426269531
    5. ' ]' → logprob: -11.475349426269531
    6. '])' → logprob: -12.725349426269531
    7. '])]' → logprob: -14.725349426269531
    8. ']
' → logprob: -15.350349426269531
    9. ')],' → logprob: -15.350349426269531
    10. ']

' → logprob: -15.350349426269531

Token 69: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09041354060173035
    2. 'for' → logprob: -2.8404135704040527
    3. ']' → logprob: -3.5904135704040527
    4. ' ]' → logprob: -7.840413570404053
    5. ' in' → logprob: -10.715413093566895
    6. '	for' → logprob: -11.590413093566895
    7. '   ' → logprob: -11.590413093566895
    8. ' ' → logprob: -11.715413093566895
    9. ')' → logprob: -12.090413093566895
    10. ')]' → logprob: -12.715413093566895

Token 70: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012515183538198471
    2. 'range' → logprob: -5.137515068054199
    3. ' N' → logprob: -5.137515068054199
    4. 'N' → logprob: -7.762515068054199
    5. '(N' → logprob: -8.5125150680542
    6. '(range' → logprob: -10.5125150680542
    7. '_' → logprob: -11.0125150680542
    8. ' ' → logprob: -12.0125150680542
    9. ' _' → logprob: -12.2625150680542
    10. ' (' → logprob: -12.5125150680542

Token 71: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1017451286315918
    2. 'range' → logprob: -2.351745128631592
    3. ' in' → logprob: -6.601745128631592
    4. 'in' → logprob: -9.10174560546875
    5. '(range' → logprob: -9.85174560546875
    6. 'N' → logprob: -11.72674560546875
    7. '_' → logprob: -12.22674560546875
    8. ' N' → logprob: -13.85174560546875
    9. '(N' → logprob: -14.85174560546875
    10. '_range' → logprob: -15.47674560546875

Token 72: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018184710294008255
    2. 'range' → logprob: -4.018184661865234
    3. ' N' → logprob: -11.143184661865234
    4. '(range' → logprob: -11.393184661865234
    5. 'N' → logprob: -11.768184661865234
    6. '(N' → logprob: -13.893184661865234
    7. ' (' → logprob: -16.018184661865234
    8. ' ' → logprob: -16.643184661865234
    9. '_range' → logprob: -16.768184661865234
    10. '(' → logprob: -17.143184661865234

Token 73: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0011732018319889903
    2. '(' → logprob: -6.75117301940918
    3. '(n' → logprob: -13.75117301940918
    4. 'N' → logprob: -13.75117301940918
    5. '((' → logprob: -14.37617301940918
    6. ' (' → logprob: -15.75117301940918
    7. ')' → logprob: -17.25117301940918
    8. '(int' → logprob: -18.00117301940918
    9. '(M' → logprob: -18.00117301940918
    10. ' N' → logprob: -18.75117301940918

Token 74: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00045926711754873395
    2. ')' → logprob: -7.87545919418335
    3. ']' → logprob: -9.625459671020508
    4. ' )' → logprob: -12.375459671020508
    5. '+' → logprob: -12.625459671020508
    6. ')])' → logprob: -13.125459671020508
    7. '')]' → logprob: -14.250459671020508
    8. ')],' → logprob: -14.375459671020508
    9. ')][' → logprob: -14.875459671020508
    10. '])]' → logprob: -14.875459671020508

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5014188799541444e-05
    2. ' ' → logprob: -10.250044822692871
    3. '2' → logprob: -11.625044822692871
    4. '3' → logprob: -15.750044822692871
    5. '0' → logprob: -15.875044822692871
    6. '5' → logprob: -16.625045776367188
    7. '7' → logprob: -16.625045776367188
    8. '10' → logprob: -16.750045776367188
    9. '```' → logprob: -16.750045776367188
    10. '4' → logprob: -18.000045776367188

Token 76: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3613448739051819
    2. ')' → logprob: -1.361344814300537
    3. '])' → logprob: -3.611344814300537
    4. ']' → logprob: -4.361344814300537
    5. ')])' → logprob: -4.986344814300537
    6. '])]' → logprob: -8.111345291137695
    7. ')],' → logprob: -10.486345291137695
    8. ' )' → logprob: -13.111345291137695
    9. '))' → logprob: -13.361345291137695
    10. ' ])' → logprob: -13.611345291137695

Token 77: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18721525371074677
    2. ' for' → logprob: -2.3122153282165527
    3. 'i' → logprob: -3.8122153282165527
    4. '
' → logprob: -4.187215328216553
    5. '#' → logprob: -4.312215328216553
    6. 'dp' → logprob: -4.437215328216553
    7. ' 
' → logprob: -5.812215328216553
    8. '<|end|>' → logprob: -6.062215328216553
    9. 'n' → logprob: -6.437215328216553
    10. ')' → logprob: -7.687215328216553

Token 78: ' init' (ID: 6327)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013996250927448273
    2. ' for' → logprob: -4.388996124267578
    3. '#' → logprob: -7.013996124267578
    4. 'i' → logprob: -7.638996124267578
    5. 'dp' → logprob: -10.888996124267578
    6. 'For' → logprob: -11.513996124267578
    7. 'prev' → logprob: -11.513996124267578
    8. 'def' → logprob: -11.638996124267578
    9. 'from' → logprob: -11.763996124267578
    10. '_' → logprob: -12.138996124267578

Token 79: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20235341787338257
    2. ' for' → logprob: -1.7023534774780273
    3. 'dp' → logprob: -7.327353477478027
    4. '[' → logprob: -8.952353477478027
    5. 'i' → logprob: -9.702353477478027
    6. '```' → logprob: -11.077353477478027
    7. '#' → logprob: -11.202353477478027
    8. ' ' → logprob: -11.577353477478027
    9. '   ' → logprob: -11.577353477478027
    10. ']' → logprob: -11.577353477478027

Token 80: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4750400483608246
    2. ' i' → logprob: -2.1000399589538574
    3. 'for' → logprob: -2.2250399589538574
    4. '_' → logprob: -2.4750399589538574
    5. ' for' → logprob: -3.6000399589538574
    6. ' _' → logprob: -3.8500399589538574
    7. 'dp' → logprob: -4.725039958953857
    8. 'j' → logprob: -6.350039958953857
    9. ' j' → logprob: -6.975039958953857
    10. ' dp' → logprob: -6.975039958953857

Token 81: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04311314597725868
    2. '0' → logprob: -3.6681132316589355
    3. '=' → logprob: -5.2931132316589355
    4. ']' → logprob: -5.4181132316589355
    5. ')' → logprob: -6.0431132316589355
    6. ' =' → logprob: -6.4181132316589355
    7. '][' → logprob: -6.7931132316589355
    8. ' [' → logprob: -7.5431132316589355
    9. 'for' → logprob: -7.6681132316589355
    10. ' ' → logprob: -9.043112754821777

Token 82: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034049857407808304
    2. '1' → logprob: -3.4090497493743896
    3. ' ' → logprob: -7.909049987792969
    4. '4' → logprob: -10.409049987792969
    5. '2' → logprob: -12.409049987792969
    6. '3' → logprob: -14.034049987792969
    7. '=' → logprob: -14.284049987792969
    8. '[' → logprob: -15.596549987792969
    9. '5' → logprob: -16.15904998779297
    10. 's' → logprob: -16.72154998779297

Token 83: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02075161784887314
    2. ' for' → logprob: -3.895751714706421
    3. 'n' → logprob: -10.145751953125
    4. ' ' → logprob: -10.520751953125
    5. '=' → logprob: -10.895751953125
    6. 'if' → logprob: -10.895751953125
    7. ',' → logprob: -11.145751953125
    8. ')' → logprob: -11.395751953125
    9. '0' → logprob: -11.645751953125
    10. 'i' → logprob: -11.895751953125

Token 84: 'pas' (ID: 21122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6980294585227966
    2. 'for' → logprob: -0.6980294585227966
    3. ' for' → logprob: -5.948029518127441
    4. 'n' → logprob: -7.198029518127441
    5. 'i' → logprob: -7.698029518127441
    6. '#' → logprob: -8.448029518127441
    7. ' )' → logprob: -8.948029518127441
    8. ']' → logprob: -9.073029518127441
    9. 'f' → logprob: -9.323029518127441
    10. ')]' → logprob: -9.448029518127441

Token 85: ' super' (ID: 2539)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7575643062591553
    2. ' encore' → logprob: -2.0075643062591553
    3. 'd' → logprob: -2.3825643062591553
    4. 'for' → logprob: -3.5075643062591553
    5. 'com' → logprob: -3.7575643062591553
    6. ' de' → logprob: -4.007564544677734
    7. 'enc' → logprob: -4.007564544677734
    8. 'f' → logprob: -4.007564544677734
    9. 'tout' → logprob: -4.007564544677734
    10. 'possible' → logprob: -4.257564544677734

Token 86: ' clair' (ID: 71396)
  Prédit: 'optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimal' → logprob: -0.7716822028160095
    2. 'optim' → logprob: -2.1466822624206543
    3. ')' → logprob: -2.3966822624206543
    4. 'com' → logprob: -3.0216822624206543
    5. ' clair' → logprob: -3.5216822624206543
    6. 'de' → logprob: -3.6466822624206543
    7. 'opt' → logprob: -4.146682262420654
    8. ' sûr' → logprob: -4.146682262420654
    9. 'pr' → logprob: -4.146682262420654
    10. 'f' → logprob: -4.521682262420654

Token 87: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38731229305267334
    2. ' for' → logprob: -2.262312412261963
    3. ':' → logprob: -2.887312412261963
    4. 'for' → logprob: -2.887312412261963
    5. ',' → logprob: -3.262312412261963
    6. '
' → logprob: -3.512312412261963
    7. '<|end|>' → logprob: -3.637312412261963
    8. ' ' → logprob: -6.387312412261963
    9. '<|end|>' → logprob: -6.387312412261963
    10. '```' → logprob: -6.637312412261963

Token 88: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6911531686782837
    2. ' for' → logprob: -1.4411531686782837
    3. ' )' → logprob: -2.066153049468994
    4. 'for' → logprob: -2.191153049468994
    5. ' on' → logprob: -5.191153049468994
    6. '):' → logprob: -5.816153049468994
    7. 'pour' → logprob: -5.941153049468994
    8. ' pour' → logprob: -6.066153049468994
    9. ' c' → logprob: -6.316153049468994
    10. ' ):' → logprob: -7.316153049468994

Token 89: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.15782171487808228
    2. ''' → logprob: -2.0328216552734375
    3. ''était' → logprob: -5.2828216552734375
    4. 'e' → logprob: -6.0328216552734375
    5. ''s' → logprob: -6.5328216552734375
    6. 'a' → logprob: -6.5328216552734375
    7. '')' → logprob: -6.6578216552734375
    8. 'est' → logprob: -7.0328216552734375
    9. ''#' → logprob: -7.2828216552734375
    10. ''a' → logprob: -7.4078216552734375

Token 90: ' comme' (ID: 7971)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.3776764869689941
    2. 'la' → logprob: -1.7526764869689941
    3. 'just' → logprob: -2.377676486968994
    4. 'tout' → logprob: -2.752676486968994
    5. 'bon' → logprob: -2.877676486968994
    6. 'une' → logprob: -3.752676486968994
    7. 'ok' → logprob: -3.877676486968994
    8. 'f' → logprob: -3.877676486968994
    9. 'pour' → logprob: -3.877676486968994
    10. 'les' → logprob: -4.002676486968994

Token 91: ' ça' (ID: 13590)
  Prédit: 'ça'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ça' → logprob: -0.0240965373814106
    2. ' ça' → logprob: -4.774096488952637
    3. 'cela' → logprob: -5.149096488952637
    4. 'ca' → logprob: -5.149096488952637
    5. 'ç' → logprob: -7.149096488952637
    6. 'le' → logprob: -7.774096488952637
    7. 'une' → logprob: -7.899096488952637
    8. 'la' → logprob: -8.149096488952637
    9. 'pour' → logprob: -8.149096488952637
    10. 'dans' → logprob: -8.524096488952637

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9865145087242126
    2. 'for' → logprob: -1.3615145683288574
    3. ' for' → logprob: -1.4865145683288574
    4. '<|end|>' → logprob: -2.4865145683288574
    5. '
' → logprob: -3.3615145683288574
    6. ':' → logprob: -4.486514568328857
    7. ',' → logprob: -5.361514568328857
    8. ' ' → logprob: -5.611514568328857
    9. '<|end|>' → logprob: -5.986514568328857
    10. 'n' → logprob: -6.986514568328857

Token 93: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030347732827067375
    2. ' for' → logprob: -3.5303478240966797
    3. ' ' → logprob: -8.90534782409668
    4. '3' → logprob: -9.03034782409668
    5. 'range' → logprob: -9.53034782409668
    6. '<|end|>' → logprob: -10.03034782409668
    7. '   ' → logprob: -10.15534782409668
    8. '0' → logprob: -10.53034782409668
    9. '4' → logprob: -10.65534782409668
    10. '...' → logprob: -11.03034782409668

Token 94: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5105273127555847
    2. 'i' → logprob: -1.6355273723602295
    3. ' a' → logprob: -2.6355273723602295
    4. ' x' → logprob: -3.6355273723602295
    5. 'a' → logprob: -3.7605273723602295
    6. ' c' → logprob: -4.26052713394165
    7. ' n' → logprob: -4.63552713394165
    8. ' j' → logprob: -4.76052713394165
    9. ' d' → logprob: -5.13552713394165
    10. ' k' → logprob: -5.26052713394165

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06501840800046921
    2. 'in' → logprob: -2.81501841545105
    3. ' ' → logprob: -5.815018177032471
    4. '  ' → logprob: -10.565018653869629
    5. '0' → logprob: -11.440018653869629
    6. '1' → logprob: -11.940018653869629
    7. '	in' → logprob: -12.940018653869629
    8. '_' → logprob: -13.065018653869629
    9. ' ' → logprob: -13.065018653869629
    10. '<|end|>' → logprob: -13.190018653869629

Token 96: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02055053412914276
    2. ' range' → logprob: -3.895550489425659
    3. ' ' → logprob: -13.145550727844238
    4. '[' → logprob: -13.520550727844238
    5. '   ' → logprob: -13.770550727844238
    6. '	range' → logprob: -13.770550727844238
    7. '(range' → logprob: -13.895550727844238
    8. '0' → logprob: -14.020550727844238
    9. '  ' → logprob: -14.770550727844238
    10. '(' → logprob: -15.145550727844238

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016039881855249405
    2. '4' → logprob: -4.141039848327637
    3. ' (' → logprob: -12.641039848327637
    4. '(
' → logprob: -14.016039848327637
    5. ' ' → logprob: -14.641039848327637
    6. '```' → logprob: -14.641039848327637
    7. '1' → logprob: -14.766039848327637
    8. '3' → logprob: -16.141040802001953
    9. '()' → logprob: -16.391040802001953
    10. ')' → logprob: -16.391040802001953

Token 98: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.37503719329834
    3. '1' → logprob: -12.50003719329834
    4. '3' → logprob: -13.62503719329834
    5. ')' → logprob: -14.81253719329834
    6. '10' → logprob: -15.62503719329834
    7. '```' → logprob: -15.75003719329834
    8. '   ' → logprob: -15.81253719329834
    9. '0' → logprob: -16.500038146972656
    10. '  ' → logprob: -16.687538146972656

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007541201775893569
    2. '):
' → logprob: -7.500754356384277
    3. ' ):' → logprob: -8.875754356384277
    4. ')' → logprob: -10.250754356384277
    5. ':' → logprob: -11.625754356384277
    6. ']:' → logprob: -12.250754356384277
    7. '-' → logprob: -12.500754356384277
    8. '}:' → logprob: -12.750754356384277
    9. '4' → logprob: -13.500754356384277
    10. ' ' → logprob: -14.000754356384277

Token 100: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0907350704073906
    2. '   ' → logprob: -2.5907349586486816
    3. 'for' → logprob: -4.465734958648682
    4. ' ' → logprob: -8.96573543548584
    5. '	for' → logprob: -9.09073543548584
    6. '<|end|>' → logprob: -10.34073543548584
    7. '4' → logprob: -13.34073543548584
    8. ' range' → logprob: -13.46573543548584
    9. '  ' → logprob: -13.96573543548584
    10. '    ' → logprob: -14.84073543548584

Token 101: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008699782192707062
    2. ' for' → logprob: -4.758699893951416
    3. '   ' → logprob: -9.383699417114258
    4. ' ' → logprob: -13.758699417114258
    5. '	for' → logprob: -16.633699417114258
    6. '    ' → logprob: -18.008699417114258
    7. 'dp' → logprob: -18.383699417114258
    8. '  ' → logprob: -18.633699417114258
    9. '4' → logprob: -18.758699417114258
    10. 'range' → logprob: -20.883699417114258

Token 102: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22544515132904053
    2. ' j' → logprob: -1.6004451513290405
    3. ' ' → logprob: -11.100444793701172
    4. '4' → logprob: -11.350444793701172
    5. 'i' → logprob: -13.725444793701172
    6. '_j' → logprob: -13.975444793701172
    7. 'range' → logprob: -14.100444793701172
    8. ' range' → logprob: -14.475444793701172
    9. '0' → logprob: -14.850444793701172
    10. ' i' → logprob: -14.975444793701172

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03845511004328728
    2. 'in' → logprob: -3.288455009460449
    3. ' ' → logprob: -8.16345500946045
    4. '(' → logprob: -9.16345500946045
    5. '   ' → logprob: -11.78845500946045
    6. '  ' → logprob: -12.03845500946045
    7. ' i' → logprob: -13.28845500946045
    8. '1' → logprob: -14.03845500946045
    9. '    ' → logprob: -14.28845500946045
    10. 'i' → logprob: -14.41345500946045

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6335644125938416
    2. ' range' → logprob: -0.8835644125938416
    3. '4' → logprob: -2.8835644721984863
    4. ' ' → logprob: -9.758563995361328
    5. '(range' → logprob: -13.633563995361328
    6. '(' → logprob: -14.133563995361328
    7. 'for' → logprob: -14.883563995361328
    8. ' in' → logprob: -15.133563995361328
    9. 'in' → logprob: -15.258563995361328
    10. '0' → logprob: -16.008563995361328

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.011373155459296e-05
    2. '4' → logprob: -10.500030517578125
    3. '(i' → logprob: -13.125030517578125
    4. '(
' → logprob: -15.125030517578125
    5. ' (' → logprob: -15.375030517578125
    6. 'range' → logprob: -16.875030517578125
    7. ' ' → logprob: -17.000030517578125
    8. '((' → logprob: -17.000030517578125
    9. 'for' → logprob: -18.250030517578125
    10. 'i' → logprob: -18.250030517578125

Token 106: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.339278580620885e-06
    2. 'i' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '(' → logprob: -14.875001907348633
    5. '1' → logprob: -16.875001907348633
    6. '(i' → logprob: -17.375001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '3' → logprob: -18.750001907348633
    9. ' i' → logprob: -19.000001907348633
    10. '0' → logprob: -19.250001907348633

Token 107: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5242046117782593
    2. '):' → logprob: -0.8992046117782593
    3. ' :' → logprob: -7.649204730987549
    4. '():' → logprob: -8.64920425415039
    5. '):
' → logprob: -8.77420425415039
    6. '+:' → logprob: -9.27420425415039
    7. ',' → logprob: -9.89920425415039
    8. ']:' → logprob: -10.89920425415039
    9. ' ):' → logprob: -11.02420425415039
    10. 'in' → logprob: -11.14920425415039

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002826396143063903
    2. ' for' → logprob: -6.00282621383667
    3. 'for' → logprob: -8.502826690673828
    4. '<|end|>' → logprob: -9.877826690673828
    5. ':' → logprob: -10.627826690673828
    6. ',' → logprob: -10.627826690673828
    7. '   ' → logprob: -10.877826690673828
    8. '     ' → logprob: -12.002826690673828
    9. '    ' → logprob: -12.752826690673828
    10. '#' → logprob: -12.877826690673828

Token 109: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8327365517616272
    2. '       ' → logprob: -1.3327364921569824
    3. '   ' → logprob: -1.8327364921569824
    4. ' for' → logprob: -1.9577364921569824
    5. '    ' → logprob: -9.20773696899414
    6. '	for' → logprob: -9.45773696899414
    7. ' ' → logprob: -10.95773696899414
    8. '   ' → logprob: -11.70773696899414
    9. '	   ' → logprob: -11.83273696899414
    10. '     ' → logprob: -11.95773696899414

Token 110: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0024763736873865128
    2. ' k' → logprob: -6.002476215362549
    3. 'l' → logprob: -14.377476692199707
    4. 'x' → logprob: -17.62747573852539
    5. 'range' → logprob: -18.37747573852539
    6. 'r' → logprob: -18.75247573852539
    7. 'm' → logprob: -18.87747573852539
    8. ' l' → logprob: -19.12747573852539
    9. '_k' → logprob: -19.25247573852539
    10. ' ' → logprob: -19.25247573852539

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10024744272232056
    2. 'in' → logprob: -2.350247383117676
    3. ' ' → logprob: -10.475247383117676
    4. '   ' → logprob: -12.600247383117676
    5. '(' → logprob: -12.725247383117676
    6. '4' → logprob: -13.100247383117676
    7. '  ' → logprob: -13.350247383117676
    8. '```' → logprob: -14.600247383117676
    9. '1' → logprob: -15.350247383117676
    10. '0' → logprob: -15.475247383117676

Token 112: ' range' (ID: 3352)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.36683470010757446
    2. 'range' → logprob: -1.3668346405029297
    3. '(' → logprob: -3.1168346405029297
    4. ' range' → logprob: -4.86683464050293
    5. ' ' → logprob: -8.99183464050293
    6. '(range' → logprob: -10.24183464050293
    7. ' (' → logprob: -12.74183464050293
    8. 'for' → logprob: -12.99183464050293
    9. '   ' → logprob: -13.74183464050293
    10. 'int' → logprob: -14.24183464050293

Token 113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001503790495917201
    2. '4' → logprob: -6.501503944396973
    3. ' (' → logprob: -14.126503944396973
    4. ' ' → logprob: -14.751503944396973
    5. 'range' → logprob: -15.876503944396973
    6. '(
' → logprob: -16.501502990722656
    7. 'for' → logprob: -17.501502990722656
    8. ' range' → logprob: -18.501502990722656
    9. '   ' → logprob: -19.376502990722656
    10. '0' → logprob: -20.376502990722656

Token 114: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '3' → logprob: -16.75
    4. '   ' → logprob: -17.625
    5. ')' → logprob: -18.5
    6. 'range' → logprob: -18.5
    7. 'for' → logprob: -19.25
    8. '' → logprob: -19.75
    9. '(' → logprob: -19.75
    10. '```' → logprob: -19.75

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029872094746679068
    2. '):
' → logprob: -6.252987384796143
    3. ':' → logprob: -6.877987384796143
    4. ' ):' → logprob: -11.752986907958984
    5. '   ' → logprob: -12.127986907958984
    6. '():' → logprob: -12.627986907958984
    7. ')' → logprob: -12.752986907958984
    8. ',' → logprob: -13.377986907958984
    9. '):
' → logprob: -13.377986907958984
    10. '):

' → logprob: -13.627986907958984

Token 116: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0603082999587059
    2. '       ' → logprob: -3.5603082180023193
    3. '           ' → logprob: -3.6853082180023193
    4. ' :' → logprob: -5.935308456420898
    5. ':
' → logprob: -6.310308456420898
    6. '):' → logprob: -9.185308456420898
    7. '#' → logprob: -9.435308456420898
    8. '<|end|>' → logprob: -9.685308456420898
    9. '[' → logprob: -10.060308456420898
    10. '```' → logprob: -10.435308456420898

Token 117: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23976050317287445
    2. '               ' → logprob: -1.9897605180740356
    3. 'for' (adapté à ' for') → logprob: -3.239760398864746
    4. ' for' → logprob: -4.364760398864746
    5. ':
' → logprob: -4.739760398864746
    6. 'dp' → logprob: -4.739760398864746
    7. '           ' → logprob: -5.739760398864746
    8. ' dp' → logprob: -6.114760398864746
    9. '   ' → logprob: -7.489760398864746
    10. ' :' → logprob: -8.114760398864746

Token 118: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00420483248308301
    2. ' l' → logprob: -5.879204750061035
    3. 'm' → logprob: -6.754204750061035
    4. 'h' → logprob: -10.004204750061035
    5. 't' → logprob: -10.379204750061035
    6. 'w' → logprob: -10.504204750061035
    7. 'x' → logprob: -10.629204750061035
    8. 'u' → logprob: -11.254204750061035
    9. '   ' → logprob: -11.254204750061035
    10. 'a' → logprob: -11.379204750061035

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018180029466748238
    2. 'in' → logprob: -4.018179893493652
    3. ' ' → logprob: -11.393179893493652
    4. '   ' → logprob: -12.393179893493652
    5. '4' → logprob: -12.893179893493652
    6. '```' → logprob: -13.268179893493652
    7. 'range' → logprob: -13.518179893493652
    8. '  ' → logprob: -13.518179893493652
    9. 'd' → logprob: -13.893179893493652
    10. 'import' → logprob: -14.018179893493652

Token 120: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015041481237858534
    2. ' range' → logprob: -6.501503944396973
    3. '4' → logprob: -13.751503944396973
    4. '(' → logprob: -14.126503944396973
    5. '(range' → logprob: -16.75150489807129
    6. ' ' → logprob: -19.00150489807129
    7. '[' → logprob: -19.50150489807129
    8. '   ' → logprob: -19.87650489807129
    9. '	range' → logprob: -21.50150489807129
    10. 'rang' → logprob: -21.75150489807129

Token 121: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.869017852295656e-06
    2. 'range' → logprob: -12.000006675720215
    3. '4' → logprob: -15.375006675720215
    4. ' range' → logprob: -15.500006675720215
    5. ' (' → logprob: -16.00000762939453
    6. '(range' → logprob: -16.25000762939453
    7. '(
' → logprob: -18.25000762939453
    8. 'in' → logprob: -19.00000762939453
    9. 'Range' → logprob: -20.12500762939453
    10. ' ' → logprob: -20.12500762939453

Token 122: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.465036105713807e-06
    2. '3' → logprob: -12.625007629394531
    3. ' ' → logprob: -12.875007629394531
    4. '1' → logprob: -14.500007629394531
    5. 'k' → logprob: -15.000007629394531
    6. 'range' → logprob: -15.500007629394531
    7. '   ' → logprob: -15.750007629394531
    8. 'i' → logprob: -16.12500762939453
    9. ')' → logprob: -16.50000762939453
    10. '(' → logprob: -16.62500762939453

Token 123: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08003795146942139
    2. '):' → logprob: -2.580038070678711
    3. ')' → logprob: -7.080038070678711
    4. ' in' → logprob: -8.830038070678711
    5. ':
' → logprob: -9.955038070678711
    6. '):
' → logprob: -10.080038070678711
    7. ' :' → logprob: -10.580038070678711
    8. ']:' → logprob: -11.080038070678711
    9. '():' → logprob: -11.705038070678711
    10. ':**' → logprob: -13.080038070678711

Token 124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0047666458413004875
    2. ':' → logprob: -6.004766464233398
    3. 'dp' → logprob: -7.254766464233398
    4. '                               ' → logprob: -7.754766464233398
    5. '           ' → logprob: -8.129766464233398
    6. ' :' → logprob: -8.754766464233398
    7. ' dp' → logprob: -8.754766464233398
    8. '       ' → logprob: -9.379766464233398
    9. ':
' → logprob: -10.004766464233398
    10. '<|end|>' → logprob: -10.004766464233398

Token 125: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31031545996665955
    2. ' dp' → logprob: -1.810315489768982
    3. 'for' → logprob: -3.6853153705596924
    4. ' for' → logprob: -3.8103153705596924
    5. '                   ' → logprob: -3.9353153705596924
    6. '   ' → logprob: -4.0603156089782715
    7. '                               ' → logprob: -5.1853156089782715
    8. '               ' → logprob: -5.5603156089782715
    9. '                                   ' → logprob: -6.1853156089782715
    10. 'if' → logprob: -6.3103156089782715

Token 126: ' only' (ID: 1606)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.283927321434021
    2. 'if' → logprob: -1.533927321434021
    3. 'for' → logprob: -4.5339274406433105
    4. 'valid' → logprob: -4.9089274406433105
    5. 'val' → logprob: -5.4089274406433105
    6. '#' → logprob: -6.4089274406433105
    7. '   ' → logprob: -6.4089274406433105
    8. ' if' → logprob: -6.7839274406433105
    9. ' dp' → logprob: -7.4089274406433105
    10. 'ok' → logprob: -7.6589274406433105

Token 127: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1309005618095398
    2. ' if' → logprob: -2.5059006214141846
    3. 'dp' → logprob: -3.2559006214141846
    4. ' dp' → logprob: -6.8809003829956055
    5. '#' → logprob: -7.7559003829956055
    6. 'for' → logprob: -8.130900382995605
    7. 'print' → logprob: -8.880900382995605
    8. '[' → logprob: -9.130900382995605
    9. 'valid' → logprob: -9.505900382995605
    10. '               ' → logprob: -9.630900382995605

Token 128: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6073020100593567
    2. ' i' → logprob: -1.607301950454712
    3. '(i' → logprob: -1.857301950454712
    4. ' (' → logprob: -2.982301950454712
    5. 'l' → logprob: -4.107302188873291
    6. 'not' → logprob: -5.232302188873291
    7. ' not' → logprob: -5.232302188873291
    8. ' l' → logprob: -5.357302188873291
    9. 'k' → logprob: -5.607302188873291
    10. 'dp' → logprob: -5.982302188873291

Token 129: '==' (ID: 560)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5768138766288757
    2. ' !=' → logprob: -0.8268138766288757
    3. '==' → logprob: -7.826813697814941
    4. ' ==' → logprob: -9.326813697814941
    5. '+' → logprob: -9.576813697814941
    6. ' and' → logprob: -9.951813697814941
    7. 'and' → logprob: -10.326813697814941
    8. '>' → logprob: -10.326813697814941
    9. ' not' → logprob: -10.326813697814941
    10. ' >' → logprob: -10.826813697814941

Token 130: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.17367246747016907
    2. '0' → logprob: -1.9236724376678467
    3. 'k' → logprob: -5.173672676086426
    4. '1' → logprob: -5.798672676086426
    5. '3' → logprob: -6.048672676086426
    6. 'l' → logprob: -6.548672676086426
    7. '2' → logprob: -7.548672676086426
    8. ' ' → logprob: -9.298672676086426
    9. ' j' → logprob: -9.548672676086426
    10. '4' → logprob: -9.673672676086426

Token 131: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.42450374364852905
    2. ' or' → logprob: -1.1745038032531738
    3. 'and' → logprob: -3.424503803253174
    4. ':' → logprob: -5.674503803253174
    5. ' ' → logprob: -7.924503803253174
    6. 'or' → logprob: -8.549503326416016
    7. ',' → logprob: -9.299503326416016
    8. ' if' → logprob: -9.424503326416016
    9. ' :' → logprob: -9.924503326416016
    10. '   ' → logprob: -10.424503326416016

Token 132: 'b' (ID: 65)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3881067037582397
    2. ' and' → logprob: -1.3881067037582397
    3. 'and' → logprob: -1.6381067037582397
    4. 'j' → logprob: -1.7631067037582397
    5. ' or' → logprob: -2.7631068229675293
    6. 'l' → logprob: -3.6381068229675293
    7. '0' → logprob: -4.263106822967529
    8. 'or' → logprob: -4.388106822967529
    9. 'k' → logprob: -4.888106822967529
    10. ' j' → logprob: -5.138106822967529

Token 133: 'izarre' (ID: 54933)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6427930593490601
    2. ' or' → logprob: -1.26779305934906
    3. ')' → logprob: -1.76779305934906
    4. 'and' → logprob: -4.01779317855835
    5. ',' → logprob: -6.39279317855835
    6. '),' → logprob: -7.26779317855835
    7. 'or' → logprob: -7.39279317855835
    8. 'a' → logprob: -9.267792701721191
    9. ' a' → logprob: -9.267792701721191
    10. ' ' → logprob: -9.267792701721191

Token 134: ' mais' (ID: 2899)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08765575289726257
    2. ')' → logprob: -2.962655782699585
    3. ' and' → logprob: -3.587655782699585
    4. 'or' → logprob: -6.712655544281006
    5. '):' → logprob: -6.837655544281006
    6. 'and' → logprob: -6.837655544281006
    7. ' )' → logprob: -7.712655544281006
    8. '),' → logprob: -7.962655544281006
    9. ',' → logprob: -9.462656021118164
    10. '               ' → logprob: -9.587656021118164

Token 135: ' bon' (ID: 4846)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.2942290306091309
    2. 'j' → logprob: -2.044229030609131
    3. 'True' → logprob: -2.169229030609131
    4. ' l' → logprob: -2.169229030609131
    5. ' True' → logprob: -2.419229030609131
    6. 'l' → logprob: -2.669229030609131
    7. ' i' → logprob: -2.919229030609131
    8. ' k' → logprob: -3.044229030609131
    9. 'k' → logprob: -3.169229030609131
    10. 'i' → logprob: -3.669229030609131

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33687764406204224
    2. ' and' → logprob: -1.8368775844573975
    3. '               ' → logprob: -2.8368775844573975
    4. ' or' → logprob: -3.7118775844573975
    5. '):' → logprob: -3.7118775844573975
    6. '                   ' → logprob: -4.711877822875977
    7. '),' → logprob: -5.586877822875977
    8. '                ' → logprob: -6.836877822875977
    9. ' if' → logprob: -6.836877822875977
    10. ' )' → logprob: -6.836877822875977

Token 137: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42541614174842834
    2. '                   ' → logprob: -1.800416111946106
    3. '               ' → logprob: -1.925416111946106
    4. ' :' → logprob: -4.300415992736816
    5. ':
' → logprob: -5.300415992736816
    6. ' if' → logprob: -5.550415992736816
    7. ' and' → logprob: -5.550415992736816
    8. '                ' → logprob: -5.925415992736816
    9. '                       ' → logprob: -6.675415992736816
    10. '   ' → logprob: -6.800415992736816

Token 138: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6266087889671326
    2. 'if' (adapté à ' if') → logprob: -1.1266088485717773
    3. '                   ' → logprob: -2.3766088485717773
    4. 'dp' → logprob: -3.2516088485717773
    5. ' dp' → logprob: -4.876608848571777
    6. '               ' → logprob: -6.751608848571777
    7. '                               ' → logprob: -8.251608848571777
    8. '   ' → logprob: -8.501608848571777
    9. '                           ' → logprob: -8.876608848571777
    10. '                       ' → logprob: -9.376608848571777

Token 139: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009766476228833199
    2. 'i' → logprob: -4.634766578674316
    3. '(i' → logprob: -12.634766578674316
    4. ' ' → logprob: -12.759766578674316
    5. ' ' → logprob: -13.509766578674316
    6. ' j' → logprob: -14.384766578674316
    7. ' l' → logprob: -14.384766578674316
    8. ' (' → logprob: -14.634766578674316
    9. '	i' → logprob: -15.134766578674316
    10. 'j' → logprob: -15.259766578674316

Token 140: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3133239150047302
    2. ' ==' → logprob: -1.313323974609375
    3. ')' → logprob: -10.688323974609375
    4. ')==' → logprob: -11.313323974609375
    5. ']==' → logprob: -11.813323974609375
    6. '[' → logprob: -12.063323974609375
    7. '0' → logprob: -12.313323974609375
    8. '=' → logprob: -12.313323974609375
    9. '==
' → logprob: -13.938323974609375
    10. '!=' → logprob: -14.438323974609375

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. '1' → logprob: -16.1267032623291
    4. '   ' → logprob: -16.6267032623291
    5. '  ' → logprob: -17.7517032623291
    6. '=' → logprob: -18.6267032623291
    7. ' ' → logprob: -19.2517032623291
    8. '3' → logprob: -19.3142032623291
    9. '    ' → logprob: -19.5642032623291
    10. '
' → logprob: -19.8142032623291

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -19.000009536743164
    4. '1' → logprob: -19.250009536743164
    5. '  ' → logprob: -20.000009536743164
    6. '۰' → logprob: -20.500009536743164
    7. '```' → logprob: -20.937509536743164
    8. '=' → logprob: -21.125009536743164
    9. ' ' → logprob: -21.125009536743164
    10. '
' → logprob: -21.375009536743164

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05228044092655182
    2. ' and' → logprob: -3.0522804260253906
    3. ':
' → logprob: -6.052280426025391
    4. 'and' → logprob: -6.802280426025391
    5. ' :' → logprob: -8.92728042602539
    6. ' or' → logprob: -10.67728042602539
    7. '   ' → logprob: -10.92728042602539
    8. '                   ' → logprob: -11.30228042602539
    9. '):' → logprob: -11.55228042602539
    10. '                           ' → logprob: -11.80228042602539

Token 144: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18443720042705536
    2. ':' → logprob: -2.0594372749328613
    3. ':
' → logprob: -3.5594372749328613
    4. ' and' → logprob: -4.934437274932861
    5. '                       ' → logprob: -6.434437274932861
    6. 'dp' → logprob: -6.559437274932861
    7. '               ' → logprob: -6.684437274932861
    8. '                           ' → logprob: -8.309436798095703
    9. 'and' → logprob: -8.934436798095703
    10. ' :' → logprob: -9.059436798095703

Token 145: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.028257597237825394
    2. ' dp' → logprob: -3.7782576084136963
    3. '                   ' → logprob: -6.028257369995117
    4. 'for' → logprob: -6.528257369995117
    5. ' for' → logprob: -8.278257369995117
    6. 'if' → logprob: -8.528257369995117
    7. '                       ' → logprob: -8.528257369995117
    8. '   ' → logprob: -9.028257369995117
    9. '                               ' → logprob: -9.528257369995117
    10. '                           ' → logprob: -9.528257369995117

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013047587708570063
    2. '[N' → logprob: -9.125130653381348
    3. '3' → logprob: -11.000130653381348
    4. '[n' → logprob: -13.250130653381348
    5. '[i' → logprob: -13.750130653381348
    6. '1' → logprob: -14.500130653381348
    7. '```' → logprob: -14.875130653381348
    8. '0' → logprob: -15.000130653381348
    9. '][' → logprob: -15.375130653381348
    10. '   ' → logprob: -15.375130653381348

Token 147: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. '4' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '0' → logprob: -16.375
    5. '   ' → logprob: -17.875
    6. '[' → logprob: -18.625
    7. '1' → logprob: -19.125
    8. '```' → logprob: -19.5
    9. '2' → logprob: -20.0625
    10. '  ' → logprob: -20.25

Token 148: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0016493528382852674
    2. '[i' → logprob: -7.126649379730225
    3. '[' → logprob: -7.751649379730225
    4. ']' → logprob: -8.001648902893066
    5. '[j' → logprob: -9.751648902893066
    6. '[l' → logprob: -11.876648902893066
    7. ' ][' → logprob: -12.251648902893066
    8. '   ' → logprob: -13.251648902893066
    9. '[s' → logprob: -14.126648902893066
    10. ' ' → logprob: -14.126648902893066

Token 149: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5759521722793579
    2. 'i' → logprob: -0.8259521722793579
    3. 'k' → logprob: -11.825952529907227
    4. '0' → logprob: -12.575952529907227
    5. 'l' → logprob: -13.450952529907227
    6. ' j' → logprob: -15.200952529907227
    7. ' i' → logprob: -15.950952529907227
    8. ']' → logprob: -17.325952529907227
    9. 'ij' → logprob: -17.450952529907227
    10. '][' → logprob: -17.825952529907227

Token 150: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.931863051955588e-05
    2. ']' → logprob: -10.500059127807617
    3. '[j' → logprob: -10.875059127807617
    4. ' ][' → logprob: -12.000059127807617
    5. '[' → logprob: -12.250059127807617
    6. 'j' → logprob: -14.500059127807617
    7. '"][' → logprob: -15.250059127807617
    8. ',j' → logprob: -15.250059127807617
    9. ']][' → logprob: -15.375059127807617
    10. ''][' → logprob: -15.750059127807617

Token 151: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. ' j' → logprob: -14.75
    3. '0' → logprob: -20.25
    4. '	j' → logprob: -20.75
    5. '   ' → logprob: -21.25
    6. '$j' → logprob: -22.0
    7. 'jk' → logprob: -22.25
    8. ',j' → logprob: -22.375
    9. ':j' → logprob: -22.625
    10. 'k' → logprob: -22.75

Token 152: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00012082771718269214
    2. '[k' → logprob: -9.250121116638184
    3. 'k' → logprob: -11.625121116638184
    4. ']' → logprob: -11.875121116638184
    5. '[l' → logprob: -12.500121116638184
    6. ' ][' → logprob: -13.125121116638184
    7. '[' → logprob: -13.500121116638184
    8. '"][' → logprob: -14.250121116638184
    9. ''][' → logprob: -14.625121116638184
    10. '<|end|>' → logprob: -15.750121116638184

Token 153: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0280383548888494e-06
    2. ' k' → logprob: -14.375000953674316
    3. 'l' → logprob: -15.125000953674316
    4. 'kl' → logprob: -16.375001907348633
    5. '0' → logprob: -18.250001907348633
    6. '	k' → logprob: -18.750001907348633
    7. ',k' → logprob: -19.250001907348633
    8. '{k' → logprob: -19.250001907348633
    9. 'к' → logprob: -20.625001907348633
    10. '
' → logprob: -20.750001907348633

Token 154: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017183588352054358
    2. '[l' → logprob: -9.000171661376953
    3. ']' → logprob: -10.250171661376953
    4. 'l' → logprob: -11.500171661376953
    5. ' ][' → logprob: -13.500171661376953
    6. '"][' → logprob: -14.500171661376953
    7. ''][' → logprob: -15.250171661376953
    8. '(l' → logprob: -15.750171661376953
    9. '	l' → logprob: -16.375171661376953
    10. '   ' → logprob: -16.500171661376953

Token 155: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.392202976712724e-06
    2. ' l' → logprob: -12.375006675720215
    3. '0' → logprob: -13.500006675720215
    4. ' ' → logprob: -15.625006675720215
    5. '1' → logprob: -15.750006675720215
    6. '   ' → logprob: -16.1250057220459
    7. '
' → logprob: -16.2500057220459
    8. '4' → logprob: -16.3750057220459
    9. '	l' → logprob: -17.1250057220459
    10. '  ' → logprob: -18.0000057220459

Token 156: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.8590300139039755e-05
    2. ']=' → logprob: -10.125048637390137
    3. ']+=' → logprob: -12.375048637390137
    4. '=' → logprob: -12.625048637390137
    5. ' ]' → logprob: -14.250048637390137
    6. '1' → logprob: -16.12504768371582
    7. ')' → logprob: -17.12504768371582
    8. ' =' → logprob: -17.50004768371582
    9. ']+' → logprob: -18.87504768371582
    10. 's' → logprob: -19.12504768371582

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004106542561203241
    2. ' =' → logprob: -5.504106521606445
    3. '+=' → logprob: -10.504106521606445
    4. ' +=' → logprob: -14.379106521606445
    5. '1' → logprob: -16.879106521606445
    6. '＝' → logprob: -17.879106521606445
    7. '=int' → logprob: -18.004106521606445
    8. '[' → logprob: -18.379106521606445
    9. ']+=' → logprob: -18.754106521606445
    10. ']=' → logprob: -18.879106521606445

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.228561349213123e-05
    2. '(' → logprob: -10.500052452087402
    3. ' ' → logprob: -10.750052452087402
    4. 'int' → logprob: -13.250052452087402
    5. '0' → logprob: -14.375052452087402
    6. ' (' → logprob: -15.500052452087402
    7. '4' → logprob: -15.875052452087402
    8. '   ' → logprob: -16.125051498413086
    9. '(i' → logprob: -16.125051498413086
    10. '(int' → logprob: -16.437551498413086

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.249780638725497e-05
    2. '(' → logprob: -10.625032424926758
    3. 'int' → logprob: -12.500032424926758
    4. ' ' → logprob: -12.750032424926758
    5. '0' → logprob: -14.250032424926758
    6. '   ' → logprob: -15.625032424926758
    7. '4' → logprob: -15.750032424926758
    8. '(i' → logprob: -16.250032424926758
    9. ' (' → logprob: -16.375032424926758
    10. '(int' → logprob: -16.625032424926758

Token 160: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9433696269989014
    2. '<|end|>' → logprob: -0.9433696269989014
    3. '\n' → logprob: -1.6933696269989014
    4. ')' → logprob: -4.9433698654174805
    5. 'for' → logprob: -5.0683698654174805
    6. ' ' → logprob: -5.4433698654174805
    7. '#' → logprob: -5.8183698654174805
    8. 'newline' → logprob: -6.0683698654174805
    9. '    
' → logprob: -6.1933698654174805
    10. '<|end|>' → logprob: -6.1933698654174805

Token 161: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5539014339447021
    2. '<|end|>' → logprob: -1.9289014339447021
    3. 'for' → logprob: -2.428901433944702
    4. ' for' → logprob: -3.053901433944702
    5. ' ' → logprob: -3.053901433944702
    6. ' 
' → logprob: -3.303901433944702
    7. '\n' → logprob: -3.428901433944702
    8. ')' → logprob: -4.303901672363281
    9. ':' → logprob: -5.553901672363281
    10. '   ' → logprob: -6.678901672363281

Token 162: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.610702363715973e-06
    2. ' for' → logprob: -12.000009536743164
    3. 'range' → logprob: -13.250009536743164
    4. 'i' → logprob: -14.000009536743164
    5. 'def' → logprob: -14.875009536743164
    6. '_' → logprob: -15.375009536743164
    7. 'n' → logprob: -15.500009536743164
    8. '_for' → logprob: -17.750009536743164
    9. '#' → logprob: -17.875009536743164
    10. '```' → logprob: -18.250009536743164

Token 163: ' interdit' (ID: 129427)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2690500319004059
    2. 'range' → logprob: -1.8940500020980835
    3. ' range' → logprob: -3.019050121307373
    4. ' for' → logprob: -3.519050121307373
    5. '_' → logprob: -6.519050121307373
    6. ' ' → logprob: -6.644050121307373
    7. '_range' → logprob: -7.144050121307373
    8. '=' → logprob: -7.394050121307373
    9. 'n' → logprob: -7.769050121307373
    10. 'f' → logprob: -8.019049644470215

Token 164: ' certains' (ID: 30681)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7429297566413879
    2. ' for' → logprob: -2.117929697036743
    3. ' ' → logprob: -2.242929697036743
    4. 's' → logprob: -2.492929697036743
    5. ' =' → logprob: -2.492929697036743
    6. 'def' → logprob: -4.242929935455322
    7. '<|end|>' → logprob: -4.242929935455322
    8. ' sequences' → logprob: -4.492929935455322
    9. '_sequences' → logprob: -4.492929935455322
    10. '(' → logprob: -4.992929935455322

Token 165: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.35094156861305237
    2. 'trip' → logprob: -2.3509416580200195
    3. ' trip' → logprob: -2.6009416580200195
    4. ' motifs' → logprob: -2.9759416580200195
    5. ' sequences' → logprob: -4.1009416580200195
    6. ' patterns' → logprob: -4.2259416580200195
    7. 's' → logprob: -4.3509416580200195
    8. '<|end|>' → logprob: -4.9759416580200195
    9. 'mot' → logprob: -5.2259416580200195
    10. ' quadru' → logprob: -5.8509416580200195

Token 166: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6994324922561646
    2. ' for' → logprob: -1.1994324922561646
    3. '<|end|>' → logprob: -2.199432373046875
    4. '
' → logprob: -2.699432373046875
    5. ' ' → logprob: -4.449432373046875
    6. '#' → logprob: -5.949432373046875
    7. '<|end|>' → logprob: -6.199432373046875
    8. '  
' → logprob: -6.324432373046875
    9. ' 
' → logprob: -6.699432373046875
    10. ',' → logprob: -6.824432373046875

Token 167: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0809587240219116
    2. 'les' → logprob: -1.4559587240219116
    3. ' ' → logprob: -1.7059587240219116
    4. '4' → logprob: -1.8309587240219116
    5. ' la' → logprob: -3.955958843231201
    6. 'l' → logprob: -4.580958843231201
    7. '3' → logprob: -4.580958843231201
    8. ' l' → logprob: -4.955958843231201
    9. ' le' → logprob: -5.080958843231201
    10. 'la' → logprob: -5.205958843231201

Token 168: ' "' (ID: 392)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.2128299474716187
    2. ' next' → logprob: -1.5878299474716187
    3. 'next' → logprob: -1.5878299474716187
    4. 'i' → logprob: -2.587830066680908
    5. 'n' → logprob: -2.962830066680908
    6. '4' → logprob: -3.462830066680908
    7. 'N' → logprob: -3.587830066680908
    8. 'for' → logprob: -3.837830066680908
    9. 'range' → logprob: -4.087830066680908
    10. ' ' → logprob: -4.337830066680908

Token 169: 'queue' (ID: 9409)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.9016846418380737
    2. 'ligne' → logprob: -2.0266847610473633
    3. 's' → logprob: -2.2766847610473633
    4. 'i' → logprob: -2.5266847610473633
    5. 'l' → logprob: -2.5266847610473633
    6. 'next' → logprob: -2.7766847610473633
    7. ' ' → logprob: -2.9016847610473633
    8. 'chaine' → logprob: -2.9016847610473633
    9. 'n' → logprob: -3.4016847610473633
    10. '4' → logprob: -3.9016847610473633

Token 170: '"
' (ID: 1092)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4588276147842407
    2. ' ,' → logprob: -2.083827495574951
    3. ')' → logprob: -2.958827495574951
    4. ',' → logprob: -3.333827495574951
    5. ':' → logprob: -3.333827495574951
    6. '<|end|>' → logprob: -4.083827495574951
    7. ' )' → logprob: -4.208827495574951
    8. ' :' → logprob: -4.458827495574951
    9. '   ' → logprob: -4.583827495574951
    10. ' of' → logprob: -4.583827495574951

Token 171: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28563302755355835
    2. '
' → logprob: -2.285633087158203
    3. ' for' → logprob: -2.410633087158203
    4. ' ' → logprob: -3.785633087158203
    5. ' 
' → logprob: -4.785633087158203
    6. '<|end|>' → logprob: -5.285633087158203
    7. '\n' → logprob: -5.285633087158203
    8. 'n' → logprob: -5.410633087158203
    9. ':' → logprob: -5.660633087158203
    10. '#' → logprob: -5.910633087158203

Token 172: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0374794639647007
    2. ' n' → logprob: -3.7874794006347656
    3. 'i' → logprob: -4.912479400634766
    4. ' l' → logprob: -6.787479400634766
    5. ' j' → logprob: -6.787479400634766
    6. ' ' → logprob: -7.162479400634766
    7. ' x' → logprob: -7.162479400634766
    8. ' _' → logprob: -7.537479400634766
    9. ' range' → logprob: -7.912479400634766
    10. 'n' → logprob: -8.162479400634766

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2815060317516327
    2. 'in' → logprob: -1.406506061553955
    3. ' ' → logprob: -8.281505584716797
    4. ',' → logprob: -10.031505584716797
    5. '0' → logprob: -11.281505584716797
    6. '  ' → logprob: -11.781505584716797
    7. 'n' → logprob: -12.156505584716797
    8. '   ' → logprob: -12.281505584716797
    9. '```' → logprob: -12.406505584716797
    10. '1' → logprob: -12.656505584716797

Token 174: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3506436347961426
    2. ' range' → logprob: -1.2256436347961426
    3. '0' → logprob: -6.225643634796143
    4. '[' → logprob: -9.475643157958984
    5. ' ' → logprob: -9.725643157958984
    6. '4' → logprob: -9.725643157958984
    7. ' [' → logprob: -11.350643157958984
    8. '1' → logprob: -12.600643157958984
    9. '(' → logprob: -13.475643157958984
    10. ' in' → logprob: -13.725643157958984

Token 175: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0036067210603505373
    2. '4' → logprob: -5.628606796264648
    3. '1' → logprob: -12.503606796264648
    4. ' (' → logprob: -13.753606796264648
    5. '(
' → logprob: -14.253606796264648
    6. ' ' → logprob: -14.628606796264648
    7. '3' → logprob: -15.378606796264648
    8. '```' → logprob: -15.753606796264648
    9. ')' → logprob: -15.878606796264648
    10. '5' → logprob: -16.00360679626465

Token 176: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.7252845029579476e-05
    2. '1' → logprob: -10.750027656555176
    3. ' ' → logprob: -12.375027656555176
    4. '3' → logprob: -14.500027656555176
    5. 'N' → logprob: -14.750027656555176
    6. '0' → logprob: -15.500027656555176
    7. '```' → logprob: -15.750027656555176
    8. '2' → logprob: -16.12502670288086
    9. '   ' → logprob: -16.68752670288086
    10. '
' → logprob: -17.31252670288086

Token 177: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006794593762606382
    2. '):
' → logprob: -5.006794452667236
    3. ' ):' → logprob: -10.506794929504395
    4. ')' → logprob: -10.881794929504395
    5. '   ' → logprob: -11.256794929504395
    6. ':' → logprob: -12.006794929504395
    7. ' ' → logprob: -12.131794929504395
    8. '4' → logprob: -13.006794929504395
    9. '):
' → logprob: -13.256794929504395
    10. '+' → logprob: -13.381794929504395

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027664790395647287
    2. ' for' → logprob: -6.0027666091918945
    3. 'for' → logprob: -8.252766609191895
    4. '	for' → logprob: -10.627766609191895
    5. ' ' → logprob: -12.752766609191895
    6. '   ' → logprob: -13.377766609191895
    7. '       ' → logprob: -14.502766609191895
    8. '  ' → logprob: -14.877766609191895
    9. '<|end|>' → logprob: -15.002766609191895
    10. '    ' → logprob: -15.502766609191895

Token 179: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1889774054288864
    2. '   ' → logprob: -1.9389773607254028
    3. ' for' → logprob: -3.5639774799346924
    4. ' ' → logprob: -11.188977241516113
    5. '	for' → logprob: -12.688977241516113
    6. '       ' → logprob: -14.813977241516113
    7. '  ' → logprob: -15.188977241516113
    8. '    ' → logprob: -16.06397819519043
    9. '
' → logprob: -16.56397819519043
    10. '    
' → logprob: -16.81397819519043

Token 180: ' franchement' (ID: 182681)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05143130570650101
    2. ' for' → logprob: -3.42643141746521
    3. '   ' → logprob: -4.051431179046631
    4. ' ' → logprob: -8.801431655883789
    5. 'j' → logprob: -9.926431655883789
    6. 'if' → logprob: -11.301431655883789
    7. '  ' → logprob: -12.051431655883789
    8. '    ' → logprob: -12.176431655883789
    9. ' j' → logprob: -12.926431655883789
    10. '	for' → logprob: -13.051431655883789

Token 181: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2843807637691498
    2. ' for' → logprob: -1.7843807935714722
    3. 'for' → logprob: -2.5343806743621826
    4. ' ' → logprob: -8.909380912780762
    5. ' if' → logprob: -9.659380912780762
    6. '    ' → logprob: -10.534380912780762
    7. '	for' → logprob: -10.784380912780762
    8. 'if' → logprob: -10.909380912780762
    9. '       ' → logprob: -11.034380912780762
    10. '  ' → logprob: -11.159380912780762

Token 182: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.08950074762105942
    2. 'for' → logprob: -2.464500665664673
    3. 'o' → logprob: -8.714500427246094
    4. 'continue' → logprob: -8.839500427246094
    5. ' for' → logprob: -9.589500427246094
    6. 'on' → logprob: -10.339500427246094
    7. 'om' → logprob: -10.839500427246094
    8. '#' → logprob: -10.964500427246094
    9. 'i' → logprob: -11.214500427246094
    10. 'range' → logprob: -11.339500427246094

Token 183: ' pas' (ID: 2173)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49256494641304016
    2. '4' → logprob: -1.2425649166107178
    3. 'i' → logprob: -3.3675649166107178
    4. 'dp' → logprob: -3.6175649166107178
    5. ' ' → logprob: -4.117565155029297
    6. 'j' → logprob: -5.242565155029297
    7. '   ' → logprob: -5.992565155029297
    8. 'l' → logprob: -6.242565155029297
    9. 'range' → logprob: -6.242565155029297
    10. '```' → logprob: -6.367565155029297

Token 184: ' hyper' (ID: 22725)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9595407247543335
    2. ' ' → logprob: -1.4595407247543335
    3. 'clear' → logprob: -2.834540843963623
    4. ' clear' → logprob: -2.959540843963623
    5. '   ' → logprob: -3.084540843963623
    6. ' i' → logprob: -3.084540843963623
    7. 'range' → logprob: -3.209540843963623
    8. 'i' → logprob: -3.459540843963623
    9. '(' → logprob: -4.084540843963623
    10. 'possible' → logprob: -4.709540843963623

Token 185: ' lis' (ID: 20784)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clear' → logprob: -1.176660418510437
    2. 'clair' → logprob: -1.176660418510437
    3. ' clair' → logprob: -1.426660418510437
    4. ' clear' → logprob: -2.1766605377197266
    5. ' cl' → logprob: -5.301660537719727
    6. ' ' → logprob: -5.426660537719727
    7. 'cl' → logprob: -5.551660537719727
    8. 'clar' → logprob: -5.676660537719727
    9. ' claire' → logprob: -5.801660537719727
    10. 'optimal' → logprob: -6.051660537719727

Token 186: 'ible' (ID: 1430)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.03508766368031502
    2. 'té' → logprob: -3.5350875854492188
    3. 't' → logprob: -5.410087585449219
    4. '­te' → logprob: -7.785087585449219
    5. 'tes' → logprob: -9.535087585449219
    6. 'tte' → logprob: -10.035087585449219
    7. ' te' → logprob: -10.160087585449219
    8. 'e' → logprob: -10.535087585449219
    9. 'те' → logprob: -10.660087585449219
    10. '#' → logprob: -10.660087585449219

Token 187: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11890526115894318
    2. ':' → logprob: -2.9939053058624268
    3. ' for' → logprob: -3.7439053058624268
    4. ':
' → logprob: -4.118905067443848
    5. 'for' → logprob: -4.743905067443848
    6. '       ' → logprob: -5.118905067443848
    7. '
' → logprob: -6.368905067443848
    8. '    
' → logprob: -6.618905067443848
    9. '    ' → logprob: -6.868905067443848
    10. ' if' → logprob: -7.243905067443848

Token 188: ' faudrait' (ID: 128958)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0181024074554443
    2. '   ' → logprob: -1.1431024074554443
    3. ' for' → logprob: -1.1431024074554443
    4. '                   ' → logprob: -8.393102645874023
    5. '       ' → logprob: -8.643102645874023
    6. '    ' → logprob: -9.143102645874023
    7. '                               ' → logprob: -9.268102645874023
    8. ' ' → logprob: -9.518102645874023
    9. '                           ' → logprob: -9.518102645874023
    10. '	for' → logprob: -9.518102645874023

Token 189: ' une' (ID: 2463)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.6858108043670654
    2. 'comment' → logprob: -1.3108108043670654
    3. 'aj' → logprob: -2.5608108043670654
    4. 'pe' → logprob: -3.5608108043670654
    5. 'faire' → logprob: -4.1858110427856445
    6. 'une' → logprob: -4.1858110427856445
    7. 'raj' → logprob: -4.4358110427856445
    8. 'clar' → logprob: -4.5608110427856445
    9. 'put' → logprob: -4.9358110427856445
    10. 'rem' → logprob: -4.9358110427856445

Token 190: ' fonction' (ID: 17610)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.48919275403022766
    2. 'def' → logprob: -1.6141927242279053
    3. 'for' → logprob: -2.7391927242279053
    4. 'break' → logprob: -2.8641927242279053
    5. 'range' → logprob: -4.239192962646484
    6. 'better' → logprob: -4.614192962646484
    7. '#' → logprob: -5.114192962646484
    8. 'comment' → logprob: -5.114192962646484
    9. 'if' → logprob: -5.489192962646484
    10. '```' → logprob: -5.614192962646484

Token 191: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15822549164295197
    2. ' for' → logprob: -2.1582255363464355
    3. 'for' → logprob: -3.6582255363464355
    4. ' if' → logprob: -6.0332255363464355
    5. ' ' → logprob: -7.1582255363464355
    6. '    ' → logprob: -7.1582255363464355
    7. '       ' → logprob: -8.283225059509277
    8. '  ' → logprob: -8.908225059509277
    9. 'if' → logprob: -9.158225059509277
    10. '	for' → logprob: -9.408225059509277

Token 192: ' j' (ID: 441)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.1440949440002441
    2. '   ' → logprob: -1.1440949440002441
    3. ' continue' → logprob: -2.144094944000244
    4. ' for' → logprob: -2.519094944000244
    5. ' True' → logprob: -2.769094944000244
    6. 'continue' → logprob: -3.019094944000244
    7. ' i' → logprob: -4.144094944000244
    8. 'for' → logprob: -4.769094944000244
    9. ' pass' → logprob: -4.894094944000244
    10. 'True' → logprob: -5.269094944000244

Token 193: ''ai' (ID: 12480)
  Prédit: 'ust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -1.3966964483261108
    2. 'continue' → logprob: -1.6466964483261108
    3. ''ai' → logprob: -3.0216965675354004
    4. 'avascript' → logprob: -3.0216965675354004
    5. '['' → logprob: -3.1466965675354004
    6. '```' → logprob: -3.1466965675354004
    7. ' continue' → logprob: -3.3966965675354004
    8. 'udge' → logprob: -3.3966965675354004
    9. 'oueur' → logprob: -3.5216965675354004
    10. 'for' → logprob: -3.6466965675354004

Token 194: ' la' (ID: 557)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.22114461660385132
    2. 'continue' → logprob: -2.221144676208496
    3. '   ' → logprob: -3.471144676208496
    4. ' for' → logprob: -4.471144676208496
    5. '    ' → logprob: -4.721144676208496
    6. 'for' → logprob: -4.846144676208496
    7. ' break' → logprob: -4.971144676208496
    8. '```' → logprob: -5.471144676208496
    9. ' range' → logprob: -5.846144676208496
    10. ' ' → logprob: -5.971144676208496

Token 195: ' f' (ID: 285)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.6059011220932007
    2. 'poss' → logprob: -2.6059012413024902
    3. 'place' → logprob: -2.7309012413024902
    4. 'time' → logprob: -3.3559012413024902
    5. 'main' → logprob: -3.6059012413024902
    6. 'fin' → logprob: -3.6059012413024902
    7. 'space' → logprob: -3.7309012413024902
    8. ' suite' → logprob: -3.8559012413024902
    9. '```' → logprob: -3.9809012413024902
    10. 'continu' → logprob: -3.9809012413024902

Token 196: 'lemme' (ID: 142088)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3655710816383362
    2. 'o' → logprob: -1.2405710220336914
    3. 'orce' → logprob: -5.365571022033691
    4. 'e' → logprob: -5.740571022033691
    5. 'orget' → logprob: -6.990571022033691
    6. 'oise' → logprob: -6.990571022033691
    7. ' or' → logprob: -7.240571022033691
    8. 'oint' → logprob: -7.490571022033691
    9. 'oi' → logprob: -7.615571022033691
    10. 'ort' → logprob: -7.740571022033691

Token 197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07394997030496597
    2. '       ' → logprob: -2.8239500522613525
    3. 'for' → logprob: -5.198949813842773
    4. ' for' → logprob: -6.073949813842773
    5. ':' → logprob: -6.448949813842773
    6. '           ' → logprob: -7.698949813842773
    7. '    
' → logprob: -7.698949813842773
    8. '    ' → logprob: -7.823949813842773
    9. '               ' → logprob: -7.948949813842773
    10. '
' → logprob: -8.323949813842773

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08583848923444748
    2. 'for' → logprob: -3.460838556289673
    3. ' for' → logprob: -3.585838556289673
    4. '       ' → logprob: -4.210838317871094
    5. 'if' → logprob: -6.210838317871094
    6. ' if' → logprob: -6.335838317871094
    7. '    
' → logprob: -6.335838317871094
    8. '
' → logprob: -6.585838317871094
    9. ' ' → logprob: -7.835838317871094
    10. '    ' → logprob: -7.960838317871094

Token 199: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5543609857559204
    2. '   ' → logprob: -1.1793609857559204
    3. ' for' → logprob: -2.429360866546631
    4. 'if' → logprob: -3.804360866546631
    5. ' if' → logprob: -5.054360866546631
    6. ' ' → logprob: -7.554360866546631
    7. '       ' → logprob: -8.429361343383789
    8. 'dp' (adapté à ' dp') → logprob: -8.679361343383789
    9. '           ' → logprob: -9.304361343383789
    10. '    ' → logprob: -9.429361343383789

Token 200: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032320173922926188
    2. '[N' → logprob: -5.753232002258301
    3. '[n' → logprob: -10.1282320022583
    4. '```' → logprob: -12.8782320022583
    5. '[-' → logprob: -13.0032320022583
    6. '[:' → logprob: -13.8782320022583
    7. ' [' → logprob: -13.8782320022583
    8. '3' → logprob: -14.2532320022583
    9. '\[' → logprob: -14.2532320022583
    10. '[len' → logprob: -14.3782320022583

Token 201: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.023580865934491158
    2. '4' → logprob: -3.77358078956604
    3. ' ' → logprob: -8.148580551147461
    4. ')' → logprob: -10.773580551147461
    5. '```' → logprob: -12.523580551147461
    6. ']' → logprob: -12.648580551147461
    7. '
' → logprob: -12.773580551147461
    8. '   ' → logprob: -12.836080551147461
    9. '  ' → logprob: -13.148580551147461
    10. 'N' → logprob: -13.461080551147461

Token 202: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008388153510168195
    2. ']' → logprob: -7.250838756561279
    3. '[' → logprob: -9.375839233398438
    4. ' ][' → logprob: -10.375839233398438
    5. ' ' → logprob: -12.750839233398438
    6. '])' → logprob: -13.500839233398438
    7. ']][' → logprob: -13.750839233398438
    8. '[i' → logprob: -13.875839233398438
    9. ')[' → logprob: -13.875839233398438
    10. '   ' → logprob: -14.125839233398438

Token 203: 'i' (ID: 72)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19219975173473358
    2. 'i' → logprob: -1.81719970703125
    3. '1' → logprob: -4.44219970703125
    4. '3' → logprob: -7.69219970703125
    5. '2' → logprob: -10.19219970703125
    6. ' i' → logprob: -10.19219970703125
    7. ' ' → logprob: -10.19219970703125
    8. '(i' → logprob: -12.00469970703125
    9. '
' → logprob: -12.06719970703125
    10. '4' → logprob: -12.19219970703125

Token 204: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00016349162615370005
    2. ']' → logprob: -8.875163078308105
    3. '0' → logprob: -11.500163078308105
    4. '[' → logprob: -12.000163078308105
    5. ' ][' → logprob: -12.625163078308105
    6. ']==' → logprob: -14.125163078308105
    7. ' ' → logprob: -14.500163078308105
    8. '][-' → logprob: -14.625163078308105
    9. ']
' → logprob: -14.750163078308105
    10. '][:' → logprob: -15.187663078308105

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028779760003089905
    2. '1' → logprob: -3.6537797451019287
    3. '3' → logprob: -6.278779983520508
    4. '2' → logprob: -7.778779983520508
    5. 'i' → logprob: -8.903779983520508
    6. '

' → logprob: -11.466279983520508
    7. 'j' → logprob: -11.528779983520508
    8. '
' → logprob: -11.716279983520508
    9. ' ' → logprob: -12.153779983520508
    10. '   ' → logprob: -12.966279983520508

Token 206: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005325406673364341
    2. ']' → logprob: -7.875532627105713
    3. '0' → logprob: -9.000532150268555
    4. '[' → logprob: -11.500532150268555
    5. ' ][' → logprob: -12.125532150268555
    6. '1' → logprob: -12.250532150268555
    7. 'j' → logprob: -13.500532150268555
    8. ']==' → logprob: -14.000532150268555
    9. ']][' → logprob: -14.250532150268555
    10. '[i' → logprob: -14.250532150268555

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21531760692596436
    2. '0' → logprob: -1.8403176069259644
    3. '3' → logprob: -4.090317726135254
    4. '2' → logprob: -4.215317726135254
    5. 'i' → logprob: -5.715317726135254
    6. 'j' → logprob: -9.340317726135254
    7. 'k' → logprob: -10.715317726135254
    8. '
' → logprob: -11.715317726135254
    9. '(i' → logprob: -12.715317726135254
    10. '_' → logprob: -12.777817726135254

Token 208: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009716100175864995
    2. '[' → logprob: -8.000971794128418
    3. ']' → logprob: -8.250971794128418
    4. '0' → logprob: -8.625971794128418
    5. '1' → logprob: -9.500971794128418
    6. '2' → logprob: -9.500971794128418
    7. ' ][' → logprob: -10.625971794128418
    8. '3' → logprob: -11.750971794128418
    9. '"][' → logprob: -13.063471794128418
    10. ''][' → logprob: -13.188471794128418

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7722094655036926
    2. '3' → logprob: -0.7722094655036926
    3. '0' → logprob: -2.647209405899048
    4. '1' → logprob: -5.272209644317627
    5. '
' → logprob: -11.584709167480469
    6. ' ' → logprob: -12.084709167480469
    7. '   ' → logprob: -12.147209167480469
    8. '

' → logprob: -12.647209167480469
    9. '_' → logprob: -12.772209167480469
    10. 'i' → logprob: -12.959709167480469

Token 210: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007270866190083325
    2. ']=' → logprob: -7.50072717666626
    3. ' ]' → logprob: -9.125726699829102
    4. ']==' → logprob: -10.875726699829102
    5. ']+=' → logprob: -11.375726699829102
    6. '0' → logprob: -11.375726699829102
    7. '][' → logprob: -12.375726699829102
    8. '[' → logprob: -12.625726699829102
    9. '4' → logprob: -12.750726699829102
    10. '1' → logprob: -12.750726699829102

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'mod' → logprob: -15.125001907348633
    4. '(' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '(mod' → logprob: -16.500001907348633
    7. '           ' → logprob: -18.125001907348633
    8. '```' → logprob: -18.750001907348633
    9. '     ' → logprob: -18.875001907348633
    10. '=' → logprob: -19.000001907348633

Token 212: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14964789152145386
    2. '
' → logprob: -2.7746479511260986
    3. '<|end|>' → logprob: -3.5246479511260986
    4. ' dp' → logprob: -4.3996477127075195
    5. '   ' → logprob: -4.6496477127075195
    6. ')' → logprob: -4.8996477127075195
    7. ' ' → logprob: -5.1496477127075195
    8. '(dp' → logprob: -5.7746477127075195
    9. 'for' → logprob: -6.2746477127075195
    10. '	dp' → logprob: -6.5246477127075195

Token 214: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0015963915502652526
    2. 'for' → logprob: -6.751596450805664
    3. ' dp' → logprob: -8.251596450805664
    4. '   ' → logprob: -9.751596450805664
    5. ' for' → logprob: -10.251596450805664
    6. ')' → logprob: -11.001596450805664
    7. '[' → logprob: -11.626596450805664
    8. ']' → logprob: -11.751596450805664
    9. '	dp' → logprob: -12.001596450805664
    10. ' ' → logprob: -12.001596450805664

Token 215: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.0
    3. '3' → logprob: -16.625
    4. ' [' → logprob: -18.75
    5. '﻿' → logprob: -19.375
    6. '​' → logprob: -19.5
    7. '\[' → logprob: -19.5
    8. '[
' → logprob: -19.875
    9. '[...]' → logprob: -20.25
    10. '...' → logprob: -20.5

Token 216: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.0
    4. '[' → logprob: -19.125
    5. '   ' → logprob: -20.375
    6. '  ' → logprob: -21.375
    7. '３' → logprob: -21.625
    8. '4' → logprob: -22.25
    9. '۳' → logprob: -22.75
    10. '-' → logprob: -22.875

Token 217: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001485462300479412
    2. '[i' → logprob: -6.626485347747803
    3. '[' → logprob: -9.376485824584961
    4. ' ][' → logprob: -10.126485824584961
    5. ']' → logprob: -11.001485824584961
    6. '}[' → logprob: -11.251485824584961
    7. '```' → logprob: -14.001485824584961
    8. '[][' → logprob: -14.001485824584961
    9. ' ' → logprob: -14.251485824584961
    10. ')[' → logprob: -14.626485824584961

Token 218: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023386869579553604
    2. '0' → logprob: -3.7733869552612305
    3. '3' → logprob: -9.39838695526123
    4. '1' → logprob: -10.14838695526123
    5. ' i' → logprob: -11.52338695526123
    6. '2' → logprob: -12.39838695526123
    7. 'j' → logprob: -13.52338695526123
    8. ' ' → logprob: -14.14838695526123
    9. '(i' → logprob: -14.52338695526123
    10. '[i' → logprob: -14.77338695526123

Token 219: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004628057591617107
    2. '[' → logprob: -5.3796281814575195
    3. ' ][' → logprob: -12.75462818145752
    4. ']' → logprob: -13.00462818145752
    5. '}[' → logprob: -13.87962818145752
    6. '0' → logprob: -14.75462818145752
    7. ''][' → logprob: -14.87962818145752
    8. '   ' → logprob: -15.25462818145752
    9. '"][' → logprob: -16.004627227783203
    10. '```' → logprob: -16.129627227783203

Token 220: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2603901015827432e-05
    2. '1' → logprob: -10.750022888183594
    3. ' ' → logprob: -14.750022888183594
    4. '2' → logprob: -15.312522888183594
    5. '[' → logprob: -15.812522888183594
    6. '3' → logprob: -16.125022888183594
    7. '０' → logprob: -16.437522888183594
    8. '۰' → logprob: -16.812522888183594
    9. '   ' → logprob: -17.437522888183594
    10. '
' → logprob: -18.000022888183594

Token 221: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.8908587662735954e-05
    2. '[' → logprob: -11.125019073486328
    3. ']' → logprob: -12.625019073486328
    4. ' ][' → logprob: -14.375019073486328
    5. '0' → logprob: -15.375019073486328
    6. ''][' → logprob: -17.125019073486328
    7. '"][' → logprob: -18.125019073486328
    8. '```' → logprob: -18.875019073486328
    9. '   ' → logprob: -19.250019073486328
    10. '}[' → logprob: -19.875019073486328

Token 222: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017648482753429562
    2. '2' → logprob: -8.875176429748535
    3. '3' → logprob: -10.375176429748535
    4. '1' → logprob: -12.937676429748535
    5. '``' → logprob: -14.437676429748535
    6. '```' → logprob: -14.437676429748535
    7. '

' → logprob: -14.750176429748535
    8. '
' → logprob: -15.000176429748535
    9. '-' → logprob: -15.500176429748535
    10. '   ' → logprob: -15.562676429748535

Token 223: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00014001218369230628
    2. '[' → logprob: -9.000140190124512
    3. ''][' → logprob: -12.250140190124512
    4. '2' → logprob: -12.500140190124512
    5. '"][' → logprob: -13.000140190124512
    6. '1' → logprob: -13.375140190124512
    7. ' ][' → logprob: -13.375140190124512
    8. '3' → logprob: -13.875140190124512
    9. ']' → logprob: -14.250140190124512
    10. '}[' → logprob: -14.375140190124512

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '3' → logprob: -16.875
    3. ' ' → logprob: -17.5
    4. '２' → logprob: -18.875
    5. '۲' → logprob: -19.125
    6. '   ' → logprob: -19.375
    7. '0' → logprob: -20.75
    8. '२' → logprob: -21.375
    9. '
' → logprob: -21.375
    10. '

' → logprob: -21.5

Token 225: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0032029079739004374
    2. ']' → logprob: -5.75320291519165
    3. '=' → logprob: -10.753202438354492
    4. ']+=' → logprob: -13.753202438354492
    5. '']=' → logprob: -14.128202438354492
    6. '}=' → logprob: -14.128202438354492
    7. '"]=' → logprob: -14.253202438354492
    8. ']=-' → logprob: -14.878202438354492
    9. ')=' → logprob: -15.628202438354492
    10. ']]=' → logprob: -16.628202438354492

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '1' → logprob: -19.75
    4. '۰' → logprob: -20.4375
    5. '=' → logprob: -21.0
    6. '000' → logprob: -21.5625
    7. '00' → logprob: -21.75
    8. '```' → logprob: -22.25
    9. 'dp' → logprob: -22.375
    10. 'mod' → logprob: -22.4375

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00699301203712821
    2. 'dp' → logprob: -5.131992816925049
    3. '<|end|>' → logprob: -7.381992816925049
    4. ' dp' → logprob: -9.006993293762207
    5. ' ' → logprob: -9.756993293762207
    6. '
' → logprob: -9.756993293762207
    7. '[' → logprob: -10.131993293762207
    8. '    
' → logprob: -10.131993293762207
    9. '	dp' → logprob: -10.381993293762207
    10. '0' → logprob: -10.631993293762207

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09078667312860489
    2. 'dp' → logprob: -2.4657866954803467
    3. ' dp' → logprob: -7.215786457061768
    4. '  ' → logprob: -7.965786457061768
    5. ' ' → logprob: -8.340786933898926
    6. '<|end|>' → logprob: -8.340786933898926
    7. '	dp' → logprob: -10.090786933898926
    8. '    
' → logprob: -10.090786933898926
    9. '
' → logprob: -10.340786933898926
    10. '```' → logprob: -10.965786933898926

Token 229: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.3438327843905427e-05
    2. 'for' → logprob: -11.37502384185791
    3. ' dp' → logprob: -11.75002384185791
    4. '0' → logprob: -12.87502384185791
    5. '[' → logprob: -14.37502384185791
    6. '	dp' → logprob: -15.00002384185791
    7. '(dp' → logprob: -15.87502384185791
    8. '_dp' → logprob: -16.000022888183594
    9. '#' → logprob: -17.250022888183594
    10. 'd' → logprob: -17.375022888183594

Token 230: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -16.875
    3. '3' → logprob: -18.25
    4. '\[' → logprob: -18.625
    5. ' [' → logprob: -19.0
    6. '[
' → logprob: -21.0
    7. '`' → logprob: -21.0
    8. '[[' → logprob: -21.25
    9. '﻿' → logprob: -21.625
    10. '​' → logprob: -22.375

Token 231: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.75
    4. '4' → logprob: -18.625
    5. '[' → logprob: -19.25
    6. '   ' → logprob: -19.5625
    7. '' → logprob: -19.9375
    8. '３' → logprob: -20.3125
    9. '  ' → logprob: -21.0
    10. '۳' → logprob: -21.0625

Token 232: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007236333331093192
    2. '[' → logprob: -7.250723838806152
    3. ' ][' → logprob: -11.875723838806152
    4. ']' → logprob: -13.000723838806152
    5. '3' → logprob: -13.000723838806152
    6. '   ' → logprob: -14.000723838806152
    7. '[i' → logprob: -14.375723838806152
    8. 'i' → logprob: -15.625723838806152
    9. ''][' → logprob: -15.875723838806152
    10. '"][' → logprob: -16.500722885131836

Token 233: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019404153572395444
    2. '3' → logprob: -6.2519402503967285
    3. '0' → logprob: -12.251940727233887
    4. '[i' → logprob: -13.126940727233887
    5. ' i' → logprob: -13.251940727233887
    6. '1' → logprob: -13.251940727233887
    7. '2' → logprob: -13.626940727233887
    8. '[' → logprob: -16.37693977355957
    9. 'j' → logprob: -16.87693977355957
    10. '```' → logprob: -16.87693977355957

Token 234: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00017648482753429562
    2. '[' → logprob: -8.750176429748535
    3. '0' → logprob: -11.875176429748535
    4. ']' → logprob: -12.375176429748535
    5. ' ][' → logprob: -12.375176429748535
    6. '1' → logprob: -14.375176429748535
    7. '[i' → logprob: -14.875176429748535
    8. '3' → logprob: -15.125176429748535
    9. '   ' → logprob: -15.250176429748535
    10. ''][' → logprob: -15.375176429748535

Token 235: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007506418041884899
    2. '0' → logprob: -5.382506370544434
    3. '2' → logprob: -6.132506370544434
    4. '3' → logprob: -7.257506370544434
    5. 'i' → logprob: -12.507506370544434
    6. ' ' → logprob: -14.445006370544434
    7. '```' → logprob: -15.195006370544434
    8. '[' → logprob: -15.382506370544434
    9. '   ' → logprob: -15.382506370544434
    10. '
' → logprob: -15.820006370544434

Token 236: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.9504606825648807e-05
    2. '[' → logprob: -11.125019073486328
    3. ']' → logprob: -12.625019073486328
    4. ' ][' → logprob: -14.250019073486328
    5. '0' → logprob: -15.375019073486328
    6. ''][' → logprob: -15.625019073486328
    7. '3' → logprob: -16.125019073486328
    8. '1' → logprob: -16.750019073486328
    9. '"][' → logprob: -17.125019073486328
    10. ']][' → logprob: -17.875019073486328

Token 237: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004083743318915367
    2. '2' → logprob: -5.504083633422852
    3. '0' → logprob: -12.504083633422852
    4. '
' → logprob: -14.879083633422852
    5. '3' → logprob: -15.004083633422852
    6. '```' → logprob: -15.754083633422852
    7. '[' → logprob: -15.816583633422852
    8. '   ' → logprob: -15.879083633422852
    9. ' ' → logprob: -16.31658363342285
    10. 'j' → logprob: -16.81658363342285

Token 238: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004340391140431166
    2. '[' → logprob: -6.254340171813965
    3. '3' → logprob: -6.379340171813965
    4. '1' → logprob: -7.379340171813965
    5. ']' → logprob: -10.504340171813965
    6. ''][' → logprob: -10.879340171813965
    7. '0' → logprob: -11.379340171813965
    8. '2' → logprob: -11.879340171813965
    9. '"][' → logprob: -11.879340171813965
    10. '   ' → logprob: -12.379340171813965

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '3' → logprob: -15.125000953674316
    3. '１' → logprob: -16.625
    4. '0' → logprob: -16.75
    5. '
' → logprob: -17.25
    6. ' ' → logprob: -17.875
    7. '   ' → logprob: -18.125
    8. '[' → logprob: -18.375
    9. '```' → logprob: -19.25
    10. '

' → logprob: -19.375

Token 240: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.003982823807746172
    2. ']' → logprob: -5.628983020782471
    3. '=' → logprob: -7.878983020782471
    4. '']=' → logprob: -13.378982543945312
    5. '"]=' → logprob: -14.003982543945312
    6. '}=' → logprob: -14.253982543945312
    7. ')=' → logprob: -15.253982543945312
    8. '0' → logprob: -15.378982543945312
    9. ']+=' → logprob: -15.503982543945312
    10. ' ]' → logprob: -16.128982543945312

Token 241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '=' → logprob: -18.0
    4. '۰' → logprob: -20.375
    5. '1' → logprob: -20.875
    6. '```' → logprob: -21.125
    7. '<|end|>' → logprob: -21.75
    8. '2' → logprob: -22.375
    9. '00' → logprob: -22.5
    10. '０' → logprob: -22.75

Token 242: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30689337849617004
    2. 'dp' → logprob: -1.6818933486938477
    3. '<|end|>' → logprob: -2.9318933486938477
    4. '
' → logprob: -4.431893348693848
    5. ' ' → logprob: -5.556893348693848
    6. '    
' → logprob: -6.431893348693848
    7. '<|end|>' → logprob: -6.681893348693848
    8. '               ' → logprob: -7.056893348693848
    9. 'for' → logprob: -7.306893348693848
    10. ')' → logprob: -7.431893348693848

Token 243: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001171652227640152
    2. ' for' → logprob: -7.126171588897705
    3. 'n' → logprob: -8.001172065734863
    4. '
' → logprob: -10.751172065734863
    5. 'range' → logprob: -12.626172065734863
    6. '```' → logprob: -12.876172065734863
    7. 'N' → logprob: -14.001172065734863
    8. ')' → logprob: -14.126172065734863
    9. '<|end|>' → logprob: -14.751172065734863
    10. '#' → logprob: -14.876172065734863

Token 244: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.046716172248125076
    2. 'i' → logprob: -3.2967162132263184
    3. ' n' → logprob: -5.171716213226318
    4. ' _' → logprob: -6.421716213226318
    5. '_' → logprob: -7.796716213226318
    6. ' x' → logprob: -8.42171573638916
    7. 'n' → logprob: -8.54671573638916
    8. ' ' → logprob: -8.92171573638916
    9. ' range' → logprob: -9.42171573638916
    10. ' j' → logprob: -9.79671573638916

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20148088037967682
    2. 'in' → logprob: -1.7014808654785156
    3. ' ' → logprob: -10.451480865478516
    4. 'n' → logprob: -11.201480865478516
    5. '1' → logprob: -11.951480865478516
    6. '+' → logprob: -12.826480865478516
    7. '```' → logprob: -13.076480865478516
    8. '   ' → logprob: -13.451480865478516
    9. 'range' → logprob: -13.576480865478516
    10. '[' → logprob: -13.951480865478516

Token 246: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008618119172751904
    2. ' range' → logprob: -4.758618354797363
    3. '4' → logprob: -13.258618354797363
    4. ' ' → logprob: -13.758618354797363
    5. '(range' → logprob: -15.633618354797363
    6. '   ' → logprob: -15.758618354797363
    7. 'in' → logprob: -15.883618354797363
    8. ' in' → logprob: -16.258617401123047
    9. '  ' → logprob: -16.633617401123047
    10. '(' → logprob: -17.258617401123047

Token 247: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009115827269852161
    2. '4' → logprob: -7.000911712646484
    3. '3' → logprob: -17.000911712646484
    4. ' (' → logprob: -18.250911712646484
    5. ' ' → logprob: -18.250911712646484
    6. '   ' → logprob: -20.625911712646484
    7. '(
' → logprob: -21.125911712646484
    8. '=' → logprob: -21.625911712646484
    9. '(n' → logprob: -22.750911712646484
    10. '	' → logprob: -22.750911712646484

Token 248: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.318681188422488e-05
    2. '3' → logprob: -11.87501335144043
    3. ' ' → logprob: -12.00001335144043
    4. '   ' → logprob: -18.12501335144043
    5. '(' → logprob: -19.62501335144043
    6. '４' → logprob: -19.62501335144043
    7. '  ' → logprob: -19.75001335144043
    8. '    ' → logprob: -20.12501335144043
    9. '```' → logprob: -20.87501335144043
    10. ')' → logprob: -21.25001335144043

Token 249: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009273029863834381
    2. ',N' → logprob: -7.000927448272705
    3. ' ,' → logprob: -11.375926971435547
    4. ',n' → logprob: -12.375926971435547
    5. ',len' → logprob: -17.125926971435547
    6. 'N' → logprob: -17.250926971435547
    7. ',
' → logprob: -17.750926971435547
    8. '，' → logprob: -18.500926971435547
    9. ',(' → logprob: -19.000926971435547
    10. ',M' → logprob: -19.125926971435547

Token 250: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006379772676154971
    2. '):' → logprob: -8.000638008117676
    3. ' +' → logprob: -8.125638008117676
    4. '):
' → logprob: -12.375638008117676
    5. '+
' → logprob: -14.500638008117676
    6. '+:' → logprob: -14.750638008117676
    7. '```' → logprob: -15.125638008117676
    8. '{' → logprob: -15.500638008117676
    9. '
' → logprob: -15.500638008117676
    10. '   ' → logprob: -15.875638008117676

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.500012397766113
    4. ')' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.375011444091797
    6. '
' → logprob: -17.625011444091797
    7. '2' → logprob: -17.937511444091797
    8. '):
' → logprob: -18.000011444091797
    9. ',' → logprob: -18.437511444091797
    10. '...' → logprob: -19.250011444091797

Token 252: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009700604132376611
    2. ':' → logprob: -7.125969886779785
    3. '):
' → logprob: -8.750969886779785
    4. ')' → logprob: -12.375969886779785
    5. ']:' → logprob: -13.500969886779785
    6. ' ):' → logprob: -14.000969886779785
    7. '}:' → logprob: -15.125969886779785
    8. '():' → logprob: -16.1259708404541
    9. ',' → logprob: -16.6259708404541
    10. ':)' → logprob: -16.6259708404541

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002550219651311636
    2. ' for' → logprob: -6.62755012512207
    3. '    ' → logprob: -8.00255012512207
    4. '       ' → logprob: -8.50255012512207
    5. 'for' → logprob: -8.50255012512207
    6. '    
' → logprob: -9.00255012512207
    7. '   ' → logprob: -9.37755012512207
    8. '	for' → logprob: -9.62755012512207
    9. ' ' → logprob: -9.87755012512207
    10. '<|end|>' → logprob: -10.50255012512207

Token 254: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023367883637547493
    2. ' for' → logprob: -3.7733678817749023
    3. '   ' → logprob: -9.023367881774902
    4. 'i' → logprob: -14.398367881774902
    5. ' ' → logprob: -14.398367881774902
    6. '	for' → logprob: -14.523367881774902
    7. '    ' → logprob: -16.27336883544922
    8. '       ' → logprob: -16.77336883544922
    9. 'a' → logprob: -17.39836883544922
    10. '
' → logprob: -17.89836883544922

Token 255: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.025919830426573753
    2. 'a' → logprob: -3.9009199142456055
    3. ' i' → logprob: -5.2759199142456055
    4. ' a' → logprob: -9.525919914245605
    5. 'j' → logprob: -9.900919914245605
    6. 'ii' → logprob: -10.150919914245605
    7. 'x' → logprob: -10.525919914245605
    8. 'w' → logprob: -11.525919914245605
    9. 'o' → logprob: -11.650919914245605
    10. 'l' → logprob: -11.900919914245605

Token 256: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018167614936828613
    2. 'in' → logprob: -4.018167495727539
    3. ' ' → logprob: -11.768167495727539
    4. '0' → logprob: -12.268167495727539
    5. '   ' → logprob: -13.018167495727539
    6. '  ' → logprob: -14.643167495727539
    7. '1' → logprob: -14.768167495727539
    8. '(' → logprob: -15.018167495727539
    9. '	in' → logprob: -15.143167495727539
    10. ')' → logprob: -15.393167495727539

Token 257: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048605985939502716
    2. ' range' → logprob: -3.0486059188842773
    3. '0' → logprob: -10.923605918884277
    4. '4' → logprob: -14.548605918884277
    5. ' ' → logprob: -16.298606872558594
    6. '[' → logprob: -17.423606872558594
    7. '(range' → logprob: -17.673606872558594
    8. '   ' → logprob: -17.798606872558594
    9. '(' → logprob: -18.298606872558594
    10. '
' → logprob: -19.048606872558594

Token 258: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00033558503491804004
    2. '4' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.000335693359375
    4. ' (' → logprob: -17.000335693359375
    5. '0' → logprob: -17.750335693359375
    6. '   ' → logprob: -17.750335693359375
    7. 'range' → logprob: -18.750335693359375
    8. '(
' → logprob: -18.875335693359375
    9. '
' → logprob: -18.875335693359375
    10. ')' → logprob: -20.500335693359375

Token 259: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.394135612528771e-05
    2. '0' → logprob: -10.125043869018555
    3. ' ' → logprob: -12.500043869018555
    4. '1' → logprob: -16.125043869018555
    5. '   ' → logprob: -17.625043869018555
    6. '3' → logprob: -17.875043869018555
    7. 'range' → logprob: -18.500043869018555
    8. '
' → logprob: -18.750043869018555
    9. '(' → logprob: -18.875043869018555
    10. '```' → logprob: -19.625043869018555

Token 260: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08631296455860138
    2. '):' → logprob: -2.586313009262085
    3. '   ' → logprob: -5.086312770843506
    4. ':' → logprob: -7.461312770843506
    5. ':
' → logprob: -7.586312770843506
    6. '       ' → logprob: -9.711313247680664
    7. ')' → logprob: -10.586313247680664
    8. ',' → logprob: -10.961313247680664
    9. '):
' → logprob: -11.461313247680664
    10. ',j' → logprob: -12.961313247680664

Token 261: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1401863545179367
    2. '       ' → logprob: -2.140186309814453
    3. ' for' → logprob: -4.640186309814453
    4. 'for' → logprob: -5.765186309814453
    5. '	for' → logprob: -8.265186309814453
    6. '   ' → logprob: -10.140186309814453
    7. ' ' → logprob: -10.390186309814453
    8. '	   ' → logprob: -10.390186309814453
    9. '	' → logprob: -11.890186309814453
    10. '    ' → logprob: -12.515186309814453

Token 262: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0797547698020935
    2. ' for' → logprob: -2.5797548294067383
    3. '   ' → logprob: -7.079754829406738
    4. '	for' → logprob: -11.329754829406738
    5. '       ' → logprob: -12.329754829406738
    6. ' ' → logprob: -12.454754829406738
    7. 'j' → logprob: -13.204754829406738
    8. ' j' → logprob: -15.204754829406738
    9. '           ' → logprob: -15.829754829406738
    10. '  ' → logprob: -16.579753875732422

Token 263: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3134084641933441
    2. ' j' → logprob: -1.3134084939956665
    3. '0' → logprob: -8.938408851623535
    4. ' ' → logprob: -11.563408851623535
    5. '   ' → logprob: -12.313408851623535
    6. '	j' → logprob: -14.063408851623535
    7. ',j' → logprob: -15.438408851623535
    8. 'range' → logprob: -16.68840789794922
    9. '    ' → logprob: -16.68840789794922
    10. '$j' → logprob: -16.68840789794922

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300820827484131
    2. 'in' → logprob: -3.168008327484131
    3. '(' → logprob: -12.918007850646973
    4. ' ' → logprob: -13.168007850646973
    5. '   ' → logprob: -13.293007850646973
    6. '0' → logprob: -14.668007850646973
    7. '```' → logprob: -14.793007850646973
    8. '	in' → logprob: -15.168007850646973
    9. 'for' → logprob: -15.293007850646973
    10. '4' → logprob: -15.293007850646973

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014066426083445549
    2. ' range' → logprob: -4.764066219329834
    3. '(' → logprob: -5.264066219329834
    4. '4' → logprob: -8.264066696166992
    5. '(range' → logprob: -12.264066696166992
    6. '[' → logprob: -15.889066696166992
    7. ' ' → logprob: -16.139066696166992
    8. 'for' → logprob: -16.514066696166992
    9. ' (' → logprob: -17.139066696166992
    10. '   ' → logprob: -17.514066696166992

Token 266: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006156065966933966
    2. 'in' → logprob: -6.006155967712402
    3. ' in' → logprob: -6.506155967712402
    4. 'range' → logprob: -7.006155967712402
    5. ' range' → logprob: -7.381155967712402
    6. ' (' → logprob: -7.631155967712402
    7. '4' → logprob: -8.756155967712402
    8. ' ' → logprob: -12.506155967712402
    9. '(range' → logprob: -13.256155967712402
    10. '```' → logprob: -14.631155967712402

Token 267: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'range' → logprob: -15.500003814697266
    4. '   ' → logprob: -17.375003814697266
    5. ' range' → logprob: -18.000003814697266
    6. 'for' → logprob: -19.500003814697266
    7. '       ' → logprob: -19.875003814697266
    8. ')' → logprob: -20.125003814697266
    9. ' four' → logprob: -20.375003814697266
    10. '(' → logprob: -20.625003814697266

Token 268: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030218899250030518
    2. '):' → logprob: -4.155219078063965
    3. ',' → logprob: -5.905219078063965
    4. ':' → logprob: -5.905219078063965
    5. '           ' → logprob: -5.905219078063965
    6. '       ' → logprob: -6.280219078063965
    7. ' in' → logprob: -6.780219078063965
    8. ':
' → logprob: -6.905219078063965
    9. '():
' → logprob: -7.905219078063965
    10. '   ' → logprob: -7.905219078063965

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11452970653772354
    2. 'for' → logprob: -2.739529609680176
    3. ' for' → logprob: -3.364529609680176
    4. '       ' → logprob: -4.739529609680176
    5. '	       ' → logprob: -8.489529609680176
    6. '   ' → logprob: -10.614529609680176
    7. '               ' → logprob: -11.364529609680176
    8. '	for' → logprob: -11.364529609680176
    9. '		' → logprob: -11.614529609680176
    10. '         ' → logprob: -11.739529609680176

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06201978027820587
    2. ' for' → logprob: -2.8120198249816895
    3. '           ' → logprob: -9.937019348144531
    4. '               ' → logprob: -13.187019348144531
    5. '	for' → logprob: -14.437019348144531
    6. ' ' → logprob: -14.687019348144531
    7. '   ' → logprob: -14.687019348144531
    8. 'k' → logprob: -15.062019348144531
    9. ' k' → logprob: -15.937019348144531
    10. '       ' → logprob: -17.68701934814453

Token 271: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07889407873153687
    2. ' k' → logprob: -2.5788941383361816
    3. 'range' → logprob: -13.328893661499023
    4. ' range' → logprob: -14.078893661499023
    5. '0' → logprob: -14.078893661499023
    6. 'l' → logprob: -14.703893661499023
    7. ' ' → logprob: -15.203893661499023
    8. '   ' → logprob: -15.328893661499023
    9. ' l' → logprob: -16.078893661499023
    10. '4' → logprob: -17.078893661499023

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016043519601225853
    2. 'in' → logprob: -4.141043663024902
    3. '   ' → logprob: -12.516043663024902
    4. ' ' → logprob: -13.266043663024902
    5. '(' → logprob: -14.141043663024902
    6. '       ' → logprob: -14.266043663024902
    7. 'import' → logprob: -14.641043663024902
    8. 'range' → logprob: -14.891043663024902
    9. '4' → logprob: -15.016043663024902
    10. '    ' → logprob: -15.266043663024902

Token 273: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1533198356628418
    2. '(' → logprob: -2.153319835662842
    3. ' range' → logprob: -3.653319835662842
    4. '4' → logprob: -9.0283203125
    5. '(range' → logprob: -11.2783203125
    6. ' (' → logprob: -12.0283203125
    7. 'in' → logprob: -13.6533203125
    8. ' in' → logprob: -14.5283203125
    9. ' ' → logprob: -14.5283203125
    10. '[' → logprob: -15.1533203125

Token 274: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.08944896562025e-05
    2. '4' → logprob: -9.625081062316895
    3. 'range' → logprob: -11.250081062316895
    4. ' range' → logprob: -14.000081062316895
    5. ' (' → logprob: -14.250081062316895
    6. 'for' → logprob: -15.125081062316895
    7. ' ' → logprob: -17.750080108642578
    8. '(range' → logprob: -18.375080108642578
    9. 'in' → logprob: -19.000080108642578
    10. '           ' → logprob: -19.250080108642578

Token 275: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'range' → logprob: -14.00000286102295
    4. 'for' → logprob: -15.25000286102295
    5. '   ' → logprob: -17.625003814697266
    6. ' range' → logprob: -17.875003814697266
    7. '(' → logprob: -18.625003814697266
    8. '       ' → logprob: -19.250003814697266
    9. '           ' → logprob: -19.250003814697266
    10. '               ' → logprob: -19.687503814697266

Token 276: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1455736756324768
    2. '):' → logprob: -2.020573616027832
    3. ':' → logprob: -6.645573616027832
    4. '               ' → logprob: -7.645573616027832
    5. ':
' → logprob: -7.895573616027832
    6. '           ' → logprob: -8.020573616027832
    7. ')' → logprob: -8.895573616027832
    8. '):
' → logprob: -10.145573616027832
    9. '```' → logprob: -10.270573616027832
    10. '):

' → logprob: -10.520573616027832

Token 277: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11898569762706757
    2. ' for' → logprob: -2.618985652923584
    3. 'for' → logprob: -3.243985652923584
    4. '			' → logprob: -9.493986129760742
    5. '   ' → logprob: -9.618986129760742
    6. '	for' → logprob: -9.993986129760742
    7. '           ' → logprob: -10.118986129760742
    8. '	           ' → logprob: -10.743986129760742
    9. ' ' → logprob: -11.868986129760742
    10. '<|end|>' → logprob: -11.993986129760742

Token 278: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06218939647078514
    2. ' for' → logprob: -2.8121893405914307
    3. 'l' → logprob: -8.562189102172852
    4. ' l' → logprob: -11.812189102172852
    5. '   ' → logprob: -11.937189102172852
    6. '                   ' → logprob: -12.062189102172852
    7. ' ' → logprob: -12.062189102172852
    8. '               ' → logprob: -13.187189102172852
    9. '	for' → logprob: -13.187189102172852
    10. '                           ' → logprob: -14.937189102172852

Token 279: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.020551113411784172
    2. ' l' → logprob: -3.8955512046813965
    3. '   ' → logprob: -12.020550727844238
    4. ' ' → logprob: -13.395550727844238
    5. '0' → logprob: -14.020550727844238
    6. '	l' → logprob: -14.895550727844238
    7. '  ' → logprob: -15.395550727844238
    8. '
' → logprob: -16.520551681518555
    9. '(l' → logprob: -17.020551681518555
    10. '```' → logprob: -17.145551681518555

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08901994675397873
    2. 'in' → logprob: -2.464020013809204
    3. ')' → logprob: -10.839019775390625
    4. ' ' → logprob: -11.089019775390625
    5. '<|end|>' → logprob: -11.089019775390625
    6. '	in' → logprob: -11.839019775390625
    7. '0' → logprob: -13.214019775390625
    8. '   ' → logprob: -13.214019775390625
    9. '(' → logprob: -13.214019775390625
    10. '[' → logprob: -13.464019775390625

Token 281: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03731720149517059
    2. '(' → logprob: -3.7873172760009766
    3. ' range' → logprob: -4.287317276000977
    4. '4' → logprob: -8.412317276000977
    5. '(range' → logprob: -12.162317276000977
    6. '[' → logprob: -12.787317276000977
    7. ' ' → logprob: -14.912317276000977
    8. '   ' → logprob: -15.162317276000977
    9. '               ' → logprob: -15.912317276000977
    10. ' (' → logprob: -15.912317276000977

Token 282: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.464347173576243e-05
    2. ' (' → logprob: -10.37503433227539
    3. ' in' → logprob: -13.62503433227539
    4. 'in' → logprob: -14.00003433227539
    5. 'range' → logprob: -14.37503433227539
    6. '4' → logprob: -14.50003433227539
    7. ' range' → logprob: -16.12503433227539
    8. '   ' → logprob: -16.87503433227539
    9. '[' → logprob: -17.12503433227539
    10. '           ' → logprob: -18.00003433227539

Token 283: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.127333340875339e-06
    2. 'range' → logprob: -12.750003814697266
    3. '(' → logprob: -14.000003814697266
    4. ' ' → logprob: -16.000003814697266
    5. '0' → logprob: -16.250003814697266
    6. '   ' → logprob: -16.875003814697266
    7. '               ' → logprob: -18.500003814697266
    8. '           ' → logprob: -18.750003814697266
    9. '(range' → logprob: -19.125003814697266
    10. '       ' → logprob: -19.125003814697266

Token 284: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004140141885727644
    2. '):
' → logprob: -5.629140377044678
    3. ':' → logprob: -7.754140377044678
    4. ')' → logprob: -9.12913990020752
    5. '):
' → logprob: -14.25413990020752
    6. '):

' → logprob: -14.75413990020752
    7. '}:' → logprob: -15.12913990020752
    8. ':
' → logprob: -15.87913990020752
    9. '```' → logprob: -16.004140853881836
    10. ']:' → logprob: -16.004140853881836

Token 285: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006240414455533028
    2. '                           ' → logprob: -5.881240367889404
    3. '                       ' → logprob: -6.881240367889404
    4. ':' → logprob: -7.381240367889404
    5. '               ' → logprob: -7.881240367889404
    6. '   ' → logprob: -8.131240844726562
    7. 'for' → logprob: -8.256240844726562
    8. ' for' → logprob: -8.631240844726562
    9. '           ' → logprob: -8.756240844726562
    10. '                               ' → logprob: -8.756240844726562

Token 286: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004076147451996803
    2. 'dp' → logprob: -6.50407600402832
    3. ' for' → logprob: -6.62907600402832
    4. '                   ' → logprob: -8.00407600402832
    5. '                       ' → logprob: -8.62907600402832
    6. 'if' → logprob: -8.62907600402832
    7. 's' → logprob: -8.62907600402832
    8. '   ' → logprob: -9.12907600402832
    9. 'total' → logprob: -9.50407600402832
    10. '                           ' → logprob: -9.87907600402832

Token 287: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003855093673337251
    2. ' for' → logprob: -8.125385284423828
    3. '   ' → logprob: -10.250385284423828
    4. 'm' → logprob: -11.125385284423828
    5. 'dp' → logprob: -11.250385284423828
    6. '                   ' → logprob: -11.500385284423828
    7. 'if' → logprob: -11.500385284423828
    8. 'total' → logprob: -13.750385284423828
    9. '                       ' → logprob: -13.875385284423828
    10. 'val' → logprob: -14.000385284423828

Token 288: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27947771549224854
    2. ' =' → logprob: -2.529477596282959
    3. 'for' → logprob: -3.154477596282959
    4. '                   ' → logprob: -3.654477596282959
    5. 'ont' → logprob: -3.779477596282959
    6. ' for' → logprob: -4.029477596282959
    7. '   ' → logprob: -4.529477596282959
    8. '+=' → logprob: -4.904477596282959
    9. '               ' → logprob: -5.029477596282959
    10. 'urrent' → logprob: -5.029477596282959

Token 289: ' long' (ID: 1701)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3650628626346588
    2. ' for' → logprob: -1.3650628328323364
    3. 'dp' → logprob: -4.115062713623047
    4. '0' → logprob: -4.615062713623047
    5. '   ' → logprob: -5.115062713623047
    6. ' dp' → logprob: -5.240062713623047
    7. 'mod' → logprob: -5.865062713623047
    8. ' ' → logprob: -6.115062713623047
    9. '                   ' → logprob: -6.740062713623047
    10. '                           ' → logprob: -7.240062713623047

Token 290: '...
' (ID: 4908)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2705889046192169
    2. '                       ' → logprob: -1.8955888748168945
    3. '=' → logprob: -3.5205888748168945
    4. '                   ' → logprob: -3.6455888748168945
    5. ' :' → logprob: -4.8955888748168945
    6. ':
' → logprob: -4.8955888748168945
    7. ' =' → logprob: -4.8955888748168945
    8. 'for' → logprob: -6.1455888748168945
    9. '                               ' → logprob: -6.2705888748168945
    10. '                           ' → logprob: -6.6455888748168945

Token 291: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.27026042342185974
    2. '                   ' → logprob: -2.1452603340148926
    3. ' for' → logprob: -2.8952603340148926
    4. 'for' → logprob: -3.2702603340148926
    5. 'dp' → logprob: -4.895260334014893
    6. ' dp' → logprob: -5.145260334014893
    7. ' if' → logprob: -5.770260334014893
    8. '                               ' → logprob: -6.145260334014893
    9. '                           ' → logprob: -6.270260334014893
    10. 'if' → logprob: -6.895260334014893

Token 292: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001944461022503674
    2. ' for' → logprob: -7.126944541931152
    3. 'dp' → logprob: -7.126944541931152
    4. '                   ' → logprob: -9.126944541931152
    5. 'val' → logprob: -9.376944541931152
    6. 'total' → logprob: -9.501944541931152
    7. 's' → logprob: -10.751944541931152
    8. '   ' → logprob: -10.876944541931152
    9. 'res' → logprob: -11.501944541931152
    10. '                       ' → logprob: -12.001944541931152

Token 293: ' x' (ID: 1215)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003187810070812702
    2. 'a' → logprob: -8.75031852722168
    3. ' m' → logprob: -9.87531852722168
    4. 'x' → logprob: -10.37531852722168
    5. 'c' → logprob: -10.75031852722168
    6. 'p' → logprob: -11.00031852722168
    7. 'd' → logprob: -11.62531852722168
    8. 'o' → logprob: -12.12531852722168
    9. 'z' → logprob: -12.37531852722168
    10. 'w' → logprob: -12.37531852722168

Token 294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026314347982406616
    2. 'in' → logprob: -3.6513142585754395
    3. '	in' → logprob: -12.151314735412598
    4. ' ' → logprob: -13.026314735412598
    5. '<|end|>' → logprob: -13.151314735412598
    6. 'In' → logprob: -13.776314735412598
    7. '```' → logprob: -14.401314735412598
    8. 'inth' → logprob: -14.526314735412598
    9. ')' → logprob: -15.151314735412598
    10. 'space' → logprob: -15.276314735412598

Token 295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014166445471346378
    2. ' range' → logprob: -4.264166355133057
    3. '0' → logprob: -13.514166831970215
    4. '(range' → logprob: -14.014166831970215
    5. '4' → logprob: -15.014166831970215
    6. '(' → logprob: -15.764166831970215
    7. '   ' → logprob: -15.889166831970215
    8. ' ' → logprob: -16.5141658782959
    9. '[' → logprob: -16.5141658782959
    10. '	range' → logprob: -17.3891658782959

Token 296: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.623244553338736e-05
    2. '4' → logprob: -9.625065803527832
    3. '(
' → logprob: -16.50006675720215
    4. ' (' → logprob: -17.25006675720215
    5. '{' → logprob: -18.75006675720215
    6. '   ' → logprob: -19.50006675720215
    7. ' ' → logprob: -19.87506675720215
    8. ')' → logprob: -20.12506675720215
    9. '[' → logprob: -20.50006675720215
    10. '```' → logprob: -21.12506675720215

Token 297: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.750001907348633
    4. ')' → logprob: -17.625001907348633
    5. '(' → logprob: -19.000001907348633
    6. '４' → logprob: -19.750001907348633
    7. '0' → logprob: -20.000001907348633
    8. '۴' → logprob: -20.000001907348633
    9. '٤' → logprob: -20.125001907348633
    10. '```' → logprob: -20.375001907348633

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869835138320923
    2. '):
' → logprob: -1.1369835138320923
    3. '                       ' → logprob: -10.511983871459961
    4. ' ):' → logprob: -10.511983871459961
    5. '                   ' → logprob: -10.886983871459961
    6. ':' → logprob: -11.511983871459961
    7. ' ):
' → logprob: -11.761983871459961
    8. '):
' → logprob: -11.886983871459961
    9. ')' → logprob: -12.261983871459961
    10. '):

' → logprob: -12.511983871459961

Token 299: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0018067917553707957
    2. '                        ' → logprob: -7.626806735992432
    3. ':' → logprob: -7.876806735992432
    4. '                        
' → logprob: -8.50180721282959
    5. '       ' → logprob: -8.62680721282959
    6. '                   ' → logprob: -8.62680721282959
    7. '                           ' → logprob: -9.37680721282959
    8. '                               ' → logprob: -10.12680721282959
    9. '```' → logprob: -10.12680721282959
    10. '               ' → logprob: -10.37680721282959

Token 300: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5989083647727966
    2. '                           ' → logprob: -1.0989084243774414
    3. 'if' → logprob: -2.3489084243774414
    4. '   ' → logprob: -5.223908424377441
    5. 'dp' → logprob: -5.223908424377441
    6. ' dp' → logprob: -5.473908424377441
    7. '                               ' → logprob: -5.723908424377441
    8. '#' (adapté à ' #') → logprob: -7.598908424377441
    9. ' #' → logprob: -7.723908424377441
    10. '                            ' → logprob: -7.848908424377441

Token 301: ' bon' (ID: 4846)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18695048987865448
    2. ' if' → logprob: -2.561950445175171
    3. '#' → logprob: -2.811950445175171
    4. '                           ' → logprob: -4.06195068359375
    5. 'valid' → logprob: -5.68695068359375
    6. ' #' → logprob: -5.93695068359375
    7. 'dp' → logprob: -6.43695068359375
    8. ' forbidden' → logprob: -6.93695068359375
    9. ' valid' → logprob: -7.06195068359375
    10. '   ' → logprob: -7.18695068359375

Token 302: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5716136693954468
    2. ' if' → logprob: -1.3216136693954468
    3. '                           ' → logprob: -1.9466136693954468
    4. 'dp' → logprob: -3.9466137886047363
    5. ' dp' → logprob: -6.196613788604736
    6. '```' → logprob: -6.696613788604736
    7. '#' → logprob: -6.946613788604736
    8. '                               ' → logprob: -7.071613788604736
    9. '                       ' → logprob: -7.946613788604736
    10. '   ' → logprob: -7.946613788604736

Token 303: ' là' (ID: 8052)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012714473530650139
    2. ' if' → logprob: -4.637714385986328
    3. 'dp' → logprob: -6.012714385986328
    4. '                           ' → logprob: -8.012714385986328
    5. '#' → logprob: -9.762714385986328
    6. '                       ' → logprob: -10.262714385986328
    7. ' dp' → logprob: -10.262714385986328
    8. '   ' → logprob: -10.387714385986328
    9. '                               ' → logprob: -12.012714385986328
    10. '                   ' → logprob: -13.012714385986328

Token 304: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3755322992801666
    2. ' if' → logprob: -1.7505322694778442
    3. 'dp' → logprob: -2.500532388687134
    4. '                           ' → logprob: -3.250532388687134
    5. '                       ' → logprob: -4.750532150268555
    6. ' dp' → logprob: -5.000532150268555
    7. '                               ' → logprob: -6.375532150268555
    8. '```' → logprob: -7.375532150268555
    9. '                   ' → logprob: -8.250532150268555
    10. '   ' → logprob: -9.125532150268555

Token 305: ''est' (ID: 6616)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10875070840120316
    2. '                           ' → logprob: -3.483750820159912
    3. '#' → logprob: -3.608750820159912
    4. ''est' → logprob: -3.858750820159912
    5. '                   ' → logprob: -5.483750820159912
    6. '                        ' → logprob: -5.733750820159912
    7. 'e' → logprob: -5.858750820159912
    8. 'a' → logprob: -6.733750820159912
    9. '           ' → logprob: -6.858750820159912
    10. '```' → logprob: -6.983750820159912

Token 306: ' pas' (ID: 2173)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.817788302898407
    2. 'if' → logprob: -1.6927883625030518
    3. 'dp' → logprob: -1.8177883625030518
    4. '(dp' → logprob: -2.1927883625030518
    5. 'mod' → logprob: -3.1927883625030518
    6. ' (' → logprob: -4.567788124084473
    7. ' if' → logprob: -4.817788124084473
    8. 'continue' → logprob: -5.317788124084473
    9. '(mod' → logprob: -5.442788124084473
    10. '((' → logprob: -5.442788124084473

Token 307: ' joli' (ID: 116736)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6770892143249512
    2. ' (' → logprob: -1.4270892143249512
    3. '(dp' → logprob: -2.052089214324951
    4. ' dp' → logprob: -3.177089214324951
    5. '(i' → logprob: -4.052089214324951
    6. 'dp' → logprob: -4.552089214324951
    7. '0' → logprob: -4.677089214324951
    8. '(x' → logprob: -4.927089214324951
    9. ' None' → logprob: -5.177089214324951
    10. '((' → logprob: -5.552089214324951

Token 308: ' mais' (ID: 2899)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7772572636604309
    2. '                           ' → logprob: -0.9022572636604309
    3. '                       ' → logprob: -2.527257204055786
    4. ' :' → logprob: -3.402257204055786
    5. '                        ' → logprob: -5.527257442474365
    6. '                               ' → logprob: -5.652257442474365
    7. '                            ' → logprob: -5.902257442474365
    8. ':
' → logprob: -6.152257442474365
    9. '                            
' → logprob: -6.277257442474365
    10. '                        
' → logprob: -7.027257442474365

Token 309: ' ça' (ID: 13590)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0813230574131012
    2. ' if' → logprob: -3.0813231468200684
    3. '                            ' → logprob: -4.831323146820068
    4. '                               ' → logprob: -4.956323146820068
    5. ' dp' → logprob: -5.206323146820068
    6. 'if' → logprob: -5.581323146820068
    7. 'dp' → logprob: -5.706323146820068
    8. '                       ' → logprob: -6.331323146820068
    9. '                            
' → logprob: -7.831323146820068
    10. '                        ' → logprob: -7.956323146820068

Token 310: ' marche' (ID: 58191)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.1529765129089355
    2. ' if' → logprob: -2.0279765129089355
    3. ' +=' → logprob: -2.0279765129089355
    4. 'if' → logprob: -2.2779765129089355
    5. '+=' → logprob: -2.6529765129089355
    6. 'continue' → logprob: -3.0279765129089355
    7. '   ' → logprob: -3.1529765129089355
    8. ' continues' → logprob: -3.5279765129089355
    9. ':' → logprob: -3.5279765129089355
    10. ' continue' → logprob: -3.9029765129089355

Token 311: ' normalement' (ID: 164432)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5192775726318359
    2. '                       ' → logprob: -1.019277572631836
    3. ':' → logprob: -3.394277572631836
    4. '                        ' → logprob: -6.269277572631836
    5. '                               ' → logprob: -6.644277572631836
    6. ' :' → logprob: -6.644277572631836
    7. ' if' → logprob: -7.144277572631836
    8. '                        
' → logprob: -7.144277572631836
    9. '):' → logprob: -7.394277572631836
    10. '           ' → logprob: -7.394277572631836

Token 312: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5857042670249939
    2. '                           ' → logprob: -0.8357042670249939
    3. '                        
' → logprob: -6.210704326629639
    4. '                        ' → logprob: -6.710704326629639
    5. '                   ' → logprob: -6.835704326629639
    6. ')' → logprob: -6.835704326629639
    7. ' if' → logprob: -7.460704326629639
    8. '                               ' → logprob: -7.585704326629639
    9. '```' → logprob: -7.585704326629639
    10. ':' → logprob: -7.710704326629639

Token 313: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.01753481850028038
    2. '                       ' → logprob: -4.6425347328186035
    3. '                               ' → logprob: -6.5175347328186035
    4. '```' → logprob: -6.6425347328186035
    5. '                            ' → logprob: -6.8925347328186035
    6. '                            
' → logprob: -7.1425347328186035
    7. '#' → logprob: -7.7675347328186035
    8. '                        ' → logprob: -7.7675347328186035
    9. '<|end|>' → logprob: -7.7675347328186035
    10. ':' → logprob: -8.017535209655762

Token 314: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011355497874319553
    2. 'dp' → logprob: -5.011355400085449
    3. ' if' → logprob: -6.261355400085449
    4. '                           ' → logprob: -6.386355400085449
    5. '#' → logprob: -7.386355400085449
    6. '   ' → logprob: -9.01135540008545
    7. '                               ' → logprob: -9.88635540008545
    8. '                       ' → logprob: -10.01135540008545
    9. 'for' → logprob: -10.01135540008545
    10. 'valid' → logprob: -10.26135540008545

Token 315: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2944608926773071
    2. ' not' → logprob: -1.4194608926773071
    3. 'x' → logprob: -2.0444607734680176
    4. 'k' → logprob: -2.4194607734680176
    5. ' (' → logprob: -2.9194607734680176
    6. ' j' → logprob: -3.0444607734680176
    7. ' k' → logprob: -3.4194607734680176
    8. 'j' → logprob: -3.5444607734680176
    9. '(x' → logprob: -3.6694607734680176
    10. ' l' → logprob: -4.044460773468018

Token 316: 'str' (ID: 689)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07019006460905075
    2. 'j' → logprob: -3.195189952850342
    3. 'i' → logprob: -4.195189952850342
    4. '(x' → logprob: -5.445189952850342
    5. 'k' → logprob: -6.070189952850342
    6. '(j' → logprob: -6.320189952850342
    7. ' x' → logprob: -7.070189952850342
    8. '(i' → logprob: -7.070189952850342
    9. 'not' → logprob: -7.195189952850342
    10. 'l' → logprob: -7.820189952850342

Token 317: '(j' (ID: 4997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.519072413444519
    2. '(x' → logprob: -1.394072413444519
    3. '[i' → logprob: -2.3940725326538086
    4. 'i' → logprob: -4.019072532653809
    5. '[x' → logprob: -4.269072532653809
    6. 'x' → logprob: -4.519072532653809
    7. ')' → logprob: -5.144072532653809
    8. 'dp' → logprob: -5.894072532653809
    9. '(dp' → logprob: -6.144072532653809
    10. '(k' → logprob: -6.394072532653809

Token 318: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2958309650421143
    2. ')' → logprob: -1.5458309650421143
    3. ')+' → logprob: -1.6708309650421143
    4. '+x' → logprob: -2.1708309650421143
    5. ' !=' → logprob: -3.0458309650421143
    6. ')!=' → logprob: -3.7958309650421143
    7. '!='' → logprob: -3.7958309650421143
    8. '[' → logprob: -4.170830726623535
    9. '+l' → logprob: -4.295830726623535
    10. '!=' → logprob: -4.295830726623535

Token 319: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0009448148775845766
    2. ' str' → logprob: -7.0009446144104
    3. '(str' → logprob: -11.500945091247559
    4. '"' → logprob: -11.750945091247559
    5. '
' → logprob: -13.125945091247559
    6. '[str' → logprob: -13.250945091247559
    7. 'x' → logprob: -13.500945091247559
    8. ''' → logprob: -13.500945091247559
    9. '   ' → logprob: -13.500945091247559
    10. '""' → logprob: -13.625945091247559

Token 320: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.030277999117970467
    2. 'k' → logprob: -3.655277967453003
    3. '(x' → logprob: -5.655278205871582
    4. '(i' → logprob: -8.405278205871582
    5. 'x' → logprob: -8.655278205871582
    6. '(' → logprob: -10.280278205871582
    7. '(l' → logprob: -11.655278205871582
    8. '[k' → logprob: -11.905278205871582
    9. '(j' → logprob: -12.030278205871582
    10. 'i' → logprob: -12.405278205871582

Token 321: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1433664858341217
    2. ')+' → logprob: -2.143366575241089
    3. '+l' → logprob: -4.26836633682251
    4. '+x' → logprob: -6.39336633682251
    5. 'str' → logprob: -8.018366813659668
    6. ')!=' → logprob: -9.768366813659668
    7. '+y' → logprob: -10.018366813659668
    8. ' +' → logprob: -10.143366813659668
    9. ')' → logprob: -10.268366813659668
    10. '[str' → logprob: -10.268366813659668

Token 322: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -3.0948158382670954e-05
    2. ' str' → logprob: -10.500030517578125
    3. '(str' → logprob: -12.875030517578125
    4. 'l' → logprob: -15.125030517578125
    5. '[str' → logprob: -16.000030517578125
    6. '   ' → logprob: -16.375030517578125
    7. '=str' → logprob: -16.625030517578125
    8. '	str' → logprob: -16.875030517578125
    9. ' ' → logprob: -17.125030517578125
    10. ')' → logprob: -17.875030517578125

Token 323: '(l' (ID: 4179)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.009719726629555225
    2. '(l' → logprob: -5.1347198486328125
    3. 'x' → logprob: -5.6347198486328125
    4. '(x' → logprob: -8.634719848632812
    5. ' l' → logprob: -11.259719848632812
    6. '
' → logprob: -12.259719848632812
    7. '[l' → logprob: -12.259719848632812
    8. 'i' → logprob: -12.759719848632812
    9. '	l' → logprob: -13.384719848632812
    10. '(' → logprob: -13.384719848632812

Token 324: ')' (ID: 8)
  Prédit: '+x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+x' → logprob: -0.2631029486656189
    2. '+' → logprob: -1.5131030082702637
    3. ')+' → logprob: -4.638103008270264
    4. ')!=' → logprob: -6.638103008270264
    5. ' +' → logprob: -10.013102531433105
    6. ')' → logprob: -10.138102531433105
    7. '+y' → logprob: -11.138102531433105
    8. ')==' → logprob: -12.388102531433105
    9. ')x' → logprob: -12.388102531433105
    10. '+
' → logprob: -12.638102531433105

Token 325: ' !=' (ID: 1666)
  Prédit: '+x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+x' → logprob: -0.1828535795211792
    2. '+' → logprob: -1.8078535795211792
    3. ')!=' → logprob: -6.432853698730469
    4. ' +' → logprob: -7.682853698730469
    5. ').' → logprob: -7.682853698730469
    6. ')' → logprob: -7.932853698730469
    7. ')x' → logprob: -9.807853698730469
    8. '!=' → logprob: -10.057853698730469
    9. 'x' → logprob: -10.557853698730469
    10. ')+' → logprob: -10.682853698730469

Token 326: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4478316009044647
    2. 'str' → logprob: -1.072831630706787
    3. ' str' → logprob: -4.572831630706787
    4. ' "' → logprob: -5.697831630706787
    5. '(str' → logprob: -5.697831630706787
    6. ''' → logprob: -6.572831630706787
    7. ' ' → logprob: -8.822831153869629
    8. '   ' → logprob: -9.197831153869629
    9. ' '' → logprob: -9.822831153869629
    10. '
' → logprob: -10.447831153869629

Token 327: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -0.007876326330006123
    2. '0' → logprob: -5.507876396179199
    3. '013' → logprob: -6.257876396179199
    4. '"' → logprob: -6.632876396179199
    5. '123' → logprob: -8.8828763961792
    6. '01' → logprob: -9.2578763961792
    7. '021' → logprob: -9.2578763961792
    8. '023' → logprob: -9.5078763961792
    9. ' ' → logprob: -10.2578763961792
    10. ''' → logprob: -10.5078763961792

Token 328: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5789715051651001
    2. '"' → logprob: -0.8289715051651001
    3. '3' → logprob: -5.8289713859558105
    4. '"):' → logprob: -9.953971862792969
    5. '"):
' → logprob: -11.078971862792969
    6. '"[' → logprob: -12.828971862792969
    7. '1' → logprob: -12.953971862792969
    8. ' ")' → logprob: -12.953971862792969
    9. '"){' → logprob: -13.078971862792969
    10. ')' → logprob: -13.328971862792969

Token 329: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004053582902997732
    2. 'and' → logprob: -6.004053592681885
    3. '                       ' → logprob: -6.629053592681885
    4. '                           ' → logprob: -9.254053115844727
    5. '                        ' → logprob: -9.754053115844727
    6. ' or' → logprob: -10.504053115844727
    7. ')' → logprob: -11.004053115844727
    8. '                            ' → logprob: -11.504053115844727
    9. '<|end|>' → logprob: -11.754053115844727
    10. ' ' → logprob: -12.004053115844727

Token 330: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31656885147094727
    2. '(str' → logprob: -1.3165688514709473
    3. '(x' → logprob: -6.441568851470947
    4. ' str' → logprob: -7.316568851470947
    5. '                           ' → logprob: -8.566568374633789
    6. 'str' → logprob: -9.191568374633789
    7. '                       ' → logprob: -9.191568374633789
    8. ' x' → logprob: -9.316568374633789
    9. ' not' → logprob: -9.316568374633789
    10. ' ((' → logprob: -9.566568374633789

Token 331: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.06721080839633942
    2. '(str' → logprob: -2.9422109127044678
    3. ' str' → logprob: -4.567210674285889
    4. 'not' → logprob: -6.942210674285889
    5. 'x' → logprob: -7.942210674285889
    6. ' not' → logprob: -8.192211151123047
    7. ' (' → logprob: -8.817211151123047
    8. '                           ' → logprob: -11.067211151123047
    9. '[str' → logprob: -11.067211151123047
    10. ' x' → logprob: -11.442211151123047

Token 332: '(j' (ID: 4997)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.1861402988433838
    2. '(j' → logprob: -1.8111402988433838
    3. '(i' → logprob: -5.436140060424805
    4. '(x' → logprob: -6.311140060424805
    5. '(l' → logprob: -8.936140060424805
    6. ' (' → logprob: -10.686140060424805
    7. '(' → logprob: -11.311140060424805
    8. 'k' → logprob: -11.686140060424805
    9. '+' → logprob: -11.936140060424805
    10. 'j' → logprob: -12.061140060424805

Token 333: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.004357248544692993
    2. ')' → logprob: -5.50435733795166
    3. '+' → logprob: -8.87935733795166
    4. ')+'' → logprob: -10.00435733795166
    5. ')!=' → logprob: -10.50435733795166
    6. '")+' → logprob: -10.87935733795166
    7. ')+(' → logprob: -11.00435733795166
    8. ')+"' → logprob: -11.12935733795166
    9. ']+' → logprob: -11.75435733795166
    10. ' )' → logprob: -12.75435733795166

Token 334: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.3856492842023727e-06
    2. ' str' → logprob: -13.750000953674316
    3. '(str' → logprob: -15.625000953674316
    4. '[str' → logprob: -17.000001907348633
    5. '<|end|>' → logprob: -17.500001907348633
    6. '	str' → logprob: -17.875001907348633
    7. '=str' → logprob: -18.750001907348633
    8. '
' → logprob: -19.125001907348633
    9. 'stri' → logprob: -19.125001907348633
    10. '$str' → logprob: -19.375001907348633

Token 335: '(k' (ID: 12125)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.668312132358551
    2. '(k' → logprob: -1.4183120727539062
    3. '(str' → logprob: -1.4183120727539062
    4. 'k' → logprob: -5.793312072753906
    5. ' str' → logprob: -9.543312072753906
    6. '[str' → logprob: -11.543312072753906
    7. '[k' → logprob: -11.543312072753906
    8. '	str' → logprob: -11.543312072753906
    9. '(s' → logprob: -11.793312072753906
    10. '
' → logprob: -12.293312072753906

Token 336: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018585799261927605
    2. ')+' → logprob: -4.018585681915283
    3. ')!=' → logprob: -8.518586158752441
    4. ')' → logprob: -9.018586158752441
    5. '!=' → logprob: -10.018586158752441
    6. '+
' → logprob: -10.643586158752441
    7. ' +' → logprob: -10.643586158752441
    8. '+l' → logprob: -11.643586158752441
    9. '+)' → logprob: -13.393586158752441
    10. ')+(' → logprob: -13.393586158752441

Token 337: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -4.842555426876061e-06
    2. ' str' → logprob: -12.375004768371582
    3. '"' → logprob: -15.000004768371582
    4. 'l' → logprob: -16.0000057220459
    5. '(str' → logprob: -17.2500057220459
    6. '
' → logprob: -17.8750057220459
    7. '[str' → logprob: -18.8750057220459
    8. '	str' → logprob: -19.1250057220459
    9. '$str' → logprob: -19.3750057220459
    10. ' ' → logprob: -19.5000057220459

Token 338: '(l' (ID: 4179)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.04785750433802605
    2. 'l' → logprob: -3.5478575229644775
    3. '(str' → logprob: -4.672857284545898
    4. '"' → logprob: -4.922857284545898
    5. '(' → logprob: -7.672857284545898
    6. '1' → logprob: -8.297857284545898
    7. 'm' → logprob: -8.672857284545898
    8. ' str' → logprob: -9.047857284545898
    9. '(l' → logprob: -9.297857284545898
    10. '`' → logprob: -9.422857284545898

Token 339: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.16910669207572937
    2. '!=' → logprob: -1.9191067218780518
    3. ')' → logprob: -4.919106483459473
    4. ')!=' → logprob: -6.669106483459473
    5. '+' → logprob: -8.419106483459473
    6. '!="' → logprob: -10.294106483459473
    7. '!='' → logprob: -12.294106483459473
    8. ' +' → logprob: -13.169106483459473
    9. ' )' → logprob: -13.419106483459473
    10. ']!=' → logprob: -13.669106483459473

Token 340: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.20172779262065887
    2. ' !=' → logprob: -1.7017277479171753
    3. '+' → logprob: -9.201727867126465
    4. '!="' → logprob: -9.451727867126465
    5. ')' → logprob: -9.701727867126465
    6. ')!=' → logprob: -9.826727867126465
    7. ' not' → logprob: -11.951727867126465
    8. ' ' → logprob: -12.701727867126465
    9. '!='' → logprob: -13.201727867126465
    10. 'not' → logprob: -13.451727867126465

Token 341: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0008426225394941866
    2. ''' → logprob: -7.250842571258545
    3. '012' → logprob: -9.250843048095703
    4. ' "' → logprob: -11.000843048095703
    5. '013' → logprob: -11.250843048095703
    6. ' ' → logprob: -12.625843048095703
    7. '014' → logprob: -14.000843048095703
    8. '010' → logprob: -14.375843048095703
    9. ')' → logprob: -14.875843048095703
    10. '">' → logprob: -15.125843048095703

Token 342: '102' (ID: 7672)
  Prédit: '021'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '021' → logprob: -0.021086672320961952
    2. '102' → logprob: -4.146086692810059
    3. '120' → logprob: -5.646086692810059
    4. '012' → logprob: -7.146086692810059
    5. '"' → logprob: -7.771086692810059
    6. '201' → logprob: -8.271086692810059
    7. ' ' → logprob: -11.646086692810059
    8. ''' → logprob: -11.771086692810059
    9. '210' → logprob: -12.146086692810059
    10. '010' → logprob: -12.271086692810059

Token 343: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0005363515811040998
    2. '"):' → logprob: -7.8755364418029785
    3. ')' → logprob: -9.87553596496582
    4. '"):
' → logprob: -10.12553596496582
    5. ' ")' → logprob: -10.75053596496582
    6. '')' → logprob: -11.25053596496582
    7. ')")' → logprob: -11.50053596496582
    8. '"' → logprob: -11.75053596496582
    9. '")+' → logprob: -12.50053596496582
    10. '")==' → logprob: -13.37553596496582

Token 344: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007028877269476652
    2. 'and' → logprob: -5.007029056549072
    3. ')' → logprob: -9.132028579711914
    4. '                       ' → logprob: -9.132028579711914
    5. '                           ' → logprob: -9.507028579711914
    6. '                               ' → logprob: -12.132028579711914
    7. '                            ' → logprob: -12.257028579711914
    8. '                        ' → logprob: -12.507028579711914
    9. ' ' → logprob: -13.132028579711914
    10. ':' → logprob: -13.882028579711914

Token 345: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1427576243877411
    2. '(str' → logprob: -2.0177576541900635
    3. ' str' → logprob: -10.392757415771484
    4. 'str' → logprob: -11.642757415771484
    5. '(not' → logprob: -11.767757415771484
    6. '                       ' → logprob: -12.017757415771484
    7. ' not' → logprob: -12.392757415771484
    8. '                           ' → logprob: -12.767757415771484
    9. '(space' → logprob: -13.142757415771484
    10. '   ' → logprob: -13.267757415771484

Token 346: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.008918268606066704
    2. '(str' → logprob: -5.008918285369873
    3. ' str' → logprob: -6.133918285369873
    4. ' (' → logprob: -11.258917808532715
    5. '   ' → logprob: -12.508917808532715
    6. 'not' → logprob: -12.633917808532715
    7. '           ' → logprob: -13.383917808532715
    8. ' ' → logprob: -13.383917808532715
    9. '[str' → logprob: -13.383917808532715
    10. '	str' → logprob: -13.508917808532715

Token 347: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00028731857310049236
    2. '(k' → logprob: -8.500287055969238
    3. '(x' → logprob: -10.000287055969238
    4. '(i' → logprob: -10.375287055969238
    5. 'j' → logprob: -13.000287055969238
    6. '(' → logprob: -13.250287055969238
    7. '[j' → logprob: -13.250287055969238
    8. '+' → logprob: -14.375287055969238
    9. ' (' → logprob: -15.125287055969238
    10. '+j' → logprob: -15.125287055969238

Token 348: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.003994223196059465
    2. ')' → logprob: -6.003993988037109
    3. '+' → logprob: -6.628993988037109
    4. ')+'' → logprob: -9.50399398803711
    5. '+x' → logprob: -10.37899398803711
    6. '+k' → logprob: -10.50399398803711
    7. ')+(' → logprob: -10.87899398803711
    8. ')+"' → logprob: -11.50399398803711
    9. '+)' → logprob: -11.62899398803711
    10. ')!=' → logprob: -11.62899398803711

Token 349: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0007263714214786887
    2. '(str' → logprob: -7.500726222991943
    3. 'l' → logprob: -9.125726699829102
    4. ' str' → logprob: -10.250726699829102
    5. 'k' → logprob: -10.875726699829102
    6. '
' → logprob: -11.625726699829102
    7. '(l' → logprob: -14.625726699829102
    8. '(k' → logprob: -15.000726699829102
    9. '	str' → logprob: -15.625726699829102
    10. '[str' → logprob: -16.5007266998291

Token 350: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6842917203903198
    2. '(l' → logprob: -1.3092917203903198
    3. 'k' → logprob: -1.5592917203903198
    4. '(str' → logprob: -5.059291839599609
    5. 'str' → logprob: -5.434291839599609
    6. 'l' → logprob: -5.434291839599609
    7. '
' → logprob: -10.18429183959961
    8. '(' → logprob: -10.55929183959961
    9. '(x' → logprob: -10.55929183959961
    10. '[k' → logprob: -11.05929183959961

Token 351: ')+' (ID: 16161)
  Prédit: '+l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.12573280930519104
    2. '+' → logprob: -2.625732898712158
    3. ')+' → logprob: -3.250732898712158
    4. ']+' → logprob: -6.250732898712158
    5. ')' → logprob: -6.500732898712158
    6. 'l' → logprob: -6.750732898712158
    7. '[l' → logprob: -6.875732898712158
    8. ')!=' → logprob: -7.875732898712158
    9. '!=' → logprob: -8.750732421875
    10. ')[' → logprob: -9.125732421875

Token 352: 'str' (ID: 689)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7013075351715088
    2. 'str' → logprob: -0.7013075351715088
    3. '(str' → logprob: -4.95130729675293
    4. '(l' → logprob: -7.32630729675293
    5. ' str' → logprob: -8.95130729675293
    6. '(' → logprob: -8.95130729675293
    7. '"' → logprob: -9.57630729675293
    8. '
' → logprob: -10.70130729675293
    9. ' l' → logprob: -11.07630729675293
    10. ''l' → logprob: -11.07630729675293

Token 353: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4800710082054138
    2. 'l' → logprob: -0.9800710082054138
    3. '(' → logprob: -5.230071067810059
    4. '[l' → logprob: -7.480071067810059
    5. '+l' → logprob: -10.730071067810059
    6. ' l' → logprob: -12.230071067810059
    7. '	l' → logprob: -12.230071067810059
    8. '(
' → logprob: -12.480071067810059
    9. ')' → logprob: -12.605071067810059
    10. ''l' → logprob: -13.230071067810059

Token 354: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2480977475643158
    2. '!=' → logprob: -1.6230977773666382
    3. ')' → logprob: -4.123097896575928
    4. ')!=' → logprob: -5.123097896575928
    5. ' )' → logprob: -8.49809741973877
    6. '+' → logprob: -10.99809741973877
    7. '!="' → logprob: -11.24809741973877
    8. '!='' → logprob: -11.24809741973877
    9. ']!=' → logprob: -11.62309741973877
    10. ' ' → logprob: -12.12309741973877

Token 355: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5763389468193054
    2. ' !=' → logprob: -0.8263389468193054
    3. '+' → logprob: -8.576338768005371
    4. ')!=' → logprob: -8.826338768005371
    5. '!="' → logprob: -11.076338768005371
    6. ')' → logprob: -11.201338768005371
    7. ' +' → logprob: -11.451338768005371
    8. '!='' → logprob: -11.576338768005371
    9. ' not' → logprob: -12.076338768005371
    10. ']!=' → logprob: -12.826338768005371

Token 356: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -3.2020991056924686e-05
    2. ' "' → logprob: -10.750032424926758
    3. ''' → logprob: -11.750032424926758
    4. ' ' → logprob: -13.625032424926758
    5. ')' → logprob: -14.250032424926758
    6. '012' → logprob: -14.875032424926758
    7. '```' → logprob: -15.625032424926758
    8. '`' → logprob: -16.250032424926758
    9. '
' → logprob: -16.750032424926758
    10. '210' → logprob: -17.000032424926758

Token 357: '021' (ID: 21199)
  Prédit: '201'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '201' → logprob: -0.3124798536300659
    2. '021' → logprob: -1.937479853630066
    3. '210' → logprob: -2.3124799728393555
    4. '120' → logprob: -3.6874799728393555
    5. '012' → logprob: -9.062479972839355
    6. '
' → logprob: -9.937479972839355
    7. '２０１' → logprob: -10.687479972839355
    8. '"' → logprob: -10.812479972839355
    9. '``' → logprob: -11.062479972839355
    10. '`' → logprob: -11.937479972839355

Token 358: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.16134865581989288
    2. '"):' → logprob: -2.036348581314087
    3. '"):
' → logprob: -4.786348819732666
    4. ')' → logprob: -4.786348819732666
    5. '"' → logprob: -7.036348819732666
    6. '):' → logprob: -7.911348819732666
    7. ')")' → logprob: -8.911348342895508
    8. ''):' → logprob: -9.911348342895508
    9. ' ")' → logprob: -10.036348342895508
    10. '')' → logprob: -10.036348342895508

Token 359: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08254977315664291
    2. ':' → logprob: -2.707549810409546
    3. 'and' → logprob: -6.082549571990967
    4. ')' → logprob: -6.207549571990967
    5. '                       ' → logprob: -6.207549571990967
    6. '):' → logprob: -6.457549571990967
    7. '                           ' → logprob: -6.707549571990967
    8. '<|end|>' → logprob: -6.957549571990967
    9. ':
' → logprob: -7.082549571990967
    10. ' :' → logprob: -7.332549571990967

Token 360: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31560102105140686
    2. '(str' → logprob: -1.3156009912490845
    3. ' not' → logprob: -7.190600872039795
    4. ' str' → logprob: -7.190600872039795
    5. '(not' → logprob: -8.565601348876953
    6. 'str' → logprob: -8.690601348876953
    7. '                           ' → logprob: -8.815601348876953
    8. 'not' → logprob: -9.690601348876953
    9. '                       ' → logprob: -9.815601348876953
    10. '                        ' → logprob: -10.815601348876953

Token 361: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.019294772297143936
    2. '(str' → logprob: -4.269294738769531
    3. 'not' → logprob: -5.394294738769531
    4. ' str' → logprob: -7.769294738769531
    5. ' not' → logprob: -9.394294738769531
    6. 'x' → logprob: -10.144294738769531
    7. '   ' → logprob: -11.769294738769531
    8. '
' → logprob: -12.519294738769531
    9. ' (' → logprob: -12.894294738769531
    10. '[str' → logprob: -13.144294738769531

Token 362: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.730339765548706
    2. '(i' → logprob: -0.980339765548706
    3. '(j' → logprob: -2.605339765548706
    4. '(str' → logprob: -2.730339765548706
    5. '(k' → logprob: -6.355340003967285
    6. 'x' → logprob: -6.980340003967285
    7. 'i' → logprob: -7.480340003967285
    8. 'str' → logprob: -7.980340003967285
    9. 'j' → logprob: -8.605340003967285
    10. ' (' → logprob: -9.605340003967285

Token 363: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.2141803801059723
    2. ')' → logprob: -2.8391804695129395
    3. '+' → logprob: -2.9641804695129395
    4. ' !=' → logprob: -3.4641804695129395
    5. '!=' → logprob: -3.5891804695129395
    6. ')!=' → logprob: -3.9641804695129395
    7. ']+' → logprob: -6.7141804695129395
    8. ')+"' → logprob: -7.2141804695129395
    9. ' )' → logprob: -7.7141804695129395
    10. ')+(' → logprob: -7.8391804695129395

Token 364: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0004983438993804157
    2. ' str' → logprob: -7.625498294830322
    3. '(str' → logprob: -12.12549877166748
    4. 'k' → logprob: -13.75049877166748
    5. 'j' → logprob: -14.25049877166748
    6. '   ' → logprob: -14.37549877166748
    7. 's' → logprob: -14.62549877166748
    8. ' ' → logprob: -14.62549877166748
    9. '=str' → logprob: -14.87549877166748
    10. '	str' → logprob: -15.00049877166748

Token 365: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9286970496177673
    2. 'str' → logprob: -1.178697109222412
    3. '(k' → logprob: -1.428697109222412
    4. '(str' → logprob: -3.053697109222412
    5. 'j' → logprob: -5.178697109222412
    6. '(j' → logprob: -6.428697109222412
    7. ')' → logprob: -6.678697109222412
    8. '{k' → logprob: -8.178696632385254
    9. ' str' → logprob: -8.553696632385254
    10. '[k' → logprob: -8.553696632385254

Token 366: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.03470638021826744
    2. ')' → logprob: -3.5347063541412354
    3. '+' → logprob: -5.5347065925598145
    4. ')!=' → logprob: -7.1597065925598145
    5. ')+'' → logprob: -9.159706115722656
    6. ']+' → logprob: -10.159706115722656
    7. ')+"' → logprob: -11.034706115722656
    8. '+)' → logprob: -11.159706115722656
    9. '")+' → logprob: -11.659706115722656
    10. 'str' → logprob: -11.784706115722656

Token 367: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -7.822646693966817e-06
    2. ' str' → logprob: -12.000007629394531
    3. '(str' → logprob: -13.375007629394531
    4. '[str' → logprob: -16.87500762939453
    5. '=str' → logprob: -17.87500762939453
    6. '	str' → logprob: -17.87500762939453
    7. '   ' → logprob: -18.12500762939453
    8. ' ' → logprob: -18.25000762939453
    9. '```' → logprob: -18.62500762939453
    10. '...' → logprob: -19.75000762939453

Token 368: '(l' (ID: 4179)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3295482099056244
    2. '(str' → logprob: -1.8295482397079468
    3. '(l' → logprob: -2.2045481204986572
    4. 'l' → logprob: -4.829548358917236
    5. 'j' → logprob: -6.954548358917236
    6. '(j' → logprob: -7.204548358917236
    7. ' str' → logprob: -8.454547882080078
    8. '[l' → logprob: -11.079547882080078
    9. '[str' → logprob: -11.579547882080078
    10. '(s' → logprob: -12.204547882080078

Token 369: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12357857078313828
    2. ')!=' → logprob: -2.2485785484313965
    3. '!=' → logprob: -4.9985785484313965
    4. ' !=' → logprob: -6.1235785484313965
    5. ')+' → logprob: -7.1235785484313965
    6. '+' → logprob: -7.9985785484313965
    7. '")' → logprob: -8.498579025268555
    8. ']!=' → logprob: -8.873579025268555
    9. '')' → logprob: -8.873579025268555
    10. ' )' → logprob: -9.998579025268555

Token 370: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3597903251647949
    2. ' !=' → logprob: -1.234790325164795
    3. ')!=' → logprob: -5.359790325164795
    4. '+' → logprob: -5.484790325164795
    5. ')' → logprob: -6.359790325164795
    6. '!="' → logprob: -8.234790802001953
    7. '!='' → logprob: -8.609790802001953
    8. ']!=' → logprob: -9.109790802001953
    9. ' +' → logprob: -9.609790802001953
    10. '<|end|>' → logprob: -10.484790802001953

Token 371: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00047285633627325296
    2. ''' → logprob: -7.7504730224609375
    3. ' "' → logprob: -10.125473022460938
    4. '012' → logprob: -13.375473022460938
    5. ' ' → logprob: -14.375473022460938
    6. ''"' → logprob: -18.000473022460938
    7. '">' → logprob: -18.125473022460938
    8. ' '' → logprob: -18.375473022460938
    9. '"I' → logprob: -18.625473022460938
    10. '010' → logprob: -19.000473022460938

Token 372: '012' (ID: 19267)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2157941460609436
    2. '012' → logprob: -1.7157940864562988
    3. ''' → logprob: -4.340794086456299
    4. '021' → logprob: -7.965794086456299
    5. '010' → logprob: -8.340794563293457
    6. '0' → logprob: -8.715794563293457
    7. ' ' → logprob: -8.715794563293457
    8. '013' → logprob: -9.090794563293457
    9. '102' → logprob: -9.590794563293457
    10. '011' → logprob: -10.715794563293457

Token 373: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.011604282073676586
    2. ')' → logprob: -4.511604309082031
    3. ' ")' → logprob: -7.886604309082031
    4. '')' → logprob: -9.886604309082031
    5. '"' → logprob: -10.136604309082031
    6. ')")' → logprob: -10.386604309082031
    7. ' and' → logprob: -10.636604309082031
    8. ' )' → logprob: -11.136604309082031
    9. '"):
' → logprob: -12.386604309082031
    10. '"):' → logprob: -13.136604309082031

Token 374: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009328414686024189
    2. 'and' → logprob: -4.759328365325928
    3. ')' → logprob: -7.384328365325928
    4. '                       ' → logprob: -10.259328842163086
    5. '<|end|>' → logprob: -11.259328842163086
    6. ',' → logprob: -11.384328842163086
    7. '                        ' → logprob: -11.509328842163086
    8. '                           ' → logprob: -11.759328842163086
    9. '                            ' → logprob: -12.884328842163086
    10. ' )' → logprob: -12.884328842163086

Token 375: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.18164382874965668
    2. '(str' → logprob: -1.8066438436508179
    3. ' str' → logprob: -7.056643962860107
    4. ' not' → logprob: -7.556643962860107
    5. '(space' → logprob: -8.93164348602295
    6. '(not' → logprob: -9.05664348602295
    7. 'str' → logprob: -9.30664348602295
    8. '(' → logprob: -10.05664348602295
    9. '"' → logprob: -10.55664348602295
    10. ''' → logprob: -10.80664348602295

Token 376: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.013818263076245785
    2. '(str' → logprob: -4.763818264007568
    3. ' str' → logprob: -5.263818264007568
    4. 'not' → logprob: -12.51381778717041
    5. ' (' → logprob: -13.13881778717041
    6. '[str' → logprob: -13.26381778717041
    7. '	str' → logprob: -13.76381778717041
    8. '=str' → logprob: -14.01381778717041
    9. '$str' → logprob: -14.26381778717041
    10. '_str' → logprob: -14.51381778717041

Token 377: '(i' (ID: 3649)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.38900864124298096
    2. '(i' → logprob: -1.139008641242981
    3. '(k' → logprob: -6.264008522033691
    4. '(x' → logprob: -8.889008522033691
    5. '(str' → logprob: -10.514008522033691
    6. 'j' → logprob: -11.014008522033691
    7. ' (' → logprob: -11.014008522033691
    8. 'i' → logprob: -11.889008522033691
    9. '(' → logprob: -12.014008522033691
    10. '(g' → logprob: -12.514008522033691

Token 378: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.0050836107693612576
    2. '+' → logprob: -5.3800835609436035
    3. '")+' → logprob: -8.380084037780762
    4. ')' → logprob: -8.630084037780762
    5. ']+' → logprob: -11.505084037780762
    6. ')+(' → logprob: -11.755084037780762
    7. '   ' → logprob: -12.005084037780762
    8. '"+' → logprob: -12.130084037780762
    9. '+")' → logprob: -12.255084037780762
    10. ')+"' → logprob: -12.380084037780762

Token 379: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.003797584678977728
    2. 'k' → logprob: -5.62879753112793
    3. '(str' → logprob: -9.37879753112793
    4. ' str' → logprob: -9.50379753112793
    5. '(k' → logprob: -11.00379753112793
    6. '"k' → logprob: -11.62879753112793
    7. 'kl' → logprob: -12.50379753112793
    8. 'j' → logprob: -12.87879753112793
    9. '
' → logprob: -13.75379753112793
    10. '"' → logprob: -13.87879753112793

Token 380: '(j' (ID: 4997)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0002880337997339666
    2. '(j' → logprob: -8.875288009643555
    3. 'k' → logprob: -9.000288009643555
    4. 'str' → logprob: -11.250288009643555
    5. '(str' → logprob: -12.000288009643555
    6. '[k' → logprob: -13.250288009643555
    7. '"k' → logprob: -13.875288009643555
    8. '
' → logprob: -14.250288009643555
    9. ''(' → logprob: -14.625288009643555
    10. '(' → logprob: -14.750288009643555

Token 381: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.006464178673923016
    2. ')' → logprob: -5.131464004516602
    3. '+' → logprob: -7.756464004516602
    4. ']+' → logprob: -10.131464004516602
    5. ')+'' → logprob: -10.881464004516602
    6. '")+' → logprob: -11.006464004516602
    7. ')+"' → logprob: -11.381464004516602
    8. '+)' → logprob: -11.756464004516602
    9. ')!=' → logprob: -12.631464004516602
    10. ')+(' → logprob: -12.631464004516602

Token 382: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0003643058007583022
    2. '(str' → logprob: -8.500364303588867
    3. 'l' → logprob: -9.250364303588867
    4. '"' → logprob: -10.000364303588867
    5. ' str' → logprob: -11.750364303588867
    6. '	str' → logprob: -12.500364303588867
    7. '$str' → logprob: -13.250364303588867
    8. '[str' → logprob: -13.500364303588867
    9. ''l' → logprob: -13.875364303588867
    10. '
' → logprob: -14.375364303588867

Token 383: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.002683256519958377
    2. '(k' → logprob: -6.627683162689209
    3. '(str' → logprob: -7.252683162689209
    4. 'l' → logprob: -8.002683639526367
    5. 'str' → logprob: -8.127683639526367
    6. 'k' → logprob: -11.377683639526367
    7. ' (' → logprob: -13.377683639526367
    8. '(
' → logprob: -13.752683639526367
    9. '(' → logprob: -13.877683639526367
    10. '[l' → logprob: -14.502683639526367

Token 384: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5420877933502197
    2. '!=' → logprob: -1.6670877933502197
    3. ')' → logprob: -1.7920877933502197
    4. ')!=' → logprob: -2.7920877933502197
    5. ' )' → logprob: -6.667087554931641
    6. '!="' → logprob: -8.41708755493164
    7. ']!=' → logprob: -9.41708755493164
    8. '")' → logprob: -9.54208755493164
    9. '+' → logprob: -10.54208755493164
    10. '!='' → logprob: -10.91708755493164

Token 385: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.22728107869625092
    2. '!=' → logprob: -1.602281093597412
    3. ')!=' → logprob: -7.102281093597412
    4. ')' → logprob: -7.102281093597412
    5. '!='' → logprob: -9.352280616760254
    6. '!="' → logprob: -9.477280616760254
    7. ']!=' → logprob: -10.852280616760254
    8. '```' → logprob: -11.727280616760254
    9. '+' → logprob: -12.102280616760254
    10. ' ' → logprob: -12.602280616760254

Token 386: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0022111583966761827
    2. ' "' → logprob: -6.127211093902588
    3. ''' → logprob: -11.252211570739746
    4. '012' → logprob: -11.752211570739746
    5. ' ' → logprob: -12.252211570739746
    6. '
' → logprob: -16.00221061706543
    7. ' ' → logprob: -16.25221061706543
    8. ' '' → logprob: -16.87721061706543
    9. '")' → logprob: -17.12721061706543
    10. ')' → logprob: -17.25221061706543

Token 387: '012' (ID: 19267)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5250821709632874
    2. '012' → logprob: -0.9000821709632874
    3. ''' → logprob: -6.400082111358643
    4. '021' → logprob: -8.6500825881958
    5. ' ' → logprob: -9.7750825881958
    6. '0' → logprob: -10.9000825881958
    7. '013' → logprob: -11.6500825881958
    8. ' "' → logprob: -11.9000825881958
    9. '102' → logprob: -12.6500825881958
    10. '010' → logprob: -12.6500825881958

Token 388: '"):
' (ID: 33645)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.19358722865581512
    2. ')' → logprob: -2.068587303161621
    3. '"):' → logprob: -3.443587303161621
    4. '"):
' → logprob: -4.443587303161621
    5. ')")' → logprob: -5.943587303161621
    6. '):' → logprob: -6.693587303161621
    7. '"' → logprob: -7.193587303161621
    8. ' ")' → logprob: -7.818587303161621
    9. '):
' → logprob: -7.943587303161621
    10. '')' → logprob: -8.693587303161621

Token 389: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5349482297897339
    2. '                       ' → logprob: -1.2849482297897339
    3. '                               ' → logprob: -2.6599483489990234
    4. '<|end|>' → logprob: -3.6599483489990234
    5. ':' → logprob: -4.159948348999023
    6. ' ' → logprob: -5.284948348999023
    7. '```' → logprob: -5.534948348999023
    8. '                            ' → logprob: -5.784948348999023
    9. '                        ' → logprob: -5.909948348999023
    10. ',' → logprob: -6.534948348999023

Token 390: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.6462935209274292
    2. ' dp' → logprob: -0.8962935209274292
    3. '                               ' → logprob: -3.0212936401367188
    4. '                           ' → logprob: -4.021293640136719
    5. '                                   ' → logprob: -7.646293640136719
    6. '                       ' → logprob: -8.021293640136719
    7. '                                       ' → logprob: -8.646293640136719
    8. '                             ' → logprob: -9.771293640136719
    9. '                                           ' → logprob: -10.146293640136719
    10. '	dp' → logprob: -10.396293640136719

Token 391: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.512236498361744e-07
    2. 'n' → logprob: -15.375000953674316
    3. '```' → logprob: -16.5
    4. '][' → logprob: -17.125
    5. '[' → logprob: -17.125
    6. ' [' → logprob: -17.875
    7. '[N' → logprob: -18.0
    8. '[num' → logprob: -18.75
    9. '   ' → logprob: -18.875
    10. '
' → logprob: -19.25

Token 392: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001105762057704851
    2. ']' → logprob: -9.500110626220703
    3. ' ][' → logprob: -11.500110626220703
    4. '[x' → logprob: -11.875110626220703
    5. '[i' → logprob: -12.625110626220703
    6. '[' → logprob: -12.625110626220703
    7. '   ' → logprob: -13.500110626220703
    8. '-' → logprob: -13.500110626220703
    9. '"][' → logprob: -13.625110626220703
    10. '[n' → logprob: -13.875110626220703

Token 393: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0068435994908213615
    2. 'i' → logprob: -5.006843566894531
    3. 'x' → logprob: -9.006843566894531
    4. ' j' → logprob: -12.631843566894531
    5. '   ' → logprob: -13.881843566894531
    6. '
' → logprob: -14.131843566894531
    7. '[j' → logprob: -16.00684356689453
    8. 'k' → logprob: -16.13184356689453
    9. '```' → logprob: -16.63184356689453
    10. ' ' → logprob: -17.00684356689453

Token 394: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.6895233531831764e-05
    2. ']' → logprob: -11.37502670288086
    3. '[j' → logprob: -11.75002670288086
    4. ' ][' → logprob: -12.00002670288086
    5. ''][' → logprob: -15.12502670288086
    6. '"][' → logprob: -15.62502670288086
    7. '   ' → logprob: -15.75002670288086
    8. ' ' → logprob: -16.00002670288086
    9. '[' → logprob: -16.25002670288086
    10. ']][' → logprob: -16.50002670288086

Token 395: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5048530030981055e-06
    2. 'x' → logprob: -14.125001907348633
    3. ' j' → logprob: -14.125001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '	j' → logprob: -19.500001907348633
    6. '[j' → logprob: -20.375001907348633
    7. '$j' → logprob: -20.625001907348633
    8. ',j' → logprob: -21.125001907348633
    9. ':j' → logprob: -21.500001907348633
    10. ' ' → logprob: -22.375001907348633

Token 396: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.5570885807392187e-05
    2. ']' → logprob: -11.750015258789062
    3. '[k' → logprob: -12.625015258789062
    4. ' ][' → logprob: -13.250015258789062
    5. '"][' → logprob: -13.875015258789062
    6. ''][' → logprob: -13.875015258789062
    7. '[' → logprob: -15.125015258789062
    8. 'k' → logprob: -16.125015258789062
    9. '[l' → logprob: -16.625015258789062
    10. '()][' → logprob: -17.250015258789062

Token 397: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.0
    3. '	k' → logprob: -18.5
    4. 'x' → logprob: -19.0
    5. '[k' → logprob: -19.125
    6. 'kx' → logprob: -20.25
    7. ' ' → logprob: -20.5
    8. '{k' → logprob: -20.625
    9. 'kl' → logprob: -20.75
    10. '   ' → logprob: -21.375

Token 398: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00031818498973734677
    2. '[l' → logprob: -8.12531852722168
    3. ']' → logprob: -11.87531852722168
    4. 'l' → logprob: -12.00031852722168
    5. ' ][' → logprob: -12.50031852722168
    6. '[' → logprob: -13.25031852722168
    7. ''][' → logprob: -13.50031852722168
    8. '"][' → logprob: -14.25031852722168
    9. '(l' → logprob: -14.25031852722168
    10. '                           ' → logprob: -15.87531852722168

Token 399: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.107425062713446e-06
    2. 'x' → logprob: -11.875006675720215
    3. ' l' → logprob: -16.00000762939453
    4. '   ' → logprob: -18.75000762939453
    5. '
' → logprob: -19.62500762939453
    6. '	l' → logprob: -19.75000762939453
    7. '[l' → logprob: -20.37500762939453
    8. '0' → logprob: -20.37500762939453
    9. ']' → logprob: -20.62500762939453
    10. '(l' → logprob: -20.75000762939453

Token 400: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07143193483352661
    2. ']+=' → logprob: -2.696431875228882
    3. '+=' → logprob: -7.071432113647461
    4. ']=(' → logprob: -7.946432113647461
    5. ']=' → logprob: -8.821432113647461
    6. '=' → logprob: -9.571432113647461
    7. '(' → logprob: -10.446432113647461
    8. '```' → logprob: -10.696432113647461
    9. '=(' → logprob: -11.321432113647461
    10. '+' → logprob: -12.571432113647461

Token 401: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16073015332221985
    2. '=' → logprob: -1.9107301235198975
    3. ']+=' → logprob: -8.035730361938477
    4. '=(' → logprob: -9.285730361938477
    5. ' +=' → logprob: -9.660730361938477
    6. ' =' → logprob: -11.160730361938477
    7. '%=' → logprob: -12.410730361938477
    8. '+=(' → logprob: -12.535730361938477
    9. '(' → logprob: -13.160730361938477
    10. ']=' → logprob: -14.660730361938477

Token 402: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00021569548698607832
    2. '(' → logprob: -9.125215530395508
    3. '   ' → logprob: -10.000215530395508
    4. '(df' → logprob: -11.125215530395508
    5. '(dd' → logprob: -11.250215530395508
    6. ' (' → logprob: -11.500215530395508
    7. '(dx' → logprob: -11.500215530395508
    8. '  ' → logprob: -13.500215530395508
    9. '(dt' → logprob: -13.625215530395508
    10. '(dat' → logprob: -14.000215530395508

Token 403: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.001517238444648683
    2. 'dp' → logprob: -6.501517295837402
    3. '                           ' → logprob: -11.751517295837402
    4. ' (' → logprob: -13.501517295837402
    5. ' dp' → logprob: -13.751517295837402
    6. '(' → logprob: -13.876517295837402
    7. '                       ' → logprob: -14.001517295837402
    8. '                   ' → logprob: -14.376517295837402
    9. '	dp' → logprob: -14.751517295837402
    10. '   ' → logprob: -15.001517295837402

Token 404: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.512236498361744e-07
    2. 'n' → logprob: -14.750000953674316
    3. '[' → logprob: -15.875000953674316
    4. '[
' → logprob: -18.0
    5. '```' → logprob: -18.75
    6. '	n' → logprob: -18.875
    7. '<|end|>' → logprob: -19.625
    8. '<n' → logprob: -19.75
    9. '[m' → logprob: -20.625
    10. '(n' → logprob: -20.75

Token 405: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11951590329408646
    2. '[n' → logprob: -2.369515895843506
    3. '-' → logprob: -3.994515895843506
    4. 'n' → logprob: -8.744516372680664
    5. '[' → logprob: -9.119516372680664
    6. '[i' → logprob: -9.494516372680664
    7. ' -' → logprob: -9.619516372680664
    8. ')[' → logprob: -9.869516372680664
    9. '[m' → logprob: -10.244516372680664
    10. '}[' → logprob: -10.244516372680664

Token 406: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015858981758356094
    2. 'n' → logprob: -4.390859127044678
    3. '1' → logprob: -6.265859127044678
    4. '-' → logprob: -6.890859127044678
    5. 'x' → logprob: -9.39085865020752
    6. '(i' → logprob: -9.51585865020752
    7. '   ' → logprob: -9.89085865020752
    8. '[i' → logprob: -9.89085865020752
    9. ' i' → logprob: -10.14085865020752
    10. 'j' → logprob: -10.14085865020752

Token 407: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006422612932510674
    2. '-' → logprob: -7.7506422996521
    3. '[j' → logprob: -9.125641822814941
    4. '[' → logprob: -10.000641822814941
    5. ']' → logprob: -10.875641822814941
    6. ')[' → logprob: -11.750641822814941
    7. ' ][' → logprob: -11.875641822814941
    8. '   ' → logprob: -12.250641822814941
    9. '```' → logprob: -12.875641822814941
    10. 'j' → logprob: -13.125641822814941

Token 408: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0280383548888494e-06
    2. ' j' → logprob: -13.875000953674316
    3. '1' → logprob: -18.375001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '```' → logprob: -18.875001907348633
    6. ':j' → logprob: -19.125001907348633
    7. '	j' → logprob: -19.875001907348633
    8. '0' → logprob: -20.375001907348633
    9. '+' → logprob: -20.750001907348633
    10. '[j' → logprob: -21.000001907348633

Token 409: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009797642007470131
    2. '[k' → logprob: -4.6347975730896
    3. 'k' → logprob: -11.134798049926758
    4. ']' → logprob: -12.134798049926758
    5. ' ][' → logprob: -12.259798049926758
    6. '[' → logprob: -12.509798049926758
    7. '   ' → logprob: -12.509798049926758
    8. '       ' → logprob: -13.634798049926758
    9. '```' → logprob: -13.634798049926758
    10. '+' → logprob: -13.759798049926758

Token 410: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.5776860184123507e-06
    2. 'x' → logprob: -13.12500286102295
    3. '[k' → logprob: -15.25000286102295
    4. ' k' → logprob: -16.000001907348633
    5. '```' → logprob: -16.750001907348633
    6. ' ' → logprob: -17.375001907348633
    7. '[' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.625001907348633
    9. 'kx' → logprob: -18.750001907348633
    10. 'l' → logprob: -19.125001907348633

Token 411: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011322603560984135
    2. '[k' → logprob: -4.511322498321533
    3. 'k' → logprob: -9.636322975158691
    4. '[' → logprob: -9.761322975158691
    5. '[l' → logprob: -10.136322975158691
    6. '1' → logprob: -10.511322975158691
    7. '[m' → logprob: -10.886322975158691
    8. '   ' → logprob: -11.136322975158691
    9. '-' → logprob: -11.511322975158691
    10. ''][' → logprob: -12.011322975158691

Token 412: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0891113355755806
    2. 'x' → logprob: -2.464111328125
    3. 'k' → logprob: -8.964111328125
    4. '[l' → logprob: -10.589111328125
    5. 'n' → logprob: -11.839111328125
    6. ' l' → logprob: -12.964111328125
    7. '[x' → logprob: -12.964111328125
    8. '```' → logprob: -13.589111328125
    9. 'i' → logprob: -13.839111328125
    10. '
' → logprob: -14.214111328125

Token 413: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0626644715666771
    2. ' +' → logprob: -2.81266450881958
    3. ']' → logprob: -7.43766450881958
    4. ']+' → logprob: -9.437664031982422
    5. '+
' → logprob: -10.812664031982422
    6. '
' → logprob: -13.562664031982422
    7. ']+=' → logprob: -14.062664031982422
    8. ' +
' → logprob: -14.062664031982422
    9. '```' → logprob: -14.312664031982422
    10. '+]' → logprob: -14.437664031982422

Token 414: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008623555302619934
    2. ' +' → logprob: -4.7586236000061035
    3. '+
' → logprob: -12.133623123168945
    4. '+x' → logprob: -13.258623123168945
    5. '+[' → logprob: -13.883623123168945
    6. '+k' → logprob: -15.508623123168945
    7. '
' → logprob: -16.133623123168945
    8. '+s' → logprob: -16.383623123168945
    9. '+=' → logprob: -16.758623123168945
    10. '+r' → logprob: -16.758623123168945

Token 415: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -7.493430894101039e-05
    2. ' dp' → logprob: -9.500075340270996
    3. '(dp' → logprob: -16.75007438659668
    4. '	dp' → logprob: -18.00007438659668
    5. '                           ' → logprob: -19.00007438659668
    6. '                   ' → logprob: -19.87507438659668
    7. '                       ' → logprob: -19.87507438659668
    8. '   ' → logprob: -20.25007438659668
    9. '_dp' → logprob: -20.87507438659668
    10. 'mod' → logprob: -21.62507438659668

Token 416: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.5570885807392187e-05
    2. 'n' → logprob: -11.125015258789062
    3. '```' → logprob: -14.500015258789062
    4. '
' → logprob: -15.625015258789062
    5. '(n' → logprob: -16.875015258789062
    6. '[
' → logprob: -17.375015258789062
    7. '[' → logprob: -17.625015258789062
    8. '<n' → logprob: -18.000015258789062
    9. '[[' → logprob: -18.750015258789062
    10. ' [' → logprob: -18.875015258789062

Token 417: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04333040490746498
    2. '[n' → logprob: -3.168330430984497
    3. '[' → logprob: -8.668330192565918
    4. ' -' → logprob: -9.168330192565918
    5. 'n' → logprob: -10.293330192565918
    6. '[-' → logprob: -11.293330192565918
    7. '][' → logprob: -13.043330192565918
    8. ' [' → logprob: -13.668330192565918
    9. '```' → logprob: -13.793330192565918
    10. '[m' → logprob: -14.293330192565918

Token 418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '   ' → logprob: -16.375
    4. '```' → logprob: -16.5
    5. '
' → logprob: -18.375
    6. '           ' → logprob: -19.5625
    7. '１' → logprob: -19.5625
    8. '     ' → logprob: -19.625
    9. '                   ' → logprob: -19.6875
    10. '  ' → logprob: -19.9375

Token 419: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5023231506347656
    2. '[j' → logprob: -1.0023231506347656
    3. '[x' → logprob: -4.002323150634766
    4. '[i' → logprob: -4.877323150634766
    5. '[' → logprob: -7.002323150634766
    6. '   ' → logprob: -8.502323150634766
    7. ']' → logprob: -8.627323150634766
    8. '```' → logprob: -8.752323150634766
    9. '[k' → logprob: -9.002323150634766
    10. ')[' → logprob: -9.502323150634766

Token 420: 'x' (ID: 87)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008634896948933601
    2. 'x' → logprob: -4.7586350440979
    3. ' j' → logprob: -11.258634567260742
    4. '0' → logprob: -13.133634567260742
    5. '   ' → logprob: -13.258634567260742
    6. 'i' → logprob: -13.633634567260742
    7. '[j' → logprob: -14.008634567260742
    8. ' ' → logprob: -14.883634567260742
    9. '	j' → logprob: -14.883634567260742
    10. ' x' → logprob: -15.258634567260742

Token 421: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017245612107217312
    2. '[i' → logprob: -6.626724720001221
    3. '[j' → logprob: -7.876724720001221
    4. 'i' → logprob: -11.751724243164062
    5. '   ' → logprob: -12.751724243164062
    6. 'j' → logprob: -13.001724243164062
    7. ' ][' → logprob: -13.251724243164062
    8. ']' → logprob: -13.376724243164062
    9. '[' → logprob: -13.376724243164062
    10. '[x' → logprob: -15.251724243164062

Token 422: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.896309739408025e-07
    2. ' i' → logprob: -14.125000953674316
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -21.25
    5. '	i' → logprob: -21.375
    6. '
' → logprob: -21.875
    7. 'j' → logprob: -22.375
    8. '0' → logprob: -22.375
    9. '[i' → logprob: -22.5
    10. ''i' → logprob: -23.125

Token 423: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011427151912357658
    2. '[j' → logprob: -9.125114440917969
    3. ']' → logprob: -12.625114440917969
    4. ' ][' → logprob: -14.000114440917969
    5. 'j' → logprob: -15.125114440917969
    6. '"][' → logprob: -15.750114440917969
    7. '[' → logprob: -15.750114440917969
    8. '])' → logprob: -15.750114440917969
    9. '```' → logprob: -16.12511444091797
    10. '   ' → logprob: -16.25011444091797

Token 424: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.339278580620885e-06
    2. ' j' → logprob: -14.000001907348633
    3. '<|end|>' → logprob: -14.125001907348633
    4. '```' → logprob: -15.875001907348633
    5. '$j' → logprob: -16.125001907348633
    6. '[j' → logprob: -16.625001907348633
    7. 'jax' → logprob: -16.625001907348633
    8. '	j' → logprob: -16.750001907348633
    9. '   ' → logprob: -16.875001907348633
    10. ',j' → logprob: -17.875001907348633

Token 425: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.229872087715194e-05
    2. '[k' → logprob: -9.875061988830566
    3. '[l' → logprob: -12.500061988830566
    4. ' ][' → logprob: -12.750061988830566
    5. '])' → logprob: -13.625061988830566
    6. 'k' → logprob: -14.000061988830566
    7. ']' → logprob: -14.125061988830566
    8. '[' → logprob: -14.500061988830566
    9. '"][' → logprob: -15.250061988830566
    10. ''][' → logprob: -15.250061988830566

Token 426: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -15.625
    3. '	k' → logprob: -19.875
    4. 'mod' → logprob: -20.5
    5. '"k' → logprob: -21.5
    6. '```' → logprob: -21.5
    7. '[k' → logprob: -22.125
    8. '_k' → logprob: -22.25
    9. ',k' → logprob: -22.375
    10. '*k' → logprob: -22.375

Token 427: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0046487110666930676
    2. 'l' → logprob: -5.504648685455322
    3. '[l' → logprob: -7.754648685455322
    4. ']' → logprob: -9.12964916229248
    5. '*l' → logprob: -11.00464916229248
    6. ']%' → logprob: -11.75464916229248
    7. '])
' → logprob: -13.37964916229248
    8. ' ])' → logprob: -13.75464916229248
    9. '   ' → logprob: -13.87964916229248
    10. ')' → logprob: -13.87964916229248

Token 428: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7159122824668884
    2. '%' → logprob: -0.9659122824668884
    3. ' %' → logprob: -2.590912342071533
    4. ')%' → logprob: -4.215912342071533
    5. ' *' → logprob: -4.465912342071533
    6. '*' → logprob: -4.590912342071533
    7. ']' → logprob: -4.715912342071533
    8. ']%' → logprob: -5.090912342071533
    9. '                       ' → logprob: -6.715912342071533
    10. '%x' → logprob: -7.715912342071533

Token 429: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.1041145626222715e-05
    2. '(mod' → logprob: -12.000011444091797
    3. ' mod' → logprob: -12.250011444091797
    4. '100' → logprob: -19.375011444091797
    5. '10' → logprob: -20.750011444091797
    6. 'MOD' → logprob: -21.250011444091797
    7. '	mod' → logprob: -22.000011444091797
    8. '```' → logprob: -22.000011444091797
    9. ' мод' → logprob: -22.125011444091797
    10. '(' → logprob: -22.125011444091797

Token 430: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: 'total' (ID: 9577)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6330311298370361
    2. ' =' → logprob: -1.3830311298370361
    3. '_' → logprob: -1.7580311298370361
    4. '_total' → logprob: -3.383031129837036
    5. '[' → logprob: -5.633030891418457
    6. ' +=' → logprob: -6.008030891418457
    7. '_=' → logprob: -6.883030891418457
    8. '```' → logprob: -7.258030891418457
    9. '_sum' → logprob: -7.383030891418457
    10. '   ' → logprob: -7.758030891418457

Token 433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033601049799472094
    2. ' ' → logprob: -6.003360271453857
    3. 'sum' → logprob: -7.128360271453857
    4. ' sum' → logprob: -9.5033597946167
    5. '(' → logprob: -12.2533597946167
    6. '(sum' → logprob: -13.3783597946167
    7. '   ' → logprob: -15.3783597946167
    8. ' (' → logprob: -15.8783597946167
    9. '```' → logprob: -15.8783597946167
    10. 'dp' → logprob: -16.003360748291016

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3133307993412018
    2. 'sum' → logprob: -1.3133307695388794
    3. '(sum' → logprob: -10.43833065032959
    4. ' sum' → logprob: -10.81333065032959
    5. '(' → logprob: -11.06333065032959
    6. ' ' → logprob: -13.31333065032959
    7. 'dp' → logprob: -13.56333065032959
    8. 'pow' → logprob: -15.18833065032959
    9. '```' → logprob: -15.18833065032959
    10. '=sum' → logprob: -16.188331604003906

Token 435: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008486981969326735
    2. ' for' → logprob: -7.250848770141602
    3. '
' → logprob: -9.000848770141602
    4. '```' → logprob: -11.500848770141602
    5. 'total' → logprob: -13.125848770141602
    6. '``' → logprob: -13.750848770141602
    7. ' 
' → logprob: -14.500848770141602
    8. '	for' → logprob: -15.375848770141602
    9. '  
' → logprob: -15.500848770141602
    10. '<|end|>' → logprob: -15.625848770141602

Token 436: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.045823566731997e-05
    2. 'total' → logprob: -11.625020027160645
    3. '```' → logprob: -12.000020027160645
    4. ' for' → logprob: -12.375020027160645
    5. '``' → logprob: -14.625020027160645
    6. '
' → logprob: -14.875020027160645
    7. '   ' → logprob: -16.25002098083496
    8. '	for' → logprob: -16.25002098083496
    9. '    
' → logprob: -17.25002098083496
    10. '(total' → logprob: -18.12502098083496

Token 437: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06362905353307724
    2. 'x' → logprob: -3.438629150390625
    3. 'l' → logprob: -3.813629150390625
    4. 'n' → logprob: -5.313629150390625
    5. ' i' → logprob: -7.063629150390625
    6. 'm' → logprob: -7.063629150390625
    7. 'a' → logprob: -7.563629150390625
    8. ' x' → logprob: -10.188629150390625
    9. ' l' → logprob: -10.313629150390625
    10. 's' → logprob: -10.438629150390625

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.054892443120479584
    2. 'in' → logprob: -2.9298925399780273
    3. ' ' → logprob: -12.304892539978027
    4. '0' → logprob: -12.804892539978027
    5. '[' → logprob: -14.679892539978027
    6. '```' → logprob: -14.679892539978027
    7. 'In' → logprob: -15.179892539978027
    8. ')' → logprob: -15.429892539978027
    9. 'range' → logprob: -15.429892539978027
    10. '	in' → logprob: -15.804892539978027

Token 439: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '(' → logprob: -18.3750057220459
    4. '[' → logprob: -18.5000057220459
    5. '(range' → logprob: -18.8750057220459
    6. '4' → logprob: -19.6250057220459
    7. '   ' → logprob: -21.0000057220459
    8. '```' → logprob: -21.5000057220459
    9. '
' → logprob: -21.8750057220459
    10. '0' → logprob: -22.2500057220459

Token 440: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.306760805164231e-05
    2. '4' → logprob: -11.25001335144043
    3. '(
' → logprob: -16.87501335144043
    4. ' (' → logprob: -17.62501335144043
    5. '   ' → logprob: -19.37501335144043
    6. '```' → logprob: -19.50001335144043
    7. ' ' → logprob: -19.87501335144043
    8. 'in' → logprob: -19.87501335144043
    9. '(N' → logprob: -20.12501335144043
    10. 'def' → logprob: -21.25001335144043

Token 441: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.875000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '0' → logprob: -16.375
    5. 'N' → logprob: -16.5
    6. '(' → logprob: -18.0
    7. '```' → logprob: -18.625
    8. '(N' → logprob: -18.875
    9. '10' → logprob: -20.625
    10. '
' → logprob: -21.125

Token 442: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28290849924087524
    2. '):' → logprob: -1.4079084396362305
    3. '   ' → logprob: -6.9079084396362305
    4. ':' → logprob: -8.03290843963623
    5. 'for' → logprob: -8.65790843963623
    6. '4' → logprob: -9.28290843963623
    7. ':
' → logprob: -9.53290843963623
    8. ')' → logprob: -10.53290843963623
    9. ',' → logprob: -11.15790843963623
    10. '```' → logprob: -11.40790843963623

Token 443: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06213707849383354
    2. ' for' → logprob: -3.0621371269226074
    3. '   ' → logprob: -4.312137126922607
    4. ' ' → logprob: -10.31213665008545
    5. '	for' → logprob: -11.43713665008545
    6. 'total' → logprob: -12.18713665008545
    7. '```' → logprob: -13.06213665008545
    8. '  ' → logprob: -13.81213665008545
    9. ' total' → logprob: -14.31213665008545
    10. '       ' → logprob: -15.31213665008545

Token 444: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1994775377388578e-05
    2. 'total' → logprob: -11.875012397766113
    3. ' for' → logprob: -12.250012397766113
    4. '```' → logprob: -15.750012397766113
    5. '   ' → logprob: -19.000011444091797
    6. '	for' → logprob: -19.375011444091797
    7. 'j' → logprob: -20.250011444091797
    8. ' total' → logprob: -20.375011444091797
    9. 'i' → logprob: -20.625011444091797
    10. '
' → logprob: -20.750011444091797

Token 445: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005760280764661729
    2. 'l' → logprob: -7.500576019287109
    3. ' j' → logprob: -10.75057601928711
    4. 'total' → logprob: -14.12557601928711
    5. 'k' → logprob: -14.25057601928711
    6. 'i' → logprob: -15.25057601928711
    7. 'x' → logprob: -17.37557601928711
    8. '0' → logprob: -17.87557601928711
    9. '   ' → logprob: -17.87557601928711
    10. ' l' → logprob: -17.87557601928711

Token 446: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931948065757751
    2. ' in' → logprob: -0.6931948065757751
    3. '(' → logprob: -10.943194389343262
    4. '   ' → logprob: -10.943194389343262
    5. ' ' → logprob: -11.943194389343262
    6. '[' → logprob: -13.693194389343262
    7. '4' → logprob: -13.693194389343262
    8. '```' → logprob: -13.693194389343262
    9. 'i' → logprob: -14.943194389343262
    10. 'for' → logprob: -15.068194389343262

Token 447: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4746151268482208
    2. '4' → logprob: -0.9746150970458984
    3. '(' → logprob: -8.099615097045898
    4. ' range' → logprob: -8.474615097045898
    5. 'for' → logprob: -11.224615097045898
    6. '(range' → logprob: -11.599615097045898
    7. ' ' → logprob: -13.349615097045898
    8. '```' → logprob: -13.724615097045898
    9. '
' → logprob: -16.3496150970459
    10. '_range' → logprob: -16.5996150970459

Token 448: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868776261806488
    2. '4' → logprob: -1.1368776559829712
    3. 'range' → logprob: -12.63687801361084
    4. ' ' → logprob: -13.63687801361084
    5. '```' → logprob: -13.63687801361084
    6. 'for' → logprob: -14.88687801361084
    7. ' (' → logprob: -14.88687801361084
    8. ' range' → logprob: -16.636877059936523
    9. '   ' → logprob: -16.636877059936523
    10. '0' → logprob: -17.011877059936523

Token 449: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. 'for' → logprob: -16.625
    4. '```' → logprob: -17.125
    5. 'range' → logprob: -17.25
    6. '0' → logprob: -17.625
    7. '(' → logprob: -19.0
    8. '   ' → logprob: -19.0
    9. ')' → logprob: -20.0
    10. '...' → logprob: -20.625

Token 450: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.37696602940559387
    2. '():
' → logprob: -1.6269659996032715
    3. '):' → logprob: -2.8769659996032715
    4. '():' → logprob: -4.1269659996032715
    5. '```' → logprob: -4.6269659996032715
    6. '   ' → logprob: -4.8769659996032715
    7. '()' → logprob: -4.8769659996032715
    8. ':' → logprob: -5.0019659996032715
    9. ':
' → logprob: -5.6269659996032715
    10. '       ' → logprob: -5.7519659996032715

Token 451: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019725270103663206
    2. ' for' → logprob: -7.126972675323486
    3. '   ' → logprob: -7.376972675323486
    4. '       ' → logprob: -7.626972675323486
    5. '```' → logprob: -9.876972198486328
    6. 'total' → logprob: -13.376972198486328
    7. '	for' → logprob: -13.751972198486328
    8. '``' → logprob: -15.001972198486328
    9. ' ' → logprob: -15.251972198486328
    10. '
' → logprob: -16.626972198486328

Token 452: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.961759259458631e-06
    2. ' for' → logprob: -12.250004768371582
    3. '```' → logprob: -16.7500057220459
    4. '	for' → logprob: -19.3750057220459
    5. '   ' → logprob: -19.7500057220459
    6. 'k' → logprob: -21.2500057220459
    7. '       ' → logprob: -22.1250057220459
    8. 'For' → logprob: -22.8750057220459
    9. '``' → logprob: -23.2500057220459
    10. '
' → logprob: -23.3750057220459

Token 453: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.4121114822482923e-06
    2. ' k' → logprob: -12.625003814697266
    3. 'l' → logprob: -17.625003814697266
    4. 'for' → logprob: -17.875003814697266
    5. '```' → logprob: -20.625003814697266
    6. ' ' → logprob: -21.000003814697266
    7. '   ' → logprob: -21.625003814697266
    8. '	k' → logprob: -22.000003814697266
    9. ' for' → logprob: -22.250003814697266
    10. '0' → logprob: -22.625003814697266

Token 454: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1270405501127243
    2. ' in' → logprob: -2.1270406246185303
    3. '(' → logprob: -9.25204086303711
    4. 'range' → logprob: -11.62704086303711
    5. '4' → logprob: -12.75204086303711
    6. '```' → logprob: -13.37704086303711
    7. '   ' → logprob: -13.87704086303711
    8. '(range' → logprob: -14.25204086303711
    9. ' range' → logprob: -14.62704086303711
    10. ' ' → logprob: -14.87704086303711

Token 455: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0087158577516675
    2. '(' → logprob: -5.508715629577637
    3. ' range' → logprob: -5.758715629577637
    4. '4' → logprob: -6.883715629577637
    5. 'in' → logprob: -7.883715629577637
    6. '(range' → logprob: -9.758715629577637
    7. '```' → logprob: -12.633715629577637
    8. ' in' → logprob: -12.633715629577637
    9. 'for' → logprob: -12.758715629577637
    10. '0' → logprob: -12.883715629577637

Token 456: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06449470669031143
    2. 'range' → logprob: -3.0644946098327637
    3. '4' → logprob: -4.189494609832764
    4. 'in' → logprob: -7.564494609832764
    5. ' range' → logprob: -9.439495086669922
    6. '(range' → logprob: -11.064495086669922
    7. '```' → logprob: -11.939495086669922
    8. 'for' → logprob: -12.314495086669922
    9. ' (' → logprob: -14.064495086669922
    10. ' in' → logprob: -14.689495086669922

Token 457: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. 'range' → logprob: -16.75
    4. '(' → logprob: -17.25
    5. '```' → logprob: -18.875
    6. ')' → logprob: -19.875
    7. '   ' → logprob: -20.0
    8. '۴' → logprob: -20.5
    9. ' four' → logprob: -20.5
    10. ' range' → logprob: -20.875

Token 458: '):
' (ID: 1883)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.378517746925354
    2. '):
' → logprob: -1.878517746925354
    3. ':
' → logprob: -2.6285176277160645
    4. ' for' → logprob: -3.1285176277160645
    5. ':' → logprob: -4.3785176277160645
    6. '   ' → logprob: -4.5035176277160645
    7. '):' → logprob: -5.2535176277160645
    8. ' in' → logprob: -5.6285176277160645
    9. '       ' → logprob: -5.7535176277160645
    10. ')' → logprob: -5.8785176277160645

Token 459: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45523107051849365
    2. ' for' → logprob: -1.8302310705184937
    3. '       ' → logprob: -1.9552310705184937
    4. '           ' → logprob: -3.330231189727783
    5. '   ' → logprob: -3.705231189727783
    6. '	for' → logprob: -5.955231189727783
    7. '```' → logprob: -7.580231189727783
    8. ' ' → logprob: -8.455230712890625
    9. '	       ' → logprob: -11.080230712890625
    10. '<|end|>' → logprob: -11.205230712890625

Token 460: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.15310683415737e-05
    2. ' for' → logprob: -10.750021934509277
    3. '           ' → logprob: -18.62502098083496
    4. '	for' → logprob: -20.12502098083496
    5. 'total' → logprob: -21.00002098083496
    6. '```' → logprob: -21.62502098083496
    7. '   ' → logprob: -22.00002098083496
    8. 'For' → logprob: -23.87502098083496
    9. '       ' → logprob: -24.00002098083496
    10. '
' → logprob: -24.37502098083496

Token 461: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.15310683415737e-05
    2. ' l' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.75002098083496
    4. ' in' → logprob: -19.50002098083496
    5. ' ' → logprob: -20.25002098083496
    6. 'in' → logprob: -21.12502098083496
    7. '	l' → logprob: -21.25002098083496
    8. '0' → logprob: -21.37502098083496
    9. '  ' → logprob: -21.50002098083496
    10. '1' → logprob: -22.75002098083496

Token 462: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20141693949699402
    2. 'in' → logprob: -1.7014169692993164
    3. '   ' → logprob: -14.076416969299316
    4. ' ' → logprob: -14.201416969299316
    5. 'range' → logprob: -14.201416969299316
    6. '```' → logprob: -14.576416969299316
    7. 'In' → logprob: -15.326416969299316
    8. '	in' → logprob: -16.201416015625
    9. '  ' → logprob: -16.451416015625
    10. '0' → logprob: -16.576416015625

Token 463: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00010151672904612496
    2. '4' → logprob: -10.000101089477539
    3. ' range' → logprob: -10.000101089477539
    4. '(' → logprob: -11.750101089477539
    5. '(range' → logprob: -13.250101089477539
    6. 'in' → logprob: -13.875101089477539
    7. '```' → logprob: -17.75010108947754
    8. '[' → logprob: -18.00010108947754
    9. 'for' → logprob: -19.75010108947754
    10. 'Range' → logprob: -19.75010108947754

Token 464: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010808453895151615
    2. 'in' → logprob: -5.26080846786499
    3. 'range' → logprob: -5.51080846786499
    4. '4' → logprob: -6.63580846786499
    5. ' range' → logprob: -8.885807991027832
    6. '(range' → logprob: -9.885807991027832
    7. ' in' → logprob: -11.760807991027832
    8. '```' → logprob: -12.760807991027832
    9. ' (' → logprob: -13.260807991027832
    10. '[' → logprob: -14.510807991027832

Token 465: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.896309739408025e-07
    2. 'range' → logprob: -14.125000953674316
    3. ' ' → logprob: -18.125
    4. '(' → logprob: -18.375
    5. ' range' → logprob: -18.75
    6. '0' → logprob: -19.875
    7. '   ' → logprob: -20.25
    8. '```' → logprob: -20.25
    9. '' → logprob: -20.75
    10. ')' → logprob: -20.875

Token 466: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4310687482357025
    2. ':
' → logprob: -1.931068778038025
    3. '):
' → logprob: -2.3060686588287354
    4. '):' → logprob: -2.6810686588287354
    5. '=' → logprob: -4.6810688972473145
    6. 'total' → logprob: -5.3060688972473145
    7. '+' → logprob: -5.5560688972473145
    8. ')' → logprob: -5.6810688972473145
    9. 'in' → logprob: -5.8060688972473145
    10. '       ' → logprob: -6.1810688972473145

Token 467: '               ' (ID: 506)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.17049960792064667
    2. '   ' → logprob: -2.170499563217163
    3. ' total' → logprob: -3.170499563217163
    4. '       ' → logprob: -7.670499801635742
    5. '	total' → logprob: -9.045499801635742
    6. '```' → logprob: -10.545499801635742
    7. '_total' → logprob: -11.545499801635742
    8. '(total' → logprob: -11.920499801635742
    9. ' ' → logprob: -12.045499801635742
    10. '           ' → logprob: -12.170499801635742

Token 468: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0002891066251322627
    2. ' total' → logprob: -8.750288963317871
    3. '   ' → logprob: -9.000288963317871
    4. '                   ' → logprob: -12.125288963317871
    5. '               ' → logprob: -14.000288963317871
    6. 'if' → logprob: -14.500288963317871
    7. '	total' → logprob: -15.000288963317871
    8. '           ' → logprob: -16.375289916992188
    9. '       ' → logprob: -17.000289916992188
    10. '
' → logprob: -17.250289916992188

Token 469: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012758607044816017
    2. '=' → logprob: -4.762758731842041
    3. ' +=' → logprob: -5.512758731842041
    4. '+=(' → logprob: -9.512758255004883
    5. ' =' → logprob: -10.762758255004883
    6. ']+=' → logprob: -13.262758255004883
    7. '=(' → logprob: -13.512758255004883
    8. '+' → logprob: -13.762758255004883
    9. '%=' → logprob: -14.262758255004883
    10. '```' → logprob: -14.887758255004883

Token 470: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.029927633702754974
    2. ' (' → logprob: -3.5299277305603027
    3. '(dp' → logprob: -9.529927253723145
    4. '(' → logprob: -9.529927253723145
    5. '(t' → logprob: -11.029927253723145
    6. '(mod' → logprob: -12.654927253723145
    7. '(sum' → logprob: -13.404927253723145
    8. '(max' → logprob: -13.904927253723145
    9. '(tmp' → logprob: -14.029927253723145
    10. '(final' → logprob: -14.029927253723145

Token 471: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0032130072358995676
    2. '(total' → logprob: -5.753212928771973
    3. ' total' → logprob: -10.253212928771973
    4. ',total' → logprob: -18.62821388244629
    5. '$total' → logprob: -20.12821388244629
    6. ' (' → logprob: -20.25321388244629
    7. '_total' → logprob: -20.25321388244629
    8. '	total' → logprob: -20.37821388244629
    9. 'tot' → logprob: -20.87821388244629
    10. 'Total' → logprob: -20.87821388244629

Token 472: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804149478673935
    2. ' +' → logprob: -3.288041591644287
    3. '+
' → logprob: -19.038042068481445
    4. ' ' → logprob: -19.163042068481445
    5. '＋' → logprob: -19.788042068481445
    6. '```' → logprob: -21.288042068481445
    7. '+[' → logprob: -21.288042068481445
    8. '+t' → logprob: -21.538042068481445
    9. '+n' → logprob: -21.663042068481445
    10. '+d' → logprob: -21.663042068481445

Token 473: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.935296834039036e-06
    2. ' dp' → logprob: -12.75000286102295
    3. '(dp' → logprob: -20.250003814697266
    4. '	dp' → logprob: -20.500003814697266
    5. '   ' → logprob: -21.750003814697266
    6. 'dc' → logprob: -22.250003814697266
    7. 'df' → logprob: -22.250003814697266
    8. '           ' → logprob: -23.000003814697266
    9. '```' → logprob: -23.250003814697266
    10. '_dp' → logprob: -23.250003814697266

Token 474: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.0002582402084954083
    2. '[' → logprob: -8.500258445739746
    3. '[n' → logprob: -10.125258445739746
    4. '[len' → logprob: -12.125258445739746
    5. '```' → logprob: -12.125258445739746
    6. 'N' → logprob: -13.000258445739746
    7. '[-' → logprob: -14.375258445739746
    8. '(N' → logprob: -14.625258445739746
    9. '[int' → logprob: -15.250258445739746
    10. '[
' → logprob: -16.25025749206543

Token 475: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.939851037808694e-05
    2. ']' → logprob: -10.750029563903809
    3. '[' → logprob: -13.250029563903809
    4. '[i' → logprob: -13.500029563903809
    5. ' ][' → logprob: -13.500029563903809
    6. ')[' → logprob: -13.875029563903809
    7. '   ' → logprob: -14.750029563903809
    8. '[n' → logprob: -15.000029563903809
    9. '[N' → logprob: -15.500029563903809
    10. '}[' → logprob: -15.875029563903809

Token 476: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.961759259458631e-06
    2. ' i' → logprob: -12.250004768371582
    3. '[i' → logprob: -16.6250057220459
    4. '0' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.6250057220459
    6. '	i' → logprob: -18.0000057220459
    7. ',i' → logprob: -18.6250057220459
    8. ')i' → logprob: -18.7500057220459
    9. 'k' → logprob: -19.0000057220459
    10. '_i' → logprob: -19.2500057220459

Token 477: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.6240566083070007e-06
    2. '[j' → logprob: -14.500001907348633
    3. ']' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.500001907348633
    5. ' ][' → logprob: -15.500001907348633
    6. '"][' → logprob: -16.000001907348633
    7. ''][' → logprob: -16.000001907348633
    8. 'j' → logprob: -18.875001907348633
    9. ']][' → logprob: -19.125001907348633
    10. '       ' → logprob: -19.500001907348633

Token 478: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.650518920039758e-06
    2. ' j' → logprob: -12.625003814697266
    3. 'k' → logprob: -15.250003814697266
    4. '	j' → logprob: -18.875003814697266
    5. '[j' → logprob: -19.375003814697266
    6. 'jk' → logprob: -20.375003814697266
    7. '   ' → logprob: -20.500003814697266
    8. '$j' → logprob: -21.000003814697266
    9. 'l' → logprob: -21.375003814697266
    10. '```' → logprob: -21.500003814697266

Token 479: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00016861737822182477
    2. '[k' → logprob: -8.750168800354004
    3. 'k' → logprob: -12.000168800354004
    4. ' ][' → logprob: -13.625168800354004
    5. '"][' → logprob: -13.875168800354004
    6. ']' → logprob: -14.375168800354004
    7. ''][' → logprob: -14.625168800354004
    8. '[' → logprob: -15.500168800354004
    9. '   ' → logprob: -15.500168800354004
    10. '
' → logprob: -16.250167846679688

Token 480: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1517960956552997e-05
    2. ' k' → logprob: -11.375011444091797
    3. '0' → logprob: -16.875011444091797
    4. '	k' → logprob: -17.750011444091797
    5. '{k' → logprob: -18.625011444091797
    6. '[k' → logprob: -19.000011444091797
    7. '][' → logprob: -19.750011444091797
    8. ',k' → logprob: -20.125011444091797
    9. 'kl' → logprob: -20.250011444091797
    10. ' ' → logprob: -20.375011444091797

Token 481: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.3856492842023727e-06
    2. '[l' → logprob: -14.000000953674316
    3. 'l' → logprob: -14.750000953674316
    4. '"][' → logprob: -16.625001907348633
    5. ' ][' → logprob: -16.875001907348633
    6. ']' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.875001907348633
    8. ''][' → logprob: -19.000001907348633
    9. '])' → logprob: -19.500001907348633
    10. '	l' → logprob: -20.375001907348633

Token 482: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.320199877838604e-07
    2. ' l' → logprob: -14.875
    3. '0' → logprob: -17.5
    4. '	l' → logprob: -18.25
    5. '4' → logprob: -19.0
    6. '[l' → logprob: -19.125
    7. '   ' → logprob: -19.25
    8. '1' → logprob: -19.5
    9. '_l' → logprob: -19.625
    10. '(l' → logprob: -20.25

Token 483: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023267146199941635
    2. '])' → logprob: -3.7732670307159424
    3. ')%' → logprob: -11.023266792297363
    4. ']' → logprob: -12.398266792297363
    5. ' )' → logprob: -14.523266792297363
    6. '）' → logprob: -15.273266792297363
    7. '`)' → logprob: -15.523266792297363
    8. '})' → logprob: -15.898266792297363
    9. '))' → logprob: -16.52326774597168
    10. ''])' → logprob: -17.02326774597168

Token 484: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.007744563743472099
    2. ' %' → logprob: -5.007744789123535
    3. ')' → logprob: -7.382744789123535
    4. ')%' → logprob: -7.882744789123535
    5. 'mod' → logprob: -11.382744789123535
    6. ' mod' → logprob: -12.257744789123535
    7. ']%' → logprob: -12.757744789123535
    8. ' %=' → logprob: -13.132744789123535
    9. '```' → logprob: -13.132744789123535
    10. '
' → logprob: -14.132744789123535

Token 485: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.320199877838604e-07
    2. ' mod' → logprob: -15.0
    3. '(mod' → logprob: -19.25
    4. '10' → logprob: -21.375
    5. '	mod' → logprob: -23.625
    6. ' мод' → logprob: -25.25
    7. '100' → logprob: -25.5
    8. '```' → logprob: -26.0
    9. 'MOD' → logprob: -26.125
    10. 'moder' → logprob: -26.875

Token 486: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.875000953674316
    3. ' print' → logprob: -15.000000953674316
    4. '#print' → logprob: -15.250000953674316
    5. '
' → logprob: -15.500000953674316
    6. 'return' → logprob: -16.875001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. '#' → logprob: -18.000001907348633
    9. '(print' → logprob: -18.750001907348633
    10. '\' → logprob: -19.250001907348633

Token 487: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -13.875001907348633
    3. ' print' → logprob: -15.125001907348633
    4. '#print' → logprob: -16.500001907348633
    5. '``' → logprob: -17.125001907348633
    6. 'return' → logprob: -17.500001907348633
    7. 'pr' → logprob: -17.625001907348633
    8. '
' → logprob: -17.750001907348633
    9. '<|end|>' → logprob: -17.750001907348633
    10. '\' → logprob: -18.250001907348633

Token 488: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -2.868328920158092e-05
    2. '(' → logprob: -10.625028610229492
    3. 'total' → logprob: -12.375028610229492
    4. ' (' → logprob: -18.000028610229492
    5. '(t' → logprob: -18.125028610229492
    6. '(final' → logprob: -18.125028610229492
    7. '()' → logprob: -18.250028610229492
    8. ',total' → logprob: -18.375028610229492
    9. '(
' → logprob: -18.625028610229492
    10. '((' → logprob: -18.625028610229492

Token 489: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')`' → logprob: -14.875000953674316
    3. '))' → logprob: -15.750000953674316
    4. ' )' → logprob: -16.25
    5. '`)' → logprob: -17.625
    6. ')
' → logprob: -17.625
    7. '')' → logprob: -17.875
    8. '(' → logprob: -18.25
    9. ')}' → logprob: -19.875
    10. '()' → logprob: -19.875

Token 490: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: ' pas' (ID: 2173)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: ' sûr' (ID: 46415)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: ' tout' (ID: 5501)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2902216911315918
    2. 'r' → logprob: -1.4152216911315918
    3. 'quoi' → logprob: -2.040221691131592
    4. 'la' → logprob: -2.290221691131592
    5. 'fonction' → logprob: -3.040221691131592
    6. 'print' → logprob: -3.415221691131592
    7. 'anything' → logprob: -3.415221691131592
    8. 'python' → logprob: -3.540221691131592
    9. 'nothing' → logprob: -4.040221691131592
    10. 'le' → logprob: -4.165221691131592

Token 495: ' comprendre' (ID: 48877)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5824898481369019
    2. '<|end|>' → logprob: -0.9574898481369019
    3. '```' → logprob: -3.7074899673461914
    4. '#' → logprob: -4.207489967346191
    5. '
' → logprob: -4.832489967346191
    6. ']' → logprob: -5.582489967346191
    7. '[' → logprob: -6.082489967346191
    8. '}' → logprob: -6.832489967346191
    9. '<|end|>' → logprob: -7.082489967346191
    10. 'n' → logprob: -8.082489967346191

Token 497: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: ' doit' (ID: 21822)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' marcher' (ID: 171848)
  Prédit: ' fonctionner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctionner' → logprob: -0.37116539478302
    2. ' marcher' → logprob: -1.74616539478302
    3. 'fonction' → logprob: -3.1211652755737305
    4. 'work' → logprob: -3.2461652755737305
    5. ' work' → logprob: -4.3711652755737305
    6. 'être' → logprob: -4.6211652755737305
    7. 'print' → logprob: -4.8711652755737305
    8. 'march' → logprob: -5.4961652755737305
    9. '_work' → logprob: -5.9961652755737305
    10. ' ' → logprob: -6.2461652755737305

Token 501: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 499
Tokens correctement prédits (1ère position, stricte): 228
Tokens correctement prédits (1ère position, avec adaptation): 244
Tokens correctement prédits (top 10): 398
Précision stricte (1ère position): 45.69%
Précision adaptée (1ère position): 48.90%
Précision (top 10): 79.76%
================================================================================
