================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python3

from collections import deque

class PriorityQueue:
    def __init__(self, size):
        self.tree = [None] * size
        self.bottom = 0

    def add(self, data):
        n = self.bottom
        self.bottom += 1
        self.tree[n] = data
        while n != 0:
            parent = (n - 1) // 2
            if self.tree[parent][1] < self.tree[n][1]:
                self.tree[parent], self.tree[n] = self.tree[n], self.tree[parent]
                n = parent
            else:
                return

    def top(self):
        return self.tree[0]

    def size(self):
        return self.bottom

    def pop_top(self):
        rv = self.tree[0]
        self.tree[0] = self.tree[self.bottom - 1]
        self.bottom -= 1
        n = 0
        while True:
            child1 = 2 * n + 1
            if child1 >= self.bottom:
                return rv
            child2 = 2 * n + 2
            if child2 >= self.bottom:
                child2 = child1
            if self.tree[n][1] > self.tree[child1][1] and self.tree[n][1] > self.tree[child2][1]:
                return rv
            elif self.tree[child1][1] > self.tree[child2][1]:
                self.tree[n], self.tree[child1] = self.tree[child1], self.tree[n]
                n = child1
            else:
                self.tree[n], self.tree[child2] = self.tree[child2], self.tree[n]
                n = child2
        return rv

def solve(N, M, A, B):
    ans = 0
    all_works = deque(sorted(zip(A, B), key=lambda x: x[0]))
    pq = PriorityQueue(N)
    for d in range(1, M + 1):
        while all_works and all_works[0][0] == d:
            work = all_works.popleft()
            pq.add(work)
        if pq.size():
            work = pq.pop_top()
            ans += work[1]
    return ans

if __name__ == '__main__':
    N, M = map(int, input().split())
    A = [0] * N
    B = [0] * N
    for idx in range(N):
        A[idx], B[idx] = map(int, input().split())
    ans = solve(N, M, A, B)
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/env' → logprob: -0.3339137136936188
    2. '/' → logprob: -2.083913803100586
    3. '/python' → logprob: -2.083913803100586
    4. '/bin' → logprob: -3.583913803100586
    5. '/bash' → logprob: -4.958913803100586
    6. 'python' → logprob: -8.708913803100586
    7. '/b' → logprob: -11.083913803100586
    8. '/usr' → logprob: -11.958913803100586
    9. 'env' → logprob: -12.458913803100586
    10. ' /' → logprob: -12.833913803100586

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.10029767453670502
    2. ' python' → logprob: -2.350297689437866
    3. 'bash' → logprob: -9.475297927856445
    4. ' bash' → logprob: -11.725297927856445
    5. 'py' → logprob: -13.475297927856445
    6. 'perl' → logprob: -13.475297927856445
    7. 'php' → logprob: -13.975297927856445
    8. 'ruby' → logprob: -14.100297927856445
    9. '```' → logprob: -14.600297927856445
    10. 'node' → logprob: -14.725297927856445

Token 5: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10503564774990082
    2. '\' → logprob: -2.8550355434417725
    3. 'import' → logprob: -4.355035781860352
    4. '```' → logprob: -4.480035781860352
    5. '  
' → logprob: -4.730035781860352
    6. '3' → logprob: -5.480035781860352
    7. ' 
' → logprob: -6.230035781860352
    8. '' → logprob: -7.230035781860352
    9. '\x' → logprob: -7.605035781860352
    10. '\r' → logprob: -7.730035781860352

Token 6: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22186322510242462
    2. 'import' → logprob: -1.7218632698059082
    3. '```' → logprob: -4.721863269805908
    4. '\' → logprob: -5.346863269805908
    5. '
' → logprob: -5.971863269805908
    6. '  
' → logprob: -6.471863269805908
    7. '' → logprob: -7.596863269805908
    8. ' 
' → logprob: -7.846863269805908
    9. 'newline' → logprob: -8.09686279296875
    10. 'print' → logprob: -8.22186279296875

Token 7: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.056324854493141174
    2. '\n' → logprob: -3.1813249588012695
    3. 'print' → logprob: -4.4313249588012695
    4. '\' → logprob: -7.9313249588012695
    5. '```' → logprob: -7.9313249588012695
    6. '' → logprob: -9.18132495880127
    7. '#' → logprob: -9.43132495880127
    8. ' import' → logprob: -9.68132495880127
    9. ' 
' → logprob: -9.93132495880127
    10. '(import' → logprob: -10.18132495880127

Token 8: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.14686474204063416
    2. ' sys' → logprob: -2.396864652633667
    3. ' collections' → logprob: -3.896864652633667
    4. ' ' → logprob: -5.021864891052246
    5. ' flask' → logprob: -5.396864891052246
    6. ' pathlib' → logprob: -5.646864891052246
    7. ' math' → logprob: -5.896864891052246
    8. ' argparse' → logprob: -6.521864891052246
    9. ' itertools' → logprob: -7.396864891052246
    10. ' typing' → logprob: -7.396864891052246

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6121336817741394
    2. '.' → logprob: -1.4871337413787842
    3. 'import' → logprob: -1.4871337413787842
    4. ' .' → logprob: -6.112133502960205
    5. ' ' → logprob: -6.737133502960205
    6. '.Counter' → logprob: -7.237133502960205
    7. '.import' → logprob: -7.362133502960205
    8. '```' → logprob: -7.362133502960205
    9. 'from' → logprob: -9.487133979797363
    10. '_' → logprob: -9.737133979797363

Token 10: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.06276523321866989
    2. ' deque' → logprob: -3.187765121459961
    3. ' Counter' → logprob: -4.687765121459961
    4. ' abc' → logprob: -4.812765121459961
    5. 'deque' → logprob: -6.687765121459961
    6. ' named' → logprob: -7.687765121459961
    7. ' collections' → logprob: -8.687765121459961
    8. ' Ordered' → logprob: -9.187765121459961
    9. 'abc' → logprob: -9.562765121459961
    10. 'Counter' → logprob: -9.562765121459961

Token 11: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8705199956893921
    2. '```' → logprob: -1.745519995689392
    3. 'import' → logprob: -2.3705201148986816
    4. '<|end|>' → logprob: -2.7455201148986816
    5. 'newline' → logprob: -2.8705201148986816
    6. '

' → logprob: -2.9955201148986816
    7. '\n' → logprob: -3.1205201148986816
    8. '(' → logprob: -3.2455201148986816
    9. '(
' → logprob: -4.370520114898682
    10. '[' → logprob: -4.745520114898682

Token 12: 'class' (ID: 1444)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048044316470623016
    2. 'def' → logprob: -3.548044204711914
    3. 'a' → logprob: -5.423044204711914
    4. '```' → logprob: -5.548044204711914
    5. '`' → logprob: -6.173044204711914
    6. 'b' → logprob: -6.173044204711914
    7. 'q' → logprob: -6.798044204711914
    8. '\' → logprob: -7.173044204711914
    9. 'import' → logprob: -7.423044204711914
    10. '#' → logprob: -7.798044204711914

Token 13: ' Priority' (ID: 54625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21730823814868927
    2. ' De' → logprob: -1.7173082828521729
    3. ' My' → logprob: -5.467308044433594
    4. ' Space' → logprob: -6.592308044433594
    5. ' Data' → logprob: -6.592308044433594
    6. ' Queue' → logprob: -6.592308044433594
    7. ' Stack' → logprob: -6.842308044433594
    8. ' Task' → logprob: -6.842308044433594
    9. ' B' → logprob: -7.467308044433594
    10. ' Object' → logprob: -7.592308044433594

Token 14: 'Queue' (ID: 9801)
  Prédit: 'Queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Queue' → logprob: -0.0047556147910654545
    2. ':' → logprob: -5.37975549697876
    3. 'Deque' → logprob: -10.254755973815918
    4. ' ' → logprob: -11.129755973815918
    5. '(queue' → logprob: -11.254755973815918
    6. ' Queue' → logprob: -11.254755973815918
    7. '(' → logprob: -11.379755973815918
    8. 'Que' → logprob: -12.004755973815918
    9. 'Buffer' → logprob: -12.129755973815918
    10. 'Q' → logprob: -12.129755973815918

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010681778658181429
    2. '(' → logprob: -7.001068115234375
    3. '(object' → logprob: -10.001068115234375
    4. ' :' → logprob: -10.251068115234375
    5. '):' → logprob: -10.251068115234375
    6. '():' → logprob: -10.876068115234375
    7. ':**' → logprob: -11.751068115234375
    8. ':
' → logprob: -13.001068115234375
    9. '<|end|>' → logprob: -13.376068115234375
    10. '[' → logprob: -13.376068115234375

Token 16: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9433565139770508
    2. ':' → logprob: -1.4433565139770508
    3. ' ' → logprob: -2.568356513977051
    4. '(object' → logprob: -2.568356513977051
    5. '   ' → logprob: -2.693356513977051
    6. ' (' → logprob: -2.693356513977051
    7. ' def' → logprob: -3.068356513977051
    8. '<|end|>' → logprob: -4.068356513977051
    9. ' :' → logprob: -5.693356513977051
    10. 'def' → logprob: -5.943356513977051

Token 17: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10877113789319992
    2. 'def' (adapté à ' def') → logprob: -2.3587710857391357
    3. '   ' → logprob: -4.858771324157715
    4. ' deque' → logprob: -8.483771324157715
    5. 'deque' → logprob: -8.733771324157715
    6. 'de' → logprob: -8.983771324157715
    7. '    ' → logprob: -9.108771324157715
    8. ' ' → logprob: -9.858771324157715
    9. ' de' → logprob: -10.358771324157715
    10. '(' → logprob: -10.983771324157715

Token 18: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.6824198961257935
    2. ' init' → logprob: -1.0574198961257935
    3. ' __' → logprob: -1.9324198961257935
    4. '_init' → logprob: -6.682419776916504
    5. '```' → logprob: -7.307419776916504
    6. ' def' → logprob: -9.557419776916504
    7. ' enqueue' → logprob: -9.682419776916504
    8. 'it' → logprob: -9.932419776916504
    9. '__' → logprob: -9.932419776916504
    10. ' push' → logprob: -10.182419776916504

Token 19: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.25
    3. 'in' → logprob: -19.0
    4. 'ini' → logprob: -19.0
    5. '```' → logprob: -20.25
    6. '_init' → logprob: -20.625
    7. 'iter' → logprob: -21.125
    8. 'int' → logprob: -21.125
    9. '	init' → logprob: -21.375
    10. 'innit' → logprob: -21.5

Token 20: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004766291938722134
    2. '__' → logprob: -5.379766464233398
    3. '__(
' → logprob: -9.504766464233398
    4. '(' → logprob: -10.879766464233398
    5. '__((' → logprob: -10.879766464233398
    6. '__(*' → logprob: -11.629766464233398
    7. '(self' → logprob: -11.754766464233398
    8. '__('' → logprob: -12.129766464233398
    9. '_(' → logprob: -12.754766464233398
    10. '_' → logprob: -13.004766464233398

Token 21: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026205103495158255
    2. ' self' → logprob: -8.250262260437012
    3. ')' → logprob: -15.000262260437012
    4. ' ' → logprob: -15.500262260437012
    5. '(self' → logprob: -16.250261306762695
    6. ',self' → logprob: -16.625261306762695
    7. '_self' → logprob: -18.000261306762695
    8. '	self' → logprob: -18.125261306762695
    9. '[self' → logprob: -18.250261306762695
    10. 's' → logprob: -18.625261306762695

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2555185556411743
    2. ')' → logprob: -1.7555185556411743
    3. 'self' → logprob: -4.130518436431885
    4. ' ,' → logprob: -4.755518436431885
    5. ' )' → logprob: -4.755518436431885
    6. '(self' → logprob: -5.380518436431885
    7. '(' → logprob: -5.880518436431885
    8. ' self' → logprob: -6.005518436431885
    9. '_' → logprob: -6.005518436431885
    10. '_self' → logprob: -6.380518436431885

Token 23: ' size' (ID: 2349)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.609629213809967
    2. 'self' → logprob: -1.8596291542053223
    3. ' capacity' → logprob: -2.4846291542053223
    4. ' )' → logprob: -2.8596291542053223
    5. 'capacity' → logprob: -2.8596291542053223
    6. ' ):' → logprob: -3.2346291542053223
    7. ')' → logprob: -3.9846291542053223
    8. '):' → logprob: -4.359629154205322
    9. ' max' → logprob: -4.609629154205322
    10. ' iterable' → logprob: -5.234629154205322

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004089085850864649
    2. '=' → logprob: -5.879088878631592
    3. ')' → logprob: -7.379088878631592
    4. ':' → logprob: -8.00408935546875
    5. ',' → logprob: -8.37908935546875
    6. ' ):' → logprob: -9.62908935546875
    7. '=None' → logprob: -10.87908935546875
    8. '   ' → logprob: -13.00408935546875
    9. '):
' → logprob: -13.00408935546875
    10. '_' → logprob: -13.25408935546875

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10502170771360397
    2. '    ' → logprob: -3.3550217151641846
    3. 'self' → logprob: -3.4800217151641846
    4. '        ' → logprob: -4.6050214767456055
    5. ')' → logprob: -5.1050214767456055
    6. ' self' → logprob: -5.2300214767456055
    7. '   ' → logprob: -5.3550214767456055
    8. ' ' → logprob: -5.7300214767456055
    9. '     ' → logprob: -7.3550214767456055
    10. '(' → logprob: -7.7300214767456055

Token 26: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6508444547653198
    2. ' self' → logprob: -0.9008444547653198
    3. ' ' → logprob: -3.6508445739746094
    4. '    ' → logprob: -4.525844573974609
    5. ' )' → logprob: -4.650844573974609
    6. '[' → logprob: -5.150844573974609
    7. ')' → logprob: -5.275844573974609
    8. '       ' → logprob: -5.650844573974609
    9. ' []' → logprob: -5.775844573974609
    10. '[]' → logprob: -6.650844573974609

Token 27: '.tree' (ID: 49211)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0012527309590950608
    2. ' .' → logprob: -7.6262526512146
    3. '._' → logprob: -8.251253128051758
    4. '.queue' → logprob: -8.501253128051758
    5. '.size' → logprob: -8.751253128051758
    6. ' ' → logprob: -9.876253128051758
    7. '=' → logprob: -10.751253128051758
    8. ')' → logprob: -11.626253128051758
    9. ' =' → logprob: -12.251253128051758
    10. '.data' → logprob: -12.376253128051758

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020963052287697792
    2. '=' → logprob: -3.895962953567505
    3. ' ' → logprob: -8.270962715148926
    4. '_size' → logprob: -9.645962715148926
    5. '[' → logprob: -10.020962715148926
    6. '=[]' → logprob: -11.145962715148926
    7. '   ' → logprob: -11.645962715148926
    8. ' =[' → logprob: -12.395962715148926
    9. '.' → logprob: -12.520962715148926
    10. '    ' → logprob: -12.770962715148926

Token 29: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.008676616474986076
    2. '[' → logprob: -4.758676528930664
    3. 'deque' → logprob: -10.633676528930664
    4. ' deque' → logprob: -11.008676528930664
    5. ' ['' → logprob: -12.008676528930664
    6. ' []' → logprob: -12.133676528930664
    7. ' [-' → logprob: -12.633676528930664
    8. '[]' → logprob: -13.633676528930664
    9. ' ' → logprob: -13.883676528930664
    10. '[size' → logprob: -14.133676528930664

Token 30: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0529492013156414
    2. ' None' → logprob: -3.3029491901397705
    3. '(None' → logprob: -4.42794942855835
    4. '[' → logprob: -6.67794942855835
    5. '0' → logprob: -7.80294942855835
    6. '-' → logprob: -8.427948951721191
    7. ' (' → logprob: -8.427948951721191
    8. '[]' → logprob: -8.552948951721191
    9. '(' → logprob: -8.802948951721191
    10. '   ' → logprob: -8.927948951721191

Token 31: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021780231967568398
    2. ' ]' → logprob: -4.146780014038086
    3. ' for' → logprob: -5.521780014038086
    4. ']*' → logprob: -6.646780014038086
    5. ',' → logprob: -7.896780014038086
    6. ']*(' → logprob: -10.646780014038086
    7. '()]' → logprob: -11.521780014038086
    8. ' ' → logprob: -11.896780014038086
    9. 'for' → logprob: -12.021780014038086
    10. ')' → logprob: -12.146780014038086

Token 32: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13985596597194672
    2. ' *' → logprob: -2.3898558616638184
    3. '+' → logprob: -4.389855861663818
    4. ' for' → logprob: -4.639855861663818
    5. ',' → logprob: -5.389855861663818
    6. '[' → logprob: -5.514855861663818
    7. ']' → logprob: -5.764855861663818
    8. ' +' → logprob: -7.014855861663818
    9. ')' → logprob: -7.139855861663818
    10. 'for' → logprob: -7.514855861663818

Token 33: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.8100488185882568
    2. '(size' → logprob: -1.3100488185882568
    3. ' size' → logprob: -1.9350488185882568
    4. '(' → logprob: -2.185048818588257
    5. ' (' → logprob: -3.560048818588257
    6. '((' → logprob: -11.810049057006836
    7. '<size' → logprob: -12.560049057006836
    8. ' ' → logprob: -12.685049057006836
    9. '   ' → logprob: -12.935049057006836
    10. '	size' → logprob: -13.185049057006836

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4656716287136078
    2. '<|end|>' → logprob: -1.3406716585159302
    3. ' 
' → logprob: -2.8406715393066406
    4. '       ' → logprob: -4.090671539306641
    5. '    
' → logprob: -4.965671539306641
    6. '[' → logprob: -5.090671539306641
    7. ')' → logprob: -5.215671539306641
    8. '\n' → logprob: -5.590671539306641
    9. '  
' → logprob: -5.965671539306641
    10. '   ' → logprob: -6.590671539306641

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04637982323765755
    2. '<|end|>' → logprob: -3.796379804611206
    3. '
' → logprob: -5.171380043029785
    4. '   ' → logprob: -5.296380043029785
    5. ')' → logprob: -6.046380043029785
    6. '    ' → logprob: -6.671380043029785
    7. '    
' → logprob: -6.671380043029785
    8. ' 
' → logprob: -6.796380043029785
    9. ' ' → logprob: -6.796380043029785
    10. '        ' → logprob: -6.921380043029785

Token 36: ' self' (ID: 1051)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5350388884544373
    2. ' ' → logprob: -1.660038948059082
    3. ' size' → logprob: -2.285038948059082
    4. 'size' → logprob: -2.660038948059082
    5. '       ' → logprob: -3.785038948059082
    6. 'self' (adapté à ' self') → logprob: -4.660038948059082
    7. ')' → logprob: -5.160038948059082
    8. ' self' → logprob: -5.410038948059082
    9. '   ' → logprob: -6.035038948059082
    10. '    ' → logprob: -6.660038948059082

Token 37: '.bottom' (ID: 35613)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.35329166054725647
    2. '.' → logprob: -1.478291630744934
    3. '.head' → logprob: -3.7282917499542236
    4. '.queue' → logprob: -4.2282915115356445
    5. '.max' → logprob: -4.8532915115356445
    6. ' .' → logprob: -4.9782915115356445
    7. '.root' → logprob: -6.1032915115356445
    8. '._' → logprob: -6.1032915115356445
    9. 'size' → logprob: -6.6032915115356445
    10. '.next' → logprob: -6.7282915115356445

Token 38: ' =' (ID: 314)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.8166091442108154
    2. '_' → logprob: -1.8166091442108154
    3. ' =' → logprob: -2.1916091442108154
    4. '=' → logprob: -2.4416091442108154
    5. '-' → logprob: -3.5666091442108154
    6. 's' → logprob: -3.6916091442108154
    7. '[' → logprob: -3.9416091442108154
    8. '_idx' → logprob: -3.9416091442108154
    9. '_i' → logprob: -4.6916093826293945
    10. ' -' → logprob: -4.6916093826293945

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18787381052970886
    2. ' ' → logprob: -2.6878738403320312
    3. ' size' → logprob: -2.6878738403320312
    4. 'size' → logprob: -3.4378738403320312
    5. '-' → logprob: -7.437873840332031
    6. ' len' → logprob: -7.687873840332031
    7. 'len' → logprob: -7.687873840332031
    8. ' -' → logprob: -7.937873840332031
    9. '1' → logprob: -8.062873840332031
    10. 'deque' → logprob: -8.562873840332031

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5113166570663452
    2. 'size' → logprob: -1.0113166570663452
    3. 'len' → logprob: -3.5113167762756348
    4. '-' → logprob: -5.886316776275635
    5. ' size' → logprob: -6.761316776275635
    6. '(size' → logprob: -6.761316776275635
    7. ' ' → logprob: -7.761316776275635
    8. '(' → logprob: -8.136316299438477
    9. ' len' → logprob: -8.886316299438477
    10. '1' → logprob: -8.886316299438477

Token 41: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7728147506713867
    2. '   ' → logprob: -1.2728147506713867
    3. ' def' → logprob: -1.3978147506713867
    4. ' ' → logprob: -6.147814750671387
    5. '	def' → logprob: -6.147814750671387
    6. '
' → logprob: -6.272814750671387
    7. '    
' → logprob: -6.647814750671387
    8. ' 
' → logprob: -7.022814750671387
    9. '<|end|>' → logprob: -7.022814750671387
    10. '```' → logprob: -7.522814750671387

Token 44: ' add' (ID: 1147)
  Prédit: ' push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.49441543221473694
    2. ' insert' → logprob: -1.3694154024124146
    3. ' enqueue' → logprob: -2.119415521621704
    4. ' add' → logprob: -5.244415283203125
    5. 'push' → logprob: -5.369415283203125
    6. 'enqueue' → logprob: -6.119415283203125
    7. 'insert' → logprob: -7.244415283203125
    8. ' append' → logprob: -7.369415283203125
    9. '_push' → logprob: -7.994415283203125
    10. '_enqueue' → logprob: -7.994415283203125

Token 45: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.264917254447937
    2. '(' → logprob: -1.639917254447937
    3. ' (' → logprob: -3.2649173736572266
    4. '_item' → logprob: -8.639917373657227
    5. ' ' → logprob: -9.639917373657227
    6. '(item' → logprob: -10.139917373657227
    7. '_element' → logprob: -10.389917373657227
    8. '_node' → logprob: -10.389917373657227
    9. '<|end|>' → logprob: -10.764917373657227
    10. '(node' → logprob: -10.889917373657227

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11329672485589981
    2. ' ,' → logprob: -2.2382967472076416
    3. ',item' → logprob: -8.613296508789062
    4. ',value' → logprob: -9.363296508789062
    5. ')' → logprob: -9.988296508789062
    6. 'item' → logprob: -9.988296508789062
    7. ' )' → logprob: -10.363296508789062
    8. ' ' → logprob: -10.988296508789062
    9. 'element' → logprob: -11.238296508789062
    10. 'value' → logprob: -11.488296508789062

Token 47: ' data' (ID: 1238)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.6673466563224792
    2. 'value' → logprob: -1.292346715927124
    3. ' element' → logprob: -2.167346715927124
    4. ' item' → logprob: -3.042346715927124
    5. 'item' → logprob: -3.667346715927124
    6. 'element' → logprob: -4.167346477508545
    7. ' priority' → logprob: -5.417346477508545
    8. 'priority' → logprob: -6.167346477508545
    9. 'self' → logprob: -7.667346477508545
    10. ')' → logprob: -7.917346477508545

Token 48: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028575662523508072
    2. '):' → logprob: -3.6535756587982178
    3. ')' → logprob: -6.153575897216797
    4. ' ,' → logprob: -9.403575897216797
    5. ' ):' → logprob: -10.528575897216797
    6. '):
' → logprob: -10.903575897216797
    7. ':' → logprob: -11.653575897216797
    8. ' )' → logprob: -13.028575897216797
    9. ' ' → logprob: -13.028575897216797
    10. '   ' → logprob: -13.903575897216797

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2501615881919861
    2. ')' → logprob: -2.500161647796631
    3. '<|end|>' → logprob: -3.625161647796631
    4. '
' → logprob: -3.750161647796631
    5. ',' → logprob: -3.875161647796631
    6. ' ' → logprob: -4.250161647796631
    7. ' 
' → logprob: -4.875161647796631
    8. '[' → logprob: -5.000161647796631
    9. '        ' → logprob: -5.000161647796631
    10. '        
' → logprob: -5.375161647796631

Token 50: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32105982303619385
    2. ' self' → logprob: -1.9460598230361938
    3. '        ' → logprob: -2.8210597038269043
    4. ' 
' → logprob: -3.4460597038269043
    5. '       ' → logprob: -3.5710597038269043
    6. ' if' → logprob: -6.071059703826904
    7. '    ' → logprob: -6.446059703826904
    8. '        
' → logprob: -6.696059703826904
    9. ' ' → logprob: -7.071059703826904
    10. 'self' → logprob: -7.321059703826904

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12876389920711517
    2. 'ext' → logprob: -2.7537639141082764
    3. '=' → logprob: -3.2537639141082764
    4. 'e' → logprob: -5.003763675689697
    5. 'ode' → logprob: -5.753763675689697
    6. 'ew' → logprob: -6.003763675689697
    7. '   ' → logprob: -6.503763675689697
    8. 'um' → logprob: -6.753763675689697
    9. 'ull' → logprob: -7.003763675689697
    10. '       ' → logprob: -8.253764152526855

Token 52: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12713514268398285
    2. 'self' → logprob: -2.1271350383758545
    3. ' len' → logprob: -8.877135276794434
    4. 'len' → logprob: -10.127135276794434
    5. 'elf' → logprob: -10.877135276794434
    6. ' ' → logprob: -12.127135276794434
    7. '[self' → logprob: -13.627135276794434
    8. '	self' → logprob: -14.377135276794434
    9. '(self' → logprob: -15.252135276794434
    10. '   ' → logprob: -15.377135276794434

Token 53: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.011997295543551445
    2. '.tree' → logprob: -4.511997222900391
    3. '.' → logprob: -7.136997222900391
    4. ' .' → logprob: -9.38699722290039
    5. '.size' → logprob: -10.51199722290039
    6. '.bot' → logprob: -10.63699722290039
    7. '.b' → logprob: -12.38699722290039
    8. '.top' → logprob: -12.76199722290039
    9. 'bottom' → logprob: -13.38699722290039
    10. '.right' → logprob: -13.51199722290039

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5055543780326843
    2. '<|end|>' → logprob: -1.130554437637329
    3. '+' → logprob: -3.130554437637329
    4. ' +' → logprob: -4.50555419921875
    5. '<|end|>' → logprob: -5.25555419921875
    6. ' 
' → logprob: -5.63055419921875
    7. '       ' → logprob: -5.75555419921875
    8. '  
' → logprob: -6.75555419921875
    9. ')' → logprob: -6.88055419921875
    10. '#' → logprob: -7.25555419921875

Token 55: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1439981907606125
    2. '<|end|>' → logprob: -2.643998146057129
    3. '       ' → logprob: -3.018998146057129
    4. '+' → logprob: -4.893998146057129
    5. ' 
' → logprob: -6.893998146057129
    6. '        
' → logprob: -7.018998146057129
    7. '<|end|>' → logprob: -7.018998146057129
    8. ' +' → logprob: -7.518998146057129
    9. '[' → logprob: -7.518998146057129
    10. ')' → logprob: -7.643998146057129

Token 56: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5266164541244507
    2. '       ' → logprob: -1.6516164541244507
    3. ' self' → logprob: -1.7766164541244507
    4. ' if' → logprob: -4.02661657333374
    5. 'if' → logprob: -4.65161657333374
    6. 'while' → logprob: -4.77661657333374
    7. ' while' → logprob: -5.15161657333374
    8. '<|end|>' → logprob: -5.77661657333374
    9. '
' → logprob: -6.65161657333374
    10. ')' → logprob: -7.90161657333374

Token 57: '.bottom' (ID: 35613)
  Prédit: '.tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0009751861798577011
    2. '.' → logprob: -7.000975131988525
    3. ' .' → logprob: -10.250975608825684
    4. '	tree' → logprob: -12.125975608825684
    5. 'tree' → logprob: -12.500975608825684
    6. '`.' → logprob: -12.500975608825684
    7. '.t' → logprob: -13.000975608825684
    8. '​.' → logprob: -13.375975608825684
    9. '.queue' → logprob: -13.750975608825684
    10. '```' → logprob: -14.000975608825684

Token 58: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018211284652352333
    2. '+=' → logprob: -4.018211364746094
    3. '+' → logprob: -10.393211364746094
    4. ' ' → logprob: -11.143211364746094
    5. ' +' → logprob: -12.018211364746094
    6. ' =' → logprob: -12.268211364746094
    7. ']+=' → logprob: -13.018211364746094
    8. '=' → logprob: -14.393211364746094
    9. ' <<=' → logprob: -14.393211364746094
    10. '<|end|>' → logprob: -14.643211364746094

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047935113310814
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.886048316955566
    4. ' ' → logprob: -18.01104736328125
    5. '```' → logprob: -18.51104736328125
    6. '۱' → logprob: -18.76104736328125
    7. '１' → logprob: -19.26104736328125
    8. '<|end|>' → logprob: -19.51104736328125
    9. '    ' → logprob: -19.88604736328125
    10. '  ' → logprob: -19.94854736328125

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.3750057220459
    4. '```' → logprob: -18.2500057220459
    5. '۱' → logprob: -20.0625057220459
    6. '`' → logprob: -20.0625057220459
    7. '１' → logprob: -20.3750057220459
    8. '
' → logprob: -20.4375057220459
    9. '  ' → logprob: -20.6250057220459
    10. '' → logprob: -20.8750057220459

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.058539360761642456
    2. '       ' → logprob: -2.933539390563965
    3. ' 
' → logprob: -6.308539390563965
    4. '        
' → logprob: -7.558539390563965
    5. '  
' → logprob: -7.808539390563965
    6. '
' → logprob: -7.933539390563965
    7. '<|end|>' → logprob: -8.058539390563965
    8. ' if' → logprob: -9.683539390563965
    9. '```' → logprob: -10.558539390563965
    10. '    
' → logprob: -10.558539390563965

Token 62: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13191601634025574
    2. '       ' → logprob: -2.131916046142578
    3. ' 
' → logprob: -5.756916046142578
    4. '        
' → logprob: -7.131916046142578
    5. '  
' → logprob: -8.006916046142578
    6. '<|end|>' → logprob: -8.131916046142578
    7. '
' → logprob: -9.006916046142578
    8. '    
' → logprob: -9.756916046142578
    9. ' if' → logprob: -10.381916046142578
    10. ',
' → logprob: -10.506916046142578

Token 63: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3144564926624298
    2. 'self' (adapté à ' self') → logprob: -2.4394564628601074
    3. ' self' → logprob: -2.4394564628601074
    4. '       ' → logprob: -3.1894564628601074
    5. ' if' → logprob: -3.4394564628601074
    6. ' while' → logprob: -4.564456462860107
    7. 'if' → logprob: -5.064456462860107
    8. 'while' → logprob: -5.939456462860107
    9. ' 
' → logprob: -6.564456462860107
    10. '        
' → logprob: -7.189456462860107

Token 64: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00026217024424113333
    2. ' .' → logprob: -9.000262260437012
    3. '.' → logprob: -9.125262260437012
    4. '[' → logprob: -11.000262260437012
    5. 'tree' → logprob: -12.375262260437012
    6. '].' → logprob: -12.875262260437012
    7. '```' → logprob: -13.625262260437012
    8. '	tree' → logprob: -13.750262260437012
    9. '`.' → logprob: -13.875262260437012
    10. '.heap' → logprob: -14.875262260437012

Token 65: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.9728669738397e-05
    2. '[' → logprob: -9.250100135803223
    3. ' [' → logprob: -12.750100135803223
    4. '.append' → logprob: -16.125099182128906
    5. '[node' → logprob: -16.750099182128906
    6. '[s' → logprob: -16.875099182128906
    7. '[m' → logprob: -17.000099182128906
    8. '[self' → logprob: -17.000099182128906
    9. '[next' → logprob: -17.000099182128906
    10. '```' → logprob: -17.000099182128906

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004662234336137772
    2. ' ]' → logprob: -5.379662036895752
    3. ']=' → logprob: -10.12966251373291
    4. ' =' → logprob: -14.12966251373291
    5. ' ' → logprob: -14.50466251373291
    6. ')' → logprob: -14.50466251373291
    7. '=' → logprob: -15.25466251373291
    8. '   ' → logprob: -17.504661560058594
    9. '']' → logprob: -17.629661560058594
    10. ' )' → logprob: -17.754661560058594

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021615028381348
    2. '=' → logprob: -2.3502161502838135
    3. ' ' → logprob: -11.725215911865234
    4. '=data' → logprob: -14.475215911865234
    5. ']' → logprob: -15.225215911865234
    6. '[' → logprob: -15.725215911865234
    7. ' =
' → logprob: -15.975215911865234
    8. ' =[' → logprob: -16.600215911865234
    9. ')' → logprob: -16.975215911865234
    10. ']=' → logprob: -17.100215911865234

Token 68: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.16022787988185883
    2. ' data' → logprob: -1.91022789478302
    3. 'deque' → logprob: -13.78522777557373
    4. 'dat' → logprob: -14.28522777557373
    5. ' dat' → logprob: -14.78522777557373
    6. 'd' → logprob: -14.78522777557373
    7. '   ' → logprob: -15.03522777557373
    8. '(data' → logprob: -15.41022777557373
    9. ' ' → logprob: -15.41022777557373
    10. ' deque' → logprob: -15.53522777557373

Token 69: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13006022572517395
    2. '<|end|>' → logprob: -3.2550601959228516
    3. '
' → logprob: -3.3800601959228516
    4. '\n' → logprob: -4.130060195922852
    5. '        
' → logprob: -4.380060195922852
    6. ' 
' → logprob: -4.755060195922852
    7. '  
' → logprob: -6.005060195922852
    8. ' while' → logprob: -6.380060195922852
    9. '        ' → logprob: -6.505060195922852
    10. ')' → logprob: -6.755060195922852

Token 70: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6840450167655945
    2. '<|end|>' → logprob: -0.9340450167655945
    3. '       ' → logprob: -2.4340450763702393
    4. ' 
' → logprob: -5.43404483795166
    5. '\n' → logprob: -5.93404483795166
    6. '        
' → logprob: -6.18404483795166
    7. '  
' → logprob: -6.68404483795166
    8. ')' → logprob: -6.93404483795166
    9. '        ' → logprob: -7.43404483795166
    10. '<|end|>' → logprob: -7.55904483795166

Token 71: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4056343138217926
    2. '       ' → logprob: -1.5306342840194702
    3. 'while' (adapté à ' while') → logprob: -2.1556344032287598
    4. ' i' → logprob: -8.280633926391602
    5. ' current' → logprob: -8.530633926391602
    6. 'parent' → logprob: -8.780633926391602
    7. ' parent' → logprob: -8.780633926391602
    8. 'current' → logprob: -9.155633926391602
    9. 'i' → logprob: -9.530633926391602
    10. '        
' → logprob: -9.655633926391602

Token 72: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0047674765810370445
    2. 'n' → logprob: -5.379767417907715
    3. ' (' → logprob: -9.629767417907715
    4. '(n' → logprob: -10.004767417907715
    5. ' ' → logprob: -10.629767417907715
    6. ' ' → logprob: -12.879767417907715
    7. '	n' → logprob: -13.004767417907715
    8. '    ' → logprob: -13.254767417907715
    9. '(' → logprob: -13.504767417907715
    10. ' self' → logprob: -14.129767417907715

Token 73: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20524923503398895
    2. '>' → logprob: -1.7052491903305054
    3. 'and' → logprob: -6.205249309539795
    4. ' and' → logprob: -6.580249309539795
    5. ' !=' → logprob: -8.080248832702637
    6. '!=' → logprob: -9.205248832702637
    7. ' ' → logprob: -12.205248832702637
    8. '0' → logprob: -13.080248832702637
    9. '()>' → logprob: -14.955248832702637
    10. '&gt' → logprob: -14.955248832702637

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4287026822566986
    2. '0' → logprob: -1.053702712059021
    3. ' ' → logprob: -14.678702354431152
    4. '   ' → logprob: -14.803702354431152
    5. ' -' → logprob: -15.303702354431152
    6. ' None' → logprob: -15.303702354431152
    7. '  ' → logprob: -15.553702354431152
    8. '     ' → logprob: -15.678702354431152
    9. 'None' → logprob: -16.05370330810547
    10. '    ' → logprob: -16.17870330810547

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.875380516052246
    4. '  ' → logprob: -17.25037956237793
    5. 'None' → logprob: -17.25037956237793
    6. '     ' → logprob: -17.75037956237793
    7. '-' → logprob: -17.87537956237793
    8. '    ' → logprob: -19.00037956237793
    9. ' -' → logprob: -19.37537956237793
    10. '         ' → logprob: -19.50037956237793

Token 76: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016317633911967278
    2. 'and' → logprob: -4.141317844390869
    3. ':' → logprob: -9.266317367553711
    4. ' ' → logprob: -9.766317367553711
    5. '    ' → logprob: -10.266317367553711
    6. '   ' → logprob: -10.266317367553711
    7. ' :' → logprob: -10.766317367553711
    8. ':
' → logprob: -10.891317367553711
    9. '       ' → logprob: -12.266317367553711
    10. '	and' → logprob: -12.266317367553711

Token 77: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034644320607185364
    2. ' and' → logprob: -4.40964412689209
    3. ',' → logprob: -5.15964412689209
    4. '            
' → logprob: -5.78464412689209
    5. ' ' → logprob: -5.90964412689209
    6. ':' → logprob: -5.90964412689209
    7. '
' → logprob: -6.53464412689209
    8. ' 
' → logprob: -6.78464412689209
    9. '            ' → logprob: -7.03464412689209
    10. '<|end|>' → logprob: -7.03464412689209

Token 78: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.1743437945842743
    2. '           ' → logprob: -2.1743438243865967
    3. ' p' → logprob: -4.049343585968018
    4. 'parent' (adapté à ' parent') → logprob: -4.174343585968018
    5. '_parent' → logprob: -5.674343585968018
    6. ' if' → logprob: -5.924343585968018
    7. '            ' → logprob: -6.549343585968018
    8. ' ' → logprob: -6.924343585968018
    9. 'p' → logprob: -7.174343585968018
    10. '        ' → logprob: -7.424343585968018

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010114554315805435
    2. '=' → logprob: -4.635114669799805
    3. ',' → logprob: -8.010114669799805
    4. ' ' → logprob: -11.135114669799805
    5. ' ,' → logprob: -12.385114669799805
    6. ' =
' → logprob: -13.135114669799805
    7. ']' → logprob: -13.135114669799805
    8. '_' → logprob: -14.135114669799805
    9. ')' → logprob: -14.385114669799805
    10. 's' → logprob: -15.010114669799805

Token 80: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20158085227012634
    2. '(n' → logprob: -1.7015808820724487
    3. '(self' → logprob: -9.076581001281738
    4. '(parent' → logprob: -10.076581001281738
    5. '(node' → logprob: -13.326581001281738
    6. '           ' → logprob: -13.576581001281738
    7. ' ' → logprob: -13.576581001281738
    8. '(ns' → logprob: -13.826581001281738
    9. '(' → logprob: -13.951581001281738
    10. '
' → logprob: -14.076581001281738

Token 81: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012554630637168884
    2. ' n' → logprob: -4.63755464553833
    3. '(n' → logprob: -5.88755464553833
    4. ' (' → logprob: -11.137554168701172
    5. ')n' → logprob: -13.012554168701172
    6. '	n' → logprob: -13.137554168701172
    7. ' ' → logprob: -14.512554168701172
    8. ')' → logprob: -14.637554168701172
    9. '(' → logprob: -14.637554168701172
    10. '[n' → logprob: -15.262554168701172

Token 82: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0028525441884994507
    2. '-' → logprob: -5.877852439880371
    3. ' ' → logprob: -10.002852439880371
    4. '1' → logprob: -13.127852439880371
    5. ' ' → logprob: -16.377853393554688
    6. ')' → logprob: -16.690353393554688
    7. '2' → logprob: -16.877853393554688
    8. '  ' → logprob: -16.940353393554688
    9. '```' → logprob: -17.002853393554688
    10. '0' → logprob: -17.002853393554688

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018155913800001144
    2. ' ' → logprob: -4.018156051635742
    3. ')' → logprob: -13.393156051635742
    4. '2' → logprob: -13.768156051635742
    5. '    ' → logprob: -14.143156051635742
    6. '   ' → logprob: -14.518156051635742
    7. '     ' → logprob: -14.955656051635742
    8. '           ' → logprob: -15.018156051635742
    9. ' )' → logprob: -15.143156051635742
    10. '-' → logprob: -15.143156051635742

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.125109672546387
    3. '2' → logprob: -14.250109672546387
    4. ')' → logprob: -17.250110626220703
    5. '   ' → logprob: -17.375110626220703
    6. '```' → logprob: -17.437610626220703
    7. '  ' → logprob: -17.687610626220703
    8. '     ' → logprob: -18.562610626220703
    9. '    ' → logprob: -18.687610626220703
    10. '`' → logprob: -18.750110626220703

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.12127808178775e-05
    2. ')//' → logprob: -10.125051498413086
    3. ' )' → logprob: -11.500051498413086
    4. '   ' → logprob: -14.875051498413086
    5. ')>>' → logprob: -16.250051498413086
    6. '1' → logprob: -16.375051498413086
    7. ' ' → logprob: -16.500051498413086
    8. ')
' → logprob: -16.625051498413086
    9. '//' → logprob: -17.000051498413086
    10. ']' → logprob: -17.125051498413086

Token 86: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35349151492118835
    2. ' //' → logprob: -1.2284915447235107
    3. ' )' → logprob: -5.853491306304932
    4. '//' → logprob: -6.978491306304932
    5. ')//' → logprob: -7.603491306304932
    6. ' ' → logprob: -7.853491306304932
    7. ']' → logprob: -8.97849178314209
    8. ' >>' → logprob: -9.85349178314209
    9. '>>' → logprob: -10.22849178314209
    10. '2' → logprob: -10.35349178314209

Token 87: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. '1' → logprob: -15.255928993225098
    4. '3' → logprob: -16.880929946899414
    5. '4' → logprob: -18.380929946899414
    6. '   ' → logprob: -18.755929946899414
    7. '  ' → logprob: -19.130929946899414
    8. '7' → logprob: -19.505929946899414
    9. '```' → logprob: -20.005929946899414
    10. '0' → logprob: -20.380929946899414

Token 88: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '1' → logprob: -19.625003814697266
    4. '   ' → logprob: -21.625003814697266
    5. '3' → logprob: -21.875003814697266
    6. '  ' → logprob: -22.250003814697266
    7. '```' → logprob: -22.250003814697266
    8. '0' → logprob: -22.375003814697266
    9. '۲' → logprob: -22.750003814697266
    10. '26' → logprob: -23.000003814697266

Token 89: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027173799462616444
    2. ' if' → logprob: -7.2527174949646
    3. '            
' → logprob: -7.3777174949646
    4. '<|end|>' → logprob: -7.5027174949646
    5. ' ' → logprob: -8.252717018127441
    6. '<|end|>' → logprob: -9.252717018127441
    7. '            ' → logprob: -9.377717018127441
    8. ' 
' → logprob: -9.377717018127441
    9. '
' → logprob: -9.877717018127441
    10. '```' → logprob: -10.002717018127441

Token 91: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21335893869400024
    2. ' if' → logprob: -1.9633588790893555
    3. '           ' → logprob: -2.9633588790893555
    4. '            
' → logprob: -10.338358879089355
    5. '```' → logprob: -10.463358879089355
    6. '
' → logprob: -10.588358879089355
    7. '	if' → logprob: -12.838358879089355
    8. ' 
' → logprob: -12.963358879089355
    9. '               ' → logprob: -13.338358879089355
    10. '`' → logprob: -13.338358879089355

Token 92: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5767581462860107
    2. 'self' → logprob: -0.8267581462860107
    3. ' data' → logprob: -7.70175838470459
    4. 'data' → logprob: -8.20175838470459
    5. ' not' → logprob: -9.95175838470459
    6. ' ' → logprob: -11.07675838470459
    7. '   ' → logprob: -11.32675838470459
    8. '	self' → logprob: -12.45175838470459
    9. 'not' → logprob: -13.07675838470459
    10. '(self' → logprob: -13.32675838470459

Token 93: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.2246291337069124e-05
    2. 'tree' → logprob: -11.500021934509277
    3. '.' → logprob: -11.875021934509277
    4. '	tree' → logprob: -13.000021934509277
    5. '].' → logprob: -14.625021934509277
    6. ' tree' → logprob: -14.750021934509277
    7. '>.' → logprob: -14.750021934509277
    8. ' .' → logprob: -15.125021934509277
    9. '.heap' → logprob: -15.625021934509277
    10. ').' → logprob: -15.750021934509277

Token 94: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.04874633252620697
    2. '[n' → logprob: -3.048746347427368
    3. '[' → logprob: -8.798746109008789
    4. '[node' → logprob: -13.298746109008789
    5. '[param' → logprob: -13.673746109008789
    6. ' [' → logprob: -13.923746109008789
    7. '[next' → logprob: -14.048746109008789
    8. '[index' → logprob: -14.548746109008789
    9. 'parent' → logprob: -14.923746109008789
    10. '[p' → logprob: -14.923746109008789

Token 95: '][' (ID: 2696)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5674868226051331
    2. '[' → logprob: -1.3174867630004883
    3. ' <' → logprob: -2.9424867630004883
    4. ' <=' → logprob: -3.0674867630004883
    5. ' >' → logprob: -3.3174867630004883
    6. '>' → logprob: -4.567486763000488
    7. ' ' → logprob: -4.942486763000488
    8. ' >=' → logprob: -5.442486763000488
    9. ' and' → logprob: -6.192486763000488
    10. '<' → logprob: -6.567486763000488

Token 96: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6335474848747253
    2. '1' → logprob: -0.7585474848747253
    3. ' ' → logprob: -7.633547306060791
    4. '>' → logprob: -8.25854778289795
    5. ' >' → logprob: -9.25854778289795
    6. ']' → logprob: -10.50854778289795
    7. 'priority' → logprob: -11.57104778289795
    8. '<' → logprob: -11.63354778289795
    9. '[' → logprob: -11.75854778289795
    10. ')' → logprob: -11.82104778289795

Token 97: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5811229348182678
    2. ' <=' → logprob: -1.581122875213623
    3. '>' → logprob: -2.081122875213623
    4. ' <' → logprob: -2.706122875213623
    5. ' >=' → logprob: -3.581122875213623
    6. ']' → logprob: -5.081122875213623
    7. '<=' → logprob: -5.581122875213623
    8. '<' → logprob: -6.206122875213623
    9. '>=' → logprob: -6.706122875213623
    10. ' ' → logprob: -7.206122875213623

Token 98: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4275279939174652
    2. ' <=' → logprob: -1.5525280237197876
    3. '>' → logprob: -2.052527904510498
    4. '<=' → logprob: -5.052527904510498
    5. ' >=' → logprob: -7.177527904510498
    6. ' <' → logprob: -8.052528381347656
    7. '>=' → logprob: -9.177528381347656
    8. ' ' → logprob: -9.677528381347656
    9. '<' → logprob: -9.927528381347656
    10. '[' → logprob: -10.552528381347656

Token 99: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3869405686855316
    2. 'self' → logprob: -1.136940598487854
    3. ' ' → logprob: -11.011940956115723
    4. ' data' → logprob: -11.011940956115723
    5. '	self' → logprob: -11.136940956115723
    6. 'data' → logprob: -11.761940956115723
    7. '=self' → logprob: -12.136940956115723
    8. '(self' → logprob: -13.011940956115723
    9. ' ' → logprob: -13.636940956115723
    10. '=' → logprob: -14.011940956115723

Token 100: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -3.845798710244708e-05
    2. 'tree' → logprob: -10.500038146972656
    3. '.' → logprob: -12.500038146972656
    4. ' .' → logprob: -12.875038146972656
    5. '	tree' → logprob: -13.125038146972656
    6. ' tree' → logprob: -14.250038146972656
    7. '```' → logprob: -15.000038146972656
    8. '_tree' → logprob: -15.250038146972656
    9. '-tree' → logprob: -15.500038146972656
    10. 'self' → logprob: -15.750038146972656

Token 101: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.7968066206085496e-05
    2. '[' → logprob: -10.750027656555176
    3. 'n' → logprob: -12.375027656555176
    4. '[parent' → logprob: -14.125027656555176
    5. '[data' → logprob: -14.625027656555176
    6. '```' → logprob: -15.000027656555176
    7. '[node' → logprob: -15.125027656555176
    8. ' [' → logprob: -15.375027656555176
    9. ' n' → logprob: -16.375028610229492
    10. '[self' → logprob: -16.500028610229492

Token 102: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008371464791707695
    2. '[' → logprob: -7.250837326049805
    3. ' ][' → logprob: -9.250837326049805
    4. ']' → logprob: -11.375837326049805
    5. ')[' → logprob: -11.875837326049805
    6. '>[' → logprob: -12.750837326049805
    7. '"][' → logprob: -13.000837326049805
    8. ''][' → logprob: -13.000837326049805
    9. '   ' → logprob: -13.375837326049805
    10. ' ' → logprob: -14.250837326049805

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.288163083605468e-05
    2. '][' → logprob: -10.500052452087402
    3. ' ' → logprob: -10.875052452087402
    4. '```' → logprob: -13.750052452087402
    5. ']' → logprob: -13.812552452087402
    6. '[' → logprob: -13.812552452087402
    7. '   ' → logprob: -14.312552452087402
    8. '])[' → logprob: -15.187552452087402
    9. ' ][' → logprob: -15.187552452087402
    10. ')' → logprob: -15.687552452087402

Token 104: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01451227255165577
    2. ']:' → logprob: -5.139512062072754
    3. ':
' → logprob: -5.389512062072754
    4. '):' → logprob: -5.889512062072754
    5. ' :' → logprob: -7.514512062072754
    6. '):
' → logprob: -8.389512062072754
    7. ']:
' → logprob: -8.514512062072754
    8. ':return' → logprob: -9.389512062072754
    9. '       ' → logprob: -10.139512062072754
    10. '           ' → logprob: -10.889512062072754

Token 105: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0041512916795909405
    2. ':' → logprob: -6.504151344299316
    3. ' break' → logprob: -6.629151344299316
    4. '           ' → logprob: -7.254151344299316
    5. ':
' → logprob: -8.129151344299316
    6. '                
' → logprob: -10.004151344299316
    7. '                ' → logprob: -10.129151344299316
    8. ' :
' → logprob: -10.254151344299316
    9. ',' → logprob: -10.754151344299316
    10. '            ' → logprob: -10.754151344299316

Token 106: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16121788322925568
    2. 'self' (adapté à ' self') → logprob: -2.2862179279327393
    3. '               ' → logprob: -3.2862179279327393
    4. ' break' → logprob: -5.28621768951416
    5. '           ' → logprob: -5.78621768951416
    6. 'break' → logprob: -7.53621768951416
    7. '                   ' → logprob: -8.41121768951416
    8. '(self' → logprob: -8.66121768951416
    9. ' return' → logprob: -8.78621768951416
    10. '
' → logprob: -8.91121768951416

Token 107: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.001094257808290422
    2. '.' → logprob: -7.001094341278076
    3. '.swap' → logprob: -9.126093864440918
    4. 'tree' → logprob: -10.751093864440918
    5. '	tree' → logprob: -11.376093864440918
    6. '.user' → logprob: -11.501093864440918
    7. ' .' → logprob: -11.751093864440918
    8. '.parent' → logprob: -12.376093864440918
    9. ',' → logprob: -12.501093864440918
    10. '[' → logprob: -12.876093864440918

Token 108: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.00016396844875998795
    2. '[' → logprob: -9.500164031982422
    3. '[n' → logprob: -9.625164031982422
    4. ',parent' → logprob: -11.000164031982422
    5. 'parent' → logprob: -12.500164031982422
    6. ',' → logprob: -13.875164031982422
    7. '	parent' → logprob: -15.375164031982422
    8. ' parent' → logprob: -15.625164031982422
    9. '[p' → logprob: -15.625164031982422
    10. '[param' → logprob: -15.750164031982422

Token 109: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.18040724098682404
    2. ',' → logprob: -1.8054072856903076
    3. '>,' → logprob: -7.8054070472717285
    4. ' ,' → logprob: -9.430407524108887
    5. ']' → logprob: -9.805407524108887
    6. '],[' → logprob: -10.180407524108887
    7. ' ],' → logprob: -10.680407524108887
    8. '[' → logprob: -10.680407524108887
    9. '),' → logprob: -11.555407524108887
    10. '},' → logprob: -12.180407524108887

Token 110: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38826224207878113
    2. 'self' → logprob: -1.1382622718811035
    3. '<|end|>' → logprob: -6.6382622718811035
    4. '[self' → logprob: -10.638261795043945
    5. '	self' → logprob: -11.138261795043945
    6. ' ' → logprob: -11.263261795043945
    7. '=self' → logprob: -11.513261795043945
    8. '(self' → logprob: -11.763261795043945
    9. '<|end|>' → logprob: -12.138261795043945
    10. '*self' → logprob: -13.763261795043945

Token 111: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -3.833878508885391e-05
    2. '.' → logprob: -11.125038146972656
    3. '[n' → logprob: -11.500038146972656
    4. 'tree' → logprob: -11.625038146972656
    5. '.n' → logprob: -13.250038146972656
    6. '	tree' → logprob: -13.750038146972656
    7. ' .' → logprob: -15.000038146972656
    8. ' tree' → logprob: -15.250038146972656
    9. '   ' → logprob: -15.500038146972656
    10. '       ' → logprob: -15.625038146972656

Token 112: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0008688253001309931
    2. '[' → logprob: -7.125868797302246
    3. 'n' → logprob: -10.375868797302246
    4. '[parent' → logprob: -10.750868797302246
    5. '[node' → logprob: -12.625868797302246
    6. '```' → logprob: -13.125868797302246
    7. '<n' → logprob: -14.125868797302246
    8. '<|end|>' → logprob: -14.375868797302246
    9. '[root' → logprob: -14.500868797302246
    10. ']' → logprob: -14.750868797302246

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.996708104154095e-05
    2. ' ]' → logprob: -9.375100135803223
    3. ']=' → logprob: -11.500100135803223
    4. '[' → logprob: -13.375100135803223
    5. ' ' → logprob: -14.500100135803223
    6. '],' → logprob: -14.500100135803223
    7. '=' → logprob: -14.500100135803223
    8. '<|end|>' → logprob: -14.750100135803223
    9. ']
' → logprob: -14.875100135803223
    10. '   ' → logprob: -14.875100135803223

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04309133440256119
    2. '=' → logprob: -3.168091297149658
    3. ' =
' → logprob: -10.043091773986816
    4. '<|end|>' → logprob: -10.918091773986816
    5. ' ' → logprob: -11.293091773986816
    6. '=
' → logprob: -11.793091773986816
    7. ',' → logprob: -11.918091773986816
    8. ' =[' → logprob: -14.043091773986816
    9. '=

' → logprob: -14.543091773986816
    10. '[' → logprob: -14.668091773986816

Token 115: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519400119781494
    2. 'self' → logprob: -1.5019400119781494
    3. '	self' → logprob: -12.50193977355957
    4. '(self' → logprob: -12.62693977355957
    5. ' ' → logprob: -13.75193977355957
    6. '[self' → logprob: -14.12693977355957
    7. '               ' → logprob: -14.12693977355957
    8. '=self' → logprob: -15.25193977355957
    9. '_self' → logprob: -15.50193977355957
    10. '                   ' → logprob: -16.12693977355957

Token 116: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.3319124011322856e-05
    2. 'tree' → logprob: -11.125022888183594
    3. '	tree' → logprob: -12.125022888183594
    4. '.' → logprob: -13.000022888183594
    5. '(tree' → logprob: -15.500022888183594
    6. ' .' → logprob: -15.750022888183594
    7. ' tree' → logprob: -16.125022888183594
    8. '.user' → logprob: -16.250022888183594
    9. '/tree' → logprob: -16.875022888183594
    10. '_tree' → logprob: -17.000022888183594

Token 117: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.10061939805746078
    2. '[parent' → logprob: -2.350619316101074
    3. 'n' → logprob: -8.225619316101074
    4. 'parent' → logprob: -8.850619316101074
    5. '[' → logprob: -13.850619316101074
    6. ' n' → logprob: -15.850619316101074
    7. '	n' → logprob: -16.22562026977539
    8. ' [' → logprob: -16.47562026977539
    9. '   ' → logprob: -16.60062026977539
    10. '```' → logprob: -16.97562026977539

Token 118: '],' (ID: 2155)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.02820231392979622
    2. ',parent' → logprob: -4.403202533721924
    3. ',' → logprob: -4.778202533721924
    4. '],' → logprob: -5.278202533721924
    5. 'parent' → logprob: -6.278202533721924
    6. '	parent' → logprob: -10.153202056884766
    7. '(parent' → logprob: -10.153202056884766
    8. '.parent' → logprob: -10.653202056884766
    9. ' parent' → logprob: -11.278202056884766
    10. '[' → logprob: -11.278202056884766

Token 119: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197473779320717
    2. ' self' → logprob: -2.8119747638702393
    3. '[self' → logprob: -12.81197452545166
    4. '(self' → logprob: -13.31197452545166
    5. '	self' → logprob: -13.43697452545166
    6. ' ' → logprob: -14.68697452545166
    7. '<|end|>' → logprob: -15.18697452545166
    8. '           ' → logprob: -15.81197452545166
    9. '               ' → logprob: -16.186975479125977
    10. '*self' → logprob: -16.686975479125977

Token 120: '.tree' (ID: 49211)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.5345304012298584
    2. '.tree' → logprob: -1.1595304012298584
    3. 'tree' → logprob: -3.0345304012298584
    4. '.parent' → logprob: -3.1595304012298584
    5. 'parent' → logprob: -4.9095306396484375
    6. '	tree' → logprob: -7.1595306396484375
    7. '.' → logprob: -7.7845306396484375
    8. '[' → logprob: -7.9095306396484375
    9. '<|end|>' → logprob: -8.034530639648438
    10. ',parent' → logprob: -9.659530639648438

Token 121: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.00044008632539771497
    2. 'parent' → logprob: -7.8754401206970215
    3. '[' → logprob: -10.250439643859863
    4. '.parent' → logprob: -11.875439643859863
    5. '[n' → logprob: -12.000439643859863
    6. '(parent' → logprob: -12.750439643859863
    7. ',parent' → logprob: -12.750439643859863
    8. '_parent' → logprob: -13.125439643859863
    9. '	parent' → logprob: -13.375439643859863
    10. ' parent' → logprob: -13.750439643859863

Token 122: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003341452218592167
    2. ')' → logprob: -6.5033416748046875
    3. '           ' → logprob: -6.8783416748046875
    4. 'n' → logprob: -7.3783416748046875
    5. ')
' → logprob: -9.753341674804688
    6. ',' → logprob: -10.503341674804688
    7. '(n' → logprob: -10.878341674804688
    8. ')n' → logprob: -10.878341674804688
    9. '                
' → logprob: -11.753341674804688
    10. ' n' → logprob: -11.753341674804688

Token 123: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04635182395577431
    2. 'n' → logprob: -3.171351909637451
    3. ' n' → logprob: -5.796351909637451
    4. '           ' → logprob: -8.421351432800293
    5. '                
' → logprob: -9.671351432800293
    6. '
' → logprob: -12.671351432800293
    7. '                   ' → logprob: -12.796351432800293
    8. ' ' → logprob: -12.921351432800293
    9. '   ' → logprob: -12.921351432800293
    10. '              ' → logprob: -12.921351432800293

Token 124: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -2.4153549020411447e-05
    2. ' n' → logprob: -10.75002384185791
    3. '               ' → logprob: -12.87502384185791
    4. '           ' → logprob: -18.125024795532227
    5. '	n' → logprob: -18.375024795532227
    6. '(n' → logprob: -19.625024795532227
    7. '_n' → logprob: -19.750024795532227
    8. '                   ' → logprob: -19.750024795532227
    9. '   ' → logprob: -20.500024795532227
    10. '
' → logprob: -20.875024795532227

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740773141384125
    2. '=' → logprob: -0.9740773439407349
    3. '    ' → logprob: -16.224077224731445
    4. ' ' → logprob: -16.224077224731445
    5. '＝' → logprob: -16.599077224731445
    6. ' =
' → logprob: -17.349077224731445
    7. ',' → logprob: -18.224077224731445
    8. '=

' → logprob: -18.224077224731445
    9. '   ' → logprob: -18.599077224731445
    10. '=}' → logprob: -18.724077224731445

Token 126: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0031803252641111612
    2. ' parent' → logprob: -5.753180503845215
    3. '(parent' → logprob: -13.628180503845215
    4. '	parent' → logprob: -14.003180503845215
    5. '[parent' → logprob: -14.753180503845215
    6. '.parent' → logprob: -16.3781795501709
    7. ',parent' → logprob: -16.3781795501709
    8. 'paren' → logprob: -17.1281795501709
    9. '_parent' → logprob: -18.6281795501709
    10. '   ' → logprob: -18.7531795501709

Token 127: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05555843934416771
    2. 'else' → logprob: -2.930558443069458
    3. ' else' → logprob: -7.305558204650879
    4. '		' → logprob: -13.930558204650879
    5. '	else' → logprob: -13.930558204650879
    6. '       ' → logprob: -14.680558204650879
    7. 'elif' → logprob: -15.055558204650879
    8. '          ' → logprob: -15.055558204650879
    9. '               ' → logprob: -15.305558204650879
    10. '            
' → logprob: -15.430558204650879

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16234417259693146
    2. 'else' → logprob: -1.912344217300415
    3. ' else' → logprob: -6.162343978881836
    4. '	else' → logprob: -12.537343978881836
    5. '		' → logprob: -12.787343978881836
    6. 'elif' → logprob: -14.037343978881836
    7. '       ' → logprob: -14.162343978881836
    8. '               ' → logprob: -14.662343978881836
    9. '```' → logprob: -14.912343978881836
    10. '   ' → logprob: -15.287343978881836

Token 129: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0845828503370285
    2. '       ' → logprob: -2.584582805633545
    3. ' else' → logprob: -5.209582805633545
    4. '           ' → logprob: -8.584583282470703
    5. '	else' → logprob: -10.959583282470703
    6. '        ' → logprob: -12.834583282470703
    7. '   ' → logprob: -12.959583282470703
    8. '               ' → logprob: -13.584583282470703
    9. '      ' → logprob: -14.459583282470703
    10. '	' → logprob: -14.459583282470703

Token 130: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007794828619807959
    2. ':
' → logprob: -5.2577948570251465
    3. ':' → logprob: -6.0077948570251465
    4. '           ' → logprob: -10.132794380187988
    5. '              ' → logprob: -10.632794380187988
    6. ' :
' → logprob: -12.507794380187988
    7. 'break' → logprob: -12.757794380187988
    8. '       ' → logprob: -12.757794380187988
    9. '	           ' → logprob: -12.757794380187988
    10. ' :' → logprob: -13.007794380187988

Token 131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.371605948312208e-05
    2. 'break' → logprob: -10.000053405761719
    3. ' break' → logprob: -12.000053405761719
    4. '	break' → logprob: -14.000053405761719
    5. '	           ' → logprob: -14.375053405761719
    6. '              ' → logprob: -15.250053405761719
    7. '			' → logprob: -15.625053405761719
    8. '           ' → logprob: -16.00005340576172
    9. '		       ' → logprob: -16.75005340576172
    10. '                
' → logprob: -16.87505340576172

Token 132: ' return' (ID: 622)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.18654024600982666
    2. ' break' → logprob: -1.9365402460098267
    3. '               ' → logprob: -3.686540126800537
    4. '	break' → logprob: -7.186540126800537
    5. 'return' (adapté à ' return') → logprob: -8.936540603637695
    6. '
' → logprob: -11.561540603637695
    7. '   ' → logprob: -12.311540603637695
    8. '                   ' → logprob: -12.436540603637695
    9. ' return' → logprob: -12.936540603637695
    10. 'Break' → logprob: -13.436540603637695

Token 133: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20197154581546783
    2. 'def' → logprob: -2.0769715309143066
    3. ' def' → logprob: -3.0769715309143066
    4. '<|end|>' → logprob: -4.826971530914307
    5. '    
' → logprob: -7.326971530914307
    6. ' ' → logprob: -7.326971530914307
    7. '       ' → logprob: -7.951971530914307
    8. '    ' → logprob: -7.951971530914307
    9. '  ' → logprob: -7.951971530914307
    10. ' 

' → logprob: -8.701972007751465

Token 135: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03863990306854248
    2. ' def' → logprob: -3.288640022277832
    3. '   ' → logprob: -8.038640022277832
    4. ' 
' → logprob: -9.288640022277832
    5. '    
' → logprob: -9.413640022277832
    6. ' ' → logprob: -11.038640022277832
    7. '        
' → logprob: -11.288640022277832
    8. '
' → logprob: -11.663640022277832
    9. '  
' → logprob: -11.663640022277832
    10. '<|end|>' → logprob: -11.663640022277832

Token 136: ' top' (ID: 2344)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.08602337539196014
    2. ' pop' → logprob: -3.2110233306884766
    3. 'extract' → logprob: -4.461023330688477
    4. 'poll' → logprob: -4.461023330688477
    5. 'remove' → logprob: -4.836023330688477
    6. 'peek' → logprob: -5.336023330688477
    7. ' poll' → logprob: -6.336023330688477
    8. ' extract' → logprob: -6.961023330688477
    9. 'top' → logprob: -6.961023330688477
    10. ' remove' → logprob: -6.961023330688477

Token 137: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001716827624477446
    2. '(' → logprob: -6.376716613769531
    3. 'self' → logprob: -11.626716613769531
    4. '   ' → logprob: -13.376716613769531
    5. '()' → logprob: -13.626716613769531
    6. '(s' → logprob: -13.876716613769531
    7. 's' → logprob: -14.501716613769531
    8. ' (' → logprob: -14.876716613769531
    9. ' self' → logprob: -15.376716613769531
    10. '(sel' → logprob: -15.376716613769531

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22159971296787262
    2. '(self' → logprob: -2.471599817276001
    3. '):
' → logprob: -2.596599817276001
    4. 'self' → logprob: -3.346599817276001
    5. '   ' → logprob: -6.221599578857422
    6. ' ):' → logprob: -6.721599578857422
    7. ')' → logprob: -7.096599578857422
    8. ' self' → logprob: -8.721599578857422
    9. ',' → logprob: -9.346599578857422
    10. ' ' → logprob: -9.721599578857422

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012049345299601555
    2. 'return' → logprob: -5.012049198150635
    3. ' return' → logprob: -5.262049198150635
    4. ' if' → logprob: -9.262049674987793
    5. 'if' → logprob: -10.887049674987793
    6. '   ' → logprob: -11.387049674987793
    7. '        
' → logprob: -12.637049674987793
    8. '
' → logprob: -13.387049674987793
    9. 'self' → logprob: -13.762049674987793
    10. '	return' → logprob: -14.512049674987793

Token 140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002023804932832718
    2. ' return' → logprob: -6.252023696899414
    3. 'if' → logprob: -9.877023696899414
    4. '       ' → logprob: -10.252023696899414
    5. '   ' → logprob: -11.752023696899414
    6. ' if' → logprob: -14.252023696899414
    7. '	return' → logprob: -17.127023696899414
    8. ' ' → logprob: -18.252023696899414
    9. 'self' → logprob: -18.752023696899414
    10. 'while' → logprob: -19.627023696899414

Token 141: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16095994412899017
    2. ' self' → logprob: -1.9109599590301514
    3. ' None' → logprob: -7.910959720611572
    4. 'None' → logprob: -7.910959720611572
    5. '   ' → logprob: -13.91096019744873
    6. '	self' → logprob: -14.91096019744873
    7. '(self' → logprob: -15.03596019744873
    8. ' ' → logprob: -15.03596019744873
    9. '0' → logprob: -16.660959243774414
    10. '  ' → logprob: -16.785959243774414

Token 142: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -1.8550976164988242e-05
    2. '.' → logprob: -11.250018119812012
    3. ' .' → logprob: -12.375018119812012
    4. 'tree' → logprob: -14.125018119812012
    5. '	tree' → logprob: -15.000018119812012
    6. ' tree' → logprob: -16.750019073486328
    7. '.queue' → logprob: -17.000019073486328
    8. '.root' → logprob: -17.250019073486328
    9. '-tree' → logprob: -17.500019073486328
    10. '(tree' → logprob: -18.125019073486328

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0126840758603066e-05
    2. '0' → logprob: -10.125040054321289
    3. '[
' → logprob: -17.37504005432129
    4. ' [' → logprob: -18.37504005432129
    5. 'and' → logprob: -18.50004005432129
    6. 'if' → logprob: -18.75004005432129
    7. ' ' → logprob: -19.75004005432129
    8. '(' → logprob: -20.00004005432129
    9. 'def' → logprob: -20.50004005432129
    10. '1' → logprob: -20.50004005432129

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '<|end|>' → logprob: -17.75
    4. '[' → logprob: -18.25
    5. '   ' → logprob: -18.875
    6. '۰' → logprob: -18.875
    7. '(' → logprob: -19.8125
    8. '1' → logprob: -19.8125
    9. '
' → logprob: -20.0625
    10. '```' → logprob: -20.9375

Token 145: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.476704478263855
    2. ']' → logprob: -0.976704478263855
    3. '<|end|>' → logprob: -6.6017045974731445
    4. '[' → logprob: -7.4767045974731445
    5. '][' → logprob: -8.226704597473145
    6. ')[' → logprob: -8.601704597473145
    7. ' if' → logprob: -9.601704597473145
    8. ')]' → logprob: -9.851704597473145
    9. ' ]' → logprob: -10.101704597473145
    10. ' )' → logprob: -10.726704597473145

Token 146: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008106940425932407
    2. '   ' → logprob: -5.133106708526611
    3. ' def' → logprob: -6.383106708526611
    4. '	def' → logprob: -9.00810718536377
    5. '<|end|>' → logprob: -9.13310718536377
    6. '    
' → logprob: -9.25810718536377
    7. ' ' → logprob: -9.88310718536377
    8. '  
' → logprob: -10.38310718536377
    9. ')' → logprob: -11.25810718536377
    10. '  ' → logprob: -11.38310718536377

Token 147: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.729906196298543e-06
    2. ' def' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.250009536743164
    4. 'de' → logprob: -16.875009536743164
    5. 'pop' → logprob: -17.000009536743164
    6. '	def' → logprob: -17.125009536743164
    7. '    
' → logprob: -18.000009536743164
    8. ' ' → logprob: -20.000009536743164
    9. '

' → logprob: -20.000009536743164
    10. 'ndef' → logprob: -20.125009536743164

Token 148: ' size' (ID: 2349)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.03913112357258797
    2. ' pop' → logprob: -3.2891311645507812
    3. 'extract' → logprob: -8.164131164550781
    4. 'remove' → logprob: -8.414131164550781
    5. 'poll' → logprob: -8.414131164550781
    6. 'is' → logprob: -9.414131164550781
    7. '_pop' → logprob: -9.414131164550781
    8. 'empty' → logprob: -10.289131164550781
    9. ' is' → logprob: -10.289131164550781
    10. ' poll' → logprob: -10.414131164550781

Token 149: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04773874953389168
    2. '(' → logprob: -3.672738790512085
    3. '(self' → logprob: -3.922738790512085
    4. '()>' → logprob: -8.172739028930664
    5. '<|end|>' → logprob: -8.172739028930664
    6. ' ()' → logprob: -8.422739028930664
    7. ' (' → logprob: -8.672739028930664
    8. '()(' → logprob: -8.922739028930664
    9. '(
' → logprob: -9.172739028930664
    10. '()
' → logprob: -10.047739028930664

Token 150: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12059003859758377
    2. '):' → logprob: -2.3705899715423584
    3. ' )' → logprob: -4.6205902099609375
    4. '):
' → logprob: -4.8705902099609375
    5. ' ):' → logprob: -6.3705902099609375
    6. ' ):
' → logprob: -8.370590209960938
    7. ' ' → logprob: -8.620590209960938
    8. '()' → logprob: -8.870590209960938
    9. ')return' → logprob: -9.495590209960938
    10. '():' → logprob: -9.745590209960938

Token 151: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.409233957529068
    2. '       ' → logprob: -1.4092339277267456
    3. ' return' → logprob: -2.534234046936035
    4. '   ' → logprob: -4.784234046936035
    5. 'self' → logprob: -5.659234046936035
    6. ' self' → logprob: -8.284234046936035
    7. '	return' → logprob: -9.659234046936035
    8. '    ' → logprob: -12.159234046936035
    9. '{return' → logprob: -12.284234046936035
    10. ':return' → logprob: -12.409234046936035

Token 152: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10153493285179138
    2. 'return' (adapté à ' return') → logprob: -2.351534843444824
    3. ' self' → logprob: -7.101534843444824
    4. ' return' → logprob: -7.726534843444824
    5. '   ' → logprob: -9.976534843444824
    6. '       ' → logprob: -11.226534843444824
    7. 'len' → logprob: -13.976534843444824
    8. '0' → logprob: -14.476534843444824
    9. '	self' → logprob: -14.726534843444824
    10. '[self' → logprob: -14.976534843444824

Token 153: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011706985533237457
    2. ' self' → logprob: -6.751170635223389
    3. 'len' → logprob: -14.501171112060547
    4. '(self' → logprob: -19.751171112060547
    5. ' len' → logprob: -20.376171112060547
    6. '	self' → logprob: -20.376171112060547
    7. '[self' → logprob: -20.876171112060547
    8. '   ' → logprob: -21.001171112060547
    9. '0' → logprob: -21.501171112060547
    10. 'int' → logprob: -22.626171112060547

Token 154: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -9.491498531133402e-06
    2. '.' → logprob: -12.375009536743164
    3. ' .' → logprob: -12.625009536743164
    4. '.bot' → logprob: -14.000009536743164
    5. '.b' → logprob: -15.000009536743164
    6. '.Bottom' → logprob: -15.250009536743164
    7. '.top' → logprob: -15.750009536743164
    8. 'bottom' → logprob: -16.375009536743164
    9. '.right' → logprob: -16.375009536743164
    10. '.space' → logprob: -17.500009536743164

Token 155: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2876851558685303
    2. '   ' → logprob: -1.6626851558685303
    3. '<|end|>' → logprob: -3.0376851558685303
    4. '    
' → logprob: -5.287685394287109
    5. ' def' → logprob: -5.912685394287109
    6. '
' → logprob: -6.537685394287109
    7. '  
' → logprob: -7.162685394287109
    8. '<|end|>' → logprob: -7.662685394287109
    9. '  ' → logprob: -7.912685394287109
    10. ' 
' → logprob: -7.912685394287109

Token 157: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.52788148727268e-05
    2. ' def' → logprob: -9.750064849853516
    3. '   ' → logprob: -12.125064849853516
    4. '	def' → logprob: -14.750064849853516
    5. '    
' → logprob: -15.375064849853516
    6. 'de' → logprob: -15.500064849853516
    7. ' ' → logprob: -15.750064849853516
    8. '```' → logprob: -16.375064849853516
    9. '  
' → logprob: -16.750064849853516
    10. ')' → logprob: -17.000064849853516

Token 158: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.07655508816242218
    2. ' pop' → logprob: -2.701555013656616
    3. 'poll' → logprob: -6.576555252075195
    4. 'remove' → logprob: -6.576555252075195
    5. 'extract' → logprob: -6.701555252075195
    6. ' poll' → logprob: -7.201555252075195
    7. ' remove' → logprob: -7.201555252075195
    8. ' extract' → logprob: -8.201555252075195
    9. ' is' → logprob: -8.701555252075195
    10. '	pop' → logprob: -8.701555252075195

Token 159: '_top' (ID: 23394)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009194392478093505
    2. '(' → logprob: -7.000919342041016
    3. 'self' → logprob: -12.625919342041016
    4. '   ' → logprob: -13.000919342041016
    5. '(
' → logprob: -14.125919342041016
    6. '()' → logprob: -14.375919342041016
    7. '(s' → logprob: -15.125919342041016
    8. '(sel' → logprob: -15.375919342041016
    9. '       ' → logprob: -15.875919342041016
    10. ' (' → logprob: -16.125919342041016

Token 160: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028129592537879944
    2. '(' → logprob: -5.87781286239624
    3. 'self' → logprob: -12.252813339233398
    4. '   ' → logprob: -13.502813339233398
    5. '(
' → logprob: -14.127813339233398
    6. '(s' → logprob: -14.627813339233398
    7. ' (' → logprob: -15.002813339233398
    8. '(sel' → logprob: -15.752813339233398
    9. '       ' → logprob: -15.877813339233398
    10. ' self' → logprob: -16.3778133392334

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011209096759557724
    2. '):
' → logprob: -4.511209011077881
    3. ')' → logprob: -9.636209487915039
    4. 'self' → logprob: -9.886209487915039
    5. ' ):' → logprob: -10.761209487915039
    6. '   ' → logprob: -11.511209487915039
    7. '(self' → logprob: -12.136209487915039
    8. '       ' → logprob: -12.886209487915039
    9. '):
' → logprob: -13.511209487915039
    10. '():' → logprob: -13.511209487915039

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03301501274108887
    2. ' if' → logprob: -3.783015012741089
    3. '   ' → logprob: -5.408015251159668
    4. 'if' → logprob: -5.533015251159668
    5. 'n' → logprob: -6.783015251159668
    6. ' n' → logprob: -9.783015251159668
    7. '```' → logprob: -10.908015251159668
    8. '	if' → logprob: -11.408015251159668
    9. '0' → logprob: -11.658015251159668
    10. '
' → logprob: -11.783015251159668

Token 163: ' rv' (ID: 37141)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.030783891677856445
    2. ' if' → logprob: -4.155783653259277
    3. 'top' → logprob: -4.655783653259277
    4. 'last' → logprob: -6.530783653259277
    5. 'self' → logprob: -6.655783653259277
    6. 'result' → logprob: -7.280783653259277
    7. 'res' → logprob: -7.405783653259277
    8. 'ret' → logprob: -7.655783653259277
    9. '       ' → logprob: -8.405783653259277
    10. ' top' → logprob: -9.155783653259277

Token 164: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408393025398254
    2. ' =' → logprob: -0.9740839004516602
    3. ' ' → logprob: -12.84908390045166
    4. ',' → logprob: -14.09908390045166
    5. '=self' → logprob: -14.09908390045166
    6. '   ' → logprob: -14.22408390045166
    7. '_' → logprob: -15.34908390045166
    8. '    ' → logprob: -15.34908390045166
    9. '=None' → logprob: -15.47408390045166
    10. '  ' → logprob: -15.59908390045166

Token 165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889407873153687
    2. ' self' → logprob: -2.5788941383361816
    3. '   ' → logprob: -13.203893661499023
    4. '       ' → logprob: -13.453893661499023
    5. '	self' → logprob: -14.828893661499023
    6. ' ' → logprob: -15.203893661499023
    7. '(self' → logprob: -15.453893661499023
    8. '[self' → logprob: -16.203893661499023
    9. '0' → logprob: -17.328893661499023
    10. 'None' → logprob: -17.703893661499023

Token 166: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00013250234769657254
    2. '.' → logprob: -9.12513256072998
    3. '.top' → logprob: -11.87513256072998
    4. '[' → logprob: -12.00013256072998
    5. ' .' → logprob: -12.12513256072998
    6. '	tree' → logprob: -13.00013256072998
    7. '.pop' → logprob: -13.87513256072998
    8. '.heap' → logprob: -14.75013256072998
    9. 'tree' → logprob: -15.37513256072998
    10. '.stack' → logprob: -15.87513256072998

Token 167: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0788937583565712
    2. '0' → logprob: -2.5788936614990234
    3. ' ' → logprob: -13.828893661499023
    4. '   ' → logprob: -14.078893661499023
    5. '       ' → logprob: -14.203893661499023
    6. '[
' → logprob: -14.828893661499023
    7. '(' → logprob: -15.078893661499023
    8. ' [' → logprob: -15.953893661499023
    9. '```' → logprob: -15.953893661499023
    10. '
' → logprob: -16.078893661499023

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '[' → logprob: -16.875
    4. '<|end|>' → logprob: -16.875
    5. '۰' → logprob: -17.75
    6. '00' → logprob: -19.75
    7. '(' → logprob: -19.8125
    8. '   ' → logprob: -19.875
    9. '０' → logprob: -20.0625
    10. '
' → logprob: -20.375

Token 169: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17641860246658325
    2. ']' → logprob: -2.3014185428619385
    3. ')
' → logprob: -2.8014185428619385
    4. ']
' → logprob: -7.301418781280518
    5. ' )' → logprob: -9.17641830444336
    6. ' )
' → logprob: -10.17641830444336
    7. '[' → logprob: -11.30141830444336
    8. ')
' → logprob: -11.30141830444336
    9. ',' → logprob: -11.67641830444336
    10. ' ]' → logprob: -11.80141830444336

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005608065519481897
    2. '<|end|>' → logprob: -6.005608081817627
    3. '
' → logprob: -6.630608081817627
    4. 'n' → logprob: -6.755608081817627
    5. 'self' → logprob: -8.255607604980469
    6. ',' → logprob: -9.005607604980469
    7. '        
' → logprob: -9.380607604980469
    8. '<|end|>' → logprob: -10.880607604980469
    9. ' self' → logprob: -11.005607604980469
    10. ')' → logprob: -11.005607604980469

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005865143029950559
    2. ' self' → logprob: -7.50058650970459
    3. 'last' → logprob: -11.00058650970459
    4. '       ' → logprob: -11.12558650970459
    5. '	self' → logprob: -13.75058650970459
    6. '   ' → logprob: -14.25058650970459
    7. '
' → logprob: -15.87558650970459
    8. ' last' → logprob: -16.500587463378906
    9. 'n' → logprob: -17.375587463378906
    10. '0' → logprob: -17.500587463378906

Token 172: '.tree' (ID: 49211)
  Prédit: '.bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.0892910286784172
    2. '.tree' → logprob: -2.5892910957336426
    3. '.' → logprob: -4.589291095733643
    4. ' .' → logprob: -9.589290618896484
    5. '.bot' → logprob: -10.214290618896484
    6. 'bottom' → logprob: -10.589290618896484
    7. '.size' → logprob: -10.589290618896484
    8. '.pop' → logprob: -12.839290618896484
    9. '.b' → logprob: -12.964290618896484
    10. '.top' → logprob: -12.964290618896484

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012526008300483227
    2. '[self' → logprob: -4.387526035308838
    3. 'self' → logprob: -12.01252555847168
    4. '=' → logprob: -13.13752555847168
    5. '[-' → logprob: -13.38752555847168
    6. ' [' → logprob: -13.63752555847168
    7. '[size' → logprob: -13.63752555847168
    8. '<|end|>' → logprob: -14.51252555847168
    9. '=self' → logprob: -14.76252555847168
    10. '[last' → logprob: -15.01252555847168

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017455116612836719
    2. 'self' → logprob: -6.376745700836182
    3. ' ' → logprob: -10.751745223999023
    4. '-' → logprob: -11.376745223999023
    5. ' self' → logprob: -12.751745223999023
    6. '   ' → logprob: -13.376745223999023
    7. '[self' → logprob: -13.501745223999023
    8. '(self' → logprob: -13.876745223999023
    9. '[' → logprob: -14.376745223999023
    10. ' -' → logprob: -14.626745223999023

Token 175: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005431424942798913
    2. ']=' → logprob: -8.000543594360352
    3. ' ]' → logprob: -9.125543594360352
    4. '=' → logprob: -9.375543594360352
    5. ' =' → logprob: -11.625543594360352
    6. '],' → logprob: -12.250543594360352
    7. ')' → logprob: -15.625543594360352
    8. ',' → logprob: -16.00054359436035
    9. '   ' → logprob: -16.50054359436035
    10. ' ' → logprob: -17.87554359436035

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021453350782394
    2. ' =' → logprob: -2.3502144813537598
    3. '=self' → logprob: -11.975214958190918
    4. '=
' → logprob: -14.100214958190918
    5. ',' → logprob: -14.225214958190918
    6. '=

' → logprob: -16.3502140045166
    7. '=None' → logprob: -17.8502140045166
    8. '=s' → logprob: -18.1002140045166
    9. '=end' → logprob: -18.2252140045166
    10. ' =
' → logprob: -18.4752140045166

Token 177: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.081584716506768e-05
    2. ' self' → logprob: -10.875020980834961
    3. 'None' → logprob: -14.000020980834961
    4. '[self' → logprob: -14.625020980834961
    5. '(self' → logprob: -15.875020980834961
    6. '<|end|>' → logprob: -17.00002098083496
    7. '	self' → logprob: -17.25002098083496
    8. '   ' → logprob: -17.62502098083496
    9. 'Self' → logprob: -17.62502098083496
    10. '=self' → logprob: -17.75002098083496

Token 178: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -8.65707261255011e-06
    2. 'tree' → logprob: -12.250008583068848
    3. '.' → logprob: -13.375008583068848
    4. 'self' → logprob: -14.125008583068848
    5. '	tree' → logprob: -14.625008583068848
    6. '[' → logprob: -15.000008583068848
    7. ' .' → logprob: -15.375008583068848
    8. '.queue' → logprob: -15.875008583068848
    9. '[self' → logprob: -16.375009536743164
    10. '.self' → logprob: -16.375009536743164

Token 179: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -3.6312321753939614e-05
    2. '[' → logprob: -10.625036239624023
    3. 'self' → logprob: -11.375036239624023
    4. '[
' → logprob: -15.250036239624023
    5. '	self' → logprob: -17.250036239624023
    6. '
' → logprob: -17.750036239624023
    7. '(self' → logprob: -18.000036239624023
    8. ' self' → logprob: -18.250036239624023
    9. ' [' → logprob: -18.375036239624023
    10. '[s' → logprob: -18.500036239624023

Token 180: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -3.650518920039758e-06
    2. 'bottom' → logprob: -12.750003814697266
    3. '.' → logprob: -14.875003814697266
    4. '.size' → logprob: -15.750003814697266
    5. '.bot' → logprob: -16.000003814697266
    6. ' .' → logprob: -17.000003814697266
    7. '   ' → logprob: -18.125003814697266
    8. ' bottom' → logprob: -19.625003814697266
    9. '```' → logprob: -19.750003814697266
    10. '.Bottom' → logprob: -20.250003814697266

Token 181: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023248855024576187
    2. ' -' → logprob: -3.7732489109039307
    3. '1' → logprob: -13.148248672485352
    4. '−' → logprob: -14.773248672485352
    5. ' ' → logprob: -15.148248672485352
    6. '   ' → logprob: -15.148248672485352
    7. '()-' → logprob: -16.39824867248535
    8. '–' → logprob: -16.39824867248535
    9. '0' → logprob: -16.64824867248535
    10. '<|end|>' → logprob: -16.89824867248535

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -15.625015258789062
    4. '   ' → logprob: -16.750015258789062
    5. '       ' → logprob: -17.375015258789062
    6. ']' → logprob: -17.500015258789062
    7. '2' → logprob: -18.375015258789062
    8. '
' → logprob: -18.375015258789062
    9. '<|end|>' → logprob: -18.500015258789062
    10. '```' → logprob: -18.750015258789062

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '<|end|>' → logprob: -16.0
    4. '```' → logprob: -16.875
    5. '۱' → logprob: -18.875
    6. '2' → logprob: -19.0
    7. '   ' → logprob: -19.0
    8. '<|end|>' → logprob: -19.25
    9. '...' → logprob: -19.8125
    10. '১' → logprob: -20.4375

Token 184: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43126511573791504
    2. ']
' → logprob: -1.181265115737915
    3. '       ' → logprob: -3.431265115737915
    4. ')' → logprob: -5.056264877319336
    5. ')
' → logprob: -5.556264877319336
    6. '<|end|>' → logprob: -8.306264877319336
    7. 'self' → logprob: -9.056264877319336
    8. ']
' → logprob: -9.306264877319336
    9. '   ' → logprob: -9.556264877319336
    10. '           ' → logprob: -9.556264877319336

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.630610641877865e-06
    2. '<|end|>' → logprob: -12.500006675720215
    3. 'self' → logprob: -13.000006675720215
    4. ' self' → logprob: -15.375006675720215
    5. '   ' → logprob: -15.500006675720215
    6. '        
' → logprob: -16.7500057220459
    7. '           ' → logprob: -17.0000057220459
    8. '<|end|>' → logprob: -17.1250057220459
    9. '      ' → logprob: -18.0000057220459
    10. '               ' → logprob: -18.2500057220459

Token 186: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008040240965783596
    2. '       ' → logprob: -5.008040428161621
    3. ' self' → logprob: -6.633040428161621
    4. '	self' → logprob: -12.133040428161621
    5. '[self' → logprob: -13.508040428161621
    6. '
' → logprob: -14.633040428161621
    7. '   ' → logprob: -16.008039474487305
    8. '(self' → logprob: -16.258039474487305
    9. '0' → logprob: -16.633039474487305
    10. ' ' → logprob: -17.133039474487305

Token 187: '.bottom' (ID: 35613)
  Prédit: '.bottom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bottom' → logprob: -0.004945070017129183
    2. 'bottom' → logprob: -5.379945278167725
    3. 'self' → logprob: -8.129944801330566
    4. ' bottom' → logprob: -10.879944801330566
    5. '   ' → logprob: -12.629944801330566
    6. '.self' → logprob: -13.004944801330566
    7. '       ' → logprob: -13.629944801330566
    8. '.' → logprob: -14.004944801330566
    9. ' .' → logprob: -14.129944801330566
    10. '[self' → logprob: -14.254944801330566

Token 188: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.1301814168691635
    2. '-=' → logprob: -2.130181312561035
    3. '-' → logprob: -5.755181312561035
    4. '=' → logprob: -9.755181312561035
    5. ' -' → logprob: -11.130181312561035
    6. ' ' → logprob: -12.755181312561035
    7. ' +=' → logprob: -13.630181312561035
    8. ' =' → logprob: -13.630181312561035
    9. '+=' → logprob: -14.005181312561035
    10. '   ' → logprob: -14.255181312561035

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.753177642822266
    4. ' ' → logprob: -16.753177642822266
    5. '	' → logprob: -17.628177642822266
    6. '```' → logprob: -17.628177642822266
    7. '１' → logprob: -17.878177642822266
    8. '۱' → logprob: -18.628177642822266
    9. '<|end|>' → logprob: -18.878177642822266
    10. '       ' → logprob: -19.003177642822266

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -19.0
    4. '<|end|>' → logprob: -19.625
    5. '   ' → logprob: -19.875
    6. '۱' → logprob: -20.75
    7. '１' → logprob: -21.125
    8. '0' → logprob: -22.125
    9. '       ' → logprob: -22.25
    10. '
' → logprob: -22.25

Token 191: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18830139935016632
    2. '       ' → logprob: -1.81330144405365
    3. ' n' → logprob: -4.8133015632629395
    4. '	n' → logprob: -8.688301086425781
    5. '
' → logprob: -9.313301086425781
    6. '   ' → logprob: -9.438301086425781
    7. '<|end|>' → logprob: -11.063301086425781
    8. '```' → logprob: -11.313301086425781
    9. '        
' → logprob: -11.813301086425781
    10. '	' → logprob: -12.188301086425781

Token 192: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2522225081920624
    2. '       ' → logprob: -1.5022225379943848
    3. '```' → logprob: -8.752222061157227
    4. ' n' → logprob: -9.627222061157227
    5. '   ' → logprob: -10.002222061157227
    6. '
' → logprob: -11.877222061157227
    7. '        
' → logprob: -11.877222061157227
    8. '	n' → logprob: -13.127222061157227
    9. '``' → logprob: -13.502222061157227
    10. '	' → logprob: -13.502222061157227

Token 193: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00017994173686020076
    2. '       ' → logprob: -9.0001802444458
    3. '0' → logprob: -10.6251802444458
    4. ' n' → logprob: -11.6251802444458
    5. 'parent' → logprob: -12.0001802444458
    6. 'self' → logprob: -12.7501802444458
    7. '        
' → logprob: -12.7501802444458
    8. 'def' → logprob: -12.8751802444458
    9. 'index' → logprob: -13.1251802444458
    10. '   ' → logprob: -13.3751802444458

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740806519985199
    2. ' =' → logprob: -0.9740806818008423
    3. '0' → logprob: -13.224081039428711
    4. ',' → logprob: -13.724081039428711
    5. ' ' → logprob: -15.599081039428711
    6. ')' → logprob: -15.724081039428711
    7. '   ' → logprob: -16.84908103942871
    8. '<|end|>' → logprob: -16.84908103942871
    9. '1' → logprob: -17.34908103942871
    10. ' +=' → logprob: -17.59908103942871

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.250001907348633
    4. '   ' → logprob: -21.000001907348633
    5. '```' → logprob: -21.000001907348633
    6. '  ' → logprob: -21.875001907348633
    7. '٠' → logprob: -22.187501907348633
    8. '০' → logprob: -22.375001907348633
    9. '０' → logprob: -22.437501907348633
    10. '1' → logprob: -22.437501907348633

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -18.0
    4. '٠' → logprob: -20.75
    5. '<|end|>' → logprob: -20.875
    6. '０' → logprob: -20.875
    7. '1' → logprob: -21.1875
    8. '00' → logprob: -21.1875
    9. '০' → logprob: -21.375
    10. '०' → logprob: -21.75

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7181169986724854
    2. 'while' → logprob: -0.7181169986724854
    3. ' while' → logprob: -3.7181169986724854
    4. '	while' → logprob: -8.968116760253906
    5. 'left' → logprob: -9.343116760253906
    6. 'size' → logprob: -10.218116760253906
    7. '   ' → logprob: -10.343116760253906
    8. 'length' → logprob: -10.468116760253906
    9. '```' → logprob: -10.468116760253906
    10. '        
' → logprob: -11.718116760253906

Token 198: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20454178750514984
    2. '       ' → logprob: -1.704541802406311
    3. 'size' → logprob: -6.2045416831970215
    4. ' while' → logprob: -6.9545416831970215
    5. 'length' → logprob: -9.32954216003418
    6. '```' → logprob: -10.57954216003418
    7. 'left' → logprob: -11.07954216003418
    8. '	while' → logprob: -11.82954216003418
    9. '   ' → logprob: -12.20454216003418
    10. ' size' → logprob: -12.95454216003418

Token 199: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0030540041625499725
    2. '       ' → logprob: -6.378054141998291
    3. 'size' → logprob: -6.628054141998291
    4. ' while' → logprob: -11.378053665161133
    5. 'left' → logprob: -11.753053665161133
    6. 'length' → logprob: -12.128053665161133
    7. 'child' → logprob: -14.003053665161133
    8. '	while' → logprob: -14.128053665161133
    9. '```' → logprob: -14.378053665161133
    10. '
' → logprob: -14.878053665161133

Token 200: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1320798099040985
    2. ' True' → logprob: -2.132079839706421
    3. '2' → logprob: -5.757079601287842
    4. '(True' → logprob: -6.382079601287842
    5. '(' → logprob: -8.882080078125
    6. 'n' → logprob: -9.632080078125
    7. '   ' → logprob: -9.757080078125
    8. '1' → logprob: -11.882080078125
    9. ' (' → logprob: -12.007080078125
    10. ' ' → logprob: -12.132080078125

Token 201: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019305186346173286
    2. ':
' → logprob: -4.144305229187012
    3. '           ' → logprob: -5.769305229187012
    4. ',' → logprob: -9.519305229187012
    5. '       ' → logprob: -11.019305229187012
    6. '):' → logprob: -11.519305229187012
    7. ' :' → logprob: -11.519305229187012
    8. '=' → logprob: -11.519305229187012
    9. '<|end|>' → logprob: -12.144305229187012
    10. '):
' → logprob: -12.269305229187012

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004379448015242815
    2. 'left' → logprob: -5.7543792724609375
    3. '
' → logprob: -7.3793792724609375
    4. 'children' → logprob: -8.879379272460938
    5. '            
' → logprob: -9.254379272460938
    6. ' left' → logprob: -9.379379272460938
    7. '```' → logprob: -9.629379272460938
    8. 'child' → logprob: -10.129379272460938
    9. ',' → logprob: -10.754379272460938
    10. 'parent' → logprob: -11.129379272460938

Token 203: ' child' (ID: 2320)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.010955502279102802
    2. '           ' → logprob: -4.885955333709717
    3. 'l' → logprob: -6.635955333709717
    4. ' left' → logprob: -6.885955333709717
    5. 'child' (adapté à ' child') → logprob: -7.510955333709717
    6. 'largest' → logprob: -8.635955810546875
    7. 'max' → logprob: -8.885955810546875
    8. '   ' → logprob: -9.635955810546875
    9. 'lef' → logprob: -11.010955810546875
    10. '	left' → logprob: -11.135955810546875

Token 204: '1' (ID: 16)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.32362228631973267
    2. ' =' → logprob: -2.073622226715088
    3. '1' → logprob: -2.323622226715088
    4. '=' → logprob: -3.323622226715088
    5. '_l' → logprob: -4.323622226715088
    6. 'L' → logprob: -6.823622226715088
    7. 'left' → logprob: -6.948622226715088
    8. '_' → logprob: -7.448622226715088
    9. '_index' → logprob: -7.823622226715088
    10. '0' → logprob: -9.073622703552246

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519293427467346
    2. '=' → logprob: -1.5019292831420898
    3. ' =(' → logprob: -16.251930236816406
    4. ',' → logprob: -16.501930236816406
    5. ' ' → logprob: -17.501930236816406
    6. '=(' → logprob: -17.876930236816406
    7. 's' → logprob: -18.376930236816406
    8. ' =
' → logprob: -18.376930236816406
    9. '=
' → logprob: -18.876930236816406
    10. '1' → logprob: -19.001930236816406

Token 206: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017947778105735779
    2. ' ' → logprob: -6.376794815063477
    3. 'n' → logprob: -9.501794815063477
    4. '           ' → logprob: -11.376794815063477
    5. ' n' → logprob: -12.751794815063477
    6. '   ' → logprob: -13.501794815063477
    7. '1' → logprob: -14.376794815063477
    8. '(' → logprob: -14.376794815063477
    9. '3' → logprob: -15.751794815063477
    10. '               ' → logprob: -16.001794815063477

Token 207: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010425841173855588
    2. 'n' → logprob: -9.375103950500488
    3. ' ' → logprob: -11.625103950500488
    4. '(' → logprob: -11.750103950500488
    5. '1' → logprob: -13.625103950500488
    6. '(n' → logprob: -14.000103950500488
    7. '   ' → logprob: -15.625103950500488
    8. '
' → logprob: -16.500104904174805
    9. ' n' → logprob: -17.125104904174805
    10. '           ' → logprob: -17.125104904174805

Token 208: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04607762396335602
    2. '*n' → logprob: -3.1710777282714844
    3. 'n' → logprob: -5.921077728271484
    4. '*' → logprob: -8.171077728271484
    5. ' n' → logprob: -9.171077728271484
    6. ' ' → logprob: -13.421077728271484
    7. '
' → logprob: -13.921077728271484
    8. '1' → logprob: -14.546077728271484
    9. ' ' → logprob: -14.671077728271484
    10. '	n' → logprob: -15.296077728271484

Token 209: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008048642775975168
    2. ' n' → logprob: -7.125804901123047
    3. '	n' → logprob: -14.875804901123047
    4. '   ' → logprob: -16.750804901123047
    5. '(n' → logprob: -18.500804901123047
    6. '<|end|>' → logprob: -18.750804901123047
    7. ' ' → logprob: -18.875804901123047
    8. '
' → logprob: -19.000804901123047
    9. '```' → logprob: -19.000804901123047
    10. '*n' → logprob: -19.875804901123047

Token 210: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018150178715586662
    2. ' +' → logprob: -4.018150329589844
    3. '1' → logprob: -15.643150329589844
    4. '＋' → logprob: -17.018150329589844
    5. ' plus' → logprob: -17.393150329589844
    6. 'plus' → logprob: -18.018150329589844
    7. '
' → logprob: -18.393150329589844
    8. '+
' → logprob: -18.768150329589844
    9. '   ' → logprob: -19.143150329589844
    10. ' ' → logprob: -19.393150329589844

Token 211: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -14.750031471252441
    4. '  ' → logprob: -17.625032424926758
    5. '<|end|>' → logprob: -17.750032424926758
    6. '```' → logprob: -18.625032424926758
    7. '    ' → logprob: -18.875032424926758
    8. '0' → logprob: -19.750032424926758
    9. ' ' → logprob: -19.812532424926758
    10. '۱' → logprob: -19.812532424926758

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -16.37501335144043
    4. '   ' → logprob: -16.75001335144043
    5. '0' → logprob: -18.12501335144043
    6. '  ' → logprob: -18.56251335144043
    7. '```' → logprob: -18.62501335144043
    8. '<|end|>' → logprob: -18.87501335144043
    9. 'child' → logprob: -19.18751335144043
    10. '۱' → logprob: -19.25001335144043

Token 213: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013509492855519056
    2. '
' → logprob: -6.7513508796691895
    3. ' if' → logprob: -9.251351356506348
    4. 'child' → logprob: -10.876351356506348
    5. 'if' → logprob: -11.001351356506348
    6. '            
' → logprob: -11.001351356506348
    7. ' child' → logprob: -11.501351356506348
    8. '       ' → logprob: -11.626351356506348
    9. '          ' → logprob: -12.751351356506348
    10. ',' → logprob: -12.876351356506348

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1274271458387375
    2. ' child' → logprob: -2.627427101135254
    3. ' if' → logprob: -3.377427101135254
    4. '
' → logprob: -5.002427101135254
    5. 'child' → logprob: -5.127427101135254
    6. 'if' → logprob: -8.127427101135254
    7. '            
' → logprob: -9.502427101135254
    8. '       ' → logprob: -10.002427101135254
    9. '	child' → logprob: -10.252427101135254
    10. '   ' → logprob: -10.627427101135254

Token 215: ' if' (ID: 538)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0014364237431436777
    2. ' child' → logprob: -7.251436233520508
    3. 'if' (adapté à ' if') → logprob: -7.501436233520508
    4. '           ' → logprob: -8.751436233520508
    5. ' if' → logprob: -11.126436233520508
    6. '	child' → logprob: -14.376436233520508
    7. '(child' → logprob: -16.376436233520508
    8. '.child' → logprob: -16.876436233520508
    9. '
' → logprob: -17.501436233520508
    10. '            ' → logprob: -17.501436233520508

Token 216: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.03377651795744896
    2. ' child' → logprob: -3.4087765216827393
    3. 'self' → logprob: -9.40877628326416
    4. '           ' → logprob: -10.28377628326416
    5. '	child' → logprob: -11.90877628326416
    6. ' self' → logprob: -12.78377628326416
    7. '(child' → logprob: -13.28377628326416
    8. '               ' → logprob: -13.65877628326416
    9. '   ' → logprob: -14.78377628326416
    10. 'children' → logprob: -14.90877628326416

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -14.375001907348633
    3. '2' → logprob: -14.625001907348633
    4. '_' → logprob: -14.750001907348633
    5. '>' → logprob: -15.250001907348633
    6. ' ' → logprob: -15.875001907348633
    7. '
' → logprob: -16.250001907348633
    8. '>=' → logprob: -16.750001907348633
    9. '=' → logprob: -17.375001907348633
    10. '[' → logprob: -17.500001907348633

Token 218: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03816359117627144
    2. ' >=' → logprob: -3.288163661956787
    3. '<' → logprob: -9.913163185119629
    4. '>' → logprob: -10.663163185119629
    5. ')>=' → logprob: -10.913163185119629
    6. ']>=' → logprob: -11.038163185119629
    7. '<|end|>' → logprob: -11.663163185119629
    8. ' <' → logprob: -12.663163185119629
    9. ' >' → logprob: -14.163163185119629
    10. ')' → logprob: -14.913163185119629

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1756367712223437e-05
    2. ' self' → logprob: -11.500011444091797
    3. '           ' → logprob: -13.375011444091797
    4. '       ' → logprob: -19.000011444091797
    5. '               ' → logprob: -20.000011444091797
    6. '	self' → logprob: -20.250011444091797
    7. '   ' → logprob: -20.375011444091797
    8. '(self' → logprob: -20.500011444091797
    9. 'Self' → logprob: -20.625011444091797
    10. '
' → logprob: -20.750011444091797

Token 220: '.bottom' (ID: 35613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004948906716890633
    2. 'bottom' → logprob: -7.750494956970215
    3. '           ' → logprob: -10.125494956970215
    4. '       ' → logprob: -11.375494956970215
    5. ' self' → logprob: -11.750494956970215
    6. '   ' → logprob: -13.250494956970215
    7. '
' → logprob: -14.000494956970215
    8. '[self' → logprob: -14.750494956970215
    9. ' bottom' → logprob: -14.875494956970215
    10. '```' → logprob: -15.125494956970215

Token 221: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1071326807141304
    2. ':' → logprob: -2.35713267326355
    3. '               ' → logprob: -5.232132911682129
    4. ' or' → logprob: -6.982132911682129
    5. '           ' → logprob: -7.482132911682129
    6. ':return' → logprob: -10.482132911682129
    7. '                   ' → logprob: -11.607132911682129
    8. '):
' → logprob: -11.607132911682129
    9. '       ' → logprob: -11.857132911682129
    10. ' :
' → logprob: -12.357132911682129

Token 222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.759734732331708e-05
    2. '           ' → logprob: -12.000017166137695
    3. ' break' → logprob: -12.000017166137695
    4. 'break' → logprob: -12.875017166137695
    5. '   ' → logprob: -14.125017166137695
    6. ':
' → logprob: -14.500017166137695
    7. '
' → logprob: -15.000017166137695
    8. ',' → logprob: -15.375017166137695
    9. '                
' → logprob: -15.500017166137695
    10. '                   ' → logprob: -15.625017166137695

Token 223: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24796509742736816
    2. 'break' → logprob: -1.7479650974273682
    3. ' break' → logprob: -3.497965097427368
    4. 'return' (adapté à ' return') → logprob: -4.247964859008789
    5. ' return' → logprob: -7.122964859008789
    6. '                   ' → logprob: -9.747964859008789
    7. '	break' → logprob: -10.497964859008789
    8. '           ' → logprob: -10.997964859008789
    9. '   ' → logprob: -11.122964859008789
    10. '                
' → logprob: -12.747964859008789

Token 224: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.016706207767128944
    2. ' rv' → logprob: -4.2667059898376465
    3. '
' → logprob: -6.3917059898376465
    4. '(rv' → logprob: -7.3917059898376465
    5. 'self' → logprob: -8.766706466674805
    6. 'None' → logprob: -10.516706466674805
    7. ' 
' → logprob: -10.766706466674805
    8. '        
' → logprob: -11.516706466674805
    9. '            
' → logprob: -11.641706466674805
    10. '
' → logprob: -11.641706466674805

Token 225: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11501350998878479
    2. '           ' → logprob: -2.490013599395752
    3. '            
' → logprob: -3.990013599395752
    4. 'child' → logprob: -5.240013599395752
    5. '  
' → logprob: -7.740013599395752
    6. '
' → logprob: -7.865013599395752
    7. ' child' → logprob: -8.240013122558594
    8. ' 
' → logprob: -8.240013122558594
    9. '           
' → logprob: -8.990013122558594
    10. '       ' → logprob: -9.240013122558594

Token 226: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002290375530719757
    2. '            
' → logprob: -7.00229024887085
    3. '           ' → logprob: -7.37729024887085
    4. ' 
' → logprob: -8.377290725708008
    5. '
' → logprob: -8.377290725708008
    6. '  
' → logprob: -8.627290725708008
    7. 'child' → logprob: -10.127290725708008
    8. '

' → logprob: -10.752290725708008
    9. '\n' → logprob: -11.127290725708008
    10. '    
' → logprob: -11.877290725708008

Token 227: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -0.07084450870752335
    2. '           ' → logprob: -3.0708444118499756
    3. ' child' → logprob: -3.8208444118499756
    4. '	child' → logprob: -9.820844650268555
    5. '       ' → logprob: -11.195844650268555
    6. '   ' → logprob: -11.945844650268555
    7. '            
' → logprob: -12.320844650268555
    8. '          ' → logprob: -12.445844650268555
    9. '.child' → logprob: -12.695844650268555
    10. '
' → logprob: -12.695844650268555

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. '1' → logprob: -13.125003814697266
    3. ' ' → logprob: -14.000003814697266
    4. '=' → logprob: -15.750003814697266
    5. '0' → logprob: -16.000003814697266
    6. ' =' → logprob: -16.500003814697266
    7. '
' → logprob: -16.625003814697266
    8. '```' → logprob: -16.625003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '_' → logprob: -17.875003814697266

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. ' ' → logprob: -18.974077224731445
    4. '=
' → logprob: -19.099077224731445
    5. '＝' → logprob: -19.224077224731445
    6. ' =
' → logprob: -19.974077224731445
    7. '=}' → logprob: -20.224077224731445
    8. ',' → logprob: -20.599077224731445
    9. ':' → logprob: -21.474077224731445
    10. '=None' → logprob: -21.599077224731445

Token 230: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11304537951946259
    2. '2' → logprob: -2.2380454540252686
    3. ' child' → logprob: -8.738045692443848
    4. 'child' → logprob: -9.738045692443848
    5. '            ' → logprob: -14.363045692443848
    6. ' (' → logprob: -14.488045692443848
    7. '20' → logprob: -15.113045692443848
    8. '1' → logprob: -15.238045692443848
    9. '22' → logprob: -15.238045692443848
    10. ' ' → logprob: -15.488045692443848

Token 231: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004112119786441326
    2. ' ' → logprob: -5.754112243652344
    3. 'child' → logprob: -7.004112243652344
    4. ' child' → logprob: -10.629112243652344
    5. '  ' → logprob: -13.754112243652344
    6. '   ' → logprob: -15.129112243652344
    7. '(' → logprob: -16.816612243652344
    8. '(child' → logprob: -16.879112243652344
    9. 'ch' → logprob: -17.129112243652344
    10. '`' → logprob: -17.254112243652344

Token 232: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02490953728556633
    2. '*' → logprob: -3.774909496307373
    3. '*n' → logprob: -6.399909496307373
    4. 'n' → logprob: -14.524909973144531
    5. ' ' → logprob: -15.274909973144531
    6. ' n' → logprob: -16.27490997314453
    7. ' ' → logprob: -17.64990997314453
    8. '*object' → logprob: -18.52490997314453
    9. '*out' → logprob: -19.14990997314453
    10. '*num' → logprob: -19.14990997314453

Token 233: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.494741632603109e-05
    2. ' n' → logprob: -9.37508487701416
    3. '(n' → logprob: -16.375085830688477
    4. '
' → logprob: -17.750085830688477
    5. '	n' → logprob: -17.875085830688477
    6. 'child' → logprob: -19.500085830688477
    7. '_n' → logprob: -19.625085830688477
    8. '<|end|>' → logprob: -20.000085830688477
    9. '*n' → logprob: -20.250085830688477
    10. ')n' → logprob: -20.625085830688477

Token 234: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815006136894226
    2. ' +' → logprob: -4.0181498527526855
    3. '＋' → logprob: -16.268150329589844
    4. '1' → logprob: -17.643150329589844
    5. ' ' → logprob: -18.018150329589844
    6. '[' → logprob: -18.268150329589844
    7. '```' → logprob: -19.268150329589844
    8. '+
' → logprob: -19.518150329589844
    9. '()+' → logprob: -20.018150329589844
    10. '2' → logprob: -20.268150329589844

Token 235: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۲' → logprob: -16.75004005432129
    4. '<|end|>' → logprob: -16.93754005432129
    5. '   ' → logprob: -17.43754005432129
    6. '২' → logprob: -18.43754005432129
    7. '  ' → logprob: -18.68754005432129
    8. '```' → logprob: -18.87504005432129
    9. '２' → logprob: -19.00004005432129
    10. '22' → logprob: -19.31254005432129

Token 236: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.250036239624023
    3. '<|end|>' → logprob: -14.875036239624023
    4. '   ' → logprob: -16.125036239624023
    5. '۲' → logprob: -16.562536239624023
    6. '  ' → logprob: -17.125036239624023
    7. '```' → logprob: -17.562536239624023
    8. '22' → logprob: -17.687536239624023
    9. '    ' → logprob: -18.062536239624023
    10. '২' → logprob: -18.312536239624023

Token 237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09831266850233078
    2. '
' → logprob: -3.2233126163482666
    3. ' if' → logprob: -3.4733126163482666
    4. '<|end|>' → logprob: -4.223312854766846
    5. 'if' → logprob: -4.973312854766846
    6. '       ' → logprob: -7.598312854766846
    7. '<|end|>' → logprob: -8.348312377929688
    8. '            
' → logprob: -8.973312377929688
    9. '   ' → logprob: -9.723312377929688
    10. '          ' → logprob: -9.723312377929688

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004405193962156773
    2. 'if' → logprob: -5.8794050216674805
    3. ' if' → logprob: -6.5044050216674805
    4. '            
' → logprob: -10.37940502166748
    5. '
' → logprob: -10.50440502166748
    6. '       ' → logprob: -11.37940502166748
    7. 'max' → logprob: -11.50440502166748
    8. '   ' → logprob: -11.87940502166748
    9. 'child' → logprob: -12.62940502166748
    10. '```' → logprob: -13.25440502166748

Token 239: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8396955132484436
    2. 'if' (adapté à ' if') → logprob: -1.3396954536437988
    3. '           ' → logprob: -2.214695453643799
    4. ' if' → logprob: -2.339695453643799
    5. 'best' → logprob: -3.339695453643799
    6. ' max' → logprob: -3.464695453643799
    7. 'largest' → logprob: -3.714695453643799
    8. 'child' → logprob: -5.964695453643799
    9. 'larg' → logprob: -6.464695453643799
    10. ' largest' → logprob: -6.464695453643799

Token 240: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.018279647454619408
    2. ' child' → logprob: -4.018279552459717
    3. '(child' → logprob: -9.393280029296875
    4. '           ' → logprob: -10.143280029296875
    5. '	child' → logprob: -12.643280029296875
    6. 'self' → logprob: -12.643280029296875
    7. '               ' → logprob: -15.518280029296875
    8. '   ' → logprob: -16.018280029296875
    9. ' self' → logprob: -16.143280029296875
    10. '_child' → logprob: -16.893280029296875

Token 241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009778283536434174
    2. '1' → logprob: -4.6347784996032715
    3. ' ' → logprob: -11.009778022766113
    4. '<|end|>' → logprob: -12.884778022766113
    5. '   ' → logprob: -14.134778022766113
    6. '```' → logprob: -14.634778022766113
    7. '=' → logprob: -15.384778022766113
    8. '  ' → logprob: -15.634778022766113
    9. '           ' → logprob: -15.759778022766113
    10. 'if' → logprob: -15.884778022766113

Token 242: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.29617634415626526
    2. ' <' → logprob: -1.7961763143539429
    3. '>=' → logprob: -2.5461764335632324
    4. '<' → logprob: -4.671176433563232
    5. '<|end|>' → logprob: -6.171176433563232
    6. ' >' → logprob: -8.546175956726074
    7. '>' → logprob: -8.671175956726074
    8. ' <=' → logprob: -9.546175956726074
    9. ' ' → logprob: -9.796175956726074
    10. '<=' → logprob: -10.546175956726074

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005245379637926817
    2. ' self' → logprob: -5.255245208740234
    3. '           ' → logprob: -11.380245208740234
    4. '       ' → logprob: -16.380245208740234
    5. '               ' → logprob: -17.005245208740234
    6. '   ' → logprob: -17.255245208740234
    7. '(self' → logprob: -17.380245208740234
    8. '[self' → logprob: -17.505245208740234
    9. '	self' → logprob: -17.755245208740234
    10. ' ' → logprob: -18.380245208740234

Token 244: '.bottom' (ID: 35613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002201763214543462
    2. ' self' → logprob: -6.127201557159424
    3. 'bottom' → logprob: -11.627202033996582
    4. '[self' → logprob: -13.252202033996582
    5. '(self' → logprob: -13.752202033996582
    6. '       ' → logprob: -14.002202033996582
    7. '           ' → logprob: -14.252202033996582
    8. '   ' → logprob: -14.502202033996582
    9. '	self' → logprob: -15.127202033996582
    10. '=self' → logprob: -15.127202033996582

Token 245: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.08680459856987
    2. ':' → logprob: -2.5868046283721924
    3. 'or' → logprob: -4.961804389953613
    4. ':
' → logprob: -7.211804389953613
    5. '	or' → logprob: -9.836804389953613
    6. '<|end|>' → logprob: -10.336804389953613
    7. '           ' → logprob: -10.461804389953613
    8. ',' → logprob: -11.336804389953613
    9. ' and' → logprob: -12.586804389953613
    10. ' ' → logprob: -12.711804389953613

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03195611760020256
    2. '           ' → logprob: -3.656956195831299
    3. 'child' → logprob: -6.156956195831299
    4. ' if' → logprob: -6.906956195831299
    5. ' child' → logprob: -7.156956195831299
    6. '<|end|>' → logprob: -7.531956195831299
    7. ' or' → logprob: -7.781956195831299
    8. 'if' → logprob: -8.53195571899414
    9. '                
' → logprob: -9.28195571899414
    10. '            
' → logprob: -9.53195571899414

Token 247: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -0.2612038552761078
    2. 'if' → logprob: -1.6362038850784302
    3. '           ' → logprob: -4.136203765869141
    4. ' if' → logprob: -4.761203765869141
    5. ' child' → logprob: -5.261203765869141
    6. 'max' → logprob: -5.386203765869141
    7. '	child' → logprob: -8.26120376586914
    8. 'largest' → logprob: -8.76120376586914
    9. 'min' → logprob: -9.38620376586914
    10. 'larg' → logprob: -9.76120376586914

Token 248: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021083862520754337
    2. '=' → logprob: -6.252108573913574
    3. ' =' → logprob: -8.877108573913574
    4. '_' → logprob: -12.127108573913574
    5. '=_' → logprob: -12.127108573913574
    6. '_val' → logprob: -12.377108573913574
    7. '_index' → logprob: -12.752108573913574
    8. '2' → logprob: -13.002108573913574
    9. 's' → logprob: -13.002108573913574
    10. '=None' → logprob: -13.002108573913574

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022544115781784
    2. ' =' → logprob: -2.3502254486083984
    3. '=None' → logprob: -11.600225448608398
    4. '=n' → logprob: -11.975225448608398
    5. '=self' → logprob: -13.350225448608398
    6. ')' → logprob: -14.975225448608398
    7. ',' → logprob: -15.225225448608398
    8. '==' → logprob: -15.725225448608398
    9. '=
' → logprob: -16.1002254486084
    10. ' ' → logprob: -16.3502254486084

Token 250: ' child' (ID: 2320)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43973344564437866
    2. 'child' → logprob: -1.0647335052490234
    3. 'None' → logprob: -4.814733505249023
    4. '-child' → logprob: -6.314733505249023
    5. ' -' → logprob: -7.064733505249023
    6. ' child' → logprob: -9.564733505249023
    7. '   ' → logprob: -10.189733505249023
    8. '	child' → logprob: -10.439733505249023
    9. ' None' → logprob: -10.814733505249023
    10. '-none' → logprob: -10.814733505249023

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.62500286102295
    3. '<|end|>' → logprob: -15.12500286102295
    4. 's' → logprob: -15.62500286102295
    5. '[' → logprob: -15.81250286102295
    6. '2' → logprob: -16.125001907348633
    7. '
' → logprob: -16.812501907348633
    8. ')' → logprob: -16.937501907348633
    9. '```' → logprob: -16.937501907348633
    10. '১' → logprob: -16.937501907348633

Token 252: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007468550931662321
    2. '
' → logprob: -5.0074687004089355
    3. '            
' → logprob: -7.3824687004089355
    4. 'if' → logprob: -9.757468223571777
    5. 'n' → logprob: -10.882468223571777
    6. ' if' → logprob: -11.132468223571777
    7. '  
' → logprob: -11.757468223571777
    8. '
' → logprob: -12.257468223571777
    9. ',' → logprob: -12.882468223571777
    10. '               ' → logprob: -12.882468223571777

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06508922576904297
    2. '
' → logprob: -2.815089225769043
    3. '            
' → logprob: -6.190089225769043
    4. ' if' → logprob: -8.065089225769043
    5. 'if' → logprob: -8.315089225769043
    6. '  
' → logprob: -9.065089225769043
    7. 'n' → logprob: -9.065089225769043
    8. ' 
' → logprob: -9.815089225769043
    9. '       ' → logprob: -10.190089225769043
    10. '    
' → logprob: -10.315089225769043

Token 254: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.043480634689331
    2. 'if' (adapté à ' if') → logprob: -1.168480634689331
    3. 'max' → logprob: -1.543480634689331
    4. ' if' → logprob: -2.293480634689331
    5. '
' → logprob: -4.16848087310791
    6. ' max' → logprob: -6.04348087310791
    7. 'child' → logprob: -6.91848087310791
    8. 'larg' → logprob: -6.91848087310791
    9. 'largest' → logprob: -7.41848087310791
    10. 'best' → logprob: -7.66848087310791

Token 255: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1798264980316162
    2. ' self' → logprob: -1.8048264980316162
    3. '(self' → logprob: -10.179826736450195
    4. '           ' → logprob: -10.554826736450195
    5. '               ' → logprob: -12.054826736450195
    6. '	self' → logprob: -12.929826736450195
    7. '   ' → logprob: -13.054826736450195
    8. '[self' → logprob: -13.054826736450195
    9. ' ' → logprob: -13.679826736450195
    10. '
' → logprob: -14.304826736450195

Token 256: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.45848218582978e-06
    2. 'tree' → logprob: -13.25000286102295
    3. '	tree' → logprob: -14.87500286102295
    4. ' .' → logprob: -15.62500286102295
    5. ' tree' → logprob: -15.87500286102295
    6. '.' → logprob: -17.000001907348633
    7. '(tree' → logprob: -19.000001907348633
    8. '.t' → logprob: -19.625001907348633
    9. '.table' → logprob: -19.875001907348633
    10. '.heap' → logprob: -20.250001907348633

Token 257: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.652451464906335e-05
    2. '[parent' → logprob: -11.250016212463379
    3. '[n' → logprob: -13.125016212463379
    4. ' [' → logprob: -14.875016212463379
    5. '   ' → logprob: -14.875016212463379
    6. '[self' → logprob: -16.125017166137695
    7. 'child' → logprob: -16.125017166137695
    8. '[node' → logprob: -16.250017166137695
    9. '     ' → logprob: -17.250017166137695
    10. ' ' → logprob: -17.375017166137695

Token 258: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12974941730499268
    2. '[' → logprob: -2.129749298095703
    3. ')[' → logprob: -7.254749298095703
    4. ' ][' → logprob: -7.254749298095703
    5. '   ' → logprob: -7.504749298095703
    6. '1' → logprob: -9.004749298095703
    7. '    ' → logprob: -9.129749298095703
    8. ']' → logprob: -9.379749298095703
    9. '       ' → logprob: -9.879749298095703
    10. ' [' → logprob: -9.879749298095703

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.375014305114746
    3. '   ' → logprob: -14.375014305114746
    4. '
' → logprob: -14.625014305114746
    5. '0' → logprob: -14.750014305114746
    6. ']' → logprob: -14.875014305114746
    7. '```' → logprob: -16.06251335144043
    8. '  ' → logprob: -16.68751335144043
    9. '' → logprob: -17.06251335144043
    10. '    ' → logprob: -17.18751335144043

Token 260: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.052682675421237946
    2. ' <' → logprob: -3.177682638168335
    3. '>=' → logprob: -4.927682876586914
    4. ' >=' → logprob: -6.302682876586914
    5. ']' → logprob: -7.927682876586914
    6. ']>=' → logprob: -8.927682876586914
    7. ']<' → logprob: -10.052682876586914
    8. ')' → logprob: -11.927682876586914
    9. ' ' → logprob: -12.427682876586914
    10. '>' → logprob: -12.552682876586914

Token 261: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07621636241674423
    2. ' <' → logprob: -2.701216459274292
    3. '>=' → logprob: -5.326216220855713
    4. ' >=' → logprob: -6.576216220855713
    5. '>' → logprob: -13.326216697692871
    6. '   ' → logprob: -14.451216697692871
    7. '[' → logprob: -14.576216697692871
    8. ' ' → logprob: -14.701216697692871
    9. '           ' → logprob: -14.951216697692871
    10. ',' → logprob: -15.701216697692871

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020597947761416435
    2. ' self' → logprob: -3.8955979347229004
    3. 'max' → logprob: -10.770598411560059
    4. '=self' → logprob: -11.020598411560059
    5. '[self' → logprob: -12.395598411560059
    6. '	self' → logprob: -12.395598411560059
    7. '   ' → logprob: -13.145598411560059
    8. ' max' → logprob: -13.395598411560059
    9. '(self' → logprob: -13.395598411560059
    10. ' ' → logprob: -13.520598411560059

Token 263: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.10195022821426392
    2. 'self' → logprob: -2.351950168609619
    3. 'tree' → logprob: -6.851950168609619
    4. '[self' → logprob: -7.476950168609619
    5. ' self' → logprob: -9.726950645446777
    6. '.self' → logprob: -9.976950645446777
    7. '	tree' → logprob: -12.601950645446777
    8. '.' → logprob: -13.101950645446777
    9. '	self' → logprob: -13.351950645446777
    10. ' tree' → logprob: -13.476950645446777

Token 264: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. 'child' → logprob: -14.625000953674316
    3. '[parent' → logprob: -15.000000953674316
    4. '[
' → logprob: -15.125000953674316
    5. '[self' → logprob: -16.875001907348633
    6. '1' → logprob: -17.125001907348633
    7. '[left' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '][' → logprob: -18.375001907348633

Token 265: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -6.749814019713085e-06
    2. ' child' → logprob: -12.250006675720215
    3. '[' → logprob: -13.875006675720215
    4. '(child' → logprob: -14.250006675720215
    5. '	child' → logprob: -16.00000762939453
    6. '
' → logprob: -16.00000762939453
    7. 'ch' → logprob: -16.12500762939453
    8. '   ' → logprob: -17.62500762939453
    9. '.child' → logprob: -18.12500762939453
    10. 'self' → logprob: -18.25000762939453

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018151817843317986
    2. '2' → logprob: -4.018151760101318
    3. ' ' → logprob: -14.080652236938477
    4. ']' → logprob: -15.018152236938477
    5. '   ' → logprob: -15.705652236938477
    6. 's' → logprob: -15.893152236938477
    7. '[' → logprob: -15.955652236938477
    8. '```' → logprob: -16.268152236938477
    9. 'child' → logprob: -16.830652236938477
    10. '１' → logprob: -17.205652236938477

Token 267: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10631968826055527
    2. '][' → logprob: -2.4813196659088135
    3. 'and' → logprob: -4.481319904327393
    4. ' and' → logprob: -5.356319904327393
    5. '[' → logprob: -7.606319904327393
    6. ' ]' → logprob: -7.856319904327393
    7. '   ' → logprob: -9.231319427490234
    8. ' ][' → logprob: -9.231319427490234
    9. ' ' → logprob: -9.981319427490234
    10. '1' → logprob: -10.731319427490234

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '
' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '[' → logprob: -15.000004768371582
    5. '0' → logprob: -16.562503814697266
    6. '

' → logprob: -16.625003814697266
    7. '   ' → logprob: -16.875003814697266
    8. '```' → logprob: -16.875003814697266
    9. '][' → logprob: -17.375003814697266
    10. ''s' → logprob: -17.562503814697266

Token 269: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04859646037220955
    2. 'and' → logprob: -3.0485963821411133
    3. ' ' → logprob: -12.673596382141113
    4. ']' → logprob: -13.173596382141113
    5. '    ' → logprob: -13.673596382141113
    6. '   ' → logprob: -13.673596382141113
    7. ')' → logprob: -14.798596382141113
    8. '        ' → logprob: -14.923596382141113
    9. '           ' → logprob: -15.298596382141113
    10. '	and' → logprob: -15.423596382141113

Token 270: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3485979735851288
    2. 'and' → logprob: -1.2235980033874512
    3. ' or' → logprob: -9.848597526550293
    4. '           ' → logprob: -9.973597526550293
    5. '            ' → logprob: -11.223597526550293
    6. '    ' → logprob: -11.973597526550293
    7. '	and' → logprob: -12.348597526550293
    8. ' ' → logprob: -12.473597526550293
    9. '        ' → logprob: -12.598597526550293
    10. '   ' → logprob: -12.598597526550293

Token 271: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06369595229625702
    2. '           ' → logprob: -3.3136959075927734
    3. ' self' → logprob: -3.6886959075927734
    4. '   ' → logprob: -9.438695907592773
    5. '          ' → logprob: -9.563695907592773
    6. '               ' → logprob: -9.938695907592773
    7. '       ' → logprob: -10.313695907592773
    8. ' ' → logprob: -10.688695907592773
    9. '(self' → logprob: -11.188695907592773
    10. '  ' → logprob: -11.188695907592773

Token 272: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -1.1472419600977446e-06
    2. 'tree' → logprob: -14.000000953674316
    3. '	tree' → logprob: -15.625000953674316
    4. '.' → logprob: -16.875001907348633
    5. 'self' → logprob: -16.875001907348633
    6. '[self' → logprob: -17.250001907348633
    7. '[' → logprob: -17.625001907348633
    8. '(tree' → logprob: -17.625001907348633
    9. '.self' → logprob: -18.000001907348633
    10. ' .' → logprob: -18.000001907348633

Token 273: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0010468624532222748
    2. '[' → logprob: -6.876046657562256
    3. '[parent' → logprob: -11.501047134399414
    4. '[node' → logprob: -13.251047134399414
    5. 'n' → logprob: -14.876047134399414
    6. ' [' → logprob: -15.376047134399414
    7. '[ch' → logprob: -15.376047134399414
    8. '[c' → logprob: -15.501047134399414
    9. '```' → logprob: -15.501047134399414
    10. '[self' → logprob: -16.001047134399414

Token 274: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12829415500164032
    2. '[' → logprob: -2.1282942295074463
    3. '1' → logprob: -7.503293991088867
    4. ')[' → logprob: -8.378293991088867
    5. ' ][' → logprob: -8.628293991088867
    6. ']' → logprob: -8.753293991088867
    7. '>[' → logprob: -9.628293991088867
    8. '   ' → logprob: -10.253293991088867
    9. '
' → logprob: -10.503293991088867
    10. '```' → logprob: -11.253293991088867

Token 275: '1' (ID: 16)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.00011355629976605996
    2. '1' → logprob: -9.500113487243652
    3. ' child' → logprob: -10.625113487243652
    4. '   ' → logprob: -11.750113487243652
    5. '
' → logprob: -13.375113487243652
    6. '[' → logprob: -13.625113487243652
    7. ' ' → logprob: -14.000113487243652
    8. '(child' → logprob: -14.375113487243652
    9. '	child' → logprob: -14.750113487243652
    10. 'ch' → logprob: -14.750113487243652

Token 276: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06967495381832123
    2. ' >' → logprob: -3.1946749687194824
    3. ']' → logprob: -3.6946749687194824
    4. '<=' → logprob: -8.069674491882324
    5. ']>' → logprob: -8.069674491882324
    6. ' <=' → logprob: -8.319674491882324
    7. '<' → logprob: -8.819674491882324
    8. ' <' → logprob: -8.819674491882324
    9. '[' → logprob: -9.194674491882324
    10. '>=' → logprob: -9.444674491882324

Token 277: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.012609250843524933
    2. ' >' → logprob: -4.387609481811523
    3. '<' → logprob: -10.137609481811523
    4. '<=' → logprob: -10.137609481811523
    5. '>=' → logprob: -11.887609481811523
    6. ' <=' → logprob: -12.512609481811523
    7. ' <' → logprob: -12.762609481811523
    8. ' ' → logprob: -13.012609481811523
    9. '   ' → logprob: -13.387609481811523
    10. '[' → logprob: -14.137609481811523

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132791221141815
    2. ' self' → logprob: -1.313279151916504
    3. '[self' → logprob: -11.313279151916504
    4. '
' → logprob: -13.063279151916504
    5. '(self' → logprob: -13.563279151916504
    6. '	self' → logprob: -14.313279151916504
    7. ' ' → logprob: -14.563279151916504
    8. ' the' → logprob: -15.688279151916504
    9. '   ' → logprob: -16.063278198242188
    10. '           ' → logprob: -16.188278198242188

Token 279: '.tree' (ID: 49211)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. 'tree' → logprob: -14.875000953674316
    3. '[self' → logprob: -15.125000953674316
    4. '[
' → logprob: -16.000001907348633
    5. 'child' → logprob: -16.125001907348633
    6. 'self' → logprob: -16.375001907348633
    7. ' [' → logprob: -16.875001907348633
    8. '[parent' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '[node' → logprob: -18.250001907348633

Token 280: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[parent' → logprob: -16.75
    3. '[
' → logprob: -18.375
    4. 'child' → logprob: -19.25
    5. ' [' → logprob: -19.25
    6. '][' → logprob: -19.5
    7. '```' → logprob: -19.75
    8. '[[' → logprob: -20.625
    9. '
' → logprob: -20.75
    10. '[self' → logprob: -20.875

Token 281: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -6.511406809295295e-06
    2. ' child' → logprob: -12.500006675720215
    3. '[' → logprob: -13.000006675720215
    4. '(child' → logprob: -14.750006675720215
    5. '	child' → logprob: -16.6250057220459
    6. '.child' → logprob: -17.0000057220459
    7. '
' → logprob: -18.1250057220459
    8. '   ' → logprob: -18.3750057220459
    9. ' ' → logprob: -19.7500057220459
    10. '[
' → logprob: -19.8750057220459

Token 282: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012511883862316608
    2. '1' → logprob: -4.387511730194092
    3. 'child' → logprob: -14.38751220703125
    4. ']' → logprob: -14.63751220703125
    5. '```' → logprob: -15.01251220703125
    6. '
' → logprob: -15.01251220703125
    7. '   ' → logprob: -16.38751220703125
    8. ' ' → logprob: -16.45001220703125
    9. '[' → logprob: -16.57501220703125
    10. 's' → logprob: -16.88751220703125

Token 283: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010045854141935706
    2. '[' → logprob: -7.126004695892334
    3. ']' → logprob: -9.501004219055176
    4. ' ][' → logprob: -9.501004219055176
    5. '   ' → logprob: -10.501004219055176
    6. '1' → logprob: -12.751004219055176
    7. ')[' → logprob: -12.876004219055176
    8. '"][' → logprob: -13.126004219055176
    9. ''][' → logprob: -13.126004219055176
    10. '       ' → logprob: -13.376004219055176

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -12.375009536743164
    3. '[' → logprob: -12.625009536743164
    4. '
' → logprob: -14.250009536743164
    5. 'n' → logprob: -15.125009536743164
    6. ']' → logprob: -15.625009536743164
    7. '][' → logprob: -15.750009536743164
    8. '   ' → logprob: -16.125009536743164
    9. ''s' → logprob: -16.375009536743164
    10. '```' → logprob: -16.875009536743164

Token 285: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13446694612503052
    2. ':' → logprob: -2.2594668865203857
    3. '               ' → logprob: -4.259467124938965
    4. '):
' → logprob: -5.384467124938965
    5. '           ' → logprob: -6.259467124938965
    6. ' or' → logprob: -8.509467124938965
    7. ' :
' → logprob: -8.634467124938965
    8. ':return' → logprob: -9.259467124938965
    9. '):' → logprob: -9.634467124938965
    10. ' and' → logprob: -9.634467124938965

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.182190554682165e-05
    2. ' return' → logprob: -10.375061988830566
    3. 'return' → logprob: -11.250061988830566
    4. '           ' → logprob: -11.750061988830566
    5. '			' → logprob: -13.000061988830566
    6. '   ' → logprob: -13.125061988830566
    7. '	           ' → logprob: -13.375061988830566
    8. '                   ' → logprob: -13.625061988830566
    9. '                
' → logprob: -14.250061988830566
    10. '	return' → logprob: -14.375061988830566

Token 287: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4856269359588623
    2. '               ' → logprob: -0.9856269359588623
    3. ' return' → logprob: -4.485627174377441
    4. '           ' → logprob: -8.985627174377441
    5. '                   ' → logprob: -10.110627174377441
    6. '   ' → logprob: -10.485627174377441
    7. '	return' → logprob: -11.610627174377441
    8. 'break' → logprob: -11.860627174377441
    9. '       ' → logprob: -13.235627174377441
    10. '              ' → logprob: -14.860627174377441

Token 288: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -1.7835754988482222e-05
    2. ' rv' → logprob: -11.000018119812012
    3. 'self' → logprob: -13.875018119812012
    4. '(rv' → logprob: -15.875018119812012
    5. 'r' → logprob: -18.750017166137695
    6. '.rv' → logprob: -19.250017166137695
    7. '
' → logprob: -19.500017166137695
    8. 'n' → logprob: -20.250017166137695
    9. 'rc' → logprob: -20.500017166137695
    10. 'rm' → logprob: -20.625017166137695

Token 289: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001172129064798355
    2. ' if' → logprob: -7.001172065734863
    3. 'if' → logprob: -9.001172065734863
    4. '       ' → logprob: -10.001172065734863
    5. '            
' → logprob: -10.376172065734863
    6. ' child' → logprob: -10.751172065734863
    7. 'elif' → logprob: -11.376172065734863
    8. '   ' → logprob: -12.126172065734863
    9. '
' → logprob: -12.376172065734863
    10. 'child' → logprob: -12.501172065734863

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009647596627473831
    2. '       ' → logprob: -5.884647369384766
    3. ' if' → logprob: -5.884647369384766
    4. 'n' → logprob: -6.759647369384766
    5. '   ' → logprob: -7.259647369384766
    6. '
' → logprob: -7.509647369384766
    7. '            
' → logprob: -7.634647369384766
    8. 'if' → logprob: -8.259647369384766
    9. ' 
' → logprob: -8.384647369384766
    10. 'elif' → logprob: -9.384647369384766

Token 291: ' elif' (ID: 9497)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20361843705177307
    2. 'if' → logprob: -2.0786185264587402
    3. '           ' → logprob: -2.8286185264587402
    4. '            
' → logprob: -11.953618049621582
    5. 'max' → logprob: -12.328618049621582
    6. ' child' → logprob: -12.453618049621582
    7. 'child' → logprob: -12.828618049621582
    8. 'elif' (adapté à ' elif') → logprob: -12.828618049621582
    9. '	if' → logprob: -13.578618049621582
    10. '#' → logprob: -13.703618049621582

Token 292: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021962907630950212
    2. ' self' → logprob: -6.127196311950684
    3. '           ' → logprob: -12.127196311950684
    4. '(self' → logprob: -13.002196311950684
    5. '	self' → logprob: -13.752196311950684
    6. '   ' → logprob: -13.877196311950684
    7. ' ' → logprob: -14.877196311950684
    8. '               ' → logprob: -15.502196311950684
    9. '            
' → logprob: -15.627196311950684
    10. '
' → logprob: -15.752196311950684

Token 293: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00036691725836135447
    2. 'tree' → logprob: -8.000367164611816
    3. '	tree' → logprob: -10.500367164611816
    4. '[' → logprob: -14.000367164611816
    5. '   ' → logprob: -14.125367164611816
    6. ' .' → logprob: -14.875367164611816
    7. ' tree' → logprob: -15.125367164611816
    8. ' ' → logprob: -15.250367164611816
    9. '```' → logprob: -15.625367164611816
    10. 'self' → logprob: -15.750367164611816

Token 294: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.949026571121067e-05
    2. '[n' → logprob: -9.250099182128906
    3. '[parent' → logprob: -13.250099182128906
    4. '[self' → logprob: -14.250099182128906
    5. '[node' → logprob: -14.375099182128906
    6. 'n' → logprob: -16.500099182128906
    7. '[left' → logprob: -16.875099182128906
    8. ' [' → logprob: -17.000099182128906
    9. '   ' → logprob: -17.125099182128906
    10. 'child' → logprob: -17.375099182128906

Token 295: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -5.204720582696609e-05
    2. 'n' → logprob: -10.125052452087402
    3. '[' → logprob: -11.750052452087402
    4. ' child' → logprob: -12.875052452087402
    5. '   ' → logprob: -14.625052452087402
    6. 'parent' → logprob: -14.750052452087402
    7. '	child' → logprob: -15.375052452087402
    8. '(child' → logprob: -16.000051498413086
    9. 'self' → logprob: -16.625051498413086
    10. '
' → logprob: -17.125051498413086

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08898047357797623
    2. '2' → logprob: -2.4639804363250732
    3. 'child' → logprob: -10.213980674743652
    4. 'max' → logprob: -14.026480674743652
    5. ']' → logprob: -14.651480674743652
    6. ' ' → logprob: -14.838980674743652
    7. '[' → logprob: -14.963980674743652
    8. '```' → logprob: -14.963980674743652
    9. '
' → logprob: -15.401480674743652
    10. 's' → logprob: -15.588980674743652

Token 297: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.22619350254535675
    2. '[' → logprob: -1.6011935472488403
    3. ']' → logprob: -8.60119342803955
    4. ')[' → logprob: -8.72619342803955
    5. '>[' → logprob: -8.85119342803955
    6. ' ][' → logprob: -8.85119342803955
    7. 'and' → logprob: -9.47619342803955
    8. ' [' → logprob: -11.35119342803955
    9. ' and' → logprob: -11.35119342803955
    10. ''][' → logprob: -12.22619342803955

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011415231710998341
    2. '][' → logprob: -9.375114440917969
    3. ' ' → logprob: -10.625114440917969
    4. '   ' → logprob: -13.375114440917969
    5. '[' → logprob: -13.750114440917969
    6. '
' → logprob: -14.250114440917969
    7. ' ][' → logprob: -14.500114440917969
    8. ']' → logprob: -15.250114440917969
    9. '0' → logprob: -15.500114440917969
    10. '```' → logprob: -16.12511444091797

Token 299: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4423539638519287
    2. ' >' → logprob: -1.0673539638519287
    3. '[' → logprob: -5.442354202270508
    4. ' <' → logprob: -5.817354202270508
    5. '>=' → logprob: -6.317354202270508
    6. '<' → logprob: -6.442354202270508
    7. ' >=' → logprob: -6.692354202270508
    8. ']' → logprob: -6.942354202270508
    9. '>[' → logprob: -8.442354202270508
    10. ']>' → logprob: -8.567354202270508

Token 300: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.013094235211610794
    2. ' >' → logprob: -4.638094425201416
    3. '>=' → logprob: -5.888094425201416
    4. '<' → logprob: -7.638094425201416
    5. ' >=' → logprob: -9.888093948364258
    6. ' <' → logprob: -11.638093948364258
    7. '<=' → logprob: -12.388093948364258
    8. '>
' → logprob: -12.638093948364258
    9. ' ' → logprob: -13.013093948364258
    10. '>`' → logprob: -13.388093948364258

Token 301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07006937265396118
    2. ' self' → logprob: -2.6950693130493164
    3. '=self' → logprob: -9.945069313049316
    4. '[self' → logprob: -10.195069313049316
    5. '<|end|>' → logprob: -10.570069313049316
    6. '(self' → logprob: -11.570069313049316
    7. '	self' → logprob: -12.070069313049316
    8. '
' → logprob: -13.820069313049316
    9. ' ' → logprob: -13.820069313049316
    10. '=' → logprob: -13.945069313049316

Token 302: '.tree' (ID: 49211)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20433393120765686
    2. '[self' → logprob: -2.204334020614624
    3. '[' → logprob: -2.954334020614624
    4. '[n' → logprob: -4.204333782196045
    5. 'tree' → logprob: -5.329333782196045
    6. 'child' → logprob: -6.079333782196045
    7. 'n' → logprob: -8.579334259033203
    8. ' self' → logprob: -9.829334259033203
    9. '[node' → logprob: -11.329334259033203
    10. '```' → logprob: -11.829334259033203

Token 303: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015634235460311174
    2. '[n' → logprob: -6.626563549041748
    3. 'child' → logprob: -9.00156307220459
    4. 'n' → logprob: -9.12656307220459
    5. '[parent' → logprob: -12.75156307220459
    6. '[node' → logprob: -14.25156307220459
    7. '[ch' → logprob: -14.25156307220459
    8. '```' → logprob: -15.37656307220459
    9. '(child' → logprob: -15.50156307220459
    10. '[cell' → logprob: -15.87656307220459

Token 304: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -3.91732100979425e-05
    2. '[' → logprob: -10.375039100646973
    3. 'n' → logprob: -12.000039100646973
    4. ' child' → logprob: -13.625039100646973
    5. '(child' → logprob: -15.125039100646973
    6. '[n' → logprob: -16.25004005432129
    7. '	child' → logprob: -16.50004005432129
    8. 'ch' → logprob: -16.62504005432129
    9. '   ' → logprob: -17.37504005432129
    10. '.child' → logprob: -17.87504005432129

Token 305: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.572941179503687e-05
    2. '1' → logprob: -10.000045776367188
    3. ']' → logprob: -16.875045776367188
    4. 's' → logprob: -17.250045776367188
    5. '```' → logprob: -17.250045776367188
    6. ' ' → logprob: -17.500045776367188
    7. '   ' → logprob: -17.625045776367188
    8. 'child' → logprob: -18.125045776367188
    9. '[' → logprob: -18.625045776367188
    10. '
' → logprob: -18.625045776367188

Token 306: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005312496796250343
    2. '[' → logprob: -5.255312442779541
    3. ' ][' → logprob: -10.1303129196167
    4. ''][' → logprob: -11.6303129196167
    5. '"][' → logprob: -11.8803129196167
    6. '>[' → logprob: -12.2553129196167
    7. '   ' → logprob: -12.5053129196167
    8. ']' → logprob: -12.5053129196167
    9. ')[' → logprob: -12.6303129196167
    10. '}[' → logprob: -13.2553129196167

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. 'child' → logprob: -14.375001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '[' → logprob: -14.750001907348633
    5. '
' → logprob: -15.625001907348633
    6. '```' → logprob: -16.000001907348633
    7. '   ' → logprob: -16.812501907348633
    8. '

' → logprob: -17.000001907348633
    9. '0' → logprob: -17.250001907348633
    10. '`' → logprob: -17.375001907348633

Token 308: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10553672164678574
    2. ':' → logprob: -2.355536699295044
    3. '               ' → logprob: -5.605536937713623
    4. ']:
' → logprob: -6.730536937713623
    5. '):
' → logprob: -8.230536460876465
    6. '           ' → logprob: -9.355536460876465
    7. ']:' → logprob: -10.605536460876465
    8. ':
' → logprob: -10.730536460876465
    9. ':

' → logprob: -11.230536460876465
    10. ' :
' → logprob: -11.980536460876465

Token 309: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05749231576919556
    2. 'n' → logprob: -3.057492256164551
    3. ' n' → logprob: -4.932492256164551
    4. ':
' → logprob: -7.682492256164551
    5. '```' → logprob: -8.05749225616455
    6. '):
' → logprob: -8.18249225616455
    7. '           ' → logprob: -8.68249225616455
    8. '(n' → logprob: -9.30749225616455
    9. '                
' → logprob: -9.93249225616455
    10. ':' → logprob: -10.18249225616455

Token 310: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1368596851825714
    2. ' self' → logprob: -2.136859655380249
    3. '               ' → logprob: -5.011859893798828
    4. '           ' → logprob: -5.761859893798828
    5. '	self' → logprob: -10.511859893798828
    6. '(self' → logprob: -10.886859893798828
    7. '   ' → logprob: -11.886859893798828
    8. '
' → logprob: -12.261859893798828
    9. 'n' → logprob: -12.386859893798828
    10. '[self' → logprob: -12.511859893798828

Token 311: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.001135454629547894
    2. 'tree' → logprob: -6.876135349273682
    3. '	tree' → logprob: -10.00113582611084
    4. ' .' → logprob: -10.87613582611084
    5. ' tree' → logprob: -11.25113582611084
    6. '.' → logprob: -11.37613582611084
    7. '   ' → logprob: -12.62613582611084
    8. '       ' → logprob: -12.87613582611084
    9. '(tree' → logprob: -13.50113582611084
    10. '           ' → logprob: -13.62613582611084

Token 312: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.11698071658611298
    2. '[' → logprob: -2.241980791091919
    3. ',' → logprob: -5.74198055267334
    4. 'child' → logprob: -8.36698055267334
    5. 'n' → logprob: -8.49198055267334
    6. '[parent' → logprob: -8.61698055267334
    7. ',n' → logprob: -8.74198055267334
    8. ' child' → logprob: -9.99198055267334
    9. '[c' → logprob: -10.61698055267334
    10. '(child' → logprob: -10.86698055267334

Token 313: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0008955012308433652
    2. ',' → logprob: -7.1258955001831055
    3. ']' → logprob: -9.750895500183105
    4. ' ],' → logprob: -10.750895500183105
    5. ',self' → logprob: -12.250895500183105
    6. ']=' → logprob: -13.000895500183105
    7. '>,' → logprob: -13.125895500183105
    8. '],
' → logprob: -14.625895500183105
    9. '],[' → logprob: -15.125895500183105
    10. '=' → logprob: -15.125895500183105

Token 314: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25193455815315247
    2. ' self' → logprob: -1.50193452835083
    3. '=self' → logprob: -12.876935005187988
    4. '	self' → logprob: -13.876935005187988
    5. '<|end|>' → logprob: -14.126935005187988
    6. '[self' → logprob: -14.251935005187988
    7. '(self' → logprob: -15.626935005187988
    8. ' ' → logprob: -16.126934051513672
    9. '*self' → logprob: -16.876934051513672
    10. 'Self' → logprob: -17.001934051513672

Token 315: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0232982374727726
    2. 'tree' → logprob: -3.7732982635498047
    3. '	tree' → logprob: -10.023298263549805
    4. ' tree' → logprob: -12.523298263549805
    5. 'self' → logprob: -12.648298263549805
    6. '.' → logprob: -14.648298263549805
    7. '/tree' → logprob: -15.398298263549805
    8. '(tree' → logprob: -15.523298263549805
    9. '```' → logprob: -15.648298263549805
    10. '
' → logprob: -16.148298263549805

Token 316: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[parent' → logprob: -16.375
    3. 'child' → logprob: -16.5
    4. ' [' → logprob: -16.875
    5. '[
' → logprob: -17.5
    6. '   ' → logprob: -17.625
    7. '```' → logprob: -17.75
    8. '1' → logprob: -18.125
    9. '[self' → logprob: -18.875
    10. '[cell' → logprob: -19.0

Token 317: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.00034058792516589165
    2. 'tree' → logprob: -8.000340461730957
    3. ' child' → logprob: -13.125340461730957
    4. '[' → logprob: -13.500340461730957
    5. '	child' → logprob: -14.500340461730957
    6. 'self' → logprob: -14.625340461730957
    7. '   ' → logprob: -14.625340461730957
    8. '.child' → logprob: -16.500341415405273
    9. '(child' → logprob: -16.500341415405273
    10. '```' → logprob: -18.375341415405273

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '2' → logprob: -13.50000286102295
    3. '<|end|>' → logprob: -15.62500286102295
    4. 's' → logprob: -15.87500286102295
    5. '   ' → logprob: -16.000001907348633
    6. 'child' → logprob: -16.000001907348633
    7. ']' → logprob: -16.250001907348633
    8. ' ' → logprob: -16.250001907348633
    9. '```' → logprob: -16.250001907348633
    10. 'token' → logprob: -17.125001907348633

Token 319: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485999770462513
    2. ' =' → logprob: -3.0485999584198
    3. ']' → logprob: -11.673600196838379
    4. ']=' → logprob: -13.048600196838379
    5. '   ' → logprob: -14.173600196838379
    6. ')' → logprob: -14.298600196838379
    7. ')=' → logprob: -16.048599243164062
    8. '    ' → logprob: -16.048599243164062
    9. ' ' → logprob: -16.298599243164062
    10. '=self' → logprob: -16.548599243164062

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861468818038702
    2. ' =' → logprob: -4.758614540100098
    3. '=self' → logprob: -16.508615493774414
    4. '=
' → logprob: -17.508615493774414
    5. '=

' → logprob: -18.633615493774414
    6. '=s' → logprob: -20.633615493774414
    7. '＝' → logprob: -20.883615493774414
    8. '=}' → logprob: -20.883615493774414
    9. '=n' → logprob: -21.258615493774414
    10. ',' → logprob: -21.758615493774414

Token 321: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931525468826294
    2. 'self' → logprob: -0.6931525468826294
    3. '(self' → logprob: -12.94315242767334
    4. '	self' → logprob: -13.31815242767334
    5. '[self' → logprob: -14.69315242767334
    6. ' ' → logprob: -15.06815242767334
    7. '_self' → logprob: -15.69315242767334
    8. '=self' → logprob: -16.068153381347656
    9. 'Self' → logprob: -16.693153381347656
    10. 's' → logprob: -16.818153381347656

Token 322: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.014187601394951344
    2. 'tree' → logprob: -4.264187812805176
    3. '	tree' → logprob: -11.264187812805176
    4. ' tree' → logprob: -12.264187812805176
    5. '.' → logprob: -12.514187812805176
    6. '.child' → logprob: -14.139187812805176
    7. '[' → logprob: -14.139187812805176
    8. 'self' → logprob: -15.014187812805176
    9. '(tree' → logprob: -15.764187812805176
    10. ' .' → logprob: -15.889187812805176

Token 323: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.810037742368877e-05
    2. '[n' → logprob: -10.875038146972656
    3. 'child' → logprob: -11.250038146972656
    4. 'n' → logprob: -13.125038146972656
    5. ' child' → logprob: -13.375038146972656
    6. ',' → logprob: -14.250038146972656
    7. '   ' → logprob: -14.500038146972656
    8. ' ' → logprob: -14.750038146972656
    9. '[parent' → logprob: -15.500038146972656
    10. ' [' → logprob: -15.625038146972656

Token 324: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -5.7053759519476444e-05
    2. ' child' → logprob: -9.875057220458984
    3. '	child' → logprob: -13.250057220458984
    4. 'ch' → logprob: -13.375057220458984
    5. '(child' → logprob: -14.125057220458984
    6. 'chid' → logprob: -15.000057220458984
    7. 'n' → logprob: -15.375057220458984
    8. 'chil' → logprob: -15.500057220458984
    9. '.child' → logprob: -15.750057220458984
    10. '[' → logprob: -15.875057220458984

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004449109081178904
    2. '2' → logprob: -5.504448890686035
    3. 'child' → logprob: -9.004448890686035
    4. 'token' → logprob: -9.754448890686035
    5. ']' → logprob: -10.254448890686035
    6. '   ' → logprob: -10.254448890686035
    7. 's' → logprob: -10.504448890686035
    8. 'n' → logprob: -11.254448890686035
    9. ' ' → logprob: -11.254448890686035
    10. '<|end|>' → logprob: -11.504448890686035

Token 326: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3141539692878723
    2. ',' → logprob: -1.3141539096832275
    3. ',n' → logprob: -8.189153671264648
    4. ',self' → logprob: -8.189153671264648
    5. 'self' → logprob: -8.689153671264648
    6. ' ,' → logprob: -9.314153671264648
    7. ' ],' → logprob: -10.939153671264648
    8. '>,' → logprob: -11.064153671264648
    9. '},' → logprob: -11.314153671264648
    10. ' self' → logprob: -11.689153671264648

Token 327: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815052703022957
    2. ' self' → logprob: -4.018150329589844
    3. '	self' → logprob: -15.643150329589844
    4. '[self' → logprob: -15.643150329589844
    5. '(self' → logprob: -16.393150329589844
    6. '
' → logprob: -16.768150329589844
    7. ' ' → logprob: -17.393150329589844
    8. '   ' → logprob: -17.643150329589844
    9. ' ' → logprob: -18.268150329589844
    10. '       ' → logprob: -18.268150329589844

Token 328: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.021315302699804306
    2. '[n' → logprob: -4.021315097808838
    3. 'tree' → logprob: -5.771315097808838
    4. ' tree' → logprob: -11.271315574645996
    5. '.n' → logprob: -11.396315574645996
    6. '	tree' → logprob: -12.021315574645996
    7. '```' → logprob: -12.896315574645996
    8. '.' → logprob: -13.021315574645996
    9. '[' → logprob: -13.146315574645996
    10. 'n' → logprob: -13.396315574645996

Token 329: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0010792528046295047
    2. 'n' → logprob: -7.001079082489014
    3. '[' → logprob: -8.751079559326172
    4. '[
' → logprob: -12.126079559326172
    5. '```' → logprob: -13.501079559326172
    6. '<|end|>' → logprob: -13.751079559326172
    7. ' n' → logprob: -15.126079559326172
    8. '	n' → logprob: -15.126079559326172
    9. ',n' → logprob: -15.626079559326172
    10. '[node' → logprob: -16.126079559326172

Token 330: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15088807046413422
    2. 'n' → logprob: -2.900887966156006
    3. '           ' → logprob: -3.525887966156006
    4. '
' → logprob: -4.025887966156006
    5. '(n' → logprob: -4.525887966156006
    6. ' n' → logprob: -4.650887966156006
    7. '[n' → logprob: -5.025887966156006
    8. '<|end|>' → logprob: -5.900887966156006
    9. ')
' → logprob: -6.275887966156006
    10. '       ' → logprob: -6.650887966156006

Token 331: '               ' (ID: 506)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012128500267863274
    2. ' n' → logprob: -4.5121283531188965
    3. '	n' → logprob: -7.0121283531188965
    4. '(n' → logprob: -10.512128829956055
    5. '           ' → logprob: -10.637128829956055
    6. '\n' → logprob: -10.637128829956055
    7. '[n' → logprob: -11.012128829956055
    8. '   ' → logprob: -11.262128829956055
    9. '```' → logprob: -11.262128829956055
    10. '               ' → logprob: -11.387128829956055

Token 332: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -7.64839569455944e-05
    2. ' n' → logprob: -9.500076293945312
    3. '               ' → logprob: -13.750076293945312
    4. '	n' → logprob: -14.750076293945312
    5. '           ' → logprob: -16.250076293945312
    6. '   ' → logprob: -16.625076293945312
    7. '                   ' → logprob: -20.125076293945312
    8. '_n' → logprob: -20.250076293945312
    9. '  ' → logprob: -21.375076293945312
    10. '       ' → logprob: -21.500076293945312

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. '＝' → logprob: -19.501928329467773
    4. '.=' → logprob: -19.626928329467773
    5. ' ' → logprob: -19.876928329467773
    6. ',' → logprob: -19.876928329467773
    7. '=}' → logprob: -21.251928329467773
    8. '=
' → logprob: -21.501928329467773
    9. ' =
' → logprob: -21.876928329467773
    10. '<|end|>' → logprob: -22.251928329467773

Token 334: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.005234002135694027
    2. ' child' → logprob: -5.2552337646484375
    3. '	child' → logprob: -15.630233764648438
    4. '   ' → logprob: -17.505233764648438
    5. ' ' → logprob: -19.505233764648438
    6. '(child' → logprob: -19.880233764648438
    7. 'Child' → logprob: -20.255233764648438
    8. '.child' → logprob: -20.255233764648438
    9. '_child' → logprob: -20.505233764648438
    10. 'ch' → logprob: -21.005233764648438

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '```' → logprob: -19.75
    4. '<|end|>' → logprob: -20.125
    5. '１' → logprob: -20.375
    6. 's' → logprob: -20.75
    7. '2' → logprob: -21.375
    8. '১' → logprob: -21.6875
    9. '[' → logprob: -21.75
    10. '१' → logprob: -22.0

Token 336: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044902291847392917
    2. 'else' → logprob: -7.875449180603027
    3. ' else' → logprob: -10.500449180603027
    4. 'elif' → logprob: -10.500449180603027
    5. '               ' → logprob: -12.500449180603027
    6. '       ' → logprob: -13.000449180603027
    7. '<|end|>' → logprob: -13.250449180603027
    8. '
' → logprob: -13.250449180603027
    9. '```' → logprob: -13.750449180603027
    10. '            
' → logprob: -14.250449180603027

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02176891826093197
    2. 'else' → logprob: -3.896768808364868
    3. ' else' → logprob: -7.146769046783447
    4. '               ' → logprob: -8.521768569946289
    5. 'elif' → logprob: -8.646768569946289
    6. '       ' → logprob: -10.521768569946289
    7. '<|end|>' → logprob: -11.396768569946289
    8. '```' → logprob: -11.521768569946289
    9. 'n' → logprob: -12.396768569946289
    10. '            
' → logprob: -13.146768569946289

Token 338: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6072258949279785
    2. 'else' (adapté à ' else') → logprob: -0.8572258949279785
    3. ' else' → logprob: -3.4822258949279785
    4. 'n' → logprob: -10.48222541809082
    5. '       ' → logprob: -11.10722541809082
    6. 'elif' → logprob: -11.73222541809082
    7. '	else' → logprob: -12.60722541809082
    8. '               ' → logprob: -12.73222541809082
    9. '   ' → logprob: -13.60722541809082
    10. '```' → logprob: -13.85722541809082

Token 339: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5802539587020874
    2. '               ' → logprob: -0.8302539587020874
    3. ':' → logprob: -6.080254077911377
    4. ' self' → logprob: -6.955254077911377
    5. ' :
' → logprob: -7.455254077911377
    6. 'self' → logprob: -9.080253601074219
    7. '           ' → logprob: -9.455253601074219
    8. '(self' → logprob: -9.830253601074219
    9. '{
' → logprob: -9.830253601074219
    10. '[self' → logprob: -9.955253601074219

Token 340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027032257989048958
    2. ' self' → logprob: -3.6520323753356934
    3. 'self' → logprob: -7.277032375335693
    4. '	self' → logprob: -11.027031898498535
    5. '           ' → logprob: -11.527031898498535
    6. '			' → logprob: -12.902031898498535
    7. '		       ' → logprob: -13.402031898498535
    8. '(self' → logprob: -13.652031898498535
    9. '	           ' → logprob: -13.902031898498535
    10. ' ' → logprob: -14.027031898498535

Token 341: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.017197174951434135
    2. ' self' → logprob: -4.142197132110596
    3. '               ' → logprob: -6.767197132110596
    4. '           ' → logprob: -12.017197608947754
    5. '	self' → logprob: -12.767197608947754
    6. '   ' → logprob: -14.392197608947754
    7. '[self' → logprob: -14.767197608947754
    8. '(self' → logprob: -14.767197608947754
    9. '                   ' → logprob: -15.142197608947754
    10. 'n' → logprob: -15.767197608947754

Token 342: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -2.2842308680992573e-05
    2. 'tree' → logprob: -10.750022888183594
    3. '.' → logprob: -14.125022888183594
    4. ' .' → logprob: -15.125022888183594
    5. '	tree' → logprob: -15.125022888183594
    6. ' tree' → logprob: -17.875022888183594
    7. '
' → logprob: -18.000022888183594
    8. '.t' → logprob: -18.125022888183594
    9. '.
' → logprob: -19.000022888183594
    10. '.tr' → logprob: -20.250022888183594

Token 343: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.165027217415627e-05
    2. 'n' → logprob: -10.750021934509277
    3. '[' → logprob: -15.625021934509277
    4. ',n' → logprob: -17.75002098083496
    5. ',' → logprob: -18.25002098083496
    6. '(n' → logprob: -19.37502098083496
    7. '	n' → logprob: -19.87502098083496
    8. ' n' → logprob: -20.37502098083496
    9. '[node' → logprob: -20.50002098083496
    10. '<n' → logprob: -21.25002098083496

Token 344: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ',self' → logprob: -11.875018119812012
    3. ' ,' → logprob: -12.125018119812012
    4. '],' → logprob: -12.250018119812012
    5. ',n' → logprob: -14.375018119812012
    6. '>,' → logprob: -16.125019073486328
    7. ',[' → logprob: -16.250019073486328
    8. '),' → logprob: -16.500019073486328
    9. '[' → logprob: -16.625019073486328
    10. '‌,' → logprob: -17.250019073486328

Token 345: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132699728012085
    2. 'self' → logprob: -1.3132699728012085
    3. '[self' → logprob: -12.93826961517334
    4. '=self' → logprob: -12.93826961517334
    5. '	self' → logprob: -13.81326961517334
    6. '(self' → logprob: -14.06326961517334
    7. ' ' → logprob: -15.31326961517334
    8. '```' → logprob: -15.56326961517334
    9. 's' → logprob: -15.68826961517334
    10. '<|end|>' → logprob: -15.81326961517334

Token 346: '.tree' (ID: 49211)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16247853636741638
    2. '[self' → logprob: -1.9124785661697388
    3. 'tree' → logprob: -6.787478446960449
    4. '[' → logprob: -6.912478446960449
    5. ' self' → logprob: -9.03747844696045
    6. 'child' → logprob: -12.53747844696045
    7. '	self' → logprob: -13.03747844696045
    8. '[
' → logprob: -13.66247844696045
    9. ' tree' → logprob: -14.28747844696045
    10. '_tree' → logprob: -14.53747844696045

Token 347: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -18.25
    3. '[parent' → logprob: -18.25
    4. '[
' → logprob: -18.625
    5. '[n' → logprob: -18.75
    6. 'child' → logprob: -19.0
    7. '```' → logprob: -19.25
    8. '[self' → logprob: -19.5
    9. '[node' → logprob: -20.0
    10. '[cell' → logprob: -21.0

Token 348: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.00010318557906430215
    2. '[' → logprob: -9.250102996826172
    3. ' child' → logprob: -12.000102996826172
    4. 'tree' → logprob: -15.125102996826172
    5. '(child' → logprob: -15.375102996826172
    6. '	child' → logprob: -15.625102996826172
    7. '.child' → logprob: -16.375102996826172
    8. 'self' → logprob: -19.375102996826172
    9. '[
' → logprob: -19.500102996826172
    10. '   ' → logprob: -19.750102996826172

Token 349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.5
    3. '   ' → logprob: -17.375
    4. 'child' → logprob: -17.375
    5. '
' → logprob: -17.875
    6. ' ' → logprob: -18.0
    7. '```' → logprob: -18.125
    8. '1' → logprob: -19.25
    9. '_' → logprob: -19.625
    10. 'right' → logprob: -20.0

Token 350: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27987876534461975
    2. ']' → logprob: -1.5298787355422974
    3. ' =' → logprob: -3.654878854751587
    4. ']=' → logprob: -6.404878616333008
    5. ')' → logprob: -10.529878616333008
    6. ' ]' → logprob: -11.654878616333008
    7. '   ' → logprob: -12.279878616333008
    8. ' ' → logprob: -13.904878616333008
    9. '[' → logprob: -14.029878616333008
    10. ')=' → logprob: -14.154878616333008

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '=
' → logprob: -17.048587799072266
    4. '=

' → logprob: -18.673587799072266
    5. ' ' → logprob: -18.798587799072266
    6. ' =
' → logprob: -19.173587799072266
    7. ')' → logprob: -19.798587799072266
    8. '   ' → logprob: -20.048587799072266
    9. '<|end|>' → logprob: -20.298587799072266
    10. ']=' → logprob: -20.548587799072266

Token 352: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12693272531032562
    2. ' self' → logprob: -2.1269326210021973
    3. '[self' → logprob: -13.001933097839355
    4. '(self' → logprob: -13.501933097839355
    5. '	self' → logprob: -14.376933097839355
    6. '=self' → logprob: -16.62693214416504
    7. ' ' → logprob: -16.75193214416504
    8. '```' → logprob: -17.25193214416504
    9. '*self' → logprob: -17.25193214416504
    10. '           ' → logprob: -17.37693214416504

Token 353: '.tree' (ID: 49211)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0025601962115615606
    2. '[' → logprob: -6.002560138702393
    3. ' tree' → logprob: -9.75256061553955
    4. 'self' → logprob: -11.50256061553955
    5. '[self' → logprob: -11.50256061553955
    6. '	tree' → logprob: -12.87756061553955
    7. '(tree' → logprob: -13.37756061553955
    8. '.tree' → logprob: -14.00256061553955
    9. '_tree' → logprob: -14.87756061553955
    10. 'child' → logprob: -15.00256061553955

Token 354: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[n' → logprob: -14.75
    3. 'child' → logprob: -17.5
    4. 'n' → logprob: -18.125
    5. '[
' → logprob: -18.625
    6. '```' → logprob: -18.75
    7. '[parent' → logprob: -19.0
    8. '[ch' → logprob: -19.25
    9. '[cell' → logprob: -19.5
    10. '[node' → logprob: -19.5

Token 355: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -6.153795766294934e-06
    2. ' child' → logprob: -12.500005722045898
    3. '[' → logprob: -13.750005722045898
    4. '(child' → logprob: -13.875005722045898
    5. '	child' → logprob: -15.750005722045898
    6. '.child' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.5000057220459
    8. 'ch' → logprob: -18.3750057220459
    9. ' ' → logprob: -18.7500057220459
    10. 'chat' → logprob: -18.8750057220459

Token 356: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. '```' → logprob: -15.000001907348633
    4. 'child' → logprob: -16.500001907348633
    5. '
' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.375001907348633
    8. '[n' → logprob: -18.250001907348633
    9. 's' → logprob: -18.500001907348633
    10. '

' → logprob: -18.625001907348633

Token 357: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022909408435225487
    2. ',n' → logprob: -4.272909641265869
    3. '],' → logprob: -4.897909641265869
    4. ' ,' → logprob: -6.772909641265869
    5. 'n' → logprob: -10.147909164428711
    6. '[n' → logprob: -10.522909164428711
    7. '),' → logprob: -11.022909164428711
    8. ' n' → logprob: -11.772909164428711
    9. ',
' → logprob: -12.647909164428711
    10. ']' → logprob: -13.272909164428711

Token 358: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815006136894226
    2. ' self' → logprob: -4.0181498527526855
    3. '[self' → logprob: -16.018150329589844
    4. '	self' → logprob: -17.518150329589844
    5. '(self' → logprob: -17.643150329589844
    6. ' ' → logprob: -19.393150329589844
    7. '   ' → logprob: -19.643150329589844
    8. 'n' → logprob: -19.768150329589844
    9. '```' → logprob: -19.768150329589844
    10. '
' → logprob: -20.143150329589844

Token 359: '.tree' (ID: 49211)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.046360816806554794
    2. 'tree' → logprob: -3.296360731124878
    3. 'n' → logprob: -4.796360969543457
    4. '[' → logprob: -10.921360969543457
    5. '```' → logprob: -13.171360969543457
    6. '[
' → logprob: -13.421360969543457
    7. '
' → logprob: -13.671360969543457
    8. ' tree' → logprob: -14.171360969543457
    9. ' n' → logprob: -14.546360969543457
    10. 'tre' → logprob: -14.796360969543457

Token 360: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00030400342075154185
    2. 'n' → logprob: -8.250304222106934
    3. '[' → logprob: -10.125304222106934
    4. '[
' → logprob: -14.500304222106934
    5. '```' → logprob: -14.500304222106934
    6. '[node' → logprob: -15.125304222106934
    7. ' n' → logprob: -15.375304222106934
    8. ' [' → logprob: -15.750304222106934
    9. '
' → logprob: -16.000303268432617
    10. '(n' → logprob: -16.000303268432617

Token 361: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46903741359710693
    2. 'n' → logprob: -1.469037413597107
    3. '
' → logprob: -2.2190375328063965
    4. '[n' → logprob: -4.0940375328063965
    5. ' n' → logprob: -4.5940375328063965
    6. ']
' → logprob: -5.0940375328063965
    7. '(n' → logprob: -7.3440375328063965
    8. '           ' → logprob: -7.9690375328063965
    9. '                   ' → logprob: -7.9690375328063965
    10. ')
' → logprob: -8.219037055969238

Token 362: '               ' (ID: 506)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021528836339712143
    2. ' n' → logprob: -4.396528720855713
    3. '
' → logprob: -4.896528720855713
    4. '	n' → logprob: -6.646528720855713
    5. '               ' → logprob: -9.771529197692871
    6. '```' → logprob: -10.396529197692871
    7. '(n' → logprob: -10.521529197692871
    8. '[n' → logprob: -10.521529197692871
    9. '
' → logprob: -11.271529197692871
    10. '<n' → logprob: -11.396529197692871

Token 363: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.000741134281270206
    2. ' n' → logprob: -7.250741004943848
    3. '               ' → logprob: -10.500741004943848
    4. 'child' → logprob: -12.625741004943848
    5. '   ' → logprob: -15.625741004943848
    6. '	n' → logprob: -15.875741004943848
    7. '           ' → logprob: -16.250741958618164
    8. ' child' → logprob: -18.000741958618164
    9. '                   ' → logprob: -18.125741958618164
    10. '       ' → logprob: -19.250741958618164

Token 364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=
' → logprob: -17.936967849731445
    4. ' =
' → logprob: -19.936967849731445
    5. '   ' → logprob: -20.436967849731445
    6. ' ' → logprob: -20.936967849731445
    7. '=}' → logprob: -22.686967849731445
    8. '.=' → logprob: -22.811967849731445
    9. '＝' → logprob: -23.061967849731445
    10. ' +=' → logprob: -23.186967849731445

Token 365: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.00861468818038702
    2. ' child' → logprob: -4.758614540100098
    3. '	child' → logprob: -16.633615493774414
    4. '   ' → logprob: -18.758615493774414
    5. 'chat' → logprob: -19.258615493774414
    6. '(child' → logprob: -19.258615493774414
    7. '.child' → logprob: -19.383615493774414
    8. ' ' → logprob: -19.883615493774414
    9. 'ch' → logprob: -20.008615493774414
    10. '_child' → logprob: -20.883615493774414

Token 366: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '```' → logprob: -17.750001907348633
    5. '[' → logprob: -18.125001907348633
    6. '1' → logprob: -19.500001907348633
    7. '  ' → logprob: -20.000001907348633
    8. '
' → logprob: -20.500001907348633
    9. '۲' → logprob: -20.500001907348633
    10. '    ' → logprob: -20.812501907348633

Token 367: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 370: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.3151766359806061
    2. ' rv' → logprob: -1.3151766061782837
    3. 'None' → logprob: -6.440176486968994
    4. ' None' → logprob: -8.190176963806152
    5. '<|end|>' → logprob: -10.940176963806152
    6. '(rv' → logprob: -11.190176963806152
    7. '.rv' → logprob: -12.440176963806152
    8. 'self' → logprob: -13.440176963806152
    9. 'r' → logprob: -14.315176963806152
    10. ' ' → logprob: -14.815176963806152

Token 371: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' solve' (ID: 17722)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.5963062047958374
    2. ' max' → logprob: -2.221306324005127
    3. ' top' → logprob: -2.471306324005127
    4. ' solve' → logprob: -2.721306324005127
    5. ' find' → logprob: -2.721306324005127
    6. ' main' → logprob: -2.846306324005127
    7. ' breadth' → logprob: -4.596306324005127
    8. 'top' → logprob: -4.596306324005127
    9. ' process' → logprob: -5.096306324005127
    10. 'max' → logprob: -5.346306324005127

Token 374: '(N' (ID: 10564)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006611399352550507
    2. '():
' → logprob: -6.131611347198486
    3. '(graph' → logprob: -6.756611347198486
    4. '(n' → logprob: -7.131611347198486
    5. '(grid' → logprob: -7.131611347198486
    6. '(' → logprob: -8.381611824035645
    7. '(s' → logprob: -8.506611824035645
    8. '(board' → logprob: -8.881611824035645
    9. '(queue' → logprob: -9.006611824035645
    10. '()' → logprob: -9.381611824035645

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012487331696320325
    2. '):' → logprob: -9.50012493133545
    3. ' ,' → logprob: -10.00012493133545
    4. ' ):' → logprob: -13.25012493133545
    5. ',K' → logprob: -14.87512493133545
    6. ',
' → logprob: -14.87512493133545
    7. ',k' → logprob: -15.12512493133545
    8. ',d' → logprob: -15.50012493133545
    9. ',int' → logprob: -15.50012493133545
    10. ',n' → logprob: -15.62512493133545

Token 376: ' M' (ID: 391)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.2831608057022095
    2. 'M' → logprob: -1.4081608057022095
    3. 'K' → logprob: -2.28316068649292
    4. ' M' → logprob: -2.53316068649292
    5. ' edges' → logprob: -3.03316068649292
    6. 'A' → logprob: -3.40816068649292
    7. ' K' → logprob: -3.53316068649292
    8. 'graph' → logprob: -3.90816068649292
    9. 'S' → logprob: -4.40816068649292
    10. 'arr' → logprob: -4.53316068649292

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000510260637383908
    2. '):' → logprob: -7.625510215759277
    3. ' ,' → logprob: -10.875510215759277
    4. ',
' → logprob: -13.875510215759277
    5. ' ):' → logprob: -14.625510215759277
    6. ')' → logprob: -15.750510215759277
    7. ',K' → logprob: -15.875510215759277
    8. ',d' → logprob: -16.000511169433594
    9. '):
' → logprob: -16.313011169433594
    10. ',B' → logprob: -16.375511169433594

Token 378: ' A' (ID: 355)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.13317716121673584
    2. ' edges' → logprob: -3.0081772804260254
    3. 'graph' → logprob: -4.258177280426025
    4. 'K' → logprob: -4.383177280426025
    5. 'connections' → logprob: -4.633177280426025
    6. 'A' → logprob: -5.258177280426025
    7. 'roads' → logprob: -5.258177280426025
    8. ' K' → logprob: -5.758177280426025
    9. ' graph' → logprob: -6.008177280426025
    10. 'grid' → logprob: -6.008177280426025

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04325288534164429
    2. '):' → logprob: -3.168252944946289
    3. ' ,' → logprob: -8.918252944946289
    4. ' ):' → logprob: -11.043252944946289
    5. '):
' → logprob: -11.168252944946289
    6. ',B' → logprob: -11.418252944946289
    7. ')' → logprob: -11.543252944946289
    8. ',s' → logprob: -11.793252944946289
    9. ',K' → logprob: -11.918252944946289
    10. 's' → logprob: -12.543252944946289

Token 380: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4656345546245575
    2. 'edges' → logprob: -2.21563458442688
    3. 'K' → logprob: -2.59063458442688
    4. 'S' → logprob: -3.09063458442688
    5. ' B' → logprob: -3.71563458442688
    6. 'X' → logprob: -3.96563458442688
    7. ' edges' → logprob: -4.465634346008301
    8. 'C' → logprob: -4.715634346008301
    9. 'Q' → logprob: -4.965634346008301
    10. 'L' → logprob: -4.965634346008301

Token 381: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6352260112762451
    2. ',' → logprob: -0.7602260112762451
    3. '):
' → logprob: -6.010226249694824
    4. ')' → logprob: -9.385226249694824
    5. '):
' → logprob: -10.135226249694824
    6. ' ):' → logprob: -11.135226249694824
    7. '   ' → logprob: -11.260226249694824
    8. ' ,' → logprob: -11.635226249694824
    9. '):

' → logprob: -13.760226249694824
    10. ':' → logprob: -14.135226249694824

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007518723141402006
    2. 'graph' → logprob: -5.257518768310547
    3. ' graph' → logprob: -6.257518768310547
    4. '	graph' → logprob: -9.507518768310547
    5. '```' → logprob: -9.757518768310547
    6. 'q' → logprob: -10.007518768310547
    7. 'adj' → logprob: -10.132518768310547
    8. '    
' → logprob: -10.507518768310547
    9. 'pq' → logprob: -10.507518768310547
    10. 'queue' → logprob: -10.882518768310547

Token 383: ' ans' (ID: 3345)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2819937467575073
    2. 'adj' → logprob: -2.531993865966797
    3. 'pq' → logprob: -2.781993865966797
    4. '   ' → logprob: -3.281993865966797
    5. 'queue' → logprob: -4.531993865966797
    6. 'edges' → logprob: -4.656993865966797
    7. 'visited' → logprob: -4.781993865966797
    8. 'g' → logprob: -4.781993865966797
    9. 'dist' → logprob: -4.906993865966797
    10. ' graph' → logprob: -5.406993865966797

Token 384: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14277023077011108
    2. '=' → logprob: -2.017770290374756
    3. ',' → logprob: -9.642769813537598
    4. 's' → logprob: -11.892769813537598
    5. '   ' → logprob: -11.892769813537598
    6. ' ' → logprob: -12.642769813537598
    7. '_' → logprob: -13.142769813537598
    8. ')' → logprob: -13.142769813537598
    9. '=[]' → logprob: -13.267769813537598
    10. '=[]
' → logprob: -14.017769813537598

Token 385: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31793099641799927
    2. '[' → logprob: -1.9429309368133545
    3. '0' → logprob: -2.3179309368133545
    4. 'deque' → logprob: -4.442931175231934
    5. ' [' → logprob: -5.692931175231934
    6. ' []' → logprob: -5.817931175231934
    7. 'Priority' → logprob: -5.817931175231934
    8. '[N' → logprob: -6.067931175231934
    9. '[M' → logprob: -6.692931175231934
    10. '[-' → logprob: -6.692931175231934

Token 386: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6936118006706238
    2. '[' → logprob: -1.0686118602752686
    3. '0' → logprob: -2.0686118602752686
    4. '[-' → logprob: -4.4436116218566895
    5. '[N' → logprob: -4.8186116218566895
    6. 'deque' → logprob: -5.5686116218566895
    7. '[M' → logprob: -6.4436116218566895
    8. '['' → logprob: -6.6936116218566895
    9. 'Priority' → logprob: -6.9436116218566895
    10. '[]
' → logprob: -7.3186116218566895

Token 387: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4355689287185669
    2. '   ' → logprob: -1.060568928718567
    3. '    
' → logprob: -5.185568809509277
    4. '   
' → logprob: -8.060568809509277
    5. '  
' → logprob: -8.560568809509277
    6. ' 
' → logprob: -8.810568809509277
    7. ',' → logprob: -8.935568809509277
    8. '<|end|>' → logprob: -9.560568809509277
    9. '
' → logprob: -9.810568809509277
    10. ' queue' → logprob: -9.935568809509277

Token 388: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010636856779456139
    2. '
' → logprob: -4.885636806488037
    3. '    
' → logprob: -6.635636806488037
    4. '<|end|>' → logprob: -7.385636806488037
    5. ' queue' → logprob: -8.510637283325195
    6. ',' → logprob: -8.635637283325195
    7. '  
' → logprob: -9.135637283325195
    8. ' 
' → logprob: -9.385637283325195
    9. '	queue' → logprob: -9.635637283325195
    10. '   
' → logprob: -9.635637283325195

Token 389: ' all' (ID: 722)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.7422614693641663
    2. 'graph' → logprob: -1.4922614097595215
    3. 'queue' → logprob: -2.3672614097595215
    4. 'visited' → logprob: -3.4922614097595215
    5. 'adj' → logprob: -3.6172614097595215
    6. 'dist' → logprob: -3.7422614097595215
    7. 'q' → logprob: -4.1172614097595215
    8. 'edges' → logprob: -4.2422614097595215
    9. 'p' → logprob: -4.2422614097595215
    10. 'g' → logprob: -4.8672614097595215

Token 390: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2777641713619232
    2. '_nodes' → logprob: -2.152764081954956
    3. '=' → logprob: -3.027764081954956
    4. '_edges' → logprob: -4.152764320373535
    5. '_queue' → logprob: -4.277764320373535
    6. '_' → logprob: -4.402764320373535
    7. '   ' → logprob: -4.527764320373535
    8. '_pairs' → logprob: -5.527764320373535
    9. '_points' → logprob: -6.402764320373535
    10. '_data' → logprob: -6.777764320373535

Token 391: 'works' (ID: 23042)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -1.3982845544815063
    2. 'edges' → logprob: -1.6482845544815063
    3. 'A' → logprob: -1.7732845544815063
    4. 'queues' → logprob: -2.023284435272217
    5. '=' → logprob: -2.898284435272217
    6. 'pairs' → logprob: -3.523284435272217
    7. 'queue' → logprob: -3.898284435272217
    8. 'items' → logprob: -4.023284435272217
    9. 'tasks' → logprob: -4.773284435272217
    10. 'points' → logprob: -4.773284435272217

Token 392: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20171953737735748
    2. ' =' → logprob: -1.7017195224761963
    3. ',' → logprob: -9.201719284057617
    4. '   ' → logprob: -10.076719284057617
    5. '_queue' → logprob: -10.076719284057617
    6. 's' → logprob: -10.701719284057617
    7. ' ' → logprob: -11.326719284057617
    8. '_done' → logprob: -11.326719284057617
    9. 'done' → logprob: -11.451719284057617
    10. '=set' → logprob: -11.576719284057617

Token 393: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.19756998121738434
    2. 'set' → logprob: -2.6975700855255127
    3. '[]' → logprob: -3.5725700855255127
    4. '[' → logprob: -3.8225700855255127
    5. '[(' → logprob: -3.9475700855255127
    6. 'Priority' → logprob: -4.197569847106934
    7. '[N' → logprob: -4.947569847106934
    8. ' deque' → logprob: -5.447569847106934
    9. '[M' → logprob: -5.447569847106934
    10. 'N' → logprob: -5.947569847106934

Token 394: '(sorted' (ID: 92488)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.036791302263736725
    2. '()
' → logprob: -4.0367913246154785
    3. '([(' → logprob: -4.5367913246154785
    4. '(A' → logprob: -5.6617913246154785
    5. '([]' → logprob: -5.7867913246154785
    6. '((' → logprob: -7.4117913246154785
    7. '(range' → logprob: -8.28679084777832
    8. '([])
' → logprob: -8.66179084777832
    9. '[]' → logprob: -10.03679084777832
    10. '([' → logprob: -10.28679084777832

Token 395: '(zip' (ID: 87520)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.49660706520080566
    2. '(zip' → logprob: -1.8716070652008057
    3. '([(' → logprob: -2.6216070652008057
    4. '((' → logprob: -2.7466070652008057
    5. '(B' → logprob: -3.1216070652008057
    6. '(range' → logprob: -3.2466070652008057
    7. '(((' → logprob: -4.246606826782227
    8. '(en' → logprob: -6.496606826782227
    9. '(list' → logprob: -7.746606826782227
    10. '(M' → logprob: -7.871606826782227

Token 396: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0033907603938132524
    2. '(B' → logprob: -5.878390789031982
    3. '(range' → logprob: -7.753390789031982
    4. 'A' → logprob: -8.878390312194824
    5. '(M' → logprob: -11.753390312194824
    6. 'range' → logprob: -12.253390312194824
    7. '((' → logprob: -13.503390312194824
    8. 'B' → logprob: -14.253390312194824
    9. '(
' → logprob: -14.628390312194824
    10. '(C' → logprob: -14.878390312194824

Token 397: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10324066877365112
    2. ',B' → logprob: -2.353240728378296
    3. '(B' → logprob: -6.353240489959717
    4. ' ,' → logprob: -6.728240489959717
    5. ',A' → logprob: -10.353240966796875
    6. '(' → logprob: -10.603240966796875
    7. ',b' → logprob: -10.603240966796875
    8. ',
' → logprob: -13.103240966796875
    9. '(A' → logprob: -13.228240966796875
    10. 'B' → logprob: -13.978240966796875

Token 398: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00016742534353397787
    2. ' B' → logprob: -8.875167846679688
    3. 'range' → logprob: -10.625167846679688
    4. ' range' → logprob: -13.500167846679688
    5. '[' → logprob: -13.625167846679688
    6. '[B' → logprob: -15.500167846679688
    7. 'b' → logprob: -15.750167846679688
    8. 'M' → logprob: -16.500167846679688
    9. '   ' → logprob: -16.625167846679688
    10. '(range' → logprob: -17.000167846679688

Token 399: '),' (ID: 936)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.16340884566307068
    2. '),' → logprob: -1.913408875465393
    3. ',' → logprob: -6.5384087562561035
    4. ')' → logprob: -7.1634087562561035
    5. '))' → logprob: -7.6634087562561035
    6. '))))' → logprob: -8.663409233093262
    7. ')))
' → logprob: -8.663409233093262
    8. ')),' → logprob: -10.288409233093262
    9. ')));' → logprob: -10.788409233093262
    10. '   ' → logprob: -11.038409233093262

Token 400: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.06308124214410782
    2. ' key' → logprob: -2.8130812644958496
    3. 'reverse' → logprob: -6.81308126449585
    4. ' reverse' → logprob: -11.813080787658691
    5. '(key' → logprob: -12.188080787658691
    6. '[key' → logprob: -14.313080787658691
    7. ',key' → logprob: -15.688080787658691
    8. '	key' → logprob: -15.688080787658691
    9. ' ' → logprob: -16.063081741333008
    10. '   ' → logprob: -16.563081741333008

Token 401: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -1.4140441635390744e-05
    2. '=' → logprob: -11.250014305114746
    3. '=len' → logprob: -13.875014305114746
    4. '=int' → logprob: -17.37501335144043
    5. '=l' → logprob: -18.00001335144043
    6. '=item' → logprob: -18.25001335144043
    7. '=str' → logprob: -18.25001335144043
    8. 'lambda' → logprob: -19.00001335144043
    9. '=_' → logprob: -19.25001335144043
    10. '=
' → logprob: -19.50001335144043

Token 402: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11472286283969879
    2. 'lambda' → logprob: -2.364722967147827
    3. ' lambda' → logprob: -5.239722728729248
    4. ' x' → logprob: -5.239722728729248
    5. '=lambda' → logprob: -5.614722728729248
    6. 'a' → logprob: -9.239723205566406
    7. '   ' → logprob: -10.364723205566406
    8. 'ambda' → logprob: -11.614723205566406
    9. 'l' → logprob: -12.114723205566406
    10. ':' → logprob: -12.489723205566406

Token 403: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12338808178901672
    2. ':x' → logprob: -2.2483880519866943
    3. '=lambda' → logprob: -4.748388290405273
    4. ' :' → logprob: -6.498388290405273
    5. 'x' → logprob: -8.873388290405273
    6. ' x' → logprob: -9.998388290405273
    7. 'lambda' → logprob: -10.123388290405273
    8. '=x' → logprob: -10.123388290405273
    9. '=' → logprob: -10.248388290405273
    10. ':
' → logprob: -10.998388290405273

Token 404: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.13581109046936035
    2. 'x' → logprob: -2.1358110904693604
    3. ' lambda' → logprob: -4.885810852050781
    4. '(lambda' → logprob: -7.135810852050781
    5. ' x' → logprob: -8.010810852050781
    6. '=lambda' → logprob: -8.885810852050781
    7. 'operator' → logprob: -10.760810852050781
    8. '_lambda' → logprob: -13.885810852050781
    9. '(x' → logprob: -14.385810852050781
    10. 'item' → logprob: -14.510810852050781

Token 405: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.313446968793869
    2. ':' → logprob: -1.3134469985961914
    3. '0' → logprob: -9.438446998596191
    4. ':[' → logprob: -10.188446998596191
    5. ' :' → logprob: -11.063446998596191
    6. '1' → logprob: -11.313446998596191
    7. ':
' → logprob: -11.688446998596191
    8. ':x' → logprob: -12.063446998596191
    9. ' ' → logprob: -12.438446998596191
    10. ')[' → logprob: -12.563446998596191

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003251746529713273
    2. '1' → logprob: -5.753251552581787
    3. ' ' → logprob: -10.003252029418945
    4. '[' → logprob: -11.253252029418945
    5. 'x' → logprob: -12.940752029418945
    6. '
' → logprob: -13.003252029418945
    7. '   ' → logprob: -13.065752029418945
    8. ')' → logprob: -13.378252029418945
    9. '-' → logprob: -14.315752029418945
    10. '    ' → logprob: -14.628252029418945

Token 407: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004199017304927111
    2. ')))' → logprob: -5.504199028015137
    3. ' ))' → logprob: -9.379199028015137
    4. '))
' → logprob: -11.879199028015137
    5. '}))' → logprob: -12.129199028015137
    6. ')):' → logprob: -12.379199028015137
    7. ' ' → logprob: -12.504199028015137
    8. '),' → logprob: -12.754199028015137
    9. '   ' → logprob: -13.004199028015137
    10. ',' → logprob: -13.004199028015137

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4101971387863159
    2. ' pq' → logprob: -1.785197138786316
    3. 'pq' → logprob: -2.2851972579956055
    4. ' p' → logprob: -4.0351972579956055
    5. '    
' → logprob: -4.5351972579956055
    6. ',' → logprob: -4.6601972579956055
    7. '
' → logprob: -5.5351972579956055
    8. 'p' → logprob: -5.5351972579956055
    9. ' queue' → logprob: -5.7851972579956055
    10. ')' → logprob: -5.7851972579956055

Token 409: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' (adapté à ' pq') → logprob: -0.02819547802209854
    2. 'queue' → logprob: -4.403195381164551
    3. 'q' → logprob: -5.153195381164551
    4. 'p' → logprob: -5.903195381164551
    5. 'available' → logprob: -6.278195381164551
    6. 'heap' → logprob: -6.653195381164551
    7. 'import' → logprob: -7.028195381164551
    8. ' pq' → logprob: -7.403195381164551
    9. 'waiting' → logprob: -8.15319538116455
    10. 'pending' → logprob: -8.15319538116455

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196891888976097
    2. '=' → logprob: -2.8119688034057617
    3. '  ' → logprob: -14.561968803405762
    4. ' ' → logprob: -14.936968803405762
    5. '.' → logprob: -15.311968803405762
    6. ')' → logprob: -16.186969757080078
    7. ',' → logprob: -16.561969757080078
    8. '   ' → logprob: -17.186969757080078
    9. ' =
' → logprob: -17.561969757080078
    10. '=[]' → logprob: -17.811969757080078

Token 411: ' Priority' (ID: 54625)
  Prédit: 'Priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Priority' → logprob: -0.011047935113310814
    2. ' Priority' → logprob: -4.511047840118408
    3. '.Priority' → logprob: -16.63604736328125
    4. 'Prior' → logprob: -18.76104736328125
    5. '_priority' → logprob: -19.01104736328125
    6. '   ' → logprob: -19.01104736328125
    7. ' priority' → logprob: -19.63604736328125
    8. ' ' → logprob: -20.26104736328125
    9. '	P' → logprob: -20.76104736328125
    10. 'P' → logprob: -21.38604736328125

Token 412: 'Queue' (ID: 9801)
  Prédit: 'Queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Queue' → logprob: 0.0
    2. 'queue' → logprob: -17.375
    3. ' Queue' → logprob: -19.125
    4. 'Que' → logprob: -19.25
    5. '_queue' → logprob: -19.375
    6. '.Queue' → logprob: -21.125
    7. '_QUEUE' → logprob: -21.625
    8. 'QUEUE' → logprob: -21.625
    9. 'Queues' → logprob: -21.625
    10. 'Priority' → logprob: -21.875

Token 413: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.006952168419957161
    2. '(N' → logprob: -5.006952285766602
    3. '(' → logprob: -9.381952285766602
    4. 'M' → logprob: -9.506952285766602
    5. '(len' → logprob: -9.631952285766602
    6. 'N' → logprob: -12.256952285766602
    7. '   ' → logprob: -12.381952285766602
    8. '(
' → logprob: -13.381952285766602
    9. '((' → logprob: -13.506952285766602
    10. 'len' → logprob: -15.256952285766602

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3226136767771095e-05
    2. ' )' → logprob: -11.000042915344238
    3. ')
' → logprob: -11.500042915344238
    4. '+' → logprob: -11.625042915344238
    5. '*' → logprob: -12.625042915344238
    6. '))' → logprob: -13.000042915344238
    7. ' +' → logprob: -14.500042915344238
    8. ')`' → logprob: -15.000042915344238
    9. '   ' → logprob: -15.750042915344238
    10. ')

' → logprob: -16.250043869018555

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05696612596511841
    2. ' for' → logprob: -3.5569660663604736
    3. '    
' → logprob: -4.056966304779053
    4. 'for' → logprob: -6.056966304779053
    5. ' while' → logprob: -6.181966304779053
    6. ' i' → logprob: -6.306966304779053
    7. '
' → logprob: -6.806966304779053
    8. ' current' → logprob: -7.931966304779053
    9. 'while' → logprob: -8.056965827941895
    10. 'i' → logprob: -8.306965827941895

Token 416: ' for' (ID: 395)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6623393893241882
    2. 'i' → logprob: -1.037339448928833
    3. 'for' (adapté à ' for') → logprob: -3.037339448928833
    4. 'work' → logprob: -3.912339448928833
    5. 'current' → logprob: -3.912339448928833
    6. 'day' → logprob: -4.037339210510254
    7. 'index' → logprob: -4.662339210510254
    8. 'while' → logprob: -5.037339210510254
    9. 'time' → logprob: -5.787339210510254
    10. '   ' → logprob: -6.287339210510254

Token 417: ' d' (ID: 272)
  Prédit: 'day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'day' → logprob: -1.1226518154144287
    2. 'i' → logprob: -1.4976518154144287
    3. ' day' → logprob: -1.4976518154144287
    4. 'time' → logprob: -2.8726518154144287
    5. 'start' → logprob: -3.2476518154144287
    6. ' i' → logprob: -3.8726518154144287
    7. '_' → logprob: -3.9976518154144287
    8. '_day' → logprob: -3.9976518154144287
    9. 'work' → logprob: -4.497652053833008
    10. 'current' → logprob: -4.622652053833008

Token 418: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6222369074821472
    2. 'ay' → logprob: -0.8722369074821472
    3. ',' → logprob: -3.247236967086792
    4. 'e' → logprob: -6.247236728668213
    5. 'a' → logprob: -7.122236728668213
    6. 'ate' → logprob: -7.247236728668213
    7. 'in' → logprob: -7.497236728668213
    8. 'i' → logprob: -7.872236728668213
    9. ' ,' → logprob: -7.872236728668213
    10. 'ef' → logprob: -8.122237205505371

Token 419: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.045021943747997284
    2. ' range' → logprob: -3.4200220108032227
    3. 'all' → logprob: -4.545022010803223
    4. 'A' → logprob: -7.670022010803223
    5. ' all' → logprob: -9.045022010803223
    6. 'sorted' → logprob: -10.795022010803223
    7. 'B' → logprob: -10.920022010803223
    8. ' A' → logprob: -11.420022010803223
    9. '   ' → logprob: -11.545022010803223
    10. 'rang' → logprob: -12.045022010803223

Token 420: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049264613538980484
    2. '(M' → logprob: -3.049264669418335
    3. '1' → logprob: -7.549264430999756
    4. '(N' → logprob: -8.924264907836914
    5. 'M' → logprob: -12.174264907836914
    6. '(
' → logprob: -12.924264907836914
    7. '(A' → logprob: -12.924264907836914
    8. '   ' → logprob: -12.924264907836914
    9. '(m' → logprob: -13.424264907836914
    10. ' (' → logprob: -13.674264907836914

Token 421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22812236845493317
    2. 'M' → logprob: -1.603122353553772
    3. 'N' → logprob: -5.978122234344482
    4. 'max' → logprob: -9.60312271118164
    5. '0' → logprob: -10.22812271118164
    6. '   ' → logprob: -10.60312271118164
    7. ' M' → logprob: -11.22812271118164
    8. ' ' → logprob: -11.72812271118164
    9. '(' → logprob: -12.47812271118164
    10. '2' → logprob: -12.85312271118164

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010556964843999594
    2. ' ,' → logprob: -9.250105857849121
    3. ',M' → logprob: -12.250105857849121
    4. ',
' → logprob: -12.500105857849121
    5. '   ' → logprob: -14.500105857849121
    6. 'M' → logprob: -15.500105857849121
    7. ',N' → logprob: -17.000104904174805
    8. '    ' → logprob: -18.250104904174805
    9. '1' → logprob: -18.375104904174805
    10. ' M' → logprob: -18.500104904174805

Token 423: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00015419373812619597
    2. ' M' → logprob: -8.875154495239258
    3. 'N' → logprob: -11.250154495239258
    4. '   ' → logprob: -13.750154495239258
    5. '    ' → logprob: -16.250154495239258
    6. ' ' → logprob: -16.875154495239258
    7. '  ' → logprob: -17.250154495239258
    8. '       ' → logprob: -17.375154495239258
    9. '           ' → logprob: -17.875154495239258
    10. '	M' → logprob: -17.875154495239258

Token 424: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25193363428115845
    2. ' +' → logprob: -1.5019335746765137
    3. '   ' → logprob: -12.626934051513672
    4. '
' → logprob: -15.001934051513672
    5. '):
' → logprob: -15.376934051513672
    6. '+
' → logprob: -15.501934051513672
    7. ' ' → logprob: -15.626934051513672
    8. '    ' → logprob: -15.626934051513672
    9. '):' → logprob: -15.876934051513672
    10. ' +
' → logprob: -16.751934051513672

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.710618905955926e-05
    2. ' ' → logprob: -9.250097274780273
    3. '2' → logprob: -14.625097274780273
    4. '   ' → logprob: -15.125097274780273
    5. '
' → logprob: -16.250097274780273
    6. '```' → logprob: -17.875097274780273
    7. '    ' → logprob: -18.375097274780273
    8. '  ' → logprob: -18.750097274780273
    9. '

' → logprob: -18.812597274780273
    10. '+' → logprob: -18.875097274780273

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '2' → logprob: -15.625006675720215
    4. '   ' → logprob: -17.75000762939453
    5. '
' → logprob: -17.87500762939453
    6. '

' → logprob: -19.62500762939453
    7. 'd' → logprob: -19.62500762939453
    8. '```' → logprob: -20.12500762939453
    9. '0' → logprob: -20.31250762939453
    10. 'M' → logprob: -20.37500762939453

Token 427: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5799108743667603
    2. '):' → logprob: -0.8299108743667603
    3. ':' → logprob: -5.579910755157471
    4. '   ' → logprob: -9.329911231994629
    5. ':
' → logprob: -9.954911231994629
    6. ' ):
' → logprob: -10.704911231994629
    7. ' ):' → logprob: -11.329911231994629
    8. '):
' → logprob: -11.329911231994629
    9. '():
' → logprob: -12.954911231994629
    10. ')' → logprob: -13.829911231994629

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024745857808738947
    2. ' while' → logprob: -6.627474784851074
    3. 'while' → logprob: -7.752474784851074
    4. '   ' → logprob: -8.252474784851074
    5. '        
' → logprob: -8.627474784851074
    6. '<|end|>' → logprob: -8.877474784851074
    7. ',' → logprob: -10.002474784851074
    8. '```' → logprob: -10.627474784851074
    9. '    
' → logprob: -11.377474784851074
    10. '	while' → logprob: -11.752474784851074

Token 429: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.11641978472471237
    2. ' while' → logprob: -2.241419792175293
    3. '       ' → logprob: -5.866419792175293
    4. '   ' → logprob: -7.241419792175293
    5. '	while' → logprob: -10.491419792175293
    6. '
' → logprob: -12.241419792175293
    7. 'While' → logprob: -12.866419792175293
    8. ' ' → logprob: -13.116419792175293
    9. '  ' → logprob: -13.491419792175293
    10. '        
' → logprob: -14.241419792175293

Token 430: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.006277501583099365
    2. ' all' → logprob: -5.131277561187744
    3. 'len' → logprob: -8.006277084350586
    4. '   ' → logprob: -11.631277084350586
    5. ' len' → logprob: -12.506277084350586
    6. ' ' → logprob: -13.381277084350586
    7. '	all' → logprob: -15.506277084350586
    8. 'ans' → logprob: -15.631277084350586
    9. 'not' → logprob: -15.881277084350586
    10. '  ' → logprob: -16.256277084350586

Token 431: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3856492842023727e-06
    2. '_work' → logprob: -14.375000953674316
    3. 'works' → logprob: -14.625000953674316
    4. 'and' → logprob: -16.000001907348633
    5. '(' → logprob: -17.000001907348633
    6. 'Works' → logprob: -17.000001907348633
    7. '\' → logprob: -17.125001907348633
    8. ' works' → logprob: -18.125001907348633
    9. '
' → logprob: -18.250001907348633
    10. 's' → logprob: -18.625001907348633

Token 432: 'works' (ID: 23042)
  Prédit: 'works'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'works' → logprob: -1.2664456789934775e-06
    2. ' works' → logprob: -14.250000953674316
    3. 'Works' → logprob: -14.750000953674316
    4. '_' → logprob: -16.125001907348633
    5. 'work' → logprob: -17.000001907348633
    6. '
' → logprob: -18.375001907348633
    7. '_work' → logprob: -18.625001907348633
    8. 'and' → logprob: -19.750001907348633
    9. 'worked' → logprob: -20.375001907348633
    10. 'orks' → logprob: -20.750001907348633

Token 433: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.06197552755475044
    2. ' and' → logprob: -2.8119754791259766
    3. '           ' → logprob: -12.311975479125977
    4. '       ' → logprob: -14.061975479125977
    5. '   ' → logprob: -14.186975479125977
    6. '          ' → logprob: -14.186975479125977
    7. '      ' → logprob: -15.436975479125977
    8. ' ' → logprob: -15.561975479125977
    9. '        ' → logprob: -16.061975479125977
    10. '         ' → logprob: -16.436975479125977

Token 434: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00038074489566497505
    2. ' all' → logprob: -7.875380516052246
    3. '   ' → logprob: -14.625380516052246
    4. ' ' → logprob: -16.750381469726562
    5. '(all' → logprob: -17.625381469726562
    6. '  ' → logprob: -18.375381469726562
    7. '	all' → logprob: -18.375381469726562
    8. '
' → logprob: -19.500381469726562
    9. 'len' → logprob: -19.875381469726562
    10. '    ' → logprob: -20.000381469726562

Token 435: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. 'works' → logprob: -18.75
    4. '(' → logprob: -18.875
    5. '_work' → logprob: -19.75
    6. '```' → logprob: -20.3125
    7. '__' → logprob: -20.625
    8. '\' → logprob: -20.6875
    9. 'Works' → logprob: -20.75
    10. '(_' → logprob: -21.1875

Token 436: 'works' (ID: 23042)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004641829989850521
    2. 'works' → logprob: -5.379642009735107
    3. 'Works' → logprob: -11.25464153289795
    4. '_work' → logprob: -13.00464153289795
    5. ' works' → logprob: -13.25464153289795
    6. 'work' → logprob: -13.62964153289795
    7. '[' → logprob: -14.00464153289795
    8. '```' → logprob: -14.87964153289795
    9. '(' → logprob: -15.37964153289795
    10. 'orks' → logprob: -15.37964153289795

Token 437: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.3213025744771585e-05
    2. 'and' → logprob: -10.500033378601074
    3. ' and' → logprob: -12.125033378601074
    4. ' [' → logprob: -15.750033378601074
    5. '```' → logprob: -16.625032424926758
    6. '[
' → logprob: -17.500032424926758
    7. ' ' → logprob: -17.875032424926758
    8. '   ' → logprob: -18.000032424926758
    9. '0' → logprob: -18.875032424926758
    10. '][' → logprob: -20.000032424926758

Token 438: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. '[' → logprob: -14.750027656555176
    4. '   ' → logprob: -16.250028610229492
    5. '(' → logprob: -18.250028610229492
    6. '```' → logprob: -18.625028610229492
    7. '][' → logprob: -18.875028610229492
    8. '۰' → logprob: -19.000028610229492
    9. '  ' → logprob: -20.000028610229492
    10. ')' → logprob: -20.750028610229492

Token 439: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048625409603118896
    2. '][' → logprob: -3.0486254692077637
    3. ' [' → logprob: -11.673624992370605
    4. '>[' → logprob: -11.923624992370605
    5. ')[' → logprob: -12.048624992370605
    6. '0' → logprob: -12.798624992370605
    7. '   ' → logprob: -12.798624992370605
    8. '}[' → logprob: -12.923624992370605
    9. ' ][' → logprob: -13.173624992370605
    10. '```' → logprob: -13.423624992370605

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.644463479053229e-05
    2. ' ' → logprob: -10.000046730041504
    3. '[' → logprob: -14.125046730041504
    4. '1' → logprob: -16.375045776367188
    5. '```' → logprob: -16.875045776367188
    6. '   ' → logprob: -17.062545776367188
    7. '
' → logprob: -17.875045776367188
    8. '][' → logprob: -17.875045776367188
    9. '۰' → logprob: -18.312545776367188
    10. '<|end|>' → logprob: -18.375045776367188

Token 441: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.728391170501709
    2. '<=' → logprob: -0.978391170501709
    3. ' <=' → logprob: -2.603391170501709
    4. ' ==' → logprob: -2.728391170501709
    5. ')' → logprob: -7.103391170501709
    6. ')<=' → logprob: -7.853391170501709
    7. ']==' → logprob: -7.978391170501709
    8. ']<=' → logprob: -8.103391647338867
    9. ')==' → logprob: -9.228391647338867
    10. ']' → logprob: -9.603391647338867

Token 442: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3073466718196869
    2. '==' → logprob: -1.5573467016220093
    3. ' <=' → logprob: -3.3073465824127197
    4. ' ==' → logprob: -4.057346820831299
    5. '=' → logprob: -14.55734634399414
    6. ')<=' → logprob: -14.55734634399414
    7. '==
' → logprob: -14.68234634399414
    8. ']<=' → logprob: -15.93234634399414
    9. '≤' → logprob: -16.18234634399414
    10. ' ' → logprob: -16.68234634399414

Token 443: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.493430894101039e-05
    2. ' d' → logprob: -9.500075340270996
    3. ' ' → logprob: -17.12507438659668
    4. '   ' → logprob: -17.87507438659668
    5. '	d' → logprob: -18.25007438659668
    6. '
' → logprob: -19.37507438659668
    7. '  ' → logprob: -19.37507438659668
    8. '    ' → logprob: -21.62507438659668
    9. '  
' → logprob: -22.00007438659668
    10. ' 
' → logprob: -22.62507438659668

Token 444: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10024204105138779
    2. ':' → logprob: -2.3502421379089355
    3. '):
' → logprob: -10.600241661071777
    4. '       ' → logprob: -12.975241661071777
    5. '   ' → logprob: -12.975241661071777
    6. ':
' → logprob: -13.475241661071777
    7. ' :
' → logprob: -13.475241661071777
    8. ':

' → logprob: -13.600241661071777
    9. '           ' → logprob: -14.850241661071777
    10. ' and' → logprob: -14.850241661071777

Token 445: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10765422135591507
    2. ':
' → logprob: -2.607654333114624
    3. ':' → logprob: -3.607654333114624
    4. ' :
' → logprob: -8.482654571533203
    5. '<|end|>' → logprob: -8.482654571533203
    6. ',' → logprob: -8.982654571533203
    7. '):
' → logprob: -9.107654571533203
    8. ' :' → logprob: -9.732654571533203
    9. '            
' → logprob: -9.732654571533203
    10. ',p' → logprob: -9.982654571533203

Token 446: ' work' (ID: 1101)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.09762027114629745
    2. 'work' (adapté à ' work') → logprob: -2.8476202487945557
    3. ' pq' → logprob: -4.097620487213135
    4. 'task' → logprob: -5.097620487213135
    5. '               ' → logprob: -5.347620487213135
    6. 'job' → logprob: -6.097620487213135
    7. '           ' → logprob: -6.972620487213135
    8. 'data' → logprob: -7.097620487213135
    9. 'a' → logprob: -7.097620487213135
    10. 'deadline' → logprob: -7.472620487213135

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34957894682884216
    2. '=' → logprob: -1.2245789766311646
    3. '_time' → logprob: -7.349578857421875
    4. '_data' → logprob: -7.849578857421875
    5. ',' → logprob: -10.474578857421875
    6. 'time' → logprob: -11.349578857421875
    7. '_info' → logprob: -11.599578857421875
    8. '_day' → logprob: -11.599578857421875
    9. '_tuple' → logprob: -12.349578857421875
    10. 'data' → logprob: -12.724578857421875

Token 448: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.004078401252627373
    2. ' all' → logprob: -5.504078388214111
    3. '	all' → logprob: -18.379077911376953
    4. '_all' → logprob: -18.754077911376953
    5. 'All' → logprob: -19.504077911376953
    6. '   ' → logprob: -19.504077911376953
    7. ' ' → logprob: -20.504077911376953
    8. '(all' → logprob: -20.629077911376953
    9. '.all' → logprob: -20.879077911376953
    10. ''all' → logprob: -21.004077911376953

Token 449: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.088346359931165e-07
    2. 'works' → logprob: -14.250000953674316
    3. '_work' → logprob: -16.5
    4. 'Works' → logprob: -16.5
    5. '\' → logprob: -18.25
    6. ' works' → logprob: -19.125
    7. '_
' → logprob: -19.375
    8. ' _' → logprob: -19.75
    9. '[' → logprob: -19.875
    10. '```' → logprob: -20.0

Token 450: 'works' (ID: 23042)
  Prédit: 'works'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'works' → logprob: -6.0629870858974755e-05
    2. '_' → logprob: -9.75006103515625
    3. 'Works' → logprob: -13.75006103515625
    4. 'orks' → logprob: -14.50006103515625
    5. ' works' → logprob: -15.50006103515625
    6. '_work' → logprob: -15.87506103515625
    7. 'work' → logprob: -15.87506103515625
    8. '
' → logprob: -17.50006103515625
    9. 'all' → logprob: -17.75006103515625
    10. 'wers' → logprob: -18.25006103515625

Token 451: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.723973582556937e-05
    2. 'p' → logprob: -11.125017166137695
    3. '.' → logprob: -13.125017166137695
    4. '   ' → logprob: -15.375017166137695
    5. ' p' → logprob: -16.750017166137695
    6. '```' → logprob: -17.000017166137695
    7. ' .' → logprob: -18.000017166137695
    8. '
' → logprob: -18.250017166137695
    9. '.pop' → logprob: -18.250017166137695
    10. '[' → logprob: -18.625017166137695

Token 452: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0004870378761552274
    2. 'op' → logprob: -8.000487327575684
    3. 'ople' → logprob: -8.875487327575684
    4. 'opl' → logprob: -11.375487327575684
    5. 'oplevel' → logprob: -16.125486373901367
    6. 'opf' → logprob: -16.375486373901367
    7. 'opy' → logprob: -17.000486373901367
    8. 'opped' → logprob: -17.250486373901367
    9. 'opup' → logprob: -17.750486373901367
    10. 'oppable' → logprob: -18.375486373901367

Token 453: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005417319480329752
    2. '
' → logprob: -5.505417346954346
    3. '()
' → logprob: -7.005417346954346
    4. '()' → logprob: -8.755416870117188
    5. '[' → logprob: -8.880416870117188
    6. ',' → logprob: -10.505416870117188
    7. '(' → logprob: -10.505416870117188
    8. '            
' → logprob: -10.755416870117188
    9. ')
' → logprob: -11.130416870117188
    10. '(p' → logprob: -11.255416870117188

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003991254139691591
    2. '
' → logprob: -6.12899112701416
    3. ' pq' → logprob: -8.12899112701416
    4. '       ' → logprob: -8.25399112701416
    5. '            
' → logprob: -8.25399112701416
    6. '(p' → logprob: -8.37899112701416
    7. ',p' → logprob: -8.62899112701416
    8. 'pq' → logprob: -9.00399112701416
    9. ' 
' → logprob: -9.25399112701416
    10. ',' → logprob: -9.50399112701416

Token 455: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' (adapté à ' pq') → logprob: -0.5797579884529114
    2. ' pq' → logprob: -0.8297579884529114
    3. '           ' → logprob: -5.579758167266846
    4. '   ' → logprob: -10.829757690429688
    5. '       ' → logprob: -12.079757690429688
    6. 'p' → logprob: -12.704757690429688
    7. '[p' → logprob: -13.329757690429688
    8. '               ' → logprob: -13.454757690429688
    9. ' ' → logprob: -13.704757690429688
    10. '	p' → logprob: -13.829757690429688

Token 456: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00033581978641450405
    2. '.' → logprob: -8.000335693359375
    3. ' .' → logprob: -15.000335693359375
    4. '.enqueue' → logprob: -16.625335693359375
    5. '.Add' → logprob: -18.000335693359375
    6. '.put' → logprob: -18.375335693359375
    7. ').' → logprob: -18.375335693359375
    8. 'add' → logprob: -18.500335693359375
    9. '   ' → logprob: -18.750335693359375
    10. '.push' → logprob: -18.875335693359375

Token 457: '(work' (ID: 61786)
  Prédit: '(work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(work' → logprob: -0.008654872886836529
    2. '((' → logprob: -4.758655071258545
    3. '(' → logprob: -10.633654594421387
    4. 'work' → logprob: -11.133654594421387
    5. ' (' → logprob: -13.758654594421387
    6. ' work' → logprob: -15.758654594421387
    7. '(worker' → logprob: -16.008655548095703
    8. '	work' → logprob: -16.133655548095703
    9. '(w' → logprob: -16.883655548095703
    10. ' ((' → logprob: -17.383655548095703

Token 458: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005041812546551228
    2. ')
' → logprob: -7.625504016876221
    3. ' )' → logprob: -11.375504493713379
    4. '       ' → logprob: -12.750504493713379
    5. ')
' → logprob: -15.000504493713379
    6. '           ' → logprob: -15.000504493713379
    7. ')

' → logprob: -15.250504493713379
    8. '   ' → logprob: -15.375504493713379
    9. '[' → logprob: -16.000503540039062
    10. '))' → logprob: -16.250503540039062

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020840585231781006
    2. '
' → logprob: -4.270840644836426
    3. '        
' → logprob: -6.020840644836426
    4. '   ' → logprob: -6.395840644836426
    5. '<|end|>' → logprob: -6.770840644836426
    6. ' if' → logprob: -7.645840644836426
    7. '  
' → logprob: -8.145840644836426
    8. ' 
' → logprob: -8.520840644836426
    9. '    
' → logprob: -9.145840644836426
    10. ' while' → logprob: -9.645840644836426

Token 460: ' if' (ID: 538)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1777680516242981
    2. 'while' → logprob: -2.5527679920196533
    3. '       ' → logprob: -2.8027679920196533
    4. ' if' → logprob: -3.8027679920196533
    5. 'if' (adapté à ' if') → logprob: -6.427768230438232
    6. '        
' → logprob: -8.927767753601074
    7. '   ' → logprob: -9.552767753601074
    8. ' 
' → logprob: -9.677767753601074
    9. '	while' → logprob: -10.052767753601074
    10. ' ' → logprob: -10.427767753601074

Token 461: ' pq' (ID: 65424)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.4740961492061615
    2. ' pq' → logprob: -0.9740961790084839
    3. 'p' → logprob: -11.599096298217773
    4. ' not' → logprob: -12.599096298217773
    5. '   ' → logprob: -12.724096298217773
    6. 'not' → logprob: -12.849096298217773
    7. ' ' → logprob: -14.599096298217773
    8. '	p' → logprob: -15.849096298217773
    9. 'q' → logprob: -16.849096298217773
    10. '    ' → logprob: -16.974096298217773

Token 462: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.002898666774854064
    2. '.' → logprob: -5.877898693084717
    3. '.top' → logprob: -9.877898216247559
    4. ' .' → logprob: -11.127898216247559
    5. '>.' → logprob: -12.002898216247559
    6. ').' → logprob: -12.377898216247559
    7. '.has' → logprob: -13.127898216247559
    8. '   ' → logprob: -13.252898216247559
    9. '.pop' → logprob: -13.252898216247559
    10. '].' → logprob: -13.377898216247559

Token 463: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2014366239309311
    2. '()>' → logprob: -1.7014366388320923
    3. '()==' → logprob: -11.326436996459961
    4. '()!=' → logprob: -12.326436996459961
    5. '()<' → logprob: -12.576436996459961
    6. '()">' → logprob: -13.826436996459961
    7. '())' → logprob: -14.076436996459961
    8. ' ()' → logprob: -14.576436996459961
    9. '>' → logprob: -15.326436996459961
    10. '>()' → logprob: -15.576436996459961

Token 464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08247029036283493
    2. '       ' → logprob: -2.832470178604126
    3. ':
' → logprob: -5.082470417022705
    4. ' work' → logprob: -5.832470417022705
    5. ' ans' → logprob: -6.582470417022705
    6. ',' → logprob: -6.707470417022705
    7. '):
' → logprob: -6.707470417022705
    8. '
' → logprob: -6.832470417022705
    9. ':' → logprob: -6.832470417022705
    10. ')' → logprob: -6.957470417022705

Token 465: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' (adapté à ' work') → logprob: -1.109250545501709
    2. 'ans' → logprob: -1.859250545501709
    3. ' ans' → logprob: -1.859250545501709
    4. ' work' → logprob: -2.484250545501709
    5. '           ' → logprob: -2.859250545501709
    6. '_,' → logprob: -3.109250545501709
    7. 'w' → logprob: -3.609250545501709
    8. ' data' → logprob: -3.734250545501709
    9. ' w' → logprob: -3.859250545501709
    10. 'data' → logprob: -3.859250545501709

Token 466: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08961182087659836
    2. '=' → logprob: -2.464611768722534
    3. ',' → logprob: -7.339612007141113
    4. ' ,' → logprob: -11.339612007141113
    5. ' ' → logprob: -13.339612007141113
    6. 'data' → logprob: -13.464612007141113
    7. ',p' → logprob: -13.714612007141113
    8. '=p' → logprob: -13.714612007141113
    9. ' =
' → logprob: -13.964612007141113
    10. ')' → logprob: -14.089612007141113

Token 467: ' pq' (ID: 65424)
  Prédit: ' pq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pq' → logprob: -0.1269282102584839
    2. 'pq' → logprob: -2.1269283294677734
    3. 'p' → logprob: -16.001928329467773
    4. 'q' → logprob: -19.876928329467773
    5. 'PQ' → logprob: -19.876928329467773
    6. '           ' → logprob: -20.126928329467773
    7. ' p' → logprob: -20.376928329467773
    8. ' ' → logprob: -20.626928329467773
    9. '	p' → logprob: -20.876928329467773
    10. ' pv' → logprob: -21.501928329467773

Token 468: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0002043748099822551
    2. '.top' → logprob: -8.500204086303711
    3. '.' → logprob: -14.375204086303711
    4. 'pop' → logprob: -15.375204086303711
    5. '	pop' → logprob: -17.62520408630371
    6. '.p' → logprob: -18.75020408630371
    7. '.Pop' → logprob: -19.25020408630371
    8. ' .' → logprob: -19.25020408630371
    9. '.poll' → logprob: -20.00020408630371
    10. '.popup' → logprob: -20.00020408630371

Token 469: '_top' (ID: 23394)
  Prédit: '_top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_top' → logprob: 0.0
    2. 'top' → logprob: -18.0
    3. '_' → logprob: -19.125
    4. '_TOP' → logprob: -19.875
    5. ')_' → logprob: -20.0
    6. ' _' → logprob: -20.25
    7. '_to' → logprob: -20.375
    8. ' top' → logprob: -20.5
    9. '_t' → logprob: -21.125
    10. '[top' → logprob: -21.125

Token 470: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4384476840496063
    2. '[' → logprob: -1.5634477138519287
    3. '
' → logprob: -1.9384477138519287
    4. '            
' → logprob: -7.06344747543335
    5. '  
' → logprob: -8.938447952270508
    6. '    
' → logprob: -9.438447952270508
    7. ')[' → logprob: -9.438447952270508
    8. ' 
' → logprob: -9.563447952270508
    9. '       ' → logprob: -9.938447952270508
    10. '
' → logprob: -10.063447952270508

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012742811813950539
    2. '       ' → logprob: -6.751274108886719
    3. '
' → logprob: -10.001274108886719
    4. '   ' → logprob: -10.251274108886719
    5. '```' → logprob: -12.376274108886719
    6. '            
' → logprob: -12.501274108886719
    7. '               ' → logprob: -12.876274108886719
    8. '<|end|>' → logprob: -13.001274108886719
    9. '        
' → logprob: -13.126274108886719
    10. '[' → logprob: -13.251274108886719

Token 472: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.47594866156578064
    2. 'ans' (adapté à ' ans') → logprob: -0.975948691368103
    3. '           ' → logprob: -6.475948810577393
    4. '	ans' → logprob: -9.225948333740234
    5. '   ' → logprob: -9.350948333740234
    6. '       ' → logprob: -9.475948333740234
    7. '
' → logprob: -10.225948333740234
    8. 'answer' → logprob: -11.100948333740234
    9. '(ans' → logprob: -11.850948333740234
    10. '_ans' → logprob: -12.225948333740234

Token 473: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01418207585811615
    2. '+=' → logprob: -4.264182090759277
    3. '+' → logprob: -11.389182090759277
    4. ']+=' → logprob: -12.264182090759277
    5. ' +' → logprob: -13.389182090759277
    6. '[' → logprob: -15.764182090759277
    7. '+='' → logprob: -16.01418113708496
    8. '<|end|>' → logprob: -16.01418113708496
    9. '            ' → logprob: -16.26418113708496
    10. '```' → logprob: -16.51418113708496

Token 474: ' work' (ID: 1101)
  Prédit: ' work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' work' → logprob: -0.20141500234603882
    2. 'work' → logprob: -1.7014150619506836
    3. '	work' → logprob: -14.076415061950684
    4. '1' → logprob: -14.201415061950684
    5. ' ' → logprob: -16.201414108276367
    6. '(work' → logprob: -16.576414108276367
    7. 'int' → logprob: -18.326414108276367
    8. '.work' → logprob: -18.326414108276367
    9. '10' → logprob: -18.576414108276367
    10. '0' → logprob: -18.576414108276367

Token 475: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013846253568772227
    2. '```' → logprob: -10.000138282775879
    3. '0' → logprob: -10.250138282775879
    4. '][' → logprob: -10.750138282775879
    5. '
' → logprob: -11.500138282775879
    6. ' [' → logprob: -12.000138282775879
    7. '1' → logprob: -12.625138282775879
    8. '\[' → logprob: -12.875138282775879
    9. ')[' → logprob: -13.000138282775879
    10. '>[' → logprob: -13.250138282775879

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '0' → logprob: -13.62500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '
' → logprob: -14.50000286102295
    5. '   ' → logprob: -15.12500286102295
    6. '```' → logprob: -16.625003814697266
    7. '[' → logprob: -16.875003814697266
    8. '

' → logprob: -17.250003814697266
    9. '' → logprob: -18.500003814697266
    10. '  ' → logprob: -18.625003814697266

Token 477: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21311421692371368
    2. '<|end|>' → logprob: -1.7131142616271973
    3. '
' → logprob: -4.713114261627197
    4. '<|end|>' → logprob: -6.963114261627197
    5. ')
' → logprob: -7.213114261627197
    6. ']' → logprob: -7.713114261627197
    7. ' )' → logprob: -9.088113784790039
    8. ')return' → logprob: -9.213113784790039
    9. '       ' → logprob: -9.588113784790039
    10. ' 
' → logprob: -9.588113784790039

Token 478: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.32193315029144287
    2. '
' → logprob: -1.9469331502914429
    3. '   ' → logprob: -2.9469332695007324
    4. '  
' → logprob: -3.8219332695007324
    5. '    
' → logprob: -4.071933269500732
    6. ' ' → logprob: -4.321933269500732
    7. '\n' → logprob: -4.696933269500732
    8. '<|end|>' → logprob: -4.946933269500732
    9. ' return' → logprob: -5.071933269500732
    10. '   
' → logprob: -6.696933269500732

Token 479: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005485610105097294
    2. 'return' (adapté à ' return') → logprob: -5.880485534667969
    3. '	return' → logprob: -6.880485534667969
    4. '
' → logprob: -7.005485534667969
    5. ' return' → logprob: -7.630485534667969
    6. '<|end|>' → logprob: -8.380485534667969
    7. '    
' → logprob: -11.505485534667969
    8. '       ' → logprob: -11.630485534667969
    9. '```' → logprob: -13.005485534667969
    10. ' ' → logprob: -13.630485534667969

Token 480: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1269388198852539
    2. 'ans' → logprob: -2.126938819885254
    3. '(ans' → logprob: -11.501938819885254
    4. '	ans' → logprob: -14.501938819885254
    5. '_ans' → logprob: -16.626937866210938
    6. 'answer' → logprob: -19.251937866210938
    7. ' ' → logprob: -19.376937866210938
    8. 'anst' → logprob: -19.751937866210938
    9. ' ' → logprob: -20.376937866210938
    10. 'Ans' → logprob: -20.376937866210938

Token 481: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 483: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0015814013313502073
    2. '__' → logprob: -6.501581192016602
    3. '_' → logprob: -10.501581192016602
    4. ' ' → logprob: -10.626581192016602
    5. ' ' → logprob: -11.126581192016602
    6. ' _' → logprob: -11.751581192016602
    7. '_name' → logprob: -13.126581192016602
    8. ' ' → logprob: -14.751581192016602
    9. '﻿' → logprob: -15.251581192016602
    10. '  ' → logprob: -15.376581192016602

Token 484: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.036518946290016174
    2. ' __' → logprob: -3.5365190505981445
    3. ' ==' → logprob: -5.0365190505981445
    4. '==' → logprob: -9.286519050598145
    5. '_' → logprob: -10.036519050598145
    6. 'name' → logprob: -10.161519050598145
    7. '__
' → logprob: -11.036519050598145
    8. '__":
' → logprob: -11.411519050598145
    9. '__':
' → logprob: -11.911519050598145
    10. '=="' → logprob: -12.411519050598145

Token 485: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.451116051815916e-05
    2. '==' → logprob: -10.750024795532227
    3. ' ==' → logprob: -13.375024795532227
    4. '__.__' → logprob: -14.875024795532227
    5. '__
' → logprob: -15.000024795532227
    6. '=="' → logprob: -15.625024795532227
    7. '____' → logprob: -15.625024795532227
    8. '___' → logprob: -15.750024795532227
    9. '__":
' → logprob: -16.500024795532227
    10. '__["' → logprob: -16.750024795532227

Token 486: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07736846059560776
    2. ' ==' → logprob: -2.7023684978485107
    3. '==' → logprob: -4.952368259429932
    4. '=="' → logprob: -8.45236873626709
    5. '_' → logprob: -9.57736873626709
    6. ' __' → logprob: -11.45236873626709
    7. '___' → logprob: -11.57736873626709
    8. '__.__' → logprob: -11.82736873626709
    9. '__":
' → logprob: -12.32736873626709
    10. '=='' → logprob: -12.70236873626709

Token 487: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0232953242957592
    2. ''' → logprob: -3.7732954025268555
    3. ' "__' → logprob: -10.523295402526855
    4. '__' → logprob: -10.773295402526855
    5. ' '__' → logprob: -14.148295402526855
    6. ''"' → logprob: -15.148295402526855
    7. '"name' → logprob: -15.773295402526855
    8. '   ' → logprob: -15.898295402526855
    9. '"class' → logprob: -15.898295402526855
    10. '"user' → logprob: -16.14829444885254

Token 488: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007206532754935324
    2. 'name' → logprob: -7.250720500946045
    3. 'py' → logprob: -12.000720977783203
    4. 'm' → logprob: -12.875720977783203
    5. '__' → logprob: -14.250720977783203
    6. '_main' → logprob: -14.625720977783203
    7. 'if' → logprob: -15.250720977783203
    8. ' main' → logprob: -15.625720977783203
    9. 'python' → logprob: -15.625720977783203
    10. '__':
' → logprob: -16.250720977783203

Token 489: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.328757107257843
    2. ':' → logprob: -1.7037570476531982
    3. ':
' → logprob: -3.0787570476531982
    4. '':' → logprob: -3.7037570476531982
    5. '():
' → logprob: -4.828757286071777
    6. '__":
' → logprob: -5.078757286071777
    7. '__' → logprob: -5.578757286071777
    8. '':
' → logprob: -5.703757286071777
    9. '<|end|>' → logprob: -6.453757286071777
    10. '__:' → logprob: -7.078757286071777

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1851733922958374
    2. '    
' → logprob: -2.310173511505127
    3. '<|end|>' → logprob: -3.185173511505127
    4. 'import' → logprob: -4.310173511505127
    5. '```' → logprob: -5.185173511505127
    6. '(n' → logprob: -6.810173511505127
    7. 'n' → logprob: -7.060173511505127
    8. 'input' → logprob: -7.185173511505127
    9. ' import' → logprob: -7.435173511505127
    10. '<|end|>' → logprob: -7.435173511505127

Token 491: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3942742943763733
    2. ' import' → logprob: -1.6442742347717285
    3. 'import' → logprob: -2.5192742347717285
    4. 'n' → logprob: -3.5192742347717285
    5. ' N' → logprob: -3.8942742347717285
    6. 'N' (adapté à ' N') → logprob: -6.8942742347717285
    7. ' input' → logprob: -7.1442742347717285
    8. '   ' → logprob: -8.394274711608887
    9. 'input' → logprob: -9.394274711608887
    10. ' line' → logprob: -11.019274711608887

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031770815257914364
    2. ' ,' → logprob: -8.625317573547363
    3. '=' → logprob: -9.625317573547363
    4. ' =' → logprob: -9.750317573547363
    5. ',input' → logprob: -12.750317573547363
    6. ',N' → logprob: -13.000317573547363
    7. '<|end|>' → logprob: -14.000317573547363
    8. ',n' → logprob: -14.000317573547363
    9. ',M' → logprob: -14.125317573547363
    10. ',int' → logprob: -14.125317573547363

Token 493: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.06198471784591675
    2. 'M' → logprob: -2.8119847774505615
    3. ' ' → logprob: -11.18698501586914
    4. '    ' → logprob: -13.43698501586914
    5. '  ' → logprob: -14.18698501586914
    6. ' =' → logprob: -15.18698501586914
    7. '   ' → logprob: -15.56198501586914
    8. '<|end|>' → logprob: -15.93698501586914
    9. '=' → logprob: -16.06198501586914
    10. ' 
' → logprob: -16.18698501586914

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10045047104358673
    2. ' =' → logprob: -2.3504505157470703
    3. ',' → logprob: -8.72545051574707
    4. '=input' → logprob: -9.47545051574707
    5. '<|end|>' → logprob: -13.10045051574707
    6. '=int' → logprob: -13.60045051574707
    7. 'input' → logprob: -15.35045051574707
    8. '=
' → logprob: -15.60045051574707
    9. '=list' → logprob: -15.85045051574707
    10. '=

' → logprob: -16.35045051574707

Token 495: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004078401252627373
    2. 'map' → logprob: -5.504078388214111
    3. '	map' → logprob: -19.129077911376953
    4. ' list' → logprob: -19.379077911376953
    5. ' mapa' → logprob: -20.379077911376953
    6. '(map' → logprob: -20.754077911376953
    7. '[' → logprob: -21.004077911376953
    8. ' [' → logprob: -21.754077911376953
    9. '_map' → logprob: -21.879077911376953
    10. '   ' → logprob: -22.379077911376953

Token 496: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007673407671973109
    2. '(' → logprob: -8.000767707824707
    3. 'int' → logprob: -8.125767707824707
    4. '(input' → logprob: -9.125767707824707
    5. 'input' → logprob: -11.250767707824707
    6. '(str' → logprob: -11.500767707824707
    7. '<int' → logprob: -14.125767707824707
    8. 'list' → logprob: -14.375767707824707
    9. '(
' → logprob: -14.375767707824707
    10. '(list' → logprob: -14.750767707824707

Token 497: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8747674822807312
    2. ',input' → logprob: -0.8747674822807312
    3. ',' → logprob: -1.874767541885376
    4. '(input' → logprob: -5.374767303466797
    5. '=input' → logprob: -5.624767303466797
    6. '(),' → logprob: -6.249767303466797
    7. ' input' → logprob: -6.749767303466797
    8. '(' → logprob: -7.999767303466797
    9. '[input' → logprob: -8.499767303466797
    10. '<input' → logprob: -8.749767303466797

Token 498: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004078401252627373
    2. ' input' → logprob: -5.504078388214111
    3. 'open' → logprob: -18.629077911376953
    4. ' ' → logprob: -19.254077911376953
    5. '   ' → logprob: -19.754077911376953
    6. '=input' → logprob: -20.129077911376953
    7. '(input' → logprob: -20.754077911376953
    8. '	input' → logprob: -21.129077911376953
    9. '<input' → logprob: -21.629077911376953
    10. ',input' → logprob: -21.629077911376953

Token 499: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.534558552724775e-05
    2. '()' → logprob: -10.625025749206543
    3. '())' → logprob: -14.250025749206543
    4. '()[' → logprob: -16.000024795532227
    5. ' ().' → logprob: -16.125024795532227
    6. '(' → logprob: -16.750024795532227
    7. '()
' → logprob: -17.250024795532227
    8. '().__' → logprob: -18.250024795532227
    9. '()>' → logprob: -18.500024795532227
    10. '()<' → logprob: -18.875024795532227

Token 500: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3425219549390022e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -15.25001335144043
    4. '(split' → logprob: -17.00001335144043
    5. 'rstrip' → logprob: -17.75001335144043
    6. 'spl' → logprob: -19.25001335144043
    7. '().' → logprob: -19.62501335144043
    8. '.split' → logprob: -19.87501335144043
    9. '_split' → logprob: -21.12501335144043
    10. '```' → logprob: -21.62501335144043

Token 501: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02509172260761261
    2. ')' → logprob: -4.025091648101807
    3. '()' → logprob: -5.025091648101807
    4. '().' → logprob: -8.150092124938965
    5. '(' → logprob: -10.650092124938965
    6. '())
' → logprob: -10.775092124938965
    7. '(),' → logprob: -11.775092124938965
    8. '')' → logprob: -13.900092124938965
    9. ' ())' → logprob: -14.025092124938965
    10. '()
' → logprob: -14.025092124938965

Token 502: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005953925661742687
    2. '   ' → logprob: -5.130953788757324
    3. ' A' → logprob: -11.005953788757324
    4. '
' → logprob: -12.505953788757324
    5. '    
' → logprob: -13.130953788757324
    6. '	A' → logprob: -13.880953788757324
    7. '```' → logprob: -14.380953788757324
    8. 'a' → logprob: -15.005953788757324
    9. '<|end|>' → logprob: -15.255953788757324
    10. '  ' → logprob: -15.380953788757324

Token 503: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -2.339278580620885e-06
    2. '   ' → logprob: -13.750001907348633
    3. 'a' → logprob: -14.000001907348633
    4. ' A' → logprob: -15.000001907348633
    5. '    
' → logprob: -17.375001907348633
    6. '*A' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. '>A' → logprob: -18.375001907348633
    9. '_A' → logprob: -18.500001907348633
    10. '	A' → logprob: -18.875001907348633

Token 504: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036382899270392954
    2. '=' → logprob: -8.000364303588867
    3. ' ,' → logprob: -11.625364303588867
    4. ' =' → logprob: -11.875364303588867
    5. ',B' → logprob: -13.125364303588867
    6. '<|end|>' → logprob: -13.125364303588867
    7. ',N' → logprob: -13.875364303588867
    8. '[' → logprob: -13.875364303588867
    9. '_,' → logprob: -14.000364303588867
    10. ',M' → logprob: -14.000364303588867

Token 505: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.48697641491889954
    2. 'list' → logprob: -1.2369763851165771
    3. '[' → logprob: -2.986976385116577
    4. '[list' → logprob: -3.236976385116577
    5. '[]
' → logprob: -5.361976623535156
    6. ' list' → logprob: -7.611976623535156
    7. ' []' → logprob: -9.236976623535156
    8. '[int' → logprob: -9.986976623535156
    9. '[input' → logprob: -10.361976623535156
    10. '[i' → logprob: -10.486976623535156

Token 506: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00015097891446202993
    2. '0' → logprob: -10.000150680541992
    3. ']int' → logprob: -10.000150680541992
    4. '*' → logprob: -10.500150680541992
    5. ']' → logprob: -10.750150680541992
    6. ']*' → logprob: -12.625150680541992
    7. ' int' → logprob: -12.750150680541992
    8. '
' → logprob: -12.875150680541992
    9. '(int' → logprob: -13.750150680541992
    10. '

' → logprob: -14.750150680541992

Token 507: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2278614640235901
    2. ' for' → logprob: -2.1028614044189453
    3. 'for' → logprob: -2.9778614044189453
    4. ']*' → logprob: -4.352861404418945
    5. '()' → logprob: -4.977861404418945
    6. ',' → logprob: -4.977861404418945
    7. '()]' → logprob: -6.227861404418945
    8. ']*(' → logprob: -7.102861404418945
    9. ' ]' → logprob: -7.227861404418945
    10. '   ' → logprob: -8.977861404418945

Token 508: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0015473365783691
    2. '()' → logprob: -1.2515473365783691
    3. 'for' → logprob: -1.8765473365783691
    4. ' for' → logprob: -2.001547336578369
    5. ']*' → logprob: -3.126547336578369
    6. '()]' → logprob: -5.251547336578369
    7. ',' → logprob: -5.626547336578369
    8. '*' → logprob: -6.626547336578369
    9. ']*(' → logprob: -6.751547336578369
    10. '()*' → logprob: -7.751547336578369

Token 509: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.236549335066229e-05
    2. ' N' → logprob: -10.750021934509277
    3. '(N' → logprob: -14.000021934509277
    4. '(' → logprob: -18.250022888183594
    5. ' (' → logprob: -18.375022888183594
    6. '	N' → logprob: -19.750022888183594
    7. ' ' → logprob: -21.125022888183594
    8. 'M' → logprob: -21.375022888183594
    9. '   ' → logprob: -21.625022888183594
    10. '[N' → logprob: -21.875022888183594

Token 510: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07061459869146347
    2. '   ' → logprob: -3.0706145763397217
    3. '<|end|>' → logprob: -4.320614814758301
    4. 'B' → logprob: -5.820614814758301
    5. '    
' → logprob: -6.070614814758301
    6. ' B' → logprob: -7.070614814758301
    7. '
' → logprob: -7.570614814758301
    8. '  
' → logprob: -7.820614814758301
    9. 'A' → logprob: -8.3206148147583
    10. '	B' → logprob: -8.4456148147583

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015194186009466648
    2. 'B' → logprob: -4.640194416046143
    3. ' for' → logprob: -6.015194416046143
    4. ' B' → logprob: -6.265194416046143
    5. '	B' → logprob: -8.015193939208984
    6. 'for' → logprob: -8.390193939208984
    7. '
' → logprob: -8.515193939208984
    8. '    
' → logprob: -9.015193939208984
    9. '  ' → logprob: -9.640193939208984
    10. '<|end|>' → logprob: -10.015193939208984

Token 512: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.05084889382123947
    2. ' B' → logprob: -3.050848960876465
    3. 'for' → logprob: -6.675848960876465
    4. ' for' → logprob: -6.925848960876465
    5. 'b' → logprob: -11.675848960876465
    6. ' ' → logprob: -12.925848960876465
    7. 'M' → logprob: -12.925848960876465
    8. '	B' → logprob: -13.550848960876465
    9. '[' → logprob: -15.050848960876465
    10. '   ' → logprob: -15.175848960876465

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014143168926239
    2. '=' → logprob: -1.7014143466949463
    3. ' ' → logprob: -14.326414108276367
    4. '[' → logprob: -14.951414108276367
    5. ' =[' → logprob: -16.576414108276367
    6. '   ' → logprob: -17.076414108276367
    7. ',' → logprob: -17.451414108276367
    8. '<|end|>' → logprob: -17.701414108276367
    9. ']' → logprob: -17.951414108276367
    10. ' =
' → logprob: -18.076414108276367

Token 514: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519305646419525
    2. ' [' → logprob: -1.501930594444275
    3. '[int' → logprob: -14.126930236816406
    4. '[i' → logprob: -14.876930236816406
    5. '[input' → logprob: -15.626930236816406
    6. '[N' → logprob: -16.126930236816406
    7. '[]' → logprob: -16.751930236816406
    8. ' ' → logprob: -17.001930236816406
    9. '[len' → logprob: -17.251930236816406
    10. '[n' → logprob: -17.626930236816406

Token 515: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.750004768371582
    3. 'N' → logprob: -13.000004768371582
    4. '   ' → logprob: -17.6250057220459
    5. ' N' → logprob: -18.1250057220459
    6. '```' → logprob: -20.2500057220459
    7. '  ' → logprob: -20.5000057220459
    8. ']' → logprob: -20.8750057220459
    9. '۰' → logprob: -21.0000057220459
    10. '
' → logprob: -21.0000057220459

Token 516: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13722078502178192
    2. 'N' → logprob: -2.762220859527588
    3. ' N' → logprob: -3.387220859527588
    4. '(N' → logprob: -4.387220859527588
    5. ')' → logprob: -4.637220859527588
    6. '   ' → logprob: -5.637220859527588
    7. ' ' → logprob: -6.637220859527588
    8. ' ]' → logprob: -7.012220859527588
    9. '<|end|>' → logprob: -7.137220859527588
    10. '	N' → logprob: -7.262220859527588

Token 517: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.6554726362228394
    2. ' N' → logprob: -1.7804726362228394
    3. '	N' → logprob: -2.030472755432129
    4. '   ' → logprob: -2.030472755432129
    5. '
' → logprob: -2.280472755432129
    6. ' ' → logprob: -2.780472755432129
    7. 'for' → logprob: -3.155472755432129
    8. 'N' → logprob: -3.280472755432129
    9. '[N' → logprob: -3.530472755432129
    10. ' 
' → logprob: -3.905472755432129

Token 518: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00033546582562848926
    2. ' N' → logprob: -8.000335693359375
    3. '(N' → logprob: -21.500335693359375
    4. ' ' → logprob: -22.000335693359375
    5. '   ' → logprob: -22.000335693359375
    6. '
' → logprob: -23.500335693359375
    7. '(' → logprob: -23.500335693359375
    8. 'n' → logprob: -23.625335693359375
    9. '	N' → logprob: -25.000335693359375
    10. ' (' → logprob: -25.250335693359375

Token 519: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33138328790664673
    2. 'for' → logprob: -1.456383228302002
    3. ' for' → logprob: -3.081383228302002
    4. '   ' → logprob: -6.581383228302002
    5. '<|end|>' → logprob: -6.581383228302002
    6. '    
' → logprob: -8.95638370513916
    7. ' 
' → logprob: -9.83138370513916
    8. '	for' → logprob: -9.95638370513916
    9. '  
' → logprob: -10.20638370513916
    10. '
' → logprob: -11.08138370513916

Token 520: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03864976391196251
    2. ' for' → logprob: -3.288649797439575
    3. '
' → logprob: -7.663649559020996
    4. '   ' → logprob: -9.913649559020996
    5. '	for' → logprob: -9.913649559020996
    6. '<|end|>' → logprob: -10.663649559020996
    7. ' 
' → logprob: -11.788649559020996
    8. '    
' → logprob: -12.413649559020996
    9. '```' → logprob: -13.038649559020996
    10. '  
' → logprob: -14.163649559020996

Token 521: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011054662987589836
    2. ' for' → logprob: -4.511054515838623
    3. '
' → logprob: -12.011054992675781
    4. '   ' → logprob: -14.761054992675781
    5. '    
' → logprob: -16.13605499267578
    6. '	for' → logprob: -16.26105499267578
    7. ' 
' → logprob: -17.01105499267578
    8. '<|end|>' → logprob: -17.63605499267578
    9. '```' → logprob: -17.88605499267578
    10. 'For' → logprob: -19.88605499267578

Token 522: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011048054322600365
    2. ' i' → logprob: -4.511047840118408
    3. '	i' → logprob: -15.511048316955566
    4. '_i' → logprob: -17.38604736328125
    5. ' ' → logprob: -17.76104736328125
    6. '_' → logprob: -18.76104736328125
    7. 'I' → logprob: -19.88604736328125
    8. '   ' → logprob: -21.13604736328125
    9. '  ' → logprob: -22.26104736328125
    10. '
' → logprob: -22.51104736328125

Token 523: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008716450072824955
    2. 'in' → logprob: -4.758716583251953
    3. ' ' → logprob: -10.258716583251953
    4. '_' → logprob: -10.633716583251953
    5. ',' → logprob: -10.883716583251953
    6. ' i' → logprob: -11.133716583251953
    7. 'range' → logprob: -13.008716583251953
    8. '	in' → logprob: -13.133716583251953
    9. ' _' → logprob: -14.008716583251953
    10. ' ,' → logprob: -14.008716583251953

Token 524: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. 'in' → logprob: -18.001928329467773
    4. ' ' → logprob: -20.001928329467773
    5. '(range' → logprob: -20.501928329467773
    6. ' in' → logprob: -20.751928329467773
    7. '	range' → logprob: -20.751928329467773
    8. '0' → logprob: -21.376928329467773
    9. 'rang' → logprob: -21.751928329467773
    10. '_range' → logprob: -22.626928329467773

Token 525: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0029883980751037598
    2. 'N' → logprob: -6.002988338470459
    3. '(' → logprob: -7.627988338470459
    4. ' N' → logprob: -10.752988815307617
    5. '0' → logprob: -13.127988815307617
    6. '	N' → logprob: -13.877988815307617
    7. '(n' → logprob: -13.877988815307617
    8. ' (' → logprob: -14.877988815307617
    9. '(
' → logprob: -15.627988815307617
    10. '   ' → logprob: -16.377988815307617

Token 526: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17682313919067383
    2. '):
' → logprob: -1.9268231391906738
    3. ':' → logprob: -4.176823139190674
    4. ',' → logprob: -8.176822662353516
    5. ':
' → logprob: -8.176822662353516
    6. ')' → logprob: -8.426822662353516
    7. '   ' → logprob: -8.801822662353516
    8. ']:' → logprob: -9.676822662353516
    9. '():
' → logprob: -9.926822662353516
    10. '():' → logprob: -11.051822662353516

Token 527: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006370370741933584
    2. '       ' → logprob: -5.131370544433594
    3. ' A' → logprob: -8.756370544433594
    4. ' input' → logprob: -9.006370544433594
    5. 'input' → logprob: -9.881370544433594
    6. ' line' → logprob: -11.006370544433594
    7. '    
' → logprob: -11.006370544433594
    8. ' inputs' → logprob: -11.631370544433594
    9. '```' → logprob: -11.881370544433594
    10. ',' → logprob: -12.006370544433594

Token 528: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3405674993991852
    2. 'A' (adapté à ' A') → logprob: -1.3405674695968628
    3. ' A' → logprob: -4.090567588806152
    4. ' a' → logprob: -4.590567588806152
    5. '   ' → logprob: -10.465567588806152
    6. 'x' → logprob: -10.715567588806152
    7. 'ai' → logprob: -13.340567588806152
    8. 'i' → logprob: -13.715567588806152
    9. '	a' → logprob: -13.840567588806152
    10. '_a' → logprob: -14.590567588806152

Token 529: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.0564331205387134e-05
    2. 'idx' → logprob: -11.87501049041748
    3. '[int' → logprob: -13.00001049041748
    4. ',' → logprob: -15.00001049041748
    5. '[' → logprob: -15.00001049041748
    6. '_idx' → logprob: -15.25001049041748
    7. '(idx' → logprob: -16.250011444091797
    8. '[input' → logprob: -16.625011444091797
    9. '[
' → logprob: -16.750011444091797
    10. '```' → logprob: -16.875011444091797

Token 530: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2946664094924927
    2. '=' → logprob: -2.044666290283203
    3. ')' → logprob: -2.669666290283203
    4. ')=' → logprob: -3.294666290283203
    5. '),' → logprob: -4.169666290283203
    6. ',input' → logprob: -6.419666290283203
    7. ' =' → logprob: -7.044666290283203
    8. ',int' → logprob: -8.169666290283203
    9. '=input' → logprob: -8.419666290283203
    10. '=int' → logprob: -8.544666290283203

Token 531: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02324547804892063
    2. ' B' → logprob: -3.7732455730438232
    3. ' ' → logprob: -19.023244857788086
    4. '  ' → logprob: -21.148244857788086
    5. '   ' → logprob: -21.398244857788086
    6. '=' → logprob: -21.773244857788086
    7. 'b' → logprob: -22.273244857788086
    8. 'int' → logprob: -22.398244857788086
    9. '=B' → logprob: -22.648244857788086
    10. '    ' → logprob: -22.773244857788086

Token 532: '[idx' (ID: 25582)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0587446354329586
    2. ' =' → logprob: -3.5587446689605713
    3. '[idx' → logprob: -3.5587446689605713
    4. 'idx' → logprob: -9.683744430541992
    5. '=input' → logprob: -11.558744430541992
    6. '[]=' → logprob: -12.183744430541992
    7. '[' → logprob: -12.308744430541992
    8. '[int' → logprob: -12.558744430541992
    9. '<|end|>' → logprob: -12.683744430541992
    10. 'input' → logprob: -12.808744430541992

Token 533: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007154233753681183
    2. ']' → logprob: -5.50715446472168
    3. ')' → logprob: -6.63215446472168
    4. ' =' → logprob: -6.75715446472168
    5. ']=' → logprob: -7.88215446472168
    6. ')=' → logprob: -8.50715446472168
    7. '=input' → logprob: -11.75715446472168
    8. '}' → logprob: -14.63215446472168
    9. '}=' → logprob: -14.63215446472168
    10. '<|end|>' → logprob: -14.63215446472168

Token 534: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.65101717156358e-05
    2. ' =' → logprob: -9.250096321105957
    3. '=input' → logprob: -15.125096321105957
    4. '=list' → logprob: -18.000097274780273
    5. '=line' → logprob: -18.125097274780273
    6. '=
' → logprob: -19.375097274780273
    7. '=parse' → logprob: -19.750097274780273
    8. '.=' → logprob: -19.875097274780273
    9. ')=' → logprob: -19.875097274780273
    10. '=int' → logprob: -19.875097274780273

Token 535: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00317783304490149
    2. ' map' → logprob: -5.753177642822266
    3. '	map' → logprob: -16.378177642822266
    4. 'm' → logprob: -19.503177642822266
    5. '(map' → logprob: -19.503177642822266
    6. '   ' → logprob: -19.503177642822266
    7. 'tuple' → logprob: -19.628177642822266
    8. ' ' → logprob: -20.128177642822266
    9. '_map' → logprob: -20.378177642822266
    10. '.map' → logprob: -20.878177642822266

Token 536: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -11.000020980834961
    3. 'int' → logprob: -12.500020980834961
    4. '(
' → logprob: -16.75002098083496
    5. '(str' → logprob: -16.75002098083496
    6. '[int' → logprob: -17.12502098083496
    7. '<int' → logprob: -17.37502098083496
    8. '=int' → logprob: -17.50002098083496
    9. '()' → logprob: -18.37502098083496
    10. ' int' → logprob: -18.37502098083496

Token 537: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.0134313106536865
    2. ',input' → logprob: -1.2634313106536865
    3. ',' → logprob: -2.1384313106536865
    4. '(input' → logprob: -2.5134313106536865
    5. ',int' → logprob: -2.8884313106536865
    6. '(' → logprob: -2.8884313106536865
    7. '()' → logprob: -4.013431549072266
    8. 'input' → logprob: -5.013431549072266
    9. '(),' → logprob: -5.138431549072266
    10. '().' → logprob: -5.888431549072266

Token 538: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033546582562848926
    2. ' input' → logprob: -8.000335693359375
    3. '_input' → logprob: -19.750335693359375
    4. '=input' → logprob: -20.250335693359375
    5. '(input' → logprob: -21.125335693359375
    6. 'Input' → logprob: -21.125335693359375
    7. 'stdin' → logprob: -21.375335693359375
    8. ' ' → logprob: -21.500335693359375
    9. ',input' → logprob: -21.500335693359375
    10. '0' → logprob: -21.875335693359375

Token 539: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01033710315823555
    2. '()' → logprob: -4.760336875915527
    3. '())' → logprob: -6.760336875915527
    4. '()>' → logprob: -8.135336875915527
    5. '()]' → logprob: -9.885336875915527
    6. '()[' → logprob: -10.010336875915527
    7. '()
' → logprob: -10.760336875915527
    8. '()`' → logprob: -10.885336875915527
    9. '()<' → logprob: -10.885336875915527
    10. '()<<' → logprob: -11.385336875915527

Token 540: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -14.750000953674316
    3. '(split' → logprob: -15.625000953674316
    4. ' split' → logprob: -15.875000953674316
    5. 'spl' → logprob: -16.625
    6. 'rstrip' → logprob: -17.875
    7. '.split' → logprob: -21.125
    8. '_split' → logprob: -22.125
    9. 'read' → logprob: -22.625
    10. 'plit' → logprob: -23.125

Token 541: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010789471678435802
    2. '()' → logprob: -5.010789394378662
    3. ')' → logprob: -5.510789394378662
    4. '())
' → logprob: -11.01078987121582
    5. '(' → logprob: -12.38578987121582
    6. ' ())' → logprob: -13.63578987121582
    7. '();)' → logprob: -15.38578987121582
    8. '()
' → logprob: -15.76078987121582
    9. '());' → logprob: -16.26078987121582
    10. ' )' → logprob: -16.88578987121582

Token 542: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8937843441963196
    2. 'print' → logprob: -1.2687842845916748
    3. '
' → logprob: -1.3937842845916748
    4. '<|end|>' → logprob: -3.768784284591675
    5. 'result' → logprob: -4.143784523010254
    6. '```' → logprob: -4.393784523010254
    7. '    
' → logprob: -5.393784523010254
    8. 'for' → logprob: -6.768784523010254
    9. 'ans' → logprob: -6.768784523010254
    10. 'total' → logprob: -7.268784523010254

Token 543: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.000000953674316
    3. 'result' → logprob: -15.250000953674316
    4. ' print' → logprob: -17.625
    5. '```' → logprob: -20.25
    6. '
' → logprob: -21.25
    7. '	print' → logprob: -21.625
    8. 'pr' → logprob: -21.875
    9. 'res' → logprob: -21.875
    10. '    
' → logprob: -22.125

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07904786616563797
    2. '=' → logprob: -2.579047918319702
    3. ' +=' → logprob: -9.079048156738281
    4. '<|end|>' → logprob: -11.329048156738281
    5. ',' → logprob: -11.829048156738281
    6. '+=' → logprob: -12.079048156738281
    7. ')' → logprob: -12.454048156738281
    8. '.' → logprob: -13.079048156738281
    9. '()' → logprob: -13.329048156738281
    10. '   ' → logprob: -13.329048156738281

Token 545: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.01416350994259119
    2. ' solve' → logprob: -4.264163494110107
    3. '.solve' → logprob: -18.264163970947266
    4. '
' → logprob: -18.264163970947266
    5. '   ' → logprob: -18.389163970947266
    6. '(s' → logprob: -20.014163970947266
    7. ' ' → logprob: -20.389163970947266
    8. '	s' → logprob: -20.639163970947266
    9. 'sol' → logprob: -20.639163970947266
    10. '```' → logprob: -20.639163970947266

Token 546: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.3557529857498594e-05
    2. '(' → logprob: -10.75002384185791
    3. ' (' → logprob: -13.25002384185791
    4. '(
' → logprob: -15.62502384185791
    5. 'N' → logprob: -17.375022888183594
    6. '(n' → logprob: -17.625022888183594
    7. '((' → logprob: -17.750022888183594
    8. '(int' → logprob: -17.875022888183594
    9. '```' → logprob: -17.875022888183594
    10. '(M' → logprob: -18.375022888183594

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018542143516242504
    2. ',M' → logprob: -8.750185012817383
    3. ' ,' → logprob: -10.625185012817383
    4. ',
' → logprob: -13.000185012817383
    5. '   ' → logprob: -15.750185012817383
    6. 'M' → logprob: -16.500185012817383
    7. '```' → logprob: -17.875185012817383
    8. '
' → logprob: -18.000185012817383
    9. ',N' → logprob: -18.500185012817383
    10. ',m' → logprob: -18.500185012817383

Token 548: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.03804183006286621
    2. ' M' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.538042068481445
    4. ' ' → logprob: -16.538042068481445
    5. '  ' → logprob: -17.913042068481445
    6. ',' → logprob: -18.038042068481445
    7. '    ' → logprob: -18.038042068481445
    8. ')' → logprob: -18.163042068481445
    9. '
' → logprob: -18.538042068481445
    10. 'm' → logprob: -18.788042068481445

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ')' → logprob: -12.750004768371582
    3. '   ' → logprob: -14.250004768371582
    4. ',A' → logprob: -14.375004768371582
    5. ' ,' → logprob: -15.500004768371582
    6. ',
' → logprob: -18.250003814697266
    7. ',N' → logprob: -18.500003814697266
    8. 'A' → logprob: -19.875003814697266
    9. ',)' → logprob: -19.875003814697266
    10. '```' → logprob: -20.375003814697266

Token 550: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00033546582562848926
    2. ' A' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.500335693359375
    4. '	A' → logprob: -21.375335693359375
    5. ' ' → logprob: -21.625335693359375
    6. '  ' → logprob: -22.625335693359375
    7. 'a' → logprob: -23.125335693359375
    8. '    ' → logprob: -23.375335693359375
    9. '```' → logprob: -23.375335693359375
    10. '
' → logprob: -23.625335693359375

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',B' → logprob: -14.375001907348633
    4. ',
' → logprob: -17.125001907348633
    5. ')' → logprob: -20.750001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '‌,' → logprob: -21.125001907348633
    8. ',

' → logprob: -21.500001907348633
    9. ',
' → logprob: -22.000001907348633
    10. '，' → logprob: -22.000001907348633

Token 552: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00861456897109747
    2. ' B' → logprob: -4.758614540100098
    3. '   ' → logprob: -19.758615493774414
    4. ' ' → logprob: -19.758615493774414
    5. '	B' → logprob: -20.633615493774414
    6. ')' → logprob: -21.508615493774414
    7. '    ' → logprob: -21.633615493774414
    8. 'b' → logprob: -22.008615493774414
    9. '  ' → logprob: -22.133615493774414
    10. '_B' → logprob: -22.508615493774414

Token 553: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008618827909231186
    2. ')' → logprob: -4.7586188316345215
    3. ')
' → logprob: -12.383618354797363
    4. ')

' → logprob: -16.75861930847168
    5. ' )
' → logprob: -17.13361930847168
    6. '   ' → logprob: -18.38361930847168
    7. ')`
' → logprob: -19.38361930847168
    8. '))
' → logprob: -20.75861930847168
    9. '())
' → logprob: -21.25861930847168
    10. '),' → logprob: -21.63361930847168

Token 554: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001319063303526491
    2. '   ' → logprob: -9.375131607055664
    3. '
' → logprob: -10.875131607055664
    4. '(print' → logprob: -11.125131607055664
    5. '```' → logprob: -12.000131607055664
    6. ' print' → logprob: -12.125131607055664
    7. '	print' → logprob: -14.000131607055664
    8. '(' → logprob: -14.875131607055664
    9. '    
' → logprob: -15.250131607055664
    10. '``' → logprob: -15.500131607055664

Token 555: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -19.25
    3. '   ' → logprob: -21.375
    4. '```' → logprob: -21.75
    5. '
' → logprob: -24.375
    6. '	print' → logprob: -24.5
    7. 'printf' → logprob: -25.0
    8. '#print' → logprob: -25.75
    9. 'pr' → logprob: -26.25
    10. '    
' → logprob: -26.375

Token 556: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.250004768371582
    3. '(answer' → logprob: -15.125004768371582
    4. ' (' → logprob: -17.6250057220459
    5. '(
' → logprob: -17.6250057220459
    6. '(abs' → logprob: -18.3750057220459
    7. '(a' → logprob: -18.3750057220459
    8. '(acc' → logprob: -18.6250057220459
    9. '(f' → logprob: -18.8750057220459
    10. '((' → logprob: -18.8750057220459

Token 557: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '()' → logprob: -12.500005722045898
    3. '())' → logprob: -13.375005722045898
    4. ')`' → logprob: -16.6250057220459
    5. ' )' → logprob: -16.8750057220459
    6. '))' → logprob: -17.3750057220459
    7. ')
' → logprob: -17.3750057220459
    8. '(' → logprob: -18.2500057220459
    9. '`)' → logprob: -19.0000057220459
    10. '')' → logprob: -19.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 555
Tokens correctement prédits (1ère position, stricte): 265
Tokens correctement prédits (1ère position, avec adaptation): 294
Tokens correctement prédits (top 10): 497
Précision stricte (1ère position): 47.75%
Précision adaptée (1ère position): 52.97%
Précision (top 10): 89.55%
================================================================================
