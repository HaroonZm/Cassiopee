================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N_K = input().split()
N = int(N_K[0])
K = int(N_K[1])

def next_mult(val, step):
    return val * step

cnt = 1
tmp = K
for _ in range(1000):
    if tmp > N:
        break
    tmp = next_mult(tmp, K)
    cnt = cnt + 1
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '_K' (ID: 20555)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36687740683555603
    2. '10' → logprob: -1.3668774366378784
    3. '100' → logprob: -3.366877317428589
    4. '64' → logprob: -5.366877555847168
    5. '32' → logprob: -5.366877555847168
    6. '256' → logprob: -5.991877555847168
    7. '16' → logprob: -6.241877555847168
    8. '128' → logprob: -6.616877555847168
    9. '20' → logprob: -7.241877555847168
    10. '50' → logprob: -7.741877555847168

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15131515264511108
    2. ''' → logprob: -3.151315212249756
    3. '_' → logprob: -3.276315212249756
    4. '.' → logprob: -3.526315212249756
    5. '[' → logprob: -4.026315212249756
    6. '"' → logprob: -4.776315212249756
    7. '```' → logprob: -7.276315212249756
    8. '(
' → logprob: -7.651315212249756
    9. 's' → logprob: -7.776315212249756
    10. ')' → logprob: -8.026314735412598

Token 5: 'split' (ID: 13627)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43246904015541077
    2. '.' → logprob: -1.4324690103530884
    3. '.strip' → logprob: -3.182469129562378
    4. '_' → logprob: -4.057468891143799
    5. '*' → logprob: -4.432468891143799
    6. ')' → logprob: -4.682468891143799
    7. '=' → logprob: -4.932468891143799
    8. ' ' → logprob: -5.307468891143799
    9. '#' → logprob: -6.182468891143799
    10. '.split' → logprob: -6.307468891143799

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017887057038024068
    2. '()' → logprob: -6.37678861618042
    3. '('' → logprob: -10.376789093017578
    4. '(
' → logprob: -11.126789093017578
    5. ''' → logprob: -11.876789093017578
    6. '("("' → logprob: -12.376789093017578
    7. '`' → logprob: -12.501789093017578
    8. '(**' → logprob: -12.501789093017578
    9. ' (' → logprob: -12.626789093017578
    10. '"' → logprob: -12.626789093017578

Token 7: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12927155196666718
    2. '=' → logprob: -2.3792715072631836
    3. ' =' → logprob: -4.254271507263184
    4. '_' → logprob: -5.629271507263184
    5. '```' → logprob: -5.629271507263184
    6. '[int' → logprob: -6.504271507263184
    7. '\[' → logprob: -6.629271507263184
    8. '#' → logprob: -7.504271507263184
    9. 'print' → logprob: -7.629271507263184
    10. '[:]' → logprob: -8.254271507263184

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1112033799290657
    2. '[' → logprob: -2.61120343208313
    3. '_K' → logprob: -3.48620343208313
    4. '[_' → logprob: -7.361203193664551
    5. '_N' → logprob: -9.11120319366455
    6. '_[' → logprob: -9.61120319366455
    7. '[]' → logprob: -9.73620319366455
    8. ')' → logprob: -10.23620319366455
    9. ' _' → logprob: -10.23620319366455
    10. '[:]' → logprob: -10.36120319366455

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16030484437942505
    2. ' int' → logprob: -1.9103047847747803
    3. ' N' → logprob: -10.16030502319336
    4. 'N' → logprob: -10.53530502319336
    5. ' ' → logprob: -12.53530502319336
    6. 'input' → logprob: -12.66030502319336
    7. '[int' → logprob: -12.66030502319336
    8. 'len' → logprob: -12.91030502319336
    9. '(int' → logprob: -13.91030502319336
    10. ' input' → logprob: -14.78530502319336

Token 10: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16066356003284454
    2. '(N' → logprob: -1.9106636047363281
    3. '('' → logprob: -8.160663604736328
    4. '(K' → logprob: -9.285663604736328
    5. '("' → logprob: -11.285663604736328
    6. '(
' → logprob: -11.660663604736328
    7. 'N' → logprob: -11.910663604736328
    8. '(

' → logprob: -12.035663604736328
    9. '(`' → logprob: -12.160663604736328
    10. '(_' → logprob: -12.535663604736328

Token 11: '_K' (ID: 20555)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42952725291252136
    2. '_K' → logprob: -1.0545272827148438
    3. ')' → logprob: -7.554527282714844
    4. ' [' → logprob: -9.929527282714844
    5. '```' → logprob: -10.054527282714844
    6. '[_' → logprob: -10.179527282714844
    7. ' ' → logprob: -10.554527282714844
    8. ')[' → logprob: -10.554527282714844
    9. '_N' → logprob: -11.179527282714844
    10. ')_' → logprob: -11.179527282714844

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. ' [' → logprob: -13.75000286102295
    3. ')' → logprob: -13.87500286102295
    4. '\[' → logprob: -15.37500286102295
    5. '   ' → logprob: -15.50000286102295
    6. '[
' → logprob: -15.87500286102295
    7. '[N' → logprob: -16.000003814697266
    8. '```' → logprob: -16.125003814697266
    9. ' ' → logprob: -16.750003814697266
    10. '(' → logprob: -17.750003814697266

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.259079363080673e-05
    2. '1' → logprob: -11.500012397766113
    3. ' ' → logprob: -13.000012397766113
    4. ')' → logprob: -15.875012397766113
    5. '۰' → logprob: -18.62501335144043
    6. '```' → logprob: -18.62501335144043
    7. ']' → logprob: -18.75001335144043
    8. '])' → logprob: -18.75001335144043
    9. '`' → logprob: -18.75001335144043
    10. '   ' → logprob: -19.25001335144043

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12738600373268127
    2. '])' → logprob: -2.1273860931396484
    3. ']' → logprob: -8.002386093139648
    4. ')]' → logprob: -10.252386093139648
    5. ')
' → logprob: -10.377386093139648
    6. ')])' → logprob: -10.877386093139648
    7. ''])' → logprob: -11.127386093139648
    8. '[' → logprob: -12.627386093139648
    9. '))' → logprob: -12.627386093139648
    10. '）' → logprob: -12.627386093139648

Token 15: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.12723371386528015
    2. 'M' → logprob: -2.1272337436676025
    3. 'k' → logprob: -8.627233505249023
    4. 'N' → logprob: -9.752233505249023
    5. 'm' → logprob: -11.877233505249023
    6. 'S' → logprob: -11.877233505249023
    7. '```' → logprob: -11.877233505249023
    8. 'W' → logprob: -12.127233505249023
    9. 'n' → logprob: -12.377233505249023
    10. 'D' → logprob: -12.502233505249023

Token 16: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.744886040687561
    2. ' =' → logprob: -1.619886040687561
    3. '=' → logprob: -1.994886040687561
    4. ' ' → logprob: -2.4948859214782715
    5. '_' → logprob: -2.6198859214782715
    6. '<|end|>' → logprob: -3.8698859214782715
    7. '[' → logprob: -5.2448859214782715
    8. ' )' → logprob: -5.9948859214782715
    9. '_space' → logprob: -6.3698859214782715
    10. '  ' → logprob: -6.8698859214782715

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931493282318115
    2. ' int' → logprob: -0.6931493282318115
    3. ' N' → logprob: -13.81814956665039
    4. ' ' → logprob: -14.56814956665039
    5. '(int' → logprob: -15.31814956665039
    6. '=int' → logprob: -15.56814956665039
    7. '0' → logprob: -16.31814956665039
    8. 'N' → logprob: -16.94314956665039
    9. '[int' → logprob: -17.19314956665039
    10. '1' → logprob: -17.31814956665039

Token 18: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4607754349708557
    2. '(N' → logprob: -1.085775375366211
    3. '(K' → logprob: -3.460775375366211
    4. '((' → logprob: -10.335775375366211
    5. '("("' → logprob: -10.710775375366211
    6. ' (' → logprob: -10.710775375366211
    7. '('' → logprob: -10.835775375366211
    8. '()' → logprob: -11.460775375366211
    9. '```' → logprob: -11.585775375366211
    10. '`' → logprob: -12.460775375366211

Token 19: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.02704721875488758
    2. ')' → logprob: -4.027047157287598
    3. '[' → logprob: -5.402047157287598
    4. '_' → logprob: -6.277047157287598
    5. '_)' → logprob: -6.527047157287598
    6. '[_' → logprob: -7.902047157287598
    7. ')_' → logprob: -8.027047157287598
    8. '[K' → logprob: -9.027047157287598
    9. '-' → logprob: -10.027047157287598
    10. '_k' → logprob: -10.527047157287598

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. ' [' → logprob: -14.375001907348633
    3. '```' → logprob: -15.500001907348633
    4. ')' → logprob: -15.625001907348633
    5. '[
' → logprob: -15.875001907348633
    6. '1' → logprob: -16.250001907348633
    7. '\[' → logprob: -16.875001907348633
    8. ')[' → logprob: -16.875001907348633
    9. '][' → logprob: -17.000001907348633
    10. ']' → logprob: -17.375001907348633

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4153549020411447e-05
    2. '])' → logprob: -11.00002384185791
    3. '0' → logprob: -11.87502384185791
    4. '```' → logprob: -15.62502384185791
    5. '-' → logprob: -15.75002384185791
    6. ' ' → logprob: -16.000024795532227
    7. '])
' → logprob: -17.250024795532227
    8. ']' → logprob: -17.625024795532227
    9. '   ' → logprob: -17.750024795532227
    10. '])-' → logprob: -18.625024795532227

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. '])' → logprob: -12.750007629394531
    3. '))' → logprob: -12.875007629394531
    4. '）' → logprob: -14.250007629394531
    5. '')' → logprob: -14.375007629394531
    6. '`)' → logprob: -15.125007629394531
    7. '#' → logprob: -16.12500762939453
    8. ''])' → logprob: -16.12500762939453
    9. ')]' → logprob: -16.12500762939453
    10. '()' → logprob: -16.25000762939453

Token 23: 'def' (ID: 1314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8441449999809265
    2. 'result' → logprob: -2.0941450595855713
    3. 'for' → logprob: -2.3441450595855713
    4. 's' → logprob: -3.3441450595855713
    5. 'if' → logprob: -3.3441450595855713
    6. 'count' → logprob: -3.3441450595855713
    7. 'A' → logprob: -3.5941450595855713
    8. 'n' → logprob: -3.8441450595855713
    9. 'dp' → logprob: -3.8441450595855713
    10. 'd' → logprob: -4.094144821166992

Token 24: ' next' (ID: 2613)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.5897890329360962
    2. ' ' → logprob: -1.9647890329360962
    3. ' max' → logprob: -2.2147889137268066
    4. ' f' → logprob: -2.2147889137268066
    5. ' solve' → logprob: -2.2147889137268066
    6. ' solution' → logprob: -2.4647889137268066
    7. ' count' → logprob: -2.9647889137268066
    8. ' main' → logprob: -3.0897889137268066
    9. ' find' → logprob: -3.7147889137268066
    10. ' binary' → logprob: -3.8397889137268066

Token 25: '_mult' (ID: 44050)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03573937341570854
    2. '_token' → logprob: -4.410739421844482
    3. '_per' → logprob: -4.785739421844482
    4. '_step' → logprob: -6.410739421844482
    5. '_val' → logprob: -6.410739421844482
    6. '_number' → logprob: -6.660739421844482
    7. '_move' → logprob: -7.035739421844482
    8. '_num' → logprob: -7.160739421844482
    9. '_position' → logprob: -7.160739421844482
    10. '_word' → logprob: -7.285739421844482

Token 26: '(val' (ID: 17391)
  Prédit: 'iple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iple' → logprob: -0.003355109365656972
    2. 'ip' → logprob: -6.253355026245117
    3. 'iplier' → logprob: -7.128355026245117
    4. 'ile' → logprob: -8.128355026245117
    5. 'i' → logprob: -8.753355026245117
    6. 'ipe' → logprob: -9.753355026245117
    7. 'iples' → logprob: -9.878355026245117
    8. 'IPLE' → logprob: -11.003355026245117
    9. 'ipl' → logprob: -11.253355026245117
    10. 'uple' → logprob: -11.378355026245117

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11456724256277084
    2. 'iple' → logprob: -2.864567279815674
    3. 'iplier' → logprob: -3.239567279815674
    4. 'ip' → logprob: -4.989567279815674
    5. ')' → logprob: -6.114567279815674
    6. ',)' → logprob: -7.364567279815674
    7. ',i' → logprob: -7.989567279815674
    8. '):' → logprob: -8.114566802978516
    9. 'ipl' → logprob: -8.489566802978516
    10. 'i' → logprob: -8.489566802978516

Token 28: ' step' (ID: 5983)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.17828693985939026
    2. ' K' → logprob: -2.3032870292663574
    3. 'k' → logprob: -3.4282870292663574
    4. 'mult' → logprob: -4.428287029266357
    5. 'val' → logprob: -4.928287029266357
    6. 'x' → logprob: -6.303287029266357
    7. ' val' → logprob: -6.303287029266357
    8. 'div' → logprob: -6.678287029266357
    9. 'n' → logprob: -6.928287029266357
    10. ' k' → logprob: -6.928287029266357

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012234434252604842
    2. ')' → logprob: -6.751223564147949
    3. '):
' → logprob: -10.87622356414795
    4. ',' → logprob: -11.12622356414795
    5. '=' → logprob: -11.75122356414795
    6. ' ):' → logprob: -12.50122356414795
    7. ':' → logprob: -13.25122356414795
    8. '_' → logprob: -14.37622356414795
    9. '):
' → logprob: -14.50122356414795
    10. 'er' → logprob: -14.62622356414795

Token 30: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01720549538731575
    2. '   ' → logprob: -4.142205715179443
    3. '):' → logprob: -7.017205715179443
    4. ':
' → logprob: -8.767205238342285
    5. ',' → logprob: -10.017205238342285
    6. ':return' → logprob: -10.767205238342285
    7. ' :' → logprob: -11.767205238342285
    8. '():' → logprob: -12.267205238342285
    9. '(' → logprob: -12.392205238342285
    10. ' return' → logprob: -12.642205238342285

Token 31: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03500939533114433
    2. ' if' → logprob: -4.285009384155273
    3. 'if' → logprob: -4.785009384155273
    4. ' return' → logprob: -5.285009384155273
    5. 'return' (adapté à ' return') → logprob: -5.535009384155273
    6. ' while' → logprob: -6.410009384155273
    7. 'while' → logprob: -7.660009384155273
    8. ' for' → logprob: -7.910009384155273
    9. ':' → logprob: -8.785009384155273
    10. 'for' → logprob: -9.035009384155273

Token 32: ' val' (ID: 1459)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.05948161706328392
    2. '(val' → logprob: -3.559481620788574
    3. 'val' → logprob: -3.934481620788574
    4. ' ((' → logprob: -4.934481620788574
    5. '(((' → logprob: -6.684481620788574
    6. ' val' → logprob: -7.309481620788574
    7. ' (' → logprob: -7.559481620788574
    8. '(' → logprob: -10.309481620788574
    9. 'step' → logprob: -10.559481620788574
    10. '(step' → logprob: -11.059481620788574

Token 33: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2577950060367584
    2. ' +' → logprob: -1.507794976234436
    3. ' if' → logprob: -5.3827948570251465
    4. '+(' → logprob: -7.1327948570251465
    5. 'if' → logprob: -8.132795333862305
    6. ' -' → logprob: -9.382795333862305
    7. '-' → logprob: -9.757795333862305
    8. '%' → logprob: -11.882795333862305
    9. ' +(' → logprob: -12.757795333862305
    10. '((' → logprob: -13.757795333862305

Token 34: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.045130759477615356
    2. '(step' → logprob: -3.545130729675293
    3. ' step' → logprob: -4.420130729675293
    4. '((' → logprob: -6.170130729675293
    5. '(' → logprob: -7.920130729675293
    6. '2' → logprob: -8.045130729675293
    7. ' (' → logprob: -8.420130729675293
    8. ' ((' → logprob: -9.295130729675293
    9. 'K' → logprob: -10.295130729675293
    10. 'val' → logprob: -10.545130729675293

Token 35: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15761055052280426
    2. '<|end|>' → logprob: -2.4076106548309326
    3. ' +' → logprob: -3.2826106548309326
    4. '<|end|>' → logprob: -5.2826104164123535
    5. ' ' → logprob: -5.4076104164123535
    6. '*' → logprob: -6.5326104164123535
    7. '
' → logprob: -6.9076104164123535
    8. '+
' → logprob: -7.0326104164123535
    9. ' if' → logprob: -7.2826104164123535
    10. 'if' → logprob: -7.6576104164123535

Token 36: 'cnt' (ID: 33160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6513906121253967
    2. '+' → logprob: -1.026390552520752
    3. '<|end|>' → logprob: -3.151390552520752
    4. ')' → logprob: -3.901390552520752
    5. ' ' → logprob: -4.026390552520752
    6. '*' → logprob: -4.401390552520752
    7. '(
' → logprob: -5.401390552520752
    8. '#' → logprob: -5.901390552520752
    9. '_' → logprob: -6.026390552520752
    10. '/' → logprob: -6.151390552520752

Token 37: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27241992950439453
    2. '=' → logprob: -1.6474199295043945
    3. '(' → logprob: -3.2724199295043945
    4. ' =' → logprob: -5.7724199295043945
    5. ')' → logprob: -6.0224199295043945
    6. '<|end|>' → logprob: -6.7724199295043945
    7. ',' → logprob: -7.6474199295043945
    8. '+' → logprob: -9.647419929504395
    9. '_=' → logprob: -9.897419929504395
    10. 'inue' → logprob: -10.022419929504395

Token 38: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019013900309801102
    2. 'K' → logprob: -7.126901626586914
    3. ' ' → logprob: -7.501901626586914
    4. '1' → logprob: -7.626901626586914
    5. ' K' → logprob: -10.751901626586914
    6. '(' → logprob: -10.876901626586914
    7. 'N' → logprob: -11.376901626586914
    8. ' (' → logprob: -13.751901626586914
    9. '(K' → logprob: -14.251901626586914
    10. ' N' → logprob: -14.626901626586914

Token 39: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02084408886730671
    2. '1' → logprob: -4.145843982696533
    3. 'K' → logprob: -5.520843982696533
    4. 'N' → logprob: -7.520843982696533
    5. '(' → logprob: -8.770844459533691
    6. ' ' → logprob: -10.645844459533691
    7. '2' → logprob: -10.895844459533691
    8. '(K' → logprob: -11.645844459533691
    9. 'next' → logprob: -12.020844459533691
    10. '(N' → logprob: -12.145844459533691

Token 40: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5624793767929077
    2. '<|end|>' → logprob: -1.4374793767929077
    3. '
' → logprob: -2.5624794960021973
    4. ' while' → logprob: -3.0624794960021973
    5. '*' → logprob: -3.8124794960021973
    6. 'if' → logprob: -4.187479496002197
    7. ' 
' → logprob: -4.812479496002197
    8. '<|end|>' → logprob: -5.187479496002197
    9. '\n' → logprob: -6.187479496002197
    10. '+' → logprob: -6.312479496002197

Token 41: 'tmp' (ID: 11669)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3110979497432709
    2. ' while' → logprob: -2.1860978603363037
    3. ' 
' → logprob: -2.6860978603363037
    4. '
' → logprob: -3.0610978603363037
    5. '*' → logprob: -4.936098098754883
    6. 'if' → logprob: -5.186098098754883
    7. '<|end|>' → logprob: -5.186098098754883
    8. 'for' → logprob: -5.186098098754883
    9. 'current' → logprob: -6.186098098754883
    10. 'val' → logprob: -6.186098098754883

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1662146896123886
    2. '_' → logprob: -2.29121470451355
    3. '_val' → logprob: -3.79121470451355
    4. '=' → logprob: -3.91621470451355
    5. '_mult' → logprob: -5.666214466094971
    6. ' ' → logprob: -6.166214466094971
    7. ' *=' → logprob: -6.791214466094971
    8. '_value' → logprob: -7.166214466094971
    9. ',' → logprob: -7.291214466094971
    10. '_cnt' → logprob: -8.166214942932129

Token 43: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23769976198673248
    2. 'K' → logprob: -2.3626997470855713
    3. 'cnt' → logprob: -2.6126997470855713
    4. ' ' → logprob: -3.9876997470855713
    5. 'N' → logprob: -4.36269998550415
    6. ' K' → logprob: -4.73769998550415
    7. ' cnt' → logprob: -6.36269998550415
    8. '2' → logprob: -6.61269998550415
    9. ' N' → logprob: -7.86269998550415
    10. '0' → logprob: -7.98769998550415

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13720081746578217
    2. ' while' → logprob: -2.3872008323669434
    3. '*' → logprob: -3.6372008323669434
    4. '+' → logprob: -5.262200832366943
    5. '<|end|>' → logprob: -5.387200832366943
    6. 'While' → logprob: -9.762200355529785
    7. '	while' → logprob: -10.762200355529785
    8. 'if' → logprob: -10.887200355529785
    9. ' *' → logprob: -10.887200355529785
    10. '<|end|>' → logprob: -11.012200355529785

Token 46: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9243265986442566
    2. ' _' → logprob: -0.9243265986442566
    3. ' ' → logprob: -1.6743266582489014
    4. '_' → logprob: -4.299326419830322
    5. ' in' → logprob: -5.424326419830322
    6. ' range' → logprob: -8.04932689666748
    7. 'i' → logprob: -8.04932689666748
    8. '  ' → logprob: -9.29932689666748
    9. ' val' → logprob: -9.79932689666748
    10. ' tmp' → logprob: -9.92432689666748

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5235874652862549
    2. 'in' → logprob: -0.8985874652862549
    3. ' ' → logprob: -8.148587226867676
    4. 'n' → logprob: -10.273587226867676
    5. 'import' → logprob: -10.398587226867676
    6. '<|end|>' → logprob: -10.398587226867676
    7. '	in' → logprob: -11.273587226867676
    8. '  ' → logprob: -11.648587226867676
    9. '```' → logprob: -11.648587226867676
    10. 'i' → logprob: -11.898587226867676

Token 48: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22546038031578064
    2. ' range' → logprob: -1.600460410118103
    3. '(range' → logprob: -10.600460052490234
    4. '	range' → logprob: -11.850460052490234
    5. ' ' → logprob: -12.475460052490234
    6. '[' → logprob: -13.350460052490234
    7. 'ran' → logprob: -13.725460052490234
    8. ' xrange' → logprob: -13.975460052490234
    9. 'rang' → logprob: -14.100460052490234
    10. '(' → logprob: -14.350460052490234

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48950111865997314
    2. '(N' → logprob: -0.9895011186599731
    3. '(cnt' → logprob: -4.614500999450684
    4. '(K' → logprob: -5.364500999450684
    5. ' (' → logprob: -8.114500999450684
    6. '(range' → logprob: -8.614500999450684
    7. '(n' → logprob: -8.989500999450684
    8. '((' → logprob: -10.864500999450684
    9. '(C' → logprob: -10.989500999450684
    10. '(count' → logprob: -11.239500999450684

Token 50: '100' (ID: 1353)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00525854155421257
    2. 'K' → logprob: -5.755258560180664
    3. ' N' → logprob: -7.005258560180664
    4. 'cnt' → logprob: -7.255258560180664
    5. '1' → logprob: -8.630258560180664
    6. ')' → logprob: -9.255258560180664
    7. '10' → logprob: -9.630258560180664
    8. ' ' → logprob: -10.505258560180664
    9. '2' → logprob: -10.880258560180664
    10. ' K' → logprob: -11.380258560180664

Token 51: '0' (ID: 15)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00819384679198265
    2. '0' → logprob: -5.3831939697265625
    3. ' ):' → logprob: -5.8831939697265625
    4. ':' → logprob: -7.8831939697265625
    5. ')' → logprob: -8.258193969726562
    6. '):
' → logprob: -10.008193969726562
    7. '1' → logprob: -10.383193969726562
    8. '000' → logprob: -11.133193969726562
    9. '():' → logprob: -11.508193969726562
    10. '00' → logprob: -11.883193969726562

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05114762485027313
    2. ')' → logprob: -3.801147699356079
    3. ' ):' → logprob: -3.801147699356079
    4. ':' → logprob: -5.8011474609375
    5. ' )' → logprob: -6.5511474609375
    6. '):
' → logprob: -7.5511474609375
    7. '   ' → logprob: -10.0511474609375
    8. ',' → logprob: -10.3011474609375
    9. ' ):
' → logprob: -10.3011474609375
    10. '+' → logprob: -10.4261474609375

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06554988026618958
    2. ' if' → logprob: -3.565549850463867
    3. ':' → logprob: -3.690549850463867
    4. '<|end|>' → logprob: -4.940549850463867
    5. ':
' → logprob: -7.690549850463867
    6. ' ' → logprob: -7.815549850463867
    7. '    
' → logprob: -7.815549850463867
    8. ' 
' → logprob: -8.065549850463867
    9. '```' → logprob: -8.065549850463867
    10. 'if' → logprob: -8.190549850463867

Token 54: ' if' (ID: 538)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6716951727867126
    2. ' if' → logprob: -1.1716952323913574
    3. 'tmp' → logprob: -2.7966952323913574
    4. '   ' → logprob: -2.9216952323913574
    5. 'if' (adapté à ' if') → logprob: -3.9216952323913574
    6. ':' → logprob: -4.296695232391357
    7. '    ' → logprob: -4.421695232391357
    8. ' ' → logprob: -4.921695232391357
    9. ' 
' → logprob: -5.796695232391357
    10. '<|end|>' → logprob: -6.671695232391357

Token 55: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.03891466185450554
    2. 'tmp' → logprob: -3.288914680480957
    3. ' (' → logprob: -8.288914680480957
    4. '(tmp' → logprob: -8.538914680480957
    5. ' K' → logprob: -8.663914680480957
    6. ' cnt' → logprob: -8.788914680480957
    7. ' ' → logprob: -10.538914680480957
    8. 'K' → logprob: -11.038914680480957
    9. 'cnt' → logprob: -11.413914680480957
    10. '	tmp' → logprob: -11.663914680480957

Token 56: ' >' (ID: 1424)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.062178414314985275
    2. '%' → logprob: -2.812178373336792
    3. ' >=' → logprob: -9.562178611755371
    4. '*' → logprob: -9.812178611755371
    5. ' *' → logprob: -10.312178611755371
    6. ' ==' → logprob: -10.937178611755371
    7. ' <' → logprob: -11.312178611755371
    8. ' ' → logprob: -12.062178611755371
    9. '>=' → logprob: -12.562178611755371
    10. '<' → logprob: -12.812178611755371

Token 57: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07038140296936035
    2. ' N' → logprob: -2.6953814029693604
    3. ' ' → logprob: -8.320381164550781
    4. '100' → logprob: -9.070381164550781
    5. '1' → logprob: -10.820381164550781
    6. '10' → logprob: -11.070381164550781
    7. '=' → logprob: -11.695381164550781
    8. '999' → logprob: -11.820381164550781
    9. 'K' → logprob: -12.195381164550781
    10. '0' → logprob: -12.320381164550781

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00033760786755010486
    2. ' :' → logprob: -8.375337600708008
    3. ':
' → logprob: -10.000337600708008
    4. ' or' → logprob: -10.375337600708008
    5. ':return' → logprob: -10.875337600708008
    6. '):' → logprob: -12.375337600708008
    7. ' and' → logprob: -12.625337600708008
    8. 'or' → logprob: -13.375337600708008
    9. 'and' → logprob: -14.000337600708008
    10. ':

' → logprob: -15.250337600708008

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4213753044605255
    2. '   ' → logprob: -1.2963752746582031
    3. ':' → logprob: -3.671375274658203
    4. ' break' → logprob: -3.671375274658203
    5. 'break' → logprob: -4.046375274658203
    6. '    ' → logprob: -7.046375274658203
    7. '	break' → logprob: -7.546375274658203
    8. ' ' → logprob: -8.921375274658203
    9. '  ' → logprob: -9.296375274658203
    10. '      ' → logprob: -9.421375274658203

Token 60: ' break' (ID: 2338)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2513580322265625
    2. ' break' → logprob: -1.6263580322265625
    3. 'break' (adapté à ' break') → logprob: -4.2513580322265625
    4. '       ' → logprob: -4.5013580322265625
    5. '	break' → logprob: -8.626358032226562
    6. ' ' → logprob: -10.876358032226562
    7. '    ' → logprob: -11.001358032226562
    8. '   ' → logprob: -11.251358032226562
    9. '           ' → logprob: -11.501358032226562
    10. ' print' → logprob: -11.751358032226562

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07911626994609833
    2. '    
' → logprob: -2.7041163444519043
    3. '
' → logprob: -4.954116344451904
    4. 'tmp' → logprob: -6.954116344451904
    5. '	tmp' → logprob: -7.704116344451904
    6. '<|end|>' → logprob: -8.329115867614746
    7. ' tmp' → logprob: -9.329115867614746
    8. '```' → logprob: -9.454115867614746
    9. '   
' → logprob: -9.829115867614746
    10. '<|end|>' → logprob: -10.579115867614746

Token 62: '   ' (ID: 271)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.4616023898124695
    2. '   ' → logprob: -1.5866024494171143
    3. '    
' → logprob: -2.5866024494171143
    4. '	tmp' → logprob: -3.0866024494171143
    5. ' tmp' → logprob: -3.4616024494171143
    6. '\t' → logprob: -5.086602210998535
    7. '```' → logprob: -6.836602210998535
    8. '   
' → logprob: -6.961602210998535
    9. ' 
' → logprob: -6.961602210998535
    10. '     
' → logprob: -7.711602210998535

Token 63: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.22448429465293884
    2. 'cnt' → logprob: -1.7244843244552612
    3. '   ' → logprob: -4.599484443664551
    4. ' tmp' → logprob: -4.724484443664551
    5. ' cnt' → logprob: -5.974484443664551
    6. '    
' → logprob: -7.474484443664551
    7. '*' → logprob: -8.47448444366455
    8. '```' → logprob: -9.22448444366455
    9. 'K' → logprob: -9.34948444366455
    10. ' K' → logprob: -10.22448444366455

Token 64: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.9079692363739014
    2. ' *=' → logprob: -1.1579692363739014
    3. '=' → logprob: -1.4079692363739014
    4. ' =' → logprob: -3.2829692363739014
    5. '*' → logprob: -8.15796947479248
    6. '+=' → logprob: -9.65796947479248
    7. ' +=' → logprob: -10.90796947479248
    8. ' *' → logprob: -12.78296947479248
    9. ' ' → logprob: -12.90796947479248
    10. '   ' → logprob: -15.03296947479248

Token 65: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.028257133439183235
    2. ' next' → logprob: -3.903257131576538
    3. 'tmp' → logprob: -4.903257369995117
    4. ' tmp' → logprob: -8.278257369995117
    5. 'int' → logprob: -13.278257369995117
    6. '(next' → logprob: -13.403257369995117
    7. '   ' → logprob: -13.778257369995117
    8. '	next' → logprob: -14.153257369995117
    9. 'mult' → logprob: -14.278257369995117
    10. 'multip' → logprob: -14.403257369995117

Token 66: '_mult' (ID: 44050)
  Prédit: '_mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mult' → logprob: -7.541112427134067e-05
    2. 'tmp' → logprob: -9.750075340270996
    3. 'mult' → logprob: -11.125075340270996
    4. 'Mult' → logprob: -14.125075340270996
    5. '(tmp' → logprob: -14.750075340270996
    6. '_mul' → logprob: -15.000075340270996
    7. '_tmp' → logprob: -15.125075340270996
    8. '_MULT' → logprob: -15.250075340270996
    9. '_' → logprob: -15.875075340270996
    10. '_multiple' → logprob: -16.875076293945312

Token 67: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.0005084725562483072
    2. '(' → logprob: -7.6255083084106445
    3. 'tmp' → logprob: -10.875508308410645
    4. '(temp' → logprob: -14.875508308410645
    5. ' (' → logprob: -15.375508308410645
    6. '(
' → logprob: -15.500508308410645
    7. ' tmp' → logprob: -15.875508308410645
    8. ',tmp' → logprob: -16.00050926208496
    9. '(cnt' → logprob: -16.12550926208496
    10. '	tmp' → logprob: -16.50050926208496

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021755501627922058
    2. ',K' → logprob: -4.021755695343018
    3. ' ,' → logprob: -5.646755695343018
    4. 'K' → logprob: -10.64675521850586
    5. ',
' → logprob: -10.64675521850586
    6. '2' → logprob: -12.39675521850586
    7. ' K' → logprob: -12.52175521850586
    8. ',k' → logprob: -12.89675521850586
    9. '   ' → logprob: -13.02175521850586
    10. '```' → logprob: -14.02175521850586

Token 69: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.03445003926753998
    2. '2' → logprob: -3.409450054168701
    3. ' K' → logprob: -7.284450054168701
    4. '5' → logprob: -10.159449577331543
    5. '3' → logprob: -10.909449577331543
    6. 'k' → logprob: -11.034449577331543
    7. '10' → logprob: -11.034449577331543
    8. ' ' → logprob: -11.534449577331543
    9. '1' → logprob: -12.409449577331543
    10. '   ' → logprob: -13.159449577331543

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005431424942798913
    2. ')
' → logprob: -7.625543117523193
    3. ' )' → logprob: -10.000543594360352
    4. ')

' → logprob: -13.125543594360352
    5. '+' → logprob: -13.250543594360352
    6. '*' → logprob: -13.250543594360352
    7. ' ' → logprob: -14.125543594360352
    8. ',' → logprob: -14.375543594360352
    9. '   ' → logprob: -14.500543594360352
    10. '),' → logprob: -14.750543594360352

Token 71: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0024839844554662704
    2. '   ' → logprob: -6.37748384475708
    3. '
' → logprob: -8.127484321594238
    4. '[cnt' → logprob: -9.127484321594238
    5. '	cnt' → logprob: -9.502484321594238
    6. ' cnt' → logprob: -9.502484321594238
    7. '    
' → logprob: -9.752484321594238
    8. '  
' → logprob: -10.127484321594238
    9. 'print' → logprob: -10.627484321594238
    10. '_cnt' → logprob: -11.002484321594238

Token 72: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -9.9728669738397e-05
    2. '   ' → logprob: -9.500100135803223
    3. ' cnt' → logprob: -10.750100135803223
    4. '	cnt' → logprob: -13.750100135803223
    5. 'count' → logprob: -13.875100135803223
    6. '    
' → logprob: -14.750100135803223
    7. '
' → logprob: -14.750100135803223
    8. ' ' → logprob: -15.750100135803223
    9. '(cnt' → logprob: -15.750100135803223
    10. '_cnt' → logprob: -15.875100135803223

Token 73: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009953226894140244
    2. '+' → logprob: -4.759953022003174
    3. ' +=' → logprob: -6.759953022003174
    4. '=' → logprob: -8.634953498840332
    5. '++' → logprob: -15.259953498840332
    6. '+='' → logprob: -15.884953498840332
    7. '+="' → logprob: -16.009952545166016
    8. ']+=' → logprob: -16.634952545166016
    9. ' +' → logprob: -16.884952545166016
    10. '+=(' → logprob: -17.134952545166016

Token 74: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2016238421201706
    2. ' cnt' → logprob: -1.701623797416687
    3. 'tmp' → logprob: -8.701623916625977
    4. ' tmp' → logprob: -10.201623916625977
    5. '(cnt' → logprob: -12.201623916625977
    6. '+' → logprob: -14.076623916625977
    7. '	cnt' → logprob: -14.576623916625977
    8. ' ' → logprob: -14.701623916625977
    9. 'ct' → logprob: -15.951623916625977
    10. '[cnt' → logprob: -16.326623916625977

Token 75: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004571342375129461
    2. '*' → logprob: -5.504571437835693
    3. ' +' → logprob: -7.629571437835693
    4. ' *' → logprob: -12.254570960998535
    5. '+
' → logprob: -14.129570960998535
    6. '+=' → logprob: -14.504570960998535
    7. '*K' → logprob: -15.129570960998535
    8. '++' → logprob: -15.629570960998535
    9. '+k' → logprob: -16.00457191467285
    10. '   ' → logprob: -16.00457191467285

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040004486800171435
    2. ' ' → logprob: -7.875400066375732
    3. 'cnt' → logprob: -11.000399589538574
    4. 'tmp' → logprob: -12.750399589538574
    5. ' cnt' → logprob: -15.750399589538574
    6. ' tmp' → logprob: -16.25040054321289
    7. '   ' → logprob: -16.87540054321289
    8. '2' → logprob: -17.50040054321289
    9. '10' → logprob: -18.00040054321289
    10. 'K' → logprob: -18.00040054321289

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'cnt' → logprob: -15.50001335144043
    4. 'tmp' → logprob: -17.25001335144043
    5. '   ' → logprob: -18.37501335144043
    6. '  ' → logprob: -19.12501335144043
    7. '<|end|>' → logprob: -20.06251335144043
    8. '2' → logprob: -20.25001335144043
    9. '+' → logprob: -20.25001335144043
    10. '１' → logprob: -20.87501335144043

Token 78: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.263011578586884e-05
    2. '
' → logprob: -10.750042915344238
    3. ' print' → logprob: -10.875042915344238
    4. ')' → logprob: -14.000042915344238
    5. '<|end|>' → logprob: -15.125042915344238
    6. ')
' → logprob: -15.500042915344238
    7. '.print' → logprob: -15.500042915344238
    8. '  
' → logprob: -15.750042915344238
    9. '    
' → logprob: -15.750042915344238
    10. '(print' → logprob: -16.000041961669922

Token 79: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2246291337069124e-05
    2. ')' → logprob: -11.500021934509277
    3. ' print' → logprob: -11.750021934509277
    4. '
' → logprob: -12.875021934509277
    5. ')
' → logprob: -13.750021934509277
    6. '```' → logprob: -15.750021934509277
    7. '(print' → logprob: -15.750021934509277
    8. '.print' → logprob: -16.375022888183594
    9. '*' → logprob: -16.750022888183594
    10. 'cnt' → logprob: -17.625022888183594

Token 80: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.000111768240458332
    2. '(' → logprob: -9.25011157989502
    3. 'cnt' → logprob: -11.12511157989502
    4. '(count' → logprob: -15.37511157989502
    5. ' (' → logprob: -15.87511157989502
    6. '(tmp' → logprob: -16.250112533569336
    7. '[cnt' → logprob: -16.250112533569336
    8. '((' → logprob: -16.750112533569336
    9. '(ans' → logprob: -16.875112533569336
    10. '(cont' → logprob: -17.125112533569336

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -15.75
    3. ')`' → logprob: -17.875
    4. '))' → logprob: -18.375
    5. ')
' → logprob: -19.0
    6. ')}' → logprob: -20.375
    7. ')#' → logprob: -20.625
    8. ')**' → logprob: -21.125
    9. '')' → logprob: -21.375
    10. '）' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 79
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 57
Précision stricte (1ère position): 25.32%
Précision adaptée (1ère position): 27.85%
Précision (top 10): 72.15%
================================================================================
