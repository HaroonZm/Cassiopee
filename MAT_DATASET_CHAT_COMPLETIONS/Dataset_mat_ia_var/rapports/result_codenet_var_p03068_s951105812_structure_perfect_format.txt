================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input()
k = int(input())
c = s[k - 1]

ans = ""
for i in range(n):
    if s[i] != c:
        ans += "*"
    else:
        ans += c
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1369263231754303
    2. ')' → logprob: -2.2619264125823975
    3. '()' → logprob: -4.011926174163818
    4. '())' → logprob: -5.511926174163818
    5. '(
' → logprob: -7.636926174163818
    6. '('' → logprob: -8.636926651000977
    7. '```' → logprob: -8.636926651000977
    8. '(()' → logprob: -9.011926651000977
    9. '("("' → logprob: -9.261926651000977
    10. '(

' → logprob: -9.636926651000977

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7856029868125916
    2. '.' → logprob: -1.4106030464172363
    3. 'um' → logprob: -2.1606030464172363
    4. ' =' → logprob: -2.6606030464172363
    5. 'u' → logprob: -4.035603046417236
    6. '=' → logprob: -4.160603046417236
    7. 't' → logprob: -4.285603046417236
    8. 'tr' → logprob: -4.410603046417236
    9. '[i' → logprob: -4.910603046417236
    10. '+' → logprob: -5.035603046417236

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.27080270648002625
    2. ' input' → logprob: -1.6458027362823486
    3. '""' → logprob: -4.0208024978637695
    4. '''' → logprob: -4.6458024978637695
    5. '"' → logprob: -5.0208024978637695
    6. ''' → logprob: -5.0208024978637695
    7. ' ' → logprob: -7.1458024978637695
    8. ' ''' → logprob: -7.1458024978637695
    9. ' ""' → logprob: -7.5208024978637695
    10. '0' → logprob: -8.14580249786377

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002945847576484084
    2. ''' → logprob: -6.377945899963379
    3. ')' → logprob: -8.377945899963379
    4. '"' → logprob: -8.377945899963379
    5. '('' → logprob: -8.502945899963379
    6. '`' → logprob: -8.877945899963379
    7. '()' → logprob: -8.877945899963379
    8. '(
' → logprob: -9.127945899963379
    9. ' (' → logprob: -10.002945899963379
    10. '```' → logprob: -10.002945899963379

Token 9: 'k' (ID: 74)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6958902478218079
    2. 'i' → logprob: -1.445890188217163
    3. 'for' → logprob: -1.820890188217163
    4. 'count' → logprob: -3.570890188217163
    5. 'f' → logprob: -4.320890426635742
    6. 'c' → logprob: -4.445890426635742
    7. '[' → logprob: -4.695890426635742
    8. '_' → logprob: -4.945890426635742
    9. 'a' → logprob: -5.070890426635742
    10. 'd' → logprob: -5.570890426635742

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3896038830280304
    2. ' =' → logprob: -1.139603853225708
    3. '[' → logprob: -7.139604091644287
    4. '_' → logprob: -7.264604091644287
    5. ' ' → logprob: -7.264604091644287
    6. ')' → logprob: -9.264603614807129
    7. ''' → logprob: -9.389603614807129
    8. '.' → logprob: -9.639603614807129
    9. ',' → logprob: -9.764603614807129
    10. 's' → logprob: -10.139603614807129

Token 11: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11499672383069992
    2. ' int' → logprob: -2.2399966716766357
    3. ' n' → logprob: -6.489996910095215
    4. 'n' → logprob: -8.489996910095215
    5. '0' → logprob: -8.989996910095215
    6. 's' → logprob: -9.239996910095215
    7. ' s' → logprob: -9.364996910095215
    8. ' ' → logprob: -9.864996910095215
    9. '<int' → logprob: -10.239996910095215
    10. 'len' → logprob: -11.364996910095215

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02401297353208065
    2. '('' → logprob: -4.399013042449951
    3. '()' → logprob: -4.899013042449951
    4. '(k' → logprob: -6.274013042449951
    5. ''' → logprob: -7.899013042449951
    6. '```' → logprob: -8.274012565612793
    7. '(s' → logprob: -8.399012565612793
    8. ' ' → logprob: -8.899012565612793
    9. '(user' → logprob: -8.899012565612793
    10. ' (' → logprob: -8.899012565612793

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07910700887441635
    2. '()' → logprob: -2.8291070461273193
    3. '())' → logprob: -4.07910680770874
    4. '`)' → logprob: -9.954107284545898
    5. '')' → logprob: -12.704107284545898
    6. '))' → logprob: -12.704107284545898
    7. '")' → logprob: -12.829107284545898
    8. ' )' → logprob: -13.204107284545898
    9. '）' → logprob: -13.204107284545898
    10. ')
' → logprob: -13.579107284545898

Token 14: 'c' (ID: 66)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12956596910953522
    2. 't' → logprob: -3.004565954208374
    3. 'p' → logprob: -3.379565954208374
    4. 's' → logprob: -3.754565954208374
    5. 'output' → logprob: -5.129566192626953
    6. 'for' → logprob: -5.879566192626953
    7. 'res' → logprob: -6.504566192626953
    8. 'print' → logprob: -6.629566192626953
    9. 'r' → logprob: -6.879566192626953
    10. 'a' → logprob: -8.129566192626953

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7705202102661133
    2. 'h' → logprob: -1.0205202102661133
    3. '=' → logprob: -1.7705202102661133
    4. 'har' → logprob: -5.645520210266113
    5. '=s' → logprob: -6.770520210266113
    6. '=h' → logprob: -7.020520210266113
    7. ' ' → logprob: -7.770520210266113
    8. 's' → logprob: -8.395520210266113
    9. '[:]' → logprob: -9.895520210266113
    10. '1' → logprob: -10.020520210266113

Token 16: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8063368797302246
    2. ''' → logprob: -1.0563368797302246
    3. ' ' → logprob: -2.6813368797302246
    4. ' s' → logprob: -2.9313368797302246
    5. ''s' → logprob: -3.5563368797302246
    6. ' []' → logprob: -4.181336879730225
    7. ' '' → logprob: -4.681336879730225
    8. '"' → logprob: -5.056336879730225
    9. '''' → logprob: -5.181336879730225
    10. ' ''' → logprob: -5.181336879730225

Token 17: '[k' (ID: 14298)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08525126427412033
    2. '[:]' → logprob: -3.2102513313293457
    3. '[k' → logprob: -3.5852513313293457
    4. '.' → logprob: -5.210251331329346
    5. '[]' → logprob: -5.835251331329346
    6. '[n' → logprob: -7.335251331329346
    7. '[int' → logprob: -7.585251331329346
    8. 's' → logprob: -7.585251331329346
    9. '[:' → logprob: -7.835251331329346
    10. '[user' → logprob: -7.835251331329346

Token 18: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02007475309073925
    2. '1' → logprob: -4.145074844360352
    3. ' -' → logprob: -6.020074844360352
    4. '0' → logprob: -7.895074844360352
    5. '4' → logprob: -8.270074844360352
    6. ')' → logprob: -8.270074844360352
    7. ']' → logprob: -8.395074844360352
    8. '2' → logprob: -8.770074844360352
    9. '3' → logprob: -9.395074844360352
    10. '5' → logprob: -9.395074844360352

Token 19: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. ')' → logprob: -17.000019073486328
    4. '１' → logprob: -17.375019073486328
    5. '```' → logprob: -17.375019073486328
    6. '2' → logprob: -18.437519073486328
    7. '۱' → logprob: -18.562519073486328
    8. ']' → logprob: -18.812519073486328
    9. '0' → logprob: -19.062519073486328
    10. '...' → logprob: -19.125019073486328

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۱' → logprob: -16.750001907348633
    4. '１' → logprob: -16.750001907348633
    5. '```' → logprob: -17.312501907348633
    6. '১' → logprob: -17.625001907348633
    7. '१' → logprob: -18.000001907348633
    8. '2' → logprob: -18.062501907348633
    9. ')' → logprob: -19.125001907348633
    10. '<|end|>' → logprob: -19.312501907348633

Token 21: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5671748518943787
    2. '])' → logprob: -1.3171749114990234
    3. ')' → logprob: -1.8171749114990234
    4. '']' → logprob: -7.067174911499023
    5. ')]' → logprob: -7.817174911499023
    6. ''])' → logprob: -7.942174911499023
    7. ')])' → logprob: -8.192174911499023
    8. '].' → logprob: -8.317174911499023
    9. '[' → logprob: -9.317174911499023
    10. '])]' → logprob: -9.692174911499023

Token 22: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.48658591508865356
    2. 'for' → logprob: -0.9865859150886536
    3. 'print' → logprob: -4.861586093902588
    4. 'res' → logprob: -6.236586093902588
    5. 'output' → logprob: -6.486586093902588
    6. 'r' → logprob: -6.986586093902588
    7. 'answer' → logprob: -9.36158561706543
    8. 'ans' → logprob: -9.73658561706543
    9. 'p' → logprob: -9.98658561706543
    10. 's' → logprob: -10.23658561706543

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740915596485138
    2. ' =' → logprob: -0.9740915298461914
    3. '=[]' → logprob: -12.724091529846191
    4. 's' → logprob: -12.849091529846191
    5. '=''' → logprob: -13.224091529846191
    6. ',' → logprob: -13.349091529846191
    7. '=""' → logprob: -13.599091529846191
    8. ' +=' → logprob: -14.224091529846191
    9. '_' → logprob: -14.474091529846191
    10. ' ' → logprob: -14.474091529846191

Token 24: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.31338709592819214
    2. '''' → logprob: -1.313387155532837
    3. '"' → logprob: -9.063386917114258
    4. '[]' → logprob: -12.063386917114258
    5. ''' → logprob: -12.813386917114258
    6. ''''' → logprob: -14.938386917114258
    7. ''s' → logprob: -15.438386917114258
    8. '"""' → logprob: -15.938386917114258
    9. '```' → logprob: -16.188386917114258
    10. '''.' → logprob: -16.438386917114258

Token 25: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.3458322731312364e-06
    2. ' for' → logprob: -11.875007629394531
    3. '```' → logprob: -15.625007629394531
    4. '<|end|>' → logprob: -15.750007629394531
    5. '	for' → logprob: -17.75000762939453
    6. '>' → logprob: -19.12500762939453
    7. 'i' → logprob: -19.50000762939453
    8. 'f' → logprob: -20.00000762939453
    9. 'For' → logprob: -20.12500762939453
    10. '0' → logprob: -20.25000762939453

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07094089686870575
    2. ' ' → logprob: -2.6959409713745117
    3. ' _' → logprob: -7.195940971374512
    4. 'i' → logprob: -8.820940971374512
    5. '_' → logprob: -9.945940971374512
    6. ' c' → logprob: -10.820940971374512
    7. '  ' → logprob: -11.320940971374512
    8. ' char' → logprob: -11.695940971374512
    9. ' ch' → logprob: -11.820940971374512
    10. ' x' → logprob: -12.695940971374512

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014202293008565903
    2. 'in' → logprob: -4.514202117919922
    3. ' ' → logprob: -6.014202117919922
    4. 'n' → logprob: -7.764202117919922
    5. ' n' → logprob: -8.389202117919922
    6. '  ' → logprob: -10.889202117919922
    7. ',' → logprob: -11.639202117919922
    8. ' i' → logprob: -11.764202117919922
    9. '	in' → logprob: -11.889202117919922
    10. 's' → logprob: -13.576702117919922

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06027418002486229
    2. 'range' → logprob: -3.435274124145508
    3. ' s' → logprob: -3.685274124145508
    4. 's' → logprob: -6.810274124145508
    5. ' ' → logprob: -9.685274124145508
    6. ' n' → logprob: -12.560274124145508
    7. 'n' → logprob: -12.685274124145508
    8. ' ran' → logprob: -12.810274124145508
    9. '"' → logprob: -13.060274124145508
    10. '(range' → logprob: -13.060274124145508

Token 29: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.013820036314427853
    2. '(len' → logprob: -4.763820171356201
    3. '(' → logprob: -5.263820171356201
    4. ' (' → logprob: -11.388819694519043
    5. ' n' → logprob: -12.513819694519043
    6. '(
' → logprob: -14.138819694519043
    7. 'len' → logprob: -15.263819694519043
    8. ' len' → logprob: -15.888819694519043
    9. 'n' → logprob: -16.13882064819336
    10. '(length' → logprob: -16.76382064819336

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032231067307293415
    2. '):
' → logprob: -6.128222942352295
    3. ')' → logprob: -7.128222942352295
    4. ' ):' → logprob: -8.628223419189453
    5. ':' → logprob: -10.628223419189453
    6. '):
' → logprob: -11.003223419189453
    7. '):

' → logprob: -12.128223419189453
    8. '=' → logprob: -12.753223419189453
    9. '**' → logprob: -14.003223419189453
    10. '>' → logprob: -14.253223419189453

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4532869756221771
    2. ' if' → logprob: -1.0782870054244995
    3. 'if' → logprob: -4.703287124633789
    4. ' ' → logprob: -4.828287124633789
    5. ' "' → logprob: -6.703287124633789
    6. ''' → logprob: -6.828287124633789
    7. '<|end|>' → logprob: -6.953287124633789
    8. '"' → logprob: -7.203287124633789
    9. '    
' → logprob: -7.453287124633789
    10. ' 
' → logprob: -7.953287124633789

Token 32: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0621908903121948
    2. 'if' (adapté à ' if') → logprob: -1.0621908903121948
    3. ' if' → logprob: -1.4371908903121948
    4. 's' → logprob: -4.062191009521484
    5. ''' → logprob: -4.437191009521484
    6. ' ans' → logprob: -4.562191009521484
    7. 'ans' → logprob: -5.062191009521484
    8. '_' → logprob: -5.312191009521484
    9. '"' → logprob: -5.312191009521484
    10. 'a' → logprob: -5.687191009521484

Token 33: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.020562907680869102
    2. 's' → logprob: -4.020563125610352
    3. ' i' → logprob: -6.145563125610352
    4. 'i' → logprob: -8.770563125610352
    5. ' ' → logprob: -9.395563125610352
    6. '   ' → logprob: -10.645563125610352
    7. '  ' → logprob: -13.020563125610352
    8. '    ' → logprob: -13.395563125610352
    9. ' ' → logprob: -14.770563125610352
    10. '	s' → logprob: -15.270563125610352

Token 34: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011439072113716975
    2. '[' → logprob: -9.125114440917969
    3. '[k' → logprob: -12.750114440917969
    4. '[j' → logprob: -14.000114440917969
    5. '[I' → logprob: -14.250114440917969
    6. '[int' → logprob: -15.875114440917969
    7. '[index' → logprob: -16.00011444091797
    8. '[n' → logprob: -16.00011444091797
    9. '[user' → logprob: -16.50011444091797
    10. '[a' → logprob: -16.62511444091797

Token 35: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.028271852061152458
    2. ' ==' → logprob: -3.6532719135284424
    3. '=' → logprob: -7.278271675109863
    4. ']==' → logprob: -7.403271675109863
    5. '!=' → logprob: -8.153271675109863
    6. ')==' → logprob: -9.278271675109863
    7. '```' → logprob: -9.778271675109863
    8. ')' → logprob: -9.903271675109863
    9. '   ' → logprob: -10.653271675109863
    10. '']==' → logprob: -10.778271675109863

Token 36: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016655802726745605
    2. ' ==' → logprob: -4.141655921936035
    3. '!=' → logprob: -8.016655921936035
    4. '=' → logprob: -8.391655921936035
    5. '```' → logprob: -11.516655921936035
    6. ']==' → logprob: -11.891655921936035
    7. ' !=' → logprob: -12.266655921936035
    8. '===' → logprob: -12.641655921936035
    9. '   ' → logprob: -12.704155921936035
    10. 'c' → logprob: -12.829155921936035

Token 37: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005941121373325586
    2. ' c' → logprob: -5.130940914154053
    3. ' ' → logprob: -11.380941390991211
    4. '	c' → logprob: -14.880941390991211
    5. '  ' → logprob: -15.005941390991211
    6. '   ' → logprob: -15.380941390991211
    7. ')c' → logprob: -15.380941390991211
    8. ' ' → logprob: -17.50594139099121
    9. '```' → logprob: -17.88094139099121
    10. '<|end|>' → logprob: -18.38094139099121

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25601959228515625
    2. 'else' → logprob: -2.7560195922851562
    3. ' else' → logprob: -2.8810195922851562
    4. ')' → logprob: -4.131019592285156
    5. 'ans' → logprob: -4.256019592285156
    6. '<|end|>' → logprob: -4.381019592285156
    7. '.' → logprob: -4.506019592285156
    8. '.lower' → logprob: -4.506019592285156
    9. ':
' → logprob: -4.756019592285156
    10. 's' → logprob: -5.006019592285156

Token 39: '       ' (ID: 309)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.6865437030792236
    2. '"*' → logprob: -1.0615437030792236
    3. 'ans' → logprob: -2.4365437030792236
    4. '"' → logprob: -3.3115437030792236
    5. '`' → logprob: -5.3115434646606445
    6. '".' → logprob: -5.8115434646606445
    7. 's' → logprob: -5.8115434646606445
    8. 'aster' → logprob: -5.8115434646606445
    9. '.' → logprob: -5.9365434646606445
    10. '*' → logprob: -6.5615434646606445

Token 40: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.471122145652771
    2. '.' → logprob: -1.596122145652771
    3. '*' → logprob: -2.7211222648620605
    4. ''*' → logprob: -3.3461222648620605
    5. ''.' → logprob: -4.0961222648620605
    6. '".' → logprob: -4.3461222648620605
    7. '"*' → logprob: -4.7211222648620605
    8. '#' → logprob: -5.0961222648620605
    9. 'print' → logprob: -5.3461222648620605
    10. '"' → logprob: -5.3461222648620605

Token 41: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5773190855979919
    2. ' +=' → logprob: -0.8273190855979919
    3. '+' → logprob: -6.952319145202637
    4. '+='' → logprob: -8.077319145202637
    5. '+="' → logprob: -9.577319145202637
    6. ' +' → logprob: -11.202319145202637
    7. '+=(' → logprob: -11.202319145202637
    8. '.append' → logprob: -11.577319145202637
    9. ']+=' → logprob: -12.452319145202637
    10. '=' → logprob: -14.202319145202637

Token 42: ' "*' (ID: 32458)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.14259514212608337
    2. '"*' → logprob: -2.392595052719116
    3. '"' → logprob: -4.017595291137695
    4. ''.' → logprob: -4.642595291137695
    5. 's' → logprob: -4.767595291137695
    6. '".' → logprob: -5.642595291137695
    7. '"."' → logprob: -6.642595291137695
    8. ''' → logprob: -9.267595291137695
    9. '"s' → logprob: -9.392595291137695
    10. '.' → logprob: -9.392595291137695

Token 43: '"
' (ID: 1092)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08672283589839935
    2. '*' → logprob: -3.0867228507995605
    3. '"' → logprob: -3.7117228507995605
    4. '<|end|>' → logprob: -4.5867228507995605
    5. '")' → logprob: -7.3367228507995605
    6. '<|end|>' → logprob: -7.7117228507995605
    7. '#' → logprob: -8.211722373962402
    8. '"*' → logprob: -8.336722373962402
    9. '*s' → logprob: -8.461722373962402
    10. '```' → logprob: -8.836722373962402

Token 44: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0040201107040047646
    2. '*' → logprob: -5.8790202140808105
    3. ' else' → logprob: -6.7540202140808105
    4. 's' → logprob: -11.129019737243652
    5. 'ans' → logprob: -11.379019737243652
    6. 'elif' → logprob: -11.879019737243652
    7. '```' → logprob: -12.629019737243652
    8. 'print' → logprob: -12.879019737243652
    9. '`' → logprob: -12.879019737243652
    10. '*
' → logprob: -13.379019737243652

Token 45: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.001289640087634325
    2. '*' → logprob: -7.0012898445129395
    3. ' else' → logprob: -8.001289367675781
    4. '   ' → logprob: -11.126289367675781
    5. 'elif' → logprob: -12.126289367675781
    6. 'e' → logprob: -12.251289367675781
    7. '+' → logprob: -12.251289367675781
    8. '#' → logprob: -12.626289367675781
    9. '```' → logprob: -13.001289367675781
    10. 's' → logprob: -13.126289367675781

Token 46: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2505643665790558
    2. 'ans' → logprob: -2.2505643367767334
    3. '*' → logprob: -2.6255643367767334
    4. 's' → logprob: -4.5005645751953125
    5. '       ' → logprob: -5.0005645751953125
    6. ' ans' → logprob: -5.1255645751953125
    7. '"' → logprob: -5.1255645751953125
    8. 'print' → logprob: -5.3755645751953125
    9. '  ' → logprob: -6.2505645751953125
    10. '+' → logprob: -6.6255645751953125

Token 47: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.033287163823843
    2. '*' → logprob: -3.5332870483398438
    3. '   ' → logprob: -6.658287048339844
    4. 'print' → logprob: -6.908287048339844
    5. ' ans' → logprob: -7.408287048339844
    6. '	ans' → logprob: -7.783287048339844
    7. '(ans' → logprob: -10.283287048339844
    8. '*
' → logprob: -10.408287048339844
    9. '`' → logprob: -10.533287048339844
    10. 's' → logprob: -10.908287048339844

Token 48: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.002967238426208496
    2. '*' → logprob: -5.877967357635498
    3. 's' → logprob: -9.75296688079834
    4. ' ans' → logprob: -9.87796688079834
    5. '	ans' → logprob: -11.37796688079834
    6. '"*' → logprob: -11.50296688079834
    7. 'c' → logprob: -11.62796688079834
    8. '(ans' → logprob: -12.12796688079834
    9. 'print' → logprob: -12.12796688079834
    10. '   ' → logprob: -12.62796688079834

Token 49: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09607205539941788
    2. '+' → logprob: -2.59607195854187
    3. ' +=' → logprob: -4.096072196960449
    4. ' +' → logprob: -8.47107219696045
    5. '+="' → logprob: -9.47107219696045
    6. '+='' → logprob: -9.72107219696045
    7. '[' → logprob: -11.72107219696045
    8. ']+=' → logprob: -11.72107219696045
    9. ')' → logprob: -11.97107219696045
    10. '+
' → logprob: -12.09607219696045

Token 50: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03367209434509277
    2. 's' → logprob: -3.4086720943450928
    3. ' c' → logprob: -11.283672332763672
    4. '"' → logprob: -11.908672332763672
    5. '""' → logprob: -13.783672332763672
    6. '"s' → logprob: -13.908672332763672
    7. ' s' → logprob: -14.033672332763672
    8. '"""' → logprob: -14.158672332763672
    9. 'с' → logprob: -14.158672332763672
    10. '   ' → logprob: -14.283672332763672

Token 51: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000460935989394784
    2. '\n' → logprob: -8.500460624694824
    3. '
' → logprob: -9.000460624694824
    4. ' print' → logprob: -9.500460624694824
    5. '```' → logprob: -10.125460624694824
    6. ' 
' → logprob: -12.125460624694824
    7. '<|end|>' → logprob: -12.375460624694824
    8. '  
' → logprob: -13.250460624694824
    9. '"\' → logprob: -13.750460624694824
    10. '    
' → logprob: -13.750460624694824

Token 52: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.416665640543215e-05
    2. '
' → logprob: -10.50003433227539
    3. ' print' → logprob: -12.37503433227539
    4. '```' → logprob: -13.37503433227539
    5. ')
' → logprob: -16.12503433227539
    6. '\n' → logprob: -16.25003433227539
    7. ' 
' → logprob: -16.25003433227539
    8. '  
' → logprob: -16.25003433227539
    9. '<|end|>' → logprob: -16.25003433227539
    10. '#print' → logprob: -16.50003433227539

Token 53: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.06199951097369194
    2. '(' → logprob: -2.811999559402466
    3. '()' → logprob: -11.061999320983887
    4. '("("' → logprob: -11.561999320983887
    5. 'ans' → logprob: -12.561999320983887
    6. '('' → logprob: -13.811999320983887
    7. '(answer' → logprob: -14.686999320983887
    8. '(an' → logprob: -15.186999320983887
    9. '(len' → logprob: -15.311999320983887
    10. ' (' → logprob: -15.436999320983887

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.250000953674316
    3. '))' → logprob: -15.750000953674316
    4. '")' → logprob: -17.125
    5. '`)' → logprob: -17.25
    6. '')' → logprob: -17.25
    7. ')`' → logprob: -17.5
    8. '）' → logprob: -19.0
    9. ')
' → logprob: -19.125
    10. '#' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 30.77%
Précision (top 10): 69.23%
================================================================================
