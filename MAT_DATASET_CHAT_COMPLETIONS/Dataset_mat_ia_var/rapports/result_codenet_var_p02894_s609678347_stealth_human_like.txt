================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

# nombres d'éléments et paramètre L : c'est pas super clair, mais bon
N, L = map(int, input().split())
S = N * (N - 1) * (N - 2) / 6    # nombre de combinaisons de 3 éléments ? 

# On stocke les "T" (peut-être des angles, qui sait)
T = []
for i in range(N):
    x = int(input())
    # on convertit en radians (je crois ?)
    T.append(x * math.pi / L)

# on fait la somme des cosinus pondérés
S1 = 0.0
for i in range(N):
    for j in range(i+1, N):
        # je suis pas sûr que ça soit optimal, mais bon...
        S1 += math.cos(T[i] + T[j]) * (N + 2 * (i - j))

# On fait pareil avec sin (copié/collé...)
S2 = 0
for i in range(N):
    for j in range(i+1, N):
        S2 += math.sin(T[i] + T[j]) * (N + 2 * (i - j))

# Affichage du résultat final, séparé par un espace (pas très lisible ça)
print(S1/S, S2/S)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.289473822107539e-05
    2. 'import' → logprob: -11.625062942504883
    3. '```' → logprob: -11.625062942504883
    4. '\' → logprob: -11.875062942504883
    5. '<|end|>' → logprob: -12.375062942504883
    6. '.\' → logprob: -12.500062942504883
    7. '.pi' → logprob: -12.625062942504883
    8. '.e' → logprob: -12.625062942504883
    9. '\n' → logprob: -12.875062942504883
    10. 'def' → logprob: -13.250062942504883

Token 4: ' nombres' (ID: 76205)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06484323740005493
    2. ' Calculate' → logprob: -3.68984317779541
    3. ' def' → logprob: -4.81484317779541
    4. ' factorial' → logprob: -5.18984317779541
    5. ' calculate' → logprob: -5.56484317779541
    6. 'Calculate' → logprob: -6.06484317779541
    7. ' calculates' → logprob: -6.31484317779541
    8. ' Calcul' → logprob: -6.31484317779541
    9. ' This' → logprob: -6.56484317779541
    10. ' function' → logprob: -6.68984317779541

Token 5: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19744934141635895
    2. ' =' → logprob: -2.0724494457244873
    3. 's' → logprob: -3.0724494457244873
    4. '=' → logprob: -5.822449207305908
    5. ' ' → logprob: -6.697449207305908
    6. '_s' → logprob: -7.197449207305908
    7. '_ent' → logprob: -7.822449207305908
    8. '_=' → logprob: -7.822449207305908
    9. 'es' → logprob: -8.822449684143066
    10. '_con' → logprob: -8.822449684143066

Token 6: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08426326513290405
    2. 'é' → logprob: -2.709263324737549
    3. ''é' → logprob: -4.959263324737549
    4. ''' → logprob: -6.084263324737549
    5. ''e' → logprob: -6.084263324737549
    6. '_' → logprob: -7.209263324737549
    7. 'u' → logprob: -7.709263324737549
    8. 'éf' → logprob: -8.08426284790039
    9. '_e' → logprob: -8.45926284790039
    10. 'r' → logprob: -8.58426284790039

Token 7: 'élé' (ID: 15228)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5813918113708496
    2. 'élé' → logprob: -1.0813918113708496
    3. 'éc' → logprob: -3.2063918113708496
    4. 'e' → logprob: -4.20639181137085
    5. 'év' → logprob: -4.20639181137085
    6. 'éf' → logprob: -5.20639181137085
    7. ''é' → logprob: -5.33139181137085
    8. ''' → logprob: -6.08139181137085
    9. 'éros' → logprob: -6.20639181137085
    10. 'él' → logprob: -6.33139181137085

Token 8: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0037087430246174335
    2. 'ment' → logprob: -6.128708839416504
    3. 'm' → logprob: -6.628708839416504
    4. 'mé' → logprob: -9.878708839416504
    5. 'éments' → logprob: -9.878708839416504
    6. '```' → logprob: -10.628708839416504
    7. 'ements' → logprob: -10.753708839416504
    8. 'me' → logprob: -10.753708839416504
    9. '#' → logprob: -12.128708839416504
    10. 'v' → logprob: -12.253708839416504

Token 9: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9889557361602783
    2. '_' → logprob: -1.1139557361602783
    3. '=' → logprob: -1.9889557361602783
    4. ' ' → logprob: -2.2389557361602783
    5. 'n' → logprob: -3.6139557361602783
    6. 's' → logprob: -4.363955497741699
    7. 'elements' → logprob: -6.113955497741699
    8. 'space' → logprob: -6.238955497741699
    9. '#' → logprob: -6.738955497741699
    10. 'total' → logprob: -6.863955497741699

Token 10: ' param' (ID: 3802)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.333457589149475
    2. 'd' → logprob: -1.958457589149475
    3. 'le' → logprob: -2.5834574699401855
    4. '#' → logprob: -2.5834574699401855
    5. 'leur' → logprob: -2.5834574699401855
    6. 'élé' → logprob: -2.7084574699401855
    7. ' de' → logprob: -2.8334574699401855
    8. 'val' → logprob: -3.0834574699401855
    9. 'leurs' → logprob: -3.2084574699401855
    10. ' d' → logprob: -3.7084574699401855

Token 11: 'ètre' (ID: 60948)
  Prédit: 'ètres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètres' → logprob: -0.25984546542167664
    2. 'è' → logprob: -2.009845495223999
    3. 'ètre' → logprob: -2.634845495223999
    4. '=' → logprob: -4.25984525680542
    5. 'étr' → logprob: -6.38484525680542
    6. 'êtres' → logprob: -6.63484525680542
    7. 'é' → logprob: -6.75984525680542
    8. 's' → logprob: -7.13484525680542
    9. ' =' → logprob: -7.38484525680542
    10. '#' → logprob: -7.75984525680542

Token 12: ' L' (ID: 451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.45153525471687317
    2. ' =' → logprob: -1.2015352249145508
    3. '=' → logprob: -3.326535224914551
    4. '_' → logprob: -4.326535224914551
    5. ' :' → logprob: -6.201535224914551
    6. ':' → logprob: -6.451535224914551
    7. 'n' → logprob: -6.451535224914551
    8. '_s' → logprob: -6.576535224914551
    9. 'import' → logprob: -6.826535224914551
    10. ' s' → logprob: -6.951535224914551

Token 13: ' :' (ID: 712)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12213610857725143
    2. '=' → logprob: -3.747136116027832
    3. '_n' → logprob: -3.997136116027832
    4. '_' → logprob: -3.997136116027832
    5. ' =' → logprob: -3.997136116027832
    6. 's' → logprob: -4.247136116027832
    7. '```' → logprob: -5.372136116027832
    8. 'L' → logprob: -5.747136116027832
    9. '#' → logprob: -5.872136116027832
    10. ',' → logprob: -6.247136116027832

Token 14: ' c' (ID: 274)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13596457242965698
    2. ' n' → logprob: -2.1359646320343018
    3. '`' → logprob: -5.760964393615723
    4. '```' → logprob: -5.885964393615723
    5. ' `' → logprob: -7.760964393615723
    6. ' N' → logprob: -7.885964393615723
    7. ' L' → logprob: -7.885964393615723
    8. 'N' → logprob: -8.135964393615723
    9. 'L' → logprob: -8.260964393615723
    10. 'elements' → logprob: -8.385964393615723

Token 15: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6132649779319763
    2. ' =' → logprob: -0.9882649779319763
    3. '_' → logprob: -3.613265037536621
    4. 'c' → logprob: -4.863265037536621
    5. 'o' → logprob: -4.988265037536621
    6. '_c' → logprob: -5.363265037536621
    7. 'on' → logprob: -5.488265037536621
    8. '#' → logprob: -5.613265037536621
    9. 'ont' → logprob: -5.738265037536621
    10. 'ode' → logprob: -5.863265037536621

Token 16: ' pas' (ID: 2173)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.150832176208496
    2. ' un' → logprob: -2.025832176208496
    3. 'le' → logprob: -2.400832176208496
    4. ' le' → logprob: -2.525832176208496
    5. ' une' → logprob: -3.275832176208496
    6. '=' → logprob: -3.275832176208496
    7. 'une' → logprob: -3.275832176208496
    8. '-à' → logprob: -3.400832176208496
    9. 'à' → logprob: -3.650832176208496
    10. 'égal' → logprob: -3.775832176208496

Token 17: ' super' (ID: 2539)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.1888927221298218
    2. 'com' → logprob: -2.3138928413391113
    3. 'clair' → logprob: -2.6888928413391113
    4. 'le' → logprob: -2.9388928413391113
    5. 'la' → logprob: -3.0638928413391113
    6. 'un' → logprob: -3.3138928413391113
    7. 'une' → logprob: -3.5638928413391113
    8. ' possible' → logprob: -3.6888928413391113
    9. '#' → logprob: -3.8138928413391113
    10. 'bon' → logprob: -4.063892841339111

Token 18: ' clair' (ID: 71396)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42128995060920715
    2. ',' → logprob: -1.5462899208068848
    3. ' ' → logprob: -2.4212899208068848
    4. '=' → logprob: -4.671289920806885
    5. '.' → logprob: -4.671289920806885
    6. '#' → logprob: -5.421289920806885
    7. ')' → logprob: -5.671289920806885
    8. ' =' → logprob: -5.671289920806885
    9. 's' → logprob: -6.046289920806885
    10. 'e' → logprob: -6.296289920806885

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1757405400276184
    2. '#' → logprob: -2.4257404804229736
    3. '.' → logprob: -3.6757404804229736
    4. ' ' → logprob: -3.8007404804229736
    5. '_' → logprob: -4.800740718841553
    6. ',
' → logprob: -5.675740718841553
    7. 's' → logprob: -6.175740718841553
    8. 'n' → logprob: -6.550740718841553
    9. '\' → logprob: -6.675740718841553
    10. ' ,' → logprob: -6.675740718841553

Token 20: ' mais' (ID: 2899)
  Prédit: ' mais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.535938560962677
    2. ' ' → logprob: -1.4109385013580322
    3. ' but' → logprob: -2.9109385013580322
    4. '#' → logprob: -3.4109385013580322
    5. ' #' → logprob: -3.6609385013580322
    6. ' je' → logprob: -3.6609385013580322
    7. ',' → logprob: -4.660938739776611
    8. ' ' → logprob: -5.285938739776611
    9. ' donc' → logprob: -5.660938739776611
    10. 'mais' → logprob: -5.785938739776611

Token 21: ' bon' (ID: 4846)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.3012019395828247
    2. 'on' → logprob: -1.8012019395828247
    3. ' je' → logprob: -1.8012019395828247
    4. 'je' → logprob: -2.551201820373535
    5. '#' → logprob: -2.676201820373535
    6. 'cela' → logprob: -2.926201820373535
    7. ' la' → logprob: -3.426201820373535
    8. ' c' → logprob: -3.676201820373535
    9. 'ça' → logprob: -4.051201820373535
    10. ' ça' → logprob: -4.426201820373535

Token 22: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37723851203918457
    2. '#' → logprob: -1.8772385120391846
    3. '.' → logprob: -3.5022385120391846
    4. '\' → logprob: -3.6272385120391846
    5. '
' → logprob: -3.7522385120391846
    6. 'n' → logprob: -3.8772385120391846
    7. '```' → logprob: -4.5022382736206055
    8. 'import' → logprob: -5.2522382736206055
    9. '_' → logprob: -5.3772382736206055
    10. ',
' → logprob: -5.5022382736206055

Token 23: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3577900528907776
    2. ',' → logprob: -2.732789993286133
    3. 'x' → logprob: -2.732789993286133
    4. '```' → logprob: -3.357789993286133
    5. 'a' → logprob: -3.482789993286133
    6. 'def' → logprob: -3.982789993286133
    7. '#' → logprob: -4.232789993286133
    8. ' ' → logprob: -4.857789993286133
    9. ' n' → logprob: -4.982789993286133
    10. '`' → logprob: -4.982789993286133

Token 24: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06481150537729263
    2. ' =' → logprob: -3.0648114681243896
    3. ',' → logprob: -4.939811706542969
    4. '_elements' → logprob: -6.189811706542969
    5. ' _' → logprob: -6.564811706542969
    6. ')' → logprob: -6.564811706542969
    7. 'b' → logprob: -7.189811706542969
    8. '_e' → logprob: -7.439811706542969
    9. '=' → logprob: -7.689811706542969
    10. '_space' → logprob: -7.939811706542969

Token 25: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.25662729144096375
    2. 'L' → logprob: -1.5066273212432861
    3. ' ' → logprob: -5.631627082824707
    4. ' =' → logprob: -8.131627082824707
    5. 'space' → logprob: -8.631627082824707
    6. ' M' → logprob: -9.506627082824707
    7. '=' → logprob: -9.506627082824707
    8. ' K' → logprob: -9.881627082824707
    9. '  ' → logprob: -10.256627082824707
    10. 'M' → logprob: -10.256627082824707

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14277301728725433
    2. '=' → logprob: -2.017772912979126
    3. ',' → logprob: -9.392772674560547
    4. ')' → logprob: -12.267772674560547
    5. ' ' → logprob: -12.767772674560547
    6. ' =
' → logprob: -13.017772674560547
    7. ' ,' → logprob: -13.642772674560547
    8. '<|end|>' → logprob: -13.892772674560547
    9. '=

' → logprob: -14.142772674560547
    10. '  ' → logprob: -15.392772674560547

Token 27: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1872468739748001
    2. '10' → logprob: -2.062246799468994
    3. '20' → logprob: -4.187246799468994
    4. '100' → logprob: -4.312246799468994
    5. '50' → logprob: -4.812246799468994
    6. '5' → logprob: -6.187246799468994
    7. '30' → logprob: -6.937246799468994
    8. '40' → logprob: -6.937246799468994
    9. '16' → logprob: -7.562246799468994
    10. '15' → logprob: -7.937246799468994

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.21312306821346283
    2. '(' → logprob: -1.838123083114624
    3. '(lambda' → logprob: -3.838123083114624
    4. '(str' → logprob: -4.588122844696045
    5. 'int' → logprob: -8.588123321533203
    6. '(
' → logprob: -8.588123321533203
    7. '<|end|>' → logprob: -8.838123321533203
    8. ' (' → logprob: -8.838123321533203
    9. '(input' → logprob: -9.088123321533203
    10. '[int' → logprob: -10.088123321533203

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013491827063262463
    2. ')' → logprob: -4.513491630554199
    3. '(' → logprob: -6.388491630554199
    4. 'input' → logprob: -7.388491630554199
    5. ',input' → logprob: -10.0134916305542
    6. ')(' → logprob: -10.1384916305542
    7. '=input' → logprob: -11.0134916305542
    8. ' input' → logprob: -11.1384916305542
    9. ' (' → logprob: -12.0134916305542
    10. ',' → logprob: -12.5134916305542

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16028931736946106
    2. ' input' → logprob: -1.9102892875671387
    3. ')' → logprob: -9.910289764404297
    4. '(input' → logprob: -11.410289764404297
    5. '=input' → logprob: -13.035289764404297
    6. ',input' → logprob: -13.910289764404297
    7. ' )' → logprob: -14.785289764404297
    8. '	input' → logprob: -14.910289764404297
    9. '```' → logprob: -15.910289764404297
    10. '_input' → logprob: -16.160289764404297

Token 31: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32647469639778137
    2. '())' → logprob: -1.576474666595459
    3. '().' → logprob: -2.701474666595459
    4. '());' → logprob: -6.451474666595459
    5. ')' → logprob: -6.826474666595459
    6. '(' → logprob: -7.701474666595459
    7. '()))' → logprob: -7.701474666595459
    8. '()>' → logprob: -8.576475143432617
    9. '()-' → logprob: -8.576475143432617
    10. '()),' → logprob: -8.951475143432617

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001596771035110578
    2. 'strip' → logprob: -8.75015926361084
    3. ' split' → logprob: -14.37515926361084
    4. 'rstrip' → logprob: -14.62515926361084
    5. '(split' → logprob: -16.125160217285156
    6. 'spl' → logprob: -16.750160217285156
    7. 'read' → logprob: -19.125160217285156
    8. ')' → logprob: -19.875160217285156
    9. 'replace' → logprob: -20.375160217285156
    10. '```' → logprob: -21.250160217285156

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07818766683340073
    2. '())' → logprob: -3.0781877040863037
    3. '))' → logprob: -3.5781877040863037
    4. '()' → logprob: -7.328187465667725
    5. '()))' → logprob: -8.203187942504883
    6. '('' → logprob: -8.578187942504883
    7. '(' → logprob: -9.953187942504883
    8. '),' → logprob: -11.078187942504883
    9. '`)' → logprob: -11.828187942504883
    10. '(""))' → logprob: -12.078187942504883

Token 34: 'S' (ID: 50)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33036234974861145
    2. 'n' → logprob: -2.830362319946289
    3. 'a' → logprob: -3.080362319946289
    4. '\n' → logprob: -3.330362319946289
    5. ')' → logprob: -3.580362319946289
    6. 'data' → logprob: -3.705362319946289
    7. '
' → logprob: -4.455362319946289
    8. '' → logprob: -4.705362319946289
    9. 'x' → logprob: -4.705362319946289
    10. '[' → logprob: -4.955362319946289

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25252193212509155
    2. '=' → logprob: -1.5025219917297363
    3. '.' → logprob: -8.752521514892578
    4. ' ' → logprob: -8.877521514892578
    5. '=input' → logprob: -9.252521514892578
    6. ',' → logprob: -9.877521514892578
    7. '_' → logprob: -11.127521514892578
    8. 's' → logprob: -11.377521514892578
    9. '```' → logprob: -11.377521514892578
    10. '=int' → logprob: -11.502521514892578

Token 36: ' N' (ID: 478)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6382007598876953
    2. 'input' → logprob: -0.7632007598876953
    3. '[input' → logprob: -6.388200759887695
    4. ' [' → logprob: -7.013200759887695
    5. ' list' → logprob: -7.388200759887695
    6. '"' → logprob: -7.513200759887695
    7. ' ' → logprob: -7.638200759887695
    8. '[' → logprob: -7.638200759887695
    9. 'list' → logprob: -8.388200759887695
    10. ' math' → logprob: -8.763200759887695

Token 37: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8713992834091187
    2. '*' → logprob: -1.8713992834091187
    3. '**' → logprob: -1.9963992834091187
    4. '-' → logprob: -2.621399402618408
    5. ' *' → logprob: -2.746399402618408
    6. ' +' → logprob: -3.371399402618408
    7. '[' → logprob: -3.871399402618408
    8. '.' → logprob: -3.996399402618408
    9. ' **' → logprob: -4.246399402618408
    10. ' ' → logprob: -4.246399402618408

Token 38: ' (' (ID: 350)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.46721091866493225
    2. ' L' → logprob: -1.3422108888626099
    3. ' math' → logprob: -3.2172110080718994
    4. 'math' → logprob: -3.2172110080718994
    5. '2' → logprob: -4.46721076965332
    6. ' (' → logprob: -5.09221076965332
    7. '(' → logprob: -5.71721076965332
    8. ' ' → logprob: -5.71721076965332
    9. '(math' → logprob: -6.84221076965332
    10. '(L' → logprob: -6.84221076965332

Token 39: 'N' (ID: 45)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07299509644508362
    2. ' L' → logprob: -3.947995185852051
    3. 'math' → logprob: -4.447995185852051
    4. '2' → logprob: -4.572995185852051
    5. 'N' → logprob: -4.822995185852051
    6. ' math' → logprob: -5.072995185852051
    7. ' (' → logprob: -5.447995185852051
    8. '(L' → logprob: -5.447995185852051
    9. '(' → logprob: -6.322995185852051
    10. '1' → logprob: -6.822995185852051

Token 40: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4015099108219147
    2. ' -' → logprob: -1.4015098810195923
    3. '+' → logprob: -2.776510000228882
    4. ' +' → logprob: -3.901510000228882
    5. '*' → logprob: -7.401509761810303
    6. ')' → logprob: -7.526509761810303
    7. ' *' → logprob: -8.526510238647461
    8. '**' → logprob: -9.026510238647461
    9. ' )' → logprob: -9.151510238647461
    10. ' ' → logprob: -9.276510238647461

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04308369383215904
    2. ' ' → logprob: -3.168083667755127
    3. ')' → logprob: -10.043084144592285
    4. '<|end|>' → logprob: -10.543084144592285
    5. ' ' → logprob: -12.980584144592285
    6. ' )' → logprob: -13.355584144592285
    7. '2' → logprob: -13.480584144592285
    8. '
' → logprob: -13.793084144592285
    9. '<|end|>' → logprob: -13.793084144592285
    10. '```' → logprob: -14.230584144592285

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.957014556974173e-05
    2. ' ' → logprob: -9.625069618225098
    3. '2' → logprob: -13.250069618225098
    4. ')' → logprob: -15.562569618225098
    5. '3' → logprob: -15.750069618225098
    6. '```' → logprob: -15.937569618225098
    7. '

' → logprob: -16.06256866455078
    8. '0' → logprob: -16.62506866455078
    9. '<|end|>' → logprob: -16.68756866455078
    10. '
' → logprob: -16.68756866455078

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016789326444268227
    2. ' )' → logprob: -4.391789436340332
    3. '//' → logprob: -6.391789436340332
    4. ' //' → logprob: -6.516789436340332
    5. ')//' → logprob: -7.141789436340332
    6. ')/' → logprob: -8.891789436340332
    7. '*' → logprob: -9.766789436340332
    8. ' /' → logprob: -10.391789436340332
    9. ' ' → logprob: -10.766789436340332
    10. '/' → logprob: -10.891789436340332

Token 44: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5833068490028381
    2. '//' → logprob: -1.5833067893981934
    3. ' *' → logprob: -2.0833067893981934
    4. ' /' → logprob: -2.4583067893981934
    5. ' ' → logprob: -4.833306789398193
    6. '/' → logprob: -4.958306789398193
    7. '*' → logprob: -5.208306789398193
    8. ')' → logprob: -5.458306789398193
    9. ' +' → logprob: -7.458306789398193
    10. '#' → logprob: -8.770807266235352

Token 45: ' (' (ID: 350)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.696800172328949
    2. 'L' → logprob: -0.821800172328949
    3. ' math' → logprob: -3.8218002319335938
    4. ' (' → logprob: -4.321800231933594
    5. '(' → logprob: -4.446800231933594
    6. '2' → logprob: -5.071800231933594
    7. ' ' → logprob: -5.446800231933594
    8. 'math' → logprob: -6.196800231933594
    9. '(L' → logprob: -7.446800231933594
    10. '0' → logprob: -7.696800231933594

Token 46: 'N' (ID: 45)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.13294005393981934
    2. ' L' → logprob: -2.5079400539398193
    3. '(' → logprob: -4.632940292358398
    4. '2' → logprob: -5.007940292358398
    5. ' math' → logprob: -5.132940292358398
    6. '(L' → logprob: -5.507940292358398
    7. 'math' → logprob: -5.507940292358398
    8. 'N' → logprob: -5.757940292358398
    9. ' (' → logprob: -5.882940292358398
    10. ' ' → logprob: -6.632940292358398

Token 47: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1274966150522232
    2. '-' → logprob: -2.1274967193603516
    3. ' ' → logprob: -8.252496719360352
    4. ')' → logprob: -8.377496719360352
    5. ' )' → logprob: -10.752496719360352
    6. '**' → logprob: -11.252496719360352
    7. '*' → logprob: -11.502496719360352
    8. '1' → logprob: -11.752496719360352
    9. '```' → logprob: -12.377496719360352
    10. ' *' → logprob: -12.502496719360352

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7023982405662537
    2. '2' → logprob: -0.7023982405662537
    3. ' ' → logprob: -4.702398300170898
    4. ')' → logprob: -10.077398300170898
    5. '```' → logprob: -10.952398300170898
    6. '3' → logprob: -11.202398300170898
    7. '   ' → logprob: -11.514898300170898
    8. '  ' → logprob: -11.702398300170898
    9. '4' → logprob: -12.389898300170898
    10. ' ' → logprob: -12.639898300170898

Token 49: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5762602686882019
    2. '2' → logprob: -0.8262602686882019
    3. ' ' → logprob: -8.201260566711426
    4. '```' → logprob: -11.388760566711426
    5. ')' → logprob: -11.763760566711426
    6. '3' → logprob: -11.951260566711426
    7. '-' → logprob: -13.201260566711426
    8. '
' → logprob: -13.263760566711426
    9. '   ' → logprob: -13.388760566711426
    10. '  ' → logprob: -13.576260566711426

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02820996381342411
    2. ' )' → logprob: -3.653209924697876
    3. ' //' → logprob: -6.903210163116455
    4. '//' → logprob: -7.778210163116455
    5. ')//' → logprob: -7.903210163116455
    6. '*' → logprob: -10.528209686279297
    7. ' ' → logprob: -10.778209686279297
    8. ' *' → logprob: -10.903209686279297
    9. ')/' → logprob: -11.528209686279297
    10. ')**' → logprob: -11.528209686279297

Token 51: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.18306565284729
    2. ' ' → logprob: -1.43306565284729
    3. ' *' → logprob: -1.43306565284729
    4. ' /' → logprob: -1.93306565284729
    5. '//' → logprob: -3.43306565284729
    6. '*' → logprob: -3.93306565284729
    7. '**' → logprob: -5.308065414428711
    8. '<|end|>' → logprob: -5.433065414428711
    9. '/' → logprob: -5.683065414428711
    10. ' **' → logprob: -6.058065414428711

Token 52: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.10974741727113724
    2. ' ' → logprob: -2.3597474098205566
    3. '(' → logprob: -5.734747409820557
    4. '2' → logprob: -5.734747409820557
    5. '3' → logprob: -6.234747409820557
    6. ' (' → logprob: -7.234747409820557
    7. 'math' → logprob: -9.359747886657715
    8. ' math' → logprob: -9.609747886657715
    9. 'L' → logprob: -10.109747886657715
    10. '(L' → logprob: -10.234747886657715

Token 53: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.007350104860961437
    2. '3' → logprob: -5.507349967956543
    3. '2' → logprob: -6.507349967956543
    4. '(' → logprob: -7.132349967956543
    5. 'math' → logprob: -7.132349967956543
    6. ' ' → logprob: -9.632349967956543
    7. '(math' → logprob: -10.132349967956543
    8. 'L' → logprob: -11.007349967956543
    9. '```' → logprob: -11.007349967956543
    10. 'float' → logprob: -11.507349967956543

Token 54: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7787071466445923
    2. '<|end|>' → logprob: -1.0287071466445923
    3. '*' → logprob: -2.9037070274353027
    4. 'for' → logprob: -3.5287070274353027
    5. ')' → logprob: -3.7787070274353027
    6. 'print' → logprob: -4.153707027435303
    7. '+' → logprob: -4.528707027435303
    8. '#' → logprob: -4.778707027435303
    9. ' 
' → logprob: -5.153707027435303
    10. 'if' → logprob: -5.278707027435303

Token 55: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' nombre' (ID: 9733)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.9129881262779236
    2. 'L' → logprob: -1.9129881858825684
    3. ' S' → logprob: -1.9129881858825684
    4. ' ' → logprob: -2.9129881858825684
    5. 'S' → logprob: -2.9129881858825684
    6. '<|end|>' → logprob: -2.9129881858825684
    7. ' math' → logprob: -3.7879881858825684
    8. 'int' → logprob: -3.9129881858825684
    9. ' (' → logprob: -4.037988185882568
    10. ' N' → logprob: -4.162988185882568

Token 57: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.18890418112277985
    2. 'd' → logprob: -2.313904285430908
    3. ' de' → logprob: -3.813904285430908
    4. ' total' → logprob: -3.938904285430908
    5. 'total' → logprob: -4.813904285430908
    6. 'de' → logprob: -5.188904285430908
    7. 's' → logprob: -5.438904285430908
    8. ' ' → logprob: -5.438904285430908
    9. '<|end|>' → logprob: -5.438904285430908
    10. '_' → logprob: -6.813904285430908

Token 58: ' comb' (ID: 4134)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.7461536526679993
    2. ' trip' → logprob: -1.1211535930633545
    3. ' comb' → logprob: -2.7461535930633545
    4. 'tri' → logprob: -3.2461535930633545
    5. 'comb' → logprob: -3.3711535930633545
    6. 'tr' → logprob: -4.496153831481934
    7. ' triangles' → logprob: -4.621153831481934
    8. ' ' → logprob: -5.121153831481934
    9. 'com' → logprob: -5.121153831481934
    10. 's' → logprob: -5.121153831481934

Token 59: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.129057839512825
    2. 'ina' → logprob: -2.3790578842163086
    3. 'ais' → logprob: -3.6290578842163086
    4. 'a' → logprob: -7.379057884216309
    5. 'in' → logprob: -8.129057884216309
    6. 'inas' → logprob: -8.379057884216309
    7. '```' → logprob: -8.629057884216309
    8. '#' → logprob: -9.004057884216309
    9. 'i' → logprob: -9.129057884216309
    10. 's' → logprob: -10.254057884216309

Token 60: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.027623023837804794
    2. 'o' → logprob: -3.652622938156128
    3. 's' → logprob: -6.777623176574707
    4. 't' → logprob: -9.527623176574707
    5. 'on' → logprob: -9.652623176574707
    6. 'о' → logprob: -11.652623176574707
    7. '```' → logprob: -11.777623176574707
    8. '0' → logprob: -11.902623176574707
    9. 'sons' → logprob: -12.402623176574707
    10. '#' → logprob: -12.652623176574707

Token 61: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3807429075241089
    2. '<|end|>' → logprob: -1.3807429075241089
    3. ')' → logprob: -2.2557430267333984
    4. '#' → logprob: -2.3807430267333984
    5. '
' → logprob: -3.1307430267333984
    6. 'for' → logprob: -3.3807430267333984
    7. ',' → logprob: -3.5057430267333984
    8. '**' → logprob: -3.7557430267333984
    9. '+' → logprob: -4.130743026733398
    10. '\n' → logprob: -4.380743026733398

Token 62: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07664253562688828
    2. ' ' → logprob: -3.0766425132751465
    3. ' trois' → logprob: -4.0766425132751465
    4. 'N' → logprob: -5.4516425132751465
    5. 'élé' → logprob: -5.5766425132751465
    6. ' N' → logprob: -6.8266425132751465
    7. ' éléments' → logprob: -7.9516425132751465
    8. 'n' → logprob: -8.826642990112305
    9. 't' → logprob: -8.826642990112305
    10. 'tro' → logprob: -9.326642990112305

Token 63: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008904796093702316
    2. 'N' → logprob: -5.508904933929443
    3. 'élé' → logprob: -6.258904933929443
    4. 'S' → logprob: -7.133904933929443
    5. 'tro' → logprob: -7.383904933929443
    6. ' ' → logprob: -7.633904933929443
    7. 'n' → logprob: -8.508904457092285
    8. ' trois' → logprob: -8.758904457092285
    9. 's' → logprob: -9.008904457092285
    10. 'l' → logprob: -9.133904457092285

Token 64: ' éléments' (ID: 57375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' ?' (ID: 1423)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3303498029708862
    2. '#' → logprob: -1.9553498029708862
    3. '<|end|>' → logprob: -2.580349922180176
    4. '*' → logprob: -2.830349922180176
    5. 'for' → logprob: -3.205349922180176
    6. 'print' → logprob: -3.205349922180176
    7. ',' → logprob: -3.455349922180176
    8. ')' → logprob: -3.455349922180176
    9. 'if' → logprob: -3.455349922180176
    10. '**' → logprob: -3.580349922180176

Token 66: ' 

' (ID: 1202)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5004420280456543
    2. '\n' → logprob: -2.1254420280456543
    3. '
' → logprob: -2.2504420280456543
    4. '' → logprob: -2.6254420280456543
    5. ' 

' → logprob: -2.6254420280456543
    6. '*' → logprob: -2.6254420280456543
    7. ' 
' → logprob: -3.2504420280456543
    8. '#' → logprob: -3.3754420280456543
    9. '

' → logprob: -3.3754420280456543
    10. '\' → logprob: -3.6254420280456543

Token 67: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5684249997138977
    2. '\n' → logprob: -1.443424940109253
    3. '' → logprob: -3.068424940109253
    4. '
' → logprob: -3.318424940109253
    5. '\' → logprob: -3.818424940109253
    6. '#' → logprob: -4.193425178527832
    7. 'for' → logprob: -4.318425178527832
    8. 'print' → logprob: -4.443425178527832
    9. '```' → logprob: -4.693425178527832
    10. 'def' → logprob: -5.443425178527832

Token 68: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6856933236122131
    2. ' for' → logprob: -1.4356932640075684
    3. 'result' → logprob: -3.0606932640075684
    4. ' result' → logprob: -3.9356932640075684
    5. '#' → logprob: -4.185693264007568
    6. 'L' → logprob: -4.560693264007568
    7. ' ans' → logprob: -4.685693264007568
    8. 'S' → logprob: -4.810693264007568
    9. 'C' → logprob: -4.810693264007568
    10. 's' → logprob: -4.935693264007568

Token 69: ' stock' (ID: 6546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6505809426307678
    2. 'for' → logprob: -1.775580883026123
    3. '=' → logprob: -2.025580883026123
    4. ' continue' → logprob: -3.275580883026123
    5. ' for' → logprob: -3.400580883026123
    6. 'continue' → logprob: -3.775580883026123
    7. ' va' → logprob: -4.775580883026123
    8. '#' → logprob: -5.150580883026123
    9. ' a' → logprob: -5.275580883026123
    10. ' veut' → logprob: -5.400580883026123

Token 70: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16601771116256714
    2. 'age' → logprob: -2.291017770767212
    3. 'er' → logprob: -3.041017770767212
    4. 'a' → logprob: -6.291017532348633
    5. 's' → logprob: -7.291017532348633
    6. ' =' → logprob: -8.541017532348633
    7. 'r' → logprob: -8.541017532348633
    8. '_' → logprob: -8.791017532348633
    9. '=' → logprob: -8.791017532348633
    10. 'ait' → logprob: -9.291017532348633

Token 71: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2541782259941101
    2. 'les' → logprob: -2.129178285598755
    3. ' la' → logprob: -3.629178285598755
    4. ' des' → logprob: -4.004178047180176
    5. 's' → logprob: -4.629178047180176
    6. ' ' → logprob: -4.754178047180176
    7. ' une' → logprob: -5.004178047180176
    8. '_' → logprob: -5.129178047180176
    9. ' l' → logprob: -5.379178047180176
    10. 'l' → logprob: -5.879178047180176

Token 72: ' "' (ID: 392)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.3489537239074707
    2. ' points' → logprob: -2.8489537239074707
    3. ' trip' → logprob: -2.9739537239074707
    4. ' valeurs' → logprob: -3.8489537239074707
    5. ' positions' → logprob: -3.9739537239074707
    6. ' scores' → logprob: -4.223953723907471
    7. 'positions' → logprob: -4.348953723907471
    8. ' angles' → logprob: -4.536453723907471
    9. 'dist' → logprob: -4.973953723907471
    10. 'points' → logprob: -5.223953723907471

Token 73: 'T' (ID: 51)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -2.1195409297943115
    2. ' distances' → logprob: -2.3695409297943115
    3. ' trip' → logprob: -2.6195409297943115
    4. 'dist' → logprob: -2.6195409297943115
    5. 'positions' → logprob: -2.7445409297943115
    6. 'points' → logprob: -2.8695409297943115
    7. 'élé' → logprob: -2.9320409297943115
    8. 'val' → logprob: -3.2445409297943115
    9. 'coeff' → logprob: -3.4320409297943115
    10. 'angles' → logprob: -3.7445409297943115

Token 74: '"' (ID: 1)
  Prédit: 'ri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ri' → logprob: -0.8861077427864075
    2. 'riangle' → logprob: -1.6361076831817627
    3. 'r' → logprob: -1.8861076831817627
    4. 'rip' → logprob: -3.2611076831817627
    5. '_' → logprob: -3.6361076831817627
    6. 'uples' → logprob: -3.7611076831817627
    7. 'a' → logprob: -4.136107921600342
    8. 'i' → logprob: -4.448607921600342
    9. '"' → logprob: -4.823607921600342
    10. ' "' → logprob: -5.261107921600342

Token 75: ' (' (ID: 350)
  Prédit: 'uples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uples' → logprob: -1.6291667222976685
    2. 'riangle' → logprob: -2.004166603088379
    3. ' =' → logprob: -2.254166603088379
    4. 's' → logprob: -2.379166603088379
    5. '_tri' → logprob: -3.004166603088379
    6. 'ri' → logprob: -3.129166603088379
    7. '_' → logprob: -3.254166603088379
    8. '_trip' → logprob: -3.254166603088379
    9. '=[]' → logprob: -3.379166603088379
    10. '=' → logprob: -3.504166603088379

Token 76: 'pe' (ID: 424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27096235752105713
    2. 'riangle' → logprob: -2.7709622383117676
    3. 'uples' → logprob: -3.5209622383117676
    4. ' )' → logprob: -3.6459622383117676
    5. 'ri' → logprob: -3.8959622383117676
    6. 'élé' → logprob: -4.770962238311768
    7. 'ypes' → logprob: -4.895962238311768
    8. 'les' → logprob: -5.020962238311768
    9. ' triples' → logprob: -5.020962238311768
    10. 's' → logprob: -5.270962238311768

Token 77: 'ut' (ID: 339)
  Prédit: 'ak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ak' → logprob: -1.562349796295166
    2. 'uples' → logprob: -1.812349796295166
    3. 'ar' → logprob: -1.937349796295166
    4. '```' → logprob: -2.312349796295166
    5. 'a' → logprob: -2.562349796295166
    6. 't' → logprob: -3.187349796295166
    7. 'aks' → logprob: -3.562349796295166
    8. 'u' → logprob: -3.687349796295166
    9. 'r' → logprob: -3.812349796295166
    10. '``' → logprob: -4.062349796295166

Token 78: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.7592338919639587
    2. '-être' → logprob: -0.7592338919639587
    3. '-' → logprob: -2.8842339515686035
    4. '#' → logprob: -6.3842339515686035
    5. 'êtres' → logprob: -6.6342339515686035
    6. 'etre' → logprob: -7.0092339515686035
    7. 'êt' → logprob: -7.1342339515686035
    8. ''être' → logprob: -7.5092339515686035
    9. 't' → logprob: -7.7592339515686035
    10. 'ê' → logprob: -7.8842339515686035

Token 79: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.2144110202789307
    2. ' des' → logprob: -1.3394110202789307
    3. 'les' → logprob: -1.7144110202789307
    4. ')' → logprob: -2.7144110202789307
    5. ' triangles' → logprob: -3.3394110202789307
    6. ' triples' → logprob: -3.4644110202789307
    7. ' )' → logprob: -3.5894110202789307
    8. 'outes' → logprob: -4.464410781860352
    9. 'des' → logprob: -4.526910781860352
    10. 's' → logprob: -4.714410781860352

Token 80: ' angles' (ID: 43448)
  Prédit: ' triangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' triangles' → logprob: -0.8286285400390625
    2. ' trip' → logprob: -1.7036285400390625
    3. 'trip' → logprob: -1.9536285400390625
    4. ' triples' → logprob: -3.0786285400390625
    5. ' distances' → logprob: -3.4536285400390625
    6. 'tri' → logprob: -3.7036285400390625
    7. ' points' → logprob: -4.0786285400390625
    8. 'angles' → logprob: -4.3286285400390625
    9. 'riangle' → logprob: -4.3286285400390625
    10. 'points' → logprob: -4.8286285400390625

Token 81: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19380733370780945
    2. ' )' → logprob: -2.068807363510132
    3. 's' → logprob: -3.193807363510132
    4. 'angles' → logprob: -5.818807125091553
    5. ')s' → logprob: -6.318807125091553
    6. ',' → logprob: -6.443807125091553
    7. ' ,' → logprob: -7.068807125091553
    8. 'des' → logprob: -8.568807601928711
    9. '_angles' → logprob: -8.818807601928711
    10. '),' → logprob: -9.193807601928711

Token 82: ' qui' (ID: 2780)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.3981335163116455
    2. ' des' → logprob: -1.5231335163116455
    3. 'les' → logprob: -2.1481335163116455
    4. ')' → logprob: -2.5231335163116455
    5. '#' → logprob: -2.8981335163116455
    6. 'des' → logprob: -3.2731335163116455
    7. ' distances' → logprob: -3.3981335163116455
    8. ' c' → logprob: -3.6481335163116455
    9. 'c' → logprob: -3.8981335163116455
    10. ' ou' → logprob: -4.585633277893066

Token 83: ' sait' (ID: 52101)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3626741170883179
    2. ' représentent' → logprob: -2.2376742362976074
    3. ' sont' → logprob: -2.3626742362976074
    4. ' correspondent' → logprob: -2.7376742362976074
    5. ' correspond' → logprob: -2.7376742362976074
    6. ')' → logprob: -2.7376742362976074
    7. ' semblent' → logprob: -3.3626742362976074
    8. '#' → logprob: -3.7376742362976074
    9. 't' → logprob: -3.7376742362976074
    10. ' )' → logprob: -4.112674236297607

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09814723581075668
    2. ' )' → logprob: -2.59814715385437
    3. 'angles' → logprob: -4.348147392272949
    4. 's' → logprob: -6.473147392272949
    5. '?' → logprob: -6.598147392272949
    6. '?)' → logprob: -6.973147392272949
    7. ',' → logprob: -8.09814739227295
    8. 'T' → logprob: -8.09814739227295
    9. 'des' → logprob: -8.22314739227295
    10. ' T' → logprob: -8.59814739227295

Token 85: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.011791023425757885
    2. ' T' → logprob: -4.636791229248047
    3. 'angles' → logprob: -6.511791229248047
    4. ',' → logprob: -8.261791229248047
    5. 't' → logprob: -10.511791229248047
    6. ' angles' → logprob: -10.761791229248047
    7. '[' → logprob: -10.761791229248047
    8. 'angle' → logprob: -10.761791229248047
    9. '```' → logprob: -10.761791229248047
    10. '_T' → logprob: -11.261791229248047

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1144290342926979
    2. '=' → logprob: -2.239428997039795
    3. '=[]' → logprob: -6.614428997039795
    4. ',' → logprob: -9.114429473876953
    5. '[' → logprob: -10.239429473876953
    6. 's' → logprob: -10.239429473876953
    7. '[]' → logprob: -10.739429473876953
    8. ' ' → logprob: -10.864429473876953
    9. '=[' → logprob: -11.614429473876953
    10. ' =[' → logprob: -11.739429473876953

Token 87: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3624878525733948
    2. ' []' → logprob: -1.73748779296875
    3. ' list' → logprob: -2.86248779296875
    4. '[' → logprob: -3.73748779296875
    5. '[]' → logprob: -3.73748779296875
    6. 'list' → logprob: -3.98748779296875
    7. '[list' → logprob: -5.48748779296875
    8. '[int' → logprob: -7.98748779296875
    9. '[input' → logprob: -10.11248779296875
    10. ' ' → logprob: -10.36248779296875

Token 88: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008048642775975168
    2. ' for' → logprob: -7.125804901123047
    3. '<|end|>' → logprob: -15.250804901123047
    4. '```' → logprob: -16.625804901123047
    5. ')' → logprob: -17.125804901123047
    6. '
' → logprob: -17.375804901123047
    7. '	for' → logprob: -17.500804901123047
    8. 'while' → logprob: -18.750804901123047
    9. '_' → logprob: -19.000804901123047
    10. 'n' → logprob: -19.000804901123047

Token 89: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.010828271508216858
    2. '_' → logprob: -5.010828495025635
    3. ' i' → logprob: -5.510828495025635
    4. '_i' → logprob: -9.885828018188477
    5. 'i' → logprob: -12.135828018188477
    6. ' ' → logprob: -12.260828018188477
    7. ' ' → logprob: -14.510828018188477
    8. '	i' → logprob: -17.010828018188477
    9. '  ' → logprob: -17.385828018188477
    10. ' ‌' → logprob: -18.010828018188477

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006192203611135483
    2. 'in' → logprob: -5.381192207336426
    3. '_' → logprob: -7.006192207336426
    4. ' ' → logprob: -7.381192207336426
    5. ' _' → logprob: -10.756192207336426
    6. '  ' → logprob: -11.381192207336426
    7. 'range' → logprob: -12.756192207336426
    8. ' ' → logprob: -13.381192207336426
    9. 'n' → logprob: -13.631192207336426
    10. ' i' → logprob: -13.756192207336426

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008622255176305771
    2. 'range' → logprob: -4.758622169494629
    3. ' ' → logprob: -12.258622169494629
    4. '	range' → logprob: -13.383622169494629
    5. '  ' → logprob: -14.508622169494629
    6. ' ran' → logprob: -15.758622169494629
    7. 'rang' → logprob: -16.008623123168945
    8. ' rang' → logprob: -16.008623123168945
    9. '```' → logprob: -16.258623123168945
    10. 'r' → logprob: -16.633623123168945

Token 92: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.15433542430400848
    2. '(' → logprob: -2.1543354988098145
    3. '(L' → logprob: -3.6543354988098145
    4. ' (' → logprob: -6.7793354988098145
    5. '(
' → logprob: -12.029335021972656
    6. '(n' → logprob: -12.029335021972656
    7. '(S' → logprob: -12.904335021972656
    8. ' L' → logprob: -13.779335021972656
    9. '(int' → logprob: -14.029335021972656
    10. '(len' → logprob: -14.654335021972656

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3493201434612274
    2. '):
' → logprob: -1.2243201732635498
    3. ')' → logprob: -7.474319934844971
    4. '-' → logprob: -8.599320411682129
    5. '+' → logprob: -9.849320411682129
    6. ':' → logprob: -10.849320411682129
    7. ' ):' → logprob: -10.849320411682129
    8. '):
' → logprob: -11.099320411682129
    9. ' ):
' → logprob: -12.224320411682129
    10. ' ' → logprob: -12.974320411682129

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003656841581687331
    2. ' T' → logprob: -6.62865686416626
    3. '    
' → logprob: -6.62865686416626
    4. '   ' → logprob: -8.253656387329102
    5. '<|end|>' → logprob: -8.878656387329102
    6. '    ' → logprob: -9.253656387329102
    7. ' 
' → logprob: -9.378656387329102
    8. '  ' → logprob: -9.878656387329102
    9. ' ' → logprob: -10.003656387329102
    10. '```' → logprob: -10.128656387329102

Token 95: ' x' (ID: 1215)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.4131012260913849
    2. 'T' → logprob: -1.7881011962890625
    3. '   ' → logprob: -2.1631011962890625
    4. 't' → logprob: -3.5381011962890625
    5. ' t' → logprob: -3.7881011962890625
    6. '    
' → logprob: -6.2881011962890625
    7. '
' → logprob: -7.5381011962890625
    8. 'x' (adapté à ' x') → logprob: -7.6631011962890625
    9. '	T' → logprob: -8.288101196289062
    10. ' ' → logprob: -9.038101196289062

Token 96: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004639811348170042
    2. ',y' → logprob: -5.379639625549316
    3. '=' → logprob: -12.379639625549316
    4. 'y' → logprob: -12.629639625549316
    5. ',i' → logprob: -12.629639625549316
    6. ' ,' → logprob: -12.629639625549316
    7. ',x' → logprob: -13.254639625549316
    8. ' =' → logprob: -13.879639625549316
    9. 'i' → logprob: -15.254639625549316
    10. ',input' → logprob: -15.254639625549316

Token 97: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.2159074991941452
    2. 'int' → logprob: -2.340907573699951
    3. ' float' → logprob: -2.340907573699951
    4. ' int' → logprob: -6.715907573699951
    5. 'list' → logprob: -8.215907096862793
    6. '	float' → logprob: -9.590907096862793
    7. '   ' → logprob: -10.090907096862793
    8. ' ' → logprob: -10.340907096862793
    9. '  ' → logprob: -10.715907096862793
    10. ' list' → logprob: -11.340907096862793

Token 98: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.588793960167095e-05
    2. '(' → logprob: -9.500076293945312
    3. 'input' → logprob: -14.750076293945312
    4. '()' → logprob: -15.625076293945312
    5. ' (' → logprob: -16.000076293945312
    6. '=input' → logprob: -16.500076293945312
    7. ',input' → logprob: -16.625076293945312
    8. '(
' → logprob: -17.375076293945312
    9. '(

' → logprob: -17.375076293945312
    10. ' input' → logprob: -17.500076293945312

Token 99: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003907543432433158
    2. '()' → logprob: -7.875390529632568
    3. '())
' → logprob: -11.875391006469727
    4. ' ())' → logprob: -13.625391006469727
    5. '().' → logprob: -14.000391006469727
    6. '())

' → logprob: -14.375391006469727
    7. '())
' → logprob: -14.750391006469727
    8. ')' → logprob: -15.250391006469727
    9. '()))' → logprob: -15.750391006469727
    10. '(' → logprob: -15.750391006469727

Token 100: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.16109217703342438
    2. '   ' → logprob: -2.6610922813415527
    3. ')' → logprob: -3.0360922813415527
    4. ' T' → logprob: -4.036092281341553
    5. '	T' → logprob: -5.411092281341553
    6. ' ' → logprob: -5.786092281341553
    7. '(T' → logprob: -6.786092281341553
    8. 'x' → logprob: -7.411092281341553
    9. '<|end|>' → logprob: -7.536092281341553
    10. '()' → logprob: -7.911092281341553

Token 101: ' #' (ID: 1069)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.033935435116291046
    2. ' T' → logprob: -3.408935546875
    3. '   ' → logprob: -8.658935546875
    4. ' ' → logprob: -10.033935546875
    5. 'x' → logprob: -10.783935546875
    6. '	T' → logprob: -10.783935546875
    7. 's' → logprob: -11.658935546875
    8. 't' → logprob: -11.908935546875
    9. '  ' → logprob: -12.533935546875
    10. 'S' → logprob: -12.658935546875

Token 102: ' on' (ID: 402)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0299080740660429
    2. ' T' → logprob: -3.5299081802368164
    3. ' ' → logprob: -10.029908180236816
    4. 'S' → logprob: -10.279908180236816
    5. '   ' → logprob: -10.779908180236816
    6. 'y' → logprob: -11.654908180236816
    7. 'x' → logprob: -11.779908180236816
    8. '	T' → logprob: -11.779908180236816
    9. '  ' → logprob: -12.279908180236816
    10. 't' → logprob: -12.279908180236816

Token 103: ' convert' (ID: 8452)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.42861777544021606
    2. 'T' → logprob: -1.8036177158355713
    3. ' T' → logprob: -2.0536177158355713
    4. '   ' → logprob: -3.4286177158355713
    5. 's' → logprob: -5.55361795425415
    6. ' ' → logprob: -5.67861795425415
    7. 't' → logprob: -5.92861795425415
    8. ' append' → logprob: -6.17861795425415
    9. 'x' → logprob: -6.67861795425415
    10. 'append' → logprob: -6.80361795425415

Token 104: 'it' (ID: 278)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(math' → logprob: -1.247957706451416
    2. '(' → logprob: -1.372957706451416
    3. '(x' → logprob: -1.872957706451416
    4. 'x' → logprob: -2.747957706451416
    5. 'T' → logprob: -2.872957706451416
    6. '(T' → logprob: -3.372957706451416
    7. ' x' → logprob: -3.747957706451416
    8. '_angle' → logprob: -3.872957706451416
    9. ' math' → logprob: -3.997957706451416
    10. '(angle' → logprob: -4.872957706451416

Token 105: ' en' (ID: 469)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6327402591705322
    2. ' x' → logprob: -1.3827402591705322
    3. ' math' → logprob: -2.1327402591705322
    4. 'math' → logprob: -4.007740020751953
    5. '(math' → logprob: -4.257740020751953
    6. '(x' → logprob: -4.382740020751953
    7. ' T' → logprob: -4.507740020751953
    8. 'T' → logprob: -4.882740020751953
    9. ',' → logprob: -5.007740020751953
    10. ')' → logprob: -5.132740020751953

Token 106: ' radians' (ID: 126525)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4379448890686035
    2. 'math' → logprob: -1.8129448890686035
    3. ' radians' → logprob: -2.1879448890686035
    4. ' float' → logprob: -3.1879448890686035
    5. 'float' → logprob: -4.1879448890686035
    6. 'r' → logprob: -4.1879448890686035
    7. ' rad' → logprob: -6.4379448890686035
    8. 'rad' → logprob: -6.9379448890686035
    9. 'angles' → logprob: -6.9379448890686035
    10. ' x' → logprob: -7.3129448890686035

Token 107: ' (' (ID: 350)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' T' → logprob: -1.32234787940979
    2. 'T' → logprob: -1.57234787940979
    3. ' math' → logprob: -2.32234787940979
    4. 'math' → logprob: -2.44734787940979
    5. ' ' → logprob: -2.57234787940979
    6. '   ' → logprob: -2.57234787940979
    7. 'import' → logprob: -2.94734787940979
    8. ' *' → logprob: -3.07234787940979
    9. '*' → logprob: -3.69734787940979
    10. ',' → logprob: -3.82234787940979

Token 108: 'je' (ID: 1587)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.49123284220695496
    2. 'T' → logprob: -1.1162328720092773
    3. 'x' → logprob: -3.1162328720092773
    4. ')' → logprob: -4.991232872009277
    5. ' x' → logprob: -5.366232872009277
    6. '   ' → logprob: -6.366232872009277
    7. ' ' → logprob: -7.241232872009277
    8. ' math' → logprob: -7.241232872009277
    9. ' )' → logprob: -7.991232872009277
    10. 'math' → logprob: -8.616232872009277

Token 109: ' crois' (ID: 65485)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1379631757736206
    2. ')' → logprob: -1.3879631757736206
    3. ' suppose' → logprob: -2.76296329498291
    4. ' assume' → logprob: -3.01296329498291
    5. 'n' → logprob: -3.38796329498291
    6. 't' → logprob: -3.51296329498291
    7. 'import' → logprob: -3.51296329498291
    8. ' =' → logprob: -3.88796329498291
    9. ' pense' → logprob: -3.88796329498291
    10. ' )' → logprob: -4.01296329498291

Token 110: ' ?' (ID: 1423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17930281162261963
    2. ',' → logprob: -2.67930269241333
    3. ')
' → logprob: -3.42930269241333
    4. 'T' → logprob: -3.67930269241333
    5. ' ,' → logprob: -4.30430269241333
    6. ' )' → logprob: -4.67930269241333
    7. ' T' → logprob: -4.80430269241333
    8. '   ' → logprob: -6.17930269241333
    9. 'x' → logprob: -6.17930269241333
    10. ' )
' → logprob: -6.80430269241333

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24913229048252106
    2. ')
' → logprob: -2.6241323947906494
    3. ' T' → logprob: -2.8741323947906494
    4. 'T' → logprob: -3.3741323947906494
    5. '   ' → logprob: -3.7491323947906494
    6. ' )' → logprob: -4.24913215637207
    7. ' ' → logprob: -5.12413215637207
    8. ' )
' → logprob: -5.12413215637207
    9. 'x' → logprob: -5.62413215637207
    10. ',' → logprob: -6.37413215637207

Token 112: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.6104279160499573
    2. ' T' → logprob: -0.8604279160499573
    3. '   ' → logprob: -3.8604278564453125
    4. '	T' → logprob: -4.7354278564453125
    5. ' ' → logprob: -6.6104278564453125
    6. ',' → logprob: -7.1104278564453125
    7. 'x' → logprob: -7.6104278564453125
    8. ' ,' → logprob: -7.9854278564453125
    9. '\t' → logprob: -9.235427856445312
    10. ')' → logprob: -9.485427856445312

Token 113: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.01807958446443081
    2. ' T' → logprob: -4.26807975769043
    3. 't' → logprob: -5.64307975769043
    4. 'x' → logprob: -9.26807975769043
    5. 'theta' → logprob: -9.26807975769043
    6. 'angle' → logprob: -9.64307975769043
    7. ' t' → logprob: -9.89307975769043
    8. '   ' → logprob: -10.76807975769043
    9. 'a' → logprob: -11.39307975769043
    10. ' ' → logprob: -11.76807975769043

Token 114: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.939851037808694e-05
    2. '.' → logprob: -10.500029563903809
    3. '.app' → logprob: -13.500029563903809
    4. ' .' → logprob: -15.875029563903809
    5. '.ap' → logprob: -15.875029563903809
    6. '.extend' → logprob: -16.875028610229492
    7. 'append' → logprob: -17.750028610229492
    8. '=' → logprob: -19.625028610229492
    9. '.=' → logprob: -19.625028610229492
    10. '_append' → logprob: -19.750028610229492

Token 115: '(x' (ID: 4061)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.026905899867415428
    2. '(x' → logprob: -3.7769060134887695
    3. '(' → logprob: -5.6519060134887695
    4. 'math' → logprob: -9.40190601348877
    5. '((' → logprob: -10.15190601348877
    6. '(float' → logprob: -11.15190601348877
    7. ' (' → logprob: -13.15190601348877
    8. ' math' → logprob: -13.52690601348877
    9. 'x' → logprob: -14.27690601348877
    10. '(Math' → logprob: -14.52690601348877

Token 116: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06268586218357086
    2. '*' → logprob: -2.812685966491699
    3. ')' → logprob: -8.1876859664917
    4. ' /' → logprob: -8.4376859664917
    5. ' ' → logprob: -9.0626859664917
    6. '/' → logprob: -9.1876859664917
    7. ' )' → logprob: -13.4376859664917
    8. '*pi' → logprob: -13.9376859664917
    9. '*Math' → logprob: -14.0626859664917
    10. ')*' → logprob: -14.0626859664917

Token 117: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.31492888927459717
    2. 'math' → logprob: -1.3149288892745972
    3. '(math' → logprob: -6.439929008483887
    4. ' (' → logprob: -10.314929008483887
    5. ' ' → logprob: -11.064929008483887
    6. '2' → logprob: -11.439929008483887
    7. '3' → logprob: -12.314929008483887
    8. '(' → logprob: -12.689929008483887
    9. '.math' → logprob: -14.439929008483887
    10. '0' → logprob: -14.939929008483887

Token 118: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -9.841743303695694e-05
    2. '.' → logprob: -9.25009822845459
    3. '.r' → logprob: -13.25009822845459
    4. '.p' → logprob: -16.250099182128906
    5. '.cos' → logprob: -16.250099182128906
    6. ' .' → logprob: -16.250099182128906
    7. '.PI' → logprob: -16.375099182128906
    8. '.atan' → logprob: -17.500099182128906
    9. '.sin' → logprob: -17.750099182128906
    10. '.ac' → logprob: -18.250099182128906

Token 119: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5231780409812927
    2. ' /' → logprob: -0.8981780409812927
    3. ')' → logprob: -10.023178100585938
    4. ' )' → logprob: -12.273178100585938
    5. ' ' → logprob: -13.023178100585938
    6. ')/' → logprob: -13.898178100585938
    7. '   ' → logprob: -14.023178100585938
    8. '/)' → logprob: -15.023178100585938
    9. ' /
' → logprob: -15.148178100585938
    10. '/
' → logprob: -15.148178100585938

Token 120: ' L' (ID: 451)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.003625247161835432
    2. ' ' → logprob: -5.628625392913818
    3. '360' → logprob: -11.37862491607666
    4. 'L' → logprob: -11.62862491607666
    5. '18' → logprob: -13.00362491607666
    6. '1' → logprob: -13.75362491607666
    7. ' L' → logprob: -14.50362491607666
    8. '   ' → logprob: -15.37862491607666
    9. '(' → logprob: -16.003625869750977
    10. '100' → logprob: -16.378625869750977

Token 121: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.000006675720215
    3. ')
' → logprob: -16.0000057220459
    4. '))' → logprob: -16.0000057220459
    5. ')`' → logprob: -18.2500057220459
    6. '),' → logprob: -18.8750057220459
    7. '')' → logprob: -19.2500057220459
    8. '`)' → logprob: -19.2500057220459
    9. '*' → logprob: -19.5000057220459
    10. '）' → logprob: -19.6250057220459

Token 122: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5855541229248047
    2. '<|end|>' → logprob: -1.2105541229248047
    3. 'for' → logprob: -2.0855541229248047
    4. '#' → logprob: -4.460554122924805
    5. 'print' → logprob: -6.960554122924805
    6. ']' → logprob: -6.960554122924805
    7. '```' → logprob: -6.960554122924805
    8. '(' → logprob: -6.960554122924805
    9. ' for' → logprob: -7.210554122924805
    10. '
' → logprob: -7.460554122924805

Token 123: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0124350786209106
    2. 'angles' → logprob: -1.8874350786209106
    3. 'trip' → logprob: -3.137434959411621
    4. '#' → logprob: -3.137434959411621
    5. 'dist' → logprob: -3.387434959411621
    6. 'import' → logprob: -3.512434959411621
    7. 'result' → logprob: -3.512434959411621
    8. 'max' → logprob: -3.637434959411621
    9. 'min' → logprob: -4.012434959411621
    10. 'res' → logprob: -4.012434959411621

Token 124: ' fait' (ID: 7473)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27046194672584534
    2. '.sort' → logprob: -2.5204620361328125
    3. ' for' → logprob: -3.1454620361328125
    4. '#' → logprob: -3.3954620361328125
    5. 'T' → logprob: -3.8954620361328125
    6. 'import' → logprob: -4.1454620361328125
    7. 'range' → logprob: -4.7704620361328125
    8. 'sort' → logprob: -5.2704620361328125
    9. 'from' → logprob: -5.2704620361328125
    10. ' =' → logprob: -5.3954620361328125

Token 125: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4677953720092773
    2. 'un' → logprob: -2.0927953720092773
    3. 'for' → logprob: -2.0927953720092773
    4. 'une' → logprob: -2.3427953720092773
    5. 'le' → logprob: -2.5927953720092773
    6. '#' → logprob: -2.5927953720092773
    7. ' une' → logprob: -2.7177953720092773
    8. 'import' → logprob: -3.7177953720092773
    9. ' un' → logprob: -3.7177953720092773
    10. 'la' → logprob: -3.8427953720092773

Token 126: ' somme' (ID: 64484)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.2273958921432495
    2. 'for' → logprob: -2.227396011352539
    3. 's' → logprob: -3.352396011352539
    4. 'liste' → logprob: -4.352396011352539
    5. ' suite' → logprob: -4.727396011352539
    6. 'bou' → logprob: -4.727396011352539
    7. 'tri' → logprob: -5.102396011352539
    8. 'range' → logprob: -5.477396011352539
    9. '#' → logprob: -5.602396011352539
    10. 'import' → logprob: -5.602396011352539

Token 127: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7743238806724548
    2. 'total' → logprob: -1.2743239402770996
    3. 'sum' → logprob: -1.5243239402770996
    4. 'res' → logprob: -4.0243239402771
    5. 'result' → logprob: -4.0243239402771
    6. 'S' → logprob: -6.0243239402771
    7. 'angle' → logprob: -7.2743239402771
    8. 'ans' → logprob: -7.5243239402771
    9. 'acc' → logprob: -7.8993239402771
    10. ',' → logprob: -8.149323463439941

Token 128: ' cos' (ID: 8974)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -1.0937955379486084
    2. 'cos' → logprob: -1.7187955379486084
    3. 'abs' → logprob: -2.0937955379486084
    4. 'T' → logprob: -2.0937955379486084
    5. 'diff' → logprob: -3.0937955379486084
    6. ' T' → logprob: -3.2187955379486084
    7. ' math' → logprob: -3.5937955379486084
    8. 'i' → logprob: -4.0937957763671875
    9. ' abs' → logprob: -4.0937957763671875
    10. 'angles' → logprob: -4.2187957763671875

Token 129: 'inus' (ID: 78622)
  Prédit: 'ines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.29180747270584106
    2. 's' → logprob: -1.6668074131011963
    3. '(' → logprob: -3.4168074131011963
    4. 'ine' → logprob: -3.6668074131011963
    5. 'es' → logprob: -6.791807651519775
    6. '(T' → logprob: -7.166807651519775
    7. '(
' → logprob: -7.416807651519775
    8. '()' → logprob: -7.666807651519775
    9. 't' → logprob: -7.791807651519775
    10. 'in' → logprob: -8.291807174682617

Token 130: ' pond' (ID: 42367)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8439328074455261
    2. 's' → logprob: -1.343932867050171
    3. 'sum' → logprob: -1.468932867050171
    4. 'result' → logprob: -2.968932867050171
    5. 'cos' → logprob: -3.843932867050171
    6. '(
' → logprob: -6.593932628631592
    7. 'res' → logprob: -6.593932628631592
    8. '(' → logprob: -6.843932628631592
    9. '(sum' → logprob: -7.968932628631592
    10. ' total' → logprob: -8.09393310546875

Token 131: 'érés' (ID: 110831)
  Prédit: 'érées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érées' → logprob: -0.2545371651649475
    2. 'éré' → logprob: -2.8795371055603027
    3. 'érés' → logprob: -3.2545371055603027
    4. '(T' → logprob: -3.5045371055603027
    5. 'érations' → logprob: -3.7545371055603027
    6. '(' → logprob: -3.8795371055603027
    7. 'ér' → logprob: -3.8795371055603027
    8. 'é' → logprob: -4.879537105560303
    9. 'érée' → logprob: -5.129537105560303
    10. 'u' → logprob: -5.379537105560303

Token 132: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1752562522888184
    2. 'sum' → logprob: -1.4252562522888184
    3. 'result' → logprob: -1.5502562522888184
    4. 's' → logprob: -1.6752562522888184
    5. '(' → logprob: -3.6752562522888184
    6. '(
' → logprob: -4.925256252288818
    7. 'cos' → logprob: -5.425256252288818
    8. 'res' → logprob: -5.800256252288818
    9. ' total' → logprob: -6.050256252288818
    10. '(sum' → logprob: -6.300256252288818

Token 133: 'S' (ID: 50)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8364216685295105
    2. 'sum' → logprob: -1.4614217281341553
    3. 'result' → logprob: -1.8364217281341553
    4. 's' → logprob: -2.5864217281341553
    5. 'res' → logprob: -2.8364217281341553
    6. 'cos' → logprob: -3.3364217281341553
    7. 'c' → logprob: -6.211421489715576
    8. 'ans' → logprob: -7.336421489715576
    9. 'score' → logprob: -7.336421489715576
    10. 'S' → logprob: -7.586421489715576

Token 134: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.658876895904541
    2. '+=' → logprob: -1.158876895904541
    3. ' +=' → logprob: -2.283876895904541
    4. ' =' → logprob: -3.033876895904541
    5. 'sum' → logprob: -4.658876895904541
    6. '_sum' → logprob: -5.783876895904541
    7. '=sum' → logprob: -6.783876895904541
    8. '+' → logprob: -7.158876895904541
    9. '_' → logprob: -7.283876895904541
    10. 'cos' → logprob: -7.533876895904541

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38899368047714233
    2. '=' → logprob: -1.138993740081787
    3. ' +=' → logprob: -6.388993740081787
    4. '+=' → logprob: -7.888993740081787
    5. 'sum' → logprob: -10.888993263244629
    6. '=sum' → logprob: -10.888993263244629
    7. '_sum' → logprob: -11.638993263244629
    8. 's' → logprob: -12.138993263244629
    9. ',' → logprob: -12.638993263244629
    10. ' ' → logprob: -13.263993263244629

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011118210852146149
    2. 'sum' → logprob: -4.511118412017822
    3. ' sum' → logprob: -10.511117935180664
    4. ' ' → logprob: -10.636117935180664
    5. 'math' → logprob: -11.011117935180664
    6. '   ' → logprob: -14.761117935180664
    7. '1' → logprob: -14.886117935180664
    8. 's' → logprob: -15.261117935180664
    9. '```' → logprob: -15.511117935180664
    10. '(sum' → logprob: -15.573617935180664

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005939821247011423
    2. 'sum' → logprob: -5.130939960479736
    3. 'math' → logprob: -11.755939483642578
    4. ' ' → logprob: -13.880939483642578
    5. ' sum' → logprob: -14.505939483642578
    6. '1' → logprob: -15.255939483642578
    7. '   ' → logprob: -15.630939483642578
    8. '(sum' → logprob: -15.755939483642578
    9. 's' → logprob: -15.880939483642578
    10. 'import' → logprob: -16.068439483642578

Token 138: '.' (ID: 13)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042395055294036865
    2. ' for' → logprob: -3.7923951148986816
    3. '
' → logprob: -4.167395114898682
    4. '+' → logprob: -7.167395114898682
    5. '<|end|>' → logprob: -7.167395114898682
    6. '*' → logprob: -7.417395114898682
    7. ',' → logprob: -7.667395114898682
    8. 'S' → logprob: -8.667394638061523
    9. 'T' → logprob: -9.167394638061523
    10. '#' → logprob: -9.292394638061523

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002641890896484256
    2. '5' → logprob: -6.627641677856445
    3. '6' → logprob: -7.627641677856445
    4. '+' → logprob: -7.752641677856445
    5. '1' → logprob: -8.502641677856445
    6. 'for' → logprob: -9.377641677856445
    7. '7' → logprob: -11.002641677856445
    8. ' ' → logprob: -11.127641677856445
    9. '9' → logprob: -11.127641677856445
    10. 'S' → logprob: -11.127641677856445

Token 140: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1646578460931778
    2. ' for' → logprob: -1.9146578311920166
    3. '
' → logprob: -6.289658069610596
    4. '<|end|>' → logprob: -6.539658069610596
    5. ',' → logprob: -7.289658069610596
    6. ' ' → logprob: -8.914657592773438
    7. '+' → logprob: -9.039657592773438
    8. ',
' → logprob: -10.539657592773438
    9. ' 
' → logprob: -10.539657592773438
    10. 'S' → logprob: -11.164657592773438

Token 141: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.055111322551965714
    2. ' for' → logprob: -2.9301114082336426
    3. '<|end|>' → logprob: -8.555110931396484
    4. '
' → logprob: -11.805110931396484
    5. 'i' → logprob: -12.055110931396484
    6. ',' → logprob: -12.055110931396484
    7. '```' → logprob: -12.680110931396484
    8. 'S' → logprob: -12.805110931396484
    9. '+' → logprob: -13.055110931396484
    10. ' ' → logprob: -13.180110931396484

Token 142: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09690554440021515
    2. 't' → logprob: -2.846905469894409
    3. ' i' → logprob: -3.596905469894409
    4. ' t' → logprob: -5.846905708312988
    5. 'angle' → logprob: -6.846905708312988
    6. 'j' → logprob: -6.971905708312988
    7. 'theta' → logprob: -7.346905708312988
    8. ' angle' → logprob: -7.471905708312988
    9. 'k' → logprob: -7.846905708312988
    10. 'T' → logprob: -8.971905708312988

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020721958950161934
    2. 'in' → logprob: -3.895721912384033
    3. ' ' → logprob: -8.770722389221191
    4. ',' → logprob: -11.770722389221191
    5. '1' → logprob: -12.645722389221191
    6. '  ' → logprob: -13.020722389221191
    7. 'n' → logprob: -13.395722389221191
    8. ' ,' → logprob: -14.083222389221191
    9. ' i' → logprob: -14.083222389221191
    10. '   ' → logprob: -14.083222389221191

Token 144: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015192650025710464
    2. ' range' → logprob: -6.501519203186035
    3. 'T' → logprob: -11.001519203186035
    4. '	range' → logprob: -16.62652015686035
    5. 'S' → logprob: -16.87652015686035
    6. ' ' → logprob: -17.25152015686035
    7. '(range' → logprob: -17.25152015686035
    8. '   ' → logprob: -17.50152015686035
    9. '  ' → logprob: -17.50152015686035
    10. ' T' → logprob: -18.12652015686035

Token 145: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5099300742149353
    2. '(range' → logprob: -1.00993013381958
    3. ' range' → logprob: -4.13493013381958
    4. 'range' → logprob: -4.50993013381958
    5. '(' → logprob: -5.13493013381958
    6. '(T' → logprob: -6.50993013381958
    7. '(len' → logprob: -7.50993013381958
    8. '(S' → logprob: -8.634929656982422
    9. '(n' → logprob: -9.759929656982422
    10. '(L' → logprob: -11.509929656982422

Token 146: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04668955132365227
    2. '):' → logprob: -3.421689510345459
    3. '-' → logprob: -4.421689510345459
    4. '):
' → logprob: -7.671689510345459
    5. ' -' → logprob: -8.296689987182617
    6. '   ' → logprob: -9.296689987182617
    7. ')' → logprob: -10.046689987182617
    8. ' ):
' → logprob: -10.546689987182617
    9. ' ' → logprob: -10.921689987182617
    10. '+' → logprob: -11.046689987182617

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13456116616725922
    2. ' for' → logprob: -2.134561061859131
    3. 'for' → logprob: -5.134561061859131
    4. '	for' → logprob: -7.134561061859131
    5. ' S' → logprob: -7.384561061859131
    6. ' ' → logprob: -9.009561538696289
    7. 'S' → logprob: -10.259561538696289
    8. '<|end|>' → logprob: -10.384561538696289
    9. ' s' → logprob: -10.759561538696289
    10. '  ' → logprob: -11.009561538696289

Token 148: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08292114734649658
    2. 'S' → logprob: -2.832921028137207
    3. '   ' → logprob: -4.457921028137207
    4. ' for' → logprob: -4.832921028137207
    5. ' S' → logprob: -7.457921028137207
    6. ' ' → logprob: -7.957921028137207
    7. 'j' → logprob: -8.582921028137207
    8. '  ' → logprob: -10.582921028137207
    9. '	for' → logprob: -11.332921028137207
    10. 'import' → logprob: -12.207921028137207

Token 149: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0046210684813559055
    2. ' j' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.254621505737305
    4. ' in' → logprob: -16.504621505737305
    5. 'range' → logprob: -16.629621505737305
    6. ' range' → logprob: -16.879621505737305
    7. '_j' → logprob: -17.004621505737305
    8. 'i' → logprob: -17.629621505737305
    9. '	j' → logprob: -17.879621505737305
    10. 'for' → logprob: -18.129621505737305

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01838708482682705
    2. 'in' → logprob: -4.018387317657471
    3. ' i' → logprob: -9.143386840820312
    4. ' ' → logprob: -10.018386840820312
    5. 'range' → logprob: -10.018386840820312
    6. '   ' → logprob: -11.018386840820312
    7. 'i' → logprob: -12.018386840820312
    8. ' range' → logprob: -12.143386840820312
    9. '(i' → logprob: -12.768386840820312
    10. '  ' → logprob: -13.393386840820312

Token 151: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31328994035720825
    2. ' range' → logprob: -1.3132898807525635
    3. '(range' → logprob: -10.563289642333984
    4. ' ' → logprob: -14.313289642333984
    5. 'i' → logprob: -14.563289642333984
    6. '   ' → logprob: -14.813289642333984
    7. ' i' → logprob: -15.438289642333984
    8. '  ' → logprob: -15.813289642333984
    9. '	range' → logprob: -15.938289642333984
    10. 'rang' → logprob: -16.438289642333984

Token 152: '(i' (ID: 3649)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.8152795433998108
    2. ' range' → logprob: -1.065279483795166
    3. 'range' → logprob: -1.565279483795166
    4. ' (' → logprob: -6.190279483795166
    5. '(' → logprob: -7.065279483795166
    6. '(i' → logprob: -7.190279483795166
    7. '(N' → logprob: -9.065279960632324
    8. ' ' → logprob: -11.065279960632324
    9. '	range' → logprob: -11.440279960632324
    10. ' in' → logprob: -11.940279960632324

Token 153: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008643647655844688
    2. ' +' → logprob: -4.758643627166748
    3. '1' → logprob: -10.883644104003906
    4. '+
' → logprob: -12.383644104003906
    5. ',' → logprob: -13.758644104003906
    6. '+i' → logprob: -14.008644104003906
    7. '   ' → logprob: -14.133644104003906
    8. '):
' → logprob: -14.133644104003906
    9. '+)' → logprob: -14.508644104003906
    10. ' ' → logprob: -14.508644104003906

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -10.875022888183594
    3. 'N' → logprob: -12.625022888183594
    4. 'i' → logprob: -15.000022888183594
    5. '   ' → logprob: -16.500022888183594
    6. ' N' → logprob: -16.875022888183594
    7. '0' → logprob: -16.875022888183594
    8. '2' → logprob: -17.000022888183594
    9. '
' → logprob: -17.125022888183594
    10. '```' → logprob: -17.750022888183594

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.061003632843494415
    2. ',N' → logprob: -3.0610036849975586
    3. ' ,' → logprob: -4.436003684997559
    4. 'N' → logprob: -8.061003684997559
    5. '+' → logprob: -9.311003684997559
    6. '+,' → logprob: -10.686003684997559
    7. ',n' → logprob: -11.186003684997559
    8. ',i' → logprob: -11.436003684997559
    9. '1' → logprob: -11.561003684997559
    10. ' N' → logprob: -11.811003684997559

Token 156: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004080420359969139
    2. ' N' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.129080772399902
    4. '	N' → logprob: -16.754079818725586
    5. ' ' → logprob: -17.129079818725586
    6. '  ' → logprob: -18.004079818725586
    7. 'n' → logprob: -18.129079818725586
    8. '    ' → logprob: -18.504079818725586
    9. ' ' → logprob: -20.129079818725586
    10. ',N' → logprob: -20.254079818725586

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20144900679588318
    2. '):
' → logprob: -1.7014490365982056
    3. '+' → logprob: -10.951449394226074
    4. '):
' → logprob: -11.451449394226074
    5. '   ' → logprob: -13.076449394226074
    6. ')' → logprob: -13.076449394226074
    7. ' ):' → logprob: -13.326449394226074
    8. ':' → logprob: -14.326449394226074
    9. ',' → logprob: -15.076449394226074
    10. ' ):
' → logprob: -15.201449394226074

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029243486933410168
    2. '   ' → logprob: -6.25292444229126
    3. ':' → logprob: -8.252923965454102
    4. ' S' → logprob: -8.627923965454102
    5. '           ' → logprob: -9.252923965454102
    6. ' for' → logprob: -9.627923965454102
    7. '	   ' → logprob: -9.877923965454102
    8. '     ' → logprob: -10.002923965454102
    9. '	' → logprob: -10.127923965454102
    10. 'S' → logprob: -10.252923965454102

Token 159: ' #' (ID: 1069)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4073324501514435
    2. ' S' → logprob: -1.282332420349121
    3. '           ' → logprob: -3.032332420349121
    4. '       ' → logprob: -5.157332420349121
    5. '   ' → logprob: -6.907332420349121
    6. ' ' → logprob: -8.157332420349121
    7. 'delta' → logprob: -8.157332420349121
    8. 'cos' → logprob: -8.282332420349121
    9. 'diff' → logprob: -8.282332420349121
    10. ' delta' → logprob: -8.657332420349121

Token 160: ' je' (ID: 1264)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.018331261351704597
    2. 'diff' → logprob: -5.018331050872803
    3. 'angle' → logprob: -5.393331050872803
    4. ' S' → logprob: -5.893331050872803
    5. 'delta' → logprob: -6.643331050872803
    6. 'for' → logprob: -7.393331050872803
    7. 'theta' → logprob: -7.643331050872803
    8. 'import' → logprob: -7.893331050872803
    9. 'd' → logprob: -8.018331527709961
    10. '   ' → logprob: -8.143331527709961

Token 161: ' suis' (ID: 15058)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31687748432159424
    2. 'S' → logprob: -2.4418773651123047
    3. '1' → logprob: -2.8168773651123047
    4. '+=' → logprob: -3.4418773651123047
    5. 'n' → logprob: -3.9418773651123047
    6. 'm' → logprob: -4.066877365112305
    7. ' S' → logprob: -4.941877365112305
    8. '=' → logprob: -5.066877365112305
    9. ' +=' → logprob: -5.191877365112305
    10. 'for' → logprob: -5.316877365112305

Token 162: ' pas' (ID: 2173)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5551497340202332
    2. ' S' → logprob: -2.430149793624878
    3. 'for' → logprob: -2.430149793624878
    4. '           ' → logprob: -2.555149793624878
    5. ' ' → logprob: -2.680149793624878
    6. '   ' → logprob: -3.680149793624878
    7. '       ' → logprob: -4.055149555206299
    8. ' for' → logprob: -4.055149555206299
    9. 'T' → logprob: -4.430149555206299
    10. ' T' → logprob: -5.180149555206299

Token 163: ' sûr' (ID: 46415)
  Prédit: ' sûr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sûr' → logprob: -0.6333072781562805
    2. 's' → logprob: -1.2583072185516357
    3. 'certain' → logprob: -2.1333072185516357
    4. 'sure' → logprob: -3.2583072185516357
    5. 'sur' → logprob: -4.758307456970215
    6. 'tout' → logprob: -5.508307456970215
    7. ' ' → logprob: -5.633307456970215
    8. ')' → logprob: -6.633307456970215
    9. '   ' → logprob: -6.633307456970215
    10. 'bien' → logprob: -6.758307456970215

Token 164: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024983488023281097
    2. '       ' → logprob: -4.5249834060668945
    3. ' S' → logprob: -5.2749834060668945
    4. ' for' → logprob: -5.8999834060668945
    5. 'S' → logprob: -6.6499834060668945
    6. ':' → logprob: -6.8999834060668945
    7. ',' → logprob: -7.2749834060668945
    8. '               ' → logprob: -7.7749834060668945
    9. '   ' → logprob: -8.149983406066895
    10. ' if' → logprob: -8.399983406066895

Token 165: ' ça' (ID: 13590)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.995110034942627
    2. ' abs' → logprob: -1.745110034942627
    3. ' T' → logprob: -1.870110034942627
    4. 'abs' → logprob: -2.120110034942627
    5. 'S' → logprob: -3.120110034942627
    6. ' math' → logprob: -3.495110034942627
    7. 'L' → logprob: -3.870110034942627
    8. ' S' → logprob: -4.245110034942627
    9. 'math' → logprob: -4.245110034942627
    10. 'i' → logprob: -4.745110034942627

Token 166: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.45642808079719543
    2. ' marche' → logprob: -2.206428050994873
    3. 'so' → logprob: -2.956428050994873
    4. ' fonctionne' → logprob: -2.956428050994873
    5. 'continue' → logprob: -3.456428050994873
    6. 's' → logprob: -3.581428050994873
    7. ' continue' → logprob: -3.581428050994873
    8. 'fonction' → logprob: -3.831428050994873
    9. 'cos' → logprob: -5.206428050994873
    10. '*' → logprob: -5.331428050994873

Token 167: ' optimal' (ID: 24174)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.9935643672943115
    2. 'T' → logprob: -1.3685643672943115
    3. ' correct' → logprob: -1.3685643672943115
    4. 'math' → logprob: -3.3685643672943115
    5. ' T' → logprob: -3.9935643672943115
    6. ' math' → logprob: -4.118564605712891
    7. 'S' → logprob: -4.493564605712891
    8. '(T' → logprob: -5.118564605712891
    9. 'L' → logprob: -5.743564605712891
    10. 'abs' → logprob: -5.743564605712891

Token 168: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011692284606397152
    2. '       ' → logprob: -4.761692047119141
    3. ':' → logprob: -7.261692047119141
    4. ',' → logprob: -7.386692047119141
    5. '               ' → logprob: -7.886692047119141
    6. ' ' → logprob: -8.13669204711914
    7. '	       ' → logprob: -8.76169204711914
    8. '   ' → logprob: -9.26169204711914
    9. '<|end|>' → logprob: -9.26169204711914
    10. ' for' → logprob: -9.26169204711914

Token 169: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0053761005401611
    2. '           ' → logprob: -1.0053761005401611
    3. ' for' → logprob: -1.5053761005401611
    4. ' S' → logprob: -3.755376100540161
    5. 'for' → logprob: -4.630375862121582
    6. ' ' → logprob: -5.130375862121582
    7. '        ' → logprob: -6.255375862121582
    8. '	       ' → logprob: -6.630375862121582
    9. 'S' → logprob: -7.505375862121582
    10. ' s' → logprob: -7.880375862121582

Token 170: ' bon' (ID: 4846)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6850800514221191
    2. 'for' → logprob: -1.1850800514221191
    3. '           ' → logprob: -2.185080051422119
    4. 'S' → logprob: -3.060080051422119
    5. ' S' → logprob: -3.560080051422119
    6. '       ' → logprob: -6.935080051422119
    7. '               ' → logprob: -7.810080051422119
    8. 'k' → logprob: -8.560079574584961
    9. '   ' → logprob: -8.810079574584961
    10. ' ' → logprob: -9.060079574584961

Token 171: '...
' (ID: 4908)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01624033972620964
    2. ' for' → logprob: -5.016240119934082
    3. ' S' → logprob: -5.516240119934082
    4. '       ' → logprob: -6.266240119934082
    5. 'S' → logprob: -7.016240119934082
    6. ' ' → logprob: -7.516240119934082
    7. ' ' → logprob: -7.641240119934082
    8. '               ' → logprob: -7.766240119934082
    9. '	       ' → logprob: -7.766240119934082
    10. 'for' → logprob: -8.141240119934082

Token 172: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20761126279830933
    2. ' S' → logprob: -1.957611322402954
    3. 'S' → logprob: -3.957611322402954
    4. '       ' → logprob: -4.082611083984375
    5. ' for' → logprob: -6.082611083984375
    6. '	       ' → logprob: -6.207611083984375
    7. ' ' → logprob: -6.707611083984375
    8. ' ' → logprob: -6.707611083984375
    9. '               ' → logprob: -7.457611083984375
    10. '   ' → logprob: -7.707611083984375

Token 173: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0017851332668215036
    2. ' S' → logprob: -6.6267852783203125
    3. 'for' → logprob: -8.001785278320312
    4. '           ' → logprob: -10.501785278320312
    5. 'angle' → logprob: -10.626785278320312
    6. '   ' → logprob: -11.001785278320312
    7. ' for' → logprob: -11.126785278320312
    8. 'import' → logprob: -11.626785278320312
    9. 'cos' → logprob: -12.001785278320312
    10. ' ' → logprob: -12.126785278320312

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. '+=' → logprob: -11.125032424926758
    3. ' +=' → logprob: -11.375032424926758
    4. '2' → logprob: -14.062532424926758
    5. '' → logprob: -14.312532424926758
    6. ' ' → logprob: -14.500032424926758
    7. '+=(' → logprob: -14.875032424926758
    8. '=' → logprob: -15.125032424926758
    9. '0' → logprob: -15.125032424926758
    10. '```' → logprob: -15.187532424926758

Token 175: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.575981080532074
    2. ' +=' → logprob: -0.825981080532074
    3. '+=(' → logprob: -10.575981140136719
    4. ']+=' → logprob: -12.200981140136719
    5. '+' → logprob: -12.700981140136719
    6. '=' → logprob: -13.450981140136719
    7. '	' → logprob: -13.450981140136719
    8. ' ' → logprob: -13.700981140136719
    9. '    ' → logprob: -13.950981140136719
    10. 'import' → logprob: -14.200981140136719

Token 176: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0017801376525312662
    2. ' math' → logprob: -6.501780033111572
    3. '2' → logprob: -8.50178050994873
    4. '(math' → logprob: -10.12678050994873
    5. 'T' → logprob: -11.50178050994873
    6. '   ' → logprob: -11.87678050994873
    7. '1' → logprob: -12.50178050994873
    8. 'abs' → logprob: -12.87678050994873
    9. ' ' → logprob: -13.00178050994873
    10. '3' → logprob: -13.25178050994873

Token 177: '.cos' (ID: 44221)
  Prédit: '.cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.0002043748099822551
    2. '.' → logprob: -8.500204086303711
    3. '.c' → logprob: -15.000204086303711
    4. ' .' → logprob: -15.625204086303711
    5. '.ac' → logprob: -15.750204086303711
    6. '.Cos' → logprob: -15.750204086303711
    7. '.f' → logprob: -17.62520408630371
    8. '.cost' → logprob: -17.87520408630371
    9. '*cos' → logprob: -18.12520408630371
    10. '.sin' → logprob: -18.25020408630371

Token 178: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -9.794061770662665e-05
    2. '(' → logprob: -9.50009822845459
    3. '(abs' → logprob: -10.87509822845459
    4. '(
' → logprob: -13.12509822845459
    5. ' (' → logprob: -14.25009822845459
    6. 'abs' → logprob: -14.37509822845459
    7. '((' → logprob: -14.50009822845459
    8. '(S' → logprob: -15.62509822845459
    9. '(t' → logprob: -15.87509822845459
    10. 'T' → logprob: -16.375097274780273

Token 179: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1002175584435463
    2. '[i' → logprob: -2.350217580795288
    3. '[' → logprob: -11.725217819213867
    4. 'j' → logprob: -13.975217819213867
    5. ' [' → logprob: -14.225217819213867
    6. 'i' → logprob: -15.100217819213867
    7. '[
' → logprob: -15.475217819213867
    8. '
' → logprob: -16.225217819213867
    9. '

' → logprob: -16.850217819213867
    10. '[x' → logprob: -16.850217819213867

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15202604234218597
    2. ' -' → logprob: -2.6520259380340576
    3. '-' → logprob: -3.0270259380340576
    4. ']-' → logprob: -4.777026176452637
    5. '+' → logprob: -5.152026176452637
    6. ']+' → logprob: -5.777026176452637
    7. ' ]' → logprob: -6.277026176452637
    8. '[' → logprob: -6.902026176452637
    9. ')' → logprob: -7.277026176452637
    10. ' ' → logprob: -7.527026176452637

Token 181: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6350098252296448
    2. '-' → logprob: -0.7600098252296448
    3. '+' → logprob: -6.510009765625
    4. ')' → logprob: -8.010009765625
    5. ' ' → logprob: -8.260009765625
    6. ' +' → logprob: -8.635009765625
    7. '-T' → logprob: -9.010009765625
    8. '-
' → logprob: -11.760009765625
    9. ' ' → logprob: -12.510009765625
    10. '  ' → logprob: -12.760009765625

Token 182: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.3133411705493927
    2. ' T' → logprob: -1.3133411407470703
    3. ' ' → logprob: -9.93834114074707
    4. '   ' → logprob: -11.31334114074707
    5. '  ' → logprob: -12.81334114074707
    6. ')' → logprob: -12.81334114074707
    7. ' -' → logprob: -12.93834114074707
    8. '-T' → logprob: -13.18834114074707
    9. ' math' → logprob: -13.43834114074707
    10. '	T' → logprob: -13.43834114074707

Token 183: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.111979357432574e-05
    2. 'j' → logprob: -9.62507152557373
    3. '[' → logprob: -13.12507152557373
    4. ' [' → logprob: -13.50007152557373
    5. '[i' → logprob: -14.50007152557373
    6. '][' → logprob: -15.37507152557373
    7. '   ' → logprob: -15.62507152557373
    8. '[
' → logprob: -15.62507152557373
    9. '	j' → logprob: -16.000070571899414
    10. '
' → logprob: -16.125070571899414

Token 184: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009049110230989754
    2. '))' → logprob: -7.3759050369262695
    3. ' )' → logprob: -9.12590503692627
    4. '])' → logprob: -9.25090503692627
    5. '})' → logprob: -10.37590503692627
    6. ')
' → logprob: -11.12590503692627
    7. ')))' → logprob: -12.50090503692627
    8. ')*' → logprob: -13.00090503692627
    9. ')])' → logprob: -13.00090503692627
    10. '）' → logprob: -13.37590503692627

Token 185: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2078698873519897
    2. ' math' → logprob: -1.4578698873519897
    3. 'math' → logprob: -1.9578698873519897
    4. '(math' → logprob: -2.5828700065612793
    5. ' ' → logprob: -2.7078700065612793
    6. '1' → logprob: -2.7078700065612793
    7. ' (' → logprob: -3.3328700065612793
    8. '0' → logprob: -3.9578700065612793
    9. '(' → logprob: -4.082870006561279
    10. '3' → logprob: -4.832870006561279

Token 187: 'N' (ID: 45)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -2.036756992340088
    2. 'math' → logprob: -2.036756992340088
    3. ' math' → logprob: -2.161756992340088
    4. '(N' → logprob: -2.161756992340088
    5. '1' → logprob: -2.286756992340088
    6. '(L' → logprob: -2.536756992340088
    7. ' (' → logprob: -2.536756992340088
    8. '(math' → logprob: -2.911756992340088
    9. '(' → logprob: -3.161756992340088
    10. ' ' → logprob: -3.411756992340088

Token 188: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5232340693473816
    2. '-' → logprob: -0.8982340693473816
    3. ' ' → logprob: -9.273234367370605
    4. '-j' → logprob: -11.523234367370605
    5. '   ' → logprob: -12.773234367370605
    6. '  ' → logprob: -13.773234367370605
    7. '-i' → logprob: -14.148234367370605
    8. '*' → logprob: -14.398234367370605
    9. 'j' → logprob: -15.023234367370605
    10. ' ' → logprob: -15.023234367370605

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3596407175064087
    2. ' ' → logprob: -1.4846407175064087
    3. 'L' → logprob: -3.859640598297119
    4. ' L' → logprob: -4.359640598297119
    5. 'j' → logprob: -4.484640598297119
    6. ' j' → logprob: -4.734640598297119
    7. 'N' → logprob: -5.234640598297119
    8. ' N' → logprob: -5.484640598297119
    9. '2' → logprob: -5.609640598297119
    10. ' i' → logprob: -5.984640598297119

Token 190: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06694348156452179
    2. 'L' → logprob: -3.566943407058716
    3. 'N' → logprob: -3.691943407058716
    4. '2' → logprob: -5.066943645477295
    5. 'j' → logprob: -6.316943645477295
    6. 'i' → logprob: -6.816943645477295
    7. ' ' → logprob: -6.941943645477295
    8. '3' → logprob: -8.191943168640137
    9. '-' → logprob: -8.566943168640137
    10. '(' → logprob: -8.691943168640137

Token 191: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03728412464261055
    2. '-' → logprob: -3.6622841358184814
    3. ')' → logprob: -4.537283897399902
    4. ' ' → logprob: -9.662283897399902
    5. ' )' → logprob: -10.162283897399902
    6. '   ' → logprob: -10.162283897399902
    7. '))' → logprob: -11.162283897399902
    8. '<|end|>' → logprob: -11.162283897399902
    9. ')))' → logprob: -11.537283897399902
    10. '  ' → logprob: -12.162283897399902

Token 192: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.0616886615753174
    2. '(L' → logprob: -1.4366886615753174
    3. 'L' → logprob: -1.6866886615753174
    4. '(i' → logprob: -2.5616886615753174
    5. 'i' → logprob: -3.3116886615753174
    6. 'math' → logprob: -3.5616886615753174
    7. ' math' → logprob: -3.8116886615753174
    8. '(' → logprob: -4.186688423156738
    9. ' (' → logprob: -4.186688423156738
    10. 'N' → logprob: -4.686688423156738

Token 193: 'i' (ID: 72)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.29777926206588745
    2. 'N' → logprob: -1.5477793216705322
    3. 'i' → logprob: -4.172779083251953
    4. 'math' → logprob: -4.297779083251953
    5. 'S' → logprob: -4.797779083251953
    6. '(N' → logprob: -6.047779083251953
    7. '(L' → logprob: -7.172779083251953
    8. 'j' → logprob: -7.297779083251953
    9. '(i' → logprob: -7.297779083251953
    10. '-N' → logprob: -7.547779083251953

Token 194: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3881240785121918
    2. ' -' → logprob: -1.1381241083145142
    3. '+' → logprob: -7.388123989105225
    4. '-j' → logprob: -7.638123989105225
    5. ' ' → logprob: -9.513124465942383
    6. ')' → logprob: -10.138124465942383
    7. ' +' → logprob: -10.763124465942383
    8. '   ' → logprob: -12.638124465942383
    9. ' j' → logprob: -13.138124465942383
    10. 'j' → logprob: -13.138124465942383

Token 195: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0037121959030628204
    2. ' j' → logprob: -5.628712177276611
    3. 'N' → logprob: -9.62871265411377
    4. 'L' → logprob: -11.12871265411377
    5. ' ' → logprob: -11.37871265411377
    6. '1' → logprob: -12.25371265411377
    7. '   ' → logprob: -12.50371265411377
    8. '  ' → logprob: -12.75371265411377
    9. 'i' → logprob: -13.62871265411377
    10. '	j' → logprob: -13.62871265411377

Token 196: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09051991999149323
    2. ')' → logprob: -2.590519905090332
    3. ')**' → logprob: -5.715519905090332
    4. ')))' → logprob: -5.840519905090332
    5. ' ))' → logprob: -5.840519905090332
    6. ' )' → logprob: -6.965519905090332
    7. '+' → logprob: -7.590519905090332
    8. '-' → logprob: -8.090519905090332
    9. ' -' → logprob: -8.590519905090332
    10. '**' → logprob: -8.840519905090332

Token 197: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1814025491476059
    2. '<|end|>' → logprob: -1.806402564048767
    3. '
' → logprob: -7.181402683258057
    4. ' )' → logprob: -7.806402683258057
    5. '<|end|>' → logprob: -9.181402206420898
    6. '#' → logprob: -9.681402206420898
    7. '\n' → logprob: -10.056402206420898
    8. '```' → logprob: -10.056402206420898
    9. '+' → logprob: -10.181402206420898
    10. ' ' → logprob: -10.556402206420898

Token 198: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003698973741848022
    2. ' print' → logprob: -8.625370025634766
    3. 'result' → logprob: -9.625370025634766
    4. 'S' → logprob: -9.875370025634766
    5. '#' → logprob: -10.500370025634766
    6. ')' → logprob: -10.875370025634766
    7. 'for' → logprob: -12.125370025634766
    8. '```' → logprob: -12.250370025634766
    9. '<|end|>' → logprob: -12.500370025634766
    10. '.' → logprob: -13.375370025634766

Token 199: ' fait' (ID: 7473)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009572625160217285
    2. ' print' → logprob: -4.759572505950928
    3. '#' → logprob: -7.634572505950928
    4. 'continue' → logprob: -9.759572982788086
    5. ' imprime' → logprob: -9.759572982788086
    6. 'pr' → logprob: -10.134572982788086
    7. '.print' → logprob: -10.634572982788086
    8. 'div' → logprob: -10.759572982788086
    9. '#print' → logprob: -10.759572982788086
    10. '```' → logprob: -11.134572982788086

Token 200: ' pareil' (ID: 155569)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8101099133491516
    2. ' la' → logprob: -1.4351098537445068
    3. 'la' → logprob: -2.060109853744507
    4. 'le' → logprob: -2.935109853744507
    5. 'S' → logprob: -2.935109853744507
    6. 'print' → logprob: -3.435109853744507
    7. 'une' → logprob: -4.935110092163086
    8. ' S' → logprob: -5.060110092163086
    9. 's' → logprob: -5.310110092163086
    10. 'l' → logprob: -5.435110092163086

Token 201: ' avec' (ID: 3937)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.004757511429488659
    2. 'for' → logprob: -5.379757404327393
    3. ' for' → logprob: -9.87975788116455
    4. ' S' → logprob: -10.37975788116455
    5. '
' → logprob: -11.12975788116455
    6. '#' → logprob: -11.12975788116455
    7. ',' → logprob: -11.37975788116455
    8. 'T' → logprob: -12.50475788116455
    9. ',
' → logprob: -13.00475788116455
    10. '```' → logprob: -13.87975788116455

Token 202: ' sin' (ID: 2187)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.17879250645637512
    2. 'T' → logprob: -2.3037924766540527
    3. 'S' → logprob: -3.6787924766540527
    4. ' math' → logprob: -4.053792476654053
    5. 'for' → logprob: -4.303792476654053
    6. 'N' → logprob: -6.553792476654053
    7. 'range' → logprob: -6.678792476654053
    8. 'import' → logprob: -6.928792476654053
    9. '0' → logprob: -7.178792476654053
    10. '(math' → logprob: -7.428792476654053

Token 203: ' (' (ID: 350)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.5094070477061905e-05
    2. ' S' → logprob: -11.500015258789062
    3. 'for' → logprob: -12.750015258789062
    4. 'import' → logprob: -14.125015258789062
    5. ',' → logprob: -14.375015258789062
    6. 's' → logprob: -15.500015258789062
    7. '
' → logprob: -16.250015258789062
    8. '```' → logprob: -16.500015258789062
    9. ' ' → logprob: -16.625015258789062
    10. '  
' → logprob: -16.750015258789062

Token 204: 'cop' (ID: 47750)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00839944090694189
    2. ')
' → logprob: -5.383399486541748
    3. ')' → logprob: -5.633399486541748
    4. 'for' → logprob: -9.38339900970459
    5. ' S' → logprob: -9.63339900970459
    6. '
' → logprob: -11.63339900970459
    7. ' )
' → logprob: -11.88339900970459
    8. ')

' → logprob: -12.38339900970459
    9. ',' → logprob: -12.50839900970459
    10. 'import' → logprob: -12.63339900970459

Token 205: 'ié' (ID: 143445)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -1.1884866952896118
    2. 'lement' → logprob: -1.4384866952896118
    3. 'l' → logprob: -2.1884865760803223
    4. 'lus' → logprob: -2.3134865760803223
    5. 'us' → logprob: -2.8134865760803223
    6. '#' → logprob: -2.9384865760803223
    7. 'h' → logprob: -3.4384865760803223
    8. 'r' → logprob: -3.8134865760803223
    9. 'm' → logprob: -3.9384865760803223
    10. '(S' → logprob: -5.188486576080322

Token 206: '/c' (ID: 4308)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.18862631916999817
    2. 'from' → logprob: -2.188626289367676
    3. ')' → logprob: -3.688626289367676
    4. 'for' → logprob: -4.188626289367676
    5. 'import' → logprob: -5.563626289367676
    6. 'e' → logprob: -5.563626289367676
    7. '(' → logprob: -5.938626289367676
    8. 'S' → logprob: -6.438626289367676
    9. ')
' → logprob: -6.688626289367676
    10. 'T' → logprob: -6.813626289367676

Token 207: 'oll' (ID: 1176)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.009307271800935268
    2. 'ol' → logprob: -5.509307384490967
    3. '#' → logprob: -6.009307384490967
    4. 'oll' → logprob: -6.259307384490967
    5. 'on' → logprob: -8.384306907653809
    6. 'ont' → logprob: -9.009306907653809
    7. 'op' → logprob: -9.384306907653809
    8. 'ost' → logprob: -9.634306907653809
    9. 'ols' → logprob: -9.759306907653809
    10. 'osm' → logprob: -10.009306907653809

Token 208: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.15955787897109985
    2. 'ed' → logprob: -2.909557819366455
    3. 'ic' → logprob: -3.159557819366455
    4. 'ée' → logprob: -4.034557819366455
    5. 'er' → logprob: -4.659557819366455
    6. 'e' → logprob: -5.159557819366455
    7. 'iqué' → logprob: -5.409557819366455
    8. 'et' → logprob: -6.409557819366455
    9. '#' → logprob: -6.409557819366455
    10. 'ié' → logprob: -6.409557819366455

Token 209: '...)
' (ID: 66563)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1212717741727829
    2. ')' → logprob: -2.871271848678589
    3. 'S' → logprob: -2.996271848678589
    4. 's' → logprob: -5.49627161026001
    5. 'for' → logprob: -6.37127161026001
    6. ' )
' → logprob: -7.24627161026001
    7. ' S' → logprob: -7.74627161026001
    8. ' for' → logprob: -8.621272087097168
    9. 'T' → logprob: -8.996272087097168
    10. ')
' → logprob: -9.121272087097168

Token 210: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.796184723294573e-06
    2. ' S' → logprob: -12.375005722045898
    3. '  
' → logprob: -14.750005722045898
    4. 'for' → logprob: -14.875005722045898
    5. ' ' → logprob: -15.750005722045898
    6. '```' → logprob: -16.1250057220459
    7. '
' → logprob: -16.3750057220459
    8. 's' → logprob: -16.3750057220459
    9. 'import' → logprob: -16.7500057220459
    10. 'T' → logprob: -16.8750057220459

Token 211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -14.125000953674316
    3. '
' → logprob: -16.75
    4. '```' → logprob: -18.25
    5. '

' → logprob: -18.375
    6. ' =' → logprob: -18.75
    7. '=' → logprob: -18.75
    8. '_' → logprob: -19.125
    9. ' ' → logprob: -19.75
    10. '２' → logprob: -20.25

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740772247314453
    2. ' =' → logprob: -0.9740772247314453
    3. ' ' → logprob: -15.474077224731445
    4. 's' → logprob: -18.099077224731445
    5. ' ' → logprob: -18.099077224731445
    6. ' +=' → logprob: -18.099077224731445
    7. '＝' → logprob: -18.599077224731445
    8. '+=' → logprob: -19.099077224731445
    9. '=S' → logprob: -19.099077224731445
    10. '=
' → logprob: -19.474077224731445

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.006715774536133
    4. ' ' → logprob: -16.881715774536133
    5. '  ' → logprob: -17.381715774536133
    6. '1' → logprob: -18.569215774536133
    7. '.' → logprob: -18.694215774536133
    8. 'float' → logprob: -18.881715774536133
    9. '	' → logprob: -19.569215774536133
    10. '=' → logprob: -19.569215774536133

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.500051498413086
    4. '.' → logprob: -18.250051498413086
    5. '1' → logprob: -18.875051498413086
    6. '  ' → logprob: -18.937551498413086
    7. '-' → logprob: -19.312551498413086
    8. 'float' → logprob: -19.312551498413086
    9. '...' → logprob: -19.437551498413086
    10. 'math' → logprob: -19.500051498413086

Token 215: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011009939044015482
    2. '0' → logprob: -9.125109672546387
    3. '
' → logprob: -15.000109672546387
    4. 'for' → logprob: -15.250109672546387
    5. '.
' → logprob: -15.250109672546387
    6. '```' → logprob: -16.000110626220703
    7. '(' → logprob: -16.500110626220703
    8. '=' → logprob: -16.750110626220703
    9. ' ' → logprob: -17.000110626220703
    10. '1' → logprob: -17.375110626220703

Token 216: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.723973582556937e-05
    2. ' for' → logprob: -11.000017166137695
    3. '=' → logprob: -15.125017166137695
    4. '0' → logprob: -15.875017166137695
    5. '
' → logprob: -17.500017166137695
    6. 'import' → logprob: -18.375017166137695
    7. '+=' → logprob: -18.875017166137695
    8. '+' → logprob: -19.000017166137695
    9. '```' → logprob: -19.250017166137695
    10. '=
' → logprob: -19.375017166137695

Token 217: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08895779401063919
    2. ' i' → logprob: -2.4639577865600586
    3. 'j' → logprob: -11.338957786560059
    4. 'k' → logprob: -12.963957786560059
    5. ' j' → logprob: -13.588957786560059
    6. '	i' → logprob: -13.838957786560059
    7. ' ' → logprob: -14.713957786560059
    8. ' ' → logprob: -14.963957786560059
    9. '```' → logprob: -15.713957786560059
    10. ' k' → logprob: -15.713957786560059

Token 218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17978377640247345
    2. 'in' → logprob: -1.804783821105957
    3. ' ' → logprob: -10.679783821105957
    4. 'n' → logprob: -11.679783821105957
    5. '0' → logprob: -13.679783821105957
    6. ' i' → logprob: -14.179783821105957
    7. 'i' → logprob: -14.179783821105957
    8. '1' → logprob: -14.179783821105957
    9. 'range' → logprob: -14.304783821105957
    10. ',' → logprob: -14.429783821105957

Token 219: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -16.754077911376953
    4. 'in' → logprob: -17.379077911376953
    5. '	range' → logprob: -18.879077911376953
    6. ' in' → logprob: -19.379077911376953
    7. ' ' → logprob: -19.629077911376953
    8. '  ' → logprob: -20.129077911376953
    9. 'rang' → logprob: -20.754077911376953
    10. '   ' → logprob: -21.379077911376953

Token 220: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00017040544480551034
    2. 'range' → logprob: -9.125170707702637
    3. '(' → logprob: -10.500170707702637
    4. 'N' → logprob: -11.000170707702637
    5. '(range' → logprob: -11.375170707702637
    6. ' range' → logprob: -13.125170707702637
    7. '(S' → logprob: -13.375170707702637
    8. '(n' → logprob: -14.000170707702637
    9. 'Range' → logprob: -14.625170707702637
    10. '1' → logprob: -15.500170707702637

Token 221: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10885933041572571
    2. '):' → logprob: -2.3588593006134033
    3. '+' → logprob: -4.983859539031982
    4. ':' → logprob: -6.608859539031982
    5. ':
' → logprob: -9.108859062194824
    6. ',' → logprob: -9.608859062194824
    7. '   ' → logprob: -9.733859062194824
    8. '):
' → logprob: -9.733859062194824
    9. ')' → logprob: -10.233859062194824
    10. '  ' → logprob: -10.483859062194824

Token 222: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24640417098999023
    2. '   ' → logprob: -1.9964041709899902
    3. 'for' → logprob: -2.4964041709899902
    4. '	for' → logprob: -8.871404647827148
    5. ' ' → logprob: -10.121404647827148
    6. '  ' → logprob: -11.871404647827148
    7. ' range' → logprob: -13.496404647827148
    8. 'range' → logprob: -14.871404647827148
    9. ' in' → logprob: -15.371404647827148
    10. 'import' → logprob: -15.871404647827148

Token 223: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025282183196395636
    2. ' for' → logprob: -6.002528190612793
    3. '   ' → logprob: -9.877528190612793
    4. '	for' → logprob: -15.002528190612793
    5. 'j' → logprob: -15.377528190612793
    6. ' ' → logprob: -15.502528190612793
    7. 'import' → logprob: -15.752528190612793
    8. '  ' → logprob: -15.877528190612793
    9. 'range' → logprob: -16.62752914428711
    10. 'from' → logprob: -17.75252914428711

Token 224: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1128259226679802
    2. ' j' → logprob: -2.237825870513916
    3. 'i' → logprob: -13.612826347351074
    4. '	j' → logprob: -14.237826347351074
    5. '   ' → logprob: -14.487826347351074
    6. '<|end|>' → logprob: -14.737826347351074
    7. '_j' → logprob: -15.737826347351074
    8. ' ' → logprob: -15.862826347351074
    9. ' i' → logprob: -16.237825393676758
    10. '$j' → logprob: -16.487825393676758

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35802531242370605
    2. '(i' → logprob: -1.233025312423706
    3. 'in' → logprob: -4.983025550842285
    4. '(j' → logprob: -6.233025550842285
    5. ' (' → logprob: -7.858025550842285
    6. 'range' → logprob: -8.983025550842285
    7. '(' → logprob: -9.358025550842285
    8. '   ' → logprob: -10.358025550842285
    9. '=i' → logprob: -10.858025550842285
    10. ' i' → logprob: -10.858025550842285

Token 226: ' range' (ID: 3352)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.26368051767349243
    2. 'range' → logprob: -1.5136804580688477
    3. ' range' → logprob: -4.763680458068848
    4. '(range' → logprob: -5.763680458068848
    5. ' (' → logprob: -12.638680458068848
    6. 'i' → logprob: -13.138680458068848
    7. '   ' → logprob: -13.888680458068848
    8. ' i' → logprob: -14.263680458068848
    9. '(' → logprob: -14.638680458068848
    10. '[i' → logprob: -14.638680458068848

Token 227: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.750001907348633
    3. '(j' → logprob: -14.250001907348633
    4. ' (' → logprob: -15.500001907348633
    5. 'range' → logprob: -15.750001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '(range' → logprob: -17.375001907348633
    8. '(I' → logprob: -18.125001907348633
    9. '(N' → logprob: -18.250001907348633
    10. 'i' → logprob: -18.250001907348633

Token 228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001093841710826382
    2. ' +' → logprob: -9.750109672546387
    3. '1' → logprob: -10.250109672546387
    4. '+j' → logprob: -11.250109672546387
    5. '+
' → logprob: -14.125109672546387
    6. '+,' → logprob: -14.250109672546387
    7. '```' → logprob: -14.750109672546387
    8. '   ' → logprob: -14.875109672546387
    9. '+i' → logprob: -15.500109672546387
    10. '()+' → logprob: -16.12510871887207

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6776029699249193e-05
    2. ' ' → logprob: -10.75002670288086
    3. '+' → logprob: -13.00002670288086
    4. '2' → logprob: -13.37502670288086
    5. '   ' → logprob: -14.50002670288086
    6. '```' → logprob: -15.37502670288086
    7. ',' → logprob: -15.50002670288086
    8. 'int' → logprob: -16.62502670288086
    9. 'range' → logprob: -16.62502670288086
    10. '  ' → logprob: -16.93752670288086

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001673061487963423
    2. ' ,' → logprob: -9.250166893005371
    3. ',j' → logprob: -10.875166893005371
    4. '1' → logprob: -10.875166893005371
    5. ',N' → logprob: -11.500166893005371
    6. '   ' → logprob: -12.000166893005371
    7. '```' → logprob: -12.000166893005371
    8. '+' → logprob: -12.875166893005371
    9. 'j' → logprob: -13.000166893005371
    10. 'N' → logprob: -13.250166893005371

Token 231: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0017036291537806392
    2. ' N' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.251703262329102
    4. '<|end|>' → logprob: -15.251703262329102
    5. ' ' → logprob: -15.376703262329102
    6. '	N' → logprob: -16.2517032623291
    7. '  ' → logprob: -16.5017032623291
    8. '(N' → logprob: -17.2517032623291
    9. '```' → logprob: -17.3767032623291
    10. 'n' → logprob: -17.3767032623291

Token 232: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6346600651741028
    2. '):' → logprob: -0.7596600651741028
    3. ':' → logprob: -7.009660243988037
    4. ',' → logprob: -7.259660243988037
    5. '):

' → logprob: -9.134659767150879
    6. '   ' → logprob: -9.259659767150879
    7. '):
' → logprob: -10.009659767150879
    8. ')' → logprob: -10.509659767150879
    9. '```' → logprob: -10.509659767150879
    10. 'N' → logprob: -10.759659767150879

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4613388180732727
    2. '   ' → logprob: -1.086338758468628
    3. 'S' → logprob: -3.711338758468628
    4. ' S' → logprob: -5.086338996887207
    5. '           ' → logprob: -6.586338996887207
    6. '               ' → logprob: -10.836338996887207
    7. '     ' → logprob: -10.961338996887207
    8. ' ' → logprob: -10.961338996887207
    9. '  ' → logprob: -11.211338996887207
    10. '      ' → logprob: -11.586338996887207

Token 234: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.00832543894648552
    2. ' S' → logprob: -5.008325576782227
    3. '       ' → logprob: -6.758325576782227
    4. '   ' → logprob: -8.258325576782227
    5. '           ' → logprob: -8.633325576782227
    6. ' ' → logprob: -12.883325576782227
    7. '               ' → logprob: -12.883325576782227
    8. '  ' → logprob: -13.383325576782227
    9. '        ' → logprob: -13.883325576782227
    10. '	S' → logprob: -14.008325576782227

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5577775128767826e-06
    2. '+=' → logprob: -12.500005722045898
    3. ' +=' → logprob: -13.375005722045898
    4. '+' → logprob: -16.1250057220459
    5. '```' → logprob: -16.6250057220459
    6. '1' → logprob: -17.2500057220459
    7. '₂' → logprob: -17.5000057220459
    8. '۲' → logprob: -17.6250057220459
    9. '[' → logprob: -17.8750057220459
    10. ' ' → logprob: -18.2500057220459

Token 236: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3868883550167084
    2. ' +=' → logprob: -1.1368883848190308
    3. '+=(' → logprob: -12.38688850402832
    4. ' -=' → logprob: -12.51188850402832
    5. ']+=' → logprob: -13.01188850402832
    6. '-=' → logprob: -13.26188850402832
    7. '+' → logprob: -13.38688850402832
    8. '=' → logprob: -13.63688850402832
    9. ' ' → logprob: -14.01188850402832
    10. '   ' → logprob: -14.38688850402832

Token 237: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0032095611095428467
    2. ' math' → logprob: -5.753209590911865
    3. '(math' → logprob: -10.378209114074707
    4. 'Math' → logprob: -15.753209114074707
    5. '.math' → logprob: -16.378210067749023
    6. '   ' → logprob: -16.378210067749023
    7. '2' → logprob: -16.878210067749023
    8. '(' → logprob: -17.003210067749023
    9. '1' → logprob: -17.128210067749023
    10. ' ' → logprob: -17.378210067749023

Token 238: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -6.408677290892228e-05
    2. '.' → logprob: -9.7500638961792
    3. '.cos' → logprob: -12.2500638961792
    4. 'sin' → logprob: -14.5000638961792
    5. '.sqrt' → logprob: -16.125064849853516
    6. '.Sin' → logprob: -16.125064849853516
    7. '.s' → logprob: -16.250064849853516
    8. '.py' → logprob: -16.750064849853516
    9. ' .' → logprob: -17.000064849853516
    10. '.math' → logprob: -17.500064849853516

Token 239: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.00027825910365208983
    2. '(' → logprob: -8.25027847290039
    3. ' (' → logprob: -11.12527847290039
    4. '(
' → logprob: -13.50027847290039
    5. 'T' → logprob: -14.87527847290039
    6. '(S' → logprob: -15.62527847290039
    7. '((' → logprob: -16.00027847290039
    8. '<|end|>' → logprob: -16.00027847290039
    9. '(t' → logprob: -17.75027847290039
    10. '()' → logprob: -18.87527847290039

Token 240: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[j' → logprob: -13.625001907348633
    3. '[' → logprob: -14.125001907348633
    4. 'i' → logprob: -15.625001907348633
    5. ' [' → logprob: -16.500001907348633
    6. '[I' → logprob: -17.000001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '(i' → logprob: -18.625001907348633
    9. '```' → logprob: -19.250001907348633
    10. '[
' → logprob: -19.375001907348633

Token 241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13391095399856567
    2. '+' → logprob: -2.508910894393921
    3. ')' → logprob: -4.1339111328125
    4. ' +' → logprob: -4.5089111328125
    5. '[j' → logprob: -4.6339111328125
    6. ']+' → logprob: -5.3839111328125
    7. '[' → logprob: -6.3839111328125
    8. '[i' → logprob: -7.8839111328125
    9. ' ' → logprob: -8.5089111328125
    10. '+j' → logprob: -9.2589111328125

Token 242: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4742093086242676
    2. ' +' → logprob: -0.9742093086242676
    3. '[' → logprob: -9.59920883178711
    4. ')' → logprob: -10.47420883178711
    5. '+j' → logprob: -11.47420883178711
    6. ' ' → logprob: -11.72420883178711
    7. '[j' → logprob: -11.97420883178711
    8. ' plus' → logprob: -12.34920883178711
    9. '   ' → logprob: -13.47420883178711
    10. '[i' → logprob: -13.97420883178711

Token 243: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0004960790392942727
    2. ' T' → logprob: -7.625495910644531
    3. '[T' → logprob: -12.000495910644531
    4. '(T' → logprob: -14.125495910644531
    5. '[' → logprob: -14.750495910644531
    6. '[j' → logprob: -15.250495910644531
    7. '[
' → logprob: -15.875495910644531
    8. '   ' → logprob: -15.875495910644531
    9. '	T' → logprob: -16.12549591064453
    10. ' ' → logprob: -16.50049591064453

Token 244: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00048048171447589993
    2. 'j' → logprob: -7.750480651855469
    3. '[' → logprob: -10.125480651855469
    4. '[i' → logprob: -12.250480651855469
    5. '[
' → logprob: -13.500480651855469
    6. ')' → logprob: -13.875480651855469
    7. '```' → logprob: -14.250480651855469
    8. ']' → logprob: -15.250480651855469
    9. ' [' → logprob: -15.375480651855469
    10. '	j' → logprob: -15.500480651855469

Token 245: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. '])' → logprob: -10.875031471252441
    3. ' )' → logprob: -11.500031471252441
    4. '）' → logprob: -14.375031471252441
    5. ']' → logprob: -14.500031471252441
    6. '`)' → logprob: -14.500031471252441
    7. '")' → logprob: -15.250031471252441
    8. '))' → logprob: -16.000030517578125
    9. ')*' → logprob: -16.625030517578125
    10. ' ' → logprob: -16.625030517578125

Token 246: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.021426741033792496
    2. '*' → logprob: -3.8964266777038574
    3. '*(' → logprob: -8.021427154541016
    4. ' ' → logprob: -8.271427154541016
    5. '(' → logprob: -9.771427154541016
    6. '<|end|>' → logprob: -9.896427154541016
    7. ' (' → logprob: -10.396427154541016
    8. '0' → logprob: -10.521427154541016
    9. '**' → logprob: -10.771427154541016
    10. ')' → logprob: -10.896427154541016

Token 247: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2813822329044342
    2. ' (' → logprob: -1.4063822031021118
    3. '(' → logprob: -8.53138256072998
    4. ' ' → logprob: -11.90638256072998
    5. '(L' → logprob: -11.90638256072998
    6. '2' → logprob: -12.28138256072998
    7. '   ' → logprob: -12.28138256072998
    8. '(n' → logprob: -13.03138256072998
    9. '  ' → logprob: -13.15638256072998
    10. '1' → logprob: -13.78138256072998

Token 248: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00011892046313732862
    2. '(N' → logprob: -9.25011920928955
    3. ' N' → logprob: -11.00011920928955
    4. '   ' → logprob: -12.37511920928955
    5. '	N' → logprob: -14.50011920928955
    6. ' (' → logprob: -15.12511920928955
    7. ' ' → logprob: -15.37511920928955
    8. '2' → logprob: -16.000118255615234
    9. '  ' → logprob: -16.125118255615234
    10. '0' → logprob: -16.875118255615234

Token 249: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519548535346985
    2. '+' → logprob: -1.5019547939300537
    3. ' ' → logprob: -10.751955032348633
    4. '-' → logprob: -13.626955032348633
    5. ' -' → logprob: -14.001955032348633
    6. '<|end|>' → logprob: -14.501955032348633
    7. '   ' → logprob: -14.876955032348633
    8. ' +
' → logprob: -15.126955032348633
    9. '  ' → logprob: -15.376955032348633
    10. 'import' → logprob: -15.751955032348633

Token 250: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42871183156967163
    2. ' ' → logprob: -1.0537118911743164
    3. '   ' → logprob: -12.178711891174316
    4. '  ' → logprob: -12.928711891174316
    5. '1' → logprob: -13.678711891174316
    6. ' ' → logprob: -14.803711891174316
    7. '       ' → logprob: -15.116211891174316
    8. '    ' → logprob: -15.303711891174316
    9. '     ' → logprob: -15.553711891174316
    10. '	' → logprob: -15.553711891174316

Token 251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004903609515167773
    2. ' ' → logprob: -7.625490188598633
    3. '   ' → logprob: -13.750490188598633
    4. '  ' → logprob: -14.750490188598633
    5. '1' → logprob: -15.750490188598633
    6. '(' → logprob: -16.125490188598633
    7. '       ' → logprob: -16.250490188598633
    8. '           ' → logprob: -16.375490188598633
    9. '     ' → logprob: -16.500490188598633
    10. '```' → logprob: -16.625490188598633

Token 252: ' *' (ID: 425)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.23541578650474548
    2. '(i' → logprob: -1.6104158163070679
    3. ' *' → logprob: -4.860415935516357
    4. '(' → logprob: -7.235415935516357
    5. '<|end|>' → logprob: -7.985415935516357
    6. ' ' → logprob: -8.3604154586792
    7. '   ' → logprob: -8.4854154586792
    8. '  ' → logprob: -8.7354154586792
    9. '    ' → logprob: -8.8604154586792
    10. '*' → logprob: -9.4854154586792

Token 253: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.038097262382507324
    2. ' (' → logprob: -3.288097381591797
    3. '(' → logprob: -10.413097381591797
    4. '(j' → logprob: -10.663097381591797
    5. '(I' → logprob: -14.788097381591797
    6. '   ' → logprob: -14.788097381591797
    7. '[i' → logprob: -14.913097381591797
    8. ' i' → logprob: -15.663097381591797
    9. 'i' → logprob: -15.788097381591797
    10. '  ' → logprob: -15.913097381591797

Token 254: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.280175097752362e-05
    2. 'j' → logprob: -10.125082969665527
    3. ' i' → logprob: -10.125082969665527
    4. '(i' → logprob: -13.625082969665527
    5. '   ' → logprob: -14.250082969665527
    6. '	i' → logprob: -15.250082969665527
    7. ')i' → logprob: -15.625082969665527
    8. ' ' → logprob: -16.25008201599121
    9. '[i' → logprob: -16.50008201599121
    10. ')' → logprob: -16.75008201599121

Token 255: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6986945867538452
    2. ' -' → logprob: -0.6986945867538452
    3. '-j' → logprob: -5.198694705963135
    4. ' ' → logprob: -12.198694229125977
    5. '   ' → logprob: -13.948694229125977
    6. '```' → logprob: -14.823694229125977
    7. 'j' → logprob: -14.948694229125977
    8. '<|end|>' → logprob: -15.573694229125977
    9. '  ' → logprob: -15.698694229125977
    10. '	' → logprob: -16.073694229125977

Token 256: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010386446956545115
    2. ' j' → logprob: -6.876038551330566
    3. '   ' → logprob: -13.001038551330566
    4. '	j' → logprob: -13.751038551330566
    5. ' ' → logprob: -13.876038551330566
    6. '-j' → logprob: -15.001038551330566
    7. '  ' → logprob: -15.001038551330566
    8. ')' → logprob: -15.376038551330566
    9. '```' → logprob: -16.063539505004883
    10. '    ' → logprob: -16.438539505004883

Token 257: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20143672823905945
    2. ')' → logprob: -1.7014367580413818
    3. ')))' → logprob: -10.951436996459961
    4. '))
' → logprob: -12.701436996459961
    5. ')}' → logprob: -14.576436996459961
    6. ' )' → logprob: -14.701436996459961
    7. ')
' → logprob: -14.951436996459961
    8. ' ))' → logprob: -14.951436996459961
    9. '       ' → logprob: -15.201436996459961
    10. '))

' → logprob: -15.451436996459961

Token 258: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20294302701950073
    2. 'print' → logprob: -1.9529430866241455
    3. 'S' → logprob: -4.077942848205566
    4. 'mean' → logprob: -5.327942848205566
    5. 'M' → logprob: -5.577942848205566
    6. ')' → logprob: -5.827942848205566
    7. '#' → logprob: -6.327942848205566
    8. 'R' → logprob: -6.702942848205566
    9. 'res' → logprob: -6.702942848205566
    10. 'score' → logprob: -6.827942848205566

Token 259: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.46260571479797363
    2. 'result' → logprob: -1.3376057147979736
    3. 'R' → logprob: -3.3376057147979736
    4. 'if' → logprob: -4.5876054763793945
    5. 'M' → logprob: -4.8376054763793945
    6. 'S' → logprob: -4.8376054763793945
    7. 'res' → logprob: -4.9626054763793945
    8. 'score' → logprob: -5.3376054763793945
    9. '#' → logprob: -5.4626054763793945
    10. 'r' → logprob: -5.7126054763793945

Token 260: 'ichage' (ID: 118475)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.44367265701293945
    2. 'iche' → logprob: -1.9436726570129395
    3. 'ich' → logprob: -2.1936726570129395
    4. 'ichage' → logprob: -2.9436726570129395
    5. 'icher' → logprob: -3.0686726570129395
    6. '#' → logprob: -5.8186726570129395
    7. 'ic' → logprob: -6.9436726570129395
    8. ' print' → logprob: -7.9436726570129395
    9. '#print' → logprob: -9.943672180175781
    10. 'er' → logprob: -10.443672180175781

Token 261: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.250000953674316
    3. '
' → logprob: -17.375
    4. ' print' → logprob: -17.5
    5. 'import' → logprob: -18.125
    6. '#print' → logprob: -18.5
    7. 'result' → logprob: -19.0
    8. 'for' → logprob: -19.25
    9. '``' → logprob: -19.625
    10. ')
' → logprob: -19.75

Token 262: ' résultat' (ID: 62556)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.667186439037323
    2. 'result' → logprob: -1.5421864986419678
    3. 'abs' → logprob: -2.0421864986419678
    4. 'max' → logprob: -3.1671864986419678
    5. 'math' → logprob: -3.5421864986419678
    6. 'round' → logprob: -3.5421864986419678
    7. 'rés' → logprob: -3.9171864986419678
    8. 's' → logprob: -5.542186260223389
    9. 'r' → logprob: -5.542186260223389
    10. '(int' → logprob: -6.167186260223389

Token 263: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -15.375000953674316
    3. '```' → logprob: -15.375000953674316
    4. 'result' → logprob: -16.125
    5. '
' → logprob: -17.875
    6. 'import' → logprob: -18.625
    7. '#print' → logprob: -18.875
    8. 'for' → logprob: -20.25
    9. '``' → logprob: -20.875
    10. '#' → logprob: -21.125

Token 264: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3676733690081164e-05
    2. '```' → logprob: -10.87502384185791
    3. '
' → logprob: -13.25002384185791
    4. 'result' → logprob: -13.87502384185791
    5. ')
' → logprob: -14.00002384185791
    6. ' print' → logprob: -14.62502384185791
    7. 'import' → logprob: -15.37502384185791
    8. '``' → logprob: -15.37502384185791
    9. '#print' → logprob: -16.250022888183594
    10. ')' → logprob: -17.000022888183594

Token 265: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024175195023417473
    2. 'result' → logprob: -3.7741751670837402
    3. 'res' → logprob: -8.149175643920898
    4. 'R' → logprob: -8.524175643920898
    5. ' print' → logprob: -8.774175643920898
    6. 'S' → logprob: -9.024175643920898
    7. 'if' → logprob: -9.649175643920898
    8. 'r' → logprob: -10.524175643920898
    9. 'M' → logprob: -12.024175643920898
    10. 'D' → logprob: -12.274175643920898

Token 266: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.015621360391378403
    2. 'er' → logprob: -5.140621185302734
    3. 'ateur' → logprob: -6.140621185302734
    4. 'e' → logprob: -6.265621185302734
    5. 'print' → logprob: -6.390621185302734
    6. 'ate' → logprob: -6.515621185302734
    7. 'ée' → logprob: -7.015621185302734
    8. ',' → logprob: -7.890621185302734
    9. 'r' → logprob: -7.890621185302734
    10. 'eur' → logprob: -8.015621185302734

Token 267: ' par' (ID: 686)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.1700824499130249
    2. 'print' → logprob: -2.4200825691223145
    3. ' par' → logprob: -3.4200825691223145
    4. 'par' → logprob: -3.6700825691223145
    5. ' by' → logprob: -5.7950825691223145
    6. 'e' → logprob: -6.7950825691223145
    7. 'import' → logprob: -7.0450825691223145
    8. '"' → logprob: -7.6700825691223145
    9. '('' → logprob: -7.7950825691223145
    10. '()' → logprob: -8.045082092285156

Token 268: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6472708582878113
    2. '"' → logprob: -0.7722708582878113
    3. ''un' → logprob: -4.522270679473877
    4. 'un' → logprob: -6.522270679473877
    5. ''une' → logprob: -7.647270679473877
    6. 'space' → logprob: -7.647270679473877
    7. ''espace' → logprob: -7.897270679473877
    8. 'es' → logprob: -8.147271156311035
    9. 'une' → logprob: -8.897271156311035
    10. 'a' → logprob: -9.397271156311035

Token 269: ' espace' (ID: 66004)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7036725282669067
    2. '"' → logprob: -1.5786725282669067
    3. 'es' → logprob: -1.9536725282669067
    4. ''espace' → logprob: -2.703672409057617
    5. 'space' → logprob: -2.828672409057617
    6. 'e' → logprob: -4.703672409057617
    7. ' espace' → logprob: -4.953672409057617
    8. 'r' → logprob: -5.578672409057617
    9. 'esp' → logprob: -5.953672409057617
    10. 'n' → logprob: -6.203672409057617

Token 270: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.375000953674316
    3. ' print' → logprob: -15.500000953674316
    4. '
' → logprob: -16.125
    5. '``' → logprob: -19.0
    6. '#print' → logprob: -19.25
    7. 'printf' → logprob: -19.75
    8. 'import' → logprob: -21.0
    9. '(print' → logprob: -21.75
    10. 'println' → logprob: -22.0

Token 271: 'pas' (ID: 21122)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.317247167928144e-05
    2. ')' → logprob: -9.500093460083008
    3. ' print' → logprob: -11.125093460083008
    4. ')
' → logprob: -12.625093460083008
    5. 'end' → logprob: -16.625093460083008
    6. '```' → logprob: -17.375093460083008
    7. '")' → logprob: -17.875093460083008
    8. 'f' → logprob: -18.000093460083008
    9. 'printf' → logprob: -18.250093460083008
    10. '#print' → logprob: -18.250093460083008

Token 272: ' très' (ID: 9412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19192290306091309
    2. '"' → logprob: -2.316922903060913
    3. ''' → logprob: -3.066922903060913
    4. ' )' → logprob: -4.816923141479492
    5. ' ' → logprob: -5.566923141479492
    6. '#' → logprob: -5.816923141479492
    7. 'space' → logprob: -5.941923141479492
    8. '")' → logprob: -6.316923141479492
    9. 'es' → logprob: -6.441923141479492
    10. 's' → logprob: -6.816923141479492

Token 273: ' lis' (ID: 20784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6937543153762817
    2. 'ex' → logprob: -3.068754196166992
    3. 'utile' → logprob: -3.068754196166992
    4. 'f' → logprob: -3.193754196166992
    5. 'end' → logprob: -3.568754196166992
    6. 'clear' → logprob: -3.943754196166992
    7. 'pro' → logprob: -3.943754196166992
    8. ' fiable' → logprob: -4.068754196166992
    9. 'exact' → logprob: -4.068754196166992
    10. 'correct' → logprob: -4.193754196166992

Token 274: 'ible' (ID: 1430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2856069505214691
    2. 'e' → logprob: -1.6606069803237915
    3. ')' → logprob: -3.410606861114502
    4. '")' → logprob: -4.660606861114502
    5. 'import' → logprob: -5.660606861114502
    6. ' print' → logprob: -5.785606861114502
    7. 'f' → logprob: -6.285606861114502
    8. 'in' → logprob: -6.660606861114502
    9. '#' → logprob: -7.285606861114502
    10. 'on' → logprob: -7.785606861114502

Token 275: ' ça' (ID: 13590)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12087412923574448
    2. ')' → logprob: -2.8708741664886475
    3. 'print' → logprob: -2.8708741664886475
    4. ')
' → logprob: -8.120874404907227
    5. ',' → logprob: -8.495874404907227
    6. ' print' → logprob: -9.995874404907227
    7. '#' → logprob: -13.245874404907227
    8. ')

' → logprob: -13.495874404907227
    9. ')#' → logprob: -13.495874404907227
    10. ' )
' → logprob: -13.620874404907227

Token 276: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.13489839434623718
    2. ')' → logprob: -2.3848984241485596
    3. 'print' → logprob: -3.3848984241485596
    4. ')
' → logprob: -9.13489818572998
    5. ',' → logprob: -9.88489818572998
    6. ' print' → logprob: -10.00989818572998
    7. ')`
' → logprob: -12.50989818572998
    8. ')

' → logprob: -12.63489818572998
    9. ' )
' → logprob: -13.25989818572998
    10. ')#' → logprob: -13.75989818572998

Token 277: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -15.75
    3. ' print' → logprob: -17.75
    4. '
' → logprob: -18.875
    5. 'import' → logprob: -20.375
    6. '#print' → logprob: -20.625
    7. '``' → logprob: -21.125
    8. 'for' → logprob: -21.375
    9. 'S' → logprob: -21.625
    10. 'printf' → logprob: -22.125

Token 278: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.06983081996440887
    2. '(' → logprob: -2.819830894470215
    3. '(int' → logprob: -5.694830894470215
    4. '(f' → logprob: -5.944830894470215
    5. '(round' → logprob: -6.694830894470215
    6. '('' → logprob: -8.444830894470215
    7. '("' → logprob: -8.569830894470215
    8. 'S' → logprob: -9.569830894470215
    9. '(s' → logprob: -10.319830894470215
    10. '(abs' → logprob: -10.694830894470215

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ')' → logprob: -13.25000286102295
    3. ' ' → logprob: -14.87500286102295
    4. ',' → logprob: -15.37500286102295
    5. ' ,' → logprob: -17.125001907348633
    6. ' )' → logprob: -18.375001907348633
    7. '_' → logprob: -18.750001907348633
    8. ' S' → logprob: -19.000001907348633
    9. '  ' → logprob: -19.125001907348633
    10. ' -' → logprob: -19.375001907348633

Token 280: '/S' (ID: 16565)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019920398481190205
    2. ' ,' → logprob: -6.501992225646973
    3. ',S' → logprob: -7.626992225646973
    4. ',end' → logprob: -13.501992225646973
    5. ',s' → logprob: -15.126992225646973
    6. ',
' → logprob: -15.501992225646973
    7. ')' → logprob: -15.626992225646973
    8. ' S' → logprob: -15.751992225646973
    9. ',p' → logprob: -17.126991271972656
    10. ',int' → logprob: -17.376991271972656

Token 281: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013081525452435017
    2. ',' → logprob: -4.5130815505981445
    3. '(' → logprob: -7.5130815505981445
    4. '2' → logprob: -8.013081550598145
    5. ',L' → logprob: -8.263081550598145
    6. 'L' → logprob: -8.638081550598145
    7. ',S' → logprob: -9.013081550598145
    8. ',N' → logprob: -9.138081550598145
    9. 'S' → logprob: -9.763081550598145
    10. '(S' → logprob: -9.763081550598145

Token 282: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3874155282974243
    2. ' S' → logprob: -1.1374155282974243
    3. '"' → logprob: -7.887415409088135
    4. ' ' → logprob: -9.512415885925293
    5. '"S' → logprob: -10.137415885925293
    6. ''' → logprob: -11.137415885925293
    7. ' "' → logprob: -11.887415885925293
    8. '(S' → logprob: -12.137415885925293
    9. ''S' → logprob: -12.387415885925293
    10. ' ' → logprob: -12.387415885925293

Token 283: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019063818035647273
    2. ' )' → logprob: -6.876906394958496
    3. '1' → logprob: -7.251906394958496
    4. '2' → logprob: -9.376906394958496
    5. ',' → logprob: -11.001906394958496
    6. ')
' → logprob: -11.126906394958496
    7. '**' → logprob: -11.376906394958496
    8. '))' → logprob: -11.876906394958496
    9. ',)' → logprob: -12.251906394958496
    10. ')#' → logprob: -12.251906394958496

Token 284: '/S' (ID: 16565)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5879277586936951
    2. '/S' → logprob: -0.8379277586936951
    3. ')' → logprob: -4.58792781829834
    4. '/)' → logprob: -6.46292781829834
    5. ' /' → logprob: -9.08792781829834
    6. '/N' → logprob: -10.21292781829834
    7. '/')' → logprob: -11.46292781829834
    8. '/s' → logprob: -12.08792781829834
    9. '/T' → logprob: -12.33792781829834
    10. '/L' → logprob: -13.33792781829834

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.125000953674316
    3. '))' → logprob: -15.500000953674316
    4. ')`' → logprob: -16.625
    5. '')' → logprob: -17.75
    6. ')
' → logprob: -17.75
    7. '())' → logprob: -19.0
    8. '")' → logprob: -19.25
    9. ')")' → logprob: -19.25
    10. '()' → logprob: -19.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 283
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 187
Précision stricte (1ère position): 28.98%
Précision adaptée (1ère position): 30.74%
Précision (top 10): 66.08%
================================================================================
