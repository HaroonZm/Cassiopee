================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10 ** 9)
INF = float('inf')
MOD = 10 ** 9 + 7

N = int(sys.stdin.readline().strip())
XYH = []
for i in range(N):
    x, y, h = map(int, sys.stdin.readline().strip().split())
    XYH.append((x, y, h))

for y1 in range(101):
    for x1 in range(101):
        H = set()
        for x2, y2, h in XYH:
            tmph = abs(x1 - x2) + abs(y1 - y2) + h
            if h > 0:
                H.add(tmph)
        if len(H) == 1:
            ansh = list(H)[0]
            ok = True
            for x2, y2, h in XYH:
                expected = max(ansh - (abs(x1 - x2) + abs(y1 - y2)), 0)
                if expected != h:
                    ok = False
                    break
            if ok:
                print(x1, y1, ansh)
                sys.exit()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.3142704665660858
    2. '_limit' → logprob: -1.3142704963684082
    3. '_depth' → logprob: -7.189270496368408
    4. 'depth' → logprob: -8.93927001953125
    5. ' limit' → logprob: -9.93927001953125
    6. 'lim' → logprob: -10.31427001953125
    7. '_stack' → logprob: -12.18927001953125
    8. '_lim' → logprob: -12.31427001953125
    9. '(limit' → logprob: -12.31427001953125
    10. '-limit' → logprob: -12.93927001953125

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5358694731257856e-05
    2. '(
' → logprob: -11.000035285949707
    3. ' (' → logprob: -11.500035285949707
    4. '(

' → logprob: -13.000035285949707
    5. '("("' → logprob: -13.250035285949707
    6. '('' → logprob: -13.750035285949707
    7. '((' → logprob: -14.125035285949707
    8. '(.' → logprob: -14.625035285949707
    9. '```' → logprob: -14.750035285949707
    10. '(()' → logprob: -15.375035285949707

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007129970006644726
    2. '00' → logprob: -5.757130146026611
    3. '000' → logprob: -5.757130146026611
    4. '4' → logprob: -7.382130146026611
    5. '6' → logprob: -9.007129669189453
    6. '5' → logprob: -11.507129669189453
    7. '```' → logprob: -12.007129669189453
    8. ')' → logprob: -12.257129669189453
    9. '3' → logprob: -12.382129669189453
    10. '**' → logprob: -12.382129669189453

Token 11: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.008944734930992126
    2. '6' → logprob: -5.508944511413574
    3. '9' → logprob: -5.758944511413574
    4. '8' → logprob: -6.383944511413574
    5. ' ' → logprob: -11.383944511413574
    6. '```' → logprob: -16.50894546508789
    7. '10' → logprob: -19.38394546508789
    8. '5' → logprob: -19.88394546508789
    9. '  ' → logprob: -19.88394546508789
    10. '   ' → logprob: -20.38394546508789

Token 12: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0761500895023346
    2. '6' → logprob: -2.8261501789093018
    3. '9' → logprob: -4.576149940490723
    4. '8' → logprob: -5.576149940490723
    5. '```' → logprob: -14.826149940490723
    6. ' ' → logprob: -15.326149940490723
    7. '5' → logprob: -16.07615089416504
    8. '**' → logprob: -16.45115089416504
    9. '4' → logprob: -17.45115089416504
    10. '``' → logprob: -17.70115089416504

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.034592388459714e-06
    2. ' )' → logprob: -12.750005722045898
    3. '))' → logprob: -13.375005722045898
    4. ')
' → logprob: -13.750005722045898
    5. ')

' → logprob: -16.3750057220459
    6. '0' → logprob: -16.5000057220459
    7. ')`' → logprob: -16.5000057220459
    8. ')
' → logprob: -16.8750057220459
    9. '```' → logprob: -17.2500057220459
    10. '**' → logprob: -17.3750057220459

Token 14: 'INF' (ID: 64358)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3408559560775757
    2. '
' → logprob: -1.3408559560775757
    3. '(' → logprob: -2.0908560752868652
    4. ')' → logprob: -2.0908560752868652
    5. '\n' → logprob: -3.0908560752868652
    6. '' → logprob: -3.2158560752868652
    7. '(
' → logprob: -3.2158560752868652
    8. '```' → logprob: -3.3408560752868652
    9. '#' → logprob: -4.090856075286865
    10. 'def' → logprob: -4.215856075286865

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.139693021774292
    2. '=' → logprob: -2.264693021774292
    3. ')' → logprob: -4.014693260192871
    4. '_' → logprob: -5.139693260192871
    5. ' )' → logprob: -6.764693260192871
    6. '.' → logprob: -7.139693260192871
    7. ',' → logprob: -8.764693260192871
    8. ' =)' → logprob: -8.889693260192871
    9. '  ' → logprob: -9.764693260192871
    10. ' ' → logprob: -10.264693260192871

Token 16: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17918752133846283
    2. '10' → logprob: -2.429187536239624
    3. ' float' → logprob: -2.929187536239624
    4. 'float' → logprob: -3.804187536239624
    5. '1' → logprob: -8.679187774658203
    6. ' int' → logprob: -10.679187774658203
    7. 'int' → logprob: -10.804187774658203
    8. '9' → logprob: -12.679187774658203
    9. '100' → logprob: -12.929187774658203
    10. ' ' → logprob: -13.554187774658203

Token 17: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0007557853823527694
    2. '(' → logprob: -7.375755786895752
    3. '("' → logprob: -9.250755310058594
    4. ''' → logprob: -11.125755310058594
    5. '('+' → logprob: -12.625755310058594
    6. '('.')' → logprob: -13.125755310058594
    7. '('-' → logprob: -13.250755310058594
    8. '32' → logprob: -13.500755310058594
    9. ' ('' → logprob: -13.625755310058594
    10. '('_' → logprob: -13.750755310058594

Token 18: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.4764251410961151
    2. 'inf' → logprob: -1.1014251708984375
    3. ''' → logprob: -3.1014251708984375
    4. '"' → logprob: -7.4764251708984375
    5. ''i' → logprob: -8.351425170898438
    6. 'in' → logprob: -8.726425170898438
    7. ''ins' → logprob: -8.726425170898438
    8. 'info' → logprob: -9.226425170898438
    9. ''im' → logprob: -9.726425170898438
    10. ''inc' → logprob: -9.851425170898438

Token 19: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02975292131304741
    2. '')' → logprob: -3.5297529697418213
    3. ')'' → logprob: -14.029752731323242
    4. ''' → logprob: -14.154752731323242
    5. '")' → logprob: -15.654752731323242
    6. ' )' → logprob: -15.779752731323242
    7. '))' → logprob: -15.779752731323242
    8. '('' → logprob: -16.154752731323242
    9. '()' → logprob: -16.279752731323242
    10. ')
' → logprob: -16.654752731323242

Token 20: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11257670074701309
    2. '
' → logprob: -3.237576723098755
    3. '```' → logprob: -3.737576723098755
    4. '

' → logprob: -4.487576484680176
    5. '\' → logprob: -4.612576484680176
    6. '
' → logprob: -4.987576484680176
    7. '' → logprob: -5.612576484680176
    8. '\n' → logprob: -6.237576484680176
    9. 'd' → logprob: -7.237576484680176
    10. '#' → logprob: -7.237576484680176

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09069804847240448
    2. '=' → logprob: -2.465698003768921
    3. ' ' → logprob: -6.5906982421875
    4. ')' → logprob: -8.5906982421875
    5. '_' → logprob: -9.2156982421875
    6. ' =)' → logprob: -10.2156982421875
    7. ' )' → logprob: -10.7156982421875
    8. '<|end|>' → logprob: -11.4656982421875
    9. '.' → logprob: -11.7156982421875
    10. ',' → logprob: -12.0906982421875

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2015451043844223
    2. '10' → logprob: -1.7015451192855835
    3. '1' → logprob: -9.576544761657715
    4. '100' → logprob: -9.701544761657715
    5. '998' → logprob: -15.201544761657715
    6. 'int' → logprob: -15.451544761657715
    7. ' (' → logprob: -15.451544761657715
    8. ' ' → logprob: -15.701544761657715
    9. '2' → logprob: -15.951544761657715
    10. ' int' → logprob: -16.32654571533203

Token 23: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004789320519194007
    2. '100' → logprob: -7.750478744506836
    3. '1' → logprob: -10.375478744506836
    4. ' ' → logprob: -11.000478744506836
    5. '998' → logprob: -15.000478744506836
    6. 'int' → logprob: -16.750478744506836
    7. '(' → logprob: -16.875478744506836
    8. '2' → logprob: -18.750478744506836
    9. '１０' → logprob: -20.000478744506836
    10. '```' → logprob: -20.250478744506836

Token 24: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002033084398135543
    2. '**' → logprob: -6.252033233642578
    3. '09' → logprob: -9.377033233642578
    4. ' ' → logprob: -11.252033233642578
    5. '7' → logprob: -12.752033233642578
    6. ' **' → logprob: -13.377033233642578
    7. '```' → logprob: -13.627033233642578
    8. '0' → logprob: -14.252033233642578
    9. '_' → logprob: -15.627033233642578
    10. '6' → logprob: -16.252033233642578

Token 25: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.25
    3. ' ' → logprob: -19.25
    4. '```' → logprob: -19.375
    5. '+' → logprob: -20.0
    6. '10' → logprob: -20.375
    7. '９' → logprob: -21.125
    8. '   ' → logprob: -21.5
    9. '18' → logprob: -22.125
    10. '19' → logprob: -23.125

Token 26: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -19.25
    3. '９' → logprob: -20.375
    4. '```' → logprob: -20.875
    5. ' ' → logprob: -21.625
    6. '   ' → logprob: -23.125
    7. '+' → logprob: -24.5
    8. '18' → logprob: -24.75
    9. '10' → logprob: -24.75
    10. '
' → logprob: -25.5

Token 27: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018201919272542
    2. ' +' → logprob: -4.01820182800293
    3. '7' → logprob: -9.89320182800293
    4. '＋' → logprob: -14.39320182800293
    5. '+
' → logprob: -15.64320182800293
    6. '9' → logprob: -15.76820182800293
    7. ' plus' → logprob: -16.14320182800293
    8. ' ' → logprob: -16.39320182800293
    9. ' ' → logprob: -16.64320182800293
    10. ' +
' → logprob: -17.01820182800293

Token 28: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '+' → logprob: -18.125
    4. '   ' → logprob: -18.875
    5. '```' → logprob: -19.0
    6. '  ' → logprob: -20.25
    7. '9' → logprob: -20.625
    8. '７' → logprob: -20.75
    9. '07' → logprob: -20.875
    10. '17' → logprob: -21.4375

Token 29: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '７' → logprob: -20.5
    4. '```' → logprob: -20.625
    5. '   ' → logprob: -21.0
    6. '+' → logprob: -21.875
    7. '

' → logprob: -22.5625
    8. '۷' → logprob: -22.6875
    9. '' → logprob: -22.75
    10. '७' → logprob: -23.25

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03917284309864044
    2. '' → logprob: -4.789172649383545
    3. '
' → logprob: -4.914172649383545
    4. '

' → logprob: -5.039172649383545
    5. 'def' → logprob: -5.164172649383545
    6. '```' → logprob: -5.539172649383545
    7. '\n' → logprob: -5.664172649383545
    8. '\' → logprob: -6.539172649383545
    9. 'newline' → logprob: -7.414172649383545
    10. '#' → logprob: -7.414172649383545

Token 31: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.231070414185524
    2. '
' → logprob: -1.6060703992843628
    3. '

' → logprob: -5.856070518493652
    4. 'n' → logprob: -6.606070518493652
    5. '```' → logprob: -7.356070518493652
    6. '
' → logprob: -7.981070518493652
    7. 'd' → logprob: -8.856070518493652
    8. '' → logprob: -9.481070518493652
    9. '\' → logprob: -9.606070518493652
    10. 'class' → logprob: -10.231070518493652

Token 32: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30879297852516174
    2. ' =' → logprob: -1.8087929487228394
    3. '=' → logprob: -3.558793067932129
    4. ')' → logprob: -3.933793067932129
    5. '[' → logprob: -4.058793067932129
    6. '.' → logprob: -4.558793067932129
    7. ',' → logprob: -4.933793067932129
    8. '<|end|>' → logprob: -5.058793067932129
    9. ' )' → logprob: -5.808793067932129
    10. '>' → logprob: -6.308793067932129

Token 33: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07820355147123337
    2. ' ' → logprob: -2.8282034397125244
    3. 'int' → logprob: -4.2032036781311035
    4. ' input' → logprob: -7.2032036781311035
    5. '0' → logprob: -8.703203201293945
    6. 'input' → logprob: -9.328203201293945
    7. '10' → logprob: -9.453203201293945
    8. '[int' → logprob: -11.078203201293945
    9. '=int' → logprob: -11.203203201293945
    10. '1' → logprob: -11.703203201293945

Token 34: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474492609500885
    2. '(input' → logprob: -0.974492609500885
    3. 'input' → logprob: -7.97449254989624
    4. '('' → logprob: -10.099493026733398
    5. '()' → logprob: -10.974493026733398
    6. ' (' → logprob: -13.099493026733398
    7. '(raw' → logprob: -13.349493026733398
    8. ' input' → logprob: -13.349493026733398
    9. '(sys' → logprob: -13.349493026733398
    10. '(
' → logprob: -13.474493026733398

Token 35: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.5437068939208984
    2. '.readline' → logprob: -1.2937068939208984
    3. '.' → logprob: -2.0437068939208984
    4. '.argv' → logprob: -4.793706893920898
    5. '.input' → logprob: -5.043706893920898
    6. '.read' → logprob: -7.293706893920898
    7. ' .' → logprob: -9.793706893920898
    8. '.)' → logprob: -10.668706893920898
    9. '.stdout' → logprob: -11.043706893920898
    10. '.INPUT' → logprob: -11.168706893920898

Token 36: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.007054337300360203
    2. '.' → logprob: -5.007054328918457
    3. '.read' → logprob: -8.007054328918457
    4. '.)' → logprob: -13.007054328918457
    5. ')' → logprob: -13.632054328918457
    6. ' .' → logprob: -13.882054328918457
    7. '.readlines' → logprob: -15.007054328918457
    8. '.​' → logprob: -15.507054328918457
    9. ' readline' → logprob: -15.507054328918457
    10. '.Read' → logprob: -15.757054328918457

Token 37: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008806725963950157
    2. '()' → logprob: -4.7588067054748535
    3. ')' → logprob: -9.133807182312012
    4. '().' → logprob: -9.508807182312012
    5. '())
' → logprob: -12.383807182312012
    6. ' ())' → logprob: -12.758807182312012
    7. '(' → logprob: -13.633807182312012
    8. '()),' → logprob: -15.008807182312012
    9. '()))' → logprob: -15.133807182312012
    10. '()
' → logprob: -15.258807182312012

Token 38: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0025263146962970495
    2. 'rstrip' → logprob: -6.00252628326416
    3. ')' → logprob: -10.12752628326416
    4. 'read' → logprob: -12.50252628326416
    5. 'split' → logprob: -12.62752628326416
    6. ' strip' → logprob: -12.75252628326416
    7. 'r' → logprob: -15.12752628326416
    8. '-strip' → logprob: -15.62752628326416
    9. 'replace' → logprob: -15.75252628326416
    10. '_strip' → logprob: -16.252527236938477

Token 39: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02046971209347248
    2. '())' → logprob: -4.020469665527344
    3. '()' → logprob: -6.645469665527344
    4. '))' → logprob: -6.895469665527344
    5. '()))' → logprob: -13.395469665527344
    6. ' )' → logprob: -14.020469665527344
    7. '`)' → logprob: -14.395469665527344
    8. ')
' → logprob: -14.770469665527344
    9. '(' → logprob: -14.895469665527344
    10. ')))' → logprob: -15.270469665527344

Token 40: 'XY' (ID: 27825)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4385525584220886
    2. 'a' → logprob: -1.4385526180267334
    3. 'dp' → logprob: -2.6885526180267334
    4. 'arr' → logprob: -4.188552379608154
    5. 'graph' → logprob: -4.688552379608154
    6. 'data' → logprob: -4.938552379608154
    7. 'd' → logprob: -5.813552379608154
    8. 'numbers' → logprob: -5.938552379608154
    9. 'edges' → logprob: -6.188552379608154
    10. 'S' → logprob: -6.563552379608154

Token 41: 'H' (ID: 39)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.021656937897205353
    2. ' =' → logprob: -4.1466569900512695
    3. '=' → logprob: -6.0216569900512695
    4. '[' → logprob: -6.2716569900512695
    5. '[]' → logprob: -7.7716569900512695
    6. 'S' → logprob: -7.8966569900512695
    7. ')' → logprob: -8.89665699005127
    8. '_' → logprob: -9.14665699005127
    9. '[s' → logprob: -9.14665699005127
    10. '[:]' → logprob: -9.89665699005127

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03438323736190796
    2. '=' → logprob: -3.4093832969665527
    3. 's' → logprob: -7.909383296966553
    4. '[]' → logprob: -8.784382820129395
    5. '=[]' → logprob: -9.284382820129395
    6. '[' → logprob: -9.659382820129395
    7. ',' → logprob: -10.909382820129395
    8. '_' → logprob: -11.659382820129395
    9. ')' → logprob: -11.784382820129395
    10. '[:]' → logprob: -12.034382820129395

Token 43: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01789354532957077
    2. '[int' → logprob: -4.267893314361572
    3. '[list' → logprob: -6.017893314361572
    4. ' [' → logprob: -7.767893314361572
    5. '[]' → logprob: -8.39289379119873
    6. '[List' → logprob: -8.64289379119873
    7. '[str' → logprob: -9.01789379119873
    8. '[len' → logprob: -9.76789379119873
    9. '[array' → logprob: -9.76789379119873
    10. '[s' → logprob: -10.01789379119873

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023917861108202487
    2. ' for' → logprob: -8.375239372253418
    3. '[' → logprob: -12.000239372253418
    4. 'f' → logprob: -14.750239372253418
    5. '<|end|>' → logprob: -14.875239372253418
    6. '
' → logprob: -15.125239372253418
    7. '	for' → logprob: -15.500239372253418
    8. '```' → logprob: -15.625239372253418
    9. '[]' → logprob: -16.0002384185791
    10. '[
' → logprob: -16.1252384185791

Token 45: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1253373622894287
    2. ' i' → logprob: -2.6253373622894287
    3. ' ' → logprob: -3.3753373622894287
    4. '_' → logprob: -4.500337600708008
    5. 'i' → logprob: -10.625337600708008
    6. ' ' → logprob: -11.000337600708008
    7. '  ' → logprob: -11.625337600708008
    8. ' ‌' → logprob: -11.750337600708008
    9. ' range' → logprob: -12.250337600708008
    10. '_i' → logprob: -12.875337600708008

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027155933901667595
    2. 'in' → logprob: -3.652155876159668
    3. ' ' → logprob: -7.777155876159668
    4. 'n' → logprob: -7.902155876159668
    5. '_' → logprob: -10.652155876159668
    6. ' i' → logprob: -11.777155876159668
    7. ' _' → logprob: -11.902155876159668
    8. '	in' → logprob: -12.152155876159668
    9. ' n' → logprob: -12.902155876159668
    10. '0' → logprob: -12.902155876159668

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002476135268807411
    2. ' range' → logprob: -6.002476215362549
    3. '	range' → logprob: -15.12747573852539
    4. '(range' → logprob: -16.62747573852539
    5. 'rang' → logprob: -17.12747573852539
    6. '```' → logprob: -17.37747573852539
    7. 'ran' → logprob: -18.00247573852539
    8. ' ' → logprob: -18.12747573852539
    9. ' xrange' → logprob: -18.75247573852539
    10. 'r' → logprob: -18.75247573852539

Token 48: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2520710229873657
    2. '(' → logprob: -1.5020710229873657
    3. ' (' → logprob: -9.002071380615234
    4. '(
' → logprob: -11.877071380615234
    5. '(n' → logprob: -12.752071380615234
    6. ' N' → logprob: -13.002071380615234
    7. '(range' → logprob: -13.127071380615234
    8. ' ' → logprob: -14.127071380615234
    9. '(NUM' → logprob: -14.252071380615234
    10. '(len' → logprob: -14.377071380615234

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011971325147897005
    2. ')' → logprob: -6.876197338104248
    3. ' ):' → logprob: -9.37619686126709
    4. '):
' → logprob: -9.75119686126709
    5. ':' → logprob: -10.87619686126709
    6. '):
' → logprob: -14.25119686126709
    7. ',' → logprob: -15.25119686126709
    8. '+' → logprob: -15.25119686126709
    9. '）：' → logprob: -15.37619686126709
    10. ')：' → logprob: -15.62619686126709

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3143231272697449
    2. ' XY' → logprob: -1.5643231868743896
    3. ' ' → logprob: -3.3143231868743896
    4. '    ' → logprob: -4.3143229484558105
    5. 'XY' → logprob: -5.0643229484558105
    6. ' line' → logprob: -6.4393229484558105
    7. '    
' → logprob: -7.0643229484558105
    8. ' xy' → logprob: -7.5643229484558105
    9. ' 
' → logprob: -8.189323425292969
    10. ' X' → logprob: -8.439323425292969

Token 51: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.15727853775024414
    2. 'xy' → logprob: -2.532278537750244
    3. ' x' → logprob: -3.157278537750244
    4. 'XY' → logprob: -4.657278537750244
    5. '   ' → logprob: -4.907278537750244
    6. ' xy' → logprob: -5.657278537750244
    7. ' line' → logprob: -6.907278537750244
    8. 'line' → logprob: -7.157278537750244
    9. ' XY' → logprob: -7.657278537750244
    10. 's' → logprob: -8.282278060913086

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034241676330566406
    2. ',y' → logprob: -3.4092416763305664
    3. ' ,' → logprob: -7.784241676330566
    4. 'y' → logprob: -8.909241676330566
    5. '_,' → logprob: -11.034241676330566
    6. ',h' → logprob: -11.284241676330566
    7. ',Y' → logprob: -11.284241676330566
    8. 'Y' → logprob: -14.409241676330566
    9. ',H' → logprob: -14.909241676330566
    10. ' y' → logprob: -14.909241676330566

Token 53: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.06197025999426842
    2. 'y' → logprob: -2.8119702339172363
    3. ' ' → logprob: -13.311970710754395
    4. '	y' → logprob: -15.186970710754395
    5. ',y' → logprob: -15.186970710754395
    6. '<|end|>' → logprob: -16.186969757080078
    7. ',' → logprob: -16.311969757080078
    8. '    ' → logprob: -16.936969757080078
    9. '_y' → logprob: -17.186969757080078
    10. 'Y' → logprob: -17.436969757080078

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026092655956745148
    2. '=' → logprob: -3.776092767715454
    3. ' =' → logprob: -5.901092529296875
    4. ' ,' → logprob: -9.401092529296875
    5. '<|end|>' → logprob: -11.151092529296875
    6. ')' → logprob: -13.526092529296875
    7. '<|end|>' → logprob: -13.651092529296875
    8. ' ' → logprob: -13.901092529296875
    9. 's' → logprob: -14.151092529296875
    10. '=int' → logprob: -14.713592529296875

Token 55: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07889904081821442
    2. ' h' → logprob: -2.5788991451263428
    3. ' ' → logprob: -12.078899383544922
    4. 'H' → logprob: -13.703899383544922
    5. '	h' → logprob: -13.953899383544922
    6. 'z' → logprob: -14.828899383544922
    7. 'hpp' → logprob: -15.203899383544922
    8. '   ' → logprob: -15.328899383544922
    9. '  ' → logprob: -15.328899383544922
    10. ' H' → logprob: -16.453899383544922

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024646162986755
    2. ' =' → logprob: -1.91024649143219
    3. ')' → logprob: -11.285246849060059
    4. ' ' → logprob: -13.035246849060059
    5. ',' → logprob: -13.160246849060059
    6. '=int' → logprob: -13.535246849060059
    7. '＝' → logprob: -14.285246849060059
    8. '=line' → logprob: -14.535246849060059
    9. ')=' → logprob: -14.910246849060059
    10. '=input' → logprob: -14.910246849060059

Token 57: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47408369183540344
    2. ' map' → logprob: -0.974083662033081
    3. '	map' → logprob: -12.97408390045166
    4. ' ' → logprob: -13.09908390045166
    5. 'list' → logprob: -14.47408390045166
    6. '  ' → logprob: -14.59908390045166
    7. '   ' → logprob: -14.59908390045166
    8. 'm' → logprob: -14.59908390045166
    9. '(map' → logprob: -15.59908390045166
    10. ' list' → logprob: -16.224082946777344

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014980759005993605
    2. '(' → logprob: -6.626498222351074
    3. '(lambda' → logprob: -8.876498222351074
    4. 'int' → logprob: -11.626498222351074
    5. '[int' → logprob: -12.001498222351074
    6. '<int' → logprob: -12.126498222351074
    7. '(str' → logprob: -12.251498222351074
    8. '(list' → logprob: -12.626498222351074
    9. '(input' → logprob: -13.501498222351074
    10. '=int' → logprob: -14.626498222351074

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10118161141872406
    2. '(sys' → logprob: -2.3511815071105957
    3. 'sys' → logprob: -7.226181507110596
    4. '=sys' → logprob: -9.601181983947754
    5. '	sys' → logprob: -9.976181983947754
    6. ',System' → logprob: -10.476181983947754
    7. ',input' → logprob: -10.476181983947754
    8. '(' → logprob: -10.476181983947754
    9. ' sys' → logprob: -10.851181983947754
    10. ' ,' → logprob: -11.101181983947754

Token 60: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00026300468016415834
    2. ' sys' → logprob: -8.250263214111328
    3. '(sys' → logprob: -14.125263214111328
    4. '	sys' → logprob: -14.750263214111328
    5. '=sys' → logprob: -15.000263214111328
    6. ')' → logprob: -15.250263214111328
    7. 'input' → logprob: -18.000263214111328
    8. '.sys' → logprob: -18.125263214111328
    9. '_sys' → logprob: -19.125263214111328
    10. '/sys' → logprob: -19.375263214111328

Token 61: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00024429336190223694
    2. '.readline' → logprob: -8.750244140625
    3. 'stdin' → logprob: -9.500244140625
    4. '.' → logprob: -12.750244140625
    5. '.argv' → logprob: -13.125244140625
    6. '.stdout' → logprob: -13.125244140625
    7. '.std' → logprob: -14.000244140625
    8. 'sys' → logprob: -14.000244140625
    9. '(stdin' → logprob: -14.250244140625
    10. '=sys' → logprob: -14.375244140625

Token 62: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.127333340875339e-06
    2. '.readlines' → logprob: -13.250003814697266
    3. 'sys' → logprob: -14.500003814697266
    4. '.' → logprob: -14.875003814697266
    5. 'line' → logprob: -15.000003814697266
    6. 'stdin' → logprob: -15.500003814697266
    7. 'read' → logprob: -15.875003814697266
    8. '.stdin' → logprob: -16.000003814697266
    9. ' readline' → logprob: -16.250003814697266
    10. '().' → logprob: -16.375003814697266

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.596781946020201e-05
    2. '.readline' → logprob: -10.125045776367188
    3. '()' → logprob: -12.125045776367188
    4. '()).' → logprob: -16.125045776367188
    5. ' ().' → logprob: -16.625045776367188
    6. '(' → logprob: -17.125045776367188
    7. '.' → logprob: -17.250045776367188
    8. '().__' → logprob: -17.875045776367188
    9. ').' → logprob: -18.000045776367188
    10. '('').' → logprob: -18.125045776367188

Token 64: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.015946153551340103
    2. 'split' → logprob: -5.015946388244629
    3. 'read' → logprob: -5.265946388244629
    4. 'rstrip' → logprob: -5.515946388244629
    5. '.readline' → logprob: -14.265946388244629
    6. ' strip' → logprob: -14.390946388244629
    7. '(strip' → logprob: -15.390946388244629
    8. ' readline' → logprob: -15.765946388244629
    9. '-strip' → logprob: -16.390945434570312
    10. 'rs' → logprob: -16.640945434570312

Token 65: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8312570318812504e-05
    2. '()' → logprob: -11.000018119812012
    3. '())' → logprob: -13.500018119812012
    4. ')' → logprob: -16.750019073486328
    5. '()
' → logprob: -17.625019073486328
    6. '(' → logprob: -18.250019073486328
    7. '()

' → logprob: -19.375019073486328
    8. '().__' → logprob: -19.750019073486328
    9. '());' → logprob: -19.750019073486328
    10. '()).' → logprob: -19.750019073486328

Token 66: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -15.000000953674316
    3. '(split' → logprob: -15.750000953674316
    4. 'rstrip' → logprob: -16.0
    5. 'spl' → logprob: -16.125
    6. ')' → logprob: -17.875
    7. '.split' → logprob: -18.25
    8. 's' → logprob: -20.25
    9. 'strip' → logprob: -21.125
    10. '_split' → logprob: -21.25

Token 67: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006798259913921356
    2. ')' → logprob: -5.506798267364502
    3. '()' → logprob: -6.381798267364502
    4. '()))' → logprob: -7.006798267364502
    5. '))' → logprob: -9.131797790527344
    6. '())
' → logprob: -12.131797790527344
    7. '(' → logprob: -12.756797790527344
    8. ' ())' → logprob: -14.006797790527344
    9. '()))
' → logprob: -15.756797790527344
    10. '()),' → logprob: -16.006797790527344

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02120513841509819
    2. 'XY' → logprob: -5.021204948425293
    3. '<|end|>' → logprob: -5.146204948425293
    4. ')' → logprob: -5.771204948425293
    5. '  ' → logprob: -7.021204948425293
    6. ',' → logprob: -7.021204948425293
    7. ' ' → logprob: -7.146204948425293
    8. '    ' → logprob: -7.521204948425293
    9. ' XY' → logprob: -7.646204948425293
    10. '       ' → logprob: -7.896204948425293

Token 69: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.47494903206825256
    2. '   ' → logprob: -1.0999490022659302
    3. ' XY' → logprob: -3.0999491214752197
    4. '  ' → logprob: -10.34994888305664
    5. ' ' → logprob: -10.59994888305664
    6. '    
' → logprob: -11.09994888305664
    7. '       ' → logprob: -11.59994888305664
    8. '<|end|>' → logprob: -11.72494888305664
    9. '```' → logprob: -11.84994888305664
    10. 'XYZ' → logprob: -12.22494888305664

Token 70: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.512236498361744e-07
    2. '.append' → logprob: -14.750000953674316
    3. ' H' → logprob: -16.375
    4. '[' → logprob: -17.875
    5. 'Hs' → logprob: -18.0
    6. '<|end|>' → logprob: -18.875
    7. 'HS' → logprob: -19.0
    8. '_H' → logprob: -19.25
    9. ',H' → logprob: -19.625
    10. ',' → logprob: -19.625

Token 71: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003221150254830718
    2. '.' → logprob: -8.250322341918945
    3. '.app' → logprob: -10.750322341918945
    4. '.ap' → logprob: -10.750322341918945
    5. '.py' → logprob: -12.000322341918945
    6. ' .' → logprob: -12.375322341918945
    7. ').' → logprob: -12.875322341918945
    8. '.extend' → logprob: -13.625322341918945
    9. '.setdefault' → logprob: -14.125322341918945
    10. '​.' → logprob: -14.375322341918945

Token 72: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0005535095697268844
    2. '(' → logprob: -7.500553607940674
    3. '(x' → logprob: -15.375553131103516
    4. '([' → logprob: -16.125553131103516
    5. '(
' → logprob: -16.625553131103516
    6. '(('' → logprob: -18.125553131103516
    7. '(tuple' → logprob: -18.375553131103516
    8. '(((' → logprob: -18.500553131103516
    9. ' ((' → logprob: -18.750553131103516
    10. '```' → logprob: -19.375553131103516

Token 73: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.842555426876061e-06
    2. ' x' → logprob: -12.250004768371582
    3. ')x' → logprob: -18.8750057220459
    4. '(x' → logprob: -19.7500057220459
    5. ' ' → logprob: -20.5000057220459
    6. ')' → logprob: -20.6250057220459
    7. '   ' → logprob: -20.8750057220459
    8. '	x' → logprob: -21.3750057220459
    9. '  ' → logprob: -21.5000057220459
    10. '    ' → logprob: -22.8750057220459

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037502311170101166
    2. ' ,' → logprob: -8.000374794006348
    3. ',y' → logprob: -10.375374794006348
    4. ')' → logprob: -13.000374794006348
    5. '),' → logprob: -13.500374794006348
    6. ',
' → logprob: -13.750374794006348
    7. '[' → logprob: -14.000374794006348
    8. '<|end|>' → logprob: -14.250374794006348
    9. ',x' → logprob: -14.875374794006348
    10. '‌,' → logprob: -15.250374794006348

Token 75: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.061975300312042236
    2. ' y' → logprob: -2.8119752407073975
    3. ' ' → logprob: -12.686975479125977
    4. ')y' → logprob: -13.686975479125977
    5. '<|end|>' → logprob: -14.061975479125977
    6. '	y' → logprob: -14.061975479125977
    7. '   ' → logprob: -14.811975479125977
    8. '  ' → logprob: -14.811975479125977
    9. ')' → logprob: -14.936975479125977
    10. '    ' → logprob: -15.811975479125977

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0722858102526516e-05
    2. ',h' → logprob: -10.250041007995605
    3. ' ,' → logprob: -12.375041007995605
    4. 'h' → logprob: -14.375041007995605
    5. ')' → logprob: -15.250041007995605
    6. '),' → logprob: -16.37504005432129
    7. ',)' → logprob: -17.62504005432129
    8. ',
' → logprob: -17.75004005432129
    9. '‌,' → logprob: -18.25004005432129
    10. '))' → logprob: -18.50004005432129

Token 77: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10021626949310303
    2. ' h' → logprob: -2.3502163887023926
    3. ' ' → logprob: -12.725215911865234
    4. ')' → logprob: -12.850215911865234
    5. ' ' → logprob: -13.100215911865234
    6. '	h' → logprob: -14.600215911865234
    7. ' 
' → logprob: -15.100215911865234
    8. '  ' → logprob: -15.287715911865234
    9. '   ' → logprob: -15.475215911865234
    10. ' )' → logprob: -15.600215911865234

Token 78: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006769364699721336
    2. ')' → logprob: -5.006769180297852
    3. '))
' → logprob: -9.881769180297852
    4. ' ))' → logprob: -13.631769180297852
    5. ')))' → logprob: -14.006769180297852
    6. '),' → logprob: -15.381769180297852
    7. ')
' → logprob: -15.381769180297852
    8. '))

' → logprob: -16.13176918029785
    9. '))
' → logprob: -16.63176918029785
    10. ''))' → logprob: -16.75676918029785

Token 79: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09644591063261032
    2. 'C' → logprob: -2.7214457988739014
    3. 'possible' → logprob: -4.5964460372924805
    4. 'ans' → logprob: -5.5964460372924805
    5. 'def' → logprob: -6.3464460372924805
    6. 'Cx' → logprob: -6.3464460372924805
    7. '#' → logprob: -6.4714460372924805
    8. 'cx' → logprob: -6.7214460372924805
    9. 'center' → logprob: -6.7214460372924805
    10. 'H' → logprob: -7.3464460372924805

Token 80: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1035827025771141
    2. ' x' → logprob: -2.4785826206207275
    3. ' _' → logprob: -4.728582859039307
    4. 'i' → logprob: -6.478582859039307
    5. ' X' → logprob: -6.728582859039307
    6. ' ' → logprob: -6.728582859039307
    7. 'x' → logprob: -7.353582859039307
    8. ' (' → logprob: -8.228582382202148
    9. '_' → logprob: -8.353582382202148
    10. 'X' → logprob: -9.103582382202148

Token 81: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03880377486348152
    2. 'in' → logprob: -3.413803815841675
    3. '_' → logprob: -5.663803577423096
    4. ' ' → logprob: -6.788803577423096
    5. '0' → logprob: -8.663804054260254
    6. '_in' → logprob: -9.413804054260254
    7. '1' → logprob: -9.663804054260254
    8. ',' → logprob: -9.913804054260254
    9. 'range' → logprob: -10.413804054260254
    10. ' i' → logprob: -10.538804054260254

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020767968147993088
    2. 'in' → logprob: -3.8957679271698
    3. ' ' → logprob: -8.895768165588379
    4. '0' → logprob: -10.895768165588379
    5. '1' → logprob: -10.895768165588379
    6. ',' → logprob: -11.020768165588379
    7. 'range' → logprob: -11.645768165588379
    8. '_' → logprob: -12.645768165588379
    9. '   ' → logprob: -12.770768165588379
    10. 'In' → logprob: -12.770768165588379

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804619982838631
    2. 'range' → logprob: -3.28804612159729
    3. '(range' → logprob: -13.538045883178711
    4. ' xrange' → logprob: -13.788045883178711
    5. '	range' → logprob: -13.913045883178711
    6. ' ' → logprob: -14.163045883178711
    7. ' ran' → logprob: -15.413045883178711
    8. '   ' → logprob: -16.16304588317871
    9. '  ' → logprob: -16.28804588317871
    10. ' ra' → logprob: -16.41304588317871

Token 84: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.895480277715251e-06
    2. '101' → logprob: -12.500008583068848
    3. '(-' → logprob: -12.625008583068848
    4. '(max' → logprob: -14.375008583068848
    5. ' (' → logprob: -14.750008583068848
    6. '(MAX' → logprob: -15.375008583068848
    7. '100' → logprob: -15.750008583068848
    8. '((' → logprob: -16.000009536743164
    9. ' ' → logprob: -16.375009536743164
    10. ')' → logprob: -16.500009536743164

Token 85: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -4.961759259458631e-06
    2. '10' → logprob: -13.375004768371582
    3. '0' → logprob: -13.625004768371582
    4. '   ' → logprob: -15.000004768371582
    5. '```' → logprob: -15.125004768371582
    6. '1' → logprob: -15.375004768371582
    7. '(' → logprob: -15.500004768371582
    8. ' ' → logprob: -15.625004768371582
    9. '``' → logprob: -15.875004768371582
    10. '105' → logprob: -16.0000057220459

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016825977945700288
    2. ')' → logprob: -9.500167846679688
    3. '):
' → logprob: -9.875167846679688
    4. ' ):' → logprob: -10.250167846679688
    5. '+' → logprob: -13.000167846679688
    6. '}:' → logprob: -13.750167846679688
    7. ':' → logprob: -13.750167846679688
    8. ']:' → logprob: -14.000167846679688
    9. '):
' → logprob: -15.250167846679688
    10. '   ' → logprob: -15.750167846679688

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046719927340745926
    2. ' for' → logprob: -3.171720027923584
    3. '<|end|>' → logprob: -5.796720027923584
    4. 'for' → logprob: -7.671720027923584
    5. ' ' → logprob: -9.671719551086426
    6. ')' → logprob: -10.046719551086426
    7. '       ' → logprob: -10.296719551086426
    8. ':' → logprob: -10.921719551086426
    9. '   ' → logprob: -11.546719551086426
    10. '	for' → logprob: -11.671719551086426

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10272425413131714
    2. '   ' → logprob: -2.852724313735962
    3. 'for' (adapté à ' for') → logprob: -3.227724313735962
    4. '<|end|>' → logprob: -8.977724075317383
    5. ' ' → logprob: -9.352724075317383
    6. '	for' → logprob: -10.227724075317383
    7. '    ' → logprob: -10.977724075317383
    8. '0' → logprob: -12.102724075317383
    9. '  ' → logprob: -12.602724075317383
    10. '   ' → logprob: -12.977724075317383

Token 89: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08899705111980438
    2. ' x' → logprob: -2.4639971256256104
    3. 'y' → logprob: -10.713996887207031
    4. ' y' → logprob: -11.463996887207031
    5. ' ' → logprob: -11.713996887207031
    6. '<|end|>' → logprob: -12.088996887207031
    7. '0' → logprob: -12.838996887207031
    8. ' range' → logprob: -13.088996887207031
    9. ' xrange' → logprob: -13.713996887207031
    10. 'range' → logprob: -13.713996887207031

Token 90: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5803183317184448
    2. '1' → logprob: -1.4553183317184448
    3. 'in' → logprob: -1.5803183317184448
    4. '0' → logprob: -7.830318450927734
    5. ' ' → logprob: -8.705318450927734
    6. '   ' → logprob: -9.205318450927734
    7. ')' → logprob: -9.330318450927734
    8. '_' → logprob: -9.455318450927734
    9. '```' → logprob: -10.080318450927734
    10. ' i' → logprob: -10.330318450927734

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08902028203010559
    2. 'in' → logprob: -2.464020252227783
    3. ' ' → logprob: -9.964020729064941
    4. 'range' → logprob: -11.339020729064941
    5. 'n' → logprob: -11.589020729064941
    6. '    ' → logprob: -12.839020729064941
    7. '   ' → logprob: -12.839020729064941
    8. '1' → logprob: -13.214020729064941
    9. '```' → logprob: -14.089020729064941
    10. 'In' → logprob: -14.339020729064941

Token 92: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023264462128281593
    2. ' range' → logprob: -3.7732644081115723
    3. '(range' → logprob: -11.02326488494873
    4. ' ' → logprob: -13.64826488494873
    5. '(' → logprob: -14.39826488494873
    6. '	range' → logprob: -15.02326488494873
    7. '100' → logprob: -15.64826488494873
    8. '101' → logprob: -15.77326488494873
    9. '[' → logprob: -16.023263931274414
    10. '_range' → logprob: -17.148263931274414

Token 93: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.723352049040841e-06
    2. '101' → logprob: -12.750004768371582
    3. ' (' → logprob: -13.250004768371582
    4. ')' → logprob: -17.500003814697266
    5. '   ' → logprob: -18.500003814697266
    6. ' ' → logprob: -18.500003814697266
    7. '[' → logprob: -18.625003814697266
    8. '(
' → logprob: -18.750003814697266
    9. '{' → logprob: -18.875003814697266
    10. '(-' → logprob: -19.500003814697266

Token 94: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.750015258789062
    3. '1' → logprob: -12.250015258789062
    4. '0' → logprob: -14.125015258789062
    5. ')' → logprob: -14.500015258789062
    6. '111' → logprob: -15.375015258789062
    7. '   ' → logprob: -15.687515258789062
    8. '10' → logprob: -15.750015258789062
    9. '102' → logprob: -16.062515258789062
    10. '```' → logprob: -16.062515258789062

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030580461025238037
    2. '):
' → logprob: -6.378057956695557
    3. ')' → logprob: -7.003057956695557
    4. ':' → logprob: -8.003058433532715
    5. '   ' → logprob: -9.628058433532715
    6. ' ):' → logprob: -10.628058433532715
    7. '       ' → logprob: -12.003058433532715
    8. ',' → logprob: -12.378058433532715
    9. '):

' → logprob: -12.628058433532715
    10. '+' → logprob: -13.128058433532715

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005918366368860006
    2. '   ' → logprob: -5.880918502807617
    3. '    ' → logprob: -6.505918502807617
    4. ' found' → logprob: -8.380918502807617
    5. '	   ' → logprob: -8.755918502807617
    6. ' is' → logprob: -8.880918502807617
    7. ':' → logprob: -9.005918502807617
    8. ' if' → logprob: -9.005918502807617
    9. ' valid' → logprob: -9.130918502807617
    10. '    ' → logprob: -9.505918502807617

Token 97: ' H' (ID: 487)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9665965437889099
    2. 'C' → logprob: -1.5915966033935547
    3. 'H' (adapté à ' H') → logprob: -1.9665966033935547
    4. '   ' → logprob: -2.2165966033935547
    5. 'h' → logprob: -2.8415966033935547
    6. 'for' → logprob: -3.5915966033935547
    7. 'c' → logprob: -3.8415966033935547
    8. 'ok' → logprob: -4.716596603393555
    9. 'cnt' → logprob: -5.216596603393555
    10. 'found' → logprob: -5.341596603393555

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47587326169013977
    2. ' =' → logprob: -0.9758732318878174
    3. ' ' → logprob: -7.2258734703063965
    4. '<|end|>' → logprob: -7.3508734703063965
    5. '<|end|>' → logprob: -9.350872993469238
    6. '=None' → logprob: -9.600872993469238
    7. ' in' → logprob: -9.850872993469238
    8. '=int' → logprob: -9.975872993469238
    9. ')' → logprob: -10.600872993469238
    10. ',' → logprob: -10.850872993469238

Token 99: ' set' (ID: 920)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8851868510246277
    2. 'None' → logprob: -0.8851868510246277
    3. 'INF' → logprob: -1.7601869106292725
    4. '0' → logprob: -7.010186672210693
    5. '10' → logprob: -7.010186672210693
    6. ' None' → logprob: -8.385187149047852
    7. '-INF' → logprob: -8.510187149047852
    8. ' -' → logprob: -8.760187149047852
    9. '[' → logprob: -9.385187149047852
    10. 'max' → logprob: -9.510187149047852

Token 100: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.466968650580384e-05
    2. '([]' → logprob: -10.750054359436035
    3. '()
' → logprob: -11.000054359436035
    4. '([' → logprob: -11.875054359436035
    5. '(' → logprob: -12.500054359436035
    6. '()\' → logprob: -13.625054359436035
    7. '()

' → logprob: -13.875054359436035
    8. ' ()' → logprob: -14.000054359436035
    9. '();' → logprob: -14.375054359436035
    10. '()}' → logprob: -14.750054359436035

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32268229126930237
    2. '           ' → logprob: -2.1976823806762695
    3. '(' → logprob: -2.3226823806762695
    4. 'for' → logprob: -3.6976823806762695
    5. '()' → logprob: -4.6976823806762695
    6. '{' → logprob: -5.3226823806762695
    7. '   ' → logprob: -5.4476823806762695
    8. ' ' → logprob: -5.6976823806762695
    9. 'if' → logprob: -5.6976823806762695
    10. '               ' → logprob: -5.9476823806762695

Token 102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.53809654712677
    2. 'True' → logprob: -1.03809654712677
    3. '       ' → logprob: -3.7880964279174805
    4. 'h' → logprob: -4.7880964279174805
    5. 'False' → logprob: -5.2880964279174805
    6. ' for' → logprob: -5.4130964279174805
    7. '0' → logprob: -5.7880964279174805
    8. ' True' → logprob: -5.7880964279174805
    9. 'if' → logprob: -5.9130964279174805
    10. ')' → logprob: -6.0380964279174805

Token 103: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4701918959617615
    2. ' x' → logprob: -1.0951919555664062
    3. '(x' → logprob: -4.220191955566406
    4. 'i' → logprob: -4.595191955566406
    5. ' i' → logprob: -4.595191955566406
    6. ' (' → logprob: -6.470191955566406
    7. 'j' → logprob: -7.095191955566406
    8. ' j' → logprob: -7.345191955566406
    9. ' ' → logprob: -7.470191955566406
    10. 'X' → logprob: -7.470191955566406

Token 104: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038294970989227295
    2. ',y' → logprob: -4.163294792175293
    3. 'y' → logprob: -4.538294792175293
    4. '1' → logprob: -5.663294792175293
    5. '_,' → logprob: -6.038294792175293
    6. ' ,' → logprob: -6.288294792175293
    7. 'h' → logprob: -7.163294792175293
    8. 'H' → logprob: -7.788294792175293
    9. ',h' → logprob: -7.913294792175293
    10. '0' → logprob: -8.038294792175293

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002244462026283145
    2. ',y' → logprob: -6.127244472503662
    3. 'y' → logprob: -10.377243995666504
    4. ' ,' → logprob: -10.752243995666504
    5. '```' → logprob: -13.377243995666504
    6. ' in' → logprob: -13.502243995666504
    7. '_,' → logprob: -14.002243995666504
    8. ' y' → logprob: -14.252243995666504
    9. ' ' → logprob: -15.627243995666504
    10. ',
' → logprob: -15.752243995666504

Token 106: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12712128460407257
    2. ' y' → logprob: -2.1271212100982666
    3. ',' → logprob: -8.877120971679688
    4. '<|end|>' → logprob: -10.127120971679688
    5. ',y' → logprob: -12.502120971679688
    6. ' ' → logprob: -12.627120971679688
    7. '    ' → logprob: -13.377120971679688
    8. 'Y' → logprob: -14.127120971679688
    9. ')' → logprob: -14.252120971679688
    10. ''y' → logprob: -14.627120971679688

Token 107: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14345520734786987
    2. '2' → logprob: -2.0184552669525146
    3. 'H' → logprob: -8.143455505371094
    4. 'h' → logprob: -8.518455505371094
    5. ',h' → logprob: -9.268455505371094
    6. '_,' → logprob: -9.643455505371094
    7. ' ,' → logprob: -9.893455505371094
    8. '1' → logprob: -10.018455505371094
    9. ',H' → logprob: -11.143455505371094
    10. '```' → logprob: -11.768455505371094

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9146995327901095e-05
    2. ',h' → logprob: -11.375019073486328
    3. ' ,' → logprob: -12.000019073486328
    4. '```' → logprob: -15.250019073486328
    5. ',H' → logprob: -16.000019073486328
    6. '<|end|>' → logprob: -16.250019073486328
    7. ',height' → logprob: -16.375019073486328
    8. ',y' → logprob: -16.500019073486328
    9. '‌,' → logprob: -16.625019073486328
    10. '_,' → logprob: -16.812519073486328

Token 109: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0889832004904747
    2. ' h' → logprob: -2.4639832973480225
    3. 'H' → logprob: -11.088983535766602
    4. '<|end|>' → logprob: -11.338983535766602
    5. ' ' → logprob: -11.463983535766602
    6. ')' → logprob: -13.838983535766602
    7. '```' → logprob: -14.088983535766602
    8. '_h' → logprob: -14.213983535766602
    9. '<|end|>' → logprob: -14.213983535766602
    10. '	h' → logprob: -14.338983535766602

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34853360056877136
    2. 'in' → logprob: -1.2235336303710938
    3. ' ' → logprob: -10.848533630371094
    4. 'n' → logprob: -11.223533630371094
    5. ',' → logprob: -11.348533630371094
    6. 's' → logprob: -11.598533630371094
    7. '<|end|>' → logprob: -12.348533630371094
    8. '  ' → logprob: -12.473533630371094
    9. 'i' → logprob: -12.723533630371094
    10. ')' → logprob: -12.973533630371094

Token 111: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -0.575939953327179
    2. ' XY' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.075940132141113
    4. 'XYZ' → logprob: -16.950939178466797
    5. 'X' → logprob: -17.200939178466797
    6. ' ' → logprob: -18.200939178466797
    7. ')' → logprob: -18.200939178466797
    8. 'xy' → logprob: -18.200939178466797
    9. '(X' → logprob: -18.450939178466797
    10. ' X' → logprob: -18.700939178466797

Token 112: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.7432603272027336e-06
    2. 'h' → logprob: -14.125001907348633
    3. ')' → logprob: -14.625001907348633
    4. ' H' → logprob: -15.750001907348633
    5. '[' → logprob: -16.500001907348633
    6. '_H' → logprob: -17.125001907348633
    7. ' ' → logprob: -17.125001907348633
    8. '```' → logprob: -17.250001907348633
    9. '(' → logprob: -18.000001907348633
    10. ']' → logprob: -18.000001907348633

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029786715283989906
    2. ':
' → logprob: -3.5297868251800537
    3. '):' → logprob: -10.779787063598633
    4. '):
' → logprob: -12.154787063598633
    5. ':

' → logprob: -12.654787063598633
    6. ':
' → logprob: -13.029787063598633
    7. ' :' → logprob: -13.029787063598633
    8. ',' → logprob: -14.904787063598633
    9. 'if' → logprob: -15.029787063598633
    10. ' :
' → logprob: -15.029787063598633

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007074289605952799
    2. ' if' → logprob: -7.375707626342773
    3. 'if' → logprob: -10.000707626342773
    4. '       ' → logprob: -11.750707626342773
    5. '          ' → logprob: -12.000707626342773
    6. '	       ' → logprob: -12.750707626342773
    7. '         ' → logprob: -13.000707626342773
    8. '               ' → logprob: -13.000707626342773
    9. ',' → logprob: -13.125707626342773
    10. ' ' → logprob: -13.250707626342773

Token 115: ' tm' (ID: 34186)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4346771836280823
    2. '           ' → logprob: -1.5596771240234375
    3. '               ' → logprob: -2.4346771240234375
    4. 'if' → logprob: -2.9346771240234375
    5. '   ' → logprob: -6.8096771240234375
    6. ' H' → logprob: -9.184677124023438
    7. ' ' → logprob: -9.184677124023438
    8. '
' → logprob: -10.059677124023438
    9. 'If' → logprob: -10.184677124023438
    10. '                   ' → logprob: -10.684677124023438

Token 116: 'ph' (ID: 961)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005387192126363516
    2. 'ph' → logprob: -5.255387306213379
    3. '=' → logprob: -10.380387306213379
    4. ' p' → logprob: -11.255387306213379
    5. ' =' → logprob: -11.380387306213379
    6. 'px' → logprob: -11.567887306213379
    7. 'php' → logprob: -11.880387306213379
    8. 'h' → logprob: -12.255387306213379
    9. '   ' → logprob: -12.567887306213379
    10. '```' → logprob: -12.567887306213379

Token 117: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.19435352087020874
    2. '=' → logprob: -2.4443535804748535
    3. 'p' → logprob: -3.0693535804748535
    4. ' =' → logprob: -3.3193535804748535
    5. '   ' → logprob: -5.5693535804748535
    6. 'a' → logprob: -7.4443535804748535
    7. 'it' → logprob: -7.9443535804748535
    8. 'ax' → logprob: -8.069353103637695
    9. ' ' → logprob: -8.319353103637695
    10. '=t' → logprob: -8.319353103637695

Token 118: ' abs' (ID: 8443)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06283364444971085
    2. ' h' → logprob: -3.937833547592163
    3. 'H' → logprob: -4.437833786010742
    4. 'max' → logprob: -4.562833786010742
    5. 'abs' → logprob: -4.937833786010742
    6. '0' → logprob: -5.187833786010742
    7. 'None' → logprob: -5.812833786010742
    8. ' max' → logprob: -7.062833786010742
    9. ' abs' → logprob: -7.187833786010742
    10. ' ' → logprob: -8.187833786010742

Token 119: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006429764907807112
    2. '(y' → logprob: -7.625642776489258
    3. '(' → logprob: -8.875642776489258
    4. 'x' → logprob: -11.500642776489258
    5. '((' → logprob: -13.875642776489258
    6. '(X' → logprob: -13.875642776489258
    7. '(h' → logprob: -14.250642776489258
    8. ' (' → logprob: -14.500642776489258
    9. '(H' → logprob: -14.625642776489258
    10. '(nx' → logprob: -15.375642776489258

Token 120: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34902891516685486
    2. '1' → logprob: -1.2240289449691772
    3. ' -' → logprob: -8.349028587341309
    4. 'x' → logprob: -8.724028587341309
    5. ' ' → logprob: -9.224028587341309
    6. '-' → logprob: -10.474028587341309
    7. '-x' → logprob: -11.099028587341309
    8. '[' → logprob: -11.599028587341309
    9. ' x' → logprob: -11.974028587341309
    10. 's' → logprob: -12.224028587341309

Token 121: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.524439811706543
    2. '-' → logprob: -0.899439811706543
    3. '-x' → logprob: -6.649439811706543
    4. ' ' → logprob: -11.774439811706543
    5. '-y' → logprob: -12.024439811706543
    6. '<|end|>' → logprob: -12.774439811706543
    7. ',' → logprob: -13.524439811706543
    8. ')' → logprob: -14.024439811706543
    9. '−' → logprob: -15.274439811706543
    10. 'x' → logprob: -15.274439811706543

Token 122: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.554343366995454e-05
    2. ' x' → logprob: -9.375085830688477
    3. '<|end|>' → logprob: -14.625085830688477
    4. ')x' → logprob: -16.000085830688477
    5. '(x' → logprob: -17.000085830688477
    6. '	x' → logprob: -17.625085830688477
    7. '"x' → logprob: -17.875085830688477
    8. '$x' → logprob: -18.250085830688477
    9. ''x' → logprob: -18.750085830688477
    10. '{x' → logprob: -18.875085830688477

Token 123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.3213025744771585e-05
    2. ')' → logprob: -11.000033378601074
    3. ' ' → logprob: -11.875033378601074
    4. '₂' → logprob: -12.500033378601074
    5. '<|end|>' → logprob: -12.750033378601074
    6. '_' → logprob: -15.125033378601074
    7. '[' → logprob: -15.125033378601074
    8. ',' → logprob: -15.125033378601074
    9. '```' → logprob: -15.437533378601074
    10. '   ' → logprob: -15.562533378601074

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.278864359250292e-05
    2. ')+' → logprob: -9.625072479248047
    3. ' )' → logprob: -12.000072479248047
    4. '）' → logprob: -15.375072479248047
    5. ')
' → logprob: -15.750072479248047
    6. '   ' → logprob: -17.375072479248047
    7. ')

' → logprob: -17.375072479248047
    8. '```' → logprob: -17.625072479248047
    9. '+' → logprob: -17.750072479248047
    10. '

' → logprob: -18.000072479248047

Token 125: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5053473711013794
    2. ' +' → logprob: -1.0053473711013794
    3. ')' → logprob: -3.50534725189209
    4. ')+' → logprob: -7.38034725189209
    5. '+y' → logprob: -9.38034725189209
    6. ' ' → logprob: -11.88034725189209
    7. 'abs' → logprob: -12.38034725189209
    8. '>' → logprob: -12.63034725189209
    9. ']' → logprob: -12.63034725189209
    10. ']+' → logprob: -12.75534725189209

Token 126: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.061970602720975876
    2. ' abs' → logprob: -2.8119707107543945
    3. '(abs' → logprob: -13.061970710754395
    4. '<|end|>' → logprob: -14.436970710754395
    5. '.abs' → logprob: -15.436970710754395
    6. '_abs' → logprob: -17.436969757080078
    7. ' ' → logprob: -17.561969757080078
    8. '  ' → logprob: -19.311969757080078
    9. 'Abs' → logprob: -19.561969757080078
    10. 'y' → logprob: -19.811969757080078

Token 127: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0005545823951251805
    2. '(' → logprob: -7.50055456161499
    3. '<|end|>' → logprob: -14.125555038452148
    4. ' (' → logprob: -15.250555038452148
    5. '(x' → logprob: -15.250555038452148
    6. 'y' → logprob: -15.375555038452148
    7. '(Y' → logprob: -17.00055503845215
    8. '(
' → logprob: -17.25055503845215
    9. '((' → logprob: -18.87555503845215
    10. '```' → logprob: -19.00055503845215

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -14.375001907348633
    3. 'y' → logprob: -14.625001907348633
    4. '(' → logprob: -15.250001907348633
    5. '<|end|>' → logprob: -15.250001907348633
    6. ' ' → logprob: -15.500001907348633
    7. '```' → logprob: -15.750001907348633
    8. ' -' → logprob: -15.875001907348633
    9. '-' → logprob: -16.375001907348633
    10. ' y' → logprob: -16.750001907348633

Token 129: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020542588084936142
    2. '-' → logprob: -3.895542621612549
    3. ' ' → logprob: -14.89554214477539
    4. ')' → logprob: -16.02054214477539
    5. '[' → logprob: -16.77054214477539
    6. ' y' → logprob: -17.14554214477539
    7. '–' → logprob: -17.27054214477539
    8. '<|end|>' → logprob: -17.27054214477539
    9. '−' → logprob: -17.52054214477539
    10. ',' → logprob: -17.52054214477539

Token 130: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029775604605674744
    2. ' y' → logprob: -3.529775619506836
    3. '<|end|>' → logprob: -10.904775619506836
    4. ')y' → logprob: -13.154775619506836
    5. '	y' → logprob: -13.779775619506836
    6. ')' → logprob: -13.904775619506836
    7. ' ' → logprob: -14.154775619506836
    8. '(y' → logprob: -14.529775619506836
    9. 'x' → logprob: -14.529775619506836
    10. ''y' → logprob: -14.654775619506836

Token 131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. '1' → logprob: -13.125006675720215
    3. ' ' → logprob: -13.375006675720215
    4. ')' → logprob: -13.500006675720215
    5. '```' → logprob: -13.625006675720215
    6. '-' → logprob: -15.500006675720215
    7. '₂' → logprob: -16.62500762939453
    8. 's' → logprob: -17.00000762939453
    9. '   ' → logprob: -17.00000762939453
    10. 'x' → logprob: -17.12500762939453

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025465316139161587
    2. ')+' → logprob: -6.627546310424805
    3. ')
' → logprob: -6.752546310424805
    4. ' )' → logprob: -10.877546310424805
    5. '))' → logprob: -11.752546310424805
    6. ')`' → logprob: -12.377546310424805
    7. '`)' → logprob: -12.377546310424805
    8. '')' → logprob: -13.002546310424805
    9. ')

' → logprob: -13.127546310424805
    10. '）' → logprob: -13.502546310424805

Token 133: ' +' (ID: 659)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4207994043827057
    2. '+' → logprob: -1.6707993745803833
    3. ' if' → logprob: -2.170799493789673
    4. '-' → logprob: -3.670799493789673
    5. ' +' → logprob: -5.045799255371094
    6. ' -' → logprob: -6.045799255371094
    7. '
' → logprob: -6.045799255371094
    8. '-if' → logprob: -6.045799255371094
    9. ';if' → logprob: -7.295799255371094
    10. ')' → logprob: -7.420799255371094

Token 134: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.713046133518219
    2. '1' → logprob: -0.838046133518219
    3. '0' → logprob: -2.963046073913574
    4. 'H' → logprob: -4.838046073913574
    5. 'INF' → logprob: -4.963046073913574
    6. ' h' → logprob: -5.838046073913574
    7. 'abs' → logprob: -5.963046073913574
    8. ' ' → logprob: -6.338046073913574
    9. ')' → logprob: -7.213046073913574
    10. 'max' → logprob: -8.338046073913574

Token 135: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4106368124485016
    2. ' if' → logprob: -1.1606367826461792
    3. ' ' → logprob: -4.660636901855469
    4. '       ' → logprob: -5.785636901855469
    5. '           ' → logprob: -6.160636901855469
    6. ')' → logprob: -6.410636901855469
    7. '-' → logprob: -6.410636901855469
    8. '
' → logprob: -6.660636901855469
    9. ' -' → logprob: -7.160636901855469
    10. '  ' → logprob: -7.785636901855469

Token 136: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9833114743232727
    2. '           ' → logprob: -1.358311414718628
    3. ')' → logprob: -1.858311414718628
    4. ' if' → logprob: -2.608311414718628
    5. 'if' → logprob: -3.108311414718628
    6. '-' → logprob: -3.483311414718628
    7. '.' → logprob: -4.233311653137207
    8. '   ' → logprob: -4.358311653137207
    9. ' ' → logprob: -4.608311653137207
    10. ' -' → logprob: -4.733311653137207

Token 137: ' if' (ID: 538)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.013851766474545002
    2. 'if' (adapté à ' if') → logprob: -4.763851642608643
    3. ')' → logprob: -5.638851642608643
    4. '.' → logprob: -7.013851642608643
    5. ' if' → logprob: -7.763851642608643
    6. ' H' → logprob: -9.0138521194458
    7. '       ' → logprob: -9.6388521194458
    8. ').' → logprob: -9.7638521194458
    9. '.add' → logprob: -10.3888521194458
    10. '   ' → logprob: -10.6388521194458

Token 138: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.09087168425321579
    2. 'h' → logprob: -2.465871572494507
    3. ' ' → logprob: -7.340871810913086
    4. 'H' → logprob: -7.840871810913086
    5. ' tm' → logprob: -8.340871810913086
    6. '>' → logprob: -8.465871810913086
    7. '0' → logprob: -9.215871810913086
    8. ' not' → logprob: -9.903371810913086
    9. '(h' → logprob: -10.153371810913086
    10. 'tm' → logprob: -10.278371810913086

Token 139: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16145619750022888
    2. ' >' → logprob: -2.0364561080932617
    3. '==' → logprob: -4.786456108093262
    4. '!=' → logprob: -4.911456108093262
    5. ' !=' → logprob: -6.411456108093262
    6. ' ==' → logprob: -7.411456108093262
    7. ':' → logprob: -8.161456108093262
    8. '">' → logprob: -9.411456108093262
    9. ')' → logprob: -9.661456108093262
    10. ' ' → logprob: -9.786456108093262

Token 140: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018151111900806427
    2. ' ' → logprob: -4.01815128326416
    3. '>' → logprob: -14.14315128326416
    4. '1' → logprob: -15.89315128326416
    5. '100' → logprob: -16.018150329589844
    6. '```' → logprob: -16.518150329589844
    7. '=' → logprob: -17.143150329589844
    8. 'H' → logprob: -17.580650329589844
    9. '  ' → logprob: -17.705650329589844
    10. '۰' → logprob: -17.705650329589844

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.125001907348633
    4. '>' → logprob: -18.500001907348633
    5. '1' → logprob: -18.625001907348633
    6. '=' → logprob: -19.125001907348633
    7. 'H' → logprob: -19.500001907348633
    8. '
' → logprob: -20.125001907348633
    9. '۰' → logprob: -20.125001907348633
    10. '<|end|>' → logprob: -20.500001907348633

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13729071617126465
    2. ':
' → logprob: -2.1372907161712646
    3. '-' → logprob: -6.262290954589844
    4. '           ' → logprob: -6.512290954589844
    5. ' -' → logprob: -6.512290954589844
    6. ')' → logprob: -6.887290954589844
    7. ' ==' → logprob: -7.262290954589844
    8. '               ' → logprob: -7.387290954589844
    9. '==' → logprob: -7.512290954589844
    10. ' :' → logprob: -7.887290954589844

Token 143: '               ' (ID: 506)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6833522319793701
    2. '           ' → logprob: -1.1833522319793701
    3. ' H' → logprob: -1.9333522319793701
    4. '               ' → logprob: -3.43335223197937
    5. ')' → logprob: -6.058352470397949
    6. '       ' → logprob: -6.183352470397949
    7. '=' → logprob: -6.558352470397949
    8. '+' → logprob: -6.683352470397949
    9. '   ' → logprob: -6.808352470397949
    10. ' =' → logprob: -6.933352470397949

Token 144: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.10767617076635361
    2. ' H' → logprob: -2.3576762676239014
    3. '               ' → logprob: -4.982676029205322
    4. '           ' → logprob: -7.982676029205322
    5. '                   ' → logprob: -9.35767650604248
    6. ' ' → logprob: -9.35767650604248
    7. '   ' → logprob: -10.85767650604248
    8. '	H' → logprob: -11.48267650604248
    9. '              ' → logprob: -11.85767650604248
    10. '       ' → logprob: -11.98267650604248

Token 145: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.06197844073176384
    2. '.' → logprob: -2.811978340148926
    3. '=' → logprob: -12.811978340148926
    4. '.append' → logprob: -13.061978340148926
    5. '.=' → logprob: -13.061978340148926
    6. 'add' → logprob: -13.686978340148926
    7. ' .' → logprob: -14.311978340148926
    8. ' =' → logprob: -14.561978340148926
    9. '.clear' → logprob: -14.686978340148926
    10. 's' → logprob: -15.061978340148926

Token 146: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.013863176107406616
    2. '(abs' → logprob: -4.7638630867004395
    3. '(h' → logprob: -5.8888630867004395
    4. '(' → logprob: -7.0138630867004395
    5. '(tm' → logprob: -7.3888630867004395
    6. '((' → logprob: -8.138863563537598
    7. 'h' → logprob: -8.638863563537598
    8. '(tmp' → logprob: -8.638863563537598
    9. 'abs' → logprob: -9.513863563537598
    10. '(x' → logprob: -9.763863563537598

Token 147: 'mph' (ID: 90452)
  Prédit: 'mph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mph' → logprob: -0.6281505227088928
    2. 'mp' → logprob: -0.8781505227088928
    3. '(m' → logprob: -4.003150463104248
    4. 'pm' → logprob: -4.003150463104248
    5. 'm' → logprob: -4.503150463104248
    6. '(t' → logprob: -7.503150463104248
    7. 'p' → logprob: -7.753150463104248
    8. ')' → logprob: -7.878150463104248
    9. '(' → logprob: -8.253150939941406
    10. '1' → logprob: -8.503150939941406

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00750736752524972
    2. ')
' → logprob: -5.25750732421875
    3. '       ' → logprob: -6.13250732421875
    4. ')

' → logprob: -10.00750732421875
    5. ')
' → logprob: -10.63250732421875
    6. '))' → logprob: -12.25750732421875
    7. 'if' → logprob: -12.38250732421875
    8. ' )' → logprob: -12.38250732421875
    9. '               ' → logprob: -12.88250732421875
    10. '           ' → logprob: -12.88250732421875

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004902362357825041
    2. 'if' → logprob: -5.879902362823486
    3. ' if' → logprob: -6.754902362823486
    4. '
' → logprob: -7.629902362823486
    5. '        
' → logprob: -8.254901885986328
    6. ')' → logprob: -9.379901885986328
    7. '   ' → logprob: -10.504901885986328
    8. ' ' → logprob: -10.629901885986328
    9. ' 
' → logprob: -11.504901885986328
    10. ',' → logprob: -12.004901885986328

Token 150: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44459426403045654
    2. 'if' (adapté à ' if') → logprob: -1.0695942640304565
    3. ' if' → logprob: -4.194594383239746
    4. ')' → logprob: -8.569594383239746
    5. '
' → logprob: -8.569594383239746
    6. '        
' → logprob: -8.694594383239746
    7. '   ' → logprob: -9.694594383239746
    8. ' ' → logprob: -10.569594383239746
    9. 'len' → logprob: -11.569594383239746
    10. '#' → logprob: -11.944594383239746

Token 151: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25193899869918823
    2. ' len' → logprob: -1.501939058303833
    3. '(len' → logprob: -12.376938819885254
    4. ' ' → logprob: -12.626938819885254
    5. '1' → logprob: -13.876938819885254
    6. '  ' → logprob: -14.501938819885254
    7. '   ' → logprob: -14.876938819885254
    8. '	len' → logprob: -15.001938819885254
    9. '
' → logprob: -15.626938819885254
    10. '0' → logprob: -17.37693977355957

Token 152: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.125015258789062
    3. 'H' → logprob: -14.625015258789062
    4. ' (' → logprob: -18.375015258789062
    5. '(
' → logprob: -18.500015258789062
    6. '()' → logprob: -19.125015258789062
    7. '(S' → logprob: -19.375015258789062
    8. ')' → logprob: -19.500015258789062
    9. '<|end|>' → logprob: -19.500015258789062
    10. ' H' → logprob: -19.750015258789062

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42403313517570496
    2. '==' → logprob: -1.4240331649780273
    3. ' ==' → logprob: -2.2990331649780273
    4. ')==' → logprob: -5.549033164978027
    5. '()' → logprob: -8.424033164978027
    6. '<=' → logprob: -9.299033164978027
    7. '()==' → logprob: -9.549033164978027
    8. '1' → logprob: -9.799033164978027
    9. ' )' → logprob: -10.049033164978027
    10. '<|end|>' → logprob: -10.049033164978027

Token 154: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10314465314149857
    2. ' ==' → logprob: -2.353144645690918
    3. '<=' → logprob: -6.353144645690918
    4. '!=' → logprob: -7.228144645690918
    5. ' <=' → logprob: -8.228144645690918
    6. ' !=' → logprob: -9.353144645690918
    7. '1' → logprob: -9.853144645690918
    8. ')' → logprob: -11.353144645690918
    9. '=' → logprob: -11.603144645690918
    10. ')==' → logprob: -11.603144645690918

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '0' → logprob: -17.250015258789062
    4. '   ' → logprob: -17.750015258789062
    5. '۱' → logprob: -18.625015258789062
    6. '' → logprob: -18.687515258789062
    7. 'exact' → logprob: -18.687515258789062
    8. '  ' → logprob: -18.937515258789062
    9. '=' → logprob: -19.000015258789062
    10. '{' → logprob: -19.062515258789062

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -15.375003814697266
    4. '   ' → logprob: -17.625003814697266
    5. ')' → logprob: -18.812503814697266
    6. '' → logprob: -18.875003814697266
    7. '  ' → logprob: -18.937503814697266
    8. '{' → logprob: -19.000003814697266
    9. '>' → logprob: -19.062503814697266
    10. '۱' → logprob: -19.250003814697266

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008711249567568302
    2. ' and' → logprob: -5.383711338043213
    3. ':
' → logprob: -5.508711338043213
    4. 'and' → logprob: -11.508710861206055
    5. '):' → logprob: -12.133710861206055
    6. ' :' → logprob: -12.258710861206055
    7. '       ' → logprob: -12.883710861206055
    8. ')' → logprob: -13.133710861206055
    9. ',' → logprob: -13.508710861206055
    10. ':

' → logprob: -13.883710861206055

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00042173630208708346
    2. ' H' → logprob: -8.875421524047852
    3. ',' → logprob: -9.625421524047852
    4. '               ' → logprob: -9.625421524047852
    5. '```' → logprob: -10.125421524047852
    6. '       ' → logprob: -10.625421524047852
    7. 'H' → logprob: -10.750421524047852
    8. ':' → logprob: -11.500421524047852
    9. '		' → logprob: -11.875421524047852
    10. ' for' → logprob: -12.250421524047852

Token 159: ' an' (ID: 448)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08729564398527145
    2. 'C' → logprob: -3.3372955322265625
    3. 'h' → logprob: -3.7122955322265625
    4. '           ' → logprob: -4.2122955322265625
    5. '               ' → logprob: -5.7122955322265625
    6. ' H' → logprob: -5.9622955322265625
    7. 'ans' → logprob: -6.8372955322265625
    8. 'height' → logprob: -7.7122955322265625
    9. 'c' → logprob: -8.337295532226562
    10. 'ch' → logprob: -8.712295532226562

Token 160: 'sh' (ID: 1116)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08962748944759369
    2. 'swer' → logprob: -2.464627504348755
    3. 'sx' → logprob: -7.714627265930176
    4. ' =' → logprob: -10.339627265930176
    5. 'x' → logprob: -10.339627265930176
    6. '=' → logprob: -10.339627265930176
    7. 'S' → logprob: -10.714627265930176
    8. 'y' → logprob: -10.964627265930176
    9. 'n' → logprob: -10.964627265930176
    10. 'sw' → logprob: -11.089627265930176

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42059606313705444
    2. 'swer' → logprob: -1.4205961227416992
    3. 's' → logprob: -2.920596122741699
    4. ' =' → logprob: -3.545596122741699
    5. '       ' → logprob: -4.420596122741699
    6. 'wer' → logprob: -5.795596122741699
    7. 'w' → logprob: -6.670596122741699
    8. '      ' → logprob: -7.295596122741699
    9. '         ' → logprob: -7.795596122741699
    10. '        ' → logprob: -8.4205961227417

Token 162: ' list' (ID: 1562)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03044833429157734
    2. 'list' → logprob: -3.7804484367370605
    3. 'max' → logprob: -5.0304484367370605
    4. ' H' → logprob: -7.7804484367370605
    5. 'next' → logprob: -8.905447959899902
    6. 'min' → logprob: -10.405447959899902
    7. ' list' → logprob: -10.655447959899902
    8. ' max' → logprob: -11.405447959899902
    9. '   ' → logprob: -11.780447959899902
    10. 'int' → logprob: -12.030447959899902

Token 163: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.696889623621246e-06
    2. 'H' → logprob: -12.87500286102295
    3. '(ans' → logprob: -19.000001907348633
    4. '(' → logprob: -19.500001907348633
    5. '
' → logprob: -20.000001907348633
    6. '	H' → logprob: -20.375001907348633
    7. '<H' → logprob: -20.750001907348633
    8. '(h' → logprob: -20.875001907348633
    9. '（' → logprob: -21.000001907348633
    10. '1' → logprob: -21.125001907348633

Token 164: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -2.2200749754119897e-06
    2. '())[' → logprob: -13.375001907348633
    3. ' )[' → logprob: -15.000001907348633
    4. ')' → logprob: -15.500001907348633
    5. ').' → logprob: -16.500001907348633
    6. '}[' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '][' → logprob: -18.250001907348633
    9. '")[' → logprob: -18.375001907348633
    10. 'set' → logprob: -18.500001907348633

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -17.75
    4. '   ' → logprob: -18.125
    5. ')' → logprob: -18.375
    6. '(' → logprob: -18.75
    7. ']' → logprob: -18.75
    8. '```' → logprob: -19.0
    9. '-' → logprob: -19.25
    10. '０' → logprob: -19.375

Token 166: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07254630327224731
    2. ')' → logprob: -3.6975462436676025
    3. '
' → logprob: -3.9475462436676025
    4. ']' → logprob: -4.447546482086182
    5. '       ' → logprob: -5.322546482086182
    6. '+' → logprob: -6.447546482086182
    7. '<|end|>' → logprob: -6.447546482086182
    8. ')
' → logprob: -6.822546482086182
    9. '               ' → logprob: -6.822546482086182
    10. ' -' → logprob: -6.947546482086182

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012345289811491966
    2. 'for' → logprob: -5.262345314025879
    3. 'if' → logprob: -5.887345314025879
    4. 'print' → logprob: -6.137345314025879
    5. ' for' → logprob: -6.887345314025879
    6. '               ' → logprob: -8.012345314025879
    7. 'ans' → logprob: -8.637345314025879
    8. ' if' → logprob: -8.887345314025879
    9. 'break' → logprob: -8.887345314025879
    10. '       ' → logprob: -9.387345314025879

Token 168: ' ok' (ID: 4763)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12057122588157654
    2. 'ans' → logprob: -3.1205711364746094
    3. 'valid' → logprob: -3.9955711364746094
    4. 'break' → logprob: -4.245571136474609
    5. 'flag' → logprob: -4.370571136474609
    6. 'print' → logprob: -4.995571136474609
    7. 'ok' (adapté à ' ok') → logprob: -4.995571136474609
    8. '           ' → logprob: -5.245571136474609
    9. '   ' → logprob: -6.370571136474609
    10. 'answer' → logprob: -7.120571136474609

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931576728820801
    2. ' =' → logprob: -0.6931576728820801
    3. '=True' → logprob: -12.318157196044922
    4. 'y' → logprob: -12.568157196044922
    5. 'ay' → logprob: -13.818157196044922
    6. ' ' → logprob: -14.318157196044922
    7. 'k' → logprob: -15.193157196044922
    8. '＝' → logprob: -15.693157196044922
    9. '=False' → logprob: -15.818157196044922
    10. '   ' → logprob: -16.568157196044922

Token 170: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.961759259458631e-06
    2. ' True' → logprob: -12.250004768371582
    3. 'False' → logprob: -16.0000057220459
    4. '(True' → logprob: -17.1250057220459
    5. 'all' → logprob: -17.7500057220459
    6. '1' → logprob: -18.5000057220459
    7. '   ' → logprob: -19.6250057220459
    8. 'true' → logprob: -21.1250057220459
    9. '[' → logprob: -21.7500057220459
    10. 'Tr' → logprob: -22.2500057220459

Token 171: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022284770966507494
    2. '<|end|>' → logprob: -9.000223159790039
    3. ' for' → logprob: -9.875223159790039
    4. '
' → logprob: -10.750223159790039
    5. 'for' → logprob: -11.750223159790039
    6. '		' → logprob: -12.375223159790039
    7. '            
' → logprob: -13.000223159790039
    8. '          ' → logprob: -13.125223159790039
    9. '<|end|>' → logprob: -13.125223159790039
    10. '	       ' → logprob: -13.250223159790039

Token 172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001965270144864917
    2. ' for' → logprob: -6.876965045928955
    3. 'for' → logprob: -7.001965045928955
    4. '   ' → logprob: -11.626965522766113
    5. '       ' → logprob: -11.626965522766113
    6. '          ' → logprob: -13.626965522766113
    7. '               ' → logprob: -14.126965522766113
    8. '<|end|>' → logprob: -14.376965522766113
    9. '		' → logprob: -14.876965522766113
    10. '	       ' → logprob: -15.001965522766113

Token 173: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00494827376678586
    2. '           ' → logprob: -6.004948139190674
    3. ' for' → logprob: -6.004948139190674
    4. '       ' → logprob: -13.254948616027832
    5. '   ' → logprob: -13.879948616027832
    6. 'break' → logprob: -16.129947662353516
    7. '               ' → logprob: -16.379947662353516
    8. '	for' → logprob: -16.629947662353516
    9. ' ' → logprob: -17.629947662353516
    10. '```' → logprob: -18.129947662353516

Token 174: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.0536883615423e-05
    2. ' x' → logprob: -9.750080108642578
    3. '(x' → logprob: -11.375080108642578
    4. 'xx' → logprob: -11.875080108642578
    5. 'X' → logprob: -13.375080108642578
    6. '_x' → logprob: -13.500080108642578
    7. '```' → logprob: -15.000080108642578
    8. 'xi' → logprob: -16.000080108642578
    9. 'i' → logprob: -16.125080108642578
    10. '   ' → logprob: -16.125080108642578

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017970333283301443
    2. ',' → logprob: -8.750179290771484
    3. '_,' → logprob: -11.000179290771484
    4. ' ,' → logprob: -13.250179290771484
    5. '```' → logprob: -13.750179290771484
    6. '1' → logprob: -14.375179290771484
    7. ' ' → logprob: -15.000179290771484
    8. '_' → logprob: -15.125179290771484
    9. '₂' → logprob: -16.250179290771484
    10. ',y' → logprob: -16.375179290771484

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021006562747061253
    2. ' ,' → logprob: -6.877100467681885
    3. 'in' → logprob: -7.627100467681885
    4. ' in' → logprob: -7.877100467681885
    5. ',y' → logprob: -8.627100944519043
    6. ',x' → logprob: -11.502100944519043
    7. '2' → logprob: -12.752100944519043
    8. ',in' → logprob: -13.127100944519043
    9. ',
' → logprob: -13.377100944519043
    10. '_,' → logprob: -14.127100944519043

Token 177: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011047814972698689
    2. ' y' → logprob: -4.511047840118408
    3. '	y' → logprob: -17.63604736328125
    4. ' ' → logprob: -17.88604736328125
    5. ',y' → logprob: -18.13604736328125
    6. ',' → logprob: -18.51104736328125
    7. '   ' → logprob: -18.76104736328125
    8. '    ' → logprob: -19.38604736328125
    9. 'x' → logprob: -19.76104736328125
    10. '  ' → logprob: -19.88604736328125

Token 178: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003010233340319246
    2. '1' → logprob: -8.125301361083984
    3. ',' → logprob: -12.500301361083984
    4. ' ' → logprob: -14.000301361083984
    5. '_' → logprob: -15.375301361083984
    6. '```' → logprob: -15.750301361083984
    7. '₂' → logprob: -16.875301361083984
    8. ' ,' → logprob: -18.000301361083984
    9. '   ' → logprob: -18.125301361083984
    10. ')' → logprob: -18.250301361083984

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6405310816480778e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ' in' → logprob: -13.375016212463379
    4. ',h' → logprob: -13.500016212463379
    5. ',H' → logprob: -16.125017166137695
    6. ',
' → logprob: -16.250017166137695
    7. 'in' → logprob: -16.375017166137695
    8. ',y' → logprob: -17.375017166137695
    9. '_,' → logprob: -17.625017166137695
    10. '```' → logprob: -18.500017166137695

Token 180: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0004938178462907672
    2. ' h' → logprob: -7.625494003295898
    3. 'XY' → logprob: -12.750494003295898
    4. 'H' → logprob: -14.250494003295898
    5. ',h' → logprob: -14.500494003295898
    6. ',' → logprob: -14.625494003295898
    7. ' ' → logprob: -14.750494003295898
    8. '_h' → logprob: -15.125494003295898
    9. ' XY' → logprob: -15.375494003295898
    10. '	h' → logprob: -16.2504940032959

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029760906472802162
    2. 'in' → logprob: -3.5297608375549316
    3. ',' → logprob: -12.65476131439209
    4. ' ' → logprob: -12.65476131439209
    5. 'In' → logprob: -14.40476131439209
    6. '
' → logprob: -14.65476131439209
    7. '	in' → logprob: -15.02976131439209
    8. '  ' → logprob: -15.40476131439209
    9. ' ,' → logprob: -15.59226131439209
    10. '   ' → logprob: -15.65476131439209

Token 182: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' → logprob: -9.014684110297821e-06
    2. ' XY' → logprob: -11.625008583068848
    3. 'X' → logprob: -19.875009536743164
    4. 'XYZ' → logprob: -20.000009536743164
    5. ' ' → logprob: -20.625009536743164
    6. '   ' → logprob: -22.250009536743164
    7. 'xy' → logprob: -22.250009536743164
    8. 'YX' → logprob: -22.750009536743164
    9. '  ' → logprob: -23.250009536743164
    10. 'PY' → logprob: -23.500009536743164

Token 183: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0001980570232262835
    2. '1' → logprob: -9.375198364257812
    3. '           ' → logprob: -9.625198364257812
    4. 'range' → logprob: -11.625198364257812
    5. '       ' → logprob: -12.000198364257812
    6. '   ' → logprob: -12.375198364257812
    7. '               ' → logprob: -12.375198364257812
    8. '[' → logprob: -12.625198364257812
    9. ' range' → logprob: -12.875198364257812
    10. '2' → logprob: -13.125198364257812

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15545938909053802
    2. ':
' → logprob: -2.155459403991699
    3. '               ' → logprob: -3.655459403991699
    4. ',' → logprob: -6.780459403991699
    5. '           ' → logprob: -7.530459403991699
    6. ' if' → logprob: -8.9054594039917
    7. '       ' → logprob: -9.0304594039917
    8. '=' → logprob: -9.7804594039917
    9. ':

' → logprob: -9.9054594039917
    10. '):
' → logprob: -10.0304594039917

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001769616355886683
    2. ' if' → logprob: -9.500177383422852
    3. '<|end|>' → logprob: -9.875177383422852
    4. '           ' → logprob: -11.125177383422852
    5. ',' → logprob: -11.750177383422852
    6. '	           ' → logprob: -12.000177383422852
    7. '       ' → logprob: -12.250177383422852
    8. '		       ' → logprob: -12.500177383422852
    9. '<|end|>' → logprob: -12.750177383422852
    10. '              ' → logprob: -12.875177383422852

Token 186: ' expected' (ID: 5930)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2120535522699356
    2. '               ' → logprob: -1.9620535373687744
    3. 'if' → logprob: -3.4620535373687744
    4. '           ' → logprob: -4.3370537757873535
    5. ' th' → logprob: -6.7120537757873535
    6. 'tmp' → logprob: -7.4620537757873535
    7. ' tmp' → logprob: -7.7120537757873535
    8. ' ans' → logprob: -8.212053298950195
    9. ' calculated' → logprob: -8.337053298950195
    10. ' val' → logprob: -8.462053298950195

Token 187: ' =' (ID: 314)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.28270354866981506
    2. 'h' → logprob: -2.4077036380767822
    3. '_height' → logprob: -2.7827036380767822
    4. 'H' → logprob: -3.0327036380767822
    5. ' =' → logprob: -3.2827036380767822
    6. '=' → logprob: -5.282703399658203
    7. 'height' → logprob: -6.032703399658203
    8. '_H' → logprob: -6.907703399658203
    9. '   ' → logprob: -10.282703399658203
    10. '_ht' → logprob: -10.657703399658203

Token 188: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00010008628305513412
    2. 'ans' → logprob: -9.500100135803223
    3. ' max' → logprob: -10.625100135803223
    4. 'abs' → logprob: -15.000100135803223
    5. '   ' → logprob: -15.500100135803223
    6. 'an' → logprob: -16.250099182128906
    7. ' ' → logprob: -16.375099182128906
    8. '
' → logprob: -16.875099182128906
    9. '(max' → logprob: -17.000099182128906
    10. '=max' → logprob: -17.375099182128906

Token 189: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0003171121352352202
    2. '(' → logprob: -8.250317573547363
    3. 'ans' → logprob: -10.125317573547363
    4. '(a' → logprob: -13.375317573547363
    5. '(ord' → logprob: -13.375317573547363
    6. '	ans' → logprob: -13.625317573547363
    7. '(

' → logprob: -14.000317573547363
    8. '

' → logprob: -14.250317573547363
    9. '0' → logprob: -14.375317573547363
    10. '((' → logprob: -14.375317573547363

Token 190: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01274177711457014
    2. 'ans' → logprob: -4.887741565704346
    3. 'sh' → logprob: -6.012741565704346
    4. 'an' → logprob: -6.887741565704346
    5. 'H' → logprob: -7.012741565704346
    6. '(ans' → logprob: -8.637742042541504
    7. 'anh' → logprob: -9.262742042541504
    8. ' ans' → logprob: -9.637742042541504
    9. 'hs' → logprob: -9.762742042541504
    10. ' ' → logprob: -9.887742042541504

Token 191: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931974291801453
    2. ' -' → logprob: -0.6931974291801453
    3. ',' → logprob: -11.443197250366211
    4. ')' → logprob: -11.693197250366211
    5. ' ' → logprob: -11.943197250366211
    6. '   ' → logprob: -12.068197250366211
    7. '<|end|>' → logprob: -13.193197250366211
    8. ' abs' → logprob: -13.318197250366211
    9. '-origin' → logprob: -13.818197250366211
    10. '0' → logprob: -13.818197250366211

Token 192: ' (' (ID: 350)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.03063611127436161
    2. '(abs' → logprob: -3.5306360721588135
    3. ' abs' → logprob: -7.030636310577393
    4. '(' → logprob: -14.530635833740234
    5. '.abs' → logprob: -15.530635833740234
    6. ' (' → logprob: -16.405635833740234
    7. '_abs' → logprob: -16.655635833740234
    8. '   ' → logprob: -18.030635833740234
    9. '```' → logprob: -18.280635833740234
    10. ')' → logprob: -18.530635833740234

Token 193: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0003416607796680182
    2. ' abs' → logprob: -8.000341415405273
    3. '(abs' → logprob: -12.000341415405273
    4. '.abs' → logprob: -18.000341415405273
    5. '   ' → logprob: -19.250341415405273
    6. '_abs' → logprob: -19.625341415405273
    7. ')' → logprob: -20.000341415405273
    8. '
' → logprob: -21.375341415405273
    9. '```' → logprob: -21.500341415405273
    10. 'Abs' → logprob: -21.750341415405273

Token 194: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00024263552040793002
    2. 'x' → logprob: -8.375242233276367
    3. '(' → logprob: -11.500242233276367
    4. '<|end|>' → logprob: -14.000242233276367
    5. ' x' → logprob: -14.500242233276367
    6. ')x' → logprob: -15.250242233276367
    7. ')' → logprob: -16.250242233276367
    8. '[x' → logprob: -16.875242233276367
    9. '{x' → logprob: -17.000242233276367
    10. '(
' → logprob: -17.000242233276367

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019380470737814903
    2. 'x' → logprob: -4.144380569458008
    3. '(x' → logprob: -5.769380569458008
    4. ' x' → logprob: -8.644380569458008
    5. '(' → logprob: -11.519380569458008
    6. '2' → logprob: -11.894380569458008
    7. '<|end|>' → logprob: -11.894380569458008
    8. ' -' → logprob: -12.394380569458008
    9. '[x' → logprob: -12.769380569458008
    10. ' ' → logprob: -13.144380569458008

Token 196: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10052140057086945
    2. '-' → logprob: -2.3505213260650635
    3. '-x' → logprob: -8.100521087646484
    4. 'x' → logprob: -12.100521087646484
    5. ' ' → logprob: -12.975521087646484
    6. '(x' → logprob: -13.100521087646484
    7. '<|end|>' → logprob: -14.350521087646484
    8. ',' → logprob: -15.600521087646484
    9. ' x' → logprob: -15.725521087646484
    10. '   ' → logprob: -16.475521087646484

Token 197: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00043126524542458355
    2. ' x' → logprob: -7.750431060791016
    3. '<|end|>' → logprob: -14.875431060791016
    4. '```' → logprob: -16.625431060791016
    5. '(x' → logprob: -16.875431060791016
    6. ' ' → logprob: -17.125431060791016
    7. ')' → logprob: -17.875431060791016
    8. '[' → logprob: -18.125431060791016
    9. '   ' → logprob: -18.250431060791016
    10. '2' → logprob: -18.375431060791016

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -13.000014305114746
    3. 'x' → logprob: -13.000014305114746
    4. '₂' → logprob: -13.125014305114746
    5. '```' → logprob: -13.375014305114746
    6. ')' → logprob: -13.500014305114746
    7. '   ' → logprob: -13.500014305114746
    8. '  ' → logprob: -14.500014305114746
    9. '    ' → logprob: -14.625014305114746
    10. 's' → logprob: -15.000014305114746

Token 199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ')+' → logprob: -11.75001049041748
    3. ' )' → logprob: -12.75001049041748
    4. '+' → logprob: -16.875011444091797
    5. '-' → logprob: -17.750011444091797
    6. ']' → logprob: -18.375011444091797
    7. '))' → logprob: -18.500011444091797
    8. ',' → logprob: -18.625011444091797
    9. '   ' → logprob: -19.000011444091797
    10. ' +' → logprob: -19.125011444091797

Token 200: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2455802708864212
    2. '-' → logprob: -1.6205803155899048
    3. ')' → logprob: -3.9955801963806152
    4. '+' → logprob: -6.995580196380615
    5. ' ' → logprob: -7.870580196380615
    6. ' +' → logprob: -8.495580673217773
    7. ' )' → logprob: -10.870580673217773
    8. ',' → logprob: -11.245580673217773
    9. ')-' → logprob: -11.370580673217773
    10. '),' → logprob: -11.745580673217773

Token 201: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.039237841963768005
    2. 'y' → logprob: -3.2892377376556396
    3. ' abs' → logprob: -6.789237976074219
    4. ' y' → logprob: -10.289237976074219
    5. '(abs' → logprob: -10.289237976074219
    6. '(y' → logprob: -14.164237976074219
    7. '<|end|>' → logprob: -15.289237976074219
    8. '.abs' → logprob: -15.539237976074219
    9. ' ' → logprob: -15.914237976074219
    10. '   ' → logprob: -16.28923797607422

Token 202: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -5.32392441527918e-05
    2. 'y' → logprob: -10.500053405761719
    3. '(' → logprob: -10.625053405761719
    4. ' (' → logprob: -13.750053405761719
    5. '(abs' → logprob: -16.25005340576172
    6. ' y' → logprob: -16.50005340576172
    7. '<|end|>' → logprob: -17.37505340576172
    8. ')' → logprob: -17.87505340576172
    9. '(x' → logprob: -17.87505340576172
    10. '(
' → logprob: -18.25005340576172

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04379786178469658
    2. '2' → logprob: -3.2937979698181152
    3. 'y' → logprob: -5.168797969818115
    4. ' y' → logprob: -10.543797492980957
    5. '```' → logprob: -11.293797492980957
    6. '(y' → logprob: -13.418797492980957
    7. '_' → logprob: -13.418797492980957
    8. ')' → logprob: -14.043797492980957
    9. '``' → logprob: -14.168797492980957
    10. 'Y' → logprob: -14.293797492980957

Token 204: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1602359116077423
    2. '-' → logprob: -1.91023588180542
    3. ' ' → logprob: -12.160236358642578
    4. '-x' → logprob: -12.910236358642578
    5. '   ' → logprob: -13.910236358642578
    6. ',' → logprob: -14.410236358642578
    7. '-y' → logprob: -14.410236358642578
    8. '  ' → logprob: -14.660236358642578
    9. '<|end|>' → logprob: -14.660236358642578
    10. ' y' → logprob: -15.035236358642578

Token 205: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003047186473850161
    2. ' y' → logprob: -8.12530517578125
    3. 'x' → logprob: -11.75030517578125
    4. '   ' → logprob: -15.25030517578125
    5. ' ' → logprob: -16.37530517578125
    6. '	y' → logprob: -16.37530517578125
    7. '    ' → logprob: -16.62530517578125
    8. '
' → logprob: -17.00030517578125
    9. '```' → logprob: -17.25030517578125
    10. '  ' → logprob: -17.87530517578125

Token 206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. '1' → logprob: -12.125008583068848
    3. ')' → logprob: -13.750008583068848
    4. '```' → logprob: -14.625008583068848
    5. ' ' → logprob: -14.875008583068848
    6. 'y' → logprob: -14.875008583068848
    7. '
' → logprob: -15.500008583068848
    8. '   ' → logprob: -15.875008583068848
    9. '_' → logprob: -16.50000762939453
    10. '``' → logprob: -16.81250762939453

Token 207: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -3.857719275401905e-05
    2. ' ),' → logprob: -10.375038146972656
    3. ')),' → logprob: -12.500038146972656
    4. ')' → logprob: -12.875038146972656
    5. ',' → logprob: -14.500038146972656
    6. '),
' → logprob: -16.250038146972656
    7. ''),' → logprob: -16.625038146972656
    8. '2' → logprob: -16.625038146972656
    9. ',),' → logprob: -16.750038146972656
    10. '```' → logprob: -16.750038146972656

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502598519437015
    2. ' ' → logprob: -6.501502513885498
    3. ')' → logprob: -15.626502990722656
    4. '   ' → logprob: -17.001502990722656
    5. '  ' → logprob: -17.626502990722656
    6. '           ' → logprob: -19.251502990722656
    7. '
' → logprob: -19.376502990722656
    8. '۰' → logprob: -19.501502990722656
    9. '    ' → logprob: -19.626502990722656
    10. '       ' → logprob: -19.751502990722656

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. ')' → logprob: -17.875009536743164
    4. '۰' → logprob: -19.000009536743164
    5. '   ' → logprob: -19.625009536743164
    6. '  ' → logprob: -20.625009536743164
    7. '０' → logprob: -21.125009536743164
    8. '
' → logprob: -21.375009536743164
    9. '```' → logprob: -21.937509536743164
    10. '    ' → logprob: -22.125009536743164

Token 210: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.30735474824905396
    2. ')' → logprob: -1.5573546886444092
    3. '               ' → logprob: -2.932354688644409
    4. '           ' → logprob: -7.432354927062988
    5. '):
' → logprob: -10.682354927062988
    6. ')
' → logprob: -11.432354927062988
    7. '       ' → logprob: -11.932354927062988
    8. ' )
' → logprob: -13.057354927062988
    9. '<|end|>' → logprob: -13.307354927062988
    10. ')

' → logprob: -13.432354927062988

Token 211: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003361774142831564
    2. '<|end|>' → logprob: -8.375336647033691
    3. '```' → logprob: -10.500336647033691
    4. '           ' → logprob: -10.500336647033691
    5. '<|end|>' → logprob: -11.875336647033691
    6. '       ' → logprob: -12.000336647033691
    7. ',' → logprob: -12.000336647033691
    8. '                
' → logprob: -12.375336647033691
    9. ')' → logprob: -12.375336647033691
    10. '              ' → logprob: -12.375336647033691

Token 212: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.37179800868034363
    2. ' if' → logprob: -1.371798038482666
    3. '               ' → logprob: -2.871798038482666
    4. '           ' → logprob: -8.496797561645508
    5. '       ' → logprob: -10.246797561645508
    6. '   ' → logprob: -11.746797561645508
    7. '	if' → logprob: -12.246797561645508
    8. ' ' → logprob: -12.621797561645508
    9. '		       ' → logprob: -14.121797561645508
    10. '	       ' → logprob: -14.746797561645508

Token 213: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.5832065343856812
    2. 'expected' → logprob: -0.8332065343856812
    3. 'h' → logprob: -5.458206653594971
    4. ' h' → logprob: -5.833206653594971
    5. '(expected' → logprob: -10.458206176757812
    6. '	expected' → logprob: -10.958206176757812
    7. '_expected' → logprob: -13.833206176757812
    8. ' ' → logprob: -14.395706176757812
    9. ' esperado' → logprob: -14.583206176757812
    10. 'Expected' → logprob: -14.708206176757812

Token 214: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0789572075009346
    2. ' !=' → logprob: -2.5789573192596436
    3. ')!=' → logprob: -10.453957557678223
    4. '()!=' → logprob: -10.703957557678223
    5. ']!=' → logprob: -11.328957557678223
    6. '!==' → logprob: -13.328957557678223
    7. '!=(' → logprob: -13.953957557678223
    8. '!' → logprob: -14.828957557678223
    9. ' ' → logprob: -15.078957557678223
    10. ')' → logprob: -15.703957557678223

Token 215: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0015023599844425917
    2. ' h' → logprob: -6.501502513885498
    3. '	h' → logprob: -18.001502990722656
    4. '<h' → logprob: -19.876502990722656
    5. '[h' → logprob: -21.751502990722656
    6. ' ' → logprob: -22.251502990722656
    7. '_h' → logprob: -22.501502990722656
    8. '0' → logprob: -22.501502990722656
    9. '"h' → logprob: -22.501502990722656
    10. '(h' → logprob: -23.001502990722656

Token 216: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5416210293769836
    2. ':' → logprob: -0.9166210293769836
    3. '                   ' → logprob: -4.791621208190918
    4. '               ' → logprob: -5.041621208190918
    5. '           ' → logprob: -5.916621208190918
    6. '                       ' → logprob: -7.791621208190918
    7. '):
' → logprob: -8.791621208190918
    8. '<|end|>' → logprob: -9.916621208190918
    9. ',' → logprob: -10.291621208190918
    10. '                           ' → logprob: -10.416621208190918

Token 217: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019479141337797046
    2. '               ' → logprob: -6.75194787979126
    3. '                       ' → logprob: -7.50194787979126
    4. '           ' → logprob: -9.751948356628418
    5. '                           ' → logprob: -9.876948356628418
    6. '                  ' → logprob: -10.126948356628418
    7. ' break' → logprob: -10.626948356628418
    8. '                    
' → logprob: -11.501948356628418
    9. 'break' → logprob: -11.501948356628418
    10. '                 ' → logprob: -11.626948356628418

Token 218: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.0863855704665184
    2. ' ok' → logprob: -2.586385488510132
    3. '                       ' → logprob: -6.086385726928711
    4. '               ' → logprob: -6.211385726928711
    5. 'break' → logprob: -6.586385726928711
    6. '                   ' → logprob: -6.711385726928711
    7. '           ' → logprob: -8.336385726928711
    8. '   ' → logprob: -8.961385726928711
    9. '
' → logprob: -9.336385726928711
    10. ' break' → logprob: -9.711385726928711

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2631852328777313
    2. ' =' → logprob: -1.5131852626800537
    3. '==' → logprob: -4.888185024261475
    4. '=False' → logprob: -6.138185024261475
    5. ' ==' → logprob: -6.513185024261475
    6. ' ' → logprob: -12.513185501098633
    7. '＝' → logprob: -12.888185501098633
    8. ' is' → logprob: -13.388185501098633
    9. '   ' → logprob: -13.763185501098633
    10. 'False' → logprob: -13.888185501098633

Token 220: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '(False' → logprob: -18.375911712646484
    4. '=False' → logprob: -19.250911712646484
    5. '   ' → logprob: -22.375911712646484
    6. 'false' → logprob: -23.000911712646484
    7. '0' → logprob: -23.500911712646484
    8. '_false' → logprob: -23.500911712646484
    9. '```' → logprob: -23.625911712646484
    10. 'F' → logprob: -23.625911712646484

Token 221: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007348202052526176
    2. '           ' → logprob: -7.500734806060791
    3. '               ' → logprob: -9.50073528289795
    4. '                       ' → logprob: -10.00073528289795
    5. '       ' → logprob: -10.75073528289795
    6. '                    
' → logprob: -11.62573528289795
    7. '				' → logprob: -11.87573528289795
    8. '                    ' → logprob: -12.25073528289795
    9. '                  ' → logprob: -12.50073528289795
    10. '   ' → logprob: -12.75073528289795

Token 222: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010449681576574221
    2. '           ' → logprob: -9.750104904174805
    3. '       ' → logprob: -11.625104904174805
    4. '               ' → logprob: -11.750104904174805
    5. '                    
' → logprob: -11.875104904174805
    6. '                       ' → logprob: -12.250104904174805
    7. '				' → logprob: -12.500104904174805
    8. '                    ' → logprob: -12.625104904174805
    9. '		           ' → logprob: -12.875104904174805
    10. '                  ' → logprob: -13.000104904174805

Token 223: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.16132664680480957
    2. '                   ' → logprob: -1.9113266468048096
    3. ' break' → logprob: -6.9113264083862305
    4. '               ' → logprob: -9.91132640838623
    5. '                       ' → logprob: -10.28632640838623
    6. '           ' → logprob: -11.53632640838623
    7. '	break' → logprob: -11.91132640838623
    8. '				' → logprob: -13.03632640838623
    9. '   ' → logprob: -14.03632640838623
    10. '       ' → logprob: -14.91132640838623

Token 224: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005882986588403583
    2. '       ' → logprob: -8.000588417053223
    3. 'if' → logprob: -8.875588417053223
    4. '   ' → logprob: -9.875588417053223
    5. '		' → logprob: -10.375588417053223
    6. '          ' → logprob: -11.375588417053223
    7. ' if' → logprob: -12.000588417053223
    8. '<|end|>' → logprob: -12.125588417053223
    9. '	       ' → logprob: -13.625588417053223
    10. ',' → logprob: -14.000588417053223

Token 225: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017552033066749573
    2. '```' → logprob: -5.017551898956299
    3. '   ' → logprob: -5.767551898956299
    4. '	' → logprob: -6.267551898956299
    5. '           ' → logprob: -6.267551898956299
    6. 'if' → logprob: -6.642551898956299
    7. '<|end|>' → logprob: -6.642551898956299
    8. ' if' → logprob: -7.267551898956299
    9. '	if' → logprob: -9.017552375793457
    10. ',' → logprob: -9.267552375793457

Token 226: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2154545783996582
    2. '       ' → logprob: -1.7154545783996582
    3. ' if' → logprob: -4.340454578399658
    4. '   ' → logprob: -7.090454578399658
    5. '           ' → logprob: -10.0904541015625
    6. '	if' → logprob: -11.4654541015625
    7. '```' → logprob: -11.7154541015625
    8. ' ' → logprob: -11.7154541015625
    9. 'If' → logprob: -12.9654541015625
    10. ';if' → logprob: -13.0904541015625

Token 227: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.3132646679878235
    2. 'ok' → logprob: -1.3132646083831787
    3. ' okay' → logprob: -13.688264846801758
    4. '	ok' → logprob: -13.938264846801758
    5. '   ' → logprob: -15.188264846801758
    6. '(ok' → logprob: -15.563264846801758
    7. 'okay' → logprob: -15.938264846801758
    8. 'not' → logprob: -16.063264846801758
    9. ' ' → logprob: -16.813264846801758
    10. ' not' → logprob: -16.938264846801758

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054938819259405136
    2. ':
' → logprob: -2.929938793182373
    3. '               ' → logprob: -10.429939270019531
    4. '           ' → logprob: -11.179939270019531
    5. '       ' → logprob: -12.554939270019531
    6. '):
' → logprob: -12.679939270019531
    7. ':

' → logprob: -13.179939270019531
    8. ' :' → logprob: -13.929939270019531
    9. ':
' → logprob: -14.304939270019531
    10. '):' → logprob: -14.429939270019531

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05094246566295624
    2. ' print' → logprob: -3.4259424209594727
    3. 'print' → logprob: -4.800942420959473
    4. '           ' → logprob: -4.800942420959473
    5. '       ' → logprob: -7.425942420959473
    6. '```' → logprob: -9.300942420959473
    7. '   ' → logprob: -12.550942420959473
    8. ',' → logprob: -13.050942420959473
    9. '#' → logprob: -13.300942420959473
    10. '                   ' → logprob: -13.425942420959473

Token 230: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.40502452850341797
    2. ' print' → logprob: -1.155024528503418
    3. '               ' → logprob: -4.030024528503418
    4. '           ' → logprob: -8.905024528503418
    5. '       ' → logprob: -9.905024528503418
    6. '   ' → logprob: -10.530024528503418
    7. '```' → logprob: -13.530024528503418
    8. '	print' → logprob: -14.030024528503418
    9. ' ' → logprob: -14.905024528503418
    10. '                   ' → logprob: -15.030024528503418

Token 231: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00011391390580683947
    2. 'x' → logprob: -9.250113487243652
    3. '(f' → logprob: -11.375113487243652
    4. '(' → logprob: -12.000113487243652
    5. ' x' → logprob: -15.875113487243652
    6. '(
' → logprob: -19.12511444091797
    7. ' (' → logprob: -19.37511444091797
    8. '('{}' → logprob: -19.62511444091797
    9. '("{}' → logprob: -19.62511444091797
    10. 'f' → logprob: -19.87511444091797

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. 'x' → logprob: -16.375
    4. ')' → logprob: -17.5
    5. '```' → logprob: -17.875
    6. ',' → logprob: -18.0
    7. '<|end|>' → logprob: -18.375
    8. 's' → logprob: -18.75
    9. '１' → logprob: -19.0625
    10. '+' → logprob: -19.125

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003455944824963808
    2. ' ,' → logprob: -8.000345230102539
    3. ',end' → logprob: -11.625345230102539
    4. ',y' → logprob: -14.750345230102539
    5. ',x' → logprob: -14.750345230102539
    6. ',
' → logprob: -15.125345230102539
    7. ')' → logprob: -16.62534523010254
    8. ' ' → logprob: -17.00034523010254
    9. ',f' → logprob: -17.75034523010254
    10. ',n' → logprob: -18.37534523010254

Token 234: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015023599844425917
    2. ' y' → logprob: -6.501502513885498
    3. '	y' → logprob: -20.626502990722656
    4. ')y' → logprob: -21.751502990722656
    5. '(y' → logprob: -22.876502990722656
    6. ''y' → logprob: -23.126502990722656
    7. ',y' → logprob: -23.251502990722656
    8. '<|end|>' → logprob: -23.501502990722656
    9. '   ' → logprob: -24.001502990722656
    10. 'yj' → logprob: -24.251502990722656

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '<|end|>' → logprob: -16.125
    3. ' ' → logprob: -17.5
    4. '```' → logprob: -18.5
    5. ',' → logprob: -20.0
    6. '#' → logprob: -20.0
    7. '...' → logprob: -20.125
    8. '-' → logprob: -20.125
    9. ')' → logprob: -20.25
    10. 's' → logprob: -20.75

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008478637901134789
    2. ' ans' → logprob: -7.250847816467285
    3. ' ,' → logprob: -9.250847816467285
    4. 'ans' → logprob: -10.125847816467285
    5. ' an' → logprob: -13.875847816467285
    6. '(ans' → logprob: -15.125847816467285
    7. '_ans' → logprob: -15.625847816467285
    8. '	ans' → logprob: -15.875847816467285
    9. ',
' → logprob: -16.5008487701416
    10. ')' → logprob: -16.6258487701416

Token 237: ' an' (ID: 448)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.85366350505501e-05
    2. ' an' → logprob: -9.25009822845459
    3. 'anh' → logprob: -13.87509822845459
    4. 'anj' → logprob: -14.87509822845459
    5. 'anst' → logprob: -15.25009822845459
    6. '   ' → logprob: -15.62509822845459
    7. 'ansk' → logprob: -16.000099182128906
    8. 'a' → logprob: -16.625099182128906
    9. '

' → logprob: -16.625099182128906
    10. '
' → logprob: -17.250099182128906

Token 238: 'sh' (ID: 1116)
  Prédit: 'sh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.008623320609331131
    2. 's' → logprob: -4.758623123168945
    3. ' sh' → logprob: -12.008623123168945
    4. 'h' → logprob: -14.258623123168945
    5. 'shme' → logprob: -14.258623123168945
    6. 'श' → logprob: -16.133623123168945
    7. 'skih' → logprob: -16.321123123168945
    8. 'shaled' → logprob: -16.383623123168945
    9. 'shint' → logprob: -16.446123123168945
    10. '	sh' → logprob: -16.446123123168945

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01423825602978468
    2. ')
' → logprob: -4.764238357543945
    3. '               ' → logprob: -5.264238357543945
    4. ')return' → logprob: -8.264238357543945
    5. '<|end|>' → logprob: -8.764238357543945
    6. ' )' → logprob: -13.014238357543945
    7. '<|end|>' → logprob: -13.014238357543945
    8. ')#' → logprob: -13.389238357543945
    9. '           ' → logprob: -13.389238357543945
    10. '),' → logprob: -13.514238357543945

Token 240: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' sys' (ID: 12228)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.38713809847831726
    2. 'break' → logprob: -1.1371381282806396
    3. ' exit' → logprob: -9.637138366699219
    4. ' break' → logprob: -9.762138366699219
    5. 'sys' (adapté à ' sys') → logprob: -10.012138366699219
    6. 'import' → logprob: -10.012138366699219
    7. '               ' → logprob: -10.137138366699219
    8. 'return' → logprob: -11.887138366699219
    9. '
' → logprob: -12.387138366699219
    10. 'quit' → logprob: -13.137138366699219

Token 242: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -1.688212614681106e-05
    2. '.' → logprob: -11.750017166137695
    3. 'exit' → logprob: -12.000017166137695
    4. '.stdout' → logprob: -14.000017166137695
    5. '	exit' → logprob: -14.500017166137695
    6. '_exit' → logprob: -14.625017166137695
    7. '.quit' → logprob: -15.250017166137695
    8. ' exit' → logprob: -15.250017166137695
    9. '.EXIT' → logprob: -15.500017166137695
    10. '.Exit' → logprob: -16.000017166137695

Token 243: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0032273868564516306
    2. '(' → logprob: -5.753227233886719
    3. '().' → logprob: -10.753227233886719
    4. '()`' → logprob: -11.628227233886719
    5. '()(' → logprob: -12.878227233886719
    6. '()
' → logprob: -12.878227233886719
    7. '()]' → logprob: -13.003227233886719
    8. '();' → logprob: -13.253227233886719
    9. '())' → logprob: -13.503227233886719
    10. '()\' → logprob: -13.503227233886719


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 241
Tokens correctement prédits (1ère position, stricte): 115
Tokens correctement prédits (1ère position, avec adaptation): 125
Tokens correctement prédits (top 10): 218
Précision stricte (1ère position): 47.72%
Précision adaptée (1ère position): 51.87%
Précision (top 10): 90.46%
================================================================================
