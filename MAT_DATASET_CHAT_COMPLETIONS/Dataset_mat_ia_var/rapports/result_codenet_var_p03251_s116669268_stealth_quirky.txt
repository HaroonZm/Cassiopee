================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Transmissions by Maximus: Python code with quirky design choices

X, M, Z, _ = map(int, input().split())
Alpha = [*map(int, input().split())]
Beta = []
for i in input().split():
    Beta.append(int(i))
result = ["War", "No War"]
check = lambda: ((max([*Alpha, X]) < min([*Beta, Z])))
print(result[check()])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Trans' (ID: 5515)
  → Token d'amorce (pas de prédiction)

Token 2: 'missions' (ID: 18146)
  → Token d'amorce (pas de prédiction)

Token 3: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03047655150294304
    2. ' =' → logprob: -4.0304765701293945
    3. '=' → logprob: -4.7804765701293945
    4. '.' → logprob: -6.6554765701293945
    5. '_' → logprob: -7.2804765701293945
    6. '```' → logprob: -7.6554765701293945
    7. '#' → logprob: -7.9054765701293945
    8. '_trans' → logprob: -8.655476570129395
    9. 's' → logprob: -9.030476570129395
    10. '[' → logprob: -9.155476570129395

Token 4: ' Max' (ID: 10093)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26200148463249207
    2. ' a' → logprob: -2.3870015144348145
    3. ' space' → logprob: -3.0120015144348145
    4. 'space' → logprob: -3.5120015144348145
    5. ' #' → logprob: -3.6370015144348145
    6. '_' → logprob: -4.1370015144348145
    7. '  ' → logprob: -5.5120015144348145
    8. '#' → logprob: -5.6370015144348145
    9. 'a' → logprob: -6.7620015144348145
    10. ''' → logprob: -7.0120015144348145

Token 5: 'imus' (ID: 43305)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8610290884971619
    2. '#' → logprob: -1.2360291481018066
    3. '_' → logprob: -2.9860291481018066
    4. '```' → logprob: -2.9860291481018066
    5. '.' → logprob: -3.2360291481018066
    6. ' =' → logprob: -3.3610291481018066
    7. '"""' → logprob: -3.9860291481018066
    8. 'def' → logprob: -4.236029148101807
    9. ' ' → logprob: -4.611029148101807
    10. '=' → logprob: -4.611029148101807

Token 6: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3409309387207031
    2. '#' → logprob: -1.7159309387207031
    3. '```' → logprob: -3.340930938720703
    4. '.' → logprob: -3.465930938720703
    5. ''' → logprob: -4.715930938720703
    6. '`' → logprob: -5.340930938720703
    7. '\' → logprob: -5.465930938720703
    8. '"""' → logprob: -5.590930938720703
    9. ''''' → logprob: -5.715930938720703
    10. ' =' → logprob: -6.090930938720703

Token 7: ' Python' (ID: 26534)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6079803109169006
    2. '#' → logprob: -2.107980251312256
    3. ' #' → logprob: -2.357980251312256
    4. ' ```' → logprob: -2.732980251312256
    5. 'def' → logprob: -3.107980251312256
    6. ' ' → logprob: -3.857980251312256
    7. ' def' → logprob: -3.982980251312256
    8. '`' → logprob: -4.107980251312256
    9. ''' → logprob: -4.107980251312256
    10. '``' → logprob: -4.982980251312256

Token 8: ' code' (ID: 3490)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23703540861606598
    2. '```' → logprob: -1.8620353937149048
    3. ':' → logprob: -3.4870355129241943
    4. '\' → logprob: -5.237035274505615
    5. '`' → logprob: -5.237035274505615
    6. ''' → logprob: -5.612035274505615
    7. '.' → logprob: -6.237035274505615
    8. 'def' → logprob: -6.987035274505615
    9. '<|end|>' → logprob: -7.112035274505615
    10. '\n' → logprob: -7.112035274505615

Token 9: ' with' (ID: 483)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17595261335372925
    2. '```' → logprob: -2.175952672958374
    3. ':' → logprob: -3.675952672958374
    4. '\' → logprob: -5.300952434539795
    5. 'def' → logprob: -5.675952434539795
    6. 'import' → logprob: -5.800952434539795
    7. '`' → logprob: -5.925952434539795
    8. '\n' → logprob: -6.800952434539795
    9. ''' → logprob: -6.925952434539795
    10. '.' → logprob: -7.175952434539795

Token 10: ' quirky' (ID: 94390)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.24404238164424896
    2. 'out' → logprob: -2.24404239654541
    3. ' a' → logprob: -2.49404239654541
    4. 'a' → logprob: -4.74404239654541
    5. ' out' → logprob: -5.61904239654541
    6. '#' → logprob: -6.11904239654541
    7. ' ```' → logprob: -6.24404239654541
    8. '``' → logprob: -6.36904239654541
    9. '"""' → logprob: -6.99404239654541
    10. ' spaces' → logprob: -7.49404239654541

Token 11: ' design' (ID: 2364)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6337699890136719
    2. '_' → logprob: -0.8837699890136719
    3. ''' → logprob: -4.133769989013672
    4. '#' → logprob: -4.133769989013672
    5. 'def' → logprob: -5.633769989013672
    6. '``' → logprob: -6.008769989013672
    7. ' and' → logprob: -6.008769989013672
    8. '`' → logprob: -6.133769989013672
    9. '!' → logprob: -6.133769989013672
    10. ' ' → logprob: -6.633769989013672

Token 12: ' choices' (ID: 14494)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27311328053474426
    2. '```' → logprob: -2.398113250732422
    3. ':' → logprob: -2.648113250732422
    4. '_' → logprob: -3.148113250732422
    5. '.' → logprob: -5.023113250732422
    6. 'def' → logprob: -5.148113250732422
    7. '\' → logprob: -5.648113250732422
    8. '`' → logprob: -6.023113250732422
    9. '[' → logprob: -6.023113250732422
    10. 'import' → logprob: -6.148113250732422

Token 13: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25588420033454895
    2. '```' → logprob: -2.3808841705322266
    3. '_' → logprob: -3.2558841705322266
    4. ':' → logprob: -3.2558841705322266
    5. '\' → logprob: -4.005884170532227
    6. '\n' → logprob: -4.880884170532227
    7. '`' → logprob: -5.130884170532227
    8. '.' → logprob: -5.505884170532227
    9. '
' → logprob: -6.005884170532227
    10. 'import' → logprob: -6.255884170532227

Token 14: 'X' (ID: 55)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4623839557170868
    2. '```' → logprob: -1.3373839855194092
    3. ':' → logprob: -3.337383985519409
    4. '_' → logprob: -3.462383985519409
    5. '`' → logprob: -4.33738374710083
    6. '\' → logprob: -5.33738374710083
    7. '\n' → logprob: -5.71238374710083
    8. 'd' → logprob: -5.83738374710083
    9. '[' → logprob: -5.96238374710083
    10. '``' → logprob: -6.21238374710083

Token 15: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5733482241630554
    2. '.' → logprob: -1.5733482837677002
    3. ' =' → logprob: -2.0733482837677
    4. '_' → logprob: -3.5733482837677
    5. ':' → logprob: -3.9483482837677
    6. 'X' → logprob: -4.073348045349121
    7. '[' → logprob: -4.323348045349121
    8. ',' → logprob: -5.448348045349121
    9. '(' → logprob: -5.573348045349121
    10. ' ' → logprob: -5.823348045349121

Token 16: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29008206725120544
    2. ' Y' → logprob: -1.5400820970535278
    3. ' =' → logprob: -3.7900819778442383
    4. 'Y' → logprob: -4.915081977844238
    5. '=' → logprob: -6.040081977844238
    6. '  ' → logprob: -7.165081977844238
    7. 'y' → logprob: -7.290081977844238
    8. '_' → logprob: -7.540081977844238
    9. ' y' → logprob: -7.790081977844238
    10. ' )' → logprob: -7.790081977844238

Token 17: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5917685627937317
    2. ' =' → logprob: -0.8417685627937317
    3. ',' → logprob: -4.591768741607666
    4. ' ' → logprob: -5.466768741607666
    5. '.' → logprob: -7.466768741607666
    6. ')' → logprob: -8.216768264770508
    7. '_' → logprob: -8.716768264770508
    8. 'a' → logprob: -9.341768264770508
    9. '[' → logprob: -10.341768264770508
    10. '  ' → logprob: -10.466768264770508

Token 18: ' Z' (ID: 1489)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0739288255572319
    2. '=' → logprob: -2.8239288330078125
    3. ' ' → logprob: -4.9489288330078125
    4. ',' → logprob: -5.5739288330078125
    5. ' ,' → logprob: -8.448928833007812
    6. '  ' → logprob: -8.823928833007812
    7. '_' → logprob: -8.948928833007812
    8. ')' → logprob: -9.698928833007812
    9. 'a' → logprob: -10.011428833007812
    10. 's' → logprob: -10.136428833007812

Token 19: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05692356452345848
    2. '=' → logprob: -2.9319236278533936
    3. ',' → logprob: -6.4319233894348145
    4. ' ' → logprob: -8.556923866271973
    5. '.' → logprob: -9.306923866271973
    6. '[' → logprob: -10.431923866271973
    7. ')' → logprob: -10.806923866271973
    8. '_' → logprob: -10.806923866271973
    9. ' ,' → logprob: -10.806923866271973
    10. '  ' → logprob: -12.056923866271973

Token 20: ' _' (ID: 1175)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02167874574661255
    2. '=' → logprob: -4.021678924560547
    3. ' ' → logprob: -5.896678924560547
    4. ',' → logprob: -7.396678924560547
    5. ' ,' → logprob: -9.896678924560547
    6. '  ' → logprob: -10.271678924560547
    7. '_' → logprob: -11.021678924560547
    8. ' =
' → logprob: -11.771678924560547
    9. '.' → logprob: -12.334178924560547
    10. ' ' → logprob: -12.709178924560547

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31606414914131165
    2. ' =' → logprob: -1.3160641193389893
    3. ',' → logprob: -5.941064357757568
    4. ' ' → logprob: -9.44106388092041
    5. ' ,' → logprob: -11.19106388092041
    6. 'a' → logprob: -11.69106388092041
    7. 'X' → logprob: -11.69106388092041
    8. ')' → logprob: -11.81606388092041
    9. ':' → logprob: -11.81606388092041
    10. 'x' → logprob: -11.81606388092041

Token 22: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35074564814567566
    2. 'range' → logprob: -2.475745677947998
    3. '1' → logprob: -2.600745677947998
    4. 'None' → logprob: -2.725745677947998
    5. '[],' → logprob: -4.350745677947998
    6. ' ' → logprob: -4.850745677947998
    7. '[]' → logprob: -4.975745677947998
    8. '[' → logprob: -4.975745677947998
    9. 'map' → logprob: -5.225745677947998
    10. '(),' → logprob: -5.475745677947998

Token 23: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6032677888870239
    2. '(int' → logprob: -1.353267788887024
    3. '(lambda' → logprob: -1.728267788887024
    4. '(str' → logprob: -4.353267669677734
    5. '<|end|>' → logprob: -5.978267669677734
    6. '(ord' → logprob: -8.228267669677734
    7. '(eval' → logprob: -8.228267669677734
    8. '(chr' → logprob: -9.103267669677734
    9. '(abs' → logprob: -9.103267669677734
    10. '(
' → logprob: -9.103267669677734

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1350916028022766
    2. '(' → logprob: -3.010091543197632
    3. 'input' → logprob: -3.260091543197632
    4. ')' → logprob: -3.385091543197632
    5. '<|end|>' → logprob: -5.885091781616211
    6. '('' → logprob: -7.885091781616211
    7. ' input' → logprob: -8.010091781616211
    8. ',input' → logprob: -8.260091781616211
    9. '```' → logprob: -8.885091781616211
    10. '("' → logprob: -9.260091781616211

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3135373890399933
    2. ' input' → logprob: -1.313537359237671
    3. '(input' → logprob: -9.18853759765625
    4. ')' → logprob: -9.56353759765625
    5. ',input' → logprob: -10.56353759765625
    6. 'open' → logprob: -10.93853759765625
    7. '[input' → logprob: -11.43853759765625
    8. ' ' → logprob: -11.56353759765625
    9. '	input' → logprob: -11.56353759765625
    10. '```' → logprob: -12.06353759765625

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.595933735370636
    2. '())' → logprob: -1.2209336757659912
    3. '().' → logprob: -2.220933675765991
    4. '());' → logprob: -3.970933675765991
    5. '(' → logprob: -4.09593391418457
    6. '(()' → logprob: -5.97093391418457
    7. '()))' → logprob: -6.72093391418457
    8. '();)' → logprob: -6.84593391418457
    9. '()));' → logprob: -6.97093391418457
    10. '(),' → logprob: -7.22093391418457

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009399275877512991
    2. 'strip' → logprob: -7.000939846038818
    3. ' split' → logprob: -11.375940322875977
    4. ')' → logprob: -11.750940322875977
    5. 'rstrip' → logprob: -11.875940322875977
    6. '(split' → logprob: -14.250940322875977
    7. 'spl' → logprob: -14.375940322875977
    8. 's' → logprob: -14.750940322875977
    9. 'read' → logprob: -15.750940322875977
    10. '_split' → logprob: -16.875940322875977

Token 28: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012510590255260468
    2. '()))' → logprob: -5.012510776519775
    3. '()' → logprob: -5.637510776519775
    4. ')' → logprob: -6.637510776519775
    5. '('' → logprob: -7.762510776519775
    6. '(' → logprob: -8.512510299682617
    7. '))' → logprob: -9.762510299682617
    8. '()),' → logprob: -10.012510299682617
    9. '(','' → logprob: -10.012510299682617
    10. '());' → logprob: -10.637510299682617

Token 29: 'Alpha' (ID: 26549)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8842733502388
    2. 'if' → logprob: -2.0092732906341553
    3. ',' → logprob: -3.0092732906341553
    4. ')' → logprob: -3.1342732906341553
    5. '#' → logprob: -3.2592732906341553
    6. 'for' → logprob: -3.3842732906341553
    7. '[' → logprob: -3.3842732906341553
    8. 'n' → logprob: -4.009273529052734
    9. '\n' → logprob: -4.134273529052734
    10. ',
' → logprob: -4.259273529052734

Token 30: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4501461684703827
    2. ' =' → logprob: -2.075146198272705
    3. 'Bet' → logprob: -3.200146198272705
    4. '=' → logprob: -3.200146198272705
    5. 'bet' → logprob: -3.325146198272705
    6. 'Beta' → logprob: -3.950146198272705
    7. ',' → logprob: -4.200146198272705
    8. ')' → logprob: -4.200146198272705
    9. '_beta' → logprob: -4.200146198272705
    10. '[' → logprob: -4.325146198272705

Token 31: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2085537910461426
    2. '[' → logprob: -1.8335537910461426
    3. 'list' → logprob: -2.4585537910461426
    4. 'chr' → logprob: -2.7085537910461426
    5. 'lambda' → logprob: -2.8335537910461426
    6. '['' → logprob: -3.0835537910461426
    7. 'X' → logprob: -3.2085537910461426
    8. '_' → logprob: -3.2085537910461426
    9. '0' → logprob: -3.9585537910461426
    10. '"' → logprob: -4.208553791046143

Token 32: '*' (ID: 9)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18696361780166626
    2. 'int' → logprob: -2.6869635581970215
    3. 'i' → logprob: -3.8119635581970215
    4. '1' → logprob: -4.1869635581970215
    5. 'input' → logprob: -4.5619635581970215
    6. '*' → logprob: -5.0619635581970215
    7. ']' → logprob: -5.0619635581970215
    8. '_' → logprob: -5.1869635581970215
    9. 'chr' → logprob: -5.3119635581970215
    10. '_]' → logprob: -5.3119635581970215

Token 33: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03948735073208809
    2. 'input' → logprob: -3.664487361907959
    3. 'map' → logprob: -4.664487361907959
    4. '"' → logprob: -6.789487361907959
    5. ''' → logprob: -6.789487361907959
    6. '(range' → logprob: -7.539487361907959
    7. ' range' → logprob: -8.5394868850708
    8. 'chr' → logprob: -8.7894868850708
    9. ''r' → logprob: -9.6644868850708
    10. '(map' → logprob: -10.0394868850708

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014093573205173016
    2. '(' → logprob: -5.014093399047852
    3. '(str' → logprob: -5.139093399047852
    4. '(chr' → logprob: -7.014093399047852
    5. '(ord' → logprob: -8.014093399047852
    6. '(lambda' → logprob: -8.514093399047852
    7. '(float' → logprob: -10.514093399047852
    8. '(eval' → logprob: -11.264093399047852
    9. '(input' → logprob: -12.889093399047852
    10. '(
' → logprob: -13.264093399047852

Token 35: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.39845556020736694
    2. ',' → logprob: -1.1484556198120117
    3. '(input' → logprob: -4.523455619812012
    4. '(' → logprob: -7.648455619812012
    5. 'input' → logprob: -9.023455619812012
    6. ' ,' → logprob: -10.523455619812012
    7. ',(' → logprob: -11.148455619812012
    8. '(),' → logprob: -11.773455619812012
    9. ',int' → logprob: -12.523455619812012
    10. ' input' → logprob: -12.523455619812012

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4741227924823761
    2. 'input' → logprob: -0.9741227626800537
    3. '(input' → logprob: -11.349123001098633
    4. ' ' → logprob: -11.724123001098633
    5. '	input' → logprob: -12.224123001098633
    6. ',input' → logprob: -12.599123001098633
    7. '[input' → logprob: -12.724123001098633
    8. 'range' → logprob: -12.786623001098633
    9. ' range' → logprob: -13.036623001098633
    10. ')' → logprob: -13.224123001098633

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010580805974313989
    2. '()' → logprob: -9.250105857849121
    3. '())' → logprob: -12.250105857849121
    4. ')' → logprob: -12.625105857849121
    5. '(' → logprob: -14.500105857849121
    6. ' ().' → logprob: -15.000105857849121
    7. '().__' → logprob: -15.125105857849121
    8. '()))' → logprob: -16.125104904174805
    9. '()[' → logprob: -16.250104904174805
    10. '()]' → logprob: -16.500104904174805

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -14.250000953674316
    3. '(split' → logprob: -16.125
    4. ' split' → logprob: -16.5
    5. 'rstrip' → logprob: -17.75
    6. ')' → logprob: -18.125
    7. 'spl' → logprob: -18.25
    8. '.split' → logprob: -18.25
    9. 'plit' → logprob: -18.5
    10. 'read' → logprob: -19.125

Token 39: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003842232981696725
    2. ')]' → logprob: -6.003842353820801
    3. '()]' → logprob: -7.003842353820801
    4. '()' → logprob: -8.0038423538208
    5. '()))' → logprob: -9.7538423538208
    6. ')' → logprob: -10.1288423538208
    7. '(' → logprob: -11.6288423538208
    8. ')])' → logprob: -11.8788423538208
    9. '()),' → logprob: -12.5038423538208
    10. '());' → logprob: -13.2538423538208

Token 40: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.010577174834907055
    2. ')' → logprob: -4.760577201843262
    3. ']' → logprob: -6.260577201843262
    4. '()]' → logprob: -11.010577201843262
    5. ')],' → logprob: -11.885577201843262
    6. ')])' → logprob: -12.010577201843262
    7. '),' → logprob: -12.260577201843262
    8. '()' → logprob: -13.010577201843262
    9. ' )' → logprob: -13.010577201843262
    10. ')]
' → logprob: -13.260577201843262

Token 41: 'Beta' (ID: 63964)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2250219583511353
    2. '_' → logprob: -2.4750218391418457
    3. 'd' → logprob: -2.4750218391418457
    4. 'i' → logprob: -2.7250218391418457
    5. '[' → logprob: -3.2250218391418457
    6. 'p' → logprob: -3.3500218391418457
    7. 'a' → logprob: -3.6000218391418457
    8. ')' → logprob: -3.6000218391418457
    9. 'A' → logprob: -3.7250218391418457
    10. 'f' → logprob: -3.8500218391418457

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05517134815454483
    2. '=' → logprob: -2.930171251296997
    3. ',' → logprob: -8.680171012878418
    4. '[' → logprob: -9.555171012878418
    5. '_' → logprob: -10.555171012878418
    6. ')' → logprob: -11.930171012878418
    7. ' ,' → logprob: -12.680171012878418
    8. ' =[' → logprob: -13.305171012878418
    9. ' ' → logprob: -13.805171012878418
    10. '[]' → logprob: -13.805171012878418

Token 43: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.269779235124588
    2. '[*' → logprob: -1.6447792053222656
    3. '[]' → logprob: -3.6447792053222656
    4. ' [' → logprob: -5.144779205322266
    5. '[_' → logprob: -5.769779205322266
    6. '[len' → logprob: -6.394779205322266
    7. '[int' → logprob: -6.644779205322266
    8. 'list' → logprob: -6.894779205322266
    9. '[list' → logprob: -7.394779205322266
    10. 'sorted' → logprob: -7.644779205322266

Token 44: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0048056840896606445
    2. '_' → logprob: -6.004805564880371
    3. 'f' → logprob: -6.879805564880371
    4. ' for' → logprob: -7.129805564880371
    5. 'i' → logprob: -9.254805564880371
    6. 'd' → logprob: -9.254805564880371
    7. '```' → logprob: -9.879805564880371
    8. 'F' → logprob: -10.129805564880371
    9. 'n' → logprob: -10.629805564880371
    10. 'x' → logprob: -10.629805564880371

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7388559579849243
    2. '_' → logprob: -1.1138559579849243
    3. ' _' → logprob: -2.7388558387756348
    4. 'i' → logprob: -2.8638558387756348
    5. ' a' → logprob: -3.4888558387756348
    6. ' v' → logprob: -4.613855838775635
    7. ' x' → logprob: -4.738855838775635
    8. 'a' → logprob: -4.738855838775635
    9. 'x' → logprob: -5.738855838775635
    10. ' A' → logprob: -6.113855838775635

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2815967798233032
    2. 'in' → logprob: -1.4065967798233032
    3. ' ' → logprob: -8.531597137451172
    4. 'n' → logprob: -8.781597137451172
    5. '_' → logprob: -9.906597137451172
    6. '	in' → logprob: -11.406597137451172
    7. '  ' → logprob: -11.656597137451172
    8. ' _' → logprob: -12.031597137451172
    9. ',' → logprob: -12.531597137451172
    10. ' n' → logprob: -12.781597137451172

Token 47: ' input' (ID: 3422)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0740717425942421
    2. ' range' → logprob: -2.6990716457366943
    3. 'Alpha' → logprob: -5.574071884155273
    4. ' Alpha' → logprob: -8.949071884155273
    5. 'Range' → logprob: -8.949071884155273
    6. 'alpha' → logprob: -11.699071884155273
    7. '	range' → logprob: -11.699071884155273
    8. ' ' → logprob: -11.824071884155273
    9. 'ran' → logprob: -11.824071884155273
    10. 'r' → logprob: -11.949071884155273

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.580417275428772
    2. '():' → logprob: -1.455417275428772
    3. '()' → logprob: -1.580417275428772
    4. '(' → logprob: -7.830417156219482
    5. '()>' → logprob: -8.20541763305664
    6. '()[' → logprob: -9.45541763305664
    7. '().__' → logprob: -9.58041763305664
    8. '())' → logprob: -9.83041763305664
    9. '():
' → logprob: -10.08041763305664
    10. '()(' → logprob: -10.20541763305664

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.07928764075040817
    2. 'strip' → logprob: -2.579287528991699
    3. 'replace' → logprob: -8.0792875289917
    4. 'rstrip' → logprob: -9.7042875289917
    5. 'startswith' → logprob: -11.4542875289917
    6. 'read' → logprob: -11.9542875289917
    7. 'lower' → logprob: -12.2042875289917
    8. 'plit' → logprob: -13.3292875289917
    9. ' split' → logprob: -14.0792875289917
    10. '_split' → logprob: -15.0792875289917

Token 50: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4050392210483551
    2. '()' → logprob: -1.1550391912460327
    3. '('' → logprob: -4.655039310455322
    4. '(' → logprob: -4.905039310455322
    5. '("("' → logprob: -8.030038833618164
    6. '("' → logprob: -9.155038833618164
    7. '("")' → logprob: -9.280038833618164
    8. ' ()' → logprob: -9.780038833618164
    9. '(()' → logprob: -9.780038833618164
    10. '()]' → logprob: -9.905038833618164

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6632623076438904
    2. ' Beta' → logprob: -1.1632623672485352
    3. 'Beta' → logprob: -1.9132623672485352
    4. ' if' → logprob: -4.038262367248535
    5. ' Bet' → logprob: -6.163262367248535
    6. '	B' → logprob: -6.538262367248535
    7. 'if' → logprob: -7.288262367248535
    8. ' beta' → logprob: -7.288262367248535
    9. 'Bet' → logprob: -7.538262367248535
    10. 'B' → logprob: -7.788262367248535

Token 52: ' Beta' (ID: 55085)
  Prédit: 'Beta'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Beta' (adapté à ' Beta') → logprob: -0.10048539936542511
    2. 'if' → logprob: -2.725485324859619
    3. ' Beta' → logprob: -4.475485324859619
    4. '   ' → logprob: -4.975485324859619
    5. 'Bet' → logprob: -5.600485324859619
    6. 'B' → logprob: -5.600485324859619
    7. ' if' → logprob: -5.850485324859619
    8. 'beta' → logprob: -7.600485324859619
    9. 'i' → logprob: -8.850485801696777
    10. 'for' → logprob: -8.850485801696777

Token 53: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006766928127035499
    2. '.' → logprob: -7.50067663192749
    3. '.ap' → logprob: -9.875677108764648
    4. '.extend' → logprob: -9.875677108764648
    5. '.app' → logprob: -11.250677108764648
    6. ' .' → logprob: -12.875677108764648
    7. '.=' → logprob: -13.500677108764648
    8. '.py' → logprob: -13.875677108764648
    9. '.setdefault' → logprob: -14.375677108764648
    10. '.p' → logprob: -14.750677108764648

Token 54: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08962248265743256
    2. '(' → logprob: -2.8396224975585938
    3. '(i' → logprob: -4.339622497558594
    4. '(ord' → logprob: -4.589622497558594
    5. '(len' → logprob: -6.589622497558594
    6. '(X' → logprob: -7.089622497558594
    7. '((' → logprob: -7.464622497558594
    8. '(list' → logprob: -8.214622497558594
    9. '([' → logprob: -9.089622497558594
    10. '(abs' → logprob: -9.214622497558594

Token 55: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.815280696377158e-05
    2. '(' → logprob: -9.500078201293945
    3. '((' → logprob: -13.625078201293945
    4. ')(' → logprob: -13.750078201293945
    5. '(x' → logprob: -15.000078201293945
    6. ')' → logprob: -15.250078201293945
    7. ' (' → logprob: -15.750078201293945
    8. '(I' → logprob: -16.500078201293945
    9. '(s' → logprob: -17.000078201293945
    10. '(ii' → logprob: -17.125078201293945

Token 56: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0263474453240633
    2. ')' → logprob: -3.6513473987579346
    3. ')))' → logprob: -11.026347160339355
    4. '))
' → logprob: -11.776347160339355
    5. '+' → logprob: -11.776347160339355
    6. '*' → logprob: -12.401347160339355
    7. ''))' → logprob: -13.151347160339355
    8. ' ))' → logprob: -13.151347160339355
    9. ')+' → logprob: -13.276347160339355
    10. '),' → logprob: -13.651347160339355

Token 57: 'result' (ID: 2521)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2135305404663086
    2. '+' → logprob: -1.4635305404663086
    3. ')' → logprob: -2.3385305404663086
    4. '*' → logprob: -2.7135305404663086
    5. '[' → logprob: -2.8385305404663086
    6. '_' → logprob: -2.9635305404663086
    7. '(' → logprob: -3.0885305404663086
    8. 'for' → logprob: -3.4635305404663086
    9. ' ' → logprob: -3.4635305404663086
    10. 'if' → logprob: -4.213530540466309

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32590025663375854
    2. '=' → logprob: -1.3259003162384033
    3. 's' → logprob: -4.700900077819824
    4. '_' → logprob: -5.950900077819824
    5. ')' → logprob: -7.825900077819824
    6. '=[]' → logprob: -8.700900077819824
    7. '(' → logprob: -9.575900077819824
    8. ' ' → logprob: -10.075900077819824
    9. ',' → logprob: -10.075900077819824
    10. '[' → logprob: -10.575900077819824

Token 59: ' ["' (ID: 9129)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.496261477470398
    2. '[]' → logprob: -1.621261477470398
    3. ' [' → logprob: -1.746261477470398
    4. ' []' → logprob: -1.746261477470398
    5. 'sum' → logprob: -2.9962615966796875
    6. '0' → logprob: -3.2462615966796875
    7. ' max' → logprob: -3.3712615966796875
    8. ' sum' → logprob: -3.4962615966796875
    9. ' ' → logprob: -4.3712615966796875
    10. ' Alpha' → logprob: -4.6212615966796875

Token 60: 'War' (ID: 34786)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.248208150267601
    2. ' "]' → logprob: -3.1232080459594727
    3. ' "' → logprob: -3.6232080459594727
    4. '_' → logprob: -3.7482080459594727
    5. '"]' → logprob: -3.8732080459594727
    6. '1' → logprob: -3.9982080459594727
    7. '"' → logprob: -4.248208045959473
    8. '#' → logprob: -4.373208045959473
    9. 'X' → logprob: -4.498208045959473
    10. '-' → logprob: -4.873208045959473

Token 61: '",' (ID: 672)
  Prédit: 'rior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rior' → logprob: -0.09737946093082428
    2. '"]' → logprob: -2.847379446029663
    3. 'riors' → logprob: -3.722379446029663
    4. ' "]' → logprob: -5.472379684448242
    5. ']' → logprob: -6.597379684448242
    6. '"' → logprob: -7.097379684448242
    7. 'rios' → logprob: -7.222379684448242
    8. 's' → logprob: -7.472379684448242
    9. 'ning' → logprob: -7.722379684448242
    10. '!' → logprob: -7.972379684448242

Token 62: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005235887598246336
    2. ''' → logprob: -5.63023567199707
    3. ' "' → logprob: -6.50523567199707
    4. '"W' → logprob: -9.88023567199707
    5. ' ' → logprob: -11.25523567199707
    6. ']' → logprob: -12.25523567199707
    7. '"H' → logprob: -12.25523567199707
    8. '""' → logprob: -12.38023567199707
    9. '"I' → logprob: -12.44273567199707
    10. ' '' → logprob: -12.56773567199707

Token 63: 'No' (ID: 3160)
  Prédit: 'Peace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Peace' → logprob: -0.0730324387550354
    2. ' Peace' → logprob: -3.5730323791503906
    3. 'peace' → logprob: -4.448032379150391
    4. 'rior' → logprob: -4.823032379150391
    5. ' peace' → logprob: -5.198032379150391
    6. '"' → logprob: -5.198032379150391
    7. 'Pe' → logprob: -6.135532379150391
    8. 'is' → logprob: -7.635532379150391
    9. 'pe' → logprob: -7.823032379150391
    10. 'and' → logprob: -7.885532379150391

Token 64: ' War' (ID: 8545)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1075146272778511
    2. ' "' → logprob: -3.2325146198272705
    3. 'r' → logprob: -3.7325146198272705
    4. 'ne' → logprob: -4.23251485824585
    5. '"' → logprob: -4.98251485824585
    6. 'n' → logprob: -5.10751485824585
    7. '"]' → logprob: -6.48251485824585
    8. ' ")' → logprob: -6.48251485824585
    9. 'War' → logprob: -6.60751485824585
    10. ' "]' → logprob: -6.73251485824585

Token 65: '"]
' (ID: 14510)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.03896614536643028
    2. '",' → logprob: -3.288966178894043
    3. '!' → logprob: -7.663966178894043
    4. '"' → logprob: -8.288966178894043
    5. '']' → logprob: -9.663966178894043
    6. '?' → logprob: -10.538966178894043
    7. '","' → logprob: -10.538966178894043
    8. ']' → logprob: -11.038966178894043
    9. '"]
' → logprob: -11.163966178894043
    10. ' "]' → logprob: -11.663966178894043

Token 66: 'check' (ID: 3416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3241887092590332
    2. 'if' → logprob: -2.074188709259033
    3. 'print' → logprob: -2.699188709259033
    4. 'i' → logprob: -3.824188709259033
    5. '
' → logprob: -4.199188709259033
    6. '_' → logprob: -4.949188709259033
    7. 'p' → logprob: -5.324188709259033
    8. 'n' → logprob: -5.449188709259033
    9. '\n' → logprob: -5.824188709259033
    10. 'f' → logprob: -5.949188709259033

Token 67: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4950111210346222
    2. ' =' → logprob: -0.9950110912322998
    3. '_' → logprob: -4.370011329650879
    4. 's' → logprob: -5.745011329650879
    5. ' ' → logprob: -6.120011329650879
    6. 'sum' → logprob: -7.745011329650879
    7. 'ing' → logprob: -7.870011329650879
    8. '_result' → logprob: -8.245011329650879
    9. '_=' → logprob: -8.495011329650879
    10. '=_' → logprob: -8.995011329650879

Token 68: ' lambda' (ID: 27871)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' X' → logprob: -1.2880847454071045
    2. ' (' → logprob: -1.4130847454071045
    3. '(X' → logprob: -2.0380847454071045
    4. 'X' → logprob: -2.2880847454071045
    5. ' Alpha' → logprob: -2.4130847454071045
    6. ' ' → logprob: -3.5380847454071045
    7. 'Alpha' → logprob: -3.6630847454071045
    8. '"' → logprob: -3.9130847454071045
    9. '(' → logprob: -4.413084983825684
    10. ' Z' → logprob: -4.663084983825684

Token 69: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.470389187335968
    2. 'x' → logprob: -1.3453891277313232
    3. ' lambda' → logprob: -3.0953891277313232
    4. ' a' → logprob: -4.220389366149902
    5. 'lambda' → logprob: -4.220389366149902
    6. 'X' → logprob: -4.470389366149902
    7. 'a' → logprob: -4.595389366149902
    8. ' X' → logprob: -4.845389366149902
    9. ' alpha' → logprob: -6.220389366149902
    10. ' s' → logprob: -6.845389366149902

Token 70: ' ((' (ID: 3536)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.6850606203079224
    2. 'X' → logprob: -2.185060501098633
    3. 'sum' → logprob: -2.185060501098633
    4. ' sum' → logprob: -2.435060501098633
    5. '(X' → logprob: -2.685060501098633
    6. ' X' → logprob: -2.685060501098633
    7. '(sum' → logprob: -2.810060501098633
    8. 'all' → logprob: -2.935060501098633
    9. ' (' → logprob: -2.935060501098633
    10. ' any' → logprob: -3.685060501098633

Token 71: 'max' (ID: 3228)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.4487401843070984
    2. 'sum' → logprob: -1.6987402439117432
    3. '(X' → logprob: -3.198740243911743
    4. 'M' → logprob: -3.823740243911743
    5. '(sum' → logprob: -3.823740243911743
    6. 'Alpha' → logprob: -3.948740243911743
    7. 'Z' → logprob: -4.073740005493164
    8. '(M' → logprob: -4.448740005493164
    9. ' X' → logprob: -4.448740005493164
    10. ' sum' → logprob: -4.948740005493164

Token 72: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02121482603251934
    2. '(B' → logprob: -4.146214962005615
    3. '(X' → logprob: -5.771214962005615
    4. 'Alpha' → logprob: -6.521214962005615
    5. '(Z' → logprob: -8.896214485168457
    6. '(M' → logprob: -9.146214485168457
    7. '((' → logprob: -9.896214485168457
    8. '(alpha' → logprob: -10.146214485168457
    9. '(Max' → logprob: -10.271214485168457
    10. 'Beta' → logprob: -10.396214485168457

Token 73: '*' (ID: 9)
  Prédit: 'Alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Alpha' → logprob: -0.09390562772750854
    2. 'X' → logprob: -3.8439056873321533
    3. 'max' → logprob: -3.8439056873321533
    4. 'Beta' → logprob: -3.9689056873321533
    5. '*' → logprob: -4.593905448913574
    6. 'abs' → logprob: -5.093905448913574
    7. ' Alpha' → logprob: -6.093905448913574
    8. 'sum' → logprob: -6.593905448913574
    9. 'M' → logprob: -6.718905448913574
    10. 'x' → logprob: -6.843905448913574

Token 74: 'Alpha' (ID: 26549)
  Prédit: 'Alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Alpha' → logprob: -0.027201998978853226
    2. 'Beta' → logprob: -3.7772018909454346
    3. ' Alpha' → logprob: -5.902202129364014
    4. 'map' → logprob: -7.652202129364014
    5. 'set' → logprob: -8.652201652526855
    6. 'X' → logprob: -8.902201652526855
    7. ' Beta' → logprob: -9.152201652526855
    8. 'range' → logprob: -9.777201652526855
    9. 'alpha' → logprob: -9.777201652526855
    10. '(' → logprob: -9.777201652526855

Token 75: ',' (ID: 11)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.11118364334106445
    2. '])-' → logprob: -2.6111836433410645
    3. ',' → logprob: -4.2361836433410645
    4. '])+' → logprob: -4.7361836433410645
    5. ' ])' → logprob: -5.4861836433410645
    6. ']))' → logprob: -6.3611836433410645
    7. '])*' → logprob: -7.1111836433410645
    8. ',Z' → logprob: -7.7361836433410645
    9. '])/' → logprob: -8.361183166503906
    10. ' ,' → logprob: -9.111183166503906

Token 76: ' X' (ID: 2127)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2781669795513153
    2. '*M' → logprob: -1.9031670093536377
    3. ' *' → logprob: -2.4031670093536377
    4. '*m' → logprob: -7.653166770935059
    5. '*_' → logprob: -8.153166770935059
    6. ' ' → logprob: -8.403166770935059
    7. '*s' → logprob: -8.403166770935059
    8. '*p' → logprob: -8.653166770935059
    9. '*i' → logprob: -8.653166770935059
    10. '*C' → logprob: -8.653166770935059

Token 77: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17118151485919952
    2. ',' → logprob: -2.0461814403533936
    3. ']))' → logprob: -3.9211814403533936
    4. '])-' → logprob: -6.546181678771973
    5. '])+' → logprob: -6.546181678771973
    6. ',Z' → logprob: -6.671181678771973
    7. '+' → logprob: -7.296181678771973
    8. ' ])' → logprob: -7.546181678771973
    9. ']' → logprob: -7.546181678771973
    10. ',M' → logprob: -7.546181678771973

Token 78: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2124629020690918
    2. '>' → logprob: -1.9624629020690918
    3. ' +' → logprob: -2.087462902069092
    4. '-' → logprob: -2.212462902069092
    5. ' -' → logprob: -2.212462902069092
    6. ')' → logprob: -2.712462902069092
    7. ' >' → logprob: -3.212462902069092
    8. '>=' → logprob: -3.962462902069092
    9. '<' → logprob: -4.212462902069092
    10. '*' → logprob: -4.462462902069092

Token 79: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.3761000633239746
    2. 'min' → logprob: -1.6261000633239746
    3. ' M' → logprob: -1.7511000633239746
    4. 'M' → logprob: -2.1261000633239746
    5. ' max' → logprob: -2.2511000633239746
    6. 'max' → logprob: -2.3761000633239746
    7. ' Z' → logprob: -4.001100063323975
    8. 'Z' → logprob: -4.126100063323975
    9. '(min' → logprob: -5.376100063323975
    10. ' sum' → logprob: -5.501100063323975

Token 80: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0039634667336940765
    2. '(' → logprob: -5.628963470458984
    3. '(B' → logprob: -8.503963470458984
    4. '(*' → logprob: -9.628963470458984
    5. '(M' → logprob: -10.628963470458984
    6. '([...' → logprob: -10.753963470458984
    7. '([-' → logprob: -11.628963470458984
    8. '([\' → logprob: -12.003963470458984
    9. '([[' → logprob: -12.128963470458984
    10. '(Z' → logprob: -12.503963470458984

Token 81: '*' (ID: 9)
  Prédit: '[*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[*' → logprob: -0.0034494451247155666
    2. '[' → logprob: -6.753449440002441
    3. 'Beta' → logprob: -7.253449440002441
    4. '[M' → logprob: -7.628449440002441
    5. '(*' → logprob: -8.003449440002441
    6. ' [' → logprob: -8.628449440002441
    7. '*[' → logprob: -9.003449440002441
    8. '([' → logprob: -9.128449440002441
    9. ' ' → logprob: -9.628449440002441
    10. '   ' → logprob: -10.003449440002441

Token 82: 'Beta' (ID: 63964)
  Prédit: 'Beta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Beta' → logprob: -0.09667462110519409
    2. '[*' → logprob: -2.846674680709839
    3. '[' → logprob: -3.471674680709839
    4. ' Beta' → logprob: -6.22167444229126
    5. '[B' → logprob: -8.221674919128418
    6. '[M' → logprob: -8.346674919128418
    7. '[_' → logprob: -9.221674919128418
    8. '[i' → logprob: -9.596674919128418
    9. 'Bet' → logprob: -10.096674919128418
    10. ' ' → logprob: -10.096674919128418

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5878575444221497
    2. ']))' → logprob: -1.2128574848175049
    3. '])' → logprob: -1.9628574848175049
    4. '])))' → logprob: -5.837857723236084
    5. ']' → logprob: -7.462857723236084
    6. '))' → logprob: -7.837857723236084
    7. ',Z' → logprob: -7.837857723236084
    8. '])+' → logprob: -8.087857246398926
    9. ' ,' → logprob: -8.212857246398926
    10. ' ])' → logprob: -8.462857246398926

Token 84: ' Z' (ID: 1489)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.2528474032878876
    2. 'M' → logprob: -1.62784743309021
    3. ' Z' → logprob: -5.127847194671631
    4. ' ' → logprob: -5.252847194671631
    5. 'Z' → logprob: -5.627847194671631
    6. '*' → logprob: -5.752847194671631
    7. '*M' → logprob: -6.127847194671631
    8. 'Y' → logprob: -6.627847194671631
    9. ' Y' → logprob: -6.752847194671631
    10. ' *' → logprob: -7.252847194671631

Token 85: '])))
' (ID: 146875)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.08607334643602371
    2. '])' → logprob: -2.961073398590088
    3. '])))' → logprob: -3.586073398590088
    4. ']' → logprob: -6.961073398590088
    5. ')])' → logprob: -7.211073398590088
    6. ')' → logprob: -8.08607292175293
    7. '))' → logprob: -8.21107292175293
    8. ')]' → logprob: -8.33607292175293
    9. ')))' → logprob: -8.58607292175293
    10. ']))
' → logprob: -10.21107292175293

Token 86: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9913877844810486
    2. 'if' → logprob: -1.3663878440856934
    3. ')' → logprob: -2.1163878440856934
    4. '\n' → logprob: -2.2413878440856934
    5. '(' → logprob: -3.4913878440856934
    6. ':' → logprob: -3.7413878440856934
    7. '
' → logprob: -3.7413878440856934
    8. ' if' → logprob: -4.366387844085693
    9. '#' → logprob: -4.866387844085693
    10. '<|end|>' → logprob: -5.116387844085693

Token 87: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010397154837846756
    2. '(result' → logprob: -5.260396957397461
    3. '('' → logprob: -6.260396957397461
    4. '("' → logprob: -6.385396957397461
    5. '(check' → logprob: -7.385396957397461
    6. '("("' → logprob: -7.385396957397461
    7. '((' → logprob: -8.760396957397461
    8. '(
' → logprob: -9.635396957397461
    9. '(*' → logprob: -11.010396957397461
    10. '(f' → logprob: -11.260396957397461

Token 88: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.600297749042511
    2. '[' → logprob: -0.850297749042511
    3. '([' → logprob: -3.850297689437866
    4. '(check' → logprob: -7.100297927856445
    5. '(X' → logprob: -7.225297927856445
    6. '((' → logprob: -8.100297927856445
    7. '(
' → logprob: -8.350297927856445
    8. '[(' → logprob: -8.475297927856445
    9. '[X' → logprob: -8.975297927856445
    10. '()[' → logprob: -9.725297927856445

Token 89: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.20926128327846527
    2. 'int' → logprob: -1.7092612981796265
    3. '1' → logprob: -5.584261417388916
    4. '0' → logprob: -6.584261417388916
    5. 'not' → logprob: -6.834261417388916
    6. ' check' → logprob: -7.334261417388916
    7. ' int' → logprob: -7.584261417388916
    8. '(check' → logprob: -7.959261417388916
    9. '(int' → logprob: -10.084260940551758
    10. '(' → logprob: -11.584260940551758

Token 90: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14453665912151337
    2. '()]' → logprob: -2.0195367336273193
    3. '())' → logprob: -6.51953649520874
    4. ')])' → logprob: -9.019536972045898
    5. '])' → logprob: -9.894536972045898
    6. '()])
' → logprob: -10.019536972045898
    7. ']' → logprob: -10.019536972045898
    8. ']()' → logprob: -10.269536972045898
    9. '(' → logprob: -10.394536972045898
    10. ' ()' → logprob: -11.394536972045898

Token 91: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.06311559677124023
    2. ')])' → logprob: -2.8131155967712402
    3. ')' → logprob: -7.56311559677124
    4. ')]' → logprob: -7.81311559677124
    5. '])]' → logprob: -9.688116073608398
    6. ']' → logprob: -9.938116073608398
    7. ']])' → logprob: -10.063116073608398
    8. ']))' → logprob: -10.188116073608398
    9. '()' → logprob: -11.188116073608398
    10. '))' → logprob: -11.563116073608398


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 31.46%
Précision adaptée (1ère position): 32.58%
Précision (top 10): 53.93%
================================================================================
