================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import defaultdict, deque
from heapq import heappush, heappop
import sys
import math
import bisect
import random

def read_int_list():
    return [int(value) for value in sys.stdin.readline().split()]

def read_single_int():
    return int(sys.stdin.readline())

def read_str_list():
    return [list(item) for item in sys.stdin.readline().split()]

def read_char_list():
    return list(sys.stdin.readline())[:-1]

def read_int_rows(number_of_rows):
    return [read_single_int() for _ in range(number_of_rows)]

def read_list_of_int_lists(number_of_rows):
    return [read_int_list() for _ in range(number_of_rows)]

def read_char_rows(number_of_rows):
    return [read_char_list() for _ in range(number_of_rows)]

def read_list_of_str_lists(number_of_rows):
    return [read_str_list() for _ in range(number_of_rows)]

sys.setrecursionlimit(1000000)
MODULO = 1000000007

# Problem A
def solve_problem_A():
    number_of_elements = read_single_int()
    integer_list = read_int_list()

    if sum(integer_list) == 0:
        print("Yes")
        return

    if number_of_elements % 3 != 0:
        print("No")
        return

    frequency_counter = defaultdict(lambda: 0)
    for element in integer_list:
        frequency_counter[element] += 1

    if len(list(frequency_counter.items())) == 2:
        if frequency_counter[0] == number_of_elements // 3:
            print("Yes")
            return
        else:
            print("No")
            return

    xor_accumulator = 0
    for unique_value, count in frequency_counter.items():
        xor_accumulator ^= unique_value
        if count != number_of_elements // 3:
            print("No")
            return

    if xor_accumulator == 0:
        print("Yes")
        return

    print("No")
    return

# Problem B
def solve_problem_B():

    def depth_first_search(current_node, visited_nodes):
        for adjacent_node in adjacency_list[current_node]:
            if visited_nodes[adjacent_node]:
                visited_nodes[adjacent_node] = 0
                depth_first_search(adjacent_node, visited_nodes)
                if flip_flag[adjacent_node]:
                    edge_key = (min(current_node, adjacent_node), max(current_node, adjacent_node))
                    edge_orientation[edge_key] ^= 1
                    flip_flag[current_node] ^= 1
                    flip_flag[adjacent_node] ^= 1

    number_of_nodes, number_of_edges = read_int_list()
    edge_orientation = defaultdict(int)
    flip_flag = [0] * (number_of_nodes + 1)
    adjacency_list = [[] for _ in range(number_of_nodes + 1)]

    for _ in range(number_of_edges):
        node_u, node_v = read_int_list()
        edge_key = (min(node_u, node_v), max(node_u, node_v))
        edge_orientation[edge_key] = 1
        adjacency_list[node_u].append(node_v)
        adjacency_list[node_v].append(node_u)
        flip_flag[min(node_u, node_v)] ^= 1

    if number_of_edges % 2 == 1:
        print(-1)
        return

    visited_nodes = [1] * (number_of_nodes + 1)
    visited_nodes[1] = 0
    depth_first_search(1, visited_nodes)

    for edge_tuple, orientation in edge_orientation.items():
        if orientation:
            print(*edge_tuple)
        else:
            print(*edge_tuple[::-1])
    return

# Problem C
def solve_problem_C():
    given_integer = read_single_int()
    power_of_two_list = [(1 << bit_index) for bit_index in range(100)]
    if given_integer in power_of_two_list:
        print("No")
        quit()
    if given_integer + 1 in power_of_two_list:
        print("Yes")
        for edge_label in range(1, 2 * given_integer):
            print(edge_label, edge_label + 1)
        quit()
    edge_list = []
    for edge_label in range(1, 3):
        edge_list.append((edge_label, edge_label + 1))
    edge_list.append((3, given_integer + 1))
    for edge_label in range(1, 3):
        edge_list.append((edge_label + given_integer, edge_label + given_integer + 1))
    upper_node = 1
    lower_node = 1
    for edge_label in range(2, given_integer // 2 + given_integer % 2):
        edge_list.append((upper_node, 2 * edge_label))
        edge_list.append((lower_node, 2 * edge_label + 1))
        edge_list.append((2 * edge_label, 2 * edge_label + given_integer + 1))
        edge_list.append((2 * edge_label + 1, 2 * edge_label + given_integer))
        upper_node = 2 * edge_label + given_integer + 1
        lower_node = 2 * edge_label + given_integer

    if given_integer % 2:
        print("Yes")
        for node_u, node_v in edge_list:
            print(node_u, node_v)
    else:
        edge_list.append((given_integer - 1, given_integer))
        for bit_index in range(given_integer):
            if power_of_two_list[bit_index] & given_integer:
                break
        edge_list.append((power_of_two_list[bit_index + 1] - 2, 2 * given_integer))
        print("Yes")
        for node_u, node_v in edge_list:
            print(node_u, node_v)
    return

# Problem D
def solve_problem_D():
    number_of_inputs = read_single_int()
    return

# Problem E
def solve_problem_E():
    number_of_inputs = read_single_int()
    return

# Problem F
def solve_problem_F():
    number_of_inputs = read_single_int()
    return

# Main Execution
if __name__ == "__main__":
    solve_problem_B()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' defaultdict' (ID: 107098)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015419998671859503
    2. '(
' → logprob: -7.126542091369629
    3. '\' → logprob: -8.501542091369629
    4. '\(' → logprob: -8.626542091369629
    5. '\n' → logprob: -9.126542091369629
    6. 'newline' → logprob: -10.251542091369629
    7. '```' → logprob: -10.376542091369629
    8. '()' → logprob: -10.501542091369629
    9. '(

' → logprob: -10.626542091369629
    10. '
' → logprob: -11.126542091369629

Token 5: ' deque' (ID: 90347)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.40311935544013977
    2. 'Counter' → logprob: -1.4031193256378174
    3. ' deque' → logprob: -3.1531193256378174
    4. 'deque' → logprob: -3.4031193256378174
    5. ' Ordered' → logprob: -5.0281195640563965
    6. 'Ordered' → logprob: -5.9031195640563965
    7. ' abc' → logprob: -8.403119087219238
    8. ' named' → logprob: -8.528119087219238
    9. 'named' → logprob: -9.028119087219238
    10. 'abc' → logprob: -9.653119087219238

Token 6: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.514599084854126
    2. '.' → logprob: -1.514599084854126
    3. '(' → logprob: -3.139599084854126
    4. '```' → logprob: -3.139599084854126
    5. '\n' → logprob: -3.514599084854126
    6. ',' → logprob: -4.014598846435547
    7. '<|end|>' → logprob: -4.264598846435547
    8. '' → logprob: -5.014598846435547
    9. 'import' → logprob: -5.264598846435547
    10. '\(' → logprob: -6.014598846435547

Token 7: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1487613916397095
    2. '```' → logprob: -1.1487613916397095
    3. '\n' → logprob: -1.3987613916397095
    4. '\' → logprob: -3.39876127243042
    5. '

' → logprob: -3.89876127243042
    6. '' → logprob: -4.39876127243042
    7. 'import' → logprob: -4.52376127243042
    8. 'newline' → logprob: -4.77376127243042
    9. 'd' → logprob: -5.14876127243042
    10. '<|end|>' → logprob: -5.14876127243042

Token 8: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.7876940965652466
    2. ' collections' → logprob: -1.1626940965652466
    3. ' typing' → logprob: -1.7876940965652466
    4. ' os' → logprob: -4.162693977355957
    5. ' queue' → logprob: -4.162693977355957
    6. ' sys' → logprob: -4.537693977355957
    7. ' heap' → logprob: -4.787693977355957
    8. ' threading' → logprob: -5.287693977355957
    9. ' math' → logprob: -6.412693977355957
    10. ' ' → logprob: -6.412693977355957

Token 9: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'queue' → logprob: -16.375
    3. 'dict' → logprob: -19.625
    4. ' queue' → logprob: -19.625
    5. 's' → logprob: -19.875
    6. 'import' → logprob: -20.375
    7. 'f' → logprob: -20.375
    8. 't' → logprob: -21.0
    9. ' q' → logprob: -21.0
    10. 'n' → logprob: -21.5

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014174087904393673
    2. 'import' → logprob: -4.264173984527588
    3. ' ' → logprob: -12.139174461364746
    4. '	import' → logprob: -12.764174461364746
    5. '_import' → logprob: -13.514174461364746
    6. ' im' → logprob: -15.264174461364746
    7. ' imports' → logprob: -15.764174461364746
    8. ' importar' → logprob: -16.26417350769043
    9. ' impor' → logprob: -16.63917350769043
    10. ' ' → logprob: -16.76417350769043

Token 11: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.3882184326648712
    2. 'he' → logprob: -1.1382184028625488
    3. 'heap' → logprob: -6.888218402862549
    4. ' heap' → logprob: -9.138218879699707
    5. 'nl' → logprob: -9.513218879699707
    6. ' n' → logprob: -9.763218879699707
    7. 'n' → logprob: -10.513218879699707
    8. 'import' → logprob: -10.638218879699707
    9. '.he' → logprob: -11.013218879699707
    10. '```' → logprob: -11.513218879699707

Token 12: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.002476135268807411
    2. 'ap' → logprob: -6.002476215362549
    3. 'a' → logprob: -14.87747573852539
    4. 'appen' → logprob: -16.62747573852539
    5. 'q' → logprob: -17.87747573852539
    6. 'aps' → logprob: -18.12747573852539
    7. 'ап' → logprob: -18.50247573852539
    8. 'aq' → logprob: -19.00247573852539
    9. 'appt' → logprob: -19.12747573852539
    10. 'append' → logprob: -19.37747573852539

Token 13: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.04858873412013054
    2. 'op' → logprob: -3.048588752746582
    3. 'us' → logprob: -14.923588752746582
    4. '[' → logprob: -15.548588752746582
    5. '```' → logprob: -15.673588752746582
    6. 'o' → logprob: -16.173587799072266
    7. 'opleft' → logprob: -16.173587799072266
    8. '   ' → logprob: -16.298587799072266
    9. 'push' → logprob: -16.673587799072266
    10. 'u' → logprob: -16.673587799072266

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5193400382995605
    2. 'he' → logprob: -1.3943400382995605
    3. ',' → logprob: -1.8943400382995605
    4. '(
' → logprob: -6.1443400382995605
    5. '(heap' → logprob: -6.6443400382995605
    6. ')' → logprob: -7.0193400382995605
    7. ' he' → logprob: -7.6443400382995605
    8. ' (' → logprob: -8.019340515136719
    9. '[' → logprob: -8.644340515136719
    10. '```' → logprob: -8.769340515136719

Token 15: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.2525780498981476
    2. ' he' → logprob: -1.5025780200958252
    3. 'heap' → logprob: -7.377578258514404
    4. ' heap' → logprob: -11.252577781677246
    5. ' ' → logprob: -12.377577781677246
    6. '```' → logprob: -13.127577781677246
    7. '.he' → logprob: -13.502577781677246
    8. 'hep' → logprob: -14.252577781677246
    9. 'pop' → logprob: -14.377577781677246
    10. ' heaps' → logprob: -15.002577781677246

Token 16: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.9361264946837764e-07
    2. 'ap' → logprob: -16.25
    3. ' app' → logprob: -18.375
    4. 'App' → logprob: -19.25
    5. 'pp' → logprob: -19.375
    6. 'APP' → logprob: -19.375
    7. '_app' → logprob: -19.875
    8. '(app' → logprob: -20.25
    9. '.app' → logprob: -20.375
    10. 'appen' → logprob: -20.625

Token 17: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.033547498285770416
    2. 'ush' → logprob: -3.5335474014282227
    3. 'p' → logprob: -5.783547401428223
    4. 'pp' → logprob: -8.158547401428223
    5. 'app' → logprob: -8.908547401428223
    6. 'push' → logprob: -9.158547401428223
    7. 'pop' → logprob: -9.533547401428223
    8. 'sh' → logprob: -10.408547401428223
    9. 'o' → logprob: -10.408547401428223
    10. 'opp' → logprob: -11.033547401428223

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16311977803707123
    2. 'def' → logprob: -2.7881197929382324
    3. '\n' → logprob: -4.163119792938232
    4. '' → logprob: -4.163119792938232
    5. '

' → logprob: -4.288119792938232
    6. '(' → logprob: -4.538119792938232
    7. '
' → logprob: -4.663119792938232
    8. '(
' → logprob: -4.788119792938232
    9. '\' → logprob: -5.038119792938232
    10. '```' → logprob: -5.288119792938232

Token 19: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8894070386886597
    2. 'def' → logprob: -1.2644070386886597
    3. '
' → logprob: -1.8894070386886597
    4. '\' → logprob: -2.764407157897949
    5. '```' → logprob: -3.514407157897949
    6. '#' → logprob: -4.139407157897949
    7. '' → logprob: -4.264407157897949
    8. 'class' → logprob: -4.389407157897949
    9. '`' → logprob: -4.764407157897949
    10. '\n' → logprob: -5.639407157897949

Token 20: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16926251351833344
    2. ' heap' → logprob: -2.669262409210205
    3. ' itertools' → logprob: -3.169262409210205
    4. ' collections' → logprob: -3.794262409210205
    5. ' os' → logprob: -4.669262409210205
    6. ' math' → logprob: -4.794262409210205
    7. ' re' → logprob: -6.294262409210205
    8. ' threading' → logprob: -7.669262409210205
    9. ' ' → logprob: -7.794262409210205
    10. ' ' → logprob: -7.794262409210205

Token 21: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6273573040962219
    2. '
' → logprob: -1.2523572444915771
    3. '\' → logprob: -2.252357244491577
    4. 'def' → logprob: -2.877357244491577
    5. '```' → logprob: -4.752357482910156
    6. '' → logprob: -6.002357482910156
    7. '

' → logprob: -6.627357482910156
    8. '.' → logprob: -6.877357482910156
    9. 'newline' → logprob: -6.877357482910156
    10. 'sys' → logprob: -7.377357482910156

Token 22: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4092697501182556
    2. '\' → logprob: -2.0342698097229004
    3. '\n' → logprob: -2.1592698097229004
    4. 'def' → logprob: -2.9092698097229004
    5. '' → logprob: -4.7842698097229
    6. 'n' → logprob: -4.9092698097229
    7. '

' → logprob: -4.9092698097229
    8. 'd' → logprob: -5.2842698097229
    9. '```' → logprob: -5.5342698097229
    10. 'import' → logprob: -7.2842698097229

Token 23: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.12094364315271378
    2. ' math' → logprob: -2.870943546295166
    3. ' threading' → logprob: -3.495943546295166
    4. ' heap' → logprob: -4.495943546295166
    5. ' itertools' → logprob: -4.745943546295166
    6. ' collections' → logprob: -5.120943546295166
    7. ' re' → logprob: -7.370943546295166
    8. ' io' → logprob: -8.370944023132324
    9. ' time' → logprob: -9.120944023132324
    10. 'os' → logprob: -9.620944023132324

Token 24: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8733745217323303
    2. '
' → logprob: -1.1233744621276855
    3. '\' → logprob: -1.4983744621276855
    4. 'def' → logprob: -4.4983744621276855
    5. '

' → logprob: -4.9983744621276855
    6. '```' → logprob: -5.1233744621276855
    7. '#' → logprob: -5.6233744621276855
    8. '' → logprob: -6.1233744621276855
    9. '`' → logprob: -6.6233744621276855
    10. 'class' → logprob: -7.2483744621276855

Token 25: 'import' (ID: 561)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.6650822758674622
    2. 'def' → logprob: -1.7900822162628174
    3. '\n' → logprob: -2.0400822162628174
    4. 'd' → logprob: -2.5400822162628174
    5. '
' → logprob: -3.1650822162628174
    6. '```' → logprob: -3.5400822162628174
    7. '`' → logprob: -4.5400824546813965
    8. '' → logprob: -4.5400824546813965
    9. 'class' → logprob: -5.0400824546813965
    10. '#' → logprob: -5.0400824546813965

Token 26: ' bis' (ID: 7204)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.10897480696439743
    2. ' random' → logprob: -3.3589746952056885
    3. ' heap' → logprob: -3.6089746952056885
    4. 'random' → logprob: -4.108974933624268
    5. ' bis' → logprob: -4.358974933624268
    6. ' threading' → logprob: -5.733974933624268
    7. ' collections' → logprob: -6.108974933624268
    8. ' os' → logprob: -6.733974933624268
    9. 'bis' → logprob: -6.733974933624268
    10. 'collections' → logprob: -6.858974933624268

Token 27: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.842555426876061e-06
    2. 'e' → logprob: -12.500004768371582
    3. 't' → logprob: -14.250004768371582
    4. 'ected' → logprob: -15.500004768371582
    5. 'ec' → logprob: -16.2500057220459
    6. 'ection' → logprob: -17.0000057220459
    7. '```' → logprob: -17.1250057220459
    8. 'ectl' → logprob: -18.0000057220459
    9. 'ects' → logprob: -18.2500057220459
    10. 'ector' → logprob: -18.3750057220459

Token 28: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7822046279907227
    2. '
' → logprob: -1.2822046279907227
    3. '\' → logprob: -1.7822046279907227
    4. '#' → logprob: -3.4072046279907227
    5. '

' → logprob: -4.157204627990723
    6. '' → logprob: -4.282204627990723
    7. '```' → logprob: -4.282204627990723
    8. 'def' → logprob: -4.782204627990723
    9. '<|end|>' → logprob: -5.782204627990723
    10. 'newline' → logprob: -6.657204627990723

Token 29: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29890871047973633
    2. '\n' → logprob: -1.6739087104797363
    3. '

' → logprob: -3.2989087104797363
    4. '\' → logprob: -5.048908710479736
    5. '' → logprob: -5.048908710479736
    6. '```' → logprob: -5.173908710479736
    7. 'class' → logprob: -5.798908710479736
    8. 'def' → logprob: -5.798908710479736
    9. '
' → logprob: -6.048908710479736
    10. 'import' → logprob: -6.298908710479736

Token 30: ' random' (ID: 7526)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.02953454479575157
    2. ' heap' → logprob: -4.279534339904785
    3. ' threading' → logprob: -5.029534339904785
    4. 'it' → logprob: -5.779534339904785
    5. 'heap' → logprob: -6.154534339904785
    6. 'random' → logprob: -6.404534339904785
    7. ' random' → logprob: -6.779534339904785
    8. ' functools' → logprob: -8.029534339904785
    9. 'collections' → logprob: -9.029534339904785
    10. 'copy' → logprob: -9.779534339904785

Token 31: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9418188333511353
    2. '
' → logprob: -1.0668188333511353
    3. '

' → logprob: -2.0668187141418457
    4. '\' → logprob: -2.3168187141418457
    5. '' → logprob: -4.691818714141846
    6. '```' → logprob: -4.816818714141846
    7. '#' → logprob: -5.066818714141846
    8. '<|end|>' → logprob: -5.191818714141846
    9. 'n' → logprob: -5.816818714141846
    10. 'def' → logprob: -6.066818714141846

Token 32: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.590293288230896
    2. '
' → logprob: -1.590293288230896
    3. '\' → logprob: -2.2152934074401855
    4. 'd' → logprob: -3.2152934074401855
    5. 'class' → logprob: -3.2152934074401855
    6. '\n' → logprob: -4.0902934074401855
    7. '#' → logprob: -4.4652934074401855
    8. '

' → logprob: -4.7152934074401855
    9. '' → logprob: -5.3402934074401855
    10. 'n' → logprob: -5.7152934074401855

Token 33: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03860342502593994
    2. ' solve' → logprob: -4.91360330581665
    3. ' main' → logprob: -4.91360330581665
    4. ' dfs' → logprob: -5.53860330581665
    5. ' _' → logprob: -5.78860330581665
    6. ' bfs' → logprob: -5.91360330581665
    7. '_' → logprob: -6.03860330581665
    8. ' binary' → logprob: -6.16360330581665
    9. ' max' → logprob: -6.78860330581665
    10. ' space' → logprob: -6.78860330581665

Token 34: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33560454845428467
    2. '_' → logprob: -1.3356045484542847
    3. '_line' → logprob: -4.585604667663574
    4. '()' → logprob: -5.335604667663574
    5. ' (' → logprob: -6.210604667663574
    6. '_input' → logprob: -6.960604667663574
    7. '():' → logprob: -7.085604667663574
    8. '_token' → logprob: -7.460604667663574
    9. ' ' → logprob: -7.835604667663574
    10. ')' → logprob: -7.960604667663574

Token 35: '_list' (ID: 4162)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004168272018432617
    2. '()' → logprob: -5.504168510437012
    3. ' ():' → logprob: -10.254168510437012
    4. '():
' → logprob: -10.629168510437012
    5. ' ()' → logprob: -10.754168510437012
    6. 's' → logprob: -13.004168510437012
    7. '()*' → logprob: -13.379168510437012
    8. '()]' → logprob: -14.379168510437012
    9. '()>' → logprob: -14.629168510437012
    10. '()">' → logprob: -14.629168510437012

Token 36: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01258382573723793
    2. '():' → logprob: -4.6375837326049805
    3. '()' → logprob: -5.8875837326049805
    4. '("("' → logprob: -11.76258373260498
    5. '[:]' → logprob: -12.01258373260498
    6. '(()' → logprob: -12.76258373260498
    7. '<|end|>' → logprob: -12.76258373260498
    8. '[' → logprob: -12.88758373260498
    9. ' (' → logprob: -13.01258373260498
    10. '()">' → logprob: -13.01258373260498

Token 37: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01913292706012726
    2. '()' → logprob: -4.0191330909729
    3. '():
' → logprob: -7.1441330909729
    4. '(' → logprob: -9.519132614135742
    5. ' ():' → logprob: -10.394132614135742
    6. '()\' → logprob: -10.769132614135742
    7. ' ()' → logprob: -11.019132614135742
    8. '()
' → logprob: -11.394132614135742
    9. '()[' → logprob: -11.894132614135742
    10. ':' → logprob: -12.144132614135742

Token 38: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.012586523778736591
    2. 'return' (adapté à ' return') → logprob: -4.38758659362793
    3. '   ' → logprob: -10.38758659362793
    4. ' list' → logprob: -10.38758659362793
    5. '    ' → logprob: -12.76258659362793
    6. ' ' → logprob: -12.88758659362793
    7. ' map' → logprob: -13.01258659362793
    8. '[]' → logprob: -13.01258659362793
    9. '	return' → logprob: -13.51258659362793
    10. ' []' → logprob: -13.51258659362793

Token 39: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01008847076445818
    2. 'list' → logprob: -4.6350884437561035
    3. ' map' → logprob: -8.385088920593262
    4. ' [' → logprob: -10.010088920593262
    5. '[' → logprob: -10.635088920593262
    6. '[list' → logprob: -10.885088920593262
    7. ' ' → logprob: -12.135088920593262
    8. '(list' → logprob: -12.385088920593262
    9. 'map' → logprob: -12.760088920593262
    10. ' []' → logprob: -13.135088920593262

Token 40: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2664456789934775e-06
    2. ' int' → logprob: -14.000000953674316
    3. ']int' → logprob: -15.250000953674316
    4. '(int' → logprob: -17.250001907348633
    5. 'map' → logprob: -17.625001907348633
    6. '<int' → logprob: -18.125001907348633
    7. '0' → logprob: -18.250001907348633
    8. '	int' → logprob: -18.375001907348633
    9. '*' → logprob: -18.750001907348633
    10. '[int' → logprob: -18.875001907348633

Token 41: '(value' (ID: 6333)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0018950795056298375
    2. '(i' → logprob: -6.376894950866699
    3. '(s' → logprob: -9.5018949508667
    4. '(sys' → logprob: -10.3768949508667
    5. ']' → logprob: -10.5018949508667
    6. '(token' → logprob: -10.6268949508667
    7. '()]' → logprob: -11.1268949508667
    8. '(' → logprob: -11.3768949508667
    9. '(line' → logprob: -12.2518949508667
    10. '(word' → logprob: -14.0018949508667

Token 42: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.28181740641593933
    2. '(' → logprob: -2.1568174362182617
    3. '(token' → logprob: -3.1568174362182617
    4. ')' → logprob: -3.4068174362182617
    5. '())' → logprob: -3.6568174362182617
    6. '()]' → logprob: -4.031817436218262
    7. '(i' → logprob: -6.031817436218262
    8. '()' → logprob: -6.281817436218262
    9. '(line' → logprob: -6.406817436218262
    10. '(input' → logprob: -6.656817436218262

Token 43: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4724268317222595
    2. '(x' → logprob: -1.2224268913269043
    3. ' for' → logprob: -3.0974268913269043
    4. '(' → logprob: -4.222426891326904
    5. '(line' → logprob: -4.722426891326904
    6. ')' → logprob: -5.472426891326904
    7. '(token' → logprob: -5.597426891326904
    8. ']' → logprob: -6.097426891326904
    9. '()]' → logprob: -7.597426891326904
    10. '(s' → logprob: -7.847426891326904

Token 44: ' value' (ID: 1432)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.15567581355571747
    2. ' sys' → logprob: -2.2806758880615234
    3. 'input' → logprob: -3.5306758880615234
    4. ' line' → logprob: -4.780675888061523
    5. ' ' → logprob: -6.280675888061523
    6. ' in' → logprob: -7.030675888061523
    7. '<|end|>' → logprob: -7.530675888061523
    8. 'sys' → logprob: -7.655675888061523
    9. '<|end|>' → logprob: -9.530675888061523
    10. ' ' → logprob: -9.530675888061523

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006767230574041605
    2. 'in' → logprob: -5.006767272949219
    3. ' ' → logprob: -10.506767272949219
    4. 'import' → logprob: -12.881767272949219
    5. '  ' → logprob: -13.006767272949219
    6. '()' → logprob: -13.006767272949219
    7. '<|end|>' → logprob: -13.006767272949219
    8. '	in' → logprob: -13.131767272949219
    9. '<|end|>' → logprob: -13.256767272949219
    10. '(' → logprob: -13.506767272949219

Token 46: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.252450555562973
    2. ' sys' → logprob: -1.6274505853652954
    3. 'input' → logprob: -3.877450466156006
    4. ' input' → logprob: -5.127450466156006
    5. '=sys' → logprob: -10.502450942993164
    6. '	sys' → logprob: -12.002450942993164
    7. '(sys' → logprob: -12.377450942993164
    8. ' ' → logprob: -14.377450942993164
    9. 'system' → logprob: -14.502450942993164
    10. 'stdin' → logprob: -15.502450942993164

Token 47: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00014406509581021965
    2. '.' → logprob: -9.250144004821777
    3. '.argv' → logprob: -10.250144004821777
    4. '.stdout' → logprob: -11.625144004821777
    5. '.readline' → logprob: -12.875144004821777
    6. '.std' → logprob: -14.250144004821777
    7. '.st' → logprob: -16.000144958496094
    8. '.input' → logprob: -16.500144958496094
    9. 'stdin' → logprob: -17.375144958496094
    10. '._' → logprob: -18.000144958496094

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001831565605243668
    2. '.' → logprob: -8.75018310546875
    3. '.read' → logprob: -10.75018310546875
    4. '.readlines' → logprob: -13.12518310546875
    5. 'read' → logprob: -14.12518310546875
    6. ' readline' → logprob: -15.50018310546875
    7. ' .' → logprob: -16.37518310546875
    8. '().' → logprob: -16.37518310546875
    9. '.stdin' → logprob: -17.87518310546875
    10. ')' → logprob: -18.12518310546875

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3594876825809479
    2. '()]' → logprob: -1.3594876527786255
    3. '()' → logprob: -3.109487771987915
    4. '())' → logprob: -7.984487533569336
    5. '()].' → logprob: -9.359487533569336
    6. '(' → logprob: -9.484487533569336
    7. '()][' → logprob: -11.484487533569336
    8. '()[' → logprob: -11.609487533569336
    9. ' ()' → logprob: -11.734487533569336
    10. '()`' → logprob: -12.609487533569336

Token 50: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006348453927785158
    2. 'split' → logprob: -5.756348609924316
    3. 'rstrip' → logprob: -5.756348609924316
    4. 'read' → logprob: -12.881348609924316
    5. ' strip' → logprob: -15.006348609924316
    6. '_strip' → logprob: -16.25634765625
    7. '-strip' → logprob: -17.88134765625
    8. '(strip' → logprob: -18.00634765625
    9. 'decode' → logprob: -19.50634765625
    10. '()' → logprob: -19.75634765625

Token 51: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -8.065608562901616e-05
    2. '()' → logprob: -9.750081062316895
    3. '(' → logprob: -10.875081062316895
    4. '())' → logprob: -12.875081062316895
    5. '()]
' → logprob: -15.375081062316895
    6. ']' → logprob: -16.000080108642578
    7. ']()' → logprob: -16.250080108642578
    8. '()][' → logprob: -16.250080108642578
    9. '()}' → logprob: -16.750080108642578
    10. '()`' → logprob: -17.000080108642578

Token 52: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048803556710481644
    2. ')]' → logprob: -3.0488035678863525
    3. '()]' → logprob: -8.923803329467773
    4. '])' → logprob: -10.048803329467773
    5. ')' → logprob: -10.548803329467773
    6. ']
' → logprob: -11.798803329467773
    7. '])]' → logprob: -13.048803329467773
    8. ' ]' → logprob: -13.298803329467773
    9. '`]' → logprob: -14.173803329467773
    10. ')])' → logprob: -14.798803329467773

Token 53: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013177761808037758
    2. 'd' → logprob: -5.138177871704102
    3. '
' → logprob: -5.388177871704102
    4. '\' → logprob: -6.763177871704102
    5. '#' → logprob: -7.263177871704102
    6. 'class' → logprob: -8.263177871704102
    7. '

' → logprob: -8.388177871704102
    8. 'n' → logprob: -9.138177871704102
    9. '\n' → logprob: -9.763177871704102
    10. '```' → logprob: -9.888177871704102

Token 54: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0623999759554863
    2. ' main' → logprob: -3.6873998641967773
    3. ' solve' → logprob: -3.8123998641967773
    4. 'read' → logprob: -4.937399864196777
    5. ' binary' → logprob: -6.562399864196777
    6. ' bfs' → logprob: -7.062399864196777
    7. ' dfs' → logprob: -7.437399864196777
    8. 'solve' → logprob: -7.562399864196777
    9. 'binary' → logprob: -7.937399864196777
    10. ' factorial' → logprob: -8.062399864196777

Token 55: '_single' (ID: 46053)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.12826888263225555
    2. '_' → logprob: -2.6282689571380615
    3. '_line' → logprob: -3.1282689571380615
    4. '_str' → logprob: -6.878268718719482
    5. 'int' → logprob: -7.253268718719482
    6. '_string' → logprob: -7.378268718719482
    7. '_value' → logprob: -7.503268718719482
    8. '_val' → logprob: -8.37826919555664
    9. '_integer' → logprob: -8.50326919555664
    10. '_token' → logprob: -9.00326919555664

Token 56: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.15415018796920776
    2. '_line' → logprob: -2.2791502475738525
    3. 'int' → logprob: -3.5291502475738525
    4. 'line' → logprob: -5.779150009155273
    5. 'ton' → logprob: -5.779150009155273
    6. '_' → logprob: -6.779150009155273
    7. '()' → logprob: -6.779150009155273
    8. '_integer' → logprob: -6.904150009155273
    9. 't' → logprob: -8.029150009155273
    10. 'nt' → logprob: -8.029150009155273

Token 57: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.20734242349863e-05
    2. '()' → logprob: -10.250072479248047
    3. ' ():' → logprob: -10.625072479248047
    4. '():
' → logprob: -11.375072479248047
    5. ' ()' → logprob: -15.000072479248047
    6. '():
' → logprob: -15.500072479248047
    7. '():

' → logprob: -16.625072479248047
    8. '()*' → logprob: -16.750072479248047
    9. '()>' → logprob: -17.125072479248047
    10. '()">' → logprob: -17.375072479248047

Token 58: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9020221829414368
    2. '():' → logprob: -0.9020221829414368
    3. '   ' → logprob: -2.652022123336792
    4. ' return' → logprob: -2.777022123336792
    5. 'return' → logprob: -3.527022123336792
    6. '():
' → logprob: -4.277022361755371
    7. '(' → logprob: -5.152022361755371
    8. ' ()' → logprob: -6.402022361755371
    9. 'int' → logprob: -6.902022361755371
    10. ':' → logprob: -7.152022361755371

Token 59: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06351696699857712
    2. 'return' (adapté à ' return') → logprob: -2.813516855239868
    3. 'int' → logprob: -6.813517093658447
    4. ' int' → logprob: -7.938517093658447
    5. '   ' → logprob: -9.313516616821289
    6. ' ' → logprob: -13.813516616821289
    7. ' 
' → logprob: -14.688516616821289
    8. ' ' → logprob: -15.063516616821289
    9. '    ' → logprob: -15.313516616821289
    10. '	return' → logprob: -15.688516616821289

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014171971939504147
    2. 'int' → logprob: -4.264172077178955
    3. '(int' → logprob: -12.139171600341797
    4. ' ' → logprob: -13.639171600341797
    5. '   ' → logprob: -14.514171600341797
    6. '<int' → logprob: -14.764171600341797
    7. '  ' → logprob: -14.764171600341797
    8. '	int' → logprob: -15.264171600341797
    9. '[int' → logprob: -15.389171600341797
    10. '=int' → logprob: -15.639171600341797

Token 61: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.048593275249004364
    2. '(' → logprob: -3.048593282699585
    3. '(system' → logprob: -13.173593521118164
    4. ' (' → logprob: -13.673593521118164
    5. '(Sys' → logprob: -14.048593521118164
    6. 'sys' → logprob: -14.548593521118164
    7. '(System' → logprob: -14.673593521118164
    8. '=sys' → logprob: -14.798593521118164
    9. ' sys' → logprob: -15.673593521118164
    10. '(s' → logprob: -16.048593521118164

Token 62: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003326049481984228
    2. '.' → logprob: -8.750332832336426
    3. '.readline' → logprob: -8.875332832336426
    4. '.stdout' → logprob: -10.625332832336426
    5. '.std' → logprob: -12.375332832336426
    6. 'stdin' → logprob: -12.500332832336426
    7. '.argv' → logprob: -14.000332832336426
    8. '(stdin' → logprob: -14.875332832336426
    9. '.stderr' → logprob: -15.500332832336426
    10. '.st' → logprob: -15.875332832336426

Token 63: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00013643606507685035
    2. '.stdin' → logprob: -9.000136375427246
    3. '().' → logprob: -11.375136375427246
    4. '.' → logprob: -14.250136375427246
    5. '.stdout' → logprob: -15.375136375427246
    6. ').' → logprob: -15.750136375427246
    7. '.read' → logprob: -15.875136375427246
    8. 'stdin' → logprob: -16.500137329101562
    9. '.readlines' → logprob: -17.125137329101562
    10. '.)' → logprob: -17.250137329101562

Token 64: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011082957498729229
    2. '().' → logprob: -4.761083126068115
    3. '()' → logprob: -6.011083126068115
    4. ' ())' → logprob: -11.636082649230957
    5. ')' → logprob: -13.261082649230957
    6. '())
' → logprob: -14.136082649230957
    7. '()))' → logprob: -14.261082649230957
    8. '()]' → logprob: -14.261082649230957
    9. '();)' → logprob: -14.636082649230957
    10. '()`' → logprob: -15.886082649230957

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02423686720430851
    2. 'd' → logprob: -4.774236679077148
    3. '

' → logprob: -4.899236679077148
    4. '
' → logprob: -5.524236679077148
    5. '\' → logprob: -5.774236679077148
    6. 'class' → logprob: -8.149236679077148
    7. '#' → logprob: -8.149236679077148
    8. 'de' → logprob: -9.024236679077148
    9. '\n' → logprob: -9.274236679077148
    10. '```' → logprob: -9.649236679077148

Token 66: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.03644192963838577
    2. ' solve' → logprob: -3.7864420413970947
    3. ' main' → logprob: -5.786441802978516
    4. ' dfs' → logprob: -6.286441802978516
    5. ' binary' → logprob: -6.536441802978516
    6. 'read' → logprob: -6.786441802978516
    7. ' bfs' → logprob: -7.411441802978516
    8. ' ' → logprob: -7.536441802978516
    9. '_' → logprob: -7.786441802978516
    10. ' process' → logprob: -7.786441802978516

Token 67: '_str' (ID: 6182)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0842125415802002
    2. '_single' → logprob: -3.7092125415802
    3. '_str' → logprob: -3.9592125415802
    4. '_' → logprob: -4.084212303161621
    5. '_string' → logprob: -4.459212303161621
    6. '_int' → logprob: -5.834212303161621
    7. '_float' → logprob: -6.209212303161621
    8. '_list' → logprob: -6.709212303161621
    9. '_token' → logprob: -7.834212303161621
    10. '_char' → logprob: -8.084212303161621

Token 68: '_list' (ID: 4162)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.22378681600093842
    2. '()' → logprob: -1.7237868309020996
    3. '_line' → logprob: -4.9737868309021
    4. '():' → logprob: -5.0987868309021
    5. '_ing' → logprob: -6.0987868309021
    6. 'line' → logprob: -6.4737868309021
    7. '():
' → logprob: -6.5987868309021
    8. 'ingle' → logprob: -6.7237868309021
    9. '_list' → logprob: -7.2237868309021
    10. 'ings' → logprob: -7.8487868309021

Token 69: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.183501293184236e-05
    2. ' ():' → logprob: -10.00007152557373
    3. '()' → logprob: -11.25007152557373
    4. '():
' → logprob: -11.25007152557373
    5. ' ()' → logprob: -15.87507152557373
    6. '():
' → logprob: -16.125072479248047
    7. '():

' → logprob: -16.375072479248047
    8. ':' → logprob: -17.500072479248047
    9. '()>' → logprob: -17.625072479248047
    10. '(' → logprob: -18.000072479248047

Token 70: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008410554379224777
    2. '():
' → logprob: -5.133410453796387
    3. '()' → logprob: -6.133410453796387
    4. '   ' → logprob: -8.758410453796387
    5. ' ():' → logprob: -9.258410453796387
    6. ' ()' → logprob: -10.508410453796387
    7. '():
' → logprob: -11.633410453796387
    8. '):' → logprob: -12.508410453796387
    9. ':' → logprob: -12.758410453796387
    10. 'return' → logprob: -12.758410453796387

Token 71: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.543495774269104
    2. 'return' (adapté à ' return') → logprob: -0.918495774269104
    3. ' return' → logprob: -4.0434956550598145
    4. '()' → logprob: -6.1684956550598145
    5. 'def' → logprob: -8.043496131896973
    6. 'sys' → logprob: -9.418496131896973
    7. '	return' → logprob: -10.168496131896973
    8. '():' → logprob: -10.918496131896973
    9. '()
' → logprob: -11.543496131896973
    10. ' ' → logprob: -11.668496131896973

Token 72: ' [' (ID: 723)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.24135394394397736
    2. 'sys' → logprob: -1.741353988647461
    3. '[' → logprob: -3.741353988647461
    4. ' [' → logprob: -4.241353988647461
    5. ' list' → logprob: -7.616353988647461
    6. '(sys' → logprob: -8.366353988647461
    7. 'list' → logprob: -8.991353988647461
    8. '=sys' → logprob: -9.991353988647461
    9. ' ' → logprob: -10.366353988647461
    10. '	sys' → logprob: -10.491353988647461

Token 73: 'list' (ID: 2641)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16706356406211853
    2. 'value' → logprob: -2.2920634746551514
    3. 's' → logprob: -3.5420634746551514
    4. 'x' → logprob: -4.1670637130737305
    5. 'str' → logprob: -5.4170637130737305
    6. 'token' → logprob: -5.6670637130737305
    7. 'item' → logprob: -9.16706371307373
    8. 'word' → logprob: -9.29206371307373
    9. 'input' → logprob: -9.79206371307373
    10. 'elem' → logprob: -10.16706371307373

Token 74: '(item' (ID: 10016)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00869623851031065
    2. '(map' → logprob: -4.75869607925415
    3. 'sys' → logprob: -10.258696556091309
    4. '(str' → logprob: -11.008696556091309
    5. '(input' → logprob: -11.133696556091309
    6. '(' → logprob: -11.633696556091309
    7. 'map' → logprob: -12.883696556091309
    8. '(s' → logprob: -13.633696556091309
    9. '=sys' → logprob: -13.758696556091309
    10. '(line' → logprob: -14.383696556091309

Token 75: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9194908738136292
    2. '())' → logprob: -0.9194908738136292
    3. '()]' → logprob: -1.6694908142089844
    4. '(' → logprob: -4.419490814208984
    5. '(map' → logprob: -7.294490814208984
    6. '().' → logprob: -7.919490814208984
    7. ')' → logprob: -8.169490814208984
    8. '(sys' → logprob: -8.794490814208984
    9. '(s' → logprob: -8.794490814208984
    10. '(str' → logprob: -9.169490814208984

Token 76: ' for' (ID: 395)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0060572512447834015
    2. '(' → logprob: -5.631057262420654
    3. '()' → logprob: -6.131057262420654
    4. '=sys' → logprob: -9.506056785583496
    5. 'sys' → logprob: -9.756056785583496
    6. '(line' → logprob: -10.006056785583496
    7. '(s' → logprob: -10.506056785583496
    8. ' (' → logprob: -10.756056785583496
    9. '(map' → logprob: -11.006056785583496
    10. '()]' → logprob: -11.756056785583496

Token 77: ' item' (ID: 2169)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.032508328557014465
    2. 'sys' → logprob: -3.532508373260498
    3. '(sys' → logprob: -5.907508373260498
    4. '=sys' → logprob: -10.28250789642334
    5. '	sys' → logprob: -14.15750789642334
    6. '_sys' → logprob: -16.782508850097656
    7. '_' → logprob: -17.282508850097656
    8. '/sys' → logprob: -17.532508850097656
    9. '.sys' → logprob: -17.782508850097656
    10. '(' → logprob: -17.782508850097656

Token 78: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31674230098724365
    2. '()' → logprob: -1.8167423009872437
    3. '(sys' → logprob: -2.441742420196533
    4. ' in' → logprob: -4.566742420196533
    5. 'in' → logprob: -5.816742420196533
    6. ' ()' → logprob: -5.816742420196533
    7. ' (' → logprob: -5.941742420196533
    8. '().' → logprob: -7.191742420196533
    9. '()]' → logprob: -7.941742420196533
    10. ')' → logprob: -8.191741943359375

Token 79: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.47449299693107605
    2. ' sys' → logprob: -0.9744930267333984
    3. '(sys' → logprob: -7.849493026733398
    4. '=sys' → logprob: -11.849493026733398
    5. '	sys' → logprob: -12.474493026733398
    6. ' ' → logprob: -12.724493026733398
    7. 'input' → logprob: -12.849493026733398
    8. 'map' → logprob: -13.099493026733398
    9. ' map' → logprob: -13.099493026733398
    10. ' input' → logprob: -13.724493026733398

Token 80: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.009101510047912598
    2. '.stdout' → logprob: -5.509101390838623
    3. '.' → logprob: -6.009101390838623
    4. '.readline' → logprob: -6.009101390838623
    5. 'stdin' → logprob: -10.759101867675781
    6. '._' → logprob: -11.009101867675781
    7. '.std' → logprob: -11.134101867675781
    8. '.argv' → logprob: -12.009101867675781
    9. '.stderr' → logprob: -12.009101867675781
    10. '(stdin' → logprob: -12.009101867675781

Token 81: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0659753754734993
    2. '().' → logprob: -3.5659754276275635
    3. '()' → logprob: -3.9409754276275635
    4. '())' → logprob: -4.440975189208984
    5. '()]' → logprob: -5.565975189208984
    6. ')' → logprob: -8.440975189208984
    7. '.' → logprob: -8.440975189208984
    8. '.readlines' → logprob: -10.440975189208984
    9. '()][' → logprob: -11.190975189208984
    10. ')]' → logprob: -11.440975189208984

Token 82: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015550976386293769
    2. '()' → logprob: -6.5015549659729
    3. '()]' → logprob: -10.126555442810059
    4. ' ().' → logprob: -12.251555442810059
    5. '())' → logprob: -12.376555442810059
    6. '()].' → logprob: -12.876555442810059
    7. '().'' → logprob: -14.626555442810059
    8. ' ()' → logprob: -15.376555442810059
    9. '(' → logprob: -15.876555442810059
    10. '()[' → logprob: -16.376554489135742

Token 83: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04946749657392502
    2. 'strip' → logprob: -3.0494675636291504
    3. 'rstrip' → logprob: -7.04946756362915
    4. 'read' → logprob: -11.424467086791992
    5. ' split' → logprob: -14.549467086791992
    6. 'str' → logprob: -15.299467086791992
    7. '.split' → logprob: -16.674467086791992
    8. 'spl' → logprob: -16.799467086791992
    9. ' strip' → logprob: -17.174467086791992
    10. '(split' → logprob: -17.674467086791992

Token 84: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0007900939672254026
    2. '()' → logprob: -7.250790119171143
    3. '())' → logprob: -9.750789642333984
    4. '(' → logprob: -12.250789642333984
    5. ']' → logprob: -12.250789642333984
    6. '()][' → logprob: -12.250789642333984
    7. ')]' → logprob: -12.875789642333984
    8. '()]
' → logprob: -13.000789642333984
    9. ']()' → logprob: -13.625789642333984
    10. '()].' → logprob: -14.875789642333984

Token 85: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.366238534450531
    2. ')]' → logprob: -1.9912385940551758
    3. ')' → logprob: -2.366238594055176
    4. ']' → logprob: -2.741238594055176
    5. '()' → logprob: -5.116238594055176
    6. '())' → logprob: -5.241238594055176
    7. '])' → logprob: -8.116238594055176
    8. ')])' → logprob: -9.366238594055176
    9. ']()' → logprob: -9.616238594055176
    10. ' )' → logprob: -11.616238594055176

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2420014888048172
    2. 'd' → logprob: -1.8670015335083008
    3. '
' → logprob: -3.117001533508301
    4. '

' → logprob: -4.867001533508301
    5. '#' → logprob: -5.242001533508301
    6. '\' → logprob: -6.117001533508301
    7. '\n' → logprob: -8.2420015335083
    8. 'n' → logprob: -8.9920015335083
    9. '```' → logprob: -9.3670015335083
    10. 'class' → logprob: -9.4920015335083

Token 87: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.13310202956199646
    2. ' dfs' → logprob: -3.1331019401550293
    3. '_' → logprob: -3.8831019401550293
    4. ' solve' → logprob: -4.008101940155029
    5. ' bfs' → logprob: -4.883101940155029
    6. 'read' → logprob: -5.133101940155029
    7. ' find' → logprob: -5.383101940155029
    8. ' ' → logprob: -5.758101940155029
    9. ' reverse' → logprob: -6.008101940155029
    10. ' count' → logprob: -6.133101940155029

Token 88: '_char' (ID: 23398)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.7572098970413208
    2. '_' → logprob: -1.3822098970413208
    3. '_line' → logprob: -1.6322098970413208
    4. '_str' → logprob: -2.7572097778320312
    5. '_string' → logprob: -4.507209777832031
    6. '_int' → logprob: -5.507209777832031
    7. '_char' → logprob: -6.882209777832031
    8. '_a' → logprob: -7.632209777832031
    9. '_token' → logprob: -8.007209777832031
    10. '__' → logprob: -8.007209777832031

Token 89: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6662582159042358
    2. '_list' → logprob: -0.7912582159042358
    3. '()' → logprob: -3.6662583351135254
    4. '_array' → logprob: -5.166258335113525
    5. '_line' → logprob: -7.666258335113525
    6. 's' → logprob: -7.916258335113525
    7. '_lst' → logprob: -8.916257858276367
    8. '_a' → logprob: -9.291257858276367
    9. '_vector' → logprob: -9.291257858276367
    10. '_s' → logprob: -9.541257858276367

Token 90: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005711443373002112
    2. '()' → logprob: -7.500571250915527
    3. ' ():' → logprob: -11.500571250915527
    4. '():
' → logprob: -11.875571250915527
    5. '(' → logprob: -14.625571250915527
    6. ' ()' → logprob: -15.250571250915527
    7. '():

' → logprob: -15.750571250915527
    8. '()>' → logprob: -17.00057029724121
    9. '()]' → logprob: -17.12557029724121
    10. '():
' → logprob: -17.37557029724121

Token 91: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09558484703302383
    2. '():
' → logprob: -2.4705848693847656
    3. '()' → logprob: -5.095584869384766
    4. ' ():' → logprob: -8.095584869384766
    5. '   ' → logprob: -9.220584869384766
    6. ' ()' → logprob: -9.970584869384766
    7. '():
' → logprob: -11.095584869384766
    8. ':' → logprob: -12.095584869384766
    9. '():

' → logprob: -12.095584869384766
    10. '(' → logprob: -12.095584869384766

Token 92: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014225916005671024
    2. '   ' → logprob: -4.889225959777832
    3. ' return' → logprob: -5.139225959777832
    4. 'list' → logprob: -7.764225959777832
    5. '()' → logprob: -9.014225959777832
    6. '
' → logprob: -9.764225959777832
    7. '()
' → logprob: -9.889225959777832
    8. '    
' → logprob: -10.389225959777832
    9. '(return' → logprob: -11.514225959777832
    10. '(list' → logprob: -12.389225959777832

Token 93: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.24235087633132935
    2. ' list' → logprob: -1.6173508167266846
    3. '[list' → logprob: -4.117351055145264
    4. 'sys' → logprob: -8.367350578308105
    5. '(list' → logprob: -8.992350578308105
    6. ' [' → logprob: -9.617350578308105
    7. ' sys' → logprob: -10.117350578308105
    8. '[' → logprob: -10.992350578308105
    9. '   ' → logprob: -11.742350578308105
    10. ' ' → logprob: -11.867350578308105

Token 94: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.09195473790168762
    2. '(' → logprob: -2.4669547080993652
    3. '()' → logprob: -5.966954708099365
    4. '(s' → logprob: -9.341955184936523
    5. '(system' → logprob: -9.466955184936523
    6. '(System' → logprob: -9.466955184936523
    7. '(str' → logprob: -9.966955184936523
    8. 'sys' → logprob: -10.591955184936523
    9. '(Sys' → logprob: -10.716955184936523
    10. '(input' → logprob: -11.091955184936523

Token 95: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.44706009957008e-05
    2. '.stdout' → logprob: -9.75008487701416
    3. 'stdin' → logprob: -11.50008487701416
    4. '.' → logprob: -12.00008487701416
    5. '.argv' → logprob: -12.37508487701416
    6. '.std' → logprob: -12.87508487701416
    7. '.stderr' → logprob: -13.62508487701416
    8. '.readline' → logprob: -13.87508487701416
    9. ' .' → logprob: -15.00008487701416
    10. '.version' → logprob: -15.87508487701416

Token 96: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.30763792991638184
    2. '.stdin' → logprob: -1.4326379299163818
    3. '().' → logprob: -3.682637929916382
    4. 'stdin' → logprob: -8.182638168334961
    5. '())' → logprob: -8.307638168334961
    6. '(stdin' → logprob: -8.432638168334961
    7. '.stdout' → logprob: -9.557638168334961
    8. '()' → logprob: -10.307638168334961
    9. ')' → logprob: -10.807638168334961
    10. 'sys' → logprob: -10.932638168334961

Token 97: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002748646307736635
    2. '()' → logprob: -6.002748489379883
    3. '())' → logprob: -8.252748489379883
    4. ' ().' → logprob: -11.627748489379883
    5. '()
' → logprob: -13.752748489379883
    6. ' ()' → logprob: -14.502748489379883
    7. '()]' → logprob: -15.002748489379883
    8. '()[' → logprob: -15.252748489379883
    9. ' ())' → logprob: -15.377748489379883
    10. '(' → logprob: -15.877748489379883

Token 98: '[:-' (ID: 63556)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07485149800777435
    2. '.rstrip' → logprob: -3.5748515129089355
    3. 'rstrip' → logprob: -4.1998515129089355
    4. '[:-' → logprob: -4.8248515129089355
    5. 'strip' → logprob: -5.0748515129089355
    6. '()' → logprob: -5.3248515129089355
    7. '<|end|>' → logprob: -5.6998515129089355
    8. '.replace' → logprob: -6.6998515129089355
    9. '(strip' → logprob: -6.6998515129089355
    10. 'def' → logprob: -6.9498515129089355

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. ' ' → logprob: -16.75
    4. 'newline' → logprob: -17.0
    5. '2' → logprob: -17.125
    6. '   ' → logprob: -19.25
    7. '
' → logprob: -19.625
    8. '\n' → logprob: -20.625
    9. '۱' → logprob: -20.75
    10. '১' → logprob: -20.875

Token 100: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741450846195221
    2. ']' → logprob: -0.9741450548171997
    3. ')]' → logprob: -9.84914493560791
    4. '']' → logprob: -12.22414493560791
    5. '}' → logprob: -12.84914493560791
    6. '）' → logprob: -12.97414493560791
    7. '])' → logprob: -13.09914493560791
    8. '<|end|>' → logprob: -13.47414493560791
    9. ')
' → logprob: -14.72414493560791
    10. ']
' → logprob: -15.22414493560791

Token 101: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11075614392757416
    2. 'd' → logprob: -2.3607561588287354
    3. '
' → logprob: -4.985755920410156
    4. '\' → logprob: -5.985755920410156
    5. '#' → logprob: -7.235755920410156
    6. '

' → logprob: -8.360755920410156
    7. 'class' → logprob: -9.485755920410156
    8. '\n' → logprob: -9.985755920410156
    9. '' → logprob: -10.735755920410156
    10. 'de' → logprob: -11.360755920410156

Token 102: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.10048216581344604
    2. 'read' → logprob: -3.100482225418091
    3. ' main' → logprob: -3.475482225418091
    4. ' write' → logprob: -5.225481986999512
    5. ' is' → logprob: -5.725481986999512
    6. ' solve' → logprob: -6.600481986999512
    7. ' max' → logprob: -7.100481986999512
    8. ' input' → logprob: -7.350481986999512
    9. ' bfs' → logprob: -7.350481986999512
    10. ' reverse' → logprob: -7.475481986999512

Token 103: '_int' (ID: 12285)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.8830407857894897
    2. '_int' → logprob: -1.2580407857894897
    3. '_line' → logprob: -1.7580407857894897
    4. '_str' → logprob: -2.6330409049987793
    5. '_' → logprob: -3.5080409049987793
    6. '_float' → logprob: -4.633040904998779
    7. '_char' → logprob: -4.758040904998779
    8. '_string' → logprob: -5.758040904998779
    9. '_double' → logprob: -6.008040904998779
    10. '_uint' → logprob: -7.258040904998779

Token 104: '_rows' (ID: 26013)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.6116301417350769
    2. '_' → logprob: -0.9866301417350769
    3. '()' → logprob: -2.4866302013397217
    4. '_single' → logprob: -7.736629962921143
    5. '_line' → logprob: -8.3616304397583
    6. '<|end|>' → logprob: -8.7366304397583
    7. '_value' → logprob: -9.2366304397583
    8. '_array' → logprob: -9.4866304397583
    9. ']()' → logprob: -9.8616304397583
    10. 's' → logprob: -10.2366304397583

Token 105: '(number' (ID: 32955)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0047359224408864975
    2. '(n' → logprob: -5.879735946655273
    3. '(size' → logprob: -7.504735946655273
    4. '():
' → logprob: -7.504735946655273
    5. '(' → logprob: -8.129735946655273
    6. '()' → logprob: -9.254735946655273
    7. '(num' → logprob: -9.504735946655273
    8. '(length' → logprob: -9.629735946655273
    9. '(number' → logprob: -10.004735946655273
    10. ' ():' → logprob: -10.379735946655273

Token 106: '_of' (ID: 8023)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6561083197593689
    2. 's' → logprob: -1.2811083793640137
    3. '_of' → logprob: -2.2811083793640137
    4. ')' → logprob: -3.0311083793640137
    5. '_' → logprob: -3.7811083793640137
    6. '(' → logprob: -4.531108379364014
    7. '=' → logprob: -5.031108379364014
    8. 'of' → logprob: -5.031108379364014
    9. '_rows' → logprob: -7.281108379364014
    10. ',' → logprob: -7.281108379364014

Token 107: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.016841955482959747
    2. '_lines' → logprob: -4.391841888427734
    3. 'rows' → logprob: -6.266841888427734
    4. 's' → logprob: -7.141841888427734
    5. ')' → logprob: -7.266841888427734
    6. '_' → logprob: -8.016841888427734
    7. '_columns' → logprob: -8.016841888427734
    8. '_cells' → logprob: -10.016841888427734
    9. '_)' → logprob: -10.891841888427734
    10. '_times' → logprob: -10.891841888427734

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003799104888457805
    2. ')' → logprob: -8.12537956237793
    3. '(' → logprob: -10.25037956237793
    4. '):
' → logprob: -11.00037956237793
    5. ':' → logprob: -11.37537956237793
    6. ']:' → logprob: -11.87537956237793
    7. '=' → logprob: -12.00037956237793
    8. '():' → logprob: -13.12537956237793
    9. '(n' → logprob: -13.37537956237793
    10. ' ):' → logprob: -13.62537956237793

Token 109: '   ' (ID: 271)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.9555809497833252
    2. '(rows' → logprob: -1.7055809497833252
    3. '(' → logprob: -1.9555809497833252
    4. '(n' → logprob: -2.205580949783325
    5. '   ' → logprob: -2.580580949783325
    6. ':' → logprob: -2.580580949783325
    7. '(lines' → logprob: -4.330580711364746
    8. ':
' → logprob: -5.455580711364746
    9. '(size' → logprob: -5.705580711364746
    10. '	rows' → logprob: -5.830580711364746

Token 110: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002565552946180105
    2. 'rows' → logprob: -6.252565383911133
    3. '(rows' → logprob: -8.877565383911133
    4. ' rows' → logprob: -9.502565383911133
    5. 'return' (adapté à ' return') → logprob: -9.627565383911133
    6. ':
' → logprob: -9.627565383911133
    7. '	rows' → logprob: -10.127565383911133
    8. ' return' → logprob: -10.252565383911133
    9. 'number' → logprob: -10.627565383911133
    10. 'result' → logprob: -10.752565383911133

Token 111: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4338105618953705
    2. '[int' → logprob: -1.4338105916976929
    3. ' [' → logprob: -2.1838104724884033
    4. '[list' → logprob: -7.808810710906982
    5. '[number' → logprob: -8.933810234069824
    6. '[[' → logprob: -9.558810234069824
    7. '[Int' → logprob: -9.558810234069824
    8. '[
' → logprob: -9.933810234069824
    9. '[np' → logprob: -9.933810234069824
    10. '[array' → logprob: -10.308810234069824

Token 112: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.006086157634854317
    2. '[int' → logprob: -5.506086349487305
    3. '[' → logprob: -6.381086349487305
    4. ' read' → logprob: -9.131086349487305
    5. 'list' → logprob: -9.631086349487305
    6. ' [' → logprob: -9.881086349487305
    7. '(read' → logprob: -10.506086349487305
    8. 'int' → logprob: -10.756086349487305
    9. '[list' → logprob: -10.881086349487305
    10. '   ' → logprob: -11.631086349487305

Token 113: '_single' (ID: 46053)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00014120421838015318
    2. '_single' → logprob: -8.875141143798828
    3. 'int' → logprob: -14.625141143798828
    4. '_char' → logprob: -14.875141143798828
    5. '_' → logprob: -15.625141143798828
    6. '_in' → logprob: -16.000141143798828
    7. 'single' → logprob: -16.125141143798828
    8. '```' → logprob: -17.250141143798828
    9. '_double' → logprob: -17.625141143798828
    10. '_uint' → logprob: -17.750141143798828

Token 114: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -6.587483221665025e-05
    2. 'int' → logprob: -9.750065803527832
    3. '_' → logprob: -12.625065803527832
    4. '_line' → logprob: -14.250065803527832
    5. '_uint' → logprob: -14.500065803527832
    6. '_integer' → logprob: -14.750065803527832
    7. '_val' → logprob: -15.125065803527832
    8. '_str' → logprob: -15.375065803527832
    9. '_i' → logprob: -15.625065803527832
    10. '<int' → logprob: -15.625065803527832

Token 115: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00318912067450583
    2. '()]' → logprob: -5.7531890869140625
    3. '()
' → logprob: -12.128189086914062
    4. '())' → logprob: -12.628189086914062
    5. ' ()' → logprob: -14.628189086914062
    6. '()]
' → logprob: -14.878189086914062
    7. '()`' → logprob: -15.003189086914062
    8. '（）' → logprob: -15.003189086914062
    9. ']()' → logprob: -15.128189086914062
    10. '(' → logprob: -15.378189086914062

Token 116: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.2729995988775045e-06
    2. '()]' → logprob: -12.500006675720215
    3. 'for' → logprob: -13.250006675720215
    4. '(' → logprob: -14.875006675720215
    5. ' ()' → logprob: -15.625006675720215
    6. ']' → logprob: -16.6250057220459
    7. ')' → logprob: -16.8750057220459
    8. '()
' → logprob: -17.1250057220459
    9. ' for' → logprob: -18.3750057220459
    10. '（）' → logprob: -18.8750057220459

Token 117: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.22676551342010498
    2. '_' → logprob: -1.601765513420105
    3. ' range' → logprob: -6.8517656326293945
    4. ' ' → logprob: -8.476765632629395
    5. 'range' → logprob: -10.101765632629395
    6. ' i' → logprob: -11.101765632629395
    7. ' ' → logprob: -11.351765632629395
    8. ' in' → logprob: -11.726765632629395
    9. '_range' → logprob: -12.226765632629395
    10. '	' → logprob: -13.726765632629395

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5379976630210876
    2. 'range' → logprob: -1.0379977226257324
    3. 'in' → logprob: -3.0379977226257324
    4. ' range' → logprob: -4.287997722625732
    5. ' ' → logprob: -9.037997245788574
    6. '_' → logprob: -9.412997245788574
    7. ' _' → logprob: -10.412997245788574
    8. '	range' → logprob: -11.912997245788574
    9. '_range' → logprob: -12.287997245788574
    10. ')' → logprob: -12.287997245788574

Token 119: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '	range' → logprob: -17.62500762939453
    4. '(range' → logprob: -18.12500762939453
    5. '_' → logprob: -20.75000762939453
    6. 'rang' → logprob: -21.37500762939453
    7. '   ' → logprob: -21.37500762939453
    8. '[' → logprob: -21.37500762939453
    9. '
' → logprob: -21.75000762939453
    10. '

' → logprob: -22.00000762939453

Token 120: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.16023285686969757
    2. '(' → logprob: -1.9102329015731812
    3. '(
' → logprob: -12.660232543945312
    4. 'number' → logprob: -13.035232543945312
    5. '(n' → logprob: -13.785232543945312
    6. '(

' → logprob: -14.285232543945312
    7. '(amount' → logprob: -15.535232543945312
    8. '(range' → logprob: -15.660232543945312
    9. '(object' → logprob: -15.785232543945312
    10. '((' → logprob: -15.910232543945312

Token 121: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0009280181839130819
    2. 'of' → logprob: -7.000927925109863
    3. '_rows' → logprob: -11.375927925109863
    4. ' of' → logprob: -13.000927925109863
    5. ')' → logprob: -13.750927925109863
    6. '_OF' → logprob: -15.375927925109863
    7. 's' → logprob: -15.500927925109863
    8. '_o' → logprob: -15.500927925109863
    9. 'ofs' → logprob: -15.625927925109863
    10. '_for' → logprob: -15.750927925109863

Token 122: '_rows' (ID: 26013)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5739992260932922
    2. 'rows' → logprob: -1.4489991664886475
    3. '_rows' → logprob: -1.6989991664886475
    4. '_' → logprob: -4.823999404907227
    5. 'range' → logprob: -4.823999404907227
    6. '(number' → logprob: -6.323999404907227
    7. ' number' → logprob: -7.573999404907227
    8. ')' → logprob: -8.573999404907227
    9. ' ' → logprob: -8.823999404907227
    10. ' rows' → logprob: -9.323999404907227

Token 123: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013320252764970064
    2. ']' → logprob: -6.751331806182861
    3. ')' → logprob: -8.75133228302002
    4. ')]
' → logprob: -13.50133228302002
    5. '()]' → logprob: -14.37633228302002
    6. '}]' → logprob: -15.12633228302002
    7. '):' → logprob: -15.25133228302002
    8. ']
' → logprob: -15.62633228302002
    9. ' ]' → logprob: -15.87633228302002
    10. '   ' → logprob: -16.001331329345703

Token 124: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.478130966424942
    2. '
' → logprob: -0.9781309366226196
    3. '

' → logprob: -5.60313081741333
    4. '<|end|>' → logprob: -8.478131294250488
    5. '
' → logprob: -9.728131294250488
    6. '#' → logprob: -10.853131294250488
    7. '<|end|>' → logprob: -10.853131294250488
    8. '```' → logprob: -11.478131294250488
    9. ' def' → logprob: -11.478131294250488
    10. '\' → logprob: -12.228131294250488

Token 125: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.020616160705685616
    2. 'read' → logprob: -3.895616054534912
    3. '_read' → logprob: -10.14561653137207
    4. '_' → logprob: -11.39561653137207
    5. ' write' → logprob: -12.27061653137207
    6. ' def' → logprob: -12.64561653137207
    7. 'space' → logprob: -12.89561653137207
    8. ' _' → logprob: -13.02061653137207
    9. ' space' → logprob: -13.39561653137207
    10. ' readline' → logprob: -13.64561653137207

Token 126: '_list' (ID: 4162)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.08992640674114227
    2. '_single' → logprob: -3.0899264812469482
    3. '_str' → logprob: -3.7149264812469482
    4. 'int' → logprob: -5.839926242828369
    5. '_char' → logprob: -6.214926242828369
    6. '_' → logprob: -6.339926242828369
    7. '_code' → logprob: -6.339926242828369
    8. '_double' → logprob: -6.464926242828369
    9. '_line' → logprob: -6.839926242828369
    10. '_string' → logprob: -7.339926242828369

Token 127: '_of' (ID: 8023)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007356490474194288
    2. '(' → logprob: -6.632356643676758
    3. '_of' → logprob: -6.632356643676758
    4. '_list' → logprob: -6.882356643676758
    5. 's' → logprob: -7.132356643676758
    6. '():' → logprob: -7.757356643676758
    7. '_' → logprob: -8.382356643676758
    8. '()(' → logprob: -8.382356643676758
    9. ' ()' → logprob: -9.007356643676758
    10. '(int' → logprob: -9.132356643676758

Token 128: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.29435110092163086
    2. '_lists' → logprob: -1.4193511009216309
    3. '_' → logprob: -5.294351100921631
    4. '_list' → logprob: -5.294351100921631
    5. 'int' → logprob: -6.919351100921631
    6. 'lists' → logprob: -7.419351100921631
    7. '_rows' → logprob: -7.669351100921631
    8. '(' → logprob: -8.294351577758789
    9. '(int' → logprob: -8.419351577758789
    10. 's' → logprob: -9.169351577758789

Token 129: '_lists' (ID: 93609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6958868503570557
    2. '_lists' → logprob: -0.9458868503570557
    3. '_list' → logprob: -3.0708868503570557
    4. '_s' → logprob: -3.0708868503570557
    5. '_rows' → logprob: -4.195886611938477
    6. '()' → logprob: -5.695886611938477
    7. '_' → logprob: -6.570886611938477
    8. 'lists' → logprob: -8.945886611938477
    9. 'rows' → logprob: -10.070886611938477
    10. '[]' → logprob: -10.070886611938477

Token 130: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.13083823025226593
    2. '():' → logprob: -2.13083815574646
    3. '(n' → logprob: -6.255838394165039
    4. '(' → logprob: -6.630838394165039
    5. '(name' → logprob: -8.255838394165039
    6. '(size' → logprob: -8.380838394165039
    7. '(num' → logprob: -9.505838394165039
    8. '():
' → logprob: -10.130838394165039
    9. '(length' → logprob: -10.755838394165039
    10. '()' → logprob: -11.505838394165039

Token 131: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.10551977157592773
    2. '_' → logprob: -2.6055197715759277
    3. 's' → logprob: -3.9805197715759277
    4. '(' → logprob: -5.730519771575928
    5. '_s' → logprob: -6.105519771575928
    6. 'of' → logprob: -7.355519771575928
    7. '_lists' → logprob: -8.230520248413086
    8. ')_' → logprob: -8.480520248413086
    9. ')' → logprob: -8.980520248413086
    10. '   ' → logprob: -9.605520248413086

Token 132: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.48650702834129333
    2. 'rows' → logprob: -0.9865070581436157
    3. 'int' → logprob: -5.361506938934326
    4. '_lists' → logprob: -5.611506938934326
    5. 'lists' → logprob: -6.486506938934326
    6. '_int' → logprob: -7.111506938934326
    7. 'ints' → logprob: -7.736506938934326
    8. '_elements' → logprob: -8.361507415771484
    9. 's' → logprob: -8.736507415771484
    10. '_lines' → logprob: -8.861507415771484

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.787507714354433e-05
    2. '):
' → logprob: -10.25004768371582
    3. ')' → logprob: -11.50004768371582
    4. '():' → logprob: -13.87504768371582
    5. ':' → logprob: -14.87504768371582
    6. ' ):' → logprob: -15.00004768371582
    7. '):
' → logprob: -15.50004768371582
    8. ']:' → logprob: -15.62504768371582
    9. '):

' → logprob: -16.25004768371582
    10. '）：' → logprob: -16.25004768371582

Token 134: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5711363554000854
    2. ':' → logprob: -1.5711363554000854
    3. '   ' → logprob: -1.5711363554000854
    4. '(' → logprob: -4.696136474609375
    5. '(number' → logprob: -5.321136474609375
    6. '():
' → logprob: -6.196136474609375
    7. ':
' → logprob: -6.696136474609375
    8. '):' → logprob: -7.321136474609375
    9. '(n' → logprob: -7.696136474609375
    10. '()' → logprob: -7.696136474609375

Token 135: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19043536484241486
    2. ' return' → logprob: -1.9404354095458984
    3. 'return' (adapté à ' return') → logprob: -3.6904354095458984
    4. '
' → logprob: -5.815435409545898
    5. '[
' → logprob: -7.440435409545898
    6. '[' → logprob: -8.065435409545898
    7. '    
' → logprob: -8.690435409545898
    8. '	return' → logprob: -8.940435409545898
    9. ':
' → logprob: -9.190435409545898
    10. '[]' → logprob: -9.315435409545898

Token 136: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08090381324291229
    2. '[int' → logprob: -2.8309037685394287
    3. ' [' → logprob: -4.330904006958008
    4. '[list' → logprob: -5.580904006958008
    5. '[number' → logprob: -7.330904006958008
    6. '[line' → logprob: -7.955904006958008
    7. '[random' → logprob: -9.205904006958008
    8. '[get' → logprob: -9.205904006958008
    9. '[array' → logprob: -9.330904006958008
    10. '   ' → logprob: -9.705904006958008

Token 137: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0009305141866207123
    2. ' read' → logprob: -7.000930309295654
    3. '   ' → logprob: -11.250930786132812
    4. '(read' → logprob: -12.250930786132812
    5. '	read' → logprob: -13.875930786132812
    6. '
' → logprob: -16.500930786132812
    7. '  ' → logprob: -16.500930786132812
    8. ' ' → logprob: -17.125930786132812
    9. '[' → logprob: -17.250930786132812
    10. '    ' → logprob: -17.625930786132812

Token 138: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0025729250628501177
    2. '_single' → logprob: -6.002573013305664
    3. '_list' → logprob: -10.127573013305664
    4. '_str' → logprob: -10.627573013305664
    5. 'int' → logprob: -11.252573013305664
    6. 'single' → logprob: -11.502573013305664
    7. '(_' → logprob: -12.002573013305664
    8. 'list' → logprob: -13.377573013305664
    9. '_line' → logprob: -14.877573013305664
    10. '```' → logprob: -15.002573013305664

Token 139: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.7697225252486533e-06
    2. '_lists' → logprob: -13.125003814697266
    3. '_line' → logprob: -14.875003814697266
    4. '_' → logprob: -14.875003814697266
    5. '_row' → logprob: -15.125003814697266
    6. '_rows' → logprob: -15.250003814697266
    7. 'list' → logprob: -15.375003814697266
    8. '_str' → logprob: -16.375003814697266
    9. 's' → logprob: -17.125003814697266
    10. '_array' → logprob: -17.250003814697266

Token 140: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0564331205387134e-05
    2. '()]' → logprob: -11.62501049041748
    3. '()
' → logprob: -13.62501049041748
    4. ' ()' → logprob: -15.50001049041748
    5. '())' → logprob: -17.000011444091797
    6. '()

' → logprob: -17.875011444091797
    7. '（）' → logprob: -18.125011444091797
    8. '()`' → logprob: -18.875011444091797
    9. '()
' → logprob: -19.125011444091797
    10. '()>' → logprob: -19.250011444091797

Token 141: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -4.60414821645827e-06
    2. '()]' → logprob: -13.125004768371582
    3. 'for' → logprob: -13.500004768371582
    4. ' ()' → logprob: -14.625004768371582
    5. '()
' → logprob: -14.750004768371582
    6. '(number' → logprob: -15.125004768371582
    7. '())' → logprob: -16.875003814697266
    8. '(' → logprob: -17.000003814697266
    9. ')' → logprob: -17.125003814697266
    10. '_' → logprob: -17.625003814697266

Token 142: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.037052106112241745
    2. ' _' → logprob: -3.4120521545410156
    3. '_' → logprob: -5.787052154541016
    4. 'range' → logprob: -8.662052154541016
    5. ' ' → logprob: -8.912052154541016
    6. '_range' → logprob: -11.662052154541016
    7. ' number' → logprob: -12.037052154541016
    8. ' xrange' → logprob: -12.412052154541016
    9. '(range' → logprob: -12.537052154541016
    10. '	range' → logprob: -13.537052154541016

Token 143: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20983578264713287
    2. ' range' → logprob: -1.7098357677459717
    3. ' in' → logprob: -4.834836006164551
    4. 'in' → logprob: -8.20983600616455
    5. '(range' → logprob: -9.33483600616455
    6. ' ' → logprob: -9.83483600616455
    7. '	range' → logprob: -11.95983600616455
    8. '_' → logprob: -12.20983600616455
    9. ' xrange' → logprob: -12.33483600616455
    10. 'number' → logprob: -12.95983600616455

Token 144: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015036711702123284
    2. ' range' → logprob: -6.5015034675598145
    3. '(range' → logprob: -14.001503944396973
    4. 'number' → logprob: -15.126503944396973
    5. '	range' → logprob: -16.251502990722656
    6. ' ' → logprob: -16.501502990722656
    7. ' xrange' → logprob: -17.626502990722656
    8. '   ' → logprob: -17.876502990722656
    9. 'x' → logprob: -18.501502990722656
    10. ')' → logprob: -18.626502990722656

Token 145: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0009282566024921834
    2. '(' → logprob: -7.0009284019470215
    3. 'number' → logprob: -11.000927925109863
    4. ' (' → logprob: -16.37592887878418
    5. '(
' → logprob: -18.00092887878418
    6. ' number' → logprob: -18.37592887878418
    7. '	number' → logprob: -18.50092887878418
    8. '(n' → logprob: -18.75092887878418
    9. '(amount' → logprob: -19.37592887878418
    10. '(numero' → logprob: -19.37592887878418

Token 146: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.00019650737522169948
    2. '_rows' → logprob: -8.62519645690918
    3. 'of' → logprob: -11.00019645690918
    4. ' of' → logprob: -16.25019645690918
    5. 'rows' → logprob: -16.50019645690918
    6. ')' → logprob: -17.25019645690918
    7. '__' → logprob: -18.37519645690918
    8. ')_' → logprob: -18.37519645690918
    9. '_lines' → logprob: -18.50019645690918
    10. '_number' → logprob: -18.62519645690918

Token 147: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.6462314128875732
    2. 'number' → logprob: -0.7712314128875732
    3. 'rows' → logprob: -4.396231651306152
    4. ' number' → logprob: -7.146231651306152
    5. '(number' → logprob: -8.646231651306152
    6. '_' → logprob: -9.646231651306152
    7. ' ' → logprob: -9.896231651306152
    8. ')' → logprob: -9.896231651306152
    9. '_number' → logprob: -10.021231651306152
    10. '[number' → logprob: -11.396231651306152

Token 148: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02983240596950054
    2. ']' → logprob: -3.529832363128662
    3. ')' → logprob: -9.52983283996582
    4. '()]' → logprob: -11.90483283996582
    5. '])' → logprob: -14.40483283996582
    6. ']
' → logprob: -14.65483283996582
    7. '])]' → logprob: -14.77983283996582
    8. ')],' → logprob: -15.52983283996582
    9. '}]' → logprob: -15.52983283996582
    10. ')]
' → logprob: -15.77983283996582

Token 149: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017413580790162086
    2. '
' → logprob: -4.64241361618042
    3. '#' → logprob: -5.64241361618042
    4. 'class' → logprob: -6.14241361618042
    5. 'd' → logprob: -6.64241361618042
    6. '\' → logprob: -7.76741361618042
    7. '

' → logprob: -9.642413139343262
    8. '\n' → logprob: -10.142413139343262
    9. '
' → logprob: -10.642413139343262
    10. 'de' → logprob: -10.767413139343262

Token 150: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.32901227474212646
    2. 'main' → logprob: -1.4540122747421265
    3. 'binary' → logprob: -4.579012393951416
    4. ' solve' → logprob: -4.579012393951416
    5. 'solve' → logprob: -4.579012393951416
    6. ' binary' → logprob: -5.329012393951416
    7. ' is' → logprob: -5.579012393951416
    8. 'is' → logprob: -6.329012393951416
    9. ' bfs' → logprob: -7.204012393951416
    10. ' dfs' → logprob: -7.704012393951416

Token 151: '_char' (ID: 23398)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.3050190210342407
    2. '_single' → logprob: -1.6800190210342407
    3. '_char' → logprob: -3.430018901824951
    4. '_line' → logprob: -3.805018901824951
    5. '_' → logprob: -5.305018901824951
    6. '_string' → logprob: -5.430018901824951
    7. '_float' → logprob: -5.555018901824951
    8. '_int' → logprob: -5.555018901824951
    9. '_list' → logprob: -6.555018901824951
    10. '_double' → logprob: -7.180018901824951

Token 152: '_rows' (ID: 26013)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0003758575767278671
    2. '_' → logprob: -8.750375747680664
    3. '_array' → logprob: -9.750375747680664
    4. 's' → logprob: -9.875375747680664
    5. '()' → logprob: -10.250375747680664
    6. 'list' → logprob: -10.750375747680664
    7. '_lists' → logprob: -10.875375747680664
    8. '_string' → logprob: -12.250375747680664
    9. '_lst' → logprob: -12.250375747680664
    10. 'List' → logprob: -12.375375747680664

Token 153: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0016936269821599126
    2. '(' → logprob: -6.5016937255859375
    3. '(n' → logprob: -8.626693725585938
    4. '(num' → logprob: -12.001693725585938
    5. '(size' → logprob: -12.626693725585938
    6. '(
' → logprob: -14.626693725585938
    7. '[number' → logprob: -15.001693725585938
    8. '(numero' → logprob: -15.001693725585938
    9. '(length' → logprob: -15.126693725585938
    10. ' (' → logprob: -15.626693725585938

Token 154: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.339278580620885e-06
    2. 'of' → logprob: -13.000001907348633
    3. ' of' → logprob: -17.000001907348633
    4. 's' → logprob: -17.500001907348633
    5. '_for' → logprob: -18.125001907348633
    6. '_OF' → logprob: -18.375001907348633
    7. 'Of' → logprob: -19.000001907348633
    8. ')' → logprob: -19.375001907348633
    9. '__' → logprob: -19.625001907348633
    10. '_rows' → logprob: -20.375001907348633

Token 155: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.0007911669090390205
    2. 'rows' → logprob: -7.250791072845459
    3. '_lines' → logprob: -9.875791549682617
    4. '_list' → logprob: -12.000791549682617
    5. '_chars' → logprob: -12.000791549682617
    6. '_' → logprob: -12.375791549682617
    7. '_row' → logprob: -12.750791549682617
    8. 'row' → logprob: -13.125791549682617
    9. '_char' → logprob: -13.125791549682617
    10. 'char' → logprob: -13.875791549682617

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00031699295504949987
    2. ')' → logprob: -8.500316619873047
    3. '):
' → logprob: -9.125316619873047
    4. '(number' → logprob: -12.875316619873047
    5. ' ):' → logprob: -14.375316619873047
    6. '(n' → logprob: -14.625316619873047
    7. ':' → logprob: -14.750316619873047
    8. '):
' → logprob: -14.875316619873047
    9. 'number' → logprob: -16.000316619873047
    10. '):

' → logprob: -16.500316619873047

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003692120546475053
    2. ':' → logprob: -5.753692150115967
    3. ':
' → logprob: -8.503691673278809
    4. ' return' → logprob: -8.878691673278809
    5. '(' → logprob: -9.628691673278809
    6. 'return' → logprob: -10.878691673278809
    7. '	return' → logprob: -11.003691673278809
    8. '():' → logprob: -11.003691673278809
    9. ' ' → logprob: -11.378691673278809
    10. ' :' → logprob: -11.503691673278809

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3786966800689697
    2. '   ' → logprob: -1.5036966800689697
    3. ' return' → logprob: -2.3786966800689697
    4. '	return' → logprob: -9.62869644165039
    5. 'def' → logprob: -9.87869644165039
    6. '
' → logprob: -10.00369644165039
    7. ' ' → logprob: -10.12869644165039
    8. '  ' → logprob: -11.37869644165039
    9. 'result' → logprob: -11.37869644165039
    10. '[' → logprob: -11.75369644165039

Token 159: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003269095439463854
    2. '[list' → logprob: -5.753269195556641
    3. ' [' → logprob: -9.75326919555664
    4. '[List' → logprob: -11.00326919555664
    5. '[line' → logprob: -11.62826919555664
    6. '[result' → logprob: -13.12826919555664
    7. '[get' → logprob: -13.62826919555664
    8. '[random' → logprob: -13.62826919555664
    9. '[cur' → logprob: -14.75326919555664
    10. '[int' → logprob: -14.87826919555664

Token 160: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0007113590254448354
    2. 'list' → logprob: -7.250711441040039
    3. ' read' → logprob: -14.250711441040039
    4. 'sys' → logprob: -14.375711441040039
    5. '(read' → logprob: -15.625711441040039
    6. '	read' → logprob: -18.25071144104004
    7. '   ' → logprob: -19.25071144104004
    8. '
' → logprob: -19.25071144104004
    9. 'copy' → logprob: -19.62571144104004
    10. 'deque' → logprob: -19.87571144104004

Token 161: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.306760805164231e-05
    2. '_str' → logprob: -11.75001335144043
    3. 'char' → logprob: -12.25001335144043
    4. '_single' → logprob: -15.75001335144043
    5. '_' → logprob: -16.12501335144043
    6. 'Char' → logprob: -17.00001335144043
    7. 'str' → logprob: -17.62501335144043
    8. '```' → logprob: -17.75001335144043
    9. '_chr' → logprob: -18.00001335144043
    10. '_line' → logprob: -18.12501335144043

Token 162: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00031615851912647486
    2. '_rows' → logprob: -8.625316619873047
    3. '_row' → logprob: -9.625316619873047
    4. '_' → logprob: -9.875316619873047
    5. '_line' → logprob: -11.750316619873047
    6. 'list' → logprob: -12.750316619873047
    7. 's' → logprob: -12.750316619873047
    8. '(_' → logprob: -13.625316619873047
    9. '```' → logprob: -13.875316619873047
    10. '_lines' → logprob: -14.000316619873047

Token 163: '()' (ID: 416)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.011436698958277702
    2. '()' → logprob: -4.511436462402344
    3. '(' → logprob: -8.011436462402344
    4. '(n' → logprob: -10.511436462402344
    5. '(i' → logprob: -10.636436462402344
    6. ' (' → logprob: -13.261436462402344
    7. 'for' → logprob: -13.511436462402344
    8. 'number' → logprob: -14.136436462402344
    9. '((' → logprob: -14.386436462402344
    10. '(_' → logprob: -15.011436462402344

Token 164: ' for' (ID: 395)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0796641856431961
    2. '()' → logprob: -2.5796642303466797
    3. '(' → logprob: -7.32966423034668
    4. 'for' → logprob: -9.32966423034668
    5. '(n' → logprob: -11.20466423034668
    6. 'number' → logprob: -12.07966423034668
    7. ' for' → logprob: -13.32966423034668
    8. '()]' → logprob: -13.32966423034668
    9. '(i' → logprob: -13.57966423034668
    10. ')' → logprob: -13.57966423034668

Token 165: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12694627046585083
    2. ' _' → logprob: -2.126946210861206
    3. ' range' → logprob: -11.126946449279785
    4. 'range' → logprob: -13.626946449279785
    5. ' ' → logprob: -14.126946449279785
    6. ' ' → logprob: -14.251946449279785
    7. ' in' → logprob: -14.626946449279785
    8. '_range' → logprob: -14.876946449279785
    9. ' number' → logprob: -16.37694549560547
    10. 'number' → logprob: -18.00194549560547

Token 166: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2015840858221054
    2. ' range' → logprob: -1.7015841007232666
    3. '_' → logprob: -8.951583862304688
    4. ' in' → logprob: -10.826583862304688
    5. 'in' → logprob: -11.701583862304688
    6. '_range' → logprob: -12.076583862304688
    7. '(range' → logprob: -12.076583862304688
    8. ' _' → logprob: -14.326583862304688
    9. ' ' → logprob: -14.826583862304688
    10. '	range' → logprob: -15.076583862304688

Token 167: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023247575387358665
    2. ' range' → logprob: -3.773247480392456
    3. '(range' → logprob: -13.398247718811035
    4. 'number' → logprob: -15.023247718811035
    5. '	range' → logprob: -15.648247718811035
    6. ' ' → logprob: -17.77324676513672
    7. '   ' → logprob: -17.77324676513672
    8. '_range' → logprob: -18.02324676513672
    9. '_' → logprob: -18.64824676513672
    10. '  ' → logprob: -18.77324676513672

Token 168: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.012354591861367226
    2. 'number' → logprob: -4.637354373931885
    3. '(' → logprob: -6.012354373931885
    4. ' number' → logprob: -9.637354850769043
    5. 'range' → logprob: -10.137354850769043
    6. ' (' → logprob: -10.762354850769043
    7. '(range' → logprob: -10.887354850769043
    8. ' range' → logprob: -13.762354850769043
    9. '	number' → logprob: -14.512354850769043
    10. '[number' → logprob: -15.762354850769043

Token 169: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.633853652398102e-05
    2. 'of' → logprob: -10.000056266784668
    3. '_rows' → logprob: -11.625056266784668
    4. 'Of' → logprob: -13.625056266784668
    5. '_OF' → logprob: -14.250056266784668
    6. ' of' → logprob: -16.750057220458984
    7. ')' → logprob: -18.250057220458984
    8. ')_' → logprob: -18.250057220458984
    9. '-of' → logprob: -18.375057220458984
    10. 'rows' → logprob: -18.375057220458984

Token 170: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.0003392767102923244
    2. 'rows' → logprob: -8.00033950805664
    3. '_' → logprob: -13.37533950805664
    4. '_ROWS' → logprob: -14.25033950805664
    5. '_chars' → logprob: -15.12533950805664
    6. '_lines' → logprob: -15.37533950805664
    7. 'Rows' → logprob: -15.37533950805664
    8. '_char' → logprob: -15.87533950805664
    9. 'char' → logprob: -16.12533950805664
    10. '	rows' → logprob: -16.12533950805664

Token 171: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.33053991198539734
    2. ']' → logprob: -1.3305399417877197
    3. ')' → logprob: -4.080539703369141
    4. '()]' → logprob: -8.83053970336914
    5. '   ' → logprob: -9.83053970336914
    6. ' ]' → logprob: -11.20553970336914
    7. ']
' → logprob: -12.95553970336914
    8. ')])' → logprob: -12.95553970336914
    9. ':]' → logprob: -12.95553970336914
    10. '`]' → logprob: -13.08053970336914

Token 172: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018904728814959526
    2. '
' → logprob: -4.393904685974121
    3. 'd' → logprob: -5.768904685974121
    4. '#' → logprob: -6.518904685974121
    5. 'class' → logprob: -6.643904685974121
    6. '

' → logprob: -8.518904685974121
    7. '\' → logprob: -9.018904685974121
    8. 'de' → logprob: -10.518904685974121
    9. '\n' → logprob: -10.768904685974121
    10. '<|end|>' → logprob: -11.018904685974121

Token 173: ' read' (ID: 1729)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10781434923410416
    2. 'read' → logprob: -2.857814311981201
    3. 'solve' → logprob: -3.982814311981201
    4. ' main' → logprob: -4.232814311981201
    5. 'binary' → logprob: -5.107814311981201
    6. 'is' → logprob: -6.357814311981201
    7. 'pow' → logprob: -7.732814311981201
    8. ' read' → logprob: -7.982814311981201
    9. 'max' → logprob: -7.982814311981201
    10. 'dfs' → logprob: -8.10781478881836

Token 174: '_list' (ID: 4162)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.6201010346412659
    2. '_str' → logprob: -0.9951010346412659
    3. '_' → logprob: -3.495100975036621
    4. '_line' → logprob: -4.245100975036621
    5. '_string' → logprob: -4.495100975036621
    6. '_int' → logprob: -4.620100975036621
    7. '_list' → logprob: -4.870100975036621
    8. '()' → logprob: -5.370100975036621
    9. '_char' → logprob: -5.370100975036621
    10. '_float' → logprob: -6.245100975036621

Token 175: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0009030037908814847
    2. '_' → logprob: -7.750903129577637
    3. 'of' → logprob: -8.250903129577637
    4. '(' → logprob: -10.250903129577637
    5. '_int' → logprob: -10.375903129577637
    6. ' of' → logprob: -10.375903129577637
    7. '<|end|>' → logprob: -10.375903129577637
    8. '()' → logprob: -11.125903129577637
    9. '(int' → logprob: -11.375903129577637
    10. '<int' → logprob: -11.625903129577637

Token 176: '_str' (ID: 6182)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0025869545061141253
    2. '_str' → logprob: -6.377586841583252
    3. 'int' → logprob: -7.502586841583252
    4. '_char' → logprob: -8.25258731842041
    5. 'str' → logprob: -10.25258731842041
    6. '_list' → logprob: -11.12758731842041
    7. '_lists' → logprob: -11.62758731842041
    8. '(int' → logprob: -12.12758731842041
    9. 'char' → logprob: -13.25258731842041
    10. 'read' → logprob: -13.87758731842041

Token 177: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.012694817036390305
    2. 's' → logprob: -4.887694835662842
    3. '_list' → logprob: -5.637694835662842
    4. '_' → logprob: -6.637694835662842
    5. 'lists' → logprob: -9.762694358825684
    6. '<|end|>' → logprob: -10.012694358825684
    7. '_rows' → logprob: -10.262694358825684
    8. '_s' → logprob: -10.512694358825684
    9. '_arrays' → logprob: -11.637694358825684
    10. 'Lists' → logprob: -12.262694358825684

Token 178: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.875024795532227
    3. '(n' → logprob: -12.750024795532227
    4. '(
' → logprob: -14.000024795532227
    5. 'number' → logprob: -14.125024795532227
    6. ' (' → logprob: -15.250024795532227
    7. '(num' → logprob: -15.250024795532227
    8. '(name' → logprob: -16.000024795532227
    9. '(size' → logprob: -16.000024795532227
    10. '[number' → logprob: -16.125024795532227

Token 179: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.9385402993066236e-05
    2. 'of' → logprob: -10.875019073486328
    3. ' of' → logprob: -16.000019073486328
    4. '   ' → logprob: -16.250019073486328
    5. '_for' → logprob: -17.000019073486328
    6. ')' → logprob: -17.375019073486328
    7. '_rows' → logprob: -17.500019073486328
    8. ')_' → logprob: -17.625019073486328
    9. '_OF' → logprob: -17.625019073486328
    10. '```' → logprob: -18.000019073486328

Token 180: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -0.029823746532201767
    2. 'rows' → logprob: -3.5298237800598145
    3. '_lines' → logprob: -10.154823303222656
    4. 'def' → logprob: -11.154823303222656
    5. 'row' → logprob: -12.779823303222656
    6. 'Rows' → logprob: -13.029823303222656
    7. '_words' → logprob: -13.404823303222656
    8. 'lines' → logprob: -13.529823303222656
    9. '_strings' → logprob: -13.904823303222656
    10. '(rows' → logprob: -13.904823303222656

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012384448200464249
    2. '):
' → logprob: -6.8762383460998535
    3. ')' → logprob: -8.876238822937012
    4. '(number' → logprob: -9.751238822937012
    5. 'number' → logprob: -12.876238822937012
    6. ':' → logprob: -13.376238822937012
    7. '):
' → logprob: -14.251238822937012
    8. '   ' → logprob: -14.376238822937012
    9. '(n' → logprob: -14.501238822937012
    10. ' ):' → logprob: -14.501238822937012

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006055947858840227
    2. ':' → logprob: -5.13105583190918
    3. '():' → logprob: -10.25605583190918
    4. '(' → logprob: -10.38105583190918
    5. '	return' → logprob: -11.38105583190918
    6. '    ' → logprob: -11.50605583190918
    7. ' return' → logprob: -11.88105583190918
    8. ':
' → logprob: -12.50605583190918
    9. '  ' → logprob: -12.50605583190918
    10. 'return' → logprob: -12.63105583190918

Token 183: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10815282166004181
    2. ' return' → logprob: -2.3581528663635254
    3. 'return' (adapté à ' return') → logprob: -4.858152866363525
    4. '	return' → logprob: -9.858152389526367
    5. ':return' → logprob: -10.108152389526367
    6. ' ' → logprob: -11.608152389526367
    7. '{return' → logprob: -11.733152389526367
    8. '    ' → logprob: -11.733152389526367
    9. ':' → logprob: -11.858152389526367
    10. '[' → logprob: -12.358152389526367

Token 184: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009819959290325642
    2. ' [' → logprob: -4.634819984436035
    3. '[list' → logprob: -10.009819984436035
    4. 'read' → logprob: -12.134819984436035
    5. '[List' → logprob: -12.509819984436035
    6. ' ' → logprob: -12.884819984436035
    7. '   ' → logprob: -13.384819984436035
    8. '[line' → logprob: -14.009819984436035
    9. '[int' → logprob: -14.009819984436035
    10. '[str' → logprob: -14.134819984436035

Token 185: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -2.2200749754119897e-06
    2. 'list' → logprob: -13.750001907348633
    3. ' read' → logprob: -14.125001907348633
    4. 'sys' → logprob: -15.375001907348633
    5. '(read' → logprob: -16.125001907348633
    6. 'str' → logprob: -17.250001907348633
    7. '	read' → logprob: -17.625001907348633
    8. '
' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '.read' → logprob: -19.750001907348633

Token 186: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -6.790129555156454e-05
    2. 'str' → logprob: -9.625067710876465
    3. '_' → logprob: -13.625067710876465
    4. 'list' → logprob: -15.875067710876465
    5. '_list' → logprob: -16.37506866455078
    6. '_single' → logprob: -16.62506866455078
    7. 'single' → logprob: -17.00006866455078
    8. '_string' → logprob: -17.00006866455078
    9. 'def' → logprob: -17.50006866455078
    10. '_char' → logprob: -17.50006866455078

Token 187: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.935296834039036e-06
    2. '_lists' → logprob: -13.12500286102295
    3. '_str' → logprob: -14.62500286102295
    4. 'list' → logprob: -15.25000286102295
    5. '_rows' → logprob: -16.375003814697266
    6. '```' → logprob: -17.250003814697266
    7. '_' → logprob: -17.500003814697266
    8. '_row' → logprob: -18.625003814697266
    9. '_lst' → logprob: -19.000003814697266
    10. 's' → logprob: -19.125003814697266

Token 188: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2538074254989624
    2. '(number' → logprob: -1.5038074254989624
    3. '()]' → logprob: -6.378807544708252
    4. '(' → logprob: -9.128807067871094
    5. '(n' → logprob: -11.128807067871094
    6. 'number' → logprob: -11.128807067871094
    7. '()
' → logprob: -11.503807067871094
    8. ' ()' → logprob: -11.503807067871094
    9. '()(' → logprob: -11.878807067871094
    10. '())' → logprob: -12.378807067871094

Token 189: ' for' (ID: 395)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.03300059214234352
    2. '()' → logprob: -3.7830007076263428
    3. '(' → logprob: -4.658000469207764
    4. 'for' → logprob: -9.033000946044922
    5. '(_' → logprob: -10.658000946044922
    6. 'number' → logprob: -10.908000946044922
    7. '(n' → logprob: -10.908000946044922
    8. '()]' → logprob: -11.158000946044922
    9. '(for' → logprob: -12.158000946044922
    10. '(_)' → logprob: -12.158000946044922

Token 190: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.705402135848999
    2. ' range' → logprob: -1.205402135848999
    3. ' number' → logprob: -2.080402135848999
    4. ' _' → logprob: -2.580402135848999
    5. 'number' → logprob: -5.830402374267578
    6. 'range' → logprob: -6.330402374267578
    7. '(number' → logprob: -7.205402374267578
    8. '_range' → logprob: -8.580402374267578
    9. '(range' → logprob: -9.080402374267578
    10. ' ' → logprob: -9.830402374267578

Token 191: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6249440312385559
    2. 'number' → logprob: -1.3749439716339111
    3. ' range' → logprob: -1.7499439716339111
    4. ' number' → logprob: -3.374943971633911
    5. '(number' → logprob: -5.99994421005249
    6. '_' → logprob: -6.87494421005249
    7. ' in' → logprob: -9.249943733215332
    8. '(range' → logprob: -9.249943733215332
    9. '(' → logprob: -9.374943733215332
    10. 'in' → logprob: -11.124943733215332

Token 192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2902631163597107
    2. ' range' → logprob: -1.7902631759643555
    3. 'number' → logprob: -2.5402631759643555
    4. ' number' → logprob: -5.1652631759643555
    5. '(number' → logprob: -7.7902631759643555
    6. '(range' → logprob: -10.290263175964355
    7. '(' → logprob: -12.040263175964355
    8. '_' → logprob: -13.040263175964355
    9. ' ' → logprob: -14.040263175964355
    10. '_range' → logprob: -14.415263175964355

Token 193: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.02981552481651306
    2. 'number' → logprob: -3.529815435409546
    3. '(' → logprob: -10.529815673828125
    4. ' number' → logprob: -10.529815673828125
    5. ' (' → logprob: -11.404815673828125
    6. '[number' → logprob: -15.904815673828125
    7. '	number' → logprob: -16.529815673828125
    8. 'range' → logprob: -16.779815673828125
    9. '(n' → logprob: -17.029815673828125
    10. '<number' → logprob: -17.154815673828125

Token 194: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.5776860184123507e-06
    2. '_rows' → logprob: -13.50000286102295
    3. 'of' → logprob: -13.75000286102295
    4. '_OF' → logprob: -18.375001907348633
    5. 'Of' → logprob: -18.500001907348633
    6. ' of' → logprob: -19.000001907348633
    7. 'ofs' → logprob: -20.625001907348633
    8. '```' → logprob: -20.625001907348633
    9. 'rows' → logprob: -20.750001907348633
    10. '_or' → logprob: -21.125001907348633

Token 195: '_rows' (ID: 26013)
  Prédit: '_rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rows' → logprob: -2.8802491215174086e-05
    2. 'rows' → logprob: -10.500028610229492
    3. '_lines' → logprob: -14.375028610229492
    4. '_ROWS' → logprob: -15.625028610229492
    5. '_ro' → logprob: -15.750028610229492
    6. '_' → logprob: -16.500028610229492
    7. '	rows' → logprob: -16.875028610229492
    8. ')' → logprob: -17.250028610229492
    9. '```' → logprob: -17.375028610229492
    10. '_row' → logprob: -17.750028610229492

Token 196: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004232496954500675
    2. ']' → logprob: -5.504232406616211
    3. ')' → logprob: -8.879232406616211
    4. '()]' → logprob: -11.254232406616211
    5. ')]
' → logprob: -15.504232406616211
    6. ' ]' → logprob: -15.629232406616211
    7. '])' → logprob: -15.754232406616211
    8. '])]' → logprob: -15.754232406616211
    9. 'def' → logprob: -15.879232406616211
    10. '(' → logprob: -15.879232406616211

Token 197: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30433839559555054
    2. 'd' → logprob: -1.6793384552001953
    3. '#' → logprob: -2.8043384552001953
    4. '
' → logprob: -4.554338455200195
    5. 'class' → logprob: -6.179338455200195
    6. '\' → logprob: -6.929338455200195
    7. 'de' → logprob: -7.679338455200195
    8. 'n' → logprob: -7.804338455200195
    9. 'a' → logprob: -8.804338455200195
    10. '

' → logprob: -9.179338455200195

Token 198: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4569416642189026
    2. '.stdout' → logprob: -1.7069416046142578
    3. '.stdin' → logprob: -2.331941604614258
    4. '.exit' → logprob: -2.456941604614258
    5. '.stderr' → logprob: -6.331941604614258
    6. '.argv' → logprob: -7.331941604614258
    7. '.readline' → logprob: -9.956941604614258
    8. '.setdefault' → logprob: -10.706941604614258
    9. '.path' → logprob: -11.581941604614258
    10. '.std' → logprob: -11.706941604614258

Token 199: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -9.758300438988954e-05
    2. 'limit' → logprob: -9.750097274780273
    3. '_rec' → logprob: -11.000097274780273
    4. 'set' → logprob: -11.750097274780273
    5. 're' → logprob: -12.375097274780273
    6. 'stdin' → logprob: -13.000097274780273
    7. 'ursion' → logprob: -13.625097274780273
    8. ' recursion' → logprob: -14.000097274780273
    9. '_' → logprob: -14.625097274780273
    10. 'execution' → logprob: -14.750097274780273

Token 200: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -3.857719275401905e-05
    2. 'urs' → logprob: -10.875038146972656
    3. 'ursive' → logprob: -12.375038146972656
    4. 'ursor' → logprob: -12.500038146972656
    5. 'usion' → logprob: -12.500038146972656
    6. 'ur' → logprob: -12.500038146972656
    7. 'limit' → logprob: -13.000038146972656
    8. 'usr' → logprob: -14.750038146972656
    9. 'urst' → logprob: -15.250038146972656
    10. 'urf' → logprob: -15.750038146972656

Token 201: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.8624639324116288e-06
    2. ' limit' → logprob: -13.750001907348633
    3. '_limit' → logprob: -14.250001907348633
    4. 'lim' → logprob: -16.500001907348633
    5. 'depth' → logprob: -18.625001907348633
    6. 'Limit' → logprob: -19.500001907348633
    7. '-limit' → logprob: -19.875001907348633
    8. '(limit' → logprob: -21.125001907348633
    9. '.limit' → logprob: -21.250001907348633
    10. 'limits' → logprob: -21.750001907348633

Token 202: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5570885807392187e-05
    2. '(
' → logprob: -11.125015258789062
    3. ' (' → logprob: -15.000015258789062
    4. '((' → logprob: -15.000015258789062
    5. '(int' → logprob: -16.375015258789062
    6. '(

' → logprob: -16.750015258789062
    7. '100' → logprob: -17.500015258789062
    8. '()' → logprob: -17.750015258789062
    9. '(sys' → logprob: -17.875015258789062
    10. '(
' → logprob: -18.625015258789062

Token 203: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0031859094742685556
    2. '100' → logprob: -5.753185749053955
    3. '200' → logprob: -13.003186225891113
    4. ' ' → logprob: -13.503186225891113
    5. '300' → logprob: -13.628186225891113
    6. '400' → logprob: -14.003186225891113
    7. '500' → logprob: -14.128186225891113
    8. '999' → logprob: -14.128186225891113
    9. '1' → logprob: -15.253186225891113
    10. '250' → logprob: -15.378186225891113

Token 204: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.006729576736688614
    2. '00' → logprob: -5.006729602813721
    3. '_' → logprob: -11.756729125976562
    4. '0' → logprob: -12.006729125976562
    5. '001' → logprob: -16.381729125976562
    6. '007' → logprob: -16.381729125976562
    7. '010' → logprob: -17.381729125976562
    8. '006' → logprob: -18.131729125976562
    9. '005' → logprob: -18.881729125976562
    10. '002' → logprob: -19.131729125976562

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38687679171562195
    2. ')' → logprob: -1.1368768215179443
    3. ' )' → logprob: -12.386877059936523
    4. '1' → logprob: -14.761877059936523
    5. '00' → logprob: -15.386877059936523
    6. '))' → logprob: -15.386877059936523
    7. '(' → logprob: -15.511877059936523
    8. '()' → logprob: -16.261877059936523
    9. ' ' → logprob: -16.386877059936523
    10. ')
' → logprob: -16.511877059936523

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -16.5
    4. '))' → logprob: -17.875
    5. ')

' → logprob: -18.75
    6. ')`' → logprob: -18.875
    7. ')
' → logprob: -19.75
    8. '
' → logprob: -20.125
    9. '),' → logprob: -20.25
    10. ')}' → logprob: -20.75

Token 207: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.762218713760376
    2. 'def' → logprob: -1.012218713760376
    3. 'class' → logprob: -1.887218713760376
    4. '

' → logprob: -4.887218475341797
    5. '#' → logprob: -5.262218475341797
    6. '\n' → logprob: -5.887218475341797
    7. '\' → logprob: -6.887218475341797
    8. '<|end|>' → logprob: -7.137218475341797
    9. '' → logprob: -8.387218475341797
    10. 'import' → logprob: -8.512218475341797

Token 208: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07052849978208542
    2. '=' → logprob: -2.695528507232666
    3. ' ' → logprob: -7.820528507232666
    4. '_' → logprob: -8.695528030395508
    5. ' =
' → logprob: -12.070528030395508
    6. ',' → logprob: -12.445528030395508
    7. ' =)' → logprob: -12.445528030395508
    8. ' _' → logprob: -12.820528030395508
    9. ')' → logprob: -13.195528030395508
    10. ' ' → logprob: -14.070528030395508

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05562011897563934
    2. '=' → logprob: -2.9306201934814453
    3. ' ' → logprob: -7.305620193481445
    4. '_' → logprob: -9.930620193481445
    5. ',' → logprob: -11.680620193481445
    6. ' =
' → logprob: -12.555620193481445
    7. ' ,' → logprob: -13.680620193481445
    8. ' ' → logprob: -14.305620193481445
    9. '  ' → logprob: -14.430620193481445
    10. ' =)' → logprob: -14.555620193481445

Token 210: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0435139425098896
    2. '100' → logprob: -3.5435140132904053
    3. ' ' → logprob: -4.293513774871826
    4. '1' → logprob: -11.418514251708984
    5. 'int' → logprob: -13.793514251708984
    6. '998' → logprob: -15.418514251708984
    7. '(' → logprob: -16.668514251708984
    8. ' int' → logprob: -17.418514251708984
    9. '```' → logprob: -17.668514251708984
    10. ' ' → logprob: -18.043514251708984

Token 211: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.575955867767334
    2. '100' → logprob: -0.825955867767334
    3. '998' → logprob: -11.700956344604492
    4. '1' → logprob: -12.075956344604492
    5. 'int' → logprob: -13.075956344604492
    6. ' ' → logprob: -14.950956344604492
    7. '999' → logprob: -17.325956344604492
    8. '(' → logprob: -17.575956344604492
    9. '123' → logprob: -17.575956344604492
    10. '```' → logprob: -17.575956344604492

Token 212: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.000721487682312727
    2. '9' → logprob: -7.875721454620361
    3. '7' → logprob: -9.00072193145752
    4. '07' → logprob: -9.12572193145752
    5. '09' → logprob: -10.37572193145752
    6. '_' → logprob: -10.62572193145752
    7. '+' → logprob: -11.62572193145752
    8. '00' → logprob: -11.75072193145752
    9. '007' → logprob: -11.75072193145752
    10. '%' → logprob: -12.00072193145752

Token 213: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0017840604996308684
    2. '007' → logprob: -6.376783847808838
    3. '7' → logprob: -10.126784324645996
    4. '+' → logprob: -10.876784324645996
    5. '19' → logprob: -11.626784324645996
    6. '07' → logprob: -12.126784324645996
    7. '0' → logprob: -12.501784324645996
    8. '00' → logprob: -13.626784324645996
    9. '9' → logprob: -14.001784324645996
    10. '_' → logprob: -14.251784324645996

Token 214: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. '07' → logprob: -15.000000953674316
    3. '+' → logprob: -15.625000953674316
    4. '9' → logprob: -16.75
    5. ' ' → logprob: -18.125
    6. '```' → logprob: -18.375
    7. ' +' → logprob: -19.625
    8. '0' → logprob: -20.75
    9. '
' → logprob: -21.25
    10. '007' → logprob: -21.625

Token 215: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026843924075365067
    2. '

' → logprob: -3.901844024658203
    3. 'def' → logprob: -5.276844024658203
    4. '\n' → logprob: -7.151844024658203
    5. '
' → logprob: -8.401844024658203
    6. '' → logprob: -9.651844024658203
    7. '#' → logprob: -10.901844024658203
    8. '<|end|>' → logprob: -11.026844024658203
    9. 'class' → logprob: -11.401844024658203
    10. '\' → logprob: -11.526844024658203

Token 216: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00193458900321275
    2. 'class' → logprob: -6.25193452835083
    3. 'de' → logprob: -13.251935005187988
    4. 'd' → logprob: -13.501935005187988
    5. '#' → logprob: -13.876935005187988
    6. '\' → logprob: -14.251935005187988
    7. '
' → logprob: -14.376935005187988
    8. ' def' → logprob: -15.251935005187988
    9. '

' → logprob: -16.626934051513672
    10. 'ndef' → logprob: -16.626934051513672

Token 217: ' Problem' (ID: 26113)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04652513563632965
    2. 'd' → logprob: -3.421525239944458
    3. 'class' → logprob: -4.546525001525879
    4. '#' → logprob: -6.796525001525879
    5. 'de' → logprob: -7.046525001525879
    6. '_' → logprob: -10.296525001525879
    7. ' def' → logprob: -10.421525001525879
    8. '(' → logprob: -10.546525001525879
    9. 'import' → logprob: -11.046525001525879
    10. 'n' → logprob: -11.296525001525879

Token 218: ' A' (ID: 355)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2281573861837387
    2. '_' → logprob: -2.2281572818756104
    3. ':' → logprob: -2.6031572818756104
    4. '#' → logprob: -5.2281575202941895
    5. '<|end|>' → logprob: -5.8531575202941895
    6. '
' → logprob: -6.1031575202941895
    7. '_description' → logprob: -6.2281575202941895
    8. ' ' → logprob: -6.3531575202941895
    9. '

' → logprob: -6.7281575202941895
    10. '_name' → logprob: -6.7281575202941895

Token 219: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0937260165810585
    2. ':' → logprob: -2.4687259197235107
    3. '
' → logprob: -5.96872615814209
    4. ':def' → logprob: -7.46872615814209
    5. '_' → logprob: -7.59372615814209
    6. ' def' → logprob: -7.71872615814209
    7. '\' → logprob: -8.84372615814209
    8. '

' → logprob: -9.09372615814209
    9. '#' → logprob: -9.21872615814209
    10. ':
' → logprob: -9.46872615814209

Token 220: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029892342165112495
    2. 'class' → logprob: -3.5298924446105957
    3. ' def' → logprob: -9.529891967773438
    4. 'n' → logprob: -10.279891967773438
    5. ' class' → logprob: -10.779891967773438
    6. '#' → logprob: -12.529891967773438
    7. '
' → logprob: -13.154891967773438
    8. 'import' → logprob: -13.279891967773438
    9. 'de' → logprob: -13.904891967773438
    10. 'from' → logprob: -13.904891967773438

Token 221: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.2221526950597763
    2. ' main' → logprob: -1.8471527099609375
    3. 'solve' → logprob: -3.9721527099609375
    4. ' max' → logprob: -4.8471527099609375
    5. ' count' → logprob: -4.9721527099609375
    6. ' dfs' → logprob: -6.3471527099609375
    7. 'main' → logprob: -6.7221527099609375
    8. ' find' → logprob: -7.0971527099609375
    9. 'count' → logprob: -7.8471527099609375
    10. ' problem' → logprob: -7.8471527099609375

Token 222: '_problem' (ID: 162384)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002019907406065613
    2. ' ():' → logprob: -8.875202178955078
    3. '():
' → logprob: -10.500202178955078
    4. '(A' → logprob: -11.250202178955078
    5. '()' → logprob: -11.875202178955078
    6. '_A' → logprob: -12.000202178955078
    7. 'A' → logprob: -12.500202178955078
    8. '_' → logprob: -13.625202178955078
    9. '(' → logprob: -13.625202178955078
    10. '(a' → logprob: -13.875202178955078

Token 223: '_A' (ID: 6829)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11639484763145447
    2. '_A' → logprob: -2.6163947582244873
    3. '_a' → logprob: -3.6163947582244873
    4. 'a' → logprob: -4.616394996643066
    5. '(a' → logprob: -11.366394996643066
    6. ' A' → logprob: -11.616394996643066
    7. '```' → logprob: -11.741394996643066
    8. '():' → logprob: -12.366394996643066
    9. '(A' → logprob: -12.491394996643066
    10. '():
' → logprob: -13.616394996643066

Token 224: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0028767958283424377
    2. ' ():' → logprob: -5.8778767585754395
    3. '(' → logprob: -10.002877235412598
    4. '():
' → logprob: -11.252877235412598
    5. '()' → logprob: -11.627877235412598
    6. ' ()' → logprob: -13.877877235412598
    7. '(params' → logprob: -14.377877235412598
    8. '(:' → logprob: -14.752877235412598
    9. ' (' → logprob: -14.752877235412598
    10. '(args' → logprob: -15.002877235412598

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014899849193170667
    2. '    
' → logprob: -7.501490116119385
    3. '(' → logprob: -7.751490116119385
    4. '
' → logprob: -8.626489639282227
    5. '    ' → logprob: -8.751489639282227
    6. '<|end|>' → logprob: -10.501489639282227
    7. ':' → logprob: -10.751489639282227
    8. '	pass' → logprob: -10.751489639282227
    9. '   ' → logprob: -11.251489639282227
    10. 'n' → logprob: -11.376489639282227

Token 226: ' number' (ID: 2086)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5437116026878357
    2. ' n' → logprob: -0.9187116026878357
    3. '   ' → logprob: -4.2937116622924805
    4. ' pass' → logprob: -5.4187116622924805
    5. 'N' → logprob: -7.2937116622924805
    6. ' N' → logprob: -7.7937116622924805
    7. 'pass' → logprob: -8.04371166229248
    8. '#' → logprob: -8.41871166229248
    9. ' input' → logprob: -8.66871166229248
    10. ' #' → logprob: -8.91871166229248

Token 227: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.01866559498012066
    2. '_' → logprob: -4.768665790557861
    3. ' =' → logprob: -4.893665790557861
    4. '=' → logprob: -6.518665790557861
    5. '   ' → logprob: -8.268665313720703
    6. 's' → logprob: -8.643665313720703
    7. 'of' → logprob: -8.768665313720703
    8. '_input' → logprob: -9.143665313720703
    9. '_s' → logprob: -9.768665313720703
    10. '_users' → logprob: -9.768665313720703

Token 228: '_elements' (ID: 53344)
  Prédit: '_cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -1.2833861112594604
    2. '_students' → logprob: -1.7833861112594604
    3. '_tests' → logprob: -2.15838623046875
    4. '_items' → logprob: -2.65838623046875
    5. '_elements' → logprob: -2.65838623046875
    6. '_rows' → logprob: -3.03338623046875
    7. '_lines' → logprob: -3.03338623046875
    8. '_test' → logprob: -3.28338623046875
    9. '_s' → logprob: -3.65838623046875
    10. '_players' → logprob: -4.28338623046875

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03056187927722931
    2. '=' → logprob: -3.655561923980713
    3. ',' → logprob: -5.530561923980713
    4. '=int' → logprob: -8.655561447143555
    5. ' ,' → logprob: -9.655561447143555
    6. ' ' → logprob: -10.655561447143555
    7. '   ' → logprob: -11.780561447143555
    8. ')' → logprob: -12.280561447143555
    9. '=input' → logprob: -12.655561447143555
    10. ',int' → logprob: -12.905561447143555

Token 230: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.16723422706127167
    2. 'read' → logprob: -1.917234182357788
    3. ' int' → logprob: -5.167234420776367
    4. 'int' → logprob: -6.667234420776367
    5. '	read' → logprob: -11.917234420776367
    6. '   ' → logprob: -12.792234420776367
    7. ' ' → logprob: -13.417234420776367
    8. ' ' → logprob: -14.542234420776367
    9. ' len' → logprob: -14.792234420776367
    10. '  ' → logprob: -15.292234420776367

Token 231: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.000721487682312727
    2. '_int' → logprob: -7.250721454620361
    3. '_' → logprob: -11.50072193145752
    4. 'single' → logprob: -14.62572193145752
    5. 'int' → logprob: -15.12572193145752
    6. 'Single' → logprob: -16.125720977783203
    7. '_list' → logprob: -16.125720977783203
    8. '_line' → logprob: -16.375720977783203
    9. '_double' → logprob: -16.625720977783203
    10. '```' → logprob: -16.625720977783203

Token 232: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00011832444579340518
    2. 'int' → logprob: -9.125118255615234
    3. '_' → logprob: -12.375118255615234
    4. ' _' → logprob: -13.500118255615234
    5. '(int' → logprob: -14.250118255615234
    6. '<int' → logprob: -14.250118255615234
    7. '```' → logprob: -14.500118255615234
    8. '_token' → logprob: -15.250118255615234
    9. '_val' → logprob: -15.625118255615234
    10. '(' → logprob: -15.625118255615234

Token 233: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.215330409351736e-05
    2. '()
' → logprob: -10.125041961669922
    3. '()

' → logprob: -13.750041961669922
    4. '()\' → logprob: -15.250041961669922
    5. ' ()' → logprob: -15.750041961669922
    6. '()<' → logprob: -16.125041961669922
    7. '(' → logprob: -16.250041961669922
    8. '())' → logprob: -16.625041961669922
    9. '();' → logprob: -16.750041961669922
    10. '()`' → logprob: -16.875041961669922

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03556015342473984
    2. '    
' → logprob: -4.660560131072998
    3. '
' → logprob: -5.410560131072998
    4. ')' → logprob: -5.660560131072998
    5. '[' → logprob: -5.660560131072998
    6. ' ' → logprob: -6.160560131072998
    7. '<|end|>' → logprob: -6.535560131072998
    8. 'a' → logprob: -6.785560131072998
    9. ' 
' → logprob: -6.785560131072998
    10. ' elements' → logprob: -6.910560131072998

Token 235: ' integer' (ID: 16336)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.021298497915267944
    2. 'arr' → logprob: -4.896298408508301
    3. ' elements' → logprob: -5.396298408508301
    4. 'numbers' → logprob: -5.521298408508301
    5. 'values' → logprob: -6.146298408508301
    6. 'array' → logprob: -6.271298408508301
    7. 'data' → logprob: -7.021298408508301
    8. 'element' → logprob: -9.6462984085083
    9. 'sequence' → logprob: -10.5212984085083
    10. ' numbers' → logprob: -10.8962984085083

Token 236: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47450438141822815
    2. '_list' → logprob: -0.9745043516159058
    3. '_values' → logprob: -8.474504470825195
    4. '_s' → logprob: -9.474504470825195
    5. '_array' → logprob: -9.474504470825195
    6. '_' → logprob: -10.474504470825195
    7. '_elements' → logprob: -11.224504470825195
    8. '_lists' → logprob: -11.224504470825195
    9. '_numbers' → logprob: -12.474504470825195
    10. '_sequence' → logprob: -13.224504470825195

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005236837547272444
    2. '=' → logprob: -5.255236625671387
    3. '()' → logprob: -13.880236625671387
    4. '_' → logprob: -14.005236625671387
    5. '   ' → logprob: -14.255236625671387
    6. ' ' → logprob: -15.880236625671387
    7. ' ' → logprob: -16.255237579345703
    8. '[' → logprob: -16.380237579345703
    9. '(' → logprob: -16.380237579345703
    10. '    ' → logprob: -16.630237579345703

Token 238: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.011048054322600365
    2. 'read' → logprob: -4.511047840118408
    3. '	read' → logprob: -15.636048316955566
    4. ' ' → logprob: -17.63604736328125
    5. ' ' → logprob: -17.88604736328125
    6. '(read' → logprob: -19.01104736328125
    7. ' [' → logprob: -19.38604736328125
    8. '[' → logprob: -19.76104736328125
    9. ' list' → logprob: -20.01104736328125
    10. ' reads' → logprob: -20.01104736328125

Token 239: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -12.125009536743164
    3. 'int' → logprob: -13.125009536743164
    4. '_list' → logprob: -13.250009536743164
    5. '_in' → logprob: -16.000009536743164
    6. '_line' → logprob: -16.125009536743164
    7. '```' → logprob: -17.250009536743164
    8. ' _' → logprob: -17.375009536743164
    9. '_char' → logprob: -17.375009536743164
    10. '_single' → logprob: -17.875009536743164

Token 240: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.896309739408025e-07
    2. 'list' → logprob: -14.375000953674316
    3. 'List' → logprob: -16.25
    4. '_' → logprob: -17.125
    5. '_lists' → logprob: -19.375
    6. '```' → logprob: -19.375
    7. '_line' → logprob: -19.5
    8. '_lst' → logprob: -19.875
    9. '_array' → logprob: -20.0
    10. '_LIST' → logprob: -20.25

Token 241: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.1008713702030946e-06
    2. '()
' → logprob: -13.250001907348633
    3. ' ()' → logprob: -15.750001907348633
    4. '()]' → logprob: -16.500001907348633
    5. '()

' → logprob: -16.875001907348633
    6. '(' → logprob: -17.500001907348633
    7. '())' → logprob: -18.000001907348633
    8. '()`' → logprob: -18.125001907348633
    9. '();' → logprob: -18.625001907348633
    10. '()<' → logprob: -18.750001907348633

Token 242: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11077908426523209
    2. '   ' → logprob: -2.735779047012329
    3. '<|end|>' → logprob: -3.485779047012329
    4. '    
' → logprob: -5.110779285430908
    5. '#' → logprob: -7.110779285430908
    6. ' 
' → logprob: -7.610779285430908
    7. '  
' → logprob: -7.610779285430908
    8. ' ' → logprob: -7.860779285430908
    9. '\n' → logprob: -8.36077880859375
    10. '<|end|>' → logprob: -8.61077880859375

Token 243: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0470741987228394
    2. 'counter' → logprob: -1.5470741987228394
    3. 'dp' → logprob: -2.047074317932129
    4. 'freq' → logprob: -2.547074317932129
    5. 'frequency' → logprob: -2.922074317932129
    6. 'counts' → logprob: -3.422074317932129
    7. 'result' → logprob: -3.547074317932129
    8. 'sorted' → logprob: -3.547074317932129
    9. 'prefix' → logprob: -3.797074317932129
    10. 'integer' → logprob: -4.047074317932129

Token 244: ' sum' (ID: 4215)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.09570499509572983
    2. ' len' → logprob: -2.595705032348633
    3. ' ' → logprob: -4.845705032348633
    4. 'number' → logprob: -5.095705032348633
    5. ' not' → logprob: -6.595705032348633
    6. 'len' → logprob: -6.845705032348633
    7. ' ' → logprob: -8.845705032348633
    8. ' integer' → logprob: -10.345705032348633
    9. ' sum' → logprob: -10.720705032348633
    10. '	number' → logprob: -10.970705032348633

Token 245: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.014988468959927559
    2. '(' → logprob: -4.639988422393799
    3. ' (' → logprob: -5.264988422393799
    4. ' integer' → logprob: -10.389988899230957
    5. 'integer' → logprob: -11.139988899230957
    6. '(int' → logprob: -13.514988899230957
    7. '()' → logprob: -14.889988899230957
    8. ')' → logprob: -15.014988899230957
    9. '(number' → logprob: -15.389988899230957
    10. '(
' → logprob: -15.389988899230957

Token 246: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.824579784530215e-05
    2. '_' → logprob: -10.0000581741333
    3. '(_' → logprob: -12.1250581741333
    4. '(' → logprob: -12.6250581741333
    5. ')' → logprob: -13.1250581741333
    6. ' _' → logprob: -14.1250581741333
    7. ')_' → logprob: -15.0000581741333
    8. 's' → logprob: -15.3750581741333
    9. '```' → logprob: -15.8750581741333
    10. '_)' → logprob: -16.000059127807617

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07567806541919708
    2. '()' → logprob: -2.9506781101226807
    3. ' )' → logprob: -4.700677871704102
    4. '%' → logprob: -5.075677871704102
    5. ' %' → logprob: -6.450677871704102
    6. '())' → logprob: -6.950677871704102
    7. ')%' → logprob: -7.325677871704102
    8. '()%' → logprob: -7.325677871704102
    9. '>' → logprob: -8.325677871704102
    10. ' ==' → logprob: -8.700677871704102

Token 248: ' ==' (ID: 951)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.48265236616134644
    2. ' %' → logprob: -0.9826523661613464
    3. ' ==' → logprob: -5.232652187347412
    4. '==' → logprob: -6.732652187347412
    5. '>' → logprob: -6.982652187347412
    6. ' >' → logprob: -7.357652187347412
    7. ' <=' → logprob: -9.23265266418457
    8. ' <' → logprob: -9.48265266418457
    9. ' ' → logprob: -9.48265266418457
    10. '<' → logprob: -10.23265266418457

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06604668498039246
    2. ' ' → logprob: -2.816046714782715
    3. 'number' → logprob: -6.566046714782715
    4. ' number' → logprob: -6.691046714782715
    5. 'len' → logprob: -7.191046714782715
    6. ' len' → logprob: -7.941046714782715
    7. '1' → logprob: -8.691046714782715
    8. '100' → logprob: -9.941046714782715
    9. ' (' → logprob: -11.066046714782715
    10. '  ' → logprob: -11.191046714782715

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012186671607196331
    2. 'number' → logprob: -5.387186527252197
    3. ' ' → logprob: -5.512186527252197
    4. 'len' → logprob: -5.887186527252197
    5. '1' → logprob: -8.137187004089355
    6. 'MOD' → logprob: -9.262187004089355
    7. ' number' → logprob: -9.387187004089355
    8. '100' → logprob: -9.887187004089355
    9. ' len' → logprob: -10.512187004089355
    10. '(' → logprob: -11.012187004089355

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007224413566291332
    2. ':
' → logprob: -7.625722408294678
    3. ':return' → logprob: -8.375722885131836
    4. ' :' → logprob: -13.125722885131836
    5. '   ' → logprob: -13.750722885131836
    6. ' and' → logprob: -15.500722885131836
    7. ' or' → logprob: -15.875722885131836
    8. ':
' → logprob: -15.875722885131836
    9. ',' → logprob: -16.125722885131836
    10. '):' → logprob: -16.375722885131836

Token 252: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32180294394493103
    2. '       ' → logprob: -1.5718029737472534
    3. ':
' → logprob: -2.821802854537964
    4. '   ' → logprob: -5.571803092956543
    5. ' and' → logprob: -6.571803092956543
    6. ':return' → logprob: -6.571803092956543
    7. ',' → logprob: -7.946803092956543
    8. ' :' → logprob: -8.071803092956543
    9. '):' → logprob: -8.946803092956543
    10. ' :
' → logprob: -9.446803092956543

Token 253: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31098511815071106
    2. '
' → logprob: -1.9359850883483887
    3. 'print' (adapté à ' print') → logprob: -2.3109850883483887
    4. ' print' → logprob: -4.310985088348389
    5. '
' → logprob: -5.810985088348389
    6. 'return' → logprob: -5.810985088348389
    7. '       ' → logprob: -6.560985088348389
    8. '    
' → logprob: -6.810985088348389
    9. ' return' → logprob: -6.935985088348389
    10. ' 
' → logprob: -7.560985088348389

Token 254: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7919353246688843
    2. '("' → logprob: -1.0419353246688843
    3. '(-' → logprob: -1.6669353246688843
    4. '("-' → logprob: -5.541935443878174
    5. '('' → logprob: -7.041935443878174
    6. '(
' → logprob: -8.541934967041016
    7. '-' → logprob: -8.541934967041016
    8. '0' → logprob: -8.916934967041016
    9. '()' → logprob: -10.916934967041016
    10. '("")' → logprob: -10.916934967041016

Token 255: 'Yes' (ID: 13022)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.9489403367042542
    2. '0' → logprob: -1.0739402770996094
    3. 'YES' → logprob: -1.6989402770996094
    4. 'Yes' → logprob: -3.1989402770996094
    5. '-' → logprob: -3.8239402770996094
    6. 'No' → logprob: -4.448940277099609
    7. '"' → logprob: -5.698940277099609
    8. 'zero' → logprob: -6.573940277099609
    9. '3' → logprob: -6.698940277099609
    10. 'DRAW' → logprob: -6.823940277099609

Token 256: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007722675800323486
    2. '")
' → logprob: -4.882722854614258
    3. '\n' → logprob: -9.382722854614258
    4. '"' → logprob: -11.382722854614258
    5. ' ")' → logprob: -11.507722854614258
    6. '")
' → logprob: -12.507722854614258
    7. '!")' → logprob: -13.507722854614258
    8. ',' → logprob: -13.632722854614258
    9. ')' → logprob: -14.382722854614258
    10. '<|end|>' → logprob: -14.507722854614258

Token 257: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28395628929138184
    2. '       ' → logprob: -1.4089562892913818
    3. '
' → logprob: -7.283956527709961
    4. '    
' → logprob: -7.908956527709961
    5. ' return' → logprob: -7.908956527709961
    6. ' else' → logprob: -8.283956527709961
    7. 'return' → logprob: -8.783956527709961
    8. '<|end|>' → logprob: -8.783956527709961
    9. '        
' → logprob: -8.908956527709961
    10. '.' → logprob: -8.908956527709961

Token 258: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40904700756073
    2. '       ' → logprob: -1.15904700756073
    3. ' return' → logprob: -4.2840471267700195
    4. ' else' → logprob: -5.7840471267700195
    5. 'return' (adapté à ' return') → logprob: -5.9090471267700195
    6. 'else' → logprob: -6.9090471267700195
    7. '
' → logprob: -7.4090471267700195
    8. 'elif' → logprob: -8.53404712677002
    9. ' ' → logprob: -8.78404712677002
    10. '    
' → logprob: -8.90904712677002

Token 259: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10447151213884354
    2. '    
' → logprob: -2.604471445083618
    3. '
' → logprob: -3.854471445083618
    4. ' 
' → logprob: -6.104471683502197
    5. '<|end|>' → logprob: -6.979471683502197
    6. '  
' → logprob: -8.729471206665039
    7. '    ' → logprob: -8.854471206665039
    8. '\n' → logprob: -8.854471206665039
    9. ' if' → logprob: -8.979471206665039
    10. '   
' → logprob: -9.479471206665039

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01295326929539442
    2. ' if' → logprob: -5.012953281402588
    3. '    
' → logprob: -6.137953281402588
    4. 'if' → logprob: -6.637953281402588
    5. ' for' → logprob: -7.262953281402588
    6. '    ' → logprob: -7.512953281402588
    7. 'for' → logprob: -8.01295280456543
    8. '  ' → logprob: -9.13795280456543
    9. ' i' → logprob: -9.13795280456543
    10. ' 
' → logprob: -9.38795280456543

Token 261: ' if' (ID: 538)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.6415420174598694
    2. 'dp' → logprob: -1.6415419578552246
    3. 'if' (adapté à ' if') → logprob: -2.5165419578552246
    4. 'c' → logprob: -2.8915419578552246
    5. 'max' → logprob: -3.7665419578552246
    6. 'counter' → logprob: -4.391541957855225
    7. 'visited' → logprob: -4.391541957855225
    8. 'print' → logprob: -4.516541957855225
    9. 'count' → logprob: -4.641541957855225
    10. 'current' → logprob: -4.891541957855225

Token 262: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.5792126655578613
    2. ' max' → logprob: -1.5792126655578613
    3. ' integer' → logprob: -1.7042126655578613
    4. ' len' → logprob: -2.2042126655578613
    5. ' sum' → logprob: -2.3292126655578613
    6. ' all' → logprob: -2.5792126655578613
    7. ' any' → logprob: -3.0792126655578613
    8. 'number' → logprob: -4.204212665557861
    9. 'sum' → logprob: -4.329212665557861
    10. 'max' → logprob: -4.329212665557861

Token 263: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.3425219549390022e-05
    2. '_' → logprob: -11.37501335144043
    3. 'of' → logprob: -14.50001335144043
    4. '   ' → logprob: -14.62501335144043
    5. '>' → logprob: -15.50001335144043
    6. ' _' → logprob: -15.62501335144043
    7. '_for' → logprob: -15.62501335144043
    8. ' of' → logprob: -15.87501335144043
    9. '_o' → logprob: -17.12501335144043
    10. ' ' → logprob: -17.25001335144043

Token 264: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -6.2729995988775045e-06
    2. 'elements' → logprob: -12.125006675720215
    3. '_' → logprob: -14.875006675720215
    4. '_ELEMENTS' → logprob: -16.1250057220459
    5. ' _' → logprob: -17.1250057220459
    6. ' elements' → logprob: -17.2500057220459
    7. '```' → logprob: -17.5000057220459
    8. ' ' → logprob: -17.6250057220459
    9. '_tokens' → logprob: -17.7500057220459
    10. '_element' → logprob: -18.0000057220459

Token 265: ' %' (ID: 1851)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5735515356063843
    2. ' ==' → logprob: -1.3235515356063843
    3. ' <=' → logprob: -2.323551654815674
    4. ' %' → logprob: -3.823551654815674
    5. '<' → logprob: -3.948551654815674
    6. ' ' → logprob: -4.448551654815674
    7. '==' → logprob: -4.448551654815674
    8. '%' → logprob: -5.698551654815674
    9. '<=' → logprob: -6.073551654815674
    10. ' >' → logprob: -6.823551654815674

Token 266: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0033601049799472094
    2. '3' → logprob: -5.878360271453857
    3. ' ' → logprob: -7.503360271453857
    4. '4' → logprob: -12.8783597946167
    5. '  ' → logprob: -15.2533597946167
    6. '400' → logprob: -15.6283597946167
    7. '   ' → logprob: -15.7533597946167
    8. '```' → logprob: -16.253360748291016
    9. '

' → logprob: -16.378360748291016
    10. '==' → logprob: -16.503360748291016

Token 267: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054958563297986984
    2. '3' → logprob: -2.9299585819244385
    3. '4' → logprob: -10.30495834350586
    4. ' ' → logprob: -11.30495834350586
    5. '10' → logprob: -11.42995834350586
    6. '201' → logprob: -12.80495834350586
    7. '400' → logprob: -12.80495834350586
    8. '200' → logprob: -12.92995834350586
    9. '100' → logprob: -13.30495834350586
    10. '5' → logprob: -13.55495834350586

Token 268: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.05662858858704567
    2. '!=' → logprob: -2.931628704071045
    3. ' ==' → logprob: -6.556628704071045
    4. '==' → logprob: -8.056628227233887
    5. ':' → logprob: -12.556628227233887
    6. '()!=' → logprob: -14.306628227233887
    7. ' ' → logprob: -14.431628227233887
    8. '!' → logprob: -14.806628227233887
    9. ')!=' → logprob: -14.806628227233887
    10. '!==' → logprob: -15.056628227233887

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009761640802025795
    2. ' ' → logprob: -4.634761810302734
    3. '=' → logprob: -12.384761810302734
    4. '
' → logprob: -15.259761810302734
    5. '3' → logprob: -15.509761810302734
    6. '```' → logprob: -15.759761810302734
    7. '1' → logprob: -15.822261810302734
    8. '2' → logprob: -16.134761810302734
    9. '==' → logprob: -16.197261810302734
    10. '  ' → logprob: -16.259761810302734

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -9.875053405761719
    3. '=' → logprob: -13.375053405761719
    4. '3' → logprob: -16.62505340576172
    5. '1' → logprob: -16.62505340576172
    6. '```' → logprob: -17.06255340576172
    7. '==' → logprob: -17.12505340576172
    8. '۰' → logprob: -17.56255340576172
    9. '
' → logprob: -18.00005340576172
    10. '2' → logprob: -18.25005340576172

Token 271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005283919163048267
    2. ':
' → logprob: -5.255283832550049
    3. ' or' → logprob: -10.755284309387207
    4. '   ' → logprob: -11.255284309387207
    5. ':return' → logprob: -12.005284309387207
    6. ' and' → logprob: -12.255284309387207
    7. ' :' → logprob: -12.755284309387207
    8. '):' → logprob: -14.505284309387207
    9. 'or' → logprob: -14.755284309387207
    10. 'and' → logprob: -14.880284309387207

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041113083716481924
    2. '   ' → logprob: -7.875411033630371
    3. 'print' → logprob: -10.875411033630371
    4. ' print' → logprob: -11.750411033630371
    5. '
' → logprob: -13.375411033630371
    6. '           ' → logprob: -14.000411033630371
    7. '     ' → logprob: -14.500411033630371
    8. '      ' → logprob: -15.000411033630371
    9. ',' → logprob: -15.625411033630371
    10. ' ' → logprob: -15.875411033630371

Token 273: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5988833904266357
    2. 'print' (adapté à ' print') → logprob: -1.4738833904266357
    3. '   ' → logprob: -1.5988833904266357
    4. '       ' → logprob: -3.9738833904266357
    5. '
' → logprob: -7.848883628845215
    6. ' ' → logprob: -8.973883628845215
    7. '	print' → logprob: -9.973883628845215
    8. '  ' → logprob: -10.973883628845215
    9. '    
' → logprob: -11.348883628845215
    10. '    ' → logprob: -11.723883628845215

Token 274: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0032228680793195963
    2. '(' → logprob: -5.753222942352295
    3. '(
' → logprob: -10.378222465515137
    4. ' ("' → logprob: -11.878222465515137
    5. '('' → logprob: -12.753222465515137
    6. '("")' → logprob: -13.503222465515137
    7. '"' → logprob: -14.503222465515137
    8. '(""' → logprob: -14.503222465515137
    9. '("\' → logprob: -15.128222465515137
    10. '("
' → logprob: -15.128222465515137

Token 275: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.06209271773695946
    2. '"No' → logprob: -2.8120927810668945
    3. '"' → logprob: -9.437092781066895
    4. 'NO' → logprob: -10.187092781066895
    5. '“No' → logprob: -12.562092781066895
    6. ' No' → logprob: -13.437092781066895
    7. 'Yes' → logprob: -14.812092781066895
    8. '0' → logprob: -15.062092781066895
    9. '""' → logprob: -15.062092781066895
    10. '_No' → logprob: -15.187092781066895

Token 276: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.1625906080007553
    2. '")
' → logprob: -1.9125906229019165
    3. ')' → logprob: -6.662590503692627
    4. '   ' → logprob: -7.287590503692627
    5. '       ' → logprob: -8.412590980529785
    6. ')
' → logprob: -9.162590980529785
    7. '")
' → logprob: -10.662590980529785
    8. ')")
' → logprob: -10.787590980529785
    9. ')")' → logprob: -10.787590980529785
    10. '()' → logprob: -12.537590980529785

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06294367462396622
    2. '   ' → logprob: -2.812943696975708
    3. '
' → logprob: -7.812943458557129
    4. '<|end|>' → logprob: -7.937943458557129
    5. '    
' → logprob: -9.187943458557129
    6. '        
' → logprob: -10.437943458557129
    7. '  
' → logprob: -11.437943458557129
    8. '           ' → logprob: -11.562943458557129
    9. ')' → logprob: -11.687943458557129
    10. 'return' → logprob: -11.812943458557129

Token 278: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004435697570443153
    2. 'return' (adapté à ' return') → logprob: -5.7544355392456055
    3. '   ' → logprob: -7.1294355392456055
    4. ' return' → logprob: -7.7544355392456055
    5. '
' → logprob: -11.129435539245605
    6. '	return' → logprob: -12.254435539245605
    7. ' ' → logprob: -12.254435539245605
    8. '           ' → logprob: -13.879435539245605
    9. 'def' → logprob: -14.879435539245605
    10. '<|end|>' → logprob: -15.129435539245605

Token 279: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08090479671955109
    2. '<|end|>' → logprob: -3.330904722213745
    3. '   ' → logprob: -3.580904722213745
    4. '    
' → logprob: -4.455904960632324
    5. '<|end|>' → logprob: -7.830904960632324
    6. '  
' → logprob: -8.205904960632324
    7. 'def' → logprob: -8.205904960632324
    8. '
    
' → logprob: -8.455904960632324
    9. '

' → logprob: -8.580904960632324
    10. '  ' → logprob: -8.830904960632324

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08745589107275009
    2. '    
' → logprob: -2.712455987930298
    3. '
' → logprob: -4.837455749511719
    4. '    ' → logprob: -5.587455749511719
    5. '  ' → logprob: -6.087455749511719
    6. '   
' → logprob: -6.587455749511719
    7. '<|end|>' → logprob: -7.212455749511719
    8. ' 
' → logprob: -7.587455749511719
    9. '     
' → logprob: -9.212455749511719
    10. 'def' → logprob: -9.212455749511719

Token 281: ' frequency' (ID: 19813)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.4212322235107422
    2. 'counts' → logprob: -2.421232223510742
    3. 'segment' → logprob: -2.921232223510742
    4. 'counter' → logprob: -3.296232223510742
    5. 'count' → logprob: -3.421232223510742
    6. 'third' → logprob: -3.796232223510742
    7. 'element' → logprob: -3.921232223510742
    8. 'elements' → logprob: -4.046232223510742
    9. 'group' → logprob: -4.421232223510742
    10. 'part' → logprob: -4.421232223510742

Token 282: '_counter' (ID: 35419)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03901693969964981
    2. '=' → logprob: -3.2890169620513916
    3. 's' → logprob: -8.289016723632812
    4. '_map' → logprob: -8.289016723632812
    5. '_counter' → logprob: -8.289016723632812
    6. '_' → logprob: -9.289016723632812
    7. '_count' → logprob: -9.914016723632812
    8. '_counts' → logprob: -10.164016723632812
    9. ' ' → logprob: -11.664016723632812
    10. '_dict' → logprob: -11.664016723632812

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143741369247437
    2. '=' → logprob: -1.7014374732971191
    3. 's' → logprob: -11.576436996459961
    4. ')' → logprob: -12.076436996459961
    5. '[' → logprob: -12.576436996459961
    6. ' ' → logprob: -13.701436996459961
    7. '(' → logprob: -13.701436996459961
    8. ':' → logprob: -14.576436996459961
    9. ',' → logprob: -14.826436996459961
    10. '_' → logprob: -14.826436996459961

Token 284: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.02064524218440056
    2. ' defaultdict' → logprob: -3.8956451416015625
    3. ' default' → logprob: -9.270645141601562
    4. '   ' → logprob: -12.645645141601562
    5. '(default' → logprob: -13.520645141601562
    6. '.default' → logprob: -13.895645141601562
    7. 'def' → logprob: -13.895645141601562
    8. '{' → logprob: -14.145645141601562
    9. '"default' → logprob: -14.395645141601562
    10. ''default' → logprob: -15.020645141601562

Token 285: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002755174064077437
    2. 'int' → logprob: -8.625275611877441
    3. '<int' → logprob: -10.125275611877441
    4. '(lambda' → logprob: -10.125275611877441
    5. '   ' → logprob: -12.500275611877441
    6. '(' → logprob: -12.625275611877441
    7. '[int' → logprob: -12.750275611877441
    8. ' (' → logprob: -13.125275611877441
    9. ':int' → logprob: -13.625275611877441
    10. ',int' → logprob: -14.125275611877441

Token 286: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017157548572868109
    2. ' :' → logprob: -6.376715660095215
    3. '0' → logprob: -11.376715660095215
    4. ':int' → logprob: -13.376715660095215
    5. ' ' → logprob: -14.751715660095215
    6. 'int' → logprob: -15.751715660095215
    7. ':
' → logprob: -16.50171661376953
    8. '   ' → logprob: -19.00171661376953
    9. '=' → logprob: -19.62671661376953
    10. '1' → logprob: -20.00171661376953

Token 287: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007124318508431315
    2. ' ' → logprob: -7.2507123947143555
    3. '   ' → logprob: -14.000712394714355
    4. 'int' → logprob: -14.000712394714355
    5. 'lambda' → logprob: -15.375712394714355
    6. ')' → logprob: -15.500712394714355
    7. '1' → logprob: -15.875712394714355
    8. '  ' → logprob: -16.500713348388672
    9. '3' → logprob: -16.625713348388672
    10. '    ' → logprob: -17.625713348388672

Token 288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.888114098226652e-05
    2. ' ' → logprob: -9.500088691711426
    3. 'int' → logprob: -11.875088691711426
    4. 'lambda' → logprob: -13.000088691711426
    5. '1' → logprob: -13.750088691711426
    6. '3' → logprob: -14.000088691711426
    7. '   ' → logprob: -14.375088691711426
    8. ')' → logprob: -14.375088691711426
    9. 'float' → logprob: -14.750088691711426
    10. '2' → logprob: -15.125088691711426

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007280402351170778
    2. ')
' → logprob: -7.250728130340576
    3. ' )' → logprob: -11.125727653503418
    4. ')
' → logprob: -13.000727653503418
    5. '   ' → logprob: -14.625727653503418
    6. ')

' → logprob: -14.750727653503418
    7. ' )
' → logprob: -16.125728607177734
    8. ' ' → logprob: -17.000728607177734
    9. ')`
' → logprob: -17.125728607177734
    10. ',' → logprob: -17.375728607177734

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7037310600280762
    2. ' for' → logprob: -1.5787310600280762
    3. ' ' → logprob: -2.703731060028076
    4. '<|end|>' → logprob: -2.703731060028076
    5. '
' → logprob: -2.828731060028076
    6. 'for' → logprob: -3.453731060028076
    7. ' 
' → logprob: -3.703731060028076
    8. '    
' → logprob: -3.828731060028076
    9. '  
' → logprob: -4.953731060028076
    10. ')' → logprob: -5.328731060028076

Token 291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18003490567207336
    2. ' for' → logprob: -1.805034875869751
    3. '   ' → logprob: -8.930034637451172
    4. '	for' → logprob: -9.180034637451172
    5. ' ' → logprob: -10.680034637451172
    6. '
' → logprob: -11.555034637451172
    7. ' 
' → logprob: -11.805034637451172
    8. '' → logprob: -12.680034637451172
    9. '    
' → logprob: -12.680034637451172
    10. '    ' → logprob: -12.805034637451172

Token 292: ' element' (ID: 3577)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3701266646385193
    2. 'value' → logprob: -2.120126724243164
    3. ' num' → logprob: -2.120126724243164
    4. ' value' → logprob: -3.620126724243164
    5. 'element' → logprob: -3.870126724243164
    6. 'number' → logprob: -4.620126724243164
    7. ' element' → logprob: -5.245126724243164
    8. ' number' → logprob: -5.370126724243164
    9. 'item' → logprob: -6.870126724243164
    10. 'x' → logprob: -8.120126724243164

Token 293: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0297992080450058
    2. 'in' → logprob: -3.529799222946167
    3. ' ' → logprob: -10.779799461364746
    4. '   ' → logprob: -11.154799461364746
    5. '	in' → logprob: -12.404799461364746
    6. '_in' → logprob: -13.404799461364746
    7. ',' → logprob: -13.654799461364746
    8. '  ' → logprob: -13.904799461364746
    9. 's' → logprob: -14.029799461364746
    10. 'import' → logprob: -14.279799461364746

Token 294: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.47409817576408386
    2. 'integer' → logprob: -0.9740982055664062
    3. '   ' → logprob: -11.349098205566406
    4. '(integer' → logprob: -12.474098205566406
    5. 'int' → logprob: -12.599098205566406
    6. ' ' → logprob: -14.349098205566406
    7. 'Integer' → logprob: -14.724098205566406
    8. '_integer' → logprob: -14.849098205566406
    9. '    ' → logprob: -15.599098205566406
    10. '  ' → logprob: -15.849098205566406

Token 295: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.153795766294934e-06
    2. 'list' → logprob: -12.250005722045898
    3. 'List' → logprob: -14.125005722045898
    4. 's' → logprob: -15.250005722045898
    5. 'frequency' → logprob: -16.2500057220459
    6. '_counter' → logprob: -16.6250057220459
    7. '_lists' → logprob: -16.7500057220459
    8. '_' → logprob: -16.8750057220459
    9. '_LIST' → logprob: -17.8750057220459
    10. 'counter' → logprob: -18.5000057220459

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2160576432943344
    2. ':
' → logprob: -1.7160576581954956
    3. '   ' → logprob: -4.591057777404785
    4. '       ' → logprob: -5.466057777404785
    5. ' :' → logprob: -9.716057777404785
    6. ' :
' → logprob: -9.841057777404785
    7. ':
' → logprob: -11.591057777404785
    8. '[' → logprob: -11.591057777404785
    9. '):
' → logprob: -11.966057777404785
    10. 'frequency' → logprob: -11.966057777404785

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004800464957952499
    2. '   ' → logprob: -5.379800319671631
    3. ' frequency' → logprob: -8.754800796508789
    4. 'frequency' → logprob: -11.129800796508789
    5. '<|end|>' → logprob: -13.629800796508789
    6. '    ' → logprob: -14.004800796508789
    7. '        
' → logprob: -14.129800796508789
    8. '    
' → logprob: -14.379800796508789
    9. '
' → logprob: -14.629800796508789
    10. '     ' → logprob: -14.754800796508789

Token 298: ' frequency' (ID: 19813)
  Prédit: 'frequency'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frequency' (adapté à ' frequency') → logprob: -0.18910953402519226
    2. ' frequency' → logprob: -1.9391095638275146
    3. '   ' → logprob: -3.5641095638275146
    4. '       ' → logprob: -8.939109802246094
    5. 'freq' → logprob: -12.314109802246094
    6. '           ' → logprob: -12.564109802246094
    7. ' ' → logprob: -12.814109802246094
    8. '  ' → logprob: -12.939109802246094
    9. '_frequency' → logprob: -13.564109802246094
    10. 'fre' → logprob: -13.689109802246094

Token 299: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.664371848164592e-05
    2. 'counter' → logprob: -11.500016212463379
    3. '[element' → logprob: -12.125016212463379
    4. 'Counter' → logprob: -15.125016212463379
    5. '[counter' → logprob: -15.250016212463379
    6. '_COUNTER' → logprob: -15.500016212463379
    7. 's' → logprob: -16.750017166137695
    8. 'ounter' → logprob: -16.875017166137695
    9. ' counter' → logprob: -17.000017166137695
    10. '	counter' → logprob: -17.375017166137695

Token 300: '[element' (ID: 186682)
  Prédit: '[element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[element' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.125000953674316
    3. ' [' → logprob: -19.0
    4. '[e' → logprob: -19.125
    5. '[event' → logprob: -20.0
    6. 'element' → logprob: -20.25
    7. ';element' → logprob: -22.125
    8. '[
' → logprob: -22.75
    9. '[array' → logprob: -23.375
    10. '[module' → logprob: -23.5

Token 301: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011049113236367702
    2. ']+=' → logprob: -4.511049270629883
    3. ' ]' → logprob: -13.761049270629883
    4. '+=' → logprob: -15.761049270629883
    5. ']+' → logprob: -16.636049270629883
    6. '+]' → logprob: -17.636049270629883
    7. ')' → logprob: -18.011049270629883
    8. ']=' → logprob: -18.761049270629883
    9. ' +=' → logprob: -19.136049270629883
    10. '   ' → logprob: -19.386049270629883

Token 302: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12693378329277039
    2. ' +=' → logprob: -2.1269338130950928
    3. ']+=' → logprob: -12.126934051513672
    4. '    ' → logprob: -16.126934051513672
    5. '   ' → logprob: -16.251934051513672
    6. '=' → logprob: -16.376934051513672
    7. '+' → logprob: -17.376934051513672
    8. ' ' → logprob: -18.376934051513672
    9. '```' → logprob: -19.251934051513672
    10. '+='' → logprob: -19.501934051513672

Token 303: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -19.000024795532227
    4. '```' → logprob: -21.125024795532227
    5. '  ' → logprob: -21.750024795532227
    6. ' ' → logprob: -21.875024795532227
    7. '
' → logprob: -22.000024795532227
    8. '۱' → logprob: -22.750024795532227
    9. '<|end|>' → logprob: -23.375024795532227
    10. '１' → logprob: -23.500024795532227

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -20.5
    5. '
' → logprob: -21.25
    6. '۱' → logprob: -21.8125
    7. '0' → logprob: -22.4375
    8. '  ' → logprob: -22.5
    9. '2' → logprob: -22.5
    10. '<|end|>' → logprob: -23.0

Token 305: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14807924628257751
    2. '<|end|>' → logprob: -2.0230791568756104
    3. '   ' → logprob: -5.6480793952941895
    4. '    
' → logprob: -7.2730793952941895
    5. ' 
' → logprob: -8.023078918457031
    6. '<|end|>' → logprob: -8.648078918457031
    7. '  
' → logprob: -8.773078918457031
    8. '\n' → logprob: -9.023078918457031
    9. '

' → logprob: -9.648078918457031
    10. ' ' → logprob: -10.023078918457031

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.481783926486969
    2. '
' → logprob: -1.1067838668823242
    3. '    
' → logprob: -3.731783866882324
    4. ' 
' → logprob: -4.856783866882324
    5. ' if' → logprob: -5.356783866882324
    6. 'if' → logprob: -5.481783866882324
    7. '    ' → logprob: -6.981783866882324
    8. '' → logprob: -7.106783866882324
    9. '  
' → logprob: -7.356783866882324
    10. '<|end|>' → logprob: -7.356783866882324

Token 307: ' if' (ID: 538)
  Prédit: 'keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keys' → logprob: -0.35823121666908264
    2. 'if' (adapté à ' if') → logprob: -2.10823130607605
    3. 'elements' → logprob: -2.85823130607605
    4. 'unique' → logprob: -3.10823130607605
    5. 'target' → logprob: -3.35823130607605
    6. 'values' → logprob: -4.108231067657471
    7. ' keys' → logprob: -5.358231067657471
    8. 'three' → logprob: -5.608231067657471
    9. 'trip' → logprob: -5.733231067657471
    10. 'total' → logprob: -5.983231067657471

Token 308: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2306903451681137
    2. 'len' → logprob: -1.605690360069275
    3. ' frequency' → logprob: -6.3556904792785645
    4. ' set' → logprob: -7.1056904792785645
    5. ' all' → logprob: -7.2306904792785645
    6. 'frequency' → logprob: -8.105690002441406
    7. ' not' → logprob: -8.355690002441406
    8. ' ' → logprob: -8.480690002441406
    9. ' any' → logprob: -8.605690002441406
    10. '(len' → logprob: -8.605690002441406

Token 309: '(list' (ID: 13116)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0005598236457444727
    2. '(' → logprob: -7.7505598068237305
    3. ' (' → logprob: -9.00055980682373
    4. 'frequency' → logprob: -12.25055980682373
    5. '(freq' → logprob: -15.00055980682373
    6. ' frequency' → logprob: -15.37555980682373
    7. '(
' → logprob: -15.50055980682373
    8. 'f' → logprob: -16.750560760498047
    9. '(set' → logprob: -17.000560760498047
    10. '	f' → logprob: -17.375560760498047

Token 310: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -8.065608562901616e-05
    2. '(' → logprob: -9.625081062316895
    3. 'frequency' → logprob: -11.375081062316895
    4. ' (' → logprob: -13.500081062316895
    5. '(
' → logprob: -14.375081062316895
    6. ')' → logprob: -15.000081062316895
    7. ' frequency' → logprob: -15.250081062316895
    8. '(freq' → logprob: -15.500081062316895
    9. 'of' → logprob: -16.000080108642578
    10. 'f' → logprob: -16.125080108642578

Token 311: 'requency' (ID: 28732)
  Prédit: 'requency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requency' → logprob: -0.0011757015017792583
    2. 'frequency' → logprob: -6.751175880432129
    3. 'requent' → logprob: -13.501175880432129
    4. 'requ' → logprob: -13.751175880432129
    5. 'requencies' → logprob: -14.251175880432129
    6. '_frequency' → logprob: -14.376175880432129
    7. 'or' → logprob: -14.501175880432129
    8. 'require' → logprob: -15.251175880432129
    9. '.frequency' → logprob: -15.626175880432129
    10. 're' → logprob: -15.751175880432129

Token 312: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -3.452426608419046e-05
    2. 'counter' → logprob: -10.37503433227539
    3. ')' → logprob: -13.25003433227539
    4. 'Counter' → logprob: -14.25003433227539
    5. '_COUNTER' → logprob: -15.62503433227539
    6. 'ounter' → logprob: -16.00003433227539
    7. 's' → logprob: -16.00003433227539
    8. '(counter' → logprob: -16.12503433227539
    9. ')_' → logprob: -17.12503433227539
    10. '	counter' → logprob: -17.37503433227539

Token 313: '.items' (ID: 19607)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13152272999286652
    2. '.keys' → logprob: -2.1315226554870605
    3. '))' → logprob: -6.1315226554870605
    4. '())' → logprob: -6.2565226554870605
    5. ')==' → logprob: -8.506523132324219
    6. 'keys' → logprob: -9.131523132324219
    7. ' )' → logprob: -9.381523132324219
    8. ')>' → logprob: -9.881523132324219
    9. '.values' → logprob: -10.756523132324219
    10. ')=' → logprob: -12.756523132324219

Token 314: '()))' (ID: 16829)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.030040310695767403
    2. '()))' → logprob: -3.5300402641296387
    3. '()' → logprob: -8.655040740966797
    4. ')' → logprob: -9.155040740966797
    5. ' ())' → logprob: -12.655040740966797
    6. '))' → logprob: -12.780040740966797
    7. '())
' → logprob: -13.530040740966797
    8. '())[' → logprob: -14.280040740966797
    9. '()
' → logprob: -14.530040740966797
    10. '   ' → logprob: -15.280040740966797

Token 315: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7332456707954407
    2. ' ==' → logprob: -1.608245611190796
    3. ' >' → logprob: -1.983245611190796
    4. '==' → logprob: -2.858245611190796
    5. '!=' → logprob: -2.983245611190796
    6. '>' → logprob: -3.233245611190796
    7. '()' → logprob: -3.858245611190796
    8. '()>' → logprob: -5.608245849609375
    9. '()!=' → logprob: -6.108245849609375
    10. ')' → logprob: -6.483245849609375

Token 316: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03579861298203468
    2. '1' → logprob: -3.4107985496520996
    3. ' ' → logprob: -6.2857985496521
    4. '0' → logprob: -8.410799026489258
    5. '   ' → logprob: -10.410799026489258
    6. '4' → logprob: -11.723299026489258
    7. '  ' → logprob: -11.785799026489258
    8. '2' → logprob: -12.598299026489258
    9. '```' → logprob: -13.035799026489258
    10. '	' → logprob: -13.848299026489258

Token 317: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0711011216044426
    2. '1' → logprob: -2.696101188659668
    3. '2' → logprob: -7.696101188659668
    4. ' ' → logprob: -7.946101188659668
    5. '0' → logprob: -8.571101188659668
    6. '4' → logprob: -9.446101188659668
    7. '   ' → logprob: -9.946101188659668
    8. '```' → logprob: -11.696101188659668
    9. '  ' → logprob: -11.821101188659668
    10. '
' → logprob: -12.508601188659668

Token 318: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2894552946090698
    2. ':' → logprob: -1.4144552946090698
    3. 'and' → logprob: -5.414455413818359
    4. ' or' → logprob: -6.289455413818359
    5. ' :' → logprob: -7.164455413818359
    6. ':
' → logprob: -7.289455413818359
    7. ' ' → logprob: -7.789455413818359
    8. '   ' → logprob: -10.41445541381836
    9. ' :
' → logprob: -11.16445541381836
    10. '    ' → logprob: -11.28945541381836

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8822704553604126
    2. ' and' → logprob: -1.0072704553604126
    3. ':' → logprob: -1.6322704553604126
    4. '   ' → logprob: -4.132270336151123
    5. ':
' → logprob: -5.382270336151123
    6. 'and' → logprob: -5.882270336151123
    7. ' or' → logprob: -6.632270336151123
    8. ' :' → logprob: -8.257270812988281
    9. '    ' → logprob: -8.757270812988281
    10. ',' → logprob: -9.507270812988281

Token 320: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21496844291687012
    2. '       ' → logprob: -1.8399684429168701
    3. 'print' → logprob: -5.214968681335449
    4. ' keys' → logprob: -5.214968681335449
    5. ' if' → logprob: -5.589968681335449
    6. ' print' → logprob: -5.714968681335449
    7. ' ' → logprob: -5.839968681335449
    8. '    ' → logprob: -5.964968681335449
    9. ' key' → logprob: -6.589968681335449
    10. ' for' → logprob: -6.714968681335449

Token 321: ' frequency' (ID: 19813)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9452187418937683
    2. 'len' → logprob: -1.570218801498413
    3. ' ' → logprob: -2.070218801498413
    4. '0' → logprob: -3.070218801498413
    5. ' list' → logprob: -3.070218801498413
    6. ' sorted' → logprob: -3.695218801498413
    7. ' frequency' → logprob: -3.945218801498413
    8. ' set' → logprob: -3.945218801498413
    9. ' all' → logprob: -4.070218563079834
    10. 'list' → logprob: -4.070218563079834

Token 322: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -6.110668618930504e-05
    2. 'counter' → logprob: -9.87506103515625
    3. 'Counter' → logprob: -12.75006103515625
    4. '
' → logprob: -13.00006103515625
    5. '   ' → logprob: -13.62506103515625
    6. '_COUNTER' → logprob: -14.50006103515625
    7. 's' → logprob: -14.62506103515625
    8. '[' → logprob: -15.25006103515625
    9. '```' → logprob: -15.37506103515625
    10. '	counter' → logprob: -15.50006103515625

Token 323: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013576513156294823
    2. '[next' → logprob: -4.763576507568359
    3. '[list' → logprob: -5.763576507568359
    4. '[f' → logprob: -7.763576507568359
    5. '
' → logprob: -9.01357650756836
    6. '==' → logprob: -9.13857650756836
    7. '0' → logprob: -9.26357650756836
    8. 'list' → logprob: -9.38857650756836
    9. '[random' → logprob: -9.38857650756836
    10. '[min' → logprob: -9.51357650756836

Token 324: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008640571613796055
    2. '-' → logprob: -8.500864028930664
    3. 'integer' → logprob: -8.500864028930664
    4. '1' → logprob: -8.875864028930664
    5. ' ' → logprob: -9.250864028930664
    6. '   ' → logprob: -9.875864028930664
    7. 'list' → logprob: -10.250864028930664
    8. '           ' → logprob: -11.000864028930664
    9. '                   ' → logprob: -11.125864028930664
    10. '
' → logprob: -11.125864028930664

Token 325: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008246821351349354
    2. ']==' → logprob: -4.883246898651123
    3. ' ]' → logprob: -8.008246421813965
    4. ']>' → logprob: -8.508246421813965
    5. ']!=' → logprob: -10.133246421813965
    6. ']>=' → logprob: -10.133246421813965
    7. ']%' → logprob: -12.008246421813965
    8. '[' → logprob: -12.633246421813965
    9. '   ' → logprob: -12.758246421813965
    10. '']' → logprob: -13.258246421813965

Token 326: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5159863233566284
    2. ' ==' → logprob: -1.0159863233566284
    3. '*' → logprob: -3.765986442565918
    4. ']==' → logprob: -5.265986442565918
    5. '>' → logprob: -5.515986442565918
    6. ' *' → logprob: -6.140986442565918
    7. '%' → logprob: -6.265986442565918
    8. ']' → logprob: -6.390986442565918
    9. ' >' → logprob: -7.015986442565918
    10. '>=' → logprob: -7.390986442565918

Token 327: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.044080667197704315
    2. 'len' → logprob: -3.6690807342529297
    3. 'frequency' → logprob: -4.79408073425293
    4. '(number' → logprob: -5.54408073425293
    5. ' number' → logprob: -5.79408073425293
    6. '0' → logprob: -7.29408073425293
    7. '1' → logprob: -8.04408073425293
    8. '2' → logprob: -8.29408073425293
    9. 'sum' → logprob: -8.29408073425293
    10. '(' → logprob: -8.54408073425293

Token 328: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -9.13388703338569e-06
    2. 'of' → logprob: -11.625009536743164
    3. ' of' → logprob: -17.000009536743164
    4. '   ' → logprob: -17.250009536743164
    5. '_elements' → logprob: -17.250009536743164
    6. 'Of' → logprob: -18.250009536743164
    7. '	of' → logprob: -19.375009536743164
    8. '_OF' → logprob: -20.000009536743164
    9. '```' → logprob: -20.500009536743164
    10. '...' → logprob: -20.875009536743164

Token 329: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.043015748262405396
    2. 'elements' → logprob: -3.168015718460083
    3. ' elements' → logprob: -12.293015480041504
    4. 'Elements' → logprob: -12.668015480041504
    5. '_ELEMENTS' → logprob: -12.668015480041504
    6. '```' → logprob: -13.293015480041504
    7. '3' → logprob: -14.793015480041504
    8. 'element' → logprob: -14.918015480041504
    9. 'list' → logprob: -15.043015480041504
    10. 'int' → logprob: -15.043015480041504

Token 330: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.11474613100290298
    2. ' //' → logprob: -2.23974609375
    3. ':' → logprob: -7.36474609375
    4. '   ' → logprob: -7.98974609375
    5. 'and' → logprob: -8.36474609375
    6. '/' → logprob: -8.61474609375
    7. ' ' → logprob: -8.98974609375
    8. ' and' → logprob: -9.11474609375
    9. '       ' → logprob: -9.48974609375
    10. ' or' → logprob: -9.86474609375

Token 331: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -16.875
    4. '2' → logprob: -16.875
    5. '
' → logprob: -17.0
    6. '

' → logprob: -17.25
    7. '３' → logprob: -17.625
    8. '  ' → logprob: -18.0
    9. ' ' → logprob: -18.25
    10. '
' → logprob: -18.875

Token 332: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.375000953674316
    3. '

' → logprob: -15.750000953674316
    4. '
' → logprob: -16.500001907348633
    5. ' ' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '1' → logprob: -17.500001907348633
    8. '-' → logprob: -19.250001907348633
    9. '
' → logprob: -19.500001907348633
    10. '  ' → logprob: -19.500001907348633

Token 333: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004884569905698299
    2. 'and' → logprob: -5.504884719848633
    3. ' or' → logprob: -7.629884719848633
    4. '        ' → logprob: -9.129884719848633
    5. '           ' → logprob: -9.254884719848633
    6. ' ' → logprob: -10.129884719848633
    7. '       ' → logprob: -10.254884719848633
    8. '            ' → logprob: -11.504884719848633
    9. '    ' → logprob: -11.629884719848633
    10. '   ' → logprob: -12.004884719848633

Token 334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05075235664844513
    2. ' and' → logprob: -3.0507524013519287
    3. '       ' → logprob: -6.55075216293335
    4. ':
' → logprob: -8.550752639770508
    5. '               ' → logprob: -9.175752639770508
    6. ':' → logprob: -9.425752639770508
    7. 'and' → logprob: -9.550752639770508
    8. ' or' → logprob: -9.550752639770508
    9. ',' → logprob: -10.050752639770508
    10. '          ' → logprob: -10.175752639770508

Token 335: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6061108112335205
    2. '       ' → logprob: -1.2311108112335205
    3. '           ' → logprob: -2.7311108112335205
    4. 'keys' → logprob: -3.3561108112335205
    5. ' print' → logprob: -3.4811108112335205
    6. '   ' → logprob: -4.606110572814941
    7. 'for' → logprob: -4.981110572814941
    8. ' keys' → logprob: -5.106110572814941
    9. '               ' → logprob: -5.356110572814941
    10. 'if' → logprob: -7.231110572814941

Token 336: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0003864630125463009
    2. '(' → logprob: -7.8753862380981445
    3. '('' → logprob: -12.250386238098145
    4. '(
' → logprob: -14.375386238098145
    5. '("("' → logprob: -14.625386238098145
    6. '"' → logprob: -14.875386238098145
    7. '("")' → logprob: -16.75038719177246
    8. '(""' → logprob: -17.12538719177246
    9. ' ("' → logprob: -17.12538719177246
    10. '("""' → logprob: -17.75038719177246

Token 337: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0013690461637452245
    2. 'No' → logprob: -6.626368999481201
    3. '"' → logprob: -10.12636947631836
    4. 'YES' → logprob: -13.62636947631836
    5. '"No' → logprob: -13.62636947631836
    6. 'Ye' → logprob: -15.12636947631836
    7. ' Yes' → logprob: -15.75136947631836
    8. '“Yes' → logprob: -16.00136947631836
    9. '0' → logprob: -17.12636947631836
    10. ''' → logprob: -17.62636947631836

Token 338: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.3597641587257385
    2. '")' → logprob: -1.6097640991210938
    3. '       ' → logprob: -2.9847640991210938
    4. '           ' → logprob: -2.9847640991210938
    5. '   ' → logprob: -7.234764099121094
    6. '               ' → logprob: -8.484764099121094
    7. ')' → logprob: -9.734764099121094
    8. '"' → logprob: -9.984764099121094
    9. ')
' → logprob: -10.359764099121094
    10. '")
' → logprob: -10.734764099121094

Token 339: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03824596852064133
    2. '           ' → logprob: -3.288245916366577
    3. '               ' → logprob: -8.788246154785156
    4. '   ' → logprob: -11.163246154785156
    5. '<|end|>' → logprob: -11.413246154785156
    6. '	' → logprob: -11.788246154785156
    7. '	       ' → logprob: -12.163246154785156
    8. '		' → logprob: -12.913246154785156
    9. 'else' → logprob: -13.288246154785156
    10. '
' → logprob: -13.538246154785156

Token 340: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6940911412239075
    2. '           ' → logprob: -0.6940911412239075
    3. 'return' (adapté à ' return') → logprob: -7.194091320037842
    4. '   ' → logprob: -9.194090843200684
    5. 'else' → logprob: -9.694090843200684
    6. '               ' → logprob: -10.819090843200684
    7. ' return' → logprob: -12.569090843200684
    8. '	       ' → logprob: -12.944090843200684
    9. ' else' → logprob: -13.819090843200684
    10. '		' → logprob: -14.819090843200684

Token 341: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44800660014152527
    2. '   ' → logprob: -1.0730066299438477
    3. '
' → logprob: -4.198006629943848
    4. '<|end|>' → logprob: -5.823006629943848
    5. '    
' → logprob: -8.448006629943848
    6. ')' → logprob: -8.448006629943848
    7. ' ' → logprob: -8.698006629943848
    8. '        
' → logprob: -9.073006629943848
    9. '  
' → logprob: -9.823006629943848
    10. '  ' → logprob: -9.823006629943848

Token 342: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22229702770709991
    2. '       ' → logprob: -2.097296953201294
    3. ' ' → logprob: -3.222296953201294
    4. '<|end|>' → logprob: -3.972296953201294
    5. '
' → logprob: -5.847297191619873
    6. '    
' → logprob: -5.847297191619873
    7. '  ' → logprob: -5.847297191619873
    8. ')' → logprob: -6.097297191619873
    9. '\n' → logprob: -6.347297191619873
    10. '    ' → logprob: -6.847297191619873

Token 343: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6349901556968689
    2. '   ' → logprob: -0.7599901556968689
    3. 'if' → logprob: -6.259990215301514
    4. 'else' (adapté à ' else') → logprob: -8.384989738464355
    5. ' print' → logprob: -9.009989738464355
    6. '
' → logprob: -10.009989738464355
    7. '       ' → logprob: -10.634989738464355
    8. 'elif' → logprob: -11.009989738464355
    9. '    
' → logprob: -11.134989738464355
    10. ' if' → logprob: -11.509989738464355

Token 344: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04540601000189781
    2. '       ' → logprob: -4.045405864715576
    3. 'print' → logprob: -4.045405864715576
    4. '   ' → logprob: -4.920405864715576
    5. ':
' → logprob: -6.545405864715576
    6. ' print' → logprob: -7.670405864715576
    7. ':' → logprob: -9.545406341552734
    8. '
' → logprob: -10.920406341552734
    9. '         ' → logprob: -10.920406341552734
    10. '          ' → logprob: -11.045406341552734

Token 345: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08468878269195557
    2. '           ' → logprob: -2.584688663482666
    3. '   ' → logprob: -5.834688663482666
    4. '       ' → logprob: -5.959688663482666
    5. ' print' → logprob: -8.209689140319824
    6. ' ' → logprob: -13.084689140319824
    7. '	print' → logprob: -14.334689140319824
    8. '               ' → logprob: -14.709689140319824
    9. '         ' → logprob: -14.709689140319824
    10. '  ' → logprob: -14.834689140319824

Token 346: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.281485836254433e-05
    2. ' print' → logprob: -9.750092506408691
    3. '   ' → logprob: -10.375092506408691
    4. '           ' → logprob: -12.875092506408691
    5. '       ' → logprob: -14.375092506408691
    6. '	print' → logprob: -16.500093460083008
    7. ' ' → logprob: -17.250093460083008
    8. '  ' → logprob: -18.125093460083008
    9. '               ' → logprob: -18.625093460083008
    10. '```' → logprob: -19.750093460083008

Token 347: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0024802929256111383
    2. '(' → logprob: -6.002480506896973
    3. '(
' → logprob: -12.627480506896973
    4. '("("' → logprob: -14.377480506896973
    5. '('' → logprob: -14.502480506896973
    6. 'No' → logprob: -17.002479553222656
    7. '(No' → logprob: -17.377479553222656
    8. '(""' → logprob: -17.502479553222656
    9. '("")' → logprob: -17.502479553222656
    10. '(

' → logprob: -17.627479553222656

Token 348: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0010384062770754099
    2. '"No' → logprob: -6.876038551330566
    3. '"' → logprob: -12.501038551330566
    4. ' No' → logprob: -14.001038551330566
    5. 'N' → logprob: -14.626038551330566
    6. '"N' → logprob: -15.876038551330566
    7. '   ' → logprob: -16.12603759765625
    8. 'NO' → logprob: -16.25103759765625
    9. '“No' → logprob: -17.12603759765625
    10. '_No' → logprob: -17.12603759765625

Token 349: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2602895200252533
    2. '       ' → logprob: -2.135289430618286
    3. '")' → logprob: -3.260289430618286
    4. '   ' → logprob: -3.385289430618286
    5. ')' → logprob: -3.635289430618286
    6. '")
' → logprob: -5.010289669036865
    7. ')
' → logprob: -5.260289669036865
    8. '		' → logprob: -9.010289192199707
    9. '               ' → logprob: -9.010289192199707
    10. '<|end|>' → logprob: -9.635289192199707

Token 350: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2523103952407837
    2. '       ' → logprob: -1.5023103952407837
    3. '           ' → logprob: -8.002310752868652
    4. '
' → logprob: -11.627310752868652
    5. '    
' → logprob: -11.627310752868652
    6. '<|end|>' → logprob: -11.752310752868652
    7. '	return' → logprob: -11.877310752868652
    8. ')' → logprob: -13.002310752868652
    9. '	   ' → logprob: -13.252310752868652
    10. 'return' → logprob: -13.377310752868652

Token 351: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015201464295387268
    2. 'return' (adapté à ' return') → logprob: -5.015201568603516
    3. '       ' → logprob: -5.140201568603516
    4. '   ' → logprob: -6.140201568603516
    5. ' return' → logprob: -8.265201568603516
    6. '	       ' → logprob: -9.890201568603516
    7. '		' → logprob: -10.015201568603516
    8. '               ' → logprob: -10.015201568603516
    9. '	return' → logprob: -10.515201568603516
    10. '	   ' → logprob: -12.515201568603516

Token 352: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03046811744570732
    2. '    
' → logprob: -4.405467987060547
    3. '
' → logprob: -4.905467987060547
    4. 'if' → logprob: -5.030467987060547
    5. 'elif' → logprob: -6.655467987060547
    6. '\n' → logprob: -7.280467987060547
    7. ' if' → logprob: -7.655467987060547
    8. '  
' → logprob: -7.905467987060547
    9. '<|end|>' → logprob: -8.530467987060547
    10. ')' → logprob: -9.030467987060547

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11700797080993652
    2. 'if' → logprob: -2.2420079708099365
    3. '    
' → logprob: -6.117008209228516
    4. '
' → logprob: -6.992008209228516
    5. ' if' → logprob: -7.242008209228516
    6. 'elif' → logprob: -8.617008209228516
    7. 'keys' → logprob: -10.117008209228516
    8. 'elements' → logprob: -10.992008209228516
    9. '  
' → logprob: -11.492008209228516
    10. 'count' → logprob: -11.867008209228516

Token 354: ' xor' (ID: 106402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09487733244895935
    2. '   ' → logprob: -2.469877243041992
    3. ' if' → logprob: -5.844877243041992
    4. 'elif' → logprob: -6.094877243041992
    5. '    
' → logprob: -7.469877243041992
    6. '
' → logprob: -9.594877243041992
    7. ' ' → logprob: -10.719877243041992
    8. '#' → logprob: -10.719877243041992
    9. '  
' → logprob: -11.344877243041992
    10. 'for' → logprob: -11.469877243041992

Token 355: '_acc' (ID: 35551)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.9148349761962891
    2. '_val' → logprob: -1.039834976196289
    3. '_' → logprob: -2.164834976196289
    4. '_result' → logprob: -2.539834976196289
    5. '_sum' → logprob: -3.664834976196289
    6. '_total' → logprob: -4.414834976196289
    7. ' =' → logprob: -4.664834976196289
    8. 'sum' → logprob: -6.664834976196289
    9. '=' → logprob: -6.664834976196289
    10. '_res' → logprob: -7.664834976196289

Token 356: 'umulator' (ID: 90989)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8343172669410706
    2. 'umulate' → logprob: -1.2093172073364258
    3. 'umulator' → logprob: -1.7093172073364258
    4. 'um' → logprob: -3.209317207336426
    5. ' =' → logprob: -3.834317207336426
    6. '   ' → logprob: -4.959317207336426
    7. 'umul' → logprob: -4.959317207336426
    8. '_' → logprob: -5.459317207336426
    9. ' ^=' → logprob: -6.334317207336426
    10. 'umulative' → logprob: -6.709317207336426

Token 357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575943112373352
    2. ' =' → logprob: -0.825943112373352
    3. '_' → logprob: -13.700942993164062
    4. ' ^=' → logprob: -13.700942993164062
    5. ' ' → logprob: -14.575942993164062
    6. '   ' → logprob: -15.075942993164062
    7. ',' → logprob: -15.825942993164062
    8. 's' → logprob: -15.950942993164062
    9. '_=' → logprob: -16.450942993164062
    10. ' ' → logprob: -16.825942993164062

Token 358: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.5649528298527e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.125075340270996
    4. ' ' → logprob: -19.375076293945312
    5. '  ' → logprob: -20.125076293945312
    6. '
' → logprob: -20.250076293945312
    7. '=' → logprob: -20.625076293945312
    8. '۰' → logprob: -20.750076293945312
    9. 'int' → logprob: -21.125076293945312
    10. '000' → logprob: -21.125076293945312

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.00000762939453
    4. '000' → logprob: -19.50000762939453
    5. '۰' → logprob: -20.12500762939453
    6. 'int' → logprob: -20.37500762939453
    7. '=' → logprob: -20.62500762939453
    8. '1' → logprob: -20.75000762939453
    9. '_' → logprob: -20.87500762939453
    10. '０' → logprob: -21.43750762939453

Token 360: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8321714401245117
    2. 'for' → logprob: -1.3321714401245117
    3. '   ' → logprob: -1.3321714401245117
    4. '_' → logprob: -4.332171440124512
    5. '<|end|>' → logprob: -4.457171440124512
    6. '	for' → logprob: -5.957171440124512
    7. ' ' → logprob: -6.082171440124512
    8. '
' → logprob: -6.457171440124512
    9. '=' → logprob: -6.957171440124512
    10. ',' → logprob: -6.957171440124512

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7485438585281372
    2. ' for' → logprob: -1.1235438585281372
    3. 'for' → logprob: -1.6235438585281372
    4. '	for' → logprob: -5.498543739318848
    5. ' ' → logprob: -8.373543739318848
    6. '  ' → logprob: -9.248543739318848
    7. '    ' → logprob: -10.123543739318848
    8. '    
' → logprob: -10.248543739318848
    9. '<|end|>' → logprob: -10.623543739318848
    10. '
' → logprob: -10.748543739318848

Token 362: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004418367054313421
    2. '   ' → logprob: -5.50441837310791
    3. ' for' → logprob: -8.00441837310791
    4. '
' → logprob: -12.75441837310791
    5. '	for' → logprob: -13.00441837310791
    6. 'from' → logprob: -14.87941837310791
    7. '  ' → logprob: -15.62941837310791
    8. '    
' → logprob: -16.004417419433594
    9. '       ' → logprob: -17.379417419433594
    10. ' ' → logprob: -17.629417419433594

Token 363: ' unique' (ID: 5746)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.01719166897237301
    2. ' element' → logprob: -4.3921918869018555
    3. 'key' → logprob: -5.7671918869018555
    4. 'value' → logprob: -6.8921918869018555
    5. 'number' → logprob: -8.642191886901855
    6. ' key' → logprob: -8.767191886901855
    7. 'num' → logprob: -9.392191886901855
    8. 'item' → logprob: -9.767191886901855
    9. 'frequency' → logprob: -11.017191886901855
    10. ' value' → logprob: -11.267191886901855

Token 364: '_value' (ID: 6734)
  Prédit: '_element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.7435532808303833
    2. '_key' → logprob: -1.4935532808303833
    3. 'element' → logprob: -1.6185532808303833
    4. ' element' → logprob: -3.4935531616210938
    5. ' in' → logprob: -3.7435531616210938
    6. '_number' → logprob: -3.9935531616210938
    7. '_value' → logprob: -4.618553161621094
    8. 'key' → logprob: -4.993553161621094
    9. 'number' → logprob: -5.618553161621094
    10. ',' → logprob: -5.868553161621094

Token 365: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05129610374569893
    2. 'in' → logprob: -3.4262959957122803
    3. ',' → logprob: -4.051296234130859
    4. 's' → logprob: -10.30129623413086
    5. ' ,' → logprob: -10.30129623413086
    6. '   ' → logprob: -12.98879623413086
    7. '	in' → logprob: -13.17629623413086
    8. ' ' → logprob: -13.36379623413086
    9. ',_' → logprob: -13.48879623413086
    10. '_in' → logprob: -13.48879623413086

Token 366: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5048296451568604
    2. 'count' → logprob: -1.0048296451568604
    3. ' frequency' → logprob: -3.7548296451568604
    4. 'frequency' → logprob: -5.129829406738281
    5. ' freq' → logprob: -7.379829406738281
    6. 'freq' → logprob: -8.129829406738281
    7. '_' → logprob: -11.379829406738281
    8. '_count' → logprob: -11.879829406738281
    9. 'occ' → logprob: -12.254829406738281
    10. '   ' → logprob: -12.379829406738281

Token 367: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10388332605361938
    2. ' in' → logprob: -2.3538832664489746
    3. 'in' → logprob: -5.728883266448975
    4. ' ,' → logprob: -8.103883743286133
    5. ',count' → logprob: -9.478883743286133
    6. '   ' → logprob: -12.103883743286133
    7. 'count' → logprob: -12.103883743286133
    8. 's' → logprob: -12.228883743286133
    9. '‌,' → logprob: -12.978883743286133
    10. '<|end|>' → logprob: -13.228883743286133

Token 368: ' frequency' (ID: 19813)
  Prédit: 'frequency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frequency' → logprob: -1.8624639324116288e-06
    2. ' frequency' → logprob: -13.250001907348633
    3. '.frequency' → logprob: -21.500001907348633
    4. 'list' → logprob: -21.750001907348633
    5. 'freq' → logprob: -21.750001907348633
    6. '_frequency' → logprob: -21.875001907348633
    7. '{' → logprob: -22.375001907348633
    8. '   ' → logprob: -22.625001907348633
    9. 'f' → logprob: -22.875001907348633
    10. 'fre' → logprob: -23.250001907348633

Token 369: '_counter' (ID: 35419)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.5763941407203674
    2. '_counter' → logprob: -0.8263941407203674
    3. 'items' → logprob: -8.576394081115723
    4. 'frequency' → logprob: -8.951394081115723
    5. 'Counter' → logprob: -9.451394081115723
    6. 'ounter' → logprob: -10.576394081115723
    7. 'in' → logprob: -11.576394081115723
    8. ' counter' → logprob: -11.826394081115723
    9. '_COUNTER' → logprob: -13.201394081115723
    10. 'acc' → logprob: -13.201394081115723

Token 370: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.05003517121076584
    2. ' in' → logprob: -3.175035238265991
    3. 'items' → logprob: -5.300034999847412
    4. '.iteritems' → logprob: -6.925034999847412
    5. 'in' → logprob: -7.925034999847412
    6. ',' → logprob: -8.17503547668457
    7. ':' → logprob: -8.55003547668457
    8. ' items' → logprob: -9.92503547668457
    9. '_items' → logprob: -10.17503547668457
    10. '   ' → logprob: -10.17503547668457

Token 371: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5945079326629639
    2. ':' → logprob: -0.8445079326629639
    3. '():
' → logprob: -4.094508171081543
    4. ':
' → logprob: -6.594508171081543
    5. '   ' → logprob: -8.719508171081543
    6. '()' → logprob: -10.219508171081543
    7. '):' → logprob: -10.344508171081543
    8. ',' → logprob: -10.594508171081543
    9. ' :' → logprob: -10.844508171081543
    10. '<|end|>' → logprob: -10.844508171081543

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009041957673616707
    2. 'xor' → logprob: -7.750904083251953
    3. ' xor' → logprob: -8.875904083251953
    4. '   ' → logprob: -9.000904083251953
    5. '
' → logprob: -10.375904083251953
    6. ',' → logprob: -10.625904083251953
    7. '[' → logprob: -11.000904083251953
    8. '        
' → logprob: -11.125904083251953
    9. '```' → logprob: -11.375904083251953
    10. 'x' → logprob: -11.500904083251953

Token 373: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' (adapté à ' xor') → logprob: -0.4108688235282898
    2. '       ' → logprob: -1.1608688831329346
    3. 'if' → logprob: -4.0358686447143555
    4. '   ' → logprob: -5.7858686447143555
    5. ' xor' → logprob: -6.2858686447143555
    6. ' if' → logprob: -7.4108686447143555
    7. 'x' → logprob: -8.160868644714355
    8. '```' → logprob: -9.660868644714355
    9. '           ' → logprob: -10.535868644714355
    10. '0' → logprob: -11.660868644714355

Token 374: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.00031615851912647486
    2. '_' → logprob: -8.250316619873047
    3. 'acc' → logprob: -10.750316619873047
    4. '=' → logprob: -10.875316619873047
    5. ' =' → logprob: -12.125316619873047
    6. ' _' → logprob: -13.500316619873047
    7. '_
' → logprob: -13.625316619873047
    8. '_=' → logprob: -14.000316619873047
    9. '```' → logprob: -14.000316619873047
    10. ' ' → logprob: -14.625316619873047

Token 375: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.011399347335100174
    2. 'ulator' → logprob: -4.511399269104004
    3. 'um' → logprob: -9.136399269104004
    4. '_acc' → logprob: -9.511399269104004
    5. '=' → logprob: -9.636399269104004
    6. 'umul' → logprob: -10.261399269104004
    7. 'uator' → logprob: -11.261399269104004
    8. 'culator' → logprob: -12.011399269104004
    9. '   ' → logprob: -12.136399269104004
    10. 'xor' → logprob: -12.136399269104004

Token 376: ' ^=' (ID: 79665)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.3869296610355377
    2. ' ^=' → logprob: -1.1369296312332153
    3. '=' → logprob: -10.261929512023926
    4. ' ^' → logprob: -11.136929512023926
    5. ' ' → logprob: -13.011929512023926
    6. '^^' → logprob: -13.261929512023926
    7. '_^' → logprob: -13.886929512023926
    8. '^)' → logprob: -14.386929512023926
    9. ' ' → logprob: -14.511929512023926
    10. 'ˆ' → logprob: -14.511929512023926

Token 377: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.0004309076175559312
    2. ' unique' → logprob: -7.750431060791016
    3. '(unique' → logprob: -15.375431060791016
    4. 'int' → logprob: -17.625431060791016
    5. '
' → logprob: -18.000431060791016
    6. '   ' → logprob: -18.125431060791016
    7. '.unique' → logprob: -20.250431060791016
    8. '0' → logprob: -21.000431060791016
    9. '       ' → logprob: -21.750431060791016
    10. ' ' → logprob: -21.875431060791016

Token 378: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00012535012501757592
    2. 'value' → logprob: -9.00012493133545
    3. 'alue' → logprob: -13.87512493133545
    4. '_' → logprob: -15.37512493133545
    5. 'acc' → logprob: -15.87512493133545
    6. 'unique' → logprob: -16.125125885009766
    7. '_VALUE' → logprob: -16.375125885009766
    8. 'Value' → logprob: -16.875125885009766
    9. '_values' → logprob: -17.000125885009766
    10. ' value' → logprob: -17.125125885009766

Token 379: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07813012599945068
    2. '
' → logprob: -3.4531302452087402
    3. '<|end|>' → logprob: -3.5781302452087402
    4. '       ' → logprob: -5.57813024520874
    5. 'if' → logprob: -5.57813024520874
    6. '

' → logprob: -6.20313024520874
    7. ',' → logprob: -6.45313024520874
    8. '    
' → logprob: -6.82813024520874
    9. ' if' → logprob: -6.95313024520874
    10. 'print' → logprob: -7.82813024520874

Token 380: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8037901520729065
    2. '   ' → logprob: -0.9287901520729065
    3. '<|end|>' → logprob: -2.1787900924682617
    4. '

' → logprob: -3.6787900924682617
    5. '    
' → logprob: -5.428790092468262
    6. '  
' → logprob: -6.178790092468262
    7. ' ' → logprob: -6.178790092468262
    8. ',' → logprob: -6.303790092468262
    9. 'if' → logprob: -6.928790092468262
    10. ' if' → logprob: -6.928790092468262

Token 381: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04138917103409767
    2. '       ' → logprob: -4.416388988494873
    3. '
' → logprob: -4.791388988494873
    4. '   ' → logprob: -5.041388988494873
    5. ' if' → logprob: -5.041388988494873
    6. 'count' → logprob: -5.416388988494873
    7. '0' → logprob: -7.666388988494873
    8. 'xor' → logprob: -7.916388988494873
    9. '1' → logprob: -8.041389465332031
    10. 'continue' → logprob: -8.291389465332031

Token 382: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00015991552209015936
    2. '(count' → logprob: -9.750160217285156
    3. 'frequency' → logprob: -10.000160217285156
    4. 'xor' → logprob: -10.750160217285156
    5. ' count' → logprob: -11.125160217285156
    6. 'not' → logprob: -12.000160217285156
    7. 'number' → logprob: -12.375160217285156
    8. 'unique' → logprob: -12.875160217285156
    9. '   ' → logprob: -14.000160217285156
    10. 'value' → logprob: -14.125160217285156

Token 383: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.27658432722091675
    2. '!=' → logprob: -2.0265843868255615
    3. '%' → logprob: -2.5265843868255615
    4. ' %' → logprob: -3.5265843868255615
    5. ' <' → logprob: -9.02658462524414
    6. ' not' → logprob: -9.02658462524414
    7. '<' → logprob: -9.40158462524414
    8. '<|end|>' → logprob: -10.27658462524414
    9. ' ' → logprob: -10.40158462524414
    10. 'not' → logprob: -10.90158462524414

Token 384: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.00034928982495330274
    2. ' number' → logprob: -8.000349044799805
    3. '(number' → logprob: -11.500349044799805
    4. ' ' → logprob: -13.875349044799805
    5. '   ' → logprob: -14.250349044799805
    6. 'frequency' → logprob: -14.250349044799805
    7. '0' → logprob: -14.750349044799805
    8. '3' → logprob: -15.000349044799805
    9. '[number' → logprob: -16.250349044799805
    10. '(' → logprob: -16.375349044799805

Token 385: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.546478935983032e-05
    2. 'of' → logprob: -11.500025749206543
    3. '_number' → logprob: -12.625025749206543
    4. '__' → logprob: -12.625025749206543
    5. '_elements' → logprob: -12.750025749206543
    6. '           ' → logprob: -13.625025749206543
    7. '_OF' → logprob: -14.000025749206543
    8. 'Of' → logprob: -14.625025749206543
    9. '   ' → logprob: -14.750025749206543
    10. '       ' → logprob: -14.875025749206543

Token 386: '_elements' (ID: 53344)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.12105020880699158
    2. '(number' → logprob: -2.2460501194000244
    3. ' number' → logprob: -5.8710503578186035
    4. '(' → logprob: -6.2460503578186035
    5. '3' → logprob: -6.4960503578186035
    6. ' (' → logprob: -7.1210503578186035
    7. '[number' → logprob: -7.9960503578186035
    8. '0' → logprob: -8.746049880981445
    9. '{' → logprob: -8.996049880981445
    10. ' ' → logprob: -8.996049880981445

Token 387: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5262841582298279
    2. ' //' → logprob: -0.9012841582298279
    3. '   ' → logprob: -6.526284217834473
    4. '       ' → logprob: -7.026284217834473
    5. '           ' → logprob: -8.401284217834473
    6. '/' → logprob: -8.776284217834473
    7. ' ' → logprob: -9.276284217834473
    8. '```' → logprob: -9.526284217834473
    9. ' ' → logprob: -9.776284217834473
    10. ' /' → logprob: -10.026284217834473

Token 388: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -16.37501335144043
    4. '   ' → logprob: -16.50001335144043
    5. '```' → logprob: -17.37501335144043
    6. '...' → logprob: -18.25001335144043
    7. '۳' → logprob: -18.75001335144043
    8. '  ' → logprob: -19.12501335144043
    9. '       ' → logprob: -19.25001335144043
    10. '<|end|>' → logprob: -19.68751335144043

Token 389: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '۳' → logprob: -19.625001907348633
    5. '```' → logprob: -19.750001907348633
    6. '  ' → logprob: -20.500001907348633
    7. '<|end|>' → logprob: -20.562501907348633
    8. '৩' → logprob: -20.625001907348633
    9. '33' → logprob: -20.750001907348633
    10. '
' → logprob: -20.812501907348633

Token 390: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28656646609306335
    2. ':
' → logprob: -1.9115664958953857
    3. '           ' → logprob: -2.4115664958953857
    4. '       ' → logprob: -5.286566257476807
    5. ':return' → logprob: -5.286566257476807
    6. ' and' → logprob: -7.536566257476807
    7. ' or' → logprob: -8.661566734313965
    8. ' :' → logprob: -8.911566734313965
    9. '   ' → logprob: -9.036566734313965
    10. '):
' → logprob: -9.536566734313965

Token 391: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008548821206204593
    2. 'print' → logprob: -7.250854969024658
    3. ' print' → logprob: -9.7508544921875
    4. '               ' → logprob: -9.7508544921875
    5. 'return' → logprob: -11.3758544921875
    6. '```' → logprob: -12.1258544921875
    7. ' return' → logprob: -13.1258544921875
    8. '          ' → logprob: -13.5008544921875
    9. '		' → logprob: -13.5008544921875
    10. '	       ' → logprob: -13.6258544921875

Token 392: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16068711876869202
    2. '           ' → logprob: -2.160687208175659
    3. '               ' → logprob: -3.660687208175659
    4. ' print' → logprob: -4.91068696975708
    5. '```' → logprob: -9.785687446594238
    6. 'return' → logprob: -10.410687446594238
    7. '       ' → logprob: -12.035687446594238
    8. '
' → logprob: -12.660687446594238
    9. '``' → logprob: -12.785687446594238
    10. '                   ' → logprob: -12.785687446594238

Token 393: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011728443205356598
    2. '(' → logprob: -6.75117301940918
    3. '('' → logprob: -13.25117301940918
    4. '(
' → logprob: -14.37617301940918
    5. 'No' → logprob: -16.12617301940918
    6. '(No' → logprob: -16.75117301940918
    7. '("("' → logprob: -17.12617301940918
    8. '("")' → logprob: -18.00117301940918
    9. '(`' → logprob: -18.75117301940918
    10. '()' → logprob: -18.87617301940918

Token 394: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0025997955817729235
    2. '"No' → logprob: -6.002599716186523
    3. 'print' → logprob: -9.002599716186523
    4. ' No' → logprob: -14.752599716186523
    5. '   ' → logprob: -15.502599716186523
    6. '"' → logprob: -15.877599716186523
    7. 'Print' → logprob: -16.002599716186523
    8. 'NO' → logprob: -16.377599716186523
    9. '```' → logprob: -17.377599716186523
    10. '“No' → logprob: -17.627599716186523

Token 395: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00048238897579722106
    2. '               ' → logprob: -8.125482559204102
    3. '")' → logprob: -9.375482559204102
    4. '")
' → logprob: -9.625482559204102
    5. ')' → logprob: -11.375482559204102
    6. ')
' → logprob: -11.875482559204102
    7. 'return' → logprob: -12.125482559204102
    8. '                   ' → logprob: -12.625482559204102
    9. '       ' → logprob: -12.875482559204102
    10. '		' → logprob: -13.125482559204102

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.843177233240567e-05
    2. 'return' → logprob: -12.000018119812012
    3. '               ' → logprob: -12.125018119812012
    4. ' return' → logprob: -13.125018119812012
    5. '       ' → logprob: -13.375018119812012
    6. '		' → logprob: -13.625018119812012
    7. '                   ' → logprob: -14.375018119812012
    8. '
' → logprob: -14.750018119812012
    9. '   ' → logprob: -14.875018119812012
    10. '	       ' → logprob: -15.875018119812012

Token 397: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002754949266090989
    2. 'return' (adapté à ' return') → logprob: -6.502755165100098
    3. ' return' → logprob: -6.752755165100098
    4. '               ' → logprob: -10.002755165100098
    5. '
' → logprob: -10.377755165100098
    6. '                   ' → logprob: -12.627755165100098
    7. '		' → logprob: -13.627755165100098
    8. '\n' → logprob: -13.627755165100098
    9. '            
' → logprob: -14.127755165100098
    10. '       ' → logprob: -15.627755165100098

Token 398: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013564866036176682
    2. 'print' → logprob: -5.2635650634765625
    3. '
' → logprob: -5.7635650634765625
    4. '    
' → logprob: -5.8885650634765625
    5. '       ' → logprob: -6.8885650634765625
    6. '  
' → logprob: -7.5135650634765625
    7. '        
' → logprob: -8.888565063476562
    8. 'None' → logprob: -9.138565063476562
    9. '\n' → logprob: -9.388565063476562
    10. '' → logprob: -9.388565063476562

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31330981850624084
    2. 'if' → logprob: -1.3133097887039185
    3. ' if' → logprob: -10.563309669494629
    4. 'print' → logprob: -11.438309669494629
    5. '    
' → logprob: -12.188309669494629
    6. '
' → logprob: -12.688309669494629
    7. '       ' → logprob: -13.438309669494629
    8. '```' → logprob: -14.313309669494629
    9. '	if' → logprob: -14.813309669494629
    10. 'continue' → logprob: -15.688309669494629

Token 400: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20336779952049255
    2. '   ' → logprob: -1.703367829322815
    3. 'print' → logprob: -6.328367710113525
    4. ' if' → logprob: -9.078368186950684
    5. '    
' → logprob: -10.453368186950684
    6. '
' → logprob: -10.828368186950684
    7. 'If' → logprob: -13.828368186950684
    8. '	if' → logprob: -13.953368186950684
    9. '        
' → logprob: -14.328368186950684
    10. '```' → logprob: -14.578368186950684

Token 401: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.20146918296813965
    2. ' xor' → logprob: -1.7014691829681396
    3. '   ' → logprob: -9.826469421386719
    4. ' ' → logprob: -13.951469421386719
    5. '0' → logprob: -14.826469421386719
    6. 'x' → logprob: -15.951469421386719
    7. '  ' → logprob: -16.32646942138672
    8. '(x' → logprob: -16.57646942138672
    9. 'X' → logprob: -17.20146942138672
    10. '1' → logprob: -17.32646942138672

Token 402: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -1.6240566083070007e-06
    2. 'acc' → logprob: -13.750001907348633
    3. 'xor' → logprob: -15.500001907348633
    4. ' _' → logprob: -17.000001907348633
    5. '_ac' → logprob: -17.500001907348633
    6. '_' → logprob: -17.875001907348633
    7. '	acc' → logprob: -18.125001907348633
    8. '```' → logprob: -18.125001907348633
    9. '==' → logprob: -18.500001907348633
    10. ' Acc' → logprob: -18.500001907348633

Token 403: 'umulator' (ID: 90989)
  Prédit: 'ulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulator' → logprob: -0.6932179927825928
    2. 'umulator' → logprob: -0.6932179927825928
    3. 'ul' → logprob: -10.443218231201172
    4. 'lator' → logprob: -10.943218231201172
    5. 'culator' → logprob: -12.568218231201172
    6. 'ilator' → logprob: -12.568218231201172
    7. 'um' → logprob: -12.818218231201172
    8. 'uator' → logprob: -13.068218231201172
    9. '   ' → logprob: -13.318218231201172
    10. 'umul' → logprob: -13.568218231201172

Token 404: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05035681650042534
    2. ' ==' → logprob: -3.050356864929199
    3. '!=' → logprob: -6.425356864929199
    4. ' !=' → logprob: -8.9253568649292
    5. '==
' → logprob: -11.5503568649292
    6. '=' → logprob: -13.0503568649292
    7. ' ' → logprob: -13.8003568649292
    8. ' ' → logprob: -14.8003568649292
    9. ')==' → logprob: -15.0503568649292
    10. '()==' → logprob: -15.5503568649292

Token 405: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.250036239624023
    4. '۰' → logprob: -19.500036239624023
    5. 'zero' → logprob: -20.625036239624023
    6. '  ' → logprob: -20.875036239624023
    7. ' ' → logprob: -21.000036239624023
    8. '０' → logprob: -21.125036239624023
    9. '000' → logprob: -21.687536239624023
    10. '```' → logprob: -21.750036239624023

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'zero' → logprob: -17.2500057220459
    4. '   ' → logprob: -18.0000057220459
    5. '
' → logprob: -18.2500057220459
    6. '```' → logprob: -18.8125057220459
    7. '۰' → logprob: -19.8125057220459
    8. ' ' → logprob: -20.3750057220459
    9. '1' → logprob: -20.3750057220459
    10. '_' → logprob: -20.5625057220459

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04364369437098503
    2. ':
' → logprob: -3.1686437129974365
    3. '       ' → logprob: -7.418643474578857
    4. '   ' → logprob: -10.418643951416016
    5. '):' → logprob: -11.793643951416016
    6. '):
' → logprob: -12.543643951416016
    7. ',' → logprob: -13.918643951416016
    8. '<|end|>' → logprob: -14.543643951416016
    9. ':
' → logprob: -14.793643951416016
    10. ')' → logprob: -14.918643951416016

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.3226136767771095e-05
    2. 'print' → logprob: -10.625042915344238
    3. '   ' → logprob: -11.500042915344238
    4. ' print' → logprob: -12.000042915344238
    5. '           ' → logprob: -13.000042915344238
    6. '        
' → logprob: -16.000043869018555
    7. '```' → logprob: -16.500043869018555
    8. '
' → logprob: -17.000043869018555
    9. '               ' → logprob: -17.375043869018555
    10. ',' → logprob: -17.500043869018555

Token 409: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002135748043656349
    2. ' print' → logprob: -6.252135753631592
    3. '       ' → logprob: -8.752135276794434
    4. '   ' → logprob: -10.002135276794434
    5. '	print' → logprob: -12.627135276794434
    6. '           ' → logprob: -14.877135276794434
    7. ' ' → logprob: -18.12713623046875
    8. '.print' → logprob: -18.50213623046875
    9. '```' → logprob: -19.25213623046875
    10. '               ' → logprob: -19.37713623046875

Token 410: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002036595979006961
    2. '(' → logprob: -8.500204086303711
    3. '('' → logprob: -16.25020408630371
    4. '("("' → logprob: -17.12520408630371
    5. '(
' → logprob: -17.37520408630371
    6. '"' → logprob: -17.87520408630371
    7. '()' → logprob: -19.50020408630371
    8. '("")' → logprob: -20.50020408630371
    9. '(("' → logprob: -20.75020408630371
    10. '(True' → logprob: -21.25020408630371

Token 411: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.001171056181192398
    2. '"' → logprob: -6.751171112060547
    3. 'No' → logprob: -14.751171112060547
    4. 'YES' → logprob: -15.751171112060547
    5. '“Yes' → logprob: -15.751171112060547
    6. '"No' → logprob: -16.126171112060547
    7. ' Yes' → logprob: -16.751171112060547
    8. ''' → logprob: -17.376171112060547
    9. '("' → logprob: -19.626171112060547
    10. '```' → logprob: -20.876171112060547

Token 412: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5732906460762024
    2. '   ' → logprob: -1.1982905864715576
    3. '")
' → logprob: -2.5732905864715576
    4. ')' → logprob: -2.9482905864715576
    5. ')
' → logprob: -5.198290824890137
    6. '<|end|>' → logprob: -9.073290824890137
    7. '()' → logprob: -9.448290824890137
    8. '       ' → logprob: -9.448290824890137
    9. '```' → logprob: -10.323290824890137
    10. '')' → logprob: -11.073290824890137

Token 413: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.386147626675665e-05
    2. 'else' → logprob: -9.625073432922363
    3. '       ' → logprob: -12.750073432922363
    4. '<|end|>' → logprob: -13.000073432922363
    5. ' else' → logprob: -13.125073432922363
    6. '	else' → logprob: -14.625073432922363
    7. '
' → logprob: -17.12507438659668
    8. '```' → logprob: -17.25007438659668
    9. '<|end|>' → logprob: -17.25007438659668
    10. ')' → logprob: -18.12507438659668

Token 414: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015260485233739018
    2. 'else' → logprob: -6.50152587890625
    3. '       ' → logprob: -11.12652587890625
    4. ' else' → logprob: -11.75152587890625
    5. 'return' (adapté à ' return') → logprob: -14.00152587890625
    6. '<|end|>' → logprob: -15.62652587890625
    7. '	else' → logprob: -16.00152587890625
    8. ' ' → logprob: -18.25152587890625
    9. '  ' → logprob: -18.50152587890625
    10. '           ' → logprob: -18.62652587890625

Token 415: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04621991142630577
    2. 'print' → logprob: -3.546219825744629
    3. 'else' → logprob: -4.671219825744629
    4. '
' → logprob: -5.296219825744629
    5. '    
' → logprob: -7.171219825744629
    6. 'No' → logprob: -7.671219825744629
    7. '<|end|>' → logprob: -7.796219825744629
    8. '```' → logprob: -9.421219825744629
    9. ' else' → logprob: -9.546219825744629
    10. '\n' → logprob: -9.921219825744629

Token 416: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029874637722969055
    2. '   ' → logprob: -3.529874563217163
    3. 'else' → logprob: -9.779874801635742
    4. 'No' → logprob: -10.154874801635742
    5. ' print' → logprob: -10.654874801635742
    6. '	print' → logprob: -13.029874801635742
    7. '```' → logprob: -14.029874801635742
    8. '
' → logprob: -14.154874801635742
    9. '    
' → logprob: -15.154874801635742
    10. '<|end|>' → logprob: -15.279874801635742

Token 417: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.107425062713446e-06
    2. '   ' → logprob: -12.125006675720215
    3. ' print' → logprob: -13.375006675720215
    4. 'else' → logprob: -17.87500762939453
    5. 'No' → logprob: -18.00000762939453
    6. '	print' → logprob: -18.12500762939453
    7. '```' → logprob: -19.75000762939453
    8. '#print' → logprob: -21.00000762939453
    9. ' ' → logprob: -21.12500762939453
    10. '.print' → logprob: -21.12500762939453

Token 418: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.000045776367188
    3. '('' → logprob: -17.750045776367188
    4. '("("' → logprob: -18.250045776367188
    5. '("")' → logprob: -19.000045776367188
    6. '(
' → logprob: -19.750045776367188
    7. '"No' → logprob: -20.375045776367188
    8. 'No' → logprob: -20.500045776367188
    9. '()' → logprob: -20.625045776367188
    10. '(""' → logprob: -22.000045776367188

Token 419: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.5491004129871726e-05
    2. '"No' → logprob: -10.000045776367188
    3. '"' → logprob: -18.250045776367188
    4. ' No' → logprob: -18.375045776367188
    5. 'NO' → logprob: -20.250045776367188
    6. 'Yes' → logprob: -20.875045776367188
    7. '>No' → logprob: -21.375045776367188
    8. '“No' → logprob: -21.625045776367188
    9. 'no' → logprob: -21.750045776367188
    10. '_No' → logprob: -21.875045776367188

Token 420: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -8.44706009957008e-05
    2. ')' → logprob: -9.62508487701416
    3. ')")' → logprob: -11.62508487701416
    4. '")
' → logprob: -11.75008487701416
    5. '()' → logprob: -14.00008487701416
    6. '}")' → logprob: -15.12508487701416
    7. '```' → logprob: -15.62508487701416
    8. '')' → logprob: -15.75008487701416
    9. ' ")' → logprob: -16.000083923339844
    10. '\n' → logprob: -18.125083923339844

Token 421: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' Problem' (ID: 26113)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38697052001953125
    2. '#' → logprob: -1.1369705200195312
    3. '```' → logprob: -9.886970520019531
    4. 'if' → logprob: -10.886970520019531
    5. '<|end|>' → logprob: -11.511970520019531
    6. 'import' → logprob: -12.261970520019531
    7. 'from' → logprob: -12.886970520019531
    8. '#if' → logprob: -13.261970520019531
    9. '...' → logprob: -13.386970520019531
    10. ' #' → logprob: -13.511970520019531

Token 426: ' B' (ID: 418)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1179732084274292
    2. '_B' → logprob: -2.8679733276367188
    3. ' B' → logprob: -3.2429733276367188
    4. 'B' → logprob: -4.242973327636719
    5. ' _' → logprob: -6.992973327636719
    6. ' ' → logprob: -9.617973327636719
    7. '_b' → logprob: -10.617973327636719
    8. '<|end|>' → logprob: -11.242973327636719
    9. ' ' → logprob: -12.367973327636719
    10. '_A' → logprob: -12.367973327636719

Token 427: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020866614067927003
    2. '()' → logprob: -8.875208854675293
    3. ':def' → logprob: -10.625208854675293
    4. ' def' → logprob: -11.125208854675293
    5. ':' → logprob: -11.750208854675293
    6. '
' → logprob: -11.875208854675293
    7. '(def' → logprob: -12.125208854675293
    8. '#' → logprob: -12.375208854675293
    9. '(' → logprob: -14.000208854675293
    10. 'import' → logprob: -14.250208854675293

Token 428: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -15.125000953674316
    3. 'de' → logprob: -15.750000953674316
    4. '#' → logprob: -17.125
    5. '
' → logprob: -17.25
    6. 'class' → logprob: -18.25
    7. 'import' → logprob: -18.75
    8. ':def' → logprob: -19.125
    9. 'from' → logprob: -19.75
    10. 'ndef' → logprob: -19.75

Token 429: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.09071993827819824
    2. 'solve' → logprob: -2.4657199382781982
    3. ' read' → logprob: -6.465720176696777
    4. 'read' → logprob: -8.965720176696777
    5. 'b' → logprob: -11.465720176696777
    6. ' main' → logprob: -11.590720176696777
    7. 'def' → logprob: -11.715720176696777
    8. ' bfs' → logprob: -11.840720176696777
    9. ' find' → logprob: -12.215720176696777
    10. ' ' → logprob: -12.840720176696777

Token 430: '_problem' (ID: 162384)
  Prédit: '_problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_problem' → logprob: -0.000993987312540412
    2. '_' → logprob: -7.0009942054748535
    3. '_b' → logprob: -10.875993728637695
    4. '_B' → logprob: -10.875993728637695
    5. ' _' → logprob: -11.625993728637695
    6. '_pro' → logprob: -11.875993728637695
    7. '_prob' → logprob: -12.250993728637695
    8. 'Problem' → logprob: -12.625993728637695
    9. '
' → logprob: -12.750993728637695
    10. '"_' → logprob: -13.125993728637695

Token 431: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -1.1160349458805285e-05
    2. 'B' → logprob: -11.875011444091797
    3. '_A' → logprob: -13.250011444091797
    4. '_C' → logprob: -14.000011444091797
    5. '_' → logprob: -14.250011444091797
    6. '```' → logprob: -14.875011444091797
    7. '_BGR' → logprob: -15.125011444091797
    8. '_b' → logprob: -16.875011444091797
    9. '_D' → logprob: -17.500011444091797
    10. '##_' → logprob: -17.875011444091797

Token 432: '():

' (ID: 101746)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.27099974633893e-05
    2. '():
' → logprob: -11.875012397766113
    3. ' ():' → logprob: -12.125012397766113
    4. '()' → logprob: -15.750012397766113
    5. 'def' → logprob: -16.37501335144043
    6. '():
' → logprob: -18.25001335144043
    7. '(' → logprob: -19.87501335144043
    8. '():

' → logprob: -20.00001335144043
    9. ':' → logprob: -20.12501335144043
    10. ' ()' → logprob: -21.12501335144043

Token 433: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7839357852935791
    2. 'number' → logprob: -1.033935785293579
    3. '   ' → logprob: -2.283935785293579
    4. 'pass' → logprob: -3.158935785293579
    5. 'def' → logprob: -3.533935785293579
    6. 'N' → logprob: -4.533935546875
    7. 't' → logprob: -7.533935546875
    8. '#' → logprob: -7.658935546875
    9. '...' → logprob: -8.033935546875
    10. 'num' → logprob: -8.283935546875

Token 434: ' def' (ID: 1056)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5281843543052673
    2. 'n' → logprob: -1.028184413909912
    3. 't' → logprob: -3.403184413909912
    4. ' number' → logprob: -5.153184413909912
    5. '   ' → logprob: -5.528184413909912
    6. 'N' → logprob: -6.153184413909912
    7. ' n' → logprob: -6.278184413909912
    8. 'q' → logprob: -6.903184413909912
    9. 'pass' → logprob: -7.028184413909912
    10. 'def' (adapté à ' def') → logprob: -7.278184413909912

Token 435: ' depth' (ID: 13636)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.4045562744140625
    2. ' main' → logprob: -1.7795562744140625
    3. 'dfs' → logprob: -2.1545562744140625
    4. 'is' → logprob: -2.2795562744140625
    5. ' is' → logprob: -2.7795562744140625
    6. 'read' → logprob: -2.7795562744140625
    7. ' dfs' → logprob: -3.2795562744140625
    8. 'can' → logprob: -3.5295562744140625
    9. 'd' → logprob: -3.7795562744140625
    10. 'solve' → logprob: -3.9045562744140625

Token 436: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.006021110340952873
    2. '_limit' → logprob: -6.006021022796631
    3. '_' → logprob: -7.006021022796631
    4. '_l' → logprob: -7.381021022796631
    5. 'first' → logprob: -7.506021022796631
    6. '_search' → logprob: -8.006021499633789
    7. '(node' → logprob: -8.506021499633789
    8. '_depth' → logprob: -8.631021499633789
    9. '_d' → logprob: -9.256021499633789
    10. '_count' → logprob: -9.631021499633789

Token 437: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.014179266057908535
    2. 'search' → logprob: -4.264179229736328
    3. ' search' → logprob: -12.139179229736328
    4. 's' → logprob: -12.139179229736328
    5. '_' → logprob: -13.639179229736328
    6. 'Search' → logprob: -13.764179229736328
    7. '-search' → logprob: -13.764179229736328
    8. '_visit' → logprob: -15.014179229736328
    9. '_s' → logprob: -15.139179229736328
    10. '_SEARCH' → logprob: -15.264179229736328

Token 438: '(current' (ID: 15023)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.014595450833439827
    2. '(u' → logprob: -5.2645955085754395
    3. '(v' → logprob: -5.7645955085754395
    4. '(vertex' → logprob: -5.7645955085754395
    5. ' (' → logprob: -6.3895955085754395
    6. '(' → logprob: -6.8895955085754395
    7. '(graph' → logprob: -8.889595031738281
    8. '(root' → logprob: -9.889595031738281
    9. '(current' → logprob: -10.014595031738281
    10. '(start' → logprob: -10.764595031738281

Token 439: '_node' (ID: 11390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11565031856298447
    2. '_node' → logprob: -2.2406504154205322
    3. '_vertex' → logprob: -6.490650177001953
    4. ',node' → logprob: -7.490650177001953
    5. 'node' → logprob: -7.865650177001953
    6. ' ,' → logprob: -8.490650177001953
    7. '_token' → logprob: -10.365650177001953
    8. '   ' → logprob: -10.740650177001953
    9. ',_' → logprob: -10.740650177001953
    10. '_,' → logprob: -11.490650177001953

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003233070601709187
    2. ',node' → logprob: -8.375323295593262
    3. ' ,' → logprob: -9.375323295593262
    4. ',current' → logprob: -12.250323295593262
    5. ',n' → logprob: -14.000323295593262
    6. '   ' → logprob: -14.125323295593262
    7. ',u' → logprob: -14.750323295593262
    8. '(node' → logprob: -15.125323295593262
    9. ',parent' → logprob: -15.125323295593262
    10. ',v' → logprob: -15.750323295593262

Token 441: ' visited' (ID: 18416)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.9003350734710693
    2. ' parent' → logprob: -0.9003350734710693
    3. 'visited' → logprob: -2.6503350734710693
    4. 'graph' → logprob: -3.2753350734710693
    5. ' graph' → logprob: -3.2753350734710693
    6. ' visited' → logprob: -3.9003350734710693
    7. 'adj' → logprob: -4.650335311889648
    8. 'current' → logprob: -5.650335311889648
    9. ' adjacency' → logprob: -6.400335311889648
    10. ' current' → logprob: -6.525335311889648

Token 442: '_nodes' (ID: 34593)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011190937831997871
    2. '):' → logprob: -4.511190891265869
    3. ' ,' → logprob: -9.386191368103027
    4. '):
' → logprob: -9.886191368103027
    5. ' ):' → logprob: -13.136191368103027
    6. ':' → logprob: -13.511191368103027
    7. ')' → logprob: -13.886191368103027
    8. ',
' → logprob: -14.511191368103027
    9. ',set' → logprob: -14.761191368103027
    10. '):
' → logprob: -15.011191368103027

Token 443: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028191357851028442
    2. '):' → logprob: -5.877819061279297
    3. ' ,' → logprob: -11.377819061279297
    4. '):
' → logprob: -13.627819061279297
    5. ')' → logprob: -15.002819061279297
    6. ':' → logprob: -15.252819061279297
    7. '   ' → logprob: -15.627819061279297
    8. ' ):' → logprob: -16.002819061279297
    9. ',n' → logprob: -16.252819061279297
    10. ',s' → logprob: -16.752819061279297

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7893020510673523
    2. ',' → logprob: -1.164302110671997
    3. '   ' → logprob: -1.664302110671997
    4. ':' → logprob: -3.664302110671997
    5. '    ' → logprob: -4.789301872253418
    6. '):' → logprob: -4.914301872253418
    7. '<|end|>' → logprob: -7.039301872253418
    8. ' ' → logprob: -8.414301872253418
    9. '  ' → logprob: -8.664301872253418
    10. ' :' → logprob: -8.914301872253418

Token 445: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29864856600761414
    2. 'visited' → logprob: -2.2986485958099365
    3. 'stack' → logprob: -2.4236485958099365
    4. ' stack' → logprob: -3.7986485958099365
    5. '	stack' → logprob: -4.173648357391357
    6. '       ' → logprob: -4.173648357391357
    7. ' visited' → logprob: -4.298648357391357
    8. '    ' → logprob: -7.173648357391357
    9. ' for' → logprob: -7.923648357391357
    10. '  ' → logprob: -8.173648834228516

Token 446: ' adjacent' (ID: 39069)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.10300776362419128
    2. ' neighbor' → logprob: -2.3530077934265137
    3. ' next' → logprob: -6.978007793426514
    4. 'adj' → logprob: -7.103007793426514
    5. 'next' → logprob: -7.103007793426514
    6. ' adjacent' → logprob: -8.853007316589355
    7. ' neighbour' → logprob: -10.353007316589355
    8. 'node' → logprob: -10.603007316589355
    9. 'ne' → logprob: -11.603007316589355
    10. ' node' → logprob: -11.728007316589355

Token 447: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.1048021987080574
    2. ' in' → logprob: -3.354802131652832
    3. '_token' → logprob: -3.479802131652832
    4. '_' → logprob: -3.729802131652832
    5. 'in' → logprob: -5.104802131652832
    6. '_in' → logprob: -6.604802131652832
    7. '_nodes' → logprob: -7.354802131652832
    8. ' _' → logprob: -7.979802131652832
    9. 'node' → logprob: -7.979802131652832
    10. ',' → logprob: -8.229802131652832

Token 448: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42890307307243347
    2. 'in' → logprob: -1.0539031028747559
    3. '	in' → logprob: -8.803902626037598
    4. ',' → logprob: -10.428902626037598
    5. ',in' → logprob: -11.928902626037598
    6. ' ' → logprob: -11.928902626037598
    7. '   ' → logprob: -13.053902626037598
    8. '_in' → logprob: -13.553902626037598
    9. '  ' → logprob: -13.678902626037598
    10. '[in' → logprob: -14.178902626037598

Token 449: ' adjacency' (ID: 177015)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06302214413881302
    2. 'adj' → logprob: -2.8130221366882324
    3. ' graph' → logprob: -7.688022136688232
    4. ' adjacency' → logprob: -7.813022136688232
    5. 'tree' → logprob: -8.81302261352539
    6. 'range' → logprob: -11.06302261352539
    7. 'neighbors' → logprob: -12.18802261352539
    8. 'node' → logprob: -12.56302261352539
    9. 'edges' → logprob: -12.56302261352539
    10. 'graphs' → logprob: -12.56302261352539

Token 450: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.010388655588030815
    2. '[current' → logprob: -4.7603888511657715
    3. 'list' → logprob: -6.3853888511657715
    4. '_lists' → logprob: -9.635388374328613
    5. 'List' → logprob: -11.010388374328613
    6. ' list' → logprob: -13.135388374328613
    7. 's' → logprob: -13.885388374328613
    8. 'lists' → logprob: -15.135388374328613
    9. '[' → logprob: -15.260388374328613
    10. 'current' → logprob: -15.510388374328613

Token 451: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.250000953674316
    3. 'current' → logprob: -15.000000953674316
    4. '[' → logprob: -16.125001907348633
    5. '[cur' → logprob: -16.875001907348633
    6. ' [' → logprob: -18.875001907348633
    7. '[curr' → logprob: -19.375001907348633
    8. ' current' → logprob: -19.625001907348633
    9. '	current' → logprob: -19.750001907348633
    10. '       ' → logprob: -19.750001907348633

Token 452: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.266944157890975e-05
    2. 'node' → logprob: -10.125072479248047
    3. '[node' → logprob: -11.250072479248047
    4. '_token' → logprob: -12.125072479248047
    5. '_nodes' → logprob: -12.375072479248047
    6. '])' → logprob: -12.875072479248047
    7. ']' → logprob: -13.625072479248047
    8. '-node' → logprob: -14.000072479248047
    9. '_NODE' → logprob: -14.375072479248047
    10. '```' → logprob: -14.750072479248047

Token 453: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0006322591798380017
    2. ']:
' → logprob: -7.625632286071777
    3. ']' → logprob: -9.125632286071777
    4. ':' → logprob: -11.250632286071777
    5. '):' → logprob: -12.125632286071777
    6. ']:
' → logprob: -12.125632286071777
    7. '       ' → logprob: -13.000632286071777
    8. ']):' → logprob: -13.250632286071777
    9. ' ]' → logprob: -13.500632286071777
    10. '   ' → logprob: -13.625632286071777

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003777743550017476
    2. ' if' → logprob: -6.878777980804443
    3. ':
' → logprob: -7.003777980804443
    4. ':' → logprob: -7.253777980804443
    5. '	       ' → logprob: -7.503777980804443
    6. '       ' → logprob: -8.253777503967285
    7. ',' → logprob: -9.878777503967285
    8. ' :' → logprob: -10.253777503967285
    9. '		' → logprob: -10.378777503967285
    10. '   ' → logprob: -10.628777503967285

Token 455: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2076977640390396
    2. 'if' (adapté à ' if') → logprob: -1.8326977491378784
    3. '       ' → logprob: -3.957697868347168
    4. '               ' → logprob: -5.832697868347168
    5. '           ' → logprob: -5.957697868347168
    6. '	       ' → logprob: -6.207697868347168
    7. '	if' → logprob: -8.332697868347168
    8. '		       ' → logprob: -8.332697868347168
    9. '	' → logprob: -8.707697868347168
    10. '        	' → logprob: -9.832697868347168

Token 456: ' visited' (ID: 18416)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.24328148365020752
    2. 'not' → logprob: -2.368281364440918
    3. ' not' → logprob: -2.743281364440918
    4. ' adjacent' → logprob: -2.868281364440918
    5. 'visited' → logprob: -7.618281364440918
    6. '   ' → logprob: -7.993281364440918
    7. ' adj' → logprob: -9.243281364440918
    8. ' visited' → logprob: -9.618281364440918
    9. '	not' → logprob: -10.243281364440918
    10. ' ' → logprob: -10.493281364440918

Token 457: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -7.64839569455944e-05
    2. '_' → logprob: -11.125076293945312
    3. '_node' → logprob: -11.125076293945312
    4. '_tokens' → logprob: -11.375076293945312
    5. 'adj' → logprob: -11.625076293945312
    6. '_adj' → logprob: -12.000076293945312
    7. '[' → logprob: -12.250076293945312
    8. '[_' → logprob: -12.625076293945312
    9. '
' → logprob: -13.000076293945312
    10. '```' → logprob: -13.250076293945312

Token 458: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14398786425590515
    2. '[current' → logprob: -2.0189878940582275
    3. '[next' → logprob: -6.893987655639648
    4. 'not' → logprob: -9.018987655639648
    5. ' not' → logprob: -9.518987655639648
    6. '[curr' → logprob: -11.268987655639648
    7. 'current' → logprob: -11.393987655639648
    8. '[in' → logprob: -11.518987655639648
    9. '   ' → logprob: -11.643987655639648
    10. 'adj' → logprob: -11.893987655639648

Token 459: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.005205174908041954
    2. ' adjacent' → logprob: -5.380205154418945
    3. 'not' → logprob: -9.005205154418945
    4. '   ' → logprob: -9.255205154418945
    5. ']' → logprob: -9.505205154418945
    6. '(adj' → logprob: -9.755205154418945
    7. 'current' → logprob: -9.755205154418945
    8. '[' → logprob: -10.255205154418945
    9. ' not' → logprob: -10.255205154418945
    10. '           ' → logprob: -10.755205154418945

Token 460: 'acent' (ID: 28063)
  Prédit: 'isted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isted' → logprob: -0.014155986718833447
    2. 'ected' → logprob: -5.389155864715576
    3. 'ested' → logprob: -5.764155864715576
    4. 'ited' → logprob: -7.014155864715576
    5. 'ised' → logprob: -7.014155864715576
    6. '][' → logprob: -7.389155864715576
    7. 'usted' → logprob: -7.389155864715576
    8. ']' → logprob: -7.514155864715576
    9. 'ed' → logprob: -8.014156341552734
    10. '[' → logprob: -8.014156341552734

Token 461: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.004271427169442177
    2. '_nodes' → logprob: -6.254271507263184
    3. 'node' → logprob: -6.629271507263184
    4. ']' → logprob: -7.629271507263184
    5. '[node' → logprob: -8.379271507263184
    6. ']==' → logprob: -9.879271507263184
    7. '   ' → logprob: -10.004271507263184
    8. '[' → logprob: -10.504271507263184
    9. ']=' → logprob: -10.629271507263184
    10. '       ' → logprob: -10.879271507263184

Token 462: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022232472896575928
    2. ']==' → logprob: -3.8972325325012207
    3. ']:' → logprob: -6.522232532501221
    4. ']:
' → logprob: -8.897232055664062
    5. ' ]' → logprob: -9.647232055664062
    6. '==' → logprob: -12.647232055664062
    7. ']!=' → logprob: -12.647232055664062
    8. ']<' → logprob: -13.397232055664062
    9. '   ' → logprob: -13.522232055664062
    10. '[' → logprob: -13.647232055664062

Token 463: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016047211829572916
    2. ' continue' → logprob: -6.8766045570373535
    3. '           ' → logprob: -8.751605033874512
    4. '       ' → logprob: -9.751605033874512
    5. '	           ' → logprob: -9.751605033874512
    6. '=False' → logprob: -9.751605033874512
    7. '	       ' → logprob: -10.001605033874512
    8. 'continue' → logprob: -10.126605033874512
    9. '		       ' → logprob: -10.126605033874512
    10. '	continue' → logprob: -10.876605033874512

Token 464: ' visited' (ID: 18416)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7195810675621033
    2. '               ' → logprob: -0.8445810675621033
    3. 'continue' → logprob: -2.719581127166748
    4. '           ' → logprob: -4.469581127166748
    5. '                   ' → logprob: -5.844581127166748
    6. '	continue' → logprob: -6.344581127166748
    7. '	       ' → logprob: -7.844581127166748
    8. '	           ' → logprob: -7.969581127166748
    9. '
' → logprob: -8.84458065032959
    10. '       ' → logprob: -9.59458065032959

Token 465: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.0006547740194946527
    2. 'Nodes' → logprob: -8.625655174255371
    3. '_node' → logprob: -8.750655174255371
    4. 'False' → logprob: -9.250655174255371
    5. '_tokens' → logprob: -9.500655174255371
    6. 'nodes' → logprob: -10.125655174255371
    7. '[current' → logprob: -10.875655174255371
    8. '=False' → logprob: -11.125655174255371
    9. '   ' → logprob: -11.625655174255371
    10. '[' → logprob: -11.625655174255371

Token 466: '[' (ID: 58)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.2838822603225708
    2. ' continue' → logprob: -2.4088821411132812
    3. '[' → logprob: -2.7838821411132812
    4. '<|end|>' → logprob: -3.5338821411132812
    5. 'continue' → logprob: -3.7838821411132812
    6. '	continue' → logprob: -4.033882141113281
    7. '=False' → logprob: -4.908882141113281
    8. ' ' → logprob: -5.908882141113281
    9. '<|end|>' → logprob: -6.033882141113281
    10. '[next' → logprob: -6.533882141113281

Token 467: 'adj' (ID: 57001)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6630575656890869
    2. 'adj' → logprob: -0.7880575656890869
    3. '0' → logprob: -4.163057327270508
    4. 'current' → logprob: -4.913057327270508
    5. 'True' → logprob: -5.413057327270508
    6. ' False' → logprob: -6.538057327270508
    7. ' ' → logprob: -8.538057327270508
    8. '1' → logprob: -8.538057327270508
    9. ' adjacent' → logprob: -9.163057327270508
    10. ']' → logprob: -9.413057327270508

Token 468: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.10987751185894012
    2. '_nodes' → logprob: -2.484877586364746
    3. 'ected' → logprob: -4.984877586364746
    4. '_node' → logprob: -5.609877586364746
    5. 'oints' → logprob: -6.484877586364746
    6. 'odes' → logprob: -6.734877586364746
    7. 'ent' → logprob: -6.859877586364746
    8. 'ested' → logprob: -7.359877586364746
    9. 'ointed' → logprob: -7.484877586364746
    10. 'oded' → logprob: -7.734877586364746

Token 469: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.004564938135445118
    2. 'node' → logprob: -5.5045647621154785
    3. '_nodes' → logprob: -7.7545647621154785
    4. ']' → logprob: -11.254565238952637
    5. '_token' → logprob: -12.129565238952637
    6. 'Node' → logprob: -12.129565238952637
    7. 'nodes' → logprob: -12.379565238952637
    8. '[node' → logprob: -12.379565238952637
    9. '1' → logprob: -12.629565238952637
    10. ']=' → logprob: -13.004565238952637

Token 470: ']' (ID: 60)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6793591380119324
    2. ' continue' → logprob: -1.3043591976165771
    3. '==' → logprob: -2.429359197616577
    4. ']' → logprob: -2.929359197616577
    5. ']==' → logprob: -3.054359197616577
    6. '	continue' → logprob: -5.054358959197998
    7. ' ==' → logprob: -5.304358959197998
    8. ':' → logprob: -5.554358959197998
    9. ':return' → logprob: -5.679358959197998
    10. '=' → logprob: -6.304358959197998

Token 471: ' =' (ID: 314)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16532456874847412
    2. '=' → logprob: -2.9153246879577637
    3. '           ' → logprob: -3.2903246879577637
    4. ' continue' → logprob: -3.4153246879577637
    5. '               ' → logprob: -4.040324687957764
    6. '==' → logprob: -5.415324687957764
    7. ' =' → logprob: -6.040324687957764
    8. '	continue' → logprob: -7.040324687957764
    9. '                   ' → logprob: -7.415324687957764
    10. '=False' → logprob: -7.915324687957764

Token 472: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00033784625702537596
    2. ' False' → logprob: -8.000337600708008
    3. 'True' → logprob: -13.000337600708008
    4. '0' → logprob: -16.250337600708008
    5. '   ' → logprob: -16.750337600708008
    6. ' True' → logprob: -19.500337600708008
    7. '
' → logprob: -20.500337600708008
    8. '(False' → logprob: -20.750337600708008
    9. '=False' → logprob: -21.500337600708008
    10. 'F' → logprob: -21.500337600708008

Token 473: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001085497424355708
    2. 'True' → logprob: -9.25010871887207
    3. ' False' → logprob: -11.50010871887207
    4. '0' → logprob: -13.12510871887207
    5. 'not' → logprob: -15.62510871887207
    6. '   ' → logprob: -16.75010871887207
    7. '1' → logprob: -18.87510871887207
    8. 'false' → logprob: -19.00010871887207
    9. '
' → logprob: -19.50010871887207
    10. '(False' → logprob: -19.75010871887207

Token 474: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31085556745529175
    2. '<|end|>' → logprob: -1.4358556270599365
    3. '                   ' → logprob: -4.185855388641357
    4. '           ' → logprob: -4.435855388641357
    5. '<|end|>' → logprob: -6.810855388641357
    6. '
' → logprob: -8.060855865478516
    7. '                ' → logprob: -8.185855865478516
    8. '       ' → logprob: -9.060855865478516
    9. '   ' → logprob: -9.560855865478516
    10. '                               ' → logprob: -10.185855865478516

Token 476: ' depth' (ID: 13636)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20467819273471832
    2. 'return' → logprob: -2.2046782970428467
    3. '                   ' → logprob: -3.9546782970428467
    4. ' return' → logprob: -4.079678058624268
    5. '           ' → logprob: -4.704678058624268
    6. 'continue' → logprob: -5.079678058624268
    7. 'depth' (adapté à ' depth') → logprob: -5.204678058624268
    8. 'he' → logprob: -5.204678058624268
    9. '<|end|>' → logprob: -5.954678058624268
    10. 'dfs' → logprob: -6.454678058624268

Token 477: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -6.253713218029588e-05
    2. 'first' → logprob: -10.375062942504883
    3. 'First' → logprob: -11.375062942504883
    4. '_FIRST' → logprob: -12.000062942504883
    5. '               ' → logprob: -12.750062942504883
    6. '_f' → logprob: -13.750062942504883
    7. '_depth' → logprob: -13.875062942504883
    8. '	first' → logprob: -14.125062942504883
    9. '_current' → logprob: -14.250062942504883
    10. '		' → logprob: -14.375062942504883

Token 478: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.0014105896698310971
    2. 'search' → logprob: -6.626410484313965
    3. '_' → logprob: -9.501410484313965
    4. '_visit' → logprob: -12.626410484313965
    5. '_stack' → logprob: -13.251410484313965
    6. 'Search' → logprob: -14.501410484313965
    7. '_first' → logprob: -14.626410484313965
    8. '_s' → logprob: -14.626410484313965
    9. '_find' → logprob: -14.876410484313965
    10. ')' → logprob: -15.126410484313965

Token 479: '(adj' (ID: 141921)
  Prédit: '(adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(adj' → logprob: -1.5048530030981055e-06
    2. '(ad' → logprob: -13.875001907348633
    3. 'adj' → logprob: -14.875001907348633
    4. '(' → logprob: -16.125001907348633
    5. '(
' → logprob: -18.000001907348633
    6. ' (' → logprob: -20.375001907348633
    7. '(next' → logprob: -21.375001907348633
    8. ' adjacent' → logprob: -21.500001907348633
    9. '(aux' → logprob: -21.625001907348633
    10. 'Adjacent' → logprob: -21.875001907348633

Token 480: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0005644689663313329
    2. 'adj' → logprob: -7.8755645751953125
    3. '(adj' → logprob: -8.875564575195312
    4. '_adj' → logprob: -10.625564575195312
    5. 'acency' → logprob: -11.875564575195312
    6. 'ent' → logprob: -13.000564575195312
    7. ' adjacent' → logprob: -13.375564575195312
    8. 'ec' → logprob: -13.375564575195312
    9. 'ac' → logprob: -13.750564575195312
    10. '_node' → logprob: -13.750564575195312

Token 481: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0006201040814630687
    2. '_nodes' → logprob: -8.125619888305664
    3. 'node' → logprob: -8.125619888305664
    4. 'nodes' → logprob: -12.000619888305664
    5. '_list' → logprob: -12.375619888305664
    6. '_' → logprob: -12.750619888305664
    7. '[node' → logprob: -12.750619888305664
    8. ')' → logprob: -13.250619888305664
    9. '
' → logprob: -13.500619888305664
    10. 'adj' → logprob: -13.750619888305664

Token 482: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006801814306527376
    2. ',' → logprob: -5.006801605224609
    3. ')
' → logprob: -9.75680160522461
    4. '       ' → logprob: -12.13180160522461
    5. '   ' → logprob: -12.25680160522461
    6. ' )' → logprob: -12.38180160522461
    7. ',)' → logprob: -12.50680160522461
    8. '           ' → logprob: -13.00680160522461
    9. '               ' → logprob: -13.50680160522461
    10. ',current' → logprob: -13.63180160522461

Token 483: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0021857109386473894
    2. ' visited' → logprob: -6.127185821533203
    3. 'adj' → logprob: -15.377185821533203
    4. '               ' → logprob: -16.627185821533203
    5. '                   ' → logprob: -16.627185821533203
    6. '
' → logprob: -17.002185821533203
    7. 'Visited' → logprob: -17.127185821533203
    8. '              ' → logprob: -17.252185821533203
    9. '   ' → logprob: -17.252185821533203
    10. '           ' → logprob: -17.377185821533203

Token 484: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -12.750003814697266
    3. ')' → logprob: -15.125003814697266
    4. 'nodes' → logprob: -16.500003814697266
    5. '_)' → logprob: -16.625003814697266
    6. '```' → logprob: -16.625003814697266
    7. '_tokens' → logprob: -16.875003814697266
    8. ')_' → logprob: -17.000003814697266
    9. '_states' → logprob: -17.125003814697266
    10. '_node' → logprob: -17.250003814697266

Token 485: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011963568249484524
    2. ')
' → logprob: -9.12511920928955
    3. '       ' → logprob: -12.25011920928955
    4. ' )' → logprob: -12.75011920928955
    5. '   ' → logprob: -14.00011920928955
    6. '           ' → logprob: -14.25011920928955
    7. '               ' → logprob: -14.50011920928955
    8. ')

' → logprob: -15.37511920928955
    9. ')return' → logprob: -16.250120162963867
    10. '<|end|>' → logprob: -16.375120162963867

Token 486: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' flip' (ID: 29130)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.13003697991371155
    2. 'not' → logprob: -2.8800370693206787
    3. 'False' → logprob: -4.0050368309021
    4. ' visited' → logprob: -4.1300368309021
    5. 'len' → logprob: -4.6300368309021
    6. ' not' → logprob: -4.6300368309021
    7. 'adj' → logprob: -5.2550368309021
    8. ' False' → logprob: -6.0050368309021
    9. 'True' → logprob: -7.0050368309021
    10. 'sum' → logprob: -7.2550368309021

Token 489: '_flag' (ID: 25269)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4635788202285767
    2. '_nodes' → logprob: -1.4635788202285767
    3. '_count' → logprob: -1.8385788202285767
    4. '_' → logprob: -2.713578701019287
    5. 'ed' → logprob: -2.963578701019287
    6. '[' → logprob: -3.088578701019287
    7. '_flag' → logprob: -3.838578701019287
    8. '_adj' → logprob: -3.963578701019287
    9. '_states' → logprob: -4.088578701019287
    10. '[current' → logprob: -4.338578701019287

Token 490: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46176835894584656
    2. '[' → logprob: -1.586768388748169
    3. ' ==' → logprob: -2.461768388748169
    4. '==' → logprob: -3.211768388748169
    5. '[current' → logprob: -3.336768388748169
    6. '<|end|>' → logprob: -7.33676815032959
    7. ' ' → logprob: -7.46176815032959
    8. '   ' → logprob: -7.58676815032959
    9. ':
' → logprob: -7.83676815032959
    10. ' :' → logprob: -7.96176815032959

Token 491: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.15722212195396423
    2. 'current' → logprob: -2.032222032546997
    3. '0' → logprob: -4.782222270965576
    4. '[current' → logprob: -6.157222270965576
    5. ' current' → logprob: -6.157222270965576
    6. '[' → logprob: -7.282222270965576
    7. ' adjacent' → logprob: -7.907222270965576
    8. ']' → logprob: -8.907221794128418
    9. '(adj' → logprob: -8.907221794128418
    10. '1' → logprob: -9.157221794128418

Token 492: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.015178798697888851
    2. 'acency' → logprob: -4.765178680419922
    3. 'ected' → logprob: -5.140178680419922
    4. 'ex' → logprob: -8.640178680419922
    5. 'ec' → logprob: -8.890178680419922
    6. 'ac' → logprob: -9.640178680419922
    7. '_nodes' → logprob: -9.765178680419922
    8. '_flag' → logprob: -10.015178680419922
    9. '[' → logprob: -10.265178680419922
    10. 'ested' → logprob: -11.015178680419922

Token 493: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0031108111143112183
    2. '_flag' → logprob: -6.253110885620117
    3. '_nodes' → logprob: -6.878110885620117
    4. 'node' → logprob: -10.253110885620117
    5. '[node' → logprob: -10.503110885620117
    6. ']_' → logprob: -10.503110885620117
    7. ']' → logprob: -10.878110885620117
    8. '_index' → logprob: -12.378110885620117
    9. '[' → logprob: -12.628110885620117
    10. '_' → logprob: -12.878110885620117

Token 494: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.19763612747192383
    2. ']' → logprob: -2.322636127471924
    3. ']:
' → logprob: -3.072636127471924
    4. ']==' → logprob: -3.447636127471924
    5. ' ]' → logprob: -6.197636127471924
    6. '[' → logprob: -7.072636127471924
    7. ']:
' → logprob: -9.197635650634766
    8. ']>' → logprob: -9.697635650634766
    9. ']:

' → logprob: -10.072635650634766
    10. '][' → logprob: -11.197635650634766

Token 495: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.489687442779541
    2. ':' → logprob: -1.989687442779541
    3. ':
' → logprob: -2.364687442779541
    4. '                       ' → logprob: -2.489687442779541
    5. '==' → logprob: -4.239687442779541
    6. ' ==' → logprob: -4.364687442779541
    7. ' =' → logprob: -4.364687442779541
    8. '               ' → logprob: -4.489687442779541
    9. '[' → logprob: -5.239687442779541
    10. '():
' → logprob: -5.614687442779541

Token 496: ' edge' (ID: 11165)
  Prédit: ' flip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' flip' → logprob: -0.6095070242881775
    2. 'flip' → logprob: -1.4845070838928223
    3. '                       ' → logprob: -1.9845070838928223
    4. '                   ' → logprob: -2.8595070838928223
    5. ' visited' → logprob: -4.734507083892822
    6. 'visited' → logprob: -4.734507083892822
    7. ' current' → logprob: -4.984507083892822
    8. '               ' → logprob: -5.859507083892822
    9. 'current' → logprob: -6.359507083892822
    10. ' return' → logprob: -6.734507083892822

Token 497: '_key' (ID: 6724)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35903123021125793
    2. '_flip' → logprob: -1.7340312004089355
    3. '_index' → logprob: -3.1090312004089355
    4. '_flag' → logprob: -3.4840312004089355
    5. '_list' → logprob: -3.7340312004089355
    6. '[' → logprob: -5.1090312004089355
    7. '_indices' → logprob: -5.7340312004089355
    8. '_fl' → logprob: -5.7340312004089355
    9. '_' → logprob: -5.8590312004089355
    10. '_count' → logprob: -6.3590312004089355

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09969601780176163
    2. '=' → logprob: -3.099695920944214
    3. '=(' → logprob: -3.349695920944214
    4. '[(' → logprob: -4.849696159362793
    5. '[current' → logprob: -6.224696159362793
    6. ' =(' → logprob: -6.724696159362793
    7. ',' → logprob: -6.974696159362793
    8. '[' → logprob: -6.974696159362793
    9. 's' → logprob: -7.474696159362793
    10. '=current' → logprob: -7.849696159362793

Token 499: ' (' (ID: 350)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.4861765503883362
    2. '(adj' → logprob: -0.9861765503883362
    3. '(ad' → logprob: -4.611176490783691
    4. '(f' → logprob: -7.236176490783691
    5. 'current' → logprob: -7.486176490783691
    6. ' (' → logprob: -8.236176490783691
    7. 'adj' → logprob: -8.611176490783691
    8. '(tuple' → logprob: -9.611176490783691
    9. '   ' → logprob: -9.986176490783691
    10. '(sorted' → logprob: -10.111176490783691

Token 500: 'min' (ID: 1493)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.14728984236717224
    2. 'adj' → logprob: -2.147289752960205
    3. 'min' → logprob: -4.022289752960205
    4. ' current' → logprob: -6.272289752960205
    5. ' adjacent' → logprob: -9.397290229797363
    6. '(current' → logprob: -9.397290229797363
    7. ' min' → logprob: -9.772290229797363
    8. '(adj' → logprob: -10.397290229797363
    9. '   ' → logprob: -10.772290229797363
    10. 'visited' → logprob: -11.272290229797363

Token 501: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.10068192332983017
    2. 'current' → logprob: -2.350682020187378
    3. 'adj' → logprob: -7.850681781768799
    4. '(adj' → logprob: -10.225682258605957
    5. ',current' → logprob: -10.850682258605957
    6. '(' → logprob: -11.725682258605957
    7. ' current' → logprob: -11.850682258605957
    8. '(ad' → logprob: -12.600682258605957
    9. '(edge' → logprob: -12.850682258605957
    10. '(
' → logprob: -12.975682258605957

Token 502: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.951771421066951e-05
    2. 'node' → logprob: -10.875029563903809
    3. 'current' → logprob: -12.500029563903809
    4. '(current' → logprob: -13.250029563903809
    5. 'adj' → logprob: -13.500029563903809
    6. '_nodes' → logprob: -14.125029563903809
    7. 'Node' → logprob: -14.750029563903809
    8. ')' → logprob: -14.750029563903809
    9. '[current' → logprob: -15.000029563903809
    10. '(node' → logprob: -15.125029563903809

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030697984038852155
    2. ' ,' → logprob: -8.500307083129883
    3. ',
' → logprob: -9.750307083129883
    4. ',current' → logprob: -10.750307083129883
    5. '<|end|>' → logprob: -11.500307083129883
    6. ',next' → logprob: -12.625307083129883
    7. 'adj' → logprob: -13.500307083129883
    8. ',int' → logprob: -13.750307083129883
    9. ',max' → logprob: -14.125307083129883
    10. ',end' → logprob: -14.125307083129883

Token 504: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0023673244286328554
    2. ' adjacent' → logprob: -6.1273674964904785
    3. 'max' → logprob: -8.62736701965332
    4. ' max' → logprob: -14.00236701965332
    5. '   ' → logprob: -14.12736701965332
    6. '(adj' → logprob: -14.87736701965332
    7. ' adj' → logprob: -15.25236701965332
    8. 'current' → logprob: -15.87736701965332
    9. 'Adjacent' → logprob: -15.87736701965332
    10. ' ' → logprob: -16.37736701965332

Token 505: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.003160133957862854
    2. ',' → logprob: -6.753159999847412
    3. 'node' → logprob: -6.878159999847412
    4. 'ode' → logprob: -8.12816047668457
    5. 'on' → logprob: -8.25316047668457
    6. ',node' → logprob: -9.12816047668457
    7. 'ent' → logprob: -10.00316047668457
    8. 'Node' → logprob: -10.12816047668457
    9. '_nodes' → logprob: -10.25316047668457
    10. 'e' → logprob: -10.62816047668457

Token 506: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06290651857852936
    2. '),' → logprob: -2.812906503677368
    3. ',
' → logprob: -7.562906742095947
    4. ' ,' → logprob: -8.812906265258789
    5. ',current' → logprob: -8.937906265258789
    6. ',),' → logprob: -9.687906265258789
    7. '),
' → logprob: -10.687906265258789
    8. ')' → logprob: -11.437906265258789
    9. '   ' → logprob: -11.437906265258789
    10. '),(' → logprob: -11.812906265258789

Token 507: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04864254966378212
    2. ' max' → logprob: -3.048642635345459
    3. 'current' → logprob: -10.5486421585083
    4. 'min' → logprob: -10.7986421585083
    5. ' current' → logprob: -12.0486421585083
    6. 'adj' → logprob: -13.6736421585083
    7. ' min' → logprob: -14.7986421585083
    8. '(max' → logprob: -15.1736421585083
    9. ')' → logprob: -15.5486421585083
    10. '    ' → logprob: -16.048643112182617

Token 508: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0297551192343235
    2. 'current' → logprob: -3.529755115509033
    3. ',current' → logprob: -13.279755592346191
    4. ' current' → logprob: -14.154755592346191
    5. '[current' → logprob: -14.404755592346191
    6. ')' → logprob: -14.779755592346191
    7. '=current' → logprob: -14.779755592346191
    8. '$current' → logprob: -15.279755592346191
    9. '(' → logprob: -15.529755592346191
    10. '   ' → logprob: -15.904755592346191

Token 509: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.694766489090398e-05
    2. 'node' → logprob: -10.000066757202148
    3. 'current' → logprob: -10.875066757202148
    4. '_key' → logprob: -13.750066757202148
    5. '_nodes' → logprob: -14.875066757202148
    6. 'Node' → logprob: -15.000066757202148
    7. '(current' → logprob: -15.250066757202148
    8. ')' → logprob: -15.750066757202148
    9. '_NODE' → logprob: -16.00006675720215
    10. '_current' → logprob: -17.12506675720215

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026007455307990313
    2. ',current' → logprob: -6.00260066986084
    3. ' ,' → logprob: -9.87760066986084
    4. '))' → logprob: -11.25260066986084
    5. ',node' → logprob: -11.25260066986084
    6. '),' → logprob: -11.62760066986084
    7. 'current' → logprob: -11.75260066986084
    8. ')' → logprob: -11.87760066986084
    9. ',
' → logprob: -12.12760066986084
    10. '(current' → logprob: -12.12760066986084

Token 511: ' adjacent' (ID: 39069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.16088484227657318
    2. 'current' → logprob: -1.9108848571777344
    3. ' adjacent' → logprob: -7.535884857177734
    4. ' current' → logprob: -9.035884857177734
    5. 'max' → logprob: -12.910884857177734
    6. 'curr' → logprob: -13.660884857177734
    7. 'connected' → logprob: -13.785884857177734
    8. '   ' → logprob: -13.910884857177734
    9. '(adj' → logprob: -14.035884857177734
    10. ' ' → logprob: -15.410884857177734

Token 512: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0016129353316500783
    2. 'node' → logprob: -6.501613140106201
    3. '_key' → logprob: -9.126612663269043
    4. '1' → logprob: -13.876612663269043
    5. ')' → logprob: -15.251612663269043
    6. 'Node' → logprob: -15.501612663269043
    7. '_nodes' → logprob: -16.25161361694336
    8. ' node' → logprob: -16.75161361694336
    9. '```' → logprob: -16.75161361694336
    10. 'ode' → logprob: -16.87661361694336

Token 513: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008416688651777804
    2. ')
' → logprob: -7.1258416175842285
    3. '))' → logprob: -11.375842094421387
    4. '   ' → logprob: -12.125842094421387
    5. ' )' → logprob: -12.750842094421387
    6. '                   ' → logprob: -12.875842094421387
    7. '),' → logprob: -13.000842094421387
    8. ')
' → logprob: -13.000842094421387
    9. ',' → logprob: -13.250842094421387
    10. '<|end|>' → logprob: -13.750842094421387

Token 514: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05088265612721443
    2. ')' → logprob: -3.925882577896118
    3. '               ' → logprob: -4.300882816314697
    4. ' =' → logprob: -5.675882816314697
    5. '           ' → logprob: -5.800882816314697
    6. '                       ' → logprob: -6.050882816314697
    7. ':' → logprob: -6.425882816314697
    8. '):
' → logprob: -6.675882816314697
    9. '       ' → logprob: -7.300882816314697
    10. '):' → logprob: -7.300882816314697

Token 515: ' edge' (ID: 11165)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23135866224765778
    2. 'flip' → logprob: -1.9813586473464966
    3. 'fl' → logprob: -4.106358528137207
    4. '               ' → logprob: -4.231358528137207
    5. 'edge' (adapté à ' edge') → logprob: -4.356358528137207
    6. ' flip' → logprob: -4.981358528137207
    7. 'edges' → logprob: -5.481358528137207
    8. '                       ' → logprob: -6.231358528137207
    9. ' flipped' → logprob: -6.356358528137207
    10. ' edge' → logprob: -6.356358528137207

Token 516: '_orientation' (ID: 169549)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.07379408180713654
    2. '_flip' → logprob: -2.94879412651062
    3. '_keys' → logprob: -4.573793888092041
    4. '_flag' → logprob: -6.073793888092041
    5. '_fl' → logprob: -6.448793888092041
    6. 's' → logprob: -7.073793888092041
    7. '_index' → logprob: -7.698793888092041
    8. '_map' → logprob: -7.823793888092041
    9. '_edges' → logprob: -7.823793888092041
    10. '_values' → logprob: -8.0737943649292

Token 517: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21133440732955933
    2. 's' → logprob: -1.711334466934204
    3. '[(' → logprob: -5.461334228515625
    4. ' =' → logprob: -5.836334228515625
    5. '_changes' → logprob: -7.586334228515625
    6. '=edge' → logprob: -7.711334228515625
    7. '_flip' → logprob: -7.836334228515625
    8. '_edges' → logprob: -7.961334228515625
    9. '_map' → logprob: -8.711334228515625
    10. '_keys' → logprob: -8.961334228515625

Token 518: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.000644764571916312
    2. ' edge' → logprob: -7.375644683837891
    3. ']' → logprob: -11.87564468383789
    4. '(edge' → logprob: -12.25064468383789
    5. '[' → logprob: -12.62564468383789
    6. '=edge' → logprob: -13.50064468383789
    7. '
' → logprob: -14.62564468383789
    8. '   ' → logprob: -14.75064468383789
    9. ' ' → logprob: -15.62564468383789
    10. '][' → logprob: -16.00064468383789

Token 519: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -5.097437315271236e-05
    2. '[' → logprob: -11.37505054473877
    3. 'key' → logprob: -11.87505054473877
    4. ')' → logprob: -12.25005054473877
    5. 'Key' → logprob: -12.25005054473877
    6. '   ' → logprob: -12.62505054473877
    7. 's' → logprob: -12.87505054473877
    8. ',' → logprob: -12.87505054473877
    9. '           ' → logprob: -13.25005054473877
    10. '])' → logprob: -13.37505054473877

Token 520: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009768366580829024
    2. ']=' → logprob: -7.000977039337158
    3. ' ]' → logprob: -10.2509765625
    4. ']+=' → logprob: -11.5009765625
    5. '[' → logprob: -12.1259765625
    6. ')' → logprob: -12.2509765625
    7. '])' → logprob: -12.2509765625
    8. '=' → logprob: -13.8759765625
    9. '][' → logprob: -14.0009765625
    10. ']=-' → logprob: -14.2509765625

Token 521: ' ^=' (ID: 79665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24000751972198486
    2. ' =' → logprob: -1.9900075197219849
    3. ' ^=' → logprob: -2.6150074005126953
    4. '^' → logprob: -5.865007400512695
    5. '[' → logprob: -8.240007400512695
    6. '   ' → logprob: -8.740007400512695
    7. '+=' → logprob: -9.365007400512695
    8. 'flip' → logprob: -10.365007400512695
    9. ' +=' → logprob: -10.990007400512695
    10. '=True' → logprob: -10.990007400512695

Token 522: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'flip' → logprob: -15.500031471252441
    4. '   ' → logprob: -16.000032424926758
    5. ' flip' → logprob: -19.250032424926758
    6. '                   ' → logprob: -19.375032424926758
    7. '           ' → logprob: -20.000032424926758
    8. '0' → logprob: -20.375032424926758
    9. '  ' → logprob: -20.375032424926758
    10. 'True' → logprob: -20.375032424926758

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.500007629394531
    4. 'flip' → logprob: -14.750007629394531
    5. '           ' → logprob: -18.75000762939453
    6. '       ' → logprob: -19.37500762939453
    7. 'True' → logprob: -19.37500762939453
    8. '                   ' → logprob: -19.62500762939453
    9. ' flip' → logprob: -19.75000762939453
    10. ' ' → logprob: -19.87500762939453

Token 524: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: ' flip' (ID: 29130)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -14.00000286102295
    3. '_flags' → logprob: -14.37500286102295
    4. ' _' → logprob: -14.50000286102295
    5. 'flag' → logprob: -15.37500286102295
    6. '
' → logprob: -15.75000286102295
    7. '_FLAG' → logprob: -16.000003814697266
    8. '"_' → logprob: -16.125003814697266
    9. '\' → logprob: -16.375003814697266
    10. '_f' → logprob: -16.625003814697266

Token 528: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.061999063938856125
    2. '[' → logprob: -2.8119990825653076
    3. 'current' → logprob: -11.436999320983887
    4. 'adj' → logprob: -12.436999320983887
    5. '[node' → logprob: -12.686999320983887
    6. '[parent' → logprob: -12.686999320983887
    7. '[cur' → logprob: -12.936999320983887
    8. '[curr' → logprob: -12.936999320983887
    9. ' [' → logprob: -14.311999320983887
    10. '=current' → logprob: -14.686999320983887

Token 529: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0008451257599517703
    2. 'node' → logprob: -7.625844955444336
    3. 'adj' → logprob: -8.500844955444336
    4. ']' → logprob: -9.250844955444336
    5. '_adj' → logprob: -10.875844955444336
    6. '_nodes' → logprob: -11.500844955444336
    7. '_flag' → logprob: -11.500844955444336
    8. '[node' → logprob: -12.125844955444336
    9. '[' → logprob: -12.375844955444336
    10. '])' → logprob: -13.000844955444336

Token 530: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001818097778595984
    2. ' ]' → logprob: -6.5018181800842285
    3. ']=' → logprob: -8.25181770324707
    4. '<|end|>' → logprob: -10.62681770324707
    5. ')' → logprob: -11.87681770324707
    6. '=' → logprob: -12.00181770324707
    7. ' =' → logprob: -12.00181770324707
    8. ']+=' → logprob: -12.87681770324707
    9. '<|end|>' → logprob: -12.87681770324707
    10. ']
' → logprob: -13.12681770324707

Token 531: ' ^=' (ID: 79665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39268726110458374
    2. ' =' → logprob: -1.1426873207092285
    3. ' ^=' → logprob: -6.0176873207092285
    4. '=True' → logprob: -6.3926873207092285
    5. '<|end|>' → logprob: -6.8926873207092285
    6. '[' → logprob: -8.14268684387207
    7. ' ' → logprob: -9.76768684387207
    8. '=False' → logprob: -9.76768684387207
    9. '   ' → logprob: -9.89268684387207
    10. ' |=' → logprob: -10.01768684387207

Token 532: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014257101574912667
    2. 'flip' → logprob: -6.626425743103027
    3. ' ' → logprob: -9.376425743103027
    4. ' flip' → logprob: -11.376425743103027
    5. 'edge' → logprob: -13.376425743103027
    6. '   ' → logprob: -13.751425743103027
    7. '0' → logprob: -15.313925743103027
    8. 'fl' → logprob: -15.313925743103027
    9. 'True' → logprob: -15.813925743103027
    10. '.flip' → logprob: -17.25142478942871

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006762498524039984
    2. 'flip' → logprob: -5.006762504577637
    3. ' ' → logprob: -10.756762504577637
    4. ' flip' → logprob: -11.006762504577637
    5. 'edge' → logprob: -12.006762504577637
    6. '   ' → logprob: -14.006762504577637
    7. 'fl' → logprob: -14.319262504577637
    8. '0' → logprob: -15.006762504577637
    9. '.flip' → logprob: -16.19426155090332
    10. '_flip' → logprob: -16.31926155090332

Token 534: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 536: ' flip' (ID: 29130)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0008028378360904753
    2. '_' → logprob: -7.375802993774414
    3. ' _' → logprob: -10.125802993774414
    4. 'flag' → logprob: -10.625802993774414
    5. ')' → logprob: -11.000802993774414
    6. '_flags' → logprob: -11.625802993774414
    7. '   ' → logprob: -11.625802993774414
    8. '_f' → logprob: -11.625802993774414
    9. 'Flag' → logprob: -11.625802993774414
    10. ')_' → logprob: -11.750802993774414

Token 538: '[' (ID: 58)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.07895477861166
    2. '[' → logprob: -2.5789546966552734
    3. 'current' → logprob: -10.078954696655273
    4. 'adj' → logprob: -11.578954696655273
    5. '[cur' → logprob: -12.078954696655273
    6. '[curr' → logprob: -13.078954696655273
    7. '[parent' → logprob: -13.203954696655273
    8. '[node' → logprob: -13.453954696655273
    9. '```' → logprob: -14.203954696655273
    10. '[
' → logprob: -15.453954696655273

Token 539: 'adj' (ID: 57001)
  Prédit: 'adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0032311868853867054
    2. 'current' → logprob: -5.753231048583984
    3. '(adj' → logprob: -10.378231048583984
    4. ' adjacent' → logprob: -11.003231048583984
    5. ' current' → logprob: -14.253231048583984
    6. '   ' → logprob: -14.253231048583984
    7. 'connected' → logprob: -14.378231048583984
    8. 'node' → logprob: -15.128231048583984
    9. ' ' → logprob: -15.128231048583984
    10. 'Adjacent' → logprob: -15.253231048583984

Token 540: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -3.79811754100956e-05
    2. 'acency' → logprob: -10.875038146972656
    3. '[current' → logprob: -11.125038146972656
    4. 'current' → logprob: -13.000038146972656
    5. 'ac' → logprob: -14.000038146972656
    6. '_nodes' → logprob: -15.250038146972656
    7. '_node' → logprob: -15.250038146972656
    8. 'cent' → logprob: -15.500038146972656
    9. '[' → logprob: -16.250038146972656
    10. '```' → logprob: -16.375038146972656

Token 541: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.941161776310764e-05
    2. '_nodes' → logprob: -11.250039100646973
    3. 'ent' → logprob: -11.500039100646973
    4. '_user' → logprob: -12.375039100646973
    5. 'node' → logprob: -12.750039100646973
    6. 'adj' → logprob: -13.375039100646973
    7. '_flag' → logprob: -13.750039100646973
    8. ')' → logprob: -13.875039100646973
    9. '_code' → logprob: -14.375039100646973
    10. '_agent' → logprob: -14.500039100646973

Token 542: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6047699318733066e-05
    2. ' ]' → logprob: -11.500016212463379
    3. ')]' → logprob: -13.250016212463379
    4. ']=' → logprob: -14.000016212463379
    5. ')' → logprob: -14.375016212463379
    6. ']+=' → logprob: -14.500016212463379
    7. ']]' → logprob: -14.625016212463379
    8. ']
' → logprob: -14.875016212463379
    9. ']^' → logprob: -14.875016212463379
    10. '`]' → logprob: -15.000016212463379

Token 543: ' ^=' (ID: 79665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5585658550262451
    2. ' ^=' → logprob: -0.9335658550262451
    3. '^' → logprob: -3.558565855026245
    4. ' =' → logprob: -5.183566093444824
    5. ' ^' → logprob: -7.558566093444824
    6. ')' → logprob: -9.683566093444824
    7. '<|end|>' → logprob: -10.308566093444824
    8. ']' → logprob: -10.683566093444824
    9. '=False' → logprob: -10.933566093444824
    10. ' ' → logprob: -11.683566093444824

Token 544: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002517515793442726
    2. ' ' → logprob: -6.0025177001953125
    3. '0' → logprob: -10.127517700195312
    4. '   ' → logprob: -14.252517700195312
    5. '```' → logprob: -14.440017700195312
    6. ' ' → logprob: -16.690017700195312
    7. '`' → logprob: -16.815017700195312
    8. '  ' → logprob: -16.877517700195312
    9. '
' → logprob: -16.940017700195312
    10. ')' → logprob: -17.252517700195312

Token 545: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -11.000019073486328
    3. '0' → logprob: -13.250019073486328
    4. '   ' → logprob: -16.437519073486328
    5. '```' → logprob: -16.750019073486328
    6. '' → logprob: -17.500019073486328
    7. 'current' → logprob: -18.500019073486328
    8. '  ' → logprob: -18.625019073486328
    9. '`' → logprob: -18.687519073486328
    10. '-' → logprob: -19.000019073486328

Token 546: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023931732401251793
    2. '    ' → logprob: -5.148931503295898
    3. '       ' → logprob: -5.148931503295898
    4. '<|end|>' → logprob: -5.648931503295898
    5. ' ' → logprob: -6.273931503295898
    6. '    
' → logprob: -6.648931503295898
    7. ' for' → logprob: -7.273931503295898
    8. 'def' → logprob: -7.773931503295898
    9. ' flip' → logprob: -7.773931503295898
    10. 'visited' → logprob: -8.023931503295898

Token 549: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.2166411478538066e-05
    2. '_' → logprob: -10.750052452087402
    3. '   ' → logprob: -10.750052452087402
    4. ' =' → logprob: -12.875052452087402
    5. ' of' → logprob: -13.250052452087402
    6. 'of' → logprob: -13.625052452087402
    7. '=' → logprob: -14.000052452087402
    8. '_nodes' → logprob: -14.500052452087402
    9. '	of' → logprob: -14.625052452087402
    10. '_s' → logprob: -15.500052452087402

Token 550: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.007592791225761175
    2. 'nodes' → logprob: -5.882592678070068
    3. '_vertices' → logprob: -5.882592678070068
    4. '_tokens' → logprob: -6.632592678070068
    5. '_edges' → logprob: -7.632592678070068
    6. 'vertices' → logprob: -9.382593154907227
    7. ' nodes' → logprob: -9.882593154907227
    8. 'tokens' → logprob: -10.507593154907227
    9. 'edges' → logprob: -11.632593154907227
    10. '_elements' → logprob: -12.382593154907227

Token 551: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8393204808235168
    2. ',' → logprob: -1.089320421218872
    3. '=' → logprob: -1.464320421218872
    4. ' ,' → logprob: -8.214320182800293
    5. '=int' → logprob: -11.089320182800293
    6. '   ' → logprob: -11.214320182800293
    7. ' ' → logprob: -12.464320182800293
    8. ',n' → logprob: -12.714320182800293
    9. ',num' → logprob: -12.964320182800293
    10. ',int' → logprob: -13.214320182800293

Token 552: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.13853570818901062
    2. ' number' → logprob: -2.263535737991333
    3. 'edge' → logprob: -4.638535499572754
    4. 'edges' → logprob: -5.138535499572754
    5. '_' → logprob: -5.763535499572754
    6. ' =' → logprob: -6.513535499572754
    7. ' edges' → logprob: -6.888535499572754
    8. ' edge' → logprob: -7.013535499572754
    9. 'space' → logprob: -8.013535499572754
    10. ' queries' → logprob: -8.013535499572754

Token 553: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.00011510594777064398
    2. 'of' → logprob: -10.250115394592285
    3. ' of' → logprob: -10.625115394592285
    4. '_' → logprob: -11.000115394592285
    5. '=' → logprob: -11.375115394592285
    6. '_tokens' → logprob: -11.875115394592285
    7. '_OF' → logprob: -12.000115394592285
    8. '   ' → logprob: -12.500115394592285
    9. 'Of' → logprob: -12.750115394592285
    10. '	of' → logprob: -12.750115394592285

Token 554: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.010488930158317089
    2. 'edges' → logprob: -4.635488986968994
    3. ' edges' → logprob: -7.510488986968994
    4. '_tokens' → logprob: -9.260488510131836
    5. '_queries' → logprob: -11.135488510131836
    6. '_nodes' → logprob: -11.635488510131836
    7. 's' → logprob: -11.885488510131836
    8. '_neighbors' → logprob: -12.010488510131836
    9. 'Edges' → logprob: -12.135488510131836
    10. '_lines' → logprob: -12.385488510131836

Token 555: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2846545875072479
    2. ' =' → logprob: -1.4096546173095703
    3. ',' → logprob: -5.65965461730957
    4. '   ' → logprob: -12.15965461730957
    5. '=input' → logprob: -13.28465461730957
    6. ' ' → logprob: -13.65965461730957
    7. ' ,' → logprob: -13.90965461730957
    8. '    ' → logprob: -13.90965461730957
    9. ')' → logprob: -14.28465461730957
    10. '=int' → logprob: -14.53465461730957

Token 556: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0032870364375412464
    2. 'read' → logprob: -5.753286838531494
    3. ' map' → logprob: -9.128287315368652
    4. 'map' → logprob: -14.503287315368652
    5. '	read' → logprob: -16.128286361694336
    6. ' ' → logprob: -16.753286361694336
    7. ' ' → logprob: -17.503286361694336
    8. ' sys' → logprob: -17.503286361694336
    9. ' tuple' → logprob: -17.878286361694336
    10. '(read' → logprob: -19.003286361694336

Token 557: '_int' (ID: 12285)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -3.547789674485102e-05
    2. '_' → logprob: -11.000035285949707
    3. 'single' → logprob: -11.125035285949707
    4. '_int' → logprob: -13.875035285949707
    5. '_SINGLE' → logprob: -13.875035285949707
    6. 'Single' → logprob: -14.250035285949707
    7. ' single' → logprob: -15.250035285949707
    8. 'int' → logprob: -15.375035285949707
    9. '_s' → logprob: -15.375035285949707
    10. '```' → logprob: -15.375035285949707

Token 558: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14488188922405243
    2. 's' → logprob: -2.8948819637298584
    3. '_' → logprob: -3.1448819637298584
    4. '_list' → logprob: -3.3948819637298584
    5. '(' → logprob: -6.894881725311279
    6. '_line' → logprob: -7.519881725311279
    7. ' ()' → logprob: -7.769881725311279
    8. '_single' → logprob: -8.894882202148438
    9. '_tuple' → logprob: -9.394882202148438
    10. ')' → logprob: -9.644882202148438

Token 559: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000631543982308358
    2. '()
' → logprob: -7.375631332397461
    3. '   ' → logprob: -13.375631332397461
    4. ' ()' → logprob: -13.500631332397461
    5. '();' → logprob: -14.125631332397461
    6. '()
' → logprob: -15.000631332397461
    7. ')' → logprob: -15.500631332397461
    8. '():' → logprob: -15.625631332397461
    9. '())' → logprob: -15.625631332397461
    10. '()

' → logprob: -16.00063133239746

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007910624146461487
    2. '    
' → logprob: -5.50791072845459
    3. '
' → logprob: -5.63291072845459
    4. '   
' → logprob: -9.63291072845459
    5. ' 
' → logprob: -10.13291072845459
    6. '<|end|>' → logprob: -10.50791072845459
    7. '  
' → logprob: -10.63291072845459
    8. 'number' → logprob: -11.13291072845459
    9. '	
' → logprob: -11.38291072845459
    10. 'visited' → logprob: -11.63291072845459

Token 561: ' edge' (ID: 11165)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.5229172110557556
    2. '   ' → logprob: -1.5229172706604004
    3. 'adj' → logprob: -1.8979172706604004
    4. 'visited' → logprob: -4.2729172706604
    5. ' visited' → logprob: -4.8979172706604
    6. '
' → logprob: -4.8979172706604
    7. '    
' → logprob: -5.1479172706604
    8. 'graph' → logprob: -7.0229172706604
    9. ' 
' → logprob: -7.1479172706604
    10. ' edges' → logprob: -7.5229172706604

Token 562: '_orientation' (ID: 169549)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.6358246207237244
    2. 's' → logprob: -0.7608246207237244
    3. '_orientation' → logprob: -6.510824680328369
    4. '_key' → logprob: -7.510824680328369
    5. '_map' → logprob: -8.135824203491211
    6. '_index' → logprob: -8.260824203491211
    7. '_indices' → logprob: -9.010824203491211
    8. '_keys' → logprob: -9.260824203491211
    9. '_' → logprob: -9.260824203491211
    10. '_count' → logprob: -9.385824203491211

Token 563: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868733048439026
    2. '=' → logprob: -1.1368732452392578
    3. '={}' → logprob: -13.761873245239258
    4. ',' → logprob: -14.511873245239258
    5. ' ' → logprob: -15.136873245239258
    6. '=[]' → logprob: -15.511873245239258
    7. '   ' → logprob: -16.386873245239258
    8. '[' → logprob: -16.636873245239258
    9. ' ={' → logprob: -16.886873245239258
    10. '[:]' → logprob: -17.136873245239258

Token 564: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.029826154932379723
    2. '{}' → logprob: -3.5298261642456055
    3. '{' → logprob: -9.779826164245605
    4. 'dict' → logprob: -11.029826164245605
    5. '{}
' → logprob: -13.029826164245605
    6. ' defaultdict' → logprob: -14.654826164245605
    7. '(default' → logprob: -15.779826164245605
    8. '.default' → logprob: -16.65482521057129
    9. '{}

' → logprob: -17.27982521057129
    10. '"default' → logprob: -17.52982521057129

Token 565: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5850768089294434
    2. '(int' → logprob: -0.8350768089294434
    3. 'int' → logprob: -4.960076808929443
    4. 'lambda' → logprob: -6.210076808929443
    5. '```' → logprob: -10.710077285766602
    6. '=lambda' → logprob: -10.835077285766602
    7. '<int' → logprob: -11.460077285766602
    8. ' lambda' → logprob: -11.460077285766602
    9. ':int' → logprob: -12.960077285766602
    10. ' (' → logprob: -13.210077285766602

Token 566: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25198718905448914
    2. ')
' → logprob: -1.5019872188568115
    3. ')
' → logprob: -10.00198745727539
    4. ')

' → logprob: -11.75198745727539
    5. '   ' → logprob: -12.50198745727539
    6. ' )
' → logprob: -14.62698745727539
    7. ' ' → logprob: -15.25198745727539
    8. ' )' → logprob: -15.37698745727539
    9. '	' → logprob: -15.87698745727539
    10. '
' → logprob: -17.12698745727539

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014474556781351566
    2. ' adjacency' → logprob: -4.639474391937256
    3. 'adj' → logprob: -6.014474391937256
    4. '
' → logprob: -7.139474391937256
    5. 'edges' → logprob: -7.264474391937256
    6. '    
' → logprob: -8.264474868774414
    7. ' edges' → logprob: -8.639474868774414
    8. 'number' → logprob: -9.514474868774414
    9. 'nodes' → logprob: -9.639474868774414
    10. 'visited' → logprob: -10.889474868774414

Token 568: ' flip' (ID: 29130)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.008779428899288177
    2. '   ' → logprob: -5.133779525756836
    3. ' adjacency' → logprob: -5.883779525756836
    4. 'flip' (adapté à ' flip') → logprob: -9.883779525756836
    5. 'edge' → logprob: -12.258779525756836
    6. 'edges' → logprob: -13.133779525756836
    7. '
' → logprob: -13.633779525756836
    8. '    
' → logprob: -13.758779525756836
    9. '```' → logprob: -14.508779525756836
    10. 'Adj' → logprob: -14.633779525756836

Token 569: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -2.935296834039036e-06
    2. '_flags' → logprob: -13.87500286102295
    3. '_' → logprob: -14.00000286102295
    4. 'flag' → logprob: -14.62500286102295
    5. ' _' → logprob: -15.37500286102295
    6. '_FLAG' → logprob: -15.87500286102295
    7. '_f' → logprob: -17.125003814697266
    8. '_factor' → logprob: -17.250003814697266
    9. 'Flag' → logprob: -17.500003814697266
    10. ')_' → logprob: -17.625003814697266

Token 570: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022665798664093
    2. '=' → logprob: -1.9102267026901245
    3. '[' → logprob: -14.035226821899414
    4. ' ' → logprob: -14.160226821899414
    5. '=[' → logprob: -15.410226821899414
    6. '   ' → logprob: -15.410226821899414
    7. ',' → logprob: -15.410226821899414
    8. '=[]' → logprob: -15.910226821899414
    9. ' =[' → logprob: -16.035226821899414
    10. '	' → logprob: -16.410226821899414

Token 571: ' [' (ID: 723)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0028601549565792084
    2. '[' → logprob: -5.877860069274902
    3. ' defaultdict' → logprob: -10.377860069274902
    4. '{}' → logprob: -11.752860069274902
    5. ' [' → logprob: -12.502860069274902
    6. '[]' → logprob: -12.627860069274902
    7. '(default' → logprob: -12.752860069274902
    8. '{' → logprob: -13.127860069274902
    9. '.default' → logprob: -13.877860069274902
    10. ''default' → logprob: -14.002860069274902

Token 572: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026383911608718336
    2. 'False' → logprob: -8.250264167785645
    3. ' ' → logprob: -13.125264167785645
    4. '1' → logprob: -15.500264167785645
    5. ' False' → logprob: -15.875264167785645
    6. '   ' → logprob: -16.375263214111328
    7. '```' → logprob: -17.500263214111328
    8. 'int' → logprob: -17.750263214111328
    9. '-' → logprob: -17.750263214111328
    10. 'True' → logprob: -18.000263214111328

Token 573: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025514697656035423
    2. ' for' → logprob: -3.775514602661133
    3. 'for' → logprob: -6.525514602661133
    4. ']*(' → logprob: -7.775514602661133
    5. ']*' → logprob: -7.900514602661133
    6. ' ]' → logprob: -12.650514602661133
    7. '   ' → logprob: -12.775514602661133
    8. ']+' → logprob: -13.650514602661133
    9. ' ' → logprob: -13.900514602661133
    10. ')' → logprob: -14.025514602661133

Token 574: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09879239648580551
    2. '*' → logprob: -2.848792314529419
    3. 'for' → logprob: -3.723792314529419
    4. ' *' → logprob: -4.848792552947998
    5. ']' → logprob: -6.348792552947998
    6. '*(' → logprob: -6.973792552947998
    7. '   ' → logprob: -7.473792552947998
    8. ')' → logprob: -8.59879207611084
    9. ',' → logprob: -8.72379207611084
    10. ']*' → logprob: -8.84879207611084

Token 575: ' (' (ID: 350)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0006176044698804617
    2. 'number' → logprob: -7.750617504119873
    3. ' (' → logprob: -8.875617980957031
    4. '(' → logprob: -10.500617980957031
    5. '(max' → logprob: -11.125617980957031
    6. '(n' → logprob: -12.875617980957031
    7. '[number' → logprob: -14.750617980957031
    8. '(num' → logprob: -15.000617980957031
    9. ' number' → logprob: -15.250617980957031
    10. '((' → logprob: -15.375617980957031

Token 576: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.00043400691356509924
    2. '(number' → logprob: -7.750433921813965
    3. ' number' → logprob: -12.750433921813965
    4. '[number' → logprob: -15.375433921813965
    5. '(' → logprob: -15.875433921813965
    6. 'n' → logprob: -17.50043487548828
    7. '100' → logprob: -18.25043487548828
    8. '   ' → logprob: -18.62543487548828
    9. '	number' → logprob: -18.62543487548828
    10. '<number' → logprob: -18.75043487548828

Token 577: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.0683535037969705e-05
    2. '_nodes' → logprob: -12.12501049041748
    3. 'of' → logprob: -12.37501049041748
    4. '   ' → logprob: -14.50001049041748
    5. ' of' → logprob: -16.500011444091797
    6. '0' → logprob: -17.000011444091797
    7. '2' → logprob: -17.250011444091797
    8. '_OF' → logprob: -17.375011444091797
    9. 'Of' → logprob: -17.500011444091797
    10. '1' → logprob: -18.000011444091797

Token 578: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.005036763846874237
    2. '_edges' → logprob: -5.7550368309021
    3. 'nodes' → logprob: -6.6300368309021
    4. '5' → logprob: -9.380036354064941
    5. '1' → logprob: -9.505036354064941
    6. '+' → logprob: -9.755036354064941
    7. 'edges' → logprob: -10.130036354064941
    8. '_of' → logprob: -10.130036354064941
    9. 'Nodes' → logprob: -10.380036354064941
    10. '(nodes' → logprob: -10.880036354064941

Token 579: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02275792323052883
    2. ' +' → logprob: -4.1477580070495605
    3. ')' → logprob: -5.0227580070495605
    4. ' )' → logprob: -10.022757530212402
    5. '+
' → logprob: -10.397757530212402
    6. ')
' → logprob: -11.647757530212402
    7. '[' → logprob: -12.272757530212402
    8. '
' → logprob: -12.397757530212402
    9. '```' → logprob: -12.522757530212402
    10. '1' → logprob: -12.647757530212402

Token 580: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.125017166137695
    3. '2' → logprob: -13.125017166137695
    4. '   ' → logprob: -16.125017166137695
    5. '```' → logprob: -19.000017166137695
    6. '0' → logprob: -19.750017166137695
    7. '  ' → logprob: -19.750017166137695
    8. '3' → logprob: -19.875017166137695
    9. '7' → logprob: -20.125017166137695
    10. '
' → logprob: -20.250017166137695

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. '2' → logprob: -9.875052452087402
    3. ' ' → logprob: -15.375052452087402
    4. '5' → logprob: -16.250051498413086
    5. '3' → logprob: -16.750051498413086
    6. '10' → logprob: -17.375051498413086
    7. '   ' → logprob: -18.375051498413086
    8. '
' → logprob: -18.625051498413086
    9. '7' → logprob: -19.000051498413086
    10. '１' → logprob: -19.312551498413086

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044830769184045494
    2. '   ' → logprob: -8.000448226928711
    3. ')
' → logprob: -9.125448226928711
    4. ' )' → logprob: -12.625448226928711
    5. ']' → logprob: -15.000448226928711
    6. ')
' → logprob: -16.75044822692871
    7. ' ' → logprob: -16.87544822692871
    8. '
' → logprob: -16.87544822692871
    9. ')

' → logprob: -17.12544822692871
    10. '),' → logprob: -17.25044822692871

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01078321598470211
    2. 'adj' → logprob: -4.7607831954956055
    3. ' adjacency' → logprob: -6.1357831954956055
    4. '    
' → logprob: -14.260783195495605
    5. '  ' → logprob: -14.510783195495605
    6. ' adj' → logprob: -14.885783195495605
    7. '```' → logprob: -15.260783195495605
    8. '
' → logprob: -15.510783195495605
    9. ' ' → logprob: -16.010784149169922
    10. '    ' → logprob: -16.510784149169922

Token 584: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.03280356898903847
    2. '   ' → logprob: -3.907803535461426
    3. ' adjacency' → logprob: -4.407803535461426
    4. '```' → logprob: -13.782803535461426
    5. ' adj' → logprob: -14.157803535461426
    6. '	' → logprob: -14.157803535461426
    7. 'visited' → logprob: -14.282803535461426
    8. ' ' → logprob: -15.032803535461426
    9. 'Adj' → logprob: -15.157803535461426
    10. '  ' → logprob: -16.032804489135742

Token 585: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.255023956531659e-05
    2. '_' → logprob: -9.625072479248047
    3. 'list' → logprob: -13.500072479248047
    4. ' =' → logprob: -13.500072479248047
    5. '_lists' → logprob: -13.625072479248047
    6. '[' → logprob: -13.750072479248047
    7. '=' → logprob: -14.375072479248047
    8. '_lst' → logprob: -15.375072479248047
    9. 'List' → logprob: -15.750072479248047
    10. '[_' → logprob: -16.375072479248047

Token 586: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '=[]' → logprob: -16.578889846801758
    4. '[' → logprob: -16.828889846801758
    5. '   ' → logprob: -18.203889846801758
    6. ',' → logprob: -18.328889846801758
    7. ':' → logprob: -18.578889846801758
    8. '={}' → logprob: -18.703889846801758
    9. '=[' → logprob: -18.828889846801758
    10. '＝' → logprob: -19.078889846801758

Token 587: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2902451157569885
    2. 'default' → logprob: -1.5402450561523438
    3. ' [[]' → logprob: -3.2902450561523438
    4. '[[' → logprob: -8.915245056152344
    5. '{' → logprob: -9.165245056152344
    6. ' defaultdict' → logprob: -9.290245056152344
    7. '   ' → logprob: -11.540245056152344
    8. '(default' → logprob: -13.790245056152344
    9. ' [' → logprob: -13.915245056152344
    10. '.default' → logprob: -14.290245056152344

Token 588: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2529248893260956
    2. ' for' → logprob: -1.502924919128418
    3. '   ' → logprob: -7.252924919128418
    4. '(number' → logprob: -9.502924919128418
    5. '[number' → logprob: -10.002924919128418
    6. '(' → logprob: -10.252924919128418
    7. '	for' → logprob: -10.377924919128418
    8. '[' → logprob: -10.502924919128418
    9. ')' → logprob: -10.877924919128418
    10. ']' → logprob: -11.002924919128418

Token 589: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00043829824426211417
    2. ' _' → logprob: -7.750438213348389
    3. ' range' → logprob: -12.250438690185547
    4. ' in' → logprob: -13.375438690185547
    5. '_range' → logprob: -14.875438690185547
    6. 'range' → logprob: -14.875438690185547
    7. 'in' → logprob: -15.125438690185547
    8. ' i' → logprob: -16.500438690185547
    9. 'i' → logprob: -17.000438690185547
    10. ' ' → logprob: -17.125438690185547

Token 590: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4681558310985565
    2. ' range' → logprob: -1.343155860900879
    3. ' in' → logprob: -2.343155860900879
    4. 'in' → logprob: -4.093155860900879
    5. '_' → logprob: -9.843155860900879
    6. '(range' → logprob: -10.468155860900879
    7. 'i' → logprob: -11.093155860900879
    8. '_range' → logprob: -12.593155860900879
    9. ' ' → logprob: -13.093155860900879
    10. 'x' → logprob: -13.468155860900879

Token 591: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023530066013336
    2. ' range' → logprob: -1.9102352857589722
    3. '(range' → logprob: -11.410235404968262
    4. '   ' → logprob: -16.410234451293945
    5. '_' → logprob: -18.910234451293945
    6. '	range' → logprob: -19.035234451293945
    7. '_range' → logprob: -19.410234451293945
    8. ' ' → logprob: -19.785234451293945
    9. '
' → logprob: -20.160234451293945
    10. '  ' → logprob: -20.285234451293945

Token 592: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0011708177626132965
    2. 'number' → logprob: -6.751170635223389
    3. '(' → logprob: -15.001171112060547
    4. ' number' → logprob: -15.751171112060547
    5. ' (' → logprob: -15.751171112060547
    6. '((' → logprob: -18.376171112060547
    7. '[number' → logprob: -18.626171112060547
    8. '	number' → logprob: -18.751171112060547
    9. '(n' → logprob: -19.001171112060547
    10. '   ' → logprob: -19.626171112060547

Token 593: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.5048530030981055e-06
    2. '_nodes' → logprob: -13.750001907348633
    3. 'of' → logprob: -15.250001907348633
    4. '   ' → logprob: -16.125001907348633
    5. 'Of' → logprob: -17.250001907348633
    6. '_OF' → logprob: -17.250001907348633
    7. ' of' → logprob: -19.250001907348633
    8. '	of' → logprob: -19.250001907348633
    9. '__' → logprob: -19.875001907348633
    10. 's' → logprob: -20.000001907348633

Token 594: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.0006461950251832604
    2. 'nodes' → logprob: -7.875646114349365
    3. '_edges' → logprob: -8.375646591186523
    4. '+' → logprob: -11.000646591186523
    5. '(nodes' → logprob: -12.625646591186523
    6. 's' → logprob: -12.875646591186523
    7. 'Nodes' → logprob: -13.125646591186523
    8. '   ' → logprob: -13.375646591186523
    9. 'edges' → logprob: -13.500646591186523
    10. '```' → logprob: -13.500646591186523

Token 595: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519342601299286
    2. ' +' → logprob: -1.501934289932251
    3. ')]' → logprob: -12.376934051513672
    4. ')' → logprob: -14.501934051513672
    5. '+
' → logprob: -15.376934051513672
    6. ' +
' → logprob: -16.126934051513672
    7. ' ' → logprob: -17.376934051513672
    8. '1' → logprob: -17.501934051513672
    9. '＋' → logprob: -17.751934051513672
    10. '   ' → logprob: -17.876934051513672

Token 596: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.0000057220459
    4. '(' → logprob: -17.5000057220459
    5. '0' → logprob: -18.5000057220459
    6. '```' → logprob: -18.5000057220459
    7. '2' → logprob: -19.1250057220459
    8. ')' → logprob: -19.6250057220459
    9. '۱' → logprob: -20.2500057220459
    10. '
' → logprob: -20.3125057220459

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.750001907348633
    4. '0' → logprob: -17.750001907348633
    5. '```' → logprob: -18.500001907348633
    6. '
' → logprob: -18.875001907348633
    7. '(' → logprob: -19.687501907348633
    8. '2' → logprob: -19.687501907348633
    9. '  ' → logprob: -20.375001907348633
    10. '+' → logprob: -20.812501907348633

Token 598: ')]

' (ID: 56882)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009321830002591014
    2. ')]' → logprob: -7.250932216644287
    3. ')' → logprob: -8.875931739807129
    4. ']
' → logprob: -9.500931739807129
    5. ' ]' → logprob: -12.500931739807129
    6. '   ' → logprob: -12.875931739807129
    7. ']

' → logprob: -14.000931739807129
    8. ']
' → logprob: -15.125931739807129
    9. '])' → logprob: -15.625931739807129
    10. '()]' → logprob: -17.500932693481445

Token 599: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03156522288918495
    2. 'for' → logprob: -3.6565651893615723
    3. ' for' → logprob: -5.281565189361572
    4. '    
' → logprob: -9.78156566619873
    5. '<|end|>' → logprob: -9.78156566619873
    6. '
' → logprob: -10.78156566619873
    7. '```' → logprob: -11.15656566619873
    8. '	for' → logprob: -11.90656566619873
    9. '  ' → logprob: -12.90656566619873
    10. ' ' → logprob: -13.40656566619873

Token 600: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06044149398803711
    2. '   ' → logprob: -3.310441493988037
    3. ' for' → logprob: -3.810441493988037
    4. '	for' → logprob: -11.435441970825195
    5. '    
' → logprob: -13.685441970825195
    6. '
' → logprob: -14.435441970825195
    7. '```' → logprob: -15.435441970825195
    8. '  ' → logprob: -18.060441970825195
    9. ' 
' → logprob: -18.310441970825195
    10. ' ' → logprob: -18.435441970825195

Token 601: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038061000406742096
    2. ' _' → logprob: -3.2880609035491943
    3. '_edge' → logprob: -10.913061141967773
    4. '_i' → logprob: -14.163061141967773
    5. ' i' → logprob: -15.413061141967773
    6. '_edges' → logprob: -15.413061141967773
    7. '_index' → logprob: -16.163061141967773
    8. 'i' → logprob: -17.413061141967773
    9. '_range' → logprob: -17.538061141967773
    10. '_node' → logprob: -18.038061141967773

Token 602: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1003337949514389
    2. 'in' → logprob: -2.3503336906433105
    3. ' ' → logprob: -10.225334167480469
    4. 'range' → logprob: -10.600334167480469
    5. 'import' → logprob: -10.850334167480469
    6. 'i' → logprob: -11.350334167480469
    7. 's' → logprob: -11.850334167480469
    8. '1' → logprob: -12.225334167480469
    9. ',' → logprob: -12.975334167480469
    10. 'count' → logprob: -13.100334167480469

Token 603: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000627610192168504
    2. ' range' → logprob: -7.375627517700195
    3. 'read' → logprob: -14.000627517700195
    4. '(range' → logprob: -15.750627517700195
    5. ' ' → logprob: -17.500627517700195
    6. ')' → logprob: -17.750627517700195
    7. '	range' → logprob: -17.875627517700195
    8. 'in' → logprob: -18.125627517700195
    9. 'number' → logprob: -18.125627517700195
    10. '  ' → logprob: -18.250627517700195

Token 604: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -5.061676347395405e-05
    2. 'number' → logprob: -10.00005054473877
    3. '(' → logprob: -12.62505054473877
    4. ' (' → logprob: -13.62505054473877
    5. ' number' → logprob: -14.50005054473877
    6. '	number' → logprob: -16.625051498413086
    7. ' ' → logprob: -18.000051498413086
    8. '   ' → logprob: -18.000051498413086
    9. '(n' → logprob: -19.250051498413086
    10. '[number' → logprob: -19.375051498413086

Token 605: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -2.696889623621246e-06
    2. 'of' → logprob: -13.00000286102295
    3. ' of' → logprob: -15.87500286102295
    4. '_OF' → logprob: -15.87500286102295
    5. '_edges' → logprob: -16.250001907348633
    6. '	of' → logprob: -17.375001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '__' → logprob: -18.625001907348633
    9. 'Of' → logprob: -18.750001907348633
    10. '_' → logprob: -19.375001907348633

Token 606: '_edges' (ID: 68870)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07146556675434113
    2. 'read' → logprob: -3.071465492248535
    3. 'number' → logprob: -4.071465492248535
    4. '_edges' → logprob: -6.071465492248535
    5. ' range' → logprob: -6.446465492248535
    6. 'int' → logprob: -7.071465492248535
    7. 'edges' → logprob: -7.571465492248535
    8. ' read' → logprob: -9.821465492248535
    9. ' number' → logprob: -10.446465492248535
    10. 'edge' → logprob: -10.696465492248535

Token 607: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3875645101070404
    2. '):' → logprob: -1.1375645399093628
    3. ':' → logprob: -8.137564659118652
    4. '():
' → logprob: -8.387564659118652
    5. '):
' → logprob: -9.637564659118652
    6. '   ' → logprob: -10.012564659118652
    7. '():' → logprob: -10.387564659118652
    8. ':
' → logprob: -11.762564659118652
    9. ' ):
' → logprob: -12.012564659118652
    10. ')' → logprob: -12.387564659118652

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05837946757674217
    2. ' u' → logprob: -3.3083794116973877
    3. 'u' → logprob: -4.683379650115967
    4. '   ' → logprob: -5.058379650115967
    5. 'a' → logprob: -6.433379650115967
    6. 'n' → logprob: -6.808379650115967
    7. ' a' → logprob: -7.683379650115967
    8. ' n' → logprob: -7.683379650115967
    9. ' node' → logprob: -8.058379173278809
    10. ' current' → logprob: -9.558379173278809

Token 609: ' node' (ID: 4596)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0011778471525758505
    2. ' u' → logprob: -7.001177787780762
    3. 'a' → logprob: -8.876177787780762
    4. '   ' → logprob: -9.001177787780762
    5. 'node' (adapté à ' node') → logprob: -13.251177787780762
    6. '	u' → logprob: -13.626177787780762
    7. 'x' → logprob: -16.001178741455078
    8. '_u' → logprob: -16.251178741455078
    9. ' a' → logprob: -16.501178741455078
    10. ' node' → logprob: -17.001178741455078

Token 610: '_u' (ID: 17063)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22337613999843597
    2. '_u' → logprob: -1.8483761548995972
    3. '_a' → logprob: -3.4733760356903076
    4. 'a' → logprob: -5.223376274108887
    5. 'A' → logprob: -5.598376274108887
    6. 'u' → logprob: -6.223376274108887
    7. ',u' → logprob: -8.473376274108887
    8. ',' → logprob: -8.723376274108887
    9. '_' → logprob: -9.348376274108887
    10. 's' → logprob: -10.098376274108887

Token 611: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004428243264555931
    2. ',node' → logprob: -7.750442981719971
    3. ' ,' → logprob: -11.500442504882812
    4. ',n' → logprob: -14.500442504882812
    5. ',u' → logprob: -14.750442504882812
    6. ',user' → logprob: -15.375442504882812
    7. '_,' → logprob: -15.500442504882812
    8. ',
' → logprob: -16.000442504882812
    9. '‌,' → logprob: -16.000442504882812
    10. ',int' → logprob: -16.125442504882812

Token 612: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.16022463142871857
    2. ' node' → logprob: -1.9102246761322021
    3. '	node' → logprob: -15.160224914550781
    4. '_node' → logprob: -16.28522491455078
    5. 'token' → logprob: -16.91022491455078
    6. ' ' → logprob: -17.16022491455078
    7. ',node' → logprob: -17.53522491455078
    8. '(node' → logprob: -18.03522491455078
    9. '   ' → logprob: -18.41022491455078
    10. 'Node' → logprob: -18.41022491455078

Token 613: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -8.244413766078651e-05
    2. 'v' → logprob: -9.750082015991211
    3. '_' → logprob: -10.750082015991211
    4. '_u' → logprob: -14.125082015991211
    5. ',' → logprob: -14.375082015991211
    6. '```' → logprob: -14.750082015991211
    7. ',v' → logprob: -15.375082015991211
    8. '_,' → logprob: -15.375082015991211
    9. '	v' → logprob: -15.625082015991211
    10. '
' → logprob: -15.875082015991211

Token 614: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692831456661224
    2. ' =' → logprob: -2.1269283294677734
    3. '   ' → logprob: -15.126928329467773
    4. ' ' → logprob: -18.001928329467773
    5. '    ' → logprob: -18.251928329467773
    6. '＝' → logprob: -18.876928329467773
    7. ',' → logprob: -18.876928329467773
    8. '	' → logprob: -19.001928329467773
    9. '=int' → logprob: -19.876928329467773
    10. ')=' → logprob: -20.001928329467773

Token 615: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.02324605919420719
    2. ' read' → logprob: -3.7732460498809814
    3. '   ' → logprob: -15.023245811462402
    4. '	read' → logprob: -15.273245811462402
    5. '    ' → logprob: -17.39824676513672
    6. ' ' → logprob: -17.77324676513672
    7. '  ' → logprob: -17.77324676513672
    8. '(read' → logprob: -19.52324676513672
    9. '_read' → logprob: -20.02324676513672
    10. 'reading' → logprob: -20.39824676513672

Token 616: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.004097396973520517
    2. '_single' → logprob: -5.5040974617004395
    3. 'single' → logprob: -11.504096984863281
    4. 'int' → logprob: -11.879096984863281
    5. '_list' → logprob: -14.129096984863281
    6. '_' → logprob: -14.504096984863281
    7. '_str' → logprob: -14.879096984863281
    8. '```' → logprob: -16.25409698486328
    9. ' single' → logprob: -16.50409698486328
    10. '_char' → logprob: -16.62909698486328

Token 617: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.417976379045285e-05
    2. '()' → logprob: -10.125043869018555
    3. 'List' → logprob: -13.000043869018555
    4. 'list' → logprob: -13.750043869018555
    5. '_' → logprob: -15.000043869018555
    6. 's' → logprob: -16.000043869018555
    7. '```' → logprob: -16.125043869018555
    8. '_line' → logprob: -16.625043869018555
    9. '_LIST' → logprob: -17.000043869018555
    10. '()
' → logprob: -17.750043869018555

Token 618: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009188431431539357
    2. '()
' → logprob: -7.000918865203857
    3. '();' → logprob: -12.5009183883667
    4. '()
' → logprob: -13.1259183883667
    5. '()\' → logprob: -14.5009183883667
    6. '()

' → logprob: -15.0009183883667
    7. '())' → logprob: -15.6259183883667
    8. '()>' → logprob: -16.000919342041016
    9. '()]' → logprob: -16.250919342041016
    10. '()<' → logprob: -16.375919342041016

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10085253417491913
    2. '   ' → logprob: -2.3508524894714355
    3. '<|end|>' → logprob: -8.225852966308594
    4. '
' → logprob: -8.600852966308594
    5. '        
' → logprob: -10.475852966308594
    6. '	   ' → logprob: -10.475852966308594
    7. '	ad' → logprob: -10.600852966308594
    8. '    
' → logprob: -10.600852966308594
    9. ' ' → logprob: -11.475852966308594
    10. ' adjacency' → logprob: -11.600852966308594

Token 620: ' edge' (ID: 11165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20669329166412354
    2. ' adjacency' → logprob: -1.7066932916641235
    3. 'adj' → logprob: -5.456693172454834
    4. '       ' → logprob: -6.956693172454834
    5. '```' → logprob: -11.331693649291992
    6. 'ad' → logprob: -11.331693649291992
    7. ' adj' → logprob: -11.831693649291992
    8. '    ' → logprob: -11.956693649291992
    9. ' ' → logprob: -13.331693649291992
    10. '  ' → logprob: -13.456693649291992

Token 621: '_key' (ID: 6724)
  Prédit: '_orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orientation' → logprob: -0.00429468834772706
    2. '_key' → logprob: -5.5042948722839355
    3. 'orientation' → logprob: -9.379294395446777
    4. '_u' → logprob: -9.879294395446777
    5. '_' → logprob: -10.629294395446777
    6. '=' → logprob: -11.129294395446777
    7. 'Orientation' → logprob: -11.504294395446777
    8. '_direction' → logprob: -11.504294395446777
    9. 'u' → logprob: -12.879294395446777
    10. '_or' → logprob: -13.129294395446777

Token 622: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132631182670593
    2. '=' → logprob: -1.313263177871704
    3. '=(' → logprob: -13.813262939453125
    4. ' =(' → logprob: -14.938262939453125
    5. '=
' → logprob: -18.438262939453125
    6. '＝' → logprob: -18.438262939453125
    7. ' =
' → logprob: -19.563262939453125
    8. ' ' → logprob: -19.688262939453125
    9. ' (' → logprob: -20.063262939453125
    10. ',' → logprob: -20.188262939453125

Token 623: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.5760137438774109
    2. ' (' → logprob: -0.8260137438774109
    3. '(' → logprob: -10.201013565063477
    4. '(tuple' → logprob: -10.701013565063477
    5. '(node' → logprob: -11.326013565063477
    6. '(m' → logprob: -14.576013565063477
    7. '   ' → logprob: -14.701013565063477
    8. ' tuple' → logprob: -14.701013565063477
    9. ' ' → logprob: -14.951013565063477
    10. '(max' → logprob: -15.201013565063477

Token 624: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07037340849637985
    2. 'node' → logprob: -2.695373296737671
    3. ' min' → logprob: -7.94537353515625
    4. ' node' → logprob: -9.44537353515625
    5. '(min' → logprob: -13.82037353515625
    6. '	min' → logprob: -14.82037353515625
    7. 'minimum' → logprob: -14.82037353515625
    8. '(node' → logprob: -14.94537353515625
    9. 'u' → logprob: -15.44537353515625
    10. '   ' → logprob: -15.57037353515625

Token 625: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.1637164789135568e-05
    2. 'node' → logprob: -11.375011444091797
    3. ',node' → logprob: -16.125011444091797
    4. ' node' → logprob: -17.750011444091797
    5. '(' → logprob: -17.750011444091797
    6. '=node' → logprob: -18.000011444091797
    7. '[node' → logprob: -18.375011444091797
    8. '(u' → logprob: -19.125011444091797
    9. '	node' → logprob: -19.125011444091797
    10. '(
' → logprob: -20.000011444091797

Token 626: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.0683535037969705e-05
    2. 'u' → logprob: -12.12501049041748
    3. '(node' → logprob: -12.25001049041748
    4. '_v' → logprob: -15.50001049041748
    5. '(u' → logprob: -16.125011444091797
    6. '__' → logprob: -17.875011444091797
    7. '_uv' → logprob: -18.000011444091797
    8. '_node' → logprob: -18.000011444091797
    9. 'node' → logprob: -18.625011444091797
    10. '=node' → logprob: -18.625011444091797

Token 627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003789865644648671
    2. ',node' → logprob: -5.628789901733398
    3. '(node' → logprob: -9.128789901733398
    4. ' ,' → logprob: -9.503789901733398
    5. ',
' → logprob: -12.628789901733398
    6. '),' → logprob: -13.878789901733398
    7. ',user' → logprob: -14.253789901733398
    8. ',n' → logprob: -14.378789901733398
    9. '<|end|>' → logprob: -15.128789901733398
    10. ',u' → logprob: -15.628789901733398

Token 628: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.001264759455807507
    2. ' node' → logprob: -7.251264572143555
    3. 'max' → logprob: -7.501264572143555
    4. 'v' → logprob: -13.376264572143555
    5. ' max' → logprob: -15.251264572143555
    6. 'user' → logprob: -16.251264572143555
    7. '(node' → logprob: -16.376264572143555
    8. '   ' → logprob: -16.376264572143555
    9. 'u' → logprob: -16.501264572143555
    10. ' ' → logprob: -17.251264572143555

Token 629: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.002654966665431857
    2. 'v' → logprob: -6.377655029296875
    3. '_u' → logprob: -7.627655029296875
    4. ',' → logprob: -8.127655029296875
    5. 'u' → logprob: -9.252655029296875
    6. ',v' → logprob: -10.252655029296875
    7. '_,' → logprob: -10.752655029296875
    8. '```' → logprob: -12.377655029296875
    9. '
' → logprob: -12.627655029296875
    10. '[' → logprob: -13.127655029296875

Token 630: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3134782314300537
    2. ',' → logprob: -1.3134782314300537
    3. ',),' → logprob: -8.938478469848633
    4. ',node' → logprob: -10.063478469848633
    5. ')' → logprob: -10.563478469848633
    6. ' ,' → logprob: -12.188478469848633
    7. '),(' → logprob: -12.688478469848633
    8. ' ),' → logprob: -13.688478469848633
    9. ',
' → logprob: -13.813478469848633
    10. '),
' → logprob: -13.813478469848633

Token 631: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2519291639328003
    2. ' max' → logprob: -1.5019291639328003
    3. 'min' → logprob: -17.001928329467773
    4. ' min' → logprob: -18.626928329467773
    5. '(max' → logprob: -19.001928329467773
    6. '	max' → logprob: -19.751928329467773
    7. ' ' → logprob: -20.876928329467773
    8. '    ' → logprob: -21.376928329467773
    9. '   ' → logprob: -21.501928329467773
    10. '_max' → logprob: -21.501928329467773

Token 632: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -9.088346359931165e-07
    2. 'node' → logprob: -14.250000953674316
    3. '(' → logprob: -15.875000953674316
    4. ' (' → logprob: -16.375
    5. ',node' → logprob: -17.75
    6. '=node' → logprob: -17.875
    7. '[node' → logprob: -18.25
    8. '(Node' → logprob: -18.75
    9. ' node' → logprob: -18.875
    10. '	node' → logprob: -18.875

Token 633: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.005554486531764269
    2. '(node' → logprob: -5.505554676055908
    3. 'u' → logprob: -7.255554676055908
    4. '_node' → logprob: -7.755554676055908
    5. 'node' → logprob: -8.13055419921875
    6. '_v' → logprob: -10.63055419921875
    7. '=node' → logprob: -12.50555419921875
    8. '[node' → logprob: -12.63055419921875
    9. '(u' → logprob: -12.75555419921875
    10. '(_' → logprob: -12.75555419921875

Token 634: ',' (ID: 11)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.11342912912368774
    2. '(node' → logprob: -2.363429069519043
    3. 'u' → logprob: -5.488429069519043
    4. ',node' → logprob: -5.863429069519043
    5. ',' → logprob: -6.113429069519043
    6. ' node' → logprob: -6.613429069519043
    7. '=node' → logprob: -6.988429069519043
    8. '_node' → logprob: -7.488429069519043
    9. '[node' → logprob: -7.738429069519043
    10. ')' → logprob: -8.363429069519043

Token 635: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0017198040150105953
    2. ' node' → logprob: -6.376719951629639
    3. '(node' → logprob: -11.62671947479248
    4. 'max' → logprob: -12.37671947479248
    5. ')' → logprob: -14.12671947479248
    6. '   ' → logprob: -14.25171947479248
    7. 'user' → logprob: -14.50171947479248
    8. '[node' → logprob: -14.50171947479248
    9. 'number' → logprob: -15.00171947479248
    10. ' ' → logprob: -15.12671947479248

Token 636: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.04325494542717934
    2. 'v' → logprob: -3.168254852294922
    3. 'u' → logprob: -9.168254852294922
    4. '_u' → logprob: -9.918254852294922
    5. ')' → logprob: -10.293254852294922
    6. '),' → logprob: -11.293254852294922
    7. '```' → logprob: -11.418254852294922
    8. '
' → logprob: -11.418254852294922
    9. '_key' → logprob: -11.668254852294922
    10. ',' → logprob: -12.793254852294922

Token 637: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014646206051111221
    2. ')
' → logprob: -4.639646053314209
    3. '))' → logprob: -5.389646053314209
    4. '       ' → logprob: -8.264646530151367
    5. '))
' → logprob: -10.014646530151367
    6. ' )' → logprob: -12.014646530151367
    7. '   ' → logprob: -12.889646530151367
    8. ')
' → logprob: -13.889646530151367
    9. ' )
' → logprob: -14.889646530151367
    10. '),' → logprob: -14.889646530151367

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003585840167943388
    2. '
' → logprob: -8.375358581542969
    3. '<|end|>' → logprob: -9.750358581542969
    4. '   ' → logprob: -10.125358581542969
    5. '        
' → logprob: -11.250358581542969
    6. '	' → logprob: -12.000358581542969
    7. ' adjacency' → logprob: -12.875358581542969
    8. '	   ' → logprob: -13.750358581542969
    9. '<|end|>' → logprob: -13.875358581542969
    10. ',' → logprob: -14.125358581542969

Token 639: ' edge' (ID: 11165)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.2032194584608078
    2. ' adjacency' → logprob: -1.7032194137573242
    3. '   ' → logprob: -6.453219413757324
    4. '       ' → logprob: -8.703219413757324
    5. 'edge' (adapté à ' edge') → logprob: -10.328219413757324
    6. ' adj' → logprob: -10.703219413757324
    7. 'ad' → logprob: -12.453219413757324
    8. ' edge' → logprob: -13.203219413757324
    9. '```' → logprob: -13.953219413757324
    10. ' adjacent' → logprob: -14.828219413757324

Token 640: '_orientation' (ID: 169549)
  Prédit: '_orientation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orientation' → logprob: -0.00011641718447208405
    2. 'orientation' → logprob: -9.500116348266602
    3. '_key' → logprob: -10.125116348266602
    4. 'Orientation' → logprob: -14.000116348266602
    5. ' orientation' → logprob: -14.625116348266602
    6. '_direction' → logprob: -16.6251163482666
    7. '_' → logprob: -17.5001163482666
    8. '_keys' → logprob: -17.5001163482666
    9. '_or' → logprob: -17.8751163482666
    10. '.orientation' → logprob: -18.0001163482666

Token 641: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. 'edge' → logprob: -15.25
    3. '=edge' → logprob: -16.375
    4. ' [' → logprob: -18.5
    5. '
' → logprob: -18.5
    6. '\[' → logprob: -19.25
    7. '```' → logprob: -19.25
    8. '(edge' → logprob: -19.375
    9. '[
' → logprob: -19.375
    10. '[...]' → logprob: -19.625

Token 642: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.00026538874953985214
    2. '[' → logprob: -8.625265121459961
    3. ' edge' → logprob: -9.625265121459961
    4. '0' → logprob: -11.375265121459961
    5. '(edge' → logprob: -11.875265121459961
    6. '=edge' → logprob: -14.375265121459961
    7. ' ' → logprob: -16.00026512145996
    8. '1' → logprob: -16.00026512145996
    9. 'node' → logprob: -16.50026512145996
    10. '[
' → logprob: -16.62526512145996

Token 643: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.00023202638840302825
    2. 'key' → logprob: -8.375231742858887
    3. 'Key' → logprob: -14.625231742858887
    4. '[' → logprob: -15.250231742858887
    5. '[key' → logprob: -15.500231742858887
    6. 'orientation' → logprob: -15.500231742858887
    7. '_orientation' → logprob: -16.625232696533203
    8. ']' → logprob: -17.125232696533203
    9. ' key' → logprob: -17.250232696533203
    10. '```' → logprob: -17.250232696533203

Token 644: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1650073379278183
    2. ']' → logprob: -2.2900073528289795
    3. ' =' → logprob: -3.0400073528289795
    4. ']=' → logprob: -6.5400071144104
    5. ' ^=' → logprob: -6.6650071144104
    6. ')' → logprob: -8.790007591247559
    7. '^' → logprob: -9.915007591247559
    8. ']+=' → logprob: -10.040007591247559
    9. ' ]' → logprob: -10.665007591247559
    10. '+=' → logprob: -11.665007591247559

Token 645: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002438331488519907
    2. ' =' → logprob: -6.252438545227051
    3. '^' → logprob: -8.00243854522705
    4. ' ^=' → logprob: -8.75243854522705
    5. '+=' → logprob: -11.00243854522705
    6. ' ' → logprob: -15.75243854522705
    7. '.=' → logprob: -16.377437591552734
    8. ' +=' → logprob: -17.127437591552734
    9. '0' → logprob: -17.502437591552734
    10. ']' → logprob: -17.877437591552734

Token 646: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011915886716451496
    2. '1' → logprob: -9.12511920928955
    3. ' ' → logprob: -11.50011920928955
    4. 'random' → logprob: -18.062618255615234
    5. 'int' → logprob: -18.187618255615234
    6. '   ' → logprob: -18.312618255615234
    7. '۰' → logprob: -19.125118255615234
    8. 'node' → logprob: -19.687618255615234
    9. '	' → logprob: -20.187618255615234
    10. 'False' → logprob: -20.250118255615234

Token 647: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018029935017693788
    2. '1' → logprob: -8.6251802444458
    3. ' ' → logprob: -14.3751802444458
    4. 'node' → logprob: -17.437681198120117
    5. 'int' → logprob: -17.750181198120117
    6. 'random' → logprob: -18.125181198120117
    7. 'False' → logprob: -18.312681198120117
    8. 'read' → logprob: -18.625181198120117
    9. '   ' → logprob: -18.750181198120117
    10. '۰' → logprob: -19.625181198120117

Token 648: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.514650183613412e-05
    2. '<|end|>' → logprob: -10.500055313110352
    3. '   ' → logprob: -11.125055313110352
    4. ',' → logprob: -11.750055313110352
    5. '
' → logprob: -13.125055313110352
    6. '	' → logprob: -13.750055313110352
    7. ' ' → logprob: -14.250055313110352
    8. '<|end|>' → logprob: -15.625055313110352
    9. '	   ' → logprob: -15.875055313110352
    10. '        
' → logprob: -16.00005531311035

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.741137283621356e-05
    2. '   ' → logprob: -10.500057220458984
    3. '<|end|>' → logprob: -10.750057220458984
    4. ',' → logprob: -12.375057220458984
    5. ' ' → logprob: -13.375057220458984
    6. '
' → logprob: -13.875057220458984
    7. '	' → logprob: -14.250057220458984
    8. '        
' → logprob: -15.375057220458984
    9. '<|end|>' → logprob: -16.125057220458984
    10. '```' → logprob: -16.375057220458984

Token 650: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.10034792870283127
    2. '       ' → logprob: -2.8503479957580566
    3. ' adjacency' → logprob: -3.3503479957580566
    4. '   ' → logprob: -5.975347995758057
    5. 'ad' → logprob: -10.350347518920898
    6. ' adj' → logprob: -12.725347518920898
    7. '```' → logprob: -12.975347518920898
    8. ' ' → logprob: -13.725347518920898
    9. '``' → logprob: -15.600347518920898
    10. '_adj' → logprob: -15.600347518920898

Token 651: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.320199877838604e-07
    2. 'List' → logprob: -15.25
    3. '.append' → logprob: -15.875
    4. '_' → logprob: -17.375
    5. '[' → logprob: -17.875
    6. 'list' → logprob: -17.875
    7. '```' → logprob: -18.375
    8. 'append' → logprob: -18.625
    9. '_lists' → logprob: -18.625
    10. '_append' → logprob: -19.0

Token 652: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -16.5
    3. '[' → logprob: -17.0
    4. '[u' → logprob: -18.75
    5. '[min' → logprob: -19.875
    6. '[user' → logprob: -20.5
    7. ' node' → logprob: -21.5
    8. '
' → logprob: -21.5
    9. '[n' → logprob: -21.875
    10. ' [' → logprob: -21.875

Token 653: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -1.676292231422849e-05
    2. '_v' → logprob: -11.750017166137695
    3. 'u' → logprob: -12.000017166137695
    4. '[u' → logprob: -13.500017166137695
    5. '_node' → logprob: -15.250017166137695
    6. '_uv' → logprob: -15.750017166137695
    7. '_user' → logprob: -15.750017166137695
    8. '```' → logprob: -15.750017166137695
    9. '_' → logprob: -16.500017166137695
    10. '   ' → logprob: -16.750017166137695

Token 654: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.31970036029815674
    2. '].' → logprob: -1.3197003602981567
    3. '.' → logprob: -5.069700241088867
    4. ').' → logprob: -9.444700241088867
    5. '.app' → logprob: -10.319700241088867
    6. ' .' → logprob: -11.569700241088867
    7. '   ' → logprob: -12.569700241088867
    8. ' ].' → logprob: -13.194700241088867
    9. ']' → logprob: -13.319700241088867
    10. '.ap' → logprob: -13.569700241088867

Token 655: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.25
    3. '.append' → logprob: -17.75
    4. 'appen' → logprob: -20.0
    5. 'app' → logprob: -20.5
    6. '	append' → logprob: -21.125
    7. 'add' → logprob: -21.875
    8. '_append' → logprob: -22.125
    9. 'insert' → logprob: -24.25
    10. 'appe' → logprob: -24.375

Token 656: '(node' (ID: 13356)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.023280655965209007
    2. '(node' → logprob: -3.773280620574951
    3. ' node' → logprob: -10.27328109741211
    4. '	node' → logprob: -14.39828109741211
    5. '[node' → logprob: -17.14828109741211
    6. ',node' → logprob: -17.27328109741211
    7. '=node' → logprob: -17.39828109741211
    8. '/node' → logprob: -18.27328109741211
    9. 'Node' → logprob: -18.89828109741211
    10. '   ' → logprob: -19.89828109741211

Token 657: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -1.4855663721391466e-05
    2. 'v' → logprob: -11.375015258789062
    3. '_u' → logprob: -13.500015258789062
    4. '_' → logprob: -13.875015258789062
    5. ')' → logprob: -14.625015258789062
    6. ')_' → logprob: -15.250015258789062
    7. '```' → logprob: -17.125015258789062
    8. '}_' → logprob: -17.500015258789062
    9. '_id' → logprob: -17.500015258789062
    10. '_)' → logprob: -17.500015258789062

Token 658: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013403268530964851
    2. '<|end|>' → logprob: -4.638403415679932
    3. '       ' → logprob: -5.763403415679932
    4. '<|end|>' → logprob: -8.263402938842773
    5. ')
' → logprob: -9.138402938842773
    6. '   ' → logprob: -9.388402938842773
    7. ' )' → logprob: -10.763402938842773
    8. ',' → logprob: -12.138402938842773
    9. ' ' → logprob: -12.763402938842773
    10. '	' → logprob: -12.888402938842773

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005242771934717894
    2. '   ' → logprob: -5.505242824554443
    3. '<|end|>' → logprob: -6.880242824554443
    4. '<|end|>' → logprob: -10.005242347717285
    5. 'adj' → logprob: -10.255242347717285
    6. ' adjacency' → logprob: -11.505242347717285
    7. ' ' → logprob: -11.630242347717285
    8. '```' → logprob: -11.880242347717285
    9. '           ' → logprob: -11.880242347717285
    10. '     ' → logprob: -12.130242347717285

Token 660: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.10379043221473694
    2. '       ' → logprob: -2.603790521621704
    3. ' adjacency' → logprob: -3.853790521621704
    4. '   ' → logprob: -5.728790283203125
    5. 'ad' → logprob: -8.978790283203125
    6. ' adj' → logprob: -11.978790283203125
    7. '           ' → logprob: -12.228790283203125
    8. ' ' → logprob: -13.603790283203125
    9. '      ' → logprob: -14.103790283203125
    10. '  ' → logprob: -14.103790283203125

Token 661: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2352385965641588e-05
    2. 'list' → logprob: -11.750012397766113
    3. 'List' → logprob: -12.500012397766113
    4. '[' → logprob: -15.750012397766113
    5. '_LIST' → logprob: -16.125011444091797
    6. '_' → logprob: -17.125011444091797
    7. '<|end|>' → logprob: -17.125011444091797
    8. ')' → logprob: -17.500011444091797
    9. '```' → logprob: -17.625011444091797
    10. '-list' → logprob: -17.875011444091797

Token 662: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -2.3915141355246305e-05
    2. '[' → logprob: -11.37502384185791
    3. '[user' → logprob: -11.37502384185791
    4. 'node' → logprob: -15.12502384185791
    5. '[u' → logprob: -15.25002384185791
    6. '[v' → logprob: -15.75002384185791
    7. '[n' → logprob: -17.125024795532227
    8. '```' → logprob: -17.500024795532227
    9. '[file' → logprob: -17.750024795532227
    10. '(node' → logprob: -17.750024795532227

Token 663: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0003983760252594948
    2. '_u' → logprob: -8.000398635864258
    3. 'v' → logprob: -9.875398635864258
    4. 'u' → logprob: -12.625398635864258
    5. '[' → logprob: -13.625398635864258
    6. '```' → logprob: -13.625398635864258
    7. ']' → logprob: -14.250398635864258
    8. '[v' → logprob: -14.375398635864258
    9. '[u' → logprob: -14.875398635864258
    10. '_' → logprob: -15.000398635864258

Token 664: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10192793607711792
    2. '].' → logprob: -2.3519279956817627
    3. ').' → logprob: -6.851927757263184
    4. '.' → logprob: -7.476927757263184
    5. ' .' → logprob: -10.226927757263184
    6. '.app' → logprob: -10.601927757263184
    7. '[node' → logprob: -11.601927757263184
    8. '[].' → logprob: -12.476927757263184
    9. '.Append' → logprob: -12.601927757263184
    10. '}.' → logprob: -12.601927757263184

Token 665: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -15.25
    3. 'app' → logprob: -17.0
    4. 'appen' → logprob: -18.375
    5. ' append' → logprob: -18.375
    6. '_append' → logprob: -20.0
    7. '	append' → logprob: -20.25
    8. 'add' → logprob: -22.375
    9. 'Append' → logprob: -22.875
    10. '```' → logprob: -24.875

Token 666: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.07890763878822327
    2. 'node' → logprob: -2.5789077281951904
    3. ' node' → logprob: -11.32890796661377
    4. '(' → logprob: -12.95390796661377
    5. '[node' → logprob: -13.45390796661377
    6. '	node' → logprob: -13.57890796661377
    7. '(
' → logprob: -15.70390796661377
    8. 'user' → logprob: -15.95390796661377
    9. ',node' → logprob: -15.95390796661377
    10. '   ' → logprob: -16.078907012939453

Token 667: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -3.6789137084269896e-05
    2. '_v' → logprob: -10.50003719329834
    3. '[u' → logprob: -12.25003719329834
    4. 'u' → logprob: -12.62503719329834
    5. ')' → logprob: -14.62503719329834
    6. '(u' → logprob: -15.50003719329834
    7. '_' → logprob: -16.125036239624023
    8. '```' → logprob: -16.500036239624023
    9. '_)' → logprob: -16.750036239624023
    10. '_uv' → logprob: -16.750036239624023

Token 668: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14331255853176117
    2. '<|end|>' → logprob: -2.518312454223633
    3. '   ' → logprob: -3.143312454223633
    4. '
' → logprob: -5.018312454223633
    5. '<|end|>' → logprob: -6.018312454223633
    6. '    
' → logprob: -8.268312454223633
    7. ')
' → logprob: -9.643312454223633
    8. '       ' → logprob: -9.643312454223633
    9. ' )' → logprob: -10.393312454223633
    10. '```' → logprob: -10.518312454223633

Token 669: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014862094074487686
    2. 'visited' → logprob: -4.764862060546875
    3. '<|end|>' → logprob: -5.639862060546875
    4. ' visited' → logprob: -6.764862060546875
    5. '
' → logprob: -6.764862060546875
    6. '```' → logprob: -8.514862060546875
    7. '    
' → logprob: -9.514862060546875
    8. '  ' → logprob: -10.889862060546875
    9. 'Visited' → logprob: -11.014862060546875
    10. '       ' → logprob: -11.389862060546875

Token 670: ' flip' (ID: 29130)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28351545333862305
    2. ' visited' → logprob: -2.533515453338623
    3. ' flip' → logprob: -3.158515453338623
    4. '
' → logprob: -3.283515453338623
    5. '       ' → logprob: -3.283515453338623
    6. 'visited' → logprob: -3.408515453338623
    7. 'flip' (adapté à ' flip') → logprob: -5.033515453338623
    8. ' ' → logprob: -5.783515453338623
    9. '<|end|>' → logprob: -5.908515453338623
    10. ' ' → logprob: -7.408515453338623

Token 671: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.00016098834748845547
    2. '_' → logprob: -9.125161170959473
    3. '_FLAG' → logprob: -10.375161170959473
    4. 'Flag' → logprob: -11.750161170959473
    5. '_flags' → logprob: -12.250161170959473
    6. '_tab' → logprob: -13.750161170959473
    7. 'flag' → logprob: -13.875161170959473
    8. '	flag' → logprob: -13.875161170959473
    9. '   ' → logprob: -14.000161170959473
    10. '()' → logprob: -14.750161170959473

Token 672: '[min' (ID: 135647)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.0005169323412701488
    2. '[' → logprob: -7.625516891479492
    3. '[current' → logprob: -11.250516891479492
    4. '[u' → logprob: -13.250516891479492
    5. '[user' → logprob: -13.500516891479492
    6. '[_' → logprob: -13.625516891479492
    7. '=node' → logprob: -13.625516891479492
    8. '[:]' → logprob: -14.000516891479492
    9. 'node' → logprob: -14.125516891479492
    10. '[number' → logprob: -14.500516891479492

Token 673: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.004325910937041044
    2. 'node' → logprob: -5.504325866699219
    3. '=node' → logprob: -9.504325866699219
    4. '```' → logprob: -9.754325866699219
    5. '_node' → logprob: -10.004325866699219
    6. '[node' → logprob: -11.004325866699219
    7. ' node' → logprob: -11.004325866699219
    8. ',node' → logprob: -11.254325866699219
    9. '	node' → logprob: -11.754325866699219
    10. 'u' → logprob: -12.879325866699219

Token 674: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -0.004063082858920097
    2. 'u' → logprob: -5.879063129425049
    3. '_node' → logprob: -7.254063129425049
    4. '(node' → logprob: -8.62906265258789
    5. '(u' → logprob: -9.12906265258789
    6. '_user' → logprob: -9.25406265258789
    7. 'node' → logprob: -10.25406265258789
    8. ')' → logprob: -10.62906265258789
    9. '_v' → logprob: -10.87906265258789
    10. '_uv' → logprob: -11.37906265258789

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14071911573410034
    2. ',node' → logprob: -2.265719175338745
    3. '(node' → logprob: -3.765719175338745
    4. ',v' → logprob: -5.515718936920166
    5. '(' → logprob: -9.640719413757324
    6. ',n' → logprob: -10.015719413757324
    7. ',u' → logprob: -10.640719413757324
    8. ' ,' → logprob: -10.765719413757324
    9. 'node' → logprob: -10.765719413757324
    10. 'v' → logprob: -11.015719413757324

Token 676: ' node' (ID: 4596)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31338465213775635
    2. 'node' → logprob: -1.3133846521377563
    3. 'v' → logprob: -9.688385009765625
    4. ' node' → logprob: -9.938385009765625
    5. ' max' → logprob: -11.563385009765625
    6. '   ' → logprob: -13.813385009765625
    7. 'min' → logprob: -14.688385009765625
    8. '_max' → logprob: -15.063385009765625
    9. ',max' → logprob: -15.563385009765625
    10. '```' → logprob: -15.688385009765625

Token 677: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0031279250979423523
    2. '_u' → logprob: -6.0031280517578125
    3. 'v' → logprob: -7.8781280517578125
    4. ',' → logprob: -9.003128051757812
    5. 'u' → logprob: -9.378128051757812
    6. ',v' → logprob: -10.128128051757812
    7. ')' → logprob: -12.378128051757812
    8. '   ' → logprob: -12.628128051757812
    9. '
' → logprob: -12.628128051757812
    10. ',u' → logprob: -13.190628051757812

Token 678: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00895737949758768
    2. ']' → logprob: -5.258957386016846
    3. ')' → logprob: -6.008957386016846
    4. ',' → logprob: -7.633957386016846
    5. '()]' → logprob: -8.508956909179688
    6. '[' → logprob: -9.133956909179688
    7. '())' → logprob: -9.633956909179688
    8. '   ' → logprob: -9.758956909179688
    9. '])' → logprob: -9.758956909179688
    10. ')],' → logprob: -10.008956909179688

Token 679: ' ^=' (ID: 79665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2600657641887665
    2. ' ^=' → logprob: -1.8850657939910889
    3. '^' → logprob: -2.760065793991089
    4. ' =' → logprob: -4.88506555557251
    5. '+=' → logprob: -5.13506555557251
    6. ']' → logprob: -9.135066032409668
    7. ' +=' → logprob: -9.135066032409668
    8. ' |=' → logprob: -9.385066032409668
    9. '|' → logprob: -10.260066032409668
    10. ']+=' → logprob: -10.385066032409668

Token 680: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '0' → logprob: -15.250004768371582
    4. '   ' → logprob: -16.625003814697266
    5. '<|end|>' → logprob: -19.750003814697266
    6. '  ' → logprob: -20.000003814697266
    7. '```' → logprob: -20.125003814697266
    8. '`' → logprob: -21.125003814697266
    9. '
' → logprob: -21.437503814697266
    10. '۱' → logprob: -21.687503814697266

Token 681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '  ' → logprob: -19.250001907348633
    6. '<|end|>' → logprob: -20.062501907348633
    7. '۱' → logprob: -21.187501907348633
    8. '```' → logprob: -21.437501907348633
    9. '`' → logprob: -21.500001907348633
    10. 'flip' → logprob: -21.687501907348633

Token 682: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 683: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 684: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10834387689828873
    2. 'visited' → logprob: -2.3583438396453857
    3. ' visited' → logprob: -4.983344078063965
    4. ' for' → logprob: -7.233344078063965
    5. 'for' → logprob: -8.108344078063965
    6. '
' → logprob: -9.483344078063965
    7. 'Visited' → logprob: -10.483344078063965
    8. 'def' → logprob: -10.483344078063965
    9. '    
' → logprob: -10.733344078063965
    10. '	' → logprob: -11.358344078063965

Token 685: ' number' (ID: 2086)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.2814260721206665
    2. ' flip' → logprob: -1.6564260721206665
    3. 'sum' → logprob: -1.6564260721206665
    4. 'flip' → logprob: -2.281425952911377
    5. ' all' → logprob: -2.906425952911377
    6. ' any' → logprob: -3.031425952911377
    7. ' not' → logprob: -3.281425952911377
    8. ' ' → logprob: -3.781425952911377
    9. '0' → logprob: -3.906425952911377
    10. 'all' → logprob: -3.906425952911377

Token 686: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -8.061054359131958e-06
    2. 'of' → logprob: -12.250007629394531
    3. ' of' → logprob: -13.625007629394531
    4. '==' → logprob: -14.500007629394531
    5. 'Of' → logprob: -15.125007629394531
    6. '_nodes' → logprob: -15.375007629394531
    7. '_for' → logprob: -15.625007629394531
    8. '_' → logprob: -16.12500762939453
    9. 's' → logprob: -16.12500762939453
    10. '   ' → logprob: -16.37500762939453

Token 687: '_edges' (ID: 68870)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.005342736374586821
    2. '_edges' → logprob: -5.630342960357666
    3. 'nodes' → logprob: -6.380342960357666
    4. 'edges' → logprob: -10.755342483520508
    5. '_elements' → logprob: -11.505342483520508
    6. ' nodes' → logprob: -12.130342483520508
    7. 's' → logprob: -13.005342483520508
    8. '_' → logprob: -13.630342483520508
    9. '_vertices' → logprob: -13.630342483520508
    10. 'Nodes' → logprob: -14.255342483520508

Token 688: ' %' (ID: 1851)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5753498673439026
    2. ' <' → logprob: -1.3253498077392578
    3. ' ==' → logprob: -1.9503498077392578
    4. '!=' → logprob: -4.575349807739258
    5. '==' → logprob: -4.950349807739258
    6. '<' → logprob: -4.950349807739258
    7. ' >' → logprob: -5.950349807739258
    8. ' %' → logprob: -6.825349807739258
    9. ' <=' → logprob: -8.200349807739258
    10. ' >=' → logprob: -8.325349807739258

Token 689: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011859115213155746
    2. ' ' → logprob: -4.511858940124512
    3. '3' → logprob: -7.136858940124512
    4. '  ' → logprob: -11.886858940124512
    5. '4' → logprob: -12.636858940124512
    6. '```' → logprob: -13.136858940124512
    7. '1' → logprob: -14.136858940124512
    8. '(' → logprob: -14.761858940124512
    9. '
' → logprob: -15.074358940124512
    10. ' ' → logprob: -15.261858940124512

Token 690: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.300083648762666e-05
    2. ' ' → logprob: -10.250053405761719
    3. '3' → logprob: -11.000053405761719
    4. '  ' → logprob: -15.250053405761719
    5. '4' → logprob: -16.00005340576172
    6. '1' → logprob: -16.12505340576172
    7. '   ' → logprob: -16.31255340576172
    8. '```' → logprob: -17.25005340576172
    9. '==' → logprob: -17.81255340576172
    10. '201' → logprob: -17.81255340576172

Token 691: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.38424912095069885
    2. '!=' → logprob: -1.3842490911483765
    3. ' ==' → logprob: -3.259249210357666
    4. '==' → logprob: -3.509249210357666
    5. ':' → logprob: -8.759248733520508
    6. '   ' → logprob: -11.634248733520508
    7. '=' → logprob: -11.759248733520508
    8. ':
' → logprob: -12.509248733520508
    9. ' ' → logprob: -13.259248733520508
    10. '()!=' → logprob: -13.509248733520508

Token 692: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7204963564872742
    2. ' ' → logprob: -1.095496416091919
    3. '1' → logprob: -1.720496416091919
    4. '=' → logprob: -9.09549617767334
    5. '2' → logprob: -10.97049617767334
    6. '==' → logprob: -13.47049617767334
    7. '   ' → logprob: -13.47049617767334
    8. ' =' → logprob: -13.84549617767334
    9. '```' → logprob: -13.84549617767334
    10. '  ' → logprob: -14.84549617767334

Token 693: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2263670116662979
    2. '1' → logprob: -1.6013669967651367
    3. ' ' → logprob: -6.976366996765137
    4. '```' → logprob: -11.413866996765137
    5. '   ' → logprob: -13.413866996765137
    6. '2' → logprob: -13.663866996765137
    7. '  ' → logprob: -14.788866996765137
    8. '=' → logprob: -15.038866996765137
    9. '``' → logprob: -15.226366996765137
    10. '==' → logprob: -15.288866996765137

Token 694: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3387888967990875
    2. ':' → logprob: -1.3387888669967651
    3. '   ' → logprob: -4.213788986206055
    4. '       ' → logprob: -4.588788986206055
    5. ' and' → logprob: -8.713788986206055
    6. '():
' → logprob: -11.088788986206055
    7. '):
' → logprob: -11.338788986206055
    8. '==' → logprob: -11.588788986206055
    9. ' :
' → logprob: -11.713788986206055
    10. ':

' → logprob: -11.713788986206055

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009573166607879102
    2. ':' → logprob: -8.000957489013672
    3. ':
' → logprob: -8.000957489013672
    4. '   ' → logprob: -8.625957489013672
    5. '
' → logprob: -9.750957489013672
    6. 'print' → logprob: -11.125957489013672
    7. '):
' → logprob: -11.625957489013672
    8. ',' → logprob: -12.125957489013672
    9. ' print' → logprob: -12.375957489013672
    10. '```' → logprob: -12.375957489013672

Token 696: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07555317878723145
    2. '   ' → logprob: -2.7005531787872314
    3. '       ' → logprob: -5.325552940368652
    4. ' print' → logprob: -7.325552940368652
    5. '```' → logprob: -10.575552940368652
    6. '
' → logprob: -11.075552940368652
    7. 'for' → logprob: -11.700552940368652
    8. '           ' → logprob: -11.950552940368652
    9. '	print' → logprob: -12.325552940368652
    10. '  ' → logprob: -12.325552940368652

Token 697: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.010612438432872295
    2. '(' → logprob: -4.760612487792969
    3. '(-' → logprob: -6.260612487792969
    4. '("-' → logprob: -9.885612487792969
    5. '('' → logprob: -11.135612487792969
    6. '("")' → logprob: -12.010612487792969
    7. '()' → logprob: -12.260612487792969
    8. '("\' → logprob: -13.260612487792969
    9. '("(' → logprob: -13.635612487792969
    10. '(
' → logprob: -13.635612487792969

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '2' → logprob: -15.125000953674316
    3. '10' → logprob: -16.000001907348633
    4. '11' → logprob: -16.062501907348633
    5. ' ' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.625001907348633
    7. ')' → logprob: -17.000001907348633
    8. '100' → logprob: -17.250001907348633
    9. '۱' → logprob: -17.250001907348633
    10. '3' → logprob: -17.562501907348633

Token 699: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01836930774152279
    2. ')
' → logprob: -4.143369197845459
    3. ')' → logprob: -6.143369197845459
    4. '   ' → logprob: -8.893369674682617
    5. '
' → logprob: -11.143369674682617
    6. '	' → logprob: -11.268369674682617
    7. '           ' → logprob: -12.018369674682617
    8. ')return' → logprob: -12.643369674682617
    9. ' ' → logprob: -12.768369674682617
    10. '	   ' → logprob: -12.893369674682617

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006155712064355612
    2. '   ' → logprob: -5.256155490875244
    3. '<|end|>' → logprob: -8.006155967712402
    4. '	return' → logprob: -8.506155967712402
    5. '	' → logprob: -8.506155967712402
    6. '
' → logprob: -9.631155967712402
    7. '	   ' → logprob: -10.756155967712402
    8. 'return' → logprob: -11.006155967712402
    9. '    
' → logprob: -11.881155967712402
    10. '           ' → logprob: -12.006155967712402

Token 701: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011808603449026123
    2. 'return' (adapté à ' return') → logprob: -9.750118255615234
    3. '
' → logprob: -10.250118255615234
    4. '   ' → logprob: -11.250118255615234
    5. '	' → logprob: -12.000118255615234
    6. ' return' → logprob: -13.625118255615234
    7. '	return' → logprob: -13.750118255615234
    8. ' ' → logprob: -14.375118255615234
    9. '	   ' → logprob: -14.750118255615234
    10. '
' → logprob: -14.875118255615234

Token 702: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23561003804206848
    2. '
' → logprob: -1.735610008239746
    3. '    
' → logprob: -3.985610008239746
    4. '<|end|>' → logprob: -4.235610008239746
    5. '  
' → logprob: -8.735610008239746
    6. '	
' → logprob: -9.485610008239746
    7. '        
' → logprob: -9.735610008239746
    8. '```' → logprob: -9.860610008239746
    9. '
' → logprob: -9.985610008239746
    10. ' 
' → logprob: -10.110610008239746

Token 703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01063650380820036
    2. '
' → logprob: -4.635636329650879
    3. '    
' → logprob: -7.385636329650879
    4. 'visited' → logprob: -8.760636329650879
    5. '```' → logprob: -9.385636329650879
    6. '  
' → logprob: -12.260636329650879
    7. ' visited' → logprob: -12.385636329650879
    8. '<|end|>' → logprob: -12.760636329650879
    9. '
' → logprob: -13.135636329650879
    10. '        
' → logprob: -13.385636329650879

Token 704: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.0099280821159482
    2. '   ' → logprob: -4.884928226470947
    3. 'for' → logprob: -6.384928226470947
    4. 'if' → logprob: -8.759927749633789
    5. 'flip' → logprob: -8.759927749633789
    6. 'while' → logprob: -9.634927749633789
    7. 'print' → logprob: -9.759927749633789
    8. ' visited' → logprob: -10.259927749633789
    9. 'start' → logprob: -10.509927749633789
    10. 'visit' → logprob: -11.134927749633789

Token 705: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.1814315766096115
    2. '=' → logprob: -2.431431531906128
    3. ' =' → logprob: -2.681431531906128
    4. '_' → logprob: -4.681431770324707
    5. '=[' → logprob: -9.056431770324707
    6. '_=' → logprob: -9.806431770324707
    7. '[' → logprob: -10.181431770324707
    8. '```' → logprob: -11.056431770324707
    9. 'Nodes' → logprob: -11.806431770324707
    10. '   ' → logprob: -11.806431770324707

Token 706: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22553934156894684
    2. ' =' → logprob: -1.6005393266677856
    3. '=[' → logprob: -9.350539207458496
    4. '[' → logprob: -10.225539207458496
    5. ' =[' → logprob: -13.225539207458496
    6. '```' → logprob: -14.600539207458496
    7. '   ' → logprob: -14.725539207458496
    8. ')' → logprob: -15.475539207458496
    9. ' ' → logprob: -15.975539207458496
    10. '＝' → logprob: -16.225540161132812

Token 707: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.895480277715251e-06
    2. ' [' → logprob: -12.125008583068848
    3. '   ' → logprob: -13.750008583068848
    4. '[int' → logprob: -14.375008583068848
    5. '[node' → logprob: -15.000008583068848
    6. '[-' → logprob: -15.250008583068848
    7. '[len' → logprob: -16.000009536743164
    8. '[n' → logprob: -16.000009536743164
    9. '[max' → logprob: -16.375009536743164
    10. '[number' → logprob: -16.375009536743164

Token 708: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011584713123738766
    2. '0' → logprob: -4.511584758758545
    3. 'True' → logprob: -7.886584758758545
    4. 'False' → logprob: -8.761584281921387
    5. '-' → logprob: -12.636584281921387
    6. ' ' → logprob: -14.636584281921387
    7. ' True' → logprob: -15.261584281921387
    8. '
' → logprob: -17.011585235595703
    9. 'None' → logprob: -17.011585235595703
    10. '   ' → logprob: -17.074085235595703

Token 709: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012773767812177539
    2. ']*(' → logprob: -6.876277446746826
    3. ' for' → logprob: -9.376276969909668
    4. ']*' → logprob: -9.626276969909668
    5. ']+' → logprob: -10.626276969909668
    6. '*' → logprob: -11.001276969909668
    7. ' ]' → logprob: -11.126276969909668
    8. ' *' → logprob: -11.251276969909668
    9. '*(' → logprob: -11.501276969909668
    10. 'for' → logprob: -12.001276969909668

Token 710: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.40855708718299866
    2. '+' → logprob: -1.5335570573806763
    3. '*(' → logprob: -2.783557176589966
    4. ' *' → logprob: -3.283557176589966
    5. ' for' → logprob: -4.533556938171387
    6. ')' → logprob: -5.658556938171387
    7. 'for' → logprob: -6.533556938171387
    8. '   ' → logprob: -6.658556938171387
    9. ' +' → logprob: -7.158556938171387
    10. '0' → logprob: -7.783556938171387

Token 711: ' (' (ID: 350)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0003781224077101797
    2. '(len' → logprob: -8.000377655029297
    3. ' (' → logprob: -10.375377655029297
    4. '(n' → logprob: -12.000377655029297
    5. '(length' → logprob: -13.125377655029297
    6. '(num' → logprob: -13.250377655029297
    7. '   ' → logprob: -15.000377655029297
    8. '(numbers' → logprob: -15.500377655029297
    9. '(' → logprob: -15.625377655029297
    10. '(Number' → logprob: -15.750377655029297

Token 712: 'number' (ID: 8096)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.00010080150241265073
    2. ' (' → logprob: -9.875101089477539
    3. '(len' → logprob: -10.000101089477539
    4. 'number' → logprob: -13.000101089477539
    5. '(n' → logprob: -14.750101089477539
    6. '   ' → logprob: -15.625101089477539
    7. '((' → logprob: -15.625101089477539
    8. '(num' → logprob: -15.750101089477539
    9. '(' → logprob: -16.00010108947754
    10. '
' → logprob: -16.12510108947754

Token 713: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.1279553291387856e-05
    2. 'of' → logprob: -11.500011444091797
    3. ' of' → logprob: -14.375011444091797
    4. '_nodes' → logprob: -15.375011444091797
    5. 'Of' → logprob: -16.625011444091797
    6. '   ' → logprob: -16.875011444091797
    7. '_OF' → logprob: -17.375011444091797
    8. '1' → logprob: -17.500011444091797
    9. '=' → logprob: -18.250011444091797
    10. '+' → logprob: -18.375011444091797

Token 714: '_nodes' (ID: 34593)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(number' → logprob: -5.228561349213123e-05
    2. ' (' → logprob: -11.250052452087402
    3. '(len' → logprob: -11.625052452087402
    4. '   ' → logprob: -11.625052452087402
    5. '(n' → logprob: -11.750052452087402
    6. '(num' → logprob: -12.000052452087402
    7. '[number' → logprob: -13.375052452087402
    8. '1' → logprob: -13.500052452087402
    9. 'number' → logprob: -13.500052452087402
    10. '  ' → logprob: -14.875052452087402

Token 715: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026302969083189964
    2. ' +' → logprob: -3.6513030529022217
    3. '+
' → logprob: -13.2763032913208
    4. '<|end|>' → logprob: -15.0263032913208
    5. ' +
' → logprob: -15.7763032913208
    6. ' ' → logprob: -15.9013032913208
    7. ')' → logprob: -16.026302337646484
    8. '+)' → logprob: -16.526302337646484
    9. '+[' → logprob: -16.776302337646484
    10. '   ' → logprob: -16.776302337646484

Token 716: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.250005722045898
    3. '```' → logprob: -14.500005722045898
    4. '0' → logprob: -15.625005722045898
    5. '   ' → logprob: -15.750005722045898
    6. '=' → logprob: -15.750005722045898
    7. '(' → logprob: -17.0000057220459
    8. '+' → logprob: -17.1250057220459
    9. '``' → logprob: -18.0000057220459
    10. '`' → logprob: -18.3750057220459

Token 717: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '2' → logprob: -17.5
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -18.875
    6. '
' → logprob: -19.75
    7. '0' → logprob: -20.8125
    8. '  ' → logprob: -20.9375
    9. '(' → logprob: -21.3125
    10. '１' → logprob: -21.75

Token 718: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25224944949150085
    2. ')
' → logprob: -1.5022494792938232
    3. '   ' → logprob: -8.127249717712402
    4. ')
' → logprob: -11.252249717712402
    5. '
' → logprob: -11.877249717712402
    6. ')

' → logprob: -13.502249717712402
    7. ' )
' → logprob: -13.752249717712402
    8. ' )' → logprob: -14.377249717712402
    9. ' ' → logprob: -14.502249717712402
    10. '```' → logprob: -15.127249717712402

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030388421146199107
    2. 'visited' → logprob: -9.125304222106934
    3. ' for' → logprob: -9.625304222106934
    4. '
' → logprob: -9.875304222106934
    5. ' visited' → logprob: -10.250304222106934
    6. 'def' → logprob: -11.625304222106934
    7. '    
' → logprob: -11.625304222106934
    8. 'for' → logprob: -11.625304222106934
    9. '```' → logprob: -11.875304222106934
    10. '  ' → logprob: -13.375304222106934

Token 720: ' visited' (ID: 18416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4326222538948059
    2. 'depth' → logprob: -1.6826221942901611
    3. '   ' → logprob: -1.8076221942901611
    4. 'flip' → logprob: -7.80762243270874
    5. ' for' → logprob: -8.057621955871582
    6. 'dfs' → logprob: -8.182621955871582
    7. 'def' → logprob: -9.807621955871582
    8. ' depth' → logprob: -10.057621955871582
    9. 'print' → logprob: -10.182621955871582
    10. '    
' → logprob: -10.557621955871582

Token 721: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -2.522638169466518e-05
    2. '[' → logprob: -11.750024795532227
    3. '_tokens' → logprob: -11.875024795532227
    4. '_' → logprob: -12.250024795532227
    5. 'nodes' → logprob: -13.500024795532227
    6. '   ' → logprob: -13.750024795532227
    7. ' =' → logprob: -14.625024795532227
    8. '_indices' → logprob: -14.750024795532227
    9. 'Nodes' → logprob: -15.500024795532227
    10. '[_' → logprob: -15.500024795532227

Token 722: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00046928023220971227
    2. '=' → logprob: -8.250469207763672
    3. ' =' → logprob: -9.500469207763672
    4. '[-' → logprob: -9.750469207763672
    5. ',' → logprob: -10.875469207763672
    6. '[number' → logprob: -10.875469207763672
    7. '=[' → logprob: -11.500469207763672
    8. '[:]' → logprob: -11.875469207763672
    9. '   ' → logprob: -12.125469207763672
    10. '0' → logprob: -12.125469207763672

Token 723: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47415226697921753
    2. '1' → logprob: -0.9741522669792175
    3. 'number' → logprob: -10.724152565002441
    4. '   ' → logprob: -11.099152565002441
    5. '-' → logprob: -11.224152565002441
    6. '[' → logprob: -11.849152565002441
    7. ' ' → logprob: -12.099152565002441
    8. '=' → logprob: -12.474152565002441
    9. '```' → logprob: -13.224152565002441
    10. ')' → logprob: -13.724152565002441

Token 724: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016760841012001038
    2. ']=' → logprob: -4.64176082611084
    3. '=' → logprob: -5.01676082611084
    4. ')' → logprob: -8.26676082611084
    5. ' ]' → logprob: -9.39176082611084
    6. ' =' → logprob: -12.14176082611084
    7. ')=' → logprob: -12.39176082611084
    8. '   ' → logprob: -14.01676082611084
    9. ')]' → logprob: -14.01676082611084
    10. '-' → logprob: -14.26676082611084

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.531315314830863e-06
    2. ' =' → logprob: -12.625003814697266
    3. '=False' → logprob: -16.125003814697266
    4. '-=' → logprob: -17.875003814697266
    5. '==' → logprob: -18.250003814697266
    6. '0' → logprob: -18.250003814697266
    7. '=
' → logprob: -19.125003814697266
    8. ')=' → logprob: -19.125003814697266
    9. ')' → logprob: -19.500003814697266
    10. '.=' → logprob: -19.625003814697266

Token 726: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'False' → logprob: -15.875009536743164
    4. '   ' → logprob: -17.000009536743164
    5. '1' → logprob: -17.625009536743164
    6. '۰' → logprob: -19.375009536743164
    7. '  ' → logprob: -19.500009536743164
    8. '    ' → logprob: -20.687509536743164
    9. ' False' → logprob: -20.750009536743164
    10. '00' → logprob: -21.000009536743164

Token 727: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. 'False' → logprob: -15.625000953674316
    4. '1' → logprob: -18.0
    5. '۰' → logprob: -19.75
    6. '   ' → logprob: -20.75
    7. '00' → logprob: -21.4375
    8. '2' → logprob: -21.5
    9. '０' → logprob: -21.75
    10. '000' → logprob: -21.75

Token 728: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034237600630149245
    2. 'depth' → logprob: -8.12534236907959
    3. ' depth' → logprob: -10.62534236907959
    4. '
' → logprob: -11.12534236907959
    5. '(depth' → logprob: -12.75034236907959
    6. '    
' → logprob: -13.12534236907959
    7. '	de' → logprob: -13.62534236907959
    8. '_depth' → logprob: -15.00034236907959
    9. '   ' → logprob: -15.00034236907959
    10. 'solve' → logprob: -15.87534236907959

Token 729: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019030878320336342
    2. 'depth' → logprob: -8.750190734863281
    3. ' depth' → logprob: -10.875190734863281
    4. '(depth' → logprob: -11.875190734863281
    5. '    
' → logprob: -13.375190734863281
    6. '
' → logprob: -13.375190734863281
    7. '	de' → logprob: -13.625190734863281
    8. '   ' → logprob: -14.750190734863281
    9. '_depth' → logprob: -14.875190734863281
    10. '```' → logprob: -15.750190734863281

Token 730: ' depth' (ID: 13636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020611027255654335
    2. 'depth' (adapté à ' depth') → logprob: -4.020610809326172
    3. ' depth' → logprob: -6.020610809326172
    4. '
' → logprob: -10.770610809326172
    5. '(depth' → logprob: -12.020610809326172
    6. '    
' → logprob: -14.145610809326172
    7. 'solve' → logprob: -14.520610809326172
    8. '_depth' → logprob: -14.770610809326172
    9. '```' → logprob: -15.270610809326172
    10. '   ' → logprob: -15.645610809326172

Token 731: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -9.13388703338569e-06
    2. 'first' → logprob: -11.875009536743164
    3. '_' → logprob: -15.250009536743164
    4. '   ' → logprob: -15.625009536743164
    5. '_full' → logprob: -15.625009536743164
    6. '_current' → logprob: -15.625009536743164
    7. '_free' → logprob: -15.750009536743164
    8. 'First' → logprob: -15.875009536743164
    9. '_four' → logprob: -16.000009536743164
    10. '_FIRST' → logprob: -16.125009536743164

Token 732: '_search' (ID: 23642)
  Prédit: '_search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.0009200352360494435
    2. 'search' → logprob: -7.000919818878174
    3. '_first' → logprob: -12.250920295715332
    4. '_' → logprob: -12.875920295715332
    5. ' search' → logprob: -14.625920295715332
    6. '_s' → logprob: -15.750920295715332
    7. 'first' → logprob: -15.875920295715332
    8. 'Search' → logprob: -16.000919342041016
    9. '_scan' → logprob: -16.500919342041016
    10. '_print' → logprob: -17.000919342041016

Token 733: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9981420336989686e-05
    2. '1' → logprob: -10.875020027160645
    3. ' (' → logprob: -14.500020027160645
    4. '(
' → logprob: -14.875020027160645
    5. '<|end|>' → logprob: -17.000019073486328
    6. ' ' → logprob: -18.250019073486328
    7. '
' → logprob: -19.125019073486328
    8. '((' → logprob: -20.000019073486328
    9. '0' → logprob: -20.250019073486328
    10. '()' → logprob: -21.250019073486328

Token 734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -17.25
    4. '(' → logprob: -17.5
    5. '
' → logprob: -21.5
    6. '  ' → logprob: -22.5
    7. '۱' → logprob: -22.625
    8. '       ' → logprob: -23.0
    9. '```' → logprob: -23.125
    10. '１' → logprob: -23.125

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002534720697440207
    2. ' ,' → logprob: -8.625253677368164
    3. ')' → logprob: -9.875253677368164
    4. '   ' → logprob: -10.750253677368164
    5. ',
' → logprob: -14.875253677368164
    6. ',)' → logprob: -15.875253677368164
    7. '  ' → logprob: -16.000253677368164
    8. '‌,' → logprob: -16.250253677368164
    9. ' ' → logprob: -16.625253677368164
    10. '	' → logprob: -16.750253677368164

Token 736: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.676292231422849e-05
    2. ' visited' → logprob: -11.000017166137695
    3. 'visit' → logprob: -20.125017166137695
    4. '   ' → logprob: -20.875017166137695
    5. 'vis' → logprob: -21.250017166137695
    6. 'visible' → logprob: -22.250017166137695
    7. 'Visited' → logprob: -23.000017166137695
    8. 'visitor' → logprob: -24.250017166137695
    9. '
' → logprob: -24.375017166137695
    10. 'visi' → logprob: -25.000017166137695

Token 737: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -3.128163257315464e-07
    2. 'nodes' → logprob: -15.875
    3. '_' → logprob: -17.0
    4. '```' → logprob: -17.25
    5. ')' → logprob: -17.875
    6. 'Nodes' → logprob: -18.875
    7. '
' → logprob: -19.0
    8. '_node' → logprob: -19.125
    9. 's' → logprob: -20.125
    10. ')_' → logprob: -20.125

Token 738: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015444994205608964
    2. ')
' → logprob: -6.62654447555542
    3. ')

' → logprob: -8.751544952392578
    4. '   ' → logprob: -9.751544952392578
    5. ')
' → logprob: -13.751544952392578
    6. ' )' → logprob: -14.251544952392578
    7. ')

' → logprob: -15.626544952392578
    8. ' ' → logprob: -16.501544952392578
    9. ')`' → logprob: -17.501544952392578
    10. '),' → logprob: -17.626544952392578

Token 739: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006603728979825974
    2. 'for' → logprob: -7.500660419464111
    3. 'print' → logprob: -9.625659942626953
    4. '    
' → logprob: -11.500659942626953
    5. '<|end|>' → logprob: -11.625659942626953
    6. '```' → logprob: -11.750659942626953
    7. ' for' → logprob: -11.875659942626953
    8. '
' → logprob: -12.125659942626953
    9. '``' → logprob: -14.625659942626953
    10. '       ' → logprob: -15.250659942626953

Token 740: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3159193694591522
    2. 'for' (adapté à ' for') → logprob: -1.3159193992614746
    3. 'result' → logprob: -6.440919399261475
    4. '   ' → logprob: -7.065919399261475
    5. 'flip' → logprob: -10.065918922424316
    6. 'edges' → logprob: -10.690918922424316
    7. 'answer' → logprob: -10.815918922424316
    8. ' for' → logprob: -10.815918922424316
    9. 'count' → logprob: -10.940918922424316
    10. 'total' → logprob: -11.065918922424316

Token 741: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07317404448986053
    2. ' edge' → logprob: -3.198173999786377
    3. 'key' → logprob: -4.448173999786377
    4. 'u' → logprob: -5.198173999786377
    5. 'node' → logprob: -5.448173999786377
    6. '(edge' → logprob: -5.823173999786377
    7. '(u' → logprob: -6.573173999786377
    8. ' key' → logprob: -6.573173999786377
    9. 'i' → logprob: -6.948173999786377
    10. '_edge' → logprob: -7.948173999786377

Token 742: '_tuple' (ID: 53371)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.00034774013329297304
    2. ' in' → logprob: -8.875348091125488
    3. ',' → logprob: -9.250348091125488
    4. '_' → logprob: -9.625348091125488
    5. ',_' → logprob: -10.750348091125488
    6. 'key' → logprob: -11.625348091125488
    7. '_orientation' → logprob: -12.125348091125488
    8. '_,' → logprob: -13.000348091125488
    9. '_k' → logprob: -13.500348091125488
    10. '_index' → logprob: -14.250348091125488

Token 743: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1359456330537796
    2. 'in' → logprob: -2.1359455585479736
    3. ',' → logprob: -5.010945796966553
    4. '_key' → logprob: -6.135945796966553
    5. ' =' → logprob: -10.760945320129395
    6. ' ,' → logprob: -10.760945320129395
    7. 's' → logprob: -10.760945320129395
    8. 'key' → logprob: -10.885945320129395
    9. '_in' → logprob: -11.260945320129395
    10. '=' → logprob: -12.010945320129395

Token 744: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.10414782166481018
    2. 'value' → logprob: -2.6041479110717773
    3. 'flip' → logprob: -4.104147911071777
    4. 'direction' → logprob: -4.854147911071777
    5. 'state' → logprob: -8.604147911071777
    6. 'status' → logprob: -9.229147911071777
    7. 'flag' → logprob: -9.479147911071777
    8. ' orientation' → logprob: -9.479147911071777
    9. 'fl' → logprob: -9.479147911071777
    10. 'orient' → logprob: -9.604147911071777

Token 745: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04869331046938896
    2. 'in' → logprob: -3.0486934185028076
    3. '_in' → logprob: -10.173693656921387
    4. '	in' → logprob: -10.548693656921387
    5. ' ' → logprob: -11.048693656921387
    6. ',' → logprob: -11.923693656921387
    7. '   ' → logprob: -12.298693656921387
    8. '<|end|>' → logprob: -12.923693656921387
    9. '_value' → logprob: -13.173693656921387
    10. '  ' → logprob: -13.173693656921387

Token 746: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.018150178715586662
    2. ' edge' → logprob: -4.018150329589844
    3. '(edge' → logprob: -16.143150329589844
    4. 'sorted' → logprob: -16.643150329589844
    5. '=edge' → logprob: -17.643150329589844
    6. 'edges' → logprob: -17.893150329589844
    7. '_edge' → logprob: -18.018150329589844
    8. 'item' → logprob: -18.768150329589844
    9. 'print' → logprob: -18.893150329589844
    10. ' sorted' → logprob: -19.018150329589844

Token 747: '_orientation' (ID: 169549)
  Prédit: '_orientation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_orientation' → logprob: -0.001290236134082079
    2. 'orientation' → logprob: -7.126290321350098
    3. 'in' → logprob: -8.501290321350098
    4. 'items' → logprob: -9.001290321350098
    5. '_items' → logprob: -9.626290321350098
    6. '.items' → logprob: -10.251290321350098
    7. '```' → logprob: -10.876290321350098
    8. 'Orientation' → logprob: -11.126290321350098
    9. '_direction' → logprob: -12.001290321350098
    10. ' in' → logprob: -12.251290321350098

Token 748: '.items' (ID: 19607)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.37275487184524536
    2. ' in' → logprob: -1.8727548122406006
    3. 'items' → logprob: -2.2477548122406006
    4. ',' → logprob: -3.4977548122406006
    5. '.items' → logprob: -4.24775505065918
    6. '_items' → logprob: -5.74775505065918
    7. ':' → logprob: -7.37275505065918
    8. '.' → logprob: -7.37275505065918
    9. ' ' → logprob: -7.49775505065918
    10. '   ' → logprob: -7.74775505065918

Token 749: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.10823818296194077
    2. '():' → logprob: -2.3582382202148438
    3. '()' → logprob: -4.983238220214844
    4. '(),' → logprob: -7.858238220214844
    5. '()):
' → logprob: -8.733238220214844
    6. '():
' → logprob: -9.108238220214844
    7. ':' → logprob: -9.358238220214844
    8. 'in' → logprob: -9.733238220214844
    9. '(' → logprob: -9.733238220214844
    10. ',' → logprob: -9.983238220214844

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.180258191714529e-06
    2. 'print' → logprob: -13.000008583068848
    3. '```' → logprob: -13.000008583068848
    4. '   ' → logprob: -13.750008583068848
    5. '           ' → logprob: -14.000008583068848
    6. ' print' → logprob: -14.125008583068848
    7. '<|end|>' → logprob: -14.625008583068848
    8. '      ' → logprob: -16.25000762939453
    9. ',' → logprob: -16.37500762939453
    10. '     ' → logprob: -17.00000762939453

Token 751: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2232280671596527
    2. 'print' → logprob: -1.723228096961975
    3. ' print' → logprob: -3.8482279777526855
    4. '   ' → logprob: -8.598228454589844
    5. '           ' → logprob: -9.723228454589844
    6. '```' → logprob: -11.973228454589844
    7. ' if' → logprob: -12.473228454589844
    8. '	print' → logprob: -12.598228454589844
    9. 'if' (adapté à ' if') → logprob: -13.098228454589844
    10. ' ' → logprob: -14.473228454589844

Token 752: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.1797970086336136
    2. ' orientation' → logprob: -1.8047970533370972
    3. '   ' → logprob: -10.804797172546387
    4. ' not' → logprob: -10.929797172546387
    5. 'not' → logprob: -11.554797172546387
    6. ' ' → logprob: -13.929797172546387
    7. '_orientation' → logprob: -14.054797172546387
    8. 'orient' → logprob: -14.304797172546387
    9. '.orientation' → logprob: -14.554797172546387
    10. ' ' → logprob: -14.929797172546387

Token 753: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.030264126136898994
    2. ' ==' → logprob: -3.530264139175415
    3. ':' → logprob: -8.530263900756836
    4. ':
' → logprob: -8.655263900756836
    5. '=' → logprob: -9.905263900756836
    6. '==
' → logprob: -10.905263900756836
    7. ')==' → logprob: -11.155263900756836
    8. '!=' → logprob: -11.280263900756836
    9. '<|end|>' → logprob: -11.530263900756836
    10. ']==' → logprob: -11.655263900756836

Token 754: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010261393617838621
    2. 'print' → logprob: -7.376026153564453
    3. ' print' → logprob: -8.501026153564453
    4. '       ' → logprob: -8.876026153564453
    5. ',' → logprob: -10.876026153564453
    6. '```' → logprob: -11.626026153564453
    7. '   ' → logprob: -12.376026153564453
    8. '		' → logprob: -12.626026153564453
    9. '	       ' → logprob: -12.751026153564453
    10. '
' → logprob: -12.751026153564453

Token 755: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12006822228431702
    2. ' print' → logprob: -2.245068311691284
    3. '           ' → logprob: -4.995068073272705
    4. '       ' → logprob: -7.870068073272705
    5. '   ' → logprob: -9.995068550109863
    6. '```' → logprob: -11.995068550109863
    7. '	print' → logprob: -12.370068550109863
    8. '
' → logprob: -12.620068550109863
    9. ' x' → logprob: -13.495068550109863
    10. 'x' → logprob: -13.620068550109863

Token 756: '(*' (ID: 9000)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.16270580887794495
    2. '(*' → logprob: -2.287705898284912
    3. '(' → logprob: -3.662705898284912
    4. '(f' → logprob: -4.037705898284912
    5. 'edge' → logprob: -5.412705898284912
    6. '("' → logprob: -7.662705898284912
    7. '1' → logprob: -8.912705421447754
    8. '(-' → logprob: -9.287705421447754
    9. 'f' → logprob: -10.412705421447754
    10. '*' → logprob: -10.412705421447754

Token 757: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.259079363080673e-05
    2. ' edge' → logprob: -11.625012397766113
    3. '[' → logprob: -13.250012397766113
    4. '(edge' → logprob: -13.750012397766113
    5. 'list' → logprob: -14.500012397766113
    6. '   ' → logprob: -15.375012397766113
    7. 'edges' → logprob: -16.75001335144043
    8. 'sorted' → logprob: -18.25001335144043
    9. '=edge' → logprob: -18.25001335144043
    10. '(' → logprob: -18.37501335144043

Token 758: '_tuple' (ID: 53371)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.059696923941373825
    2. '_tuple' → logprob: -3.559696912765503
    3. '(edge' → logprob: -3.684696912765503
    4. 'tuple' → logprob: -6.309697151184082
    5. '_edge' → logprob: -7.184697151184082
    6. 'edges' → logprob: -8.184697151184082
    7. '=edge' → logprob: -8.184697151184082
    8. '(' → logprob: -8.309697151184082
    9. '[' → logprob: -8.559697151184082
    10. ')' → logprob: -8.809697151184082

Token 759: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003937817644327879
    2. ',' → logprob: -5.628937721252441
    3. ')
' → logprob: -8.128937721252441
    4. ' )' → logprob: -11.003937721252441
    5. ',end' → logprob: -11.753937721252441
    6. '<|end|>' → logprob: -12.253937721252441
    7. '())' → logprob: -12.878937721252441
    8. '   ' → logprob: -13.003937721252441
    9. '0' → logprob: -13.253937721252441
    10. ' ,' → logprob: -13.878937721252441

Token 760: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 762: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22212031483650208
    2. '       ' → logprob: -1.8471202850341797
    3. ':' → logprob: -4.09712028503418
    4. ':
' → logprob: -4.34712028503418
    5. '   ' → logprob: -5.09712028503418
    6. ',' → logprob: -5.97212028503418
    7. '
' → logprob: -7.47212028503418
    8. 'print' → logprob: -8.09712028503418
    9. '.' → logprob: -8.22212028503418
    10. '<|end|>' → logprob: -8.22212028503418

Token 763: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04510399326682091
    2. ' print' → logprob: -3.6701040267944336
    3. '           ' → logprob: -4.170104026794434
    4. '   ' → logprob: -6.170104026794434
    5. '       ' → logprob: -7.420104026794434
    6. 'pass' → logprob: -8.545104026794434
    7. '	print' → logprob: -9.170104026794434
    8. 'break' → logprob: -9.795104026794434
    9. 'continue' → logprob: -9.920104026794434
    10. '		' → logprob: -10.420104026794434

Token 764: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00024311232846230268
    2. '           ' → logprob: -8.750243186950684
    3. ' print' → logprob: -10.125243186950684
    4. 'pass' → logprob: -10.750243186950684
    5. 'continue' → logprob: -11.625243186950684
    6. 'edge' → logprob: -12.625243186950684
    7. 'break' → logprob: -12.875243186950684
    8. 'reverse' → logprob: -13.375243186950684
    9. '       ' → logprob: -13.750243186950684
    10. 'return' → logprob: -13.875243186950684

Token 765: '(*' (ID: 9000)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.7553364634513855
    2. '(edge' → logprob: -1.2553365230560303
    3. '()' → logprob: -2.3803365230560303
    4. '-edge' → logprob: -3.3803365230560303
    5. ')' → logprob: -3.6303365230560303
    6. '-' → logprob: -3.8803365230560303
    7. '(-' → logprob: -3.8803365230560303
    8. '(*' → logprob: -4.505336284637451
    9. '*' → logprob: -4.505336284637451
    10. '(' → logprob: -4.880336284637451

Token 766: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.16625608503818512
    2. 're' → logprob: -2.1662561893463135
    3. '(edge' → logprob: -3.6662561893463135
    4. '(re' → logprob: -4.666255950927734
    5. '(' → logprob: -6.166255950927734
    6. '(-' → logprob: -7.666255950927734
    7. '[::-' → logprob: -8.416255950927734
    8. 'tuple' → logprob: -8.416255950927734
    9. '[' → logprob: -8.916255950927734
    10. 'reverse' → logprob: -9.291255950927734

Token 767: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -5.3120038501219824e-05
    2. 'tuple' → logprob: -9.875053405761719
    3. '_t' → logprob: -14.000053405761719
    4. '_key' → logprob: -14.500053405761719
    5. 'Tuple' → logprob: -16.62505340576172
    6. '(tuple' → logprob: -17.00005340576172
    7. ' tuple' → logprob: -18.00005340576172
    8. '_list' → logprob: -18.50005340576172
    9. ')' → logprob: -18.62505340576172
    10. '_tpl' → logprob: -18.87505340576172

Token 768: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.06206941604614258
    2. ')' → logprob: -2.9370694160461426
    3. ',' → logprob: -5.062069416046143
    4. '[' → logprob: -7.562069416046143
    5. ')
' → logprob: -8.687068939208984
    6. ' ,' → logprob: -10.312068939208984
    7. ',end' → logprob: -10.812068939208984
    8. '.reverse' → logprob: -11.187068939208984
    9. '[:' → logprob: -11.312068939208984
    10. '   ' → logprob: -11.562068939208984

Token 769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9054008084349334e-05
    2. ')' → logprob: -11.500039100646973
    3. 'args' → logprob: -12.125039100646973
    4. 'tuple' → logprob: -12.500039100646973
    5. 'v' → logprob: -13.000039100646973
    6. 'space' → logprob: -13.125039100646973
    7. 'swap' → logprob: -13.500039100646973
    8. '-' → logprob: -14.000039100646973
    9. 'reverse' → logprob: -14.000039100646973
    10. 'ed' → logprob: -14.250039100646973

Token 770: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -12.87500286102295
    3. '))' → logprob: -16.750001907348633
    4. ' )' → logprob: -16.875001907348633
    5. '())' → logprob: -18.125001907348633
    6. '])' → logprob: -19.250001907348633
    7. ')

' → logprob: -19.375001907348633
    8. '）' → logprob: -19.750001907348633
    9. '()' → logprob: -20.000001907348633
    10. '}' → logprob: -20.125001907348633

Token 771: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 772: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 773: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 774: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16089023649692535
    2. 'if' → logprob: -2.0358903408050537
    3. '<|end|>' → logprob: -4.785890102386475
    4. 'def' → logprob: -5.035890102386475
    5. 'solve' → logprob: -5.910890102386475
    6. '```' → logprob: -8.410890579223633
    7. '...' → logprob: -9.535890579223633
    8. 'for' → logprob: -9.910890579223633
    9. '<|end|>' → logprob: -10.160890579223633
    10. 'pass' → logprob: -10.535890579223633

Token 775: ' Problem' (ID: 26113)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3162488043308258
    2. 'if' → logprob: -1.3162487745285034
    3. '#' → logprob: -5.816248893737793
    4. ' if' → logprob: -13.316248893737793
    5. '#if' → logprob: -13.316248893737793
    6. '```' → logprob: -15.566248893737793
    7. 'for' → logprob: -15.941248893737793
    8. 'solve' → logprob: -16.316247940063477
    9. ' def' → logprob: -16.941247940063477
    10. '
' → logprob: -16.941247940063477

Token 776: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.002612997777760029
    2. '_C' → logprob: -6.377613067626953
    3. '#' → logprob: -7.127613067626953
    4. ' C' → logprob: -9.752613067626953
    5. 'def' → logprob: -10.127613067626953
    6. '_' → logprob: -12.627613067626953
    7. '_c' → logprob: -13.002613067626953
    8. '
' → logprob: -13.502613067626953
    9. '<|end|>' → logprob: -13.502613067626953
    10. 'D' → logprob: -15.127613067626953

Token 777: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3782830137643032e-05
    2. 'from' → logprob: -11.62501335144043
    3. 'import' → logprob: -13.00001335144043
    4. '
' → logprob: -13.62501335144043
    5. '#' → logprob: -14.25001335144043
    6. '<|end|>' → logprob: -14.87501335144043
    7. ' def' → logprob: -15.75001335144043
    8. '```' → logprob: -16.50001335144043
    9. 'class' → logprob: -17.62501335144043
    10. ')' → logprob: -19.25001335144043

Token 778: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. 'from' → logprob: -14.625000953674316
    3. 'import' → logprob: -15.125000953674316
    4. '#' → logprob: -15.875000953674316
    5. ' def' → logprob: -16.500001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '
' → logprob: -19.500001907348633
    8. '```' → logprob: -19.625001907348633
    9. 'class' → logprob: -21.500001907348633
    10. '<|end|>' → logprob: -22.125001907348633

Token 779: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.06995010375976562
    2. 'solve' → logprob: -2.6949501037597656
    3. 'def' → logprob: -12.569950103759766
    4. 'sol' → logprob: -12.694950103759766
    5. 's' → logprob: -13.569950103759766
    6. '.solve' → logprob: -13.694950103759766
    7. ' ' → logprob: -13.944950103759766
    8. 'd' → logprob: -14.194950103759766
    9. 'c' → logprob: -14.882450103759766
    10. ' find' → logprob: -15.382450103759766

Token 780: '_problem' (ID: 162384)
  Prédit: '_problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_problem' → logprob: -0.007737227715551853
    2. '_' → logprob: -4.882737159729004
    3. '_C' → logprob: -9.507737159729004
    4. 'Problem' → logprob: -11.132737159729004
    5. '_c' → logprob: -11.882737159729004
    6. '_pro' → logprob: -12.132737159729004
    7. 'C' → logprob: -12.257737159729004
    8. '_code' → logprob: -12.382737159729004
    9. '_prob' → logprob: -12.507737159729004
    10. '```' → logprob: -12.507737159729004

Token 781: '_C' (ID: 1720)
  Prédit: '_C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_C' → logprob: -8.137130498653278e-05
    2. 'C' → logprob: -9.750081062316895
    3. '_A' → logprob: -11.625081062316895
    4. '_B' → logprob: -12.250081062316895
    5. '_' → logprob: -12.250081062316895
    6. '_D' → logprob: -13.000081062316895
    7. '```' → logprob: -13.500081062316895
    8. '_E' → logprob: -15.500081062316895
    9. '()' → logprob: -16.12508201599121
    10. '	C' → logprob: -16.25008201599121

Token 782: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0010350722586736083
    2. '():
' → logprob: -6.876035213470459
    3. ' ():' → logprob: -13.5010347366333
    4. ':' → logprob: -14.7510347366333
    5. '()' → logprob: -15.5010347366333
    6. '():
' → logprob: -15.7510347366333
    7. 'def' → logprob: -16.001035690307617
    8. '():

' → logprob: -16.376035690307617
    9. '):' → logprob: -17.751035690307617
    10. '   ' → logprob: -19.001035690307617

Token 783: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038527094875462353
    2. ' number' → logprob: -8.375385284423828
    3. 'n' → logprob: -9.500385284423828
    4. ' n' → logprob: -10.250385284423828
    5. 'number' → logprob: -10.500385284423828
    6. '    ' → logprob: -12.375385284423828
    7. '   ' → logprob: -12.500385284423828
    8. '	n' → logprob: -13.125385284423828
    9. '	number' → logprob: -13.375385284423828
    10. ' N' → logprob: -14.000385284423828

Token 784: ' given' (ID: 4335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3839193880558014
    2. 'number' → logprob: -1.383919358253479
    3. 'N' → logprob: -3.1339194774627686
    4. '   ' → logprob: -4.1339192390441895
    5. 'length' → logprob: -6.8839192390441895
    6. 's' → logprob: -6.8839192390441895
    7. 'rows' → logprob: -7.1339192390441895
    8. 'num' → logprob: -7.5089192390441895
    9. 'array' → logprob: -7.6339192390441895
    10. 'grid' → logprob: -7.7589192390441895

Token 785: '_integer' (ID: 82911)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.5951089262962341
    2. '_list' → logprob: -2.220108985900879
    3. '_number' → logprob: -2.595108985900879
    4. '_numbers' → logprob: -2.595108985900879
    5. '_str' → logprob: -2.970108985900879
    6. '_' → logprob: -3.095108985900879
    7. '_input' → logprob: -3.720108985900879
    8. '_values' → logprob: -4.470108985900879
    9. '_array' → logprob: -4.595108985900879
    10. '_n' → logprob: -5.095108985900879

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38920819759368896
    2. ' =' → logprob: -1.139208197593689
    3. ',' → logprob: -6.1392083168029785
    4. 's' → logprob: -9.38920783996582
    5. '   ' → logprob: -10.13920783996582
    6. '_' → logprob: -11.01420783996582
    7. ',n' → logprob: -11.51420783996582
    8. '=int' → logprob: -11.51420783996582
    9. ' ,' → logprob: -12.76420783996582
    10. '_=' → logprob: -13.13920783996582

Token 787: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.011068337596952915
    2. ' read' → logprob: -4.511068344116211
    3. 'int' → logprob: -11.261068344116211
    4. ' ' → logprob: -12.761068344116211
    5. '   ' → logprob: -13.386068344116211
    6. ' int' → logprob: -13.636068344116211
    7. '	read' → logprob: -13.761068344116211
    8. '  ' → logprob: -14.136068344116211
    9. 'random' → logprob: -15.636068344116211
    10. '(read' → logprob: -16.51106834411621

Token 788: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0040854052640497684
    2. '_int' → logprob: -5.504085540771484
    3. 'single' → logprob: -12.629085540771484
    4. 'int' → logprob: -13.504085540771484
    5. 'Single' → logprob: -14.004085540771484
    6. '_list' → logprob: -14.129085540771484
    7. '_str' → logprob: -14.879085540771484
    8. '_' → logprob: -15.879085540771484
    9. ' single' → logprob: -16.129085540771484
    10. '_char' → logprob: -16.629085540771484

Token 789: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.002488737925887108
    2. 'int' → logprob: -6.002488613128662
    3. '_' → logprob: -11.50248908996582
    4. '_token' → logprob: -13.37748908996582
    5. 'Int' → logprob: -15.37748908996582
    6. '(int' → logprob: -15.50248908996582
    7. '_in' → logprob: -15.87748908996582
    8. '_char' → logprob: -15.87748908996582
    9. '()' → logprob: -16.12748908996582
    10. '_line' → logprob: -16.37748908996582

Token 790: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09374826401472092
    2. '   ' → logprob: -2.8437483310699463
    3. '()
' → logprob: -3.4687483310699463
    4. 'def' → logprob: -9.968748092651367
    5. ')' → logprob: -10.718748092651367
    6. '()
' → logprob: -11.218748092651367
    7. '()\' → logprob: -11.968748092651367
    8. '())' → logprob: -11.968748092651367
    9. '
' → logprob: -12.468748092651367
    10. '();' → logprob: -12.593748092651367

Token 791: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005861836019903421
    2. '
' → logprob: -5.630861759185791
    3. '    
' → logprob: -8.00586223602295
    4. 'def' → logprob: -8.13086223602295
    5. 'result' → logprob: -8.63086223602295
    6. 'n' → logprob: -8.63086223602295
    7. 'dp' → logprob: -8.63086223602295
    8. 'a' → logprob: -9.00586223602295
    9. 'arr' → logprob: -9.50586223602295
    10. 'stack' → logprob: -9.50586223602295

Token 792: ' power' (ID: 3470)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.912513017654419
    2. 'result' → logprob: -2.912513017654419
    3. ' numbers' → logprob: -3.037513017654419
    4. 'arr' → logprob: -3.162513017654419
    5. ' dp' → logprob: -3.162513017654419
    6. 'numbers' → logprob: -3.287513017654419
    7. ' result' → logprob: -3.537513017654419
    8. 'array' → logprob: -3.537513017654419
    9. ' integer' → logprob: -3.912513017654419
    10. 'sequence' → logprob: -3.912513017654419

Token 793: '_of' (ID: 8023)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3686203062534332
    2. '=' → logprob: -1.2436202764511108
    3. '(' → logprob: -4.6186203956604
    4. '_of' → logprob: -5.8686203956604
    5. '_value' → logprob: -6.6186203956604
    6. '_base' → logprob: -6.7436203956604
    7. '_factor' → logprob: -6.7436203956604
    8. 's' → logprob: -7.3686203956604
    9. '_list' → logprob: -7.8686203956604
    10. '_result' → logprob: -7.9936203956604

Token 794: '_two' (ID: 54305)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.40896186232566833
    2. 'two' → logprob: -1.1589618921279907
    3. 'given' → logprob: -4.158961772918701
    4. '_two' → logprob: -5.533961772918701
    5. '10' → logprob: -7.158961772918701
    6. '_given' → logprob: -8.28396224975586
    7. '=' → logprob: -8.40896224975586
    8. 'def' → logprob: -8.90896224975586
    9. 't' → logprob: -9.15896224975586
    10. 'ten' → logprob: -9.15896224975586

Token 795: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16030648350715637
    2. ' =' → logprob: -1.910306453704834
    3. 's' → logprob: -9.535306930541992
    4. '   ' → logprob: -11.910306930541992
    5. '```' → logprob: -14.660306930541992
    6. ' ' → logprob: -14.785306930541992
    7. ' ' → logprob: -14.910306930541992
    8. '_list' → logprob: -14.910306930541992
    9. 'pow' → logprob: -15.035306930541992
    10. ',' → logprob: -15.035306930541992

Token 796: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195297598838806
    2. '=' → logprob: -1.5019530057907104
    3. '=[]' → logprob: -11.126953125
    4. '   ' → logprob: -12.751953125
    5. '[' → logprob: -13.001953125
    6. '=[' → logprob: -13.626953125
    7. ' =[' → logprob: -14.126953125
    8. '=[]
' → logprob: -14.626953125
    9. '[]' → logprob: -15.251953125
    10. '_' → logprob: -15.501953125

Token 797: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07951512187719345
    2. ' [' → logprob: -2.579515218734741
    3. '[list' → logprob: -7.829514980316162
    4. '[]' → logprob: -9.57951545715332
    5. '[]
' → logprob: -10.20451545715332
    6. '[int' → logprob: -11.07951545715332
    7. '[get' → logprob: -11.07951545715332
    8. '[i' → logprob: -11.32951545715332
    9. '[random' → logprob: -11.57951545715332
    10. '[p' → logprob: -11.70451545715332

Token 798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.324750155210495
    2. 'i' → logprob: -1.8247501850128174
    3. '2' → logprob: -2.5747501850128174
    4. '0' → logprob: -3.4497501850128174
    5. 'given' → logprob: -5.449749946594238
    6. 'x' → logprob: -6.324749946594238
    7. '(' → logprob: -7.824749946594238
    8. '(i' → logprob: -7.824749946594238
    9. 'pow' → logprob: -8.074749946594238
    10. 'read' → logprob: -8.699749946594238

Token 799: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.20450322329998016
    2. ' <<' → logprob: -1.7045031785964966
    3. ',' → logprob: -6.329503059387207
    4. ')]' → logprob: -6.829503059387207
    5. ')<<' → logprob: -9.579503059387207
    6. ' <<=' → logprob: -10.329503059387207
    7. '<<(' → logprob: -10.454503059387207
    8. ')' → logprob: -10.454503059387207
    9. '
' → logprob: -10.454503059387207
    10. ')]
' → logprob: -12.329503059387207

Token 800: ' bit' (ID: 3546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010239633731544018
    2. '0' → logprob: -5.135239601135254
    3. 'x' → logprob: -6.510239601135254
    4. '20' → logprob: -7.010239601135254
    5. 'k' → logprob: -7.135239601135254
    6. '30' → logprob: -8.635239601135254
    7. 'power' → logprob: -9.135239601135254
    8. ' i' → logprob: -9.385239601135254
    9. '50' → logprob: -9.510239601135254
    10. '40' → logprob: -9.885239601135254

Token 801: '_index' (ID: 7748)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006403613369911909
    2. ')]' → logprob: -7.875640392303467
    3. ' )' → logprob: -9.250639915466309
    4. 'i' → logprob: -9.250639915466309
    5. 'for' → logprob: -10.375639915466309
    6. '),' → logprob: -12.250639915466309
    7. '(' → logprob: -12.375639915466309
    8. '(i' → logprob: -12.500639915466309
    9. ')
' → logprob: -12.625639915466309
    10. '1' → logprob: -12.625639915466309

Token 802: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001831565605243668
    2. ',' → logprob: -9.25018310546875
    3. ' )' → logprob: -9.75018310546875
    4. 'for' → logprob: -11.00018310546875
    5. ' ' → logprob: -13.25018310546875
    6. ')
' → logprob: -13.37518310546875
    7. ' for' → logprob: -13.62518310546875
    8. '   ' → logprob: -14.12518310546875
    9. ' ,' → logprob: -14.25018310546875
    10. ')]' → logprob: -14.25018310546875

Token 803: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12699300050735474
    2. 'for' → logprob: -2.12699294090271
    3. ' ' → logprob: -10.251993179321289
    4. ')' → logprob: -10.626993179321289
    5. '   ' → logprob: -13.126993179321289
    6. '	for' → logprob: -14.001993179321289
    7. ' ' → logprob: -14.501993179321289
    8. '  ' → logprob: -14.751993179321289
    9. '
' → logprob: -14.751993179321289
    10. ' bit' → logprob: -15.126993179321289

Token 804: ' bit' (ID: 3546)
  Prédit: ' bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bit' → logprob: -0.10020915418863297
    2. 'bit' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.47520923614502
    4. '_bit' → logprob: -14.97520923614502
    5. '(bit' → logprob: -14.97520923614502
    6. 'bitr' → logprob: -15.85020923614502
    7. ' ' → logprob: -15.97520923614502
    8. 'Bit' → logprob: -16.225208282470703
    9. ' бит' → logprob: -16.600208282470703
    10. ' in' → logprob: -18.350208282470703

Token 805: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.44787612557411194
    2. '_index' → logprob: -1.1978760957717896
    3. 'in' → logprob: -2.947876214981079
    4. '_' → logprob: -6.3228759765625
    5. 'index' → logprob: -6.5728759765625
    6. '   ' → logprob: -6.6978759765625
    7. ' _' → logprob: -7.3228759765625
    8. 'bit' → logprob: -7.6978759765625
    9. ' ' → logprob: -7.9478759765625
    10. ' bit' → logprob: -8.1978759765625

Token 806: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806088864803314
    2. 'in' → logprob: -3.2880609035491943
    3. '<|end|>' → logprob: -11.163061141967773
    4. 'range' → logprob: -12.913061141967773
    5. ' ' → logprob: -13.538061141967773
    6. '<|end|>' → logprob: -14.538061141967773
    7. ' range' → logprob: -15.663061141967773
    8. 'import' → logprob: -15.788061141967773
    9. '
' → logprob: -15.913061141967773
    10. ')' → logprob: -16.163061141967773

Token 807: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00407923199236393
    2. ' range' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.87907886505127
    4. '	range' → logprob: -15.12907886505127
    5. '
' → logprob: -15.87907886505127
    6. ' ' → logprob: -16.879079818725586
    7. '  ' → logprob: -17.004079818725586
    8. 're' → logprob: -18.379079818725586
    9. '(range' → logprob: -18.379079818725586
    10. '    ' → logprob: -18.754079818725586

Token 808: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9006154537200928
    2. '40' → logprob: -1.5256154537200928
    3. '31' → logprob: -1.7756154537200928
    4. '(g' → logprob: -2.7756154537200928
    5. '30' → logprob: -3.1506154537200928
    6. 'given' → logprob: -3.7756154537200928
    7. '41' → logprob: -3.9006154537200928
    8. '60' → logprob: -3.9006154537200928
    9. '32' → logprob: -4.525615692138672
    10. '35' → logprob: -5.400615692138672

Token 809: '100' (ID: 1353)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '31' → logprob: -0.6719404458999634
    2. '60' → logprob: -1.9219404458999634
    3. '30' → logprob: -2.046940326690674
    4. '32' → logprob: -2.921940326690674
    5. '40' → logprob: -3.171940326690674
    6. '61' → logprob: -3.796940326690674
    7. 'given' → logprob: -4.046940326690674
    8. '35' → logprob: -4.421940326690674
    9. '33' → logprob: -4.671940326690674
    10. '64' → logprob: -4.671940326690674

Token 810: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018865184858441353
    2. ' )' → logprob: -4.64386510848999
    3. ')' → logprob: -5.51886510848999
    4. ',' → logprob: -5.89386510848999
    5. '0' → logprob: -6.89386510848999
    6. '+' → logprob: -7.64386510848999
    7. ' ,' → logprob: -8.768865585327148
    8. ' +' → logprob: -9.018865585327148
    9. '20' → logprob: -9.143865585327148
    10. '(' → logprob: -10.143865585327148

Token 811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10040485858917236
    2. '
' → logprob: -3.100404739379883
    3. '<|end|>' → logprob: -3.850404739379883
    4. '    
' → logprob: -4.725404739379883
    5. ' for' → logprob: -5.225404739379883
    6. 'result' → logprob: -5.475404739379883
    7. 'for' → logprob: -5.600404739379883
    8. ',' → logprob: -6.600404739379883
    9. ' if' → logprob: -6.600404739379883
    10. 'def' → logprob: -7.725404739379883

Token 812: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8085063695907593
    2. 'dp' → logprob: -1.8085063695907593
    3. 'for' → logprob: -2.308506488800049
    4. 'answer' → logprob: -2.433506488800049
    5. '   ' → logprob: -3.058506488800049
    6. 'current' → logprob: -3.183506488800049
    7. 'if' (adapté à ' if') → logprob: -3.308506488800049
    8. 'results' → logprob: -4.433506488800049
    9. ' result' → logprob: -4.683506488800049
    10. 'output' → logprob: -5.433506488800049

Token 813: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.5765761137008667
    2. 'given' → logprob: -0.8265761137008667
    3. ' (' → logprob: -8.201576232910156
    4. ' power' → logprob: -9.326576232910156
    5. 'power' → logprob: -9.451576232910156
    6. '(' → logprob: -9.826576232910156
    7. ' ' → logprob: -10.451576232910156
    8. '(g' → logprob: -10.701576232910156
    9. '(power' → logprob: -11.576576232910156
    10. '_given' → logprob: -11.701576232910156

Token 814: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -4.320199877838604e-07
    2. '_in' → logprob: -16.25
    3. '_INTEGER' → logprob: -16.5
    4. '
' → logprob: -16.5
    5. '_' → logprob: -17.375
    6. 'integer' → logprob: -17.5
    7. '_Integer' → logprob: -17.625
    8. '_int' → logprob: -17.875
    9. ' _' → logprob: -17.875
    10. '_
' → logprob: -18.0

Token 815: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11327330023050308
    2. ' <' → logprob: -2.6132733821868896
    3. ' <=' → logprob: -4.3632731437683105
    4. '==' → logprob: -4.8632731437683105
    5. ' %' → logprob: -5.4882731437683105
    6. ' >' → logprob: -5.7382731437683105
    7. ' >=' → logprob: -5.7382731437683105
    8. '<' → logprob: -6.8632731437683105
    9. '%' → logprob: -6.9882731437683105
    10. ' ' → logprob: -8.488273620605469

Token 816: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.5759724378585815
    2. 'power' → logprob: -0.8259724378585815
    3. '   ' → logprob: -11.950972557067871
    4. ' set' → logprob: -12.325972557067871
    5. 'set' → logprob: -12.325972557067871
    6. '{' → logprob: -12.575972557067871
    7. '(power' → logprob: -12.950972557067871
    8. '[' → logprob: -13.075972557067871
    9. 'pow' → logprob: -13.200972557067871
    10. '
' → logprob: -13.575972557067871

Token 817: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -13.250003814697266
    3. ' _' → logprob: -14.500003814697266
    4. 'of' → logprob: -15.000003814697266
    5. '\' → logprob: -15.375003814697266
    6. '(_' → logprob: -15.500003814697266
    7. '_two' → logprob: -15.875003814697266
    8. '   ' → logprob: -16.125003814697266
    9. '__' → logprob: -16.375003814697266
    10. '(' → logprob: -16.500003814697266

Token 818: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.026402821764349937
    2. '_two' → logprob: -3.651402711868286
    3. ' two' → logprob: -9.776402473449707
    4. '2' → logprob: -11.026402473449707
    5. '[' → logprob: -11.151402473449707
    6. 'Two' → logprob: -12.901402473449707
    7. '   ' → logprob: -13.151402473449707
    8. '_' → logprob: -13.276402473449707
    9. '_list' → logprob: -13.651402473449707
    10. '```' → logprob: -13.651402473449707

Token 819: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001112116384319961
    2. 's' → logprob: -6.87611198425293
    3. '_s' → logprob: -10.37611198425293
    4. '_set' → logprob: -11.00111198425293
    5. 'list' → logprob: -11.37611198425293
    6. '_' → logprob: -12.12611198425293
    7. ':' → logprob: -12.75111198425293
    8. 'List' → logprob: -13.37611198425293
    9. ' _' → logprob: -13.75111198425293
    10. ')' → logprob: -13.75111198425293

Token 820: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01406088937073946
    2. ':
' → logprob: -4.389060974121094
    3. '   ' → logprob: -7.014060974121094
    4. ' and' → logprob: -7.889060974121094
    5. '[' → logprob: -9.389060974121094
    6. ':return' → logprob: -9.889060974121094
    7. ' or' → logprob: -10.139060974121094
    8. '[:' → logprob: -10.389060974121094
    9. ' :' → logprob: -10.639060974121094
    10. 'and' → logprob: -11.514060974121094

Token 821: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15191645920276642
    2. ':
' → logprob: -2.02691650390625
    3. '   ' → logprob: -5.02691650390625
    4. '       ' → logprob: -6.27691650390625
    5. ' and' → logprob: -7.90191650390625
    6. ':return' → logprob: -9.02691650390625
    7. ',' → logprob: -9.15191650390625
    8. ' or' → logprob: -9.90191650390625
    9. '.' → logprob: -10.90191650390625
    10. '[' → logprob: -10.90191650390625

Token 822: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8569648861885071
    2. ' print' → logprob: -1.3569648265838623
    3. 'print' (adapté à ' print') → logprob: -1.3569648265838623
    4. '       ' → logprob: -2.9819648265838623
    5. '
' → logprob: -4.731965065002441
    6. ' return' → logprob: -8.231965065002441
    7. '    
' → logprob: -8.856965065002441
    8. ' ' → logprob: -8.981965065002441
    9. '    ' → logprob: -8.981965065002441
    10. 'return' → logprob: -9.231965065002441

Token 823: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8466662764549255
    2. '("' → logprob: -1.0966663360595703
    3. '(g' → logprob: -1.4716663360595703
    4. '(-' → logprob: -5.47166633605957
    5. '"' → logprob: -6.84666633605957
    6. '(power' → logprob: -6.84666633605957
    7. 'given' → logprob: -7.97166633605957
    8. '(pow' → logprob: -8.22166633605957
    9. '('' → logprob: -9.09666633605957
    10. '((' → logprob: -9.22166633605957

Token 824: 'No' (ID: 3160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6731458306312561
    2. 'Yes' → logprob: -1.1731457710266113
    3. '1' → logprob: -2.6731457710266113
    4. 'YES' → logprob: -2.7981457710266113
    5. '-' → logprob: -3.6731457710266113
    6. '0' → logprob: -4.673145771026611
    7. '"+' → logprob: -5.548145771026611
    8. 'No' → logprob: -5.798145771026611
    9. 'NO' → logprob: -5.798145771026611
    10. '2' → logprob: -5.923145771026611

Token 825: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0015703336102887988
    2. '")
' → logprob: -6.501570224761963
    3. '   ' → logprob: -10.376570701599121
    4. ' ")' → logprob: -10.876570701599121
    5. ')' → logprob: -11.626570701599121
    6. '"' → logprob: -13.126570701599121
    7. '")
' → logprob: -13.251570701599121
    8. '()' → logprob: -13.751570701599121
    9. 'return' → logprob: -14.376570701599121
    10. '\n' → logprob: -14.376570701599121

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006819340633228421
    2. '   ' → logprob: -7.3756818771362305
    3. 'return' → logprob: -10.62568187713623
    4. ' return' → logprob: -11.25068187713623
    5. '<|end|>' → logprob: -12.00068187713623
    6. '
' → logprob: -12.25068187713623
    7. '           ' → logprob: -12.37568187713623
    8. ' ' → logprob: -14.25068187713623
    9. '	return' → logprob: -14.50068187713623
    10. '```' → logprob: -15.37568187713623

Token 827: ' quit' (ID: 27737)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.40493446588516235
    2. 'return' → logprob: -1.1549344062805176
    3. '       ' → logprob: -4.404934406280518
    4. '   ' → logprob: -5.279934406280518
    5. '
' → logprob: -8.279934883117676
    6. '	return' → logprob: -8.904934883117676
    7. 'eturn' → logprob: -9.904934883117676
    8. '\n' → logprob: -9.904934883117676
    9. ' ' → logprob: -10.404934883117676
    10. '    
' → logprob: -11.654934883117676

Token 828: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01845613494515419
    2. '()
' → logprob: -4.018455982208252
    3. '   ' → logprob: -8.39345645904541
    4. '()\' → logprob: -9.89345645904541
    5. '()

' → logprob: -11.64345645904541
    6. '<|end|>' → logprob: -11.76845645904541
    7. '(' → logprob: -13.01845645904541
    8. '()<' → logprob: -13.51845645904541
    9. '())' → logprob: -13.51845645904541
    10. '();' → logprob: -13.64345645904541

Token 829: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1371670514345169
    2. '
' → logprob: -2.137166976928711
    3. '    
' → logprob: -4.637166976928711
    4. '```' → logprob: -9.262166976928711
    5. ' 
' → logprob: -9.387166976928711
    6. 'if' → logprob: -9.387166976928711
    7. '<|end|>' → logprob: -9.387166976928711
    8. '        
' → logprob: -10.137166976928711
    9. ' if' → logprob: -10.637166976928711
    10. '  
' → logprob: -10.762166976928711

Token 830: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29441386461257935
    2. 'if' (adapté à ' if') → logprob: -2.1694138050079346
    3. ' 
' → logprob: -2.2944138050079346
    4. ' if' → logprob: -3.6694138050079346
    5. '   ' → logprob: -5.669414043426514
    6. '    
' → logprob: -5.794414043426514
    7. ' for' → logprob: -6.669414043426514
    8. 'for' → logprob: -6.794414043426514
    9. '\n' → logprob: -6.794414043426514
    10. '  
' → logprob: -6.919414043426514

Token 831: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.4325065314769745
    2. 'given' → logprob: -1.0575065612792969
    3. ' (' → logprob: -5.807506561279297
    4. '(' → logprob: -7.807506561279297
    5. ' ' → logprob: -9.557506561279297
    6. '_given' → logprob: -10.807506561279297
    7. 'number' → logprob: -10.932506561279297
    8. ' random' → logprob: -10.932506561279297
    9. 'pow' → logprob: -10.932506561279297
    10. '(g' → logprob: -11.057506561279297

Token 832: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.0001394161517964676
    2. '_single' → logprob: -9.750139236450195
    3. 'Integer' → logprob: -10.375139236450195
    4. 'integer' → logprob: -11.000139236450195
    5. '_INTEGER' → logprob: -11.375139236450195
    6. '_given' → logprob: -12.625139236450195
    7. '_Integer' → logprob: -12.750139236450195
    8. '_int' → logprob: -13.250139236450195
    9. 'int' → logprob: -13.250139236450195
    10. ' ' → logprob: -13.750139236450195

Token 833: ' +' (ID: 659)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32477298378944397
    2. ' %' → logprob: -2.449773073196411
    3. ' <' → logprob: -2.574773073196411
    4. '==' → logprob: -2.949773073196411
    5. ' <=' → logprob: -3.324773073196411
    6. '%' → logprob: -4.824772834777832
    7. '<' → logprob: -5.074772834777832
    8. ' ' → logprob: -5.574772834777832
    9. ' >' → logprob: -5.574772834777832
    10. '<=' → logprob: -5.824772834777832

Token 834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04945410043001175
    2. ' ' → logprob: -3.0494542121887207
    3. '2' → logprob: -7.924454212188721
    4. ' (' → logprob: -8.799453735351562
    5. ' given' → logprob: -8.924453735351562
    6. 'given' → logprob: -10.174453735351562
    7. 'power' → logprob: -10.299453735351562
    8. '(' → logprob: -10.299453735351562
    9. ' power' → logprob: -10.424453735351562
    10. '3' → logprob: -11.049453735351562

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046866838820278645
    2. 'given' → logprob: -6.0046868324279785
    3. '(' → logprob: -6.7546868324279785
    4. '(g' → logprob: -7.7546868324279785
    5. 'power' → logprob: -8.50468635559082
    6. '2' → logprob: -8.87968635559082
    7. '(power' → logprob: -9.50468635559082
    8. ' ' → logprob: -10.25468635559082
    9. '((' → logprob: -10.50468635559082
    10. '10' → logprob: -11.25468635559082

Token 836: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6770479083061218
    2. ' in' → logprob: -1.0520479679107666
    3. ' ==' → logprob: -2.3020479679107666
    4. '==' → logprob: -3.9270479679107666
    5. ' &' → logprob: -4.6770477294921875
    6. ' >' → logprob: -6.0520477294921875
    7. ' <=' → logprob: -6.1770477294921875
    8. ')' → logprob: -6.1770477294921875
    9. ' >=' → logprob: -6.4270477294921875
    10. 'not' → logprob: -6.5520477294921875

Token 837: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.10020796209573746
    2. ' power' → logprob: -2.350208044052124
    3. '   ' → logprob: -14.350208282470703
    4. 'pow' → logprob: -15.725208282470703
    5. '(power' → logprob: -15.850208282470703
    6. '
' → logprob: -15.975208282470703
    7. 'set' → logprob: -15.975208282470703
    8. ' ' → logprob: -16.100208282470703
    9. '[' → logprob: -17.350208282470703
    10. '```' → logprob: -17.475208282470703

Token 838: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.9361264946837764e-07
    2. 'of' → logprob: -17.375
    3. '_two' → logprob: -17.5
    4. '_' → logprob: -17.875
    5. '_o' → logprob: -19.0
    6. 'Of' → logprob: -19.25
    7. '2' → logprob: -19.5
    8. '_OF' → logprob: -19.5
    9. '_or' → logprob: -19.625
    10. '\' → logprob: -19.75

Token 839: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.16056255996227264
    2. 'two' → logprob: -1.910562515258789
    3. '2' → logprob: -8.660562515258789
    4. ' two' → logprob: -9.035562515258789
    5. '_of' → logprob: -11.410562515258789
    6. '```' → logprob: -12.160562515258789
    7. 't' → logprob: -12.535562515258789
    8. 'power' → logprob: -12.535562515258789
    9. ' ' → logprob: -12.660562515258789
    10. 'Two' → logprob: -13.035562515258789

Token 840: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.3856492842023727e-06
    2. 'list' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.000000953674316
    4. '```' → logprob: -16.375001907348633
    5. ')' → logprob: -17.375001907348633
    6. '       ' → logprob: -17.625001907348633
    7. 'List' → logprob: -17.750001907348633
    8. '_' → logprob: -17.750001907348633
    9. '2' → logprob: -18.250001907348633
    10. '[' → logprob: -18.375001907348633

Token 841: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015604693442583084
    2. ':
' → logprob: -4.265604496002197
    3. '       ' → logprob: -7.390604496002197
    4. '   ' → logprob: -7.515604496002197
    5. '==' → logprob: -8.890604972839355
    6. ' and' → logprob: -10.015604972839355
    7. '<|end|>' → logprob: -10.890604972839355
    8. '=' → logprob: -11.140604972839355
    9. ' :' → logprob: -11.265604972839355
    10. ' ==' → logprob: -11.515604972839355

Token 842: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16305121779441833
    2. '       ' → logprob: -1.9130512475967407
    3. ':
' → logprob: -6.038051128387451
    4. '   ' → logprob: -8.53805160522461
    5. '):' → logprob: -9.91305160522461
    6. ',' → logprob: -9.91305160522461
    7. '<|end|>' → logprob: -9.91305160522461
    8. '):
' → logprob: -10.78805160522461
    9. ' and' → logprob: -11.53805160522461
    10. '[' → logprob: -11.53805160522461

Token 843: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1425565779209137
    2. 'print' (adapté à ' print') → logprob: -2.142556667327881
    3. '   ' → logprob: -4.267556667327881
    4. ' print' → logprob: -6.517556667327881
    5. '	print' → logprob: -11.517556190490723
    6. '	' → logprob: -13.892556190490723
    7. '```' → logprob: -14.142556190490723
    8. '           ' → logprob: -14.517556190490723
    9. '
' → logprob: -14.767556190490723
    10. ' ' → logprob: -15.017556190490723

Token 844: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001330360071733594
    2. '(' → logprob: -6.626330375671387
    3. '('' → logprob: -12.876330375671387
    4. 'No' → logprob: -13.876330375671387
    5. '(No' → logprob: -14.751330375671387
    6. '("("' → logprob: -15.501330375671387
    7. '"No' → logprob: -15.876330375671387
    8. '(
' → logprob: -16.37632942199707
    9. '()' → logprob: -16.50132942199707
    10. '("")' → logprob: -16.75132942199707

Token 845: 'Yes' (ID: 13022)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.8191682696342468
    2. 'Yes' → logprob: -1.0691683292388916
    3. '"No' → logprob: -1.6941683292388916
    4. '"' → logprob: -3.4441683292388916
    5. ''' → logprob: -10.319168090820312
    6. '("' → logprob: -10.319168090820312
    7. '0' → logprob: -10.944168090820312
    8. '"N' → logprob: -11.381668090820312
    9. '")' → logprob: -11.444168090820312
    10. '"I' → logprob: -11.819168090820312

Token 846: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.30847620964050293
    2. '   ' → logprob: -1.933476209640503
    3. '       ' → logprob: -2.933476209640503
    4. '()' → logprob: -3.308476209640503
    5. ')' → logprob: -3.808476209640503
    6. '")
' → logprob: -5.058476448059082
    7. '<|end|>' → logprob: -6.808476448059082
    8. '')' → logprob: -8.183476448059082
    9. '()
' → logprob: -8.183476448059082
    10. ')
' → logprob: -8.683476448059082

Token 847: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6932461857795715
    2. '       ' → logprob: -0.6932461857795715
    3. '<|end|>' → logprob: -9.568245887756348
    4. '           ' → logprob: -11.693245887756348
    5. ')' → logprob: -12.318245887756348
    6. ' ' → logprob: -12.693245887756348
    7. 'else' → logprob: -12.943245887756348
    8. '     ' → logprob: -13.568245887756348
    9. 'return' → logprob: -13.818245887756348
    10. '    ' → logprob: -13.943245887756348

Token 848: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11194964498281479
    2. '   ' → logprob: -2.3619496822357178
    3. 'return' → logprob: -4.736949443817139
    4. ' return' → logprob: -6.361949443817139
    5. '	return' → logprob: -6.861949443817139
    6. '
' → logprob: -9.861949920654297
    7. ' ' → logprob: -10.611949920654297
    8. '<|end|>' → logprob: -10.736949920654297
    9. '           ' → logprob: -10.861949920654297
    10. '	' → logprob: -12.361949920654297

Token 849: ' edge' (ID: 11165)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4885993003845215
    2. '_' → logprob: -1.7385993003845215
    3. ' i' → logprob: -2.3635993003845215
    4. 'bit' → logprob: -3.6135993003845215
    5. ' _' → logprob: -4.2385993003845215
    6. ' bit' → logprob: -4.3635993003845215
    7. ' number' → logprob: -4.7385993003845215
    8. '_i' → logprob: -4.8635993003845215
    9. 'value' → logprob: -5.1135993003845215
    10. 'x' → logprob: -5.2385993003845215

Token 850: '_label' (ID: 13175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2091754823923111
    2. 'in' → logprob: -3.2091755867004395
    3. ' i' → logprob: -3.3341755867004395
    4. 'from' → logprob: -3.5841755867004395
    5. ' ' → logprob: -3.9591755867004395
    6. 'for' → logprob: -4.7091755867004395
    7. ' =' → logprob: -4.7091755867004395
    8. 's' → logprob: -4.8341755867004395
    9. '_list' → logprob: -5.3341755867004395
    10. '(' → logprob: -5.4591755867004395

Token 851: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5771167278289795
    2. 'in' → logprob: -0.8271167278289795
    3. ',' → logprob: -6.952116966247559
    4. ' ' → logprob: -9.327116966247559
    5. 'i' → logprob: -9.952116966247559
    6. '1' → logprob: -10.327116966247559
    7. ' ,' → logprob: -10.702116966247559
    8. ' i' → logprob: -11.827116966247559
    9. '   ' → logprob: -12.202116966247559
    10. '	in' → logprob: -12.702116966247559

Token 852: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006467910134233534
    2. ' range' → logprob: -7.500646591186523
    3. 'power' → logprob: -9.500646591186523
    4. '[' → logprob: -12.250646591186523
    5. 'read' → logprob: -12.500646591186523
    6. '["' → logprob: -12.750646591186523
    7. '(range' → logprob: -13.375646591186523
    8. 'list' → logprob: -13.500646591186523
    9. 're' → logprob: -13.875646591186523
    10. 'sorted' → logprob: -14.250646591186523

Token 853: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1554148942232132
    2. 'given' → logprob: -2.4054148197174072
    3. '(' → logprob: -3.1554148197174072
    4. '2' → logprob: -4.905415058135986
    5. '(g' → logprob: -5.655415058135986
    6. 'g' → logprob: -10.780414581298828
    7. ' given' → logprob: -10.780414581298828
    8. '0' → logprob: -10.780414581298828
    9. '3' → logprob: -10.905414581298828
    10. '   ' → logprob: -11.030414581298828

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16517379879951477
    2. 'given' → logprob: -2.1651737689971924
    3. '2' → logprob: -3.2901737689971924
    4. ' ' → logprob: -9.665173530578613
    5. '   ' → logprob: -9.790173530578613
    6. '(' → logprob: -10.040173530578613
    7. '0' → logprob: -10.540173530578613
    8. '3' → logprob: -10.540173530578613
    9. ' given' → logprob: -11.165173530578613
    10. 'give' → logprob: -11.665173530578613

Token 855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002891066251322627
    2. ' ,' → logprob: -8.875288963317871
    3. '   ' → logprob: -9.375288963317871
    4. ',g' → logprob: -9.750288963317871
    5. ',
' → logprob: -13.375288963317871
    6. 'given' → logprob: -13.500288963317871
    7. '1' → logprob: -14.125288963317871
    8. ' ' → logprob: -14.500288963317871
    9. '    ' → logprob: -14.625288963317871
    10. '  ' → logprob: -15.375288963317871

Token 856: ' ' (ID: 220)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -2.2007883671903983e-05
    2. ' given' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.250021934509277
    4. '2' → logprob: -15.375021934509277
    5. '  ' → logprob: -16.750022888183594
    6. '1' → logprob: -18.000022888183594
    7. '```' → logprob: -18.250022888183594
    8. '
' → logprob: -18.375022888183594
    9. 'give' → logprob: -18.500022888183594
    10. ' ' → logprob: -19.250022888183594

Token 857: '2' (ID: 17)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -1.981667537620524e-06
    2. ' given' → logprob: -13.250001907348633
    3. '2' → logprob: -16.375001907348633
    4. '1' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.500001907348633
    6. 'give' → logprob: -18.750001907348633
    7. '```' → logprob: -19.125001907348633
    8. '  ' → logprob: -19.500001907348633
    9. '
' → logprob: -19.875001907348633
    10. '_given' → logprob: -20.000001907348633

Token 858: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09603437036275864
    2. ' *' → logprob: -2.971034288406372
    3. '*' → logprob: -4.471034526824951
    4. '       ' → logprob: -5.346034526824951
    5. '          ' → logprob: -5.721034526824951
    6. '   ' → logprob: -5.846034526824951
    7. ' +' → logprob: -5.846034526824951
    8. '        ' → logprob: -5.971034526824951
    9. ' ,' → logprob: -6.221034526824951
    10. '    ' → logprob: -6.221034526824951

Token 859: ' given' (ID: 4335)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.0014257101574912667
    2. '(g' → logprob: -6.626425743103027
    3. ' given' → logprob: -9.251425743103027
    4. ' (' → logprob: -13.376425743103027
    5. '(' → logprob: -13.501425743103027
    6. '   ' → logprob: -14.626425743103027
    7. 'gave' → logprob: -16.50142478942871
    8. '((' → logprob: -16.62642478942871
    9. 'give' → logprob: -16.75142478942871
    10. 'g' → logprob: -17.00142478942871

Token 860: '_integer' (ID: 82911)
  Prédit: '_given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_given' → logprob: -0.6344553828239441
    2. '_integer' → logprob: -1.1344554424285889
    3. 'given' → logprob: -2.509455442428589
    4. '+' → logprob: -4.38445520401001
    5. ',' → logprob: -4.38445520401001
    6. '   ' → logprob: -4.50945520401001
    7. ')' → logprob: -5.13445520401001
    8. '_of' → logprob: -5.75945520401001
    9. 'integer' → logprob: -5.75945520401001
    10. ' given' → logprob: -5.75945520401001

Token 861: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27234259247779846
    2. ' +' → logprob: -1.522342562675476
    3. '):' → logprob: -4.272342681884766
    4. '):
' → logprob: -5.522342681884766
    5. ' ' → logprob: -6.522342681884766
    6. ' ):' → logprob: -8.147342681884766
    7. ')' → logprob: -8.897342681884766
    8. '   ' → logprob: -9.022342681884766
    9. ' ):
' → logprob: -9.772342681884766
    10. '  ' → logprob: -10.522342681884766

Token 862: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10572773963212967
    2. ':
' → logprob: -3.2307276725769043
    3. ':' → logprob: -3.4807276725769043
    4. ',' → logprob: -3.9807276725769043
    5. '   ' → logprob: -5.730727672576904
    6. '():
' → logprob: -6.355727672576904
    7. ' print' → logprob: -6.480727672576904
    8. '           ' → logprob: -6.855727672576904
    9. '):
' → logprob: -7.730727672576904
    10. '.' → logprob: -7.980727672576904

Token 863: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.013496529310941696
    2. '           ' → logprob: -4.888496398925781
    3. 'print' (adapté à ' print') → logprob: -5.388496398925781
    4. ' if' → logprob: -7.513496398925781
    5. '               ' → logprob: -8.263496398925781
    6. '   ' → logprob: -8.638496398925781
    7. '       ' → logprob: -9.513496398925781
    8. ' ' → logprob: -9.763496398925781
    9. '	print' → logprob: -9.888496398925781
    10. ' ' → logprob: -10.388496398925781

Token 864: '(edge' (ID: 84023)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.648681104183197
    2. '(edge' → logprob: -0.773681104183197
    3. '(' → logprob: -5.148681163787842
    4. ' edge' → logprob: -5.273681163787842
    5. '()' → logprob: -6.398681163787842
    6. '"' → logprob: -7.023681163787842
    7. '("' → logprob: -7.023681163787842
    8. '('' → logprob: -8.273680686950684
    9. 'f' → logprob: -8.398680686950684
    10. '(f' → logprob: -8.523680686950684

Token 865: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -8.780830830801278e-05
    2. '_l' → logprob: -10.62508773803711
    3. ' _' → logprob: -11.00008773803711
    4. ')' → logprob: -11.12508773803711
    5. '_' → logprob: -11.25008773803711
    6. 'label' → logprob: -12.00008773803711
    7. '_labels' → logprob: -12.62508773803711
    8. ' ' → logprob: -13.00008773803711
    9. '<label' → logprob: -13.75008773803711
    10. ' )' → logprob: -14.25008773803711

Token 866: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.650722861289978
    2. ')' → logprob: -0.775722861289978
    3. ',end' → logprob: -4.150722980499268
    4. ' ,' → logprob: -6.775722980499268
    5. ' )' → logprob: -7.650722980499268
    6. '   ' → logprob: -8.65072250366211
    7. '+' → logprob: -9.15072250366211
    8. ' ' → logprob: -9.52572250366211
    9. 'end' → logprob: -10.02572250366211
    10. ');' → logprob: -10.02572250366211

Token 867: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.006998570170253515
    2. ' edge' → logprob: -5.006998538970947
    3. '(edge' → logprob: -8.256999015808105
    4. 'end' → logprob: -11.381999015808105
    5. ' ' → logprob: -13.256999015808105
    6. '"' → logprob: -13.506999015808105
    7. '=edge' → logprob: -14.006999015808105
    8. '
' → logprob: -14.006999015808105
    9. 'edges' → logprob: -14.131999015808105
    10. '   ' → logprob: -14.256999015808105

Token 868: '_label' (ID: 13175)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7804338335990906
    2. '_integer' → logprob: -1.4054338932037354
    3. '_label' → logprob: -2.6554338932037354
    4. '"' → logprob: -2.6554338932037354
    5. '_' → logprob: -3.2804338932037354
    6. ''' → logprob: -3.5304338932037354
    7. '<|end|>' → logprob: -3.6554338932037354
    8. ',' → logprob: -4.655433654785156
    9. '<|end|>' → logprob: -4.655433654785156
    10. ' ' → logprob: -5.280433654785156

Token 869: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1271706223487854
    2. ' +' → logprob: -2.1271705627441406
    3. ',' → logprob: -9.37717056274414
    4. '   ' → logprob: -9.87717056274414
    5. ')' → logprob: -10.00217056274414
    6. ' ' → logprob: -10.25217056274414
    7. '1' → logprob: -11.87717056274414
    8. '-' → logprob: -12.37717056274414
    9. ' ,' → logprob: -12.75217056274414
    10. '+
' → logprob: -13.50217056274414

Token 870: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000297685619443655
    2. ' ' → logprob: -8.125297546386719
    3. '+' → logprob: -14.250297546386719
    4. '   ' → logprob: -14.875297546386719
    5. '2' → logprob: -15.000297546386719
    6. '  ' → logprob: -16.25029754638672
    7. ' ' → logprob: -17.12529754638672
    8. '
' → logprob: -17.25029754638672
    9. ' +' → logprob: -17.87529754638672
    10. '`' → logprob: -18.25029754638672

Token 871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '2' → logprob: -14.625014305114746
    4. ')' → logprob: -16.37501335144043
    5. '<|end|>' → logprob: -16.75001335144043
    6. '32' → logprob: -17.25001335144043
    7. ''' → logprob: -17.37501335144043
    8. '0' → logprob: -17.37501335144043
    9. '`' → logprob: -17.37501335144043
    10. '"' → logprob: -17.37501335144043

Token 872: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022558939235750586
    2. ')
' → logprob: -8.500226020812988
    3. '<|end|>' → logprob: -11.375226020812988
    4. '")' → logprob: -12.125226020812988
    5. '')' → logprob: -13.875226020812988
    6. ',' → logprob: -14.000226020812988
    7. ' )' → logprob: -14.250226020812988
    8. ');' → logprob: -14.375226020812988
    9. ')#' → logprob: -15.000226020812988
    10. '   ' → logprob: -15.000226020812988

Token 873: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 874: ' quit' (ID: 27737)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 875: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1672634780406952
    2. '<|end|>' → logprob: -1.9172635078430176
    3. '\n' → logprob: -5.542263507843018
    4. '   ' → logprob: -6.792263507843018
    5. '<|end|>' → logprob: -7.167263507843018
    6. '()' → logprob: -7.917263507843018
    7. '  
' → logprob: -8.79226303100586
    8. '    
' → logprob: -8.91726303100586
    9. '()
' → logprob: -9.04226303100586
    10. '

' → logprob: -9.29226303100586

Token 876: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051873899064958096
    2. '
' → logprob: -6.130187511444092
    3. 'print' → logprob: -6.630187511444092
    4. 'if' → logprob: -7.005187511444092
    5. '    
' → logprob: -7.755187511444092
    6. 'for' → logprob: -9.005187034606934
    7. 'def' → logprob: -9.755187034606934
    8. '```' → logprob: -10.005187034606934
    9. ' if' → logprob: -10.880187034606934
    10. 'n' → logprob: -10.880187034606934

Token 877: ' edge' (ID: 11165)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42121991515159607
    2. 'else' → logprob: -1.4212199449539185
    3. '   ' → logprob: -3.171219825744629
    4. 'for' → logprob: -3.796219825744629
    5. 'n' → logprob: -5.296219825744629
    6. '
' → logprob: -5.296219825744629
    7. 'print' → logprob: -5.546219825744629
    8. 'elif' → logprob: -5.671219825744629
    9. 'current' → logprob: -5.921219825744629
    10. '```' → logprob: -6.171219825744629

Token 878: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5421799421310425
    2. 's' → logprob: -1.9171799421310425
    3. '_count' → logprob: -2.292180061340332
    4. '_labels' → logprob: -2.417180061340332
    5. '_label' → logprob: -2.792180061340332
    6. '_key' → logprob: -4.917180061340332
    7. '_' → logprob: -6.292180061340332
    8. '_case' → logprob: -6.292180061340332
    9. '_weights' → logprob: -7.042180061340332
    10. '_counter' → logprob: -7.167180061340332

Token 879: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14279142022132874
    2. '=' → logprob: -2.017791509628296
    3. '=[]' → logprob: -9.767791748046875
    4. '_' → logprob: -10.142791748046875
    5. '.append' → logprob: -11.517791748046875
    6. '.' → logprob: -13.142791748046875
    7. '   ' → logprob: -13.767791748046875
    8. '	' → logprob: -13.892791748046875
    9. '[' → logprob: -14.017791748046875
    10. '=[]
' → logprob: -14.267791748046875

Token 880: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.038254350423812866
    2. '[(' → logprob: -3.2882542610168457
    3. ' []' → logprob: -8.913254737854004
    4. '[]
' → logprob: -10.163254737854004
    5. '[' → logprob: -10.538254737854004
    6. '[[' → logprob: -12.163254737854004
    7. ' [(' → logprob: -12.538254737854004
    8. '[]

' → logprob: -13.663254737854004
    9. 'deque' → logprob: -13.788254737854004
    10. '[((' → logprob: -14.288254737854004

Token 881: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5460531115531921
    2. ' for' → logprob: -1.796053171157837
    3. 'for' → logprob: -2.046053171157837
    4. 'current' → logprob: -3.296053171157837
    5. ' current' → logprob: -3.921053171157837
    6. ' if' → logprob: -4.421052932739258
    7. 'if' → logprob: -4.796052932739258
    8. ' node' → logprob: -5.421052932739258
    9. ' edges' → logprob: -5.421052932739258
    10. 'from' → logprob: -5.671052932739258

Token 882: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2559200525283813
    2. 'current' → logprob: -1.2559200525283813
    3. 'edge' → logprob: -3.005919933319092
    4. 'if' → logprob: -3.130919933319092
    5. 'start' → logprob: -3.505919933319092
    6. 'node' → logprob: -3.630919933319092
    7. 'edges' → logprob: -3.630919933319092
    8. 'remaining' → logprob: -3.630919933319092
    9. 'last' → logprob: -4.255919933319092
    10. 'n' → logprob: -4.255919933319092

Token 883: ' edge' (ID: 11165)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38852739334106445
    2. 'node' → logprob: -2.6385273933410645
    3. ' i' → logprob: -2.7635273933410645
    4. ' node' → logprob: -2.8885273933410645
    5. 'current' → logprob: -3.5135273933410645
    6. ' current' → logprob: -4.0135273933410645
    7. 'edge' → logprob: -4.7635273933410645
    8. 'value' → logprob: -4.8885273933410645
    9. 'length' → logprob: -5.0135273933410645
    10. ' edge' → logprob: -5.1385273933410645

Token 884: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.024959182366728783
    2. '_index' → logprob: -4.024959087371826
    3. ' in' → logprob: -5.649959087371826
    4. '_u' → logprob: -7.649959087371826
    5. 'in' → logprob: -7.774959087371826
    6. '_count' → logprob: -8.149959564208984
    7. 'label' → logprob: -8.399959564208984
    8. '_node' → logprob: -8.399959564208984
    9. '_list' → logprob: -8.524959564208984
    10. '_i' → logprob: -8.649959564208984

Token 885: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4743393063545227
    2. 'in' → logprob: -0.9743393063545227
    3. ',' → logprob: -8.849339485168457
    4. ' ' → logprob: -10.474339485168457
    5. '1' → logprob: -10.724339485168457
    6. '   ' → logprob: -10.849339485168457
    7. 'i' → logprob: -11.099339485168457
    8. '_' → logprob: -12.224339485168457
    9. '	in' → logprob: -12.224339485168457
    10. ' ' → logprob: -12.724339485168457

Token 886: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008128436165861785
    2. ' range' → logprob: -7.125813007354736
    3. 'edge' → logprob: -12.125812530517578
    4. '(range' → logprob: -14.000812530517578
    5. '[' → logprob: -14.125812530517578
    6. '   ' → logprob: -14.750812530517578
    7. '	range' → logprob: -15.625812530517578
    8. 'list' → logprob: -15.625812530517578
    9. ' ' → logprob: -15.750812530517578
    10. '  ' → logprob: -16.250812530517578

Token 887: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10580839216709137
    2. '(' → logprob: -2.3558084964752197
    3. '2' → logprob: -5.980808258056641
    4. 'given' → logprob: -6.605808258056641
    5. '   ' → logprob: -7.230808258056641
    6. '(g' → logprob: -7.480808258056641
    7. ' ' → logprob: -8.85580825805664
    8. '0' → logprob: -8.98080825805664
    9. 'g' → logprob: -9.98080825805664
    10. ' given' → logprob: -10.48080825805664

Token 888: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03962370380759239
    2. 'given' → logprob: -3.414623737335205
    3. '2' → logprob: -5.164623737335205
    4. '0' → logprob: -9.789623260498047
    5. '3' → logprob: -9.789623260498047
    6. '(' → logprob: -10.664623260498047
    7. ' given' → logprob: -10.977123260498047
    8. ' ' → logprob: -10.977123260498047
    9. 'give' → logprob: -11.664623260498047
    10. '   ' → logprob: -11.977123260498047

Token 889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035072024911642075
    2. ' ,' → logprob: -8.000350952148438
    3. ',g' → logprob: -12.125350952148438
    4. '   ' → logprob: -12.250350952148438
    5. '1' → logprob: -13.625350952148438
    6. ' ' → logprob: -14.500350952148438
    7. '2' → logprob: -14.500350952148438
    8. '+' → logprob: -14.625350952148438
    9. ',
' → logprob: -14.750350952148438
    10. 'to' → logprob: -15.375350952148438

Token 890: ' ' (ID: 220)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.007428084500133991
    2. '2' → logprob: -5.382428169250488
    3. ' given' → logprob: -5.882428169250488
    4. '1' → logprob: -12.257428169250488
    5. ' ' → logprob: -12.382428169250488
    6. 'give' → logprob: -13.007428169250488
    7. '   ' → logprob: -13.632428169250488
    8. '(' → logprob: -13.632428169250488
    9. 'Given' → logprob: -14.507428169250488
    10. 'gave' → logprob: -14.632428169250488

Token 891: '3' (ID: 18)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.002229832811281085
    2. '2' → logprob: -6.127229690551758
    3. ' given' → logprob: -10.127229690551758
    4. '1' → logprob: -12.752229690551758
    5. '(' → logprob: -14.252229690551758
    6. 'give' → logprob: -14.377229690551758
    7. 'gave' → logprob: -15.877229690551758
    8. 'Given' → logprob: -15.877229690551758
    9. '_given' → logprob: -16.127229690551758
    10. ' ' → logprob: -16.627229690551758

Token 892: '):
' (ID: 1883)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7257905006408691
    2. '):' → logprob: -0.8507905006408691
    3. '*' → logprob: -2.475790500640869
    4. '):
' → logprob: -6.225790500640869
    5. ' ):' → logprob: -6.850790500640869
    6. '+' → logprob: -7.850790500640869
    7. ' +' → logprob: -7.850790500640869
    8. ',' → logprob: -7.975790500640869
    9. ':' → logprob: -8.100790023803711
    10. ' ' → logprob: -9.100790023803711

Token 893: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.499418705701828
    2. '       ' → logprob: -1.7494187355041504
    3. ':' → logprob: -1.9994187355041504
    4. ',' → logprob: -3.7494187355041504
    5. ' :' → logprob: -4.24941873550415
    6. ' ' → logprob: -4.49941873550415
    7. ':
' → logprob: -4.62441873550415
    8. ' ,' → logprob: -5.24941873550415
    9. ' :
' → logprob: -5.37441873550415
    10. '):
' → logprob: -5.87441873550415

Token 894: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.3073637783527374
    2. 'edge' (adapté à ' edge') → logprob: -1.682363748550415
    3. 'print' → logprob: -3.057363748550415
    4. ' print' → logprob: -3.807363748550415
    5. '   ' → logprob: -4.682363986968994
    6. '```' → logprob: -10.057363510131836
    7. '_edge' → logprob: -10.557363510131836
    8. '       ' → logprob: -10.682363510131836
    9. ',' → logprob: -10.807363510131836
    10. '    ' → logprob: -11.182363510131836

Token 895: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.1304786056280136
    2. '_label' → logprob: -2.255478620529175
    3. '_' → logprob: -4.380478382110596
    4. '_labels' → logprob: -5.755478382110596
    5. '.append' → logprob: -7.255478382110596
    6. '_,' → logprob: -7.380478382110596
    7. ')' → logprob: -9.130478858947754
    8. ',' → logprob: -9.380478858947754
    9. '   ' → logprob: -9.505478858947754
    10. ',_' → logprob: -9.630478858947754

Token 896: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003485745983198285
    2. '.' → logprob: -8.000349044799805
    3. '.extend' → logprob: -11.750349044799805
    4. ' .' → logprob: -13.750349044799805
    5. 'append' → logprob: -14.000349044799805
    6. '       ' → logprob: -14.250349044799805
    7. '   ' → logprob: -14.375349044799805
    8. ',' → logprob: -14.500349044799805
    9. '.app' → logprob: -14.625349044799805
    10. '           ' → logprob: -14.625349044799805

Token 897: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7871155142784119
    2. '(edge' → logprob: -1.0371155738830566
    3. ' (' → logprob: -1.6621155738830566
    4. '((' → logprob: -7.662115573883057
    5. '('' → logprob: -9.787115097045898
    6. '(
' → logprob: -9.912115097045898
    7. '   ' → logprob: -10.787115097045898
    8. '("' → logprob: -11.912115097045898
    9. ' ((' → logprob: -12.037115097045898
    10. '(edges' → logprob: -12.537115097045898

Token 898: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0030177568551152945
    2. ' edge' → logprob: -5.878017902374268
    3. '1' → logprob: -9.00301742553711
    4. '(edge' → logprob: -10.00301742553711
    5. '   ' → logprob: -10.75301742553711
    6. ' ' → logprob: -11.50301742553711
    7. '2' → logprob: -12.37801742553711
    8. '0' → logprob: -13.62801742553711
    9. '(' → logprob: -13.75301742553711
    10. '    ' → logprob: -13.87801742553711

Token 899: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -7.493430894101039e-05
    2. 'label' → logprob: -9.875075340270996
    3. '1' → logprob: -11.625075340270996
    4. 'Label' → logprob: -12.375075340270996
    5. '_list' → logprob: -12.875075340270996
    6. '_labels' → logprob: -13.375075340270996
    7. '_l' → logprob: -13.875075340270996
    8. ',' → logprob: -13.875075340270996
    9. '<label' → logprob: -14.500075340270996
    10. '2' → logprob: -14.625075340270996

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001275353948585689
    2. '+' → logprob: -7.001275539398193
    3. ' ,' → logprob: -8.376275062561035
    4. ' +' → logprob: -9.376275062561035
    5. '   ' → logprob: -11.501275062561035
    6. ')' → logprob: -11.626275062561035
    7. ',
' → logprob: -12.001275062561035
    8. '+,' → logprob: -12.501275062561035
    9. '```' → logprob: -12.876275062561035
    10. ' ' → logprob: -13.251275062561035

Token 901: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0017519377870485187
    2. ' edge' → logprob: -6.751751899719238
    3. '3' → logprob: -8.376751899719238
    4. '4' → logprob: -8.501751899719238
    5. '2' → logprob: -9.876751899719238
    6. '(edge' → logprob: -10.626751899719238
    7. '1' → logprob: -11.001751899719238
    8. ' ' → logprob: -11.001751899719238
    9. 'given' → logprob: -11.126751899719238
    10. 'ed' → logprob: -12.626751899719238

Token 902: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.0003010233340319246
    2. 'label' → logprob: -8.500301361083984
    3. '+' → logprob: -9.375301361083984
    4. 'Label' → logprob: -12.250301361083984
    5. '1' → logprob: -13.375301361083984
    6. '_LABEL' → logprob: -14.000301361083984
    7. '_labels' → logprob: -14.250301361083984
    8. '<label' → logprob: -14.250301361083984
    9. '_Label' → logprob: -14.375301361083984
    10. '_list' → logprob: -14.625301361083984

Token 903: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04867514222860336
    2. ' +' → logprob: -3.048675060272217
    3. '4' → logprob: -9.673675537109375
    4. ' ' → logprob: -11.798675537109375
    5. '3' → logprob: -12.048675537109375
    6. '+
' → logprob: -12.423675537109375
    7. '   ' → logprob: -13.173675537109375
    8. '2' → logprob: -13.423675537109375
    9. ')' → logprob: -13.798675537109375
    10. '1' → logprob: -14.798675537109375

Token 904: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.046455156058073044
    2. '3' → logprob: -3.296455144882202
    3. '2' → logprob: -4.796455383300781
    4. ' ' → logprob: -9.671455383300781
    5. '4' → logprob: -9.921455383300781
    6. '```' → logprob: -12.858955383300781
    7. '5' → logprob: -13.858955383300781
    8. '   ' → logprob: -14.671455383300781
    9. '
' → logprob: -14.671455383300781
    10. '  ' → logprob: -14.796455383300781

Token 905: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021976174786686897
    2. '3' → logprob: -4.146975994110107
    3. '2' → logprob: -5.146975994110107
    4. '4' → logprob: -9.896976470947266
    5. ' ' → logprob: -9.896976470947266
    6. '```' → logprob: -13.021976470947266
    7. '5' → logprob: -13.146976470947266
    8. '0' → logprob: -14.521976470947266
    9. '
' → logprob: -14.959476470947266
    10. '6' → logprob: -15.334476470947266

Token 906: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00866586435586214
    2. '))' → logprob: -4.758666038513184
    3. ')
' → logprob: -10.383666038513184
    4. '   ' → logprob: -12.133666038513184
    5. ')))' → logprob: -12.258666038513184
    6. '       ' → logprob: -12.883666038513184
    7. '))
' → logprob: -13.258666038513184
    8. ',' → logprob: -13.508666038513184
    9. ')}' → logprob: -13.883666038513184
    10. '),' → logprob: -14.258666038513184

Token 907: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7303439378738403
    2. ')' → logprob: -1.7303439378738403
    3. '<|end|>' → logprob: -1.8553439378738403
    4. '   ' → logprob: -2.605343818664551
    5. '    
' → logprob: -3.980343818664551
    6. '\n' → logprob: -4.105343818664551
    7. '  
' → logprob: -4.105343818664551
    8. ' 
' → logprob: -4.355343818664551
    9. ',' → logprob: -4.605343818664551
    10. '```' → logprob: -5.230343818664551

Token 908: ' edge' (ID: 11165)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.992286205291748
    2. 'for' → logprob: -1.242286205291748
    3. '
' → logprob: -1.492286205291748
    4. '   ' → logprob: -2.867286205291748
    5. ' 
' → logprob: -3.492286205291748
    6. ' ' → logprob: -4.492286205291748
    7. '  
' → logprob: -5.742286205291748
    8. '1' → logprob: -6.117286205291748
    9. '    
' → logprob: -6.492286205291748
    10. ':' → logprob: -6.617286205291748

Token 909: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.4306047856807709
    2. '_label' → logprob: -1.0556048154830933
    3. '_labels' → logprob: -6.680604934692383
    4. '_index' → logprob: -8.930604934692383
    5. '_count' → logprob: -9.180604934692383
    6. 'List' → logprob: -9.305604934692383
    7. 'label' → logprob: -9.555604934692383
    8. 'list' → logprob: -10.305604934692383
    9. 'Label' → logprob: -10.680604934692383
    10. '_' → logprob: -10.930604934692383

Token 910: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.44313693046569824
    2. '.append' → logprob: -1.0681369304656982
    3. '.' → logprob: -4.818137168884277
    4. ' +=' → logprob: -5.443137168884277
    5. '+=' → logprob: -6.693137168884277
    6. ' =' → logprob: -8.193137168884277
    7. '=' → logprob: -8.318137168884277
    8. '   ' → logprob: -10.693137168884277
    9. '[' → logprob: -10.818137168884277
    10. '.clear' → logprob: -10.818137168884277

Token 911: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.003619670169427991
    2. '(' → logprob: -5.62861967086792
    3. '(
' → logprob: -11.628619194030762
    4. '(('' → logprob: -12.503619194030762
    5. ' ((' → logprob: -12.628619194030762
    6. '   ' → logprob: -13.878619194030762
    7. '(((' → logprob: -14.003619194030762
    8. ' (' → logprob: -14.628619194030762
    9. '(("' → logprob: -14.878619194030762
    10. '([' → logprob: -15.253619194030762

Token 912: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05167439952492714
    2. '(' → logprob: -3.8016743659973145
    3. '2' → logprob: -4.0516743659973145
    4. '1' → logprob: -4.5516743659973145
    5. ' ' → logprob: -10.551674842834473
    6. ' (' → logprob: -10.676674842834473
    7. '4' → logprob: -10.801674842834473
    8. '   ' → logprob: -11.551674842834473
    9. '  ' → logprob: -13.801674842834473
    10. '0' → logprob: -14.051674842834473

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7610454708337784e-05
    2. ' ,' → logprob: -10.625027656555176
    3. ',
' → logprob: -14.000027656555176
    4. '3' → logprob: -14.125027656555176
    5. '2' → logprob: -14.750027656555176
    6. '1' → logprob: -14.875027656555176
    7. '   ' → logprob: -15.500027656555176
    8. '4' → logprob: -15.875027656555176
    9. ' ' → logprob: -16.37502670288086
    10. '‌,' → logprob: -16.50002670288086

Token 914: ' given' (ID: 4335)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03559029474854469
    2. '1' → logprob: -3.410590410232544
    3. '2' → logprob: -7.160590171813965
    4. ' ' → logprob: -7.660590171813965
    5. '5' → logprob: -7.785590171813965
    6. '6' → logprob: -9.785590171813965
    7. 'given' → logprob: -9.910590171813965
    8. '(' → logprob: -10.285590171813965
    9. '7' → logprob: -10.285590171813965
    10. '3' → logprob: -10.285590171813965

Token 915: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -5.061676347395405e-05
    2. 'Integer' → logprob: -10.50005054473877
    3. 'integer' → logprob: -11.75005054473877
    4. '_Integer' → logprob: -12.25005054473877
    5. '_INTEGER' → logprob: -12.75005054473877
    6. '+' → logprob: -13.12505054473877
    7. '_' → logprob: -13.62505054473877
    8. '
' → logprob: -13.75005054473877
    9. '_int' → logprob: -13.87505054473877
    10. '   ' → logprob: -14.87505054473877

Token 916: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4362378418445587
    2. ' +' → logprob: -1.0612378120422363
    3. '))' → logprob: -5.186237812042236
    4. '-' → logprob: -6.811237812042236
    5. ' -' → logprob: -7.686237812042236
    6. '   ' → logprob: -8.186238288879395
    7. ' ' → logprob: -10.686238288879395
    8. '*' → logprob: -11.686238288879395
    9. ' ))' → logprob: -12.311238288879395
    10. ')' → logprob: -12.561238288879395

Token 917: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002774682128801942
    2. '2' → logprob: -6.627774715423584
    3. '4' → logprob: -7.127774715423584
    4. '3' → logprob: -7.377774715423584
    5. ' ' → logprob: -11.002774238586426
    6. '5' → logprob: -14.065274238586426
    7. '   ' → logprob: -14.127774238586426
    8. 'edge' → logprob: -14.565274238586426
    9. '
' → logprob: -15.002774238586426
    10. '  ' → logprob: -15.190274238586426

Token 918: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025767285842448473
    2. '2' → logprob: -6.00257682800293
    3. '3' → logprob: -9.25257682800293
    4. '4' → logprob: -12.62757682800293
    5. 'edge' → logprob: -14.00257682800293
    6. ' ' → logprob: -14.75257682800293
    7. '   ' → logprob: -15.75257682800293
    8. '```' → logprob: -15.94007682800293
    9. '
' → logprob: -16.31507682800293
    10. '(' → logprob: -16.75257682800293

Token 919: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020242815371602774
    2. ')
' → logprob: -6.502024173736572
    3. '))' → logprob: -7.627024173736572
    4. '   ' → logprob: -11.12702465057373
    5. ')`' → logprob: -11.62702465057373
    6. '))
' → logprob: -12.50202465057373
    7. '(' → logprob: -13.50202465057373
    8. '())' → logprob: -13.75202465057373
    9. ')
' → logprob: -13.87702465057373
    10. ' )' → logprob: -14.00202465057373

Token 920: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.366148442029953
    2. '   ' → logprob: -1.2411484718322754
    3. 'edge' → logprob: -4.616148471832275
    4. ' for' → logprob: -5.366148471832275
    5. '
' → logprob: -6.741148471832275
    6. '```' → logprob: -7.366148471832275
    7. '	for' → logprob: -7.866148471832275
    8. '    
' → logprob: -8.491147994995117
    9. ',' → logprob: -8.741147994995117
    10. '<|end|>' → logprob: -8.991147994995117

Token 921: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06575014442205429
    2. 'edge' → logprob: -3.1907501220703125
    3. '   ' → logprob: -3.9407501220703125
    4. ' for' → logprob: -5.8157501220703125
    5. ' edge' → logprob: -10.315750122070312
    6. '```' → logprob: -10.565750122070312
    7. '
' → logprob: -11.565750122070312
    8. '	for' → logprob: -12.565750122070312
    9. ' ' → logprob: -13.315750122070312
    10. '    
' → logprob: -13.690750122070312

Token 922: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0014426150592043996
    2. 'node' → logprob: -7.6264424324035645
    3. ' edge' → logprob: -8.001442909240723
    4. 'i' → logprob: -8.251442909240723
    5. '_edge' → logprob: -9.001442909240723
    6. 'label' → logprob: -9.126442909240723
    7. '_' → logprob: -10.501442909240723
    8. 'current' → logprob: -10.751442909240723
    9. 'vertex' → logprob: -11.001442909240723
    10. '(edge' → logprob: -11.126442909240723

Token 923: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -8.256334695033729e-05
    2. 'label' → logprob: -9.500082969665527
    3. '
' → logprob: -12.875082969665527
    4. 'Label' → logprob: -13.625082969665527
    5. '_list' → logprob: -14.000082969665527
    6. '1' → logprob: -14.250082969665527
    7. '_labels' → logprob: -14.250082969665527
    8. ' in' → logprob: -14.875082969665527
    9. '_' → logprob: -15.500082969665527
    10. '_index' → logprob: -15.625082969665527

Token 924: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038187455385923386
    2. 'in' → logprob: -3.2881875038146973
    3. '   ' → logprob: -10.538187026977539
    4. ',' → logprob: -10.663187026977539
    5. '(' → logprob: -10.788187026977539
    6. '	in' → logprob: -10.913187026977539
    7. '  ' → logprob: -11.288187026977539
    8. '3' → logprob: -11.663187026977539
    9. '1' → logprob: -11.788187026977539
    10. ' ' → logprob: -11.913187026977539

Token 925: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011746286181733012
    2. ' range' → logprob: -6.751174449920654
    3. '(range' → logprob: -13.751174926757812
    4. '[' → logprob: -14.126174926757812
    5. '3' → logprob: -14.501174926757812
    6. '2' → logprob: -14.751174926757812
    7. '   ' → logprob: -15.001174926757812
    8. ' ' → logprob: -15.126174926757812
    9. '(' → logprob: -15.376174926757812
    10. '	range' → logprob: -15.501174926757812

Token 926: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.18380141258239746
    2. '3' → logprob: -2.0588014125823975
    3. '1' → logprob: -3.3088014125823975
    4. '2' → logprob: -5.933801651000977
    5. '   ' → logprob: -7.558801651000977
    6. '(' → logprob: -7.683801651000977
    7. ' ' → logprob: -10.183801651000977
    8. '
' → logprob: -11.058801651000977
    9. '    ' → logprob: -11.308801651000977
    10. 'from' → logprob: -11.683801651000977

Token 927: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5103692412376404
    2. '3' → logprob: -1.1353693008422852
    3. '1' → logprob: -2.635369300842285
    4. '2' → logprob: -5.010369300842285
    5. '   ' → logprob: -11.072869300842285
    6. ' ' → logprob: -11.197869300842285
    7. '5' → logprob: -11.760369300842285
    8. 'given' → logprob: -11.822869300842285
    9. '  ' → logprob: -12.572869300842285
    10. '    ' → logprob: -13.510369300842285

Token 928: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019414882408455014
    2. '2' → logprob: -6.501941680908203
    3. ' ,' → logprob: -9.126941680908203
    4. ',g' → logprob: -9.501941680908203
    5. '4' → logprob: -9.626941680908203
    6. '3' → logprob: -10.001941680908203
    7. '0' → logprob: -10.126941680908203
    8. '1' → logprob: -10.251941680908203
    9. 'given' → logprob: -10.876941680908203
    10. '+' → logprob: -11.376941680908203

Token 929: ' ' (ID: 220)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.002508478006348014
    2. ' given' → logprob: -6.502508640289307
    3. '3' → logprob: -7.002508640289307
    4. '2' → logprob: -9.627508163452148
    5. ' ' → logprob: -11.502508163452148
    6. '   ' → logprob: -12.127508163452148
    7. '100' → logprob: -12.252508163452148
    8. '4' → logprob: -13.377508163452148
    9. 'g' → logprob: -13.377508163452148
    10. '1' → logprob: -13.377508163452148

Token 930: '3' (ID: 18)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.0005363515811040998
    2. '3' → logprob: -8.12553596496582
    3. ' given' → logprob: -8.50053596496582
    4. '2' → logprob: -10.62553596496582
    5. '4' → logprob: -12.25053596496582
    6. '   ' → logprob: -13.37553596496582
    7. 'give' → logprob: -13.37553596496582
    8. '(' → logprob: -14.25053596496582
    9. ' ' → logprob: -14.25053596496582
    10. '1' → logprob: -14.75053596496582

Token 931: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0444147065281868
    2. '):' → logprob: -3.419414758682251
    3. '   ' → logprob: -5.419414520263672
    4. '+' → logprob: -5.669414520263672
    5. ')' → logprob: -7.419414520263672
    6. ' +' → logprob: -7.669414520263672
    7. ' ):
' → logprob: -8.044414520263672
    8. ',' → logprob: -8.044414520263672
    9. ':' → logprob: -8.419414520263672
    10. '):
' → logprob: -8.544414520263672

Token 932: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0636441558599472
    2. '       ' → logprob: -2.8136441707611084
    3. ':
' → logprob: -7.188643932342529
    4. ':' → logprob: -7.313643932342529
    5. ',' → logprob: -9.438644409179688
    6. '):
' → logprob: -9.938644409179688
    7. ' edge' → logprob: -10.188644409179688
    8. '```' → logprob: -11.438644409179688
    9. '_edge' → logprob: -11.688644409179688
    10. '(edge' → logprob: -11.813644409179688

Token 933: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -0.7258281111717224
    2. ' edge' → logprob: -0.8508281111717224
    3. '   ' → logprob: -2.475828170776367
    4. ' for' → logprob: -6.350828170776367
    5. 'for' → logprob: -6.475828170776367
    6. '       ' → logprob: -7.100828170776367
    7. 'print' → logprob: -7.600828170776367
    8. ' ' → logprob: -9.225828170776367
    9. ' print' → logprob: -9.725828170776367
    10. '  ' → logprob: -10.350828170776367

Token 934: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00046451209345832467
    2. 'list' → logprob: -7.87546443939209
    3. 'List' → logprob: -10.12546443939209
    4. '_label' → logprob: -10.50046443939209
    5. '_labels' → logprob: -12.25046443939209
    6. 'label' → logprob: -13.00046443939209
    7. 's' → logprob: -13.25046443939209
    8. '.append' → logprob: -13.37546443939209
    9. '   ' → logprob: -14.00046443939209
    10. '_lists' → logprob: -14.37546443939209

Token 935: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.085517113911919e-05
    2. 'append' → logprob: -10.12505054473877
    3. '.extend' → logprob: -12.00005054473877
    4. '.' → logprob: -13.62505054473877
    5. '_append' → logprob: -13.62505054473877
    6. '.pop' → logprob: -14.62505054473877
    7. '[-' → logprob: -14.75005054473877
    8. 'Append' → logprob: -15.25005054473877
    9. '.app' → logprob: -15.37505054473877
    10. '```' → logprob: -16.375051498413086

Token 936: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.003163818269968033
    2. '(' → logprob: -5.878163814544678
    3. '(
' → logprob: -8.128164291381836
    4. '(edge' → logprob: -10.253164291381836
    5. '   ' → logprob: -11.128164291381836
    6. ' ((' → logprob: -12.128164291381836
    7. ' (' → logprob: -12.378164291381836
    8. ' ' → logprob: -12.753164291381836
    9. '(
' → logprob: -14.253164291381836
    10. '(('' → logprob: -14.753164291381836

Token 937: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.004770922474563122
    2. '(edge' → logprob: -6.129770755767822
    3. 'given' → logprob: -6.629770755767822
    4. '2' → logprob: -7.504770755767822
    5. '3' → logprob: -8.37977123260498
    6. ' edge' → logprob: -8.62977123260498
    7. '   ' → logprob: -9.25477123260498
    8. '(' → logprob: -9.62977123260498
    9. '4' → logprob: -9.87977123260498
    10. '1' → logprob: -10.37977123260498

Token 938: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -2.4868770196917467e-05
    2. 'label' → logprob: -11.000024795532227
    3. '_list' → logprob: -12.500024795532227
    4. '+' → logprob: -13.875024795532227
    5. '1' → logprob: -14.000024795532227
    6. ',' → logprob: -14.500024795532227
    7. '_l' → logprob: -14.875024795532227
    8. '2' → logprob: -14.875024795532227
    9. ',label' → logprob: -15.750024795532227
    10. '3' → logprob: -16.000024795532227

Token 939: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7996440529823303
    2. '+' → logprob: -1.1746439933776855
    3. ' +' → logprob: -1.4246439933776855
    4. ' ,' → logprob: -7.0496439933776855
    5. '+,' → logprob: -10.049644470214844
    6. '   ' → logprob: -10.299644470214844
    7. ',
' → logprob: -11.549644470214844
    8. ' ' → logprob: -11.674644470214844
    9. '```' → logprob: -11.674644470214844
    10. 's' → logprob: -12.424644470214844

Token 940: ' given' (ID: 4335)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7183049917221069
    2. '1' → logprob: -0.8433049917221069
    3. '2' → logprob: -2.5933051109313965
    4. 'given' → logprob: -5.2183051109313965
    5. ' ' → logprob: -6.8433051109313965
    6. '4' → logprob: -7.8433051109313965
    7. '0' → logprob: -8.343304634094238
    8. ' given' → logprob: -9.718304634094238
    9. '100' → logprob: -10.343304634094238
    10. '(' → logprob: -10.468304634094238

Token 941: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.0005743592046201229
    2. 'integer' → logprob: -7.500574588775635
    3. 'Integer' → logprob: -12.125574111938477
    4. '1' → logprob: -12.125574111938477
    5. '3' → logprob: -13.125574111938477
    6. '2' → logprob: -13.250574111938477
    7. '_label' → logprob: -13.250574111938477
    8. '_INTEGER' → logprob: -14.125574111938477
    9. '```' → logprob: -14.125574111938477
    10. '_in' → logprob: -14.375574111938477

Token 942: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008200351148843765
    2. '+' → logprob: -5.008200168609619
    3. ' ,' → logprob: -7.633200168609619
    4. '1' → logprob: -7.883200168609619
    5. '   ' → logprob: -8.508200645446777
    6. ' +' → logprob: -8.508200645446777
    7. '-' → logprob: -9.258200645446777
    8. '```' → logprob: -9.758200645446777
    9. ',
' → logprob: -11.383200645446777
    10. '2' → logprob: -11.633200645446777

Token 943: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.25203806161880493
    2. ' edge' → logprob: -1.5020380020141602
    3. ' given' → logprob: -9.75203800201416
    4. '(edge' → logprob: -10.75203800201416
    5. 'given' → logprob: -11.00203800201416
    6. '=edge' → logprob: -12.37703800201416
    7. '1' → logprob: -13.25203800201416
    8. '_edge' → logprob: -13.50203800201416
    9. '2' → logprob: -13.75203800201416
    10. '   ' → logprob: -13.87703800201416

Token 944: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.0033039047848433256
    2. '1' → logprob: -6.6283040046691895
    3. '_integer' → logprob: -6.8783040046691895
    4. '_list' → logprob: -7.6283040046691895
    5. '_' → logprob: -8.253303527832031
    6. 'label' → logprob: -10.378303527832031
    7. '_index' → logprob: -10.753303527832031
    8. '_Label' → logprob: -10.753303527832031
    9. '_LABEL' → logprob: -11.253303527832031
    10. '-' → logprob: -11.503303527832031

Token 945: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42969048023223877
    2. ' +' → logprob: -1.0546904802322388
    3. '))' → logprob: -7.554690361022949
    4. '   ' → logprob: -8.80469036102295
    5. ',' → logprob: -9.17969036102295
    6. ')' → logprob: -9.67969036102295
    7. '    ' → logprob: -10.05469036102295
    8. '1' → logprob: -10.17969036102295
    9. ' ))' → logprob: -11.67969036102295
    10. '),' → logprob: -11.80469036102295

Token 946: ' given' (ID: 4335)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024347173050045967
    2. 'given' → logprob: -4.024347305297852
    3. '3' → logprob: -5.899347305297852
    4. ' ' → logprob: -6.399347305297852
    5. ' given' → logprob: -7.024347305297852
    6. '2' → logprob: -7.524347305297852
    7. '4' → logprob: -8.649347305297852
    8. '   ' → logprob: -9.524347305297852
    9. '0' → logprob: -10.774347305297852
    10. 'number' → logprob: -11.899347305297852

Token 947: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.010795723646879196
    2. 'integer' → logprob: -4.635795593261719
    3. '1' → logprob: -7.135795593261719
    4. 'given' → logprob: -9.385795593261719
    5. '2' → logprob: -9.760795593261719
    6. '_given' → logprob: -9.885795593261719
    7. 'Integer' → logprob: -10.510795593261719
    8. ' ' → logprob: -12.135795593261719
    9. '3' → logprob: -12.385795593261719
    10. '_INTEGER' → logprob: -12.635795593261719

Token 948: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5605191588401794
    2. '))' → logprob: -1.0605192184448242
    3. ' +' → logprob: -2.560519218444824
    4. '-' → logprob: -5.935519218444824
    5. ' -' → logprob: -6.685519218444824
    6. '   ' → logprob: -7.560519218444824
    7. ')' → logprob: -7.935519218444824
    8. ' ))' → logprob: -7.935519218444824
    9. '))
' → logprob: -8.185519218444824
    10. ',' → logprob: -10.310519218444824

Token 949: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004682073777075857
    2. '2' → logprob: -7.7504682540893555
    3. '0' → logprob: -11.125468254089355
    4. '3' → logprob: -11.500468254089355
    5. ' ' → logprob: -11.500468254089355
    6. '4' → logprob: -14.000468254089355
    7. '```' → logprob: -14.125468254089355
    8. '
' → logprob: -15.250468254089355
    9. '5' → logprob: -15.625468254089355
    10. '   ' → logprob: -15.687968254089355

Token 950: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007335089612752199
    2. '2' → logprob: -7.250733375549316
    3. '0' → logprob: -11.125733375549316
    4. '3' → logprob: -11.875733375549316
    5. ' ' → logprob: -13.750733375549316
    6. '4' → logprob: -15.000733375549316
    7. '```' → logprob: -15.250733375549316
    8. '5' → logprob: -16.813234329223633
    9. '   ' → logprob: -16.938234329223633
    10. '100' → logprob: -17.000734329223633

Token 951: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001176893594674766
    2. ')
' → logprob: -6.751176834106445
    3. '   ' → logprob: -12.626176834106445
    4. ')
' → logprob: -14.126176834106445
    5. ')`' → logprob: -14.751176834106445
    6. ' )' → logprob: -15.001176834106445
    7. '```' → logprob: -15.126176834106445
    8. ')\' → logprob: -15.251176834106445
    9. '))' → logprob: -15.376176834106445
    10. ')#' → logprob: -16.001176834106445

Token 952: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8869518041610718
    2. '<|end|>' → logprob: -1.6369518041610718
    3. ')' → logprob: -2.1369519233703613
    4. '   ' → logprob: -2.2619519233703613
    5. ' for' → logprob: -2.3869519233703613
    6. '```' → logprob: -3.3869519233703613
    7. '
' → logprob: -3.7619519233703613
    8. '[' → logprob: -5.636951923370361
    9. ' ' → logprob: -5.886951923370361
    10. '	for' → logprob: -6.136951923370361

Token 953: ' upper' (ID: 13057)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12330810725688934
    2. ' for' → logprob: -2.6233081817626953
    3. '   ' → logprob: -3.4983081817626953
    4. 'edge' → logprob: -4.373308181762695
    5. '[' → logprob: -8.248308181762695
    6. ' edge' → logprob: -9.248308181762695
    7. '```' → logprob: -10.248308181762695
    8. '
' → logprob: -10.373308181762695
    9. '<|end|>' → logprob: -10.623308181762695
    10. ',' → logprob: -10.873308181762695

Token 954: '_node' (ID: 11390)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.2579907178878784
    2. '_limit' → logprob: -1.5079907178878784
    3. '_edge' → logprob: -6.257990837097168
    4. '_label' → logprob: -6.632990837097168
    5. '_node' → logprob: -7.257990837097168
    6. 'bound' → logprob: -7.507990837097168
    7. '_range' → logprob: -8.507990837097168
    8. ' =' → logprob: -8.507990837097168
    9. '_list' → logprob: -8.632990837097168
    10. '_integer' → logprob: -8.882990837097168

Token 955: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4442808926105499
    2. '=' → logprob: -1.0692808628082275
    3. 's' → logprob: -4.319281101226807
    4. ',' → logprob: -6.694281101226807
    5. '_' → logprob: -7.819281101226807
    6. '<|end|>' → logprob: -9.069280624389648
    7. ')' → logprob: -9.319280624389648
    8. '=int' → logprob: -9.569280624389648
    9. '_label' → logprob: -10.444280624389648
    10. '+' → logprob: -10.569280624389648

Token 956: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.32648321986198425
    2. 'given' → logprob: -1.5764832496643066
    3. '2' → logprob: -3.3264832496643066
    4. '4' → logprob: -3.8264832496643066
    5. '1' → logprob: -5.201483249664307
    6. ' given' → logprob: -6.076483249664307
    7. '(' → logprob: -6.576483249664307
    8. ' ' → logprob: -6.576483249664307
    9. '5' → logprob: -7.076483249664307
    10. 'edge' → logprob: -7.201483249664307

Token 957: '1' (ID: 16)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.718449592590332
    2. '3' → logprob: -0.843449592590332
    3. '2' → logprob: -3.093449592590332
    4. '4' → logprob: -4.218449592590332
    5. '1' → logprob: -4.343449592590332
    6. '(' → logprob: -5.593449592590332
    7. ' given' → logprob: -6.218449592590332
    8. 'edge' → logprob: -6.968449592590332
    9. ' ' → logprob: -7.343449592590332
    10. '   ' → logprob: -7.343449592590332

Token 958: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.160781979560852
    2. 'for' → logprob: -1.160781979560852
    3. '<|end|>' → logprob: -1.785781979560852
    4. ' for' → logprob: -2.7857818603515625
    5. '=' → logprob: -3.1607818603515625
    6. ' =' → logprob: -3.7857818603515625
    7. '+' → logprob: -3.7857818603515625
    8. '   ' → logprob: -3.9107818603515625
    9. '```' → logprob: -4.9107818603515625
    10. '<|end|>' → logprob: -5.1607818603515625

Token 960: ' lower' (ID: 6931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09604249149560928
    2. 'lower' (adapté à ' lower') → logprob: -3.0960423946380615
    3. 'upper' → logprob: -3.7210423946380615
    4. 'current' → logprob: -4.846042633056641
    5. ' for' → logprob: -4.846042633056641
    6. 'while' → logprob: -5.596042633056641
    7. 'edge' → logprob: -7.721042633056641
    8. ' lower' → logprob: -7.846042633056641
    9. '   ' → logprob: -8.09604263305664
    10. 'bottom' → logprob: -8.22104263305664

Token 961: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00044353955308906734
    2. '_layer' → logprob: -9.250443458557129
    3. '_edge' → logprob: -9.375443458557129
    4. '_label' → logprob: -9.875443458557129
    5. ' =' → logprob: -10.000443458557129
    6. '_nodes' → logprob: -10.000443458557129
    7. '=' → logprob: -10.375443458557129
    8. 'node' → logprob: -10.750443458557129
    9. '_' → logprob: -11.500443458557129
    10. '_level' → logprob: -11.875443458557129

Token 962: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5786876082420349
    2. ' =' → logprob: -0.8286876082420349
    3. ',' → logprob: -5.95368766784668
    4. '+=' → logprob: -9.32868766784668
    5. ' +=' → logprob: -10.20368766784668
    6. '+' → logprob: -11.57868766784668
    7. ' ,' → logprob: -12.20368766784668
    8. ' ' → logprob: -13.70368766784668
    9. '   ' → logprob: -13.95368766784668
    10. '<|end|>' → logprob: -14.07868766784668

Token 963: ' ' (ID: 220)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.6372783780097961
    2. '2' → logprob: -1.0122783184051514
    3. '3' → logprob: -2.6372783184051514
    4. '1' → logprob: -4.2622785568237305
    5. '4' → logprob: -4.3872785568237305
    6. ' given' → logprob: -5.1372785568237305
    7. ' ' → logprob: -5.7622785568237305
    8. '5' → logprob: -8.76227855682373
    9. '100' → logprob: -9.13727855682373
    10. '(' → logprob: -9.13727855682373

Token 964: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6508730053901672
    2. 'given' → logprob: -0.9008730053901672
    3. '3' → logprob: -3.2758729457855225
    4. '1' → logprob: -4.025873184204102
    5. '4' → logprob: -4.275873184204102
    6. ' ' → logprob: -6.775873184204102
    7. ' given' → logprob: -7.150873184204102
    8. '(' → logprob: -8.525873184204102
    9. '0' → logprob: -9.275873184204102
    10. '5' → logprob: -9.650873184204102

Token 965: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6846553683280945
    2. '<|end|>' → logprob: -1.9346554279327393
    3. '+' → logprob: -2.0596554279327393
    4. '   ' → logprob: -2.3096554279327393
    5. '
' → logprob: -2.8096554279327393
    6. ' for' → logprob: -3.3096554279327393
    7. '<|end|>' → logprob: -4.93465518951416
    8. ',' → logprob: -4.93465518951416
    9. '=' → logprob: -5.93465518951416
    10. ' +' → logprob: -5.93465518951416

Token 966: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4854665994644165
    2. '   ' → logprob: -1.6104665994644165
    3. '=' → logprob: -1.7354665994644165
    4. ',' → logprob: -1.8604665994644165
    5. ' =' → logprob: -3.110466480255127
    6. '+=' → logprob: -3.360466480255127
    7. '<|end|>' → logprob: -3.360466480255127
    8. '
' → logprob: -3.610466480255127
    9. ' +=' → logprob: -3.610466480255127
    10. 'for' → logprob: -3.985466480255127

Token 967: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6743141412734985
    2. 'while' → logprob: -0.7993141412734985
    3. ' for' → logprob: -4.299314022064209
    4. '   ' → logprob: -4.299314022064209
    5. ' while' → logprob: -4.549314022064209
    6. 'current' → logprob: -7.174314022064209
    7. 'upper' → logprob: -7.174314022064209
    8. 'bit' → logprob: -7.424314022064209
    9. 'edge' → logprob: -8.174314498901367
    10. 'lower' → logprob: -8.299314498901367

Token 968: ' edge' (ID: 11165)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.7880469560623169
    2. 'edge' → logprob: -1.538046956062317
    3. '_' → logprob: -1.913046956062317
    4. 'i' → logprob: -2.4130468368530273
    5. 'node' → logprob: -3.4130468368530273
    6. '_bit' → logprob: -4.538046836853027
    7. ' bit' → logprob: -4.788046836853027
    8. 'current' → logprob: -5.413046836853027
    9. '_edge' → logprob: -5.413046836853027
    10. ' edge' → logprob: -5.538046836853027

Token 969: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.0013301216531544924
    2. '_index' → logprob: -6.7513298988342285
    3. '_offset' → logprob: -10.376330375671387
    4. 'label' → logprob: -10.501330375671387
    5. '_node' → logprob: -10.501330375671387
    6. '_number' → logprob: -10.751330375671387
    7. ' in' → logprob: -11.501330375671387
    8. '_' → logprob: -11.751330375671387
    9. '_num' → logprob: -12.126330375671387
    10. '_idx' → logprob: -12.126330375671387

Token 970: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0029055625200271606
    2. 'in' → logprob: -5.877905368804932
    3. ',' → logprob: -9.87790584564209
    4. '+' → logprob: -11.12790584564209
    5. '   ' → logprob: -11.50290584564209
    6. ' ' → logprob: -12.50290584564209
    7. ' +' → logprob: -12.87790584564209
    8. '=' → logprob: -13.50290584564209
    9. '_' → logprob: -13.50290584564209
    10. '	in' → logprob: -13.56540584564209

Token 971: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005965765565633774
    2. ' range' → logprob: -5.130965709686279
    3. '[' → logprob: -11.005966186523438
    4. '3' → logprob: -12.255966186523438
    5. '(' → logprob: -12.755966186523438
    6. '
' → logprob: -12.755966186523438
    7. '(range' → logprob: -12.880966186523438
    8. '2' → logprob: -13.255966186523438
    9. ' ' → logprob: -14.005966186523438
    10. '	range' → logprob: -14.005966186523438

Token 972: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010617509484291077
    2. '3' → logprob: -4.760617733001709
    3. '4' → logprob: -6.260617733001709
    4. '   ' → logprob: -10.26061725616455
    5. ' (' → logprob: -10.38561725616455
    6. '2' → logprob: -11.63561725616455
    7. '5' → logprob: -12.51061725616455
    8. 'from' → logprob: -12.63561725616455
    9. ',' → logprob: -13.01061725616455
    10. '(
' → logprob: -13.51061725616455

Token 973: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.12784400582313538
    2. '4' → logprob: -2.1278440952301025
    3. '2' → logprob: -7.252843856811523
    4. '1' → logprob: -9.252843856811523
    5. '5' → logprob: -9.252843856811523
    6. ' ' → logprob: -12.565343856811523
    7. '6' → logprob: -12.940343856811523
    8. '   ' → logprob: -13.377843856811523
    9. '0' → logprob: -13.627843856811523
    10. '7' → logprob: -14.002843856811523

Token 974: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037728800089098513
    2. ' ,' → logprob: -8.000377655029297
    3. ',g' → logprob: -10.375377655029297
    4. '   ' → logprob: -12.250377655029297
    5. '3' → logprob: -13.500377655029297
    6. 'g' → logprob: -13.625377655029297
    7. '2' → logprob: -14.375377655029297
    8. ' +' → logprob: -15.000377655029297
    9. ' ' → logprob: -15.000377655029297
    10. '+' → logprob: -15.125377655029297

Token 975: ' given' (ID: 4335)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.005235648714005947
    2. ' given' → logprob: -5.25523567199707
    3. '   ' → logprob: -14.38023567199707
    4. '1' → logprob: -14.63023567199707
    5. 'give' → logprob: -15.50523567199707
    6. '_given' → logprob: -16.00523567199707
    7. '3' → logprob: -16.13023567199707
    8. 'Given' → logprob: -16.25523567199707
    9. '2' → logprob: -17.13023567199707
    10. 'giv' → logprob: -17.38023567199707

Token 976: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.00012987985974177718
    2. 'integer' → logprob: -9.250129699707031
    3. '_label' → logprob: -11.375129699707031
    4. 'Integer' → logprob: -11.750129699707031
    5. '_of' → logprob: -12.375129699707031
    6. '_in' → logprob: -13.000129699707031
    7. '_INTEGER' → logprob: -13.250129699707031
    8. '_Integer' → logprob: -13.875129699707031
    9. '
' → logprob: -14.000129699707031
    10. '_given' → logprob: -14.625129699707031

Token 977: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.412652850151062
    2. ' +' → logprob: -1.287652850151062
    3. '):' → logprob: -3.1626529693603516
    4. '):
' → logprob: -4.412652969360352
    5. ',' → logprob: -5.037652969360352
    6. '   ' → logprob: -7.537652969360352
    7. '-' → logprob: -8.287652969360352
    8. '//' → logprob: -8.912652969360352
    9. ' //' → logprob: -9.412652969360352
    10. ' ,' → logprob: -9.537652969360352

Token 978: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009720315225422382
    2. '3' → logprob: -4.759720325469971
    3. '1' → logprob: -6.884720325469971
    4. '4' → logprob: -10.134719848632812
    5. ' ' → logprob: -10.384719848632812
    6. '6' → logprob: -12.634719848632812
    7. '   ' → logprob: -12.884719848632812
    8. '=' → logprob: -13.884719848632812
    9. '5' → logprob: -14.509719848632812
    10. '```' → logprob: -15.009719848632812

Token 979: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0037383255548775196
    2. '3' → logprob: -5.7537384033203125
    3. '1' → logprob: -8.128738403320312
    4. '4' → logprob: -8.378738403320312
    5. ' ' → logprob: -10.753738403320312
    6. '6' → logprob: -12.628738403320312
    7. '
' → logprob: -13.316238403320312
    8. '8' → logprob: -13.566238403320312
    9. '   ' → logprob: -13.753738403320312
    10. '5' → logprob: -14.128738403320312

Token 980: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6426423788070679
    2. '+' → logprob: -0.7676423788070679
    3. '):' → logprob: -5.392642498016357
    4. '):
' → logprob: -5.767642498016357
    5. '*' → logprob: -6.767642498016357
    6. ',' → logprob: -7.892642498016357
    7. ' *' → logprob: -8.3926420211792
    8. '-' → logprob: -8.6426420211792
    9. ' ):' → logprob: -9.5176420211792
    10. ' ' → logprob: -9.8926420211792

Token 981: ' given' (ID: 4335)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18421049416065216
    2. '2' → logprob: -1.8092105388641357
    3. ' ' → logprob: -5.684210300445557
    4. '3' → logprob: -7.184210300445557
    5. '(' → logprob: -8.809210777282715
    6. '+' → logprob: -9.809210777282715
    7. '0' → logprob: -10.434210777282715
    8. '   ' → logprob: -10.934210777282715
    9. ' (' → logprob: -11.309210777282715
    10. '  ' → logprob: -12.246710777282715

Token 982: '_integer' (ID: 82911)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0713391304016113
    2. '_int' → logprob: -1.1963391304016113
    3. '2' → logprob: -1.5713391304016113
    4. 'int' → logprob: -1.9463391304016113
    5. '4' → logprob: -6.446339130401611
    6. '0' → logprob: -6.696339130401611
    7. '_' → logprob: -6.946339130401611
    8. 'Int' → logprob: -8.446338653564453
    9. ' ' → logprob: -8.821338653564453
    10. '3' → logprob: -9.571338653564453

Token 983: ' %' (ID: 1851)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0074377059936523
    2. '+' → logprob: -1.2574377059936523
    3. ' +' → logprob: -1.5074377059936523
    4. '):
' → logprob: -2.2574377059936523
    5. ',' → logprob: -4.632437705993652
    6. ' -' → logprob: -5.007437705993652
    7. '-' → logprob: -5.382437705993652
    8. '//' → logprob: -6.882437705993652
    9. '   ' → logprob: -7.132437705993652
    10. ' ):' → logprob: -7.632437705993652

Token 984: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012347568990662694
    2. '1' → logprob: -7.126234531402588
    3. '3' → logprob: -8.001235008239746
    4. 'given' → logprob: -10.126235008239746
    5. '(g' → logprob: -11.126235008239746
    6. '4' → logprob: -11.501235008239746
    7. '(' → logprob: -11.501235008239746
    8. ' ' → logprob: -11.626235008239746
    9. '0' → logprob: -12.626235008239746
    10. '7' → logprob: -13.876235008239746

Token 985: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013953536108601838
    2. '3' → logprob: -9.250139236450195
    3. '1' → logprob: -10.875139236450195
    4. ' ' → logprob: -11.125139236450195
    5. '4' → logprob: -12.625139236450195
    6. '0' → logprob: -12.625139236450195
    7. '```' → logprob: -14.000139236450195
    8. '   ' → logprob: -14.875139236450195
    9. '6' → logprob: -14.937639236450195
    10. '(' → logprob: -15.125139236450195

Token 986: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3299371600151062
    2. ' +' → logprob: -1.704937219619751
    3. '):
' → logprob: -2.954937219619751
    4. '):' → logprob: -3.079937219619751
    5. '   ' → logprob: -7.454936981201172
    6. '1' → logprob: -9.079936981201172
    7. ' ):
' → logprob: -9.329936981201172
    8. ':' → logprob: -9.579936981201172
    9. ',' → logprob: -9.954936981201172
    10. ' ):' → logprob: -10.079936981201172

Token 987: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07977414131164551
    2. ':' → logprob: -2.5797741413116455
    3. ':
' → logprob: -7.829773902893066
    4. ',' → logprob: -8.954773902893066
    5. '<|end|>' → logprob: -8.954773902893066
    6. '       ' → logprob: -10.079773902893066
    7. '):
' → logprob: -10.204773902893066
    8. ' :' → logprob: -10.454773902893066
    9. ')' → logprob: -10.954773902893066
    10. '):' → logprob: -11.079773902893066

Token 988: ' edge' (ID: 11165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14626020193099976
    2. ' edge' → logprob: -2.0212602615356445
    3. ' if' → logprob: -6.7712602615356445
    4. 'edge' (adapté à ' edge') → logprob: -7.1462602615356445
    5. ' upper' → logprob: -7.2712602615356445
    6. ' lower' → logprob: -8.021260261535645
    7. '    ' → logprob: -8.771260261535645
    8. '       ' → logprob: -9.021260261535645
    9. ' for' → logprob: -9.646260261535645
    10. '```' → logprob: -9.771260261535645

Token 989: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00013274075172375888
    2. '_label' → logprob: -9.50013256072998
    3. 'list' → logprob: -10.37513256072998
    4. '_key' → logprob: -11.62513256072998
    5. '1' → logprob: -12.37513256072998
    6. '=' → logprob: -12.75013256072998
    7. ' =' → logprob: -12.75013256072998
    8. 'List' → logprob: -13.37513256072998
    9. 's' → logprob: -14.00013256072998
    10. '   ' → logprob: -14.62513256072998

Token 990: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.650518920039758e-06
    2. '.' → logprob: -12.750003814697266
    3. 'append' → logprob: -14.500003814697266
    4. '.extend' → logprob: -15.500003814697266
    5. '.app' → logprob: -17.250003814697266
    6. '.Append' → logprob: -18.875003814697266
    7. '.pop' → logprob: -19.375003814697266
    8. ' .' → logprob: -19.500003814697266
    9. '.ap' → logprob: -19.875003814697266
    10. 'Append' → logprob: -20.000003814697266

Token 991: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03820088878273964
    2. '(' → logprob: -3.288200855255127
    3. '   ' → logprob: -9.788201332092285
    4. '(lower' → logprob: -9.913201332092285
    5. '(edge' → logprob: -10.538201332092285
    6. '(
' → logprob: -10.663201332092285
    7. ' (' → logprob: -14.163201332092285
    8. '(l' → logprob: -14.788201332092285
    9. ' ' → logprob: -14.913201332092285
    10. ' ((' → logprob: -15.163201332092285

Token 992: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.3547968864440918
    2. 'edge' → logprob: -1.8547968864440918
    3. 'lower' → logprob: -2.229796886444092
    4. 'given' → logprob: -4.104796886444092
    5. '2' → logprob: -5.354796886444092
    6. ' upper' → logprob: -5.604796886444092
    7. ' edge' → logprob: -6.229796886444092
    8. '   ' → logprob: -6.479796886444092
    9. '1' → logprob: -6.729796886444092
    10. '(' → logprob: -6.979796886444092

Token 993: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.018172185868024826
    2. '_label' → logprob: -4.018172264099121
    3. 'node' → logprob: -12.018172264099121
    4. '_list' → logprob: -12.393172264099121
    5. '_n' → logprob: -12.518172264099121
    6. 'label' → logprob: -12.893172264099121
    7. '+' → logprob: -13.643172264099121
    8. '_' → logprob: -14.018172264099121
    9. '_edge' → logprob: -14.518172264099121
    10. '
' → logprob: -14.893172264099121

Token 994: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3972841501235962
    2. '+' → logprob: -1.3972841501235962
    3. ' +' → logprob: -2.5222840309143066
    4. ' ,' → logprob: -8.397284507751465
    5. '   ' → logprob: -10.272284507751465
    6. '+,' → logprob: -11.022284507751465
    7. ',
' → logprob: -11.272284507751465
    8. ' ' → logprob: -12.272284507751465
    9. '```' → logprob: -12.772284507751465
    10. '  ' → logprob: -13.522284507751465

Token 995: ' ' (ID: 220)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.44432809948921204
    2. 'upper' → logprob: -1.4443280696868896
    3. ' edge' → logprob: -2.6943280696868896
    4. 'lower' → logprob: -3.8193280696868896
    5. ' upper' → logprob: -4.069328308105469
    6. '2' → logprob: -4.819328308105469
    7. 'given' → logprob: -5.694328308105469
    8. ' given' → logprob: -6.569328308105469
    9. ' lower' → logprob: -6.944328308105469
    10. '   ' → logprob: -7.819328308105469

Token 996: '2' (ID: 17)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.07779821753501892
    2. 'upper' → logprob: -2.9527981281280518
    3. 'lower' → logprob: -4.702798366546631
    4. ' edge' → logprob: -4.827798366546631
    5. 'given' → logprob: -5.702798366546631
    6. '2' → logprob: -6.702798366546631
    7. ' upper' → logprob: -7.827798366546631
    8. ' given' → logprob: -8.827797889709473
    9. '(edge' → logprob: -8.827797889709473
    10. ' lower' → logprob: -10.077797889709473

Token 997: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.22555135190486908
    2. ' *' → logprob: -1.6005513668060303
    3. ' +' → logprob: -9.97555160522461
    4. '+' → logprob: -9.97555160522461
    5. ',' → logprob: -10.22555160522461
    6. '       ' → logprob: -13.10055160522461
    7. ' ' → logprob: -13.10055160522461
    8. '   ' → logprob: -13.72555160522461
    9. '         ' → logprob: -14.22555160522461
    10. '           ' → logprob: -14.60055160522461

Token 998: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.002841133624315262
    2. ' edge' → logprob: -5.877840995788574
    3. '(edge' → logprob: -10.877840995788574
    4. '=edge' → logprob: -11.127840995788574
    5. 'lower' → logprob: -14.377840995788574
    6. '```' → logprob: -15.252840995788574
    7. 'given' → logprob: -15.377840995788574
    8. 'upper' → logprob: -15.627840995788574
    9. '`' → logprob: -15.877840995788574
    10. '_edge' → logprob: -16.00284194946289

Token 999: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -4.4894986785948277e-05
    2. 'label' → logprob: -10.125044822692871
    3. '_list' → logprob: -12.500044822692871
    4. '_labels' → logprob: -15.750044822692871
    5. '<label' → logprob: -16.000045776367188
    6. '_' → logprob: -16.375045776367188
    7. 'Label' → logprob: -16.500045776367188
    8. '+' → logprob: -16.750045776367188
    9. '_lower' → logprob: -17.000045776367188
    10. '_LABEL' → logprob: -17.000045776367188

Token 1000: '))
' (ID: 2210)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.593919575214386
    2. '))' → logprob: -1.5939195156097412
    3. '))
' → logprob: -2.093919515609741
    4. ' -' → logprob: -2.218919515609741
    5. '+' → logprob: -4.59391975402832
    6. ' +' → logprob: -6.84391975402832
    7. '   ' → logprob: -6.84391975402832
    8. '))
' → logprob: -8.59391975402832
    9. ' ))
' → logprob: -9.21891975402832
    10. ' ))' → logprob: -9.46891975402832

Token 1001: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09505545347929001
    2. ')' → logprob: -3.220055341720581
    3. '       ' → logprob: -4.09505558013916
    4. '<|end|>' → logprob: -4.09505558013916
    5. ',' → logprob: -5.59505558013916
    6. ')
' → logprob: -5.72005558013916
    7. '
' → logprob: -6.34505558013916
    8. '[' → logprob: -6.59505558013916
    9. '```' → logprob: -6.84505558013916
    10. '.upper' → logprob: -7.09505558013916

Token 1002: ' edge' (ID: 11165)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.8332551717758179
    2. '       ' → logprob: -1.4582551717758179
    3. '   ' → logprob: -1.7082551717758179
    4. 'lower' → logprob: -2.3332552909851074
    5. 'edge' (adapté à ' edge') → logprob: -2.9582552909851074
    6. ' upper' → logprob: -6.833255290985107
    7. ' edge' → logprob: -7.333255290985107
    8. ' lower' → logprob: -7.583255290985107
    9. ' ' → logprob: -9.20825481414795
    10. '  ' → logprob: -10.02075481414795

Token 1003: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.776898251497187e-05
    2. 'list' → logprob: -10.3750581741333
    3. 'List' → logprob: -10.6250581741333
    4. '.append' → logprob: -14.0000581741333
    5. '_label' → logprob: -14.0000581741333
    6. '   ' → logprob: -15.8750581741333
    7. '[' → logprob: -16.375057220458984
    8. '       ' → logprob: -17.000057220458984
    9. '_LIST' → logprob: -17.250057220458984
    10. '```' → logprob: -17.250057220458984

Token 1004: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.024604277219623e-05
    2. '.' → logprob: -11.000040054321289
    3. '.extend' → logprob: -11.250040054321289
    4. 'append' → logprob: -12.375040054321289
    5. '.pop' → logprob: -12.750040054321289
    6. '           ' → logprob: -13.875040054321289
    7. '[-' → logprob: -14.000040054321289
    8. ' .' → logprob: -14.250040054321289
    9. '```' → logprob: -15.500040054321289
    10. '.app' → logprob: -15.500040054321289

Token 1005: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0030995234847068787
    2. '(lower' → logprob: -6.12809944152832
    3. '(' → logprob: -7.00309944152832
    4. '   ' → logprob: -13.00309944152832
    5. '(low' → logprob: -14.37809944152832
    6. ' (' → logprob: -14.50309944152832
    7. '(
' → logprob: -14.62809944152832
    8. ' ((' → logprob: -15.12809944152832
    9. '(l' → logprob: -15.50309944152832
    10. '=(' → logprob: -16.25309944152832

Token 1006: 'lower' (ID: 30330)
  Prédit: 'lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.24247539043426514
    2. '2' → logprob: -1.7424753904342651
    3. 'upper' → logprob: -3.8674755096435547
    4. '(' → logprob: -4.617475509643555
    5. 'edge' → logprob: -5.742475509643555
    6. '(lower' → logprob: -5.742475509643555
    7. '1' → logprob: -6.367475509643555
    8. '(edge' → logprob: -7.742475509643555
    9. 'given' → logprob: -8.367475509643555
    10. '3' → logprob: -8.867475509643555

Token 1007: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.016081295907497406
    2. '_label' → logprob: -4.1410813331604
    3. '_' → logprob: -11.266080856323242
    4. ')' → logprob: -12.141080856323242
    5. '_list' → logprob: -12.141080856323242
    6. ')_' → logprob: -12.266080856323242
    7. ' _' → logprob: -12.391080856323242
    8. '_token' → logprob: -12.891080856323242
    9. 'node' → logprob: -13.141080856323242
    10. '_user' → logprob: -13.391080856323242

Token 1008: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004183583427220583
    2. '+' → logprob: -6.504183769226074
    3. ' +' → logprob: -6.504183769226074
    4. ' ,' → logprob: -7.004183769226074
    5. '   ' → logprob: -8.754183769226074
    6. '-' → logprob: -10.004183769226074
    7. '+,' → logprob: -11.129183769226074
    8. ' -' → logprob: -11.254183769226074
    9. ',
' → logprob: -11.379183769226074
    10. '       ' → logprob: -12.129183769226074

Token 1009: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04018452763557434
    2. '(' → logprob: -3.915184497833252
    3. ' ' → logprob: -4.165184497833252
    4. '1' → logprob: -6.915184497833252
    5. 'lower' → logprob: -6.915184497833252
    6. ' (' → logprob: -7.165184497833252
    7. '3' → logprob: -8.54018497467041
    8. '   ' → logprob: -8.79018497467041
    9. 'upper' → logprob: -9.29018497467041
    10. ' lower' → logprob: -9.41518497467041

Token 1010: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.017553789541125298
    2. 'given' → logprob: -4.892553806304932
    3. '(' → logprob: -5.142553806304932
    4. ' ' → logprob: -6.267553806304932
    5. '1' → logprob: -7.392553806304932
    6. '3' → logprob: -7.642553806304932
    7. ' given' → logprob: -8.017553329467773
    8. 'edge' → logprob: -8.392553329467773
    9. 'lower' → logprob: -8.892553329467773
    10. '   ' → logprob: -9.455053329467773

Token 1011: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07808338105678558
    2. 'edge' → logprob: -3.0780832767486572
    3. ' *' → logprob: -3.5780832767486572
    4. ' edge' → logprob: -7.328083515167236
    5. '_edge' → logprob: -8.203083038330078
    6. '=edge' → logprob: -8.828083038330078
    7. '(edge' → logprob: -9.953083038330078
    8. ' ' → logprob: -12.828083038330078
    9. '*(' → logprob: -13.328083038330078
    10. 'label' → logprob: -13.578083038330078

Token 1012: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0010189944878220558
    2. ' edge' → logprob: -7.37601900100708
    3. '(edge' → logprob: -7.87601900100708
    4. 'given' → logprob: -12.501018524169922
    5. 'upper' → logprob: -12.876018524169922
    6. 'lower' → logprob: -13.126018524169922
    7. '(' → logprob: -13.251018524169922
    8. ' (' → logprob: -14.001018524169922
    9. '=edge' → logprob: -14.876018524169922
    10. '```' → logprob: -15.626018524169922

Token 1013: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.006401292514055967
    2. 'Label' → logprob: -5.256401062011719
    3. 'label' → logprob: -6.756401062011719
    4. 'edge' → logprob: -13.631401062011719
    5. '_Label' → logprob: -14.756401062011719
    6. '```' → logprob: -14.756401062011719
    7. '_LABEL' → logprob: -15.381401062011719
    8. '<label' → logprob: -15.631401062011719
    9. '_list' → logprob: -15.756401062011719
    10. '...' → logprob: -15.756401062011719

Token 1014: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4097265899181366
    2. '-' → logprob: -1.784726619720459
    3. ' +' → logprob: -2.534726619720459
    4. ' -' → logprob: -3.034726619720459
    5. '))' → logprob: -3.659726619720459
    6. '))
' → logprob: -4.284726619720459
    7. '   ' → logprob: -6.784726619720459
    8. ' ))
' → logprob: -9.4097261428833
    9. ' ))' → logprob: -9.7847261428833
    10. '       ' → logprob: -9.9097261428833

Token 1015: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31411227583885193
    2. '0' → logprob: -1.4391123056411743
    3. ' ' → logprob: -3.4391121864318848
    4. '2' → logprob: -8.939112663269043
    5. 'edge' → logprob: -9.814112663269043
    6. 'upper' → logprob: -10.314112663269043
    7. 'lower' → logprob: -10.439112663269043
    8. ' upper' → logprob: -10.814112663269043
    9. ' edge' → logprob: -11.314112663269043
    10. '"' → logprob: -11.439112663269043

Token 1016: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009952988475561142
    2. '0' → logprob: -4.634953022003174
    3. ' ' → logprob: -9.384952545166016
    4. '2' → logprob: -9.884952545166016
    5. 'edge' → logprob: -10.759952545166016
    6. 'upper' → logprob: -10.759952545166016
    7. 'lower' → logprob: -12.009952545166016
    8. '-' → logprob: -12.134952545166016
    9. '3' → logprob: -12.884952545166016
    10. '   ' → logprob: -14.134952545166016

Token 1017: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029818300157785416
    2. ')
' → logprob: -3.529818296432495
    3. '))' → logprob: -10.154818534851074
    4. '       ' → logprob: -11.029818534851074
    5. '))
' → logprob: -12.029818534851074
    6. '   ' → logprob: -12.779818534851074
    7. ')
' → logprob: -13.904818534851074
    8. ' )' → logprob: -14.904818534851074
    9. ')

' → logprob: -15.029818534851074
    10. ')\' → logprob: -15.154818534851074

Token 1018: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16566503047943115
    2. '   ' → logprob: -2.0406651496887207
    3. '
' → logprob: -4.165665149688721
    4. '\n' → logprob: -6.540665149688721
    5. '<|end|>' → logprob: -6.665665149688721
    6. '	' → logprob: -7.290665149688721
    7. '\' → logprob: -7.415665149688721
    8. '        
' → logprob: -7.790665149688721
    9. '[' → logprob: -7.915665149688721
    10. ' ' → logprob: -7.915665149688721

Token 1019: ' edge' (ID: 11165)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.12950783967971802
    2. '   ' → logprob: -2.1295077800750732
    3. ' upper' → logprob: -6.379508018493652
    4. 'lower' → logprob: -7.129508018493652
    5. '       ' → logprob: -9.754508018493652
    6. '	' → logprob: -11.629508018493652
    7. '
' → logprob: -12.504508018493652
    8. '_upper' → logprob: -13.129508018493652
    9. '.upper' → logprob: -13.379508018493652
    10. '   ' → logprob: -13.629508018493652

Token 1020: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.004360809922218323
    2. '_label' → logprob: -5.504360675811768
    3. 'List' → logprob: -8.254361152648926
    4. '_labels' → logprob: -11.379361152648926
    5. 'Label' → logprob: -12.254361152648926
    6. 'list' → logprob: -12.754361152648926
    7. '_' → logprob: -14.879361152648926
    8. 'label' → logprob: -14.879361152648926
    9. '   ' → logprob: -15.129361152648926
    10. 's' → logprob: -15.754361152648926

Token 1021: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036383312195539474
    2. ' =' → logprob: -3.6613833904266357
    3. '+=' → logprob: -4.661383152008057
    4. ' +=' → logprob: -7.536383152008057
    5. '.=' → logprob: -11.411383628845215
    6. '_' → logprob: -11.786383628845215
    7. '=
' → logprob: -12.036383628845215
    8. '   ' → logprob: -12.661383628845215
    9. '_=' → logprob: -12.661383628845215
    10. '*=' → logprob: -13.411383628845215

Token 1022: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0006454797694459558
    2. '(' → logprob: -7.500645637512207
    3. '(lower' → logprob: -9.375645637512207
    4. '(((' → logprob: -12.750645637512207
    5. ' ((' → logprob: -13.375645637512207
    6. '(edge' → logprob: -13.625645637512207
    7. '(
' → logprob: -15.125645637512207
    8. '   ' → logprob: -15.125645637512207
    9. '(('' → logprob: -15.125645637512207
    10. '(("' → logprob: -15.375645637512207

Token 1023: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6667951345443726
    2. 'upper' → logprob: -1.6667951345443726
    3. 'edge' → logprob: -1.6667951345443726
    4. 'lower' → logprob: -2.416795253753662
    5. '(' → logprob: -4.291795253753662
    6. '(edge' → logprob: -6.041795253753662
    7. '(lower' → logprob: -6.791795253753662
    8. ' ' → logprob: -7.541795253753662
    9. ' edge' → logprob: -7.541795253753662
    10. '1' → logprob: -8.166794776916504

Token 1024: ' *' (ID: 425)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0051653278060257435
    2. ' edge' → logprob: -5.505165100097656
    3. '*' → logprob: -7.005165100097656
    4. ' *' → logprob: -9.255165100097656
    5. '=edge' → logprob: -10.130165100097656
    6. '(edge' → logprob: -10.255165100097656
    7. '   ' → logprob: -13.255165100097656
    8. 'upper' → logprob: -13.380165100097656
    9. '_edge' → logprob: -13.630165100097656
    10. 'egde' → logprob: -14.380165100097656

Token 1025: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0013547601411119103
    2. ' edge' → logprob: -6.626354694366455
    3. 'upper' → logprob: -10.626355171203613
    4. '(edge' → logprob: -13.126355171203613
    5. 'lower' → logprob: -13.626355171203613
    6. ' ' → logprob: -14.501355171203613
    7. '=edge' → logprob: -15.251355171203613
    8. ' upper' → logprob: -15.626355171203613
    9. '```' → logprob: -16.376354217529297
    10. '   ' → logprob: -16.876354217529297

Token 1026: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.0549260638654232
    2. 'label' → logprob: -2.9299261569976807
    3. 'Label' → logprob: -10.679925918579102
    4. '_list' → logprob: -11.304925918579102
    5. '<label' → logprob: -13.554925918579102
    6. '-label' → logprob: -13.679925918579102
    7. 'list' → logprob: -13.679925918579102
    8. ' label' → logprob: -13.929925918579102
    9. ''label' → logprob: -14.054925918579102
    10. '_LABEL' → logprob: -14.054925918579102

Token 1027: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06117913872003555
    2. ',' → logprob: -3.4361791610717773
    3. ' -' → logprob: -3.6861791610717773
    4. '+' → logprob: -6.436179161071777
    5. '   ' → logprob: -8.436179161071777
    6. ')' → logprob: -9.561179161071777
    7. ' ,' → logprob: -9.936179161071777
    8. '```' → logprob: -10.061179161071777
    9. ' ' → logprob: -10.186179161071777
    10. ' +' → logprob: -10.311179161071777

Token 1028: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09984727203845978
    2. ' ' → logprob: -2.7248473167419434
    3. '1' → logprob: -4.849847316741943
    4. '(' → logprob: -5.099847316741943
    5. 'upper' → logprob: -5.224847316741943
    6. 'lower' → logprob: -5.599847316741943
    7. 'edge' → logprob: -5.849847316741943
    8. ' upper' → logprob: -7.099847316741943
    9. '   ' → logprob: -7.224847316741943
    10. ' edge' → logprob: -7.724847316741943

Token 1029: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1999441683292389
    2. 'given' → logprob: -2.824944257736206
    3. 'edge' → logprob: -3.199944257736206
    4. 'upper' → logprob: -3.574944257736206
    5. '1' → logprob: -3.824944257736206
    6. '3' → logprob: -4.199944019317627
    7. 'lower' → logprob: -4.824944019317627
    8. '(' → logprob: -5.449944019317627
    9. ' ' → logprob: -6.574944019317627
    10. '   ' → logprob: -7.449944019317627

Token 1030: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06623370200395584
    2. 'edge' → logprob: -3.1912336349487305
    3. ' *' → logprob: -3.8162336349487305
    4. ' edge' → logprob: -7.5662336349487305
    5. '(edge' → logprob: -8.56623363494873
    6. '=edge' → logprob: -8.81623363494873
    7. ' ' → logprob: -10.56623363494873
    8. '**' → logprob: -10.56623363494873
    9. ' ' → logprob: -11.31623363494873
    10. '```' → logprob: -11.44123363494873

Token 1031: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.01528093684464693
    2. ' edge' → logprob: -4.265280723571777
    3. '(edge' → logprob: -6.890280723571777
    4. 'upper' → logprob: -10.640280723571777
    5. 'given' → logprob: -11.390280723571777
    6. '(' → logprob: -11.390280723571777
    7. 'lower' → logprob: -11.515280723571777
    8. ' (' → logprob: -11.890280723571777
    9. ' ' → logprob: -12.015280723571777
    10. '   ' → logprob: -12.140280723571777

Token 1032: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.00046165118692442775
    2. 'label' → logprob: -8.12546157836914
    3. 'Label' → logprob: -8.87546157836914
    4. 'edge' → logprob: -10.75046157836914
    5. '_Label' → logprob: -13.37546157836914
    6. '   ' → logprob: -14.75046157836914
    7. '_LABEL' → logprob: -14.87546157836914
    8. '_edge' → logprob: -14.87546157836914
    9. ' label' → logprob: -15.37546157836914
    10. '           ' → logprob: -15.50046157836914

Token 1033: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3187718987464905
    2. '-' → logprob: -1.3187718391418457
    3. ' +' → logprob: -5.693771839141846
    4. ' -' → logprob: -6.193771839141846
    5. '   ' → logprob: -9.818772315979004
    6. ')' → logprob: -11.068772315979004
    7. '1' → logprob: -12.443772315979004
    8. ' ' → logprob: -12.568772315979004
    9. '```' → logprob: -12.943772315979004
    10. '+
' → logprob: -13.443772315979004

Token 1034: ' given' (ID: 4335)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011998742120340466
    2. ' ' → logprob: -6.876199722290039
    3. '0' → logprob: -8.876199722290039
    4. '2' → logprob: -10.751199722290039
    5. '   ' → logprob: -13.001199722290039
    6. '  ' → logprob: -13.563699722290039
    7. '```' → logprob: -14.438699722290039
    8. ')' → logprob: -14.563699722290039
    9. '    ' → logprob: -15.438699722290039
    10. '	' → logprob: -15.626199722290039

Token 1035: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.11705473065376282
    2. '1' → logprob: -2.3670547008514404
    3. '_label' → logprob: -4.7420549392700195
    4. 'integer' → logprob: -5.1170549392700195
    5. 'label' → logprob: -7.3670549392700195
    6. ' ' → logprob: -7.3670549392700195
    7. '0' → logprob: -8.24205493927002
    8. '2' → logprob: -8.99205493927002
    9. 'Integer' → logprob: -9.11705493927002
    10. '```' → logprob: -10.49205493927002

Token 1036: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5659571886062622
    2. '))' → logprob: -1.0659571886062622
    3. '+' → logprob: -3.5659570693969727
    4. ')' → logprob: -3.5659570693969727
    5. ' -' → logprob: -3.9409570693969727
    6. '))
' → logprob: -4.690957069396973
    7. ' +' → logprob: -7.315957069396973
    8. '   ' → logprob: -7.565957069396973
    9. ')
' → logprob: -7.565957069396973
    10. '```' → logprob: -8.190957069396973

Token 1037: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13833995163440704
    2. '0' → logprob: -2.2633399963378906
    3. 'edge' → logprob: -3.8883399963378906
    4. 'lower' → logprob: -6.388339996337891
    5. ' ' → logprob: -6.513339996337891
    6. '2' → logprob: -7.513339996337891
    7. '(' → logprob: -8.26333999633789
    8. '(edge' → logprob: -8.51333999633789
    9. 'upper' → logprob: -9.01333999633789
    10. ' edge' → logprob: -9.26333999633789

Token 1038: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02666391059756279
    2. '0' → logprob: -3.6516640186309814
    3. '2' → logprob: -8.776663780212402
    4. ' ' → logprob: -9.151663780212402
    5. 'edge' → logprob: -9.901663780212402
    6. '-' → logprob: -10.526663780212402
    7. '(' → logprob: -11.901663780212402
    8. 'lower' → logprob: -12.151663780212402
    9. '   ' → logprob: -12.526663780212402
    10. '(edge' → logprob: -13.089163780212402

Token 1039: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32132241129875183
    2. ')
' → logprob: -2.196322441101074
    3. '))
' → logprob: -2.446322441101074
    4. '))' → logprob: -2.571322441101074
    5. '       ' → logprob: -7.946322441101074
    6. '   ' → logprob: -9.071322441101074
    7. ')))' → logprob: -11.071322441101074
    8. '           ' → logprob: -11.571322441101074
    9. ')
' → logprob: -11.946322441101074
    10. ')')
' → logprob: -12.071322441101074

Token 1040: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002249580342322588
    2. '   ' → logprob: -6.877249717712402
    3. '<|end|>' → logprob: -7.627249717712402
    4. '```' → logprob: -8.002249717712402
    5. '[' → logprob: -9.502249717712402
    6. ')' → logprob: -9.877249717712402
    7. '           ' → logprob: -10.002249717712402
    8. '
' → logprob: -10.127249717712402
    9. 'lower' → logprob: -10.377249717712402
    10. '        
' → logprob: -10.502249717712402

Token 1041: ' edge' (ID: 11165)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4225390553474426
    2. 'edge' (adapté à ' edge') → logprob: -1.2975389957427979
    3. ' edge' → logprob: -3.547538995742798
    4. 'lower' → logprob: -4.047539234161377
    5. '(' → logprob: -4.547539234161377
    6. '```' → logprob: -5.297539234161377
    7. '(edge' → logprob: -5.422539234161377
    8. '(lower' → logprob: -6.422539234161377
    9. ' lower' → logprob: -6.922539234161377
    10. 'upper' → logprob: -6.922539234161377

Token 1042: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.014212633483111858
    2. '_label' → logprob: -4.264212608337402
    3. 'List' → logprob: -11.139212608337402
    4. '_labels' → logprob: -11.139212608337402
    5. 'list' → logprob: -12.014212608337402
    6. 'label' → logprob: -12.139212608337402
    7. '           ' → logprob: -12.639212608337402
    8. '   ' → logprob: -13.889212608337402
    9. 'Label' → logprob: -14.139212608337402
    10. '_LABEL' → logprob: -14.639212608337402

Token 1043: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016885579680092633
    2. '.' → logprob: -9.000168800354004
    3. 'append' → logprob: -10.375168800354004
    4. '           ' → logprob: -12.250168800354004
    5. ' .' → logprob: -12.500168800354004
    6. '.extend' → logprob: -12.500168800354004
    7. '```' → logprob: -14.125168800354004
    8. '          ' → logprob: -15.375168800354004
    9. '       ' → logprob: -15.875168800354004
    10. '.app' → logprob: -15.875168800354004

Token 1044: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0024774393532425165
    2. '(' → logprob: -6.002477645874023
    3. '(
' → logprob: -14.252477645874023
    4. ' (' → logprob: -14.877477645874023
    5. '   ' → logprob: -15.252477645874023
    6. ' ((' → logprob: -15.377477645874023
    7. '       ' → logprob: -15.627477645874023
    8. ' ' → logprob: -17.002477645874023
    9. '  ' → logprob: -18.252477645874023
    10. '=(' → logprob: -18.252477645874023

Token 1045: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1819629669189453
    2. '(' → logprob: -1.8069629669189453
    3. 'lower' → logprob: -6.556962966918945
    4. ' ' → logprob: -8.306962966918945
    5. '(lower' → logprob: -8.556962966918945
    6. '   ' → logprob: -9.056962966918945
    7. '1' → logprob: -9.181962966918945
    8. ' (' → logprob: -10.056962966918945
    9. 'upper' → logprob: -11.494462966918945
    10. '    ' → logprob: -11.619462966918945

Token 1046: ' *' (ID: 425)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.08656816184520721
    2. ' edge' → logprob: -2.5865681171417236
    3. '_edge' → logprob: -5.211568355560303
    4. '*' → logprob: -6.711568355560303
    5. ' *' → logprob: -7.586568355560303
    6. '=edge' → logprob: -8.336567878723145
    7. '(edge' → logprob: -8.461567878723145
    8. ' ' → logprob: -11.711567878723145
    9. '
' → logprob: -12.461567878723145
    10. '_label' → logprob: -13.586567878723145

Token 1047: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.12698301672935486
    2. ' edge' → logprob: -2.1269829273223877
    3. 'lower' → logprob: -10.501982688903809
    4. '(edge' → logprob: -11.126982688903809
    5. 'upper' → logprob: -12.251982688903809
    6. '=edge' → logprob: -12.751982688903809
    7. ' lower' → logprob: -14.001982688903809
    8. ' ' → logprob: -14.376982688903809
    9. ' upper' → logprob: -14.751982688903809
    10. '   ' → logprob: -15.126982688903809

Token 1048: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.00022439735766965896
    2. 'label' → logprob: -8.500224113464355
    3. 'Label' → logprob: -11.250224113464355
    4. 'edge' → logprob: -12.000224113464355
    5. '_Label' → logprob: -14.625224113464355
    6. '_LABEL' → logprob: -14.750224113464355
    7. ''label' → logprob: -15.625224113464355
    8. '_edge' → logprob: -15.750224113464355
    9. '-label' → logprob: -16.375225067138672
    10. '<label' → logprob: -16.500225067138672

Token 1049: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3608998954296112
    2. ',' → logprob: -1.9858999252319336
    3. ' +' → logprob: -2.2358999252319336
    4. '-' → logprob: -2.9858999252319336
    5. ' -' → logprob: -4.860899925231934
    6. ' ,' → logprob: -8.110899925231934
    7. '+,' → logprob: -9.235899925231934
    8. ',
' → logprob: -10.235899925231934
    9. '```' → logprob: -10.235899925231934
    10. ' ' → logprob: -10.360899925231934

Token 1050: ' ' (ID: 220)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.20151565968990326
    2. ' given' → logprob: -1.7015156745910645
    3. '1' → logprob: -9.201515197753906
    4. '_given' → logprob: -14.826515197753906
    5. 'lower' → logprob: -15.076515197753906
    6. '```' → logprob: -15.326515197753906
    7. ' ' → logprob: -15.576515197753906
    8. '2' → logprob: -15.576515197753906
    9. 'give' → logprob: -15.951515197753906
    10. ' lower' → logprob: -16.951515197753906

Token 1051: '1' (ID: 16)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.4553367495536804
    2. '1' → logprob: -1.0803368091583252
    3. ' given' → logprob: -3.705336809158325
    4. 'lower' → logprob: -6.455336570739746
    5. ' ' → logprob: -10.080336570739746
    6. '0' → logprob: -10.330336570739746
    7. '2' → logprob: -11.455336570739746
    8. '
' → logprob: -12.080336570739746
    9. '_given' → logprob: -12.205336570739746
    10. ' lower' → logprob: -12.580336570739746

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.73052782076411e-05
    2. ' ,' → logprob: -9.750067710876465
    3. ',
' → logprob: -11.750067710876465
    4. '```' → logprob: -15.500067710876465
    5. '<|end|>' → logprob: -15.750067710876465
    6. ')' → logprob: -16.37506675720215
    7. '   ' → logprob: -16.37506675720215
    8. '),' → logprob: -16.75006675720215
    9. '',' → logprob: -16.87506675720215
    10. '
' → logprob: -17.00006675720215

Token 1053: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03382400423288345
    2. ' ' → logprob: -3.4088239669799805
    3. ' given' → logprob: -9.90882396697998
    4. '(' → logprob: -10.40882396697998
    5. 'lower' → logprob: -10.90882396697998
    6. '1' → logprob: -11.03382396697998
    7. 'given' → logprob: -11.03382396697998
    8. ' (' → logprob: -11.28382396697998
    9. ' lower' → logprob: -11.53382396697998
    10. '   ' → logprob: -11.65882396697998

Token 1054: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001751818461343646
    2. ' ' → logprob: -6.376751899719238
    3. '1' → logprob: -11.001751899719238
    4. '(' → logprob: -11.501751899719238
    5. 'given' → logprob: -11.501751899719238
    6. ' given' → logprob: -13.001751899719238
    7. ' (' → logprob: -13.251751899719238
    8. '3' → logprob: -13.251751899719238
    9. 'lower' → logprob: -13.251751899719238
    10. '   ' → logprob: -13.501751899719238

Token 1055: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3233376741409302
    2. 'edge' → logprob: -1.6983376741409302
    3. '*' → logprob: -2.5733375549316406
    4. ' edge' → logprob: -4.323337554931641
    5. '_edge' → logprob: -5.823337554931641
    6. '(edge' → logprob: -7.448337554931641
    7. ' ' → logprob: -9.44833755493164
    8. ' _' → logprob: -10.07333755493164
    9. '=edge' → logprob: -10.19833755493164
    10. '_' → logprob: -11.69833755493164

Token 1056: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.007616325747221708
    2. ' edge' → logprob: -4.8826165199279785
    3. '(edge' → logprob: -11.63261604309082
    4. '2' → logprob: -14.75761604309082
    5. '=edge' → logprob: -14.75761604309082
    6. '```' → logprob: -15.38261604309082
    7. '_edge' → logprob: -16.88261604309082
    8. '.edge' → logprob: -17.13261604309082
    9. 'edges' → logprob: -17.38261604309082
    10. '-edge' → logprob: -17.50761604309082

Token 1057: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.009310337714850903
    2. 'label' → logprob: -5.259310245513916
    3. 'edge' → logprob: -5.759310245513916
    4. 'Label' → logprob: -7.009310245513916
    5. '_Label' → logprob: -12.134310722351074
    6. '_LABEL' → logprob: -13.384310722351074
    7. '-label' → logprob: -14.009310722351074
    8. '_edge' → logprob: -14.134310722351074
    9. '(edge' → logprob: -14.509310722351074
    10. ' edge' → logprob: -14.759310722351074

Token 1058: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026388542726635933
    2. ' +' → logprob: -3.651388645172119
    3. '   ' → logprob: -10.776388168334961
    4. ',' → logprob: -11.276388168334961
    5. '```' → logprob: -11.651388168334961
    6. '+
' → logprob: -11.651388168334961
    7. '+,' → logprob: -11.651388168334961
    8. '-' → logprob: -11.776388168334961
    9. ' ' → logprob: -12.151388168334961
    10. ')' → logprob: -13.026388168334961

Token 1059: ' given' (ID: 4335)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.0046459767036139965
    2. ' given' → logprob: -5.379645824432373
    3. '1' → logprob: -10.629646301269531
    4. '2' → logprob: -14.379646301269531
    5. '   ' → logprob: -14.504646301269531
    6. 'lower' → logprob: -15.879646301269531
    7. '```' → logprob: -15.879646301269531
    8. 'upper' → logprob: -16.50464630126953
    9. '
' → logprob: -16.62964630126953
    10. ' ' → logprob: -17.00464630126953

Token 1060: '_integer' (ID: 82911)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.08086413145065308
    2. '_integer' → logprob: -2.830864191055298
    3. ' given' → logprob: -4.830863952636719
    4. 'integer' → logprob: -5.330863952636719
    5. '_given' → logprob: -5.580863952636719
    6. '1' → logprob: -6.330863952636719
    7. '```' → logprob: -8.330863952636719
    8. ' ' → logprob: -9.830863952636719
    9. '   ' → logprob: -11.205863952636719
    10. ' integer' → logprob: -11.830863952636719

Token 1061: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04302293807268143
    2. ' +' → logprob: -3.168022871017456
    3. ')' → logprob: -11.918023109436035
    4. '```' → logprob: -12.418023109436035
    5. '<|end|>' → logprob: -12.793023109436035
    6. '1' → logprob: -13.418023109436035
    7. '_' → logprob: -13.418023109436035
    8. '
' → logprob: -13.418023109436035
    9. ' ' → logprob: -13.668023109436035
    10. '+
' → logprob: -13.793023109436035

Token 1062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16227483749389648
    2. '   ' → logprob: -1.9122748374938965
    3. '```' → logprob: -7.2872748374938965
    4. '[' → logprob: -8.162275314331055
    5. '
' → logprob: -8.412275314331055
    6. '<|end|>' → logprob: -8.537275314331055
    7. '\n' → logprob: -9.662275314331055
    8. '           ' → logprob: -9.787275314331055
    9. '     ' → logprob: -9.787275314331055
    10. '      ' → logprob: -9.912275314331055

Token 1063: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.491150438785553
    2. '   ' → logprob: -0.991150438785553
    3. 'lower' → logprob: -4.616150379180908
    4. '       ' → logprob: -5.241150379180908
    5. ' upper' → logprob: -6.991150379180908
    6. '
' → logprob: -7.741150379180908
    7. '    
' → logprob: -9.241150856018066
    8. '           ' → logprob: -9.616150856018066
    9. '	' → logprob: -9.616150856018066
    10. '    ' → logprob: -10.491150856018066

Token 1064: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0011697487207129598
    2. '_' → logprob: -7.751169681549072
    3. '_nodes' → logprob: -8.25117015838623
    4. ' +=' → logprob: -8.75117015838623
    5. '+=' → logprob: -9.00117015838623
    6. '=' → logprob: -9.75117015838623
    7. ' =' → logprob: -10.62617015838623
    8. '_list' → logprob: -10.62617015838623
    9. '   ' → logprob: -10.87617015838623
    10. '
' → logprob: -11.25117015838623

Token 1065: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6179296374320984
    2. '+=' → logprob: -1.6179296970367432
    3. ' +=' → logprob: -1.9929296970367432
    4. ' =' → logprob: -2.117929697036743
    5. ' ^=' → logprob: -5.242929458618164
    6. ',' → logprob: -7.992929458618164
    7. '   ' → logprob: -8.617929458618164
    8. '^' → logprob: -8.992929458618164
    9. ' <<=' → logprob: -10.367929458618164
    10. ' ' → logprob: -10.867929458618164

Token 1066: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005208851769566536
    2. ' ' → logprob: -6.255208969116211
    3. 'given' → logprob: -6.380208969116211
    4. 'edge' → logprob: -6.880208969116211
    5. ' given' → logprob: -8.505208969116211
    6. '(' → logprob: -9.255208969116211
    7. '   ' → logprob: -9.380208969116211
    8. 'lower' → logprob: -9.505208969116211
    9. ' edge' → logprob: -10.755208969116211
    10. 'upper' → logprob: -11.380208969116211

Token 1067: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005808513145893812
    2. 'given' → logprob: -5.380808353424072
    3. 'edge' → logprob: -7.380808353424072
    4. ' ' → logprob: -8.38080883026123
    5. 'lower' → logprob: -9.50580883026123
    6. '(' → logprob: -9.50580883026123
    7. ' given' → logprob: -10.00580883026123
    8. '   ' → logprob: -10.25580883026123
    9. '3' → logprob: -10.50580883026123
    10. '1' → logprob: -10.88080883026123

Token 1068: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.474652498960495
    2. '*' → logprob: -0.9746525287628174
    3. 'edge' → logprob: -7.599652290344238
    4. '(edge' → logprob: -10.599652290344238
    5. '_edge' → logprob: -10.724652290344238
    6. ' ' → logprob: -11.724652290344238
    7. '=edge' → logprob: -11.724652290344238
    8. '*object' → logprob: -12.849652290344238
    9. ' edge' → logprob: -13.099652290344238
    10. '*(' → logprob: -13.349652290344238

Token 1069: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.001143314759247005
    2. ' edge' → logprob: -6.876143455505371
    3. '(edge' → logprob: -9.126143455505371
    4. 'upper' → logprob: -14.376143455505371
    5. '=edge' → logprob: -15.126143455505371
    6. ' ' → logprob: -15.501143455505371
    7. 'lower' → logprob: -15.501143455505371
    8. '_edge' → logprob: -16.126142501831055
    9. ' (' → logprob: -16.251142501831055
    10. '(' → logprob: -16.751142501831055

Token 1070: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.00015872348740231246
    2. 'label' → logprob: -8.750158309936523
    3. 'Label' → logprob: -16.250158309936523
    4. '_LABEL' → logprob: -18.125158309936523
    5. '<label' → logprob: -18.125158309936523
    6. '_Label' → logprob: -18.125158309936523
    7. '_token' → logprob: -18.500158309936523
    8. ''label' → logprob: -18.500158309936523
    9. '-label' → logprob: -19.375158309936523
    10. '_labels' → logprob: -20.375158309936523

Token 1071: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10144046694040298
    2. '
' → logprob: -2.9764404296875
    3. '<|end|>' → logprob: -3.3514404296875
    4. 'lower' → logprob: -5.4764404296875
    5. ',' → logprob: -6.3514404296875
    6. '       ' → logprob: -6.7264404296875
    7. ' ' → logprob: -6.9764404296875
    8. '+' → logprob: -7.6014404296875
    9. ' lower' → logprob: -8.1014404296875
    10. '(lower' → logprob: -8.2264404296875

Token 1072: ' given' (ID: 4335)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021396053954958916
    2. 'given' → logprob: -3.8963961601257324
    3. ' ' → logprob: -7.896396160125732
    4. ' given' → logprob: -8.271395683288574
    5. '0' → logprob: -8.646395683288574
    6. '2' → logprob: -10.271395683288574
    7. '   ' → logprob: -12.396395683288574
    8. '+' → logprob: -12.896395683288574
    9. 'Given' → logprob: -13.396395683288574
    10. 'give' → logprob: -13.958895683288574

Token 1073: '_integer' (ID: 82911)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0034255622886121273
    2. ' ' → logprob: -5.878425598144531
    3. '0' → logprob: -8.003425598144531
    4. '2' → logprob: -8.753425598144531
    5. '_' → logprob: -10.128425598144531
    6. ' _' → logprob: -10.753425598144531
    7. '3' → logprob: -10.878425598144531
    8. '```' → logprob: -11.128425598144531
    9. '
' → logprob: -12.128425598144531
    10. '5' → logprob: -12.378425598144531

Token 1074: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4267314672470093
    2. '+' → logprob: -1.5517314672470093
    3. ' +' → logprob: -2.176731586456299
    4. '<|end|>' → logprob: -4.301731586456299
    5. '
' → logprob: -5.676731586456299
    6. '       ' → logprob: -6.051731586456299
    7. ' ' → logprob: -6.301731586456299
    8. '  ' → logprob: -8.80173110961914
    9. '    ' → logprob: -8.92673110961914
    10. '    
' → logprob: -9.30173110961914

Token 1075: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.388769103679806e-05
    2. ' ' → logprob: -9.375093460083008
    3. '0' → logprob: -11.875093460083008
    4. '2' → logprob: -13.750093460083008
    5. '```' → logprob: -14.625093460083008
    6. '   ' → logprob: -15.375093460083008
    7. '  ' → logprob: -16.625093460083008
    8. '
' → logprob: -16.875093460083008
    9. '<|end|>' → logprob: -16.875093460083008
    10. '-' → logprob: -16.875093460083008

Token 1076: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.875005722045898
    3. '2' → logprob: -13.250005722045898
    4. '0' → logprob: -14.250005722045898
    5. '3' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.1875057220459
    7. '-' → logprob: -17.3125057220459
    8. '  ' → logprob: -17.6875057220459
    9. '```' → logprob: -18.5625057220459
    10. '
' → logprob: -18.6250057220459

Token 1077: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050362031906843185
    2. '<|end|>' → logprob: -3.6753621101379395
    3. 'lower' → logprob: -4.8003621101379395
    4. '
' → logprob: -4.8003621101379395
    5. '       ' → logprob: -5.6753621101379395
    6. '(lower' → logprob: -6.9253621101379395
    7. '```' → logprob: -7.1753621101379395
    8. ' ' → logprob: -7.3003621101379395
    9. ' lower' → logprob: -7.8003621101379395
    10. ',' → logprob: -8.175361633300781

Token 1078: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5318859815597534
    2. '   ' → logprob: -0.9068859815597534
    3. 'lower' → logprob: -5.531886100769043
    4. '<|end|>' → logprob: -6.406886100769043
    5. ' ' → logprob: -7.281886100769043
    6. '(lower' → logprob: -7.531886100769043
    7. '
' → logprob: -7.781886100769043
    8. ' lower' → logprob: -8.406886100769043
    9. '	' → logprob: -8.656886100769043
    10. '[' → logprob: -8.781886100769043

Token 1079: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -0.00020735491125378758
    2. ' lower' → logprob: -8.50020694732666
    3. '       ' → logprob: -12.75020694732666
    4. '   ' → logprob: -14.37520694732666
    5. '           ' → logprob: -15.00020694732666
    6. '
' → logprob: -17.000207901000977
    7. '    ' → logprob: -18.125207901000977
    8. '
' → logprob: -18.625207901000977
    9. '.lower' → logprob: -19.000207901000977
    10. '        ' → logprob: -19.250207901000977

Token 1080: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.002847079187631607
    2. '_' → logprob: -6.752847194671631
    3. '_token' → logprob: -7.127847194671631
    4. '_user' → logprob: -7.752847194671631
    5. ' _' → logprob: -8.627846717834473
    6. '=' → logprob: -9.252846717834473
    7. ' =' → logprob: -10.627846717834473
    8. '```' → logprob: -10.752846717834473
    9. '_nodes' → logprob: -11.002846717834473
    10. '_line' → logprob: -11.127846717834473

Token 1081: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326815485954285
    2. ' =' → logprob: -1.3132681846618652
    3. ',' → logprob: -12.313267707824707
    4. ' ' → logprob: -14.188267707824707
    5. ' +=' → logprob: -14.938267707824707
    6. '<|end|>' → logprob: -15.063267707824707
    7. '+=' → logprob: -16.063268661499023
    8. ' ' → logprob: -16.438268661499023
    9. ')' → logprob: -16.563268661499023
    10. '	' → logprob: -16.688268661499023

Token 1082: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002192256273701787
    2. ' ' → logprob: -6.12719202041626
    3. '   ' → logprob: -12.502192497253418
    4. '(' → logprob: -13.752192497253418
    5. '    ' → logprob: -14.627192497253418
    6. '  ' → logprob: -15.127192497253418
    7. '       ' → logprob: -15.189692497253418
    8. '           ' → logprob: -15.627192497253418
    9. '1' → logprob: -15.939692497253418
    10. ' (' → logprob: -16.2521915435791

Token 1083: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003839597338810563
    2. ' ' → logprob: -7.8753838539123535
    3. '(' → logprob: -13.375384330749512
    4. '   ' → logprob: -14.250384330749512
    5. '1' → logprob: -14.875384330749512
    6. '`' → logprob: -15.125384330749512
    7. '```' → logprob: -15.937884330749512
    8. '
' → logprob: -16.062883377075195
    9. '  ' → logprob: -16.125383377075195
    10. ' (' → logprob: -16.500383377075195

Token 1084: ' *' (ID: 425)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.8639319539070129
    2. '*' → logprob: -1.4889318943023682
    3. ' *' → logprob: -1.7389318943023682
    4. '_edge' → logprob: -1.9889318943023682
    5. ' edge' → logprob: -3.238931894302368
    6. '(edge' → logprob: -7.363932132720947
    7. '=edge' → logprob: -8.363931655883789
    8. ' _' → logprob: -8.613931655883789
    9. '_' → logprob: -9.863931655883789
    10. ' ' → logprob: -11.488931655883789

Token 1085: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.029793307185173035
    2. ' edge' → logprob: -3.5297932624816895
    3. '(edge' → logprob: -10.279793739318848
    4. '2' → logprob: -12.029793739318848
    5. ' ' → logprob: -14.529793739318848
    6. '
' → logprob: -14.654793739318848
    7. '=edge' → logprob: -14.654793739318848
    8. ' (' → logprob: -15.404793739318848
    9. '(' → logprob: -15.529793739318848
    10. '```' → logprob: -16.15479278564453

Token 1086: '_label' (ID: 13175)
  Prédit: '_label'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_label' → logprob: -0.0034871045500040054
    2. 'label' → logprob: -5.8784871101379395
    3. 'edge' → logprob: -7.5034871101379395
    4. 'Label' → logprob: -9.253486633300781
    5. '_Label' → logprob: -11.503486633300781
    6. 'ield' → logprob: -12.253486633300781
    7. '<label' → logprob: -12.503486633300781
    8. ''label' → logprob: -12.628486633300781
    9. '_LABEL' → logprob: -12.753486633300781
    10. '-label' → logprob: -12.878486633300781

Token 1087: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.225453719496727
    2. '+' → logprob: -1.6004537343978882
    3. '<|end|>' → logprob: -10.35045337677002
    4. ' ' → logprob: -12.85045337677002
    5. '<|end|>' → logprob: -12.85045337677002
    6. ' ' → logprob: -13.72545337677002
    7. '	' → logprob: -14.85045337677002
    8. '   ' → logprob: -15.22545337677002
    9. ' plus' → logprob: -15.72545337677002
    10. '_' → logprob: -15.78795337677002

Token 1088: ' given' (ID: 4335)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.02324605919420719
    2. ' given' → logprob: -3.7732460498809814
    3. '1' → logprob: -16.02324676513672
    4. '```' → logprob: -16.14824676513672
    5. 'generated' → logprob: -16.39824676513672
    6. '_given' → logprob: -16.52324676513672
    7. 'Given' → logprob: -16.77324676513672
    8. ' ' → logprob: -16.77324676513672
    9. '
' → logprob: -17.27324676513672
    10. 'give' → logprob: -18.02324676513672

Token 1089: '_integer' (ID: 82911)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.04171418026089668
    2. 'integer' → logprob: -3.5417141914367676
    3. ' given' → logprob: -4.666714191436768
    4. '1' → logprob: -6.166714191436768
    5. '_integer' → logprob: -8.79171371459961
    6. '_given' → logprob: -8.79171371459961
    7. ' integer' → logprob: -10.29171371459961
    8. 'generated' → logprob: -10.91671371459961
    9. ' ' → logprob: -11.29171371459961
    10. '```' → logprob: -12.29171371459961

Token 1090: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5761156678199768
    2. ' +' → logprob: -0.8261156678199768
    3. '   ' → logprob: -9.326115608215332
    4. '+
' → logprob: -10.951115608215332
    5. '<|end|>' → logprob: -11.076115608215332
    6. ' +
' → logprob: -11.451115608215332
    7. '1' → logprob: -11.701115608215332
    8. '	' → logprob: -12.076115608215332
    9. ' ' → logprob: -12.076115608215332
    10. ')' → logprob: -12.576115608215332

Token 1091: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038574778591282666
    2. '<|end|>' → logprob: -8.250385284423828
    3. '
' → logprob: -9.250385284423828
    4. '       ' → logprob: -11.125385284423828
    5. '```' → logprob: -12.375385284423828
    6. ')' → logprob: -12.500385284423828
    7. 'for' → logprob: -13.500385284423828
    8. '    
' → logprob: -13.500385284423828
    9. 'print' → logprob: -13.500385284423828
    10. '<|end|>' → logprob: -14.750385284423828

Token 1092: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03402796387672424
    2. 'print' → logprob: -3.7840280532836914
    3. 'if' (adapté à ' if') → logprob: -4.784028053283691
    4. '   ' → logprob: -6.409028053283691
    5. 'edge' → logprob: -7.409028053283691
    6. '```' → logprob: -10.909028053283691
    7. 'last' → logprob: -11.034028053283691
    8. ' for' → logprob: -11.159028053283691
    9. 'return' → logprob: -11.284028053283691
    10. 'remaining' → logprob: -11.409028053283691

Token 1093: ' given' (ID: 4335)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.3157491385936737
    2. ' given' → logprob: -1.315749168395996
    3. 'upper' → logprob: -7.315749168395996
    4. '(g' → logprob: -7.690749168395996
    5. ' upper' → logprob: -8.190749168395996
    6. ' (' → logprob: -8.440749168395996
    7. '(' → logprob: -8.690749168395996
    8. 'number' → logprob: -8.690749168395996
    9. 'lower' → logprob: -9.190749168395996
    10. ' ' → logprob: -9.315749168395996

Token 1094: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -1.7835754988482222e-05
    2. '_' → logprob: -11.500018119812012
    3. '```' → logprob: -13.500018119812012
    4. '_in' → logprob: -13.875018119812012
    5. '_Integer' → logprob: -14.375018119812012
    6. '_INTEGER' → logprob: -14.375018119812012
    7. 'integer' → logprob: -14.375018119812012
    8. '>' → logprob: -14.625018119812012
    9. '_number' → logprob: -14.625018119812012
    10. 'Integer' → logprob: -14.625018119812012

Token 1095: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9918898940086365
    2. '==' → logprob: -1.3668899536132812
    3. ' %' → logprob: -1.8668899536132812
    4. ' ==' → logprob: -1.8668899536132812
    5. '>' → logprob: -3.8668899536132812
    6. ' !=' → logprob: -3.9918899536132812
    7. '!=' → logprob: -3.9918899536132812
    8. ' >' → logprob: -5.741889953613281
    9. '   ' → logprob: -6.241889953613281
    10. ' ' → logprob: -7.616889953613281

Token 1096: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022620675154030323
    2. ' ' → logprob: -6.127262115478516
    3. '3' → logprob: -10.252262115478516
    4. '4' → logprob: -10.877262115478516
    5. '```' → logprob: -11.002262115478516
    6. '   ' → logprob: -13.002262115478516
    7. '==' → logprob: -13.127262115478516
    8. '  ' → logprob: -15.002262115478516
    9. '6' → logprob: -15.002262115478516
    10. '8' → logprob: -15.377262115478516

Token 1097: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008157044649124146
    2. ' ' → logprob: -7.1258158683776855
    3. '```' → logprob: -11.875815391540527
    4. '
' → logprob: -13.500815391540527
    5. '3' → logprob: -13.500815391540527
    6. '4' → logprob: -14.500815391540527
    7. '==' → logprob: -14.625815391540527
    8. '   ' → logprob: -15.875815391540527
    9. '0' → logprob: -16.500816345214844
    10. '``' → logprob: -16.750816345214844

Token 1098: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2536599934101105
    2. ' ==' → logprob: -1.503659963607788
    3. ':' → logprob: -7.503660202026367
    4. '!=' → logprob: -7.878660202026367
    5. ' !=' → logprob: -8.128660202026367
    6. '()==' → logprob: -8.503660202026367
    7. '=' → logprob: -9.878660202026367
    8. ':
' → logprob: -9.878660202026367
    9. '==
' → logprob: -10.378660202026367
    10. '```' → logprob: -10.503660202026367

Token 1099: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037606678903102875
    2. '       ' → logprob: -3.912606716156006
    3. ':' → logprob: -4.662606716156006
    4. ':
' → logprob: -4.912606716156006
    5. '[' → logprob: -10.162606239318848
    6. '```' → logprob: -10.162606239318848
    7. '
' → logprob: -11.287606239318848
    8. ' :' → logprob: -12.037606239318848
    9. '):
' → logprob: -12.412606239318848
    10. ' :
' → logprob: -13.037606239318848

Token 1100: ' print' (ID: 2123)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.4138290584087372
    2. 'edge' → logprob: -1.6638290882110596
    3. '   ' → logprob: -1.9138290882110596
    4. ' for' → logprob: -7.0388288497924805
    5. 'for' → logprob: -7.7888288497924805
    6. ' upper' → logprob: -8.66382884979248
    7. 'upper' → logprob: -9.03882884979248
    8. 'print' (adapté à ' print') → logprob: -9.16382884979248
    9. '       ' → logprob: -9.91382884979248
    10. '```' → logprob: -10.47632884979248

Token 1101: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.23313835263252258
    2. '(' → logprob: -1.6081383228302002
    3. '(g' → logprob: -5.108138561248779
    4. '(len' → logprob: -7.108138561248779
    5. '"' → logprob: -8.483138084411621
    6. '((' → logprob: -8.608138084411621
    7. '(number' → logprob: -8.733138084411621
    8. '(
' → logprob: -9.233138084411621
    9. '2' → logprob: -10.108138084411621
    10. '('' → logprob: -10.108138084411621

Token 1102: 'Yes' (ID: 13022)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.16302183270454407
    2. 'Yes' → logprob: -2.0380218029022217
    3. '"No' → logprob: -4.038022041320801
    4. '"' → logprob: -6.163022041320801
    5. '("' → logprob: -8.4130220413208
    6. '   ' → logprob: -9.7880220413208
    7. '(No' → logprob: -10.5380220413208
    8. '-' → logprob: -11.1630220413208
    9. ''' → logprob: -11.4130220413208
    10. 'YES' → logprob: -12.0380220413208

Token 1103: '")
' (ID: 1896)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.35064932703971863
    2. '")
' → logprob: -1.850649356842041
    3. '   ' → logprob: -2.850649356842041
    4. '")' → logprob: -3.100649356842041
    5. ')' → logprob: -3.350649356842041
    6. '       ' → logprob: -7.850649356842041
    7. '')
' → logprob: -9.225648880004883
    8. '```' → logprob: -9.600648880004883
    9. '
' → logprob: -9.725648880004883
    10. 'for' → logprob: -10.975648880004883

Token 1104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29741615056991577
    2. '   ' → logprob: -1.4224162101745605
    3. '```' → logprob: -4.4224162101745605
    4. '``' → logprob: -6.9224162101745605
    5. '(' → logprob: -7.0474162101745605
    6. '[' → logprob: -7.0474162101745605
    7. '(
' → logprob: -7.5474162101745605
    8. '[
' → logprob: -8.422415733337402
    9. '()' → logprob: -8.672415733337402
    10. '           ' → logprob: -9.172415733337402

Token 1105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8540303707122803
    2. 'print' → logprob: -1.2290303707122803
    3. '   ' → logprob: -1.8540303707122803
    4. ' for' → logprob: -2.1040303707122803
    5. ' print' → logprob: -6.104030609130859
    6. 'edge' → logprob: -7.604030609130859
    7. '```' → logprob: -7.979030609130859
    8. '       ' → logprob: -10.35403060913086
    9. ' edge' → logprob: -10.47903060913086
    10. '``' → logprob: -11.47903060913086

Token 1106: ' node' (ID: 4596)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.104283906519413
    2. 'i' → logprob: -3.1042838096618652
    3. 'node' → logprob: -3.4792838096618652
    4. ' edge' → logprob: -4.354283809661865
    5. 'u' → logprob: -5.354283809661865
    6. '_edge' → logprob: -6.479283809661865
    7. '_' → logprob: -6.854283809661865
    8. ' node' → logprob: -6.854283809661865
    9. 'label' → logprob: -7.604283809661865
    10. ' i' → logprob: -7.729283809661865

Token 1107: '_u' (ID: 17063)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.277466744184494
    2. ',' → logprob: -1.7774667739868164
    3. 'in' → logprob: -3.0274667739868164
    4. '1' → logprob: -3.9024667739868164
    5. '_label' → logprob: -6.402466773986816
    6. '0' → logprob: -7.902466773986816
    7. '_,' → logprob: -8.027466773986816
    8. ',node' → logprob: -8.027466773986816
    9. ' ,' → logprob: -8.152466773986816
    10. '_labels' → logprob: -8.652466773986816

Token 1108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03205391764640808
    2. ',node' → logprob: -3.5320539474487305
    3. ' in' → logprob: -6.2820539474487305
    4. ' ,' → logprob: -7.9070539474487305
    5. 'in' → logprob: -10.65705394744873
    6. ',user' → logprob: -11.90705394744873
    7. '(node' → logprob: -12.03205394744873
    8. ',n' → logprob: -12.40705394744873
    9. ',
' → logprob: -12.65705394744873
    10. '1' → logprob: -12.90705394744873

Token 1109: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03804183006286621
    2. ' node' → logprob: -3.288041830062866
    3. '(node' → logprob: -15.413042068481445
    4. ',node' → logprob: -16.163042068481445
    5. '[node' → logprob: -17.413042068481445
    6. '	node' → logprob: -17.538042068481445
    7. '   ' → logprob: -18.038042068481445
    8. 'edge' → logprob: -18.288042068481445
    9. '
' → logprob: -18.288042068481445
    10. '=node' → logprob: -18.788042068481445

Token 1110: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.5556644201278687
    2. ',' → logprob: -1.1806644201278687
    3. ',node' → logprob: -3.305664539337158
    4. '_u' → logprob: -3.555664539337158
    5. '_,' → logprob: -3.805664539337158
    6. 'v' → logprob: -3.805664539337158
    7. 'u' → logprob: -5.430664539337158
    8. ',v' → logprob: -5.430664539337158
    9. '_s' → logprob: -7.930664539337158
    10. '```' → logprob: -9.8056640625

Token 1111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08900544792413712
    2. 'in' → logprob: -2.464005470275879
    3. '       ' → logprob: -10.964005470275879
    4. '   ' → logprob: -11.339005470275879
    5. ',' → logprob: -11.839005470275879
    6. '           ' → logprob: -12.089005470275879
    7. '	in' → logprob: -12.214005470275879
    8. '```' → logprob: -12.589005470275879
    9. '_in' → logprob: -12.964005470275879
    10. '<|end|>' → logprob: -13.339005470275879

Token 1112: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.1606561541557312
    2. ' edge' → logprob: -1.910656213760376
    3. '
' → logprob: -7.785655975341797
    4. '(edge' → logprob: -11.660655975341797
    5. '
' → logprob: -12.660655975341797
    6. '   ' → logprob: -13.535655975341797
    7. '=edge' → logprob: -13.785655975341797
    8. ' 
' → logprob: -14.660655975341797
    9. 'print' → logprob: -15.160655975341797
    10. '_edge' → logprob: -15.285655975341797

Token 1113: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00045069176121614873
    2. '_u' → logprob: -8.50045108795166
    3. '_' → logprob: -8.62545108795166
    4. ')' → logprob: -10.00045108795166
    5. 'List' → logprob: -12.50045108795166
    6. '_
' → logprob: -12.50045108795166
    7. '_)' → logprob: -12.62545108795166
    8. 'list' → logprob: -12.87545108795166
    9. 'u' → logprob: -13.12545108795166
    10. '```' → logprob: -13.25045108795166

Token 1114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22440305352210999
    2. ':
' → logprob: -2.099403142929077
    3. '           ' → logprob: -3.224403142929077
    4. '   ' → logprob: -4.224402904510498
    5. '       ' → logprob: -4.349402904510498
    6. '<|end|>' → logprob: -5.474402904510498
    7. ',' → logprob: -5.974402904510498
    8. '.' → logprob: -7.724402904510498
    9. '<|end|>' → logprob: -7.849402904510498
    10. '[' → logprob: -7.849402904510498

Token 1115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000995060196146369
    2. '       ' → logprob: -8.375994682312012
    3. ' print' → logprob: -8.625994682312012
    4. '```' → logprob: -9.125994682312012
    5. '   ' → logprob: -9.250994682312012
    6. '\n' → logprob: -9.500994682312012
    7. '
' → logprob: -9.500994682312012
    8. ':
' → logprob: -9.750994682312012
    9. 'print' → logprob: -10.000994682312012
    10. ':' → logprob: -10.500994682312012

Token 1116: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.38877958059310913
    2. '           ' → logprob: -1.263779640197754
    3. 'print' (adapté à ' print') → logprob: -3.263779640197754
    4. '               ' → logprob: -7.263779640197754
    5. '	print' → logprob: -8.388779640197754
    6. '   ' → logprob: -8.513779640197754
    7. ' ' → logprob: -10.263779640197754
    8. '       ' → logprob: -10.388779640197754
    9. '            ' → logprob: -11.263779640197754
    10. '
' → logprob: -11.513779640197754

Token 1117: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0005894906935282052
    2. '(' → logprob: -7.625589370727539
    3. 'node' → logprob: -9.875589370727539
    4. '(f' → logprob: -10.000589370727539
    5. '("' → logprob: -13.250589370727539
    6. ' node' → logprob: -14.000589370727539
    7. '(*' → logprob: -14.500589370727539
    8. '(
' → logprob: -14.500589370727539
    9. 'f' → logprob: -15.375589370727539
    10. ',node' → logprob: -15.375589370727539

Token 1118: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -6.034592388459714e-06
    2. 'u' → logprob: -12.250005722045898
    3. '_v' → logprob: -14.000005722045898
    4. '_s' → logprob: -15.750005722045898
    5. '```' → logprob: -16.0000057220459
    6. 's' → logprob: -17.7500057220459
    7. '__' → logprob: -18.5000057220459
    8. '   ' → logprob: -18.6250057220459
    9. '
' → logprob: -18.8750057220459
    10. ' _' → logprob: -18.8750057220459

Token 1119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004104758147150278
    2. ',node' → logprob: -5.5041046142578125
    3. ' ,' → logprob: -11.254104614257812
    4. ',
' → logprob: -12.129104614257812
    5. ',end' → logprob: -12.379104614257812
    6. ',n' → logprob: -13.004104614257812
    7. '   ' → logprob: -15.004104614257812
    8. '(node' → logprob: -15.129104614257812
    9. ',v' → logprob: -15.379104614257812
    10. ',user' → logprob: -15.629104614257812

Token 1120: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.061967913061380386
    2. ' node' → logprob: -2.8119678497314453
    3. '(node' → logprob: -15.561967849731445
    4. 'end' → logprob: -17.311967849731445
    5. '	node' → logprob: -18.186967849731445
    6. ',node' → logprob: -18.436967849731445
    7. '[node' → logprob: -19.186967849731445
    8. ' ' → logprob: -20.061967849731445
    9. '=node' → logprob: -20.186967849731445
    10. '   ' → logprob: -20.436967849731445

Token 1121: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -6.704273118884885e-07
    2. '_u' → logprob: -14.875000953674316
    3. '```' → logprob: -15.875000953674316
    4. ' _' → logprob: -17.125
    5. '_' → logprob: -17.875
    6. 'v' → logprob: -18.5
    7. '   ' → logprob: -18.875
    8. '
' → logprob: -19.0
    9. '_
' → logprob: -19.5
    10. ')' → logprob: -19.625

Token 1122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008329743286594748
    2. ')
' → logprob: -7.125833034515381
    3. '<|end|>' → logprob: -10.750832557678223
    4. ')return' → logprob: -13.250832557678223
    5. '")' → logprob: -13.875832557678223
    6. '```' → logprob: -14.000832557678223
    7. '   ' → logprob: -14.125832557678223
    8. ' )' → logprob: -14.750832557678223
    9. '<|end|>' → logprob: -14.875832557678223
    10. ')#' → logprob: -14.875832557678223

Token 1123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007014761795289814
    2. '       ' → logprob: -7.500701427459717
    3. 'else' → logprob: -9.125701904296875
    4. '<|end|>' → logprob: -10.375701904296875
    5. '```' → logprob: -12.375701904296875
    6. ')' → logprob: -13.875701904296875
    7. ' else' → logprob: -14.250701904296875
    8. '
' → logprob: -14.250701904296875
    9. 'return' → logprob: -14.625701904296875
    10. '	else' → logprob: -15.125701904296875

Token 1124: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.39031755924224854
    2. '   ' → logprob: -1.1403175592422485
    3. ' else' → logprob: -5.765317440032959
    4. '	else' → logprob: -9.140317916870117
    5. '<|end|>' → logprob: -9.140317916870117
    6. '
' → logprob: -10.765317916870117
    7. '```' → logprob: -10.765317916870117
    8. 'elif' → logprob: -11.015317916870117
    9. 'return' → logprob: -11.515317916870117
    10. ' ' → logprob: -11.765317916870117

Token 1125: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6114909052848816
    2. ':
' → logprob: -1.1114909648895264
    3. ':' → logprob: -2.4864909648895264
    4. '   ' → logprob: -3.1114909648895264
    5. '():
' → logprob: -8.986491203308105
    6. '```' → logprob: -9.236491203308105
    7. '):
' → logprob: -9.861491203308105
    8. '	' → logprob: -10.111491203308105
    9. ' :
' → logprob: -10.236491203308105
    10. '<|end|>' → logprob: -10.361491203308105

Token 1126: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06994610279798508
    2. '       ' → logprob: -2.694946050643921
    3. '```' → logprob: -12.5699462890625
    4. 'print' → logprob: -12.9449462890625
    5. '	print' → logprob: -13.1949462890625
    6. '{
' → logprob: -14.5699462890625
    7. '           ' → logprob: -14.8199462890625
    8. '	   ' → logprob: -14.8199462890625
    9. ' print' → logprob: -15.3199462890625
    10. '
' → logprob: -15.9449462890625

Token 1127: ' edge' (ID: 11165)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7008706331253052
    2. 'print' → logprob: -0.8258706331253052
    3. '   ' → logprob: -2.9508705139160156
    4. '       ' → logprob: -4.325870513916016
    5. ' for' → logprob: -9.325870513916016
    6. '
' → logprob: -9.825870513916016
    7. '    ' → logprob: -9.825870513916016
    8. ' ' → logprob: -10.075870513916016
    9. '	print' → logprob: -10.325870513916016
    10. 'for' → logprob: -10.575870513916016

Token 1128: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0012782112462446094
    2. '_label' → logprob: -6.751278400421143
    3. '_labels' → logprob: -9.876277923583984
    4. ')' → logprob: -11.626277923583984
    5. 's' → logprob: -11.626277923583984
    6. '_' → logprob: -11.751277923583984
    7. '   ' → logprob: -12.376277923583984
    8. 'List' → logprob: -12.876277923583984
    9. '
' → logprob: -13.001277923583984
    10. 'list' → logprob: -13.126277923583984

Token 1129: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0026555589865893126
    2. '.pop' → logprob: -6.627655506134033
    3. '.extend' → logprob: -6.752655506134033
    4. '.' → logprob: -8.877655982971191
    5. 'append' → logprob: -12.127655982971191
    6. '=' → logprob: -12.752655982971191
    7. '.remove' → logprob: -13.377655982971191
    8. '[-' → logprob: -13.502655982971191
    9. '.insert' → logprob: -13.502655982971191
    10. ' =' → logprob: -13.627655982971191

Token 1130: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.309382373117842e-05
    2. '(' → logprob: -10.500033378601074
    3. '(((' → logprob: -12.750033378601074
    4. '(([' → logprob: -14.000033378601074
    5. '(('' → logprob: -14.375033378601074
    6. '((-' → logprob: -15.000033378601074
    7. '(edge' → logprob: -15.125033378601074
    8. '(("' → logprob: -15.375033378601074
    9. '(
' → logprob: -15.875033378601074
    10. ' ((' → logprob: -16.250032424926758

Token 1131: 'given' (ID: 82383)
  Prédit: 'given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.4576387405395508
    2. '2' → logprob: -1.7076387405395508
    3. '1' → logprob: -2.457638740539551
    4. '3' → logprob: -2.957638740539551
    5. '(' → logprob: -3.582638740539551
    6. '(g' → logprob: -4.082638740539551
    7. '0' → logprob: -7.082638740539551
    8. 'upper' → logprob: -7.457638740539551
    9. ' given' → logprob: -7.582638740539551
    10. '4' → logprob: -7.832638740539551

Token 1132: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -6.76628842484206e-05
    2. 'integer' → logprob: -9.750067710876465
    3. 'Integer' → logprob: -12.000067710876465
    4. '_INTEGER' → logprob: -13.250067710876465
    5. '_Integer' → logprob: -14.500067710876465
    6. ' integer' → logprob: -15.750067710876465
    7. ' ' → logprob: -16.25006675720215
    8. '#' → logprob: -16.37506675720215
    9. '_string' → logprob: -16.62506675720215
    10. '
' → logprob: -16.62506675720215

Token 1133: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14598847925662994
    2. '+' → logprob: -2.1459884643554688
    3. ' +' → logprob: -4.395988464355469
    4. ' ,' → logprob: -6.020988464355469
    5. '-' → logprob: -6.145988464355469
    6. '   ' → logprob: -6.770988464355469
    7. ' -' → logprob: -7.895988464355469
    8. ' ' → logprob: -8.770988464355469
    9. '//' → logprob: -8.895988464355469
    10. '```' → logprob: -10.020988464355469

Token 1134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004689760971814394
    2. '2' → logprob: -5.754689693450928
    3. '0' → logprob: -6.629689693450928
    4. '3' → logprob: -9.504690170288086
    5. ' ' → logprob: -9.504690170288086
    6. '4' → logprob: -11.004690170288086
    7. '   ' → logprob: -11.129690170288086
    8. 'g' → logprob: -13.254690170288086
    9. '5' → logprob: -13.629690170288086
    10. '(' → logprob: -13.629690170288086

Token 1135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028007594868540764
    2. '2' → logprob: -3.6530075073242188
    3. '3' → logprob: -6.528007507324219
    4. '4' → logprob: -8.903007507324219
    5. '0' → logprob: -9.403007507324219
    6. '5' → logprob: -11.403007507324219
    7. '(' → logprob: -12.528007507324219
    8. 'g' → logprob: -13.028007507324219
    9. '(g' → logprob: -13.715507507324219
    10. ' ' → logprob: -13.903007507324219

Token 1136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003112711710855365
    2. ',g' → logprob: -9.000310897827148
    3. ',
' → logprob: -9.250310897827148
    4. 'given' → logprob: -10.250310897827148
    5. ' ,' → logprob: -10.625310897827148
    6. ' +' → logprob: -11.875310897827148
    7. '+' → logprob: -11.875310897827148
    8. '   ' → logprob: -12.000310897827148
    9. ' given' → logprob: -12.125310897827148
    10. 'Given' → logprob: -13.500310897827148

Token 1137: ' given' (ID: 4335)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.12110017240047455
    2. ' given' → logprob: -2.6211001873016357
    3. '2' → logprob: -3.2461001873016357
    4. '3' → logprob: -7.121099948883057
    5. '1' → logprob: -7.371099948883057
    6. ' ' → logprob: -7.746099948883057
    7. '   ' → logprob: -8.246100425720215
    8. '(' → logprob: -9.246100425720215
    9. '           ' → logprob: -10.496100425720215
    10. '    ' → logprob: -10.496100425720215

Token 1138: '_integer' (ID: 82911)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.22887536883354187
    2. ' given' → logprob: -1.7288753986358643
    3. '1' → logprob: -3.8538753986358643
    4. '2' → logprob: -6.103875160217285
    5. '   ' → logprob: -6.728875160217285
    6. ' ' → logprob: -7.353875160217285
    7. '(' → logprob: -7.478875160217285
    8. ',' → logprob: -7.978875160217285
    9. ' (' → logprob: -8.478875160217285
    10. '_given' → logprob: -9.228875160217285

Token 1139: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2929241955280304
    2. ',' → logprob: -1.792924165725708
    3. ' +' → logprob: -2.542924165725708
    4. '-' → logprob: -4.917924404144287
    5. ' -' → logprob: -7.417924404144287
    6. ' ,' → logprob: -7.542924404144287
    7. '   ' → logprob: -8.792923927307129
    8. '+,' → logprob: -9.542923927307129
    9. '),' → logprob: -10.417923927307129
    10. '```' → logprob: -10.917923927307129

Token 1140: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1756008416414261
    2. '   ' → logprob: -2.55060076713562
    3. '<|end|>' → logprob: -3.30060076713562
    4. ')' → logprob: -4.175601005554199
    5. ')
' → logprob: -4.675601005554199
    6. '```' → logprob: -5.300601005554199
    7. '       ' → logprob: -5.675601005554199
    8. ',' → logprob: -5.675601005554199
    9. 'print' → logprob: -5.800601005554199
    10. '\n' → logprob: -6.925601005554199

Token 1141: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11452078819274902
    2. '       ' → logprob: -2.364520788192749
    3. 'for' (adapté à ' for') → logprob: -4.364521026611328
    4. 'edge' → logprob: -7.114521026611328
    5. '   ' → logprob: -7.364521026611328
    6. '```' → logprob: -10.864521026611328
    7. '
' → logprob: -11.614521026611328
    8. ' for' → logprob: -12.239521026611328
    9. ' print' → logprob: -12.489521026611328
    10. '``' → logprob: -13.864521026611328

Token 1142: ' bit' (ID: 3546)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.021804844960570335
    2. ' node' → logprob: -3.8968048095703125
    3. 'edge' → logprob: -7.2718048095703125
    4. 'u' → logprob: -7.7718048095703125
    5. '(node' → logprob: -9.896804809570312
    6. ' edge' → logprob: -10.146804809570312
    7. '_node' → logprob: -10.896804809570312
    8. '
' → logprob: -12.146804809570312
    9. ' ' → logprob: -12.146804809570312
    10. ' u' → logprob: -12.271804809570312

Token 1143: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4750696122646332
    2. '_index' → logprob: -1.8500696420669556
    3. ' _' → logprob: -1.9750696420669556
    4. '_list' → logprob: -3.100069522857666
    5. '_u' → logprob: -4.350069522857666
    6. ' in' → logprob: -5.225069522857666
    7. '_in' → logprob: -5.350069522857666
    8. '_i' → logprob: -5.975069522857666
    9. '   ' → logprob: -6.350069522857666
    10. '_idx' → logprob: -6.475069522857666

Token 1144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01822521537542343
    2. 'in' → logprob: -4.018225193023682
    3. ',' → logprob: -10.39322566986084
    4. ' ' → logprob: -11.14322566986084
    5. '	in' → logprob: -11.26822566986084
    6. '   ' → logprob: -12.39322566986084
    7. '(' → logprob: -12.64322566986084
    8. ' ,' → logprob: -13.89322566986084
    9. '    ' → logprob: -13.89322566986084
    10. '  ' → logprob: -14.26822566986084

Token 1145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008732995949685574
    2. ' range' → logprob: -4.758732795715332
    3. 'edge' → logprob: -9.133732795715332
    4. '[' → logprob: -12.508732795715332
    5. ' edge' → logprob: -14.133732795715332
    6. 're' → logprob: -14.133732795715332
    7. ' ' → logprob: -14.258732795715332
    8. '   ' → logprob: -14.383732795715332
    9. 'given' → logprob: -14.758732795715332
    10. 'in' → logprob: -14.883732795715332

Token 1146: '(g' (ID: 7791)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1654106378555298
    2. '1' → logprob: -1.2904106378555298
    3. '(' → logprob: -1.7904106378555298
    4. '3' → logprob: -2.2904105186462402
    5. '100' → logprob: -3.4154105186462402
    6. '4' → logprob: -3.6654105186462402
    7. '0' → logprob: -3.6654105186462402
    8. '(g' → logprob: -4.04041051864624
    9. '10' → logprob: -4.54041051864624
    10. '50' → logprob: -4.79041051864624

Token 1147: 'iven' (ID: 2970)
  Prédit: 'iven'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iven' → logprob: -0.034195829182863235
    2. 'given' → logprob: -3.909195899963379
    3. '1' → logprob: -4.909195899963379
    4. '2' → logprob: -5.659195899963379
    5. '0' → logprob: -6.784195899963379
    6. '100' → logprob: -8.409195899963379
    7. 'ive' → logprob: -8.909195899963379
    8. 'ived' → logprob: -8.909195899963379
    9. '```' → logprob: -9.284195899963379
    10. '10' → logprob: -9.409195899963379

Token 1148: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.08229849487543106
    2. 'integer' → logprob: -3.707298517227173
    3. 'given' → logprob: -4.082298278808594
    4. '2' → logprob: -4.332298278808594
    5. 'iven' → logprob: -5.082298278808594
    6. '1' → logprob: -5.082298278808594
    7. 'Integer' → logprob: -6.207298278808594
    8. '_given' → logprob: -6.332298278808594
    9. '   ' → logprob: -6.832298278808594
    10. '3' → logprob: -6.957298278808594

Token 1149: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6412276029586792
    2. '+' → logprob: -1.7662276029586792
    3. ' -' → logprob: -2.1412277221679688
    4. ' +' → logprob: -3.1412277221679688
    5. '):
' → logprob: -3.2662277221679688
    6. '):' → logprob: -3.6412277221679688
    7. ',' → logprob: -3.7662277221679688
    8. '//' → logprob: -3.7662277221679688
    9. '   ' → logprob: -3.8912277221679688
    10. ' //' → logprob: -4.891227722167969

Token 1150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3303645849227905
    2. '       ' → logprob: -1.4553645849227905
    3. '   ' → logprob: -3.45536470413208
    4. '	       ' → logprob: -4.20536470413208
    5. '	   ' → logprob: -7.33036470413208
    6. '		' → logprob: -8.705364227294922
    7. '	' → logprob: -9.330364227294922
    8. '		   ' → logprob: -9.330364227294922
    9. '               ' → logprob: -9.705364227294922
    10. ' if' → logprob: -9.830364227294922

Token 1151: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7315896153450012
    2. '   ' → logprob: -1.1065895557403564
    3. 'if' (adapté à ' if') → logprob: -2.3565895557403564
    4. ' edge' → logprob: -3.6065895557403564
    5. 'edge' → logprob: -3.9815895557403564
    6. '       ' → logprob: -4.2315897941589355
    7. 'print' → logprob: -4.4815897941589355
    8. ' print' → logprob: -4.7315897941589355
    9. ' for' → logprob: -4.9815897941589355
    10. 'for' → logprob: -6.1065897941589355

Token 1152: ' power' (ID: 3470)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.08956898003816605
    2. 'given' → logprob: -3.089569091796875
    3. ' (' → logprob: -4.589569091796875
    4. '(edge' → logprob: -4.589569091796875
    5. '((' → logprob: -4.714569091796875
    6. 'edge' → logprob: -5.839569091796875
    7. ' given' → logprob: -6.089569091796875
    8. '(not' → logprob: -6.339569091796875
    9. '(bit' → logprob: -6.714569091796875
    10. '(' → logprob: -6.714569091796875

Token 1153: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0004577174549922347
    2. '_list' → logprob: -7.750457763671875
    3. 'of' → logprob: -11.125457763671875
    4. '_two' → logprob: -12.125457763671875
    5. '_index' → logprob: -13.125457763671875
    6. '_' → logprob: -13.125457763671875
    7. '2' → logprob: -14.375457763671875
    8. '   ' → logprob: -15.000457763671875
    9. 'Of' → logprob: -15.500457763671875
    10. '[' → logprob: -15.500457763671875

Token 1154: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.07963468134403229
    2. '_two' → logprob: -2.579634666442871
    3. '2' → logprob: -7.329634666442871
    4. ' two' → logprob: -9.954634666442871
    5. 'Two' → logprob: -10.954634666442871
    6. '_TWO' → logprob: -11.329634666442871
    7. '.two' → logprob: -12.204634666442871
    8. '-two' → logprob: -12.579634666442871
    9. '```' → logprob: -13.079634666442871
    10. '(two' → logprob: -14.579634666442871

Token 1155: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.22212089598178864
    2. '[' → logprob: -1.8471208810806274
    3. '(bit' → logprob: -3.472121000289917
    4. 'list' → logprob: -5.222120761871338
    5. 'bit' → logprob: -5.722120761871338
    6. '(' → logprob: -8.097121238708496
    7. '_index' → logprob: -8.097121238708496
    8. '```' → logprob: -8.347121238708496
    9. 'List' → logprob: -8.597121238708496
    10. 'index' → logprob: -8.972121238708496

Token 1156: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.282920129597187e-05
    2. ' [' → logprob: -12.250012397766113
    3. 'bit' → logprob: -13.375012397766113
    4. '[-' → logprob: -13.875012397766113
    5. '```' → logprob: -13.875012397766113
    6. '[
' → logprob: -14.000012397766113
    7. '==' → logprob: -14.500012397766113
    8. '   ' → logprob: -14.625012397766113
    9. '[node' → logprob: -15.250012397766113
    10. '(bit' → logprob: -15.250012397766113

Token 1157: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -2.816093228830141e-06
    2. ' bit' → logprob: -13.12500286102295
    3. '(bit' → logprob: -14.62500286102295
    4. '
' → logprob: -15.87500286102295
    5. 'b' → logprob: -16.500001907348633
    6. 'given' → logprob: -17.125001907348633
    7. '-bit' → logprob: -17.375001907348633
    8. '2' → logprob: -17.625001907348633
    9. '   ' → logprob: -17.750001907348633
    10. '1' → logprob: -18.250001907348633

Token 1158: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0002929174806922674
    2. 'index' → logprob: -8.250292778015137
    3. '+' → logprob: -11.875292778015137
    4. '_INDEX' → logprob: -12.625292778015137
    5. 'ind' → logprob: -12.750292778015137
    6. 'nd' → logprob: -12.750292778015137
    7. 'Index' → logprob: -12.875292778015137
    8. '   ' → logprob: -13.375292778015137
    9. '```' → logprob: -13.375292778015137
    10. 'ex' → logprob: -13.625292778015137

Token 1159: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.030936460942029953
    2. ' &' → logprob: -3.5309364795684814
    3. ']' → logprob: -7.530936241149902
    4. '&(' → logprob: -8.905936241149902
    5. '&amp' → logprob: -9.280936241149902
    6. '[' → logprob: -9.405936241149902
    7. ']&' → logprob: -9.530936241149902
    8. '&
' → logprob: -9.530936241149902
    9. '   ' → logprob: -10.155936241149902
    10. ' ' → logprob: -10.405936241149902

Token 1160: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.18040533363819122
    2. ' &' → logprob: -1.8054053783416748
    3. '&(' → logprob: -8.055405616760254
    4. '==' → logprob: -8.680405616760254
    5. '   ' → logprob: -10.055405616760254
    6. '[' → logprob: -10.555405616760254
    7. '>>' → logprob: -10.805405616760254
    8. ' ==' → logprob: -10.930405616760254
    9. '&amp' → logprob: -11.680405616760254
    10. '&p' → logprob: -11.930405616760254

Token 1161: ' given' (ID: 4335)
  Prédit: ' given'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.38689175248146057
    2. 'given' → logprob: -1.1368917226791382
    3. '_given' → logprob: -11.38689136505127
    4. ' (' → logprob: -12.51189136505127
    5. '(g' → logprob: -13.26189136505127
    6. '(' → logprob: -13.88689136505127
    7. ' gegeben' → logprob: -14.01189136505127
    8. '   ' → logprob: -14.26189136505127
    9. '```' → logprob: -15.01189136505127
    10. '0' → logprob: -15.13689136505127

Token 1162: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -2.4272752852994017e-05
    2. 'integer' → logprob: -11.12502384185791
    3. 'Integer' → logprob: -12.50002384185791
    4. '_INTEGER' → logprob: -12.62502384185791
    5. '
' → logprob: -13.75002384185791
    6. '_Integer' → logprob: -14.75002384185791
    7. '_' → logprob: -15.75002384185791
    8. '_
' → logprob: -16.125024795532227
    9. '```' → logprob: -16.375024795532227
    10. 'INTEGER' → logprob: -16.500024795532227

Token 1163: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6124393939971924
    2. '==' → logprob: -0.8624393939971924
    3. ':
' → logprob: -3.8624393939971924
    4. ':' → logprob: -4.487439155578613
    5. ' !=' → logprob: -6.362439155578613
    6. '!=' → logprob: -7.487439155578613
    7. ']==' → logprob: -7.862439155578613
    8. ')==' → logprob: -8.987439155578613
    9. '):
' → logprob: -9.112439155578613
    10. '<|end|>' → logprob: -9.112439155578613

Token 1164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1482518911361694
    2. ' ==' → logprob: -1.2732518911361694
    3. ':
' → logprob: -1.7732518911361694
    4. ':' → logprob: -2.273252010345459
    5. '==' → logprob: -2.523252010345459
    6. '>' → logprob: -4.273252010345459
    7. ' >' → logprob: -4.523252010345459
    8. '           ' → logprob: -4.648252010345459
    9. ' !=' → logprob: -5.148252010345459
    10. '=' → logprob: -6.648252010345459

Token 1165: ' break' (ID: 2338)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.08491633832454681
    2. 'edge' → logprob: -3.084916353225708
    3. '               ' → logprob: -3.459916353225708
    4. ' print' → logprob: -6.209916114807129
    5. '           ' → logprob: -6.834916114807129
    6. 'print' → logprob: -7.459916114807129
    7. '                   ' → logprob: -7.834916114807129
    8. '   ' → logprob: -9.709916114807129
    9. '       ' → logprob: -10.334916114807129
    10. '                ' → logprob: -10.834916114807129

Token 1166: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7316904664039612
    2. ':' → logprob: -1.9816904067993164
    3. '       ' → logprob: -2.1066904067993164
    4. '           ' → logprob: -2.7316904067993164
    5. '[' → logprob: -2.9816904067993164
    6. '               ' → logprob: -3.1066904067993164
    7. '   ' → logprob: -3.6066904067993164
    8. ')' → logprob: -3.9816904067993164
    9. '<|end|>' → logprob: -4.481690406799316
    10. '):
' → logprob: -5.231690406799316

Token 1167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07147432863712311
    2. '   ' → logprob: -3.071474313735962
    3. ':' → logprob: -4.696474552154541
    4. ':
' → logprob: -5.196474552154541
    5. '           ' → logprob: -5.571474552154541
    6. '               ' → logprob: -6.196474552154541
    7. '```' → logprob: -7.821474552154541
    8. '[' → logprob: -8.196474075317383
    9. ')' → logprob: -8.196474075317383
    10. '):
' → logprob: -8.321474075317383

Token 1168: ' edge' (ID: 11165)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031186185777187347
    2. '   ' → logprob: -4.281186103820801
    3. '           ' → logprob: -4.906186103820801
    4. '
' → logprob: -5.531186103820801
    5. ' edge' → logprob: -5.656186103820801
    6. 'edge' (adapté à ' edge') → logprob: -7.531186103820801
    7. '[' → logprob: -8.1561861038208
    8. ' for' → logprob: -8.2811861038208
    9. ':
' → logprob: -8.9061861038208
    10. ',' → logprob: -9.5936861038208

Token 1169: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.2007883671903983e-05
    2. '_label' → logprob: -11.000021934509277
    3. '_labels' → logprob: -13.625021934509277
    4. 'List' → logprob: -14.375021934509277
    5. '_index' → logprob: -14.375021934509277
    6. 'list' → logprob: -14.375021934509277
    7. ' =' → logprob: -14.500021934509277
    8. 's' → logprob: -14.625021934509277
    9. '.append' → logprob: -15.250021934509277
    10. '=' → logprob: -15.375021934509277

Token 1170: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007179115782491863
    2. '.pop' → logprob: -7.250718116760254
    3. '[-' → logprob: -12.750718116760254
    4. '.extend' → logprob: -13.375718116760254
    5. '.' → logprob: -13.875718116760254
    6. '.remove' → logprob: -14.375718116760254
    7. '           ' → logprob: -14.375718116760254
    8. 'append' → logprob: -15.375718116760254
    9. '.app' → logprob: -15.375718116760254
    10. '[' → logprob: -15.500718116760254

Token 1171: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -9.043078898685053e-05
    2. '(' → logprob: -9.500090599060059
    3. '(((' → logprob: -11.250090599060059
    4. '(g' → logprob: -13.750090599060059
    5. '(
' → logprob: -14.000090599060059
    6. '(power' → logprob: -15.625090599060059
    7. '   ' → logprob: -15.875090599060059
    8. '(("' → logprob: -16.375089645385742
    9. ' ((' → logprob: -16.625089645385742
    10. '(('' → logprob: -16.875089645385742

Token 1172: 'power' (ID: 22295)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.610515832901001
    2. 'power' → logprob: -1.235515832901001
    3. '(' → logprob: -2.985515832901001
    4. '2' → logprob: -3.235515832901001
    5. '(power' → logprob: -3.360515832901001
    6. '1' → logprob: -3.485515832901001
    7. '0' → logprob: -5.360515594482422
    8. '(g' → logprob: -6.235515594482422
    9. 'bit' → logprob: -6.360515594482422
    10. '(bit' → logprob: -7.235515594482422

Token 1173: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.3306015716807451e-05
    2. '_' → logprob: -12.12501335144043
    3. '_list' → logprob: -13.12501335144043
    4. '2' → logprob: -13.25001335144043
    5. '_OF' → logprob: -13.87501335144043
    6. '[' → logprob: -14.37501335144043
    7. 'of' → logprob: -14.62501335144043
    8. 'Of' → logprob: -14.75001335144043
    9. '_two' → logprob: -15.50001335144043
    10. '-of' → logprob: -15.62501335144043

Token 1174: '_two' (ID: 54305)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.05286858230829239
    2. '2' → logprob: -3.552868604660034
    3. '_two' → logprob: -3.802868604660034
    4. ' two' → logprob: -8.177868843078613
    5. 'Two' → logprob: -8.802868843078613
    6. '1' → logprob: -9.802868843078613
    7. ' ' → logprob: -10.802868843078613
    8. '_TWO' → logprob: -11.427868843078613
    9. '-two' → logprob: -12.052868843078613
    10. '```' → logprob: -12.427868843078613

Token 1175: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002931583672761917
    2. 'list' → logprob: -6.002931594848633
    3. '2' → logprob: -8.252931594848633
    4. '[' → logprob: -9.627931594848633
    5. 'index' → logprob: -9.877931594848633
    6. '1' → logprob: -11.127931594848633
    7. 'List' → logprob: -11.377931594848633
    8. '_index' → logprob: -11.377931594848633
    9. '```' → logprob: -12.252931594848633
    10. '
' → logprob: -12.377931594848633

Token 1176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.696077227592468e-05
    2. '[len' → logprob: -11.250077247619629
    3. '[p' → logprob: -11.250077247619629
    4. 'bit' → logprob: -11.625077247619629
    5. '[g' → logprob: -12.500077247619629
    6. '[count' → logprob: -12.875077247619629
    7. '[index' → logprob: -13.000077247619629
    8. ' [' → logprob: -13.000077247619629
    9. '[b' → logprob: -13.125077247619629
    10. '[
' → logprob: -13.125077247619629

Token 1177: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00045795587357133627
    2. '[' → logprob: -8.000457763671875
    3. '0' → logprob: -10.125457763671875
    4. '(bit' → logprob: -11.000457763671875
    5. ' bit' → logprob: -11.125457763671875
    6. 'range' → logprob: -11.750457763671875
    7. 'index' → logprob: -12.000457763671875
    8. '_bit' → logprob: -12.250457763671875
    9. 'power' → logprob: -12.375457763671875
    10. '1' → logprob: -12.375457763671875

Token 1178: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.014807598665356636
    2. 'index' → logprob: -4.26480770111084
    3. '_list' → logprob: -7.88980770111084
    4. '[' → logprob: -8.88980770111084
    5. 'list' → logprob: -10.38980770111084
    6. 'Index' → logprob: -11.51480770111084
    7. '```' → logprob: -11.51480770111084
    8. 'ind' → logprob: -11.51480770111084
    9. 'ex' → logprob: -11.63980770111084
    10. '   ' → logprob: -11.63980770111084

Token 1179: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8075595498085022
    2. ',' → logprob: -0.9325595498085022
    3. ' -' → logprob: -2.4325594902038574
    4. '&' → logprob: -4.182559490203857
    5. ' ,' → logprob: -4.182559490203857
    6. '+' → logprob: -4.307559490203857
    7. '|' → logprob: -4.807559490203857
    8. ' &' → logprob: -5.057559490203857
    9. ' +' → logprob: -6.057559490203857
    10. ']' → logprob: -6.057559490203857

Token 1180: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004541438538581133
    2. '0' → logprob: -6.004541397094727
    3. 'bit' → logprob: -6.254541397094727
    4. '-' → logprob: -9.754541397094727
    5. '2' → logprob: -10.004541397094727
    6. '
' → logprob: -11.379541397094727
    7. ' ' → logprob: -11.629541397094727
    8. '   ' → logprob: -12.629541397094727
    9. '(bit' → logprob: -12.629541397094727
    10. '(' → logprob: -12.879541397094727

Token 1181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02999507263302803
    2. '0' → logprob: -3.5299949645996094
    3. '2' → logprob: -8.40499496459961
    4. '-' → logprob: -11.40499496459961
    5. '3' → logprob: -12.65499496459961
    6. '
' → logprob: -12.77999496459961
    7. 'bit' → logprob: -13.52999496459961
    8. ' ' → logprob: -13.77999496459961
    9. ':' → logprob: -14.77999496459961
    10. 'int' → logprob: -15.27999496459961

Token 1182: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013331868685781956
    2. ' ,' → logprob: -5.138331890106201
    3. '-' → logprob: -5.513331890106201
    4. ' -' → logprob: -5.763331890106201
    5. '(),' → logprob: -10.013331413269043
    6. ',g' → logprob: -10.513331413269043
    7. '[' → logprob: -10.763331413269043
    8. '],' → logprob: -10.763331413269043
    9. ' ' → logprob: -11.138331413269043
    10. ']' → logprob: -11.513331413269043

Token 1183: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09134519845247269
    2. '-' → logprob: -2.8413453102111816
    3. ' -' → logprob: -3.7163453102111816
    4. ' ,' → logprob: -5.466345310211182
    5. ',g' → logprob: -8.716344833374023
    6. '+' → logprob: -9.966344833374023
    7. '[' → logprob: -10.341344833374023
    8. ' +' → logprob: -10.466344833374023
    9. '(),' → logprob: -11.091344833374023
    10. ',
' → logprob: -11.091344833374023

Token 1184: ' ' (ID: 220)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.040031179785728455
    2. '1' → logprob: -3.2900311946868896
    3. ' given' → logprob: -6.2900309562683105
    4. '(' → logprob: -9.665031433105469
    5. 'power' → logprob: -10.290031433105469
    6. '(g' → logprob: -11.290031433105469
    7. '2' → logprob: -12.415031433105469
    8. '_given' → logprob: -12.540031433105469
    9. 'giv' → logprob: -12.915031433105469
    10. ' ' → logprob: -13.040031433105469

Token 1185: '2' (ID: 17)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.31359753012657166
    2. '1' → logprob: -1.313597559928894
    3. ' given' → logprob: -8.563597679138184
    4. 'power' → logprob: -9.188597679138184
    5. '2' → logprob: -11.188597679138184
    6. '(' → logprob: -11.438597679138184
    7. '_given' → logprob: -12.563597679138184
    8. ' ' → logprob: -12.688597679138184
    9. 'giv' → logprob: -13.313597679138184
    10. 'generated' → logprob: -13.688597679138184

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004837126471102238
    2. ' ,' → logprob: -5.6298370361328125
    3. ' +' → logprob: -7.7548370361328125
    4. ' -' → logprob: -8.129837036132812
    5. ',
' → logprob: -8.254837036132812
    6. '-' → logprob: -9.379837036132812
    7. '+' → logprob: -9.879837036132812
    8. '1' → logprob: -10.754837036132812
    9. '),' → logprob: -11.004837036132812
    10. '```' → logprob: -11.254837036132812

Token 1187: ' ' (ID: 220)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.3942508101463318
    2. 'given' → logprob: -1.6442508697509766
    3. ' power' → logprob: -2.2692508697509766
    4. ' given' → logprob: -3.7692508697509766
    5. '2' → logprob: -5.769250869750977
    6. '1' → logprob: -6.019250869750977
    7. '(power' → logprob: -8.769250869750977
    8. '   ' → logprob: -8.769250869750977
    9. 'pow' → logprob: -9.269250869750977
    10. ' ' → logprob: -9.644250869750977

Token 1188: '2' (ID: 17)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.2919706702232361
    2. 'given' → logprob: -1.5419707298278809
    3. ' power' → logprob: -3.666970729827881
    4. ' given' → logprob: -4.916970729827881
    5. '1' → logprob: -5.916970729827881
    6. '2' → logprob: -6.041970729827881
    7. '   ' → logprob: -7.541970729827881
    8. '(power' → logprob: -8.416970252990723
    9. '(' → logprob: -9.041970252990723
    10. 'pow' → logprob: -9.166970252990723

Token 1189: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07197640091180801
    2. ' *' → logprob: -3.07197642326355
    3. 'given' → logprob: -4.446976184844971
    4. 'power' → logprob: -4.946976184844971
    5. '*(' → logprob: -6.321976184844971
    6. '+' → logprob: -7.446976184844971
    7. '           ' → logprob: -7.821976184844971
    8. ' +' → logprob: -8.446976661682129
    9. '               ' → logprob: -8.571976661682129
    10. 'edge' → logprob: -8.571976661682129

Token 1190: ' given' (ID: 4335)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.04176505655050278
    2. 'power' → logprob: -4.291765213012695
    3. '(power' → logprob: -4.666765213012695
    4. '(g' → logprob: -4.666765213012695
    5. ' given' → logprob: -5.041765213012695
    6. '(' → logprob: -6.666765213012695
    7. ' power' → logprob: -8.541765213012695
    8. ' (' → logprob: -8.916765213012695
    9. '(edge' → logprob: -8.916765213012695
    10. 'edge' → logprob: -9.291765213012695

Token 1191: '_integer' (ID: 82911)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.21025513112545013
    2. 'edge' → logprob: -1.9602551460266113
    3. 'given' → logprob: -3.4602551460266113
    4. '_given' → logprob: -4.960255146026611
    5. '_power' → logprob: -5.710255146026611
    6. 'bit' → logprob: -6.835255146026611
    7. '_of' → logprob: -6.960255146026611
    8. ' power' → logprob: -7.210255146026611
    9. '(edge' → logprob: -7.210255146026611
    10. '(power' → logprob: -7.585255146026611

Token 1192: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8893997073173523
    2. '))' → logprob: -0.8893997073173523
    3. ' +' → logprob: -2.764399766921997
    4. '-' → logprob: -2.764399766921997
    5. ',' → logprob: -3.764399766921997
    6. '))
' → logprob: -4.264399528503418
    7. ' -' → logprob: -4.389399528503418
    8. '           ' → logprob: -7.264399528503418
    9. '       ' → logprob: -7.889399528503418
    10. '   ' → logprob: -7.889399528503418

Token 1193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2600545585155487
    2. '   ' → logprob: -2.135054588317871
    3. ')' → logprob: -2.385054588317871
    4. ')
' → logprob: -5.010054588317871
    5. '<|end|>' → logprob: -5.260054588317871
    6. '
' → logprob: -5.885054588317871
    7. '           ' → logprob: -6.385054588317871
    8. '```' → logprob: -7.135054588317871
    9. ' ' → logprob: -8.135054588317871
    10. '[' → logprob: -8.385054588317871

Token 1194: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04145105555653572
    2. '   ' → logprob: -3.9164509773254395
    3. 'for' → logprob: -4.0414509773254395
    4. '       ' → logprob: -6.1664509773254395
    5. 'edge' → logprob: -7.6664509773254395
    6. ' for' → logprob: -8.291451454162598
    7. ')' → logprob: -8.916451454162598
    8. ' print' → logprob: -9.541451454162598
    9. '```' → logprob: -10.166451454162598
    10. 'return' → logprob: -11.166451454162598

Token 1195: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. '(
' → logprob: -15.875008583068848
    4. '('' → logprob: -16.00000762939453
    5. '"' → logprob: -17.25000762939453
    6. '(len' → logprob: -17.87500762939453
    7. '()' → logprob: -18.00000762939453
    8. '(-' → logprob: -19.37500762939453
    9. ' ("' → logprob: -19.50000762939453
    10. '(("' → logprob: -19.62500762939453

Token 1196: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0003346314188092947
    2. '"' → logprob: -8.250334739685059
    3. 'No' → logprob: -9.625334739685059
    4. '("' → logprob: -12.500334739685059
    5. '"No' → logprob: -13.500334739685059
    6. 'YES' → logprob: -13.625334739685059
    7. '“Yes' → logprob: -14.750334739685059
    8. ' Yes' → logprob: -15.375334739685059
    9. '
' → logprob: -15.375334739685059
    10. '   ' → logprob: -16.500333786010742

Token 1197: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24485674500465393
    2. 'for' → logprob: -1.7448567152023315
    3. ' for' → logprob: -3.369856834411621
    4. '   ' → logprob: -5.869856834411621
    5. '
' → logprob: -6.244856834411621
    6. ')' → logprob: -7.119856834411621
    7. '	for' → logprob: -7.119856834411621
    8. ')
' → logprob: -7.494856834411621
    9. '```' → logprob: -7.619856834411621
    10. '")' → logprob: -8.619856834411621

Token 1198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16987748444080353
    2. 'for' → logprob: -1.919877529144287
    3. '   ' → logprob: -4.669877529144287
    4. '```' → logprob: -9.044877052307129
    5. ' for' → logprob: -9.169877052307129
    6. '	for' → logprob: -12.044877052307129
    7. '``' → logprob: -12.919877052307129
    8. '           ' → logprob: -13.544877052307129
    9. 'print' → logprob: -14.794877052307129
    10. '<|end|>' → logprob: -14.794877052307129

Token 1199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.292907877039397e-06
    2. ' for' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.00000286102295
    4. '       ' → logprob: -17.250003814697266
    5. '	for' → logprob: -17.875003814697266
    6. '```' → logprob: -18.000003814697266
    7. 'print' → logprob: -20.125003814697266
    8. '
' → logprob: -21.125003814697266
    9. 'For' → logprob: -22.125003814697266
    10. '``' → logprob: -22.250003814697266

Token 1200: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.004917192738503218
    2. ' node' → logprob: -6.004917144775391
    3. 'edge' → logprob: -6.379917144775391
    4. 'u' → logprob: -7.254917144775391
    5. '(node' → logprob: -10.75491714477539
    6. ' edge' → logprob: -12.00491714477539
    7. '_node' → logprob: -12.25491714477539
    8. '(u' → logprob: -13.62991714477539
    9. ',node' → logprob: -14.25491714477539
    10. ' u' → logprob: -14.50491714477539

Token 1201: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: -5.5027299822540954e-05
    2. '_,' → logprob: -10.625055313110352
    3. 'u' → logprob: -10.875055313110352
    4. ',u' → logprob: -12.375055313110352
    5. ',' → logprob: -12.750055313110352
    6. '_' → logprob: -13.125055313110352
    7. '_v' → logprob: -14.500055313110352
    8. ',_' → logprob: -14.500055313110352
    9. '   ' → logprob: -15.000055313110352
    10. '1' → logprob: -15.000055313110352

Token 1202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007183883571997285
    2. ',node' → logprob: -7.250718593597412
    3. ' ,' → logprob: -11.750718116760254
    4. ',n' → logprob: -15.000718116760254
    5. ',user' → logprob: -16.37571907043457
    6. ',
' → logprob: -17.00071907043457
    7. '(node' → logprob: -17.87571907043457
    8. '‌,' → logprob: -18.87571907043457
    9. ' in' → logprob: -19.00071907043457
    10. ',p' → logprob: -19.37571907043457

Token 1203: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.029751067981123924
    2. ' node' → logprob: -3.5297510623931885
    3. '(node' → logprob: -15.40475082397461
    4. '
' → logprob: -15.52975082397461
    5. '	node' → logprob: -16.65475082397461
    6. '[node' → logprob: -17.02975082397461
    7. '   ' → logprob: -17.15475082397461
    8. '
' → logprob: -17.52975082397461
    9. ',node' → logprob: -17.52975082397461
    10. 'edge' → logprob: -18.02975082397461

Token 1204: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.0005744783557020128
    2. ',' → logprob: -7.500574588775635
    3. '_u' → logprob: -11.625574111938477
    4. '_,' → logprob: -11.875574111938477
    5. ',v' → logprob: -13.125574111938477
    6. 'v' → logprob: -13.625574111938477
    7. ' _' → logprob: -14.500574111938477
    8. ' ,' → logprob: -14.625574111938477
    9. 'print' → logprob: -15.000574111938477
    10. '```' → logprob: -15.375574111938477

Token 1205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012628073804080486
    2. 'in' → logprob: -4.387628078460693
    3. ',' → logprob: -9.137627601623535
    4. ' ,' → logprob: -12.762627601623535
    5. '   ' → logprob: -13.012627601623535
    6. '           ' → logprob: -13.137627601623535
    7. '	in' → logprob: -13.387627601623535
    8. ' ' → logprob: -14.512627601623535
    9. '       ' → logprob: -14.512627601623535
    10. ',in' → logprob: -14.762627601623535

Token 1206: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.1602257490158081
    2. ' edge' → logprob: -1.910225749015808
    3. '(edge' → logprob: -13.410225868225098
    4. '=edge' → logprob: -16.41022491455078
    5. '
' → logprob: -17.66022491455078
    6. '   ' → logprob: -18.41022491455078
    7. '.edge' → logprob: -18.41022491455078
    8. '_edge' → logprob: -18.66022491455078
    9. 'range' → logprob: -19.66022491455078
    10. '```' → logprob: -19.78522491455078

Token 1207: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00018911674851551652
    2. 'list' → logprob: -8.875188827514648
    3. '_u' → logprob: -10.125188827514648
    4. '(edge' → logprob: -13.250188827514648
    5. 'List' → logprob: -13.375188827514648
    6. 'u' → logprob: -13.500188827514648
    7. 'ist' → logprob: -14.000188827514648
    8. '_' → logprob: -14.125188827514648
    9. 'edge' → logprob: -14.250188827514648
    10. '(u' → logprob: -14.875188827514648

Token 1208: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6363048553466797
    2. '           ' → logprob: -1.8863048553466797
    3. ':' → logprob: -2.1363048553466797
    4. '       ' → logprob: -2.2613048553466797
    5. '   ' → logprob: -2.8863048553466797
    6. '<|end|>' → logprob: -4.51130485534668
    7. '():
' → logprob: -4.63630485534668
    8. ',' → logprob: -5.01130485534668
    9. '):
' → logprob: -5.13630485534668
    10. '<|end|>' → logprob: -6.63630485534668

Token 1209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016176775097846985
    2. '       ' → logprob: -4.141176700592041
    3. '   ' → logprob: -9.2661771774292
    4. '	       ' → logprob: -10.7661771774292
    5. '
' → logprob: -12.2661771774292
    6. '		' → logprob: -12.5161771774292
    7. '               ' → logprob: -12.6411771774292
    8. '\n' → logprob: -12.7661771774292
    9. ' print' → logprob: -12.8911771774292
    10. '	   ' → logprob: -13.5161771774292

Token 1210: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5759403705596924
    2. ' print' → logprob: -0.8259403705596924
    3. '```' → logprob: -14.825940132141113
    4. '
' → logprob: -14.950940132141113
    5. '.print' → logprob: -16.57594108581543
    6. '	print' → logprob: -17.07594108581543
    7. 'Print' → logprob: -18.32594108581543
    8. '_print' → logprob: -18.45094108581543
    9. '(print' → logprob: -18.45094108581543
    10. '``' → logprob: -19.20094108581543

Token 1211: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. '("' → logprob: -16.500003814697266
    4. '(f' → logprob: -18.375003814697266
    5. 'node' → logprob: -18.750003814697266
    6. '(
' → logprob: -18.750003814697266
    7. '(Node' → logprob: -19.000003814697266
    8. '('' → logprob: -20.000003814697266
    9. '()' → logprob: -20.125003814697266
    10. '((' → logprob: -20.250003814697266

Token 1212: '_u' (ID: 17063)
  Prédit: '_u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_u' → logprob: 0.0
    2. '_v' → logprob: -17.375
    3. 'u' → logprob: -18.5
    4. '_uv' → logprob: -18.625
    5. ' _' → logprob: -19.0
    6. '(_' → logprob: -19.75
    7. '_user' → logprob: -19.875
    8. '```' → logprob: -20.0
    9. '__' → logprob: -20.75
    10. '_s' → logprob: -21.25

Token 1213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006938667502254248
    2. ',node' → logprob: -5.256938457489014
    3. '(node' → logprob: -6.506938457489014
    4. ')' → logprob: -9.131938934326172
    5. ' ,' → logprob: -9.256938934326172
    6. '[node' → logprob: -13.506938934326172
    7. '(' → logprob: -13.881938934326172
    8. ' node' → logprob: -14.131938934326172
    9. ',end' → logprob: -14.381938934326172
    10. ',user' → logprob: -14.881938934326172

Token 1214: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0024773201439529657
    2. ' node' → logprob: -6.002477169036865
    3. '(node' → logprob: -13.377477645874023
    4. '[node' → logprob: -17.377477645874023
    5. '	node' → logprob: -18.252477645874023
    6. '=node' → logprob: -18.252477645874023
    7. ',node' → logprob: -18.377477645874023
    8. ')' → logprob: -18.502477645874023
    9. '
' → logprob: -18.877477645874023
    10. '0' → logprob: -19.252477645874023

Token 1215: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.01817171648144722
    2. '_u' → logprob: -4.018171787261963
    3. 'u' → logprob: -11.518171310424805
    4. '```' → logprob: -12.268171310424805
    5. '_,' → logprob: -12.893171310424805
    6. ',' → logprob: -13.143171310424805
    7. 'v' → logprob: -14.393171310424805
    8. '_' → logprob: -14.518171310424805
    9. 'n' → logprob: -15.518171310424805
    10. 's' → logprob: -15.643171310424805

Token 1216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018649426056072116
    2. ')
' → logprob: -8.625186920166016
    3. '<|end|>' → logprob: -12.125186920166016
    4. ')return' → logprob: -14.625186920166016
    5. '())' → logprob: -15.250186920166016
    6. '()' → logprob: -15.500186920166016
    7. ' )' → logprob: -15.750186920166016
    8. '")' → logprob: -16.125186920166016
    9. ')#' → logprob: -16.375186920166016
    10. '),' → logprob: -16.625186920166016

Token 1217: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1218: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1219: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1220: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5263485312461853
    2. 'if' → logprob: -1.02634859085083
    3. 'def' → logprob: -3.02634859085083
    4. 'solve' → logprob: -6.40134859085083
    5. '<|end|>' → logprob: -8.026348114013672
    6. '```' → logprob: -9.026348114013672
    7. ' if' → logprob: -9.276348114013672
    8. '#if' → logprob: -10.276348114013672
    9. 'read' → logprob: -10.651348114013672
    10. '<|end|>' → logprob: -11.026348114013672

Token 1221: ' Problem' (ID: 26113)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4746645390987396
    2. 'if' → logprob: -0.974664568901062
    3. '#' → logprob: -7.474664688110352
    4. ' if' → logprob: -11.849664688110352
    5. '#if' → logprob: -12.474664688110352
    6. 'solve' → logprob: -12.474664688110352
    7. 'for' → logprob: -13.349664688110352
    8. 'import' → logprob: -14.099664688110352
    9. '__' → logprob: -14.349664688110352
    10. '```' → logprob: -14.849664688110352

Token 1222: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.008791127242147923
    2. '_D' → logprob: -4.758790969848633
    3. 'def' → logprob: -8.758790969848633
    4. ' D' → logprob: -11.883790969848633
    5. 'C' → logprob: -12.133790969848633
    6. '#' → logprob: -12.508790969848633
    7. '_' → logprob: -13.883790969848633
    8. 'A' → logprob: -13.883790969848633
    9. 'E' → logprob: -14.383790969848633
    10. '_C' → logprob: -15.758790969848633

Token 1223: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4378848391061183e-05
    2. '
' → logprob: -11.750014305114746
    3. 'class' → logprob: -12.250014305114746
    4. 'import' → logprob: -14.500014305114746
    5. ':def' → logprob: -15.000014305114746
    6. ' def' → logprob: -15.375014305114746
    7. '(def' → logprob: -15.500014305114746
    8. '#' → logprob: -15.875014305114746
    9. '()' → logprob: -16.500015258789062
    10. '```' → logprob: -17.000015258789062

Token 1224: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. 'class' → logprob: -15.5
    3. 'import' → logprob: -17.75
    4. ' def' → logprob: -17.875
    5. 'de' → logprob: -18.0
    6. 'from' → logprob: -18.25
    7. '
' → logprob: -18.5
    8. 'd' → logprob: -19.0
    9. 'async' → logprob: -20.5
    10. '\' → logprob: -20.5

Token 1225: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4740970730781555
    2. 'solve' → logprob: -0.9740970730781555
    3. 'def' → logprob: -11.59909725189209
    4. '.solve' → logprob: -13.34909725189209
    5. 'sol' → logprob: -13.47409725189209
    6. 's' → logprob: -13.97409725189209
    7. 'd' → logprob: -14.16159725189209
    8. ' def' → logprob: -14.59909725189209
    9. 'solver' → logprob: -14.59909725189209
    10. 'dfs' → logprob: -14.66159725189209

Token 1226: '_problem' (ID: 162384)
  Prédit: '_problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_problem' → logprob: -0.0002100965939462185
    2. '_' → logprob: -8.50020980834961
    3. '```' → logprob: -12.75020980834961
    4. '_D' → logprob: -13.62520980834961
    5. '_pro' → logprob: -14.37520980834961
    6. 'Problem' → logprob: -15.00020980834961
    7. 'def' → logprob: -15.25020980834961
    8. '_question' → logprob: -15.37520980834961
    9. '_solution' → logprob: -15.62520980834961
    10. '\' → logprob: -15.75020980834961

Token 1227: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -3.333223139634356e-05
    2. 'D' → logprob: -10.875033378601074
    3. '```' → logprob: -11.500033378601074
    4. '_A' → logprob: -13.375033378601074
    5. '_' → logprob: -14.500033378601074
    6. '()' → logprob: -14.625033378601074
    7. '
' → logprob: -14.875033378601074
    8. '_B' → logprob: -15.250033378601074
    9. '():
' → logprob: -15.750033378601074
    10. '(_' → logprob: -16.000032424926758

Token 1228: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.5451681974809617e-05
    2. '():
' → logprob: -11.250015258789062
    3. ' ():' → logprob: -13.250015258789062
    4. ':' → logprob: -15.250015258789062
    5. '()' → logprob: -15.625015258789062
    6. '(' → logprob: -16.750015258789062
    7. 'def' → logprob: -17.000015258789062
    8. '   ' → logprob: -18.375015258789062
    9. '():
' → logprob: -18.500015258789062
    10. '();' → logprob: -18.500015258789062

Token 1229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11433333903551102
    2. 'number' → logprob: -3.114333391189575
    3. 'n' → logprob: -3.614333391189575
    4. ' number' → logprob: -3.989333391189575
    5. ' n' → logprob: -4.614333152770996
    6. ' pass' → logprob: -5.739333152770996
    7. 'def' → logprob: -6.114333152770996
    8. 'pass' → logprob: -6.614333152770996
    9. '    ' → logprob: -7.489333152770996
    10. '	n' → logprob: -8.114333152770996

Token 1230: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.2652438282966614
    2. 'n' → logprob: -1.5152437686920166
    3. '   ' → logprob: -5.390244007110596
    4. 'def' → logprob: -5.890244007110596
    5. 'N' → logprob: -6.140244007110596
    6. ' number' → logprob: -6.640244007110596
    7. ' n' → logprob: -6.765244007110596
    8. 'num' → logprob: -7.640244007110596
    9. 'pass' → logprob: -8.640243530273438
    10. 't' → logprob: -8.765243530273438

Token 1231: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0015079588629305363
    2. '_' → logprob: -6.626507759094238
    3. 'of' → logprob: -9.251507759094238
    4. '   ' → logprob: -10.126507759094238
    5. '_list' → logprob: -11.626507759094238
    6. 's' → logprob: -11.751507759094238
    7. '()' → logprob: -12.626507759094238
    8. ' of' → logprob: -13.001507759094238
    9. '_to' → logprob: -13.001507759094238
    10. 'Of' → logprob: -13.126507759094238

Token 1232: '_inputs' (ID: 67304)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.7908560037612915
    2. 'elements' → logprob: -1.4158560037612915
    3. '_nodes' → logprob: -1.9158560037612915
    4. '_vertices' → logprob: -3.540855884552002
    5. '_queries' → logprob: -3.915855884552002
    6. 'vertices' → logprob: -4.165855884552002
    7. 'nodes' → logprob: -4.165855884552002
    8. 'queries' → logprob: -4.290855884552002
    9. '_sub' → logprob: -4.790855884552002
    10. 'rows' → logprob: -5.290855884552002

Token 1233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4988916516304016
    2. '=' → logprob: -1.3738915920257568
    3. '   ' → logprob: -2.248891592025757
    4. ',' → logprob: -3.748891592025757
    5. '_' → logprob: -4.748891830444336
    6. '    ' → logprob: -7.248891830444336
    7. '=int' → logprob: -8.498891830444336
    8. ')' → logprob: -8.873891830444336
    9. ' _' → logprob: -9.123891830444336
    10. 'def' → logprob: -9.248891830444336

Token 1234: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.04860270395874977
    2. ' read' → logprob: -3.048602819442749
    3. '   ' → logprob: -11.173603057861328
    4. '	read' → logprob: -14.548603057861328
    5. ' ' → logprob: -15.173603057861328
    6. 'int' → logprob: -15.673603057861328
    7. '  ' → logprob: -15.673603057861328
    8. ' int' → logprob: -16.298603057861328
    9. '    ' → logprob: -17.673603057861328
    10. '(read' → logprob: -17.923603057861328

Token 1235: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0015797324012964964
    2. '_int' → logprob: -7.251579761505127
    3. 'single' → logprob: -7.626579761505127
    4. 'int' → logprob: -8.001579284667969
    5. '_list' → logprob: -10.001579284667969
    6. 'list' → logprob: -14.626579284667969
    7. '_char' → logprob: -14.876579284667969
    8. 'Single' → logprob: -15.126579284667969
    9. '_' → logprob: -15.501579284667969
    10. ' single' → logprob: -15.626579284667969

Token 1236: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00048751471331343055
    2. 'int' → logprob: -7.875487327575684
    3. '_' → logprob: -10.000487327575684
    4. '_token' → logprob: -10.625487327575684
    5. '_char' → logprob: -10.875487327575684
    6. '```' → logprob: -12.250487327575684
    7. 'Int' → logprob: -12.500487327575684
    8. '_space' → logprob: -12.500487327575684
    9. '_i' → logprob: -14.125487327575684
    10. '_in' → logprob: -14.375487327575684

Token 1237: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05331725999712944
    2. '
' → logprob: -3.1783173084259033
    3. '<|end|>' → logprob: -5.678317070007324
    4. '()' → logprob: -5.803317070007324
    5. '    
' → logprob: -6.053317070007324
    6. '()
' → logprob: -7.053317070007324
    7. '<|end|>' → logprob: -9.178317070007324
    8. 'def' → logprob: -9.178317070007324
    9. ',' → logprob: -9.428317070007324
    10. '	
' → logprob: -9.928317070007324

Token 1238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014180023572407663
    2. 'data' → logprob: -10.125142097473145
    3. 'arr' → logprob: -11.000142097473145
    4. 'array' → logprob: -11.000142097473145
    5. '    
' → logprob: -12.125142097473145
    6. '   ' → logprob: -12.375142097473145
    7. 'counter' → logprob: -12.375142097473145
    8. 'tokens' → logprob: -12.500142097473145
    9. 'list' → logprob: -12.750142097473145
    10. 'elements' → logprob: -12.750142097473145

Token 1239: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2615225315093994
    2. 'input' → logprob: -1.7615225315093994
    3. 'graph' → logprob: -2.1365225315093994
    4. 'array' → logprob: -2.7615225315093994
    5. 'data' → logprob: -2.8865225315093994
    6. 'dp' → logprob: -3.1365225315093994
    7. 'integer' → logprob: -3.3865225315093994
    8. 'queries' → logprob: -3.3865225315093994
    9. 'results' → logprob: -3.7615225315093994
    10. 'arr' → logprob: -3.7615225315093994

Token 1240: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3999786972999573
    2. '
' → logprob: -1.1499786376953125
    3. 'for' → logprob: -5.1499786376953125
    4. '    
' → logprob: -5.7749786376953125
    5. 'data' → logprob: -7.0249786376953125
    6. '    ' → logprob: -7.5249786376953125
    7. ' for' → logprob: -7.8999786376953125
    8. '\n' → logprob: -7.8999786376953125
    9. 'def' → logprob: -8.274978637695312
    10. 'input' → logprob: -8.649978637695312

Token 1241: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004874719772487879
    2. 'for' → logprob: -5.5048747062683105
    3. ' for' → logprob: -7.8798747062683105
    4. '    ' → logprob: -8.754875183105469
    5. '    
' → logprob: -9.379875183105469
    6. 'def' → logprob: -9.629875183105469
    7. 'data' → logprob: -10.004875183105469
    8. '_' → logprob: -11.754875183105469
    9. '
' → logprob: -11.754875183105469
    10. 'graph' → logprob: -11.754875183105469

Token 1242: ' Problem' (ID: 26113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04507732018828392
    2. 'def' → logprob: -4.295077323913574
    3. 'for' → logprob: -4.670077323913574
    4. '    ' → logprob: -4.920077323913574
    5. 'pass' → logprob: -5.045077323913574
    6. 'data' → logprob: -6.170077323913574
    7. ' for' → logprob: -6.545077323913574
    8. '#' → logprob: -6.795077323913574
    9. '    
' → logprob: -7.045077323913574
    10. 'graph' → logprob: -8.295077323913574

Token 1243: ' E' (ID: 457)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2934473752975464
    2. ' ' → logprob: -2.043447494506836
    3. 'def' → logprob: -2.418447494506836
    4. '   ' → logprob: -4.543447494506836
    5. ' _' → logprob: -4.668447494506836
    6. ' def' → logprob: -4.918447494506836
    7. '_s' → logprob: -6.418447494506836
    8. '  ' → logprob: -6.543447494506836
    9. '<|end|>' → logprob: -6.918447494506836
    10. '#' → logprob: -7.168447494506836

Token 1244: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002000961685553193
    2. '_' → logprob: -6.75200080871582
    3. ' def' → logprob: -7.75200080871582
    4. ':' → logprob: -9.00200080871582
    5. 'de' → logprob: -9.00200080871582
    6. ':def' → logprob: -10.25200080871582
    7. 'd' → logprob: -10.62700080871582
    8. '(' → logprob: -10.75200080871582
    9. '_def' → logprob: -10.75200080871582
    10. '#' → logprob: -11.37700080871582

Token 1245: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.75
    3. '#' → logprob: -18.5
    4. '<|end|>' → logprob: -19.75
    5. 'de' → logprob: -20.125
    6. '
' → logprob: -20.75
    7. '```' → logprob: -20.875
    8. 'from' → logprob: -21.0
    9. 'import' → logprob: -22.25
    10. '	def' → logprob: -22.75

Token 1246: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.030508466064929962
    2. 'solve' → logprob: -3.530508518218994
    3. 'def' → logprob: -7.280508518218994
    4. ' def' → logprob: -9.655508041381836
    5. '_' → logprob: -12.905508041381836
    6. '_s' → logprob: -13.280508041381836
    7. ' _' → logprob: -15.905508041381836
    8. ' ' → logprob: -16.405508041381836
    9. '.solve' → logprob: -16.530508041381836
    10. ' ' → logprob: -16.905508041381836

Token 1247: '_problem' (ID: 162384)
  Prédit: '_problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_problem' → logprob: -0.005949775222688913
    2. '_' → logprob: -5.130949974060059
    3. '_solver' → logprob: -12.505949974060059
    4. '_solution' → logprob: -12.880949974060059
    5. 'Problem' → logprob: -13.005949974060059
    6. '_pro' → logprob: -13.005949974060059
    7. '_possible' → logprob: -13.630949974060059
    8. '_prob' → logprob: -13.755949974060059
    9. '```' → logprob: -13.880949974060059
    10. '_user' → logprob: -14.005949974060059

Token 1248: '_E' (ID: 6584)
  Prédit: '_E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_E' → logprob: -0.00011534435179783031
    2. 'E' → logprob: -9.250115394592285
    3. '_D' → logprob: -12.000115394592285
    4. '_' → logprob: -12.125115394592285
    5. '_A' → logprob: -12.375115394592285
    6. '_EOL' → logprob: -13.875115394592285
    7. '()' → logprob: -14.250115394592285
    8. '```' → logprob: -14.375115394592285
    9. 'def' → logprob: -15.125115394592285
    10. '_C' → logprob: -16.00011444091797

Token 1249: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.3319124011322856e-05
    2. '():
' → logprob: -10.875022888183594
    3. ' ():' → logprob: -12.375022888183594
    4. '()' → logprob: -15.875022888183594
    5. '():
' → logprob: -19.125022888183594
    6. 'def' → logprob: -19.250022888183594
    7. '(' → logprob: -19.500022888183594
    8. ':' → logprob: -19.625022888183594
    9. '():

' → logprob: -20.500022888183594
    10. '();' → logprob: -20.625022888183594

Token 1250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015676982700824738
    2. 'def' → logprob: -4.265676975250244
    3. '(number' → logprob: -7.265676975250244
    4. 'number' → logprob: -8.140677452087402
    5. '#' → logprob: -8.640677452087402
    6. '	number' → logprob: -9.015677452087402
    7. '()' → logprob: -10.515677452087402
    8. '
' → logprob: -10.765677452087402
    9. 'n' → logprob: -10.890677452087402
    10. '(' → logprob: -10.890677452087402

Token 1251: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.19166262447834015
    2. 'n' → logprob: -1.8166626691818237
    3. '   ' → logprob: -4.566662788391113
    4. 'pass' → logprob: -7.316662788391113
    5. 'def' → logprob: -8.191662788391113
    6. 'num' → logprob: -9.066662788391113
    7. 'import' → logprob: -9.441662788391113
    8. 'size' → logprob: -9.691662788391113
    9. 'data' → logprob: -9.941662788391113
    10. 'input' → logprob: -10.066662788391113

Token 1252: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -8.172891830326989e-05
    2. '_' → logprob: -10.375082015991211
    3. 'of' → logprob: -10.500082015991211
    4. '   ' → logprob: -11.625082015991211
    5. ' of' → logprob: -12.250082015991211
    6. 's' → logprob: -12.875082015991211
    7. 'Of' → logprob: -14.125082015991211
    8. ')' → logprob: -14.250082015991211
    9. '	of' → logprob: -14.250082015991211
    10. '_OF' → logprob: -14.375082015991211

Token 1253: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -0.25400441884994507
    2. 'inputs' → logprob: -1.5040044784545898
    3. '_elements' → logprob: -6.50400447845459
    4. 'elements' → logprob: -8.87900447845459
    5. 'Inputs' → logprob: -9.50400447845459
    6. 'int' → logprob: -9.50400447845459
    7. 'ints' → logprob: -9.62900447845459
    8. '_strings' → logprob: -10.50400447845459
    9. '_queries' → logprob: -10.62900447845459
    10. '_tokens' → logprob: -11.12900447845459

Token 1254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25330084562301636
    2. '=' → logprob: -1.5033009052276611
    3. '   ' → logprob: -7.128300666809082
    4. ')' → logprob: -8.003300666809082
    5. '_' → logprob: -9.003300666809082
    6. ',' → logprob: -10.503300666809082
    7. '    ' → logprob: -10.878300666809082
    8. '<|end|>' → logprob: -10.878300666809082
    9. '()' → logprob: -11.878300666809082
    10. ' ' → logprob: -12.503300666809082

Token 1255: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.02324594371020794
    2. ' read' → logprob: -3.7732460498809814
    3. '   ' → logprob: -15.273245811462402
    4. '	read' → logprob: -15.773245811462402
    5. ' ' → logprob: -17.27324676513672
    6. '  ' → logprob: -17.77324676513672
    7. '(read' → logprob: -17.89824676513672
    8. '_read' → logprob: -19.52324676513672
    9. 'int' → logprob: -19.77324676513672
    10. ' ' → logprob: -20.14824676513672

Token 1256: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.007057996466755867
    2. '_int' → logprob: -5.132058143615723
    3. 'int' → logprob: -6.882058143615723
    4. 'single' → logprob: -9.382058143615723
    5. '_list' → logprob: -11.632058143615723
    6. 'Single' → logprob: -13.132058143615723
    7. '_' → logprob: -13.257058143615723
    8. '_char' → logprob: -13.757058143615723
    9. '_SINGLE' → logprob: -13.757058143615723
    10. '```' → logprob: -13.757058143615723

Token 1257: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.026570700109004974
    2. 'int' → logprob: -3.6515707969665527
    3. 'Int' → logprob: -8.401570320129395
    4. '_token' → logprob: -10.901570320129395
    5. 'token' → logprob: -11.401570320129395
    6. 'nt' → logprob: -12.776570320129395
    7. '<int' → logprob: -13.026570320129395
    8. '(int' → logprob: -13.526570320129395
    9. '_t' → logprob: -13.651570320129395
    10. '_tokens' → logprob: -13.651570320129395

Token 1258: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21584074199199677
    2. '()
' → logprob: -1.9658406972885132
    3. '   ' → logprob: -2.9658408164978027
    4. '
' → logprob: -6.590840816497803
    5. '<|end|>' → logprob: -7.340840816497803
    6. 'def' → logprob: -8.840840339660645
    7. '()\' → logprob: -9.215840339660645
    8. '    
' → logprob: -9.465840339660645
    9. '<|end|>' → logprob: -10.340840339660645
    10. '()<' → logprob: -10.465840339660645

Token 1259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09961400181055069
    2. 'def' → logprob: -2.849613904953003
    3. '()' → logprob: -3.849613904953003
    4. '<|end|>' → logprob: -4.974614143371582
    5. '
' → logprob: -5.724614143371582
    6. '[' → logprob: -6.474614143371582
    7. '    
' → logprob: -6.974614143371582
    8. '()
' → logprob: -7.849614143371582
    9. '<|end|>' → logprob: -8.099614143371582
    10. '(' → logprob: -8.099614143371582

Token 1260: ' return' (ID: 622)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.9457986950874329
    2. '   ' → logprob: -1.820798635482788
    3. 'arr' → logprob: -2.320798635482788
    4. 'array' → logprob: -2.445798635482788
    5. 'number' → logprob: -2.695798635482788
    6. 'for' → logprob: -2.695798635482788
    7. 'input' → logprob: -3.695798635482788
    8. 'numbers' → logprob: -3.945798635482788
    9. 'integer' → logprob: -4.320798873901367
    10. 'a' → logprob: -4.320798873901367

Token 1261: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04843144118785858
    2. 'def' → logprob: -3.798431396484375
    3. 'data' → logprob: -4.173431396484375
    4. '    ' → logprob: -6.298431396484375
    5. '    
' → logprob: -6.548431396484375
    6. '#' → logprob: -6.548431396484375
    7. '_' → logprob: -6.673431396484375
    8. 'for' → logprob: -6.923431396484375
    9. '
' → logprob: -7.673431396484375
    10. 'a' → logprob: -7.798431396484375

Token 1262: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.574261486530304
    2. 'def' → logprob: -0.949261486530304
    3. '#' → logprob: -3.824261426925659
    4. 'data' → logprob: -4.699261665344238
    5. 'for' → logprob: -5.449261665344238
    6. '_' → logprob: -5.949261665344238
    7. 'a' → logprob: -6.074261665344238
    8. 'n' → logprob: -6.199261665344238
    9. 'current' → logprob: -6.574261665344238
    10. 'pass' → logprob: -6.949261665344238

Token 1263: ' Problem' (ID: 26113)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6419862508773804
    2. 'd' → logprob: -1.3919862508773804
    3. '#' → logprob: -1.6419862508773804
    4. '(' → logprob: -4.39198637008667
    5. '\' → logprob: -5.01698637008667
    6. '_' → logprob: -5.76698637008667
    7. ' ' → logprob: -5.76698637008667
    8. '   ' → logprob: -6.51698637008667
    9. 'n' → logprob: -7.01698637008667
    10. 'a' → logprob: -7.64198637008667

Token 1264: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.018503889441490173
    2. '_F' → logprob: -4.018503665924072
    3. 'def' → logprob: -8.89350414276123
    4. '_' → logprob: -9.01850414276123
    5. ' F' → logprob: -9.89350414276123
    6. 'A' → logprob: -11.14350414276123
    7. '#' → logprob: -11.26850414276123
    8. 'f' → logprob: -12.01850414276123
    9. '_f' → logprob: -12.51850414276123
    10. '<|end|>' → logprob: -12.89350414276123

Token 1265: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.2166411478538066e-05
    2. '()' → logprob: -10.250052452087402
    3. '()
' → logprob: -12.125052452087402
    4. '
' → logprob: -12.250052452087402
    5. ' def' → logprob: -12.750052452087402
    6. ':def' → logprob: -12.875052452087402
    7. ':' → logprob: -15.375052452087402
    8. '():
' → logprob: -15.500052452087402
    9. '-def' → logprob: -15.500052452087402
    10. '(def' → logprob: -15.750052452087402

Token 1266: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.75
    3. '
' → logprob: -20.25
    4. 'de' → logprob: -21.625
    5. 'd' → logprob: -22.125
    6. '	def' → logprob: -22.75
    7. 'ndef' → logprob: -23.5
    8. 'async' → logprob: -23.5
    9. '```' → logprob: -23.875
    10. '_def' → logprob: -24.0

Token 1267: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.00033320096554234624
    2. 'solve' → logprob: -8.125332832336426
    3. '_s' → logprob: -10.875332832336426
    4. ' ' → logprob: -11.750332832336426
    5. ' ' → logprob: -12.375332832336426
    6. ' def' → logprob: -12.625332832336426
    7. '_' → logprob: -13.375332832336426
    8. ' _' → logprob: -14.000332832336426
    9. ' space' → logprob: -16.250333786010742
    10. '_solver' → logprob: -16.500333786010742

Token 1268: '_problem' (ID: 162384)
  Prédit: '_problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_problem' → logprob: -0.0006602536886930466
    2. '_' → logprob: -7.625660419464111
    3. '_code' → logprob: -9.750659942626953
    4. '_solution' → logprob: -10.750659942626953
    5. '_function' → logprob: -10.875659942626953
    6. 'Problem' → logprob: -11.250659942626953
    7. '_solver' → logprob: -11.500659942626953
    8. '_pro' → logprob: -11.500659942626953
    9. '_user' → logprob: -11.875659942626953
    10. '```' → logprob: -12.000659942626953

Token 1269: '_F' (ID: 2729)
  Prédit: '_F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_F' → logprob: -0.023458948358893394
    2. '_' → logprob: -4.773458957672119
    3. '_A' → logprob: -4.898458957672119
    4. '_D' → logprob: -5.148458957672119
    5. '_E' → logprob: -7.023458957672119
    6. '_C' → logprob: -8.148458480834961
    7. 'F' → logprob: -9.773458480834961
    8. '()' → logprob: -9.898458480834961
    9. '_B' → logprob: -10.148458480834961
    10. '```' → logprob: -10.273458480834961

Token 1270: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.584239938296378e-06
    2. ' ():' → logprob: -12.375007629394531
    3. '():
' → logprob: -12.625007629394531
    4. '():
' → logprob: -17.25000762939453
    5. '()' → logprob: -18.00000762939453
    6. 'def' → logprob: -19.37500762939453
    7. '():

' → logprob: -19.62500762939453
    8. ':' → logprob: -19.87500762939453
    9. '(":' → logprob: -20.00000762939453
    10. '(' → logprob: -20.37500762939453

Token 1271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013077369658276439
    2. 'def' → logprob: -7.126307964324951
    3. 'number' → logprob: -8.626307487487793
    4. ' number' → logprob: -9.376307487487793
    5. '(number' → logprob: -9.626307487487793
    6. '	number' → logprob: -9.626307487487793
    7. '[number' → logprob: -9.876307487487793
    8. '    ' → logprob: -11.126307487487793
    9. '<|end|>' → logprob: -11.751307487487793
    10. 'import' → logprob: -12.126307487487793

Token 1272: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' (adapté à ' number') → logprob: -0.0038214565720409155
    2. 'n' → logprob: -5.87882137298584
    3. '   ' → logprob: -7.12882137298584
    4. ' number' → logprob: -8.87882137298584
    5. 'pass' → logprob: -10.87882137298584
    6. 'def' → logprob: -11.00382137298584
    7. '#' → logprob: -11.12882137298584
    8. 'num' → logprob: -11.62882137298584
    9. 'import' → logprob: -11.87882137298584
    10. 'size' → logprob: -13.37882137298584

Token 1273: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.320199877838604e-07
    2. '	of' → logprob: -15.875
    3. ' of' → logprob: -16.375
    4. '   ' → logprob: -16.5
    5. 'of' → logprob: -17.0
    6. '_OF' → logprob: -18.0
    7. '\' → logprob: -18.125
    8. 'Of' → logprob: -19.0
    9. '_' → logprob: -19.875
    10. 's' → logprob: -20.375

Token 1274: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -7.839121826691553e-05
    2. 'inputs' → logprob: -9.750078201293945
    3. '_int' → logprob: -11.375078201293945
    4. 'int' → logprob: -12.750078201293945
    5. '_tokens' → logprob: -12.875078201293945
    6. 'single' → logprob: -13.500078201293945
    7. 'Inputs' → logprob: -14.375078201293945
    8. '_single' → logprob: -15.000078201293945
    9. '_elements' → logprob: -15.125078201293945
    10. '_strings' → logprob: -16.000078201293945

Token 1275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694889307022095
    2. '=' → logprob: -2.126948833465576
    3. '   ' → logprob: -11.376949310302734
    4. ')' → logprob: -12.376949310302734
    5. '_' → logprob: -12.876949310302734
    6. ' ' → logprob: -13.626949310302734
    7. '<|end|>' → logprob: -15.001949310302734
    8. ' ' → logprob: -15.376949310302734
    9. '()' → logprob: -16.126949310302734
    10. '    ' → logprob: -16.126949310302734

Token 1276: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.1002098023891449
    2. 'read' → logprob: -2.3502097129821777
    3. '	read' → logprob: -13.725210189819336
    4. '(read' → logprob: -13.975210189819336
    5. '_read' → logprob: -14.350210189819336
    6. '   ' → logprob: -15.725210189819336
    7. ' ' → logprob: -15.725210189819336
    8. ' ' → logprob: -15.850210189819336
    9. ' int' → logprob: -17.350210189819336
    10. '.read' → logprob: -17.350210189819336

Token 1277: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.06274855136871338
    2. '_int' → logprob: -2.812748432159424
    3. 'int' → logprob: -8.062748908996582
    4. '_char' → logprob: -8.687748908996582
    5. 'single' → logprob: -8.687748908996582
    6. '_list' → logprob: -9.437748908996582
    7. 'Single' → logprob: -10.562748908996582
    8. ' single' → logprob: -12.312748908996582
    9. '_' → logprob: -12.437748908996582
    10. 'Int' → logprob: -12.687748908996582

Token 1278: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0012502350145950913
    2. 'int' → logprob: -6.751250267028809
    3. '_token' → logprob: -10.501250267028809
    4. '_list' → logprob: -10.876250267028809
    5. '(int' → logprob: -12.126250267028809
    6. 'Int' → logprob: -12.251250267028809
    7. '_char' → logprob: -12.626250267028809
    8. '_tokens' → logprob: -13.126250267028809
    9. '()' → logprob: -13.251250267028809
    10. '_line' → logprob: -13.376250267028809

Token 1279: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018976546823978424
    2. '()
' → logprob: -4.14397668838501
    3. '   ' → logprob: -6.01897668838501
    4. '()\' → logprob: -8.643976211547852
    5. '()<' → logprob: -9.268976211547852
    6. '<|end|>' → logprob: -9.268976211547852
    7. '():
' → logprob: -10.268976211547852
    8. 'def' → logprob: -11.143976211547852
    9. '(),' → logprob: -11.268976211547852
    10. '();' → logprob: -11.518976211547852

Token 1280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21046726405620575
    2. '
' → logprob: -2.3354673385620117
    3. '<|end|>' → logprob: -2.7104673385620117
    4. 'def' → logprob: -4.210467338562012
    5. '    
' → logprob: -5.960467338562012
    6. '[' → logprob: -6.085467338562012
    7. '<|end|>' → logprob: -6.835467338562012
    8. '#' → logprob: -7.085467338562012
    9. '```' → logprob: -7.085467338562012
    10. 'import' → logprob: -7.335467338562012

Token 1281: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1282: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02297697402536869
    2. 'def' → logprob: -4.647976875305176
    3. 'for' → logprob: -5.147976875305176
    4. 'data' → logprob: -5.772976875305176
    5. 'stack' → logprob: -6.647976875305176
    6. 'graph' → logprob: -7.147976875305176
    7. 'dp' → logprob: -7.897976875305176
    8. '
' → logprob: -7.897976875305176
    9. ' for' → logprob: -8.147976875305176
    10. 'a' → logprob: -8.272976875305176

Token 1283: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.703800618648529
    2. '#' → logprob: -2.078800678253174
    3. 'i' → logprob: -2.203800678253174
    4. 'def' → logprob: -2.453800678253174
    5. 'n' → logprob: -2.953800678253174
    6. '_' → logprob: -3.203800678253174
    7. 'a' → logprob: -3.328800678253174
    8. 'x' → logprob: -4.828800678253174
    9. 'd' → logprob: -4.953800678253174
    10. 'data' → logprob: -5.328800678253174

Token 1284: ' Main' (ID: 7956)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7330897450447083
    2. '   ' → logprob: -1.4830896854400635
    3. 'pass' → logprob: -1.6080896854400635
    4. '#' → logprob: -2.9830896854400635
    5. 'data' → logprob: -4.733089923858643
    6. 'n' → logprob: -4.733089923858643
    7. '_' → logprob: -5.358089923858643
    8. 'input' → logprob: -5.358089923858643
    9. ' #' → logprob: -5.733089923858643
    10. 'for' → logprob: -5.858089923858643

Token 1285: ' Execution' (ID: 58390)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.392202976712724e-06
    2. ' def' → logprob: -12.500006675720215
    3. '
' → logprob: -13.750006675720215
    4. 'if' → logprob: -14.000006675720215
    5. '_def' → logprob: -14.750006675720215
    6. '()' → logprob: -16.5000057220459
    7. '_' → logprob: -16.8750057220459
    8. 'd' → logprob: -17.8750057220459
    9. '```' → logprob: -17.8750057220459
    10. ':def' → logprob: -17.8750057220459

Token 1286: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005239326041191816
    2. 'if' → logprob: -5.255239486694336
    3. '
' → logprob: -12.130239486694336
    4. ' def' → logprob: -16.005239486694336
    5. '\' → logprob: -17.505239486694336
    6. ' if' → logprob: -18.005239486694336
    7. '#' → logprob: -18.630239486694336
    8. ':def' → logprob: -19.005239486694336
    9. '_def' → logprob: -19.255239486694336
    10. 'ndef' → logprob: -19.505239486694336

Token 1287: 'if' (ID: 366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04858873412013054
    2. 'if' → logprob: -3.048588752746582
    3. 'for' → logprob: -13.548588752746582
    4. ' if' → logprob: -19.548587799072266
    5. ' def' → logprob: -19.548587799072266
    6. '
' → logprob: -19.923587799072266
    7. 'while' → logprob: -20.423587799072266
    8. '    
' → logprob: -20.798587799072266
    9. '```' → logprob: -21.798587799072266
    10. '#' → logprob: -22.298587799072266

Token 1288: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018154388293623924
    2. '__' → logprob: -4.018154621124268
    3. ' ' → logprob: -13.26815414428711
    4. '_' → logprob: -14.26815414428711
    5. ' ' → logprob: -14.26815414428711
    6. 'name' → logprob: -14.64315414428711
    7. ' True' → logprob: -15.01815414428711
    8. '_name' → logprob: -15.39315414428711
    9. ' name' → logprob: -15.64315414428711
    10. '___' → logprob: -15.76815414428711

Token 1289: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03424593806266785
    2. ' __' → logprob: -3.6592459678649902
    3. ' ==' → logprob: -4.90924596786499
    4. '==' → logprob: -7.90924596786499
    5. 'name' → logprob: -9.409245491027832
    6. '_' → logprob: -10.409245491027832
    7. '_name' → logprob: -10.909245491027832
    8. 'if' → logprob: -12.659245491027832
    9. '=' → logprob: -12.659245491027832
    10. 'space' → logprob: -12.784245491027832

Token 1290: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.2729995988775045e-06
    2. '__.__' → logprob: -12.500006675720215
    3. 'name' → logprob: -13.875006675720215
    4. '__
' → logprob: -14.125006675720215
    5. '____' → logprob: -14.625006675720215
    6. '___' → logprob: -16.0000057220459
    7. '__.' → logprob: -16.5000057220459
    8. '__["' → logprob: -16.8750057220459
    9. '__":
' → logprob: -17.6250057220459
    10. '__

' → logprob: -17.7500057220459

Token 1291: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003540542966220528
    2. '==' → logprob: -8.250353813171387
    3. ' ==' → logprob: -9.875353813171387
    4. '=="' → logprob: -10.750353813171387
    5. '_' → logprob: -11.750353813171387
    6. '____' → logprob: -12.750353813171387
    7. '___' → logprob: -12.875353813171387
    8. '__.__' → logprob: -13.125353813171387
    9. ' __' → logprob: -13.750353813171387
    10. '__":
' → logprob: -14.125353813171387

Token 1292: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004081485792994499
    2. ''' → logprob: -5.5040812492370605
    3. '__' → logprob: -13.254081726074219
    4. ' "__' → logprob: -13.754081726074219
    5. ''"' → logprob: -16.00408172607422
    6. '"'' → logprob: -16.75408172607422
    7. '"name' → logprob: -17.12908172607422
    8. '   ' → logprob: -17.37908172607422
    9. ' '__' → logprob: -18.12908172607422
    10. '"<?' → logprob: -18.50408172607422

Token 1293: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002553793019615114
    2. '__' → logprob: -8.375255584716797
    3. 'name' → logprob: -11.250255584716797
    4. '"' → logprob: -11.500255584716797
    5. '_main' → logprob: -13.625255584716797
    6. ''' → logprob: -15.000255584716797
    7. ' main' → logprob: -16.250255584716797
    8. '___' → logprob: -16.875255584716797
    9. '__
' → logprob: -17.250255584716797
    10. 'MAIN' → logprob: -18.000255584716797

Token 1294: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47750169038772583
    2. '__":
' → logprob: -0.9775016903877258
    3. '__':
' → logprob: -5.72750186920166
    4. '__:' → logprob: -9.10250186920166
    5. '__
' → logprob: -11.60250186920166
    6. '__["' → logprob: -11.60250186920166
    7. '_' → logprob: -11.60250186920166
    8. '__[' → logprob: -12.35250186920166
    9. '____' → logprob: -12.47750186920166
    10. '__.__' → logprob: -12.60250186920166

Token 1295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032575693912804127
    2. 'solve' → logprob: -6.378257751464844
    3. ' solve' → logprob: -7.378257751464844
    4. '__' → logprob: -7.628257751464844
    5. '```' → logprob: -8.503257751464844
    6. '    
' → logprob: -9.628257751464844
    7. '__":
' → logprob: -10.503257751464844
    8. '():
' → logprob: -10.878257751464844
    9. '(' → logprob: -11.003257751464844
    10. '()' → logprob: -11.378257751464844

Token 1296: ' solve' (ID: 17722)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.43539175391197205
    2. 'choice' → logprob: -1.8103917837142944
    3. 'task' → logprob: -2.685391664505005
    4. 'option' → logprob: -3.560391664505005
    5. 'problem' → logprob: -3.560391664505005
    6. 'input' → logprob: -4.060391902923584
    7. 'import' → logprob: -4.685391902923584
    8. 'cmd' → logprob: -5.060391902923584
    9. 'solve' (adapté à ' solve') → logprob: -5.060391902923584
    10. 'number' → logprob: -5.435391902923584

Token 1297: '_problem' (ID: 162384)
  Prédit: '_problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_problem' → logprob: -0.012571455910801888
    2. '_' → logprob: -4.387571334838867
    3. '_pro' → logprob: -10.512571334838867
    4. 'Problem' → logprob: -11.512571334838867
    5. '_prob' → logprob: -11.512571334838867
    6. ' _' → logprob: -12.887571334838867
    7. '_probability' → logprob: -13.387571334838867
    8. '(problem' → logprob: -13.512571334838867
    9. '_solution' → logprob: -13.637571334838867
    10. '```' → logprob: -13.762571334838867

Token 1298: '_B' (ID: 3201)
  Prédit: '_A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -0.0007272057700902224
    2. '_F' → logprob: -8.375727653503418
    3. '_E' → logprob: -8.625727653503418
    4. '_B' → logprob: -8.875727653503418
    5. '_D' → logprob: -8.875727653503418
    6. '_C' → logprob: -10.750727653503418
    7. '_' → logprob: -11.625727653503418
    8. 'A' → logprob: -12.250727653503418
    9. '```' → logprob: -13.250727653503418
    10. 'F' → logprob: -15.625727653503418

Token 1299: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1297
Tokens correctement prédits (1ère position, stricte): 573
Tokens correctement prédits (1ère position, avec adaptation): 605
Tokens correctement prédits (top 10): 1133
Précision stricte (1ère position): 44.18%
Précision adaptée (1ère position): 46.65%
Précision (top 10): 87.36%
================================================================================
