================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print(sum(i for i in range(1, int(input()) + 1) if i % 3 != 0 and i % 5 != 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '(sum' (ID: 45528)
  → Token d'amorce (pas de prédiction)

Token 2: '(i' (ID: 3649)
  → Token d'amorce (pas de prédiction)

Token 3: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24725262820720673
    2. '))' → logprob: -2.6222527027130127
    3. ' for' → logprob: -2.6222527027130127
    4. 'for' → logprob: -3.7472527027130127
    5. '+' → logprob: -4.122252464294434
    6. '(' → logprob: -4.747252464294434
    7. '**' → logprob: -5.372252464294434
    8. ' ' → logprob: -5.372252464294434
    9. ',' → logprob: -5.747252464294434
    10. '```' → logprob: -5.747252464294434

Token 4: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08071985840797424
    2. ' i' → logprob: -2.9557199478149414
    3. '  ' → logprob: -4.080719947814941
    4. ' )' → logprob: -5.330719947814941
    5. ' range' → logprob: -6.205719947814941
    6. '    ' → logprob: -7.830719947814941
    7. ' in' → logprob: -8.580719947814941
    8. '   ' → logprob: -8.580719947814941
    9. ' (' → logprob: -8.830719947814941
    10. 'i' → logprob: -8.955719947814941

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003623116062954068
    2. 'in' → logprob: -5.628623008728027
    3. ' ' → logprob: -11.253623008728027
    4. ')' → logprob: -12.503623008728027
    5. ' )' → logprob: -12.878623008728027
    6. '  ' → logprob: -13.753623008728027
    7. '```' → logprob: -14.253623008728027
    8. '	in' → logprob: -14.878623008728027
    9. '<|end|>' → logprob: -14.878623008728027
    10. 'import' → logprob: -15.253623008728027

Token 6: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804493322968483
    2. 'range' → logprob: -3.2880449295043945
    3. ' ' → logprob: -13.413044929504395
    4. '[' → logprob: -13.913044929504395
    5. '	range' → logprob: -14.538044929504395
    6. '(range' → logprob: -15.413044929504395
    7. ' [' → logprob: -16.28804588317871
    8. ')' → logprob: -16.78804588317871
    9. ' xrange' → logprob: -16.78804588317871
    10. '_range' → logprob: -17.03804588317871

Token 7: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4378848391061183e-05
    2. '(n' → logprob: -12.750014305114746
    3. '10' → logprob: -12.875014305114746
    4. '(
' → logprob: -13.250014305114746
    5. '(len' → logprob: -13.375014305114746
    6. '```' → logprob: -13.875014305114746
    7. ')' → logprob: -14.000014305114746
    8. ' (' → logprob: -14.125014305114746
    9. '((' → logprob: -14.250014305114746
    10. '1' → logprob: -14.625014305114746

Token 8: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.050363391637802124
    2. '100' → logprob: -3.425363302230835
    3. '1' → logprob: -4.175363540649414
    4. '0' → logprob: -7.675363540649414
    5. '5' → logprob: -8.675363540649414
    6. '11' → logprob: -8.675363540649414
    7. '101' → logprob: -8.675363540649414
    8. ' ' → logprob: -8.800363540649414
    9. '20' → logprob: -10.425363540649414
    10. '50' → logprob: -10.675363540649414

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009519561426714063
    2. '44' → logprob: -8.875951766967773
    3. '20' → logprob: -9.000951766967773
    4. ' ,' → logprob: -9.250951766967773
    5. '1' → logprob: -10.125951766967773
    6. '25' → logprob: -10.125951766967773
    7. '42' → logprob: -10.125951766967773
    8. '10' → logprob: -10.375951766967773
    9. '46' → logprob: -10.375951766967773
    10. '45' → logprob: -10.500951766967773

Token 10: ' int' (ID: 677)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '11' → logprob: -0.5648249983787537
    2. '101' → logprob: -1.0648250579833984
    3. ' ' → logprob: -3.1898250579833984
    4. '100' → logprob: -3.3148250579833984
    5. '10' → logprob: -4.939825057983398
    6. '21' → logprob: -6.439825057983398
    7. '51' → logprob: -7.814825057983398
    8. '20' → logprob: -10.314825057983398
    9. '50' → logprob: -12.064825057983398
    10. '   ' → logprob: -12.314825057983398

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00988074392080307
    2. '('' → logprob: -5.384880542755127
    3. '(input' → logprob: -5.384880542755127
    4. ')' → logprob: -9.259881019592285
    5. '(print' → logprob: -9.384881019592285
    6. '))' → logprob: -9.759881019592285
    7. '()))' → logprob: -9.884881019592285
    8. '("' → logprob: -10.259881019592285
    9. '(eval' → logprob: -10.259881019592285
    10. '(num' → logprob: -10.634881019592285

Token 12: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07960055023431778
    2. '('' → logprob: -2.7046005725860596
    3. ')' → logprob: -5.4546003341674805
    4. '())))' → logprob: -6.7046003341674805
    5. '()' → logprob: -7.0796003341674805
    6. ')))' → logprob: -7.2046003341674805
    7. '(()' → logprob: -7.7046003341674805
    8. '())' → logprob: -7.7046003341674805
    9. '("' → logprob: -7.8296003341674805
    10. '(`' → logprob: -8.32960033416748

Token 13: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19196118414402008
    2. ')' → logprob: -1.9419611692428589
    3. ')+' → logprob: -3.6919612884521484
    4. ' +' → logprob: -5.566961288452148
    5. ')))' → logprob: -6.316961288452148
    6. '))' → logprob: -7.941961288452148
    7. ',' → logprob: -8.566961288452148
    8. '))+' → logprob: -9.816961288452148
    9. '+)' → logprob: -10.316961288452148
    10. '),' → logprob: -12.066961288452148

Token 14: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029752103611826897
    2. ' ' → logprob: -3.529752016067505
    3. '2' → logprob: -13.529751777648926
    4. ' ' → logprob: -16.529752731323242
    5. '   ' → logprob: -16.779752731323242
    6. '0' → logprob: -17.279752731323242
    7. '```' → logprob: -17.279752731323242
    8. '  ' → logprob: -17.904752731323242
    9. '7' → logprob: -19.029752731323242
    10. ')' → logprob: -19.154752731323242

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '2' → logprob: -17.25006675720215
    4. '   ' → logprob: -17.75006675720215
    5. '```' → logprob: -19.37506675720215
    6. '0' → logprob: -20.12506675720215
    7. '  ' → logprob: -20.62506675720215
    8. '(' → logprob: -21.00006675720215
    9. '`' → logprob: -21.25006675720215
    10. '    ' → logprob: -21.75006675720215

Token 16: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5822214484214783
    2. ')))' → logprob: -0.8322214484214783
    3. '))' → logprob: -5.082221508026123
    4. '))))' → logprob: -10.332221031188965
    5. '):' → logprob: -11.207221031188965
    6. ')));' → logprob: -12.457221031188965
    7. '')))' → logprob: -13.582221031188965
    8. '),' → logprob: -13.582221031188965
    9. ' ' → logprob: -14.332221031188965
    10. ')))
' → logprob: -14.957221031188965

Token 17: ' if' (ID: 538)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03882499039173126
    2. ')' → logprob: -3.288825035095215
    3. ')))' → logprob: -7.163825035095215
    4. '**' → logprob: -12.913825035095215
    5. ')**' → logprob: -13.788825035095215
    6. ' ))' → logprob: -14.163825035095215
    7. '))))' → logprob: -14.288825035095215
    8. '),' → logprob: -14.288825035095215
    9. '):' → logprob: -14.413825035095215
    10. '))
' → logprob: -14.413825035095215

Token 18: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16028505563735962
    2. 'i' → logprob: -1.9102849960327148
    3. ' not' → logprob: -10.535284996032715
    4. ' ' → logprob: -10.785284996032715
    5. 'not' → logprob: -12.160284996032715
    6. '   ' → logprob: -13.035284996032715
    7. '(i' → logprob: -13.160284996032715
    8. '  ' → logprob: -14.035284996032715
    9. ' str' → logprob: -14.535284996032715
    10. 'n' → logprob: -14.785284996032715

Token 19: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08902442455291748
    2. '%' → logprob: -2.464024543762207
    3. ' ' → logprob: -9.964024543762207
    4. '**' → logprob: -10.964024543762207
    5. ')' → logprob: -11.839024543762207
    6. ' **' → logprob: -12.589024543762207
    7. ' ' → logprob: -12.714024543762207
    8. '%i' → logprob: -13.714024543762207
    9. '```' → logprob: -13.839024543762207
    10. '>' → logprob: -14.089024543762207

Token 20: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3910389542579651
    2. '2' → logprob: -1.5160388946533203
    3. ' ' → logprob: -2.2660388946533203
    4. '7' → logprob: -8.14103889465332
    5. '1' → logprob: -11.01603889465332
    6. '6' → logprob: -11.01603889465332
    7. '5' → logprob: -11.76603889465332
    8. '10' → logprob: -12.64103889465332
    9. '4' → logprob: -12.89103889465332
    10. '```' → logprob: -13.14103889465332

Token 21: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2830720543861389
    2. '2' → logprob: -1.4080719947814941
    3. '7' → logprob: -6.658071994781494
    4. ' ' → logprob: -7.783071994781494
    5. '1' → logprob: -9.033072471618652
    6. '5' → logprob: -9.783072471618652
    7. '6' → logprob: -11.033072471618652
    8. '4' → logprob: -11.158072471618652
    9. '10' → logprob: -11.783072471618652
    10. '9' → logprob: -13.408072471618652

Token 22: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.38200223445892334
    2. ' ==' → logprob: -1.8820022344589233
    3. '!=' → logprob: -2.507002353668213
    4. '==' → logprob: -2.757002353668213
    5. ')' → logprob: -4.632002353668213
    6. ' or' → logprob: -5.382002353668213
    7. ' and' → logprob: -5.507002353668213
    8. ' ' → logprob: -7.507002353668213
    9. '```' → logprob: -8.007001876831055
    10. 'and' → logprob: -8.257001876831055

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31348007917404175
    2. '0' → logprob: -1.3134801387786865
    3. '3' → logprob: -8.438480377197266
    4. '2' → logprob: -14.063480377197266
    5. '1' → logprob: -14.813480377197266
    6. ' ' → logprob: -15.063480377197266
    7. '7' → logprob: -15.563480377197266
    8. '```' → logprob: -16.063480377197266
    9. '9' → logprob: -16.688480377197266
    10. '6' → logprob: -17.063480377197266

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11503773927688599
    2. '3' → logprob: -2.240037679672241
    3. ' ' → logprob: -6.11503791809082
    4. '```' → logprob: -13.86503791809082
    5. '2' → logprob: -14.24003791809082
    6. '5' → logprob: -14.36503791809082
    7. '1' → logprob: -14.49003791809082
    8. '7' → logprob: -15.36503791809082
    9. ' ' → logprob: -15.86503791809082
    10. ')' → logprob: -16.24003791809082

Token 25: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32788971066474915
    2. '))' → logprob: -1.3278896808624268
    3. 'and' → logprob: -4.452889919281006
    4. ')' → logprob: -6.202889919281006
    5. ')))' → logprob: -7.452889919281006
    6. ' ))' → logprob: -9.077889442443848
    7. '),' → logprob: -9.327889442443848
    8. ' else' → logprob: -11.327889442443848
    9. ' ' → logprob: -11.452889442443848
    10. ')),' → logprob: -11.577889442443848

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.029918145388364792
    2. 'i' → logprob: -3.5299181938171387
    3. ' ' → logprob: -9.52991771697998
    4. ' ' → logprob: -10.02991771697998
    5. ' not' → logprob: -11.15491771697998
    6. '```' → logprob: -11.77991771697998
    7. '	i' → logprob: -12.02991771697998
    8. ' ‌' → logprob: -12.77991771697998
    9. '‌' → logprob: -13.02991771697998
    10. '4' → logprob: -13.27991771697998

Token 27: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.17975638806819916
    2. '%' → logprob: -1.8047564029693604
    3. ' ' → logprob: -12.429756164550781
    4. ')' → logprob: -12.679756164550781
    5. '```' → logprob: -13.929756164550781
    6. '<|end|>' → logprob: -14.054756164550781
    7. ' ' → logprob: -14.554756164550781
    8. '2' → logprob: -14.929756164550781
    9. 's' → logprob: -14.929756164550781
    10. '7' → logprob: -15.304756164550781

Token 28: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.08897862583398819
    2. ' ' → logprob: -2.4639785289764404
    3. '7' → logprob: -10.21397876739502
    4. '2' → logprob: -14.21397876739502
    5. '59' → logprob: -14.83897876739502
    6. '9' → logprob: -14.83897876739502
    7. '6' → logprob: -15.46397876739502
    8. ' ' → logprob: -16.088977813720703
    9. '55' → logprob: -16.213977813720703
    10. '4' → logprob: -16.213977813720703

Token 29: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. '7' → logprob: -14.625005722045898
    4. '```' → logprob: -15.500005722045898
    5. '   ' → logprob: -17.1250057220459
    6. '2' → logprob: -17.6250057220459
    7. '٥' → logprob: -17.6250057220459
    8. '59' → logprob: -17.6250057220459
    9. '  ' → logprob: -17.7500057220459
    10. '५' → logprob: -18.1250057220459

Token 30: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.01002379972487688
    2. '!=' → logprob: -4.635023593902588
    3. ')' → logprob: -9.760024070739746
    4. ' ' → logprob: -9.885024070739746
    5. ')!=' → logprob: -9.885024070739746
    6. '```' → logprob: -10.010024070739746
    7. ' ' → logprob: -10.635024070739746
    8. '<|end|>' → logprob: -11.635024070739746
    9. '()!=' → logprob: -12.135024070739746
    10. ' !==' → logprob: -12.635024070739746

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12693586945533752
    2. ' ' → logprob: -2.1269359588623047
    3. '3' → logprob: -12.501935958862305
    4. '```' → logprob: -13.001935958862305
    5. '   ' → logprob: -14.814435958862305
    6. '  ' → logprob: -15.126935958862305
    7. ' ' → logprob: -15.626935958862305
    8. '2' → logprob: -15.689435958862305
    9. '     ' → logprob: -15.751935958862305
    10. '``' → logprob: -16.376935958862305

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014676038408651948
    2. ' ' → logprob: -7.001467704772949
    3. '3' → logprob: -7.501467704772949
    4. '   ' → logprob: -13.25146770477295
    5. '```' → logprob: -13.87646770477295
    6. '  ' → logprob: -14.87646770477295
    7. '2' → logprob: -16.126466751098633
    8. '     ' → logprob: -16.501466751098633
    9. '       ' → logprob: -16.626466751098633
    10. '	' → logprob: -16.626466751098633

Token 33: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38693806529045105
    2. ')' → logprob: -1.1369380950927734
    3. ')))' → logprob: -9.761938095092773
    4. '),' → logprob: -12.136938095092773
    5. ')
' → logprob: -13.886938095092773
    6. '))
' → logprob: -14.386938095092773
    7. ''))' → logprob: -14.886938095092773
    8. '):' → logprob: -15.136938095092773
    9. ' ))' → logprob: -15.261938095092773
    10. ')}' → logprob: -15.511938095092773


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 31
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 61.29%
Précision adaptée (1ère position): 61.29%
Précision (top 10): 93.55%
================================================================================
