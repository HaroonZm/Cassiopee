================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return int(input())

def get_weights():
    return list(map(int, input().split()))

def compute_total(weights):
    return sum(weights)

def initialize_answer():
    return 1000000000

def compute_partial_weights(weights, index):
    return weights[:index]

def compute_partial_sum(weights):
    return sum(weights)

def compute_difference(total, partial_sum):
    return abs(total - 2 * partial_sum)

def update_answer(current_ans, diff):
    if current_ans > diff:
        return diff
    else:
        return current_ans

def main():
    N = get_input()
    W = get_weights()
    total_W = compute_total(W)
    ans = initialize_answer()
    for i in range(N):
        partial_W = compute_partial_weights(W, i)
        partial_sum = compute_partial_sum(partial_W)
        diff = compute_difference(total_W, partial_sum)
        ans = update_answer(ans, diff)
    print_result(ans)

def print_result(ans):
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015994871500879526
    2. '_' → logprob: -6.626599311828613
    3. ' (' → logprob: -9.376599311828613
    4. '():' → logprob: -9.376599311828613
    5. '```' → logprob: -10.751599311828613
    6. '()' → logprob: -11.126599311828613
    7. '(:' → logprob: -11.501599311828613
    8. '("("' → logprob: -11.876599311828613
    9. ':' → logprob: -12.376599311828613
    10. '(_:' → logprob: -12.501599311828613

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6345653533935547
    2. '   ' → logprob: -1.6345653533935547
    3. '\' → logprob: -2.0095653533935547
    4. '    
' → logprob: -3.3845653533935547
    5. '\n' → logprob: -3.6345653533935547
    6. '(' → logprob: -3.8845653533935547
    7. '  
' → logprob: -5.134565353393555
    8. '   
' → logprob: -5.259565353393555
    9. '()' → logprob: -5.384565353393555
    10. '(
' → logprob: -5.384565353393555

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21514545381069183
    2. 'input' → logprob: -2.7151453495025635
    3. '   ' → logprob: -3.4651453495025635
    4. 'user' → logprob: -3.5901453495025635
    5. ' ' → logprob: -4.090145587921143
    6. 'x' → logprob: -4.090145587921143
    7. 'i' → logprob: -4.215145587921143
    8. 'r' → logprob: -5.465145587921143
    9. '```' → logprob: -5.465145587921143
    10. ' return' → logprob: -6.215145587921143

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0731913223862648
    2. '"' → logprob: -3.5731914043426514
    3. 'input' → logprob: -4.198191165924072
    4. ' input' → logprob: -4.323191165924072
    5. ''' → logprob: -4.573191165924072
    6. '  ' → logprob: -6.323191165924072
    7. ' "' → logprob: -7.198191165924072
    8. ' '' → logprob: -7.823191165924072
    9. '    ' → logprob: -8.19819164276123
    10. '(input' → logprob: -8.69819164276123

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005557744298130274
    2. '('' → logprob: -8.375555992126465
    3. '(input' → logprob: -8.375555992126465
    4. ' (' → logprob: -9.875555992126465
    5. '(open' → logprob: -12.000555992126465
    6. '(
' → logprob: -12.375555992126465
    7. '()' → logprob: -12.375555992126465
    8. ' ' → logprob: -12.500555992126465
    9. '(space' → logprob: -12.875555992126465
    10. '("("' → logprob: -12.875555992126465

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05071688070893288
    2. '()' → logprob: -3.5507168769836426
    3. '())' → logprob: -4.050716876983643
    4. '('' → logprob: -6.425716876983643
    5. '()))' → logprob: -7.675716876983643
    6. ')' → logprob: -7.800716876983643
    7. '(""))' → logprob: -8.0507173538208
    8. '(()' → logprob: -8.5507173538208
    9. '("("' → logprob: -8.8007173538208
    10. '(
' → logprob: -10.0507173538208

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4820794463157654
    2. '\n' → logprob: -2.48207950592041
    3. '
' → logprob: -2.85707950592041
    4. '(' → logprob: -2.98207950592041
    5. '#' → logprob: -3.35707950592041
    6. '```' → logprob: -3.35707950592041
    7. ')' → logprob: -3.73207950592041
    8. '(
' → logprob: -4.73207950592041
    9. '

' → logprob: -4.73207950592041
    10. 'x' → logprob: -4.85707950592041

Token 10: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.575765073299408
    2. ' calculate' → logprob: -0.950765073299408
    3. ' compute' → logprob: -3.9507651329040527
    4. ' add' → logprob: -4.825765132904053
    5. ' process' → logprob: -4.950765132904053
    6. ' space' → logprob: -5.075765132904053
    7. ' main' → logprob: -5.825765132904053
    8. ' user' → logprob: -7.325765132904053
    9. ' set' → logprob: -7.575765132904053
    10. ' ' → logprob: -7.700765132904053

Token 11: '_weights' (ID: 49127)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.19311855733394623
    2. '_sum' → logprob: -2.6931185722351074
    3. '_' → logprob: -3.0681185722351074
    4. '_output' → logprob: -3.6931185722351074
    5. '_result' → logprob: -4.818118572235107
    6. '_string' → logprob: -5.068118572235107
    7. '_user' → logprob: -5.193118572235107
    8. '_square' → logprob: -5.818118572235107
    9. '_data' → logprob: -6.068118572235107
    10. '_value' → logprob: -6.193118572235107

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03626341000199318
    2. '_' → logprob: -3.4112634658813477
    3. '():' → logprob: -7.036263465881348
    4. '()' → logprob: -7.536263465881348
    5. '```' → logprob: -8.411263465881348
    6. '("("' → logprob: -8.536263465881348
    7. '(_)' → logprob: -9.536263465881348
    8. ' (' → logprob: -9.786263465881348
    9. 's' → logprob: -10.036263465881348
    10. ''' → logprob: -10.161263465881348

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4934573769569397
    2. '(' → logprob: -0.9934573769569397
    3. '[' → logprob: -4.993457317352295
    4. '    ' → logprob: -5.493457317352295
    5. ' return' → logprob: -6.118457317352295
    6. '()' → logprob: -6.618457317352295
    7. ' (' → logprob: -6.743457317352295
    8. ' ' → logprob: -7.368457317352295
    9. '(
' → logprob: -7.493457317352295
    10. 'def' → logprob: -7.993457317352295

Token 14: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.923295795917511
    2. '   ' → logprob: -1.4232957363128662
    3. ' weights' → logprob: -2.048295736312866
    4. ' [' → logprob: -2.173295736312866
    5. 'weights' → logprob: -3.423295736312866
    6. ' return' → logprob: -3.548295736312866
    7. ' []' → logprob: -3.798295736312866
    8. '[]' → logprob: -4.048295974731445
    9. 'return' (adapté à ' return') → logprob: -4.298295974731445
    10. ' ' → logprob: -6.923295974731445

Token 15: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.22185644507408142
    2. '[' → logprob: -2.3468563556671143
    3. ' []' → logprob: -2.3468563556671143
    4. '[]' → logprob: -5.846856594085693
    5. '[int' → logprob: -5.971856594085693
    6. ' list' → logprob: -6.971856594085693
    7. ' ' → logprob: -7.971856594085693
    8. '[input' → logprob: -8.346856117248535
    9. 'list' → logprob: -9.096856117248535
    10. '[list' → logprob: -9.221856117248535

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002326767658814788
    2. '(range' → logprob: -6.252326965332031
    3. '(map' → logprob: -8.127326965332031
    4. '(int' → logprob: -10.252326965332031
    5. ' (' → logprob: -10.877326965332031
    6. '(
' → logprob: -12.127326965332031
    7. '(input' → logprob: -12.252326965332031
    8. '(eval' → logprob: -12.252326965332031
    9. '(

' → logprob: -12.252326965332031
    10. '(filter' → logprob: -12.502326965332031

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010847720317542553
    2. '(' → logprob: -5.010847568511963
    3. 'int' → logprob: -5.510847568511963
    4. '<int' → logprob: -10.760848045349121
    5. ' int' → logprob: -11.385848045349121
    6. '(
' → logprob: -11.635848045349121
    7. '=int' → logprob: -11.885848045349121
    8. '```' → logprob: -11.885848045349121
    9. '   ' → logprob: -12.135848045349121
    10. ',int' → logprob: -12.635848045349121

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06241431087255478
    2. ',input' → logprob: -3.5624144077301025
    3. 'input' → logprob: -3.6874144077301025
    4. ',' → logprob: -5.562414169311523
    5. '(' → logprob: -6.437414169311523
    6. ' input' → logprob: -7.062414169311523
    7. '))' → logprob: -7.812414169311523
    8. ')' → logprob: -9.062414169311523
    9. ' (' → logprob: -9.687414169311523
    10. '=input' → logprob: -9.812414169311523

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6326535940170288
    2. 'input' → logprob: -0.7576535940170288
    3. '(input' → logprob: -10.13265323638916
    4. ',input' → logprob: -11.75765323638916
    5. ' ' → logprob: -13.25765323638916
    6. '=input' → logprob: -13.50765323638916
    7. '	input' → logprob: -13.50765323638916
    8. ')' → logprob: -14.38265323638916
    9. '_input' → logprob: -14.88265323638916
    10. '<input' → logprob: -15.00765323638916

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5212511420249939
    2. '()))' → logprob: -1.1462512016296387
    3. '()' → logprob: -2.5212512016296387
    4. '())' → logprob: -5.021251201629639
    5. '()));' → logprob: -7.771251201629639
    6. '))' → logprob: -8.02125072479248
    7. '())))' → logprob: -8.02125072479248
    8. '(' → logprob: -8.52125072479248
    9. '()>' → logprob: -10.27125072479248
    10. '());' → logprob: -10.89625072479248

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005558936391025782
    2. 'strip' → logprob: -7.500555992126465
    3. 'rstrip' → logprob: -13.000555992126465
    4. ' split' → logprob: -14.375555992126465
    5. 'spl' → logprob: -17.62555503845215
    6. '(split' → logprob: -18.37555503845215
    7. 's' → logprob: -18.75055503845215
    8. ' strip' → logprob: -19.75055503845215
    9. 'sp' → logprob: -20.37555503845215
    10. '.split' → logprob: -20.50055503845215

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02246713824570179
    2. '()' → logprob: -3.8974671363830566
    3. '))' → logprob: -7.147467136383057
    4. '())' → logprob: -7.147467136383057
    5. '())))' → logprob: -8.147467613220215
    6. '(' → logprob: -10.147467613220215
    7. '()));' → logprob: -12.147467613220215
    8. ')))' → logprob: -12.272467613220215
    9. '()))
' → logprob: -12.397467613220215
    10. ')' → logprob: -13.522467613220215

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1723145991563797
    2. 'd' → logprob: -1.9223146438598633
    3. '
' → logprob: -4.672314643859863
    4. '

' → logprob: -6.797314643859863
    5. 'n' → logprob: -7.672314643859863
    6. '\' → logprob: -7.672314643859863
    7. '```' → logprob: -8.422314643859863
    8. '#' → logprob: -8.547314643859863
    9. 'a' → logprob: -10.422314643859863
    10. 'w' → logprob: -10.922314643859863

Token 24: ' compute' (ID: 23864)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.5019682049751282
    2. ' predict' → logprob: -1.2519681453704834
    3. ' train' → logprob: -3.2519681453704834
    4. ' compute' → logprob: -3.6269681453704834
    5. ' main' → logprob: -4.3769683837890625
    6. ' get' → logprob: -4.6269683837890625
    7. ' multiply' → logprob: -5.0019683837890625
    8. ' forward' → logprob: -6.5019683837890625
    9. ' process' → logprob: -6.5019683837890625
    10. ' soft' → logprob: -6.6269683837890625

Token 25: '_total' (ID: 23814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8489620089530945
    2. '_output' → logprob: -1.0989620685577393
    3. '_sum' → logprob: -1.8489620685577393
    4. '(' → logprob: -3.9739620685577393
    5. '_weight' → logprob: -4.09896183013916
    6. '_weights' → logprob: -4.72396183013916
    7. '_score' → logprob: -5.34896183013916
    8. '_loss' → logprob: -5.59896183013916
    9. '_linear' → logprob: -5.72396183013916
    10. '_prediction' → logprob: -6.22396183013916

Token 26: '(weights' (ID: 154124)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30705198645591736
    2. '_' → logprob: -2.18205189704895
    3. '_weight' → logprob: -2.43205189704895
    4. '_score' → logprob: -3.93205189704895
    5. '_cost' → logprob: -4.557052135467529
    6. '_amount' → logprob: -5.057052135467529
    7. '_weights' → logprob: -5.182052135467529
    8. '_price' → logprob: -5.182052135467529
    9. '_sum' → logprob: -5.182052135467529
    10. '(_' → logprob: -6.682052135467529

Token 27: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5786263346672058
    2. '):' → logprob: -0.8286263346672058
    3. ' ,' → logprob: -6.8286261558532715
    4. ' ):' → logprob: -7.0786261558532715
    5. '):
' → logprob: -8.20362663269043
    6. ')' → logprob: -8.45362663269043
    7. '(weights' → logprob: -9.82862663269043
    8. ')):' → logprob: -10.07862663269043
    9. '   ' → logprob: -10.32862663269043
    10. '):
' → logprob: -11.32862663269043

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03310243412852287
    2. ' return' → logprob: -4.408102512359619
    3. ' total' → logprob: -5.283102512359619
    4. ' sum' → logprob: -5.533102512359619
    5. 'return' → logprob: -5.658102512359619
    6. '    ' → logprob: -5.783102512359619
    7. 'sum' → logprob: -6.283102512359619
    8. 'total' → logprob: -6.283102512359619
    9. ' ' → logprob: -8.033102035522461
    10. '    
' → logprob: -8.783102035522461

Token 29: ' return' (ID: 622)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.18503409624099731
    2. ' return' → logprob: -2.5600340366363525
    3. '   ' → logprob: -2.6850340366363525
    4. 'total' → logprob: -4.185034275054932
    5. ' sum' → logprob: -5.685034275054932
    6. 'return' (adapté à ' return') → logprob: -5.810034275054932
    7. '    ' → logprob: -7.435034275054932
    8. 'sum' → logprob: -7.935034275054932
    9. ' result' → logprob: -8.060033798217773
    10. ' ' → logprob: -8.935033798217773

Token 30: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.01709616184234619
    2. 'sum' → logprob: -4.142096042633057
    3. ' ' → logprob: -6.892096042633057
    4. ' ' → logprob: -11.017096519470215
    5. '  ' → logprob: -11.517096519470215
    6. '(sum' → logprob: -11.767096519470215
    7. '   ' → logprob: -12.267096519470215
    8. '	sum' → logprob: -12.892096519470215
    9. ' weights' → logprob: -14.142096519470215
    10. '"' → logprob: -14.767096519470215

Token 31: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.062000520527362823
    2. '(' → logprob: -2.8120005130767822
    3. '(weight' → logprob: -10.812000274658203
    4. ' (' → logprob: -11.937000274658203
    5. 'weights' → logprob: -13.312000274658203
    6. '((' → logprob: -13.687000274658203
    7. '(
' → logprob: -14.937000274658203
    8. ' weights' → logprob: -15.062000274658203
    9. '("("' → logprob: -15.062000274658203
    10. '(scores' → logprob: -15.062000274658203

Token 32: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.165027217415627e-05
    2. '))' → logprob: -11.000021934509277
    3. ' )' → logprob: -12.500021934509277
    4. '   ' → logprob: -14.375021934509277
    5. ')
' → logprob: -15.750021934509277
    6. ')))' → logprob: -15.750021934509277
    7. ' ' → logprob: -16.25002098083496
    8. '}' → logprob: -17.50002098083496
    9. ')`' → logprob: -17.50002098083496
    10. '）' → logprob: -17.75002098083496

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2080029994249344
    2. '(' → logprob: -3.083003044128418
    3. '_' → logprob: -3.333003044128418
    4. '<|end|>' → logprob: -3.583003044128418
    5. '*' → logprob: -4.333003044128418
    6. '()' → logprob: -4.583003044128418
    7. '\' → logprob: -4.958003044128418
    8. '(
' → logprob: -5.083003044128418
    9. '
' → logprob: -5.208003044128418
    10. '.' → logprob: -5.208003044128418

Token 34: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13145990669727325
    2. ' compute' → logprob: -2.631459951400757
    3. ' calculate' → logprob: -3.756459951400757
    4. ' get' → logprob: -3.756459951400757
    5. ' process' → logprob: -5.631459712982178
    6. 'main' → logprob: -8.756460189819336
    7. ' generate' → logprob: -9.256460189819336
    8. ' total' → logprob: -9.256460189819336
    9. 'compute' → logprob: -9.381460189819336
    10. ' print' → logprob: -9.631460189819336

Token 35: '_answer' (ID: 65702)
  Prédit: '_weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.14923837780952454
    2. '_' → logprob: -2.399238348007202
    3. '(' → logprob: -3.399238348007202
    4. '_array' → logprob: -6.274238586425781
    5. '_counter' → logprob: -6.649238586425781
    6. '(_' → logprob: -6.649238586425781
    7. '_matrix' → logprob: -6.774238586425781
    8. '_total' → logprob: -6.774238586425781
    9. '_values' → logprob: -6.899238586425781
    10. '_weight' → logprob: -7.024238586425781

Token 36: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.044658806174993515
    2. '()' → logprob: -3.169658899307251
    3. '():
' → logprob: -6.919658660888672
    4. '(' → logprob: -8.544658660888672
    5. ' ():' → logprob: -8.544658660888672
    6. ' ()' → logprob: -8.794658660888672
    7. 's' → logprob: -9.794658660888672
    8. '():

' → logprob: -11.169658660888672
    9. ' =' → logprob: -11.794658660888672
    10. '_' → logprob: -12.169658660888672

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26827678084373474
    2. '0' → logprob: -2.3932766914367676
    3. ' []' → logprob: -2.8932766914367676
    4. '    ' → logprob: -3.5182766914367676
    5. '[]' → logprob: -3.6432766914367676
    6. ' return' → logprob: -3.7682766914367676
    7. ' ' → logprob: -5.768276691436768
    8. 'return' → logprob: -6.143276691436768
    9. ' =' → logprob: -6.143276691436768
    10. ' answer' → logprob: -7.393276691436768

Token 38: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8256257176399231
    2. '[]' → logprob: -1.4506256580352783
    3. 'return' (adapté à ' return') → logprob: -1.5756256580352783
    4. ' return' → logprob: -2.8256256580352783
    5. ' []' → logprob: -3.5756256580352783
    6. '   ' → logprob: -4.075625896453857
    7. ' ' → logprob: -4.200625896453857
    8. '[' → logprob: -8.3256254196167
    9. '    ' → logprob: -8.5756254196167
    10. '{}' → logprob: -8.7006254196167

Token 39: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.001078724861145
    2. '0' → logprob: -1.126078724861145
    3. ' []' → logprob: -1.501078724861145
    4. ' ' → logprob: -2.7510786056518555
    5. '{}' → logprob: -4.7510786056518555
    6. 'float' → logprob: -5.7510786056518555
    7. ' {}' → logprob: -6.0010786056518555
    8. ' float' → logprob: -6.1260786056518555
    9. ' None' → logprob: -6.6260786056518555
    10. '[' → logprob: -7.0010786056518555

Token 40: '100' (ID: 1353)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4475826919078827
    2. '0' → logprob: -1.072582721710205
    3. '{}' → logprob: -4.197582721710205
    4. 'float' → logprob: -6.322582721710205
    5. '[' → logprob: -6.947582721710205
    6. '[]}' → logprob: -8.447582244873047
    7. '{' → logprob: -8.572582244873047
    8. '-' → logprob: -9.197582244873047
    9. '999' → logprob: -9.822582244873047
    10. '100' → logprob: -9.947582244873047

Token 41: '000' (ID: 1302)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6282638907432556
    2. '<|end|>' → logprob: -1.0032639503479004
    3. '\' → logprob: -3.2532639503479004
    4. '_' → logprob: -3.7532639503479004
    5. '#' → logprob: -4.7532639503479
    6. '```' → logprob: -4.8782639503479
    7. '\n' → logprob: -5.1282639503479
    8. '<|end|>' → logprob: -5.8782639503479
    9. '()' → logprob: -6.3782639503479
    10. ')' → logprob: -6.3782639503479

Token 42: '000' (ID: 1302)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19393390417099
    2. '_' → logprob: -2.3189339637756348
    3. '<|end|>' → logprob: -3.0689339637756348
    4. '\' → logprob: -4.943933963775635
    5. '
' → logprob: -5.068933963775635
    6. '```' → logprob: -5.693933963775635
    7. '

' → logprob: -5.943933963775635
    8. '#' → logprob: -6.443933963775635
    9. ':' → logprob: -6.443933963775635
    10. '<|end|>' → logprob: -6.568933963775635

Token 43: '0' (ID: 15)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5192816257476807
    2. '<|end|>' → logprob: -1.1442816257476807
    3. '#' → logprob: -3.1442816257476807
    4. '\' → logprob: -4.269281387329102
    5. '_' → logprob: -4.269281387329102
    6. '```' → logprob: -5.269281387329102
    7. '<|end|>' → logprob: -5.269281387329102
    8. '\n' → logprob: -6.769281387329102
    9. '[' → logprob: -7.019281387329102
    10. ')' → logprob: -7.519281387329102

Token 44: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005839215125888586
    2. '<|end|>' → logprob: -5.5058393478393555
    3. '#' → logprob: -7.1308393478393555
    4. '```' → logprob: -7.7558393478393555
    5. '<|end|>' → logprob: -8.505839347839355
    6. '
' → logprob: -9.005839347839355
    7. '\' → logprob: -9.255839347839355
    8. '

' → logprob: -10.755839347839355
    9. 'a' → logprob: -11.380839347839355
    10. 'd' → logprob: -11.630839347839355

Token 46: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3624942898750305
    2. ' find' → logprob: -2.2374942302703857
    3. ' solve' → logprob: -2.3624942302703857
    4. ' compute' → logprob: -2.6124942302703857
    5. ' optimize' → logprob: -5.112494468688965
    6. ' minimize' → logprob: -5.487494468688965
    7. ' calculate' → logprob: -5.612494468688965
    8. ' get' → logprob: -5.737494468688965
    9. ' update' → logprob: -5.737494468688965
    10. ' process' → logprob: -6.112494468688965

Token 47: '_partial' (ID: 139756)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.09700756520032883
    2. '_max' → logprob: -3.2220075130462646
    3. '_answer' → logprob: -3.9720075130462646
    4. '_min' → logprob: -4.472007751464844
    5. '_' → logprob: -4.972007751464844
    6. '_average' → logprob: -5.722007751464844
    7. '_difference' → logprob: -6.097007751464844
    8. '_sum' → logprob: -6.472007751464844
    9. '_threshold' → logprob: -6.597007751464844
    10. '_final' → logprob: -7.097007751464844

Token 48: '_weights' (ID: 49127)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.633885383605957
    2. '_' → logprob: -0.883885383605957
    3. '_sum' → logprob: -3.133885383605957
    4. '(' → logprob: -5.883885383605957
    5. '_max' → logprob: -6.383885383605957
    6. '_score' → logprob: -6.383885383605957
    7. '_value' → logprob: -6.758885383605957
    8. '_weight' → logprob: -7.008885383605957
    9. ' _' → logprob: -7.133885383605957
    10. '_answer' → logprob: -7.758885383605957

Token 49: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.018584512174129486
    2. '(' → logprob: -4.018584728240967
    3. ' (' → logprob: -8.143584251403809
    4. '_weights' → logprob: -9.768584251403809
    5. '(weight' → logprob: -9.893584251403809
    6. '(parts' → logprob: -12.643584251403809
    7. '(s' → logprob: -12.768584251403809
    8. '(scores' → logprob: -13.143584251403809
    9. '(w' → logprob: -13.268584251403809
    10. '_' → logprob: -13.268584251403809

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009572625160217285
    2. '):' → logprob: -4.759572505950928
    3. ' ,' → logprob: -7.384572505950928
    4. '[:' → logprob: -8.634572982788086
    5. ',index' → logprob: -10.384572982788086
    6. '[' → logprob: -10.634572982788086
    7. ')' → logprob: -11.009572982788086
    8. ' ):' → logprob: -11.384572982788086
    9. ',n' → logprob: -11.384572982788086
    10. '   ' → logprob: -11.509572982788086

Token 51: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.9112931489944458
    2. ' start' → logprob: -1.6612931489944458
    3. ' n' → logprob: -2.1612930297851562
    4. ' limit' → logprob: -2.7862930297851562
    5. ' k' → logprob: -3.1612930297851562
    6. 'index' → logprob: -3.5362930297851562
    7. ' idx' → logprob: -3.6612930297851562
    8. ' cutoff' → logprob: -4.536293029785156
    9. ' indices' → logprob: -4.536293029785156
    10. ' upto' → logprob: -4.786293029785156

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005724519141949713
    2. ',' → logprob: -8.625572204589844
    3. '):
' → logprob: -9.250572204589844
    4. ')' → logprob: -9.250572204589844
    5. '+' → logprob: -9.375572204589844
    6. ' ):' → logprob: -9.875572204589844
    7. 's' → logprob: -10.000572204589844
    8. ':' → logprob: -12.000572204589844
    9. '   ' → logprob: -13.125572204589844
    10. '[' → logprob: -13.125572204589844

Token 53: '   ' (ID: 271)
  Prédit: ' weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.8198672533035278
    2. '   ' → logprob: -1.4448672533035278
    3. '[' → logprob: -2.1948671340942383
    4. 'weights' → logprob: -2.5698671340942383
    5. ' sum' → logprob: -3.0698671340942383
    6. ':' → logprob: -3.5698671340942383
    7. 'sum' → logprob: -4.569867134094238
    8. ' :' → logprob: -4.694867134094238
    9. '[:]' → logprob: -4.819867134094238
    10. ' return' → logprob: -4.944867134094238

Token 54: ' return' (ID: 622)
  Prédit: ' weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.582817792892456
    2. ' return' → logprob: -1.457817792892456
    3. 'weights' → logprob: -2.207817792892456
    4. ' sum' → logprob: -3.082817792892456
    5. '   ' → logprob: -3.707817792892456
    6. 'sum' → logprob: -4.332818031311035
    7. 'return' (adapté à ' return') → logprob: -5.082818031311035
    8. '[' → logprob: -5.457818031311035
    9. ' [' → logprob: -6.457818031311035
    10. '(weights' → logprob: -7.332818031311035

Token 55: ' weights' (ID: 28460)
  Prédit: ' weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.11601532995700836
    2. ' sum' → logprob: -2.4910154342651367
    3. 'weights' → logprob: -3.7410154342651367
    4. 'sum' → logprob: -5.991015434265137
    5. ' [' → logprob: -8.741015434265137
    6. ' weight' → logprob: -9.491015434265137
    7. '   ' → logprob: -9.866015434265137
    8. '(weights' → logprob: -10.366015434265137
    9. '[' → logprob: -10.428515434265137
    10. ' ' → logprob: -10.741015434265137

Token 56: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.07795415073633194
    2. '[index' → logprob: -3.327954053878784
    3. '[:]' → logprob: -3.827954053878784
    4. '[' → logprob: -4.077954292297363
    5. '[:-' → logprob: -9.327954292297363
    6. 'index' → logprob: -10.077954292297363
    7. '```' → logprob: -10.077954292297363
    8. '[
' → logprob: -10.327954292297363
    9. ' [:' → logprob: -10.702954292297363
    10. '<|end|>' → logprob: -10.765454292297363

Token 57: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0005538671393878758
    2. ' index' → logprob: -7.500554084777832
    3. '(index' → logprob: -14.375554084777832
    4. ':index' → logprob: -16.125553131103516
    5. '[index' → logprob: -16.250553131103516
    6. '#index' → logprob: -17.250553131103516
    7. '	index' → logprob: -17.750553131103516
    8. '=index' → logprob: -17.875553131103516
    9. '1' → logprob: -19.000553131103516
    10. ' ' → logprob: -19.375553131103516

Token 58: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018490897491574287
    2. '+' → logprob: -4.393490791320801
    3. ')' → logprob: -5.268490791320801
    4. '])' → logprob: -7.268490791320801
    5. ' ]' → logprob: -9.7684907913208
    6. ' +' → logprob: -10.3934907913208
    7. ')]' → logprob: -11.1434907913208
    8. ' )' → logprob: -12.7684907913208
    9. ']
' → logprob: -13.2684907913208
    10. '<|end|>' → logprob: -13.3934907913208

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04973691329360008
    2. '<|end|>' → logprob: -3.049736976623535
    3. '<|end|>' → logprob: -7.799736976623535
    4. '
' → logprob: -8.049736976623535
    5. '```' → logprob: -8.799736976623535
    6. '

' → logprob: -9.299736976623535
    7. ' def' → logprob: -9.549736976623535
    8. '[' → logprob: -10.174736976623535
    9. '*' → logprob: -10.549736976623535
    10. '\' → logprob: -10.799736976623535

Token 60: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.028159093111753464
    2. 'compute' → logprob: -4.278159141540527
    3. ' get' → logprob: -5.028159141540527
    4. ' find' → logprob: -5.278159141540527
    5. ' calculate' → logprob: -8.278159141540527
    6. ' main' → logprob: -8.278159141540527
    7. ' max' → logprob: -8.403159141540527
    8. ' update' → logprob: -8.653159141540527
    9. ' def' → logprob: -8.903159141540527
    10. ' sum' → logprob: -9.028159141540527

Token 61: '_partial' (ID: 139756)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.01924261637032032
    2. '_partial' → logprob: -4.144242763519287
    3. '_' → logprob: -6.769242763519287
    4. '_weights' → logprob: -7.269242763519287
    5. '_max' → logprob: -8.019242286682129
    6. '_weight' → logprob: -8.144242286682129
    7. '_sum' → logprob: -8.769242286682129
    8. '_answer' → logprob: -9.019242286682129
    9. '_average' → logprob: -9.269242286682129
    10. '_remaining' → logprob: -9.769242286682129

Token 62: '_sum' (ID: 29859)
  Prédit: '_weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.0003476209531072527
    2. '_weight' → logprob: -8.750348091125488
    3. '_total' → logprob: -9.500348091125488
    4. '_' → logprob: -10.250348091125488
    5. '_sum' → logprob: -10.250348091125488
    6. 'weights' → logprob: -11.125348091125488
    7. '_w' → logprob: -12.125348091125488
    8. ' weights' → logprob: -12.500348091125488
    9. '_scores' → logprob: -12.750348091125488
    10. ' _' → logprob: -13.000348091125488

Token 63: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.0012534460984170437
    2. '(' → logprob: -6.751253604888916
    3. '_weights' → logprob: -10.251253128051758
    4. ' (' → logprob: -10.251253128051758
    5. ' weights' → logprob: -12.751253128051758
    6. 'weights' → logprob: -13.001253128051758
    7. '(weight' → logprob: -13.501253128051758
    8. '(scores' → logprob: -13.501253128051758
    9. 'Weights' → logprob: -14.126253128051758
    10. '(s' → logprob: -14.251253128051758

Token 64: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005306334351189435
    2. ',index' → logprob: -8.375530242919922
    3. ' ,' → logprob: -8.500530242919922
    4. '[:' → logprob: -9.625530242919922
    5. ')' → logprob: -10.875530242919922
    6. '[' → logprob: -12.625530242919922
    7. '   ' → logprob: -13.250530242919922
    8. '‌,' → logprob: -13.750530242919922
    9. '[index' → logprob: -14.250530242919922
    10. ',int' → logprob: -14.750530242919922

Token 65: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7357897758483887
    2. ' return' → logprob: -0.8607897758483887
    3. '   ' → logprob: -2.8607897758483887
    4. 'sum' → logprob: -3.3607897758483887
    5. ' sum' → logprob: -5.110789775848389
    6. ' ' → logprob: -10.735790252685547
    7. '  ' → logprob: -10.735790252685547
    8. '	return' → logprob: -11.610790252685547
    9. '(sum' → logprob: -12.110790252685547
    10. '
' → logprob: -12.235790252685547

Token 66: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.44884857535362244
    2. ' return' → logprob: -1.1988486051559448
    3. 'sum' → logprob: -2.9488484859466553
    4. ' sum' → logprob: -5.448848724365234
    5. '   ' → logprob: -5.698848724365234
    6. ' ' → logprob: -10.698848724365234
    7. '  ' → logprob: -11.073848724365234
    8. '```' → logprob: -13.448848724365234
    9. '(sum' → logprob: -13.698848724365234
    10. '	return' → logprob: -14.073848724365234

Token 67: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.251935213804245
    2. 'sum' → logprob: -1.5019352436065674
    3. ' ' → logprob: -13.251935005187988
    4. '(sum' → logprob: -13.251935005187988
    5. '   ' → logprob: -13.376935005187988
    6. '  ' → logprob: -14.751935005187988
    7. '	sum' → logprob: -15.126935005187988
    8. ' ' → logprob: -16.626935958862305
    9. ' sums' → logprob: -16.751935958862305
    10. ' weights' → logprob: -17.251935958862305

Token 68: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.007658927235752344
    2. '(' → logprob: -4.882658958435059
    3. '_weights' → logprob: -10.132658958435059
    4. 'weights' → logprob: -12.257658958435059
    5. '(weight' → logprob: -12.507658958435059
    6. ' weights' → logprob: -14.257658958435059
    7. '(scores' → logprob: -14.632658958435059
    8. '(tokens' → logprob: -14.632658958435059
    9. '(parts' → logprob: -15.007658958435059
    10. 'Weights' → logprob: -15.007658958435059

Token 69: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.750003814697266
    3. ' )' → logprob: -13.875003814697266
    4. ')
' → logprob: -14.625003814697266
    5. '))' → logprob: -15.000003814697266
    6. '   ' → logprob: -15.375003814697266
    7. ')))' → logprob: -16.000003814697266
    8. '[:' → logprob: -16.125003814697266
    9. ')return' → logprob: -16.750003814697266
    10. '(weights' → logprob: -16.875003814697266

Token 70: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32735416293144226
    2. '(' → logprob: -1.3273541927337646
    3. '(
' → logprob: -5.2023539543151855
    4. '<|end|>' → logprob: -5.8273539543151855
    5. '(weights' → logprob: -6.5773539543151855
    6. ':' → logprob: -7.3273539543151855
    7. '(

' → logprob: -7.4523539543151855
    8. '[' → logprob: -7.8273539543151855
    9. '(def' → logprob: -8.202354431152344
    10. '_' → logprob: -8.327354431152344

Token 71: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11527072638273239
    2. ' compute' → logprob: -3.2402706146240234
    3. ' process' → logprob: -4.240270614624023
    4. ' find' → logprob: -4.365270614624023
    5. ' max' → logprob: -4.615270614624023
    6. ' calculate' → logprob: -4.740270614624023
    7. 'main' → logprob: -5.115270614624023
    8. ' optimize' → logprob: -5.365270614624023
    9. ' get' → logprob: -5.865270614624023
    10. ' solve' → logprob: -5.990270614624023

Token 72: '_difference' (ID: 123771)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.1514153629541397
    2. '_partial' → logprob: -3.1514153480529785
    3. '_max' → logprob: -3.4014153480529785
    4. '_' → logprob: -4.4014153480529785
    5. '_difference' → logprob: -4.4014153480529785
    6. '_split' → logprob: -5.0264153480529785
    7. '_weight' → logprob: -5.6514153480529785
    8. '_remaining' → logprob: -5.7764153480529785
    9. '_average' → logprob: -5.7764153480529785
    10. '_weights' → logprob: -5.9014153480529785

Token 73: '(total' (ID: 39744)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.17324501276016235
    2. '(' → logprob: -2.2982449531555176
    3. '(a' → logprob: -3.2982449531555176
    4. '(total' → logprob: -4.548244953155518
    5. ' (' → logprob: -5.673244953155518
    6. '(left' → logprob: -5.798244953155518
    7. '(weight' → logprob: -7.048244953155518
    8. '(s' → logprob: -7.173244953155518
    9. '(prev' → logprob: -7.548244953155518
    10. '(previous' → logprob: -7.798244953155518

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03892314434051514
    2. ' ,' → logprob: -3.2889232635498047
    3. ')' → logprob: -7.788923263549805
    4. ' -' → logprob: -8.788923263549805
    5. ' )' → logprob: -9.913923263549805
    6. ' ' → logprob: -10.038923263549805
    7. ',total' → logprob: -10.038923263549805
    8. '_weights' → logprob: -10.288923263549805
    9. '):' → logprob: -10.663923263549805
    10. ',d' → logprob: -10.788923263549805

Token 75: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.5612494945526123
    2. ' partial' → logprob: -0.9362494945526123
    3. 'answer' → logprob: -4.186249732971191
    4. ' current' → logprob: -4.936249732971191
    5. 'current' → logprob: -4.936249732971191
    6. ' answer' → logprob: -5.061249732971191
    7. 'part' → logprob: -7.561249732971191
    8. ' part' → logprob: -9.186249732971191
    9. ' ans' → logprob: -9.436249732971191
    10. 'value' → logprob: -9.561249732971191

Token 76: '_sum' (ID: 29859)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2543866038322449
    2. '_sum' → logprob: -1.6293866634368896
    3. '_' → logprob: -4.0043864250183105
    4. '):
' → logprob: -5.2543864250183105
    5. '_weights' → logprob: -6.0043864250183105
    6. ')' → logprob: -6.7543864250183105
    7. '_weight' → logprob: -8.129386901855469
    8. '_s' → logprob: -8.379386901855469
    9. 'sum' → logprob: -8.504386901855469
    10. '_total' → logprob: -8.504386901855469

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016706773021724075
    2. '):
' → logprob: -9.250166893005371
    3. ' ):' → logprob: -10.125166893005371
    4. ')' → logprob: -10.625166893005371
    5. ',' → logprob: -13.125166893005371
    6. '_' → logprob: -14.000166893005371
    7. 's' → logprob: -14.000166893005371
    8. '(' → logprob: -14.625166893005371
    9. '):
' → logprob: -14.625166893005371
    10. '   ' → logprob: -14.750166893005371

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050172146409749985
    2. ' return' → logprob: -3.1751720905303955
    3. ' abs' → logprob: -5.175172328948975
    4. 'abs' → logprob: -6.800172328948975
    5. ' total' → logprob: -8.925171852111816
    6. 'return' → logprob: -8.925171852111816
    7. ' =' → logprob: -10.300171852111816
    8. '(abs' → logprob: -10.550171852111816
    9. '=' → logprob: -11.300171852111816
    10. '<|end|>' → logprob: -11.925171852111816

Token 79: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6236379742622375
    2. ' return' → logprob: -1.3736379146575928
    3. 'return' (adapté à ' return') → logprob: -1.6236379146575928
    4. 'abs' → logprob: -4.498638153076172
    5. ' abs' → logprob: -5.998638153076172
    6. '	return' → logprob: -11.748638153076172
    7. ' ' → logprob: -11.998638153076172
    8. '```' → logprob: -11.998638153076172
    9. ':return' → logprob: -12.373638153076172
    10. '    ' → logprob: -12.373638153076172

Token 80: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.022787757217884064
    2. 'abs' → logprob: -4.022787570953369
    3. ' total' → logprob: -5.397787570953369
    4. 'total' → logprob: -9.272788047790527
    5. '   ' → logprob: -12.647788047790527
    6. '(abs' → logprob: -13.272788047790527
    7. ' ' → logprob: -14.647788047790527
    8. ' absolute' → logprob: -14.647788047790527
    9. ' max' → logprob: -15.022788047790527
    10. ' ' → logprob: -15.397788047790527

Token 81: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.1002236008644104
    2. '(' → logprob: -2.3502235412597656
    3. 'total' → logprob: -11.100223541259766
    4. '(
' → logprob: -14.225223541259766
    5. ' total' → logprob: -14.975223541259766
    6. ' (' → logprob: -15.350223541259766
    7. '((' → logprob: -16.225223541259766
    8. '(t' → logprob: -16.225223541259766
    9. '(target' → logprob: -16.350223541259766
    10. '(

' → logprob: -16.475223541259766

Token 82: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868977725505829
    2. '-' → logprob: -1.1368978023529053
    3. ' ' → logprob: -10.636898040771484
    4. ')' → logprob: -13.511898040771484
    5. '<|end|>' → logprob: -14.386898040771484
    6. ' ' → logprob: -15.011898040771484
    7. '   ' → logprob: -16.511898040771484
    8. ' -
' → logprob: -16.636898040771484
    9. '  ' → logprob: -17.011898040771484
    10. ' –' → logprob: -17.136898040771484

Token 83: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3472614288330078
    2. ' ' → logprob: -1.3472614288330078
    3. ' partial' → logprob: -3.722261428833008
    4. 'partial' → logprob: -4.722261428833008
    5. ' (' → logprob: -9.222261428833008
    6. '  ' → logprob: -9.972261428833008
    7. '   ' → logprob: -10.347261428833008
    8. '(' → logprob: -10.409761428833008
    9. '(part' → logprob: -10.722261428833008
    10. ')' → logprob: -11.034761428833008

Token 84: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19954928755760193
    2. ' ' → logprob: -2.5745491981506348
    3. 'partial' → logprob: -2.5745491981506348
    4. ' partial' → logprob: -3.5745491981506348
    5. '(' → logprob: -8.699549674987793
    6. '   ' → logprob: -9.199549674987793
    7. ' (' → logprob: -9.574549674987793
    8. '  ' → logprob: -9.699549674987793
    9. '(part' → logprob: -10.449549674987793
    10. ')' → logprob: -11.574549674987793

Token 85: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3132691979408264
    2. ' *' → logprob: -1.3132691383361816
    3. ' ' → logprob: -12.56326961517334
    4. '*object' → logprob: -12.81326961517334
    5. '**' → logprob: -14.56326961517334
    6. '   ' → logprob: -16.063268661499023
    7. ' ' → logprob: -16.313268661499023
    8. ')' → logprob: -16.313268661499023
    9. '*p' → logprob: -16.313268661499023
    10. '*ft' → logprob: -16.438268661499023

Token 86: ' partial' (ID: 13664)
  Prédit: ' partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.03804241120815277
    2. 'partial' → logprob: -3.2880423069000244
    3. '_partial' → logprob: -14.663042068481445
    4. '.partial' → logprob: -15.288042068481445
    5. ' parcial' → logprob: -16.288042068481445
    6. ' ' → logprob: -16.413042068481445
    7. '(part' → logprob: -16.913042068481445
    8. 'partials' → logprob: -17.038042068481445
    9. ' ' → logprob: -17.913042068481445
    10. 'Partial' → logprob: -18.538042068481445

Token 87: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.9888433093437925e-05
    2. 'sum' → logprob: -10.250040054321289
    3. '_s' → logprob: -12.750040054321289
    4. '_' → logprob: -13.875040054321289
    5. '_difference' → logprob: -15.000040054321289
    6. ')' → logprob: -16.12504005432129
    7. ' sum' → logprob: -17.00004005432129
    8. 'Sum' → logprob: -17.00004005432129
    9. '	sum' → logprob: -18.00004005432129
    10. '_SUM' → logprob: -18.00004005432129

Token 88: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '))' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.125000953674316
    4. ')
' → logprob: -16.000001907348633
    5. ')`' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '())' → logprob: -16.750001907348633
    8. '()' → logprob: -17.375001907348633
    9. ')))' → logprob: -17.625001907348633
    10. ')return' → logprob: -17.625001907348633

Token 89: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010598049499094486
    2. '<|end|>' → logprob: -5.135598182678223
    3. '
' → logprob: -5.885598182678223
    4. '

' → logprob: -7.135598182678223
    5. '```' → logprob: -8.010598182678223
    6. '\' → logprob: -8.135598182678223
    7. '#' → logprob: -9.010598182678223
    8. '<|end|>' → logprob: -9.385598182678223
    9. ' def' → logprob: -9.510598182678223
    10. '\n' → logprob: -10.260598182678223

Token 90: ' update' (ID: 4027)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.022412477061152458
    2. ' compute' → logprob: -4.897412300109863
    3. ' def' → logprob: -5.397412300109863
    4. ' main' → logprob: -5.772412300109863
    5. ' solve' → logprob: -5.772412300109863
    6. ' minimize' → logprob: -6.272412300109863
    7. ' get' → logprob: -7.272412300109863
    8. ' optimize' → logprob: -7.772412300109863
    9. ' compare' → logprob: -8.522412300109863
    10. ' calculate' → logprob: -8.522412300109863

Token 91: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.051760993897914886
    2. '_' → logprob: -3.0517609119415283
    3. '(' → logprob: -6.926761150360107
    4. '_difference' → logprob: -8.17676067352295
    5. '_result' → logprob: -8.30176067352295
    6. '(_' → logprob: -8.67676067352295
    7. '(answer' → logprob: -8.80176067352295
    8. '_value' → logprob: -8.92676067352295
    9. '_answers' → logprob: -8.92676067352295
    10. '```' → logprob: -8.92676067352295

Token 92: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16312280297279358
    2. '(answer' → logprob: -1.9131227731704712
    3. '(ans' → logprob: -6.413122653961182
    4. '(a' → logprob: -7.663122653961182
    5. ' (' → logprob: -7.913122653961182
    6. '(current' → logprob: -8.91312313079834
    7. '(value' → logprob: -9.78812313079834
    8. '(existing' → logprob: -10.16312313079834
    9. '(old' → logprob: -11.41312313079834
    10. '(prev' → logprob: -11.41312313079834

Token 93: '_ans' (ID: 146254)
  Prédit: '_answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.7980741262435913
    2. ',' → logprob: -1.0480741262435913
    3. '_' → logprob: -1.9230741262435913
    4. ' ,' → logprob: -3.298074245452881
    5. '_,' → logprob: -4.673074245452881
    6. ',_' → logprob: -5.798074245452881
    7. '_ans' → logprob: -6.798074245452881
    8. ' _' → logprob: -6.923074245452881
    9. '_value' → logprob: -7.798074245452881
    10. '_result' → logprob: -8.048073768615723

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010346301831305027
    2. ' ,' → logprob: -5.010346412658691
    3. ',current' → logprob: -5.635346412658691
    4. ',new' → logprob: -11.010346412658691
    5. ',value' → logprob: -11.010346412658691
    6. ')' → logprob: -12.385346412658691
    7. ',result' → logprob: -12.510346412658691
    8. ',index' → logprob: -13.510346412658691
    9. ',a' → logprob: -13.760346412658691
    10. ',d' → logprob: -14.010346412658691

Token 95: ' diff' (ID: 8868)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.08609259873628616
    2. ' difference' → logprob: -3.086092710494995
    3. ' diff' → logprob: -4.086092472076416
    4. 'difference' → logprob: -4.211092472076416
    5. 'new' → logprob: -6.336092472076416
    6. ' candidate' → logprob: -6.961092472076416
    7. 'diff' → logprob: -7.211092472076416
    8. ' d' → logprob: -8.211092948913574
    9. ' potential' → logprob: -8.336092948913574
    10. ' next' → logprob: -8.586092948913574

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014322631061077118
    2. '):
' → logprob: -4.514322757720947
    3. 'er' → logprob: -6.139322757720947
    4. ')' → logprob: -7.639322757720947
    5. ',' → logprob: -7.639322757720947
    6. '):

' → logprob: -10.014322280883789
    7. 'iciency' → logprob: -10.514322280883789
    8. 'icient' → logprob: -11.389322280883789
    9. 'ect' → logprob: -12.014322280883789
    10. ')_' → logprob: -12.014322280883789

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22129996120929718
    2. ':' → logprob: -1.8463000059127808
    3. ' return' → logprob: -4.09630012512207
    4. ' if' → logprob: -4.47130012512207
    5. '=' → logprob: -5.97130012512207
    6. ':return' → logprob: -6.09630012512207
    7. ':
' → logprob: -6.47130012512207
    8. ' =' → logprob: -6.59630012512207
    9. ',' → logprob: -6.84630012512207
    10. '):' → logprob: -7.47130012512207

Token 98: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8011341094970703
    2. ' return' → logprob: -0.9261341094970703
    3. ' if' → logprob: -1.9261341094970703
    4. '    ' → logprob: -5.67613410949707
    5. ' 
' → logprob: -6.17613410949707
    6. ' ' → logprob: -6.80113410949707
    7. '    
' → logprob: -6.92613410949707
    8. 'return' → logprob: -7.55113410949707
    9. '```' → logprob: -7.92613410949707
    10. '	return' → logprob: -8.80113410949707

Token 99: ' current' (ID: 2208)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.00043686782009899616
    2. 'diff' → logprob: -7.750436782836914
    3. '	diff' → logprob: -12.375436782836914
    4. '(diff' → logprob: -13.375436782836914
    5. ' dif' → logprob: -15.250436782836914
    6. ' current' → logprob: -17.125436782836914
    7. ' ' → logprob: -18.250436782836914
    8. ' d' → logprob: -18.375436782836914
    9. ' dist' → logprob: -19.625436782836914
    10. ' ' → logprob: -19.625436782836914

Token 100: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.00017147827020380646
    2. '_' → logprob: -8.750171661376953
    3. ' _' → logprob: -12.750171661376953
    4. '>' → logprob: -13.500171661376953
    5. '	ans' → logprob: -13.500171661376953
    6. ' >' → logprob: -13.750171661376953
    7. ' ans' → logprob: -13.750171661376953
    8. '_diff' → logprob: -13.750171661376953
    9. ' ' → logprob: -13.875171661376953
    10. '_an' → logprob: -14.250171661376953

Token 101: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.026338033378124237
    2. '>' → logprob: -3.6513381004333496
    3. ' ' → logprob: -10.526337623596191
    4. ' is' → logprob: -11.776337623596191
    5. '   ' → logprob: -14.276337623596191
    6. ' <' → logprob: -15.026337623596191
    7. '">' → logprob: -15.526337623596191
    8. '  ' → logprob: -15.526337623596191
    9. ' >
' → logprob: -15.776337623596191
    10. ' greater' → logprob: -15.776337623596191

Token 102: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.03804333135485649
    2. 'diff' → logprob: -3.288043260574341
    3. '	diff' → logprob: -13.288043022155762
    4. '(diff' → logprob: -15.663043022155762
    5. ' dif' → logprob: -18.788043975830078
    6. '_diff' → logprob: -18.913043975830078
    7. ' ' → logprob: -19.538043975830078
    8. '.diff' → logprob: -19.663043975830078
    9. 'Diff' → logprob: -20.538043975830078
    10. '   ' → logprob: -21.038043975830078

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1805439591407776
    2. ':
' → logprob: -1.8055438995361328
    3. ' :
' → logprob: -7.680543899536133
    4. ' :' → logprob: -8.805543899536133
    5. ':return' → logprob: -8.805543899536133
    6. ':
' → logprob: -11.180543899536133
    7. '):
' → logprob: -11.430543899536133
    8. ':

' → logprob: -12.680543899536133
    9. ',' → logprob: -13.055543899536133
    10. '   ' → logprob: -13.430543899536133

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06034645065665245
    2. ':' → logprob: -3.3103463649749756
    3. '   ' → logprob: -4.685346603393555
    4. ':
' → logprob: -5.310346603393555
    5. ' return' → logprob: -5.435346603393555
    6. ':return' → logprob: -5.935346603393555
    7. ' current' → logprob: -8.435346603393555
    8. '):' → logprob: -9.185346603393555
    9. '<|end|>' → logprob: -9.435346603393555
    10. ' :
' → logprob: -9.435346603393555

Token 105: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.052729494869709015
    2. '       ' → logprob: -3.927729606628418
    3. 'return' (adapté à ' return') → logprob: -4.052729606628418
    4. ' current' → logprob: -4.427729606628418
    5. '           ' → logprob: -6.427729606628418
    6. 'current' → logprob: -7.552729606628418
    7. '	return' → logprob: -9.302729606628418
    8. '	       ' → logprob: -9.802729606628418
    9. '   ' → logprob: -10.552729606628418
    10. '
' → logprob: -11.052729606628418

Token 106: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.061992447823286057
    2. 'diff' → logprob: -2.8119924068450928
    3. '	diff' → logprob: -10.686992645263672
    4. ' ' → logprob: -13.811992645263672
    5. ' dif' → logprob: -14.561992645263672
    6. '(diff' → logprob: -15.436992645263672
    7. 'd' → logprob: -17.186992645263672
    8. '_diff' → logprob: -17.186992645263672
    9. '.diff' → logprob: -17.936992645263672
    10. ' ' → logprob: -18.186992645263672

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015014449309092015
    2. ' else' → logprob: -9.750149726867676
    3. '<|end|>' → logprob: -10.000149726867676
    4. 'else' → logprob: -11.375149726867676
    5. '
' → logprob: -11.500149726867676
    6. 'return' → logprob: -11.875149726867676
    7. '	else' → logprob: -12.375149726867676
    8. '       ' → logprob: -12.375149726867676
    9. '<|end|>' → logprob: -12.750149726867676
    10. '    
' → logprob: -13.125149726867676

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032793101854622364
    2. 'else' → logprob: -6.003279209136963
    3. 'return' → logprob: -7.878279209136963
    4. ' else' → logprob: -7.878279209136963
    5. '	else' → logprob: -10.753279685974121
    6. '<|end|>' → logprob: -11.503279685974121
    7. '	return' → logprob: -12.128279685974121
    8. '       ' → logprob: -12.628279685974121
    9. ' return' → logprob: -12.753279685974121
    10. '    
' → logprob: -14.378279685974121

Token 109: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6988955736160278
    2. 'return' → logprob: -0.9488955736160278
    3. 'else' (adapté à ' else') → logprob: -2.1988954544067383
    4. ' else' → logprob: -5.573895454406738
    5. ' return' → logprob: -6.948895454406738
    6. '	return' → logprob: -11.823895454406738
    7. '{return' → logprob: -12.948895454406738
    8. '	else' → logprob: -13.448895454406738
    9. '       ' → logprob: -13.698895454406738
    10. ' ' → logprob: -13.823895454406738

Token 110: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.380661278963089
    2. ':' → logprob: -1.5056612491607666
    3. '   ' → logprob: -3.0056612491607666
    4. ':return' → logprob: -3.5056612491607666
    5. ' return' → logprob: -4.380661487579346
    6. ':
' → logprob: -6.755661487579346
    7. 'return' → logprob: -7.505661487579346
    8. ' current' → logprob: -7.630661487579346
    9. '    ' → logprob: -9.005661010742188
    10. ' :' → logprob: -9.130661010742188

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07638335973024368
    2. ' return' → logprob: -3.201383352279663
    3. 'return' → logprob: -3.451383352279663
    4. '   ' → logprob: -7.201383590698242
    5. ':return' → logprob: -7.951383590698242
    6. '	return' → logprob: -11.201383590698242
    7. '{return' → logprob: -12.326383590698242
    8. ':' → logprob: -12.576383590698242
    9. '    ' → logprob: -12.951383590698242
    10. ' ' → logprob: -13.451383590698242

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13832904398441315
    2. ' return' → logprob: -2.138329029083252
    3. '       ' → logprob: -5.013329029083252
    4. '   ' → logprob: -5.388329029083252
    5. ':return' → logprob: -9.63832950592041
    6. '	return' → logprob: -10.13832950592041
    7. '{return' → logprob: -11.63832950592041
    8. '           ' → logprob: -13.76332950592041
    9. '    ' → logprob: -14.13832950592041
    10. ' ' → logprob: -14.51332950592041

Token 113: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5759397745132446
    2. ' current' → logprob: -0.8259397745132446
    3. '	current' → logprob: -14.950940132141113
    4. '   ' → logprob: -16.700939178466797
    5. '(current' → logprob: -18.700939178466797
    6. '$current' → logprob: -18.700939178466797
    7. '_current' → logprob: -18.825939178466797
    8. '.current' → logprob: -18.825939178466797
    9. 'urrent' → logprob: -19.200939178466797
    10. 'Current' → logprob: -19.950939178466797

Token 114: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -7.064297824399546e-05
    2. '_answer' → logprob: -9.750070571899414
    3. '_' → logprob: -11.750070571899414
    4. '_an' → logprob: -13.750070571899414
    5. '_ann' → logprob: -14.125070571899414
    6. '_ant' → logprob: -14.250070571899414
    7. '_ass' → logprob: -14.375070571899414
    8. '_answers' → logprob: -14.875070571899414
    9. '_val' → logprob: -15.375070571899414
    10. ' _' → logprob: -15.500070571899414

Token 115: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4639922082424164
    2. '

' → logprob: -1.2139922380447388
    3. 'def' → logprob: -2.838992118835449
    4. '<|end|>' → logprob: -4.338992118835449
    5. '```' → logprob: -7.838992118835449
    6. '



' → logprob: -7.838992118835449
    7. '
' → logprob: -7.963992118835449
    8. '


' → logprob: -8.08899211883545
    9. '<|end|>' → logprob: -8.08899211883545
    10. '\n' → logprob: -8.33899211883545

Token 116: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002566383685916662
    2. '<|end|>' → logprob: -6.502566337585449
    3. '
' → logprob: -7.127566337585449
    4. '\' → logprob: -9.37756633758545
    5. '

' → logprob: -9.62756633758545
    6. '```' → logprob: -9.75256633758545
    7. '  
' → logprob: -11.12756633758545
    8. '\n' → logprob: -11.37756633758545
    9. '    
' → logprob: -12.00256633758545
    10. '<|end|>' → logprob: -12.62756633758545

Token 117: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04810134693980217
    2. ' find' → logprob: -3.1731014251708984
    3. ' solve' → logprob: -5.923101425170898
    4. ' minimize' → logprob: -7.548101425170898
    5. ' compute' → logprob: -7.798101425170898
    6. 'main' → logprob: -8.423101425170898
    7. ' solution' → logprob: -8.673101425170898
    8. ' min' → logprob: -8.673101425170898
    9. ' optimize' → logprob: -8.673101425170898
    10. ' split' → logprob: -8.798101425170898

Token 118: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.566264295950532e-05
    2. '(' → logprob: -10.125085830688477
    3. '()' → logprob: -11.000085830688477
    4. ' ():' → logprob: -11.250085830688477
    5. '():
' → logprob: -11.375085830688477
    6. '_' → logprob: -12.625085830688477
    7. '()>' → logprob: -15.375085830688477
    8. '(:' → logprob: -16.000085830688477
    9. '(":' → logprob: -16.125085830688477
    10. '():
' → logprob: -16.250085830688477

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1038627028465271
    2. ' n' → logprob: -2.603862762451172
    3. 'n' → logprob: -3.728862762451172
    4. '    
' → logprob: -8.103862762451172
    5. '
' → logprob: -8.228862762451172
    6. '    ' → logprob: -11.103862762451172
    7. '	n' → logprob: -11.228862762451172
    8. ' weights' → logprob: -11.603862762451172
    9. ' 
' → logprob: -12.228862762451172
    10. '       ' → logprob: -12.603862762451172

Token 120: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.131987065076828
    2. '   ' → logprob: -2.3819870948791504
    3. ' n' → logprob: -4.00698709487915
    4. 'N' (adapté à ' N') → logprob: -4.38198709487915
    5. ' N' → logprob: -8.631986618041992
    6. 'num' → logprob: -9.006986618041992
    7. ' ' → logprob: -9.131986618041992
    8. '    
' → logprob: -9.631986618041992
    9. '
' → logprob: -10.256986618041992
    10. '	n' → logprob: -11.256986618041992

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008107531815767288
    2. ' ' → logprob: -5.008107662200928
    3. '=' → logprob: -6.883107662200928
    4. ',' → logprob: -8.25810718536377
    5. ' ,' → logprob: -9.88310718536377
    6. '  ' → logprob: -11.38310718536377
    7. ')' → logprob: -11.63310718536377
    8. ' =
' → logprob: -11.75810718536377
    9. ' =)' → logprob: -12.38310718536377
    10. '=int' → logprob: -12.50810718536377

Token 122: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.022883310914039612
    2. 'get' → logprob: -4.272883415222168
    3. ' int' → logprob: -4.772883415222168
    4. 'int' → logprob: -8.397883415222168
    5. ' ' → logprob: -14.897883415222168
    6. '<int' → logprob: -16.89788246154785
    7. '	get' → logprob: -17.02288246154785
    8. '_get' → logprob: -17.39788246154785
    9. '=get' → logprob: -17.39788246154785
    10. '(get' → logprob: -17.39788246154785

Token 123: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.9186317482963204e-05
    2. '_' → logprob: -10.000049591064453
    3. '_inputs' → logprob: -13.250049591064453
    4. ' _' → logprob: -14.250049591064453
    5. '_output' → logprob: -15.375049591064453
    6. '_Input' → logprob: -15.500049591064453
    7. '_in' → logprob: -15.875049591064453
    8. '_code' → logprob: -16.250049591064453
    9. '_line' → logprob: -16.375049591064453
    10. '(_' → logprob: -16.625049591064453

Token 124: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001246348983841017
    2. '()
' → logprob: -9.00012493133545
    3. '()\' → logprob: -14.75012493133545
    4. ' ()' → logprob: -15.12512493133545
    5. '()
' → logprob: -15.50012493133545
    6. '()

' → logprob: -15.62512493133545
    7. '()`' → logprob: -16.625123977661133
    8. '()<' → logprob: -17.125123977661133
    9. '()"' → logprob: -17.375123977661133
    10. '()>' → logprob: -18.500123977661133

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1759321242570877
    2. ' weights' → logprob: -2.4259321689605713
    3. 'weights' → logprob: -2.6759321689605713
    4. '_weights' → logprob: -6.175931930541992
    5. '(weights' → logprob: -7.300931930541992
    6. '    
' → logprob: -7.675931930541992
    7. 'Weights' → logprob: -7.925931930541992
    8. '```' → logprob: -8.675931930541992
    9. '
' → logprob: -9.425931930541992
    10. '    ' → logprob: -9.550931930541992

Token 126: ' W' (ID: 486)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.16060620546340942
    2. ' weights' → logprob: -1.9106061458587646
    3. '   ' → logprob: -8.410606384277344
    4. '_weights' → logprob: -9.660606384277344
    5. 'w' → logprob: -10.410606384277344
    6. 'weight' → logprob: -11.410606384277344
    7. '(weights' → logprob: -11.535606384277344
    8. 'Weights' → logprob: -11.785606384277344
    9. '.weights' → logprob: -12.035606384277344
    10. 'weig' → logprob: -12.035606384277344

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013450203463435173
    2. '=' → logprob: -4.3884501457214355
    3. 's' → logprob: -7.5134501457214355
    4. 'e' → logprob: -8.263450622558594
    5. 'ights' → logprob: -9.763450622558594
    6. '_' → logprob: -10.513450622558594
    7. '_weights' → logprob: -10.888450622558594
    8. 'eight' → logprob: -11.638450622558594
    9. '   ' → logprob: -12.388450622558594
    10. 'eys' → logprob: -12.513450622558594

Token 128: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.12693126499652863
    2. 'get' → logprob: -2.1269311904907227
    3. '(get' → logprob: -13.001931190490723
    4. '[get' → logprob: -14.501931190490723
    5. '	get' → logprob: -16.00193214416504
    6. ' ' → logprob: -16.50193214416504
    7. '=get' → logprob: -16.50193214416504
    8. '_get' → logprob: -16.62693214416504
    9. ')get' → logprob: -17.50193214416504
    10. '.get' → logprob: -17.75193214416504

Token 129: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.75
    3. 'weights' → logprob: -15.75
    4. '_weight' → logprob: -16.75
    5. '_we' → logprob: -17.5
    6. '(weights' → logprob: -17.625
    7. '(_' → logprob: -18.75
    8. 'Weights' → logprob: -19.125
    9. '_inputs' → logprob: -19.125
    10. '_input' → logprob: -19.25

Token 130: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018157200887799263
    2. '()
' → logprob: -4.018157005310059
    3. '()

' → logprob: -12.768157005310059
    4. '()
' → logprob: -13.393157005310059
    5. '   ' → logprob: -13.518157005310059
    6. 'def' → logprob: -14.518157005310059
    7. '()\' → logprob: -14.893157005310059
    8. ' ()' → logprob: -15.518157005310059
    9. '()`' → logprob: -15.768157005310059
    10. '(' → logprob: -16.393157958984375

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03365030884742737
    2. '
' → logprob: -3.6586503982543945
    3. ' total' → logprob: -6.0336503982543945
    4. '    
' → logprob: -6.1586503982543945
    5. ' ans' → logprob: -6.4086503982543945
    6. ' current' → logprob: -7.7836503982543945
    7. 'total' → logprob: -8.158650398254395
    8. ' answer' → logprob: -8.908650398254395
    9. 'current' → logprob: -9.783650398254395
    10. '```' → logprob: -10.033650398254395

Token 132: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1102752834558487
    2. ' total' → logprob: -2.3602752685546875
    3. 'ans' → logprob: -5.4852752685546875
    4. 'answer' → logprob: -5.4852752685546875
    5. 'current' → logprob: -7.4852752685546875
    6. ' ans' → logprob: -7.4852752685546875
    7. '   ' → logprob: -8.235275268554688
    8. ' answer' → logprob: -8.610275268554688
    9. ' current' → logprob: -8.985275268554688
    10. '
' → logprob: -11.735275268554688

Token 133: '_W' (ID: 5493)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34167027473449707
    2. '=' → logprob: -1.716670274734497
    3. '_' → logprob: -2.216670274734497
    4. '_sum' → logprob: -8.091670036315918
    5. '_total' → logprob: -8.716670036315918
    6. '_weights' → logprob: -8.716670036315918
    7. '_weight' → logprob: -9.966670036315918
    8. ' _' → logprob: -10.216670036315918
    9. ' ' → logprob: -10.591670036315918
    10. '_=' → logprob: -11.216670036315918

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07004013657569885
    2. '=' → logprob: -2.695040225982666
    3. ' ' → logprob: -10.070039749145508
    4. ')' → logprob: -10.945039749145508
    5. '<|end|>' → logprob: -11.445039749145508
    6. '=sum' → logprob: -11.570039749145508
    7. '.' → logprob: -11.945039749145508
    8. '[' → logprob: -12.445039749145508
    9. '   ' → logprob: -12.695039749145508
    10. '  ' → logprob: -12.945039749145508

Token 135: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.3927572965621948
    2. 'compute' → logprob: -1.1427572965621948
    3. ' sum' → logprob: -5.267757415771484
    4. 'sum' → logprob: -7.267757415771484
    5. ' ' → logprob: -11.267757415771484
    6. '   ' → logprob: -14.017757415771484
    7. ' calculate' → logprob: -14.392757415771484
    8. ' total' → logprob: -14.642757415771484
    9. '  ' → logprob: -14.892757415771484
    10. 'calculate' → logprob: -15.142757415771484

Token 136: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.1054253011243418e-05
    2. '_' → logprob: -11.000020980834961
    3. 'total' → logprob: -12.625020980834961
    4. '_tot' → logprob: -14.500020980834961
    5. ')_' → logprob: -16.37502098083496
    6. '_weights' → logprob: -16.75002098083496
    7. '_sum' → logprob: -16.75002098083496
    8. '_weight' → logprob: -16.75002098083496
    9. '_Total' → logprob: -16.87502098083496
    10. '_t' → logprob: -17.25002098083496

Token 137: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0019349466310814023
    2. '(' → logprob: -6.501935005187988
    3. '(weights' → logprob: -7.751935005187988
    4. '_weights' → logprob: -14.001935005187988
    5. ' (' → logprob: -14.501935005187988
    6. 'Weights' → logprob: -14.626935005187988
    7. '(
' → logprob: -15.376935005187988
    8. '(N' → logprob: -15.876935005187988
    9. ' weights' → logprob: -16.251934051513672
    10. '(w' → logprob: -16.876934051513672

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018230248242616653
    2. ')
' → logprob: -4.018230438232422
    3. ')
' → logprob: -9.768230438232422
    4. '   ' → logprob: -11.768230438232422
    5. ' )' → logprob: -11.768230438232422
    6. ')

' → logprob: -12.768230438232422
    7. '()' → logprob: -13.643230438232422
    8. '))' → logprob: -14.143230438232422
    9. ' ' → logprob: -14.518230438232422
    10. ' )
' → logprob: -14.643230438232422

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04233597591519356
    2. '
' → logprob: -3.2923359870910645
    3. ' ans' → logprob: -6.1673359870910645
    4. '    
' → logprob: -6.6673359870910645
    5. ' current' → logprob: -8.167335510253906
    6. ' answer' → logprob: -8.292335510253906
    7. '```' → logprob: -9.167335510253906
    8. 'current' → logprob: -10.042335510253906
    9. 'answer' → logprob: -10.167335510253906
    10. '	ans' → logprob: -10.167335510253906

Token 140: ' ans' (ID: 3345)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.2553476393222809
    2. 'ans' (adapté à ' ans') → logprob: -1.5053476095199585
    3. '   ' → logprob: -6.380347728729248
    4. ' answer' → logprob: -6.880347728729248
    5. ' ans' → logprob: -7.380347728729248
    6. 'current' → logprob: -10.63034725189209
    7. '
' → logprob: -11.63034725189209
    8. '    
' → logprob: -12.00534725189209
    9. '_ans' → logprob: -12.00534725189209
    10. 'Answer' → logprob: -12.50534725189209

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00293360254727304
    2. '=' → logprob: -6.002933502197266
    3. ' ' → logprob: -7.752933502197266
    4. '_' → logprob: -10.752933502197266
    5. ' =
' → logprob: -13.002933502197266
    6. ' _' → logprob: -13.627933502197266
    7. '	' → logprob: -14.252933502197266
    8. '  ' → logprob: -14.252933502197266
    9. '   ' → logprob: -14.252933502197266
    10. ' ' → logprob: -14.627933502197266

Token 142: ' initialize' (ID: 18400)
  Prédit: ' initialize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -0.17978833615779877
    2. 'initialize' → logprob: -1.80478835105896
    3. '	initialize' → logprob: -11.304788589477539
    4. '   ' → logprob: -11.679788589477539
    5. '_initialize' → logprob: -11.804788589477539
    6. ' ' → logprob: -11.804788589477539
    7. '100' → logprob: -12.929788589477539
    8. ' ' → logprob: -13.679788589477539
    9. '.initialize' → logprob: -13.679788589477539
    10. '    ' → logprob: -13.804788589477539

Token 143: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -2.6656825866666622e-05
    2. '_ans' → logprob: -10.87502670288086
    3. '_' → logprob: -11.87502670288086
    4. '_answers' → logprob: -14.87502670288086
    5. 'Answer' → logprob: -16.12502670288086
    6. ' _' → logprob: -16.25002670288086
    7. 'answer' → logprob: -16.75002670288086
    8. '```' → logprob: -17.75002670288086
    9. '_a' → logprob: -18.00002670288086
    10. '_output' → logprob: -18.12502670288086

Token 144: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009278989746235311
    2. '()
' → logprob: -7.000927925109863
    3. '()

' → logprob: -11.875927925109863
    4. ' ()' → logprob: -12.000927925109863
    5. '()
' → logprob: -13.000927925109863
    6. '()\' → logprob: -14.375927925109863
    7. '(' → logprob: -15.875927925109863
    8. '()"' → logprob: -16.375926971435547
    9. '()`' → logprob: -16.375926971435547
    10. '()

' → logprob: -17.250926971435547

Token 145: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003582968143746257
    2. ' 
' → logprob: -6.753582954406738
    3. ' for' → logprob: -6.753582954406738
    4. '
' → logprob: -8.128582954406738
    5. '  
' → logprob: -8.253582954406738
    6. '   ' → logprob: -8.378582954406738
    7. '    
' → logprob: -8.503582954406738
    8. 'for' → logprob: -9.878582954406738
    9. '<|end|>' → logprob: -9.878582954406738
    10. '

' → logprob: -10.253582954406738

Token 146: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26608672738075256
    2. ' for' → logprob: -1.5160866975784302
    3. '   ' → logprob: -4.266086578369141
    4. '
' → logprob: -11.76608657836914
    5. '	for' → logprob: -11.89108657836914
    6. '    
' → logprob: -12.64108657836914
    7. '  ' → logprob: -14.01608657836914
    8. 'i' → logprob: -14.14108657836914
    9. '```' → logprob: -14.26608657836914
    10. ' ' → logprob: -14.51608657836914

Token 147: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.019471431151032448
    2. ' ' → logprob: -4.019471645355225
    3. ' _' → logprob: -7.144471645355225
    4. ' index' → logprob: -8.144471168518066
    5. ' range' → logprob: -8.519471168518066
    6. ' idx' → logprob: -11.519471168518066
    7. 'i' → logprob: -11.519471168518066
    8. ' ' → logprob: -12.144471168518066
    9. ' in' → logprob: -12.269471168518066
    10. '_' → logprob: -12.269471168518066

Token 148: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028953328728675842
    2. 'in' → logprob: -6.002895355224609
    3. ' ' → logprob: -7.877895355224609
    4. 'range' → logprob: -11.12789535522461
    5. ' i' → logprob: -11.62789535522461
    6. ' range' → logprob: -12.37789535522461
    7. ' _' → logprob: -13.25289535522461
    8. '_' → logprob: -13.25289535522461
    9. ' ' → logprob: -13.50289535522461
    10. '1' → logprob: -13.50289535522461

Token 149: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018159663304686546
    2. 'range' → logprob: -4.018159866333008
    3. ' ' → logprob: -12.018159866333008
    4. '(range' → logprob: -13.643159866333008
    5. '	range' → logprob: -13.768159866333008
    6. ' xrange' → logprob: -14.018159866333008
    7. '  ' → logprob: -15.268159866333008
    8. '_range' → logprob: -16.643159866333008
    9. '   ' → logprob: -16.768159866333008
    10. '1' → logprob: -17.143159866333008

Token 150: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.24179228907451e-05
    2. '(N' → logprob: -9.750061988830566
    3. ' (' → logprob: -12.750061988830566
    4. '1' → logprob: -14.500061988830566
    5. '(
' → logprob: -15.250061988830566
    6. ' ' → logprob: -15.375061988830566
    7. '(len' → logprob: -15.625061988830566
    8. '(n' → logprob: -17.500062942504883
    9. '(

' → logprob: -18.875062942504883
    10. '<|end|>' → logprob: -19.125062942504883

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07650848478078842
    2. '+' → logprob: -3.2015085220336914
    3. ' ):' → logprob: -4.451508522033691
    4. ' +' → logprob: -4.576508522033691
    5. '):
' → logprob: -4.701508522033691
    6. ')' → logprob: -7.201508522033691
    7. '-' → logprob: -7.576508522033691
    8. ' -' → logprob: -8.076508522033691
    9. ' ):
' → logprob: -9.201508522033691
    10. '   ' → logprob: -9.201508522033691

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14621755480766296
    2. ' ' → logprob: -2.6462175846099854
    3. '   ' → logprob: -3.7712175846099854
    4. '<|end|>' → logprob: -3.7712175846099854
    5. '    ' → logprob: -4.396217346191406
    6. ' 
' → logprob: -6.271217346191406
    7. '    
' → logprob: -7.021217346191406
    8. '  ' → logprob: -7.146217346191406
    9. '        
' → logprob: -7.771217346191406
    10. ',' → logprob: -8.021217346191406

Token 153: ' partial' (ID: 13664)
  Prédit: ' partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.14024366438388824
    2. '   ' → logprob: -2.5152437686920166
    3. 'partial' (adapté à ' partial') → logprob: -3.2652437686920166
    4. '       ' → logprob: -4.6402435302734375
    5. '    ' → logprob: -8.140243530273438
    6. ' p' → logprob: -8.390243530273438
    7. ' ' → logprob: -8.765243530273438
    8. '  ' → logprob: -8.952743530273438
    9. ' current' → logprob: -9.015243530273438
    10. '    
' → logprob: -9.077743530273438

Token 154: '_W' (ID: 5493)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.12328313291072845
    2. '_weights' → logprob: -2.8732831478118896
    3. '_' → logprob: -2.9982831478118896
    4. '_s' → logprob: -4.7482829093933105
    5. '_w' → logprob: -7.9982829093933105
    6. ' _' → logprob: -8.748283386230469
    7. '_weight' → logprob: -8.998283386230469
    8. '_S' → logprob: -9.998283386230469
    9. '_W' → logprob: -10.373283386230469
    10. ')_' → logprob: -10.748283386230469

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12855887413024902
    2. '=' → logprob: -2.128558874130249
    3. ' ' → logprob: -7.253559112548828
    4. '_' → logprob: -7.503559112548828
    5. '[' → logprob: -9.003559112548828
    6. '_sum' → logprob: -9.003559112548828
    7. 's' → logprob: -9.628559112548828
    8. '[:' → logprob: -11.878559112548828
    9. '   ' → logprob: -12.003559112548828
    10. 'sum' → logprob: -12.128559112548828

Token 156: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.4744454324245453
    2. ' compute' → logprob: -0.9744454622268677
    3. ' W' → logprob: -8.724445343017578
    4. ' weights' → logprob: -9.099445343017578
    5. 'W' → logprob: -10.224445343017578
    6. 'weights' → logprob: -10.349445343017578
    7. '.compute' → logprob: -11.724445343017578
    8. ' ' → logprob: -12.224445343017578
    9. '_compute' → logprob: -12.349445343017578
    10. '   ' → logprob: -13.786945343017578

Token 157: '_partial' (ID: 139756)
  Prédit: '_partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_partial' → logprob: -0.001444164663553238
    2. '_weights' → logprob: -7.501444339752197
    3. '_total' → logprob: -7.751444339752197
    4. 'partial' → logprob: -8.126443862915039
    5. '_' → logprob: -9.001443862915039
    6. '_part' → logprob: -10.376443862915039
    7. '_weight' → logprob: -12.751443862915039
    8. ''_' → logprob: -13.126443862915039
    9. ' _' → logprob: -14.501443862915039
    10. '"_' → logprob: -14.501443862915039

Token 158: '_weights' (ID: 49127)
  Prédit: '_weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -8.77627644513268e-06
    2. '_weight' → logprob: -12.500008583068848
    3. 'weights' → logprob: -12.875008583068848
    4. '_sum' → logprob: -14.000008583068848
    5. '_w' → logprob: -14.500008583068848
    6. 'Weights' → logprob: -15.000008583068848
    7. '_we' → logprob: -15.125008583068848
    8. ' weights' → logprob: -15.750008583068848
    9. '_' → logprob: -15.750008583068848
    10. 'sum' → logprob: -17.375009536743164

Token 159: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.00536561431363225
    2. '(weights' → logprob: -5.75536584854126
    3. '(' → logprob: -6.13036584854126
    4. ' weights' → logprob: -12.130365371704102
    5. ' (' → logprob: -13.130365371704102
    6. '(w' → logprob: -14.130365371704102
    7. ' W' → logprob: -14.505365371704102
    8. '(
' → logprob: -14.880365371704102
    9. '_weights' → logprob: -15.630365371704102
    10. 'Weights' → logprob: -15.755365371704102

Token 160: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9928586483001709
    2. ',i' → logprob: -0.9928586483001709
    3. ',' → logprob: -1.367858648300171
    4. ' ,' → logprob: -5.74285888671875
    5. ' i' → logprob: -7.24285888671875
    6. '(' → logprob: -8.86785888671875
    7. '   ' → logprob: -9.24285888671875
    8. ' ' → logprob: -9.61785888671875
    9. 'i' → logprob: -10.36785888671875
    10. ' (' → logprob: -10.49285888671875

Token 161: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5232202410697937
    2. ' i' → logprob: -0.8982202410697937
    3. '   ' → logprob: -9.89822006225586
    4. ' ' → logprob: -10.39822006225586
    5. '    ' → logprob: -12.52322006225586
    6. ')' → logprob: -12.89822006225586
    7. '(i' → logprob: -12.89822006225586
    8. '  ' → logprob: -13.14822006225586
    9. '
' → logprob: -13.77322006225586
    10. '	i' → logprob: -14.02322006225586

Token 162: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25250324606895447
    2. ')' → logprob: -1.5025032758712769
    3. ')
' → logprob: -7.752503395080566
    4. ' )
' → logprob: -9.502503395080566
    5. ')

' → logprob: -10.377503395080566
    6. '   ' → logprob: -11.002503395080566
    7. ' )' → logprob: -11.127503395080566
    8. ' ' → logprob: -12.377503395080566
    9. '       ' → logprob: -14.377503395080566
    10. '):
' → logprob: -15.252503395080566

Token 163: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48832806944847107
    2. '       ' → logprob: -0.9883280992507935
    3. '<|end|>' → logprob: -4.988327980041504
    4. '   ' → logprob: -6.238327980041504
    5. '        
' → logprob: -6.363327980041504
    6. '  
' → logprob: -6.738327980041504
    7. ' 
' → logprob: -7.113327980041504
    8. ' ' → logprob: -7.488327980041504
    9. '    
' → logprob: -7.988327980041504
    10. '
' → logprob: -8.113327980041504

Token 164: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' (adapté à ' partial') → logprob: -0.20894743502140045
    2. ' partial' → logprob: -1.7089474201202393
    3. '   ' → logprob: -6.458947658538818
    4. 'p' → logprob: -6.583947658538818
    5. 'ps' → logprob: -6.708947658538818
    6. 'psum' → logprob: -7.083947658538818
    7. 'part' → logprob: -7.333947658538818
    8. ' p' → logprob: -7.583947658538818
    9. '       ' → logprob: -8.20894718170166
    10. ' ps' → logprob: -8.58394718170166

Token 165: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.003362835617735982
    2. '_' → logprob: -5.878362655639648
    3. '_s' → logprob: -7.753362655639648
    4. ' _' → logprob: -9.753362655639648
    5. '_total' → logprob: -11.003362655639648
    6. 'sum' → logprob: -11.003362655639648
    7. '_S' → logprob: -11.378362655639648
    8. '_w' → logprob: -12.253362655639648
    9. '_W' → logprob: -12.253362655639648
    10. '_SUM' → logprob: -13.378362655639648

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2531478703022003
    2. '=' → logprob: -1.503147840499878
    3. '_' → logprob: -7.378148078918457
    4. '(' → logprob: -8.003148078918457
    5. '_=' → logprob: -9.503148078918457
    6. ')' → logprob: -9.753148078918457
    7. ' ' → logprob: -10.253148078918457
    8. '_val' → logprob: -10.628148078918457
    9. '(part' → logprob: -10.628148078918457
    10. '_value' → logprob: -11.378148078918457

Token 167: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.20141451060771942
    2. ' compute' → logprob: -1.7014144659042358
    3. 'sum' → logprob: -14.701414108276367
    4. '   ' → logprob: -15.701414108276367
    5. ' sum' → logprob: -15.826414108276367
    6. '.compute' → logprob: -16.201414108276367
    7. '(com' → logprob: -16.201414108276367
    8. '_compute' → logprob: -16.201414108276367
    9. ' ' → logprob: -16.451414108276367
    10. 'comput' → logprob: -16.826414108276367

Token 168: '_partial' (ID: 139756)
  Prédit: '_partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_partial' → logprob: -0.00010485442908247933
    2. 'partial' → logprob: -9.875104904174805
    3. '_total' → logprob: -10.000104904174805
    4. '_sum' → logprob: -11.875104904174805
    5. '_difference' → logprob: -15.000104904174805
    6. '_compute' → logprob: -15.625104904174805
    7. '_' → logprob: -16.000104904174805
    8. '_part' → logprob: -16.000104904174805
    9. 'sum' → logprob: -16.625104904174805
    10. '_weight' → logprob: -16.625104904174805

Token 169: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3167412281036377
    2. 'sum' → logprob: -1.3167412281036377
    3. '_weights' → logprob: -5.691740989685059
    4. ' sum' → logprob: -9.816740989685059
    5. 'Sum' → logprob: -11.316740989685059
    6. 'W' → logprob: -11.816740989685059
    7. 'weights' → logprob: -12.191740989685059
    8. '_weight' → logprob: -12.316740989685059
    9. 's' → logprob: -12.441740989685059
    10. '(sum' → logprob: -12.566740989685059

Token 170: '(part' (ID: 51033)
  Prédit: '(part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(part' → logprob: -0.00045152619713917375
    2. '(' → logprob: -8.25045108795166
    3. '(weights' → logprob: -8.75045108795166
    4. ' (' → logprob: -11.25045108795166
    5. 'partial' → logprob: -11.37545108795166
    6. '(weight' → logprob: -12.50045108795166
    7. '```' → logprob: -13.75045108795166
    8. '(W' → logprob: -14.12545108795166
    9. '(
' → logprob: -14.87545108795166
    10. 'weights' → logprob: -15.12545108795166

Token 171: 'ial' (ID: 563)
  Prédit: '_W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -0.1607208251953125
    2. 'ial' → logprob: -1.9107208251953125
    3. 'ials' → logprob: -8.160720825195312
    4. 'i' → logprob: -10.410720825195312
    5. 'ia' → logprob: -10.410720825195312
    6. 'al' → logprob: -10.410720825195312
    7. '```' → logprob: -11.035720825195312
    8. ')' → logprob: -11.285720825195312
    9. 'W' → logprob: -11.410720825195312
    10. '   ' → logprob: -11.785720825195312

Token 172: '_W' (ID: 5493)
  Prédit: '_W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -0.0002470350591465831
    2. '_weights' → logprob: -8.75024700164795
    3. '_sum' → logprob: -10.00024700164795
    4. 'W' → logprob: -11.37524700164795
    5. 'sum' → logprob: -11.37524700164795
    6. ')' → logprob: -12.25024700164795
    7. '_' → logprob: -12.87524700164795
    8. '_w' → logprob: -13.12524700164795
    9. '_weight' → logprob: -13.25024700164795
    10. '_S' → logprob: -13.25024700164795

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10022587329149246
    2. ')
' → logprob: -2.3502259254455566
    3. ')
' → logprob: -11.725225448608398
    4. '   ' → logprob: -12.350225448608398
    5. ' )' → logprob: -12.975225448608398
    6. ')

' → logprob: -13.350225448608398
    7. ' )
' → logprob: -13.475225448608398
    8. '))' → logprob: -14.975225448608398
    9. ')i' → logprob: -15.100225448608398
    10. '       ' → logprob: -15.475225448608398

Token 174: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.353268563747406
    2. '       ' → logprob: -1.2282686233520508
    3. '   ' → logprob: -6.353268623352051
    4. '        
' → logprob: -6.728268623352051
    5. '  
' → logprob: -7.353268623352051
    6. '
' → logprob: -7.603268623352051
    7. '    
' → logprob: -8.10326862335205
    8. '<|end|>' → logprob: -8.60326862335205
    9. ' 
' → logprob: -9.35326862335205
    10. '           ' → logprob: -10.72826862335205

Token 175: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.22116810083389282
    2. 'diff' (adapté à ' diff') → logprob: -1.721168041229248
    3. ' ans' → logprob: -5.096168041229248
    4. '
' → logprob: -5.346168041229248
    5. '       ' → logprob: -5.471168041229248
    6. ' difference' → logprob: -6.096168041229248
    7. 'difference' → logprob: -7.096168041229248
    8. 'ans' → logprob: -7.471168041229248
    9. '	diff' → logprob: -8.096168518066406
    10. '   ' → logprob: -8.596168518066406

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008677801117300987
    2. '=' → logprob: -4.758677959442139
    3. '_' → logprob: -9.75867748260498
    4. ' ' → logprob: -13.13367748260498
    5. ' ' → logprob: -13.88367748260498
    6. ' _' → logprob: -14.25867748260498
    7. ')' → logprob: -14.50867748260498
    8. '	' → logprob: -14.63367748260498
    9. 's' → logprob: -15.25867748260498
    10. ' =
' → logprob: -16.258678436279297

Token 177: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.2014133334159851
    2. 'compute' → logprob: -1.7014133930206299
    3. '.compute' → logprob: -16.951414108276367
    4. '_compute' → logprob: -17.201414108276367
    5. ' ' → logprob: -19.201414108276367
    6. ' ' → logprob: -19.201414108276367
    7. '   ' → logprob: -19.326414108276367
    8. 'computer' → logprob: -20.701414108276367
    9. 'comput' → logprob: -20.951414108276367
    10. '(com' → logprob: -20.951414108276367

Token 178: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -1.4617256056226324e-05
    2. '_total' → logprob: -11.625014305114746
    3. '_' → logprob: -12.500014305114746
    4. '_distance' → logprob: -14.250014305114746
    5. 'difference' → logprob: -14.500014305114746
    6. ' _' → logprob: -15.875014305114746
    7. '_d' → logprob: -15.875014305114746
    8. '_diff' → logprob: -16.125015258789062
    9. '```' → logprob: -16.500015258789062
    10. ' difference' → logprob: -16.875015258789062

Token 179: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0031932818237692118
    2. '(' → logprob: -5.753193378448486
    3. ' (' → logprob: -12.003192901611328
    4. 'total' → logprob: -12.128192901611328
    5. '(
' → logprob: -13.378192901611328
    6. ',total' → logprob: -13.628192901611328
    7. ' total' → logprob: -13.878192901611328
    8. '(t' → logprob: -15.878192901611328
    9. '	total' → logprob: -16.253192901611328
    10. '(

' → logprob: -17.628192901611328

Token 180: '_W' (ID: 5493)
  Prédit: '_W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_W' → logprob: -0.006611519027501345
    2. ',' → logprob: -5.381611347198486
    3. ',W' → logprob: -6.881611347198486
    4. ',_' → logprob: -7.256611347198486
    5. '_,' → logprob: -8.631611824035645
    6. ' ,' → logprob: -10.131611824035645
    7. '_' → logprob: -11.131611824035645
    8. ',total' → logprob: -12.006611824035645
    9. ' ' → logprob: -13.006611824035645
    10. '```' → logprob: -13.131611824035645

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -12.500004768371582
    3. ',
' → logprob: -14.875004768371582
    4. ',

' → logprob: -16.000003814697266
    5. ')' → logprob: -16.375003814697266
    6. '‌,' → logprob: -16.625003814697266
    7. ',\
' → logprob: -18.125003814697266
    8. ',d' → logprob: -18.625003814697266
    9. ',current' → logprob: -18.875003814697266
    10. '[' → logprob: -18.875003814697266

Token 182: ' partial' (ID: 13664)
  Prédit: ' partial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.0619802325963974
    2. 'partial' → logprob: -2.8119802474975586
    3. ' diff' → logprob: -11.561980247497559
    4. 'diff' → logprob: -13.811980247497559
    5. '.partial' → logprob: -13.811980247497559
    6. '(part' → logprob: -15.061980247497559
    7. 'partials' → logprob: -15.561980247497559
    8. ' part' → logprob: -15.561980247497559
    9. '_partial' → logprob: -15.811980247497559
    10. ')' → logprob: -15.936980247497559

Token 183: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.000305310997646302
    2. 'sum' → logprob: -8.12530517578125
    3. ')' → logprob: -12.87530517578125
    4. '_' → logprob: -13.00030517578125
    5. '_s' → logprob: -13.00030517578125
    6. ' _' → logprob: -14.87530517578125
    7. ' sum' → logprob: -15.25030517578125
    8. ')_' → logprob: -16.12530517578125
    9. '_SUM' → logprob: -16.25030517578125
    10. '_diff' → logprob: -16.25030517578125

Token 184: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011718906462192535
    2. ')
' → logprob: -6.751172065734863
    3. '   ' → logprob: -14.126172065734863
    4. ')
' → logprob: -14.876172065734863
    5. ')

' → logprob: -15.126172065734863
    6. ' )' → logprob: -15.376172065734863
    7. '       ' → logprob: -17.251171112060547
    8. ')`' → logprob: -17.501171112060547
    9. ')#' → logprob: -18.001171112060547
    10. ')\
' → logprob: -18.251171112060547

Token 185: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013030927628278732
    2. '       ' → logprob: -4.513031005859375
    3. '   ' → logprob: -6.888031005859375
    4. '
' → logprob: -7.263031005859375
    5. '    
' → logprob: -9.513031005859375
    6. '        
' → logprob: -9.638031005859375
    7. 'ans' → logprob: -10.638031005859375
    8. ' ans' → logprob: -11.013031005859375
    9. '\n' → logprob: -11.263031005859375
    10. ' 
' → logprob: -11.388031005859375

Token 186: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3338523805141449
    2. 'ans' (adapté à ' ans') → logprob: -1.5838524103164673
    3. '
' → logprob: -2.8338522911071777
    4. '   ' → logprob: -4.208852291107178
    5. '	ans' → logprob: -6.083852291107178
    6. '       ' → logprob: -6.833852291107178
    7. '(ans' → logprob: -7.208852291107178
    8. '    
' → logprob: -7.958852291107178
    9. ' 
' → logprob: -8.458852767944336
    10. '_ans' → logprob: -9.333852767944336

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804183006286621
    2. '=' → logprob: -3.288041830062866
    3. ' =
' → logprob: -16.288042068481445
    4. ' =
' → logprob: -16.413042068481445
    5. ' ' → logprob: -16.663042068481445
    6. ',' → logprob: -16.663042068481445
    7. '	' → logprob: -17.163042068481445
    8. '＝' → logprob: -17.788042068481445
    9. ' ' → logprob: -17.913042068481445
    10. '   ' → logprob: -17.913042068481445

Token 188: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.4740773141384125
    2. 'update' → logprob: -0.9740773439407349
    3. '(update' → logprob: -16.099077224731445
    4. '	update' → logprob: -16.349077224731445
    5. '.update' → logprob: -16.724077224731445
    6. '   ' → logprob: -18.349077224731445
    7. ' ' → logprob: -19.474077224731445
    8. ' ' → logprob: -19.474077224731445
    9. '_update' → logprob: -19.599077224731445
    10. '```' → logprob: -20.599077224731445

Token 189: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -0.00023572170175611973
    2. '_ans' → logprob: -8.375235557556152
    3. '_' → logprob: -12.500235557556152
    4. 'answer' → logprob: -13.875235557556152
    5. 'Answer' → logprob: -15.250235557556152
    6. '_answers' → logprob: -16.12523651123047
    7. ' _' → logprob: -16.75023651123047
    8. '_an' → logprob: -17.00023651123047
    9. '(ans' → logprob: -17.25023651123047
    10. '```' → logprob: -17.25023651123047

Token 190: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.953082341467962e-05
    2. '(' → logprob: -10.250039100646973
    3. '(answer' → logprob: -12.500039100646973
    4. ' (' → logprob: -14.750039100646973
    5. '(
' → logprob: -16.62504005432129
    6. '```' → logprob: -18.75004005432129
    7. '	ans' → logprob: -19.00004005432129
    8. '(args' → logprob: -19.50004005432129
    9. '(err' → logprob: -19.75004005432129
    10. '(an' → logprob: -20.37504005432129

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013214473437983543
    2. ',d' → logprob: -9.12513256072998
    3. ' ,' → logprob: -10.75013256072998
    4. ',
' → logprob: -13.75013256072998
    5. '(diff' → logprob: -14.62513256072998
    6. 'diff' → logprob: -16.000131607055664
    7. ' diff' → logprob: -16.750131607055664
    8. ',
' → logprob: -18.750131607055664
    9. ',

' → logprob: -18.875131607055664
    10. '	diff' → logprob: -19.000131607055664

Token 192: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.023248739540576935
    2. 'diff' → logprob: -3.7732486724853516
    3. ' dif' → logprob: -13.398248672485352
    4. '	diff' → logprob: -13.648248672485352
    5. '(diff' → logprob: -14.523248672485352
    6. '
' → logprob: -17.52324867248535
    7. 'd' → logprob: -17.77324867248535
    8. ' d' → logprob: -18.02324867248535
    9. ' ' → logprob: -18.14824867248535
    10. ')' → logprob: -18.27324867248535

Token 193: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5765551328659058
    2. ')' → logprob: -0.8265551328659058
    3. '   ' → logprob: -7.826555252075195
    4. ')
' → logprob: -9.326555252075195
    5. ')

' → logprob: -9.451555252075195
    6. '
' → logprob: -11.201555252075195
    7. ')i' → logprob: -11.826555252075195
    8. ' )
' → logprob: -11.826555252075195
    9. ')return' → logprob: -12.576555252075195
    10. '```' → logprob: -12.701555252075195

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04274566099047661
    2. '
' → logprob: -3.417745590209961
    3. '    
' → logprob: -4.792745590209961
    4. ' return' → logprob: -7.792745590209961
    5. '\n' → logprob: -9.292745590209961
    6. ' 
' → logprob: -9.667745590209961
    7. '  
' → logprob: -9.792745590209961
    8. 'return' → logprob: -9.917745590209961
    9. '<|end|>' → logprob: -10.292745590209961
    10. 'print' → logprob: -10.917745590209961

Token 195: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08500931411981583
    2. 'print' (adapté à ' print') → logprob: -2.8350093364715576
    3. 'return' → logprob: -4.8350090980529785
    4. '
' → logprob: -4.8350090980529785
    5. ' return' → logprob: -5.7100090980529785
    6. '    
' → logprob: -6.0850090980529785
    7. ' print' → logprob: -6.8350090980529785
    8. '	return' → logprob: -9.960009574890137
    9. '\n' → logprob: -10.085009574890137
    10. '  
' → logprob: -10.210009574890137

Token 196: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931958794593811
    2. '(ans' → logprob: -0.6931958794593811
    3. '()' → logprob: -10.193196296691895
    4. ' (' → logprob: -12.693196296691895
    5. '(
' → logprob: -12.693196296691895
    6. '('' → logprob: -13.693196296691895
    7. '(answer' → logprob: -13.818196296691895
    8. '(`' → logprob: -14.193196296691895
    9. '("("' → logprob: -14.193196296691895
    10. '(

' → logprob: -14.693196296691895

Token 197: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05700385197997093
    2. '()' → logprob: -3.0570037364959717
    3. '(ans' → logprob: -4.807003974914551
    4. '("("' → logprob: -9.80700397491455
    5. '(()' → logprob: -10.68200397491455
    6. '(`' → logprob: -10.80700397491455
    7. '('' → logprob: -10.80700397491455
    8. '(
' → logprob: -10.93200397491455
    9. '()(' → logprob: -11.43200397491455
    10. ' (' → logprob: -11.55700397491455

Token 198: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '()' → logprob: -12.875004768371582
    3. ')
' → logprob: -13.250004768371582
    4. '())' → logprob: -14.750004768371582
    5. ' )' → logprob: -15.125004768371582
    6. '(' → logprob: -16.7500057220459
    7. ')`' → logprob: -16.8750057220459
    8. '))' → logprob: -18.7500057220459
    9. ')

' → logprob: -19.2500057220459
    10. ')}' → logprob: -20.0000057220459

Token 199: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6714488863945007
    2. 'def' → logprob: -1.6714489459991455
    3. '(' → logprob: -2.1714489459991455
    4. '()
' → logprob: -2.7964489459991455
    5. '()

' → logprob: -2.9214489459991455
    6. '_' → logprob: -3.2964489459991455
    7. '(
' → logprob: -3.7964489459991455
    8. '
' → logprob: -5.171448707580566
    9. '\' → logprob: -6.046448707580566
    10. '(

' → logprob: -6.421448707580566

Token 200: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.16023977100849152
    2. 'print' → logprob: -1.910239815711975
    3. '_print' → logprob: -11.285240173339844
    4. ' main' → logprob: -13.160240173339844
    5. '	print' → logprob: -14.785240173339844
    6. '(print' → logprob: -15.785240173339844
    7. ' ' → logprob: -15.910240173339844
    8. ' prin' → logprob: -16.035240173339844
    9. 'main' → logprob: -16.285240173339844
    10. '_' → logprob: -16.910240173339844

Token 201: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0030563808977603912
    2. '_' → logprob: -6.378056526184082
    3. '("_' → logprob: -7.628056526184082
    4. '_results' → logprob: -7.753056526184082
    5. '_output' → logprob: -8.503056526184082
    6. '(_' → logprob: -10.003056526184082
    7. '('_' → logprob: -10.128056526184082
    8. '_res' → logprob: -10.253056526184082
    9. '(' → logprob: -10.628056526184082
    10. '_final' → logprob: -10.753056526184082

Token 202: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07301027327775955
    2. '(ans' → logprob: -2.698010206222534
    3. '()' → logprob: -6.823010444641113
    4. '():' → logprob: -7.448010444641113
    5. '(answer' → logprob: -8.323010444641113
    6. ' (' → logprob: -8.698010444641113
    7. '(print' → logprob: -8.823010444641113
    8. '(def' → logprob: -8.948010444641113
    9. '(args' → logprob: -9.448010444641113
    10. '("("' → logprob: -9.573010444641113

Token 203: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009099499322474003
    2. '):
' → logprob: -5.13409948348999
    3. ')' → logprob: -5.75909948348999
    4. '():' → logprob: -12.384099960327148
    5. '):
' → logprob: -13.009099960327148
    6. ' ):' → logprob: -13.009099960327148
    7. ':' → logprob: -13.634099960327148
    8. '()' → logprob: -14.384099960327148
    9. '):

' → logprob: -14.884099960327148
    10. '）：' → logprob: -15.634099960327148

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004153906833380461
    2. ' print' → logprob: -5.504153728485107
    3. 'print' → logprob: -9.504154205322266
    4. '   ' → logprob: -14.379154205322266
    5. '```' → logprob: -15.379154205322266
    6. '	print' → logprob: -16.754154205322266
    7. '    ' → logprob: -17.504154205322266
    8. '       ' → logprob: -18.879154205322266
    9. '   ' → logprob: -19.129154205322266
    10. '.print' → logprob: -19.379154205322266

Token 205: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7610454708337784e-05
    2. ' print' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.00002670288086
    4. 'pr' → logprob: -17.75002670288086
    5. '```' → logprob: -18.50002670288086
    6. 'prin' → logprob: -19.37502670288086
    7. 'def' → logprob: -21.12502670288086
    8. 'pri' → logprob: -21.50002670288086
    9. 'prit' → logprob: -21.62502670288086
    10. '`' → logprob: -22.50002670288086

Token 206: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.277553620748222e-05
    2. '(' → logprob: -10.375062942504883
    3. 'ans' → logprob: -10.375062942504883
    4. '()' → logprob: -15.625062942504883
    5. ' (' → logprob: -15.875062942504883
    6. ' ans' → logprob: -17.000062942504883
    7. '	ans' → logprob: -17.000062942504883
    8. '(answer' → logprob: -17.125062942504883
    9. '(
' → logprob: -17.500062942504883
    10. '(abs' → logprob: -17.875062942504883

Token 207: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -17.250003814697266
    4. ')`' → logprob: -18.250003814697266
    5. '()' → logprob: -18.375003814697266
    6. '')' → logprob: -19.000003814697266
    7. ')

' → logprob: -19.125003814697266
    8. '())' → logprob: -20.000003814697266
    9. ')}' → logprob: -20.500003814697266
    10. '))' → logprob: -20.500003814697266

Token 208: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6660284996032715
    2. 'if' → logprob: -1.1660284996032715
    3. '#' → logprob: -3.0410284996032715
    4. '<|end|>' → logprob: -3.1660284996032715
    5. '_' → logprob: -3.4160284996032715
    6. '
' → logprob: -3.9160284996032715
    7. 'i' → logprob: -4.6660284996032715
    8. '```' → logprob: -5.2910284996032715
    9. '[' → logprob: -6.0410284996032715
    10. ' main' → logprob: -6.4160284996032715

Token 209: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 207
Tokens correctement prédits (1ère position, stricte): 105
Tokens correctement prédits (1ère position, avec adaptation): 112
Tokens correctement prédits (top 10): 181
Précision stricte (1ère position): 50.72%
Précision adaptée (1ère position): 54.11%
Précision (top 10): 87.44%
================================================================================
