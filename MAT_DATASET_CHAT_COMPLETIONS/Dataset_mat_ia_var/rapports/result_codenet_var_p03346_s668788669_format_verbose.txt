================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

read_input_line = sys.stdin.readline

def read_integers_as_tuple():
    return map(int, read_input_line().split())

def read_integers_as_list():
    return list(read_integers_as_tuple())

def compute_factorials_up_to_n_with_modulo(max_value, modulo):
    factorial_sequence = [1]
    for integer in range(1, max_value + 1):
        factorial_sequence.append(factorial_sequence[-1] * integer % modulo)
    return factorial_sequence

precomputed_inverses = {}

def modular_inverse(value, modulo):
    if value in precomputed_inverses:
        return precomputed_inverses[value]
    inverse_result = pow(value, modulo - 2, modulo)
    precomputed_inverses[value] = inverse_result
    return inverse_result

def binomial_coefficient_with_modulo(factorial_sequence, total, choose, modulo):
    return (
        factorial_sequence[total] *
        modular_inverse(factorial_sequence[choose], modulo) *
        modular_inverse(factorial_sequence[total - choose], modulo)
    ) % modulo

def process_permutation_and_compute_result():
    number_of_elements = int(read_input_line())
    element_position_order = [0] * number_of_elements

    for input_index in range(number_of_elements):
        element_value = int(read_input_line()) - 1
        element_position_order[element_value] = input_index

    minimum_moves_required = 0
    current_increasing_sequence_length = 0
    previous_position = -1

    for current_position in element_position_order:
        if previous_position < current_position:
            current_increasing_sequence_length += 1
        else:
            minimum_moves_required = max(minimum_moves_required, current_increasing_sequence_length)
            current_increasing_sequence_length = 1
        previous_position = current_position

    minimum_moves_required = max(minimum_moves_required, current_increasing_sequence_length)
    print(number_of_elements - minimum_moves_required)

if __name__ == "__main__":
    process_permutation_and_compute_result()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.043228268623352
    2. '.' → logprob: -1.168228268623352
    3. '<|end|>' → logprob: -2.2932281494140625
    4. 'import' → logprob: -2.5432281494140625
    5. '' → logprob: -2.5432281494140625
    6. '#' → logprob: -3.7932281494140625
    7. '\' → logprob: -4.4182281494140625
    8. '
' → logprob: -4.7932281494140625
    9. 'print' → logprob: -5.0432281494140625
    10. ';' → logprob: -5.6682281494140625

Token 4: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03322778269648552
    2. '()' → logprob: -4.533227920532227
    3. '_' → logprob: -5.033227920532227
    4. '.' → logprob: -5.158227920532227
    5. 'line' → logprob: -6.033227920532227
    6. ' (' → logprob: -6.658227920532227
    7. 'ing' → logprob: -6.658227920532227
    8. 's' → logprob: -7.283227920532227
    9. ' ' → logprob: -7.533227920532227
    10. 'r' → logprob: -7.658227920532227

Token 5: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003445216570980847
    2. '()' → logprob: -8.250344276428223
    3. '_' → logprob: -10.875344276428223
    4. '(
' → logprob: -11.125344276428223
    5. '('' → logprob: -11.125344276428223
    6. ')' → logprob: -11.375344276428223
    7. 's' → logprob: -12.125344276428223
    8. ' (' → logprob: -12.250344276428223
    9. '(

' → logprob: -12.500344276428223
    10. '(`' → logprob: -13.750344276428223

Token 6: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09797646850347519
    2. '(' → logprob: -2.5979764461517334
    3. 's' → logprob: -3.9729764461517334
    4. ')' → logprob: -10.972976684570312
    5. ' ()' → logprob: -11.472976684570312
    6. '(s' → logprob: -11.722976684570312
    7. '('' → logprob: -11.847976684570312
    8. '=' → logprob: -11.972976684570312
    9. '_' → logprob: -12.347976684570312
    10. '();' → logprob: -12.597976684570312

Token 7: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16132797300815582
    2. 'sys' → logprob: -1.9113279581069946
    3. ' lambda' → logprob: -7.786327838897705
    4. 'input' → logprob: -8.036328315734863
    5. ' input' → logprob: -8.286328315734863
    6. 'lambda' → logprob: -9.661328315734863
    7. ' ' → logprob: -10.036328315734863
    8. '=sys' → logprob: -13.286328315734863
    9. '(sys' → logprob: -13.411328315734863
    10. '	sys' → logprob: -13.786328315734863

Token 8: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01300681009888649
    2. '.stdin' → logprob: -4.888006687164307
    3. '.readline' → logprob: -5.388006687164307
    4. '.stdout' → logprob: -7.888006687164307
    5. '.argv' → logprob: -8.638007164001465
    6. '.import' → logprob: -9.388007164001465
    7. '.read' → logprob: -9.638007164001465
    8. ' .' → logprob: -9.638007164001465
    9. '.input' → logprob: -11.888007164001465
    10. '.stderr' → logprob: -12.013007164001465

Token 9: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.21837876737117767
    2. '.' → logprob: -1.7183787822723389
    3. '.read' → logprob: -4.09337854385376
    4. '.readlines' → logprob: -9.593379020690918
    5. 'read' → logprob: -10.093379020690918
    6. '.Read' → logprob: -11.468379020690918
    7. ' .' → logprob: -11.968379020690918
    8. '.write' → logprob: -12.468379020690918
    9. '```' → logprob: -12.843379020690918
    10. ' readline' → logprob: -13.218379020690918

Token 10: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03850087895989418
    2. '()' → logprob: -3.4135007858276367
    3. '(
' → logprob: -5.413500785827637
    4. '(

' → logprob: -9.538500785827637
    5. ' (' → logprob: -9.663500785827637
    6. ')' → logprob: -9.788500785827637
    7. '.' → logprob: -10.038500785827637
    8. ''s' → logprob: -10.413500785827637
    9. ' ' → logprob: -10.538500785827637
    10. '()
' → logprob: -11.038500785827637

Token 11: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5768812298774719
    2. '(' → logprob: -0.8268812298774719
    3. '(
' → logprob: -7.826881408691406
    4. '().' → logprob: -8.326881408691406
    5. '()
' → logprob: -9.451881408691406
    6. ')' → logprob: -9.826881408691406
    7. '.' → logprob: -9.826881408691406
    8. '(

' → logprob: -10.701881408691406
    9. '#' → logprob: -10.951881408691406
    10. '()

' → logprob: -11.076881408691406

Token 12: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006443457677960396
    2. ' space' → logprob: -6.006443500518799
    3. '_' → logprob: -6.756443500518799
    4. ' _' → logprob: -7.381443500518799
    5. ' process' → logprob: -7.756443500518799
    6. ' main' → logprob: -7.881443500518799
    7. ' read' → logprob: -8.38144302368164
    8. ' my' → logprob: -8.50644302368164
    9. '_space' → logprob: -8.88144302368164
    10. ' calculate' → logprob: -9.50644302368164

Token 13: '_in' (ID: 2267)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32147765159606934
    2. '(' → logprob: -1.6964776515960693
    3. '_input' → logprob: -3.0714776515960693
    4. '_line' → logprob: -3.3214776515960693
    5. '()' → logprob: -4.946477890014648
    6. '(_)' → logprob: -8.196477890014648
    7. '```' → logprob: -8.321477890014648
    8. ')' → logprob: -8.321477890014648
    9. '_token' → logprob: -8.821477890014648
    10. '_user' → logprob: -8.946477890014648

Token 14: 'te' (ID: 411)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.16029205918312073
    2. 't' → logprob: -1.9102920293807983
    3. 'ut' → logprob: -10.03529167175293
    4. '_put' → logprob: -11.91029167175293
    5. '_t' → logprob: -12.91029167175293
    6. 'p' → logprob: -13.03529167175293
    7. 'line' → logprob: -13.03529167175293
    8. 'tent' → logprob: -13.28529167175293
    9. 'pt' → logprob: -13.53529167175293
    10. '_' → logprob: -13.53529167175293

Token 15: 'gers' (ID: 13027)
  Prédit: 'ger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ger' → logprob: -0.5292794704437256
    2. 'gers' → logprob: -1.1542794704437256
    3. 'g' → logprob: -2.9042794704437256
    4. 'gr' → logprob: -3.4042794704437256
    5. 'r' → logprob: -4.904279708862305
    6. '```' → logprob: -9.654279708862305
    7. '   ' → logprob: -10.279279708862305
    8. 'rs' → logprob: -10.654279708862305
    9. '  ' → logprob: -11.154279708862305
    10. '_' → logprob: -11.654279708862305

Token 16: '_as' (ID: 25206)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01869707554578781
    2. '():' → logprob: -4.018697261810303
    3. '_' → logprob: -8.643696784973145
    4. '()' → logprob: -9.893696784973145
    5. '("("' → logprob: -9.893696784973145
    6. '('' → logprob: -10.018696784973145
    7. ':' → logprob: -10.018696784973145
    8. ' (' → logprob: -10.268696784973145
    9. '```' → logprob: -10.893696784973145
    10. 's' → logprob: -11.268696784973145

Token 17: '_tuple' (ID: 53371)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.05752135440707207
    2. 'list' → logprob: -3.182521343231201
    3. ' list' → logprob: -4.557521343231201
    4. 's' → logprob: -6.057521343231201
    5. 'List' → logprob: -7.182521343231201
    6. '_lst' → logprob: -9.05752182006836
    7. '_line' → logprob: -9.05752182006836
    8. 't' → logprob: -9.68252182006836
    9. '_array' → logprob: -9.68252182006836
    10. '_lists' → logprob: -9.93252182006836

Token 18: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005582740413956344
    2. '():' → logprob: -7.625558376312256
    3. ':' → logprob: -10.875557899475098
    4. ' (' → logprob: -11.375557899475098
    5. '("("' → logprob: -11.375557899475098
    6. '('' → logprob: -11.500557899475098
    7. '()' → logprob: -12.625557899475098
    8. '(
' → logprob: -13.000557899475098
    9. '(`' → logprob: -13.500557899475098
    10. '(:' → logprob: -13.875557899475098

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3814593553543091
    2. '():' → logprob: -1.256459355354309
    3. '(' → logprob: -4.3814592361450195
    4. '()' → logprob: -4.6314592361450195
    5. ' return' → logprob: -5.2564592361450195
    6. 'return' → logprob: -6.3814592361450195
    7. ':' → logprob: -7.0064592361450195
    8. '    ' → logprob: -7.5064592361450195
    9. '	return' → logprob: -8.00645923614502
    10. ':return' → logprob: -8.13145923614502

Token 20: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18228141963481903
    2. ' return' → logprob: -1.9322813749313354
    3. 'return' (adapté à ' return') → logprob: -3.932281494140625
    4. '    ' → logprob: -7.182281494140625
    5. ' line' → logprob: -7.432281494140625
    6. '\t' → logprob: -8.932281494140625
    7. '	return' → logprob: -9.307281494140625
    8. ' readline' → logprob: -9.557281494140625
    9. 'data' → logprob: -9.807281494140625
    10. '   ' → logprob: -9.932281494140625

Token 21: ' map' (ID: 4014)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.038085438311100006
    2. 'tuple' → logprob: -3.288085460662842
    3. '(tuple' → logprob: -10.288084983825684
    4. ' read' → logprob: -12.788084983825684
    5. ' ' → logprob: -13.288084983825684
    6. 'int' → logprob: -13.413084983825684
    7. '   ' → logprob: -13.538084983825684
    8. ' int' → logprob: -13.663084983825684
    9. 'read' → logprob: -14.038084983825684
    10. '  ' → logprob: -15.163084983825684

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20182940363883972
    2. '(' → logprob: -1.701829433441162
    3. '(lambda' → logprob: -7.826829433441162
    4. '(read' → logprob: -12.576828956604004
    5. 'int' → logprob: -12.701828956604004
    6. '(list' → logprob: -13.201828956604004
    7. '(
' → logprob: -13.326828956604004
    8. ' (' → logprob: -13.451828956604004
    9. '<int' → logprob: -13.701828956604004
    10. '(tuple' → logprob: -13.826828956604004

Token 23: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.06588420271873474
    2. '(' → logprob: -3.4408841133117676
    3. '(sys' → logprob: -3.5658841133117676
    4. ')' → logprob: -6.065884113311768
    5. 'read' → logprob: -7.690884113311768
    6. ',' → logprob: -8.315884590148926
    7. ' (' → logprob: -8.815884590148926
    8. ' read' → logprob: -9.190884590148926
    9. '(
' → logprob: -10.815884590148926
    10. '.read' → logprob: -11.190884590148926

Token 24: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.5760915279388428
    2. 'read' → logprob: -0.8260915279388428
    3. '(read' → logprob: -9.826091766357422
    4. ' readline' → logprob: -10.201091766357422
    5. '	read' → logprob: -10.576091766357422
    6. ')' → logprob: -10.826091766357422
    7. '.read' → logprob: -12.326091766357422
    8. '   ' → logprob: -12.451091766357422
    9. ' ' → logprob: -12.826091766357422
    10. '  ' → logprob: -13.326091766357422

Token 25: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.5094070477061905e-05
    2. '_in' → logprob: -12.000015258789062
    3. '_output' → logprob: -12.125015258789062
    4. '_inputs' → logprob: -13.500015258789062
    5. ' _' → logprob: -13.625015258789062
    6. '_' → logprob: -14.875015258789062
    7. '_put' → logprob: -16.000015258789062
    8. '_INPUT' → logprob: -16.125015258789062
    9. 'put' → logprob: -17.125015258789062
    10. '```' → logprob: -17.125015258789062

Token 26: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00012154294381616637
    2. '_' → logprob: -9.750121116638184
    3. ' _' → logprob: -10.625121116638184
    4. ')_' → logprob: -11.375121116638184
    5. 'line' → logprob: -12.000121116638184
    6. '_input' → logprob: -12.250121116638184
    7. ')' → logprob: -12.750121116638184
    8. 'put' → logprob: -13.000121116638184
    9. '_put' → logprob: -13.250121116638184
    10. '_LINE' → logprob: -13.250121116638184

Token 27: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.052622176706790924
    2. '().' → logprob: -3.552622079849243
    3. '()' → logprob: -3.802622079849243
    4. ' ())' → logprob: -8.802621841430664
    5. ')' → logprob: -10.177621841430664
    6. '()))' → logprob: -10.427621841430664
    7. '(' → logprob: -10.677621841430664
    8. '())
' → logprob: -11.802621841430664
    9. '('' → logprob: -12.177621841430664
    10. '()
' → logprob: -12.302621841430664

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5782353281974792
    2. 'strip' → logprob: -0.8282353281974792
    3. 'rstrip' → logprob: -6.078235149383545
    4. ' split' → logprob: -14.453235626220703
    5. ')' → logprob: -15.328235626220703
    6. ' strip' → logprob: -15.453235626220703
    7. '(split' → logprob: -16.953235626220703
    8. 'rs' → logprob: -17.453235626220703
    9. 'str' → logprob: -17.953235626220703
    10. ' ' → logprob: -18.078235626220703

Token 29: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015899618156254292
    2. '()))' → logprob: -6.626589775085449
    3. '()' → logprob: -8.87658977508545
    4. ')' → logprob: -9.12658977508545
    5. '))' → logprob: -11.62658977508545
    6. '())
' → logprob: -12.87658977508545
    7. ' ())' → logprob: -13.00158977508545
    8. '(' → logprob: -13.50158977508545
    9. '()))
' → logprob: -15.87658977508545
    10. '()]' → logprob: -16.626590728759766

Token 30: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.320180743932724
    2. 'def' → logprob: -2.820180654525757
    3. '#' → logprob: -3.195180654525757
    4. ')' → logprob: -3.320180654525757
    5. ',' → logprob: -4.195180892944336
    6. '\' → logprob: -4.320180892944336
    7. 'a' → logprob: -4.320180892944336
    8. 'x' → logprob: -4.445180892944336
    9. 'newline' → logprob: -4.445180892944336
    10. '(
' → logprob: -4.570180892944336

Token 31: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15310044586658478
    2. ' read' → logprob: -2.0281004905700684
    3. ' solve' → logprob: -5.153100490570068
    4. ' calculate' → logprob: -6.528100490570068
    5. ' compute' → logprob: -7.028100490570068
    6. ' write' → logprob: -7.278100490570068
    7. ' factorial' → logprob: -7.778100490570068
    8. ' find' → logprob: -8.52810001373291
    9. ' process' → logprob: -8.65310001373291
    10. 'main' → logprob: -8.77810001373291

Token 32: '_in' (ID: 2267)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.1676447093486786
    2. '_' → logprob: -3.042644739151001
    3. '_int' → logprob: -3.542644739151001
    4. '_integer' → logprob: -3.667644739151001
    5. '_input' → logprob: -4.417644500732422
    6. '_string' → logprob: -4.417644500732422
    7. '_in' → logprob: -4.542644500732422
    8. '_word' → logprob: -5.292644500732422
    9. '_token' → logprob: -7.042644500732422
    10. '_lines' → logprob: -7.042644500732422

Token 33: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.03862212225794792
    2. 't' → logprob: -3.9136221408843994
    3. 'teger' → logprob: -4.66362190246582
    4. 'put' → logprob: -5.41362190246582
    5. 'eg' → logprob: -5.91362190246582
    6. 'e' → logprob: -7.03862190246582
    7. 'TEGER' → logprob: -9.66362190246582
    8. 'teg' → logprob: -9.66362190246582
    9. 'puts' → logprob: -9.78862190246582
    10. 'tent' → logprob: -10.16362190246582

Token 34: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.0006131939589977264
    2. 'gr' → logprob: -8.12561321258545
    3. 'ger' → logprob: -8.50061321258545
    4. 'g' → logprob: -10.12561321258545
    5. '_' → logprob: -10.87561321258545
    6. '```' → logprob: -11.25061321258545
    7. 'get' → logprob: -11.62561321258545
    8. 'gres' → logprob: -11.87561321258545
    9. '_g' → logprob: -12.12561321258545
    10. '``' → logprob: -12.62561321258545

Token 35: '_as' (ID: 25206)
  Prédit: '_as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_as' → logprob: -0.0053879073821008205
    2. '():' → logprob: -6.005387783050537
    3. '()' → logprob: -6.505387783050537
    4. '_' → logprob: -6.880387783050537
    5. 'as' → logprob: -9.130388259887695
    6. '_list' → logprob: -9.255388259887695
    7. 'As' → logprob: -10.005388259887695
    8. '():
' → logprob: -10.755388259887695
    9. '_As' → logprob: -11.005388259887695
    10. '_line' → logprob: -11.255388259887695

Token 36: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.014911185018718243
    2. '_' → logprob: -4.63991117477417
    3. '_tuple' → logprob: -5.38991117477417
    4. 'list' → logprob: -7.63991117477417
    5. '_array' → logprob: -9.889911651611328
    6. ' list' → logprob: -11.889911651611328
    7. '_set' → logprob: -12.139911651611328
    8. '_lst' → logprob: -12.264911651611328
    9. '_map' → logprob: -12.764911651611328
    10. '_space' → logprob: -12.764911651611328

Token 37: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00039588010986335576
    2. '()' → logprob: -8.375395774841309
    3. '(' → logprob: -9.125395774841309
    4. ' ():' → logprob: -10.625395774841309
    5. '_' → logprob: -11.250395774841309
    6. '()>' → logprob: -12.000395774841309
    7. ':' → logprob: -13.125395774841309
    8. '_list' → logprob: -13.500395774841309
    9. '():
' → logprob: -13.500395774841309
    10. '_parent' → logprob: -13.875395774841309

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005327790859155357
    2. ':' → logprob: -8.125533103942871
    3. '():' → logprob: -9.000533103942871
    4. ' return' → logprob: -9.625533103942871
    5. 'return' → logprob: -11.125533103942871
    6. '  ' → logprob: -11.500533103942871
    7. '    ' → logprob: -12.125533103942871
    8. '    
' → logprob: -12.625533103942871
    9. '()' → logprob: -13.125533103942871
    10. '(' → logprob: -13.250533103942871

Token 39: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10631583631038666
    2. ' return' → logprob: -2.356315851211548
    3. 'return' (adapté à ' return') → logprob: -5.106315612792969
    4. '    ' → logprob: -11.231315612792969
    5. ' ' → logprob: -11.481315612792969
    6. '  ' → logprob: -12.231315612792969
    7. '```' → logprob: -13.106315612792969
    8. '   ' → logprob: -14.356315612792969
    9. '       ' → logprob: -15.106315612792969
    10. '	return' → logprob: -15.231315612792969

Token 40: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.38688117265701294
    2. 'list' → logprob: -1.1368811130523682
    3. '[list' → logprob: -12.136880874633789
    4. 'read' → logprob: -13.636880874633789
    5. ' read' → logprob: -13.886880874633789
    6. '[' → logprob: -14.511880874633789
    7. ' [' → logprob: -14.886880874633789
    8. '	list' → logprob: -15.136880874633789
    9. 'List' → logprob: -15.261880874633789
    10. 'map' → logprob: -15.386880874633789

Token 41: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.47682949900627136
    2. '(' → logprob: -0.9768295288085938
    3. '(int' → logprob: -6.226829528808594
    4. '(map' → logprob: -7.476829528808594
    5. '((' → logprob: -10.601829528808594
    6. '(convert' → logprob: -10.601829528808594
    7. '(parse' → logprob: -10.726829528808594
    8. '(Read' → logprob: -11.226829528808594
    9. '(sys' → logprob: -11.351829528808594
    10. 'read' → logprob: -11.351829528808594

Token 42: '_in' (ID: 2267)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.02993040718138218
    2. '_in' → logprob: -3.529930353164673
    3. '_int' → logprob: -9.154930114746094
    4. '_' → logprob: -9.654930114746094
    5. '_inputs' → logprob: -13.029930114746094
    6. '_inter' → logprob: -13.279930114746094
    7. '_i' → logprob: -13.279930114746094
    8. '_integer' → logprob: -13.654930114746094
    9. '```' → logprob: -14.529930114746094
    10. '_output' → logprob: -14.654930114746094

Token 43: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.08169763535261154
    2. 't' → logprob: -2.581697702407837
    3. 'put' → logprob: -5.956697463989258
    4. '_in' → logprob: -9.581697463989258
    5. '_te' → logprob: -9.581697463989258
    6. '_t' → logprob: -10.581697463989258
    7. '_put' → logprob: -10.831697463989258
    8. 'ut' → logprob: -11.831697463989258
    9. 'gers' → logprob: -12.456697463989258
    10. '_input' → logprob: -12.581697463989258

Token 44: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.0039343754760921
    2. 'rs' → logprob: -5.628934383392334
    3. 'gr' → logprob: -8.628933906555176
    4. 'r' → logprob: -9.003933906555176
    5. '_' → logprob: -11.253933906555176
    6. 'ers' → logprob: -12.003933906555176
    7. 'rt' → logprob: -12.503933906555176
    8. 'ger' → logprob: -12.628933906555176
    9. '_gr' → logprob: -13.253933906555176
    10. 't' → logprob: -13.753933906555176

Token 45: '_as' (ID: 25206)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00022201328829396516
    2. '_list' → logprob: -8.500222206115723
    3. '_as' → logprob: -11.750222206115723
    4. 'line' → logprob: -12.000222206115723
    5. '_l' → logprob: -13.625222206115723
    6. '_lines' → logprob: -13.625222206115723
    7. '()' → logprob: -14.250222206115723
    8. ')' → logprob: -14.625222206115723
    9. '_LINE' → logprob: -15.125222206115723
    10. '_' → logprob: -15.375222206115723

Token 46: '_tuple' (ID: 53371)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.48890507221221924
    2. 'list' → logprob: -0.9889050722122192
    3. 'line' → logprob: -4.48890495300293
    4. 'put' → logprob: -6.36390495300293
    5. '_line' → logprob: -6.61390495300293
    6. 'l' → logprob: -9.23890495300293
    7. 't' → logprob: -9.23890495300293
    8. 'plit' → logprob: -9.73890495300293
    9. 'st' → logprob: -10.36390495300293
    10. 'ist' → logprob: -10.48890495300293

Token 47: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0033274299930781126
    2. '()' → logprob: -5.753327369689941
    3. ')' → logprob: -8.878327369689941
    4. '())
' → logprob: -12.628327369689941
    5. ' ())' → logprob: -12.628327369689941
    6. '()))' → logprob: -13.253327369689941
    7. '();)' → logprob: -14.003327369689941
    8. '()]' → logprob: -14.878327369689941
    9. '())

' → logprob: -15.753327369689941
    10. '()),' → logprob: -15.878327369689941

Token 48: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26555219292640686
    2. '#' → logprob: -2.015552282333374
    3. 'd' → logprob: -2.890552282333374
    4. '\' → logprob: -4.640552043914795
    5. '
' → logprob: -4.640552043914795
    6. '(' → logprob: -4.765552043914795
    7. 'n' → logprob: -5.640552043914795
    8. 'de' → logprob: -5.765552043914795
    9. '```' → logprob: -6.015552043914795
    10. '\n' → logprob: -6.140552043914795

Token 49: ' compute' (ID: 23864)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.013631302863359451
    2. ' solve' → logprob: -5.513631343841553
    3. 'read' → logprob: -6.513631343841553
    4. ' parse' → logprob: -6.638631343841553
    5. ' write' → logprob: -7.138631343841553
    6. ' main' → logprob: -7.263631343841553
    7. ' calculate' → logprob: -7.263631343841553
    8. ' process' → logprob: -7.388631343841553
    9. ' find' → logprob: -7.638631343841553
    10. ' compute' → logprob: -7.763631343841553

Token 50: '_factor' (ID: 43757)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.40857723355293274
    2. '_factor' → logprob: -1.2835772037506104
    3. '_' → logprob: -3.5335772037506104
    4. '_max' → logprob: -4.6585774421691895
    5. '_total' → logprob: -5.4085774421691895
    6. '_area' → logprob: -6.1585774421691895
    7. '_square' → logprob: -6.4085774421691895
    8. '_s' → logprob: -6.5335774421691895
    9. '(' → logprob: -6.6585774421691895
    10. '_f' → logprob: -6.9085774421691895

Token 51: 'ials' (ID: 16596)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.03697950392961502
    2. 'ialize' → logprob: -3.6619794368743896
    3. '_' → logprob: -4.661979675292969
    4. '```' → logprob: -7.661979675292969
    5. 'ize' → logprob: -8.036979675292969
    6. 'ization' → logprob: -9.411979675292969
    7. '_factor' → logprob: -9.911979675292969
    8. 'ials' → logprob: -10.161979675292969
    9. '_size' → logprob: -10.286979675292969
    10. '_or' → logprob: -10.536979675292969

Token 52: '_up' (ID: 18721)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05032780021429062
    2. '_' → logprob: -3.175327777862549
    3. '(n' → logprob: -5.425327777862549
    4. '_for' → logprob: -7.300327777862549
    5. '_of' → logprob: -7.675327777862549
    6. '_(' → logprob: -7.925327777862549
    7. '(_' → logprob: -8.300328254699707
    8. '(_)' → logprob: -8.550328254699707
    9. '("("' → logprob: -9.175328254699707
    10. 's' → logprob: -9.175328254699707

Token 53: '_to' (ID: 5089)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5233446359634399
    2. '_to' → logprob: -0.8983446359634399
    3. '```' → logprob: -9.398344993591309
    4. '(to' → logprob: -9.898344993591309
    5. 't' → logprob: -10.023344993591309
    6. 'To' → logprob: -11.398344993591309
    7. 'toc' → logprob: -12.023344993591309
    8. '_' → logprob: -12.648344993591309
    9. '[to' → logprob: -13.023344993591309
    10. 'pto' → logprob: -13.023344993591309

Token 54: '_n' (ID: 2170)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001012803171761334
    2. '(' → logprob: -7.376012802124023
    3. '_n' → logprob: -8.751012802124023
    4. 'n' → logprob: -9.001012802124023
    5. ' (' → logprob: -9.751012802124023
    6. '(N' → logprob: -10.626012802124023
    7. 'N' → logprob: -11.751012802124023
    8. '(max' → logprob: -12.501012802124023
    9. ' n' → logprob: -13.126012802124023
    10. '```' → logprob: -13.126012802124023

Token 55: '_with' (ID: 14161)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06234721094369888
    2. '(' → logprob: -2.812347173690796
    3. ' (' → logprob: -7.937347412109375
    4. '(N' → logprob: -11.812347412109375
    5. '(num' → logprob: -11.937347412109375
    6. '("("' → logprob: -13.937347412109375
    7. '(nn' → logprob: -13.937347412109375
    8. '(max' → logprob: -14.187347412109375
    9. '(number' → logprob: -14.312347412109375
    10. '```' → logprob: -14.312347412109375

Token 56: '_mod' (ID: 15325)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.3014841377735138
    2. 'out' → logprob: -2.3014841079711914
    3. '_limit' → logprob: -3.0514841079711914
    4. '(n' → logprob: -3.4264841079711914
    5. '_mod' → logprob: -3.8014841079711914
    6. '_m' → logprob: -4.176484107971191
    7. '_' → logprob: -4.301484107971191
    8. '_n' → logprob: -4.926484107971191
    9. '_max' → logprob: -6.176484107971191
    10. '_c' → logprob: -6.551484107971191

Token 57: 'ulo' (ID: 5953)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11799143254756927
    2. '(' → logprob: -2.2429914474487305
    3. '_n' → logprob: -6.1179914474487305
    4. '_' → logprob: -6.6179914474487305
    5. '```' → logprob: -7.6179914474487305
    6. '(_' → logprob: -8.36799144744873
    7. '_(' → logprob: -8.74299144744873
    8. '(_)' → logprob: -8.86799144744873
    9. 'def' → logprob: -8.99299144744873
    10. ' (' → logprob: -9.11799144744873

Token 58: '(max' (ID: 17178)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5235088467597961
    2. '(' → logprob: -0.8985088467597961
    3. '(_' → logprob: -9.52350902557373
    4. ' (' → logprob: -9.64850902557373
    5. '_' → logprob: -9.77350902557373
    6. '```' → logprob: -10.27350902557373
    7. '(num' → logprob: -11.02350902557373
    8. 'def' → logprob: -11.14850902557373
    9. '_(' → logprob: -11.27350902557373
    10. '_n' → logprob: -11.39850902557373

Token 59: '_value' (ID: 6734)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.010033952072262764
    2. '_factor' → logprob: -5.010034084320068
    3. '_value' → logprob: -6.260034084320068
    4. '_val' → logprob: -7.635034084320068
    5. '_' → logprob: -8.26003360748291
    6. '_num' → logprob: -8.51003360748291
    7. '_number' → logprob: -8.88503360748291
    8. ')' → logprob: -9.26003360748291
    9. '_)' → logprob: -9.63503360748291
    10. '_len' → logprob: -10.13503360748291

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041230423375964165
    2. '):' → logprob: -5.754123210906982
    3. ' ,' → logprob: -7.379123210906982
    4. ')' → logprob: -9.004122734069824
    5. ',n' → logprob: -9.129122734069824
    6. ':' → logprob: -10.504122734069824
    7. ' ):' → logprob: -11.254122734069824
    8. ' ' → logprob: -12.129122734069824
    9. ',max' → logprob: -12.129122734069824
    10. '=' → logprob: -12.254122734069824

Token 61: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.11523737758398056
    2. ' mod' → logprob: -2.8652374744415283
    3. 'mod' → logprob: -3.4902374744415283
    4. ' modulus' → logprob: -3.8652374744415283
    5. ' module' → logprob: -9.36523723602295
    6. ' m' → logprob: -9.49023723602295
    7. '	mod' → logprob: -9.99023723602295
    8. ' MOD' → logprob: -10.24023723602295
    9. 'Modulo' → logprob: -10.24023723602295
    10. ' modu' → logprob: -10.36523723602295

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043233807082287967
    2. ')' → logprob: -7.87543249130249
    3. ' ):' → logprob: -10.500432014465332
    4. ':' → logprob: -11.750432014465332
    5. '):
' → logprob: -11.750432014465332
    6. '=' → logprob: -12.750432014465332
    7. ',' → logprob: -13.375432014465332
    8. '_' → logprob: -14.000432014465332
    9. ' ' → logprob: -14.125432014465332
    10. ')):' → logprob: -14.500432014465332

Token 63: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009415100328624249
    2. '   ' → logprob: -5.259415149688721
    3. '():' → logprob: -6.134415149688721
    4. ' :' → logprob: -6.759415149688721
    5. '(n' → logprob: -8.509414672851562
    6. ':
' → logprob: -8.634414672851562
    7. '):' → logprob: -8.634414672851562
    8. '(' → logprob: -9.384414672851562
    9. '=' → logprob: -10.884414672851562
    10. ',' → logprob: -10.884414672851562

Token 64: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.20167800784111023
    2. '   ' → logprob: -2.4516780376434326
    3. ' fact' → logprob: -2.8266780376434326
    4. 'factor' → logprob: -3.7016780376434326
    5. ' factor' → logprob: -4.9516777992248535
    6. 'fact' → logprob: -6.5766777992248535
    7. '    
' → logprob: -6.8266777992248535
    8. '    ' → logprob: -6.9516777992248535
    9. ' result' → logprob: -8.076678276062012
    10. '```' → logprob: -8.326678276062012

Token 65: '_sequence' (ID: 55606)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002303816145285964
    2. '_s' → logprob: -6.127303600311279
    3. '=' → logprob: -9.752304077148438
    4. ' =' → logprob: -10.127304077148438
    5. '=s' → logprob: -11.877304077148438
    6. '[s' → logprob: -12.752304077148438
    7. '   ' → logprob: -12.877304077148438
    8. '_' → logprob: -13.002304077148438
    9. ' s' → logprob: -13.377304077148438
    10. '	s' → logprob: -13.502304077148438

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0033645043149590492
    2. '=' → logprob: -5.753364562988281
    3. ' ' → logprob: -9.253364562988281
    4. 's' → logprob: -9.878364562988281
    5. '  ' → logprob: -11.003364562988281
    6. '   ' → logprob: -11.378364562988281
    7. '[' → logprob: -12.378364562988281
    8. ' =[' → logprob: -12.753364562988281
    9. '=[]' → logprob: -13.378364562988281
    10. '_' → logprob: -13.753364562988281

Token 67: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2254246026277542
    2. '[' → logprob: -1.6004246473312378
    3. ' ' → logprob: -12.100424766540527
    4. '[int' → logprob: -13.600424766540527
    5. '   ' → logprob: -13.975424766540527
    6. '[n' → logprob: -14.225424766540527
    7. ' ' → logprob: -14.975424766540527
    8. '1' → logprob: -15.225424766540527
    9. '[start' → logprob: -15.225424766540527
    10. '[len' → logprob: -15.225424766540527

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.2500057220459
    4. ']' → logprob: -17.0000057220459
    5. ')' → logprob: -18.8750057220459
    6. '  ' → logprob: -19.5000057220459
    7. '```' → logprob: -19.5000057220459
    8. '0' → logprob: -19.7500057220459
    9. '۱' → logprob: -20.8750057220459
    10. '`' → logprob: -21.0000057220459

Token 69: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015419373812619597
    2. ' ]' → logprob: -9.500154495239258
    3. ',' → logprob: -10.000154495239258
    4. ']
' → logprob: -10.625154495239258
    5. ']

' → logprob: -12.625154495239258
    6. ']*' → logprob: -12.875154495239258
    7. ')' → logprob: -14.000154495239258
    8. ']*(' → logprob: -14.625154495239258
    9. ']<<' → logprob: -14.875154495239258
    10. ']
' → logprob: -14.875154495239258

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016108740121126175
    2. ' for' → logprob: -5.016108512878418
    3. 'for' → logprob: -5.266108512878418
    4. '
' → logprob: -6.266108512878418
    5. '    
' → logprob: -6.391108512878418
    6. '	for' → logprob: -8.391108512878418
    7. ' ' → logprob: -9.016108512878418
    8. ',' → logprob: -10.391108512878418
    9. '   
' → logprob: -10.391108512878418
    10. '\t' → logprob: -10.391108512878418

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9401376843452454
    2. '   ' → logprob: -1.1901376247406006
    3. 'for' (adapté à ' for') → logprob: -1.1901376247406006
    4. '    
' → logprob: -7.94013786315918
    5. ' ' → logprob: -8.56513786315918
    6. '    ' → logprob: -8.81513786315918
    7. '_' → logprob: -9.31513786315918
    8. ' current' → logprob: -10.19013786315918
    9. 'factor' → logprob: -10.19013786315918
    10. 'current' → logprob: -10.31513786315918

Token 72: ' integer' (ID: 16336)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011573875322937965
    2. ' _' → logprob: -5.011573791503906
    3. ' ' → logprob: -5.761573791503906
    4. '_' → logprob: -6.636573791503906
    5. 'i' → logprob: -7.886573791503906
    6. '_i' → logprob: -12.386573791503906
    7. ' ' → logprob: -12.886573791503906
    8. ' value' → logprob: -13.136573791503906
    9. '	i' → logprob: -13.511573791503906
    10. ' x' → logprob: -14.261573791503906

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04411272332072258
    2. 'in' → logprob: -3.1691126823425293
    3. ' ' → logprob: -6.919112682342529
    4. '_' → logprob: -10.419113159179688
    5. ' i' → logprob: -10.919113159179688
    6. 'i' → logprob: -11.169113159179688
    7. '_in' → logprob: -11.419113159179688
    8. ',' → logprob: -11.544113159179688
    9. '  ' → logprob: -11.919113159179688
    10. '```' → logprob: -12.044113159179688

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0011928485473617911
    2. 'range' → logprob: -6.751193046569824
    3. ' ' → logprob: -10.876193046569824
    4. '	range' → logprob: -12.626193046569824
    5. '(range' → logprob: -15.626193046569824
    6. ' xrange' → logprob: -15.876193046569824
    7. '  ' → logprob: -16.001192092895508
    8. '_range' → logprob: -17.751192092895508
    9. ' ' → logprob: -18.001192092895508
    10. '   ' → logprob: -18.876192092895508

Token 75: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.000001907348633
    4. '(
' → logprob: -15.750001907348633
    5. ' ' → logprob: -18.500001907348633
    6. '<|end|>' → logprob: -18.750001907348633
    7. '(

' → logprob: -19.500001907348633
    8. '[' → logprob: -20.875001907348633
    9. '2' → logprob: -21.500001907348633
    10. ')' → logprob: -21.750001907348633

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013369438238441944
    2. ' ' → logprob: -9.000133514404297
    3. '2' → logprob: -11.875133514404297
    4. '   ' → logprob: -12.625133514404297
    5. '  ' → logprob: -17.625133514404297
    6. '    ' → logprob: -17.625133514404297
    7. '(' → logprob: -17.625133514404297
    8. '0' → logprob: -18.375133514404297
    9. '```' → logprob: -18.500133514404297
    10. 'max' → logprob: -18.750133514404297

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016086915275081992
    2. ' ,' → logprob: -8.750161170959473
    3. ',max' → logprob: -13.000161170959473
    4. ',
' → logprob: -17.000160217285156
    5. ',len' → logprob: -17.750160217285156
    6. ',n' → logprob: -18.375160217285156
    7. ',int' → logprob: -18.500160217285156
    8. 'max' → logprob: -18.500160217285156
    9. '   ' → logprob: -18.625160217285156
    10. '，' → logprob: -19.250160217285156

Token 78: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0125176552683115
    2. 'max' → logprob: -4.38751745223999
    3. ' ' → logprob: -12.387517929077148
    4. ' ' → logprob: -12.887517929077148
    5. '(max' → logprob: -14.512517929077148
    6. '	max' → logprob: -14.762517929077148
    7. '_max' → logprob: -15.387517929077148
    8. ',max' → logprob: -16.63751792907715
    9. ' n' → logprob: -17.01251792907715
    10. '[max' → logprob: -17.26251792907715

Token 79: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.12500286102295
    3. '_val' → logprob: -16.000001907348633
    4. 'value' → logprob: -16.250001907348633
    5. 'alue' → logprob: -16.875001907348633
    6. '+' → logprob: -17.000001907348633
    7. '_VALUE' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '_values' → logprob: -17.625001907348633
    10. '_Value' → logprob: -17.875001907348633

Token 80: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132804334163666
    2. '+' → logprob: -1.313280463218689
    3. ' ' → logprob: -11.56328010559082
    4. '):
' → logprob: -12.56328010559082
    5. '):' → logprob: -13.18828010559082
    6. '   ' → logprob: -13.81328010559082
    7. ' +
' → logprob: -14.31328010559082
    8. '    ' → logprob: -14.31328010559082
    9. ',' → logprob: -14.68828010559082
    10. ')' → logprob: -15.43828010559082

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ')' → logprob: -16.16022491455078
    4. '```' → logprob: -17.16022491455078
    5. ' ' → logprob: -17.28522491455078
    6. '  ' → logprob: -18.16022491455078
    7. '<|end|>' → logprob: -18.53522491455078
    8. '   ' → logprob: -18.53522491455078
    9. '+' → logprob: -20.16022491455078
    10. '۱' → logprob: -20.16022491455078

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -18.000024795532227
    4. ')' → logprob: -18.250024795532227
    5. '   ' → logprob: -18.875024795532227
    6. '１' → logprob: -20.000024795532227
    7. '  ' → logprob: -20.125024795532227
    8. '۱' → logprob: -20.250024795532227
    9. '0' → logprob: -20.500024795532227
    10. '``' → logprob: -21.687524795532227

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0049362932331860065
    2. ':' → logprob: -5.879936218261719
    3. '):
' → logprob: -6.629936218261719
    4. ' ):' → logprob: -7.504936218261719
    5. ')' → logprob: -8.754936218261719
    6. ',' → logprob: -9.379936218261719
    7. '   ' → logprob: -12.254936218261719
    8. '):
' → logprob: -12.379936218261719
    9. ' ):
' → logprob: -12.879936218261719
    10. ' )' → logprob: -13.629936218261719

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30985167622566223
    2. ' factorial' → logprob: -1.5598516464233398
    3. 'factor' → logprob: -4.30985164642334
    4. '   ' → logprob: -4.30985164642334
    5. ' ' → logprob: -4.80985164642334
    6. '    ' → logprob: -5.18485164642334
    7. ':' → logprob: -5.43485164642334
    8. ' factor' → logprob: -6.30985164642334
    9. ')' → logprob: -6.43485164642334
    10. '):' → logprob: -6.55985164642334

Token 85: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.010079629719257355
    2. 'factor' → logprob: -5.760079860687256
    3. '    ' → logprob: -5.885079860687256
    4. '   ' → logprob: -6.260079860687256
    5. '       ' → logprob: -6.385079860687256
    6. ' factor' → logprob: -8.510079383850098
    7. '        ' → logprob: -9.510079383850098
    8. ' ' → logprob: -9.760079383850098
    9. ' fact' → logprob: -10.385079383850098
    10. ' ' → logprob: -10.885079383850098

Token 86: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -9.29340603761375e-05
    2. '_' → logprob: -9.625092506408691
    3. 's' → logprob: -11.125092506408691
    4. '_sequences' → logprob: -11.750092506408691
    5. ' =' → logprob: -13.750092506408691
    6. '=' → logprob: -13.750092506408691
    7. 'Sequence' → logprob: -14.250092506408691
    8. 'sequence' → logprob: -15.000092506408691
    9. '_SEQUENCE' → logprob: -15.000092506408691
    10. ' _' → logprob: -15.875092506408691

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.016055602580308914
    2. '.' → logprob: -4.141055583953857
    3. '.extend' → logprob: -11.641056060791016
    4. ' .' → logprob: -11.891056060791016
    5. '.app' → logprob: -12.641056060791016
    6. '[-' → logprob: -13.766056060791016
    7. '.Append' → logprob: -14.516056060791016
    8. 'append' → logprob: -15.266056060791016
    9. '[' → logprob: -15.891056060791016
    10. '.ap' → logprob: -15.891056060791016

Token 88: '(f' (ID: 1526)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.26296740770339966
    2. '(f' → logprob: -1.5129673480987549
    3. '(' → logprob: -4.512967586517334
    4. 'factor' → logprob: -12.262967109680176
    5. ' (' → logprob: -12.637967109680176
    6. '(
' → logprob: -13.262967109680176
    7. ' factorial' → logprob: -14.762967109680176
    8. ' ((' → logprob: -14.887967109680176
    9. '(((' → logprob: -15.012967109680176
    10. '   ' → logprob: -15.137967109680176

Token 89: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.0001495484757469967
    2. 'act' → logprob: -9.125149726867676
    3. '*' → logprob: -10.500149726867676
    4. 'factor' → logprob: -12.500149726867676
    5. 'a' → logprob: -13.500149726867676
    6. '```' → logprob: -13.500149726867676
    7. 'ac' → logprob: -13.750149726867676
    8. ' factorial' → logprob: -13.750149726867676
    9. '   ' → logprob: -13.875149726867676
    10. ' actor' → logprob: -14.125149726867676

Token 90: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.050324175506830215
    2. '_sequence' → logprob: -3.0503242015838623
    3. 'ial' → logprob: -7.550323963165283
    4. '_' → logprob: -8.425324440002441
    5. '*' → logprob: -8.550324440002441
    6. '   ' → logprob: -9.300324440002441
    7. 'sequence' → logprob: -9.425324440002441
    8. '_factor' → logprob: -9.675324440002441
    9. 'er' → logprob: -9.800324440002441
    10. 'ent' → logprob: -9.925324440002441

Token 91: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -4.978233846486546e-05
    2. '_' → logprob: -10.000049591064453
    3. 's' → logprob: -13.375049591064453
    4. '_sequences' → logprob: -14.125049591064453
    5. 'sequence' → logprob: -14.750049591064453
    6. '[' → logprob: -14.750049591064453
    7. '   ' → logprob: -15.125049591064453
    8. 'Sequence' → logprob: -15.875049591064453
    9. ' ' → logprob: -16.125049591064453
    10. '*' → logprob: -16.250049591064453

Token 92: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.038053546100854874
    2. '[' → logprob: -3.288053512573242
    3. '[
' → logprob: -12.413053512573242
    4. '[int' → logprob: -13.038053512573242
    5. ' [-' → logprob: -13.038053512573242
    6. '[in' → logprob: -13.663053512573242
    7. ' [' → logprob: -13.913053512573242
    8. '	' → logprob: -14.538053512573242
    9. '[i' → logprob: -14.913053512573242
    10. '[index' → logprob: -16.288053512573242

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.875011444091797
    4. 'i' → logprob: -15.500011444091797
    5. '  ' → logprob: -15.750011444091797
    6. ']' → logprob: -15.750011444091797
    7. ')' → logprob: -16.250011444091797
    8. '    ' → logprob: -16.750011444091797
    9. '```' → logprob: -16.750011444091797
    10. 'value' → logprob: -17.000011444091797

Token 94: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05501023679971695
    2. ' *' → logprob: -2.9300103187561035
    3. ')' → logprob: -9.680009841918945
    4. ' ' → logprob: -10.430009841918945
    5. ' ' → logprob: -10.805009841918945
    6. '**' → logprob: -11.805009841918945
    7. '*object' → logprob: -12.805009841918945
    8. '*)' → logprob: -13.555009841918945
    9. ')*' → logprob: -13.930009841918945
    10. '`' → logprob: -14.555009841918945

Token 95: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.038078442215919495
    2. ' *' → logprob: -3.288078546524048
    3. ' ' → logprob: -11.163078308105469
    4. ' ' → logprob: -11.663078308105469
    5. ')' → logprob: -12.163078308105469
    6. '**' → logprob: -12.663078308105469
    7. '*object' → logprob: -12.663078308105469
    8. ')*' → logprob: -14.538078308105469
    9. '*)' → logprob: -14.663078308105469
    10. '	' → logprob: -14.913078308105469

Token 96: ' integer' (ID: 16336)
  Prédit: 'integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'integer' → logprob: -0.5759545564651489
    2. ' integer' → logprob: -0.8259545564651489
    3. '(integer' → logprob: -11.20095443725586
    4. 'int' → logprob: -14.70095443725586
    5. '_integer' → logprob: -14.82595443725586
    6. ' ' → logprob: -15.45095443725586
    7. 'inte' → logprob: -15.57595443725586
    8. ' integers' → logprob: -15.95095443725586
    9. '.integer' → logprob: -16.70095443725586
    10. '<|end|>' → logprob: -16.82595443725586

Token 97: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12693703174591064
    2. '%' → logprob: -2.126936912536621
    3. ')' → logprob: -13.001936912536621
    4. ' ' → logprob: -13.376936912536621
    5. ')%' → logprob: -13.626936912536621
    6. '%c' → logprob: -14.001936912536621
    7. ' %
' → logprob: -14.001936912536621
    8. '%i' → logprob: -14.501936912536621
    9. ' ' → logprob: -14.626936912536621
    10. '%n' → logprob: -15.001936912536621

Token 98: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.5773155689239502
    2. 'mod' → logprob: -0.8273155689239502
    3. ' mod' → logprob: -8.077315330505371
    4. '(mod' → logprob: -8.327315330505371
    5. ' ' → logprob: -8.452315330505371
    6. ' modu' → logprob: -8.702315330505371
    7. 'space' → logprob: -8.952315330505371
    8. '	mod' → logprob: -9.202315330505371
    9. ')' → logprob: -10.452315330505371
    10. ''' → logprob: -10.702315330505371

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ')
' → logprob: -11.875014305114746
    3. ' )' → logprob: -11.875014305114746
    4. '   ' → logprob: -16.50001335144043
    5. ')`' → logprob: -16.75001335144043
    6. ')return' → logprob: -17.00001335144043
    7. '))' → logprob: -17.12501335144043
    8. ' ' → logprob: -17.12501335144043
    9. '),' → logprob: -18.37501335144043
    10. ')

' → logprob: -18.37501335144043

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050595514476299286
    2. '
' → logprob: -3.92559552192688
    3. ' return' → logprob: -3.92559552192688
    4. '    
' → logprob: -5.550595283508301
    5. 'return' → logprob: -5.925595283508301
    6. ' 
' → logprob: -6.675595283508301
    7. ' ' → logprob: -7.800595283508301
    8. '  
' → logprob: -8.0505952835083
    9. '	return' → logprob: -8.1755952835083
    10. ':return' → logprob: -8.3005952835083

Token 101: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16964177787303925
    2. ' return' → logprob: -2.2946417331695557
    3. 'return' (adapté à ' return') → logprob: -3.2946417331695557
    4. '
' → logprob: -5.044641971588135
    5. ' ' → logprob: -5.294641971588135
    6. '	return' → logprob: -5.794641971588135
    7. '<|end|>' → logprob: -6.669641971588135
    8. '    
' → logprob: -7.419641971588135
    9. ':return' → logprob: -7.544641971588135
    10. ' 
' → logprob: -7.794641971588135

Token 102: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.001171652227640152
    2. 'factor' → logprob: -6.751171588897705
    3. ' factor' → logprob: -13.626172065734863
    4. ' ' → logprob: -16.251171112060547
    5. '_factor' → logprob: -16.751171112060547
    6. 'fact' → logprob: -17.251171112060547
    7. ' facto' → logprob: -18.126171112060547
    8. ' fact' → logprob: -18.251171112060547
    9. '.factor' → logprob: -18.626171112060547
    10. ' ' → logprob: -18.876171112060547

Token 103: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.4855663721391466e-05
    2. '_' → logprob: -11.625015258789062
    3. 'sequence' → logprob: -12.625015258789062
    4. 's' → logprob: -14.000015258789062
    5. '_sequences' → logprob: -14.250015258789062
    6. '_seq' → logprob: -14.375015258789062
    7. '_s' → logprob: -15.000015258789062
    8. '_factor' → logprob: -16.125015258789062
    9. ' sequence' → logprob: -16.250015258789062
    10. ' _' → logprob: -17.500015258789062

Token 104: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: 'pre' (ID: 2235)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5588598847389221
    2. 'def' → logprob: -1.1838598251342773
    3. '<|end|>' → logprob: -2.3088598251342773
    4. '#' → logprob: -4.558859825134277
    5. '```' → logprob: -5.308859825134277
    6. '

' → logprob: -5.933859825134277
    7. '' → logprob: -6.933859825134277
    8. '<|end|>' → logprob: -7.058859825134277
    9. '\' → logprob: -7.683859825134277
    10. '\n' → logprob: -7.933859825134277

Token 106: 'computed' (ID: 157929)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.052327271550893784
    2. 'f' → logprob: -3.3023271560668945
    3. 'd' → logprob: -4.8023271560668945
    4. 'v' → logprob: -6.8023271560668945
    5. 'fi' → logprob: -7.1773271560668945
    6. 'serve' → logprob: -7.6773271560668945
    7. 's' → logprob: -7.8023271560668945
    8. 'vious' → logprob: -7.9273271560668945
    9. 'compute' → logprob: -7.9273271560668945
    10. 'sent' → logprob: -8.052327156066895

Token 107: '_in' (ID: 2267)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.07938596606254578
    2. '_' → logprob: -2.579385995864868
    3. '_fact' → logprob: -8.454385757446289
    4. '_f' → logprob: -8.454385757446289
    5. '_fac' → logprob: -11.329385757446289
    6. '_s' → logprob: -11.579385757446289
    7. '_factory' → logprob: -11.704385757446289
    8. '_values' → logprob: -12.204385757446289
    9. '```' → logprob: -12.954385757446289
    10. '_suffix' → logprob: -13.454385757446289

Token 108: 'vers' (ID: 3674)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.18236833810806274
    2. 'verse' → logprob: -3.182368278503418
    3. 'put' → logprob: -3.307368278503418
    4. 't' → logprob: -3.307368278503418
    5. 'teger' → logprob: -4.182368278503418
    6. 'te' → logprob: -4.557368278503418
    7. 'd' → logprob: -4.807368278503418
    8. 'puts' → logprob: -4.807368278503418
    9. 'vers' → logprob: -6.557368278503418
    10. '_factor' → logprob: -6.807368278503418

Token 109: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.029761716723442078
    2. 'es' → logprob: -3.529761791229248
    3. 'se' → logprob: -12.65476131439209
    4. 'ions' → logprob: -13.27976131439209
    5. 'ed' → logprob: -13.40476131439209
    6. '```' → logprob: -13.65476131439209
    7. 'te' → logprob: -13.77976131439209
    8. 'ion' → logprob: -13.77976131439209
    9. 'o' → logprob: -14.90476131439209
    10. '=' → logprob: -15.52976131439209

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10220058262348175
    2. '_' → logprob: -2.352200508117676
    3. '=' → logprob: -6.852200508117676
    4. ' ' → logprob: -7.602200508117676
    5. '  ' → logprob: -9.102200508117676
    6. 's' → logprob: -9.352200508117676
    7. ' _' → logprob: -9.352200508117676
    8. '_factor' → logprob: -10.352200508117676
    9. '<|end|>' → logprob: -10.602200508117676
    10. '_=' → logprob: -11.102200508117676

Token 111: ' {}

' (ID: 21724)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0477365255355835
    2. '{}' → logprob: -1.2977365255355835
    3. '[' → logprob: -1.9227365255355835
    4. ' []' → logprob: -2.297736644744873
    5. ' [' → logprob: -2.797736644744873
    6. ' {}' → logprob: -3.297736644744873
    7. 'None' → logprob: -3.922736644744873
    8. ' None' → logprob: -4.922736644744873
    9. '{' → logprob: -5.797736644744873
    10. 'dict' → logprob: -7.797736644744873

Token 112: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -15.000000953674316
    3. ' def' → logprob: -15.125000953674316
    4. ')' → logprob: -15.750000953674316
    5. 'de' → logprob: -16.000001907348633
    6. '(' → logprob: -17.875001907348633
    7. 'd' → logprob: -17.875001907348633
    8. '<|end|>' → logprob: -18.000001907348633
    9. '_def' → logprob: -18.000001907348633
    10. '_' → logprob: -18.125001907348633

Token 113: ' modular' (ID: 61198)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.7078732848167419
    2. ' mod' → logprob: -1.5828733444213867
    3. ' modular' → logprob: -1.7078733444213867
    4. ' pre' → logprob: -2.4578733444213867
    5. ' get' → logprob: -3.9578733444213867
    6. ' calculate' → logprob: -5.457873344421387
    7. ' def' → logprob: -5.457873344421387
    8. ' inverse' → logprob: -5.582873344421387
    9. ' factorial' → logprob: -6.082873344421387
    10. ' fast' → logprob: -7.957873344421387

Token 114: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.10391180217266083
    2. '_factor' → logprob: -2.353911876678467
    3. '_pow' → logprob: -6.478911876678467
    4. '_inv' → logprob: -7.228911876678467
    5. '_ex' → logprob: -7.728911876678467
    6. '_' → logprob: -7.853911876678467
    7. '_m' → logprob: -8.603911399841309
    8. '_exp' → logprob: -8.978911399841309
    9. '_reverse' → logprob: -9.603911399841309
    10. '_mod' → logprob: -9.853911399841309

Token 115: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2786065340042114
    2. '(n' → logprob: -1.5286065340042114
    3. ' (' → logprob: -4.903606414794922
    4. '(number' → logprob: -4.903606414794922
    5. '(x' → logprob: -5.653606414794922
    6. '(a' → logprob: -5.653606414794922
    7. '(num' → logprob: -5.653606414794922
    8. '(value' → logprob: -7.278606414794922
    9. '(token' → logprob: -9.528606414794922
    10. '(k' → logprob: -10.153606414794922

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001422770437784493
    2. ' ,' → logprob: -8.875142097473145
    3. '):' → logprob: -13.500142097473145
    4. ',n' → logprob: -15.625142097473145
    5. ',int' → logprob: -15.750142097473145
    6. ':' → logprob: -16.00014305114746
    7. ')' → logprob: -16.12514305114746
    8. '‌,' → logprob: -16.50014305114746
    9. ' ):' → logprob: -17.12514305114746
    10. ' ' → logprob: -17.25014305114746

Token 117: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.06315812468528748
    2. 'mod' → logprob: -2.8131580352783203
    3. ' modulus' → logprob: -6.93815803527832
    4. ' mod' → logprob: -8.93815803527832
    5. '	mod' → logprob: -10.56315803527832
    6. ' ' → logprob: -11.06315803527832
    7. 'Modulo' → logprob: -11.43815803527832
    8. 'm' → logprob: -11.56315803527832
    9. '```' → logprob: -11.56315803527832
    10. ' m' → logprob: -12.56315803527832

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000104616025055293
    2. ')' → logprob: -9.375104904174805
    3. ' ):' → logprob: -11.000104904174805
    4. '):
' → logprob: -13.250104904174805
    5. ':' → logprob: -14.375104904174805
    6. ',' → logprob: -14.625104904174805
    7. '):
' → logprob: -17.000104904174805
    8. '=' → logprob: -17.125104904174805
    9. '}:' → logprob: -17.250104904174805
    10. ')：' → logprob: -17.750104904174805

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03819801285862923
    2. ':' → logprob: -3.2881979942321777
    3. ')' → logprob: -10.163198471069336
    4. '):' → logprob: -10.413198471069336
    5. ':
' → logprob: -10.788198471069336
    6. '<|end|>' → logprob: -11.038198471069336
    7. ' ' → logprob: -11.538198471069336
    8. '  ' → logprob: -11.663198471069336
    9. ',' → logprob: -12.163198471069336
    10. '    ' → logprob: -12.163198471069336

Token 120: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37173864245414734
    2. '   ' → logprob: -1.2467386722564697
    3. '    ' → logprob: -4.746738433837891
    4. 'if' (adapté à ' if') → logprob: -4.996738433837891
    5. ' return' → logprob: -5.246738433837891
    6. ' ' → logprob: -7.371738433837891
    7. ' 
' → logprob: -7.496738433837891
    8. ' n' → logprob: -8.37173843383789
    9. '    
' → logprob: -8.49673843383789
    10. 'n' → logprob: -8.87173843383789

Token 121: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0013797598658129573
    2. 'value' → logprob: -6.62637996673584
    3. ' not' → logprob: -10.62637996673584
    4. '	value' → logprob: -11.00137996673584
    5. ' ' → logprob: -11.37637996673584
    6. '(value' → logprob: -15.25137996673584
    7. 'alue' → logprob: -15.62637996673584
    8. 'not' → logprob: -15.75137996673584
    9. '_value' → logprob: -15.87637996673584
    10. ')value' → logprob: -16.001379013061523

Token 122: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3039693534374237
    2. ' ==' → logprob: -1.928969383239746
    3. ' in' → logprob: -2.303969383239746
    4. '==' → logprob: -5.053969383239746
    5. 'not' → logprob: -5.428969383239746
    6. ' ' → logprob: -5.553969383239746
    7. ' %' → logprob: -6.553969383239746
    8. '%' → logprob: -8.428969383239746
    9. 'in' → logprob: -8.678969383239746
    10. ')' → logprob: -8.678969383239746

Token 123: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.3132636249065399
    2. ' pre' → logprob: -1.3132636547088623
    3. '	pre' → logprob: -13.313263893127441
    4. 'preh' → logprob: -16.563262939453125
    5. '   ' → logprob: -16.938262939453125
    6. 'pr' → logprob: -18.063262939453125
    7. 'pread' → logprob: -18.188262939453125
    8. '(pre' → logprob: -18.188262939453125
    9. '_pre' → logprob: -18.438262939453125
    10. ' pretrained' → logprob: -18.688262939453125

Token 124: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.00015157493180595338
    2. 'com' → logprob: -10.000151634216309
    3. 'c' → logprob: -10.250151634216309
    4. 'puted' → logprob: -10.500151634216309
    5. '_com' → logprob: -11.375151634216309
    6. 'compiled' → logprob: -11.625151634216309
    7. 'comput' → logprob: -12.000151634216309
    8. 'comp' → logprob: -12.375151634216309
    9. 'computer' → logprob: -12.500151634216309
    10. 'culated' → logprob: -13.250151634216309

Token 125: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.1008713702030946e-06
    2. 'in' → logprob: -13.750001907348633
    3. 's' → logprob: -14.125001907348633
    4. '_' → logprob: -15.250001907348633
    5. '_inverse' → logprob: -16.875001907348633
    6. 'In' → logprob: -17.875001907348633
    7. 'es' → logprob: -19.125001907348633
    8. '_In' → logprob: -20.125001907348633
    9. '_inches' → logprob: -20.250001907348633
    10. '_IN' → logprob: -20.375001907348633

Token 126: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -2.2246291337069124e-05
    2. 'ves' → logprob: -11.875021934509277
    3. 'ver' → logprob: -12.500021934509277
    4. 'verse' → logprob: -12.625021934509277
    5. 'v' → logprob: -13.500021934509277
    6. '```' → logprob: -13.500021934509277
    7. '   ' → logprob: -14.000021934509277
    8. 'rs' → logprob: -14.000021934509277
    9. 'versed' → logprob: -14.250021934509277
    10. 'ers' → logprob: -14.500021934509277

Token 127: 'es' (ID: 268)
  Prédit: 'ses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ses' → logprob: -0.00042804674012586474
    2. 's' → logprob: -9.125428199768066
    3. 'es' → logprob: -9.125428199768066
    4. 'ves' → logprob: -9.250428199768066
    5. 'se' → logprob: -10.000428199768066
    6. 'vers' → logprob: -10.125428199768066
    7. 'rs' → logprob: -11.125428199768066
    8. 'eses' → logprob: -12.500428199768066
    9. 'sed' → logprob: -12.875428199768066
    10. 'res' → logprob: -13.375428199768066

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006715670460835099
    2. ':
' → logprob: -7.75067138671875
    3. ':return' → logprob: -8.75067138671875
    4. ' :' → logprob: -10.25067138671875
    5. '):' → logprob: -10.62567138671875
    6. ' and' → logprob: -11.37567138671875
    7. '   ' → logprob: -12.00067138671875
    8. '}:' → logprob: -13.50067138671875
    9. '>:' → logprob: -13.75067138671875
    10. '():' → logprob: -14.25067138671875

Token 129: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13139520585536957
    2. '       ' → logprob: -2.131395101547241
    3. ':return' → logprob: -6.00639533996582
    4. ':
' → logprob: -6.88139533996582
    5. '):' → logprob: -8.38139533996582
    6. '   ' → logprob: -8.38139533996582
    7. ' and' → logprob: -8.88139533996582
    8. ' return' → logprob: -9.38139533996582
    9. ' :' → logprob: -10.13139533996582
    10. '=' → logprob: -10.13139533996582

Token 130: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07886356115341187
    2. '       ' → logprob: -3.3288636207580566
    3. ':return' → logprob: -3.9538636207580566
    4. '   ' → logprob: -4.828863620758057
    5. 'return' (adapté à ' return') → logprob: -5.578863620758057
    6. ':' → logprob: -5.703863620758057
    7. '    ' → logprob: -6.453863620758057
    8. ' 
' → logprob: -6.953863620758057
    9. '<|end|>' → logprob: -6.953863620758057
    10. ' ' → logprob: -7.078863620758057

Token 131: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.0004311460361350328
    2. 'pre' → logprob: -7.750431060791016
    3. ' ' → logprob: -15.625431060791016
    4. ' prec' → logprob: -15.875431060791016
    5. '	pre' → logprob: -15.875431060791016
    6. '(pre' → logprob: -16.750431060791016
    7. ' ' → logprob: -17.625431060791016
    8. ' pr' → logprob: -19.250431060791016
    9. ' pretrained' → logprob: -19.625431060791016
    10. ' preprocessing' → logprob: -20.250431060791016

Token 132: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -1.3782830137643032e-05
    2. 'c' → logprob: -12.75001335144043
    3. 'puted' → logprob: -13.12501335144043
    4. 'com' → logprob: -13.12501335144043
    5. 'compiled' → logprob: -13.37501335144043
    6. 'computer' → logprob: -13.50001335144043
    7. 'comput' → logprob: -13.62501335144043
    8. 'comp' → logprob: -14.37501335144043
    9. 'compressed' → logprob: -14.62501335144043
    10. 'constructed' → logprob: -15.00001335144043

Token 133: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.00010235115041723475
    2. 'in' → logprob: -9.250102043151855
    3. '-in' → logprob: -13.125102043151855
    4. '_' → logprob: -14.250102043151855
    5. 'In' → logprob: -14.250102043151855
    6. 's' → logprob: -14.375102043151855
    7. '_inverse' → logprob: -14.375102043151855
    8. 'es' → logprob: -14.750102043151855
    9. 'n' → logprob: -15.250102043151855
    10. '_inv' → logprob: -15.625102043151855

Token 134: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -8.697387966094539e-05
    2. 'ves' → logprob: -10.750086784362793
    3. 'ver' → logprob: -11.000086784362793
    4. 'ers' → logprob: -11.125086784362793
    5. 'rs' → logprob: -11.750086784362793
    6. 'verse' → logprob: -12.125086784362793
    7. 'r' → logprob: -12.500086784362793
    8. '[' → logprob: -12.625086784362793
    9. '```' → logprob: -12.875086784362793
    10. 's' → logprob: -13.000086784362793

Token 135: 'es' (ID: 268)
  Prédit: 'ses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ses' → logprob: -0.02727345936000347
    2. 'es' → logprob: -3.902273416519165
    3. 'ves' → logprob: -5.652273654937744
    4. 'res' → logprob: -6.652273654937744
    5. 'vers' → logprob: -7.152273654937744
    6. 'se' → logprob: -7.152273654937744
    7. 'zes' → logprob: -10.027273178100586
    8. 'ces' → logprob: -10.277273178100586
    9. 'ers' → logprob: -10.277273178100586
    10. 't' → logprob: -10.402273178100586

Token 136: '[value' (ID: 96564)
  Prédit: '[value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -4.167648876318708e-05
    2. '[' → logprob: -10.500041961669922
    3. '[val' → logprob: -11.250041961669922
    4. '][' → logprob: -15.125041961669922
    5. '(value' → logprob: -15.375041961669922
    6. ']' → logprob: -15.500041961669922
    7. '[v' → logprob: -15.750041961669922
    8. 'value' → logprob: -16.875041961669922
    9. '[data' → logprob: -17.125041961669922
    10. '[key' → logprob: -17.125041961669922

Token 137: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010547225829213858
    2. ']
' → logprob: -6.876054763793945
    3. ']

' → logprob: -11.501054763793945
    4. ' ]' → logprob: -11.626054763793945
    5. ']
' → logprob: -13.501054763793945
    6. '   ' → logprob: -14.251054763793945
    7. '],' → logprob: -14.876054763793945
    8. ']*' → logprob: -16.126054763793945
    9. ' ]
' → logprob: -16.626054763793945
    10. ' ' → logprob: -16.751054763793945

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021025970578193665
    2. '    
' → logprob: -3.8960258960723877
    3. '
' → logprob: -7.771026134490967
    4. '   
' → logprob: -10.896025657653809
    5. '  
' → logprob: -11.771025657653809
    6. '        
' → logprob: -11.771025657653809
    7. '    
    
' → logprob: -12.521025657653809
    8. '    
' → logprob: -12.646025657653809
    9. '(' → logprob: -12.896025657653809
    10. ')' → logprob: -13.021025657653809

Token 139: ' inverse' (ID: 53743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09616181999444962
    2. '    
' → logprob: -2.4711618423461914
    3. '
' → logprob: -6.596161842346191
    4. ' result' → logprob: -6.721161842346191
    5. ' else' → logprob: -7.096161842346191
    6. ' if' → logprob: -7.471161842346191
    7. 'inverse' (adapté à ' inverse') → logprob: -7.471161842346191
    8. ' inverse' → logprob: -7.721161842346191
    9. 'result' → logprob: -8.096161842346191
    10. '   
' → logprob: -8.346161842346191

Token 140: '_result' (ID: 11623)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010935462778434157
    2. '=' → logprob: -7.00109338760376
    3. ' ' → logprob: -9.126093864440918
    4. 's' → logprob: -10.626093864440918
    5. '_' → logprob: -10.751093864440918
    6. '  ' → logprob: -12.001093864440918
    7. '_value' → logprob: -12.251093864440918
    8. ',' → logprob: -12.876093864440918
    9. ' =
' → logprob: -13.001093864440918
    10. '    ' → logprob: -13.251093864440918

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008616935461759567
    2. '=' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.758617401123047
    4. 's' → logprob: -14.508617401123047
    5. ')' → logprob: -15.133617401123047
    6. ' =
' → logprob: -15.258617401123047
    7. ' ' → logprob: -16.508617401123047
    8. ',' → logprob: -16.633617401123047
    9. ' =(' → logprob: -17.133617401123047
    10. '    ' → logprob: -17.258617401123047

Token 142: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.014177266508340836
    2. ' pow' → logprob: -4.264177322387695
    3. '(pow' → logprob: -11.264177322387695
    4. '0' → logprob: -14.889177322387695
    5. '   ' → logprob: -15.389177322387695
    6. 'mod' → logprob: -15.889177322387695
    7. '_pow' → logprob: -15.889177322387695
    8. '1' → logprob: -17.139177322387695
    9. 'power' → logprob: -17.764177322387695
    10. ' ' → logprob: -17.889177322387695

Token 143: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.16024118661880493
    2. '(' → logprob: -1.9102411270141602
    3. '(
' → logprob: -11.41024112701416
    4. '<|end|>' → logprob: -13.28524112701416
    5. '(user' → logprob: -13.53524112701416
    6. 'value' → logprob: -14.78524112701416
    7. '(token' → logprob: -14.78524112701416
    8. ')value' → logprob: -14.91024112701416
    9. '(valor' → logprob: -15.66024112701416
    10. '(

' → logprob: -15.66024112701416

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013977376511320472
    2. ' ,' → logprob: -9.625140190124512
    3. ',
' → logprob: -9.875140190124512
    4. '(' → logprob: -12.125140190124512
    5. ',value' → logprob: -12.500140190124512
    6. '(mod' → logprob: -12.625140190124512
    7. 'mod' → logprob: -12.750140190124512
    8. ',module' → logprob: -13.000140190124512
    9. '   ' → logprob: -13.250140190124512
    10. '(
' → logprob: -14.750140190124512

Token 145: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.002619893290102482
    2. ' modulo' → logprob: -6.627619743347168
    3. ' mod' → logprob: -7.002619743347168
    4. '	mod' → logprob: -8.377619743347168
    5. '(mod' → logprob: -9.752619743347168
    6. '-mod' → logprob: -10.252619743347168
    7. '-' → logprob: -10.252619743347168
    8. '<|end|>' → logprob: -11.377619743347168
    9. ' ' → logprob: -12.877619743347168
    10. '   ' → logprob: -13.002619743347168

Token 146: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013261953135952353
    2. ' -' → logprob: -6.626326084136963
    3. ' ' → logprob: -15.876326560974121
    4. '```' → logprob: -16.501325607299805
    5. '−' → logprob: -18.126325607299805
    6. ''-' → logprob: -18.751325607299805
    7. '<|end|>' → logprob: -18.751325607299805
    8. '{-' → logprob: -18.876325607299805
    9. '–' → logprob: -18.876325607299805
    10. '2' → logprob: -19.126325607299805

Token 147: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.73183855926618e-05
    2. ' ' → logprob: -9.500077247619629
    3. '-' → logprob: -14.312577247619629
    4. '۲' → logprob: -14.937577247619629
    5. '```' → logprob: -15.437577247619629
    6. '<|end|>' → logprob: -15.625077247619629
    7. '3' → logprob: -16.062578201293945
    8. ')' → logprob: -16.562578201293945
    9. '٢' → logprob: -16.687578201293945
    10. '২' → logprob: -16.750078201293945

Token 148: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '3' → logprob: -17.3125
    4. '۲' → logprob: -17.3125
    5. '２' → logprob: -18.25
    6. '٢' → logprob: -18.375
    7. '```' → logprob: -18.4375
    8. '22' → logprob: -18.4375
    9. '₂' → logprob: -18.625
    10. '২' → logprob: -19.1875

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017171852523460984
    2. ' ,' → logprob: -6.3767170906066895
    3. ')' → logprob: -11.251717567443848
    4. ' ' → logprob: -13.876717567443848
    5. '   ' → logprob: -14.626717567443848
    6. ',
' → logprob: -15.876717567443848
    7. ',module' → logprob: -16.25171661376953
    8. ' )' → logprob: -16.62671661376953
    9. '‌,' → logprob: -17.00171661376953
    10. '	' → logprob: -17.00171661376953

Token 150: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.0010569837177172303
    2. 'mod' → logprob: -6.876057147979736
    3. '	mod' → logprob: -12.251056671142578
    4. ' ' → logprob: -12.251056671142578
    5. ' módulo' → logprob: -12.751056671142578
    6. ' modu' → logprob: -13.001056671142578
    7. 'Modulo' → logprob: -13.001056671142578
    8. 'module' → logprob: -13.251056671142578
    9. ')' → logprob: -14.001056671142578
    10. ' ' → logprob: -14.376056671142578

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01416750717908144
    2. ')
' → logprob: -4.264167308807373
    3. ' )' → logprob: -13.389167785644531
    4. ')
' → logprob: -13.514167785644531
    5. ')

' → logprob: -14.264167785644531
    6. ')return' → logprob: -15.514167785644531
    7. ' )
' → logprob: -15.764167785644531
    8. '   ' → logprob: -17.76416778564453
    9. '),' → logprob: -18.38916778564453
    10. ' ' → logprob: -18.76416778564453

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030281138606369495
    2. ' pre' → logprob: -8.375303268432617
    3. '
' → logprob: -10.250303268432617
    4. 'pre' → logprob: -10.375303268432617
    5. '	pre' → logprob: -12.625303268432617
    6. '    
' → logprob: -13.875303268432617
    7. '(pre' → logprob: -14.000303268432617
    8. '```' → logprob: -15.875303268432617
    9. '<|end|>' → logprob: -16.000303268432617
    10. '       ' → logprob: -16.250303268432617

Token 153: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' (adapté à ' pre') → logprob: -0.44833460450172424
    2. '   ' → logprob: -1.1983345746994019
    3. ' pre' → logprob: -2.8233346939086914
    4. '
' → logprob: -8.948334693908691
    5. '	pre' → logprob: -9.948334693908691
    6. ' ' → logprob: -10.948334693908691
    7. '  ' → logprob: -12.448334693908691
    8. '    
' → logprob: -12.948334693908691
    9. '(pre' → logprob: -14.073334693908691
    10. '_pre' → logprob: -14.573334693908691

Token 154: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -1.0280383548888494e-06
    2. 'compiled' → logprob: -15.125000953674316
    3. 'com' → logprob: -15.250000953674316
    4. 'computer' → logprob: -16.125001907348633
    5. 'puted' → logprob: -16.125001907348633
    6. ' computed' → logprob: -16.500001907348633
    7. 'comput' → logprob: -16.750001907348633
    8. 'c' → logprob: -17.000001907348633
    9. 'cached' → logprob: -18.000001907348633
    10. 'completed' → logprob: -18.375001907348633

Token 155: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.0802738870552275e-05
    2. '_' → logprob: -11.50001049041748
    3. 'in' → logprob: -14.75001049041748
    4. '_inverse' → logprob: -16.750011444091797
    5. '_s' → logprob: -17.125011444091797
    6. 'In' → logprob: -17.625011444091797
    7. '_inches' → logprob: -17.750011444091797
    8. ' _' → logprob: -18.625011444091797
    9. '_IN' → logprob: -18.625011444091797
    10. '_inv' → logprob: -18.750011444091797

Token 156: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -6.921253225300461e-05
    2. 'ers' → logprob: -10.125069618225098
    3. 'ves' → logprob: -11.750069618225098
    4. 'ver' → logprob: -12.500069618225098
    5. '```' → logprob: -12.625069618225098
    6. '[' → logprob: -12.750069618225098
    7. '   ' → logprob: -13.250069618225098
    8. 's' → logprob: -13.625069618225098
    9. 'e' → logprob: -13.750069618225098
    10. 'erves' → logprob: -13.875069618225098

Token 157: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00013965457037556916
    2. 'ves' → logprob: -9.125139236450195
    3. 'ses' → logprob: -10.750139236450195
    4. 'ores' → logprob: -12.625139236450195
    5. 'res' → logprob: -14.125139236450195
    6. 'eses' → logprob: -14.375139236450195
    7. 'e' → logprob: -14.500139236450195
    8. 'ces' → logprob: -14.500139236450195
    9. '[' → logprob: -14.625139236450195
    10. '   ' → logprob: -15.125139236450195

Token 158: '[value' (ID: 96564)
  Prédit: '[value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[value' → logprob: -0.0004282851587049663
    2. '[' → logprob: -8.000428199768066
    3. '[val' → logprob: -9.375428199768066
    4. '[data' → logprob: -13.000428199768066
    5. '[...]' → logprob: -13.500428199768066
    6. '[key' → logprob: -13.750428199768066
    7. '```' → logprob: -13.750428199768066
    8. '[v' → logprob: -14.250428199768066
    9. ' [' → logprob: -14.375428199768066
    10. '[user' → logprob: -15.750428199768066

Token 159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3782830137643032e-05
    2. ']=' → logprob: -11.62501335144043
    3. ' ]' → logprob: -12.25001335144043
    4. '=' → logprob: -17.12501335144043
    5. ',' → logprob: -20.50001335144043
    6. ']

' → logprob: -20.50001335144043
    7. ']
' → logprob: -21.00001335144043
    8. ')' → logprob: -21.00001335144043
    9. ' =' → logprob: -21.37501335144043
    10. '']' → logprob: -22.00001335144043

Token 160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192955136299133
    2. ' =' → logprob: -1.501929521560669
    3. ']' → logprob: -16.126930236816406
    4. '=value' → logprob: -16.376930236816406
    5. ']=' → logprob: -16.501930236816406
    6. '=

' → logprob: -17.001930236816406
    7. ' =
' → logprob: -17.001930236816406
    8. ' ' → logprob: -17.126930236816406
    9. '＝' → logprob: -17.501930236816406
    10. '=}' → logprob: -18.126930236816406

Token 161: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.023245595395565033
    2. ' inverse' → logprob: -3.7732455730438232
    3. '.inverse' → logprob: -16.898244857788086
    4. '_inverse' → logprob: -18.023244857788086
    5. 'Inverse' → logprob: -18.148244857788086
    6. 'in' → logprob: -18.273244857788086
    7. 'reverse' → logprob: -20.398244857788086
    8. 'inv' → logprob: -20.648244857788086
    9. 'int' → logprob: -20.773244857788086
    10. '```' → logprob: -21.023244857788086

Token 162: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -7.791440293658525e-05
    2. 'r' → logprob: -9.625078201293945
    3. '_res' → logprob: -12.750078201293945
    4. 't' → logprob: -12.875078201293945
    5. '_' → logprob: -13.000078201293945
    6. '_r' → logprob: -13.250078201293945
    7. 's' → logprob: -14.125078201293945
    8. '_inverse' → logprob: -14.750078201293945
    9. 'result' → logprob: -15.125078201293945
    10. '_results' → logprob: -15.375078201293945

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005460034008137882
    2. '    
' → logprob: -7.625545978546143
    3. ' return' → logprob: -10.2505464553833
    4. 'return' → logprob: -12.0005464553833
    5. '
' → logprob: -12.3755464553833
    6. '	return' → logprob: -12.5005464553833
    7. '   
' → logprob: -13.0005464553833
    8. '   ' → logprob: -13.2505464553833
    9. '<|end|>' → logprob: -13.6255464553833
    10. ':return' → logprob: -13.8755464553833

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003277176001574844
    2. ' return' → logprob: -8.375328063964844
    3. '    
' → logprob: -9.500328063964844
    4. 'return' → logprob: -11.500328063964844
    5. '	return' → logprob: -11.875328063964844
    6. '
' → logprob: -13.375328063964844
    7. ':return' → logprob: -14.000328063964844
    8. '   ' → logprob: -14.375328063964844
    9. ' 
' → logprob: -14.500328063964844
    10. '   
' → logprob: -14.750328063964844

Token 165: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19676534831523895
    2. ' return' → logprob: -2.196765422821045
    3. 'return' (adapté à ' return') → logprob: -2.696765422821045
    4. '	return' → logprob: -11.071764945983887
    5. ':return' → logprob: -11.821764945983887
    6. ' ' → logprob: -13.321764945983887
    7. '    
' → logprob: -13.321764945983887
    8. '  ' → logprob: -13.821764945983887
    9. ' 
' → logprob: -14.321764945983887
    10. '_return' → logprob: -14.446764945983887

Token 166: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.5759396553039551
    2. ' inverse' → logprob: -0.8259396553039551
    3. 'in' → logprob: -16.200939178466797
    4. 'Inverse' → logprob: -16.575939178466797
    5. '_inverse' → logprob: -16.700939178466797
    6. '.inverse' → logprob: -16.825939178466797
    7. ' ' → logprob: -18.075939178466797
    8. 'reverse' → logprob: -18.700939178466797
    9. '   ' → logprob: -19.075939178466797
    10. ' ' → logprob: -19.700939178466797

Token 167: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -6.2729995988775045e-06
    2. 'result' → logprob: -12.125006675720215
    3. '_results' → logprob: -15.000006675720215
    4. 'inverse' → logprob: -15.750006675720215
    5. '_' → logprob: -15.875006675720215
    6. '_RESULT' → logprob: -16.8750057220459
    7. 'Result' → logprob: -17.2500057220459
    8. '_r' → logprob: -17.2500057220459
    9. '_res' → logprob: -17.2500057220459
    10. 's' → logprob: -17.2500057220459

Token 168: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0037753814831376076
    2. '<|end|>' → logprob: -5.878775596618652
    3. '
' → logprob: -7.253775596618652
    4. '```' → logprob: -9.753775596618652
    5. '#' → logprob: -10.003775596618652
    6. 'from' → logprob: -10.128775596618652
    7. '

' → logprob: -10.628775596618652
    8. 'import' → logprob: -10.753775596618652
    9. '<|end|>' → logprob: -10.878775596618652
    10. 'class' → logprob: -11.628775596618652

Token 170: ' bin' (ID: 6958)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.043659333139657974
    2. ' modular' → logprob: -3.4186594486236572
    3. ' bin' → logprob: -5.418659210205078
    4. ' n' → logprob: -6.543659210205078
    5. ' mod' → logprob: -6.793659210205078
    6. ' calculate' → logprob: -6.918659210205078
    7. ' combine' → logprob: -7.543659210205078
    8. ' main' → logprob: -8.293659210205078
    9. 'compute' → logprob: -8.418659210205078
    10. ' factorial' → logprob: -8.418659210205078

Token 171: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.00043519894825294614
    2. 'om' → logprob: -7.8754353523254395
    3. '_' → logprob: -9.875434875488281
    4. '_coeff' → logprob: -14.250434875488281
    5. 'omia' → logprob: -14.250434875488281
    6. 'ary' → logprob: -14.375434875488281
    7. 'o' → logprob: -14.500434875488281
    8. ' _' → logprob: -16.25043487548828
    9. 'omal' → logprob: -16.37543487548828
    10. '(_' → logprob: -16.37543487548828

Token 172: '_co' (ID: 21102)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25806182622909546
    2. '_coeff' → logprob: -2.5080618858337402
    3. '_co' → logprob: -2.7580618858337402
    4. '(' → logprob: -2.8830618858337402
    5. '_factor' → logprob: -4.13306188583374
    6. '_coef' → logprob: -5.25806188583374
    7. '(_' → logprob: -7.00806188583374
    8. '_s' → logprob: -7.38306188583374
    9. ' _' → logprob: -8.258061408996582
    10. '_suffix' → logprob: -8.508061408996582

Token 173: 'efficient' (ID: 76593)
  Prédit: 'efficient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'efficient' → logprob: -0.011859235353767872
    2. 'eff' → logprob: -4.51185941696167
    3. 'ef' → logprob: -8.011858940124512
    4. 'def' → logprob: -8.386858940124512
    5. 'n' → logprob: -8.886858940124512
    6. 'm' → logprob: -10.886858940124512
    7. 'e' → logprob: -11.136858940124512
    8. 'unt' → logprob: -11.511858940124512
    9. 'fficient' → logprob: -11.761858940124512
    10. '``' → logprob: -11.886858940124512

Token 174: '_with' (ID: 14161)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04215702414512634
    2. '(' → logprob: -3.542156934738159
    3. ' (' → logprob: -4.417157173156738
    4. '_n' → logprob: -9.292157173156738
    5. '_mod' → logprob: -9.542157173156738
    6. '_' → logprob: -10.292157173156738
    7. '_(' → logprob: -10.917157173156738
    8. '(k' → logprob: -12.167157173156738
    9. '(_' → logprob: -12.292157173156738
    10. ' ' → logprob: -12.667157173156738

Token 175: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.4413989782333374
    2. 'mod' → logprob: -1.0663989782333374
    3. '_cache' → logprob: -4.941399097442627
    4. 'memo' → logprob: -6.191399097442627
    5. '_factor' → logprob: -7.191399097442627
    6. 'cache' → logprob: -7.316399097442627
    7. '_m' → logprob: -8.066398620605469
    8. 'in' → logprob: -8.316398620605469
    9. '```' → logprob: -8.441398620605469
    10. 'factor' → logprob: -8.566398620605469

Token 176: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.0039039766415953636
    2. 'ule' → logprob: -5.628903865814209
    3. '(' → logprob: -8.878904342651367
    4. 'ular' → logprob: -9.878904342651367
    5. 'olo' → logprob: -10.128904342651367
    6. '```' → logprob: -10.878904342651367
    7. '(int' → logprob: -11.753904342651367
    8. '   ' → logprob: -12.628904342651367
    9. 'o' → logprob: -12.753904342651367
    10. 'ulos' → logprob: -12.878904342651367

Token 177: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19214209914207458
    2. '(n' → logprob: -2.0671420097351074
    3. ' (' → logprob: -3.3171420097351074
    4. '(max' → logprob: -4.442142009735107
    5. '(value' → logprob: -9.442142486572266
    6. '(number' → logprob: -10.692142486572266
    7. '(parent' → logprob: -10.942142486572266
    8. '(base' → logprob: -11.192142486572266
    9. '(num' → logprob: -11.317142486572266
    10. '(k' → logprob: -12.192142486572266

Token 178: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.0001681405701674521
    2. 'act' → logprob: -8.875167846679688
    3. 'actory' → logprob: -11.625167846679688
    4. 'a' → logprob: -12.500167846679688
    5. 'actors' → logprob: -13.125167846679688
    6. '_actor' → logprob: -13.250167846679688
    7. 'ac' → logprob: -13.250167846679688
    8. 'irst' → logprob: -13.250167846679688
    9. '_factor' → logprob: -13.500167846679688
    10. '```' → logprob: -13.500167846679688

Token 179: 'ial' (ID: 563)
  Prédit: 'orial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orial' → logprob: -0.010385824367403984
    2. 'ial' → logprob: -5.135385990142822
    3. 'ials' → logprob: -6.010385990142822
    4. 'actor' → logprob: -6.885385990142822
    5. '```' → logprob: -7.885385990142822
    6. 'ctor' → logprob: -8.385385513305664
    7. 'or' → logprob: -8.760385513305664
    8. 'rial' → logprob: -9.260385513305664
    9. 'orm' → logprob: -10.385385513305664
    10. '   ' → logprob: -10.510385513305664

Token 180: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.004229885526001453
    2. '_,' → logprob: -6.50423002243042
    3. ',' → logprob: -6.62923002243042
    4. 's' → logprob: -6.75423002243042
    5. '_s' → logprob: -9.754229545593262
    6. ',_' → logprob: -10.004229545593262
    7. '_sequences' → logprob: -10.754229545593262
    8. '_factor' → logprob: -10.754229545593262
    9. '_seq' → logprob: -11.004229545593262
    10. '_' → logprob: -11.254229545593262

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007740125292912126
    2. ',n' → logprob: -7.500773906707764
    3. ' ,' → logprob: -8.500774383544922
    4. ',f' → logprob: -11.750774383544922
    5. 'n' → logprob: -12.250774383544922
    6. ',max' → logprob: -14.250774383544922
    7. ')' → logprob: -14.500774383544922
    8. '(n' → logprob: -14.500774383544922
    9. ',index' → logprob: -14.625774383544922
    10. 's' → logprob: -15.000774383544922

Token 182: ' total' (ID: 3609)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028284361585974693
    2. ' n' → logprob: -3.6532843112945557
    3. 'k' → logprob: -6.778284549713135
    4. '   ' → logprob: -8.028284072875977
    5. 'max' → logprob: -9.403284072875977
    6. 'total' → logprob: -9.528284072875977
    7. 'value' → logprob: -10.028284072875977
    8. 'left' → logprob: -10.028284072875977
    9. 'first' → logprob: -10.153284072875977
    10. 'factor' → logprob: -10.653284072875977

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08014380186796188
    2. '_n' → logprob: -3.580143690109253
    3. '_count' → logprob: -4.080143928527832
    4. '_size' → logprob: -4.455143928527832
    5. '_,' → logprob: -4.580143928527832
    6. '_elements' → logprob: -6.455143928527832
    7. ',_' → logprob: -6.705143928527832
    8. ',n' → logprob: -6.830143928527832
    9. ' ,' → logprob: -6.830143928527832
    10. '_value' → logprob: -7.080143928527832

Token 184: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -1.1933162212371826
    2. 'subset' → logprob: -1.1933162212371826
    3. 'chosen' → logprob: -2.0683162212371826
    4. 'selected' → logprob: -2.5683162212371826
    5. ' subset' → logprob: -2.8183162212371826
    6. 'select' → logprob: -3.3183162212371826
    7. ' chosen' → logprob: -3.5683162212371826
    8. ' select' → logprob: -3.8183162212371826
    9. ' selected' → logprob: -3.9433162212371826
    10. ' choose' → logprob: -4.693316459655762

Token 185: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18749359250068665
    2. '):' → logprob: -1.8124935626983643
    3. ')' → logprob: -5.562493801116943
    4. '):
' → logprob: -6.187493801116943
    5. ',' → logprob: -7.312493801116943
    6. 'r' → logprob: -7.562493801116943
    7. '   ' → logprob: -8.812493324279785
    8. ' ' → logprob: -9.312493324279785
    9. '_d' → logprob: -9.437493324279785
    10. ' ):' → logprob: -10.062493324279785

Token 186: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.004703056998550892
    2. 'mod' → logprob: -5.379703044891357
    3. ' ' → logprob: -10.004703521728516
    4. '   ' → logprob: -10.754703521728516
    5. ' mod' → logprob: -12.879703521728516
    6. '	mod' → logprob: -13.004703521728516
    7. ' modulus' → logprob: -13.129703521728516
    8. 'Modulo' → logprob: -13.129703521728516
    9. 'module' → logprob: -13.254703521728516
    10. ' modu' → logprob: -13.504703521728516

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006452414090745151
    2. ')' → logprob: -7.375645160675049
    3. ' ):' → logprob: -11.750645637512207
    4. '):
' → logprob: -12.125645637512207
    5. ':' → logprob: -13.000645637512207
    6. ',' → logprob: -13.125645637512207
    7. '   ' → logprob: -14.750645637512207
    8. '):
' → logprob: -15.750645637512207
    9. ' ' → logprob: -16.25064468383789
    10. ')：' → logprob: -16.50064468383789

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006765736034139991
    2. ')' → logprob: -8.500676155090332
    3. '    
' → logprob: -8.500676155090332
    4. ' if' → logprob: -8.875676155090332
    5. ' 
' → logprob: -9.875676155090332
    6. ':' → logprob: -11.000676155090332
    7. '    ' → logprob: -11.625676155090332
    8. '(' → logprob: -11.750676155090332
    9. '):
' → logprob: -11.750676155090332
    10. '   
' → logprob: -12.500676155090332

Token 189: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34337151050567627
    2. '   ' → logprob: -1.3433715105056763
    3. 'if' → logprob: -4.218371391296387
    4. ' return' → logprob: -5.218371391296387
    5. ' 
' → logprob: -5.843371391296387
    6. '    
' → logprob: -6.093371391296387
    7. ' factorial' → logprob: -6.468371391296387
    8. '    ' → logprob: -7.343371391296387
    9. 'factor' → logprob: -7.843371391296387
    10. ' i' → logprob: -7.843371391296387

Token 190: ' (
' (ID: 4112)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -1.187757134437561
    2. 'factor' → logprob: -1.312757134437561
    3. ' (' → logprob: -1.437757134437561
    4. '(f' → logprob: -1.687757134437561
    5. '(
' → logprob: -6.8127570152282715
    6. ' factor' → logprob: -6.9377570152282715
    7. '(' → logprob: -7.6877570152282715
    8. 'fact' → logprob: -8.18775749206543
    9. '   ' → logprob: -8.31275749206543
    10. ' (
' → logprob: -8.43775749206543

Token 191: '       ' (ID: 309)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.2524806261062622
    2. ' factorial' → logprob: -1.5024806261062622
    3. '   ' → logprob: -7.627480506896973
    4. ' factor' → logprob: -10.127480506896973
    5. 'fact' → logprob: -11.752480506896973
    6. '    ' → logprob: -12.002480506896973
    7. ' (' → logprob: -12.627480506896973
    8. '(f' → logprob: -13.252480506896973
    9. '-factor' → logprob: -13.502480506896973
    10. '_factor' → logprob: -14.127480506896973

Token 192: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.012644085101783276
    2. ' factorial' → logprob: -4.387644290924072
    3. '   ' → logprob: -10.012643814086914
    4. '(f' → logprob: -10.512643814086914
    5. ' factor' → logprob: -10.887643814086914
    6. 'fact' → logprob: -11.012643814086914
    7. ' (' → logprob: -12.012643814086914
    8. '(' → logprob: -12.012643814086914
    9. '(
' → logprob: -12.512643814086914
    10. ' ' → logprob: -13.387643814086914

Token 193: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -3.128163257315464e-07
    2. 'sequence' → logprob: -15.5
    3. '_seq' → logprob: -17.5
    4. '_sequences' → logprob: -17.875
    5. '_SEQUENCE' → logprob: -18.375
    6. '_' → logprob: -18.75
    7. 'Sequence' → logprob: -19.125
    8. '```' → logprob: -19.125
    9. '[_' → logprob: -19.375
    10. ' _' → logprob: -19.5

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. 'total' → logprob: -13.62500286102295
    3. ' [' → logprob: -14.37500286102295
    4. '   ' → logprob: -14.50000286102295
    5. ')[' → logprob: -15.25000286102295
    6. '][' → logprob: -16.250003814697266
    7. '[
' → logprob: -16.375003814697266
    8. ' total' → logprob: -16.375003814697266
    9. '(total' → logprob: -16.625003814697266
    10. '	' → logprob: -16.875003814697266

Token 195: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -4.1080467781284824e-05
    2. ' total' → logprob: -10.125041007995605
    3. 'to' → logprob: -14.750041007995605
    4. 't' → logprob: -15.625041007995605
    5. ' ' → logprob: -15.750041007995605
    6. 'tot' → logprob: -16.000041961669922
    7. '   ' → logprob: -16.125041961669922
    8. '  ' → logprob: -17.000041961669922
    9. '    ' → logprob: -18.875041961669922
    10. '(total' → logprob: -19.000041961669922

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004896456957794726
    2. ']
' → logprob: -7.625489711761475
    3. ' ]' → logprob: -14.375489234924316
    4. ']*' → logprob: -15.000489234924316
    5. '   ' → logprob: -15.125489234924316
    6. '']' → logprob: -15.875489234924316
    7. ']

' → logprob: -16.250490188598633
    8. ']
' → logprob: -16.500490188598633
    9. '[' → logprob: -17.625490188598633
    10. '[
' → logprob: -17.625490188598633

Token 197: ' *
' (ID: 2099)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0755961686372757
    2. '*' → logprob: -2.7005960941314697
    3. ' *
' → logprob: -5.325596332550049
    4. '*
' → logprob: -7.450596332550049
    5. '   ' → logprob: -8.70059585571289
    6. ' ' → logprob: -11.70059585571289
    7. '
' → logprob: -12.07559585571289
    8. ' ' → logprob: -12.07559585571289
    9. ' *
' → logprob: -13.20059585571289
    10. '    ' → logprob: -13.20059585571289

Token 198: '       ' (ID: 309)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16122083365917206
    2. ' modular' → logprob: -1.9112207889556885
    3. '   ' → logprob: -7.036221027374268
    4. ' mod' → logprob: -9.91122055053711
    5. '	mod' → logprob: -10.53622055053711
    6. '(mod' → logprob: -10.78622055053711
    7. '       ' → logprob: -11.03622055053711
    8. '           ' → logprob: -13.78622055053711
    9. '    ' → logprob: -14.03622055053711
    10. '_mod' → logprob: -14.53622055053711

Token 199: ' modular' (ID: 61198)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3875269591808319
    2. ' modular' → logprob: -1.1375269889831543
    3. '   ' → logprob: -7.887526988983154
    4. ' mod' → logprob: -9.137526512145996
    5. '	mod' → logprob: -9.387526512145996
    6. '(mod' → logprob: -10.012526512145996
    7. '       ' → logprob: -10.512526512145996
    8. '    ' → logprob: -12.262526512145996
    9. '           ' → logprob: -12.762526512145996
    10. '_mod' → logprob: -13.512526512145996

Token 200: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.0039666746743023396
    2. '_' → logprob: -5.753966808319092
    3. '_inv' → logprob: -8.128966331481934
    4. ' _' → logprob: -8.503966331481934
    5. '_in' → logprob: -8.628966331481934
    6. '_reverse' → logprob: -10.878966331481934
    7. ')_' → logprob: -11.128966331481934
    8. '```' → logprob: -11.628966331481934
    9. ''_' → logprob: -11.878966331481934
    10. '_raise' → logprob: -12.253966331481934

Token 201: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.002523341914638877
    2. '(' → logprob: -6.002523422241211
    3. '(
' → logprob: -10.002523422241211
    4. '((' → logprob: -13.627523422241211
    5. ' (' → logprob: -14.627523422241211
    6. 'factor' → logprob: -15.252523422241211
    7. '(

' → logprob: -15.752523422241211
    8. ' factorial' → logprob: -16.37752342224121
    9. '(F' → logprob: -17.37752342224121
    10. '("("' → logprob: -17.75252342224121

Token 202: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -9.491498531133402e-06
    2. 'act' → logprob: -12.000009536743164
    3. 'factor' → logprob: -13.500009536743164
    4. '[' → logprob: -14.000009536743164
    5. '(' → logprob: -14.625009536743164
    6. '(actor' → logprob: -15.000009536743164
    7. 'ac' → logprob: -16.375009536743164
    8. '(f' → logprob: -16.500009536743164
    9. '_factor' → logprob: -17.375009536743164
    10. 'ctor' → logprob: -17.750009536743164

Token 203: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.02329031564295292
    2. 'al' → logprob: -3.7732903957366943
    3. '   ' → logprob: -11.398290634155273
    4. '_sequence' → logprob: -11.648290634155273
    5. 'orial' → logprob: -11.773290634155273
    6. '_al' → logprob: -12.398290634155273
    7. '           ' → logprob: -12.523290634155273
    8. '       ' → logprob: -13.273290634155273
    9. 'ialist' → logprob: -13.648290634155273
    10. 'rial' → logprob: -14.023290634155273

Token 204: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.8444881536415778e-05
    2. 'sequence' → logprob: -10.625028610229492
    3. '_co' → logprob: -13.250028610229492
    4. 'Sequence' → logprob: -13.750028610229492
    5. '_factor' → logprob: -14.625028610229492
    6. '[' → logprob: -15.125028610229492
    7. '(sequence' → logprob: -15.875028610229492
    8. ' sequence' → logprob: -16.250028610229492
    9. '_SEQUENCE' → logprob: -16.750028610229492
    10. ')' → logprob: -16.875028610229492

Token 205: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '[
' → logprob: -15.000000953674316
    3. '[n' → logprob: -15.625000953674316
    4. ')' → logprob: -17.0
    5. '```' → logprob: -17.25
    6. '[ch' → logprob: -17.5
    7. '[count' → logprob: -17.625
    8. 'choose' → logprob: -18.0
    9. ')[' → logprob: -18.0
    10. '   ' → logprob: -18.5

Token 206: 'choose' (ID: 47312)
  Prédit: 'choose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.31338736414909363
    2. '[' → logprob: -1.313387393951416
    3. 'total' → logprob: -9.688386917114258
    4. ']' → logprob: -10.688386917114258
    5. 'cho' → logprob: -10.813386917114258
    6. ' choose' → logprob: -11.938386917114258
    7. '(' → logprob: -12.688386917114258
    8. '   ' → logprob: -13.063386917114258
    9. ')' → logprob: -13.438386917114258
    10. '{' → logprob: -13.563386917114258

Token 207: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0005722135538235307
    2. ']' → logprob: -7.500572204589844
    3. '])' → logprob: -12.125572204589844
    4. ' ],' → logprob: -12.250572204589844
    5. '   ' → logprob: -12.500572204589844
    6. '       ' → logprob: -13.375572204589844
    7. ' ' → logprob: -14.125572204589844
    8. ',' → logprob: -14.375572204589844
    9. '```' → logprob: -14.500572204589844
    10. '],
' → logprob: -14.750572204589844

Token 208: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.004996309522539377
    2. 'mod' → logprob: -5.379996299743652
    3. ' ' → logprob: -9.129996299743652
    4. ')' → logprob: -9.504996299743652
    5. ' modu' → logprob: -9.879996299743652
    6. ' mod' → logprob: -10.129996299743652
    7. '	mod' → logprob: -10.254996299743652
    8. '(mod' → logprob: -10.629996299743652
    9. ' ' → logprob: -12.129996299743652
    10. 'Modulo' → logprob: -12.129996299743652

Token 209: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44510409235954285
    2. ' *' → logprob: -1.3201041221618652
    3. '       ' → logprob: -2.9451041221618652
    4. '   ' → logprob: -3.5701041221618652
    5. '*' → logprob: -5.070104122161865
    6. ' *
' → logprob: -5.695104122161865
    7. ')*' → logprob: -7.445104122161865
    8. '    ' → logprob: -8.445103645324707
    9. ' )' → logprob: -8.445103645324707
    10. '	' → logprob: -8.820103645324707

Token 210: ' *
' (ID: 2099)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07430583238601685
    2. '*' → logprob: -3.199305772781372
    3. ' *
' → logprob: -4.074306011199951
    4. ')' → logprob: -5.449306011199951
    5. '       ' → logprob: -5.449306011199951
    6. '   ' → logprob: -5.574306011199951
    7. '*
' → logprob: -7.199306011199951
    8. '<|end|>' → logprob: -8.449305534362793
    9. ' ' → logprob: -8.699305534362793
    10. ' *

' → logprob: -10.074305534362793

Token 211: '       ' (ID: 309)
  Prédit: ' modular'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modular' → logprob: -0.21631567180156708
    2. '       ' → logprob: -1.7163156270980835
    3. 'mod' → logprob: -4.216315746307373
    4. '	mod' → logprob: -11.091315269470215
    5. ' mod' → logprob: -11.341315269470215
    6. '   ' → logprob: -12.341315269470215
    7. '(mod' → logprob: -12.716315269470215
    8. '_mod' → logprob: -13.591315269470215
    9. ' modul' → logprob: -14.466315269470215
    10. '      ' → logprob: -14.591315269470215

Token 212: ' modular' (ID: 61198)
  Prédit: ' modular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modular' → logprob: -0.4740886092185974
    2. 'mod' → logprob: -0.9740886092185974
    3. '       ' → logprob: -12.224088668823242
    4. '	mod' → logprob: -12.849088668823242
    5. '   ' → logprob: -13.099088668823242
    6. '(mod' → logprob: -14.349088668823242
    7. '_mod' → logprob: -14.599088668823242
    8. ' mod' → logprob: -14.724088668823242
    9. '    ' → logprob: -16.349088668823242
    10. 'moder' → logprob: -16.724088668823242

Token 213: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -1.8074162653647363e-05
    2. 'inverse' → logprob: -12.375018119812012
    3. 'Inverse' → logprob: -12.875018119812012
    4. ' _' → logprob: -13.625018119812012
    5. '_in' → logprob: -13.625018119812012
    6. ''_' → logprob: -13.750018119812012
    7. '_reverse' → logprob: -13.750018119812012
    8. '"_' → logprob: -14.125018119812012
    9. '       ' → logprob: -14.250018119812012
    10. '_inv' → logprob: -14.250018119812012

Token 214: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.011049943044781685
    2. '(' → logprob: -4.511049747467041
    3. '(
' → logprob: -13.2610502243042
    4. ' (' → logprob: -16.011049270629883
    5. '((' → logprob: -16.261049270629883
    6. '(

' → logprob: -16.886049270629883
    7. 'factor' → logprob: -17.011049270629883
    8. '[f' → logprob: -17.636049270629883
    9. '("("' → logprob: -17.761049270629883
    10. ' factorial' → logprob: -17.886049270629883

Token 215: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -2.069664333248511e-05
    2. 'act' → logprob: -10.875020980834961
    3. 'factor' → logprob: -13.500020980834961
    4. 'ctor' → logprob: -15.875020980834961
    5. 'ac' → logprob: -16.37502098083496
    6. '   ' → logprob: -17.25002098083496
    7. '_factor' → logprob: -17.50002098083496
    8. '[' → logprob: -18.00002098083496
    9. 'atorial' → logprob: -18.00002098083496
    10. ' factorial' → logprob: -18.12502098083496

Token 216: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.16055403649806976
    2. 'al' → logprob: -1.910554051399231
    3. '_sequence' → logprob: -9.160553932189941
    4. '   ' → logprob: -9.410553932189941
    5. 'omial' → logprob: -10.785553932189941
    6. '       ' → logprob: -10.785553932189941
    7. 'orial' → logprob: -11.160553932189941
    8. '           ' → logprob: -11.410553932189941
    9. 'cial' → logprob: -11.660553932189941
    10. 'rial' → logprob: -11.910553932189941

Token 217: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.3663626305060461e-05
    2. 'sequence' → logprob: -11.37501335144043
    3. '_sequences' → logprob: -14.00001335144043
    4. '[' → logprob: -15.50001335144043
    5. '_SEQUENCE' → logprob: -15.50001335144043
    6. 'Sequence' → logprob: -15.62501335144043
    7. '
' → logprob: -16.25001335144043
    8. '   ' → logprob: -16.25001335144043
    9. '```' → logprob: -16.37501335144043
    10. ' sequence' → logprob: -16.62501335144043

Token 218: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. 'total' → logprob: -14.375000953674316
    3. '[
' → logprob: -15.250000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '(total' → logprob: -16.500001907348633
    6. ' [' → logprob: -17.125001907348633
    7. ')[' → logprob: -18.500001907348633
    8. '[to' → logprob: -18.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. '[target' → logprob: -18.750001907348633

Token 219: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -4.394135612528771e-05
    2. ' total' → logprob: -10.625043869018555
    3. '[' → logprob: -11.125043869018555
    4. '(total' → logprob: -12.625043869018555
    5. 'to' → logprob: -14.250043869018555
    6. '   ' → logprob: -14.625043869018555
    7. 'tot' → logprob: -15.500043869018555
    8. '
' → logprob: -16.000043869018555
    9. ' ' → logprob: -17.500043869018555
    10. '(' → logprob: -17.875043869018555

Token 220: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10020893067121506
    2. ' -' → logprob: -2.3502089977264404
    3. '   ' → logprob: -13.97520923614502
    4. '-choice' → logprob: -14.35020923614502
    5. ' ' → logprob: -14.97520923614502
    6. 'choose' → logprob: -15.35020923614502
    7. '-create' → logprob: -16.475208282470703
    8. '-cut' → logprob: -16.975208282470703
    9. '-k' → logprob: -16.975208282470703
    10. '-
' → logprob: -17.225208282470703

Token 221: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.0011705794604495168
    2. ' choose' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.25117015838623
    4. ' ' → logprob: -17.001171112060547
    5. '
' → logprob: -17.876171112060547
    6. '_choose' → logprob: -18.001171112060547
    7. '  ' → logprob: -18.126171112060547
    8. '.choose' → logprob: -18.251171112060547
    9. '    ' → logprob: -18.751171112060547
    10. 'choice' → logprob: -19.376171112060547

Token 222: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -8.244413766078651e-05
    2. ']' → logprob: -9.500082015991211
    3. ' ],' → logprob: -12.250082015991211
    4. '],
' → logprob: -13.625082015991211
    5. ',' → logprob: -14.375082015991211
    6. ''],' → logprob: -14.625082015991211
    7. '   ' → logprob: -15.750082015991211
    8. ' ' → logprob: -16.00008201599121
    9. '"],' → logprob: -16.50008201599121
    10. ']
' → logprob: -17.12508201599121

Token 223: ' modulo' (ID: 112372)
  Prédit: ' modulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.3868885338306427
    2. 'mod' → logprob: -1.1368885040283203
    3. '(mod' → logprob: -12.13688850402832
    4. 'module' → logprob: -12.51188850402832
    5. '	mod' → logprob: -13.01188850402832
    6. '   ' → logprob: -13.26188850402832
    7. '```' → logprob: -13.76188850402832
    8. ')' → logprob: -14.13688850402832
    9. 'Modulo' → logprob: -14.26188850402832
    10. ' ' → logprob: -14.88688850402832

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021769083105027676
    2. ')%' → logprob: -6.502176761627197
    3. ',' → logprob: -8.127177238464355
    4. '%' → logprob: -8.877177238464355
    5. '   ' → logprob: -9.002177238464355
    6. ' )' → logprob: -9.252177238464355
    7. ')
' → logprob: -12.002177238464355
    8. ' %' → logprob: -13.252177238464355
    9. '       ' → logprob: -13.502177238464355
    10. '```' → logprob: -13.627177238464355

Token 225: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07334110885858536
    2. '%' → logprob: -3.448341131210327
    3. ' %' → logprob: -3.573341131210327
    4. ')%' → logprob: -4.948340892791748
    5. '   ' → logprob: -6.073340892791748
    6. ' )' → logprob: -6.573340892791748
    7. '       ' → logprob: -11.323341369628906
    8. ' ' → logprob: -11.698341369628906
    9. ' ' → logprob: -12.198341369628906
    10. ')
' → logprob: -12.198341369628906

Token 226: ' )' (ID: 1546)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3515912592411041
    2. ')' (adapté à ' )') → logprob: -1.3515912294387817
    3. ' %' → logprob: -3.9765913486480713
    4. ')%' → logprob: -3.9765913486480713
    5. '   ' → logprob: -10.476591110229492
    6. ' )' → logprob: -10.601591110229492
    7. '%)' → logprob: -10.726591110229492
    8. ' ' → logprob: -11.226591110229492
    9. '%n' → logprob: -12.601591110229492
    10. '%
' → logprob: -12.601591110229492

Token 227: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0015450954670086503
    2. ' %' → logprob: -6.501544952392578
    3. ')' → logprob: -10.501544952392578
    4. ')%' → logprob: -11.376544952392578
    5. '%
' → logprob: -13.251544952392578
    6. ' ' → logprob: -13.751544952392578
    7. '%)' → logprob: -14.876544952392578
    8. '	' → logprob: -16.001544952392578
    9. '%A' → logprob: -16.376544952392578
    10. '   ' → logprob: -16.501544952392578

Token 228: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.023322228342294693
    2. ' modulo' → logprob: -3.773322343826294
    3. '(mod' → logprob: -9.523322105407715
    4. 'module' → logprob: -13.023322105407715
    5. '	mod' → logprob: -14.148322105407715
    6. ' ' → logprob: -16.02332305908203
    7. 'Modulo' → logprob: -16.02332305908203
    8. 'mo' → logprob: -16.14832305908203
    9. '```' → logprob: -16.14832305908203
    10. '   ' → logprob: -16.77332305908203

Token 229: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 230: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009569590329192579
    2. '#' → logprob: -7.250957012176514
    3. 'n' → logprob: -10.000956535339355
    4. '```' → logprob: -10.000956535339355
    5. '<|end|>' → logprob: -10.250956535339355
    6. 'import' → logprob: -10.500956535339355
    7. '\n' → logprob: -10.500956535339355
    8. '
' → logprob: -11.000956535339355
    9. '\' → logprob: -11.625956535339355
    10. 'de' → logprob: -12.000956535339355

Token 231: ' process' (ID: 2273)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.007438019849359989
    2. 'main' → logprob: -5.3824381828308105
    3. ' solve' → logprob: -6.2574381828308105
    4. ' compute' → logprob: -8.257437705993652
    5. ' calculate' → logprob: -8.257437705993652
    6. ' count' → logprob: -8.632437705993652
    7. ' find' → logprob: -10.007437705993652
    8. 'calculate' → logprob: -10.132437705993652
    9. 'solve' → logprob: -10.257437705993652
    10. 'compute' → logprob: -11.007437705993652

Token 232: '_per' (ID: 10938)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09940550476312637
    2. '_input' → logprob: -2.599405527114868
    3. '_factor' → logprob: -5.349405288696289
    4. '(' → logprob: -5.849405288696289
    5. '_case' → logprob: -6.224405288696289
    6. '_line' → logprob: -6.974405288696289
    7. '_inputs' → logprob: -7.599405288696289
    8. '_data' → logprob: -7.724405288696289
    9. '_(' → logprob: -7.849405288696289
    10. '_numbers' → logprob: -7.974405288696289

Token 233: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.03518088907003403
    2. 'mut' → logprob: -3.5351808071136475
    3. 'm' → logprob: -6.660181045532227
    4. 'formance' → logprob: -7.285181045532227
    5. 's' → logprob: -7.660181045532227
    6. '```' → logprob: -7.785181045532227
    7. 'test' → logprob: -7.910181045532227
    8. 'mute' → logprob: -7.910181045532227
    9. 't' → logprob: -8.410181045532227
    10. 'mission' → logprob: -8.785181045532227

Token 234: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07180312275886536
    2. '(n' → logprob: -3.946803092956543
    3. '():' → logprob: -4.946803092956543
    4. 's' → logprob: -5.571803092956543
    5. '(k' → logprob: -5.571803092956543
    6. '(_' → logprob: -5.696803092956543
    7. '_at' → logprob: -5.821803092956543
    8. '_list' → logprob: -6.196803092956543
    9. '(iter' → logprob: -6.321803092956543
    10. '(per' → logprob: -6.321803092956543

Token 235: '_compute' (ID: 139704)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8172382116317749
    2. 'comb' → logprob: -1.942238211631775
    3. '_count' → logprob: -2.1922383308410645
    4. '_comb' → logprob: -2.3172383308410645
    5. '_com' → logprob: -3.0672383308410645
    6. 'compute' → logprob: -3.1922383308410645
    7. 'calculate' → logprob: -3.9422383308410645
    8. '_counts' → logprob: -4.1922383308410645
    9. 'com' → logprob: -4.3172383308410645
    10. 'counts' → logprob: -4.6922383308410645

Token 236: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0798892974853516
    2. '_count' → logprob: -1.0798892974853516
    3. '(n' → logprob: -1.9548892974853516
    4. '_counts' → logprob: -2.4548892974853516
    5. '_' → logprob: -3.5798892974853516
    6. '_factor' → logprob: -4.329889297485352
    7. '_result' → logprob: -4.704889297485352
    8. '_sum' → logprob: -5.454889297485352
    9. '_bin' → logprob: -5.579889297485352
    10. '_co' → logprob: -5.954889297485352

Token 237: '():
' (ID: 8595)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.8631645441055298
    2. '(' → logprob: -0.9881645441055298
    3. '():' → logprob: -3.1131644248962402
    4. '(input' → logprob: -3.1131644248962402
    5. '(line' → logprob: -3.2381644248962402
    6. '(n' → logprob: -4.11316442489624
    7. '(sequence' → logprob: -4.98816442489624
    8. '(p' → logprob: -4.98816442489624
    9. '(s' → logprob: -5.48816442489624
    10. '(number' → logprob: -5.73816442489624

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001348211313597858
    2. 'n' → logprob: -7.50134801864624
    3. ' n' → logprob: -7.62634801864624
    4. '   ' → logprob: -9.001348495483398
    5. ' max' → logprob: -9.126348495483398
    6. 'max' → logprob: -11.126348495483398
    7. '	n' → logprob: -11.251348495483398
    8. 'mod' → logprob: -11.626348495483398
    9. ' mod' → logprob: -12.001348495483398
    10. ' modulo' → logprob: -12.126348495483398

Token 239: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0055338144302368
    2. 'n' → logprob: -1.1305338144302368
    3. ' n' → logprob: -1.2555338144302368
    4. 'mod' → logprob: -4.630533695220947
    5. ' modulo' → logprob: -5.755533695220947
    6. 'max' → logprob: -6.005533695220947
    7. ' MOD' → logprob: -6.005533695220947
    8. ' N' → logprob: -6.005533695220947
    9. ' max' → logprob: -6.130533695220947
    10. 'N' → logprob: -6.630533695220947

Token 240: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9771928191184998
    2. 's' → logprob: -0.9771928191184998
    3. ' =' → logprob: -1.9771928787231445
    4. '_of' → logprob: -2.4771928787231445
    5. '=' → logprob: -3.8521928787231445
    6. '_s' → logprob: -6.7271928787231445
    7. '_=' → logprob: -7.1021928787231445
    8. ',' → logprob: -8.102192878723145
    9. '_list' → logprob: -8.602192878723145
    10. '_items' → logprob: -8.977192878723145

Token 241: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.2564098536968231
    2. 'elements' → logprob: -1.7564098834991455
    3. '_per' → logprob: -4.381409645080566
    4. '_items' → logprob: -4.631409645080566
    5. '_nodes' → logprob: -4.631409645080566
    6. 'items' → logprob: -5.381409645080566
    7. '_vertices' → logprob: -5.381409645080566
    8. 'per' → logprob: -5.756409645080566
    9. '_points' → logprob: -6.756409645080566
    10. '_students' → logprob: -6.881409645080566

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04550021141767502
    2. ',' → logprob: -3.2955002784729004
    3. '=' → logprob: -5.2955002784729
    4. ' ,' → logprob: -6.0455002784729
    5. ' ' → logprob: -10.670499801635742
    6. '=int' → logprob: -11.045499801635742
    7. ',int' → logprob: -13.045499801635742
    8. '   ' → logprob: -13.920499801635742
    9. '=input' → logprob: -13.920499801635742
    10. '  ' → logprob: -14.670499801635742

Token 243: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.42948660254478455
    2. 'int' → logprob: -1.679486632347107
    3. ' read' → logprob: -1.929486632347107
    4. 'read' → logprob: -4.0544867515563965
    5. ' next' → logprob: -9.804486274719238
    6. '   ' → logprob: -10.304486274719238
    7. ' ' → logprob: -11.429486274719238
    8. 'next' → logprob: -11.804486274719238
    9. '  ' → logprob: -12.054486274719238
    10. ' n' → logprob: -13.804486274719238

Token 244: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.0010366219794377685
    2. '(' → logprob: -7.001036643981934
    3. 'read' → logprob: -9.626036643981934
    4. '(input' → logprob: -9.876036643981934
    5. ' (' → logprob: -12.751036643981934
    6. '(sys' → logprob: -12.876036643981934
    7. '()' → logprob: -13.376036643981934
    8. ' read' → logprob: -15.251036643981934
    9. '	read' → logprob: -15.876036643981934
    10. '(re' → logprob: -16.501035690307617

Token 245: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0948629155755043
    2. '()' → logprob: -2.594862937927246
    3. '_' → logprob: -4.469862937927246
    4. '())' → logprob: -6.469862937927246
    5. '_in' → logprob: -7.344862937927246
    6. ')' → logprob: -7.344862937927246
    7. '(' → logprob: -7.344862937927246
    8. 'input' → logprob: -7.844862937927246
    9. '_)' → logprob: -9.219862937927246
    10. '__' → logprob: -9.969862937927246

Token 246: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.07951214909553528
    2. '())' → logprob: -3.079512119293213
    3. '()' → logprob: -3.579512119293213
    4. ')' → logprob: -6.704512119293213
    5. '().' → logprob: -7.454512119293213
    6. 'line' → logprob: -7.579512119293213
    7. '_' → logprob: -8.579512596130371
    8. '_LINE' → logprob: -11.704512596130371
    9. '_lines' → logprob: -11.829512596130371
    10. '.readline' → logprob: -12.204512596130371

Token 247: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0809219554066658
    2. '().' → logprob: -2.5809218883514404
    3. '()' → logprob: -6.2059221267700195
    4. ')' → logprob: -12.45592212677002
    5. '())
' → logprob: -12.45592212677002
    6. ' ())' → logprob: -13.20592212677002
    7. '()
' → logprob: -13.70592212677002
    8. '(' → logprob: -14.45592212677002
    9. '())

' → logprob: -14.70592212677002
    10. '();)' → logprob: -14.83092212677002

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05445665866136551
    2. ')' → logprob: -3.9294567108154297
    3. '    
' → logprob: -4.17945671081543
    4. 'n' → logprob: -5.42945671081543
    5. '
' → logprob: -5.92945671081543
    6. ' 
' → logprob: -6.05445671081543
    7. '    ' → logprob: -6.17945671081543
    8. 'elements' → logprob: -6.30445671081543
    9. 'a' → logprob: -7.05445671081543
    10. ' ' → logprob: -7.55445671081543

Token 249: ' element' (ID: 3577)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6801045536994934
    2. 'mod' → logprob: -1.3051044940948486
    3. 'elements' → logprob: -1.8051044940948486
    4. 'sequence' → logprob: -3.8051044940948486
    5. 'array' → logprob: -4.305104732513428
    6. 'numbers' → logprob: -5.680104732513428
    7. 'values' → logprob: -6.055104732513428
    8. '   ' → logprob: -6.055104732513428
    9. 'element' (adapté à ' element') → logprob: -6.305104732513428
    10. 'number' → logprob: -6.555104732513428

Token 250: '_position' (ID: 23739)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019424419151619077
    2. '_list' → logprob: -6.7519426345825195
    3. '_sequence' → logprob: -8.25194263458252
    4. '_values' → logprob: -8.62694263458252
    5. '_positions' → logprob: -8.62694263458252
    6. '_s' → logprob: -9.25194263458252
    7. '_per' → logprob: -11.00194263458252
    8. '_array' → logprob: -11.37694263458252
    9. ' s' → logprob: -11.75194263458252
    10. '_order' → logprob: -12.00194263458252

Token 251: '_order' (ID: 17446)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005400468362495303
    2. '=' → logprob: -8.250539779663086
    3. ' =' → logprob: -8.625539779663086
    4. '_s' → logprob: -9.625539779663086
    5. '_map' → logprob: -11.375539779663086
    6. '_' → logprob: -11.750539779663086
    7. '_list' → logprob: -12.000539779663086
    8. '_mapping' → logprob: -13.000539779663086
    9. ' s' → logprob: -13.625539779663086
    10. '_pairs' → logprob: -14.000539779663086

Token 252: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17787832021713257
    2. ' =' → logprob: -1.9278783798217773
    3. '=' → logprob: -4.052878379821777
    4. ',' → logprob: -9.302878379821777
    5. '_' → logprob: -11.302878379821777
    6. '[' → logprob: -11.302878379821777
    7. ' s' → logprob: -12.552878379821777
    8. '[]' → logprob: -13.177878379821777
    9. '   ' → logprob: -13.927878379821777
    10. '_list' → logprob: -13.927878379821777

Token 253: ' [' (ID: 723)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.028248673304915428
    2. 'list' → logprob: -3.6532487869262695
    3. ' read' → logprob: -6.4032487869262695
    4. ' list' → logprob: -9.15324878692627
    5. '[]' → logprob: -9.40324878692627
    6. 'dict' → logprob: -10.40324878692627
    7. '[' → logprob: -10.52824878692627
    8. '{}' → logprob: -10.77824878692627
    9. '{' → logprob: -11.27824878692627
    10. 'tuple' → logprob: -13.02824878692627

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46576565504074097
    2. 'int' → logprob: -1.2157657146453857
    3. '*' → logprob: -3.2157657146453857
    4. ']' → logprob: -3.8407657146453857
    5. '-' → logprob: -4.965765476226807
    6. 'None' → logprob: -6.215765476226807
    7. ']int' → logprob: -6.465765476226807
    8. ']*' → logprob: -7.090765476226807
    9. '
' → logprob: -7.715765476226807
    10. '(int' → logprob: -7.965765476226807

Token 255: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007659103139303625
    2. ']*' → logprob: -8.125765800476074
    3. ' for' → logprob: -8.375765800476074
    4. ']*(' → logprob: -8.625765800476074
    5. 'for' → logprob: -9.875765800476074
    6. ' ]' → logprob: -12.250765800476074
    7. ')' → logprob: -14.375765800476074
    8. ']+' → logprob: -14.500765800476074
    9. '()]' → logprob: -14.625765800476074
    10. ']int' → logprob: -15.000765800476074

Token 256: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.075392723083496
    2. 'for' → logprob: -1.700392723083496
    3. '(number' → logprob: -1.825392723083496
    4. ']' → logprob: -2.200392723083496
    5. '[number' → logprob: -2.325392723083496
    6. '*' → logprob: -3.075392723083496
    7. ' *' → logprob: -3.325392723083496
    8. ']*' → logprob: -4.325392723083496
    9. ']*(' → logprob: -5.825392723083496
    10. ')' → logprob: -6.200392723083496

Token 257: ' number' (ID: 2086)
  Prédit: '(number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.2039596438407898
    2. 'number' → logprob: -1.7039597034454346
    3. '(' → logprob: -6.0789594650268555
    4. ' (' → logprob: -8.953959465026855
    5. '(n' → logprob: -9.703959465026855
    6. '(max' → logprob: -10.453959465026855
    7. ' number' → logprob: -11.078959465026855
    8. 'n' → logprob: -12.328959465026855
    9. '[number' → logprob: -12.953959465026855
    10. '(num' → logprob: -13.203959465026855

Token 258: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -3.128163257315464e-07
    2. 'of' → logprob: -15.875
    3. '_' → logprob: -16.625
    4. '_o' → logprob: -17.25
    5. ' _' → logprob: -18.5
    6. '\' → logprob: -18.75
    7. '__' → logprob: -19.125
    8. ' of' → logprob: -20.0
    9. '_or' → logprob: -20.0
    10. '_elements' → logprob: -20.0

Token 259: '_elements' (ID: 53344)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.4371042549610138
    2. '_elements' → logprob: -1.5621042251586914
    3. 'lements' → logprob: -1.9371042251586914
    4. 'lement' → logprob: -9.062104225158691
    5. 'lems' → logprob: -9.812104225158691
    6. 'le' → logprob: -10.562104225158691
    7. 'lem' → logprob: -10.937104225158691
    8. 'ele' → logprob: -11.187104225158691
    9. 'element' → logprob: -11.187104225158691
    10. 'el' → logprob: -12.187104225158691

Token 260: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009474505670368671
    2. '<|end|>' → logprob: -6.259474277496338
    3. '    
' → logprob: -6.509474277496338
    4. '   ' → logprob: -6.634474277496338
    5. 'elements' → logprob: -6.759474277496338
    6. 'positions' → logprob: -6.759474277496338
    7. '  
' → logprob: -8.134474754333496
    8. '
' → logprob: -8.509474754333496
    9. 'indices' → logprob: -8.509474754333496
    10. 'element' → logprob: -8.509474754333496

Token 261: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.289537787437439
    2. 'elements' → logprob: -1.664537787437439
    3. '   ' → logprob: -1.789537787437439
    4. 'per' → logprob: -2.5395379066467285
    5. 'element' → logprob: -2.5395379066467285
    6. 'positions' → logprob: -2.7895379066467285
    7. ' for' → logprob: -3.0395379066467285
    8. 'current' → logprob: -3.5395379066467285
    9. ' elements' → logprob: -3.6645379066467285
    10. 'position' → logprob: -4.4145379066467285

Token 262: ' for' (ID: 395)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.8268881440162659
    2. 'for' (adapté à ' for') → logprob: -1.201888084411621
    3. 'element' → logprob: -2.201888084411621
    4. 'positions' → logprob: -2.201888084411621
    5. 'per' → logprob: -3.951888084411621
    6. 'position' → logprob: -4.451888084411621
    7. 'current' → logprob: -5.451888084411621
    8. 'original' → logprob: -6.576888084411621
    9. 'indices' → logprob: -7.576888084411621
    10. 'input' → logprob: -7.576888084411621

Token 263: ' input' (ID: 3422)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.4695354700088501
    2. 'index' → logprob: -1.34453547000885
    3. ' position' → logprob: -3.3445353507995605
    4. 'position' → logprob: -3.9695353507995605
    5. ' element' → logprob: -4.2195353507995605
    6. 'element' → logprob: -4.2195353507995605
    7. ' current' → logprob: -4.4695353507995605
    8. '_' → logprob: -5.0945353507995605
    9. ' i' → logprob: -5.2195353507995605
    10. 'i' → logprob: -5.9695353507995605

Token 264: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.3572412431240082
    2. '_' → logprob: -1.7322412729263306
    3. '_line' → logprob: -2.607241153717041
    4. ' _' → logprob: -4.107241153717041
    5. '_element' → logprob: -4.857241153717041
    6. '_idx' → logprob: -5.107241153717041
    7. '_number' → logprob: -5.482241153717041
    8. '_i' → logprob: -5.857241153717041
    9. '_token' → logprob: -5.857241153717041
    10. '_position' → logprob: -6.357241153717041

Token 265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015650929883122444
    2. 'in' → logprob: -4.265650749206543
    3. ',' → logprob: -6.765650749206543
    4. ' ' → logprob: -8.140650749206543
    5. ' ,' → logprob: -11.140650749206543
    6. '  ' → logprob: -11.515650749206543
    7. '	in' → logprob: -12.015650749206543
    8. ' ' → logprob: -13.140650749206543
    9. 'range' → logprob: -13.390650749206543
    10. ',in' → logprob: -13.765650749206543

Token 266: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889727503061295
    2. ' range' → logprob: -2.57889723777771
    3. '	range' → logprob: -12.953897476196289
    4. ' ' → logprob: -13.203897476196289
    5. '   ' → logprob: -13.578897476196289
    6. '(range' → logprob: -13.828897476196289
    7. '  ' → logprob: -14.328897476196289
    8. '
' → logprob: -15.328897476196289
    9. 'ange' → logprob: -16.07889747619629
    10. 'rang' → logprob: -16.95389747619629

Token 267: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0002111694193445146
    2. '(' → logprob: -8.500210762023926
    3. 'number' → logprob: -12.000210762023926
    4. '(n' → logprob: -14.375210762023926
    5. ' number' → logprob: -14.625210762023926
    6. '(
' → logprob: -15.625210762023926
    7. '   ' → logprob: -16.250211715698242
    8. '	number' → logprob: -16.625211715698242
    9. ' (' → logprob: -17.500211715698242
    10. '(num' → logprob: -18.125211715698242

Token 268: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0002998312993440777
    2. '_elements' → logprob: -8.125299453735352
    3. 'of' → logprob: -13.625299453735352
    4. '_' → logprob: -13.625299453735352
    5. ' of' → logprob: -15.250299453735352
    6. ')' → logprob: -15.250299453735352
    7. '   ' → logprob: -15.500299453735352
    8. 'Of' → logprob: -16.62529945373535
    9. ' _' → logprob: -16.75029945373535
    10. '_o' → logprob: -16.87529945373535

Token 269: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.5050932168960571
    2. 'elements' → logprob: -1.1300932168960571
    3. 'number' → logprob: -2.6300930976867676
    4. '1' → logprob: -8.255093574523926
    5. ' number' → logprob: -8.505093574523926
    6. '_number' → logprob: -8.630093574523926
    7. ' elements' → logprob: -8.880093574523926
    8. 's' → logprob: -8.880093574523926
    9. '   ' → logprob: -9.130093574523926
    10. 'element' → logprob: -9.630093574523926

Token 270: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.049424491822719574
    2. '):
' → logprob: -3.049424409866333
    3. ',' → logprob: -7.924424648284912
    4. ' ):' → logprob: -8.549424171447754
    5. ')' → logprob: -9.174424171447754
    6. ':' → logprob: -9.674424171447754
    7. '   ' → logprob: -9.674424171447754
    8. '):
' → logprob: -10.674424171447754
    9. ' ):
' → logprob: -11.549424171447754
    10. '+' → logprob: -12.299424171447754

Token 271: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17293670773506165
    2. ' element' → logprob: -2.2979366779327393
    3. ' elements' → logprob: -3.2979366779327393
    4. '       ' → logprob: -4.547936916351318
    5. ' token' → logprob: -6.297936916351318
    6. ' tokens' → logprob: -6.422936916351318
    7. ' line' → logprob: -6.422936916351318
    8. ' input' → logprob: -7.422936916351318
    9. '    
' → logprob: -7.547936916351318
    10. ':' → logprob: -7.547936916351318

Token 272: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' (adapté à ' element') → logprob: -0.2455645054578781
    2. 'value' → logprob: -2.2455644607543945
    3. 'current' → logprob: -3.1205644607543945
    4. 'position' → logprob: -3.2455644607543945
    5. ' element' → logprob: -4.6205644607543945
    6. 'original' → logprob: -4.7455644607543945
    7. 'input' → logprob: -5.9955644607543945
    8. 'per' → logprob: -6.1205644607543945
    9. 'number' → logprob: -6.6205644607543945
    10. ' value' → logprob: -6.9955644607543945

Token 273: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6899317502975464
    2. '_position' → logprob: -1.1899317502975464
    3. ' =' → logprob: -2.689931869506836
    4. '=' → logprob: -2.939931869506836
    5. '_' → logprob: -3.439931869506836
    6. '_index' → logprob: -3.689931869506836
    7. '_number' → logprob: -5.064931869506836
    8. '_id' → logprob: -5.689931869506836
    9. ',' → logprob: -5.689931869506836
    10. '_input' → logprob: -6.689931869506836

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031179025769233704
    2. '=' → logprob: -3.6561789512634277
    3. ',' → logprob: -5.406178951263428
    4. ' ,' → logprob: -8.406179428100586
    5. '=int' → logprob: -8.906179428100586
    6. ' ' → logprob: -12.156179428100586
    7. '   ' → logprob: -12.281179428100586
    8. ',int' → logprob: -12.781179428100586
    9. '=input' → logprob: -13.156179428100586
    10. ' =
' → logprob: -13.781179428100586

Token 275: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009052484296262264
    2. ' int' → logprob: -5.009052276611328
    3. 'read' → logprob: -6.509052276611328
    4. 'next' → logprob: -7.759052276611328
    5. ' read' → logprob: -8.134052276611328
    6. ' next' → logprob: -9.259052276611328
    7. '   ' → logprob: -10.884052276611328
    8. 'input' → logprob: -12.884052276611328
    9. '<int' → logprob: -14.134052276611328
    10. 'list' → logprob: -14.384052276611328

Token 276: '(read' (ID: 45738)
  Prédit: '(read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.500005722045898
    3. 'read' → logprob: -13.000005722045898
    4. '()' → logprob: -17.2500057220459
    5. ' read' → logprob: -17.5000057220459
    6. '	read' → logprob: -17.7500057220459
    7. '(write' → logprob: -17.8750057220459
    8. '(re' → logprob: -18.6250057220459
    9. ' (' → logprob: -18.7500057220459
    10. '(
' → logprob: -18.8750057220459

Token 277: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.02355804108083248
    2. '()' → logprob: -4.023558139801025
    3. '_line' → logprob: -5.648558139801025
    4. '())' → logprob: -6.898558139801025
    5. 'input' → logprob: -7.773558139801025
    6. '_' → logprob: -9.148557662963867
    7. '_index' → logprob: -9.523557662963867
    8. 'line' → logprob: -9.523557662963867
    9. ')' → logprob: -10.398557662963867
    10. 'Input' → logprob: -10.523557662963867

Token 278: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0450049564242363
    2. '())' → logprob: -3.5450048446655273
    3. '()' → logprob: -4.545004844665527
    4. '().' → logprob: -5.920004844665527
    5. 'line' → logprob: -6.545004844665527
    6. ')' → logprob: -8.295004844665527
    7. '.readline' → logprob: -10.170004844665527
    8. '())
' → logprob: -10.795004844665527
    9. 'Line' → logprob: -10.920004844665527
    10. '()
' → logprob: -11.045004844665527

Token 279: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008802590891718864
    2. '()' → logprob: -5.38380241394043
    3. '())
' → logprob: -5.50880241394043
    4. '().' → logprob: -9.50880241394043
    5. '()
' → logprob: -10.88380241394043
    6. ')' → logprob: -11.25880241394043
    7. ' ())' → logprob: -11.75880241394043
    8. '(' → logprob: -13.13380241394043
    9. '())

' → logprob: -13.13380241394043
    10. '()))' → logprob: -13.63380241394043

Token 280: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.41790494322776794
    2. '
' → logprob: -1.6679049730300903
    3. '<|end|>' → logprob: -2.542904853820801
    4. ' -' → logprob: -3.417904853820801
    5. '   ' → logprob: -3.667904853820801
    6. '       ' → logprob: -4.667904853820801
    7. ')' → logprob: -5.917904853820801
    8. '<|end|>' → logprob: -6.542904853820801
    9. ' 
' → logprob: -7.667904853820801
    10. ' ' → logprob: -7.917904853820801

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756085462868214
    2. ' ' → logprob: -4.634756088256836
    3. '<|end|>' → logprob: -15.884756088256836
    4. '   ' → logprob: -18.259756088256836
    5. '```' → logprob: -18.384756088256836
    6. '0' → logprob: -18.884756088256836
    7. '=' → logprob: -19.009756088256836
    8. '
' → logprob: -19.259756088256836
    9. ' ' → logprob: -19.259756088256836
    10. '...' → logprob: -19.759756088256836

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.750003814697266
    4. '<|end|>' → logprob: -18.750003814697266
    5. '{' → logprob: -20.375003814697266
    6. '[' → logprob: -20.875003814697266
    7. '=' → logprob: -21.312503814697266
    8. '   ' → logprob: -21.312503814697266
    9. 'one' → logprob: -21.375003814697266
    10. '۱' → logprob: -21.562503814697266

Token 283: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13266271352767944
    2. '   ' → logprob: -2.132662773132324
    3. '<|end|>' → logprob: -5.757662773132324
    4. '    
' → logprob: -7.632662773132324
    5. ' element' → logprob: -7.882662773132324
    6. '       ' → logprob: -8.007662773132324
    7. 'element' → logprob: -8.132662773132324
    8. ')' → logprob: -8.257662773132324
    9. '
' → logprob: -8.632662773132324
    10. '  
' → logprob: -9.132662773132324

Token 284: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049268584698438644
    2. '   ' → logprob: -4.17426872253418
    3. '<|end|>' → logprob: -4.79926872253418
    4. ' element' → logprob: -4.92426872253418
    5. '    
' → logprob: -5.04926872253418
    6. 'element' → logprob: -5.67426872253418
    7. ' 
' → logprob: -5.79926872253418
    8. '  
' → logprob: -6.54926872253418
    9. '[element' → logprob: -7.42426872253418
    10. '   
' → logprob: -7.42426872253418

Token 285: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' (adapté à ' element') → logprob: -0.2519306540489197
    2. ' element' → logprob: -1.5019307136535645
    3. '	element' → logprob: -14.626930236816406
    4. '   ' → logprob: -15.001930236816406
    5. ' ' → logprob: -15.501930236816406
    6. '
' → logprob: -15.501930236816406
    7. '[element' → logprob: -15.501930236816406
    8. 'position' → logprob: -16.751930236816406
    9. ' 
' → logprob: -17.001930236816406
    10. 'input' → logprob: -17.251930236816406

Token 286: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -2.2842308680992573e-05
    2. '_value' → logprob: -10.875022888183594
    3. '_' → logprob: -12.625022888183594
    4. 'position' → logprob: -15.000022888183594
    5. '_positions' → logprob: -16.500022888183594
    6. '_pos' → logprob: -16.750022888183594
    7. '_index' → logprob: -17.375022888183594
    8. '_location' → logprob: -17.875022888183594
    9. 'Position' → logprob: -18.250022888183594
    10. '_POSITION' → logprob: -18.625022888183594

Token 287: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -3.173704271830502e-06
    2. 'order' → logprob: -13.62500286102295
    3. 's' → logprob: -13.75000286102295
    4. '[' → logprob: -14.50000286102295
    5. '_' → logprob: -16.500003814697266
    6. ' order' → logprob: -16.625003814697266
    7. '_orders' → logprob: -16.625003814697266
    8. 'Order' → logprob: -17.375003814697266
    9. '	order' → logprob: -18.250003814697266
    10. '[_' → logprob: -18.375003814697266

Token 288: '[element' (ID: 186682)
  Prédit: '[element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[element' → logprob: -9.233804303221405e-05
    2. '[' → logprob: -10.000092506408691
    3. '[input' → logprob: -10.000092506408691
    4. '[event' → logprob: -15.250092506408691
    5. '[
' → logprob: -15.250092506408691
    6. ' [' → logprob: -15.500092506408691
    7. '[e' → logprob: -16.000091552734375
    8. '[item' → logprob: -16.125091552734375
    9. '```' → logprob: -16.375091552734375
    10. '[value' → logprob: -16.375091552734375

Token 289: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.03795289248228073
    2. '_index' → logprob: -3.5379528999328613
    3. 'input' → logprob: -5.412952899932861
    4. 'value' → logprob: -6.412952899932861
    5. '_input' → logprob: -6.912952899932861
    6. 'index' → logprob: -7.037952899932861
    7. '_' → logprob: -9.287952423095703
    8. '_position' → logprob: -10.912952423095703
    9. '_values' → logprob: -11.162952423095703
    10. 'element' → logprob: -11.912952423095703

Token 290: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7038927674293518
    2. ' =' → logprob: -0.9538927674293518
    3. ')' → logprob: -2.703892707824707
    4. ']' → logprob: -2.953892707824707
    5. ')=' → logprob: -7.453892707824707
    6. ']=' → logprob: -7.828892707824707
    7. '<|end|>' → logprob: -11.203892707824707
    8. ' )' → logprob: -12.328892707824707
    9. ' ]' → logprob: -12.703892707824707
    10. '[' → logprob: -12.703892707824707

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408103942871094
    2. ' =' → logprob: -0.9740810394287109
    3. '=int' → logprob: -13.599081039428711
    4. '=index' → logprob: -14.099081039428711
    5. '=user' → logprob: -15.474081039428711
    6. ' ' → logprob: -15.724081039428711
    7. '=input' → logprob: -15.724081039428711
    8. '=end' → logprob: -15.849081039428711
    9. '<|end|>' → logprob: -15.849081039428711
    10. ')' → logprob: -15.974081039428711

Token 292: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0380416102707386
    2. ' input' → logprob: -3.288041591644287
    3. 'int' → logprob: -16.413042068481445
    4. '
' → logprob: -17.413042068481445
    5. '[input' → logprob: -17.663042068481445
    6. '(input' → logprob: -18.538042068481445
    7. '<input' → logprob: -18.788042068481445
    8. '	input' → logprob: -19.038042068481445
    9. 'index' → logprob: -19.538042068481445
    10. ' 
' → logprob: -20.038042068481445

Token 293: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.023968398571014404
    2. 'dex' → logprob: -3.773968458175659
    3. 'ex' → logprob: -7.77396821975708
    4. 'index' → logprob: -8.398968696594238
    5. 'x' → logprob: -10.773968696594238
    6. 'd' → logprob: -11.023968696594238
    7. 'dx' → logprob: -11.273968696594238
    8. 't' → logprob: -11.398968696594238
    9. 'nd' → logprob: -11.648968696594238
    10. 'Index' → logprob: -12.773968696594238

Token 294: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14713981747627258
    2. '<|end|>' → logprob: -2.02213978767395
    3. '\n' → logprob: -6.772140026092529
    4. '   ' → logprob: -7.022140026092529
    5. '

' → logprob: -7.272140026092529
    6. '    
' → logprob: -7.397140026092529
    7. 'newline' → logprob: -8.522139549255371
    8. '<|end|>' → logprob: -8.522139549255371
    9. '' → logprob: -9.272139549255371
    10. ')' → logprob: -9.397139549255371

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2898702025413513
    2. 'result' → logprob: -2.414870262145996
    3. '
' → logprob: -3.164870262145996
    4. 'max' → logprob: -3.539870262145996
    5. '    
' → logprob: -3.914870262145996
    6. '```' → logprob: -4.289870262145996
    7. 'current' → logprob: -5.414870262145996
    8. 'n' → logprob: -5.539870262145996
    9. 'remaining' → logprob: -5.539870262145996
    10. ' result' → logprob: -6.164870262145996

Token 296: ' minimum' (ID: 11085)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.4425557851791382
    2. 'mod' → logprob: -1.3175557851791382
    3. 'result' → logprob: -2.8175559043884277
    4. 'max' → logprob: -4.317555904388428
    5. 'answer' → logprob: -6.192555904388428
    6. 'previous' → logprob: -6.442555904388428
    7. 'current' → logprob: -6.692555904388428
    8. 'maximum' → logprob: -6.942555904388428
    9. 'last' → logprob: -7.067555904388428
    10. 'positions' → logprob: -7.067555904388428

Token 297: '_moves' (ID: 110706)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.35651206970214844
    2. '_index' → logprob: -1.9815120697021484
    3. '_' → logprob: -2.7315120697021484
    4. '_value' → logprob: -3.4815120697021484
    5. '_selected' → logprob: -3.9815120697021484
    6. '_positions' → logprob: -4.356512069702148
    7. '_seen' → logprob: -4.481512069702148
    8. '_element' → logprob: -5.356512069702148
    9. '_per' → logprob: -5.856512069702148
    10. '_valid' → logprob: -6.231512069702148

Token 298: '_required' (ID: 44564)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002086023800075054
    2. '=' → logprob: -6.252086162567139
    3. ',' → logprob: -9.00208568572998
    4. '_index' → logprob: -11.37708568572998
    5. ' ,' → logprob: -12.12708568572998
    6. '_positions' → logprob: -12.37708568572998
    7. ' ' → logprob: -12.87708568572998
    8. '<|end|>' → logprob: -13.62708568572998
    9. '_' → logprob: -13.87708568572998
    10. 's' → logprob: -14.50208568572998

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000933017407078296
    2. '=' → logprob: -7.0009331703186035
    3. ',' → logprob: -10.875932693481445
    4. ' ,' → logprob: -13.875932693481445
    5. ' ' → logprob: -14.375932693481445
    6. '<|end|>' → logprob: -15.625932693481445
    7. '=int' → logprob: -15.750932693481445
    8. ' =[' → logprob: -16.000932693481445
    9. ' =
' → logprob: -16.125932693481445
    10. '_' → logprob: -16.125932693481445

Token 300: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11507896333932877
    2. 'number' → logprob: -2.365078926086426
    3. 'float' → logprob: -5.115078926086426
    4. '1' → logprob: -5.365078926086426
    5. ' ' → logprob: -6.990078926086426
    6. 'sys' → logprob: -7.240078926086426
    7. '-' → logprob: -7.490078926086426
    8. 'int' → logprob: -8.240078926086426
    9. 'element' → logprob: -8.240078926086426
    10. 'max' → logprob: -8.240078926086426

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.26932036876678467
    2. 'number' → logprob: -1.8943203687667847
    3. '1' → logprob: -2.519320487976074
    4. 'float' → logprob: -5.519320487976074
    5. 'max' → logprob: -8.394320487976074
    6. 'int' → logprob: -8.519320487976074
    7. 'n' → logprob: -8.894320487976074
    8. '(' → logprob: -9.019320487976074
    9. '[' → logprob: -9.269320487976074
    10. '-' → logprob: -9.394320487976074

Token 302: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005602972581982613
    2. '<|end|>' → logprob: -5.380602836608887
    3. ' 
' → logprob: -8.380602836608887
    4. '' → logprob: -9.005602836608887
    5. '    
' → logprob: -9.630602836608887
    6. '   ' → logprob: -9.630602836608887
    7. ',' → logprob: -9.755602836608887
    8. ' for' → logprob: -9.880602836608887
    9. ' last' → logprob: -9.880602836608887
    10. '
' → logprob: -9.880602836608887

Token 303: '   ' (ID: 271)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.7717108726501465
    2. ' for' → logprob: -1.6467108726501465
    3. ' current' → logprob: -1.6467108726501465
    4. ' previous' → logprob: -3.1467108726501465
    5. 'current' → logprob: -3.5217108726501465
    6. 'for' → logprob: -3.6467108726501465
    7. 'previous' → logprob: -3.8967108726501465
    8. ' prev' → logprob: -4.5217108726501465
    9. 'last' → logprob: -4.6467108726501465
    10. ' sorted' → logprob: -5.5217108726501465

Token 304: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15882356464862823
    2. 'current' (adapté à ' current') → logprob: -3.1588234901428223
    3. 'previous' → logprob: -3.1588234901428223
    4. 'last' → logprob: -3.4088234901428223
    5. 'max' → logprob: -4.783823490142822
    6. 'con' → logprob: -5.033823490142822
    7. 'maximum' → logprob: -5.283823490142822
    8. 'minimum' → logprob: -6.658823490142822
    9. 'sorted' → logprob: -6.783823490142822
    10. 'long' → logprob: -7.158823490142822

Token 305: '_in' (ID: 2267)
  Prédit: '_position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.07138275355100632
    2. '_index' → logprob: -4.071382522583008
    3. '_pos' → logprob: -4.446382522583008
    4. '_' → logprob: -4.696382522583008
    5. '_min' → logprob: -4.696382522583008
    6. '_order' → logprob: -5.071382522583008
    7. '_max' → logprob: -5.446382522583008
    8. '_move' → logprob: -6.196382522583008
    9. '_break' → logprob: -6.696382522583008
    10. '_sequence' → logprob: -6.946382522583008

Token 306: 'creasing' (ID: 57252)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.00175419170409441
    2. 'creasing' → logprob: -7.001754283905029
    3. 'put' → logprob: -8.251753807067871
    4. 'crement' → logprob: -8.626753807067871
    5. 't' → logprob: -9.001753807067871
    6. 'crease' → logprob: -9.626753807067871
    7. 'order' → logprob: -9.876753807067871
    8. 'ex' → logprob: -11.001753807067871
    9. '_' → logprob: -11.126753807067871
    10. 'de' → logprob: -11.376753807067871

Token 307: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.330990195274353
    2. '_run' → logprob: -2.3309903144836426
    3. '_st' → logprob: -2.5809903144836426
    4. '_sub' → logprob: -2.8309903144836426
    5. '_length' → logprob: -3.9559903144836426
    6. '_chain' → logprob: -4.080990314483643
    7. '_segment' → logprob: -5.580990314483643
    8. '_' → logprob: -5.830990314483643
    9. '_count' → logprob: -6.205990314483643
    10. '_sequences' → logprob: -6.705990314483643

Token 308: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.02062784507870674
    2. ' =' → logprob: -4.520627975463867
    3. '=' → logprob: -5.145627975463867
    4. '_' → logprob: -5.895627975463867
    5. '_len' → logprob: -7.520627975463867
    6. '_count' → logprob: -8.895627975463867
    7. '_start' → logprob: -9.395627975463867
    8. ' ' → logprob: -9.895627975463867
    9. '_l' → logprob: -9.895627975463867
    10. '_end' → logprob: -10.770627975463867

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002476604888215661
    2. '=' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.502476692199707
    4. ',' → logprob: -14.752476692199707
    5. ' ,' → logprob: -17.25247573852539
    6. ' +=' → logprob: -17.25247573852539
    7. ' ' → logprob: -17.87747573852539
    8. '  ' → logprob: -19.00247573852539
    9. '	' → logprob: -19.12747573852539
    10. '   ' → logprob: -19.75247573852539

Token 310: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01531897857785225
    2. '0' → logprob: -4.265318870544434
    3. ' ' → logprob: -6.765318870544434
    4. '   ' → logprob: -14.265318870544434
    5. ' ' → logprob: -15.640318870544434
    6. '  ' → logprob: -16.32781982421875
    7. '2' → logprob: -16.39031982421875
    8. '' → logprob: -16.39031982421875
    9. '=' → logprob: -16.57781982421875
    10. '[' → logprob: -16.76531982421875

Token 311: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031797364354133606
    2. '0' → logprob: -5.753179550170898
    3. ' ' → logprob: -13.378179550170898
    4. '2' → logprob: -15.690679550170898
    5. '   ' → logprob: -16.6906795501709
    6. '１' → logprob: -16.9406795501709
    7. '```' → logprob: -17.8156795501709
    8. '[' → logprob: -17.8156795501709
    9. '' → logprob: -18.6906795501709
    10. '۱' → logprob: -18.6906795501709

Token 312: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10602885484695435
    2. ' for' → logprob: -2.9810287952423096
    3. '   ' → logprob: -3.8560287952423096
    4. 'for' → logprob: -4.606029033660889
    5. ' previous' → logprob: -4.981029033660889
    6. ' 
' → logprob: -5.731029033660889
    7. '    
' → logprob: -5.981029033660889
    8. ' last' → logprob: -6.356029033660889
    9. 'previous' → logprob: -6.356029033660889
    10. '\n' → logprob: -6.606029033660889

Token 313: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02029416151344776
    2. 'previous' → logprob: -4.020294189453125
    3. '   ' → logprob: -6.770294189453125
    4. ' for' → logprob: -7.645294189453125
    5. 'last' → logprob: -8.020294189453125
    6. 'prev' → logprob: -8.895294189453125
    7. 'current' → logprob: -10.895294189453125
    8. ' previous' → logprob: -11.395294189453125
    9. '
' → logprob: -11.645294189453125
    10. '    
' → logprob: -11.895294189453125

Token 314: ' previous' (ID: 5880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2687344551086426
    2. 'previous' (adapté à ' previous') → logprob: -1.5187344551086426
    3. 'last' → logprob: -4.143734455108643
    4. 'prev' → logprob: -7.268734455108643
    5. 'current' → logprob: -9.893733978271484
    6. 'prior' → logprob: -10.768733978271484
    7. ' for' → logprob: -11.643733978271484
    8. '   ' → logprob: -11.893733978271484
    9. 'f' → logprob: -12.268733978271484
    10. 'fo' → logprob: -13.393733978271484

Token 315: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.048117704689502716
    2. '=' → logprob: -3.6731176376342773
    3. '_index' → logprob: -4.423117637634277
    4. ' =' → logprob: -5.798117637634277
    5. '_element' → logprob: -5.923117637634277
    6. '_' → logprob: -6.548117637634277
    7. 'position' → logprob: -6.798117637634277
    8. '_pos' → logprob: -7.173117637634277
    9. '_value' → logprob: -8.423117637634277
    10. '_order' → logprob: -9.423117637634277

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519344687461853
    2. '=' → logprob: -1.50193452835083
    3. '=-' → logprob: -13.126934051513672
    4. ',' → logprob: -13.376934051513672
    5. '=None' → logprob: -13.876934051513672
    6. ' ' → logprob: -14.751934051513672
    7. '_' → logprob: -15.376934051513672
    8. '   ' → logprob: -16.126934051513672
    9. ' =
' → logprob: -17.251934051513672
    10. ' None' → logprob: -17.626934051513672

Token 317: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00034511767444200814
    2. ' -' → logprob: -8.125345230102539
    3. 'number' → logprob: -10.500345230102539
    4. '-element' → logprob: -11.750345230102539
    5. '-number' → logprob: -12.000345230102539
    6. '-n' → logprob: -12.500345230102539
    7. '0' → logprob: -13.625345230102539
    8. 'element' → logprob: -14.250345230102539
    9. 'n' → logprob: -14.625345230102539
    10. 'None' → logprob: -15.125345230102539

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.805981972021982e-05
    2. '2' → logprob: -9.25009822845459
    3. '10' → logprob: -14.25009822845459
    4. '100' → logprob: -14.87509822845459
    5. ' ' → logprob: -15.12509822845459
    6. '999' → logprob: -15.25009822845459
    7. '-' → logprob: -15.75009822845459
    8. 'sys' → logprob: -17.000097274780273
    9. 'float' → logprob: -17.750097274780273
    10. '5' → logprob: -18.125097274780273

Token 319: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009438485838472843
    2. ' for' → logprob: -5.259438514709473
    3. ' 
' → logprob: -6.509438514709473
    4. 'for' → logprob: -7.009438514709473
    5. '   ' → logprob: -7.134438514709473
    6. '  
' → logprob: -8.009438514709473
    7. '    
' → logprob: -8.009438514709473
    8. '\n' → logprob: -9.384438514709473
    9. '<|end|>' → logprob: -9.384438514709473
    10. '

' → logprob: -10.134438514709473

Token 320: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5618674755096436
    2. '
' → logprob: -1.1868674755096436
    3. 'for' → logprob: -2.4368674755096436
    4. '   ' → logprob: -3.3118674755096436
    5. '    
' → logprob: -8.311867713928223
    6. '	for' → logprob: -8.811867713928223
    7. ' 
' → logprob: -8.936867713928223
    8. '```' → logprob: -9.061867713928223
    9. '\n' → logprob: -9.561867713928223
    10. '  
' → logprob: -9.936867713928223

Token 321: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.981667537620524e-06
    2. ' for' → logprob: -13.250001907348633
    3. '
' → logprob: -16.500001907348633
    4. '    
' → logprob: -20.375001907348633
    5. 'fo' → logprob: -20.375001907348633
    6. '_for' → logprob: -21.125001907348633
    7. '	for' → logprob: -21.375001907348633
    8. '_' → logprob: -21.625001907348633
    9. '   ' → logprob: -21.750001907348633
    10. 'f' → logprob: -21.875001907348633

Token 322: ' current' (ID: 2208)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.40704452991485596
    2. ' element' → logprob: -1.657044529914856
    3. 'index' → logprob: -3.0320444107055664
    4. 'current' → logprob: -3.6570444107055664
    5. 'i' → logprob: -3.9070444107055664
    6. ' index' → logprob: -4.407044410705566
    7. ' current' → logprob: -4.532044410705566
    8. ' i' → logprob: -4.657044410705566
    9. 'position' → logprob: -4.782044410705566
    10. 'value' → logprob: -5.282044410705566

Token 323: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.17163114249706268
    2. '_index' → logprob: -2.171631097793579
    3. '_' → logprob: -3.671631097793579
    4. '_pos' → logprob: -4.796631336212158
    5. ' in' → logprob: -5.421631336212158
    6. '_value' → logprob: -5.921631336212158
    7. '_in' → logprob: -7.046631336212158
    8. '_element' → logprob: -7.171631336212158
    9. ' _' → logprob: -7.796631336212158
    10. '_idx' → logprob: -7.796631336212158

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10022058337926865
    2. 'in' → logprob: -2.3502206802368164
    3. ',' → logprob: -12.350220680236816
    4. ' ' → logprob: -12.850220680236816
    5. 'In' → logprob: -13.100220680236816
    6. '	in' → logprob: -13.350220680236816
    7. '_in' → logprob: -13.725220680236816
    8. ' ' → logprob: -14.475220680236816
    9. '=' → logprob: -15.350220680236816
    10. '   ' → logprob: -15.600220680236816

Token 325: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.002530118217691779
    2. 'range' → logprob: -6.377530097961426
    3. ' element' → logprob: -7.127530097961426
    4. ' range' → logprob: -10.877530097961426
    5. '[element' → logprob: -13.377530097961426
    6. '   ' → logprob: -13.877530097961426
    7. 'elem' → logprob: -14.002530097961426
    8. ' ' → logprob: -14.127530097961426
    9. '	element' → logprob: -14.502530097961426
    10. 'enumer' → logprob: -15.002530097961426

Token 326: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -12.500006675720215
    3. '_positions' → logprob: -13.375006675720215
    4. 's' → logprob: -14.500006675720215
    5. '_pos' → logprob: -15.125006675720215
    6. '_index' → logprob: -15.875006675720215
    7. 'position' → logprob: -16.12500762939453
    8. ' _' → logprob: -17.00000762939453
    9. '_range' → logprob: -17.37500762939453
    10. '_value' → logprob: -17.50000762939453

Token 327: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.5451681974809617e-05
    2. '_position' → logprob: -11.375015258789062
    3. 'order' → logprob: -13.500015258789062
    4. '_range' → logprob: -14.250015258789062
    5. '_' → logprob: -14.500015258789062
    6. '_positions' → logprob: -14.500015258789062
    7. 's' → logprob: -15.125015258789062
    8. '_orders' → logprob: -15.875015258789062
    9. '_ord' → logprob: -16.125015258789062
    10. 'Order' → logprob: -16.375015258789062

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008628406561911106
    2. ':
' → logprob: -4.7586283683776855
    3. '):' → logprob: -12.758628845214844
    4. '):
' → logprob: -12.883628845214844
    5. ' :' → logprob: -13.258628845214844
    6. '   ' → logprob: -13.258628845214844
    7. ',' → logprob: -13.383628845214844
    8. ':

' → logprob: -14.383628845214844
    9. ':
' → logprob: -14.508628845214844
    10. '       ' → logprob: -14.883628845214844

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002019907406065613
    2. ' if' → logprob: -9.750202178955078
    3. '   ' → logprob: -9.875202178955078
    4. '```' → logprob: -10.000202178955078
    5. '<|end|>' → logprob: -11.000202178955078
    6. '    ' → logprob: -12.500202178955078
    7. '        
' → logprob: -12.750202178955078
    8. '  
' → logprob: -12.875202178955078
    9. ',' → logprob: -13.250202178955078
    10. '
' → logprob: -13.500202178955078

Token 330: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2589382529258728
    2. 'if' (adapté à ' if') → logprob: -1.5089383125305176
    3. '       ' → logprob: -5.133938312530518
    4. '   ' → logprob: -6.883938312530518
    5. '	if' → logprob: -10.00893783569336
    6. '```' → logprob: -11.75893783569336
    7. '    ' → logprob: -12.75893783569336
    8. '
' → logprob: -12.75893783569336
    9. ' ' → logprob: -13.00893783569336
    10. '           ' → logprob: -13.25893783569336

Token 331: ' previous' (ID: 5880)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3424636721611023
    2. ' current' → logprob: -1.467463731765747
    3. 'previous' → logprob: -2.967463731765747
    4. ' previous' → logprob: -4.842463493347168
    5. '   ' → logprob: -9.842463493347168
    6. ' ' → logprob: -10.342463493347168
    7. '	current' → logprob: -11.092463493347168
    8. 'prev' → logprob: -11.967463493347168
    9. '(current' → logprob: -12.154963493347168
    10. 'urrent' → logprob: -12.154963493347168

Token 332: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0009564821957610548
    2. '_' → logprob: -7.1259565353393555
    3. '+' → logprob: -10.250956535339355
    4. '_pos' → logprob: -10.750956535339355
    5. ' _' → logprob: -10.750956535339355
    6. ' <' → logprob: -10.875956535339355
    7. ' +' → logprob: -11.250956535339355
    8. '<' → logprob: -11.500956535339355
    9. ' ' → logprob: -12.375956535339355
    10. ')' → logprob: -12.500956535339355

Token 333: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.012929493561387062
    2. ' <' → logprob: -4.387929439544678
    3. '>=' → logprob: -7.887929439544678
    4. ' >=' → logprob: -10.887929916381836
    5. '<int' → logprob: -11.387929916381836
    6. '>' → logprob: -12.762929916381836
    7. ' ' → logprob: -13.262929916381836
    8. '==' → logprob: -13.637929916381836
    9. '<
' → logprob: -13.762929916381836
    10. '+' → logprob: -13.887929916381836

Token 334: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.07896789163351059
    2. ' current' → logprob: -2.578967809677124
    3. '0' → logprob: -10.453968048095703
    4. '=current' → logprob: -10.453968048095703
    5. ' ' → logprob: -11.703968048095703
    6. '=' → logprob: -12.578968048095703
    7. 'urrent' → logprob: -13.328968048095703
    8. '	current' → logprob: -13.703968048095703
    9. '$current' → logprob: -13.703968048095703
    10. '_current' → logprob: -14.078968048095703

Token 335: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -1.9504606825648807e-05
    2. 'position' → logprob: -11.000019073486328
    3. '_' → logprob: -13.250019073486328
    4. ' _' → logprob: -15.000019073486328
    5. '_pos' → logprob: -15.750019073486328
    6. 'Position' → logprob: -15.750019073486328
    7. '_POSITION' → logprob: -17.125019073486328
    8. ' ' → logprob: -17.250019073486328
    9. 'osition' → logprob: -17.250019073486328
    10. ' position' → logprob: -17.375019073486328

Token 336: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04654140770435333
    2. ':
' → logprob: -3.171541452407837
    3. '       ' → logprob: -6.046541213989258
    4. '+' → logprob: -7.796541213989258
    5. ' and' → logprob: -7.921541213989258
    6. ' +' → logprob: -8.546541213989258
    7. ' :' → logprob: -9.796541213989258
    8. '   ' → logprob: -10.296541213989258
    9. ' or' → logprob: -10.421541213989258
    10. '           ' → logprob: -10.671541213989258

Token 337: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14344651997089386
    2. 'current' → logprob: -3.018446445465088
    3. ' current' → logprob: -3.143446445465088
    4. '           ' → logprob: -3.268446445465088
    5. '	       ' → logprob: -6.268446445465088
    6. '	   ' → logprob: -7.143446445465088
    7. '	current' → logprob: -7.768446445465088
    8. '   ' → logprob: -8.893446922302246
    9. '```' → logprob: -9.518446922302246
    10. '	' → logprob: -10.518446922302246

Token 338: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.505133330821991
    2. '       ' → logprob: -1.5051333904266357
    3. 'current' (adapté à ' current') → logprob: -1.7551333904266357
    4. '           ' → logprob: -7.255133152008057
    5. '	current' → logprob: -7.380133152008057
    6. '   ' → logprob: -8.130133628845215
    7. '	       ' → logprob: -10.630133628845215
    8. '	' → logprob: -11.130133628845215
    9. 'Current' → logprob: -11.255133628845215
    10. '	   ' → logprob: -12.130133628845215

Token 339: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. '_current' → logprob: -16.625
    4. '_position' → logprob: -16.875
    5. '_increment' → logprob: -16.875
    6. 'Increasing' → logprob: -17.25
    7. 'in' → logprob: -18.625
    8. '_i' → logprob: -18.75
    9. '
' → logprob: -19.375
    10. '```' → logprob: -19.375

Token 340: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.003554812166839838
    2. 'in' → logprob: -5.753554821014404
    3. '_in' → logprob: -8.628554344177246
    4. 'cre' → logprob: -9.878554344177246
    5. 're' → logprob: -10.003554344177246
    6. '_cre' → logprob: -10.128554344177246
    7. '```' → logprob: -11.503554344177246
    8. 'creating' → logprob: -12.003554344177246
    9. '_sequence' → logprob: -12.128554344177246
    10. 'Increasing' → logprob: -12.253554344177246

Token 341: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.00026181264547631145
    2. 'sequence' → logprob: -8.250262260437012
    3. '_length' → logprob: -15.250262260437012
    4. ' sequence' → logprob: -15.875262260437012
    5. '_sequences' → logprob: -16.250261306762695
    6. 'Sequence' → logprob: -17.000261306762695
    7. '_seq' → logprob: -17.500261306762695
    8. 'current' → logprob: -17.625261306762695
    9. '_current' → logprob: -18.125261306762695
    10. '_' → logprob: -18.625261306762695

Token 342: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.016738448292016983
    2. '+=' → logprob: -4.266738414764404
    3. ' +=' → logprob: -6.391738414764404
    4. 'length' → logprob: -7.516738414764404
    5. '_' → logprob: -8.641738891601562
    6. '+' → logprob: -9.766738891601562
    7. 'Length' → logprob: -10.516738891601562
    8. '_len' → logprob: -11.016738891601562
    9. '   ' → logprob: -11.391738891601562
    10. 's' → logprob: -11.516738891601562

Token 343: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20142170786857605
    2. '+=' → logprob: -1.7014217376708984
    3. '=' → logprob: -12.201421737670898
    4. ']+=' → logprob: -13.326421737670898
    5. ' =' → logprob: -14.201421737670898
    6. '   ' → logprob: -14.326421737670898
    7. ' ' → logprob: -15.201421737670898
    8. '	' → logprob: -16.2014217376709
    9. ' ' → logprob: -16.7014217376709
    10. '+='' → logprob: -17.5764217376709

Token 344: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.750028610229492
    4. '```' → logprob: -18.750028610229492
    5. '<|end|>' → logprob: -20.250028610229492
    6. '  ' → logprob: -20.875028610229492
    7. '
' → logprob: -21.000028610229492
    8. ' ' → logprob: -21.250028610229492
    9. '۱' → logprob: -21.687528610229492
    10. '0' → logprob: -21.750028610229492

Token 345: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.250001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '
' → logprob: -20.000001907348633
    6. '<|end|>' → logprob: -20.250001907348633
    7. '۱' → logprob: -21.250001907348633
    8. ' ' → logprob: -21.500001907348633
    9. '`' → logprob: -21.937501907348633
    10. 'current' → logprob: -22.125001907348633

Token 346: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25828486680984497
    2. 'else' → logprob: -1.6332848072052002
    3. ' else' → logprob: -3.7582848072052
    4. '
' → logprob: -4.758285045623779
    5. '<|end|>' → logprob: -8.883284568786621
    6. '}else' → logprob: -9.508284568786621
    7. '#else' → logprob: -9.758284568786621
    8. '   ' → logprob: -9.883284568786621
    9. '_else' → logprob: -11.008284568786621
    10. '```' → logprob: -11.133284568786621

Token 347: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5490298867225647
    2. '       ' → logprob: -0.9240298867225647
    3. ' else' → logprob: -3.67402982711792
    4. '   ' → logprob: -9.674030303955078
    5. '```' → logprob: -10.424030303955078
    6. '#else' → logprob: -10.549030303955078
    7. '}else' → logprob: -10.924030303955078
    8. '<|end|>' → logprob: -11.049030303955078
    9. '           ' → logprob: -11.424030303955078
    10. '	else' → logprob: -11.799030303955078

Token 348: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03020952269434929
    2. ' else' → logprob: -3.530209541320801
    3. '       ' → logprob: -7.780209541320801
    4. '   ' → logprob: -10.6552095413208
    5. '	else' → logprob: -11.5302095413208
    6. '_else' → logprob: -13.1552095413208
    7. '```' → logprob: -13.1552095413208
    8. '
' → logprob: -13.7802095413208
    9. 'elif' → logprob: -14.0302095413208
    10. '}else' → logprob: -14.0302095413208

Token 349: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20995232462882996
    2. ':' → logprob: -2.3349523544311523
    3. '       ' → logprob: -2.7099523544311523
    4. 'current' → logprob: -4.334952354431152
    5. ' current' → logprob: -5.084952354431152
    6. '           ' → logprob: -5.584952354431152
    7. ',current' → logprob: -7.209952354431152
    8. '   ' → logprob: -7.334952354431152
    9. ',' → logprob: -7.584952354431152
    10. '_current' → logprob: -7.709952354431152

Token 350: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08830616623163223
    2. 'minimum' → logprob: -2.713306188583374
    3. 'current' → logprob: -4.338305950164795
    4. ' current' → logprob: -6.213305950164795
    5. '           ' → logprob: -6.463305950164795
    6. ' minimum' → logprob: -6.713305950164795
    7. '   ' → logprob: -9.588306427001953
    8. '
' → logprob: -9.713306427001953
    9. 'minimal' → logprob: -9.713306427001953
    10. '```' → logprob: -9.838306427001953

Token 351: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' (adapté à ' minimum') → logprob: -0.002014763653278351
    2. 'if' → logprob: -6.627014636993408
    3. '   ' → logprob: -7.877014636993408
    4. 'min' → logprob: -9.377015113830566
    5. ' minimum' → logprob: -9.877015113830566
    6. '       ' → logprob: -9.877015113830566
    7. 'minimal' → logprob: -10.002015113830566
    8. '           ' → logprob: -10.127015113830566
    9. 'current' → logprob: -10.752015113830566
    10. 'maximum' → logprob: -11.752015113830566

Token 352: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -2.975612187583465e-05
    2. '_' → logprob: -10.625029563903809
    3. '_move' → logprob: -12.375029563903809
    4. 'moves' → logprob: -14.750029563903809
    5. '_mov' → logprob: -14.750029563903809
    6. '_m' → logprob: -15.875029563903809
    7. '_
' → logprob: -16.375030517578125
    8. ' _' → logprob: -17.250030517578125
    9. '_changes' → logprob: -17.625030517578125
    10. '_movies' → logprob: -17.750030517578125

Token 353: '_required' (ID: 44564)
  Prédit: '_required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_required' → logprob: -4.56102097814437e-05
    2. 'required' → logprob: -10.750045776367188
    3. '_' → logprob: -10.875045776367188
    4. '=' → logprob: -13.625045776367188
    5. '_needed' → logprob: -13.625045776367188
    6. ' =' → logprob: -14.000045776367188
    7. '_REQUIRED' → logprob: -14.750045776367188
    8. 'Required' → logprob: -14.875045776367188
    9. '	required' → logprob: -15.250045776367188
    10. '_require' → logprob: -15.375045776367188

Token 354: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.031231136992573738
    2. ' =' → logprob: -3.656231164932251
    3. '+=' → logprob: -5.406230926513672
    4. '=' → logprob: -7.781230926513672
    5. ' ' → logprob: -11.406230926513672
    6. ' +' → logprob: -14.281230926513672
    7. '+' → logprob: -14.531230926513672
    8. ' -=' → logprob: -15.406230926513672
    9. '    ' → logprob: -16.531230926513672
    10. ' |=' → logprob: -17.031230926513672

Token 355: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7079851627349854
    2. ' max' → logprob: -0.8329851627349854
    3. ' current' → logprob: -2.9579851627349854
    4. 'current' → logprob: -3.9579851627349854
    5. 'min' → logprob: -7.957984924316406
    6. ' maximum' → logprob: -8.082984924316406
    7. 'maximum' → logprob: -8.082984924316406
    8. 'minimum' → logprob: -8.457984924316406
    9. ' min' → logprob: -9.707984924316406
    10. ' minimum' → logprob: -9.832984924316406

Token 356: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0005549400229938328
    2. '(' → logprob: -7.500555038452148
    3. '(current' → logprob: -14.000555038452148
    4. 'minimum' → logprob: -14.250555038452148
    5. '(
' → logprob: -15.250555038452148
    6. '(max' → logprob: -16.25055503845215
    7. ' (' → logprob: -16.25055503845215
    8. 'min' → logprob: -17.37555503845215
    9. '	min' → logprob: -18.12555503845215
    10. '(previous' → logprob: -18.25055503845215

Token 357: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.008451573550701141
    2. '_moves' → logprob: -4.883451461791992
    3. 'mum' → logprob: -8.758451461791992
    4. 'im' → logprob: -8.758451461791992
    5. 'inum' → logprob: -8.883451461791992
    6. 'um' → logprob: -9.008451461791992
    7. 'in' → logprob: -10.008451461791992
    8. 'ium' → logprob: -10.133451461791992
    9. 'moves' → logprob: -10.383451461791992
    10. 'em' → logprob: -10.508451461791992

Token 358: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -7.803360495017841e-05
    2. 'moves' → logprob: -10.250078201293945
    3. '_required' → logprob: -10.375078201293945
    4. 'Moves' → logprob: -12.750078201293945
    5. '```' → logprob: -13.000078201293945
    6. '_' → logprob: -13.250078201293945
    7. '_move' → logprob: -13.625078201293945
    8. '_needed' → logprob: -14.625078201293945
    9. 'required' → logprob: -14.875078201293945
    10. '
' → logprob: -14.875078201293945

Token 359: '_required' (ID: 44564)
  Prédit: '_required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_required' → logprob: -4.870950215263292e-05
    2. 'required' → logprob: -10.000048637390137
    3. '_current' → logprob: -13.875048637390137
    4. '
' → logprob: -15.375048637390137
    5. '   ' → logprob: -15.375048637390137
    6. 'Required' → logprob: -15.375048637390137
    7. '_needed' → logprob: -15.625048637390137
    8. ')' → logprob: -15.750048637390137
    9. '_' → logprob: -15.750048637390137
    10. '...' → logprob: -15.750048637390137

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025963459629565477
    2. ',current' → logprob: -6.002596378326416
    3. 'current' → logprob: -9.252595901489258
    4. ' ,' → logprob: -11.127595901489258
    5. ',
' → logprob: -11.877595901489258
    6. ' current' → logprob: -13.252595901489258
    7. '(current' → logprob: -15.002595901489258
    8. 'Current' → logprob: -15.502595901489258
    9. ')' → logprob: -15.877595901489258
    10. '   ' → logprob: -16.002595901489258

Token 361: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014164329506456852
    2. ' current' → logprob: -4.264164447784424
    3. '   ' → logprob: -14.389163970947266
    4. '           ' → logprob: -16.264163970947266
    5. '
' → logprob: -16.389163970947266
    6. '	current' → logprob: -17.514163970947266
    7. '       ' → logprob: -18.389163970947266
    8. '$current' → logprob: -18.514163970947266
    9. 'curr' → logprob: -18.764163970947266
    10. '```' → logprob: -19.264163970947266

Token 362: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -6.704273118884885e-07
    2. '_current' → logprob: -14.625000953674316
    3. '_position' → logprob: -16.125
    4. '_' → logprob: -16.875
    5. '_sequence' → logprob: -17.875
    6. '_increment' → logprob: -18.0
    7. 'Increasing' → logprob: -18.5
    8. 'in' → logprob: -18.5
    9. '```' → logprob: -18.625
    10. '_length' → logprob: -18.75

Token 363: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.0020314191933721304
    2. 'in' → logprob: -6.877031326293945
    3. 're' → logprob: -7.002031326293945
    4. '_in' → logprob: -10.627031326293945
    5. 'cre' → logprob: -11.127031326293945
    6. 'Increasing' → logprob: -11.252031326293945
    7. '```' → logprob: -12.127031326293945
    8. 'e' → logprob: -12.252031326293945
    9. ' increasing' → logprob: -12.752031326293945
    10. '_re' → logprob: -12.877031326293945

Token 364: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.061971161514520645
    2. 'sequence' → logprob: -2.8119711875915527
    3. ' sequence' → logprob: -13.436970710754395
    4. 'current' → logprob: -13.561970710754395
    5. 'Sequence' → logprob: -15.061970710754395
    6. '_sequences' → logprob: -15.311970710754395
    7. 'quence' → logprob: -16.68697166442871
    8. 'sequ' → logprob: -16.68697166442871
    9. 'seq' → logprob: -17.31197166442871
    10. '_SEQUENCE' → logprob: -17.43697166442871

Token 365: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.723973582556937e-05
    2. 'length' → logprob: -11.125017166137695
    3. 'ength' → logprob: -13.625017166137695
    4. '_sequence' → logprob: -14.375017166137695
    5. '_len' → logprob: -15.500017166137695
    6. '_' → logprob: -16.000017166137695
    7. '_l' → logprob: -16.125017166137695
    8. 'Length' → logprob: -16.875017166137695
    9. '   ' → logprob: -16.875017166137695
    10. '_lengths' → logprob: -17.125017166137695

Token 366: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008784741163253784
    2. ')' → logprob: -5.508784770965576
    3. 'current' → logprob: -5.883784770965576
    4. '       ' → logprob: -6.633784770965576
    5. '
' → logprob: -8.258784294128418
    6. '   ' → logprob: -8.508784294128418
    7. ' current' → logprob: -9.633784294128418
    8. '_current' → logprob: -10.383784294128418
    9. ')

' → logprob: -12.008784294128418
    10. '           ' → logprob: -12.258784294128418

Token 367: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4549345076084137
    2. 'current' → logprob: -1.2049344778060913
    3. '
' → logprob: -3.079934597015381
    4. ' current' → logprob: -4.204934597015381
    5. '        
' → logprob: -6.329934597015381
    6. '   ' → logprob: -6.329934597015381
    7. '	current' → logprob: -8.329934120178223
    8. ',current' → logprob: -8.454934120178223
    9. '[current' → logprob: -8.579934120178223
    10. '_current' → logprob: -8.954934120178223

Token 368: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.0005539863486774266
    2. ' current' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.500554084777832
    4. '
' → logprob: -15.375554084777832
    5. '           ' → logprob: -16.250553131103516
    6. '	current' → logprob: -17.000553131103516
    7. '_current' → logprob: -18.125553131103516
    8. '.current' → logprob: -18.125553131103516
    9. 'Current' → logprob: -18.375553131103516
    10. 'previous' → logprob: -18.625553131103516

Token 369: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.5
    3. '_current' → logprob: -17.75
    4. 'in' → logprob: -17.875
    5. '_increment' → logprob: -18.25
    6. '_position' → logprob: -18.625
    7. '_ind' → logprob: -18.75
    8. '_is' → logprob: -19.0
    9. '_
' → logprob: -19.5
    10. '_i' → logprob: -19.625

Token 370: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -0.006996558513492346
    2. 'in' → logprob: -5.0069966316223145
    3. 'sequence' → logprob: -9.131996154785156
    4. '_in' → logprob: -9.631996154785156
    5. '_sequence' → logprob: -10.006996154785156
    6. 'cre' → logprob: -10.756996154785156
    7. '_' → logprob: -11.756996154785156
    8. 'Increasing' → logprob: -12.006996154785156
    9. '_cre' → logprob: -12.131996154785156
    10. '```' → logprob: -12.631996154785156

Token 371: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.005236479919403791
    2. 'sequence' → logprob: -5.255236625671387
    3. ' sequence' → logprob: -13.505236625671387
    4. 'Sequence' → logprob: -14.130236625671387
    5. '_length' → logprob: -14.880236625671387
    6. '_sequences' → logprob: -16.00523567199707
    7. '_position' → logprob: -17.00523567199707
    8. '_SEQUENCE' → logprob: -17.50523567199707
    9. '_seq' → logprob: -17.63023567199707
    10. 'sequ' → logprob: -18.25523567199707

Token 372: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.225939872208983e-05
    2. 'length' → logprob: -10.375032424926758
    3. 'ength' → logprob: -15.125032424926758
    4. 'Length' → logprob: -15.375032424926758
    5. '_len' → logprob: -16.250032424926758
    6. '```' → logprob: -16.250032424926758
    7. '   ' → logprob: -16.750032424926758
    8. '_l' → logprob: -17.250032424926758
    9. '_lengths' → logprob: -17.500032424926758
    10. '=' → logprob: -17.500032424926758

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170225441455841
    2. ' =' → logprob: -6.7511701583862305
    3. '1' → logprob: -17.251171112060547
    4. '0' → logprob: -18.876171112060547
    5. '＝' → logprob: -19.001171112060547
    6. '=
' → logprob: -19.501171112060547
    7. '=int' → logprob: -19.626171112060547
    8. '.=' → logprob: -20.126171112060547
    9. '<|end|>' → logprob: -20.251171112060547
    10. '=

' → logprob: -20.501171112060547

Token 374: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -17.875003814697266
    4. '   ' → logprob: -19.625003814697266
    5. '۱' → logprob: -20.750003814697266
    6. '' → logprob: -20.812503814697266
    7. '```' → logprob: -21.375003814697266
    8. '１' → logprob: -21.750003814697266
    9. '١' → logprob: -22.125003814697266
    10. '१' → logprob: -22.250003814697266

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '0' → logprob: -18.5
    4. '   ' → logprob: -20.875
    5. '' → logprob: -21.25
    6. '۱' → logprob: -21.75
    7. '```' → logprob: -22.25
    8. '１' → logprob: -22.375
    9. '१' → logprob: -23.1875
    10. '١' → logprob: -23.3125

Token 376: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044625066220760345
    2. 'previous' → logprob: -3.5446250438690186
    3. '
' → logprob: -4.919625282287598
    4. '   ' → logprob: -5.044625282287598
    5. ' previous' → logprob: -7.044625282287598
    6. '        
' → logprob: -9.669625282287598
    7. '           ' → logprob: -10.544625282287598
    8. '
' → logprob: -11.169625282287598
    9. '(previous' → logprob: -11.294625282287598
    10. '_previous' → logprob: -12.044625282287598

Token 377: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07089737802743912
    2. 'previous' → logprob: -2.945897340774536
    3. '
' → logprob: -4.570897579193115
    4. ' previous' → logprob: -5.445897579193115
    5. '   ' → logprob: -6.945897579193115
    6. '(previous' → logprob: -9.320897102355957
    7. '        
' → logprob: -9.820897102355957
    8. '.previous' → logprob: -10.695897102355957
    9. '_previous' → logprob: -10.945897102355957
    10. '           ' → logprob: -10.945897102355957

Token 378: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' (adapté à ' previous') → logprob: -0.004571103490889072
    2. ' previous' → logprob: -5.504570960998535
    3. '   ' → logprob: -8.004570960998535
    4. '       ' → logprob: -8.754570960998535
    5. '.previous' → logprob: -14.254570960998535
    6. '_previous' → logprob: -17.00457191467285
    7. '(previous' → logprob: -17.62957191467285
    8. '  ' → logprob: -18.12957191467285
    9. '           ' → logprob: -18.37957191467285
    10. ' ' → logprob: -18.87957191467285

Token 379: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0006313055637292564
    2. '_' → logprob: -7.375631332397461
    3. '=' → logprob: -13.500631332397461
    4. '_pos' → logprob: -13.750631332397461
    5. '_positions' → logprob: -14.500631332397461
    6. ' _' → logprob: -14.625631332397461
    7. 'position' → logprob: -15.250631332397461
    8. '=_' → logprob: -15.250631332397461
    9. '_=' → logprob: -15.375631332397461
    10. '_Position' → logprob: -15.375631332397461

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '=current' → logprob: -18.038042068481445
    4. ',' → logprob: -18.913042068481445
    5. ' ' → logprob: -19.163042068481445
    6. '＝' → logprob: -19.538042068481445
    7. '_=' → logprob: -19.788042068481445
    8. '_' → logprob: -19.788042068481445
    9. '=}' → logprob: -20.913042068481445
    10. '=user' → logprob: -21.038042068481445

Token 381: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0005530327325686812
    2. ' current' → logprob: -7.500553131103516
    3. '$current' → logprob: -19.000553131103516
    4. '_current' → logprob: -19.375553131103516
    5. 'cur' → logprob: -19.375553131103516
    6. '	current' → logprob: -20.625553131103516
    7. 'c' → logprob: -21.375553131103516
    8. '[current' → logprob: -21.500553131103516
    9. '(current' → logprob: -21.875553131103516
    10. '.current' → logprob: -22.000553131103516

Token 382: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -5.438573680294212e-06
    2. 'position' → logprob: -12.375005722045898
    3. '_' → logprob: -13.875005722045898
    4. ' _' → logprob: -16.0000057220459
    5. '_pos' → logprob: -16.1250057220459
    6. '_positions' → logprob: -18.0000057220459
    7. '_POSITION' → logprob: -18.5000057220459
    8. '_token' → logprob: -18.7500057220459
    9. 'Position' → logprob: -19.1250057220459
    10. '_value' → logprob: -19.3750057220459

Token 383: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06191793084144592
    2. 'minimum' → logprob: -3.311918020248413
    3. '
' → logprob: -4.311917781829834
    4. ' minimum' → logprob: -4.686917781829834
    5. '    
' → logprob: -7.311917781829834
    6. 'min' → logprob: -8.811918258666992
    7. '```' → logprob: -10.686918258666992
    8. ' return' → logprob: -10.936918258666992
    9. 'current' → logprob: -11.186918258666992
    10. '        
' → logprob: -11.311918258666992

Token 384: '   ' (ID: 271)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.002304293215274811
    2. '   ' → logprob: -6.3773040771484375
    3. ' minimum' → logprob: -7.8773040771484375
    4. 'min' → logprob: -9.377304077148438
    5. 'current' → logprob: -9.627304077148438
    6. '
' → logprob: -9.877304077148438
    7. 'if' → logprob: -12.252304077148438
    8. 'return' → logprob: -12.752304077148438
    9. '```' → logprob: -12.752304077148438
    10. 'minimal' → logprob: -12.752304077148438

Token 385: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' (adapté à ' minimum') → logprob: -1.0445127372804563e-05
    2. 'min' → logprob: -12.00001049041748
    3. ' minimum' → logprob: -12.87501049041748
    4. 'print' → logprob: -13.87501049041748
    5. 'return' → logprob: -14.50001049041748
    6. '   ' → logprob: -15.87501049041748
    7. 'minimal' → logprob: -16.500009536743164
    8. 'maximum' → logprob: -17.000009536743164
    9. '
' → logprob: -17.625009536743164
    10. '#' → logprob: -17.625009536743164

Token 386: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -7.584239938296378e-06
    2. 'moves' → logprob: -12.375007629394531
    3. '_' → logprob: -12.875007629394531
    4. '_move' → logprob: -14.375007629394531
    5. '_mov' → logprob: -16.62500762939453
    6. 'Moves' → logprob: -16.87500762939453
    7. ' _' → logprob: -17.37500762939453
    8. '```' → logprob: -17.62500762939453
    9. '_m' → logprob: -17.87500762939453
    10. '_movies' → logprob: -18.12500762939453

Token 387: '_required' (ID: 44564)
  Prédit: '_required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_required' → logprob: -4.36574100604048e-06
    2. 'required' → logprob: -12.625004768371582
    3. '_needed' → logprob: -14.625004768371582
    4. '_' → logprob: -14.750004768371582
    5. '=' → logprob: -17.125003814697266
    6. ' =' → logprob: -17.375003814697266
    7. '_REQUIRED' → logprob: -17.500003814697266
    8. '	required' → logprob: -17.875003814697266
    9. '_requires' → logprob: -18.625003814697266
    10. 'Required' → logprob: -19.000003814697266

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26562488079071045
    2. '=' → logprob: -1.5156248807907104
    3. '=max' → logprob: -4.890625
    4. ' +=' → logprob: -5.515625
    5. '+=' → logprob: -6.640625
    6. ' ' → logprob: -9.015625
    7. 'max' → logprob: -9.140625
    8. ',' → logprob: -9.515625
    9. '<|end|>' → logprob: -9.640625
    10. '+' → logprob: -9.765625

Token 389: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5759396553039551
    2. ' max' → logprob: -0.8259396553039551
    3. '(max' → logprob: -16.325939178466797
    4. '	max' → logprob: -16.325939178466797
    5. ' ' → logprob: -17.825939178466797
    6. '[max' → logprob: -17.950939178466797
    7. '=max' → logprob: -18.575939178466797
    8. ' ' → logprob: -18.700939178466797
    9. '_max' → logprob: -19.075939178466797
    10. '   ' → logprob: -19.325939178466797

Token 390: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.375011444091797
    3. '(max' → logprob: -15.625011444091797
    4. '(
' → logprob: -18.500011444091797
    5. 'minimum' → logprob: -19.125011444091797
    6. '```' → logprob: -20.125011444091797
    7. ' (' → logprob: -20.375011444091797
    8. '	min' → logprob: -21.500011444091797
    9. '(previous' → logprob: -22.125011444091797
    10. '(M' → logprob: -22.125011444091797

Token 391: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -4.2987729102605954e-05
    2. '_moves' → logprob: -10.375042915344238
    3. 'im' → logprob: -11.625042915344238
    4. 'inum' → logprob: -14.375042915344238
    5. 'minimum' → logprob: -14.375042915344238
    6. '(min' → logprob: -14.500042915344238
    7. 'mum' → logprob: -15.375042915344238
    8. 'moves' → logprob: -15.625042915344238
    9. 'IMUM' → logprob: -15.875042915344238
    10. 'in' → logprob: -16.125043869018555

Token 392: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.00018339496455155313
    2. '_sequence' → logprob: -9.00018310546875
    3. 'moves' → logprob: -10.75018310546875
    4. '_required' → logprob: -11.00018310546875
    5. '_sequences' → logprob: -12.37518310546875
    6. 'Moves' → logprob: -12.37518310546875
    7. 'sequence' → logprob: -12.62518310546875
    8. 'minimum' → logprob: -13.37518310546875
    9. '(current' → logprob: -13.75018310546875
    10. '```' → logprob: -13.87518310546875

Token 393: '_required' (ID: 44564)
  Prédit: '_required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_required' → logprob: -0.0004350797680672258
    2. 'required' → logprob: -7.750434875488281
    3. 'quired' → logprob: -12.875434875488281
    4. 'Required' → logprob: -13.500434875488281
    5. '(required' → logprob: -16.00043487548828
    6. '```' → logprob: -16.12543487548828
    7. '   ' → logprob: -16.75043487548828
    8. '_REQUIRED' → logprob: -16.87543487548828
    9. '
' → logprob: -17.12543487548828
    10. '_needed' → logprob: -17.50043487548828

Token 394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003391574718989432
    2. ',current' → logprob: -8.00033950805664
    3. 'current' → logprob: -13.00033950805664
    4. ' ,' → logprob: -14.00033950805664
    5. ',
' → logprob: -15.00033950805664
    6. '(current' → logprob: -16.50033950805664
    7. ' current' → logprob: -16.50033950805664
    8. '   ' → logprob: -18.62533950805664
    9. ')' → logprob: -19.00033950805664
    10. 'Current' → logprob: -19.25033950805664

Token 395: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2519291639328003
    2. ' current' → logprob: -1.5019291639328003
    3. '   ' → logprob: -16.876928329467773
    4. '$current' → logprob: -17.376928329467773
    5. '(current' → logprob: -18.876928329467773
    6. '[current' → logprob: -19.001928329467773
    7. '	current' → logprob: -19.001928329467773
    8. 'Current' → logprob: -19.126928329467773
    9. '_current' → logprob: -19.251928329467773
    10. '.current' → logprob: -19.876928329467773

Token 396: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -2.1008713702030946e-06
    2. '_current' → logprob: -13.250001907348633
    3. 'current' → logprob: -16.250001907348633
    4. 'in' → logprob: -16.750001907348633
    5. '```' → logprob: -17.375001907348633
    6. '_' → logprob: -17.625001907348633
    7. '-in' → logprob: -18.250001907348633
    8. 'Increasing' → logprob: -19.000001907348633
    9. '_is' → logprob: -19.500001907348633
    10. '_i' → logprob: -19.500001907348633

Token 397: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -9.031157969729975e-05
    2. 'in' → logprob: -9.875090599060059
    3. '_in' → logprob: -10.375090599060059
    4. '_cre' → logprob: -12.875090599060059
    5. 'cre' → logprob: -13.000090599060059
    6. 'c' → logprob: -14.500090599060059
    7. 'Increasing' → logprob: -14.625090599060059
    8. '_' → logprob: -14.875090599060059
    9. '_re' → logprob: -15.750090599060059
    10. '```' → logprob: -15.875090599060059

Token 398: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0067182136699557304
    2. 'sequence' → logprob: -5.006718158721924
    3. 'current' → logprob: -13.131718635559082
    4. ' sequence' → logprob: -14.506718635559082
    5. 'Sequence' → logprob: -15.381718635559082
    6. '_current' → logprob: -16.881717681884766
    7. '_sequences' → logprob: -16.881717681884766
    8. '_seq' → logprob: -18.006717681884766
    9. 'sequ' → logprob: -18.756717681884766
    10. '_' → logprob: -18.756717681884766

Token 399: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -9.088346359931165e-07
    2. 'length' → logprob: -14.625000953674316
    3. '_sequence' → logprob: -15.250000953674316
    4. 'ength' → logprob: -16.0
    5. '_lengths' → logprob: -18.5
    6. 'Length' → logprob: -19.125
    7. '_LENGTH' → logprob: -19.5
    8. '   ' → logprob: -19.625
    9. '_len' → logprob: -19.75
    10. '_list' → logprob: -19.875

Token 400: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08735213428735733
    2. '
' → logprob: -3.0873520374298096
    3. '   ' → logprob: -3.8373520374298096
    4. ')
' → logprob: -4.212352275848389
    5. '+' → logprob: -7.212352275848389
    6. ' +' → logprob: -8.33735179901123
    7. '    
' → logprob: -8.46235179901123
    8. '<|end|>' → logprob: -8.46235179901123
    9. ' )' → logprob: -8.96235179901123
    10. ' 
' → logprob: -10.71235179901123

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1757565289735794
    2. '
' → logprob: -2.0507564544677734
    3. '    
' → logprob: -3.6757564544677734
    4. ' 
' → logprob: -6.300756454467773
    5. 'n' → logprob: -7.175756454467773
    6. '\n' → logprob: -7.675756454467773
    7. ' return' → logprob: -7.800756454467773
    8. 'mod' → logprob: -7.800756454467773
    9. '  
' → logprob: -7.800756454467773
    10. '```' → logprob: -7.800756454467773

Token 402: ' print' (ID: 2123)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.0362002849578857
    2. 'return' → logprob: -1.1612002849578857
    3. 'print' (adapté à ' print') → logprob: -1.5362002849578857
    4. 'MOD' → logprob: -2.5362002849578857
    5. '   ' → logprob: -3.4112002849578857
    6. 'result' → logprob: -6.036200523376465
    7. 'number' → logprob: -7.911200523376465
    8. 'prime' → logprob: -8.411200523376465
    9. 'total' → logprob: -8.661200523376465
    10. '
' → logprob: -8.661200523376465

Token 403: '(number' (ID: 32955)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.1275821477174759
    2. '(number' → logprob: -2.12758207321167
    3. '(' → logprob: -7.37758207321167
    4. '(len' → logprob: -11.127582550048828
    5. '(n' → logprob: -11.877582550048828
    6. '(max' → logprob: -13.127582550048828
    7. 'number' → logprob: -13.377582550048828
    8. '((' → logprob: -13.502582550048828
    9. 'minimum' → logprob: -13.627582550048828
    10. ' (' → logprob: -14.877582550048828

Token 404: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.375004768371582
    3. '_elements' → logprob: -14.875004768371582
    4. ')' → logprob: -16.5000057220459
    5. '_)' → logprob: -16.7500057220459
    6. 'of' → logprob: -17.2500057220459
    7. '_OF' → logprob: -18.1250057220459
    8. '_
' → logprob: -18.6250057220459
    9. 'Of' → logprob: -18.7500057220459
    10. '_number' → logprob: -18.8750057220459

Token 405: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.07889628410339355
    2. 'elements' → logprob: -2.5788962841033936
    3. ' elements' → logprob: -13.328896522521973
    4. '_moves' → logprob: -13.328896522521973
    5. '```' → logprob: -14.203896522521973
    6. 'moves' → logprob: -14.328896522521973
    7. '_ELEMENTS' → logprob: -14.328896522521973
    8. 'Elements' → logprob: -14.453896522521973
    9. '-elements' → logprob: -16.203895568847656
    10. 'ele' → logprob: -16.328895568847656

Token 406: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4851703941822052
    2. '-' → logprob: -0.9851703643798828
    3. ')' → logprob: -5.110170364379883
    4. ',' → logprob: -5.735170364379883
    5. ' ,' → logprob: -6.735170364379883
    6. '+' → logprob: -8.485170364379883
    7. ' ' → logprob: -9.360170364379883
    8. ' )' → logprob: -9.610170364379883
    9. '-min' → logprob: -9.610170364379883
    10. ' +' → logprob: -9.985170364379883

Token 407: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.023246755823493004
    2. ' minimum' → logprob: -3.7732467651367188
    3. 'min' → logprob: -13.648246765136719
    4. 'minimal' → logprob: -16.77324676513672
    5. '.minimum' → logprob: -17.77324676513672
    6. '1' → logprob: -18.39824676513672
    7. '   ' → logprob: -18.64824676513672
    8. 'maximum' → logprob: -19.27324676513672
    9. ' ' → logprob: -19.52324676513672
    10. ' minimal' → logprob: -20.02324676513672

Token 408: '_moves' (ID: 110706)
  Prédit: '_moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -6.749814019713085e-06
    2. 'moves' → logprob: -12.000006675720215
    3. '_move' → logprob: -15.125006675720215
    4. '_' → logprob: -15.500006675720215
    5. '```' → logprob: -17.37500762939453
    6. '_mov' → logprob: -17.37500762939453
    7. 'Moves' → logprob: -18.12500762939453
    8. '_movies' → logprob: -19.00000762939453
    9. '_reads' → logprob: -20.00000762939453
    10. '.moves' → logprob: -20.25000762939453

Token 409: '_required' (ID: 44564)
  Prédit: '_required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_required' → logprob: -8.41866585687967e-06
    2. 'required' → logprob: -11.875008583068848
    3. 'quired' → logprob: -13.875008583068848
    4. '_require' → logprob: -16.12500762939453
    5. '_requested' → logprob: -16.12500762939453
    6. '_REQUIRED' → logprob: -16.25000762939453
    7. '_requires' → logprob: -16.37500762939453
    8. '_needed' → logprob: -16.87500762939453
    9. '_' → logprob: -17.50000762939453
    10. 'Required' → logprob: -17.75000762939453

Token 410: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. ' )' → logprob: -11.250017166137695
    3. ')
' → logprob: -13.125017166137695
    4. '`)' → logprob: -14.125017166137695
    5. '+' → logprob: -15.250017166137695
    6. '   ' → logprob: -15.375017166137695
    7. '*' → logprob: -15.625017166137695
    8. '))' → logprob: -15.750017166137695
    9. ')`' → logprob: -16.250017166137695
    10. '())' → logprob: -16.250017166137695

Token 411: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9563853740692139
    2. '<|end|>' → logprob: -1.2063853740692139
    3. '#' → logprob: -1.8313853740692139
    4. '\n' → logprob: -2.331385374069214
    5. 'if' → logprob: -3.456385374069214
    6. 'n' → logprob: -4.456385612487793
    7. '```' → logprob: -4.706385612487793
    8. '(' → logprob: -6.831385612487793
    9. '\' → logprob: -7.081385612487793
    10. '<|end|>' → logprob: -7.331385612487793

Token 412: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012949971482157707
    2. '__' → logprob: -4.3879499435424805
    3. '_' → logprob: -7.8879499435424805
    4. ' ' → logprob: -10.26294994354248
    5. '_name' → logprob: -11.38794994354248
    6. ' _' → logprob: -11.63794994354248
    7. '___' → logprob: -13.13794994354248
    8. ' ___' → logprob: -13.38794994354248
    9. ' ' → logprob: -13.76294994354248
    10. 'space' → logprob: -14.01294994354248

Token 413: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1279297173023224
    2. ' __' → logprob: -2.1279296875
    3. ' ==' → logprob: -7.2529296875
    4. '.__' → logprob: -9.0029296875
    5. '__.' → logprob: -10.7529296875
    6. '==' → logprob: -10.7529296875
    7. '_' → logprob: -10.8779296875
    8. 'if' → logprob: -11.0029296875
    9. 'main' → logprob: -11.0029296875
    10. '_main' → logprob: -11.5029296875

Token 414: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004976287018507719
    2. ' ==' → logprob: -8.375497817993164
    3. '==' → logprob: -8.500497817993164
    4. '__.__' → logprob: -10.375497817993164
    5. '_' → logprob: -11.250497817993164
    6. '=="' → logprob: -12.375497817993164
    7. '__.' → logprob: -12.375497817993164
    8. '___' → logprob: -12.750497817993164
    9. ' __' → logprob: -12.875497817993164
    10. '__[' → logprob: -13.875497817993164

Token 415: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13839653134346008
    2. ' ==' → logprob: -2.2633965015411377
    3. '==' → logprob: -3.7633965015411377
    4. '=="' → logprob: -6.388396739959717
    5. '_' → logprob: -9.138396263122559
    6. '=='' → logprob: -9.263396263122559
    7. '__.__' → logprob: -10.138396263122559
    8. '___' → logprob: -10.638396263122559
    9. '.__' → logprob: -10.888396263122559
    10. ' =="' → logprob: -11.638396263122559

Token 416: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02995307929813862
    2. ''' → logprob: -3.5299530029296875
    3. ' "__' → logprob: -8.529953002929688
    4. ' '__' → logprob: -12.779953002929688
    5. '__' → logprob: -13.154953002929688
    6. '"user' → logprob: -15.779953002929688
    7. '("__' → logprob: -17.154953002929688
    8. ''"' → logprob: -17.404953002929688
    9. '"name' → logprob: -17.529953002929688
    10. '"class' → logprob: -17.529953002929688

Token 417: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.6240566083070007e-06
    2. 'name' → logprob: -13.625001907348633
    3. ' main' → logprob: -15.750001907348633
    4. '_main' → logprob: -16.250001907348633
    5. '__' → logprob: -16.375001907348633
    6. '"' → logprob: -17.000001907348633
    7. '	main' → logprob: -19.750001907348633
    8. 'ma' → logprob: -19.875001907348633
    9. '-main' → logprob: -20.500001907348633
    10. '(main' → logprob: -21.125001907348633

Token 418: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.05562451481819153
    2. '__' → logprob: -3.055624485015869
    3. '__:' → logprob: -5.180624485015869
    4. '__':
' → logprob: -7.180624485015869
    5. ':' → logprob: -7.805624485015869
    6. '_' → logprob: -9.055624961853027
    7. '.' → logprob: -10.555624961853027
    8. '":' → logprob: -10.680624961853027
    9. '__["' → logprob: -11.055624961853027
    10. '__.' → logprob: -11.430624961853027

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0361463688313961
    2. ' process' → logprob: -3.411146402359009
    3. '    
' → logprob: -6.66114616394043
    4. '	process' → logprob: -7.28614616394043
    5. 'process' → logprob: -7.91114616394043
    6. '(process' → logprob: -10.16114616394043
    7. '```' → logprob: -10.28614616394043
    8. '
' → logprob: -10.53614616394043
    9. '   ' → logprob: -10.91114616394043
    10. ' 
' → logprob: -11.53614616394043

Token 420: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.001940057729370892
    2. ' process' → logprob: -6.2519402503967285
    3. '   ' → logprob: -11.50193977355957
    4. 'number' → logprob: -13.87693977355957
    5. '	process' → logprob: -15.75193977355957
    6. 'n' → logprob: -16.25193977355957
    7. 'result' → logprob: -16.75193977355957
    8. '(process' → logprob: -17.25193977355957
    9. 'for' → logprob: -18.37693977355957
    10. ' n' → logprob: -19.12693977355957

Token 421: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0024788661394268274
    2. '_' → logprob: -6.002479076385498
    3. '_process' → logprob: -13.25247859954834
    4. '_p' → logprob: -15.25247859954834
    5. '_permission' → logprob: -15.75247859954834
    6. '_perm' → logprob: -16.002479553222656
    7. '_pres' → logprob: -16.127479553222656
    8. '_under' → logprob: -16.127479553222656
    9. '_par' → logprob: -16.502479553222656
    10. '_permalink' → logprob: -16.627479553222656

Token 422: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -4.727905979962088e-05
    2. 'mut' → logprob: -11.00004768371582
    3. 'utation' → logprob: -11.00004768371582
    4. 'm' → logprob: -12.25004768371582
    5. 'mute' → logprob: -12.37504768371582
    6. 'mission' → logprob: -13.75004768371582
    7. '_mut' → logprob: -14.12504768371582
    8. '_' → logprob: -14.12504768371582
    9. 'Mutation' → logprob: -14.37504768371582
    10. 'mu' → logprob: -14.37504768371582

Token 423: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0011479563545435667
    2. '()' → logprob: -7.001147747039795
    3. '_' → logprob: -9.001148223876953
    4. 'and' → logprob: -9.126148223876953
    5. '()
' → logprob: -13.501148223876953
    6. ' and' → logprob: -14.376148223876953
    7. '_with' → logprob: -14.626148223876953
    8. '_AND' → logprob: -15.251148223876953
    9. '&' → logprob: -15.376148223876953
    10. '_for' → logprob: -15.376148223876953

Token 424: '_compute' (ID: 139704)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.5759503245353699
    2. '_compute' → logprob: -0.8259503245353699
    3. ' compute' → logprob: -11.825950622558594
    4. 'print' → logprob: -12.825950622558594
    5. '```' → logprob: -15.450950622558594
    6. '_print' → logprob: -15.450950622558594
    7. 'comput' → logprob: -15.825950622558594
    8. '
' → logprob: -16.200950622558594
    9. '.compute' → logprob: -16.325950622558594
    10. 'computer' → logprob: -17.075950622558594

Token 425: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0009115827269852161
    2. 'result' → logprob: -7.000911712646484
    3. '_results' → logprob: -16.750911712646484
    4. '_res' → logprob: -16.875911712646484
    5. ' result' → logprob: -17.125911712646484
    6. '_RESULT' → logprob: -17.875911712646484
    7. '$result' → logprob: -18.000911712646484
    8. '```' → logprob: -18.500911712646484
    9. '   ' → logprob: -18.875911712646484
    10. '_answer' → logprob: -18.875911712646484

Token 426: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 424
Tokens correctement prédits (1ère position, stricte): 222
Tokens correctement prédits (1ère position, avec adaptation): 232
Tokens correctement prédits (top 10): 369
Précision stricte (1ère position): 52.36%
Précision adaptée (1ère position): 54.72%
Précision (top 10): 87.03%
================================================================================
