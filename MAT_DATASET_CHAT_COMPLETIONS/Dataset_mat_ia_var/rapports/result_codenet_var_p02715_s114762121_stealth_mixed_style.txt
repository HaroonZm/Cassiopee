================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

def getinput():
    return stdin.readline().rstrip()

toint = lambda x: int(x)
tolist = lambda: list(map(int, stdin.readline().split()))
readvals = lambda: list(map(int, getinput().split()))

def compute():
    vals = tolist()
    n = vals[0]
    try: K = vals[1]
    except:
        K = 0
    MOD = 10**9+7

    arr = [0]
    fun = pow
    for d in range(1, K+1):
        arr += [fun(K//d, n, MOD)]

    idx = K
    while idx:
        nxt = 2*idx
        while nxt <= K:
            arr[idx] = arr[idx]-arr[nxt]
            nxt += idx
        if arr[idx] < 0:
            arr[idx] %= MOD
            if arr[idx] < 0:
                arr[idx] += MOD
        idx -= 1

    summ = 0
    for i in range(1, K+1):
        summ += i * arr[i]
    print(summ % MOD)

compute()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.17995037138462067
    2. ' argv' → logprob: -2.179950475692749
    3. 'exit' → logprob: -3.554950475692749
    4. ' exit' → logprob: -3.929950475692749
    5. 'stdout' → logprob: -6.67995023727417
    6. 'import' → logprob: -6.92995023727417
    7. 'path' → logprob: -7.92995023727417
    8. 'stdin' → logprob: -8.054950714111328
    9. ' import' → logprob: -8.929950714111328
    10. '.argv' → logprob: -9.304950714111328

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002956185257062316
    2. '\n' → logprob: -6.752956390380859
    3. '.readline' → logprob: -6.752956390380859
    4. '.read' → logprob: -8.87795639038086
    5. 'import' → logprob: -9.12795639038086
    6. '.
' → logprob: -9.75295639038086
    7. '\' → logprob: -9.75295639038086
    8. '
' → logprob: -10.00295639038086
    9. '```' → logprob: -10.00295639038086
    10. 'newline' → logprob: -10.50295639038086

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07647491991519928
    2. '.readline' → logprob: -2.701474905014038
    3. '.read' → logprob: -6.076475143432617
    4. 'print' → logprob: -6.701475143432617
    5. '\n' → logprob: -6.951475143432617
    6. ',' → logprob: -7.951475143432617
    7. 'import' → logprob: -8.076475143432617
    8. 'for' → logprob: -8.076475143432617
    9. 'newline' → logprob: -8.576475143432617
    10. '.
' → logprob: -8.826475143432617

Token 6: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10639192909002304
    2. ' read' → logprob: -2.4813919067382812
    3. ' process' → logprob: -4.731391906738281
    4. '_read' → logprob: -6.106391906738281
    5. ' readline' → logprob: -6.856391906738281
    6. ' space' → logprob: -6.981391906738281
    7. ' parse' → logprob: -7.106391906738281
    8. ' ' → logprob: -7.106391906738281
    9. 'read' → logprob: -7.981391906738281
    10. ' main' → logprob: -8.106391906738281

Token 7: 'input' (ID: 2586)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24375367164611816
    2. '_data' → logprob: -2.243753671646118
    3. '_input' → logprob: -2.743753671646118
    4. '_line' → logprob: -4.368753433227539
    5. '_user' → logprob: -4.493753433227539
    6. 's' → logprob: -4.868753433227539
    7. ' _' → logprob: -5.868753433227539
    8. '_max' → logprob: -6.243753433227539
    9. 'data' → logprob: -6.493753433227539
    10. 'line' → logprob: -7.243753433227539

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05630005523562431
    2. '():' → logprob: -3.056300163269043
    3. '_' → logprob: -5.306300163269043
    4. '_line' → logprob: -7.181300163269043
    5. '()' → logprob: -7.431300163269043
    6. '_input' → logprob: -7.681300163269043
    7. ' (' → logprob: -8.681300163269043
    8. '(_' → logprob: -9.431300163269043
    9. '("("' → logprob: -9.431300163269043
    10. '```' → logprob: -9.931300163269043

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34785765409469604
    2. ' return' → logprob: -1.9728577136993408
    3. '(' → logprob: -2.972857713699341
    4. 'return' → logprob: -3.097857713699341
    5. '    
' → logprob: -4.347857475280762
    6. '(stdin' → logprob: -4.472857475280762
    7. '()' → logprob: -4.847857475280762
    8. ' ' → logprob: -5.722857475280762
    9. ' readline' → logprob: -5.972857475280762
    10. '    ' → logprob: -5.972857475280762

Token 10: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.36695414781570435
    2. ' return' → logprob: -1.2419540882110596
    3. ' line' → logprob: -4.366954326629639
    4. 'line' → logprob: -5.366954326629639
    5. '   ' → logprob: -8.11695384979248
    6. 'data' → logprob: -8.74195384979248
    7. ' for' → logprob: -8.99195384979248
    8. 'stdin' → logprob: -9.11695384979248
    9. 'for' → logprob: -9.49195384979248
    10. ' data' → logprob: -9.86695384979248

Token 11: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.48611554503440857
    2. 'stdin' → logprob: -0.986115574836731
    3. '(stdin' → logprob: -4.611115455627441
    4. 'list' → logprob: -6.736115455627441
    5. ' list' → logprob: -7.986115455627441
    6. '.stdin' → logprob: -8.611115455627441
    7. ' ' → logprob: -8.611115455627441
    8. 'int' → logprob: -10.236115455627441
    9. 'stdout' → logprob: -10.361115455627441
    10. '   ' → logprob: -10.986115455627441

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.06070111691951752
    2. '.read' → logprob: -3.0607011318206787
    3. '.' → logprob: -4.4357008934021
    4. '.readlines' → logprob: -8.685701370239258
    5. 'read' → logprob: -11.685701370239258
    6. '.Read' → logprob: -11.685701370239258
    7. ' readline' → logprob: -13.310701370239258
    8. '.write' → logprob: -13.685701370239258
    9. ' .' → logprob: -13.810701370239258
    10. '.get' → logprob: -13.935701370239258

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00047714399988763034
    2. '(' → logprob: -8.375476837158203
    3. '().' → logprob: -9.000476837158203
    4. ' ()' → logprob: -9.625476837158203
    5. '()
' → logprob: -10.375476837158203
    6. '()\' → logprob: -11.625476837158203
    7. '()(' → logprob: -12.125476837158203
    8. '`()' → logprob: -12.625476837158203
    9. '()

' → logprob: -13.125476837158203
    10. '()`' → logprob: -13.500476837158203

Token 14: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0011712945997714996
    2. 'rstrip' → logprob: -6.751171112060547
    3. ' strip' → logprob: -14.376171112060547
    4. '_strip' → logprob: -15.626171112060547
    5. 'split' → logprob: -16.001171112060547
    6. 'decode' → logprob: -16.876171112060547
    7. 'str' → logprob: -17.126171112060547
    8. 'read' → logprob: -17.376171112060547
    9. '```' → logprob: -18.251171112060547
    10. 'startswith' → logprob: -18.251171112060547

Token 15: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02763253264129162
    2. '()' → logprob: -4.027632713317871
    3. '(
' → logprob: -5.152632713317871
    4. '\n' → logprob: -6.777632713317871
    5. '(\' → logprob: -7.152632713317871
    6. ')' → logprob: -7.777632713317871
    7. '\' → logprob: -7.902632713317871
    8. ' ' → logprob: -8.777632713317871
    9. '(

' → logprob: -8.902632713317871
    10. '
' → logprob: -9.027632713317871

Token 16: 'to' (ID: 935)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5777968764305115
    2. 'n' → logprob: -1.7027969360351562
    3. 'd' → logprob: -2.5777969360351562
    4. 'x' → logprob: -3.4527969360351562
    5. '#' → logprob: -3.5777969360351562
    6. '\n' → logprob: -3.5777969360351562
    7. '
' → logprob: -3.7027969360351562
    8. 'a' → logprob: -3.8277969360351562
    9. '' → logprob: -4.702796936035156
    10. 'for' → logprob: -4.952796936035156

Token 17: 'int' (ID: 491)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38470160961151123
    2. '()' → logprob: -1.6347016096115112
    3. ':' → logprob: -2.384701728820801
    4. ')' → logprob: -4.759701728820801
    5. '():' → logprob: -5.634701728820801
    6. '=' → logprob: -6.009701728820801
    7. '(' → logprob: -6.009701728820801
    8. ' ' → logprob: -6.509701728820801
    9. '```' → logprob: -6.634701728820801
    10. ' def' → logprob: -6.634701728820801

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00034142236108891666
    2. '()' → logprob: -8.250341415405273
    3. '('' → logprob: -10.250341415405273
    4. '("("' → logprob: -10.750341415405273
    5. ' (' → logprob: -11.875341415405273
    6. ')' → logprob: -13.000341415405273
    7. '(
' → logprob: -13.125341415405273
    8. '(int' → logprob: -13.125341415405273
    9. '40' → logprob: -13.625341415405273
    10. '(`' → logprob: -13.875341415405273

Token 19: ' lambda' (ID: 27871)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14393378794193268
    2. 'int' → logprob: -2.0189337730407715
    3. ' lambda' → logprob: -6.7689337730407715
    4. 'lambda' → logprob: -9.64393424987793
    5. '(int' → logprob: -10.51893424987793
    6. ' ' → logprob: -11.76893424987793
    7. '=int' → logprob: -12.89393424987793
    8. '	int' → logprob: -13.14393424987793
    9. '   ' → logprob: -13.51893424987793
    10. '[int' → logprob: -13.64393424987793

Token 20: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12874503433704376
    2. ' s' → logprob: -2.3787450790405273
    3. 'x' → logprob: -3.7537450790405273
    4. 's' → logprob: -5.378745079040527
    5. 'int' → logprob: -10.128745079040527
    6. ' int' → logprob: -10.503745079040527
    7. ' ' → logprob: -11.003745079040527
    8. ' ' → logprob: -14.128745079040527
    9. ' a' → logprob: -14.378745079040527
    10. '<int' → logprob: -14.378745079040527

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007052799221128225
    2. ':int' → logprob: -5.132052898406982
    3. ' :' → logprob: -7.007052898406982
    4. ':x' → logprob: -8.507052421569824
    5. 'int' → logprob: -11.632052421569824
    6. '=int' → logprob: -13.132052421569824
    7. ' x' → logprob: -13.132052421569824
    8. ' int' → logprob: -14.257052421569824
    9. 'x' → logprob: -14.257052421569824
    10. ':list' → logprob: -14.632052421569824

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740781784057617
    2. ' int' → logprob: -0.9740781784057617
    3. ' ' → logprob: -14.599078178405762
    4. '(int' → logprob: -15.224078178405762
    5. '	int' → logprob: -16.224079132080078
    6. ' x' → logprob: -16.349079132080078
    7. '[int' → logprob: -16.474079132080078
    8. '=int' → logprob: -16.724079132080078
    9. '  ' → logprob: -16.849079132080078
    10. ':int' → logprob: -16.849079132080078

Token 23: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5760939717292786
    2. '(' → logprob: -0.8260939717292786
    3. '32' → logprob: -9.951093673706055
    4. '(
' → logprob: -10.451093673706055
    5. '\(' → logprob: -11.451093673706055
    6. '()' → logprob: -11.701093673706055
    7. '<|end|>' → logprob: -11.701093673706055
    8. '40' → logprob: -11.826093673706055
    9. '```' → logprob: -12.701093673706055
    10. '("("' → logprob: -12.701093673706055

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. '))' → logprob: -12.875004768371582
    3. ' )' → logprob: -14.125004768371582
    4. ')))' → logprob: -15.000004768371582
    5. '')' → logprob: -15.375004768371582
    6. ')x' → logprob: -15.375004768371582
    7. ')
' → logprob: -16.0000057220459
    8. '[' → logprob: -16.2500057220459
    9. '(x' → logprob: -16.2500057220459
    10. ')return' → logprob: -16.2500057220459

Token 25: 'tolist' (ID: 127691)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20235837996006012
    2. '()' → logprob: -2.5773584842681885
    3. '
' → logprob: -3.2023584842681885
    4. '\n' → logprob: -3.3273584842681885
    5. '(
' → logprob: -4.077358245849609
    6. '()
' → logprob: -5.952358245849609
    7. '<|end|>' → logprob: -6.202358245849609
    8. '#' → logprob: -6.577358245849609
    9. 'newline' → logprob: -6.702358245849609
    10. 'def' → logprob: -6.952358245849609

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14984402060508728
    2. ' =' → logprob: -2.02484393119812
    3. '=lambda' → logprob: -5.024844169616699
    4. '(' → logprob: -7.774844169616699
    5. ')' → logprob: -10.0248441696167
    6. '<|end|>' → logprob: -10.6498441696167
    7. 'ambda' → logprob: -10.7748441696167
    8. 's' → logprob: -11.1498441696167
    9. '(lambda' → logprob: -11.6498441696167
    10. ']' → logprob: -12.2748441696167

Token 27: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.10023967176675797
    2. 'lambda' → logprob: -2.3502397537231445
    3. ' list' → logprob: -11.350239753723145
    4. '(lambda' → logprob: -11.475239753723145
    5. 'list' → logprob: -11.725239753723145
    6. '=lambda' → logprob: -12.850239753723145
    7. ' ' → logprob: -16.725238800048828
    8. ' lamb' → logprob: -17.600238800048828
    9. 'split' → logprob: -17.850238800048828
    10. ' str' → logprob: -18.725238800048828

Token 28: ':' (ID: 25)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3844156265258789
    2. 'list' → logprob: -1.509415626525879
    3. ' lambda' → logprob: -2.634415626525879
    4. 'lambda' → logprob: -3.884415626525879
    5. ' x' → logprob: -6.009415626525879
    6. 'x' → logprob: -6.384415626525879
    7. '(lambda' → logprob: -6.759415626525879
    8. ' str' → logprob: -8.384415626525879
    9. 'str' → logprob: -8.884415626525879
    10. '(list' → logprob: -10.009415626525879

Token 29: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.14262016117572784
    2. ' list' → logprob: -3.392620086669922
    3. '[]' → logprob: -4.017620086669922
    4. '[int' → logprob: -4.017620086669922
    5. '[' → logprob: -4.392620086669922
    6. '[input' → logprob: -4.392620086669922
    7. '[list' → logprob: -4.392620086669922
    8. ' [' → logprob: -4.642620086669922
    9. 'stdin' → logprob: -5.267620086669922
    10. '[get' → logprob: -5.767620086669922

Token 30: '(map' (ID: 16946)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8199979066848755
    2. '(' → logprob: -1.4449979066848755
    3. '(map' → logprob: -1.5699979066848755
    4. '(stdin' → logprob: -3.069997787475586
    5. '(to' → logprob: -3.819997787475586
    6. '(int' → logprob: -4.194997787475586
    7. '(input' → logprob: -4.694997787475586
    8. '<|end|>' → logprob: -5.069997787475586
    9. '(get' → logprob: -5.444997787475586
    10. '(read' → logprob: -6.194997787475586

Token 31: '(int' (ID: 2742)
  Prédit: '(to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.0561261810362339
    2. '(int' → logprob: -3.181126117706299
    3. '(' → logprob: -4.806126117706299
    4. '(t' → logprob: -6.306126117706299
    5. 'to' → logprob: -6.556126117706299
    6. ')' → logprob: -6.931126117706299
    7. ' to' → logprob: -8.306126594543457
    8. '(str' → logprob: -8.431126594543457
    9. '))' → logprob: -9.431126594543457
    10. 'int' → logprob: -11.431126594543457

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3216765224933624
    2. ',get' → logprob: -1.69667649269104
    3. ',input' → logprob: -2.57167649269104
    4. ',to' → logprob: -4.821676731109619
    5. '))' → logprob: -6.196676731109619
    6. '(stdin' → logprob: -6.196676731109619
    7. '(get' → logprob: -6.321676731109619
    8. ',(' → logprob: -8.071676254272461
    9. '(input' → logprob: -8.446676254272461
    10. '(' → logprob: -8.446676254272461

Token 33: ' stdin' (ID: 75143)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.003060303395614028
    2. ' get' → logprob: -6.503060340881348
    3. '(get' → logprob: -7.753060340881348
    4. 'input' → logprob: -7.878060340881348
    5. 'to' → logprob: -8.128060340881348
    6. 'stdin' → logprob: -8.503060340881348
    7. ')' → logprob: -9.628060340881348
    8. 'getline' → logprob: -9.753060340881348
    9. ',get' → logprob: -10.128060340881348
    10. ')get' → logprob: -10.253060340881348

Token 34: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.1928003813372925e-05
    2. '.' → logprob: -10.375051498413086
    3. '.readlines' → logprob: -10.875051498413086
    4. '.read' → logprob: -14.500051498413086
    5. '().' → logprob: -15.000051498413086
    6. ')' → logprob: -15.000051498413086
    7. ' readline' → logprob: -15.125051498413086
    8. ').' → logprob: -15.375051498413086
    9. ' .' → logprob: -16.250051498413086
    10. ')))' → logprob: -17.000051498413086

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001593195047462359
    2. '()' → logprob: -8.87515926361084
    3. '()))' → logprob: -11.25015926361084
    4. ')' → logprob: -13.25015926361084
    5. '))' → logprob: -13.50015926361084
    6. ' ().' → logprob: -13.87515926361084
    7. '())))' → logprob: -14.00015926361084
    8. ')))' → logprob: -14.75015926361084
    9. '())' → logprob: -15.50015926361084
    10. ' ' → logprob: -15.75015926361084

Token 36: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.009812753647565842
    2. 'split' → logprob: -5.009812831878662
    3. 'strip' → logprob: -6.009812831878662
    4. 'read' → logprob: -7.384812831878662
    5. 'rs' → logprob: -11.134812355041504
    6. 'rst' → logprob: -13.259812355041504
    7. 'rl' → logprob: -15.509812355041504
    8. ')' → logprob: -15.509812355041504
    9. '.rstrip' → logprob: -15.509812355041504
    10. '```' → logprob: -15.884812355041504

Token 37: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.389089971780777
    2. '))' → logprob: -1.1390899419784546
    3. '()' → logprob: -6.889090061187744
    4. '())' → logprob: -6.889090061187744
    5. ')' → logprob: -9.389089584350586
    6. ')))' → logprob: -9.639089584350586
    7. '())))' → logprob: -11.389089584350586
    8. '(' → logprob: -11.764089584350586
    9. '()))
' → logprob: -12.014089584350586
    10. ' ))' → logprob: -13.889089584350586

Token 38: 'read' (ID: 1293)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.069883942604065
    2. '
' → logprob: -1.569883942604065
    3. '\n' → logprob: -2.0698838233947754
    4. '#' → logprob: -2.0698838233947754
    5. '<|end|>' → logprob: -2.0698838233947754
    6. '\' → logprob: -3.6948838233947754
    7. 'newline' → logprob: -5.194883823394775
    8. 'def' → logprob: -5.319883823394775
    9. '(n' → logprob: -5.319883823394775
    10. '```' → logprob: -5.444883823394775

Token 39: 'vals' (ID: 44567)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0006460758158937097
    2. '()' → logprob: -7.750646114349365
    3. 'ln' → logprob: -9.500645637512207
    4. 'lin' → logprob: -9.875645637512207
    5. '_line' → logprob: -10.500645637512207
    6. 'ine' → logprob: -10.750645637512207
    7. 'int' → logprob: -10.875645637512207
    8. 'l' → logprob: -11.875645637512207
    9. 'lines' → logprob: -12.000645637512207
    10. 'Line' → logprob: -12.750645637512207

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2034427970647812
    2. '=' → logprob: -2.3284428119659424
    3. '()' → logprob: -2.4534428119659424
    4. '(' → logprob: -7.953442573547363
    5. ' ()' → logprob: -8.953442573547363
    6. ')' → logprob: -10.203442573547363
    7. 'to' → logprob: -10.578442573547363
    8. '_' → logprob: -11.828442573547363
    9. '[:]' → logprob: -11.953442573547363
    10. 's' → logprob: -12.078442573547363

Token 41: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.10495161265134811
    2. 'lambda' → logprob: -2.4799516201019287
    3. 'tolist' → logprob: -4.60495138168335
    4. '(lambda' → logprob: -5.85495138168335
    5. ' to' → logprob: -6.35495138168335
    6. ' []' → logprob: -8.104951858520508
    7. 'to' → logprob: -8.229951858520508
    8. '[]' → logprob: -8.354951858520508
    9. 'list' → logprob: -8.729951858520508
    10. '=lambda' → logprob: -9.104951858520508

Token 42: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.48722654581069946
    2. ':' → logprob: -0.9872265458106995
    3. ' stdin' → logprob: -5.237226486206055
    4. '(stdin' → logprob: -6.112226486206055
    5. 'stdin' → logprob: -6.362226486206055
    6. ' ' → logprob: -7.362226486206055
    7. 'to' → logprob: -7.362226486206055
    8. ' to' → logprob: -7.487226486206055
    9. '():' → logprob: -7.862226486206055
    10. ' x' → logprob: -7.987226486206055

Token 43: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7194700837135315
    2. ' list' → logprob: -1.2194700241088867
    3. ' map' → logprob: -2.3444700241088867
    4. 'map' → logprob: -3.3444700241088867
    5. 'stdin' → logprob: -3.4694700241088867
    6. ' stdin' → logprob: -3.5944700241088867
    7. 'tolist' → logprob: -4.594470024108887
    8. ' to' → logprob: -5.094470024108887
    9. 'input' → logprob: -5.719470024108887
    10. 'to' → logprob: -5.969470024108887

Token 44: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05107048526406288
    2. '(' → logprob: -3.05107045173645
    3. '(int' → logprob: -6.051070690155029
    4. '()' → logprob: -10.426070213317871
    5. '(lambda' → logprob: -10.426070213317871
    6. '<|end|>' → logprob: -10.926070213317871
    7. '(stdin' → logprob: -11.801070213317871
    8. 'map' → logprob: -12.176070213317871
    9. '(
' → logprob: -12.426070213317871
    10. '<|end|>' → logprob: -12.426070213317871

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009136092266999185
    2. 'int' → logprob: -7.125913619995117
    3. '(str' → logprob: -9.875913619995117
    4. '(' → logprob: -10.875913619995117
    5. '<int' → logprob: -11.375913619995117
    6. ' int' → logprob: -11.875913619995117
    7. ',int' → logprob: -12.125913619995117
    8. 'to' → logprob: -12.125913619995117
    9. '=int' → logprob: -13.000913619995117
    10. '(to' → logprob: -13.250913619995117

Token 46: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.08119963109493256
    2. ',' → logprob: -2.5811996459960938
    3. '(' → logprob: -6.456199645996094
    4. '(st' → logprob: -7.956199645996094
    5. ')' → logprob: -9.581199645996094
    6. ')(' → logprob: -9.706199645996094
    7. ',(' → logprob: -10.081199645996094
    8. '(std' → logprob: -10.706199645996094
    9. ',std' → logprob: -10.831199645996094
    10. '),' → logprob: -10.831199645996094

Token 47: ' get' (ID: 717)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.010372497141361237
    2. ' stdin' → logprob: -5.260372638702393
    3. 'get' → logprob: -6.010372638702393
    4. 'input' → logprob: -7.135372638702393
    5. 'to' → logprob: -7.510372638702393
    6. 'std' → logprob: -7.635372638702393
    7. '(stdin' → logprob: -7.885372638702393
    8. ' get' → logprob: -9.260372161865234
    9. 'int' → logprob: -9.635372161865234
    10. ' to' → logprob: -10.010372161865234

Token 48: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.128163257315464e-07
    2. '(input' → logprob: -16.0
    3. 'int' → logprob: -16.5
    4. ' input' → logprob: -18.625
    5. 'inputs' → logprob: -18.625
    6. 'line' → logprob: -19.25
    7. ')' → logprob: -19.375
    8. 'import' → logprob: -19.5
    9. 'stdin' → logprob: -19.5
    10. 'val' → logprob: -19.875

Token 49: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3755672872066498
    2. '().' → logprob: -1.3755673170089722
    3. '()' → logprob: -2.8755671977996826
    4. '))' → logprob: -6.250567436218262
    5. '()));' → logprob: -6.750567436218262
    6. '())' → logprob: -7.750567436218262
    7. '())))' → logprob: -8.000567436218262
    8. '()[' → logprob: -10.375567436218262
    9. ' ()' → logprob: -10.750567436218262
    10. '())).' → logprob: -11.000567436218262

Token 50: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.676292231422849e-05
    2. 'strip' → logprob: -11.375017166137695
    3. ' split' → logprob: -12.500017166137695
    4. 'rstrip' → logprob: -13.875017166137695
    5. '(split' → logprob: -14.375017166137695
    6. '.split' → logprob: -17.250017166137695
    7. ')' → logprob: -17.375017166137695
    8. 'plit' → logprob: -18.500017166137695
    9. 's' → logprob: -18.625017166137695
    10. 'spl' → logprob: -18.750017166137695

Token 51: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.20874176919460297
    2. '))' → logprob: -1.7087417840957642
    3. '()' → logprob: -5.083741664886475
    4. '())' → logprob: -6.958741664886475
    5. ')' → logprob: -9.208742141723633
    6. '()))
' → logprob: -10.833742141723633
    7. '()));' → logprob: -11.583742141723633
    8. '(' → logprob: -11.958742141723633
    9. '())))' → logprob: -11.958742141723633
    10. ')))' → logprob: -12.083742141723633

Token 52: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8709054589271545
    2. '#' → logprob: -1.8709053993225098
    3. '
' → logprob: -1.8709053993225098
    4. 'def' → logprob: -2.1209053993225098
    5. '\n' → logprob: -3.1209053993225098
    6. 'a' → logprob: -3.3709053993225098
    7. 'd' → logprob: -3.8709053993225098
    8. 'x' → logprob: -4.49590539932251
    9. '<|end|>' → logprob: -4.87090539932251
    10. 'w' → logprob: -5.37090539932251

Token 53: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.045530058443546295
    2. ' solve' → logprob: -3.170530080795288
    3. ' process' → logprob: -7.420529842376709
    4. ' solution' → logprob: -7.920529842376709
    5. ' read' → logprob: -8.295530319213867
    6. ' calculate' → logprob: -8.545530319213867
    7. 'solve' → logprob: -8.670530319213867
    8. ' parse' → logprob: -8.920530319213867
    9. ' factorial' → logprob: -8.920530319213867
    10. ' get' → logprob: -9.170530319213867

Token 54: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5823097825050354
    2. '():' → logprob: -0.8323097825050354
    3. '()' → logprob: -5.707309722900391
    4. '_' → logprob: -7.582309722900391
    5. '(x' → logprob: -7.582309722900391
    6. '(a' → logprob: -8.58230972290039
    7. '(line' → logprob: -8.58230972290039
    8. '_values' → logprob: -8.95730972290039
    9. '(data' → logprob: -9.33230972290039
    10. '(input' → logprob: -9.58230972290039

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006729337852448225
    2. '    
' → logprob: -5.8817291259765625
    3. '    ' → logprob: -6.5067291259765625
    4. ' pass' → logprob: -6.7567291259765625
    5. '<|end|>' → logprob: -7.3817291259765625
    6. 'pass' → logprob: -7.8817291259765625
    7. '<|end|>' → logprob: -9.381729125976562
    8. '	pass' → logprob: -9.756729125976562
    9. '
' → logprob: -11.256729125976562
    10. '       ' → logprob: -11.256729125976562

Token 56: ' vals' (ID: 58985)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5612372756004333
    2. ' pass' → logprob: -1.4362373352050781
    3. 'n' → logprob: -1.8112373352050781
    4. 'pass' → logprob: -3.936237335205078
    5. '   ' → logprob: -6.186237335205078
    6. '    ' → logprob: -6.811237335205078
    7. ' #' → logprob: -6.811237335205078
    8. 'data' → logprob: -7.311237335205078
    9. ' ' → logprob: -7.311237335205078
    10. 'a' → logprob: -7.936237335205078

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2814887464046478
    2. '=' → logprob: -1.4064887762069702
    3. '[' → logprob: -8.656488418579102
    4. '[:]' → logprob: -10.156488418579102
    5. ' ' → logprob: -10.406488418579102
    6. ')' → logprob: -10.406488418579102
    7. '   ' → logprob: -10.781488418579102
    8. '.' → logprob: -11.281488418579102
    9. '=[]' → logprob: -12.031488418579102
    10. ',' → logprob: -12.281488418579102

Token 58: ' to' (ID: 316)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0952896773815155
    2. 'read' → logprob: -2.595289707183838
    3. 'tolist' → logprob: -4.720289707183838
    4. ' to' → logprob: -5.095289707183838
    5. ' get' → logprob: -7.845289707183838
    6. ' ' → logprob: -8.47028923034668
    7. '   ' → logprob: -8.97028923034668
    8. '	read' → logprob: -9.09528923034668
    9. ' tot' → logprob: -9.59528923034668
    10. ' list' → logprob: -9.72028923034668

Token 59: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16024038195610046
    2. 'list' → logprob: -1.9102404117584229
    3. 'lint' → logprob: -11.535240173339844
    4. 'lit' → logprob: -13.410240173339844
    5. 'read' → logprob: -13.660240173339844
    6. '[int' → logprob: -14.660240173339844
    7. '(int' → logprob: -14.660240173339844
    8. ' int' → logprob: -14.785240173339844
    9. 'tolist' → logprob: -14.785240173339844
    10. 'input' → logprob: -15.410240173339844

Token 60: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.481510692741722e-05
    2. '()
' → logprob: -9.75007438659668
    3. '(' → logprob: -11.87507438659668
    4. ')' → logprob: -12.37507438659668
    5. '()

' → logprob: -13.87507438659668
    6. '())' → logprob: -14.00007438659668
    7. '()[' → logprob: -14.25007438659668
    8. ' ()' → logprob: -14.50007438659668
    9. '[]' → logprob: -14.62507438659668
    10. '()\' → logprob: -14.75007438659668

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.481370210647583
    2. '<|end|>' → logprob: -1.231370210647583
    3. '[' → logprob: -3.606370210647583
    4. ' ' → logprob: -3.981370210647583
    5. ')' → logprob: -4.731369972229004
    6. '    
' → logprob: -5.481369972229004
    7. '.' → logprob: -5.481369972229004
    8. '\' → logprob: -5.606369972229004
    9. '()' → logprob: -5.856369972229004
    10. '
' → logprob: -5.856369972229004

Token 62: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4212013483047485
    2. 'n' (adapté à ' n') → logprob: -1.7962013483047485
    3. '   ' → logprob: -2.296201229095459
    4. 'sum' → logprob: -2.921201229095459
    5. '[' → logprob: -3.046201229095459
    6. ' n' → logprob: -3.046201229095459
    7. 'if' → logprob: -3.421201229095459
    8. 'result' → logprob: -3.421201229095459
    9. ' 
' → logprob: -3.546201229095459
    10. 'return' → logprob: -3.546201229095459

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05646287649869919
    2. '=' → logprob: -2.9314627647399902
    3. ' ' → logprob: -6.80646276473999
    4. ',' → logprob: -8.556463241577148
    5. '=len' → logprob: -8.681463241577148
    6. '=int' → logprob: -9.931463241577148
    7. '   ' → logprob: -11.431463241577148
    8. '_' → logprob: -11.681463241577148
    9. '    ' → logprob: -11.931463241577148
    10. '-' → logprob: -12.056463241577148

Token 64: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.013056223280727863
    2. ' len' → logprob: -4.38805627822876
    3. 'vals' → logprob: -7.63805627822876
    4. 'len' → logprob: -10.138055801391602
    5. '(vals' → logprob: -11.388055801391602
    6. ' ' → logprob: -11.763055801391602
    7. ' val' → logprob: -12.763055801391602
    8. ' int' → logprob: -13.638055801391602
    9. ' to' → logprob: -14.388055801391602
    10. ' values' → logprob: -14.763055801391602

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4498052223643754e-05
    2. ' [' → logprob: -11.375014305114746
    3. '0' → logprob: -12.875014305114746
    4. ' ' → logprob: -15.875014305114746
    5. '   ' → logprob: -17.125015258789062
    6. '```' → logprob: -17.375015258789062
    7. '.pop' → logprob: -17.500015258789062
    8. '[
' → logprob: -17.625015258789062
    9. '[-' → logprob: -17.625015258789062
    10. '\[' → logprob: -18.250015258789062

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012928384239785373
    2. ' ' → logprob: -9.000129699707031
    3. '1' → logprob: -12.125129699707031
    4. '2' → logprob: -16.25012969970703
    5. '   ' → logprob: -16.25012969970703
    6. '-' → logprob: -16.37512969970703
    7. ']' → logprob: -16.81262969970703
    8. ')' → logprob: -17.25012969970703
    9. '[' → logprob: -17.43762969970703
    10. '  ' → logprob: -18.25012969970703

Token 67: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020522393751889467
    2. ']' → logprob: -6.502052307128906
    3. '])' → logprob: -7.877052307128906
    4. ')])' → logprob: -9.877052307128906
    5. ')]' → logprob: -9.877052307128906
    6. ' )' → logprob: -10.252052307128906
    7. ',' → logprob: -11.877052307128906
    8. ')
' → logprob: -11.877052307128906
    9. '+' → logprob: -12.627052307128906
    10. '<|end|>' → logprob: -13.002052307128906

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2938009202480316
    2. '<|end|>' → logprob: -1.793800950050354
    3. '
' → logprob: -3.7938008308410645
    4. ' ' → logprob: -4.1688008308410645
    5. 'n' → logprob: -5.0438008308410645
    6. '    
' → logprob: -5.2938008308410645
    7. '    ' → logprob: -5.2938008308410645
    8. '\n' → logprob: -5.6688008308410645
    9. '#' → logprob: -5.6688008308410645
    10. 'newline' → logprob: -5.9188008308410645

Token 69: ' try' (ID: 2075)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.935546875
    2. ' k' → logprob: -1.810546875
    3. 'm' → logprob: -2.060546875
    4. 'k' → logprob: -2.310546875
    5. ' s' → logprob: -3.435546875
    6. ' arr' → logprob: -3.685546875
    7. 's' → logprob: -3.810546875
    8. ' rest' → logprob: -4.185546875
    9. 'arr' → logprob: -4.435546875
    10. ' a' → logprob: -4.560546875

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031840058509260416
    2. ':
' → logprob: -5.753183841705322
    3. '   ' → logprob: -13.00318431854248
    4. ':
' → logprob: -13.37818431854248
    5. ' :' → logprob: -13.62818431854248
    6. '<|end|>' → logprob: -15.87818431854248
    7. 'except' → logprob: -16.003183364868164
    8. '):' → logprob: -16.128183364868164
    9. ':return' → logprob: -16.128183364868164
    10. ' except' → logprob: -16.253183364868164

Token 71: ' K' (ID: 658)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10723035037517548
    2. '   ' → logprob: -2.8572304248809814
    3. ':
' → logprob: -3.4822304248809814
    4. '<|end|>' → logprob: -5.232230186462402
    5. '       ' → logprob: -5.607230186462402
    6. ' ' → logprob: -6.607230186462402
    7. '    ' → logprob: -6.982230186462402
    8. 'n' → logprob: -7.482230186462402
    9. ' :' → logprob: -7.982230186462402
    10. ':
' → logprob: -8.482230186462402

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07141949981451035
    2. '=' → logprob: -2.8214194774627686
    3. ' ' → logprob: -4.821419715881348
    4. ',' → logprob: -7.196419715881348
    5. '<|end|>' → logprob: -8.571419715881348
    6. '    ' → logprob: -8.946419715881348
    7. ')' → logprob: -9.946419715881348
    8. ' ,' → logprob: -10.071419715881348
    9. ' +=' → logprob: -10.196419715881348
    10. '  ' → logprob: -10.446419715881348

Token 73: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.0073078530840575695
    2. 'vals' → logprob: -5.382308006286621
    3. ' int' → logprob: -6.132308006286621
    4. ' to' → logprob: -8.632308006286621
    5. '(vals' → logprob: -8.757308006286621
    6. 'int' → logprob: -10.007308006286621
    7. ' val' → logprob: -10.257308006286621
    8. ' n' → logprob: -10.382308006286621
    9. ' ' → logprob: -11.257308006286621
    10. ' values' → logprob: -11.757308006286621

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -13.125003814697266
    3. ' [' → logprob: -13.875003814697266
    4. '[-' → logprob: -15.750003814697266
    5. '```' → logprob: -15.750003814697266
    6. '   ' → logprob: -16.250003814697266
    7. '[
' → logprob: -16.375003814697266
    8. '\[' → logprob: -16.750003814697266
    9. '`' → logprob: -17.750003814697266
    10. ' ' → logprob: -18.000003814697266

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000526938121765852
    2. '[' → logprob: -8.125527381896973
    3. ' ' → logprob: -8.875527381896973
    4. '   ' → logprob: -9.500527381896973
    5. ']' → logprob: -12.500527381896973
    6. '```' → logprob: -13.375527381896973
    7. '][' → logprob: -13.750527381896973
    8. '  ' → logprob: -13.750527381896973
    9. ',' → logprob: -13.813027381896973
    10. ' [' → logprob: -14.063027381896973

Token 76: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001145218382589519
    2. ' )' → logprob: -7.501145362854004
    3. '<|end|>' → logprob: -7.876145362854004
    4. ')
' → logprob: -10.001145362854004
    5. ']' → logprob: -10.001145362854004
    6. '   ' → logprob: -10.251145362854004
    7. '<|end|>' → logprob: -10.626145362854004
    8. ' ' → logprob: -11.251145362854004
    9. '}' → logprob: -11.376145362854004
    10. '')' → logprob: -12.126145362854004

Token 77: '   ' (ID: 271)
  Prédit: ' except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.945426881313324
    2. 'except' → logprob: -1.3204269409179688
    3. '
' → logprob: -1.8204269409179688
    4. '<|end|>' → logprob: -1.8204269409179688
    5. '    
' → logprob: -4.570426940917969
    6. ' 
' → logprob: -5.695426940917969
    7. ' ' → logprob: -6.070426940917969
    8. '   ' → logprob: -6.945426940917969
    9. '<|end|>' → logprob: -7.320426940917969
    10. '	except' → logprob: -7.570426940917969

Token 78: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.6968980431556702
    2. 'except' (adapté à ' except') → logprob: -0.6968980431556702
    3. '
' → logprob: -6.071897983551025
    4. ' 
' → logprob: -7.821897983551025
    5. '	except' → logprob: -7.946897983551025
    6. '<|end|>' → logprob: -8.321898460388184
    7. '    
' → logprob: -8.946898460388184
    8. ' ' → logprob: -9.196898460388184
    9. 'Except' → logprob: -10.446898460388184
    10. ';' → logprob: -10.571898460388184

Token 79: ':
' (ID: 734)
  Prédit: ' Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Index' → logprob: -0.005035694222897291
    2. 'Index' → logprob: -6.130035877227783
    3. '(Index' → logprob: -6.505035877227783
    4. ':' → logprob: -6.630035877227783
    5. '[Index' → logprob: -11.005035400390625
    6. ' ' → logprob: -12.755035400390625
    7. '  ' → logprob: -12.755035400390625
    8. ' Name' → logprob: -12.880035400390625
    9. '   ' → logprob: -13.505035400390625
    10. ' Ind' → logprob: -14.005035400390625

Token 80: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.5723912119865417
    2. ':' → logprob: -1.4473912715911865
    3. ' ' → logprob: -2.3223912715911865
    4. ' pass' → logprob: -2.9473912715911865
    5. '   ' → logprob: -3.4473912715911865
    6. '       ' → logprob: -5.572391033172607
    7. '  ' → logprob: -5.822391033172607
    8. 'pass' → logprob: -6.072391033172607
    9. ' K' → logprob: -6.572391033172607
    10. ' :' → logprob: -6.572391033172607

Token 81: ' K' (ID: 658)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.6705377697944641
    2. ' K' → logprob: -0.7955377697944641
    3. 'K' (adapté à ' K') → logprob: -4.670537948608398
    4. ' ' → logprob: -5.295537948608398
    5. ' return' → logprob: -5.295537948608398
    6. ' n' → logprob: -5.545537948608398
    7. 'pass' → logprob: -5.545537948608398
    8. '       ' → logprob: -5.920537948608398
    9. '    ' → logprob: -6.420537948608398
    10. 'n' → logprob: -6.545537948608398

Token 82: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014182209968567
    2. ' =' → logprob: -1.701418161392212
    3. '=None' → logprob: -12.951417922973633
    4. ' ' → logprob: -13.076417922973633
    5. ')' → logprob: -16.326417922973633
    6. '=False' → logprob: -16.951417922973633
    7. '=[]' → logprob: -16.951417922973633
    8. '=int' → logprob: -17.076417922973633
    9. '   ' → logprob: -17.451417922973633
    10. '  ' → logprob: -17.576417922973633

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3030353784561157
    2. '1' → logprob: -1.5530353784561157
    3. ' ' → logprob: -4.053035259246826
    4. 'n' → logprob: -4.553035259246826
    5. 'None' → logprob: -5.178035259246826
    6. '10' → logprob: -5.303035259246826
    7. '-' → logprob: -5.678035259246826
    8. '2' → logprob: -6.178035259246826
    9. '3' → logprob: -6.678035259246826
    10. '5' → logprob: -7.178035259246826

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3082079589366913
    2. '1' → logprob: -1.5582079887390137
    3. 'None' → logprob: -3.9332079887390137
    4. 'n' → logprob: -4.558207988739014
    5. '10' → logprob: -4.808207988739014
    6. '-' → logprob: -5.058207988739014
    7. '2' → logprob: -5.433207988739014
    8. '3' → logprob: -6.433207988739014
    9. '100' → logprob: -6.933207988739014
    10. '5' → logprob: -7.183207988739014

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7235003113746643
    2. '<|end|>' → logprob: -0.7235003113746643
    3. '   ' → logprob: -4.2235002517700195
    4. '    
' → logprob: -5.0985002517700195
    5. '<|end|>' → logprob: -6.0985002517700195
    6. ' ' → logprob: -6.3485002517700195
    7. ' 
' → logprob: -6.8485002517700195
    8. '  
' → logprob: -7.3485002517700195
    9. '    ' → logprob: -7.3485002517700195
    10. '\n' → logprob: -7.5985002517700195

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12314359098672867
    2. '<|end|>' → logprob: -2.4981436729431152
    3. '   ' → logprob: -3.8731436729431152
    4. '    
' → logprob: -4.998143672943115
    5. ' 
' → logprob: -6.373143672943115
    6. ' ' → logprob: -6.998143672943115
    7. '\n' → logprob: -7.123143672943115
    8. '  
' → logprob: -7.373143672943115
    9. '<|end|>' → logprob: -7.873143672943115
    10. '#' → logprob: -8.373143196105957

Token 87: ' MOD' (ID: 32868)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.254772812128067
    2. ' 
' → logprob: -2.754772901535034
    3. '    
' → logprob: -2.879772901535034
    4. 'n' → logprob: -3.754772901535034
    5. '   ' → logprob: -3.754772901535034
    6. '<|end|>' → logprob: -4.129772663116455
    7. '  
' → logprob: -4.254772663116455
    8. '\n' → logprob: -4.629772663116455
    9. '   
' → logprob: -6.004772663116455
    10. '#' → logprob: -6.004772663116455

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128462627530098
    2. '=' → logprob: -2.2378463745117188
    3. '_' → logprob: -11.987846374511719
    4. ' ' → logprob: -12.237846374511719
    5. ',' → logprob: -12.487846374511719
    6. ')' → logprob: -12.862846374511719
    7. ':' → logprob: -13.237846374511719
    8. ' =
' → logprob: -13.862846374511719
    9. ' =)' → logprob: -14.112846374511719
    10. '   ' → logprob: -14.237846374511719

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28167539834976196
    2. '10' → logprob: -1.5316753387451172
    3. '100' → logprob: -3.531675338745117
    4. '998' → logprob: -10.281675338745117
    5. '1' → logprob: -11.281675338745117
    6. ' ' → logprob: -13.156675338745117
    7. '999' → logprob: -13.781675338745117
    8. 'int' → logprob: -14.531675338745117
    9. ' (' → logprob: -14.531675338745117
    10. '109' → logprob: -14.656675338745117

Token 90: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6956795454025269
    2. '100' → logprob: -0.6956795454025269
    3. '998' → logprob: -6.195679664611816
    4. '(' → logprob: -8.445679664611816
    5. '1' → logprob: -8.820679664611816
    6. ' ' → logprob: -9.820679664611816
    7. 'int' → logprob: -10.195679664611816
    8. '999' → logprob: -11.820679664611816
    9. '123' → logprob: -12.445679664611816
    10. '200' → logprob: -12.695679664611816

Token 91: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.039305005222558975
    2. '**' → logprob: -3.2893049716949463
    3. '09' → logprob: -6.914305210113525
    4. '000' → logprob: -9.289304733276367
    5. '009' → logprob: -9.539304733276367
    6. '7' → logprob: -10.289304733276367
    7. ' ' → logprob: -10.664304733276367
    8. '+' → logprob: -10.789304733276367
    9. '```' → logprob: -11.289304733276367
    10. '6' → logprob: -12.164304733276367

Token 92: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.491498531133402e-06
    2. '09' → logprob: -12.000009536743164
    3. '+' → logprob: -14.250009536743164
    4. '8' → logprob: -14.875009536743164
    5. '```' → logprob: -14.875009536743164
    6. '18' → logprob: -14.875009536743164
    7. '6' → logprob: -15.125009536743164
    8. '10' → logprob: -15.250009536743164
    9. '7' → logprob: -15.625009536743164
    10. '15' → logprob: -16.000009536743164

Token 93: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009177703177556396
    2. ' +' → logprob: -7.125917911529541
    3. '7' → logprob: -9.125917434692383
    4. '+
' → logprob: -13.000917434692383
    5. '+

' → logprob: -15.000917434692383
    6. '+</' → logprob: -15.000917434692383
    7. ' plus' → logprob: -15.250917434692383
    8. '＋' → logprob: -15.625917434692383
    9. '```' → logprob: -15.625917434692383
    10. 'plus' → logprob: -15.625917434692383

Token 94: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.981667537620524e-06
    2. '+' → logprob: -13.250001907348633
    3. '9' → logprob: -16.500001907348633
    4. '```' → logprob: -17.375001907348633
    5. ' ' → logprob: -18.375001907348633
    6. '07' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.562501907348633
    8. ' +' → logprob: -20.875001907348633
    9. '

' → logprob: -20.937501907348633
    10. '' → logprob: -20.937501907348633

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1450183093547821
    2. '   ' → logprob: -2.6450183391571045
    3. '<|end|>' → logprob: -3.3950183391571045
    4. '    
' → logprob: -4.395018100738525
    5. '\n' → logprob: -5.020018100738525
    6. ' 
' → logprob: -6.270018100738525
    7. '' → logprob: -6.520018100738525
    8. 'newline' → logprob: -6.645018100738525
    9. '#' → logprob: -6.770018100738525
    10. ')' → logprob: -6.895018100738525

Token 96: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6459662318229675
    2. '   ' → logprob: -1.3959662914276123
    3. '\n' → logprob: -2.6459662914276123
    4. '    
' → logprob: -3.5209662914276123
    5. 'n' → logprob: -3.6459662914276123
    6. '\' → logprob: -3.7709662914276123
    7. ' 
' → logprob: -4.020966053009033
    8. '#' → logprob: -4.145966053009033
    9. ' ' → logprob: -4.645966053009033
    10. '<|end|>' → logprob: -4.645966053009033

Token 97: ' arr' (ID: 1724)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25607967376708984
    2. 'n' → logprob: -2.38107967376709
    3. 'res' → logprob: -2.88107967376709
    4. 'a' → logprob: -4.75607967376709
    5. '#' → logprob: -5.00607967376709
    6. 's' → logprob: -5.13107967376709
    7. 'ans' → logprob: -5.63107967376709
    8. 'answer' → logprob: -5.63107967376709
    9. 'total' → logprob: -5.63107967376709
    10. '
' → logprob: -5.75607967376709

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029832525178790092
    2. '=' → logprob: -3.529832601547241
    3. ',' → logprob: -10.27983283996582
    4. ' ' → logprob: -11.27983283996582
    5. '[' → logprob: -11.52983283996582
    6. '=[]' → logprob: -12.02983283996582
    7. '   ' → logprob: -12.52983283996582
    8. ')' → logprob: -12.65483283996582
    9. ' =[' → logprob: -13.27983283996582
    10. '[]' → logprob: -13.27983283996582

Token 99: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.08700163662433624
    2. 'tolist' → logprob: -3.5870015621185303
    3. ' []' → logprob: -4.087001800537109
    4. '[]' → logprob: -4.337001800537109
    5. '[' → logprob: -4.462001800537109
    6. ' to' → logprob: -4.712001800537109
    7. '[to' → logprob: -6.587001800537109
    8. ' list' → logprob: -6.712001800537109
    9. '[list' → logprob: -7.337001800537109
    10. ' vals' → logprob: -7.587001800537109

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1361183524131775
    2. '1' → logprob: -2.3861184120178223
    3. 'to' → logprob: -3.7611184120178223
    4. 'int' → logprob: -5.011118412017822
    5. ' to' → logprob: -6.386118412017822
    6. ' ' → logprob: -6.761118412017822
    7. ']' → logprob: -7.261118412017822
    8. 'i' → logprob: -7.261118412017822
    9. 'n' → logprob: -8.261117935180664
    10. '(' → logprob: -8.761117935180664

Token 101: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05383521690964699
    2. ']*(' → logprob: -3.553835153579712
    3. ']*' → logprob: -3.803835153579712
    4. ' ]' → logprob: -7.303835391998291
    5. ' for' → logprob: -7.678835391998291
    6. ']+' → logprob: -8.553834915161133
    7. 'for' → logprob: -8.928834915161133
    8. ',' → logprob: -10.303834915161133
    9. ')]' → logprob: -12.178834915161133
    10. '()]' → logprob: -12.678834915161133

Token 102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' fun' (ID: 2827)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8061421513557434
    2. 'for' → logprob: -1.9311420917510986
    3. '+' → logprob: -2.3061420917510986
    4. ' arr' → logprob: -2.4311420917510986
    5. ' +' → logprob: -2.6811420917510986
    6. ' for' → logprob: -2.6811420917510986
    7. '   ' → logprob: -3.4311420917510986
    8. '<|end|>' → logprob: -3.8061420917510986
    9. '*' → logprob: -4.681142330169678
    10. '[arr' → logprob: -5.181142330169678

Token 104: ' =' (ID: 314)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17570234835147858
    2. 'ction' → logprob: -2.5507023334503174
    3. ' =' → logprob: -3.1757023334503174
    4. '=' → logprob: -4.9257025718688965
    5. 'cnt' → logprob: -4.9257025718688965
    6. 'ct' → logprob: -5.0507025718688965
    7. '   ' → logprob: -5.6757025718688965
    8. 'cs' → logprob: -5.9257025718688965
    9. 'def' → logprob: -6.1757025718688965
    10. 's' → logprob: -6.3007025718688965

Token 105: ' pow' (ID: 9779)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.24155010282993317
    2. 'lambda' → logprob: -2.3665502071380615
    3. ' [' → logprob: -2.4915502071380615
    4. '(lambda' → logprob: -3.6165502071380615
    5. ' []' → logprob: -6.241549968719482
    6. '[' → logprob: -6.366549968719482
    7. '[]' → logprob: -6.616549968719482
    8. 'arr' → logprob: -6.991549968719482
    9. ' ' → logprob: -7.116549968719482
    10. ' arr' → logprob: -7.366549968719482

Token 106: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029592646285891533
    2. '<|end|>' → logprob: -3.904592752456665
    3. '(arr' → logprob: -5.904592514038086
    4. '(K' → logprob: -6.279592514038086
    5. '(n' → logprob: -6.279592514038086
    6. 'arr' → logprob: -6.529592514038086
    7. '(pow' → logprob: -8.279592514038086
    8. '(
' → logprob: -8.654592514038086
    9. '<|end|>' → logprob: -8.779592514038086
    10. '2' → logprob: -9.654592514038086

Token 107: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03661031275987625
    2. 'def' → logprob: -4.411610126495361
    3. '(
' → logprob: -5.036610126495361
    4. '<|end|>' → logprob: -5.036610126495361
    5. '(arr' → logprob: -5.286610126495361
    6. 'arr' → logprob: -5.786610126495361
    7. '(n' → logprob: -7.161610126495361
    8. '(K' → logprob: -8.41161060333252
    9. '(pow' → logprob: -8.41161060333252
    10. '   ' → logprob: -8.78661060333252

Token 108: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4929405450820923
    2. 'def' → logprob: -1.3679405450820923
    3. '(n' → logprob: -2.7429404258728027
    4. 'for' (adapté à ' for') → logprob: -3.8679404258728027
    5. 'arr' → logprob: -4.117940425872803
    6. '(
' → logprob: -4.742940425872803
    7. '(arr' → logprob: -5.117940425872803
    8. '<|end|>' → logprob: -5.367940425872803
    9. '(K' → logprob: -5.992940425872803
    10. 'K' → logprob: -6.117940425872803

Token 109: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020462587475776672
    2. ' _' → logprob: -4.270462512969971
    3. '_' → logprob: -5.645462512969971
    4. 'i' → logprob: -6.395462512969971
    5. ' n' → logprob: -8.020462989807129
    6. ' x' → logprob: -8.395462989807129
    7. ' ' → logprob: -8.895462989807129
    8. ' range' → logprob: -9.145462989807129
    9. ' in' → logprob: -10.145462989807129
    10. '_i' → logprob: -10.270462989807129

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01453461218625307
    2. 'ef' → logprob: -5.2645344734191895
    3. 'in' → logprob: -5.3895344734191895
    4. ' ' → logprob: -6.2645344734191895
    5. ',' → logprob: -7.1395344734191895
    6. 'ay' → logprob: -7.8895344734191895
    7. '   ' → logprob: -8.764534950256348
    8. 'range' → logprob: -8.889534950256348
    9. 'e' → logprob: -9.014534950256348
    10. 'd' → logprob: -9.264534950256348

Token 111: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04875677451491356
    2. ' range' → logprob: -3.0487568378448486
    3. 'arr' → logprob: -9.17375659942627
    4. '(range' → logprob: -10.67375659942627
    5. '   ' → logprob: -11.79875659942627
    6. '[' → logprob: -11.92375659942627
    7. '	range' → logprob: -12.04875659942627
    8. 'rang' → logprob: -12.42375659942627
    9. ' ' → logprob: -12.67375659942627
    10. ' xrange' → logprob: -13.42375659942627

Token 112: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00762082589790225
    2. '(n' → logprob: -4.882620811462402
    3. ' (' → logprob: -12.132620811462402
    4. '1' → logprob: -12.882620811462402
    5. '(K' → logprob: -13.257620811462402
    6. '(len' → logprob: -13.632620811462402
    7. '((' → logprob: -14.257620811462402
    8. ' ' → logprob: -14.507620811462402
    9. '(
' → logprob: -14.632620811462402
    10. 'n' → logprob: -14.882620811462402

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08683093637228012
    2. 'n' → logprob: -2.5868308544158936
    3. 'K' → logprob: -5.961831092834473
    4. '2' → logprob: -6.211831092834473
    5. ' ' → logprob: -6.836831092834473
    6. '0' → logprob: -7.461831092834473
    7. ' n' → logprob: -7.586831092834473
    8. '(' → logprob: -7.836831092834473
    9. '(n' → logprob: -8.961831092834473
    10. ' K' → logprob: -9.211831092834473

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03341156989336014
    2. ' ,' → logprob: -3.7834115028381348
    3. ',n' → logprob: -4.658411502838135
    4. ',K' → logprob: -7.408411502838135
    5. '   ' → logprob: -11.283411979675293
    6. ',len' → logprob: -12.283411979675293
    7. ' K' → logprob: -13.283411979675293
    8. 'K' → logprob: -13.658411979675293
    9. ',k' → logprob: -13.783411979675293
    10. '(n' → logprob: -14.283411979675293

Token 115: ' K' (ID: 658)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10245487093925476
    2. ' n' → logprob: -2.352454900741577
    3. 'K' → logprob: -6.727454662322998
    4. ' K' → logprob: -7.227454662322998
    5. '   ' → logprob: -9.227455139160156
    6. '10' → logprob: -9.602455139160156
    7. ' ' → logprob: -9.727455139160156
    8. 'len' → logprob: -11.602455139160156
    9. '	n' → logprob: -11.977455139160156
    10. '  ' → logprob: -12.227455139160156

Token 116: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0892263650894165
    2. ' +' → logprob: -2.464226245880127
    3. '):' → logprob: -8.214226722717285
    4. ' ):' → logprob: -12.464226722717285
    5. '):
' → logprob: -12.589226722717285
    6. '   ' → logprob: -12.964226722717285
    7. ' ' → logprob: -13.089226722717285
    8. '+n' → logprob: -13.839226722717285
    9. ',' → logprob: -14.964226722717285
    10. '()+' → logprob: -15.089226722717285

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008116515236906707
    2. ' ' → logprob: -7.125811576843262
    3. '2' → logprob: -12.375811576843262
    4. '   ' → logprob: -13.875811576843262
    5. '+' → logprob: -14.875811576843262
    6. ')' → logprob: -15.375811576843262
    7. '  ' → logprob: -15.500811576843262
    8. '
' → logprob: -15.500811576843262
    9. '```' → logprob: -15.563311576843262
    10. '    ' → logprob: -16.188312530517578

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015629465924575925
    2. ':' → logprob: -6.87656307220459
    3. ',' → logprob: -8.25156307220459
    4. ')' → logprob: -9.00156307220459
    5. '):
' → logprob: -9.37656307220459
    6. ' ):' → logprob: -10.12656307220459
    7. '   ' → logprob: -11.00156307220459
    8. ']:' → logprob: -13.37656307220459
    9. '}:' → logprob: -14.62656307220459
    10. ' :' → logprob: -14.75156307220459

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0095432223752141
    2. '<|end|>' → logprob: -5.259543418884277
    3. ':' → logprob: -6.009543418884277
    4. '   ' → logprob: -7.384543418884277
    5. ',' → logprob: -8.009543418884277
    6. '<|end|>' → logprob: -8.884543418884277
    7. '
' → logprob: -9.009543418884277
    8. ' ' → logprob: -9.134543418884277
    9. 'arr' → logprob: -9.509543418884277
    10. ')' → logprob: -9.634543418884277

Token 120: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.3695584237575531
    2. 'arr' (adapté à ' arr') → logprob: -1.4945584535598755
    3. '   ' → logprob: -3.119558334350586
    4. ' if' → logprob: -5.119558334350586
    5. '    ' → logprob: -5.244558334350586
    6. '       ' → logprob: -5.369558334350586
    7. ' for' → logprob: -5.744558334350586
    8. '
' → logprob: -5.869558334350586
    9. ' val' → logprob: -5.869558334350586
    10. ' ' → logprob: -5.994558334350586

Token 121: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02009577862918377
    2. '.' → logprob: -4.0200958251953125
    3. ' .' → logprob: -6.8950958251953125
    4. '.extend' → logprob: -7.3950958251953125
    5. '=' → logprob: -9.520095825195312
    6. '[' → logprob: -9.645095825195312
    7. '.app' → logprob: -9.645095825195312
    8. ' +=' → logprob: -10.395095825195312
    9. ' =' → logprob: -11.020095825195312
    10. '+=' → logprob: -11.395095825195312

Token 122: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2324986457824707
    2. '[arr' → logprob: -1.7324986457824707
    3. ' [' → logprob: -4.482498645782471
    4. '[d' → logprob: -4.607498645782471
    5. '[f' → logprob: -5.857498645782471
    6. '[str' → logprob: -6.232498645782471
    7. '[(' → logprob: -6.982498645782471
    8. '[p' → logprob: -7.107498645782471
    9. '[int' → logprob: -7.107498645782471
    10. '[val' → logprob: -7.857498645782471

Token 123: 'fun' (ID: 18142)
  Prédit: 'fun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.9830462336540222
    2. 'arr' → logprob: -1.483046293258667
    3. '(fun' → logprob: -1.733046293258667
    4. '(arr' → logprob: -2.108046293258667
    5. '(' → logprob: -3.233046293258667
    6. ' (' → logprob: -4.483046054840088
    7. '(sum' → logprob: -4.733046054840088
    8. 'pow' → logprob: -4.858046054840088
    9. '(pow' → logprob: -4.983046054840088
    10. '((' → logprob: -5.233046054840088

Token 124: '(K' (ID: 28797)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.9513832926750183
    2. '(' → logprob: -1.076383352279663
    3. '(n' → logprob: -1.326383352279663
    4. '(K' → logprob: -5.826383113861084
    5. '(arr' → logprob: -6.326383113861084
    6. '(pow' → logprob: -6.576383113861084
    7. '(vals' → logprob: -7.701383113861084
    8. '((' → logprob: -7.826383113861084
    9. '(val' → logprob: -9.951383590698242
    10. 'arr' → logprob: -9.951383590698242

Token 125: '//' (ID: 393)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28950822353363037
    2. ',d' → logprob: -1.4145082235336304
    3. 'd' → logprob: -5.03950834274292
    4. '//' → logprob: -6.78950834274292
    5. ' ,' → logprob: -8.539507865905762
    6. '-' → logprob: -8.789507865905762
    7. ' d' → logprob: -9.789507865905762
    8. ' -' → logprob: -9.914507865905762
    9. '-d' → logprob: -10.164507865905762
    10. '+' → logprob: -10.477007865905762

Token 126: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000561969296541065
    2. ' d' → logprob: -7.5005621910095215
    3. ' ' → logprob: -13.000561714172363
    4. '   ' → logprob: -13.000561714172363
    5. '(d' → logprob: -13.625561714172363
    6. '(' → logprob: -14.250561714172363
    7. ')d' → logprob: -14.500561714172363
    8. ')' → logprob: -15.250561714172363
    9. '  ' → logprob: -15.250561714172363
    10. '	d' → logprob: -15.625561714172363

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09496243298053741
    2. ',d' → logprob: -2.5949623584747314
    3. ')]' → logprob: -4.8449625968933105
    4. ')' → logprob: -5.7199625968933105
    5. ' ,' → logprob: -6.0949625968933105
    6. ',n' → logprob: -6.7199625968933105
    7. ')])' → logprob: -7.7199625968933105
    8. 'd' → logprob: -8.344962120056152
    9. ',K' → logprob: -9.219962120056152
    10. ',k' → logprob: -9.344962120056152

Token 128: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.046952325850725174
    2. 'd' → logprob: -3.671952247619629
    3. ' n' → logprob: -4.421952247619629
    4. '2' → logprob: -5.046952247619629
    5. ' ' → logprob: -7.171952247619629
    6. ' d' → logprob: -7.671952247619629
    7. '3' → logprob: -7.796952247619629
    8. 'arr' → logprob: -9.296952247619629
    9. 'K' → logprob: -9.921952247619629
    10. 'N' → logprob: -10.546952247619629

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04000071436166763
    2. ')]' → logprob: -3.6650006771087646
    3. ')' → logprob: -4.415000915527344
    4. ' ,' → logprob: -7.415000915527344
    5. ',d' → logprob: -7.665000915527344
    6. ',end' → logprob: -9.290000915527344
    7. '-' → logprob: -9.915000915527344
    8. ',n' → logprob: -10.790000915527344
    9. ',K' → logprob: -10.790000915527344
    10. 'd' → logprob: -10.915000915527344

Token 130: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.008623793721199036
    2. ' MOD' → logprob: -4.7586236000061035
    3. '   ' → logprob: -11.883624076843262
    4. ' ' → logprob: -13.383624076843262
    5. '  ' → logprob: -15.008624076843262
    6. 'MO' → logprob: -15.883624076843262
    7. '_MOD' → logprob: -16.508623123168945
    8. ')' → logprob: -16.758623123168945
    9. '    ' → logprob: -16.883623123168945
    10. '.MOD' → logprob: -17.008623123168945

Token 131: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0703531801700592
    2. ')' → logprob: -2.6953532695770264
    3. ')%' → logprob: -8.320353507995605
    4. ')*' → logprob: -9.695353507995605
    5. '),' → logprob: -10.570353507995605
    6. ')],' → logprob: -10.945353507995605
    7. '))' → logprob: -11.445353507995605
    8. ')+' → logprob: -11.445353507995605
    9. ' )' → logprob: -11.445353507995605
    10. ')])' → logprob: -11.570353507995605

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035763110499829054
    2. 'for' → logprob: -7.253576278686523
    3. '    
' → logprob: -7.503576278686523
    4. ' for' → logprob: -7.503576278686523
    5. '<|end|>' → logprob: -7.628576278686523
    6. '
' → logprob: -8.003576278686523
    7. 'return' → logprob: -8.503576278686523
    8. 'print' → logprob: -8.753576278686523
    9. 'result' → logprob: -9.378576278686523
    10. ')' → logprob: -9.628576278686523

Token 133: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7140486836433411
    2. 'result' → logprob: -2.2140486240386963
    3. ' ans' → logprob: -2.3390486240386963
    4. ' for' → logprob: -2.8390486240386963
    5. 'res' → logprob: -3.3390486240386963
    6. 'for' → logprob: -3.4640486240386963
    7. 'total' → logprob: -3.5890486240386963
    8. 'print' → logprob: -3.7140486240386963
    9. ' res' → logprob: -4.089048862457275
    10. ' result' → logprob: -4.214048862457275

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08583761751651764
    2. '=' → logprob: -2.8358376026153564
    3. 's' → logprob: -3.8358376026153564
    4. 'ex' → logprob: -6.9608378410339355
    5. '_' → logprob: -8.085837364196777
    6. 'x' → logprob: -8.710837364196777
    7. ',' → logprob: -8.835837364196777
    8. ' ' → logprob: -9.210837364196777
    9. 'es' → logprob: -9.335837364196777
    10. 'd' → logprob: -9.710837364196777

Token 135: ' K' (ID: 658)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7028231024742126
    2. '0' → logprob: -0.9528231024742126
    3. 'K' → logprob: -2.9528231620788574
    4. ' ' → logprob: -3.5778231620788574
    5. 'len' → logprob: -3.7028231620788574
    6. '-' → logprob: -5.077823162078857
    7. '2' → logprob: -6.202823162078857
    8. '[' → logprob: -6.202823162078857
    9. ' K' → logprob: -6.202823162078857
    10. ' len' → logprob: -7.702823162078857

Token 136: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42137715220451355
    2. '-' → logprob: -1.421377182006836
    3. '<|end|>' → logprob: -2.921377182006836
    4. 'while' → logprob: -4.296377182006836
    5. '
' → logprob: -4.921377182006836
    6. ' +' → logprob: -5.046377182006836
    7. ' -' → logprob: -5.171377182006836
    8. '<|end|>' → logprob: -5.546377182006836
    9. ' ' → logprob: -6.296377182006836
    10. 'for' → logprob: -6.421377182006836

Token 137: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5248125195503235
    2. '<|end|>' → logprob: -1.7748124599456787
    3. '
' → logprob: -2.1498124599456787
    4. 'while' → logprob: -2.6498124599456787
    5. '   ' → logprob: -3.8998124599456787
    6. '    
' → logprob: -4.899812698364258
    7. '+' → logprob: -5.274812698364258
    8. 'for' → logprob: -5.274812698364258
    9. ' while' → logprob: -5.649812698364258
    10. ' -' → logprob: -6.149812698364258

Token 138: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03601896017789841
    2. 'for' → logprob: -4.0360188484191895
    3. ' while' → logprob: -4.6610188484191895
    4. '
' → logprob: -5.5360188484191895
    5. '   ' → logprob: -6.4110188484191895
    6. '-' → logprob: -6.6610188484191895
    7. '    
' → logprob: -7.9110188484191895
    8. 'idx' → logprob: -8.161019325256348
    9. ' for' → logprob: -8.286019325256348
    10. '=' → logprob: -9.161019325256348

Token 139: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.22599248588085175
    2. 'idx' → logprob: -1.6009924411773682
    3. '(idx' → logprob: -7.850992679595947
    4. '	idx' → logprob: -9.100992202758789
    5. '1' → logprob: -10.600992202758789
    6. ' ' → logprob: -11.225992202758789
    7. ' True' → logprob: -11.850992202758789
    8. '[idx' → logprob: -12.100992202758789
    9. 'True' → logprob: -12.225992202758789
    10. '>' → logprob: -12.350992202758789

Token 140: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.014394780620932579
    2. '>=' → logprob: -4.264394760131836
    3. ' >' → logprob: -8.889394760131836
    4. 'and' → logprob: -9.389394760131836
    5. '0' → logprob: -13.139394760131836
    6. '1' → logprob: -13.639394760131836
    7. ' and' → logprob: -13.639394760131836
    8. ' >=' → logprob: -13.889394760131836
    9. '&gt' → logprob: -14.014394760131836
    10. '≥' → logprob: -14.014394760131836

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35540151596069336
    2. '   ' → logprob: -1.4804015159606934
    3. ':' → logprob: -2.9804015159606934
    4. ' for' → logprob: -5.355401515960693
    5. ':
' → logprob: -5.480401515960693
    6. ' and' → logprob: -5.730401515960693
    7. '<|end|>' → logprob: -6.355401515960693
    8. ' ' → logprob: -7.355401515960693
    9. 'idx' → logprob: -7.480401515960693
    10. '    ' → logprob: -7.480401515960693

Token 142: ' nxt' (ID: 160200)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0714409351348877
    2. 'idx' → logprob: -1.3214409351348877
    3. 'j' → logprob: -1.8214409351348877
    4. 'i' → logprob: -2.5714409351348877
    5. ' for' → logprob: -2.8214409351348877
    6. 'val' → logprob: -3.9464409351348877
    7. '       ' → logprob: -4.071440696716309
    8. 'arr' → logprob: -4.446440696716309
    9. ' idx' → logprob: -4.571440696716309
    10. ' j' → logprob: -4.821440696716309

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31332141160964966
    2. '=' → logprob: -1.3133213520050049
    3. '_' → logprob: -10.563321113586426
    4. '   ' → logprob: -12.063321113586426
    5. ' ' → logprob: -12.313321113586426
    6. ',' → logprob: -12.438321113586426
    7. '_idx' → logprob: -12.563321113586426
    8. '=int' → logprob: -12.813321113586426
    9. '  ' → logprob: -13.188321113586426
    10. 'idx' → logprob: -13.313321113586426

Token 144: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.027801942080259323
    2. 'idx' → logprob: -3.777801990509033
    3. ' K' → logprob: -6.027801990509033
    4. 'arr' → logprob: -6.902801990509033
    5. '(K' → logprob: -7.277801990509033
    6. ' idx' → logprob: -8.277801513671875
    7. '(idx' → logprob: -9.402801513671875
    8. '(arr' → logprob: -10.527801513671875
    9. ' (' → logprob: -11.402801513671875
    10. ' ' → logprob: -11.527801513671875

Token 145: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.006252977065742016
    2. 'idx' → logprob: -5.381252765655518
    3. 'arr' → logprob: -7.006252765655518
    4. '(K' → logprob: -7.756252765655518
    5. ' K' → logprob: -8.506253242492676
    6. 'k' → logprob: -10.756253242492676
    7. '(idx' → logprob: -11.006253242492676
    8. '(arr' → logprob: -11.131253242492676
    9. ' idx' → logprob: -11.881253242492676
    10. '(' → logprob: -12.131253242492676

Token 146: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0028777492698282003
    2. 'idx' → logprob: -6.002877712249756
    3. ' *' → logprob: -7.877877712249756
    4. '[idx' → logprob: -11.252878189086914
    5. '
' → logprob: -12.752878189086914
    6. ' idx' → logprob: -12.877878189086914
    7. '(idx' → logprob: -13.127878189086914
    8. '*(' → logprob: -13.627878189086914
    9. '```' → logprob: -14.627878189086914
    10. '	idx' → logprob: -15.002878189086914

Token 147: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.0484450437361374e-05
    2. '(idx' → logprob: -10.250040054321289
    3. ' idx' → logprob: -12.375040054321289
    4. '	idx' → logprob: -14.875040054321289
    5. 'd' → logprob: -15.875040054321289
    6. '[idx' → logprob: -16.12504005432129
    7. 'id' → logprob: -17.12504005432129
    8. ' (' → logprob: -18.12504005432129
    9. '(K' → logprob: -18.12504005432129
    10. '_idx' → logprob: -18.37504005432129

Token 148: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8915926814079285
    2. 'if' → logprob: -1.1415927410125732
    3. '<|end|>' → logprob: -2.3915927410125732
    4. '
' → logprob: -2.5165927410125732
    5. '//' → logprob: -2.5165927410125732
    6. '-' → logprob: -5.766592502593994
    7. '   ' → logprob: -5.891592502593994
    8. ' -' → logprob: -6.016592502593994
    9. '<|end|>' → logprob: -6.141592502593994
    10. '#' → logprob: -6.641592502593994

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6823076605796814
    2. 'if' → logprob: -1.0573077201843262
    3. ' if' → logprob: -2.307307720184326
    4. '
' → logprob: -3.807307720184326
    5. '<|end|>' → logprob: -4.432307720184326
    6. '   ' → logprob: -5.432307720184326
    7. '<=' → logprob: -5.807307720184326
    8. 'while' → logprob: -5.932307720184326
    9. '           ' → logprob: -7.057307720184326
    10. ' ' → logprob: -8.057307243347168

Token 150: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023310234770178795
    2. ' if' → logprob: -4.14831018447876
    3. 'while' (adapté à ' while') → logprob: -5.64831018447876
    4. '<=' → logprob: -6.52331018447876
    5. '       ' → logprob: -7.02331018447876
    6. '>' → logprob: -8.273310661315918
    7. '
' → logprob: -8.273310661315918
    8. '<' → logprob: -8.648310661315918
    9. '   ' → logprob: -8.773310661315918
    10. 'n' → logprob: -9.148310661315918

Token 151: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.08895810693502426
    2. 'n' → logprob: -2.4639580249786377
    3. '<n' → logprob: -12.213957786560059
    4. ' n' → logprob: -12.338957786560059
    5. '(n' → logprob: -12.463957786560059
    6. '	n' → logprob: -14.463957786560059
    7. 'n't' → logprob: -14.713957786560059
    8. 't' → logprob: -14.963957786560059
    9. '_n' → logprob: -15.088957786560059
    10. ' ' → logprob: -15.088957786560059

Token 152: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.01506267674267292
    2. '>' → logprob: -4.3900628089904785
    3. ' <=' → logprob: -6.0150628089904785
    4. '<' → logprob: -10.64006233215332
    5. '>K' → logprob: -11.14006233215332
    6. ' >' → logprob: -11.26506233215332
    7. 'K' → logprob: -11.64006233215332
    8. '...' → logprob: -12.01506233215332
    9. '<|end|>' → logprob: -12.01506233215332
    10. '```' → logprob: -12.14006233215332

Token 153: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0010586526477709413
    2. ' K' → logprob: -6.876058578491211
    3. '   ' → logprob: -10.626058578491211
    4. ' ' → logprob: -14.626058578491211
    5. '	K' → logprob: -14.626058578491211
    6. '       ' → logprob: -15.126058578491211
    7. '>K' → logprob: -15.126058578491211
    8. 'k' → logprob: -16.25105857849121
    9. '    ' → logprob: -17.00105857849121
    10. '  ' → logprob: -18.25105857849121

Token 154: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4064747989177704
    2. 'and' → logprob: -1.2814748287200928
    3. ':
' → logprob: -3.4064748287200928
    4. ':' → logprob: -3.7814748287200928
    5. '<|end|>' → logprob: -8.281475067138672
    6. '   ' → logprob: -9.656475067138672
    7. 'nd' → logprob: -9.906475067138672
    8. ' ' → logprob: -11.281475067138672
    9. ',' → logprob: -11.781475067138672
    10. ' or' → logprob: -11.781475067138672

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3935415744781494
    2. 'arr' → logprob: -1.2685415744781494
    3. 'if' → logprob: -4.51854133605957
    4. 'idx' → logprob: -4.64354133605957
    5. '       ' → logprob: -5.01854133605957
    6. 'n' → logprob: -5.26854133605957
    7. ' arr' → logprob: -5.89354133605957
    8. '   ' → logprob: -6.51854133605957
    9. '[arr' → logprob: -6.76854133605957
    10. 'for' → logprob: -6.89354133605957

Token 156: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.004164587706327438
    2. ' arr' → logprob: -5.629164695739746
    3. '       ' → logprob: -8.129164695739746
    4. '           ' → logprob: -8.379164695739746
    5. '   ' → logprob: -11.879164695739746
    6. '```' → logprob: -12.004164695739746
    7. '	arr' → logprob: -12.129164695739746
    8. '[arr' → logprob: -12.254164695739746
    9. '
' → logprob: -12.379164695739746
    10. '(arr' → logprob: -12.379164695739746

Token 157: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0023000126238912344
    2. '[n' → logprob: -6.252299785614014
    3. '[' → logprob: -8.752300262451172
    4. '[-' → logprob: -9.127300262451172
    5. '[arr' → logprob: -9.752300262451172
    6. 'idx' → logprob: -11.127300262451172
    7. '[d' → logprob: -11.877300262451172
    8. '[next' → logprob: -12.627300262451172
    9. '[id' → logprob: -12.752300262451172
    10. '[K' → logprob: -13.502300262451172

Token 158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05913403257727623
    2. '-=' → logprob: -3.684134006500244
    3. '=' → logprob: -4.309134006500244
    4. '-' → logprob: -4.684134006500244
    5. ']=' → logprob: -5.559134006500244
    6. ']-' → logprob: -5.809134006500244
    7. '[' → logprob: -6.809134006500244
    8. ' -=' → logprob: -7.809134006500244
    9. ']=(' → logprob: -7.809134006500244
    10. ' =' → logprob: -8.684134483337402

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.698234498500824
    2. '-=' → logprob: -0.698234498500824
    3. '=(' → logprob: -6.073234558105469
    4. ' -=' → logprob: -6.448234558105469
    5. ' =' → logprob: -7.323234558105469
    6. '-' → logprob: -7.823234558105469
    7. '(' → logprob: -9.823234558105469
    8. '[' → logprob: -10.698234558105469
    9. '+=' → logprob: -10.823234558105469
    10. '*=' → logprob: -11.198234558105469

Token 160: ' arr' (ID: 1724)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.0005681642796844244
    2. ' (' → logprob: -7.500568389892578
    3. '(' → logprob: -12.250568389892578
    4. '(ans' → logprob: -12.625568389892578
    5. '[arr' → logprob: -13.375568389892578
    6. 'arr' → logprob: -13.625568389892578
    7. '   ' → logprob: -13.750568389892578
    8. '(abs' → logprob: -14.500568389892578
    9. '<arr' → logprob: -15.125568389892578
    10. '(acc' → logprob: -15.250568389892578

Token 161: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.005393126513808966
    2. 'idx' → logprob: -5.255393028259277
    3. '(idx' → logprob: -9.505393028259277
    4. '```' → logprob: -10.755393028259277
    5. '	idx' → logprob: -11.630393028259277
    6. '[(' → logprob: -11.630393028259277
    7. '[' → logprob: -11.755393028259277
    8. 'd' → logprob: -12.255393028259277
    9. 'dx' → logprob: -12.630393028259277
    10. '[
' → logprob: -12.630393028259277

Token 162: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7607080936431885
    2. '-' → logprob: -1.5107080936431885
    3. ')' → logprob: -1.6357080936431885
    4. ' -' → logprob: -2.5107080936431885
    5. '<|end|>' → logprob: -5.010707855224609
    6. '```' → logprob: -5.135707855224609
    7. ']-' → logprob: -5.510707855224609
    8. '[' → logprob: -5.635707855224609
    9. '%' → logprob: -6.135707855224609
    10. '}' → logprob: -6.635707855224609

Token 163: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.006759543903172016
    2. ' arr' → logprob: -5.0067596435546875
    3. '	arr' → logprob: -11.006759643554688
    4. '[arr' → logprob: -11.256759643554688
    5. '(arr' → logprob: -11.631759643554688
    6. '$arr' → logprob: -13.381759643554688
    7. '   ' → logprob: -13.631759643554688
    8. '<arr' → logprob: -13.756759643554688
    9. '_arr' → logprob: -14.756759643554688
    10. ' ' → logprob: -15.381759643554688

Token 164: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.625006675720215
    3. 'n' → logprob: -13.000006675720215
    4. '```' → logprob: -14.875006675720215
    5. '[next' → logprob: -15.375006675720215
    6. '	n' → logprob: -16.1250057220459
    7. '   ' → logprob: -17.0000057220459
    8. ' [' → logprob: -17.0000057220459
    9. '[
' → logprob: -17.1250057220459
    10. '(n' → logprob: -17.2500057220459

Token 165: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -2.7610454708337784e-05
    2. '[' → logprob: -11.125027656555176
    3. '```' → logprob: -11.625027656555176
    4. 'ext' → logprob: -13.750027656555176
    5. '[t' → logprob: -14.250027656555176
    6. 't' → logprob: -14.250027656555176
    7. '   ' → logprob: -15.125027656555176
    8. '``' → logprob: -15.375027656555176
    9. '[j' → logprob: -15.375027656555176
    10. '>' → logprob: -15.750027656555176

Token 166: ']
' (ID: 1592)
  Prédit: ']%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']%' → logprob: -0.3871171176433563
    2. ']' → logprob: -1.1371171474456787
    3. ' ]' → logprob: -9.512117385864258
    4. ')%' → logprob: -9.887117385864258
    5. '])' → logprob: -10.637117385864258
    6. ')' → logprob: -10.762117385864258
    7. '<|end|>' → logprob: -11.012117385864258
    8. '%' → logprob: -11.012117385864258
    9. ']>=' → logprob: -11.012117385864258
    10. ']
' → logprob: -11.762117385864258

Token 167: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3072293698787689
    2. ' %' → logprob: -2.4322292804718018
    3. ')' → logprob: -2.6822292804718018
    4. ')%' → logprob: -2.9322292804718018
    5. '[idx' → logprob: -3.8072292804718018
    6. ']%' → logprob: -4.682229518890381
    7. '<|end|>' → logprob: -4.932229518890381
    8. ']' → logprob: -4.932229518890381
    9. '%n' → logprob: -6.682229518890381
    10. 'idx' → logprob: -6.682229518890381

Token 168: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.059416696429252625
    2. 'n' → logprob: -3.6844167709350586
    3. 'idx' → logprob: -3.9344167709350586
    4. ' idx' → logprob: -6.184416770935059
    5. '%' → logprob: -6.309416770935059
    6. 'arr' → logprob: -6.559416770935059
    7. '[next' → logprob: -6.559416770935059
    8. ' %' → logprob: -7.059416770935059
    9. ' arr' → logprob: -7.184416770935059
    10. ' nex' → logprob: -7.184416770935059

Token 169: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006843480281531811
    2. ' +=' → logprob: -5.006843566894531
    3. '=' → logprob: -9.131843566894531
    4. ']+=' → logprob: -11.256843566894531
    5. '*=' → logprob: -13.006843566894531
    6. '```' → logprob: -13.006843566894531
    7. '+' → logprob: -13.756843566894531
    8. '+=(' → logprob: -14.881843566894531
    9. '+='' → logprob: -15.256843566894531
    10. '+="' → logprob: -15.256843566894531

Token 170: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0009122979827225208
    2. ' idx' → logprob: -7.000912189483643
    3. '	idx' → logprob: -14.7509126663208
    4. '1' → logprob: -15.1259126663208
    5. '(idx' → logprob: -16.000911712646484
    6. 'id' → logprob: -17.000911712646484
    7. ' ' → logprob: -17.250911712646484
    8. '[idx' → logprob: -17.750911712646484
    9. ' ' → logprob: -19.000911712646484
    10. 'index' → logprob: -19.250911712646484

Token 171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.390264093875885
    2. '<|end|>' → logprob: -1.8902640342712402
    3. '
' → logprob: -2.0152640342712402
    4. 'idx' → logprob: -4.51526403427124
    5. ')' → logprob: -5.26526403427124
    6. ' ' → logprob: -5.89026403427124
    7. ' idx' → logprob: -5.89026403427124
    8. '   ' → logprob: -6.14026403427124
    9. '<|end|>' → logprob: -6.14026403427124
    10. 'print' → logprob: -6.26526403427124

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007928249426186085
    2. '<|end|>' → logprob: -5.632928371429443
    3. ' idx' → logprob: -7.007928371429443
    4. '           ' → logprob: -7.257928371429443
    5. '[idx' → logprob: -7.507928371429443
    6. '[' → logprob: -7.632928371429443
    7. 'idx' → logprob: -7.632928371429443
    8. ' ' → logprob: -8.132927894592285
    9. ')' → logprob: -8.382927894592285
    10. '   ' → logprob: -8.382927894592285

Token 173: ' if' (ID: 538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6246976852416992
    2. ' idx' → logprob: -1.2496976852416992
    3. '       ' → logprob: -1.7496976852416992
    4. '   ' → logprob: -5.624697685241699
    5. '	idx' → logprob: -8.3746976852417
    6. '[idx' → logprob: -8.7496976852417
    7. 'arr' → logprob: -10.2496976852417
    8. ' ' → logprob: -10.4996976852417
    9. ' arr' → logprob: -10.8746976852417
    10. '(idx' → logprob: -11.3746976852417

Token 174: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.8636391162872314
    2. ' arr' → logprob: -1.1136391162872314
    3. 'idx' → logprob: -1.8636391162872314
    4. ' idx' → logprob: -2.3636391162872314
    5. ' not' → logprob: -8.113638877868652
    6. ' ' → logprob: -8.863638877868652
    7. '(arr' → logprob: -9.988638877868652
    8. 'not' → logprob: -9.988638877868652
    9. '  ' → logprob: -10.238638877868652
    10. '   ' → logprob: -10.551138877868652

Token 175: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.511406809295295e-06
    2. 'idx' → logprob: -12.375006675720215
    3. '[' → logprob: -13.625006675720215
    4. ' idx' → logprob: -14.500006675720215
    5. '	idx' → logprob: -14.875006675720215
    6. '```' → logprob: -16.3750057220459
    7. '_idx' → logprob: -16.8750057220459
    8. ' [' → logprob: -18.0000057220459
    9. '[arr' → logprob: -18.1250057220459
    10. '(idx' → logprob: -18.3750057220459

Token 176: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.23823732137680054
    2. ' <' → logprob: -1.6132373809814453
    3. '>' → logprob: -4.613237380981445
    4. ')' → logprob: -7.238237380981445
    5. '%' → logprob: -7.988237380981445
    6. ':' → logprob: -8.113237380981445
    7. ' %=' → logprob: -8.113237380981445
    8. '==' → logprob: -8.613237380981445
    9. ']' → logprob: -8.613237380981445
    10. ' >' → logprob: -8.863237380981445

Token 177: ' <' (ID: 464)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.559515118598938
    2. '<' → logprob: -1.684515118598938
    3. '%' → logprob: -2.0595149993896484
    4. ' %=' → logprob: -2.1845149993896484
    5. ' <' → logprob: -6.184514999389648
    6. ' %' → logprob: -8.809514999389648
    7. '<=' → logprob: -8.809514999389648
    8. ':' → logprob: -9.059514999389648
    9. '>=' → logprob: -9.309514999389648
    10. '==' → logprob: -10.184514999389648

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.250011444091797
    4. '```' → logprob: -18.250011444091797
    5. '>' → logprob: -18.625011444091797
    6. '[' → logprob: -19.875011444091797
    7. '۰' → logprob: -20.000011444091797
    8. ')' → logprob: -21.000011444091797
    9. '000' → logprob: -21.250011444091797
    10. ' ' → logprob: -21.250011444091797

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.125059127807617
    4. 'arr' → logprob: -17.500059127807617
    5. '=' → logprob: -17.625059127807617
    6. '-' → logprob: -17.750059127807617
    7. '[' → logprob: -17.875059127807617
    8. '>' → logprob: -18.375059127807617
    9. '۰' → logprob: -18.375059127807617
    10. '00' → logprob: -18.500059127807617

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14952923357486725
    2. ':
' → logprob: -2.274529218673706
    3. '           ' → logprob: -3.649529218673706
    4. '       ' → logprob: -4.649529457092285
    5. ' :' → logprob: -9.024529457092285
    6. ' :
' → logprob: -9.024529457092285
    7. '+' → logprob: -9.774529457092285
    8. '               ' → logprob: -10.274529457092285
    9. '   ' → logprob: -10.524529457092285
    10. ' +' → logprob: -11.149529457092285

Token 181: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21504507958889008
    2. 'arr' → logprob: -2.0900449752807617
    3. '           ' → logprob: -2.8400449752807617
    4. ' arr' → logprob: -4.715044975280762
    5. '	arr' → logprob: -6.965044975280762
    6. '	       ' → logprob: -7.465044975280762
    7. '   ' → logprob: -7.590044975280762
    8. '```' → logprob: -9.215044975280762
    9. '	   ' → logprob: -9.465044975280762
    10. '               ' → logprob: -9.715044975280762

Token 182: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.10418005287647247
    2. ' arr' → logprob: -2.479180097579956
    3. '           ' → logprob: -4.229179859161377
    4. '	arr' → logprob: -8.354180335998535
    5. '       ' → logprob: -8.729180335998535
    6. '               ' → logprob: -9.729180335998535
    7. '[arr' → logprob: -9.729180335998535
    8. '	       ' → logprob: -11.729180335998535
    9. '<arr' → logprob: -11.854180335998535
    10. '+' → logprob: -11.854180335998535

Token 183: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.7432603272027336e-06
    2. 'idx' → logprob: -13.375001907348633
    3. '	idx' → logprob: -16.125001907348633
    4. '_idx' → logprob: -18.250001907348633
    5. ' idx' → logprob: -18.250001907348633
    6. '```' → logprob: -19.625001907348633
    7. '[' → logprob: -20.750001907348633
    8. '   ' → logprob: -20.875001907348633
    9. '[arr' → logprob: -21.250001907348633
    10. '(idx' → logprob: -21.250001907348633

Token 184: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038139838725328445
    2. ']+=' → logprob: -3.288139820098877
    3. '+=' → logprob: -9.413140296936035
    4. '+' → logprob: -12.288140296936035
    5. ' ]' → logprob: -12.663140296936035
    6. ' +=' → logprob: -12.788140296936035
    7. ')' → logprob: -13.163140296936035
    8. ']+' → logprob: -13.538140296936035
    9. '```' → logprob: -13.663140296936035
    10. '   ' → logprob: -14.288140296936035

Token 185: ' %=' (ID: 117035)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001937558175995946
    2. ' +=' → logprob: -6.251937389373779
    3. ']+=' → logprob: -12.501937866210938
    4. '=' → logprob: -12.626937866210938
    5. '   ' → logprob: -13.501937866210938
    6. '%=' → logprob: -15.251937866210938
    7. '+' → logprob: -15.376937866210938
    8. '+=(' → logprob: -16.876937866210938
    9. '+='' → logprob: -17.751937866210938
    10. '```' → logprob: -18.001937866210938

Token 186: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0009118211455643177
    2. ' MOD' → logprob: -7.000911712646484
    3. '_MOD' → logprob: -15.375911712646484
    4. '.MOD' → logprob: -16.000911712646484
    5. '10' → logprob: -18.000911712646484
    6. ' ' → logprob: -18.500911712646484
    7. 'Mod' → logprob: -19.000911712646484
    8. '   ' → logprob: -19.250911712646484
    9. 'mod' → logprob: -19.375911712646484
    10. '```' → logprob: -20.750911712646484

Token 187: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024365663528442383
    2. '
' → logprob: -3.7743656635284424
    3. '   ' → logprob: -8.024365425109863
    4. 'idx' → logprob: -8.149365425109863
    5. ' idx' → logprob: -9.024365425109863
    6. '	' → logprob: -9.399365425109863
    7. '
' → logprob: -9.649365425109863
    8. '[idx' → logprob: -10.149365425109863
    9. '<|end|>' → logprob: -10.274365425109863
    10. '	idx' → logprob: -10.399365425109863

Token 188: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020533124916255474
    2. 'idx' → logprob: -6.752053260803223
    3. '   ' → logprob: -8.002053260803223
    4. ' idx' → logprob: -8.377053260803223
    5. '
' → logprob: -8.877053260803223
    6. '[idx' → logprob: -9.877053260803223
    7. '	idx' → logprob: -10.002053260803223
    8. '	' → logprob: -10.627053260803223
    9. '```' → logprob: -11.127053260803223
    10. '<|end|>' → logprob: -11.377053260803223

Token 189: ' if' (ID: 538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06925759464502335
    2. '       ' → logprob: -3.4442574977874756
    3. 'else' → logprob: -4.194257736206055
    4. 'return' → logprob: -4.819257736206055
    5. '
' → logprob: -5.444257736206055
    6. '   ' → logprob: -5.694257736206055
    7. ' idx' → logprob: -6.569257736206055
    8. 'arr' → logprob: -6.569257736206055
    9. ' else' → logprob: -7.569257736206055
    10. '```' → logprob: -8.819257736206055

Token 190: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.013294934295117855
    2. ' arr' → logprob: -5.513294696807861
    3. 'False' → logprob: -5.638294696807861
    4. '0' → logprob: -6.013294696807861
    5. 'not' → logprob: -6.888294696807861
    6. 'idx' → logprob: -7.388294696807861
    7. '1' → logprob: -8.26329517364502
    8. ' not' → logprob: -8.38829517364502
    9. ' False' → logprob: -8.51329517364502
    10. 'abs' → logprob: -8.76329517364502

Token 191: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.0206720617134124e-05
    2. 'idx' → logprob: -11.62501049041748
    3. '[arr' → logprob: -14.50001049041748
    4. '[' → logprob: -15.37501049041748
    5. '	idx' → logprob: -16.000009536743164
    6. ' idx' → logprob: -16.125009536743164
    7. '```' → logprob: -16.375009536743164
    8. '[int' → logprob: -17.375009536743164
    9. '[id' → logprob: -17.500009536743164
    10. '(idx' → logprob: -18.000009536743164

Token 192: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2851725816726685
    2. '>' → logprob: -1.5351725816726685
    3. '==' → logprob: -1.6601725816726685
    4. ' >' → logprob: -1.6601725816726685
    5. ' !=' → logprob: -2.660172462463379
    6. '!=' → logprob: -4.035172462463379
    7. ' <=' → logprob: -4.535172462463379
    8. ' <' → logprob: -4.660172462463379
    9. '<=' → logprob: -5.285172462463379
    10. '<' → logprob: -5.660172462463379

Token 193: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.36880847811698914
    2. ' ==' → logprob: -1.7438085079193115
    3. '>' → logprob: -2.2438085079193115
    4. ' >' → logprob: -4.618808269500732
    5. '!=' → logprob: -4.868808269500732
    6. '<=' → logprob: -5.743808269500732
    7. '<' → logprob: -5.868808269500732
    8. ' !=' → logprob: -6.243808269500732
    9. ':' → logprob: -7.118808269500732
    10. ' <=' → logprob: -7.618808269500732

Token 194: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039756376296281815
    2. ' ' → logprob: -3.2897562980651855
    3. 'arr' → logprob: -7.2897562980651855
    4. '1' → logprob: -7.4147562980651855
    5. ' arr' → logprob: -9.539756774902344
    6. '100' → logprob: -9.664756774902344
    7. 'K' → logprob: -9.664756774902344
    8. '10' → logprob: -9.789756774902344
    9. '=' → logprob: -10.164756774902344
    10. ' K' → logprob: -10.977256774902344

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00034774013329297304
    2. ' ' → logprob: -8.625348091125488
    3. '1' → logprob: -9.125348091125488
    4. 'arr' → logprob: -10.500348091125488
    5. '100' → logprob: -11.750348091125488
    6. '10' → logprob: -11.750348091125488
    7. 'K' → logprob: -12.250348091125488
    8. '(' → logprob: -13.625348091125488
    9. '```' → logprob: -13.750348091125488
    10. 'abs' → logprob: -14.250348091125488

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24401436746120453
    2. '               ' → logprob: -1.8690143823623657
    3. ':
' → logprob: -2.869014263153076
    4. '           ' → logprob: -6.119014263153076
    5. '):
' → logprob: -7.119014263153076
    6. '<|end|>' → logprob: -7.369014263153076
    7. '):' → logprob: -7.494014263153076
    8. ' :' → logprob: -8.244014739990234
    9. ')' → logprob: -8.369014739990234
    10. '       ' → logprob: -8.494014739990234

Token 197: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02195681817829609
    2. '           ' → logprob: -4.396956920623779
    3. 'arr' → logprob: -4.896956920623779
    4. ' arr' → logprob: -6.396956920623779
    5. '+' → logprob: -9.771956443786621
    6. '```' → logprob: -10.021956443786621
    7. '0' → logprob: -10.271956443786621
    8. '   ' → logprob: -10.396956443786621
    9. '[arr' → logprob: -11.146956443786621
    10. '       ' → logprob: -11.271956443786621

Token 198: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' (adapté à ' arr') → logprob: -0.0013683346332982183
    2. '           ' → logprob: -7.376368522644043
    3. '               ' → logprob: -7.876368522644043
    4. ' arr' → logprob: -8.001368522644043
    5. '0' → logprob: -11.376368522644043
    6. 'break' → logprob: -13.001368522644043
    7. 'raise' → logprob: -13.001368522644043
    8. '   ' → logprob: -13.126368522644043
    9. '(arr' → logprob: -13.626368522644043
    10. '[arr' → logprob: -13.626368522644043

Token 199: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.7729658540920354e-05
    2. 'idx' → logprob: -10.500027656555176
    3. '	idx' → logprob: -16.250028610229492
    4. '[arr' → logprob: -16.875028610229492
    5. '_idx' → logprob: -17.750028610229492
    6. '[index' → logprob: -18.250028610229492
    7. ' idx' → logprob: -18.375028610229492
    8. '[
' → logprob: -18.750028610229492
    9. '[' → logprob: -18.875028610229492
    10. '(idx' → logprob: -19.000028610229492

Token 200: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4763987064361572
    2. ']' → logprob: -1.6013987064361572
    3. ' +=' → logprob: -2.2263987064361572
    4. ']+=' → logprob: -2.7263987064361572
    5. '+' → logprob: -6.476398468017578
    6. ')' → logprob: -6.476398468017578
    7. '   ' → logprob: -8.351398468017578
    8. '=' → logprob: -8.476398468017578
    9. '%=' → logprob: -8.726398468017578
    10. '%' → logprob: -8.726398468017578

Token 201: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009584667161107063
    2. ' +=' → logprob: -4.759584903717041
    3. '%=' → logprob: -7.009584903717041
    4. '=' → logprob: -10.259584426879883
    5. '+' → logprob: -11.509584426879883
    6. ' %=' → logprob: -12.009584426879883
    7. '%' → logprob: -12.259584426879883
    8. '-=' → logprob: -12.884584426879883
    9. '   ' → logprob: -13.009584426879883
    10. '+=(' → logprob: -13.134584426879883

Token 202: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0003361774142831564
    2. ' MOD' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.625336647033691
    4. '_MOD' → logprob: -16.250335693359375
    5. '.MOD' → logprob: -16.750335693359375
    6. 'mod' → logprob: -17.375335693359375
    7. '0' → logprob: -18.000335693359375
    8. ' ' → logprob: -18.125335693359375
    9. '1' → logprob: -18.625335693359375
    10. '100' → logprob: -19.125335693359375

Token 203: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015264409012161195
    2. '
' → logprob: -9.750152587890625
    3. 'idx' → logprob: -10.250152587890625
    4. '        
' → logprob: -11.000152587890625
    5. '<|end|>' → logprob: -11.125152587890625
    6. '   ' → logprob: -12.250152587890625
    7. '           ' → logprob: -12.500152587890625
    8. '	' → logprob: -12.750152587890625
    9. ' idx' → logprob: -13.125152587890625
    10. '            
' → logprob: -13.125152587890625

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016396844875998795
    2. '<|end|>' → logprob: -9.625164031982422
    3. 'idx' → logprob: -9.750164031982422
    4. '   ' → logprob: -11.000164031982422
    5. '```' → logprob: -12.000164031982422
    6. '           ' → logprob: -13.000164031982422
    7. ' idx' → logprob: -13.250164031982422
    8. '<|end|>' → logprob: -13.625164031982422
    9. '[idx' → logprob: -13.750164031982422
    10. '...' → logprob: -13.875164031982422

Token 205: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036134183406829834
    2. 'idx' (adapté à ' idx') → logprob: -3.4111342430114746
    3. ' idx' → logprob: -6.286134243011475
    4. '   ' → logprob: -7.536134243011475
    5. '	idx' → logprob: -9.911133766174316
    6. '[idx' → logprob: -11.411133766174316
    7. '```' → logprob: -11.536133766174316
    8. '	' → logprob: -12.911133766174316
    9. '        
' → logprob: -13.161133766174316
    10. '           ' → logprob: -13.286133766174316

Token 206: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03833029419183731
    2. ' -=' → logprob: -3.288330316543579
    3. '-' → logprob: -8.163330078125
    4. '=' → logprob: -12.788330078125
    5. '+=' → logprob: -14.163330078125
    6. '```' → logprob: -15.663330078125
    7. '   ' → logprob: -16.663330078125
    8. ' -' → logprob: -16.788330078125
    9. '  ' → logprob: -17.038330078125
    10. ' ' → logprob: -17.663330078125

Token 207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.750001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '<|end|>' → logprob: -20.062501907348633
    6. '0' → logprob: -20.812501907348633
    7. '...' → logprob: -20.875001907348633
    8. '۱' → logprob: -21.250001907348633
    9. '-' → logprob: -21.562501907348633
    10. 'd' → logprob: -21.625001907348633

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -19.4375
    4. '   ' → logprob: -20.25
    5. '۱' → logprob: -21.0
    6. '  ' → logprob: -21.4375
    7. '`' → logprob: -21.5
    8. '１' → logprob: -21.5625
    9. '0' → logprob: -21.5625
    10. '' → logprob: -21.6875

Token 209: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0943748950958252
    2. '
' → logprob: -2.594374895095825
    3. '<|end|>' → logprob: -4.344374656677246
    4. '    
' → logprob: -6.719374656677246
    5. 'return' → logprob: -7.469374656677246
    6. ')' → logprob: -8.719374656677246
    7. ' return' → logprob: -9.219374656677246
    8. '  
' → logprob: -9.969374656677246
    9. '<|end|>' → logprob: -10.094374656677246
    10. '	return' → logprob: -10.219374656677246

Token 210: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6882799863815308
    2. '   ' → logprob: -0.9382799863815308
    3. 'print' → logprob: -2.3132801055908203
    4. ' return' → logprob: -5.31328010559082
    5. 'result' → logprob: -6.68828010559082
    6. ' print' → logprob: -8.56328010559082
    7. '    
' → logprob: -8.68828010559082
    8. 'for' → logprob: -8.81328010559082
    9. '
' → logprob: -8.93828010559082
    10. '```' → logprob: -9.31328010559082

Token 211: ' summ' (ID: 16552)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12824854254722595
    2. 'return' → logprob: -2.128248453140259
    3. 'result' → logprob: -7.253248691558838
    4. '   ' → logprob: -8.87824821472168
    5. ' print' → logprob: -8.87824821472168
    6. 'res' → logprob: -9.37824821472168
    7. 'ans' → logprob: -9.50324821472168
    8. ' return' → logprob: -9.62824821472168
    9. 'answer' → logprob: -10.12824821472168
    10. 'for' → logprob: -10.50324821472168

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7875792980194092
    2. 'ation' → logprob: -0.7875792980194092
    3. ' =' → logprob: -2.537579298019409
    4. 'ar' → logprob: -5.412579536437988
    5. 'a' → logprob: -5.662579536437988
    6. '_' → logprob: -6.662579536437988
    7. '   ' → logprob: -7.287579536437988
    8. 'ary' → logprob: -7.412579536437988
    9. '()' → logprob: -9.412579536437988
    10. '+=' → logprob: -9.412579536437988

Token 213: ' ' (ID: 220)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4957214891910553
    2. '0' → logprob: -1.120721459388733
    3. ' arr' → logprob: -3.1207215785980225
    4. 'sum' → logprob: -4.995721340179443
    5. ' ' → logprob: -5.370721340179443
    6. ' sum' → logprob: -5.495721340179443
    7. '(arr' → logprob: -5.620721340179443
    8. '(' → logprob: -6.745721340179443
    9. ' (' → logprob: -8.620721817016602
    10. '(sum' → logprob: -8.995721817016602

Token 214: '0' (ID: 15)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5523282885551453
    2. '0' → logprob: -1.05232834815979
    3. 'sum' → logprob: -2.67732834815979
    4. ' arr' → logprob: -6.427328109741211
    5. '(' → logprob: -6.552328109741211
    6. '(arr' → logprob: -6.552328109741211
    7. ' sum' → logprob: -6.677328109741211
    8. '(sum' → logprob: -7.677328109741211
    9. ' ' → logprob: -8.427328109741211
    10. 'pow' → logprob: -10.302328109741211

Token 215: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4308137893676758
    2. '<|end|>' → logprob: -1.0558137893676758
    3. ' for' → logprob: -6.555813789367676
    4. '<|end|>' → logprob: -7.930813789367676
    5. 'for' → logprob: -9.680813789367676
    6. '
' → logprob: -9.805813789367676
    7. '    ' → logprob: -9.930813789367676
    8. ')' → logprob: -9.930813789367676
    9. '    
' → logprob: -10.555813789367676
    10. ' ' → logprob: -10.680813789367676

Token 216: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012054694816470146
    2. 'd' → logprob: -7.8762054443359375
    3. 'i' → logprob: -7.8762054443359375
    4. '   ' → logprob: -8.626205444335938
    5. ' for' → logprob: -8.751205444335938
    6. 'idx' → logprob: -9.626205444335938
    7. 'arr' → logprob: -10.626205444335938
    8. 'while' → logprob: -12.251205444335938
    9. 'range' → logprob: -13.251205444335938
    10. 'k' → logprob: -13.626205444335938

Token 218: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14050358533859253
    2. ' i' → logprob: -2.6405036449432373
    3. 'd' → logprob: -3.5155036449432373
    4. 'x' → logprob: -4.140503406524658
    5. 'v' → logprob: -5.765503406524658
    6. ' d' → logprob: -6.015503406524658
    7. 'val' → logprob: -6.015503406524658
    8. 'k' → logprob: -6.390503406524658
    9. 'idx' → logprob: -6.765503406524658
    10. ' x' → logprob: -6.890503406524658

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07915481179952621
    2. 'in' → logprob: -2.5791547298431396
    3. ',' → logprob: -8.954154968261719
    4. ' ' → logprob: -9.079154968261719
    5. ' ,' → logprob: -12.579154968261719
    6. '   ' → logprob: -12.704154968261719
    7. 'n' → logprob: -12.954154968261719
    8. '=' → logprob: -13.204154968261719
    9. '	in' → logprob: -13.454154968261719
    10. '1' → logprob: -13.579154968261719

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07142305374145508
    2. ' range' → logprob: -2.696423053741455
    3. 'arr' → logprob: -6.571423053741455
    4. ' arr' → logprob: -10.196422576904297
    5. '[' → logprob: -10.821422576904297
    6. '   ' → logprob: -11.446422576904297
    7. ' ' → logprob: -12.071422576904297
    8. '1' → logprob: -12.196422576904297
    9. '(range' → logprob: -13.321422576904297
    10. 're' → logprob: -14.071422576904297

Token 221: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02771277353167534
    2. '1' → logprob: -3.652712821960449
    3. '(K' → logprob: -6.777712821960449
    4. '   ' → logprob: -9.02771282196045
    5. '(len' → logprob: -10.27771282196045
    6. ',' → logprob: -10.27771282196045
    7. ' ' → logprob: -10.77771282196045
    8. 'K' → logprob: -10.77771282196045
    9. 'len' → logprob: -10.90271282196045
    10. ' (' → logprob: -11.40271282196045

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011816701851785183
    2. 'K' → logprob: -4.511816501617432
    3. 'len' → logprob: -7.386816501617432
    4. 'n' → logprob: -9.76181697845459
    5. ' ' → logprob: -10.38681697845459
    6. '(' → logprob: -10.63681697845459
    7. '0' → logprob: -11.51181697845459
    8. '   ' → logprob: -11.63681697845459
    9. 'idx' → logprob: -11.88681697845459
    10. ' K' → logprob: -12.51181697845459

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016618752852082253
    2. ',K' → logprob: -4.141618728637695
    3. ' ,' → logprob: -7.516618728637695
    4. ',n' → logprob: -10.891618728637695
    5. ',len' → logprob: -12.141618728637695
    6. '(K' → logprob: -12.391618728637695
    7. '   ' → logprob: -12.516618728637695
    8. 'K' → logprob: -12.891618728637695
    9. ',
' → logprob: -13.391618728637695
    10. ',k' → logprob: -13.891618728637695

Token 224: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0009184855734929442
    2. ' K' → logprob: -7.375918388366699
    3. 'len' → logprob: -8.3759183883667
    4. '   ' → logprob: -9.8759183883667
    5. 'n' → logprob: -12.3759183883667
    6. ' ' → logprob: -13.3759183883667
    7. ' len' → logprob: -13.3759183883667
    8. '  ' → logprob: -13.7509183883667
    9. '(K' → logprob: -15.0009183883667
    10. 'idx' → logprob: -15.2509183883667

Token 225: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000629279064014554
    2. ' +' → logprob: -7.375629425048828
    3. '   ' → logprob: -13.875629425048828
    4. '):
' → logprob: -14.250629425048828
    5. '+
' → logprob: -14.250629425048828
    6. '):' → logprob: -15.750629425048828
    7. ',' → logprob: -16.250629425048828
    8. '```' → logprob: -16.625629425048828
    9. ')+' → logprob: -17.000629425048828
    10. '()+' → logprob: -17.000629425048828

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004946522531099617
    2. '+' → logprob: -7.625494480133057
    3. ' ' → logprob: -12.375494956970215
    4. '   ' → logprob: -13.500494956970215
    5. ' +' → logprob: -15.000494956970215
    6. ')' → logprob: -15.375494956970215
    7. '2' → logprob: -15.500494956970215
    8. '```' → logprob: -17.3754940032959
    9. ')+' → logprob: -18.0004940032959
    10. 'K' → logprob: -18.3754940032959

Token 227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47839105129241943
    2. '):' → logprob: -1.4783910512924194
    3. ':' → logprob: -1.9783910512924194
    4. ':
' → logprob: -4.353391170501709
    5. '   ' → logprob: -6.978391170501709
    6. '+' → logprob: -9.85339069366455
    7. '():
' → logprob: -10.97839069366455
    8. ')' → logprob: -11.10339069366455
    9. '):
' → logprob: -11.22839069366455
    10. ',' → logprob: -11.35339069366455

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028845442458987236
    2. '   ' → logprob: -3.9038455486297607
    3. ' summ' → logprob: -4.903845310211182
    4. 'summ' → logprob: -7.153845310211182
    5. '```' → logprob: -11.27884578704834
    6. 'sum' → logprob: -11.27884578704834
    7. ' sum' → logprob: -11.65384578704834
    8. 's' → logprob: -11.90384578704834
    9. ' s' → logprob: -12.52884578704834
    10. '    ' → logprob: -13.02884578704834

Token 229: ' summ' (ID: 16552)
  Prédit: 'summ'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'summ' (adapté à ' summ') → logprob: -0.6960868239402771
    2. ' summ' → logprob: -0.9460868239402771
    3. '   ' → logprob: -2.196086883544922
    4. '       ' → logprob: -6.321086883544922
    5. 'sum' → logprob: -10.071086883544922
    6. '```' → logprob: -10.321086883544922
    7. '    ' → logprob: -10.946086883544922
    8. '
' → logprob: -11.446086883544922
    9. ' for' → logprob: -11.571086883544922
    10. '    
' → logprob: -11.571086883544922

Token 230: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5760244727134705
    2. ' +=' → logprob: -0.8260244727134705
    3. '=' → logprob: -10.201024055480957
    4. ' =' → logprob: -10.701024055480957
    5. '+=(' → logprob: -11.201024055480957
    6. '   ' → logprob: -11.701024055480957
    7. ']+=' → logprob: -13.201024055480957
    8. '+' → logprob: -14.076024055480957
    9. ' ^=' → logprob: -14.826024055480957
    10. '    ' → logprob: -16.201025009155273

Token 231: ' i' (ID: 575)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.04812339320778847
    2. ' arr' → logprob: -3.173123359680176
    3. '(arr' → logprob: -5.423123359680176
    4. '(i' → logprob: -8.298123359680176
    5. 'i' → logprob: -8.423123359680176
    6. ' (' → logprob: -9.298123359680176
    7. ' i' → logprob: -9.423123359680176
    8. '(' → logprob: -10.298123359680176
    9. '	arr' → logprob: -12.298123359680176
    10. '   ' → logprob: -12.423123359680176

Token 232: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06997022777795792
    2. ' *' → logprob: -2.69497013092041
    3. '**' → logprob: -11.06997013092041
    4. '   ' → logprob: -12.31997013092041
    5. '*i' → logprob: -12.44497013092041
    6. ' ' → logprob: -12.94497013092041
    7. '*s' → logprob: -13.44497013092041
    8. '*(' → logprob: -13.69497013092041
    9. '```' → logprob: -13.69497013092041
    10. 'arr' → logprob: -14.19497013092041

Token 233: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00041267683263868093
    2. ' arr' → logprob: -8.000412940979004
    3. '(arr' → logprob: -9.500412940979004
    4. '   ' → logprob: -13.625412940979004
    5. '	arr' → logprob: -14.250412940979004
    6. ' (' → logprob: -16.375411987304688
    7. '[arr' → logprob: -16.375411987304688
    8. ' ' → logprob: -16.500411987304688
    9. '           ' → logprob: -16.500411987304688
    10. '$arr' → logprob: -16.750411987304688

Token 234: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017505438881926239
    2. '[idx' → logprob: -8.750175476074219
    3. '[' → logprob: -11.125175476074219
    4. 'idx' → logprob: -14.375175476074219
    5. ' [' → logprob: -14.500175476074219
    6. 'i' → logprob: -15.250175476074219
    7. '[
' → logprob: -16.50017547607422
    8. '[int' → logprob: -16.75017547607422
    9. '```' → logprob: -16.75017547607422
    10. '[index' → logprob: -17.12517547607422

Token 235: ']
' (ID: 1592)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.381775438785553
    2. ')' → logprob: -1.8817753791809082
    3. '%' → logprob: -2.256775379180908
    4. ')%' → logprob: -3.256775379180908
    5. '
' → logprob: -4.756775379180908
    6. ']' → logprob: -5.256775379180908
    7. ']%' → logprob: -5.631775379180908
    8. '<|end|>' → logprob: -6.131775379180908
    9. ' )' → logprob: -6.881775379180908
    10. '   ' → logprob: -7.631775379180908

Token 236: '   ' (ID: 271)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3402864336967468
    2. '%' → logprob: -1.5902864933013916
    3. '   ' → logprob: -2.8402864933013916
    4. '%s' → logprob: -4.2152862548828125
    5. '
' → logprob: -5.0902862548828125
    6. '<|end|>' → logprob: -6.4652862548828125
    7. ' %=' → logprob: -6.7152862548828125
    8. '%n' → logprob: -7.0902862548828125
    9. ')' → logprob: -7.4652862548828125
    10. ' mod' → logprob: -8.590286254882812

Token 237: ' print' (ID: 2123)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -1.4181309938430786
    2. '%s' → logprob: -1.4181309938430786
    3. '   ' → logprob: -1.7931309938430786
    4. '%' → logprob: -1.9181309938430786
    5. ' summ' → logprob: -2.543130874633789
    6. ' return' → logprob: -2.793130874633789
    7. 'summ' → logprob: -3.293130874633789
    8. 'return' → logprob: -4.668130874633789
    9. ' mod' → logprob: -5.043130874633789
    10. ' %=' → logprob: -5.793130874633789

Token 238: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0789351761341095
    2. '(' → logprob: -2.578935146331787
    3. '((' → logprob: -10.453935623168945
    4. '()' → logprob: -12.078935623168945
    5. ' (' → logprob: -12.703935623168945
    6. '('' → logprob: -12.953935623168945
    7. '(sum' → logprob: -13.328935623168945
    8. '(f' → logprob: -13.703935623168945
    9. '(
' → logprob: -14.203935623168945
    10. 's' → logprob: -14.328935623168945

Token 239: 'umm' (ID: 2177)
  Prédit: 'umm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umm' → logprob: -0.00037204305408522487
    2. 'mm' → logprob: -8.375371932983398
    3. 'um' → logprob: -8.875371932983398
    4. 'u' → logprob: -14.500371932983398
    5. '[' → logprob: -15.500371932983398
    6. 'm' → logprob: -15.625371932983398
    7. ')' → logprob: -15.625371932983398
    8. '(' → logprob: -15.625371932983398
    9. 'q' → logprob: -16.1253719329834
    10. 'amm' → logprob: -16.7503719329834

Token 240: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3133864998817444
    2. '%' → logprob: -1.3133864402770996
    3. ')' → logprob: -9.063386917114258
    4. ' ' → logprob: -12.813386917114258
    5. ' ' → logprob: -12.938386917114258
    6. ')%' → logprob: -13.188386917114258
    7. '%B' → logprob: -14.813386917114258
    8. ' )' → logprob: -15.188386917114258
    9. ' %)' → logprob: -15.313386917114258
    10. '   ' → logprob: -15.563386917114258

Token 241: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0015023599844425917
    2. ' MOD' → logprob: -6.501502513885498
    3. '(M' → logprob: -18.001502990722656
    4. '_MOD' → logprob: -18.251502990722656
    5. '.MOD' → logprob: -19.126502990722656
    6. '   ' → logprob: -19.501502990722656
    7. ' ' → logprob: -19.626502990722656
    8. '(' → logprob: -19.626502990722656
    9. '(mod' → logprob: -20.126502990722656
    10. 'MO' → logprob: -22.501502990722656

Token 242: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -13.875003814697266
    4. '))' → logprob: -15.625003814697266
    5. ')`' → logprob: -17.375003814697266
    6. '())' → logprob: -17.750003814697266
    7. ')}' → logprob: -18.000003814697266
    8. '```' → logprob: -18.125003814697266
    9. '`)' → logprob: -18.250003814697266
    10. ')#' → logprob: -18.625003814697266

Token 243: 'compute' (ID: 54521)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012701898231171072
    2. '()
' → logprob: -9.625126838684082
    3. '(' → logprob: -10.000126838684082
    4. '()<' → logprob: -12.875126838684082
    5. '();' → logprob: -13.000126838684082
    6. '()"' → logprob: -13.125126838684082
    7. '()

' → logprob: -13.500126838684082
    8. '()`' → logprob: -13.500126838684082
    9. '()\' → logprob: -13.500126838684082
    10. '()">' → logprob: -13.750126838684082


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 242
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 101
Tokens correctement prédits (top 10): 189
Précision stricte (1ère position): 38.84%
Précision adaptée (1ère position): 41.74%
Précision (top 10): 78.10%
================================================================================
