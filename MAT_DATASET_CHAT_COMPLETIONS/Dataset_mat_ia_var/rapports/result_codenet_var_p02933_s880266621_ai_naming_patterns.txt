================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
user_input_integer = int(input())
user_input_string = input()
if user_input_integer >= 3200:
    print(user_input_string)
else:
    print("red")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'user' (ID: 1428)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_integer' (ID: 82911)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.75704026222229
    2. '_' → logprob: -1.00704026222229
    3. ' =' → logprob: -3.00704026222229
    4. ')' → logprob: -3.13204026222229
    5. '```' → logprob: -3.63204026222229
    6. '[' → logprob: -4.007040023803711
    7. '+' → logprob: -4.757040023803711
    8. '.' → logprob: -5.007040023803711
    9. '(' → logprob: -5.507040023803711
    10. ',' → logprob: -6.257040023803711

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4039350748062134
    2. ' int' → logprob: -1.2789350748062134
    3. 'int' → logprob: -4.153934955596924
    4. '0' → logprob: -4.153934955596924
    5. ' input' → logprob: -4.278934955596924
    6. 'input' → logprob: -4.903934955596924
    7. '1' → logprob: -7.903934955596924
    8. '42' → logprob: -8.028935432434082
    9. '10' → logprob: -9.028935432434082
    10. '32' → logprob: -9.278935432434082

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003495423123240471
    2. '(user' → logprob: -6.128495216369629
    3. '```' → logprob: -7.878495216369629
    4. 'user' → logprob: -8.128495216369629
    5. '()' → logprob: -8.628495216369629
    6. '('' → logprob: -8.878495216369629
    7. 'User' → logprob: -10.253495216369629
    8. '("("' → logprob: -10.378495216369629
    9. '`' → logprob: -10.503495216369629
    10. '(input' → logprob: -10.628495216369629

Token 6: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01540889497846365
    2. ')' → logprob: -4.640408992767334
    3. '()' → logprob: -5.640408992767334
    4. '())' → logprob: -7.140408992767334
    5. '('' → logprob: -8.140408515930176
    6. '(()' → logprob: -8.640408515930176
    7. '("("' → logprob: -8.640408515930176
    8. '(""))' → logprob: -8.890408515930176
    9. '(user' → logprob: -9.015408515930176
    10. '(
' → logprob: -9.140408515930176

Token 7: 'user' (ID: 1428)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05491997301578522
    2. '%' → logprob: -3.179919958114624
    3. 'if' → logprob: -5.054920196533203
    4. '*' → logprob: -6.054920196533203
    5. ' if' → logprob: -7.304920196533203
    6. '=' → logprob: -7.679920196533203
    7. '+
' → logprob: -7.679920196533203
    8. ' ' → logprob: -8.304920196533203
    9. '_' → logprob: -8.429920196533203
    10. ')' → logprob: -8.679920196533203

Token 8: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48452168703079224
    2. '_input' → logprob: -0.9845216870307922
    3. '_put' → logprob: -4.984521865844727
    4. '_p' → logprob: -7.109521865844727
    5. '_output' → logprob: -7.234521865844727
    6. ' _' → logprob: -7.984521865844727
    7. '_s' → logprob: -8.359521865844727
    8. '_f' → logprob: -8.484521865844727
    9. '._' → logprob: -8.484521865844727
    10. '_.' → logprob: -8.859521865844727

Token 9: '_string' (ID: 8609)
  Prédit: '_integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.02061452530324459
    2. '_' → logprob: -3.8956146240234375
    3. '_in' → logprob: -10.895614624023438
    4. '_Integer' → logprob: -11.270614624023438
    5. '_INTEGER' → logprob: -11.395614624023438
    6. ' _' → logprob: -11.520614624023438
    7. '_variable' → logprob: -12.520614624023438
    8. ')' → logprob: -12.895614624023438
    9. '_)' → logprob: -13.270614624023438
    10. '```' → logprob: -13.520614624023438

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7743009328842163
    2. ')' → logprob: -1.7743009328842163
    3. '+' → logprob: -1.7743009328842163
    4. '[' → logprob: -2.274301052093506
    5. '.' → logprob: -2.524301052093506
    6. '=' → logprob: -5.274301052093506
    7. '```' → logprob: -5.774301052093506
    8. ' +' → logprob: -6.649301052093506
    9. '[:]' → logprob: -7.024301052093506
    10. '[]' → logprob: -7.524301052093506

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5232495665550232
    2. 'input' → logprob: -0.8982495665550232
    3. 'str' → logprob: -10.023249626159668
    4. ' str' → logprob: -10.273249626159668
    5. '=input' → logprob: -11.273249626159668
    6. ' ' → logprob: -11.648249626159668
    7. '(input' → logprob: -11.648249626159668
    8. '"' → logprob: -12.648249626159668
    9. '""' → logprob: -13.023249626159668
    10. ''' → logprob: -13.148249626159668

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28335100412368774
    2. '()' → logprob: -1.408350944519043
    3. ' (' → logprob: -7.658350944519043
    4. ')' → logprob: -7.783350944519043
    5. '```' → logprob: -7.783350944519043
    6. ' ' → logprob: -9.033350944519043
    7. '`()' → logprob: -9.158350944519043
    8. '`' → logprob: -9.283350944519043
    9. '(
' → logprob: -9.533350944519043
    10. '('' → logprob: -9.533350944519043

Token 13: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04566137492656708
    2. 'result' → logprob: -3.920661449432373
    3. 'print' → logprob: -4.170661449432373
    4. 'for' → logprob: -5.170661449432373
    5. 'user' → logprob: -7.295661449432373
    6. 'sum' → logprob: -7.295661449432373
    7. 'try' → logprob: -7.420661449432373
    8. 'n' → logprob: -8.045660972595215
    9. 'output' → logprob: -8.920660972595215
    10. '#' → logprob: -8.920660972595215

Token 14: ' user' (ID: 1825)
  Prédit: ' user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.003104154020547867
    2. ' ' → logprob: -6.003104209899902
    3. 'user' → logprob: -7.378104209899902
    4. ' ' → logprob: -13.503104209899902
    5. ' use' → logprob: -15.378104209899902
    6. '"user' → logprob: -15.378104209899902
    7. '(user' → logprob: -15.503104209899902
    8. '	user' → logprob: -15.628104209899902
    9. '_user' → logprob: -15.753104209899902
    10. ' (' → logprob: -15.753104209899902

Token 15: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34985649585723877
    2. 't' → logprob: -2.099856376647949
    3. '_input' → logprob: -2.724856376647949
    4. 'put' → logprob: -3.099856376647949
    5. '_t' → logprob: -3.974856376647949
    6. '_p' → logprob: -4.349856376647949
    7. ' _' → logprob: -4.599856376647949
    8. 'p' → logprob: -4.724856376647949
    9. '_put' → logprob: -5.724856376647949
    10. '_user' → logprob: -5.974856376647949

Token 16: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03149557486176491
    2. ' _' → logprob: -4.406495571136475
    3. '_integer' → logprob: -5.031495571136475
    4. ' ==' → logprob: -5.281495571136475
    5. '_user' → logprob: -6.156495571136475
    6. '_input' → logprob: -6.281495571136475
    7. '==' → logprob: -7.406495571136475
    8. ' ' → logprob: -7.656495571136475
    9. '[' → logprob: -7.906495571136475
    10. '_string' → logprob: -8.281496047973633

Token 17: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.014544345438480377
    2. ' >=' → logprob: -5.264544486999512
    3. '>' → logprob: -5.889544486999512
    4. ' <' → logprob: -6.264544486999512
    5. ' ==' → logprob: -6.389544486999512
    6. ' ' → logprob: -6.389544486999512
    7. ' <=' → logprob: -7.639544486999512
    8. ' %' → logprob: -7.764544486999512
    9. '  ' → logprob: -8.764544486999512
    10. ' !=' → logprob: -10.389544486999512

Token 18: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '18' → logprob: -0.5798200964927673
    2. '10' → logprob: -1.579820156097412
    3. ' ' → logprob: -1.579820156097412
    4. '0' → logprob: -4.329820156097412
    5. '1' → logprob: -5.204820156097412
    6. '100' → logprob: -5.329820156097412
    7. '5' → logprob: -6.829820156097412
    8. '20' → logprob: -7.079820156097412
    9. '50' → logprob: -7.329820156097412
    10. '3' → logprob: -7.579820156097412

Token 19: '320' (ID: 15415)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.22083696722984314
    2. '10' → logprob: -2.095836877822876
    3. '0' → logprob: -2.845836877822876
    4. '1' → logprob: -5.345837116241455
    5. ' ' → logprob: -5.345837116241455
    6. '100' → logprob: -5.595837116241455
    7. '5' → logprob: -6.470837116241455
    8. '50' → logprob: -7.470837116241455
    9. '3' → logprob: -7.845837116241455
    10. '21' → logprob: -8.220836639404297

Token 20: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04916633665561676
    2. ' :' → logprob: -3.049166440963745
    3. ' and' → logprob: -7.799166202545166
    4. '0' → logprob: -9.049166679382324
    5. ':
' → logprob: -11.674166679382324
    6. 'and' → logprob: -12.174166679382324
    7. ' :
' → logprob: -12.549166679382324
    8. '):' → logprob: -12.549166679382324
    9. ':**' → logprob: -12.549166679382324
    10. '>:' → logprob: -12.924166679382324

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006414268864318728
    2. ' :' → logprob: -7.375641345977783
    3. ':def' → logprob: -12.125641822814941
    4. ':
' → logprob: -12.375641822814941
    5. ':**' → logprob: -13.750641822814941
    6. ':user' → logprob: -13.750641822814941
    7. ' and' → logprob: -14.125641822814941
    8. ':return' → logprob: -15.250641822814941
    9. '):' → logprob: -15.375641822814941
    10. ':\' → logprob: -15.625641822814941

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29193559288978577
    2. ' :' → logprob: -1.4169355630874634
    3. '   ' → logprob: -5.416935443878174
    4. ' :
' → logprob: -5.916935443878174
    5. ' ' → logprob: -6.041935443878174
    6. ':
' → logprob: -7.791935443878174
    7. '    ' → logprob: -8.541935920715332
    8. ' print' → logprob: -9.416935920715332
    9. ''' → logprob: -9.666935920715332
    10. '\n' → logprob: -9.791935920715332

Token 23: ' print' (ID: 2123)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.8222030997276306
    2. ' user' → logprob: -1.0722031593322754
    3. ' ' → logprob: -2.8222031593322754
    4. ' print' → logprob: -2.8222031593322754
    5. ' if' → logprob: -3.6972031593322754
    6. 'print' (adapté à ' print') → logprob: -3.8222031593322754
    7. ' color' → logprob: -4.072203159332275
    8. 'user' → logprob: -4.322203159332275
    9. 'pass' → logprob: -4.447203159332275
    10. 'if' → logprob: -5.947203159332275

Token 24: '(user' (ID: 7195)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35923588275909424
    2. '("' → logprob: -1.4842358827590942
    3. '('' → logprob: -3.1092357635498047
    4. '("("' → logprob: -3.6092357635498047
    5. '("")' → logprob: -5.984235763549805
    6. '(user' → logprob: -8.109235763549805
    7. '()' → logprob: -8.609235763549805
    8. '(""' → logprob: -9.109235763549805
    9. '("(' → logprob: -9.359235763549805
    10. '("""' → logprob: -9.609235763549805

Token 25: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.000145137935760431
    2. '_user' → logprob: -9.625144958496094
    3. '_' → logprob: -10.000144958496094
    4. '_output' → logprob: -11.500144958496094
    5. '_name' → logprob: -12.625144958496094
    6. '_put' → logprob: -12.875144958496094
    7. '_string' → logprob: -12.875144958496094
    8. ')' → logprob: -13.250144958496094
    9. '```' → logprob: -13.250144958496094
    10. 'Input' → logprob: -13.375144958496094

Token 26: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0006664486136287451
    2. '_' → logprob: -7.625666618347168
    3. '_integer' → logprob: -9.250666618347168
    4. ' _' → logprob: -10.250666618347168
    5. ')' → logprob: -10.750666618347168
    6. ')_' → logprob: -11.125666618347168
    7. '_)' → logprob: -12.500666618347168
    8. 'string' → logprob: -14.000666618347168
    9. '_s' → logprob: -14.000666618347168
    10. ' )' → logprob: -14.125666618347168

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. '))' → logprob: -12.500006675720215
    3. ' )' → logprob: -13.125006675720215
    4. '')' → logprob: -15.500006675720215
    5. ')
' → logprob: -16.8750057220459
    6. ')))' → logprob: -17.0000057220459
    7. '`)' → logprob: -17.2500057220459
    8. '")' → logprob: -17.3750057220459
    9. ')`' → logprob: -17.3750057220459
    10. '()' → logprob: -18.5000057220459

Token 28: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.729906196298543e-06
    2. ':
' → logprob: -12.125009536743164
    3. '   ' → logprob: -12.750009536743164
    4. ' :' → logprob: -13.875009536743164
    5. ':return' → logprob: -16.625009536743164
    6. ':**' → logprob: -17.250009536743164
    7. '():' → logprob: -17.375009536743164
    8. '):' → logprob: -17.375009536743164
    9. ':def' → logprob: -17.625009536743164
    10. ',' → logprob: -17.750009536743164

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2317642718553543
    2. 'print' → logprob: -2.606764316558838
    3. ' pass' → logprob: -3.106764316558838
    4. '    ' → logprob: -3.481764316558838
    5. '"' → logprob: -3.856764316558838
    6. 'pass' → logprob: -4.231764316558838
    7. '\n' → logprob: -5.356764316558838
    8. ' print' → logprob: -5.356764316558838
    9. ''' → logprob: -5.731764316558838
    10. '    
' → logprob: -6.356764316558838

Token 31: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3470093309879303
    2. ' pass' → logprob: -1.722009301185608
    3. 'pass' → logprob: -2.5970094203948975
    4. ' print' → logprob: -3.3470094203948975
    5. '   ' → logprob: -6.222009181976318
    6. '    ' → logprob: -6.472009181976318
    7. ' for' → logprob: -7.597009181976318
    8. 'for' → logprob: -7.722009181976318
    9. ' ' → logprob: -9.597009658813477
    10. '	pass' → logprob: -9.597009658813477

Token 32: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5802316069602966
    2. '("' → logprob: -1.4552316665649414
    3. '()' → logprob: -2.3302316665649414
    4. '('' → logprob: -2.7052316665649414
    5. '("")' → logprob: -3.2052316665649414
    6. '("("' → logprob: -6.830231666564941
    7. '(user' → logprob: -7.080231666564941
    8. '(int' → logprob: -9.830231666564941
    9. '(">' → logprob: -10.080231666564941
    10. '("<' → logprob: -10.580231666564941

Token 33: 'red' (ID: 1291)
  Prédit: 'red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.05988982319831848
    2. '"' → logprob: -3.809889793395996
    3. '399' → logprob: -5.559889793395996
    4. '000' → logprob: -5.684889793395996
    5. 'a' → logprob: -6.247389793395996
    6. '色' → logprob: -6.809889793395996
    7. '444' → logprob: -6.872389793395996
    8. '以上' → logprob: -7.059889793395996
    9. 'light' → logprob: -7.247389793395996
    10. 'color' → logprob: -7.372389793395996

Token 34: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.42192697525024414
    2. '"' → logprob: -1.1719269752502441
    3. '""' → logprob: -3.671926975250244
    4. ')' → logprob: -5.171926975250244
    5. '<|end|>' → logprob: -6.671926975250244
    6. '"""' → logprob: -7.046926975250244
    7. '```' → logprob: -8.171926498413086
    8. 'print' → logprob: -8.171926498413086
    9. '">' → logprob: -8.921926498413086
    10. '``' → logprob: -9.671926498413086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 8
Tokens correctement prédits (1ère position, avec adaptation): 9
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 25.00%
Précision adaptée (1ère position): 28.12%
Précision (top 10): 78.12%
================================================================================
