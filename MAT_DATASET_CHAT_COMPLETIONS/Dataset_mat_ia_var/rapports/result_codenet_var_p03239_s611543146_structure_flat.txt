================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_t1 = input().split()
n = int(n_t1[0])
t1 = int(n_t1[1])
a = []
for _ in range(n):
    c_t2 = input().split()
    c = int(c_t2[0])
    t2 = int(c_t2[1])
    if t2 <= t1:
        a.append(c)
if len(a) == 0:
    print("TLE")
else:
    print(min(a))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_t' (ID: 838)
  → Token d'amorce (pas de prédiction)

Token 2: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4960404336452484
    2. '_' → logprob: -2.1210403442382812
    3. ')' → logprob: -2.3710403442382812
    4. ' =' → logprob: -3.2460403442382812
    5. '.' → logprob: -3.4960403442382812
    6. '+' → logprob: -3.6210403442382812
    7. '=' → logprob: -3.9960403442382812
    8. '*' → logprob: -4.496040344238281
    9. '**' → logprob: -4.746040344238281
    10. '_n' → logprob: -4.996040344238281

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02853383682668209
    2. '10' → logprob: -4.403533935546875
    3. '5' → logprob: -5.653533935546875
    4. '1' → logprob: -5.653533935546875
    5. '0' → logprob: -6.153533935546875
    6. ' np' → logprob: -6.153533935546875
    7. '20' → logprob: -7.028533935546875
    8. ' n' → logprob: -7.778533935546875
    9. ' []' → logprob: -7.903533935546875
    10. '"' → logprob: -7.903533935546875

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008696523727849126
    2. '('' → logprob: -8.125869750976562
    3. '("("' → logprob: -8.500869750976562
    4. '(
' → logprob: -8.625869750976562
    5. '[' → logprob: -9.750869750976562
    6. '"' → logprob: -10.000869750976562
    7. ''' → logprob: -10.250869750976562
    8. '_' → logprob: -11.375869750976562
    9. '(

' → logprob: -11.625869750976562
    10. '()' → logprob: -12.375869750976562

Token 6: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.010946773923933506
    2. 'split' → logprob: -4.635946750640869
    3. 'lower' → logprob: -8.135947227478027
    4. 'rstrip' → logprob: -8.260947227478027
    5. '()' → logprob: -8.385947227478027
    6. '.strip' → logprob: -8.885947227478027
    7. 'replace' → logprob: -9.760947227478027
    8. '_strip' → logprob: -10.510947227478027
    9. '```' → logprob: -10.635947227478027
    10. ')' → logprob: -10.885947227478027

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00418168306350708
    2. '()' → logprob: -5.504181861877441
    3. '('' → logprob: -10.754181861877441
    4. '("("' → logprob: -10.754181861877441
    5. '(
' → logprob: -11.004181861877441
    6. '(

' → logprob: -11.379181861877441
    7. '(**' → logprob: -12.004181861877441
    8. '```' → logprob: -12.254181861877441
    9. '"' → logprob: -12.379181861877441
    10. '(`' → logprob: -12.754181861877441

Token 8: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020232010632753372
    2. '=' → logprob: -5.145232200622559
    3. 'n' → logprob: -5.520232200622559
    4. '[n' → logprob: -6.020232200622559
    5. '.' → logprob: -6.520232200622559
    6. '#' → logprob: -6.645232200622559
    7. '_' → logprob: -7.020232200622559
    8. ' =' → logprob: -7.145232200622559
    9. '[int' → logprob: -7.145232200622559
    10. '```' → logprob: -7.770232200622559

Token 9: ' =' (ID: 314)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.18120186030864716
    2. '_' → logprob: -1.8062018156051636
    3. '[' → logprob: -6.806201934814453
    4. '[_' → logprob: -8.681201934814453
    5. '_s' → logprob: -10.181201934814453
    6. '_[' → logprob: -10.556201934814453
    7. 't' → logprob: -11.306201934814453
    8. '\[' → logprob: -11.431201934814453
    9. '```' → logprob: -11.431201934814453
    10. '[:]' → logprob: -11.556201934814453

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6946560740470886
    2. ' int' → logprob: -0.6946560740470886
    3. ' n' → logprob: -7.569655895233154
    4. 'len' → logprob: -7.569655895233154
    5. ' len' → logprob: -8.194656372070312
    6. 'n' → logprob: -9.319656372070312
    7. ' ' → logprob: -9.819656372070312
    8. '[int' → logprob: -10.944656372070312
    9. 'input' → logprob: -11.069656372070312
    10. ' input' → logprob: -11.944656372070312

Token 11: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024921279400587082
    2. '(n' → logprob: -3.774921178817749
    3. '('' → logprob: -6.774921417236328
    4. '("("' → logprob: -7.774921417236328
    5. '("' → logprob: -10.399921417236328
    6. '```' → logprob: -11.149921417236328
    7. '('_' → logprob: -11.274921417236328
    8. 'n' → logprob: -11.524921417236328
    9. '("_' → logprob: -11.649921417236328
    10. '_n' → logprob: -12.149921417236328

Token 12: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.001991801429539919
    2. '[' → logprob: -6.2519917488098145
    3. '_' → logprob: -10.626992225646973
    4. ')' → logprob: -11.126992225646973
    5. ')_' → logprob: -11.626992225646973
    6. ' _' → logprob: -12.376992225646973
    7. '[_' → logprob: -13.126992225646973
    8. '_n' → logprob: -13.251992225646973
    9. '```' → logprob: -13.251992225646973
    10. '_s' → logprob: -13.626992225646973

Token 13: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002858881198335439
    2. '[' → logprob: -8.375286102294922
    3. '_' → logprob: -10.375286102294922
    4. ')' → logprob: -11.375286102294922
    5. '_t' → logprob: -11.750286102294922
    6. '```' → logprob: -13.625286102294922
    7. '[_' → logprob: -14.000286102294922
    8. ')_' → logprob: -14.875286102294922
    9. '2' → logprob: -15.000286102294922
    10. '(' → logprob: -15.500286102294922

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00025752498186193407
    2. '[n' → logprob: -8.75025749206543
    3. ')' → logprob: -9.37525749206543
    4. '[
' → logprob: -11.50025749206543
    5. '```' → logprob: -13.62525749206543
    6. ' [' → logprob: -14.62525749206543
    7. '   ' → logprob: -15.37525749206543
    8. '[len' → logprob: -15.37525749206543
    9. '['' → logprob: -15.50025749206543
    10. '[t' → logprob: -15.62525749206543

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.191489642835222e-05
    2. '1' → logprob: -10.125041961669922
    3. ' ' → logprob: -13.500041961669922
    4. '2' → logprob: -14.750041961669922
    5. '-' → logprob: -17.875041961669922
    6. ''' → logprob: -17.875041961669922
    7. ']' → logprob: -17.937541961669922
    8. '```' → logprob: -18.187541961669922
    9. '`' → logprob: -18.312541961669922
    10. ')' → logprob: -18.375041961669922

Token 16: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11570192873477936
    2. '])' → logprob: -2.240701913833618
    3. ']' → logprob: -6.115702152252197
    4. ')])' → logprob: -7.615702152252197
    5. ')]' → logprob: -9.865701675415039
    6. '[' → logprob: -10.115701675415039
    7. ''])' → logprob: -11.240701675415039
    8. ')
' → logprob: -11.240701675415039
    9. ')n' → logprob: -11.490701675415039
    10. '`)' → logprob: -11.740701675415039

Token 17: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.031167583540081978
    2. 'm' → logprob: -3.656167507171631
    3. '_t' → logprob: -6.156167507171631
    4. '_' → logprob: -6.531167507171631
    5. ')' → logprob: -7.531167507171631
    6. ' t' → logprob: -8.281167984008789
    7. 'k' → logprob: -8.781167984008789
    8. '=' → logprob: -9.406167984008789
    9. ',' → logprob: -9.781167984008789
    10. 'n' → logprob: -10.531167984008789

Token 18: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03145861253142357
    2. ' =' → logprob: -3.781458616256714
    3. '1' → logprob: -6.281458377838135
    4. '=' → logprob: -6.406458377838135
    5. ' _' → logprob: -6.656458377838135
    6. '_t' → logprob: -6.781458377838135
    7. ' ' → logprob: -8.031458854675293
    8. '_o' → logprob: -8.031458854675293
    9. '_s' → logprob: -8.406458854675293
    10. '_i' → logprob: -8.531458854675293

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2407785952091217
    2. '_' → logprob: -1.6157785654067993
    3. ' =' → logprob: -4.86577844619751
    4. ')' → logprob: -5.74077844619751
    5. '=' → logprob: -5.99077844619751
    6. '[_' → logprob: -8.115778923034668
    7. ' _' → logprob: -8.240778923034668
    8. '[]' → logprob: -8.490778923034668
    9. '1' → logprob: -8.865778923034668
    10. '_[' → logprob: -8.990778923034668

Token 20: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10031407326459885
    2. ' int' → logprob: -2.350314140319824
    3. ' n' → logprob: -9.850314140319824
    4. 'n' → logprob: -10.225314140319824
    5. 'float' → logprob: -11.225314140319824
    6. 'input' → logprob: -13.350314140319824
    7. ' float' → logprob: -13.475314140319824
    8. ' ' → logprob: -14.600314140319824
    9. '(int' → logprob: -14.850314140319824
    10. '0' → logprob: -15.350314140319824

Token 21: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07025495916604996
    2. '(n' → logprob: -2.6952550411224365
    3. '(t' → logprob: -8.695255279541016
    4. '('' → logprob: -9.695255279541016
    5. ' (' → logprob: -10.695255279541016
    6. ''' → logprob: -11.195255279541016
    7. ' ' → logprob: -11.820255279541016
    8. '()' → logprob: -11.945255279541016
    9. '("("' → logprob: -11.945255279541016
    10. '(

' → logprob: -12.445255279541016

Token 22: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0006719246739521623
    2. '[' → logprob: -7.375671863555908
    3. 't' → logprob: -10.875672340393066
    4. ')' → logprob: -11.375672340393066
    5. '][' → logprob: -13.250672340393066
    6. ')_' → logprob: -13.375672340393066
    7. '])' → logprob: -13.500672340393066
    8. '```' → logprob: -13.625672340393066
    9. 'T' → logprob: -13.750672340393066
    10. ']_' → logprob: -14.000672340393066

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '[' → logprob: -12.125005722045898
    3. '_' → logprob: -15.000005722045898
    4. '```' → logprob: -16.8750057220459
    5. ']' → logprob: -17.1250057220459
    6. ')' → logprob: -17.1250057220459
    7. '(' → logprob: -17.2500057220459
    8. ' ' → logprob: -17.6250057220459
    9. '`' → logprob: -17.8125057220459
    10. 'a' → logprob: -18.0000057220459

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. ')' → logprob: -13.125005722045898
    3. '1' → logprob: -13.250005722045898
    4. '][' → logprob: -14.500005722045898
    5. ' [' → logprob: -14.750005722045898
    6. '```' → logprob: -14.875005722045898
    7. ')[' → logprob: -15.500005722045898
    8. ']' → logprob: -15.625005722045898
    9. '[
' → logprob: -16.6250057220459
    10. '2' → logprob: -17.1250057220459

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '0' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '])' → logprob: -15.125001907348633
    5. ']' → logprob: -17.500001907348633
    6. '2' → logprob: -17.625001907348633
    7. '```' → logprob: -17.750001907348633
    8. ')' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '' → logprob: -18.875001907348633

Token 26: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '])' → logprob: -13.875004768371582
    3. '))' → logprob: -14.250004768371582
    4. '')' → logprob: -14.625004768371582
    5. '）' → logprob: -14.625004768371582
    6. '`)' → logprob: -14.875004768371582
    7. ')t' → logprob: -15.250004768371582
    8. ']' → logprob: -15.625004768371582
    9. ')n' → logprob: -15.625004768371582
    10. ')])' → logprob: -15.875004768371582

Token 27: 'a' (ID: 64)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6987028121948242
    2. '[' → logprob: -1.6987028121948242
    3. '#' → logprob: -2.323702812194824
    4. ',' → logprob: -2.698702812194824
    5. ' ' → logprob: -2.698702812194824
    6. 'for' → logprob: -2.698702812194824
    7. 't' → logprob: -2.948702812194824
    8. ')' → logprob: -3.198702812194824
    9. 'n' → logprob: -3.198702812194824
    10. 'a' → logprob: -3.448702812194824

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34561485052108765
    2. '=' → logprob: -1.4706149101257324
    3. '[' → logprob: -3.4706149101257324
    4. 'r' → logprob: -5.220614910125732
    5. '1' → logprob: -5.345614910125732
    6. ']' → logprob: -5.970614910125732
    7. ')' → logprob: -6.095614910125732
    8. ' ' → logprob: -6.095614910125732
    9. ',' → logprob: -6.220614910125732
    10. '_' → logprob: -6.220614910125732

Token 29: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6991092562675476
    2. '[]' → logprob: -1.5741093158721924
    3. 'int' → logprob: -1.9491093158721924
    4. '[int' → logprob: -2.3241093158721924
    5. ' list' → logprob: -3.4491093158721924
    6. ' []' → logprob: -4.949109077453613
    7. 'input' → logprob: -5.074109077453613
    8. '[' → logprob: -5.824109077453613
    9. 'float' → logprob: -6.574109077453613
    10. ' [' → logprob: -6.699109077453613

Token 30: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003110327525064349
    2. 'f' → logprob: -9.375310897827148
    3. ' for' → logprob: -9.625310897827148
    4. 'n' → logprob: -10.000310897827148
    5. '\n' → logprob: -10.750310897827148
    6. '0' → logprob: -10.875310897827148
    7. '
' → logprob: -11.000310897827148
    8. '```' → logprob: -11.500310897827148
    9. '=' → logprob: -11.750310897827148
    10. '.' → logprob: -11.875310897827148

Token 31: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08997585624456406
    2. '_' → logprob: -2.8399758338928223
    3. ' _' → logprob: -4.089975833892822
    4. 'i' → logprob: -4.839975833892822
    5. ' ' → logprob: -5.839975833892822
    6. '_i' → logprob: -9.96497631072998
    7. ' ' → logprob: -12.08997631072998
    8. '	i' → logprob: -12.46497631072998
    9. ' ‌' → logprob: -12.58997631072998
    10. '  ' → logprob: -13.46497631072998

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024214372970163822
    2. 'in' → logprob: -6.3774213790893555
    3. ' ' → logprob: -7.2524213790893555
    4. '<|end|>' → logprob: -13.377421379089355
    5. 'range' → logprob: -13.502421379089355
    6. '	in' → logprob: -13.627421379089355
    7. 'n' → logprob: -13.627421379089355
    8. ' i' → logprob: -13.877421379089355
    9. ' n' → logprob: -14.377421379089355
    10. '  ' → logprob: -14.502421379089355

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16024291515350342
    2. ' range' → logprob: -1.9102429151535034
    3. 'a' → logprob: -11.410243034362793
    4. '	range' → logprob: -13.035243034362793
    5. 'ran' → logprob: -13.660243034362793
    6. 'n' → logprob: -13.660243034362793
    7. ' a' → logprob: -14.035243034362793
    8. '(range' → logprob: -14.535243034362793
    9. ' ' → logprob: -15.035243034362793
    10. ' ran' → logprob: -15.160243034362793

Token 34: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20172926783561707
    2. '(' → logprob: -1.7017292976379395
    3. ' (' → logprob: -8.076728820800781
    4. '(int' → logprob: -13.201728820800781
    5. '(s' → logprob: -14.076728820800781
    6. ' n' → logprob: -14.326728820800781
    7. 'n' → logprob: -14.576728820800781
    8. '(range' → logprob: -14.701728820800781
    9. '(
' → logprob: -14.826728820800781
    10. '()' → logprob: -15.701728820800781

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011473640333861113
    2. ')' → logprob: -7.126147270202637
    3. ':' → logprob: -8.376147270202637
    4. '):
' → logprob: -9.251147270202637
    5. ' ):' → logprob: -11.376147270202637
    6. '):
' → logprob: -14.501147270202637
    7. '+' → logprob: -14.626147270202637
    8. '():' → logprob: -14.626147270202637
    9. 'a' → logprob: -14.876147270202637
    10. ',' → logprob: -15.126147270202637

Token 36: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.34938845038414
    2. 'a' → logprob: -1.2243884801864624
    3. '   ' → logprob: -8.349388122558594
    4. '```' → logprob: -9.099388122558594
    5. ' input' → logprob: -9.474388122558594
    6. ' data' → logprob: -9.724388122558594
    7. 'i' → logprob: -9.724388122558594
    8. 'x' → logprob: -10.224388122558594
    9. ' s' → logprob: -10.349388122558594
    10. ' i' → logprob: -10.349388122558594

Token 37: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19378994405269623
    2. ' a' → logprob: -1.8187899589538574
    3. 'x' → logprob: -5.193789958953857
    4. 'int' → logprob: -5.943789958953857
    5. 'data' → logprob: -6.818789958953857
    6. '   ' → logprob: -7.443789958953857
    7. 'num' → logprob: -7.568789958953857
    8. ' data' → logprob: -7.818789958953857
    9. 's' → logprob: -7.943789958953857
    10. 'input' → logprob: -8.0687894821167

Token 38: '_t' (ID: 838)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1636861115694046
    2. '=int' → logprob: -3.0386860370635986
    3. '=' → logprob: -3.2886860370635986
    4. ' ' → logprob: -3.9136860370635986
    5. ',' → logprob: -4.038686275482178
    6. '.append' → logprob: -4.913686275482178
    7. '=input' → logprob: -5.538686275482178
    8. 'h' → logprob: -5.788686275482178
    9. 'ont' → logprob: -6.038686275482178
    10. 'a' → logprob: -6.413686275482178

Token 39: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005147300660610199
    2. ' =' → logprob: -6.005147457122803
    3. 'emp' → logprob: -7.130147457122803
    4. 'a' → logprob: -7.255147457122803
    5. '=' → logprob: -8.255146980285645
    6. 'i' → logprob: -8.630146980285645
    7. ',' → logprob: -8.880146980285645
    8. 'em' → logprob: -9.505146980285645
    9. '_i' → logprob: -9.755146980285645
    10. 'e' → logprob: -9.755146980285645

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05623391270637512
    2. '=' → logprob: -3.5562338829040527
    3. '1' → logprob: -3.6812338829040527
    4. '2' → logprob: -8.181234359741211
    5. 'ime' → logprob: -8.806234359741211
    6. 'emp' → logprob: -9.306234359741211
    7. ',' → logprob: -9.306234359741211
    8. ' ' → logprob: -10.056234359741211
    9. 'ype' → logprob: -10.306234359741211
    10. '_' → logprob: -10.306234359741211

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31403860449790955
    2. ' input' → logprob: -1.314038634300232
    3. 'list' → logprob: -7.3140387535095215
    4. ' list' → logprob: -9.314038276672363
    5. 'int' → logprob: -11.314038276672363
    6. ' ' → logprob: -13.439038276672363
    7. '[input' → logprob: -13.939038276672363
    8. '(input' → logprob: -14.064038276672363
    9. '=input' → logprob: -14.189038276672363
    10. ' int' → logprob: -14.189038276672363

Token 42: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2015296071767807
    2. '().' → logprob: -1.701529622077942
    3. '()>' → logprob: -10.451529502868652
    4. '())' → logprob: -10.951529502868652
    5. '()<' → logprob: -11.576529502868652
    6. '()='' → logprob: -11.576529502868652
    7. '`()' → logprob: -11.951529502868652
    8. '()`' → logprob: -12.201529502868652
    9. '()?>' → logprob: -12.576529502868652
    10. '(' → logprob: -12.701529502868652

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.1093578804284334e-05
    2. 'strip' → logprob: -10.000051498413086
    3. 'rstrip' → logprob: -12.750051498413086
    4. ' split' → logprob: -13.375051498413086
    5. 'spl' → logprob: -14.000051498413086
    6. 'plit' → logprob: -15.750051498413086
    7. '(split' → logprob: -16.625051498413086
    8. '.split' → logprob: -16.750051498413086
    9. 'sp' → logprob: -17.125051498413086
    10. 's' → logprob: -17.125051498413086

Token 44: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00030674142180942
    2. '()
' → logprob: -8.625307083129883
    3. '()[' → logprob: -9.375307083129883
    4. '(' → logprob: -11.375307083129883
    5. '()]' → logprob: -11.625307083129883
    6. '())' → logprob: -11.875307083129883
    7. ')' → logprob: -12.750307083129883
    8. '()`' → logprob: -13.125307083129883
    9. '()\' → logprob: -13.250307083129883
    10. ' ()' → logprob: -13.625307083129883

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.011900107376277447
    2. 'a' → logprob: -4.761899948120117
    3. 't' → logprob: -5.761899948120117
    4. ' c' → logprob: -9.636899948120117
    5. '<|end|>' → logprob: -10.761899948120117
    6. ' ' → logprob: -11.261899948120117
    7. 'b' → logprob: -11.511899948120117
    8. '   ' → logprob: -12.511899948120117
    9. '```' → logprob: -12.761899948120117
    10. ' t' → logprob: -12.886899948120117

Token 47: ' =' (ID: 314)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.012834052555263042
    2. 't' → logprob: -4.762834072113037
    3. '_' → logprob: -6.137834072113037
    4. ' =' → logprob: -6.512834072113037
    5. ',' → logprob: -9.012833595275879
    6. '=' → logprob: -9.262833595275879
    7. '<|end|>' → logprob: -9.387833595275879
    8. ',t' → logprob: -9.762833595275879
    9. '[' → logprob: -10.387833595275879
    10. ')' → logprob: -10.762833595275879

Token 48: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024832691997289658
    2. ' int' → logprob: -6.002483367919922
    3. 'c' → logprob: -12.002483367919922
    4. ' c' → logprob: -14.002483367919922
    5. 'float' → logprob: -14.752483367919922
    6. '=int' → logprob: -16.252483367919922
    7. '[int' → logprob: -16.877483367919922
    8. '   ' → logprob: -17.127483367919922
    9. '(int' → logprob: -17.627483367919922
    10. '	int' → logprob: -18.127483367919922

Token 49: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.006717743817716837
    2. '(' → logprob: -5.006717681884766
    3. 'c' → logprob: -14.756717681884766
    4. '(
' → logprob: -14.881717681884766
    5. ')c' → logprob: -15.006717681884766
    6. '(t' → logprob: -15.381717681884766
    7. '(

' → logprob: -15.506717681884766
    8. '(s' → logprob: -15.506717681884766
    9. '_c' → logprob: -15.756717681884766
    10. ' (' → logprob: -16.256717681884766

Token 50: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.875005722045898
    3. '_' → logprob: -13.625005722045898
    4. '_c' → logprob: -14.375005722045898
    5. ')' → logprob: -15.125005722045898
    6. '_tokens' → logprob: -15.625005722045898
    7. '_s' → logprob: -16.2500057220459
    8. ' _' → logprob: -16.2500057220459
    9. '_token' → logprob: -17.0000057220459
    10. 't' → logprob: -17.8750057220459

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.937500953674316
    3. '```' → logprob: -16.0625
    4. '1' → logprob: -16.4375
    5. '_' → logprob: -17.125
    6. '_t' → logprob: -17.6875
    7. '২' → logprob: -18.4375
    8. '' → logprob: -18.5
    9. '۲' → logprob: -18.5625
    10. '₂' → logprob: -18.625

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -14.000000953674316
    3. ')' → logprob: -15.375000953674316
    4. '1' → logprob: -16.750001907348633
    5. '[
' → logprob: -16.875001907348633
    6. ' [' → logprob: -17.500001907348633
    7. ')[' → logprob: -18.000001907348633
    8. '```' → logprob: -18.250001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '][' → logprob: -19.375001907348633

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.125
    3. ' ' → logprob: -16.5
    4. '1' → logprob: -17.75
    5. ')' → logprob: -18.0
    6. '۰' → logprob: -18.0
    7. '<|end|>' → logprob: -18.625
    8. '٠' → logprob: -20.625
    9. '０' → logprob: -20.8125
    10. '<|end|>' → logprob: -20.875

Token 54: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01879148744046688
    2. '])' → logprob: -4.018791675567627
    3. ']' → logprob: -7.518791675567627
    4. ')
' → logprob: -10.143791198730469
    5. ')]' → logprob: -10.768791198730469
    6. ''])' → logprob: -11.518791198730469
    7. '')' → logprob: -12.018791198730469
    8. ' )' → logprob: -12.143791198730469
    9. '）' → logprob: -13.018791198730469
    10. '`)' → logprob: -13.018791198730469

Token 55: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08445008099079132
    2. ' 
' → logprob: -3.5844500064849854
    3. ' t' → logprob: -3.9594500064849854
    4. 't' → logprob: -4.3344502449035645
    5. '<|end|>' → logprob: -4.7094502449035645
    6. ' c' → logprob: -5.8344502449035645
    7. '    ' → logprob: -5.9594502449035645
    8. 'c' → logprob: -6.4594502449035645
    9. '   ' → logprob: -6.8344502449035645
    10. '  ' → logprob: -7.2094502449035645

Token 56: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.006028692703694105
    2. ' t' → logprob: -5.131028652191162
    3. '_t' → logprob: -10.13102912902832
    4. 'c' → logprob: -10.50602912902832
    5. '`t' → logprob: -11.25602912902832
    6. '	t' → logprob: -12.13102912902832
    7. 'b' → logprob: -12.50602912902832
    8. '   ' → logprob: -12.63102912902832
    9. ' ' → logprob: -13.13102912902832
    10. '```' → logprob: -13.38102912902832

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -11.500014305114746
    3. '=' → logprob: -13.500014305114746
    4. ' =' → logprob: -13.750014305114746
    5. ' ' → logprob: -14.375014305114746
    6. '₂' → logprob: -15.500014305114746
    7. 't' → logprob: -16.12501335144043
    8. '_=' → logprob: -16.25001335144043
    9. 'c' → logprob: -16.50001335144043
    10. '۲' → logprob: -16.62501335144043

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231816172599792
    2. ' =' → logprob: -0.8981816172599792
    3. '_' → logprob: -11.148181915283203
    4. ')' → logprob: -11.273181915283203
    5. '=int' → logprob: -11.398181915283203
    6. '[' → logprob: -11.523181915283203
    7. ' ' → logprob: -12.648181915283203
    8. 's' → logprob: -13.523181915283203
    9. 'space' → logprob: -13.773181915283203
    10. '   ' → logprob: -14.148181915283203

Token 59: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004309076175559312
    2. ' int' → logprob: -7.750431060791016
    3. '(int' → logprob: -16.250431060791016
    4. 'c' → logprob: -16.625431060791016
    5. '=int' → logprob: -17.750431060791016
    6. '[int' → logprob: -18.375431060791016
    7. '<int' → logprob: -19.250431060791016
    8. 'ints' → logprob: -19.750431060791016
    9. ':int' → logprob: -20.375431060791016
    10. '   ' → logprob: -20.625431060791016

Token 60: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0005081149865873158
    2. '(' → logprob: -7.6255083084106445
    3. ')c' → logprob: -11.000508308410645
    4. ')' → logprob: -13.750508308410645
    5. ' (' → logprob: -13.875508308410645
    6. 'c' → logprob: -13.875508308410645
    7. '[c' → logprob: -16.375507354736328
    8. ')(' → logprob: -16.625507354736328
    9. '(code' → logprob: -17.000507354736328
    10. '((' → logprob: -17.125507354736328

Token 61: '_t' (ID: 838)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12332169711589813
    2. '_t' → logprob: -2.748321771621704
    3. '[' → logprob: -3.248321771621704
    4. '1' → logprob: -4.373321533203125
    5. ')' → logprob: -8.498321533203125
    6. ' ' → logprob: -9.748321533203125
    7. '```' → logprob: -10.123321533203125
    8. '][' → logprob: -10.248321533203125
    9. '])' → logprob: -10.498321533203125
    10. ']' → logprob: -10.748321533203125

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.672236824873835e-05
    2. '1' → logprob: -9.625076293945312
    3. '[' → logprob: -11.875076293945312
    4. ' ' → logprob: -13.250076293945312
    5. '```' → logprob: -14.500076293945312
    6. '_' → logprob: -15.187576293945312
    7. '(' → logprob: -15.562576293945312
    8. ']' → logprob: -15.562576293945312
    9. '])' → logprob: -15.750076293945312
    10. '   ' → logprob: -16.125076293945312

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.955703818472102e-05
    2. '1' → logprob: -10.125059127807617
    3. ')' → logprob: -11.500059127807617
    4. ']' → logprob: -12.750059127807617
    5. '])' → logprob: -13.000059127807617
    6. '][' → logprob: -14.000059127807617
    7. '2' → logprob: -14.250059127807617
    8. ' [' → logprob: -14.375059127807617
    9. '```' → logprob: -14.375059127807617
    10. '   ' → logprob: -14.625059127807617

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031389365904033184
    2. '0' → logprob: -8.125313758850098
    3. ' ' → logprob: -11.750313758850098
    4. '])' → logprob: -11.875313758850098
    5. ']' → logprob: -14.250313758850098
    6. ')' → logprob: -14.250313758850098
    7. '-' → logprob: -14.375313758850098
    8. '[' → logprob: -15.250313758850098
    9. '   ' → logprob: -15.812813758850098
    10. ')]' → logprob: -16.187814712524414

Token 65: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.633853652398102e-05
    2. ')
' → logprob: -9.875056266784668
    3. '))' → logprob: -13.875056266784668
    4. '   ' → logprob: -13.875056266784668
    5. ' )' → logprob: -14.500056266784668
    6. '）' → logprob: -14.625056266784668
    7. ']' → logprob: -14.875056266784668
    8. '')' → logprob: -14.875056266784668
    9. '])' → logprob: -15.375056266784668
    10. '`)' → logprob: -15.500056266784668

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01170830987393856
    2. 'a' → logprob: -5.0117082595825195
    3. '<|end|>' → logprob: -5.6367082595825195
    4. ')' → logprob: -7.6367082595825195
    5. '    
' → logprob: -8.38670825958252
    6. ' ' → logprob: -9.26170825958252
    7. ' a' → logprob: -9.51170825958252
    8. ' if' → logprob: -9.76170825958252
    9. '    ' → logprob: -9.76170825958252
    10. '  ' → logprob: -9.76170825958252

Token 67: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09811341762542725
    2. ' a' → logprob: -3.223113536834717
    3. '   ' → logprob: -3.348113536834717
    4. 'd' → logprob: -5.473113536834717
    5. ')' → logprob: -5.598113536834717
    6. 'diff' → logprob: -6.348113536834717
    7. '_' → logprob: -6.973113536834717
    8. '<|end|>' → logprob: -6.973113536834717
    9. 'b' → logprob: -7.098113536834717
    10. 'difference' → logprob: -7.348113536834717

Token 68: ' t' (ID: 260)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.26225244998931885
    2. 'abs' → logprob: -2.0122523307800293
    3. ' t' → logprob: -2.7622523307800293
    4. 't' → logprob: -3.8872523307800293
    5. ' c' → logprob: -5.637252330780029
    6. '(abs' → logprob: -5.887252330780029
    7. ' a' → logprob: -5.887252330780029
    8. 'a' → logprob: -6.512252330780029
    9. 'c' → logprob: -6.762252330780029
    10. ' ' → logprob: -7.262252330780029

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05556193366646767
    2. '1' → logprob: -2.9305620193481445
    3. '_' → logprob: -8.055562019348145
    4. '==' → logprob: -8.430562019348145
    5. '!=' → logprob: -10.180562019348145
    6. ' ==' → logprob: -10.305562019348145
    7. '>' → logprob: -11.180562019348145
    8. '```' → logprob: -11.368062019348145
    9. ' ' → logprob: -11.493062019348145
    10. ' !=' → logprob: -12.180562019348145

Token 70: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6631903052330017
    2. '>' → logprob: -1.5381903648376465
    3. ' <' → logprob: -1.7881903648376465
    4. '<' → logprob: -3.2881903648376465
    5. ' ==' → logprob: -3.5381903648376465
    6. '==' → logprob: -4.5381903648376465
    7. ' !=' → logprob: -4.6631903648376465
    8. ' <=' → logprob: -5.0381903648376465
    9. '!=' → logprob: -6.0381903648376465
    10. ' >=' → logprob: -6.1631903648376465

Token 71: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008656292222440243
    2. ' t' → logprob: -4.7586565017700195
    3. '100' → logprob: -12.00865650177002
    4. '20' → logprob: -12.13365650177002
    5. ' ' → logprob: -12.25865650177002
    6. '0' → logprob: -12.63365650177002
    7. '10' → logprob: -12.75865650177002
    8. '30' → logprob: -12.88365650177002
    9. '1' → logprob: -13.00865650177002
    10. 'a' → logprob: -13.50865650177002

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022249009634833783
    2. '+' → logprob: -8.875222206115723
    3. ' ' → logprob: -10.625222206115723
    4. 't' → logprob: -11.500222206115723
    5. '-' → logprob: -11.687722206115723
    6. ' +' → logprob: -11.875222206115723
    7. '_' → logprob: -12.062722206115723
    8. ':' → logprob: -12.312722206115723
    9. '2' → logprob: -12.562722206115723
    10. ' -' → logprob: -13.000222206115723

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03748922049999237
    2. ' and' → logprob: -3.412489175796509
    3. ':
' → logprob: -6.287489414215088
    4. 'and' → logprob: -6.537489414215088
    5. '   ' → logprob: -8.41248893737793
    6. ' :' → logprob: -8.66248893737793
    7. '):' → logprob: -11.03748893737793
    8. ' a' → logprob: -11.03748893737793
    9. '+' → logprob: -11.28748893737793
    10. 'a' → logprob: -11.53748893737793

Token 74: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8015126585960388
    2. '       ' → logprob: -1.3015127182006836
    3. '   ' → logprob: -1.6765127182006836
    4. '    ' → logprob: -3.4265127182006836
    5. ' and' → logprob: -3.6765127182006836
    6. ' :' → logprob: -4.176512718200684
    7. ' a' → logprob: -5.551512718200684
    8. ' ' → logprob: -5.551512718200684
    9. 'a' → logprob: -5.801512718200684
    10. ':
' → logprob: -6.426512718200684

Token 75: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.030182577669620514
    2. 'a' (adapté à ' a') → logprob: -4.280182361602783
    3. '       ' → logprob: -4.780182361602783
    4. '   ' → logprob: -5.405182361602783
    5. '    ' → logprob: -6.030182361602783
    6. ' ' → logprob: -8.530182838439941
    7. ' c' → logprob: -9.905182838439941
    8. '```' → logprob: -10.155182838439941
    9. ' ' → logprob: -10.280182838439941
    10. ' _' → logprob: -10.655182838439941

Token 76: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.25232994556427
    2. '.' → logprob: -1.50232994556427
    3. ' .' → logprob: -8.50232982635498
    4. '.app' → logprob: -9.62732982635498
    5. '.ap' → logprob: -9.75232982635498
    6. '.p' → logprob: -10.12732982635498
    7. '.push' → logprob: -11.12732982635498
    8. '.pp' → logprob: -12.25232982635498
    9. '​.' → logprob: -13.00232982635498
    10. 'pp' → logprob: -13.25232982635498

Token 77: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.053051289170980453
    2. '((' → logprob: -3.053051233291626
    3. '(' → logprob: -6.053051471710205
    4. '(abs' → logprob: -6.178051471710205
    5. '([' → logprob: -12.053050994873047
    6. '(t' → logprob: -12.053050994873047
    7. 'abs' → logprob: -12.178050994873047
    8. 'c' → logprob: -12.553050994873047
    9. '(a' → logprob: -13.428050994873047
    10. '(((' → logprob: -13.553050994873047

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008277330780401826
    2. ' )' → logprob: -7.375827789306641
    3. ',' → logprob: -9.25082778930664
    4. '))' → logprob: -10.25082778930664
    5. ')
' → logprob: -11.12582778930664
    6. ',)' → logprob: -11.37582778930664
    7. '-' → logprob: -11.62582778930664
    8. '*' → logprob: -11.75082778930664
    9. '   ' → logprob: -12.12582778930664
    10. ' ' → logprob: -12.50082778930664

Token 79: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' len' (ID: 4631)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.40644216537475586
    2. ' len' → logprob: -1.1564421653747559
    3. 'a' → logprob: -4.656442165374756
    4. 'len' → logprob: -5.281442165374756
    5. ' ' → logprob: -5.656442165374756
    6. ' not' → logprob: -6.906442165374756
    7. '(len' → logprob: -8.781442642211914
    8. ' ' → logprob: -10.656442642211914
    9. '  ' → logprob: -10.781442642211914
    10. ' t' → logprob: -11.281442642211914

Token 81: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3868929147720337
    2. '(' → logprob: -1.1368929147720337
    3. '(n' → logprob: -11.386893272399902
    4. '(s' → logprob: -12.886893272399902
    5. '(
' → logprob: -12.886893272399902
    6. 'a' → logprob: -13.386893272399902
    7. ' (' → logprob: -13.511893272399902
    8. '()' → logprob: -14.511893272399902
    9. '(ai' → logprob: -15.261893272399902
    10. '('' → logprob: -15.511893272399902

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005692353937774897
    2. ')>' → logprob: -5.630692481994629
    3. ')==' → logprob: -6.755692481994629
    4. '==' → logprob: -8.005692481994629
    5. ' ==' → logprob: -8.255692481994629
    6. '>' → logprob: -8.755692481994629
    7. ' >' → logprob: -9.755692481994629
    8. '):' → logprob: -9.755692481994629
    9. ' )' → logprob: -10.630692481994629
    10. '()' → logprob: -11.630692481994629

Token 83: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7410183548927307
    2. ' ==' → logprob: -1.616018295288086
    3. ' >' → logprob: -1.866018295288086
    4. '==' → logprob: -1.866018295288086
    5. ')' → logprob: -5.116018295288086
    6. '<|end|>' → logprob: -5.491018295288086
    7. ':' → logprob: -5.866018295288086
    8. ')>' → logprob: -7.491018295288086
    9. '0' → logprob: -7.741018295288086
    10. '=' → logprob: -8.741018295288086

Token 84: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00462841521948576
    2. ' ' → logprob: -5.3796281814575195
    3. '1' → logprob: -12.37962818145752
    4. 'n' → logprob: -13.12962818145752
    5. 'a' → logprob: -15.00462818145752
    6. ')' → logprob: -15.12962818145752
    7. '  ' → logprob: -15.50462818145752
    8. ' n' → logprob: -15.62962818145752
    9. '   ' → logprob: -15.87962818145752
    10. '100' → logprob: -16.004629135131836

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008465526043437421
    2. ' ' → logprob: -7.1258463859558105
    3. 'n' → logprob: -10.750846862792969
    4. '1' → logprob: -11.000846862792969
    5. ')' → logprob: -14.125846862792969
    6. 'a' → logprob: -14.125846862792969
    7. ' n' → logprob: -14.750846862792969
    8. '100' → logprob: -15.125846862792969
    9. '  ' → logprob: -15.375846862792969
    10. '   ' → logprob: -15.438346862792969

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005781737272627652
    2. ':
' → logprob: -7.5005784034729
    3. 'print' → logprob: -11.250577926635742
    4. ')' → logprob: -12.500577926635742
    5. '.' → logprob: -13.250577926635742
    6. '):' → logprob: -13.375577926635742
    7. ':return' → logprob: -13.750577926635742
    8. ' or' → logprob: -14.125577926635742
    9. ',' → logprob: -14.125577926635742
    10. ':

' → logprob: -14.625577926635742

Token 87: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.54649418592453
    2. '-' → logprob: -1.6714942455291748
    3. '0' → logprob: -2.671494245529175
    4. '   ' → logprob: -2.796494245529175
    5. '\n' → logprob: -3.671494245529175
    6. ' print' → logprob: -4.171494007110596
    7. '
' → logprob: -4.171494007110596
    8. ' 
' → logprob: -4.546494007110596
    9. ' -' → logprob: -4.796494007110596
    10. '    
' → logprob: -4.796494007110596

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.37758466601371765
    2. '-' → logprob: -1.25258469581604
    3. '0' → logprob: -4.127584457397461
    4. ' print' → logprob: -5.002584457397461
    5. ' -' → logprob: -5.627584457397461
    6. '\n' → logprob: -7.377584457397461
    7. '   ' → logprob: -7.502584457397461
    8. ' ' → logprob: -8.127584457397461
    9. '
' → logprob: -8.752584457397461
    10. '\' → logprob: -9.002584457397461

Token 89: '("' (ID: 568)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6441148519515991
    2. '(' → logprob: -0.8941148519515991
    3. '("' → logprob: -2.8941149711608887
    4. '()' → logprob: -4.894114971160889
    5. '('' → logprob: -6.519114971160889
    6. '("-' → logprob: -6.894114971160889
    7. '(None' → logprob: -8.14411449432373
    8. '("")' → logprob: -9.26911449432373
    9. '-' → logprob: -10.51911449432373
    10. '0' → logprob: -10.76911449432373

Token 90: 'T' (ID: 51)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01473254058510065
    2. '0' → logprob: -4.639732360839844
    3. 'Impossible' → logprob: -6.014732360839844
    4. ':' → logprob: -7.639732360839844
    5. '":' → logprob: -7.889732360839844
    6. '"' → logprob: -8.014732360839844
    7. 'im' → logprob: -8.264732360839844
    8. 'No' → logprob: -8.389732360839844
    9. '"-' → logprob: -9.264732360839844
    10. ':(' → logprob: -9.389732360839844

Token 91: 'LE' (ID: 1400)
  Prédit: 'oo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oo' → logprob: -0.10175686329603195
    2. 'ime' → logprob: -3.4767568111419678
    3. 'LE' → logprob: -3.4767568111419678
    4. 'OO' → logprob: -5.101757049560547
    5. 'o' → logprob: -5.789257049560547
    6. 'IME' → logprob: -6.414257049560547
    7. 'E' → logprob: -6.476757049560547
    8. 'h' → logprob: -6.789257049560547
    9. '-' → logprob: -6.789257049560547
    10. 'e' → logprob: -6.851757049560547

Token 92: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2039567232131958
    2. ')' → logprob: -1.7039567232131958
    3. '")
' → logprob: -7.203956604003906
    4. 'else' → logprob: -7.453956604003906
    5. ')
' → logprob: -8.203956604003906
    6. '!")' → logprob: -8.203956604003906
    7. ')")' → logprob: -8.453956604003906
    8. ' else' → logprob: -9.703956604003906
    9. ':' → logprob: -9.953956604003906
    10. '"' → logprob: -9.953956604003906

Token 93: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0019964431412518024
    2. ' else' → logprob: -6.2519965171813965
    3. 'elif' → logprob: -9.751996040344238
    4. '
' → logprob: -12.501996040344238
    5. '   ' → logprob: -13.376996040344238
    6. '<|end|>' → logprob: -13.626996040344238
    7. 'e' → logprob: -14.876996040344238
    8. '    
' → logprob: -14.876996040344238
    9. 'elses' → logprob: -14.876996040344238
    10. '_else' → logprob: -15.001996040344238

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015514022670686245
    2. ':
' → logprob: -6.501551628112793
    3. '   ' → logprob: -10.251551628112793
    4. '[' → logprob: -12.626551628112793
    5. ' :' → logprob: -12.751551628112793
    6. ',' → logprob: -13.126551628112793
    7. 'print' → logprob: -13.876551628112793
    8. ':

' → logprob: -13.876551628112793
    9. ':
' → logprob: -14.001551628112793
    10. ')' → logprob: -14.501551628112793

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04928606376051903
    2. 'print' → logprob: -3.049286127090454
    3. '```' → logprob: -7.924285888671875
    4. ' print' → logprob: -8.174285888671875
    5. '    
' → logprob: -10.924285888671875
    6. '       ' → logprob: -11.424285888671875
    7. '``' → logprob: -11.424285888671875
    8. '
' → logprob: -12.299285888671875
    9. '	print' → logprob: -13.299285888671875
    10. 'a' → logprob: -13.299285888671875

Token 96: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.157039049663581e-05
    2. '   ' → logprob: -10.375051498413086
    3. ' print' → logprob: -11.000051498413086
    4. '```' → logprob: -12.875051498413086
    5. 'a' → logprob: -14.625051498413086
    6. 'pr' → logprob: -15.125051498413086
    7. 'prin' → logprob: -15.125051498413086
    8. '    
' → logprob: -16.500051498413086
    9. '``' → logprob: -17.250051498413086
    10. 'prit' → logprob: -17.625051498413086

Token 97: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.2888323962688446
    2. '(' → logprob: -1.788832426071167
    3. '("' → logprob: -3.163832426071167
    4. '(a' → logprob: -3.413832426071167
    5. '(max' → logprob: -4.788832187652588
    6. '('' → logprob: -9.413832664489746
    7. '("("' → logprob: -10.413832664489746
    8. '(f' → logprob: -10.663832664489746
    9. '(sum' → logprob: -10.788832664489746
    10. '(
' → logprob: -11.163832664489746

Token 98: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.125040054321289
    3. 'a' → logprob: -16.50004005432129
    4. ')' → logprob: -18.00004005432129
    5. '(
' → logprob: -18.00004005432129
    6. ' (' → logprob: -18.12504005432129
    7. '(A' → logprob: -19.75004005432129
    8. '(min' → logprob: -20.37504005432129
    9. '(n' → logprob: -20.62504005432129
    10. '()' → logprob: -20.62504005432129

Token 99: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889892905950546
    2. '))' → logprob: -2.5788989067077637
    3. ')))' → logprob: -12.328899383544922
    4. '())' → logprob: -13.078899383544922
    5. ' )' → logprob: -13.703899383544922
    6. ')")' → logprob: -14.578899383544922
    7. ')`' → logprob: -15.578899383544922
    8. '`)' → logprob: -15.578899383544922
    9. ')a' → logprob: -15.578899383544922
    10. ')}' → logprob: -16.078899383544922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 39.18%
Précision adaptée (1ère position): 43.30%
Précision (top 10): 83.51%
================================================================================
