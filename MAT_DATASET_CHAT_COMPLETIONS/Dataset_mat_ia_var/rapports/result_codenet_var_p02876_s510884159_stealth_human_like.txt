================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq
import sys
import random

# Une classe pour simuler un max-heap en inversant les signes, ça marche pas mal
class Heapq:
    def __init__(self, arr):
        self.que = []
        for a in arr:
            self.que.append(-a)  # on inverse pour faire max-heap, oups ici direct append...
        heapq.heapify(self.que) # va marcher quand même

    def pop(self):
        # Ici je remets le signe, pratique
        return -heapq.heappop(self.que)

    def push(self, a):
        heapq.heappush(self.que, -a)

    def top(self):
        return -self.que[0]  # top simplement par l'index

# pour le segtree, valeur neutre super grande
def segfunc(x, y):
    return min(x, y)
ide_ele = 10 ** 15  # ça devrait être assez grand

class SegTree:
    def __init__(self, init_val, segfunc, ide_ele):
        n = len(init_val)
        self.segfunc = segfunc
        self.ide_ele = ide_ele
        # arrondit à la puissance de 2 au dessus (merci bit_length!)
        self.num = 1 << (n - 1).bit_length()
        self.tree = [ide_ele] * (2 * self.num)
        for i in range(n):
            self.tree[self.num + i] = init_val[i]
        for i in range(self.num - 1, 0, -1):
            self.tree[i] = self.segfunc(self.tree[2 * i], self.tree[2 * i + 1])

    def update(self, k, x):
        k += self.num
        self.tree[k] = x
        while k > 1:
            # alors là, je fais avec <<
            self.tree[k >> 1] = self.segfunc(self.tree[k], self.tree[k ^ 1])
            k >>= 1

    def query(self, l, r):
        res = self.ide_ele
        l += self.num
        r += self.num
        # boucle classique sur les intervals, pas trop mal
        while l < r:
            if l & 1:
                res = self.segfunc(res, self.tree[l])
                l += 1
            if r & 1:
                res = self.segfunc(res, self.tree[r - 1])
            l >>= 1
            r >>= 1
        return res

input = sys.stdin.readline

N = int(input())
beam = []
for i in range(N):
    beam.append(tuple(map(int, input().split()))) # ça va, c'est classique

def solve2():
    # On trie par le 2ème élément
    beam.sort(key=lambda x: x[1])

    # Pré-calcul des data
    data = [min(0, beam[i][0] - beam[i][1]) for i in range(N)]
    for i in range(N - 2, -1, -1):
        data[i] += data[i + 1]

    cummin = [beam[i][1] for i in range(N)]
    for i in range(N):
        if beam[i][0] - beam[i][1] > 0:
            cummin[i] = 10 ** 15

    for i in range(N - 2, -1, -1):
        cummin[i] = min(cummin[i], cummin[i + 1])

    # test pour un m donné
    def cond(m):
        if m == 0:
            if data[0] <= 0:
                return True
            else:
                return False

        que = Heapq([])
        cnt = 0
        S = 0
        for i in range(N - 1):
            if cnt == m:
                # On teste si on peut remplacer un max
                test = que.top()
                if beam[i][0] < test:
                    que.pop()
                    que.push(beam[i][0])
                    S += beam[i][0] - test
            else:
                que.push(beam[i][0])
                S += beam[i][0]
                cnt += 1
            if cnt == m:
                test = S + data[i + 1]
                if test <= 0:
                    return True
        return False

    start = 0
    end = N
    # Une binaire search histoire d'optimiser
    while end - start > 1:
        test = (end + start) // 2
        if cond(test):
            start = test
        else:
            end = test

    if not cond(0):
        print("0 1")
        exit()
    m = start
    ans = [0, 1]
    que = Heapq([])
    cnt = 0
    S = 0

    if m != 0:
        for i in range(N - 1):
            if cnt == m:
                # encore ce replace de max
                test = que.top()
                if beam[i][0] < test:
                    que.pop()
                    que.push(beam[i][0])
                    S += beam[i][0] - test
            else:
                que.push(beam[i][0])
                S += beam[i][0]
                cnt += 1
            if cnt == m:
                test = S + data[i + 1]
                B = cummin[i + 1]
                if test <= 0:
                    t = abs(test)
                    if B * ans[0] < ans[1] * t:
                        ans = [t, B]

        # initialisation
        startL = [-1] * N
        endL = [-1] * N
        que2 = []
        trash = []
        cnt2 = 0
        S2 = 0
        data1 = [ide_ele] * N
        data2 = [ide_ele] * N
        for i in range(N):
            if cnt2 == m:
                # On bosse sur les deux heaps et indices
                val, idd = que2[0]
                val = -val
                if val > beam[i][0]:
                    heapq.heappop(que2)
                    heapq.heappush(trash, val)
                    endL[idd] = i - 1
                    heapq.heappush(que2, (-beam[i][0], i))
                    startL[i] = i
                    S2 += beam[i][0] - val
                else:
                    heapq.heappush(trash, beam[i][0])
            else:
                heapq.heappush(que2, (-beam[i][0], i))
                startL[i] = i
                S2 += beam[i][0]
                cnt2 += 1
            if cnt2 == m:
                if i != N - 1:
                    data1[i] = S2 + data[i + 1]
                    if trash:
                        data2[i] = S2 + data[i + 1] + trash[0]
                    else:
                        data2[i] = S2 + data[i + 1]
                else:
                    data1[i] = S2
                    if trash:
                        data2[i] = S2 + trash[0]
                    else:
                        data2[i] = S2

        for i in range(N):
            if startL[i] != -1 and endL[i] == -1:
                endL[i] = N - 1

        Seg1 = SegTree(data1, segfunc, ide_ele)
        Seg2 = SegTree(data2, segfunc, ide_ele)

        for i in range(m):
            if endL[i] == m - 1:
                temp = Seg1.query(m, N)
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp:
                        ans = [temp, B]
            else:
                L, R = m, endL[i]
                temp = Seg2.query(L, R + 1) - beam[i][0]
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp:
                        ans = [temp, B]
                temp = Seg1.query(R + 1, N)
                temp += beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp:
                        ans = [temp, B]
        for i in range(m, N):
            if beam[i][0] - beam[i][1] <= 0:
                if startL[i] == -1:
                    temp = Seg1.query(i, N)
                    temp += beam[i][0] - beam[i][1]
                    if temp <= 0:
                        temp = abs(temp)
                        B = beam[i][1]
                        if B * ans[0] < ans[1] * temp:
                            ans = [temp, B]
                else:
                    L = startL[i]
                    R = endL[i]
                    temp = Seg2.query(L, R + 1) - beam[i][0]
                    temp += beam[i][0] - beam[i][1]
                    if temp <= 0:
                        temp = abs(temp)
                        B = beam[i][1]
                        if B * ans[0] < ans[1] * temp:
                            ans = [temp, B]
                    temp = Seg1.query(R + 1, N)
                    temp += beam[i][0] - beam[i][1]
                    if temp <= 0:
                        temp = abs(temp)
                        B = beam[i][1]
                        if B * ans[0] < ans[1] * temp:
                            ans = [temp, B]
            else:
                if startL[i] == -1:
                    temp = Seg1.query(m - 1, N)
                    temp += beam[i][0] - beam[i][1]
                    if temp <= 0:
                        temp = abs(temp)
                        B = beam[i][1]
                        if B * ans[0] < ans[1] * temp:
                            ans = [temp, B]
                else:
                    L = startL[i]
                    R = endL[i]
                    temp = Seg2.query(L, R + 1) - beam[i][0]
                    temp += beam[i][0] - beam[i][1]
                    if temp <= 0:
                        temp = abs(temp)
                        B = beam[i][1]
                        if B * ans[0] < ans[1] * temp:
                            ans = [temp, B]
                    temp = min(Seg1.query(R + 1, N), Seg1.query(m - 1, L))
                    temp += beam[i][0] - beam[i][1]
                    if temp <= 0:
                        temp = abs(temp)
                        B = beam[i][1]
                        if B * ans[0] < ans[1] * temp:
                            ans = [temp, B]

    else:
        for i in range(N):
            test = data[i]
            B = cummin[i]
            if test <= 0:
                t = abs(test)
                if B * ans[0] < ans[1] * t:
                    ans = [t, B]
        M = min(data)
        for i in range(N):
            if beam[i][0] - beam[i][1] > 0:
                temp = M + beam[i][0] - beam[i][1]
                if temp <= 0:
                    temp = abs(temp)
                    B = beam[i][1]
                    if B * ans[0] < ans[1] * temp:
                        ans = [temp, B]

    p, q = ans
    res = [q * m + p, N * q]
    from math import gcd
    g = gcd(res[0], res[1])
    return (res[0] // g, res[1] // g)

# Appel principal (bon, un print classique à la fin)
print(*solve2())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8802491215174086e-05
    2. '.\' → logprob: -12.250028610229492
    3. '.​' → logprob: -12.625028610229492
    4. '.
' → logprob: -12.750028610229492
    5. '(' → logprob: -12.750028610229492
    6. '."""' → logprob: -12.750028610229492
    7. '.

' → logprob: -13.125028610229492
    8. '.

' → logprob: -13.125028610229492
    9. ' .' → logprob: -13.625028610229492
    10. '.`' → logprob: -13.875028610229492

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005549400229938328
    2. '(' → logprob: -7.875555038452148
    3. '\' → logprob: -9.875555038452148
    4. '[' → logprob: -10.750555038452148
    5. '<|end|>' → logprob: -10.750555038452148
    6. '.
' → logprob: -11.000555038452148
    7. ',' → logprob: -11.250555038452148
    8. '.

' → logprob: -11.625555038452148
    9. '.​' → logprob: -12.375555038452148
    10. 'def' → logprob: -12.375555038452148

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.14035077393054962
    2. ' collections' → logprob: -2.515350818634033
    3. ' itertools' → logprob: -3.765350818634033
    4. ' math' → logprob: -3.890350818634033
    5. ' threading' → logprob: -6.015350818634033
    6. ' os' → logprob: -6.265350818634033
    7. ' queue' → logprob: -7.765350818634033
    8. 'sys' → logprob: -7.765350818634033
    9. ' re' → logprob: -8.015350341796875
    10. 'collections' → logprob: -8.140350341796875

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.47988149523735046
    2. '.' → logprob: -1.4798815250396729
    3. '\' → logprob: -2.104881525039673
    4. '
' → logprob: -3.979881525039673
    5. '```' → logprob: -5.229881286621094
    6. '.
' → logprob: -6.354881286621094
    7. '[' → logprob: -6.604881286621094
    8. '

' → logprob: -6.729881286621094
    9. 'newline' → logprob: -6.979881286621094
    10. '.

' → logprob: -7.854881286621094

Token 7: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9971089363098145
    2. '\' → logprob: -1.1221089363098145
    3. '\n' → logprob: -1.4971089363098145
    4. '
' → logprob: -3.1221089363098145
    5. '```' → logprob: -4.3721089363098145
    6. 'def' → logprob: -4.9971089363098145
    7. '' → logprob: -5.6221089363098145
    8. 'data' → logprob: -5.9971089363098145
    9. '

' → logprob: -6.1221089363098145
    10. '`' → logprob: -6.3721089363098145

Token 8: ' random' (ID: 7526)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.44712451100349426
    2. ' collections' → logprob: -1.1971244812011719
    3. ' itertools' → logprob: -3.697124481201172
    4. ' threading' → logprob: -4.072124481201172
    5. 'collections' → logprob: -4.822124481201172
    6. ' math' → logprob: -5.447124481201172
    7. 'os' → logprob: -5.697124481201172
    8. ' io' → logprob: -7.822124481201172
    9. ' random' → logprob: -8.822124481201172
    10. ' time' → logprob: -9.072124481201172

Token 9: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.38384827971458435
    2. '\' → logprob: -2.008848190307617
    3. '
' → logprob: -2.633848190307617
    4. '.' → logprob: -2.633848190307617
    5. '```' → logprob: -5.133848190307617
    6. '#' → logprob: -5.133848190307617
    7. '<|end|>' → logprob: -5.258848190307617
    8. 'def' → logprob: -5.383848190307617
    9. 'newline' → logprob: -5.758848190307617
    10. 'import' → logprob: -5.883848190307617

Token 10: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7460881471633911
    2. '\' → logprob: -1.3710881471633911
    3. '
' → logprob: -3.1210880279541016
    4. 'def' → logprob: -3.1210880279541016
    5. 'data' → logprob: -3.7460880279541016
    6. '```' → logprob: -3.8710880279541016
    7. 'n' → logprob: -3.9960880279541016
    8. '#' → logprob: -4.246088027954102
    9. '' → logprob: -4.371088027954102
    10. 'random' → logprob: -4.496088027954102

Token 11: ' Une' (ID: 19758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5288349390029907
    2. '#' → logprob: -1.6538349390029907
    3. ' #' → logprob: -1.9038349390029907
    4. 'def' → logprob: -3.153834819793701
    5. ' def' → logprob: -5.403834819793701
    6. 'class' → logprob: -5.403834819793701
    7. 'n' → logprob: -6.028834819793701
    8. ' class' → logprob: -6.153834819793701
    9. '_' → logprob: -6.403834819793701
    10. 'a' → logprob: -6.528834819793701

Token 12: ' classe' (ID: 29329)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qual' → logprob: -1.2729754447937012
    2. 'val' → logprob: -1.6479754447937012
    3. 'x' → logprob: -2.147975444793701
    4. 'ven' → logprob: -2.272975444793701
    5. 'f' → logprob: -3.272975444793701
    6. 'p' → logprob: -3.397975444793701
    7. 'm' → logprob: -3.522975444793701
    8. 'v' → logprob: -3.522975444793701
    9. 'cess' → logprob: -3.772975444793701
    10. '#' → logprob: -3.772975444793701

Token 13: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2828782796859741
    2. ' class' → logprob: -1.6578782796859741
    3. 'class' → logprob: -3.9078783988952637
    4. ' de' → logprob: -4.532878398895264
    5. ' Space' → logprob: -4.907878398895264
    6. ' space' → logprob: -5.407878398895264
    7. '<class' → logprob: -6.532878398895264
    8. '  ' → logprob: -6.532878398895264
    9. 's' → logprob: -7.282878398895264
    10. 'Space' → logprob: -7.282878398895264

Token 14: ' sim' (ID: 1845)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.20183633267879486
    2. ' représ' → logprob: -1.826836347579956
    3. ' impl' → logprob: -5.076836109161377
    4. ' mod' → logprob: -5.326836109161377
    5. ' créer' → logprob: -5.951836109161377
    6. 'impl' → logprob: -6.201836109161377
    7. 'g' → logprob: -6.451836109161377
    8. ' repr' → logprob: -6.701836109161377
    9. 're' → logprob: -6.701836109161377
    10. ' sim' → logprob: -7.951836109161377

Token 15: 'uler' (ID: 11802)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.13081897795200348
    2. 'pler' → logprob: -3.005819082260132
    3. 'pl' → logprob: -3.755819082260132
    4. 'uler' → logprob: -4.005818843841553
    5. 'plement' → logprob: -4.380818843841553
    6. 'p' → logprob: -5.380818843841553
    7. 'u' → logprob: -5.630818843841553
    8. 'pliquer' → logprob: -5.880818843841553
    9. 'ples' → logprob: -6.005818843841553
    10. 'plic' → logprob: -6.505818843841553

Token 16: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.41169512271881104
    2. ' a' → logprob: -2.4116950035095215
    3. ' une' → logprob: -2.4116950035095215
    4. ' la' → logprob: -2.4116950035095215
    5. ' un' → logprob: -3.5366950035095215
    6. ' le' → logprob: -4.5366950035095215
    7. 'l' → logprob: -4.7866950035095215
    8. ' ' → logprob: -5.4116950035095215
    9. '<|end|>' → logprob: -5.4116950035095215
    10. ' des' → logprob: -5.6616950035095215

Token 17: ' max' (ID: 2999)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2804967164993286
    2. 'simulate' → logprob: -2.530496597290039
    3. ' système' → logprob: -2.655496597290039
    4. 'e' → logprob: -2.905496597290039
    5. ' tas' → logprob: -3.030496597290039
    6. ' simulate' → logprob: -3.280496597290039
    7. ' réseau' → logprob: -3.405496597290039
    8. 'ré' → logprob: -3.717996597290039
    9. 'graph' → logprob: -3.717996597290039
    10. ' grap' → logprob: -3.717996597290039

Token 18: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001406305585987866
    2. '_' → logprob: -7.001406192779541
    3. ' ' → logprob: -9.1264066696167
    4. '_heap' → logprob: -9.2514066696167
    5. ' -' → logprob: -9.3764066696167
    6. 'heap' → logprob: -10.0014066696167
    7. ' heap' → logprob: -10.1264066696167
    8. 'imum' → logprob: -10.7514066696167
    9. 'i' → logprob: -11.1264066696167
    10. '-p' → logprob: -11.2514066696167

Token 19: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.03829507902264595
    2. ' heap' → logprob: -4.038295269012451
    3. '-' → logprob: -4.288295269012451
    4. 'tas' → logprob: -5.913295269012451
    5. '```' → logprob: -6.413295269012451
    6. ' tas' → logprob: -7.663295269012451
    7. '_heap' → logprob: -8.038294792175293
    8. 'priority' → logprob: -8.288294792175293
    9. 'pr' → logprob: -8.788294792175293
    10. 'queue' → logprob: -9.288294792175293

Token 20: ' en' (ID: 469)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05745382606983185
    2. '
' → logprob: -3.3074538707733154
    3. ' class' → logprob: -4.057453632354736
    4. 'c' → logprob: -7.557453632354736
    5. ' 
' → logprob: -7.932453632354736
    6. '#' → logprob: -8.307454109191895
    7. '

' → logprob: -8.432454109191895
    8. '```' → logprob: -9.057454109191895
    9. 's' → logprob: -9.807454109191895
    10. ' ' → logprob: -9.932454109191895

Token 21: ' invers' (ID: 38721)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.16195441782474518
    2. ' Python' → logprob: -2.786954402923584
    3. 'util' → logprob: -3.411954402923584
    4. ' python' → logprob: -3.786954402923584
    5. ' invers' → logprob: -4.786954402923584
    6. 'python' → logprob: -5.161954402923584
    7. '```' → logprob: -5.286954402923584
    8. 'Python' → logprob: -5.786954402923584
    9. 'invert' → logprob: -5.911954402923584
    10. ' invert' → logprob: -6.411954402923584

Token 22: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.2793470025062561
    2. 's' → logprob: -1.9043469429016113
    3. 'e' → logprob: -3.1543469429016113
    4. 'issant' → logprob: -3.4043469429016113
    5. 't' → logprob: -5.029346942901611
    6. 'tant' → logprob: -5.154346942901611
    7. 'a' → logprob: -6.279346942901611
    8. 'isant' → logprob: -7.779346942901611
    9. ' ant' → logprob: -8.02934741973877
    10. '#' → logprob: -8.02934741973877

Token 23: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6292757391929626
    2. '<|end|>' → logprob: -1.3792757987976074
    3. ' les' → logprob: -2.7542757987976074
    4. 'l' → logprob: -3.0042757987976074
    5. 'le' → logprob: -3.2542757987976074
    6. ' l' → logprob: -3.3792757987976074
    7. 'the' → logprob: -5.004275798797607
    8. ' la' → logprob: -5.004275798797607
    9. '1' → logprob: -5.879275798797607
    10. 'la' → logprob: -6.004275798797607

Token 24: ' signes' (ID: 133923)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7576035261154175
    2. 'sign' → logprob: -0.7576035261154175
    3. ' signes' → logprob: -3.382603645324707
    4. ' valeurs' → logprob: -3.882603645324707
    5. 'sig' → logprob: -6.257603645324707
    6. 'values' → logprob: -6.507603645324707
    7. ' sign' → logprob: -7.507603645324707
    8. 'value' → logprob: -7.632603645324707
    9. '-sign' → logprob: -7.757603645324707
    10. 'prior' → logprob: -7.882603645324707

Token 25: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0012057077838107944
    2. ' class' → logprob: -6.876205921173096
    3. '
' → logprob: -9.251205444335938
    4. '```' → logprob: -10.376205444335938
    5. '

' → logprob: -11.376205444335938
    6. '\n' → logprob: -11.626205444335938
    7. '\' → logprob: -11.751205444335938
    8. '<class' → logprob: -12.876205444335938
    9. '#' → logprob: -13.001205444335938
    10. ' ' → logprob: -13.126205444335938

Token 26: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8721665740013123
    2. 'class' → logprob: -1.622166633605957
    3. '#' → logprob: -1.872166633605957
    4. ' class' → logprob: -2.372166633605957
    5. ' #' → logprob: -2.747166633605957
    6. ',' → logprob: -4.747166633605957
    7. 'c' → logprob: -4.997166633605957
    8. 'a' → logprob: -5.122166633605957
    9. '...' → logprob: -5.497166633605957
    10. 's' → logprob: -5.747166633605957

Token 27: ' marche' (ID: 58191)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -1.4951345920562744
    2. 's' → logprob: -1.9951345920562744
    3. ' permet' → logprob: -2.3701345920562744
    4. ' fonctionne' → logprob: -2.6201345920562744
    5. ' marche' → logprob: -2.8701345920562744
    6. ' ' → logprob: -2.8701345920562744
    7. ' va' → logprob: -2.9951345920562744
    8. 'd' → logprob: -3.2451345920562744
    9. '#' → logprob: -3.3701345920562744
    10. 'a' → logprob: -3.9951345920562744

Token 28: ' pas' (ID: 2173)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.21168871223926544
    2. '.' → logprob: -2.586688756942749
    3. ' class' → logprob: -3.086688756942749
    4. ':' → logprob: -3.086688756942749
    5. '#' → logprob: -4.96168851852417
    6. '```' → logprob: -4.96168851852417
    7. ',' → logprob: -5.33668851852417
    8. '!' → logprob: -6.71168851852417
    9. ' ' → logprob: -7.21168851852417
    10. 'import' → logprob: -7.46168851852417

Token 29: ' mal' (ID: 3849)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6350624561309814
    2. '#' → logprob: -0.8850624561309814
    3. ':' → logprob: -3.8850624561309814
    4. ',' → logprob: -4.135062217712402
    5. '?' → logprob: -5.760062217712402
    6. 'class' → logprob: -5.885062217712402
    7. 's' → logprob: -6.010062217712402
    8. '```' → logprob: -6.260062217712402
    9. '!' → logprob: -6.385062217712402
    10. '...' → logprob: -7.010062217712402

Token 30: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0005871102912351489
    2. ' class' → logprob: -8.000587463378906
    3. '
' → logprob: -8.375587463378906
    4. '```' → logprob: -11.500587463378906
    5. '\n' → logprob: -13.000587463378906
    6. '"class' → logprob: -13.375587463378906
    7. '\' → logprob: -13.500587463378906
    8. ',class' → logprob: -13.625587463378906
    9. '

' → logprob: -14.625587463378906
    10. 'c' → logprob: -14.625587463378906

Token 31: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00034535606391727924
    2. ' class' → logprob: -8.000345230102539
    3. '```' → logprob: -12.750345230102539
    4. '
' → logprob: -12.875345230102539
    5. '\n' → logprob: -14.125345230102539
    6. '"class' → logprob: -14.625345230102539
    7. '\' → logprob: -14.625345230102539
    8. '#' → logprob: -14.750345230102539
    9. ':' → logprob: -14.875345230102539
    10. 'classe' → logprob: -15.125345230102539

Token 32: ' Heap' (ID: 100280)
  Prédit: ' Max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Max' → logprob: -0.291157603263855
    2. ' In' → logprob: -1.916157603263855
    3. 'Max' → logprob: -2.5411577224731445
    4. 'In' → logprob: -4.2911577224731445
    5. ' Neg' → logprob: -4.9161577224731445
    6. 'Neg' → logprob: -6.6661577224731445
    7. 'Invert' → logprob: -6.7911577224731445
    8. '_Max' → logprob: -7.0411577224731445
    9. 'Heap' → logprob: -7.7911577224731445
    10. ' Heap' → logprob: -7.9161577224731445

Token 33: 'q' (ID: 80)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010657975217327476
    2. 'q' → logprob: -7.126065731048584
    3. ':
' → logprob: -9.626066207885742
    4. ' :' → logprob: -9.751066207885742
    5. '{' → logprob: -10.501066207885742
    6. '():' → logprob: -10.751066207885742
    7. 'Max' → logprob: -10.751066207885742
    8. '):' → logprob: -11.001066207885742
    9. '>:' → logprob: -11.501066207885742
    10. '(' → logprob: -11.876066207885742

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004493616055697203
    2. 'Max' → logprob: -6.129493713378906
    3. '(Max' → logprob: -6.504493713378906
    4. '(' → logprob: -8.004493713378906
    5. ' :' → logprob: -9.879493713378906
    6. ':
' → logprob: -10.129493713378906
    7. '.Max' → logprob: -10.129493713378906
    8. 'Wrapper' → logprob: -10.504493713378906
    9. '():' → logprob: -10.629493713378906
    10. 'q' → logprob: -10.629493713378906

Token 35: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4624495506286621
    2. '   ' → logprob: -1.212449550628662
    3. ' ' → logprob: -3.087449550628662
    4. ' :' → logprob: -4.087449550628662
    5. '  ' → logprob: -6.337449550628662
    6. '(object' → logprob: -6.337449550628662
    7. ' ' → logprob: -6.337449550628662
    8. ' def' → logprob: -6.712449550628662
    9. ':
' → logprob: -7.087449550628662
    10. 'def' → logprob: -7.337449550628662

Token 36: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.39657866954803467
    2. ' def' → logprob: -1.1465786695480347
    3. '   ' → logprob: -4.646578788757324
    4. ' ' → logprob: -10.271578788757324
    5. '	def' → logprob: -11.396578788757324
    6. '  ' → logprob: -11.896578788757324
    7. 'de' → logprob: -12.521578788757324
    8. 'heap' → logprob: -12.771578788757324
    9. ' ' → logprob: -14.146578788757324
    10. 'class' → logprob: -14.146578788757324

Token 37: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2836068570613861
    2. '__' → logprob: -1.6586068868637085
    3. 'init' → logprob: -3.533606767654419
    4. ' def' → logprob: -4.408607006072998
    5. ' init' → logprob: -5.408607006072998
    6. ' ' → logprob: -5.533607006072998
    7. '_' → logprob: -6.158607006072998
    8. 'def' → logprob: -6.283607006072998
    9. '_init' → logprob: -6.783607006072998
    10. '  ' → logprob: -7.283607006072998

Token 38: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -16.0
    3. '_init' → logprob: -16.25
    4. 'ini' → logprob: -17.75
    5. 'int' → logprob: -18.0
    6. 'in' → logprob: -19.125
    7. ' ' → logprob: -20.5
    8. '	init' → logprob: -20.5
    9. 'i' → logprob: -20.75
    10. 'innit' → logprob: -20.875

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00026050140149891376
    2. '__' → logprob: -9.000260353088379
    3. '(self' → logprob: -9.375260353088379
    4. '__(
' → logprob: -10.625260353088379
    5. '(' → logprob: -11.000260353088379
    6. '_(' → logprob: -12.375260353088379
    7. '__((' → logprob: -12.875260353088379
    8. '__('' → logprob: -13.500260353088379
    9. '__(*' → logprob: -13.625260353088379
    10. ' (' → logprob: -14.625260353088379

Token 40: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0029110272880643606
    2. ' self' → logprob: -6.37791109085083
    3. ')' → logprob: -6.87791109085083
    4. ' ' → logprob: -9.127910614013672
    5. '   ' → logprob: -10.252910614013672
    6. ' )' → logprob: -10.502910614013672
    7. '    ' → logprob: -13.377910614013672
    8. '	self' → logprob: -13.627910614013672
    9. '  ' → logprob: -13.877910614013672
    10. '(self' → logprob: -14.502910614013672

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0312720350921154
    2. 'self' → logprob: -4.156271934509277
    3. ' ,' → logprob: -4.781271934509277
    4. ',self' → logprob: -5.906271934509277
    5. ')' → logprob: -6.156271934509277
    6. ' ' → logprob: -6.906271934509277
    7. '   ' → logprob: -8.156271934509277
    8. ' self' → logprob: -8.281271934509277
    9. '(self' → logprob: -9.656271934509277
    10. ' )' → logprob: -9.656271934509277

Token 42: ' arr' (ID: 1724)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014293731190264225
    2. ')' → logprob: -4.639293670654297
    3. '):' → logprob: -6.389293670654297
    4. '):
' → logprob: -7.139293670654297
    5. '   ' → logprob: -7.389293670654297
    6. 'data' → logprob: -7.514293670654297
    7. 'items' → logprob: -8.264293670654297
    8. ' self' → logprob: -8.639293670654297
    9. 'lst' → logprob: -8.764293670654297
    10. '       ' → logprob: -9.764293670654297

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006603579502552748
    2. '=[]' → logprob: -5.506603717803955
    3. '=None' → logprob: -6.881603717803955
    4. '=' → logprob: -7.131603717803955
    5. '):
' → logprob: -7.881603717803955
    6. ')' → logprob: -8.381603240966797
    7. ' ):' → logprob: -10.006603240966797
    8. ':' → logprob: -10.631603240966797
    9. '):
' → logprob: -12.506603240966797
    10. ' =' → logprob: -12.631603240966797

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006903517059981823
    2. 'self' → logprob: -5.256903648376465
    3. ' self' → logprob: -6.506903648376465
    4. '[]' → logprob: -9.756903648376465
    5. '[' → logprob: -9.881903648376465
    6. '[self' → logprob: -11.381903648376465
    7. '<|end|>' → logprob: -11.631903648376465
    8. '   ' → logprob: -12.006903648376465
    9. '      ' → logprob: -12.131903648376465
    10. ')' → logprob: -12.256903648376465

Token 45: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2552258372306824
    2. ' self' → logprob: -1.5052258968353271
    3. '       ' → logprob: -5.755225658416748
    4. '   ' → logprob: -9.255226135253906
    5. ' ' → logprob: -11.005226135253906
    6. '	self' → logprob: -11.630226135253906
    7. '[self' → logprob: -14.255226135253906
    8. '  ' → logprob: -14.380226135253906
    9. '[' → logprob: -14.505226135253906
    10. '      ' → logprob: -14.630226135253906

Token 46: '.' (ID: 13)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9099470376968384
    2. '=' → logprob: -1.2849470376968384
    3. '.arr' → logprob: -2.034946918487549
    4. '.' → logprob: -2.909946918487549
    5. '.heap' → logprob: -3.284946918487549
    6. '._' → logprob: -3.284946918487549
    7. '.data' → logprob: -3.409946918487549
    8. 'arr' → logprob: -4.159946918487549
    9. '_arr' → logprob: -5.659946918487549
    10. 'data' → logprob: -6.659946918487549

Token 47: 'que' (ID: 1126)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.566048800945282
    2. 'arr' → logprob: -1.1910488605499268
    3. 'heap' → logprob: -2.0660488605499268
    4. 'h' → logprob: -7.816048622131348
    5. 'list' → logprob: -8.191048622131348
    6. 'max' → logprob: -8.566048622131348
    7. 'queue' → logprob: -8.566048622131348
    8. 'container' → logprob: -8.941048622131348
    9. 'pq' → logprob: -8.941048622131348
    10. 'array' → logprob: -8.941048622131348

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7405937314033508
    2. '=' → logprob: -1.240593671798706
    3. 'ue' → logprob: -1.990593671798706
    4. 'u' → logprob: -2.740593671798706
    5. 'ry' → logprob: -3.740593671798706
    6. '=[]' → logprob: -5.615593910217285
    7. '   ' → logprob: -5.990593910217285
    8. 'y' → logprob: -6.615593910217285
    9. '=y' → logprob: -8.490593910217285
    10. '       ' → logprob: -8.990593910217285

Token 49: ' []
' (ID: 8911)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.10157854855060577
    2. '[' → logprob: -2.9765784740448
    3. '[]' → logprob: -3.1015784740448
    4. '[:]' → logprob: -8.351578712463379
    5. ' [-' → logprob: -8.601578712463379
    6. ' []' → logprob: -9.726578712463379
    7. ' [' → logprob: -9.726578712463379
    8. '[(' → logprob: -9.976578712463379
    9. '[arr' → logprob: -11.101578712463379
    10. 'list' → logprob: -11.476578712463379

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03727172315120697
    2. ' for' → logprob: -3.662271738052368
    3. 'for' → logprob: -4.537271499633789
    4. '	for' → logprob: -9.162271499633789
    5. '   ' → logprob: -9.912271499633789
    6. '[' → logprob: -11.662271499633789
    7. '<|end|>' → logprob: -11.662271499633789
    8. ' ' → logprob: -11.912271499633789
    9. '      ' → logprob: -12.537271499633789
    10. '           ' → logprob: -12.537271499633789

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03806983679533005
    2. ' for' → logprob: -3.288069725036621
    3. '	for' → logprob: -11.288069725036621
    4. '       ' → logprob: -11.663069725036621
    5. '   ' → logprob: -11.913069725036621
    6. 'heap' → logprob: -14.913069725036621
    7. ' ' → logprob: -16.163070678710938
    8. '  ' → logprob: -17.538070678710938
    9. '[' → logprob: -17.663070678710938
    10. '<|end|>' → logprob: -17.788070678710938

Token 52: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1010794639587402
    2. ' x' → logprob: -1.7260794639587402
    3. ' val' → logprob: -1.8510794639587402
    4. 'num' → logprob: -2.3510794639587402
    5. ' num' → logprob: -2.3510794639587402
    6. 'val' → logprob: -3.7260794639587402
    7. 'value' → logprob: -3.8510794639587402
    8. ' e' → logprob: -3.8510794639587402
    9. ' value' → logprob: -4.22607946395874
    10. ' item' → logprob: -4.47607946395874

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004099416080862284
    2. 'in' → logprob: -5.504099369049072
    3. ' ' → logprob: -11.37909984588623
    4. 'n' → logprob: -12.25409984588623
    5. 'r' → logprob: -13.87909984588623
    6. 's' → logprob: -14.00409984588623
    7. '  ' → logprob: -14.87909984588623
    8. 'nd' → logprob: -15.12909984588623
    9. 'rr' → logprob: -15.12909984588623
    10. 'v' → logprob: -15.50409984588623

Token 54: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00861528143286705
    2. ' arr' → logprob: -4.758615493774414
    3. '	arr' → logprob: -15.383615493774414
    4. ' ' → logprob: -15.633615493774414
    5. '   ' → logprob: -15.883615493774414
    6. '(arr' → logprob: -16.508615493774414
    7. 'a' → logprob: -17.258615493774414
    8. '  ' → logprob: -17.508615493774414
    9. '[arr' → logprob: -17.508615493774414
    10. '-arr' → logprob: -17.633615493774414

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001639354508370161
    2. ':
' → logprob: -6.501639366149902
    3. '):' → logprob: -9.626639366149902
    4. ' :' → logprob: -10.376639366149902
    5. '           ' → logprob: -11.376639366149902
    6. ',' → logprob: -11.376639366149902
    7. '       ' → logprob: -12.126639366149902
    8. ':
' → logprob: -12.501639366149902
    9. 'heap' → logprob: -12.876639366149902
    10. ' heap' → logprob: -13.876639366149902

Token 56: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008059517480432987
    2. ' heap' → logprob: -5.133059501647949
    3. 'heap' → logprob: -6.508059501647949
    4. ' self' → logprob: -7.883059501647949
    5. 'self' → logprob: -9.00805950164795
    6. '.heap' → logprob: -10.13305950164795
    7. '               ' → logprob: -11.13305950164795
    8. '       ' → logprob: -11.38305950164795
    9. '          ' → logprob: -11.50805950164795
    10. '	       ' → logprob: -11.75805950164795

Token 57: ' self' (ID: 1051)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.22737546265125275
    2. ' heap' → logprob: -1.6023755073547363
    3. 'he' → logprob: -7.102375507354736
    4. '   ' → logprob: -7.477375507354736
    5. '           ' → logprob: -8.352375030517578
    6. ' he' → logprob: -8.977375030517578
    7. '       ' → logprob: -8.977375030517578
    8. '.heap' → logprob: -10.352375030517578
    9. '_heap' → logprob: -11.102375030517578
    10. '(heap' → logprob: -11.477375030517578

Token 58: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.909333023941144e-05
    2. 'que' → logprob: -10.625068664550781
    3. ' .' → logprob: -11.625068664550781
    4. '-.' → logprob: -12.000068664550781
    5. '.heap' → logprob: -12.000068664550781
    6. '-' → logprob: -12.375068664550781
    7. '.he' → logprob: -12.625068664550781
    8. '.q' → logprob: -12.875068664550781
    9. 'q' → logprob: -12.875068664550781
    10. '..' → logprob: -13.500068664550781

Token 59: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00703125074505806
    2. 'he' → logprob: -5.882031440734863
    3. 'push' → logprob: -6.257031440734863
    4. 'q' → logprob: -7.382031440734863
    5. 'put' → logprob: -7.507031440734863
    6. 'qu' → logprob: -7.882031440734863
    7. 'append' → logprob: -8.257031440734863
    8. 'heap' → logprob: -9.382031440734863
    9. 'queue' → logprob: -10.507031440734863
    10. 'ques' → logprob: -10.569531440734863

Token 60: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5376321077346802
    2. '.' → logprob: -0.9126321077346802
    3. '.he' → logprob: -4.912631988525391
    4. '.push' → logprob: -5.912631988525391
    5. '.app' → logprob: -6.662631988525391
    6. '.py' → logprob: -7.037631988525391
    7. ' .' → logprob: -7.662631988525391
    8. ').' → logprob: -8.28763198852539
    9. '.heap' → logprob: -8.53763198852539
    10. ',' → logprob: -8.53763198852539

Token 61: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -11.000028610229492
    3. '((-' → logprob: -11.875028610229492
    4. '-' → logprob: -12.375028610229492
    5. '([-' → logprob: -15.625028610229492
    6. '(a' → logprob: -16.375028610229492
    7. '(-(' → logprob: -16.625028610229492
    8. '((' → logprob: -17.000028610229492
    9. '(
' → logprob: -17.375028610229492
    10. ' (-' → logprob: -17.625028610229492

Token 62: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8624639324116288e-06
    2. ' a' → logprob: -13.250001907348633
    3. '	a' → logprob: -23.000001907348633
    4. 'а' → logprob: -23.250001907348633
    5. ')a' → logprob: -23.375001907348633
    6. 'A' → logprob: -23.625001907348633
    7. '   ' → logprob: -23.625001907348633
    8. ' ' → logprob: -23.750001907348633
    9. '1' → logprob: -23.875001907348633
    10. '_a' → logprob: -24.250001907348633

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024631983251310885
    2. ')
' → logprob: -8.750246047973633
    3. ' )' → logprob: -9.375246047973633
    4. '<|end|>' → logprob: -13.625246047973633
    5. '))' → logprob: -14.875246047973633
    6. '),' → logprob: -15.375246047973633
    7. ',' → logprob: -15.750246047973633
    8. ')

' → logprob: -15.875246047973633
    9. ' )
' → logprob: -15.875246047973633
    10. '       ' → logprob: -15.875246047973633

Token 64: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37151554226875305
    2. '
' → logprob: -1.3715155124664307
    3. '<|end|>' → logprob: -3.2465155124664307
    4. ')' → logprob: -4.37151575088501
    5. '   ' → logprob: -6.24651575088501
    6. ' ' → logprob: -6.99651575088501
    7. '           ' → logprob: -7.49651575088501
    8. '<|end|>' → logprob: -7.74651575088501
    9. '' → logprob: -8.996515274047852
    10. '```' → logprob: -8.996515274047852

Token 65: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6127831935882568
    2. '
' → logprob: -1.6127831935882568
    3. ')' → logprob: -1.7377831935882568
    4. 'heap' → logprob: -3.737783193588257
    5. ' ' → logprob: -3.862783193588257
    6. '<|end|>' → logprob: -4.237783432006836
    7. '   ' → logprob: -4.862783432006836
    8. '           ' → logprob: -6.237783432006836
    9. ',' → logprob: -6.362783432006836
    10. '\' → logprob: -6.612783432006836

Token 66: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.396023154258728
    2. ' heap' → logprob: -1.521023154258728
    3. 'he' → logprob: -1.771023154258728
    4. 'heap' → logprob: -1.896023154258728
    5. '<|end|>' → logprob: -2.2710232734680176
    6. ')' → logprob: -3.1460232734680176
    7. ' he' → logprob: -3.7710232734680176
    8. ' a' → logprob: -4.146023273468018
    9. 'a' → logprob: -4.771023273468018
    10. '<|end|>' → logprob: -5.271023273468018

Token 67: ' inverse' (ID: 53743)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -1.254852294921875
    2. ' push' → logprob: -1.379852294921875
    3. 'push' → logprob: -1.754852294921875
    4. ' heap' → logprob: -2.254852294921875
    5. 'heap' → logprob: -2.754852294921875
    6. ' he' → logprob: -3.004852294921875
    7. ' pousse' → logprob: -3.629852294921875
    8. '.heap' → logprob: -5.254852294921875
    9. '.push' → logprob: -5.379852294921875
    10. ' transforme' → logprob: -5.379852294921875

Token 68: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: ' faire' (ID: 8119)
  Prédit: ' sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sim' → logprob: -0.18360033631324768
    2. 'sim' → logprob: -2.808600425720215
    3. ' faire' → logprob: -3.558600425720215
    4. 'transform' → logprob: -3.683600425720215
    5. ' transformer' → logprob: -3.808600425720215
    6. 'simulate' → logprob: -5.058600425720215
    7. ' créer' → logprob: -5.183600425720215
    8. 'faire' → logprob: -5.683600425720215
    9. ' que' → logprob: -5.808600425720215
    10. 'que' → logprob: -6.058600425720215

Token 70: ' max' (ID: 2999)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.30897653102874756
    2. 'du' → logprob: -1.6839765310287476
    3. ' un' → logprob: -2.683976650238037
    4. ' du' → logprob: -4.933976650238037
    5. ''un' → logprob: -6.558976650238037
    6. 'de' → logprob: -6.683976650238037
    7. '```' → logprob: -7.683976650238037
    8. 'a' → logprob: -8.183976173400879
    9. 'une' → logprob: -8.683976173400879
    10. 'max' → logprob: -8.808976173400879

Token 71: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.747814349073451e-05
    2. ' heap' → logprob: -11.750017166137695
    3. '_heap' → logprob: -12.250017166137695
    4. 'he' → logprob: -13.000017166137695
    5. 'queue' → logprob: -14.250017166137695
    6. 'hea' → logprob: -15.000017166137695
    7. 'que' → logprob: -15.375017166137695
    8. '.heap' → logprob: -15.375017166137695
    9. '```' → logprob: -15.750017166137695
    10. '(heap' → logprob: -15.750017166137695

Token 73: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16558311879634857
    2. '       ' → logprob: -1.9155831336975098
    3. '           ' → logprob: -7.04058313369751
    4. '
' → logprob: -7.16558313369751
    5. ' 
' → logprob: -7.29058313369751
    6. ')' → logprob: -7.41558313369751
    7. '<|end|>' → logprob: -7.79058313369751
    8. '   ' → logprob: -8.040582656860352
    9. 'heap' → logprob: -8.040582656860352
    10. ' ' → logprob: -8.415582656860352

Token 74: ' ou' (ID: 2031)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6736031770706177
    2. ')' → logprob: -1.4236031770706177
    3. ' heap' → logprob: -2.048603057861328
    4. ' 
' → logprob: -3.923603057861328
    5. '       ' → logprob: -4.173603057861328
    6. ' ' → logprob: -4.423603057861328
    7. ' )' → logprob: -4.798603057861328
    8. '
' → logprob: -4.923603057861328
    9. '           ' → logprob: -4.923603057861328
    10. ' puis' → logprob: -5.173603057861328

Token 75: 'ps' (ID: 947)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8442667126655579
    2. ':' → logprob: -2.219266653060913
    3. 's' → logprob: -2.969266653060913
    4. 'heap' → logprob: -3.219266653060913
    5. 'u' → logprob: -3.344266653060913
    6. ' ' → logprob: -3.344266653060913
    7. ' que' → logprob: -3.469266653060913
    8. 'p' → logprob: -3.469266653060913
    9. 't' → logprob: -3.844266653060913
    10. ' heap' → logprob: -4.719266891479492

Token 76: ' ici' (ID: 27994)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4840986430644989
    2. '
' → logprob: -0.9840986728668213
    3. ')' → logprob: -5.609098434448242
    4. 'heap' → logprob: -6.734098434448242
    5. '
' → logprob: -6.984098434448242
    6. '           ' → logprob: -7.234098434448242
    7. ')
' → logprob: -7.484098434448242
    8. '   ' → logprob: -7.609098434448242
    9. ' 
' → logprob: -7.609098434448242
    10. '        
' → logprob: -8.234098434448242

Token 77: ' direct' (ID: 2823)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8863766193389893
    2. '       ' → logprob: -1.6363766193389893
    3. '           ' → logprob: -1.8863766193389893
    4. '<|end|>' → logprob: -2.1363766193389893
    5. '
' → logprob: -2.5113766193389893
    6. '<|end|>' → logprob: -4.51137638092041
    7. ')
' → logprob: -4.63637638092041
    8. '   ' → logprob: -5.38637638092041
    9. 'heap' → logprob: -5.63637638092041
    10. ' ' → logprob: -6.38637638092041

Token 78: ' append' (ID: 17147)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.29600274562835693
    2. '       ' → logprob: -2.5460028648376465
    3. '           ' → logprob: -2.7960028648376465
    4. ' heap' → logprob: -3.2960028648376465
    5. '
' → logprob: -4.0460028648376465
    6. ')' → logprob: -4.1710028648376465
    7. 'he' → logprob: -4.6710028648376465
    8. '.heap' → logprob: -5.1710028648376465
    9. 'import' → logprob: -5.2960028648376465
    10. '-' → logprob: -5.4210028648376465

Token 79: '...
' (ID: 4908)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23452527821063995
    2. '       ' → logprob: -2.484525203704834
    3. '   ' → logprob: -3.734525203704834
    4. '<|end|>' → logprob: -4.359525203704834
    5. ' 
' → logprob: -4.484525203704834
    6. '  
' → logprob: -4.484525203704834
    7. '\n' → logprob: -4.609525203704834
    8. 'heap' → logprob: -4.984525203704834
    9. '<|end|>' → logprob: -5.109525203704834
    10. '    
' → logprob: -5.234525203704834

Token 80: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.487003356218338
    2. '       ' → logprob: -0.9870033264160156
    3. 'heap' → logprob: -5.112003326416016
    4. '
' → logprob: -6.237003326416016
    5. ' 
' → logprob: -7.112003326416016
    6. ' heap' → logprob: -7.237003326416016
    7. '        
' → logprob: -7.737003326416016
    8. '  
' → logprob: -7.862003326416016
    9. '   ' → logprob: -7.987003326416016
    10. '           ' → logprob: -8.487003326416016

Token 81: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.17702539265155792
    2. ' heap' → logprob: -1.9270254373550415
    3. '       ' → logprob: -5.052025318145752
    4. '
' → logprob: -5.552025318145752
    5. 'import' → logprob: -5.802025318145752
    6. ' ' → logprob: -6.802025318145752
    7. '.heap' → logprob: -7.177025318145752
    8. '(heap' → logprob: -8.05202579498291
    9. '   ' → logprob: -8.55202579498291
    10. '_heap' → logprob: -8.80202579498291

Token 82: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.664371848164592e-05
    2. 'ify' → logprob: -11.125016212463379
    3. '.q' → logprob: -14.250016212463379
    4. '.' → logprob: -14.875016212463379
    5. 'p' → logprob: -15.125016212463379
    6. '```' → logprob: -15.500016212463379
    7. ' q' → logprob: -16.000017166137695
    8. '	q' → logprob: -16.875017166137695
    9. '.heap' → logprob: -17.125017166137695
    10. '
' → logprob: -17.500017166137695

Token 83: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.01264090184122324
    2. '.' → logprob: -4.387640953063965
    3. '.he' → logprob: -9.012640953063965
    4. '.f' → logprob: -13.012640953063965
    5. ' .' → logprob: -13.637640953063965
    6. '.q' → logprob: -14.512640953063965
    7. '.p' → logprob: -14.637640953063965
    8. '.build' → logprob: -14.762640953063965
    9. '.dumps' → logprob: -14.762640953063965
    10. '​.' → logprob: -15.012640953063965

Token 84: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -7.465036105713807e-06
    2. 'lify' → logprob: -12.250007629394531
    3. 'if' → logprob: -13.000007629394531
    4. '```' → logprob: -15.500007629394531
    5. 'IFY' → logprob: -17.00000762939453
    6. 'ize' → logprob: -18.25000762939453
    7. 'p' → logprob: -18.50000762939453
    8. 'i' → logprob: -19.12500762939453
    9. 'ifying' → logprob: -19.25000762939453
    10. ' ' → logprob: -19.37500762939453

Token 85: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014204643666744232
    2. '(' → logprob: -4.264204502105713
    3. ' (' → logprob: -10.389204978942871
    4. '(s' → logprob: -12.264204978942871
    5. '(this' → logprob: -13.389204978942871
    6. '(
' → logprob: -14.014204978942871
    7. 'self' → logprob: -14.139204978942871
    8. '(heap' → logprob: -14.264204978942871
    9. '(sel' → logprob: -14.889204978942871
    10. ')(' → logprob: -15.389204978942871

Token 86: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.088346359931165e-07
    2. ')' → logprob: -15.000000953674316
    3. ').' → logprob: -15.125000953674316
    4. ' .' → logprob: -16.125
    5. '.q' → logprob: -17.125
    6. '.qu' → logprob: -17.25
    7. '.queue' → logprob: -18.125
    8. '.)' → logprob: -18.25
    9. ',' → logprob: -18.375
    10. '​.' → logprob: -18.625

Token 87: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -7.107425062713446e-06
    2. 'q' → logprob: -12.625006675720215
    3. 'qu' → logprob: -13.375006675720215
    4. ' que' → logprob: -14.125006675720215
    5. 'ue' → logprob: -14.250006675720215
    6. '```' → logprob: -14.750006675720215
    7. ')' → logprob: -15.750006675720215
    8. '`' → logprob: -17.37500762939453
    9. 'Que' → logprob: -17.37500762939453
    10. 'qui' → logprob: -17.75000762939453

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -12.875005722045898
    3. ' )' → logprob: -13.125005722045898
    4. '))' → logprob: -15.500005722045898
    5. ')return' → logprob: -15.625005722045898
    6. '()' → logprob: -16.1250057220459
    7. '   ' → logprob: -17.1250057220459
    8. '       ' → logprob: -17.1250057220459
    9. '())' → logprob: -17.1250057220459
    10. '<|end|>' → logprob: -17.3750057220459

Token 89: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3623882830142975
    2. '<|end|>' → logprob: -1.237388253211975
    3. '

' → logprob: -5.6123881340026855
    4. '    
' → logprob: -5.7373881340026855
    5. '<|end|>' → logprob: -6.1123881340026855
    6. '\n' → logprob: -6.4873881340026855
    7. ' 
' → logprob: -6.8623881340026855
    8. '   ' → logprob: -7.1123881340026855
    9. '  
' → logprob: -8.237388610839844
    10. ')' → logprob: -8.362388610839844

Token 90: ' va' (ID: 3423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' marcher' (ID: 171848)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.25660109519958496
    2. ' ' → logprob: -2.131601095199585
    3. 'heap' → logprob: -3.881601095199585
    4. ' transformer' → logprob: -4.006601333618164
    5. '  ' → logprob: -4.881601333618164
    6. ' fall' → logprob: -5.131601333618164
    7. ' s' → logprob: -5.256601333618164
    8. ' faire' → logprob: -5.631601333618164
    9. ' rendre' → logprob: -5.631601333618164
    10. '   ' → logprob: -5.631601333618164

Token 92: ' quand' (ID: 18026)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' même' (ID: 9679)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6691123247146606
    2. 'tout' → logprob: -1.7941123247146606
    3. 'on' → logprob: -2.544112205505371
    4. ' tout' → logprob: -3.419112205505371
    5. 'que' → logprob: -3.669112205505371
    6. 't' → logprob: -3.919112205505371
    7. ')' → logprob: -3.919112205505371
    8. 'qu' → logprob: -4.044112205505371
    9. 'la' → logprob: -4.544112205505371
    10. ' que' → logprob: -4.544112205505371

Token 94: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15152764320373535
    2. '<|end|>' → logprob: -2.1515276432037354
    3. '<|end|>' → logprob: -4.901527404785156
    4. '    
' → logprob: -5.151527404785156
    5. '

' → logprob: -5.526527404785156
    6. ' 
' → logprob: -6.026527404785156
    7. '   ' → logprob: -6.276527404785156
    8. '\n' → logprob: -6.901527404785156
    9. '  
' → logprob: -7.401527404785156
    10. '```' → logprob: -8.776527404785156

Token 95: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00708144111558795
    2. '

' → logprob: -5.382081508636475
    3. '<|end|>' → logprob: -6.132081508636475
    4. '    
' → logprob: -9.382081031799316
    5. '<|end|>' → logprob: -9.757081031799316
    6. 'def' → logprob: -10.007081031799316
    7. '   ' → logprob: -10.507081031799316
    8. ' 
' → logprob: -10.632081031799316
    9. '  
' → logprob: -10.882081031799316
    10. '
' → logprob: -11.882081031799316

Token 96: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14336667954921722
    2. ' def' → logprob: -2.018366575241089
    3. '
' → logprob: -8.268366813659668
    4. '   ' → logprob: -8.268366813659668
    5. '<|end|>' → logprob: -9.393366813659668
    6. ' ' → logprob: -10.643366813659668
    7. ' 
' → logprob: -11.393366813659668
    8. '	def' → logprob: -11.393366813659668
    9. '    
' → logprob: -11.518366813659668
    10. ')' → logprob: -11.518366813659668

Token 97: ' pop' (ID: 2735)
  Prédit: ' push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.13765104115009308
    2. ' pop' → logprob: -2.512650966644287
    3. ' he' → logprob: -3.137650966644287
    4. 'push' → logprob: -5.887650966644287
    5. 'pop' → logprob: -6.762650966644287
    6. ' ' → logprob: -9.387651443481445
    7. 'he' → logprob: -9.637651443481445
    8. '	push' → logprob: -10.887651443481445
    9. ' peek' → logprob: -11.262651443481445
    10. '_push' → logprob: -11.512651443481445

Token 98: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08710511028766632
    2. '(' → logprob: -2.7121050357818604
    3. '()' → logprob: -4.0871052742004395
    4. ' (' → logprob: -8.837104797363281
    5. '(
' → logprob: -10.462104797363281
    6. '(s' → logprob: -10.712104797363281
    7. ' ' → logprob: -11.837104797363281
    8. '(sel' → logprob: -11.962104797363281
    9. 'self' → logprob: -12.212104797363281
    10. '()(' → logprob: -12.837104797363281

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0729488953948021
    2. ')' → logprob: -2.697948932647705
    3. '):
' → logprob: -6.322948932647705
    4. 'self' → logprob: -7.447948932647705
    5. ' ):' → logprob: -8.072948455810547
    6. '(self' → logprob: -9.572948455810547
    7. ' ' → logprob: -9.697948455810547
    8. '   ' → logprob: -9.822948455810547
    9. ',' → logprob: -9.947948455810547
    10. '):

' → logprob: -10.197948455810547

Token 100: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8649698495864868
    2. '       ' → logprob: -1.2399698495864868
    3. ' ' → logprob: -1.7399698495864868
    4. '   ' → logprob: -3.1149697303771973
    5. ' 
' → logprob: -3.3649697303771973
    6. ')' → logprob: -4.864969730377197
    7. '    ' → logprob: -5.239969730377197
    8. 'return' → logprob: -5.489969730377197
    9. '<|end|>' → logprob: -5.614969730377197
    10. '	return' → logprob: -5.989969730377197

Token 101: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6512905359268188
    2. ' val' → logprob: -1.1512905359268188
    3. ' x' → logprob: -2.6512904167175293
    4. ' v' → logprob: -3.6512904167175293
    5. 'return' → logprob: -3.9012904167175293
    6. 'v' → logprob: -4.276290416717529
    7. 'x' → logprob: -4.901290416717529
    8. 'val' → logprob: -5.151290416717529
    9. '       ' → logprob: -5.401290416717529
    10. '   ' → logprob: -5.526290416717529

Token 102: ' Ici' (ID: 145754)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.9308457374572754
    2. ' return' → logprob: -1.0558457374572754
    3. 'return' → logprob: -2.5558457374572754
    4. 'val' → logprob: -2.8058457374572754
    5. 'v' → logprob: -3.4308457374572754
    6. ' v' → logprob: -3.4308457374572754
    7. ' x' → logprob: -4.055845737457275
    8. 'x' → logprob: -4.305845737457275
    9. 'a' → logprob: -5.055845737457275
    10. ' a' → logprob: -6.055845737457275

Token 103: ' je' (ID: 1264)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06696578115224838
    2. 'return' → logprob: -3.5669658184051514
    3. '       ' → logprob: -3.6919658184051514
    4. ' ' → logprob: -6.191965579986572
    5. '    ' → logprob: -6.191965579986572
    6. '        ' → logprob: -6.316965579986572
    7. ' val' → logprob: -6.441965579986572
    8. ',' → logprob: -7.066965579986572
    9. '   ' → logprob: -7.191965579986572
    10. ' a' → logprob: -7.941965579986572

Token 104: ' rem' (ID: 1662)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2377675175666809
    2. ' return' → logprob: -1.8627674579620361
    3. '   ' → logprob: -3.737767457962036
    4. ' vais' → logprob: -5.237767696380615
    5. 'def' → logprob: -5.487767696380615
    6. 's' → logprob: -5.737767696380615
    7. ' retourne' → logprob: -6.112767696380615
    8. ' ' → logprob: -6.487767696380615
    9. '       ' → logprob: -6.612767696380615
    10. '    ' → logprob: -6.737767696380615

Token 105: 'ets' (ID: 1719)
  Prédit: 'ove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.030113058164715767
    2. 'oves' → logprob: -4.280113220214844
    3. 'ets' → logprob: -4.655113220214844
    4. 'place' → logprob: -6.030113220214844
    5. 'e' → logprob: -6.780113220214844
    6. '#' → logprob: -7.155113220214844
    7. 'onte' → logprob: -8.530113220214844
    8. '   ' → logprob: -8.655113220214844
    9. 'over' → logprob: -8.905113220214844
    10. 'o' → logprob: -8.905113220214844

Token 106: ' le' (ID: 505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.841813862323761
    2. ' le' → logprob: -1.9668138027191162
    3. 'le' → logprob: -2.216813802719116
    4. 'a' → logprob: -2.216813802719116
    5. ')' → logprob: -3.216813802719116
    6. ' a' → logprob: -3.591813802719116
    7. ' -' → logprob: -3.966813802719116
    8. 'return' → logprob: -4.091814041137695
    9. ' return' → logprob: -4.216814041137695
    10. ' à' → logprob: -4.216814041137695

Token 107: ' signe' (ID: 87345)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00698188366368413
    2. '-s' → logprob: -5.88198184967041
    3. ' signe' → logprob: -6.38198184967041
    4. ' -' → logprob: -7.25698184967041
    5. 'a' → logprob: -7.38198184967041
    6. 'sign' → logprob: -7.75698184967041
    7. '-sign' → logprob: -8.38198184967041
    8. '+' → logprob: -8.50698184967041
    9. 's' → logprob: -9.13198184967041
    10. 'val' → logprob: -10.50698184967041

Token 108: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22820152342319489
    2. '       ' → logprob: -2.3532016277313232
    3. '        ' → logprob: -3.2282016277313232
    4. 'return' → logprob: -3.8532016277313232
    5. ' ' → logprob: -3.9782016277313232
    6. '    ' → logprob: -5.228201389312744
    7. '-' → logprob: -5.353201389312744
    8. ' )' → logprob: -5.478201389312744
    9. ')' → logprob: -5.603201389312744
    10. ',' → logprob: -5.853201389312744

Token 109: ' pratique' (ID: 42780)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.12548814713954926
    2. ' ' → logprob: -2.500488042831421
    3. 'return' → logprob: -3.500488042831421
    4. ' ' → logprob: -6.50048828125
    5. ')' → logprob: -7.00048828125
    6. ' )' → logprob: -7.12548828125
    7. '    ' → logprob: -7.37548828125
    8. ' a' → logprob: -8.12548828125
    9. ' s' → logprob: -8.37548828125
    10. '        ' → logprob: -8.62548828125

Token 110: '
' (ID: 198)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0919197797775269
    2. '       ' → logprob: -1.2169197797775269
    3. ' ' → logprob: -2.3419198989868164
    4. '   ' → logprob: -2.7169198989868164
    5. '<|end|>' → logprob: -2.7169198989868164
    6. ')' → logprob: -2.8419198989868164
    7. ' 
' → logprob: -3.5919198989868164
    8. 'return' → logprob: -3.8419198989868164
    9. ' )' → logprob: -4.466919898986816
    10. '    ' → logprob: -5.091919898986816

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7957922220230103
    2. ' return' → logprob: -0.7957922220230103
    3. 'return' → logprob: -2.7957921028137207
    4. '   ' → logprob: -4.045792102813721
    5. ' 
' → logprob: -4.420792102813721
    6. ' ' → logprob: -6.420792102813721
    7. '
' → logprob: -6.545792102813721
    8. '	return' → logprob: -7.045792102813721
    9. ')' → logprob: -7.920792102813721
    10. '    ' → logprob: -7.920792102813721

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04968472942709923
    2. ' return' → logprob: -3.049684762954712
    3. 'x' → logprob: -8.049684524536133
    4. 'val' → logprob: -8.174684524536133
    5. 'v' → logprob: -8.549684524536133
    6. 'value' → logprob: -9.299684524536133
    7. '   ' → logprob: -9.674684524536133
    8. 'res' → logprob: -10.424684524536133
    9. 'ret' → logprob: -10.549684524536133
    10. 'a' → logprob: -10.799684524536133

Token 113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11600227653980255
    2. '-' → logprob: -2.241002321243286
    3. '-he' → logprob: -5.991002082824707
    4. '-p' → logprob: -8.866002082824707
    5. '-return' → logprob: -9.866002082824707
    6. '-value' → logprob: -9.991002082824707
    7. '   ' → logprob: -10.116002082824707
    8. '-h' → logprob: -10.366002082824707
    9. '-q' → logprob: -10.491002082824707
    10. '-n' → logprob: -10.866002082824707

Token 114: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.2948405128554441e-05
    2. ' heap' → logprob: -11.75001335144043
    3. 'self' → logprob: -12.25001335144043
    4. 'he' → logprob: -15.75001335144043
    5. '(heap' → logprob: -15.75001335144043
    6. '.heap' → logprob: -17.50001335144043
    7. ' ' → logprob: -19.62501335144043
    8. '1' → logprob: -19.75001335144043
    9. 'queue' → logprob: -20.00001335144043
    10. '  ' → logprob: -20.12501335144043

Token 115: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '.pop' → logprob: -17.25
    3. 'p' → logprob: -17.75
    4. '.he' → logprob: -18.0
    5. '.heap' → logprob: -18.25
    6. '.q' → logprob: -18.625
    7. 'op' → logprob: -18.875
    8. '[' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. '   ' → logprob: -19.125

Token 116: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.004470235202461481
    2. '.heap' → logprob: -5.504470348358154
    3. '.q' → logprob: -8.754469871520996
    4. '.' → logprob: -8.879469871520996
    5. 'q' → logprob: -10.254469871520996
    6. '.pop' → logprob: -10.379469871520996
    7. ' he' → logprob: -11.254469871520996
    8. '.h' → logprob: -12.129469871520996
    9. '.qu' → logprob: -12.379469871520996
    10. 'he' → logprob: -13.629469871520996

Token 117: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011033779446734115
    2. 'ap' → logprob: -9.125110626220703
    3. 'q' → logprob: -14.250110626220703
    4. 'a' → logprob: -14.875110626220703
    5. 'qp' → logprob: -15.875110626220703
    6. 'pp' → logprob: -16.500110626220703
    7. 'sp' → logprob: -16.500110626220703
    8. 'pop' → logprob: -17.875110626220703
    9. '[' → logprob: -17.875110626220703
    10. 'p' → logprob: -18.125110626220703

Token 118: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -9.088346359931165e-07
    2. 'o' → logprob: -14.250000953674316
    3. '[' → logprob: -16.0
    4. 'ush' → logprob: -16.875
    5. 'pop' → logprob: -17.25
    6. 'of' → logprob: -17.875
    7. 'оп' → logprob: -17.875
    8. 'opf' → logprob: -17.875
    9. ' op' → logprob: -18.5
    10. '   ' → logprob: -18.625

Token 119: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1003161147236824
    2. '(' → logprob: -2.350316047668457
    3. '(
' → logprob: -9.475316047668457
    4. ' (' → logprob: -10.850316047668457
    5. '(s' → logprob: -11.850316047668457
    6. '(

' → logprob: -12.350316047668457
    7. '(this' → logprob: -13.850316047668457
    8. 'self' → logprob: -15.600316047668457
    9. '(sel' → logprob: -15.600316047668457
    10. '<|end|>' → logprob: -16.225317001342773

Token 120: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.054500666621607e-06
    2. ' .' → logprob: -13.12500286102295
    3. ').' → logprob: -14.25000286102295
    4. ')' → logprob: -16.375003814697266
    5. '.q' → logprob: -16.750003814697266
    6. '​.' → logprob: -17.375003814697266
    7. 'u' → logprob: -17.500003814697266
    8. 's' → logprob: -18.000003814697266
    9. '`.' → logprob: -18.125003814697266
    10. '.
' → logprob: -18.375003814697266

Token 121: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.735893965815194e-05
    2. ' que' → logprob: -11.500017166137695
    3. 'qu' → logprob: -12.375017166137695
    4. 'q' → logprob: -13.750017166137695
    5. 'self' → logprob: -14.375017166137695
    6. '   ' → logprob: -15.375017166137695
    7. 'qui' → logprob: -15.625017166137695
    8. ' ' → logprob: -15.750017166137695
    9. '```' → logprob: -16.000017166137695
    10. '
' → logprob: -16.375017166137695

Token 122: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.845798710244708e-05
    2. ')
' → logprob: -10.500038146972656
    3. '()' → logprob: -12.125038146972656
    4. '())' → logprob: -13.125038146972656
    5. ' )' → logprob: -13.125038146972656
    6. '<|end|>' → logprob: -14.625038146972656
    7. '   ' → logprob: -15.250038146972656
    8. ')

' → logprob: -15.375038146972656
    9. '       ' → logprob: -15.500038146972656
    10. '))' → logprob: -16.000038146972656

Token 123: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.49360352754592896
    2. ' def' → logprob: -0.993603527545929
    3. ' 
' → logprob: -4.493603706359863
    4. '   ' → logprob: -5.868603706359863
    5. ' ' → logprob: -6.368603706359863
    6. '    
' → logprob: -6.743603706359863
    7. '
' → logprob: -6.993603706359863
    8. '  
' → logprob: -7.618603706359863
    9. '<|end|>' → logprob: -7.868603706359863
    10. '   
' → logprob: -8.243603706359863

Token 125: ' push' (ID: 9349)
  Prédit: ' push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.28175607323646545
    2. 'push' → logprob: -1.406756043434143
    3. 'peek' → logprob: -8.281756401062012
    4. ' peek' → logprob: -8.906756401062012
    5. ' top' → logprob: -9.656756401062012
    6. '_push' → logprob: -10.656756401062012
    7. ' empty' → logprob: -10.656756401062012
    8. '	push' → logprob: -10.781756401062012
    9. 'top' → logprob: -11.156756401062012
    10. ' add' → logprob: -11.281756401062012

Token 126: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023369524569716305
    2. '(' → logprob: -8.75023365020752
    3. ' (' → logprob: -9.50023365020752
    4. '(
' → logprob: -15.75023365020752
    5. '(value' → logprob: -16.625234603881836
    6. '   ' → logprob: -17.125234603881836
    7. ')' → logprob: -17.250234603881836
    8. ',' → logprob: -17.500234603881836
    9. ' ' → logprob: -17.500234603881836
    10. '(s' → logprob: -17.625234603881836

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002120038407156244
    2. ' ,' → logprob: -9.375211715698242
    3. ',value' → logprob: -9.500211715698242
    4. ',val' → logprob: -10.875211715698242
    5. ',
' → logprob: -11.875211715698242
    6. ',a' → logprob: -12.000211715698242
    7. 'self' → logprob: -12.375211715698242
    8. ',self' → logprob: -12.375211715698242
    9. '   ' → logprob: -12.750211715698242
    10. '       ' → logprob: -13.125211715698242

Token 128: ' a' (ID: 261)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.44823724031448364
    2. 'val' → logprob: -1.5732371807098389
    3. 'value' → logprob: -2.573237180709839
    4. ' value' → logprob: -3.698237180709839
    5. 'x' → logprob: -3.823237180709839
    6. ' x' → logprob: -3.948237180709839
    7. 'a' → logprob: -4.948237419128418
    8. ' a' → logprob: -6.948237419128418
    9. '-' → logprob: -6.948237419128418
    10. ' -' → logprob: -7.073237419128418

Token 129: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.697182297706604
    2. '):' → logprob: -0.697182297706604
    3. ')' → logprob: -5.8221821784973145
    4. ' ):' → logprob: -7.8221821784973145
    5. '   ' → logprob: -7.9471821784973145
    6. ' ):
' → logprob: -8.947182655334473
    7. '       ' → logprob: -9.697182655334473
    8. '):

' → logprob: -9.947182655334473
    9. '):
' → logprob: -10.447182655334473
    10. ' )' → logprob: -11.322182655334473

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06737185269594193
    2. ' heap' → logprob: -3.4423718452453613
    3. '   ' → logprob: -4.067371845245361
    4. 'heap' → logprob: -4.192371845245361
    5. 'self' → logprob: -8.19237232208252
    6. ' self' → logprob: -8.19237232208252
    7. '.heap' → logprob: -8.44237232208252
    8. '(heap' → logprob: -9.69237232208252
    9. '      ' → logprob: -10.81737232208252
    10. '#' → logprob: -11.06737232208252

Token 131: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.020801939070224762
    2. ' heap' → logprob: -3.8958020210266113
    3. '   ' → logprob: -9.020801544189453
    4. '       ' → logprob: -10.020801544189453
    5. 'he' → logprob: -10.020801544189453
    6. '.heap' → logprob: -10.395801544189453
    7. '(heap' → logprob: -11.395801544189453
    8. '_heap' → logprob: -13.020801544189453
    9. ' ' → logprob: -13.645801544189453
    10. '
' → logprob: -13.645801544189453

Token 132: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'p' → logprob: -17.125
    3. '.' → logprob: -19.125
    4. '.q' → logprob: -19.875
    5. '.push' → logprob: -20.125
    6. 'push' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. '.heap' → logprob: -20.75
    9. '.he' → logprob: -20.875
    10. 'ql' → logprob: -20.875

Token 133: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -8.41866585687967e-06
    2. '.heap' → logprob: -12.250008583068848
    3. '.' → logprob: -12.750008583068848
    4. ' he' → logprob: -14.625008583068848
    5. 'he' → logprob: -15.625008583068848
    6. ' .' → logprob: -17.00000762939453
    7. '.h' → logprob: -17.75000762939453
    8. '.He' → logprob: -18.12500762939453
    9. '_he' → logprob: -18.50000762939453
    10. '.push' → logprob: -18.50000762939453

Token 134: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00012213163427077234
    2. 'ap' → logprob: -9.1251220703125
    3. 'push' → logprob: -11.3751220703125
    4. 'pp' → logprob: -14.1251220703125
    5. 'a' → logprob: -14.7501220703125
    6. 'n' → logprob: -15.7501220703125
    7. 'p' → logprob: -16.3751220703125
    8. 'q' → logprob: -16.6251220703125
    9. 'sp' → logprob: -17.0001220703125
    10. '```' → logprob: -17.2501220703125

Token 135: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -9.014684110297821e-06
    2. 'push' → logprob: -11.875008583068848
    3. 'u' → logprob: -14.500008583068848
    4. 'sh' → logprob: -14.875008583068848
    5. 'app' → logprob: -15.125008583068848
    6. '   ' → logprob: -15.875008583068848
    7. 'us' → logprob: -16.000009536743164
    8. 'p' → logprob: -16.125009536743164
    9. 'ut' → logprob: -16.250009536743164
    10. 'l' → logprob: -16.500009536743164

Token 136: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.759734732331708e-05
    2. '(' → logprob: -11.000017166137695
    3. ' (' → logprob: -14.500017166137695
    4. ' self' → logprob: -15.375017166137695
    5. 'self' → logprob: -15.750017166137695
    6. '(s' → logprob: -17.500017166137695
    7. '(this' → logprob: -17.750017166137695
    8. '	self' → logprob: -18.750017166137695
    9. ',self' → logprob: -18.750017166137695
    10. '   ' → logprob: -19.000017166137695

Token 137: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010402000043541193
    2. '(self' → logprob: -9.500103950500488
    3. 'self' → logprob: -10.875103950500488
    4. '.s' → logprob: -12.750103950500488
    5. ' .' → logprob: -12.875103950500488
    6. '.self' → logprob: -13.000103950500488
    7. ' self' → logprob: -13.875103950500488
    8. ',' → logprob: -14.625103950500488
    9. '(' → logprob: -15.375103950500488
    10. ').' → logprob: -16.000104904174805

Token 138: 'que' (ID: 1126)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06250882148742676
    2. 'que' → logprob: -2.8125088214874268
    3. ' self' → logprob: -7.687508583068848
    4. ' que' → logprob: -10.312508583068848
    5. ' ' → logprob: -10.937508583068848
    6. 'ques' → logprob: -11.562508583068848
    7. '   ' → logprob: -11.812508583068848
    8. 's' → logprob: -12.687508583068848
    9. '(self' → logprob: -12.812508583068848
    10. 'Que' → logprob: -13.562508583068848

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017105070874094963
    2. '(-' → logprob: -4.3921051025390625
    3. '   ' → logprob: -6.0171051025390625
    4. ',-' → logprob: -6.7671051025390625
    5. '       ' → logprob: -7.2671051025390625
    6. ' ,' → logprob: -9.017105102539062
    7. ')' → logprob: -9.517105102539062
    8. ' (-' → logprob: -10.642105102539062
    9. '-' → logprob: -11.767105102539062
    10. '  ' → logprob: -11.767105102539062

Token 140: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25251713395118713
    2. '-a' → logprob: -1.5025171041488647
    3. '-' → logprob: -7.627517223358154
    4. '-au' → logprob: -10.127516746520996
    5. '-ai' → logprob: -10.502516746520996
    6. '-A' → logprob: -11.377516746520996
    7. '-u' → logprob: -11.752516746520996
    8. '   ' → logprob: -12.877516746520996
    9. '-а' → logprob: -13.127516746520996
    10. '-n' → logprob: -13.877516746520996

Token 141: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -17.375
    3. '   ' → logprob: -25.875
    4. 'а' → logprob: -26.125
    5. '	a' → logprob: -26.125
    6. ''a' → logprob: -27.25
    7. '_a' → logprob: -27.625
    8. ')a' → logprob: -27.625
    9. ' ' → logprob: -27.875
    10. '#a' → logprob: -27.875

Token 142: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ')
' → logprob: -11.375016212463379
    3. ' )' → logprob: -12.375016212463379
    4. ')return' → logprob: -15.250016212463379
    5. ')

' → logprob: -16.125015258789062
    6. ')a' → logprob: -17.125015258789062
    7. '<|end|>' → logprob: -17.375015258789062
    8. ')#' → logprob: -18.625015258789062
    9. ')`' → logprob: -19.250015258789062
    10. '   ' → logprob: -19.875015258789062

Token 143: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2651589810848236
    2. ' def' → logprob: -1.515159010887146
    3. '   ' → logprob: -5.0151591300964355
    4. '#' → logprob: -6.2651591300964355
    5. ')' → logprob: -6.8901591300964355
    6. '	def' → logprob: -7.1401591300964355
    7. '
' → logprob: -7.1401591300964355
    8. '<|end|>' → logprob: -7.1401591300964355
    9. '<|end|>' → logprob: -8.890158653259277
    10. ' ' → logprob: -9.015158653259277

Token 145: ' top' (ID: 2344)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3210141062736511
    2. 'peek' → logprob: -1.946014165878296
    3. 'empty' → logprob: -2.696014165878296
    4. 'top' → logprob: -3.696014165878296
    5. 'size' → logprob: -4.321013927459717
    6. ' empty' → logprob: -5.071013927459717
    7. ' top' → logprob: -5.071013927459717
    8. ' len' → logprob: -5.321013927459717
    9. ' __' → logprob: -6.321013927459717
    10. '__' → logprob: -6.571013927459717

Token 146: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018761418759822845
    2. '(' → logprob: -4.01876163482666
    3. '()' → logprob: -7.51876163482666
    4. 'self' → logprob: -10.01876163482666
    5. ' (' → logprob: -11.39376163482666
    6. '(
' → logprob: -13.01876163482666
    7. '   ' → logprob: -13.14376163482666
    8. '(s' → logprob: -13.26876163482666
    9. 'def' → logprob: -13.26876163482666
    10. 's' → logprob: -13.51876163482666

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09274547547101974
    2. ')' → logprob: -2.467745542526245
    3. '):
' → logprob: -6.342745304107666
    4. '(self' → logprob: -6.717745304107666
    5. 'self' → logprob: -7.342745304107666
    6. ' ):' → logprob: -9.717745780944824
    7. '):

' → logprob: -10.092745780944824
    8. '():' → logprob: -10.467745780944824
    9. '()' → logprob: -11.342745780944824
    10. ' )' → logprob: -11.467745780944824

Token 148: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0914117768406868
    2. '       ' → logprob: -2.966411828994751
    3. 'return' → logprob: -3.341411828994751
    4. '
' → logprob: -9.091411590576172
    5. '	return' → logprob: -9.091411590576172
    6. ' 
' → logprob: -9.091411590576172
    7. '   ' → logprob: -9.841411590576172
    8. ' ' → logprob: -10.591411590576172
    9. '        
' → logprob: -11.591411590576172
    10. ' if' → logprob: -11.716411590576172

Token 149: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001930420519784093
    2. ' return' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.751930236816406
    4. 'if' → logprob: -15.126930236816406
    5. '	return' → logprob: -15.501930236816406
    6. '#' → logprob: -16.251930236816406
    7. '       ' → logprob: -16.376930236816406
    8. ':return' → logprob: -17.501930236816406
    9. '-return' → logprob: -18.126930236816406
    10. 'eturn' → logprob: -18.376930236816406

Token 150: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7455108761787415
    2. ' -' → logprob: -0.8705108761787415
    3. '-self' → logprob: -2.2455108165740967
    4. '-max' → logprob: -8.870511054992676
    5. '-p' → logprob: -9.745511054992676
    6. '-top' → logprob: -9.745511054992676
    7. '-q' → logprob: -9.995511054992676
    8. '-t' → logprob: -10.245511054992676
    9. '-s' → logprob: -10.370511054992676
    10. '-l' → logprob: -10.495511054992676

Token 151: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6240566083070007e-06
    2. ' self' → logprob: -13.500001907348633
    3. '(self' → logprob: -16.375001907348633
    4. '[self' → logprob: -19.875001907348633
    5. '	self' → logprob: -20.875001907348633
    6. 'heap' → logprob: -20.875001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '[' → logprob: -21.875001907348633
    9. '-self' → logprob: -21.875001907348633
    10. '
' → logprob: -21.875001907348633

Token 152: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2664456789934775e-06
    2. ' .' → logprob: -15.000000953674316
    3. ').' → logprob: -15.750000953674316
    4. '.top' → logprob: -15.875000953674316
    5. '`.' → logprob: -16.250001907348633
    6. '.s' → logprob: -16.250001907348633
    7. '​.' → logprob: -16.875001907348633
    8. '.queue' → logprob: -17.125001907348633
    9. '>.' → logprob: -17.125001907348633
    10. '.qu' → logprob: -17.250001907348633

Token 153: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -4.320199877838604e-07
    2. 'q' → logprob: -15.25
    3. 'qu' → logprob: -16.375
    4. ' que' → logprob: -18.375
    5. 'quer' → logprob: -18.875
    6. 'ques' → logprob: -19.0
    7. 'quee' → logprob: -19.5
    8. 'qui' → logprob: -19.875
    9. '   ' → logprob: -20.125
    10. '```' → logprob: -20.125

Token 154: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015056940028443933
    2. '0' → logprob: -6.5015058517456055
    3. ' [' → logprob: -13.251505851745605
    4. ' ' → logprob: -14.251505851745605
    5. 's' → logprob: -15.001505851745605
    6. '\[' → logprob: -15.751505851745605
    7. '[
' → logprob: -15.751505851745605
    8. '```' → logprob: -16.37650489807129
    9. '﻿' → logprob: -17.25150489807129
    10. '​' → logprob: -17.75150489807129

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '[' → logprob: -19.75
    4. '۰' → logprob: -19.75
    5. '   ' → logprob: -20.5
    6. '```' → logprob: -21.0625
    7. '  ' → logprob: -21.125
    8. '<|end|>' → logprob: -21.125
    9. '
' → logprob: -21.5
    10. '０' → logprob: -21.75

Token 156: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015085970517247915
    2. ']' → logprob: -9.750150680541992
    3. '}' → logprob: -9.875150680541992
    4. '<|end|>' → logprob: -10.500150680541992
    5. ' )' → logprob: -11.625150680541992
    6. ')
' → logprob: -12.625150680541992
    7. '）' → logprob: -14.875150680541992
    8. '()' → logprob: -15.125150680541992
    9. '   ' → logprob: -16.000150680541992
    10. '<|end|>' → logprob: -16.500150680541992

Token 157: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' top' (ID: 2344)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' simplement' (ID: 45065)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' l' (ID: 305)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.9413054585456848
    2. 'l' → logprob: -1.19130539894104
    3. 'indice' → logprob: -2.31630539894104
    4. 'in' → logprob: -2.56630539894104
    5. 'acc' → logprob: -3.44130539894104
    6. 'ind' → logprob: -3.69130539894104
    7. '-' → logprob: -4.191305637359619
    8. 'return' → logprob: -4.566305637359619
    9. 'access' → logprob: -4.941305637359619
    10. 'val' → logprob: -4.941305637359619

Token 163: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.302800714969635
    2. ''' → logprob: -2.4278006553649902
    3. 'a' → logprob: -2.8028006553649902
    4. 'ement' → logprob: -3.9278006553649902
    5. 'iste' → logprob: -4.30280065536499
    6. 'ist' → logprob: -4.42780065536499
    7. 'ément' → logprob: -4.80280065536499
    8. '[' → logprob: -4.92780065536499
    9. 'em' → logprob: -5.17780065536499
    10. ''in' → logprob: -5.55280065536499

Token 164: 'index' (ID: 2257)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.6948123574256897
    2. 'index' → logprob: -0.8198123574256897
    3. 'acc' → logprob: -4.194812297821045
    4. '[' → logprob: -4.569812297821045
    5. 'indices' → logprob: -5.069812297821045
    6. 'élé' → logprob: -5.194812297821045
    7. 'ind' → logprob: -5.194812297821045
    8. 'access' → logprob: -5.694812297821045
    9. 'idx' → logprob: -5.694812297821045
    10. 'ac' → logprob: -6.569812297821045

Token 165: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23433223366737366
    2. 'class' → logprob: -2.234332323074341
    3. '#' → logprob: -2.359332323074341
    4. 'if' → logprob: -5.984332084655762
    5. ' def' → logprob: -6.484332084655762
    6. 'import' → logprob: -6.734332084655762
    7. ' class' → logprob: -7.109332084655762
    8. ' if' → logprob: -8.984332084655762
    9. ' #' → logprob: -8.984332084655762
    10. 'Voici' → logprob: -8.984332084655762

Token 168: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.509653925895691
    2. ' line' → logprob: -1.634653925895691
    3. 'i' → logprob: -2.5096540451049805
    4. ' lire' → logprob: -2.5096540451049805
    5. ' la' → logprob: -2.8846540451049805
    6. ' sim' → logprob: -2.8846540451049805
    7. ' l' → logprob: -3.3846540451049805
    8. ' continuer' → logprob: -3.5096540451049805
    9. ' tester' → logprob: -3.7596540451049805
    10. ' trouver' → logprob: -4.2596540451049805

Token 169: ' seg' (ID: 3055)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.5972062945365906
    2. 'tri' → logprob: -1.5972063541412354
    3. ' test' → logprob: -3.3472063541412354
    4. 'main' → logprob: -3.5972063541412354
    5. ' prochain' → logprob: -3.9722063541412354
    6. ' main' → logprob: -4.222206115722656
    7. 'def' → logprob: -4.347206115722656
    8. 'test' → logprob: -4.472206115722656
    9. ' max' → logprob: -4.472206115722656
    10. 'pro' → logprob: -4.597206115722656

Token 170: 'tree' (ID: 19816)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.003759940154850483
    2. 'tree' → logprob: -6.378759860992432
    3. 'mentation' → logprob: -7.128759860992432
    4. 'mented' → logprob: -7.878759860992432
    5. 'mente' → logprob: -8.25376033782959
    6. 'ments' → logprob: -8.25376033782959
    7. 'fault' → logprob: -9.62876033782959
    8. 'mental' → logprob: -10.00376033782959
    9. 'm' → logprob: -10.25376033782959
    10. 'мент' → logprob: -10.50376033782959

Token 171: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06857282668352127
    2. '
' → logprob: -3.443572759628296
    3. ' class' → logprob: -3.443572759628296
    4. ' ' → logprob: -6.818572998046875
    5. '<|end|>' → logprob: -7.318572998046875
    6. ',' → logprob: -8.193572998046875
    7. '<|end|>' → logprob: -9.193572998046875
    8. '

' → logprob: -9.943572998046875
    9. ' 
' → logprob: -10.318572998046875
    10. '#' → logprob: -10.443572998046875

Token 172: ' valeur' (ID: 41664)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010383227840065956
    2. ' class' → logprob: -5.135383129119873
    3. '#' → logprob: -5.760383129119873
    4. 'import' → logprob: -6.760383129119873
    5. ' voici' → logprob: -9.635383605957031
    6. ' on' → logprob: -10.760383605957031
    7. ' #' → logprob: -11.385383605957031
    8. 'from' → logprob: -11.385383605957031
    9. 'Voici' → logprob: -12.135383605957031
    10. 'def' → logprob: -12.635383605957031

Token 173: ' neut' (ID: 18541)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.007110317703336477
    2. ' class' → logprob: -5.382110118865967
    3. 'import' → logprob: -6.632110118865967
    4. ',' → logprob: -8.257110595703125
    5. '[]' → logprob: -9.007110595703125
    6. '=' → logprob: -9.132110595703125
    7. '<|end|>' → logprob: -9.507110595703125
    8. ':' → logprob: -9.632110595703125
    9. 's' → logprob: -9.632110595703125
    10. '.' → logprob: -9.632110595703125

Token 174: 're' (ID: 264)
  Prédit: 'rale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rale' → logprob: -0.027882395312190056
    2. 'ral' → logprob: -3.6528823375701904
    3. 're' → logprob: -7.0278825759887695
    4. 'ra' → logprob: -8.02788257598877
    5. 'r' → logprob: -8.40288257598877
    6. 'ale' → logprob: -10.02788257598877
    7. '#' → logprob: -10.52788257598877
    8. 'rel' → logprob: -11.15288257598877
    9. 'race' → logprob: -12.15288257598877
    10. 'rée' → logprob: -12.27788257598877

Token 175: ' super' (ID: 2539)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5537286996841431
    2. 'INF' → logprob: -1.303728699684143
    3. '=' → logprob: -2.6787285804748535
    4. ' INF' → logprob: -3.8037285804748535
    5. 'inf' → logprob: -4.1787285804748535
    6. ',' → logprob: -4.3037285804748535
    7. 'IN' → logprob: -4.4287285804748535
    8. '#' → logprob: -5.1787285804748535
    9. '_INF' → logprob: -5.9287285804748535
    10. ' ' → logprob: -6.0537285804748535

Token 176: ' grande' (ID: 10094)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.1515450477600098
    2. 'class' → logprob: -2.2765450477600098
    3. ' =' → logprob: -2.6515450477600098
    4. ' ' → logprob: -2.6515450477600098
    5. ' inf' → logprob: -3.0265450477600098
    6. '-' → logprob: -3.0265450477600098
    7. ',' → logprob: -3.2765450477600098
    8. 'import' → logprob: -3.2765450477600098
    9. ' -' → logprob: -3.6515450477600098
    10. '=' → logprob: -3.9015450477600098

Token 177: '
' (ID: 198)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.06647276133298874
    2. 'MAX' → logprob: -4.31647253036499
    3. 'inf' → logprob: -4.69147253036499
    4. 'IN' → logprob: -5.06647253036499
    5. '_INF' → logprob: -5.06647253036499
    6. ' =' → logprob: -5.19147253036499
    7. 'INT' → logprob: -5.44147253036499
    8. 'int' → logprob: -5.56647253036499
    9. ' INF' → logprob: -5.56647253036499
    10. 'import' → logprob: -5.56647253036499

Token 178: 'def' (ID: 1314)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.005936501547694206
    2. 'INT' → logprob: -6.505936622619629
    3. ' INF' → logprob: -6.630936622619629
    4. 'inf' → logprob: -7.005936622619629
    5. 'MAX' → logprob: -7.130936622619629
    6. 'NE' → logprob: -7.130936622619629
    7. 'IN' → logprob: -8.505936622619629
    8. 'int' → logprob: -8.880936622619629
    9. '_INF' → logprob: -8.880936622619629
    10. 'NEG' → logprob: -11.130936622619629

Token 179: ' seg' (ID: 3055)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1462739706039429
    2. ' seg' → logprob: -1.3962739706039429
    3. ' inf' → logprob: -2.2712740898132324
    4. ' get' → logprob: -2.6462740898132324
    5. ' INF' → logprob: -3.0212740898132324
    6. ' combine' → logprob: -3.1462740898132324
    7. ' min' → logprob: -3.3962740898132324
    8. ' merge' → logprob: -3.8962740898132324
    9. ' neutral' → logprob: -4.271274089813232
    10. ' default' → logprob: -4.271274089813232

Token 180: 'func' (ID: 5652)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.0026745840441435575
    2. 'max' → logprob: -7.252674579620361
    3. 'inf' → logprob: -7.502674579620361
    4. '_inf' → logprob: -8.00267505645752
    5. '_tree' → logprob: -8.12767505645752
    6. 'ment' → logprob: -8.37767505645752
    7. 'val' → logprob: -8.37767505645752
    8. '_val' → logprob: -10.25267505645752
    9. 'ement' → logprob: -10.25267505645752
    10. '_max' → logprob: -10.25267505645752

Token 181: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03382919356226921
    2. '(x' → logprob: -3.4088292121887207
    3. '(min' → logprob: -9.533828735351562
    4. '(' → logprob: -10.033828735351562
    5. '(left' → logprob: -10.283828735351562
    6. '(l' → logprob: -11.283828735351562
    7. '(max' → logprob: -11.908828735351562
    8. '(lhs' → logprob: -12.533828735351562
    9. 'a' → logprob: -13.408828735351562
    10. '```' → logprob: -13.658828735351562

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006878172513097525
    2. ',y' → logprob: -5.00687837600708
    3. ' ,' → logprob: -8.756877899169922
    4. ',
' → logprob: -13.506877899169922
    5. ',x' → logprob: -13.756877899169922
    6. '1' → logprob: -14.131877899169922
    7. ',f' → logprob: -14.506877899169922
    8. ',a' → logprob: -14.631877899169922
    9. ',b' → logprob: -14.631877899169922
    10. ',v' → logprob: -15.381877899169922

Token 183: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015035520773380995
    2. ' y' → logprob: -6.5015034675598145
    3. ' ' → logprob: -15.001503944396973
    4. '	y' → logprob: -15.251503944396973
    5. '   ' → logprob: -15.376503944396973
    6. '  ' → logprob: -16.501502990722656
    7. '
' → logprob: -16.751502990722656
    8. ',y' → logprob: -16.876502990722656
    9. ''y' → logprob: -17.126502990722656
    10. 'y's' → logprob: -17.126502990722656

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008459602249786258
    2. '):
' → logprob: -7.625845909118652
    3. ':' → logprob: -8.625845909118652
    4. ' ):' → logprob: -8.750845909118652
    5. ')' → logprob: -11.500845909118652
    6. '=' → logprob: -12.625845909118652
    7. ' :' → logprob: -13.000845909118652
    8. ',' → logprob: -13.625845909118652
    9. '   ' → logprob: -13.750845909118652
    10. '>:' → logprob: -14.000845909118652

Token 185: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0017739501781761646
    2. '   ' → logprob: -7.001773834228516
    3. ' return' → logprob: -7.126773834228516
    4. 'min' → logprob: -9.876773834228516
    5. ':return' → logprob: -12.501773834228516
    6. '{return' → logprob: -13.376773834228516
    7. 'max' → logprob: -13.751773834228516
    8. '	return' → logprob: -14.876773834228516
    9. 'if' → logprob: -14.876773834228516
    10. 'ret' → logprob: -16.001773834228516

Token 186: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004706495441496372
    2. 'min' → logprob: -5.629706382751465
    3. ' return' → logprob: -7.254706382751465
    4. 'max' → logprob: -7.879706382751465
    5. '   ' → logprob: -11.004706382751465
    6. ' min' → logprob: -13.254706382751465
    7. '	return' → logprob: -14.004706382751465
    8. 'x' → logprob: -14.504706382751465
    9. 'if' → logprob: -15.129706382751465
    10. 'ret' → logprob: -16.00470733642578

Token 187: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2752719521522522
    2. 'max' → logprob: -1.5252718925476074
    3. 'x' → logprob: -3.7752718925476074
    4. ' min' → logprob: -9.025272369384766
    5. ' max' → logprob: -11.025272369384766
    6. ' x' → logprob: -13.025272369384766
    7. 'float' → logprob: -13.650272369384766
    8. '	min' → logprob: -14.650272369384766
    9. '(min' → logprob: -15.275272369384766
    10. 'inf' → logprob: -16.025272369384766

Token 188: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.077528764260933e-05
    2. '(' → logprob: -10.125081062316895
    3. 'x' → logprob: -10.125081062316895
    4. ' (' → logprob: -15.000081062316895
    5. '<|end|>' → logprob: -16.000080108642578
    6. '(
' → logprob: -16.875080108642578
    7. '((' → logprob: -18.125080108642578
    8. ',x' → logprob: -18.625080108642578
    9. '```' → logprob: -19.750080108642578
    10. ' x' → logprob: -20.125080108642578

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006923011387698352
    2. ' ,' → logprob: -7.750692367553711
    3. ',y' → logprob: -8.250692367553711
    4. 'y' → logprob: -14.750692367553711
    5. ' y' → logprob: -17.75069236755371
    6. ',
' → logprob: -18.00069236755371
    7. ',x' → logprob: -18.37569236755371
    8. ' ' → logprob: -19.87569236755371
    9. ')' → logprob: -20.00069236755371
    10. '   ' → logprob: -20.25069236755371

Token 190: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759400725364685
    2. ' y' → logprob: -0.8259400725364685
    3. ' ' → logprob: -14.825940132141113
    4. '   ' → logprob: -16.450939178466797
    5. ')y' → logprob: -16.575939178466797
    6. ')' → logprob: -16.700939178466797
    7. '	y' → logprob: -16.950939178466797
    8. '    ' → logprob: -16.950939178466797
    9. ' ' → logprob: -17.575939178466797
    10. ''y' → logprob: -18.950939178466797

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ' )' → logprob: -13.000004768371582
    3. ')
' → logprob: -13.125004768371582
    4. '}' → logprob: -17.625003814697266
    5. ')return' → logprob: -18.125003814697266
    6. ')#' → logprob: -18.125003814697266
    7. '))' → logprob: -18.250003814697266
    8. '),' → logprob: -18.250003814697266
    9. ')

' → logprob: -18.250003814697266
    10. ')}' → logprob: -18.750003814697266

Token 192: 'ide' (ID: 617)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.19436822831630707
    2. '<|end|>' → logprob: -2.4443681240081787
    3. 'IN' → logprob: -3.1943681240081787
    4. 'NE' → logprob: -4.319368362426758
    5. 'inf' → logprob: -4.569368362426758
    6. '
' → logprob: -5.569368362426758
    7. 'def' → logprob: -5.694368362426758
    8. '  
' → logprob: -5.819368362426758
    9. 'MAX' → logprob: -5.944368362426758
    10. 'neutral' → logprob: -6.569368362426758

Token 193: '_ele' (ID: 154942)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.023282751441001892
    2. 'nt' → logprob: -4.273282527923584
    3. 'f' → logprob: -5.648282527923584
    4. ' =' → logprob: -6.898282527923584
    5. 'val' → logprob: -7.023282527923584
    6. '=' → logprob: -7.148282527923584
    7. '  ' → logprob: -8.023283004760742
    8. 'alf' → logprob: -8.023283004760742
    9. 'Al' → logprob: -8.273283004760742
    10. '   ' → logprob: -8.273283004760742

Token 194: ' =' (ID: 314)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.013536523096263409
    2. 'nt' → logprob: -5.26353645324707
    3. 'm' → logprob: -5.38853645324707
    4. 'mt' → logprob: -5.76353645324707
    5. '=' → logprob: -8.38853645324707
    6. 'mnt' → logprob: -8.38853645324707
    7. 'Ment' → logprob: -10.88853645324707
    8. '```' → logprob: -11.01353645324707
    9. ' ment' → logprob: -11.51353645324707
    10. 'мент' → logprob: -11.88853645324707

Token 195: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10207293182611465
    2. 'float' → logprob: -2.3520729541778564
    3. '100' → logprob: -6.977072715759277
    4. 'int' → logprob: -7.477072715759277
    5. '999' → logprob: -8.852072715759277
    6. ' ' → logprob: -9.227072715759277
    7. '1' → logprob: -9.602072715759277
    8. ' float' → logprob: -10.477072715759277
    9. 'sys' → logprob: -11.727072715759277
    10. '200' → logprob: -12.852072715759277

Token 196: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0437452532351017
    2. 'float' → logprob: -3.168745279312134
    3. 'int' → logprob: -7.793745040893555
    4. '100' → logprob: -8.418745040893555
    5. '1' → logprob: -10.168745040893555
    6. '999' → logprob: -10.168745040893555
    7. ' ' → logprob: -11.668745040893555
    8. 'sys' → logprob: -11.918745040893555
    9. '(' → logprob: -12.293745040893555
    10. ' float' → logprob: -12.543745040893555

Token 197: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.012191266752779484
    2. '10' → logprob: -4.512191295623779
    3. '15' → logprob: -6.887191295623779
    4. '**' → logprob: -9.637190818786621
    5. '18' → logprob: -10.262190818786621
    6. '12' → logprob: -11.387190818786621
    7. '8' → logprob: -12.762190818786621
    8. '11' → logprob: -13.012190818786621
    9. '99' → logprob: -13.262190818786621
    10. '14' → logprob: -14.387190818786621

Token 198: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.11153333634138107
    2. '9' → logprob: -2.6115334033966064
    3. '10' → logprob: -3.4865334033966064
    4. '18' → logprob: -7.236533164978027
    5. '12' → logprob: -7.986533164978027
    6. '11' → logprob: -8.486533164978027
    7. '16' → logprob: -8.986533164978027
    8. '20' → logprob: -9.611533164978027
    9. '14' → logprob: -10.736533164978027
    10. '13' → logprob: -10.861533164978027

Token 199: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.03745477274060249
    2. '9' → logprob: -4.037454605102539
    3. '10' → logprob: -4.287454605102539
    4. '18' → logprob: -5.412454605102539
    5. '12' → logprob: -7.537454605102539
    6. '11' → logprob: -8.787454605102539
    7. '16' → logprob: -9.162454605102539
    8. '13' → logprob: -10.037454605102539
    9. '14' → logprob: -10.162454605102539
    10. '20' → logprob: -10.662454605102539

Token 200: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3900575041770935
    2. 'class' → logprob: -1.1400575637817383
    3. '<|end|>' → logprob: -6.015057563781738
    4. '

' → logprob: -7.765057563781738
    5. '<|end|>' → logprob: -8.765057563781738
    6. ' class' → logprob: -9.515057563781738
    7. '  
' → logprob: -10.390057563781738
    8. '
' → logprob: -11.015057563781738
    9. '#' → logprob: -11.265057563781738
    10. ' 
' → logprob: -11.390057563781738

Token 201: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47532474994659424
    2. 'class' → logprob: -0.9753247499465942
    3. '

' → logprob: -7.100324630737305
    4. '<|end|>' → logprob: -8.100324630737305
    5. ' class' → logprob: -9.600324630737305
    6. '#' → logprob: -10.725324630737305
    7. '
' → logprob: -11.350324630737305
    8. '<|end|>' → logprob: -11.975324630737305
    9. '  
' → logprob: -12.350324630737305
    10. ' 
' → logprob: -13.600324630737305

Token 202: ' ça' (ID: 13590)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2201448529958725
    2. '0' → logprob: -2.720144748687744
    3. '<|end|>' → logprob: -2.720144748687744
    4. 'import' → logprob: -3.720144748687744
    5. '100' → logprob: -4.720144748687744
    6. '999' → logprob: -4.720144748687744
    7. ' ' → logprob: -4.970144748687744
    8. '
' → logprob: -5.845144748687744
    9. 'None' → logprob: -5.845144748687744
    10. '#' → logprob: -5.970144748687744

Token 203: ' devrait' (ID: 52773)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.959156334400177
    2. '#' → logprob: -1.2091562747955322
    3. '...' → logprob: -2.7091562747955322
    4. 'a' → logprob: -3.3341562747955322
    5. 'ne' → logprob: -3.3341562747955322
    6. 'n' → logprob: -3.7091562747955322
    7. ' #' → logprob: -3.9591562747955322
    8. 'continue' → logprob: -4.334156513214111
    9. ' continue' → logprob: -4.459156513214111
    10. ' va' → logprob: -4.584156513214111

Token 204: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.2417580485343933
    2. ' suff' → logprob: -2.616758108139038
    3. 's' → logprob: -3.116758108139038
    4. ' être' → logprob: -3.241758108139038
    5. ' ' → logprob: -4.116757869720459
    6. 'bien' → logprob: -4.616757869720459
    7. 't' → logprob: -5.491757869720459
    8. 'larg' → logprob: -5.616757869720459
    9. 'êtres' → logprob: -5.866757869720459
    10. 'faire' → logprob: -6.241757869720459

Token 205: ' assez' (ID: 33376)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.4213496446609497
    2. 'larg' → logprob: -2.29634952545166
    3. 's' → logprob: -2.54634952545166
    4. ' plus' → logprob: -2.92134952545166
    5. ' suffisamment' → logprob: -3.42134952545166
    6. ' assez' → logprob: -3.67134952545166
    7. ' suff' → logprob: -4.04634952545166
    8. 'un' → logprob: -4.29634952545166
    9. ' un' → logprob: -5.17134952545166
    10. ' suffis' → logprob: -6.04634952545166

Token 206: ' grand' (ID: 6363)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.44255688786506653
    2. '
' → logprob: -1.0675568580627441
    3. '<|end|>' → logprob: -4.817556858062744
    4. '

' → logprob: -5.942556858062744
    5. ' class' → logprob: -6.442556858062744
    6. '<|end|>' → logprob: -6.692556858062744
    7. '  
' → logprob: -10.692557334899902
    8. '#' → logprob: -10.817557334899902
    9. 'import' → logprob: -10.817557334899902
    10. '```' → logprob: -10.942557334899902

Token 207: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.13225090503692627
    2. '<|end|>' → logprob: -2.2572507858276367
    3. '
' → logprob: -4.257250785827637
    4. '<|end|>' → logprob: -5.507250785827637
    5. ' class' → logprob: -7.007250785827637
    6. '```' → logprob: -10.882250785827637
    7. '<class' → logprob: -11.382250785827637
    8. 'import' → logprob: -11.507250785827637
    9. ')' → logprob: -11.507250785827637
    10. '  
' → logprob: -11.632250785827637

Token 208: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00020377879263833165
    2. '
' → logprob: -8.625204086303711
    3. '#' → logprob: -11.375204086303711
    4. ' class' → logprob: -11.625204086303711
    5. 'import' → logprob: -13.625204086303711
    6. '<|end|>' → logprob: -14.375204086303711
    7. '<|end|>' → logprob: -14.500204086303711
    8. '  
' → logprob: -14.625204086303711
    9. ' 
' → logprob: -15.000204086303711
    10. '    
' → logprob: -15.875204086303711

Token 209: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.551354706287384
    2. ' Seg' → logprob: -1.1763546466827393
    3. 'Segment' → logprob: -2.5513546466827393
    4. ' Segment' → logprob: -3.3013546466827393
    5. ' seg' → logprob: -7.676354885101318
    6. 'seg' → logprob: -10.42635440826416
    7. ' segment' → logprob: -10.67635440826416
    8. 'Se' → logprob: -10.92635440826416
    9. 'SEG' → logprob: -11.42635440826416
    10. '_segment' → logprob: -11.55135440826416

Token 210: 'Tree' (ID: 8062)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.07522870600223541
    2. 'ment' → logprob: -3.325228691101074
    3. 'Tree' → logprob: -3.325228691101074
    4. 'ement' → logprob: -7.825228691101074
    5. 'mented' → logprob: -9.450228691101074
    6. 'mentation' → logprob: -10.700228691101074
    7. ' tree' → logprob: -10.825228691101074
    8. '   ' → logprob: -12.575228691101074
    9. 'Ment' → logprob: -12.575228691101074
    10. 'men' → logprob: -12.825228691101074

Token 211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01815919391810894
    2. ':
' → logprob: -4.01815938949585
    3. ' :' → logprob: -12.143158912658691
    4. '(object' → logprob: -13.143158912658691
    5. ' :
' → logprob: -14.268158912658691
    6. ':
' → logprob: -14.768158912658691
    7. ':

' → logprob: -14.893158912658691
    8. ':def' → logprob: -15.143158912658691
    9. '):' → logprob: -16.018159866333008
    10. '):
' → logprob: -16.393159866333008

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00028815300902351737
    2. 'def' → logprob: -8.875288009643555
    3. ' def' → logprob: -8.875288009643555
    4. '	def' → logprob: -11.875288009643555
    5. ' ' → logprob: -14.375288009643555
    6. '<|end|>' → logprob: -14.500288009643555
    7. '
' → logprob: -16.375288009643555
    8. '    
' → logprob: -16.375288009643555
    9. '   ' → logprob: -16.875288009643555
    10. '<|end|>' → logprob: -17.375288009643555

Token 213: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3965425193309784
    2. ' def' → logprob: -1.1465425491333008
    3. '   ' → logprob: -4.646542549133301
    4. '	def' → logprob: -11.1465425491333
    5. ' ' → logprob: -11.6465425491333
    6. '__' → logprob: -12.1465425491333
    7. '  ' → logprob: -14.0215425491333
    8. ' __' → logprob: -14.8965425491333
    9. '
' → logprob: -15.0215425491333
    10. '```' → logprob: -16.646541595458984

Token 214: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.043215103447437286
    2. '__' → logprob: -3.168215036392212
    3. '_init' → logprob: -8.918214797973633
    4. ' init' → logprob: -10.293214797973633
    5. 'init' → logprob: -10.793214797973633
    6. ' def' → logprob: -11.543214797973633
    7. ' ' → logprob: -11.793214797973633
    8. ' ' → logprob: -11.793214797973633
    9. ' _' → logprob: -13.543214797973633
    10. '```' → logprob: -15.043214797973633

Token 215: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.021690065041184425
    2. 'nit' → logprob: -4.2716898918151855
    3. 'it' → logprob: -4.8966898918151855
    4. 'int' → logprob: -10.896690368652344
    5. 't' → logprob: -13.146690368652344
    6. '_init' → logprob: -13.771690368652344
    7. '   ' → logprob: -13.896690368652344
    8. 'n' → logprob: -14.021690368652344
    9. 'def' → logprob: -14.146690368652344
    10. 'new' → logprob: -14.396690368652344

Token 216: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005388548015616834
    2. '__' → logprob: -7.6255388259887695
    3. '(self' → logprob: -10.00053882598877
    4. '_(' → logprob: -12.87553882598877
    5. '__((' → logprob: -13.37553882598877
    6. '__(
' → logprob: -14.25053882598877
    7. '(' → logprob: -15.25053882598877
    8. '___' → logprob: -15.25053882598877
    9. '__,' → logprob: -16.125539779663086
    10. 'self' → logprob: -16.500539779663086

Token 217: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.967624019831419e-05
    2. ' self' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.000060081481934
    4. '
' → logprob: -15.500060081481934
    5. ',' → logprob: -15.625060081481934
    6. ' ' → logprob: -17.375059127807617
    7. ',self' → logprob: -17.500059127807617
    8. '(self' → logprob: -17.875059127807617
    9. '       ' → logprob: -17.875059127807617
    10. 'n' → logprob: -19.000059127807617

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001097417771234177
    2. 'self' → logprob: -9.375109672546387
    3. ' ,' → logprob: -11.125109672546387
    4. ',self' → logprob: -11.625109672546387
    5. '(self' → logprob: -14.375109672546387
    6. ' ' → logprob: -15.750109672546387
    7. '   ' → logprob: -15.750109672546387
    8. ' self' → logprob: -16.750110626220703
    9. ',n' → logprob: -16.750110626220703
    10. ',
' → logprob: -17.000110626220703

Token 219: ' init' (ID: 6327)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09052971750497818
    2. 'n' → logprob: -2.590529680252075
    3. 'init' → logprob: -4.590529918670654
    4. 'arr' → logprob: -7.840529918670654
    5. 'size' → logprob: -7.965529918670654
    6. 'N' → logprob: -8.340529441833496
    7. ' self' → logprob: -9.090529441833496
    8. 'data' → logprob: -9.340529441833496
    9. ' n' → logprob: -9.465529441833496
    10. '   ' → logprob: -9.840529441833496

Token 220: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.28036847710609436
    2. 'val' → logprob: -1.655368447303772
    3. '_arr' → logprob: -3.5303685665130615
    4. 'arr' → logprob: -4.530368328094482
    5. '   ' → logprob: -5.530368328094482
    6. 'array' → logprob: -5.780368328094482
    7. ',' → logprob: -6.530368328094482
    8. 'ival' → logprob: -6.655368328094482
    9. 'Val' → logprob: -7.030368328094482
    10. '_array' → logprob: -7.405368328094482

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012890775687992573
    2. '):' → logprob: -5.262890815734863
    3. 's' → logprob: -6.137890815734863
    4. 'ue' → logprob: -6.387890815734863
    5. '):
' → logprob: -6.512890815734863
    6. 'e' → logprob: -6.512890815734863
    7. ':' → logprob: -7.762890815734863
    8. 'u' → logprob: -8.762890815734863
    9. ' ,' → logprob: -9.387890815734863
    10. 'ues' → logprob: -10.762890815734863

Token 222: ' seg' (ID: 3055)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7120928168296814
    2. 'seg' → logprob: -1.2120928764343262
    3. 'n' → logprob: -2.587092876434326
    4. 'num' → logprob: -3.462092876434326
    5. '   ' → logprob: -3.587092876434326
    6. 'ide' → logprob: -3.837092876434326
    7. ' seg' → logprob: -4.087092876434326
    8. ' e' → logprob: -4.587092876434326
    9. ' ' → logprob: -4.962092876434326
    10. 'func' → logprob: -5.212092876434326

Token 223: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.0396093875169754
    2. '_size' → logprob: -3.789609432220459
    3. 'size' → logprob: -4.414609432220459
    4. 'tree' → logprob: -6.039609432220459
    5. '_func' → logprob: -6.789609432220459
    6. 'len' → logprob: -8.9146089553833
    7. '_len' → logprob: -8.9146089553833
    8. 'f' → logprob: -9.5396089553833
    9. 'num' → logprob: -9.5396089553833
    10. 'ment' → logprob: -9.6646089553833

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043237823992967606
    2. '):' → logprob: -3.1682379245758057
    3. '=' → logprob: -9.418237686157227
    4. '):
' → logprob: -9.793237686157227
    5. ' ,' → logprob: -9.918237686157227
    6. ' ):' → logprob: -10.668237686157227
    7. '=None' → logprob: -11.168237686157227
    8. ')' → logprob: -11.793237686157227
    9. '   ' → logprob: -13.543237686157227
    10. ':' → logprob: -13.543237686157227

Token 225: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.00023882099776528776
    2. 'e' → logprob: -9.375238418579102
    3. ' ide' → logprob: -9.875238418579102
    4. '   ' → logprob: -10.125238418579102
    5. ' ' → logprob: -11.250238418579102
    6. 'init' → logprob: -11.250238418579102
    7. '
' → logprob: -11.500238418579102
    8. 'id' → logprob: -12.375238418579102
    9. 'identity' → logprob: -12.500238418579102
    10. '  ' → logprob: -12.750238418579102

Token 226: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -7.636475493200123e-05
    2. 'ele' → logprob: -9.875076293945312
    3. '_e' → logprob: -10.750076293945312
    4. 'Ele' → logprob: -13.750076293945312
    5. '_element' → logprob: -14.375076293945312
    6. '_elem' → logprob: -14.625076293945312
    7. '_el' → logprob: -14.750076293945312
    8. '-ele' → logprob: -14.875076293945312
    9. '_' → logprob: -15.375076293945312
    10. '(ele' → logprob: -17.000076293945312

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037581557407975197
    2. '):
' → logprob: -5.628757953643799
    3. ' ):' → logprob: -8.878758430480957
    4. ',' → logprob: -11.878758430480957
    5. '):
' → logprob: -12.378758430480957
    6. ')' → logprob: -12.878758430480957
    7. ':' → logprob: -13.378758430480957
    8. '=' → logprob: -13.628758430480957
    9. '   ' → logprob: -14.003758430480957
    10. ' ' → logprob: -14.628758430480957

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013534489553421736
    2. 'self' → logprob: -6.7513532638549805
    3. 'n' → logprob: -8.87635326385498
    4. '   ' → logprob: -10.75135326385498
    5. ' self' → logprob: -12.00135326385498
    6. '	   ' → logprob: -12.00135326385498
    7. '	self' → logprob: -12.25135326385498
    8. '	' → logprob: -12.50135326385498
    9. '     ' → logprob: -14.50135326385498
    10. '      ' → logprob: -15.12635326385498

Token 229: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04905295372009277
    2. '       ' → logprob: -3.5490529537200928
    3. 'n' (adapté à ' n') → logprob: -4.549053192138672
    4. ' self' → logprob: -4.799053192138672
    5. ' n' → logprob: -8.174053192138672
    6. '   ' → logprob: -11.049053192138672
    7. 'import' → logprob: -13.424053192138672
    8. 'size' → logprob: -13.674053192138672
    9. '	self' → logprob: -14.049053192138672
    10. ' ' → logprob: -14.174053192138672

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17999278008937836
    2. '=' → logprob: -1.8049927949905396
    3. '=len' → logprob: -8.92999267578125
    4. '=int' → logprob: -10.42999267578125
    5. '   ' → logprob: -10.80499267578125
    6. ' ' → logprob: -10.80499267578125
    7. '_' → logprob: -10.80499267578125
    8. '_=' → logprob: -11.30499267578125
    9. '  ' → logprob: -12.67999267578125
    10. '＝' → logprob: -13.05499267578125

Token 231: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0519641637802124
    2. ' len' → logprob: -3.301964282989502
    3. '1' → logprob: -4.301964282989502
    4. ' ' → logprob: -8.176963806152344
    5. '(len' → logprob: -13.176963806152344
    6. '	len' → logprob: -14.176963806152344
    7. '   ' → logprob: -14.801963806152344
    8. '  ' → logprob: -16.051963806152344
    9. '0' → logprob: -16.176963806152344
    10. '2' → logprob: -17.051963806152344

Token 232: '(init' (ID: 76539)
  Prédit: '(init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(init' → logprob: -3.173704271830502e-06
    2. 'init' → logprob: -12.75000286102295
    3. '(initial' → logprob: -16.500003814697266
    4. '(' → logprob: -16.875003814697266
    5. ':init' → logprob: -17.250003814697266
    6. ')init' → logprob: -17.875003814697266
    7. ' init' → logprob: -20.000003814697266
    8. '	init' → logprob: -20.250003814697266
    9. '.init' → logprob: -20.250003814697266
    10. '_init' → logprob: -20.875003814697266

Token 233: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.128163257315464e-07
    2. 'val' → logprob: -15.5
    3. '_' → logprob: -17.125
    4. ')' → logprob: -18.875
    5. ' _' → logprob: -20.125
    6. '_VAL' → logprob: -20.25
    7. '[val' → logprob: -20.375
    8. ' val' → logprob: -20.625
    9. '_init' → logprob: -21.5
    10. 'Val' → logprob: -21.625

Token 234: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05713243409991264
    2. ')' → logprob: -2.9321324825286865
    3. '       ' → logprob: -6.182132244110107
    4. ')
' → logprob: -9.807132720947266
    5. ' )
' → logprob: -10.182132720947266
    6. ')n' → logprob: -10.182132720947266
    7. '   ' → logprob: -10.557132720947266
    8. '           ' → logprob: -12.432132720947266
    9. ' )' → logprob: -12.932132720947266
    10. '
' → logprob: -13.182132720947266

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16102135181427002
    2. 'self' → logprob: -1.91102135181427
    3. ' self' → logprob: -7.9110212326049805
    4. 'n' → logprob: -8.91102123260498
    5. 'm' → logprob: -9.28602123260498
    6. '   ' → logprob: -9.41102123260498
    7. 'import' → logprob: -10.16102123260498
    8. 'while' → logprob: -10.41102123260498
    9. 'size' → logprob: -10.41102123260498
    10. 's' → logprob: -12.28602123260498

Token 236: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00034380643046461046
    2. '   ' → logprob: -8.375344276428223
    3. ' self' → logprob: -9.500344276428223
    4. 'size' → logprob: -11.375344276428223
    5. '	self' → logprob: -11.750344276428223
    6. ' ' → logprob: -11.875344276428223
    7. '       ' → logprob: -12.500344276428223
    8. 'sz' → logprob: -12.750344276428223
    9. '    
' → logprob: -13.750344276428223
    10. '_self' → logprob: -14.250344276428223

Token 237: '.seg' (ID: 178516)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.02519228495657444
    2. '.size' → logprob: -4.4001922607421875
    3. '.num' → logprob: -4.6501922607421875
    4. '.N' → logprob: -6.7751922607421875
    5. '.seg' → logprob: -7.1501922607421875
    6. '   ' → logprob: -8.150192260742188
    7. '._' → logprob: -8.650192260742188
    8. '.ide' → logprob: -9.025192260742188
    9. '.sz' → logprob: -9.150192260742188
    10. '.length' → logprob: -9.525192260742188

Token 238: 'func' (ID: 5652)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.8824726343154907
    2. 'num' → logprob: -1.7574726343154907
    3. 'func' → logprob: -2.007472515106201
    4. '_num' → logprob: -2.257472515106201
    5. '_size' → logprob: -3.007472515106201
    6. 'size' → logprob: -3.257472515106201
    7. 'tree' → logprob: -3.507472515106201
    8. '=n' → logprob: -4.007472515106201
    9. '=' → logprob: -4.257472515106201
    10. 'n' → logprob: -4.882472515106201

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25251099467277527
    2. ' =' → logprob: -1.5025110244750977
    3. '   ' → logprob: -8.877511024475098
    4. ',' → logprob: -9.127511024475098
    5. ' ' → logprob: -9.502511024475098
    6. 'import' → logprob: -9.627511024475098
    7. '=n' → logprob: -10.002511024475098
    8. '=
' → logprob: -10.377511024475098
    9. '    ' → logprob: -10.752511024475098
    10. '  ' → logprob: -11.252511024475098

Token 240: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -2.236549335066229e-05
    2. ' seg' → logprob: -10.750021934509277
    3. '(seg' → logprob: -14.625021934509277
    4. 'se' → logprob: -16.000022888183594
    5. 'segment' → logprob: -16.375022888183594
    6. '   ' → logprob: -17.125022888183594
    7. 'segu' → logprob: -17.500022888183594
    8. ' ' → logprob: -17.875022888183594
    9. '  ' → logprob: -18.000022888183594
    10. 'Seg' → logprob: -18.500022888183594

Token 241: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -2.1008713702030946e-06
    2. '_func' → logprob: -14.125001907348633
    3. 'fun' → logprob: -14.125001907348633
    4. 'f' → logprob: -15.500001907348633
    5. '   ' → logprob: -16.000001907348633
    6. ' func' → logprob: -16.250001907348633
    7. 'def' → logprob: -17.125001907348633
    8. 'function' → logprob: -17.125001907348633
    9. 'self' → logprob: -17.500001907348633
    10. 'unction' → logprob: -17.625001907348633

Token 242: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008778009563684464
    2. 'self' → logprob: -4.758778095245361
    3. ' self' → logprob: -9.633777618408203
    4. '   ' → logprob: -10.508777618408203
    5. 'n' → logprob: -10.633777618408203
    6. '<|end|>' → logprob: -10.758777618408203
    7. ' ' → logprob: -11.508777618408203
    8. ',' → logprob: -12.008777618408203
    9. '
' → logprob: -12.633777618408203
    10. 'import' → logprob: -13.883777618408203

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05517766624689102
    2. 'self' → logprob: -2.930177688598633
    3. '   ' → logprob: -9.430177688598633
    4. ' self' → logprob: -9.430177688598633
    5. '	' → logprob: -9.680177688598633
    6. '	self' → logprob: -10.430177688598633
    7. 'n' → logprob: -11.305177688598633
    8. 's' → logprob: -11.680177688598633
    9. 'while' → logprob: -11.805177688598633
    10. 'size' → logprob: -13.055177688598633

Token 244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0040915776044130325
    2. '   ' → logprob: -5.629091739654541
    3. ' self' → logprob: -8.254091262817383
    4. ' ' → logprob: -9.129091262817383
    5. '       ' → logprob: -9.504091262817383
    6. 'size' → logprob: -10.379091262817383
    7. '	self' → logprob: -12.254091262817383
    8. 'while' → logprob: -12.254091262817383
    9. '  ' → logprob: -13.379091262817383
    10. '        
' → logprob: -13.879091262817383

Token 245: '.ide' (ID: 136377)
  Prédit: '.ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ide' → logprob: -6.372916686814278e-05
    2. '.n' → logprob: -10.1250638961792
    3. '.num' → logprob: -11.1250638961792
    4. '.id' → logprob: -12.6250638961792
    5. '.' → logprob: -13.0000638961792
    6. 'n' → logprob: -13.3750638961792
    7. '.size' → logprob: -14.6250638961792
    8. ' .' → logprob: -15.2500638961792
    9. 'ide' → logprob: -15.3750638961792
    10. '.len' → logprob: -15.5000638961792

Token 246: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -3.8889261304575484e-06
    2. 'ele' → logprob: -13.125003814697266
    3. '_e' → logprob: -13.250003814697266
    4. 'Ele' → logprob: -18.625003814697266
    5. '(ele' → logprob: -18.875003814697266
    6. '-ele' → logprob: -18.875003814697266
    7. '_ent' → logprob: -18.875003814697266
    8. '_' → logprob: -19.000003814697266
    9. '_elem' → logprob: -19.375003814697266
    10. ' _' → logprob: -19.625003814697266

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141547918319702
    2. '=' → logprob: -1.7014155387878418
    3. ' ' → logprob: -13.076415061950684
    4. '  ' → logprob: -15.951415061950684
    5. '   ' → logprob: -17.326416015625
    6. '＝' → logprob: -17.701416015625
    7. '=int' → logprob: -18.701416015625
    8. '    ' → logprob: -18.701416015625
    9. ' =
' → logprob: -18.951416015625
    10. '=
' → logprob: -19.576416015625

Token 248: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.007613844238221645
    2. ' ide' → logprob: -4.882613658905029
    3. 'ideo' → logprob: -12.507614135742188
    4. 'ideal' → logprob: -14.132614135742188
    5. ' ' → logprob: -14.382614135742188
    6. '   ' → logprob: -14.757614135742188
    7. 'ides' → logprob: -15.257614135742188
    8. 'iden' → logprob: -15.257614135742188
    9. 'idé' → logprob: -15.257614135742188
    10. '.ide' → logprob: -15.507614135742188

Token 249: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -2.570319702499546e-05
    2. 'ele' → logprob: -10.625025749206543
    3. '_e' → logprob: -13.625025749206543
    4. 'Ele' → logprob: -16.875024795532227
    5. '-ele' → logprob: -17.750024795532227
    6. '_le' → logprob: -17.875024795532227
    7. '
' → logprob: -18.750024795532227
    8. 'le' → logprob: -19.000024795532227
    9. '(ele' → logprob: -19.625024795532227
    10. ' ' → logprob: -20.125024795532227

Token 250: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005915285088121891
    2. 'self' → logprob: -5.25591516494751
    3. 'n' → logprob: -7.63091516494751
    4. '   ' → logprob: -9.380915641784668
    5. ' self' → logprob: -10.255915641784668
    6. '        
' → logprob: -11.130915641784668
    7. 'while' → logprob: -11.255915641784668
    8. '
' → logprob: -11.505915641784668
    9. '	' → logprob: -11.755915641784668
    10. '	self' → logprob: -11.880915641784668

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031478889286518097
    2. 'self' → logprob: -5.878148078918457
    3. 'n' → logprob: -8.628148078918457
    4. '   ' → logprob: -9.378148078918457
    5. ' self' → logprob: -10.878148078918457
    6. 'while' → logprob: -10.878148078918457
    7. '
' → logprob: -11.628148078918457
    8. '	' → logprob: -11.753148078918457
    9. '	self' → logprob: -11.753148078918457
    10. '        
' → logprob: -12.128148078918457

Token 252: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008934747893363237
    2. ' self' → logprob: -7.625893592834473
    3. '   ' → logprob: -8.375893592834473
    4. 'size' → logprob: -9.250893592834473
    5. '	self' → logprob: -10.125893592834473
    6. 'sz' → logprob: -11.500893592834473
    7. '    
' → logprob: -11.750893592834473
    8. ' ' → logprob: -12.000893592834473
    9. '       ' → logprob: -12.625893592834473
    10. '        
' → logprob: -13.000893592834473

Token 253: ' arr' (ID: 1724)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008327359100803733
    2. 'size' → logprob: -7.375832557678223
    3. ' self' → logprob: -9.250832557678223
    4. 'sz' → logprob: -10.125832557678223
    5. '   ' → logprob: -10.500832557678223
    6. '_size' → logprob: -11.750832557678223
    7. ' ' → logprob: -11.750832557678223
    8. 'n' → logprob: -12.250832557678223
    9. '  
' → logprob: -12.625832557678223
    10. '
' → logprob: -12.750832557678223

Token 254: 'ond' (ID: 1415)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01206678245216608
    2. '=' → logprob: -5.262066841125488
    3. 'size' → logprob: -5.762066841125488
    4. '_size' → logprob: -6.387066841125488
    5. 'ay' → logprob: -6.887066841125488
    6. '=[' → logprob: -8.137066841125488
    7. '   ' → logprob: -8.387066841125488
    8. '_len' → logprob: -9.137066841125488
    9. '=[]
' → logprob: -9.637066841125488
    10. 'a' → logprob: -10.137066841125488

Token 255: 'it' (ID: 278)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.04080076515674591
    2. 'up' → logprob: -3.7908008098602295
    3. 'e' → logprob: -4.91580057144165
    4. 'ing' → logprob: -5.16580057144165
    5. 'er' → logprob: -6.41580057144165
    6. '_up' → logprob: -6.54080057144165
    7. ' up' → logprob: -7.41580057144165
    8. 'ir' → logprob: -8.915801048278809
    9. 'Up' → logprob: -9.040801048278809
    10. 'é' → logprob: -9.665801048278809

Token 256: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4921341836452484
    2. ' n' → logprob: -2.1171340942382812
    3. '       ' → logprob: -2.2421340942382812
    4. '_n' → logprob: -3.1171340942382812
    5. '   ' → logprob: -3.2421340942382812
    6. 'ed' → logprob: -3.2421340942382812
    7. 'import' → logprob: -4.367134094238281
    8. 'self' → logprob: -5.117134094238281
    9. 'up' → logprob: -5.242134094238281
    10. ' up' → logprob: -5.742134094238281

Token 257: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005953687243163586
    2. ' ' → logprob: -5.130953788757324
    3. '   ' → logprob: -10.755953788757324
    4. '2' → logprob: -13.505953788757324
    5. 'n' → logprob: -14.005953788757324
    6. '  ' → logprob: -14.255953788757324
    7. '32' → logprob: -15.630953788757324
    8. 'the' → logprob: -16.005952835083008
    9. '
' → logprob: -16.130952835083008
    10. 'a' → logprob: -16.755952835083008

Token 258: ' puissance' (ID: 63494)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37204793095588684
    2. '2' → logprob: -2.1220479011535645
    3. ' ' → logprob: -2.2470479011535645
    4. '   ' → logprob: -3.1220479011535645
    5. 'pu' → logprob: -3.7470479011535645
    6. ' puissance' → logprob: -4.4970479011535645
    7. 'n' → logprob: -6.2470479011535645
    8. '  ' → logprob: -6.2470479011535645
    9. ' puiss' → logprob: -7.3720479011535645
    10. 'pow' → logprob: -7.7470479011535645

Token 259: ' de' (ID: 334)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5088819265365601
    2. ' de' → logprob: -1.13388192653656
    3. '   ' → logprob: -3.3838820457458496
    4. '       ' → logprob: -4.13388204574585
    5. ' of' → logprob: -4.75888204574585
    6. 'de' → logprob: -4.88388204574585
    7. 'of' → logprob: -5.25888204574585
    8. ' ' → logprob: -6.00888204574585
    9. '_of' → logprob: -7.50888204574585
    10. '  ' → logprob: -7.88388204574585

Token 260: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00312650203704834
    2. ' ' → logprob: -6.878126621246338
    3. 'de' → logprob: -7.128126621246338
    4. ' two' → logprob: -7.378126621246338
    5. 'two' → logprob: -7.753126621246338
    6. ' deux' → logprob: -8.37812614440918
    7. 'Deux' → logprob: -13.87812614440918
    8. '_two' → logprob: -14.12812614440918
    9. '   ' → logprob: -14.12812614440918
    10. 'Two' → logprob: -14.25312614440918

Token 261: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024473541416227818
    2. ' ' → logprob: -6.127447128295898
    3. 'de' → logprob: -8.752447128295898
    4. ' two' → logprob: -10.002447128295898
    5. 'two' → logprob: -10.377447128295898
    6. ' deux' → logprob: -10.877447128295898
    7. '1' → logprob: -12.752447128295898
    8. '   ' → logprob: -14.002447128295898
    9. '_two' → logprob: -14.377447128295898
    10. '```' → logprob: -14.377447128295898

Token 262: ' au' (ID: 2791)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04413678124547005
    2. 'n' → logprob: -3.7941367626190186
    3. 'while' → logprob: -4.919137001037598
    4. 'self' → logprob: -5.419137001037598
    5. 'm' → logprob: -5.919137001037598
    6. ' while' → logprob: -6.044137001037598
    7. '   ' → logprob: -7.044137001037598
    8. ' self' → logprob: -7.044137001037598
    9. ' n' → logprob: -7.044137001037598
    10. 't' → logprob: -8.169137001037598

Token 263: ' dessus' (ID: 67454)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2733791172504425
    2. 'su' → logprob: -2.52337908744812
    3. 'pp' → logprob: -3.27337908744812
    4. '   ' → logprob: -3.27337908744812
    5. 'près' → logprob: -3.77337908744812
    6. 'pu' → logprob: -4.273379325866699
    7. 'x' → logprob: -4.398379325866699
    8. 'sup' → logprob: -5.023379325866699
    9. 'pper' → logprob: -5.773379325866699
    10. '2' → logprob: -5.898379325866699

Token 264: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035637267865240574
    2. 'n' → logprob: -5.87856388092041
    3. '	' → logprob: -8.12856388092041
    4. 'import' → logprob: -9.12856388092041
    5. ',' → logprob: -9.50356388092041
    6. 'self' → logprob: -9.62856388092041
    7. '   ' → logprob: -9.62856388092041
    8. ' n' → logprob: -10.12856388092041
    9. 's' → logprob: -10.62856388092041
    10. '(n' → logprob: -11.12856388092041

Token 265: 'merci' (ID: 111357)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9782999157905579
    2. '       ' → logprob: -1.478299856185913
    3. '1' → logprob: -1.728299856185913
    4. 'self' → logprob: -1.978299856185913
    5. '   ' → logprob: -3.103299856185913
    6. 'm' → logprob: -4.603300094604492
    7. ' n' → logprob: -4.728300094604492
    8. ' self' → logprob: -5.603300094604492
    9. 'i' → logprob: -5.728300094604492
    10. 'while' → logprob: -6.478300094604492

Token 266: ' bit' (ID: 3546)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.184505581855774
    2. ' (' → logprob: -1.809505581855774
    3. ' for' → logprob: -2.3095054626464844
    4. ' n' → logprob: -2.3095054626464844
    5. '   ' → logprob: -2.6845054626464844
    6. ')' → logprob: -3.6845054626464844
    7. ',' → logprob: -3.8095054626464844
    8. ' math' → logprob: -3.8095054626464844
    9. '(' → logprob: -3.9345054626464844
    10. 'def' → logprob: -4.059505462646484

Token 267: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -3.547789674485102e-05
    2. '   ' → logprob: -11.750035285949707
    3. 'length' → logprob: -12.000035285949707
    4. 's' → logprob: -12.000035285949707
    5. '_' → logprob: -12.625035285949707
    6. 'wise' → logprob: -12.625035285949707
    7. '```' → logprob: -12.625035285949707
    8. 'shift' → logprob: -13.750035285949707
    9. '=' → logprob: -14.375035285949707
    10. '_count' → logprob: -14.750035285949707

Token 268: '!)
' (ID: 52210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37446966767311096
    2. ')
' → logprob: -1.8744696378707886
    3. '()' → logprob: -2.999469757080078
    4. 'n' → logprob: -3.999469757080078
    5. ' +' → logprob: -4.374469757080078
    6. '())' → logprob: -4.749469757080078
    7. '   ' → logprob: -4.874469757080078
    8. '(n' → logprob: -4.874469757080078
    9. '())
' → logprob: -4.999469757080078
    10. '+' → logprob: -5.124469757080078

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030830243602395058
    2. ' self' → logprob: -4.405830383300781
    3. 'self' → logprob: -4.530830383300781
    4. 'm' → logprob: -5.905830383300781
    5. 'n' → logprob: -6.155830383300781
    6. ' m' → logprob: -6.530830383300781
    7. ' n' → logprob: -7.780830383300781
    8. ' size' → logprob: -8.280830383300781
    9. 'size' → logprob: -8.780830383300781
    10. 's' → logprob: -9.530830383300781

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009791863150894642
    2. '       ' → logprob: -5.384791851043701
    3. 'size' → logprob: -5.884791851043701
    4. '   ' → logprob: -7.384791851043701
    5. ' self' → logprob: -7.384791851043701
    6. 'm' → logprob: -7.509791851043701
    7. 'if' → logprob: -7.884791851043701
    8. 'n' → logprob: -9.63479232788086
    9. 'sz' → logprob: -9.75979232788086
    10. 's' → logprob: -10.75979232788086

Token 271: '.num' (ID: 19403)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.8920007348060608
    2. '_size' → logprob: -1.517000675201416
    3. '_n' → logprob: -2.267000675201416
    4. '.num' → logprob: -2.392000675201416
    5. '_num' → logprob: -2.892000675201416
    6. 'size' → logprob: -3.267000675201416
    7. 'num' → logprob: -3.392000675201416
    8. '.N' → logprob: -4.392000675201416
    9. '.size' → logprob: -4.392000675201416
    10. 'n' → logprob: -4.767000675201416

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016334522515535355
    2. '=' → logprob: -4.141334533691406
    3. '   ' → logprob: -9.766334533691406
    4. ' =(' → logprob: -10.141334533691406
    5. '=n' → logprob: -10.141334533691406
    6. ' ' → logprob: -10.391334533691406
    7. '=size' → logprob: -10.891334533691406
    8. '=len' → logprob: -11.141334533691406
    9. '=int' → logprob: -11.266334533691406
    10. '  ' → logprob: -11.391334533691406

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015691416338086128
    2. ' ' → logprob: -6.5015692710876465
    3. '2' → logprob: -9.626568794250488
    4. '   ' → logprob: -15.126568794250488
    5. 'n' → logprob: -15.876568794250488
    6. '  ' → logprob: -16.251569747924805
    7. '(' → logprob: -16.626569747924805
    8. '```' → logprob: -17.001569747924805
    9. 'pow' → logprob: -17.251569747924805
    10. '１' → logprob: -17.501569747924805

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009130131802521646
    2. '2' → logprob: -7.000913143157959
    3. ' ' → logprob: -13.6259126663208
    4. '(' → logprob: -15.6259126663208
    5. 'n' → logprob: -16.625913619995117
    6. '   ' → logprob: -17.625913619995117
    7. 'pow' → logprob: -17.875913619995117
    8. '```' → logprob: -17.875913619995117
    9. '１' → logprob: -18.125913619995117
    10. '
' → logprob: -18.375913619995117

Token 275: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.02719840593636036
    2. '<<(' → logprob: -3.777198314666748
    3. ' <<' → logprob: -5.652198314666748
    4. '<' → logprob: -7.902198314666748
    5. ' <<=' → logprob: -10.277198791503906
    6. '<<<' → logprob: -11.027198791503906
    7. '
' → logprob: -12.027198791503906
    8. '1' → logprob: -12.652198791503906
    9. '   ' → logprob: -13.027198791503906
    10. '<<<<' → logprob: -14.152198791503906

Token 276: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05313562974333763
    2. 'n' → logprob: -3.678135633468628
    3. ' (' → logprob: -3.678135633468628
    4. ' n' → logprob: -6.928135395050049
    5. '(' → logprob: -8.428135871887207
    6. '((' → logprob: -12.178135871887207
    7. ' ' → logprob: -13.678135871887207
    8. '	n' → logprob: -13.928135871887207
    9. '(
' → logprob: -14.303135871887207
    10. '
' → logprob: -14.428135871887207

Token 277: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00257328269071877
    2. ' n' → logprob: -6.002573490142822
    3. '(n' → logprob: -9.252573013305664
    4. ' (' → logprob: -13.502573013305664
    5. '	n' → logprob: -15.002573013305664
    6. 'len' → logprob: -16.877573013305664
    7. ' ' → logprob: -17.752573013305664
    8. '
' → logprob: -18.002573013305664
    9. '_n' → logprob: -18.627573013305664
    10. ')n' → logprob: -19.002573013305664

Token 278: ' -' (ID: 533)
  Prédit: '.bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.16473287343978882
    2. '-' → logprob: -1.9147329330444336
    3. '.' → logprob: -6.289732933044434
    4. ').' → logprob: -6.664732933044434
    5. ' -' → logprob: -6.789732933044434
    6. '.n' → logprob: -9.664732933044434
    7. ' .' → logprob: -9.914732933044434
    8. ' ' → logprob: -10.664732933044434
    9. '   ' → logprob: -10.664732933044434
    10. '-.' → logprob: -11.289732933044434

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.250075340270996
    4. '
' → logprob: -16.625076293945312
    5. '  ' → logprob: -17.000076293945312
    6. '-' → logprob: -17.750076293945312
    7. '    ' → logprob: -18.000076293945312
    8. '       ' → logprob: -18.250076293945312
    9. 'import' → logprob: -18.312576293945312
    10. '１' → logprob: -18.625076293945312

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '
' → logprob: -14.500003814697266
    4. 'import' → logprob: -15.750003814697266
    5. '

' → logprob: -16.625003814697266
    6. '   ' → logprob: -16.875003814697266
    7. 'from' → logprob: -17.875003814697266
    8. '  ' → logprob: -18.000003814697266
    9. '    ' → logprob: -18.000003814697266
    10. '
' → logprob: -18.312503814697266

Token 281: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00018029935017693788
    2. '.bit' → logprob: -9.3751802444458
    3. ' ).' → logprob: -9.7501802444458
    4. ')' → logprob: -10.5001802444458
    5. '.' → logprob: -12.1251802444458
    6. ' .' → logprob: -13.8751802444458
    7. '].' → logprob: -14.0001802444458
    8. '}.' → logprob: -14.3751802444458
    9. ' ' → logprob: -14.8751802444458
    10. 'bit' → logprob: -15.0001802444458

Token 282: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.0206720617134124e-05
    2. '.bit' → logprob: -11.75001049041748
    3. 'b' → logprob: -13.62501049041748
    4. 'bi' → logprob: -15.00001049041748
    5. ' bit' → logprob: -15.00001049041748
    6. ' ' → logprob: -16.000009536743164
    7. '```' → logprob: -16.375009536743164
    8. 'bits' → logprob: -16.375009536743164
    9. '_bit' → logprob: -17.000009536743164
    10. '.' → logprob: -17.250009536743164

Token 283: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.8193366486229934e-05
    2. 'length' → logprob: -11.000018119812012
    3. '_' → logprob: -13.750018119812012
    4. '_le' → logprob: -15.625018119812012
    5. '_l' → logprob: -15.875018119812012
    6. '_LENGTH' → logprob: -17.500019073486328
    7. 'ength' → logprob: -18.000019073486328
    8. '_width' → logprob: -18.125019073486328
    9. 'Length' → logprob: -18.250019073486328
    10. '```' → logprob: -18.625019073486328

Token 284: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004867738112807274
    2. 'self' → logprob: -5.6298675537109375
    3. '<|end|>' → logprob: -7.6298675537109375
    4. '
' → logprob: -8.004867553710938
    5. ' self' → logprob: -8.879867553710938
    6. '        
' → logprob: -9.254867553710938
    7. ',' → logprob: -9.504867553710938
    8. '   ' → logprob: -9.879867553710938
    9. ' ' → logprob: -10.754867553710938
    10. '  
' → logprob: -11.129867553710938

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08925296366214752
    2. 'self' → logprob: -2.4642529487609863
    3. ' self' → logprob: -8.464253425598145
    4. '	self' → logprob: -10.089253425598145
    5. '   ' → logprob: -10.214253425598145
    6. '	' → logprob: -11.339253425598145
    7. '	   ' → logprob: -12.714253425598145
    8. ' ' → logprob: -12.964253425598145
    9. '        
' → logprob: -13.839253425598145
    10. '
' → logprob: -13.964253425598145

Token 286: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02332758717238903
    2. '       ' → logprob: -3.773327589035034
    3. ' self' → logprob: -10.273327827453613
    4. '   ' → logprob: -10.523327827453613
    5. '
' → logprob: -11.398327827453613
    6. '        
' → logprob: -12.273327827453613
    7. '	self' → logprob: -12.523327827453613
    8. '(self' → logprob: -15.773327827453613
    9. 's' → logprob: -15.773327827453613
    10. '    
' → logprob: -15.773327827453613

Token 287: '.tree' (ID: 49211)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.7251369953155518
    2. '.tree' → logprob: -0.9751369953155518
    3. '.dat' → logprob: -2.7251369953155518
    4. '.seg' → logprob: -2.7251369953155518
    5. '.val' → logprob: -5.600136756896973
    6. '.' → logprob: -6.850136756896973
    7. '.value' → logprob: -7.350136756896973
    8. '.arr' → logprob: -7.350136756896973
    9. '.inf' → logprob: -7.600136756896973
    10. '.ide' → logprob: -8.350136756896973

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07911119610071182
    2. ' =' → logprob: -2.579111099243164
    3. '=[' → logprob: -8.579111099243164
    4. ' =[' → logprob: -10.329111099243164
    5. '[' → logprob: -15.454111099243164
    6. ' ' → logprob: -15.579111099243164
    7. '＝' → logprob: -15.954111099243164
    8. '   ' → logprob: -16.329111099243164
    9. '=array' → logprob: -17.454111099243164
    10. '=[]' → logprob: -17.579111099243164

Token 289: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004487208090722561
    2. '[self' → logprob: -6.129487037658691
    3. ' [' → logprob: -6.254487037658691
    4. '[id' → logprob: -8.754487037658691
    5. '[ind' → logprob: -9.629487037658691
    6. '[np' → logprob: -10.504487037658691
    7. '[index' → logprob: -10.879487037658691
    8. '[ip' → logprob: -11.254487037658691
    9. '[i' → logprob: -11.504487037658691
    10. '[array' → logprob: -11.879487037658691

Token 290: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.0003430912329349667
    2. 'self' → logprob: -8.000343322753906
    3. ' ide' → logprob: -12.125343322753906
    4. 'ideo' → logprob: -13.875343322753906
    5. 'iden' → logprob: -14.625343322753906
    6. '   ' → logprob: -15.000343322753906
    7. 'ideal' → logprob: -15.750343322753906
    8. '.ide' → logprob: -15.875343322753906
    9. 'ides' → logprob: -16.500343322753906
    10. 'idé' → logprob: -16.875343322753906

Token 291: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -1.1875571544806007e-05
    2. 'ele' → logprob: -11.375011444091797
    3. '_e' → logprob: -15.250011444091797
    4. 'Ele' → logprob: -17.000011444091797
    5. '-ele' → logprob: -17.125011444091797
    6. '(ele' → logprob: -18.250011444091797
    7. '_' → logprob: -18.625011444091797
    8. '_ent' → logprob: -19.875011444091797
    9. ' ele' → logprob: -20.000011444091797
    10. '_le' → logprob: -20.000011444091797

Token 292: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001114106344175525
    2. ']*' → logprob: -9.25011157989502
    3. ' ]' → logprob: -11.75011157989502
    4. ']*(' → logprob: -11.87511157989502
    5. ' for' → logprob: -14.87511157989502
    6. ')' → logprob: -17.250110626220703
    7. '   ' → logprob: -17.625110626220703
    8. '']' → logprob: -18.125110626220703
    9. '"]' → logprob: -18.250110626220703
    10. '()]' → logprob: -18.375110626220703

Token 293: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011352078057825565
    2. ' *' → logprob: -5.011352062225342
    3. '*(' → logprob: -5.386352062225342
    4. '*self' → logprob: -10.3863525390625
    5. '*[' → logprob: -11.5113525390625
    6. '*((' → logprob: -13.3863525390625
    7. '*n' → logprob: -13.6363525390625
    8. '*num' → logprob: -14.3863525390625
    9. ' ' → logprob: -14.6363525390625
    10. ' ' → logprob: -14.8863525390625

Token 294: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002488022670149803
    2. '(self' → logprob: -6.252488136291504
    3. ' (' → logprob: -7.502488136291504
    4. '((' → logprob: -12.377488136291504
    5. '2' → logprob: -12.877488136291504
    6. 'self' → logprob: -15.002488136291504
    7. '   ' → logprob: -15.127488136291504
    8. ' ' → logprob: -15.377488136291504
    9. '(n' → logprob: -17.502487182617188
    10. '
' → logprob: -17.752487182617188

Token 295: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03941308334469795
    2. 'self' → logprob: -3.2894129753112793
    3. ' ' → logprob: -6.664412975311279
    4. ' self' → logprob: -9.289413452148438
    5. '
' → logprob: -13.664413452148438
    6. '   ' → logprob: -14.164413452148438
    7. '(' → logprob: -15.414413452148438
    8. '(self' → logprob: -15.414413452148438
    9. '  ' → logprob: -15.539413452148438
    10. '２' → logprob: -16.789413452148438

Token 296: ' *' (ID: 425)
  Prédit: '*self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*self' → logprob: -0.252851665019989
    2. ' *' → logprob: -1.5028517246246338
    3. '*' → logprob: -7.127851486206055
    4. 'self' → logprob: -9.127851486206055
    5. ' self' → logprob: -12.002851486206055
    6. '*num' → logprob: -13.127851486206055
    7. '[self' → logprob: -14.002851486206055
    8. ' ' → logprob: -14.252851486206055
    9. '+self' → logprob: -15.127851486206055
    10. ')' → logprob: -15.377851486206055

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '       ' → logprob: -18.000158309936523
    4. '(self' → logprob: -19.375158309936523
    5. '   ' → logprob: -19.625158309936523
    6. '	self' → logprob: -20.125158309936523
    7. '*self' → logprob: -20.250158309936523
    8. ' ' → logprob: -20.625158309936523
    9. '
' → logprob: -20.750158309936523
    10. '     ' → logprob: -20.875158309936523

Token 298: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.0003362966235727072
    2. 'num' → logprob: -8.000336647033691
    3. ' .' → logprob: -15.125336647033691
    4. '.' → logprob: -15.125336647033691
    5. '	num' → logprob: -16.250335693359375
    6. ' num' → logprob: -16.250335693359375
    7. '<num' → logprob: -17.250335693359375
    8. ',num' → logprob: -17.375335693359375
    9. '*num' → logprob: -17.625335693359375
    10. '$num' → logprob: -17.750335693359375

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002187256934121251
    2. ' )' → logprob: -6.127187252044678
    3. ')
' → logprob: -13.752187728881836
    4. '<|end|>' → logprob: -15.627187728881836
    5. '))' → logprob: -16.002187728881836
    6. '}' → logprob: -16.252187728881836
    7. ')}' → logprob: -16.377187728881836
    8. ' ' → logprob: -16.627187728881836
    9. '[])' → logprob: -16.752187728881836
    10. ' ' → logprob: -16.752187728881836

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03159918636083603
    2. ' for' → logprob: -4.031599044799805
    3. 'for' → logprob: -4.906599044799805
    4. '   ' → logprob: -5.656599044799805
    5. '<|end|>' → logprob: -6.656599044799805
    6. '	for' → logprob: -7.656599044799805
    7. '
' → logprob: -8.406599044799805
    8. '<|end|>' → logprob: -8.531599044799805
    9. '	   ' → logprob: -9.156599044799805
    10. '        
' → logprob: -9.906599044799805

Token 301: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09139405190944672
    2. '       ' → logprob: -2.5913939476013184
    3. ' for' → logprob: -4.466393947601318
    4. '	for' → logprob: -7.216393947601318
    5. '   ' → logprob: -8.841394424438477
    6. '
' → logprob: -10.216394424438477
    7. '	' → logprob: -12.216394424438477
    8. '        
' → logprob: -12.341394424438477
    9. ' ' → logprob: -12.716394424438477
    10. '	   ' → logprob: -12.841394424438477

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061967913061380386
    2. ' i' → logprob: -2.8119678497314453
    3. '	i' → logprob: -15.561967849731445
    4. 'idx' → logprob: -17.936967849731445
    5. '(i' → logprob: -18.186967849731445
    6. ' ' → logprob: -18.311967849731445
    7. '   ' → logprob: -18.811967849731445
    8. ',i' → logprob: -19.561967849731445
    9. '_i' → logprob: -19.686967849731445
    10. '0' → logprob: -19.936967849731445

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1761947125196457
    2. 'in' → logprob: -2.301194667816162
    3. ',' → logprob: -2.801194667816162
    4. ' ' → logprob: -8.17619514465332
    5. ' ,' → logprob: -8.30119514465332
    6. ',n' → logprob: -10.55119514465332
    7. '  ' → logprob: -10.55119514465332
    8. 'n' → logprob: -10.80119514465332
    9. ',in' → logprob: -10.92619514465332
    10. '<|end|>' → logprob: -11.17619514465332

Token 304: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020710527896881
    2. ' range' → logprob: -2.3502070903778076
    3. '(range' → logprob: -15.600207328796387
    4. '	range' → logprob: -15.975207328796387
    5. ' xrange' → logprob: -17.72520637512207
    6. '
' → logprob: -17.72520637512207
    7. 'rang' → logprob: -17.97520637512207
    8. 'r' → logprob: -18.22520637512207
    9. ' ' → logprob: -18.22520637512207
    10. '.range' → logprob: -18.35020637512207

Token 305: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003956416912842542
    2. '(len' → logprob: -8.750395774841309
    3. 'n' → logprob: -8.875395774841309
    4. ' n' → logprob: -9.875395774841309
    5. '	n' → logprob: -10.125395774841309
    6. '(' → logprob: -12.500395774841309
    7. ' (' → logprob: -14.375395774841309
    8. 'len' → logprob: -14.500395774841309
    9. '   ' → logprob: -15.250395774841309
    10. '	len' → logprob: -15.625395774841309

Token 306: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6931828856468201
    2. '):' → logprob: -0.6931828856468201
    3. '):
' → logprob: -10.943182945251465
    4. '       ' → logprob: -12.068182945251465
    5. '   ' → logprob: -12.568182945251465
    6. ' ):' → logprob: -12.818182945251465
    7. ':' → logprob: -12.943182945251465
    8. ' ):
' → logprob: -13.818182945251465
    9. '}:' → logprob: -14.693182945251465
    10. ']:' → logprob: -14.693182945251465

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005971215665340424
    2. ' self' → logprob: -5.380971431732178
    3. 'self' → logprob: -7.380971431732178
    4. '	       ' → logprob: -7.755971431732178
    5. '   ' → logprob: -9.00597095489502
    6. '       ' → logprob: -9.25597095489502
    7. '	self' → logprob: -10.63097095489502
    8. '	   ' → logprob: -11.63097095489502
    9. ' ' → logprob: -11.75597095489502
    10. '<|end|>' → logprob: -11.75597095489502

Token 308: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017007682472467422
    2. ' self' → logprob: -6.5017008781433105
    3. '           ' → logprob: -9.001700401306152
    4. '       ' → logprob: -9.876700401306152
    5. '   ' → logprob: -10.751700401306152
    6. '	self' → logprob: -13.251700401306152
    7. ' ' → logprob: -15.376700401306152
    8. '  ' → logprob: -15.626700401306152
    9. '               ' → logprob: -15.876700401306152
    10. '    ' → logprob: -17.00170135498047

Token 309: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0007451872224919498
    2. '.' → logprob: -7.5007452964782715
    3. 'tree' → logprob: -8.750744819641113
    4. ' .' → logprob: -10.750744819641113
    5. '	tree' → logprob: -11.625744819641113
    6. ' tree' → logprob: -14.625744819641113
    7. '_tree' → logprob: -15.000744819641113
    8. '(tree' → logprob: -15.000744819641113
    9. '-tree' → logprob: -15.000744819641113
    10. 'Tree' → logprob: -15.125744819641113

Token 310: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0008759701740927994
    2. '[i' → logprob: -7.125875949859619
    3. '[num' → logprob: -10.500876426696777
    4. 'self' → logprob: -10.500876426696777
    5. '[' → logprob: -11.500876426696777
    6. '[n' → logprob: -12.375876426696777
    7. ' self' → logprob: -14.000876426696777
    8. ' [' → logprob: -14.750876426696777
    9. '=self' → logprob: -15.625876426696777
    10. '	self' → logprob: -15.750876426696777

Token 311: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -1.4974866644479334e-05
    2. 'num' → logprob: -11.250015258789062
    3. '.' → logprob: -13.500015258789062
    4. '<num' → logprob: -15.375015258789062
    5. ':num' → logprob: -16.250015258789062
    6. '	num' → logprob: -16.250015258789062
    7. '=num' → logprob: -17.125015258789062
    8. ',num' → logprob: -17.500015258789062
    9. '[num' → logprob: -18.000015258789062
    10. ' .' → logprob: -18.875015258789062

Token 312: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6335102319717407
    2. '+' → logprob: -0.8835102319717407
    3. '+i' → logprob: -2.883510112762451
    4. '＋' → logprob: -12.88351058959961
    5. ' plus' → logprob: -13.75851058959961
    6. '+
' → logprob: -14.25851058959961
    7. '[i' → logprob: -14.38351058959961
    8. ' ' → logprob: -14.50851058959961
    9. ' i' → logprob: -15.25851058959961
    10. '+=' → logprob: -15.50851058959961

Token 313: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009117019944824278
    2. ' i' → logprob: -7.000911712646484
    3. ' ' → logprob: -16.500911712646484
    4. '   ' → logprob: -17.625911712646484
    5. '	i' → logprob: -18.125911712646484
    6. '  ' → logprob: -18.500911712646484
    7. '[i' → logprob: -18.750911712646484
    8. '(i' → logprob: -20.000911712646484
    9. '```' → logprob: -20.500911712646484
    10. '
' → logprob: -20.500911712646484

Token 314: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09344156831502914
    2. ' =' → logprob: -3.2184414863586426
    3. '=' → logprob: -3.3434414863586426
    4. ']=' → logprob: -4.593441486358643
    5. ' ]' → logprob: -5.593441486358643
    6. ')' → logprob: -10.4684419631958
    7. ')=' → logprob: -13.2184419631958
    8. '[' → logprob: -13.5934419631958
    9. ' ' → logprob: -14.4684419631958
    10. ' )' → logprob: -14.4684419631958

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692873179912567
    2. ' =' → logprob: -2.1269288063049316
    3. ']=' → logprob: -15.376928329467773
    4. '＝' → logprob: -16.001928329467773
    5. '=data' → logprob: -16.876928329467773
    6. '=
' → logprob: -16.876928329467773
    7. '=int' → logprob: -17.001928329467773
    8. '=i' → logprob: -17.376928329467773
    9. '=cut' → logprob: -17.501928329467773
    10. '[' → logprob: -17.626928329467773

Token 316: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.03364893049001694
    2. ' init' → logprob: -3.40864896774292
    3. '(init' → logprob: -13.533648490905762
    4. ':init' → logprob: -14.658648490905762
    5. '	init' → logprob: -15.158648490905762
    6. 'import' → logprob: -15.658648490905762
    7. '_init' → logprob: -15.783648490905762
    8. 'int' → logprob: -15.783648490905762
    9. ')init' → logprob: -15.908648490905762
    10. 'initial' → logprob: -15.908648490905762

Token 317: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.8624639324116288e-06
    2. 'val' → logprob: -13.250001907348633
    3. '_' → logprob: -17.625001907348633
    4. '[val' → logprob: -18.000001907348633
    5. 'Val' → logprob: -18.625001907348633
    6. '_VAL' → logprob: -19.000001907348633
    7. '	val' → logprob: -19.125001907348633
    8. ' val' → logprob: -19.375001907348633
    9. '_ele' → logprob: -19.625001907348633
    10. '_vals' → logprob: -19.625001907348633

Token 318: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.37500286102295
    3. 'i' → logprob: -14.50000286102295
    4. ' i' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.625001907348633
    6. ' [' → logprob: -16.625001907348633
    7. '[
' → logprob: -16.750001907348633
    8. '```' → logprob: -17.000001907348633
    9. '(i' → logprob: -17.625001907348633
    10. 's' → logprob: -17.875001907348633

Token 319: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028306961059570312
    2. ']' → logprob: -3.9033069610595703
    3. '<|end|>' → logprob: -5.15330696105957
    4. '       ' → logprob: -6.52830696105957
    5. ')
' → logprob: -8.65330696105957
    6. '<|end|>' → logprob: -8.77830696105957
    7. '])' → logprob: -9.65330696105957
    8. ' )' → logprob: -10.15330696105957
    9. ')]' → logprob: -10.90330696105957
    10. ']
' → logprob: -11.27830696105957

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013697614194825292
    2. ' for' → logprob: -6.876369953155518
    3. 'for' → logprob: -8.75136947631836
    4. '   ' → logprob: -9.12636947631836
    5. '```' → logprob: -10.62636947631836
    6. '<|end|>' → logprob: -11.50136947631836
    7. '           ' → logprob: -11.75136947631836
    8. '
' → logprob: -11.75136947631836
    9. '        
' → logprob: -12.25136947631836
    10. '	' → logprob: -12.87636947631836

Token 321: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.735039234161377
    2. 'self' → logprob: -0.860039234161377
    3. '       ' → logprob: -2.985039234161377
    4. ' for' → logprob: -3.860039234161377
    5. '   ' → logprob: -4.360039234161377
    6. ' self' → logprob: -4.360039234161377
    7. 'heap' → logprob: -9.235038757324219
    8. ' ' → logprob: -10.360038757324219
    9. '	self' → logprob: -10.985038757324219
    10. '
' → logprob: -11.235038757324219

Token 322: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31326979398727417
    2. ' i' → logprob: -1.313269853591919
    3. 'j' → logprob: -12.18826961517334
    4. '   ' → logprob: -13.81326961517334
    5. ' j' → logprob: -14.18826961517334
    6. '	i' → logprob: -14.68826961517334
    7. ' ' → logprob: -14.93826961517334
    8. 'k' → logprob: -15.06326961517334
    9. '  ' → logprob: -16.688270568847656
    10. '(i' → logprob: -16.938270568847656

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011059019714593887
    2. 'in' → logprob: -4.511058807373047
    3. 'range' → logprob: -12.011058807373047
    4. ' ' → logprob: -12.886058807373047
    5. ' range' → logprob: -13.761058807373047
    6. ' reversed' → logprob: -14.636058807373047
    7. ' i' → logprob: -14.761058807373047
    8. 'reverse' → logprob: -16.011058807373047
    9. '   ' → logprob: -16.261058807373047
    10. '  ' → logprob: -16.386058807373047

Token 324: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03873245045542717
    2. ' range' → logprob: -3.2887325286865234
    3. 're' → logprob: -7.538732528686523
    4. ' reversed' → logprob: -8.788732528686523
    5. '   ' → logprob: -12.788732528686523
    6. ' ' → logprob: -13.163732528686523
    7. '(range' → logprob: -13.913732528686523
    8. 'reverse' → logprob: -15.163732528686523
    9. '  ' → logprob: -16.038732528686523
    10. '
' → logprob: -16.413732528686523

Token 325: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0921942703134846e-05
    2. 'self' → logprob: -12.12501049041748
    3. ' (' → logprob: -12.75001049041748
    4. '((' → logprob: -13.75001049041748
    5. '(' → logprob: -13.87501049041748
    6. ' self' → logprob: -15.25001049041748
    7. '(s' → logprob: -16.000011444091797
    8. '(
' → logprob: -17.250011444091797
    9. '(this' → logprob: -17.625011444091797
    10. '   ' → logprob: -17.875011444091797

Token 326: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -8.590104698669165e-05
    2. 'num' → logprob: -9.375085830688477
    3. ' .' → logprob: -14.875085830688477
    4. '.' → logprob: -15.500085830688477
    5. ',num' → logprob: -16.250085830688477
    6. '	num' → logprob: -16.375085830688477
    7. '<num' → logprob: -16.375085830688477
    8. ' ' → logprob: -16.750085830688477
    9. '$num' → logprob: -17.375085830688477
    10. '
' → logprob: -17.625085830688477

Token 327: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014175265096127987
    2. '-' → logprob: -4.2641754150390625
    3. ' ' → logprob: -11.514175415039062
    4. '   ' → logprob: -14.389175415039062
    5. '
' → logprob: -14.889175415039062
    6. ')' → logprob: -15.139175415039062
    7. ' ' → logprob: -15.389175415039062
    8. '  ' → logprob: -15.514175415039062
    9. ',' → logprob: -16.639175415039062
    10. ')-' → logprob: -17.889175415039062

Token 328: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001238004770129919
    2. ' ' → logprob: -9.000123977661133
    3. '
' → logprob: -16.000123977661133
    4. '2' → logprob: -16.125123977661133
    5. '   ' → logprob: -16.500123977661133
    6. '```' → logprob: -17.250123977661133
    7. '１' → logprob: -17.437623977661133
    8. '  ' → logprob: -18.000123977661133
    9. '

' → logprob: -19.125123977661133
    10. '۱' → logprob: -19.312623977661133

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '
' → logprob: -15.37500286102295
    4. '2' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '１' → logprob: -18.125001907348633
    7. '

' → logprob: -18.812501907348633
    8. '```' → logprob: -19.062501907348633
    9. '
' → logprob: -19.562501907348633
    10. '  ' → logprob: -19.687501907348633

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013414350105449557
    2. ' ,' → logprob: -6.626341342926025
    3. ' -' → logprob: -12.126341819763184
    4. '0' → logprob: -12.376341819763184
    5. ',-' → logprob: -12.501341819763184
    6. '-' → logprob: -13.626341819763184
    7. '   ' → logprob: -14.751341819763184
    8. ' ,-' → logprob: -15.376341819763184
    9. '1' → logprob: -15.751341819763184
    10. ',
' → logprob: -16.001340866088867

Token 331: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4996030926704407
    2. '-' → logprob: -0.9996030926704407
    3. ' ' → logprob: -4.374603271484375
    4. ' -' → logprob: -4.374603271484375
    5. '   ' → logprob: -11.624603271484375
    6. '    ' → logprob: -12.749603271484375
    7. '	' → logprob: -13.374603271484375
    8. '  ' → logprob: -13.624603271484375
    9. '     ' → logprob: -13.874603271484375
    10. '
' → logprob: -14.749603271484375

Token 332: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005071279592812061
    2. '-' → logprob: -5.38007116317749
    3. ' ' → logprob: -7.75507116317749
    4. ' -' → logprob: -10.755071640014648
    5. '   ' → logprob: -15.005071640014648
    6. '
' → logprob: -15.005071640014648
    7. '  ' → logprob: -15.755071640014648
    8. '    ' → logprob: -16.75507164001465
    9. '1' → logprob: -16.88007164001465
    10. '     ' → logprob: -17.75507164001465

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008568006567656994
    2. '-' → logprob: -4.883567810058594
    3. ' ,' → logprob: -7.758567810058594
    4. ' -' → logprob: -7.883567810058594
    5. ',-' → logprob: -9.133567810058594
    6. '   ' → logprob: -10.008567810058594
    7. ' ,-' → logprob: -13.383567810058594
    8. ',
' → logprob: -14.383567810058594
    9. '    ' → logprob: -14.758567810058594
    10. '-,' → logprob: -14.758567810058594

Token 334: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0125344879925251
    2. ' -' → logprob: -4.3875346183776855
    3. '   ' → logprob: -10.887534141540527
    4. '  ' → logprob: -12.887534141540527
    5. ' ' → logprob: -13.387534141540527
    6. '	' → logprob: -14.637534141540527
    7. '```' → logprob: -15.012534141540527
    8. '       ' → logprob: -15.137534141540527
    9. '           ' → logprob: -15.387534141540527
    10. '    ' → logprob: -15.387534141540527

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.874882430769503e-05
    2. '-' → logprob: -9.625079154968262
    3. ' ' → logprob: -12.000079154968262
    4. ' -' → logprob: -12.125079154968262
    5. '   ' → logprob: -14.750079154968262
    6. 'i' → logprob: -15.875079154968262
    7. ')' → logprob: -16.000078201293945
    8. '):
' → logprob: -16.250078201293945
    9. '  ' → logprob: -16.875078201293945
    10. '
' → logprob: -17.125078201293945

Token 336: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.705420732498169
    2. '):' → logprob: -0.705420732498169
    3. '-' → logprob: -4.45542049407959
    4. ',' → logprob: -8.70542049407959
    5. '):
' → logprob: -9.45542049407959
    6. '   ' → logprob: -9.58042049407959
    7. ' ):' → logprob: -9.58042049407959
    8. ' -' → logprob: -9.70542049407959
    9. ')' → logprob: -9.70542049407959
    10. ',-' → logprob: -11.08042049407959

Token 337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005980697460472584
    2. '       ' → logprob: -8.500597953796387
    3. 'self' → logprob: -8.500597953796387
    4. ' self' → logprob: -8.625597953796387
    5. '	       ' → logprob: -12.125597953796387
    6. '   ' → logprob: -12.875597953796387
    7. '	   ' → logprob: -14.000597953796387
    8. '               ' → logprob: -14.125597953796387
    9. '		' → logprob: -14.250597953796387
    10. '	self' → logprob: -15.375597953796387

Token 338: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008226129226386547
    2. ' self' → logprob: -5.008225917816162
    3. '           ' → logprob: -6.508225917816162
    4. '               ' → logprob: -11.88322639465332
    5. ' ' → logprob: -12.25822639465332
    6. '   ' → logprob: -12.75822639465332
    7. '       ' → logprob: -13.00822639465332
    8. '	self' → logprob: -14.38322639465332
    9. '  ' → logprob: -14.50822639465332
    10. '          ' → logprob: -16.00822639465332

Token 339: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00015705463010817766
    2. '.' → logprob: -9.375157356262207
    3. ' .' → logprob: -10.125157356262207
    4. 'tree' → logprob: -10.500157356262207
    5. '].' → logprob: -13.250157356262207
    6. '	tree' → logprob: -13.625157356262207
    7. '.Tree' → logprob: -15.000157356262207
    8. ' tree' → logprob: -15.625157356262207
    9. 'self' → logprob: -15.750157356262207
    10. '.self' → logprob: -16.00015640258789

Token 340: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002991160727106035
    2. '[' → logprob: -8.125299453735352
    3. '[self' → logprob: -13.875299453735352
    4. ' [' → logprob: -14.250299453735352
    5. '[I' → logprob: -14.500299453735352
    6. ' =' → logprob: -15.500299453735352
    7. '=' → logprob: -15.875299453735352
    8. '```' → logprob: -16.00029945373535
    9. '   ' → logprob: -16.12529945373535
    10. '[j' → logprob: -16.50029945373535

Token 341: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025788708589971066
    2. ']=' → logprob: -6.2525787353515625
    3. ' ]' → logprob: -8.252578735351562
    4. '=' → logprob: -8.377578735351562
    5. ' =' → logprob: -8.752578735351562
    6. '[' → logprob: -14.252578735351562
    7. ')' → logprob: -15.377578735351562
    8. 'self' → logprob: -15.877578735351562
    9. ' ' → logprob: -16.877578735351562
    10. '   ' → logprob: -17.002578735351562

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759401917457581
    2. ' =' → logprob: -0.8259401917457581
    3. '=self' → logprob: -14.575940132141113
    4. '=s' → logprob: -16.95094108581543
    5. '＝' → logprob: -17.07594108581543
    6. '[' → logprob: -17.20094108581543
    7. ']' → logprob: -17.32594108581543
    8. ']=' → logprob: -17.70094108581543
    9. '=
' → logprob: -18.20094108581543
    10. '=sc' → logprob: -18.20094108581543

Token 343: ' self' (ID: 1051)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.1928505301475525
    2. 'self' → logprob: -1.8178505897521973
    3. ' seg' → logprob: -4.817850589752197
    4. ' self' → logprob: -5.317850589752197
    5. '           ' → logprob: -11.192850112915039
    6. 'se' → logprob: -12.192850112915039
    7. '(seg' → logprob: -12.442850112915039
    8. 'sel' → logprob: -13.192850112915039
    9. 'Seg' → logprob: -13.567850112915039
    10. '   ' → logprob: -13.817850112915039

Token 344: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -0.00901869311928749
    2. '.tree' → logprob: -5.134018898010254
    3. 'seg' → logprob: -6.259018898010254
    4. '.' → logprob: -7.759018898010254
    5. 'tree' → logprob: -8.259018898010254
    6. '.func' → logprob: -8.759018898010254
    7. '.segment' → logprob: -9.259018898010254
    8. '.se' → logprob: -9.259018898010254
    9. '(seg' → logprob: -11.009018898010254
    10. ' .' → logprob: -11.134018898010254

Token 345: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -4.320199877838604e-07
    2. ' func' → logprob: -16.75
    3. '   ' → logprob: -17.375
    4. 'self' → logprob: -17.375
    5. 'def' → logprob: -17.375
    6. 'tree' → logprob: -18.0
    7. 'f' → logprob: -18.125
    8. '(func' → logprob: -18.125
    9. '_func' → logprob: -18.375
    10. 'for' → logprob: -18.375

Token 346: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.44443862256594e-05
    2. '(' → logprob: -10.250064849853516
    3. 'self' → logprob: -10.625064849853516
    4. '(
' → logprob: -12.625064849853516
    5. ' (' → logprob: -13.625064849853516
    6. ' self' → logprob: -15.375064849853516
    7. ',self' → logprob: -17.500064849853516
    8. '   ' → logprob: -17.625064849853516
    9. '(this' → logprob: -17.625064849853516
    10. '[self' → logprob: -18.000064849853516

Token 347: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -1.6286106983898208e-05
    2. '.' → logprob: -11.250016212463379
    3. 'tree' → logprob: -13.250016212463379
    4. ' .' → logprob: -14.375016212463379
    5. '	tree' → logprob: -14.375016212463379
    6. '.table' → logprob: -16.375017166137695
    7. '.t' → logprob: -17.125017166137695
    8. '(tree' → logprob: -17.500017166137695
    9. ' tree' → logprob: -17.750017166137695
    10. ',' → logprob: -17.875017166137695

Token 348: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25192955136299133
    2. '[i' → logprob: -1.501929521560669
    3. '2' → logprob: -15.00192928314209
    4. 'i' → logprob: -15.75192928314209
    5. '[
' → logprob: -18.626930236816406
    6. ' ' → logprob: -18.751930236816406
    7. ' [' → logprob: -19.376930236816406
    8. '	' → logprob: -19.751930236816406
    9. '
' → logprob: -20.001930236816406
    10. '[left' → logprob: -20.001930236816406

Token 349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25354889035224915
    2. 'i' → logprob: -1.5035488605499268
    3. '[i' → logprob: -7.253549098968506
    4. ' i' → logprob: -7.628549098968506
    5. '[' → logprob: -8.253548622131348
    6. ' ' → logprob: -8.878548622131348
    7. '  ' → logprob: -11.628548622131348
    8. '(i' → logprob: -12.253548622131348
    9. '   ' → logprob: -12.378548622131348
    10. '	i' → logprob: -12.753548622131348

Token 350: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6944254636764526
    2. '*i' → logprob: -0.6944254636764526
    3. ' i' → logprob: -7.444425582885742
    4. '*' → logprob: -7.694425582885742
    5. ' *' → logprob: -8.444425582885742
    6. '
' → logprob: -11.569425582885742
    7. '[i' → logprob: -12.069425582885742
    8. ',i' → logprob: -12.819425582885742
    9. '	i' → logprob: -13.694425582885742
    10. ' ' → logprob: -14.069425582885742

Token 351: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.2617008400848135e-05
    2. ' i' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.125032424926758
    4. ' ' → logprob: -14.750032424926758
    5. '  ' → logprob: -16.250032424926758
    6. '	i' → logprob: -16.375032424926758
    7. '    ' → logprob: -17.625032424926758
    8. '     ' → logprob: -17.750032424926758
    9. '       ' → logprob: -17.875032424926758
    10. '```' → logprob: -18.250032424926758

Token 352: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00014299227041192353
    2. ']' → logprob: -9.125143051147461
    3. ' ],' → logprob: -11.250143051147461
    4. '],
' → logprob: -11.375143051147461
    5. ',' → logprob: -11.625143051147461
    6. '   ' → logprob: -15.750143051147461
    7. '],

' → logprob: -15.875143051147461
    8. ' ' → logprob: -16.87514305114746
    9. '1' → logprob: -17.25014305114746
    10. 'i' → logprob: -17.25014305114746

Token 353: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023249205201864243
    2. ' self' → logprob: -3.7732491493225098
    3. '           ' → logprob: -13.148249626159668
    4. '   ' → logprob: -13.898249626159668
    5. '       ' → logprob: -14.648249626159668
    6. '               ' → logprob: -15.273249626159668
    7. ' ' → logprob: -17.02324867248535
    8. '  ' → logprob: -17.02324867248535
    9. '	self' → logprob: -17.14824867248535
    10. '    ' → logprob: -17.27324867248535

Token 354: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.018191730603575706
    2. 'tree' → logprob: -4.018191814422607
    3. '.' → logprob: -10.76819133758545
    4. '	tree' → logprob: -11.89319133758545
    5. '[' → logprob: -12.26819133758545
    6. ' tree' → logprob: -12.39319133758545
    7. '2' → logprob: -12.51819133758545
    8. '
' → logprob: -15.01819133758545
    9. 'Tree' → logprob: -15.39319133758545
    10. '(tree' → logprob: -15.51819133758545

Token 355: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.0126840758603066e-05
    2. '[i' → logprob: -10.875040054321289
    3. '*' → logprob: -12.000040054321289
    4. '[
' → logprob: -12.000040054321289
    5. ' [' → logprob: -12.125040054321289
    6. '1' → logprob: -14.375040054321289
    7. '   ' → logprob: -14.625040054321289
    8. ']' → logprob: -14.875040054321289
    9. '```' → logprob: -14.875040054321289
    10. '2' → logprob: -14.875040054321289

Token 356: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.643152740551159e-05
    2. '(' → logprob: -10.875036239624023
    3. ' ' → logprob: -11.125036239624023
    4. '   ' → logprob: -13.000036239624023
    5. '  ' → logprob: -15.625036239624023
    6. 'i' → logprob: -16.000036239624023
    7. '       ' → logprob: -16.750036239624023
    8. '
' → logprob: -17.375036239624023
    9. '    ' → logprob: -17.500036239624023
    10. '           ' → logprob: -17.500036239624023

Token 357: ' *' (ID: 425)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01259594690054655
    2. ' i' → logprob: -4.387596130371094
    3. '   ' → logprob: -10.262596130371094
    4. '*i' → logprob: -10.387596130371094
    5. ' ' → logprob: -11.762596130371094
    6. '  ' → logprob: -12.012596130371094
    7. '    ' → logprob: -13.387596130371094
    8. '
' → logprob: -14.012596130371094
    9. '*' → logprob: -14.262596130371094
    10. '[i' → logprob: -14.387596130371094

Token 358: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003190193965565413
    2. '1' → logprob: -9.125319480895996
    3. ' i' → logprob: -9.375319480895996
    4. '2' → logprob: -9.625319480895996
    5. '(' → logprob: -10.750319480895996
    6. '+' → logprob: -11.250319480895996
    7. '(i' → logprob: -12.000319480895996
    8. '   ' → logprob: -12.250319480895996
    9. '+i' → logprob: -12.500319480895996
    10. '```' → logprob: -12.500319480895996

Token 359: ' +' (ID: 659)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09270094335079193
    2. '+' → logprob: -2.467700958251953
    3. ' +' → logprob: -6.342700958251953
    4. ']' → logprob: -6.717700958251953
    5. '])
' → logprob: -8.217700958251953
    6. '+i' → logprob: -8.592700958251953
    7. ')' → logprob: -8.592700958251953
    8. ' ])' → logprob: -10.092700958251953
    9. '],' → logprob: -10.717700958251953
    10. 'i' → logprob: -11.467700958251953

Token 360: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.1250057220459
    4. '0' → logprob: -21.3750057220459
    5. '2' → logprob: -21.3750057220459
    6. '```' → logprob: -21.5000057220459
    7. '  ' → logprob: -21.6250057220459
    8. '１' → logprob: -22.3750057220459
    9. '])' → logprob: -22.6250057220459
    10. '3' → logprob: -22.8750057220459

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '0' → logprob: -16.625011444091797
    4. '])' → logprob: -17.375011444091797
    5. '2' → logprob: -18.000011444091797
    6. 'i' → logprob: -18.125011444091797
    7. '   ' → logprob: -18.125011444091797
    8. '```' → logprob: -18.875011444091797
    9. ']' → logprob: -19.000011444091797
    10. ')' → logprob: -19.500011444091797

Token 362: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01835665851831436
    2. '])' → logprob: -4.018356800079346
    3. ')
' → logprob: -9.143356323242188
    4. ' )' → logprob: -10.143356323242188
    5. '))' → logprob: -10.143356323242188
    6. '})' → logprob: -12.018356323242188
    7. '`)' → logprob: -13.018356323242188
    8. ')])' → logprob: -13.018356323242188
    9. '>)' → logprob: -13.143356323242188
    10. '       ' → logprob: -13.143356323242188

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08975565433502197
    2. 'def' → logprob: -2.5897555351257324
    3. '<|end|>' → logprob: -5.339755535125732
    4. '
' → logprob: -5.589755535125732
    5. '    
' → logprob: -6.839755535125732
    6. ' def' → logprob: -7.214755535125732
    7. '```' → logprob: -8.46475601196289
    8. '	def' → logprob: -9.33975601196289
    9. '<|end|>' → logprob: -9.83975601196289
    10. ' ' → logprob: -10.33975601196289

Token 364: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06242932006716728
    2. '   ' → logprob: -2.812429428100586
    3. ' def' → logprob: -7.687429428100586
    4. '	def' → logprob: -13.687429428100586
    5. '```' → logprob: -13.687429428100586
    6. '    
' → logprob: -14.812429428100586
    7. ' ' → logprob: -15.687429428100586
    8. '
' → logprob: -15.687429428100586
    9. '<|end|>' → logprob: -17.437429428100586
    10. '#' → logprob: -17.437429428100586

Token 365: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.02222384139895439
    2. ' update' → logprob: -4.397223949432373
    3. 'set' → logprob: -4.772223949432373
    4. '_update' → logprob: -7.897223949432373
    5. ' set' → logprob: -8.147223472595215
    6. 'get' → logprob: -8.772223472595215
    7. '  ' → logprob: -9.022223472595215
    8. 'query' → logprob: -9.272223472595215
    9. '__' → logprob: -10.147223472595215
    10. ' ' → logprob: -10.272223472595215

Token 366: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.057743949990254e-05
    2. '(' → logprob: -11.000020980834961
    3. ' (' → logprob: -12.750020980834961
    4. '   ' → logprob: -14.625020980834961
    5. '(i' → logprob: -15.500020980834961
    6. '(s' → logprob: -16.75002098083496
    7. ' ' → logprob: -17.00002098083496
    8. '(sel' → logprob: -17.25002098083496
    9. 'self' → logprob: -17.75002098083496
    10. '       ' → logprob: -18.37502098083496

Token 367: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010567454155534506
    2. ',' → logprob: -6.876056671142578
    3. '(' → logprob: -11.876056671142578
    4. ' (' → logprob: -12.126056671142578
    5. '   ' → logprob: -12.251056671142578
    6. 'self' → logprob: -13.626056671142578
    7. ' ' → logprob: -13.876056671142578
    8. ')' → logprob: -13.876056671142578
    9. '(idx' → logprob: -14.001056671142578
    10. '(i' → logprob: -14.126056671142578

Token 368: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012732604518532753
    2. 'i' → logprob: -4.88773250579834
    3. 'idx' → logprob: -5.51273250579834
    4. ' k' → logprob: -7.76273250579834
    5. 'index' → logprob: -7.76273250579834
    6. 'pos' → logprob: -8.51273250579834
    7. 'p' → logprob: -11.38773250579834
    8. 'ind' → logprob: -12.13773250579834
    9. 'self' → logprob: -12.51273250579834
    10. ' i' → logprob: -12.63773250579834

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012582694762386382
    2. ' ,' → logprob: -9.000125885009766
    3. ',k' → logprob: -13.625125885009766
    4. ',value' → logprob: -14.125125885009766
    5. ',a' → logprob: -16.250125885009766
    6. ',
' → logprob: -16.625125885009766
    7. ',val' → logprob: -16.625125885009766
    8. ',new' → logprob: -16.875125885009766
    9. ',v' → logprob: -17.000125885009766
    10. '   ' → logprob: -17.500125885009766

Token 370: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002636006975080818
    2. 'a' → logprob: -8.375263214111328
    3. ' x' → logprob: -10.375263214111328
    4. 'val' → logprob: -13.750263214111328
    5. 'value' → logprob: -14.750263214111328
    6. '   ' → logprob: -16.500263214111328
    7. ' a' → logprob: -16.625263214111328
    8. '```' → logprob: -16.750263214111328
    9. ' ' → logprob: -17.250263214111328
    10. 'v' → logprob: -17.250263214111328

Token 371: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10022576153278351
    2. '):
' → logprob: -2.3502256870269775
    3. '):
' → logprob: -11.350225448608398
    4. ')' → logprob: -12.100225448608398
    5. ' ):' → logprob: -13.975225448608398
    6. '   ' → logprob: -14.850225448608398
    7. '):

' → logprob: -15.100225448608398
    8. ':' → logprob: -15.600225448608398
    9. ' ' → logprob: -17.1002254486084
    10. ' ):
' → logprob: -17.3502254486084

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014525714504998177
    2. '   ' → logprob: -9.750144958496094
    3. '
' → logprob: -10.125144958496094
    4. '```' → logprob: -11.250144958496094
    5. '<|end|>' → logprob: -11.375144958496094
    6. ' k' → logprob: -12.625144958496094
    7. ' self' → logprob: -13.125144958496094
    8. '  
' → logprob: -13.125144958496094
    9. '	   ' → logprob: -13.500144958496094
    10. '        
' → logprob: -13.750144958496094

Token 373: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.007638805545866489
    2. ' k' → logprob: -5.007638931274414
    3. '       ' → logprob: -7.007638931274414
    4. '	k' → logprob: -11.132638931274414
    5. '   ' → logprob: -12.632638931274414
    6. ',k' → logprob: -17.257638931274414
    7. '```' → logprob: -17.757638931274414
    8. '​' → logprob: -18.007638931274414
    9. '	' → logprob: -18.132638931274414
    10. '"k' → logprob: -18.132638931274414

Token 374: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12694217264652252
    2. ' +=' → logprob: -2.1269421577453613
    3. '=' → logprob: -11.25194263458252
    4. '+=(' → logprob: -14.50194263458252
    5. ']+=' → logprob: -15.00194263458252
    6. ' =' → logprob: -16.251941680908203
    7. '+' → logprob: -16.626941680908203
    8. '   ' → logprob: -16.876941680908203
    9. '+="' → logprob: -17.376941680908203
    10. '+='' → logprob: -17.376941680908203

Token 375: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009115827269852161
    2. ' self' → logprob: -7.000911712646484
    3. '(self' → logprob: -17.000911712646484
    4. '[self' → logprob: -17.750911712646484
    5. '	self' → logprob: -17.875911712646484
    6. '   ' → logprob: -18.000911712646484
    7. '       ' → logprob: -18.500911712646484
    8. '=self' → logprob: -20.500911712646484
    9. '
' → logprob: -21.000911712646484
    10. ' ' → logprob: -21.625911712646484

Token 376: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.0011773703154176474
    2. 'num' → logprob: -6.7511773109436035
    3. '_num' → logprob: -13.251177787780762
    4. '<num' → logprob: -13.376177787780762
    5. '.' → logprob: -13.751177787780762
    6. '   ' → logprob: -14.501177787780762
    7. '=num' → logprob: -14.501177787780762
    8. ',num' → logprob: -14.751177787780762
    9. '$num' → logprob: -15.376177787780762
    10. ' num' → logprob: -15.501177787780762

Token 377: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.209759920835495
    2. '
' → logprob: -1.7097599506378174
    3. 'self' → logprob: -5.209759712219238
    4. '   ' → logprob: -6.084759712219238
    5. '        
' → logprob: -9.209759712219238
    6. '[' → logprob: -9.334759712219238
    7. '[self' → logprob: -9.334759712219238
    8. ' self' → logprob: -9.709759712219238
    9. '
' → logprob: -9.834759712219238
    10. '```' → logprob: -10.209759712219238

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01933394931256771
    2. 'self' → logprob: -4.144333839416504
    3. '
' → logprob: -5.894333839416504
    4. ' self' → logprob: -7.894333839416504
    5. '   ' → logprob: -9.894333839416504
    6. '	self' → logprob: -10.269333839416504
    7. '```' → logprob: -10.519333839416504
    8. '[self' → logprob: -10.644333839416504
    9. '        
' → logprob: -12.144333839416504
    10. '<|end|>' → logprob: -12.269333839416504

Token 379: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000181372175575234
    2. ' self' → logprob: -8.750181198120117
    3. '       ' → logprob: -10.750181198120117
    4. '
' → logprob: -13.875181198120117
    5. '   ' → logprob: -14.875181198120117
    6. '	self' → logprob: -16.500181198120117
    7. '        
' → logprob: -16.750181198120117
    8. 'while' → logprob: -17.250181198120117
    9. '    
' → logprob: -19.625181198120117
    10. '[self' → logprob: -19.750181198120117

Token 380: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -3.5716304410016164e-05
    2. '.' → logprob: -10.500035285949707
    3. 'tree' → logprob: -11.875035285949707
    4. '	tree' → logprob: -14.875035285949707
    5. '   ' → logprob: -15.625035285949707
    6. '.table' → logprob: -15.750035285949707
    7. ' .' → logprob: -16.125036239624023
    8. ').' → logprob: -16.875036239624023
    9. '-tree' → logprob: -17.000036239624023
    10. '.thread' → logprob: -17.250036239624023

Token 381: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. '[n' → logprob: -19.125
    4. ' [' → logprob: -19.125
    5. '[m' → logprob: -19.25
    6. '[s' → logprob: -19.625
    7. '[key' → logprob: -19.75
    8. '[q' → logprob: -19.75
    9. '[j' → logprob: -19.875
    10. '[i' → logprob: -20.0

Token 382: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1411769688129425
    2. ' =' → logprob: -2.51617693901062
    3. ']' → logprob: -3.01617693901062
    4. ']=' → logprob: -6.266177177429199
    5. ')' → logprob: -12.2661771774292
    6. ' ]' → logprob: -13.6411771774292
    7. '<|end|>' → logprob: -13.8911771774292
    8. ')=' → logprob: -14.0161771774292
    9. ' ' → logprob: -15.2661771774292
    10. '<|end|>' → logprob: -15.6411771774292

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '＝' → logprob: -17.876928329467773
    4. '.=' → logprob: -19.126928329467773
    5. '=x' → logprob: -19.126928329467773
    6. 'x' → logprob: -20.376928329467773
    7. ' ' → logprob: -21.251928329467773
    8. '=
' → logprob: -21.376928329467773
    9. '=

' → logprob: -21.876928329467773
    10. ',' → logprob: -22.001928329467773

Token 384: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004306692280806601
    2. ' x' → logprob: -7.750430583953857
    3. '	x' → logprob: -18.875431060791016
    4. '_x' → logprob: -23.250431060791016
    5. ' ' → logprob: -23.625431060791016
    6. '   ' → logprob: -23.625431060791016
    7. '(x' → logprob: -23.750431060791016
    8. ')x' → logprob: -23.875431060791016
    9. '"x' → logprob: -24.000431060791016
    10. '$x' → logprob: -24.250431060791016

Token 385: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2590278089046478
    2. ' k' → logprob: -2.0090277194976807
    3. 'k' → logprob: -2.5090277194976807
    4. '	k' → logprob: -5.13402795791626
    5. '   ' → logprob: -5.25902795791626
    6. ',k' → logprob: -7.13402795791626
    7. ' while' → logprob: -8.509027481079102
    8. '
' → logprob: -8.884027481079102
    9. 'while' → logprob: -9.009027481079102
    10. '        
' → logprob: -9.759027481079102

Token 386: '       ' (ID: 309)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7382604479789734
    2. '       ' → logprob: -0.8632604479789734
    3. 'k' → logprob: -2.613260507583618
    4. '	k' → logprob: -4.863260269165039
    5. ' while' → logprob: -5.238260269165039
    6. '
' → logprob: -5.363260269165039
    7. ',k' → logprob: -5.613260269165039
    8. 'while' → logprob: -6.113260269165039
    9. '   ' → logprob: -6.238260269165039
    10. '        
' → logprob: -7.988260269165039

Token 387: ' while' (ID: 2049)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015245062531903386
    2. 'while' (adapté à ' while') → logprob: -6.501524448394775
    3. ' while' → logprob: -11.376524925231934
    4. ' k' → logprob: -11.626524925231934
    5. '       ' → logprob: -13.751524925231934
    6. '	while' → logprob: -14.751524925231934
    7. '	k' → logprob: -15.251524925231934
    8. '   ' → logprob: -15.501524925231934
    9. '
' → logprob: -18.626523971557617
    10. '```' → logprob: -18.751523971557617

Token 388: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1602255403995514
    2. ' k' → logprob: -1.910225510597229
    3. '	k' → logprob: -13.910225868225098
    4. '(k' → logprob: -15.535225868225098
    5. '(' → logprob: -16.91022491455078
    6. '_k' → logprob: -17.28522491455078
    7. ' ' → logprob: -17.28522491455078
    8. '1' → logprob: -17.53522491455078
    9. 'True' → logprob: -17.66022491455078
    10. ' True' → logprob: -17.66022491455078

Token 389: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0006822916911914945
    2. '>>' → logprob: -7.375682353973389
    3. ' >' → logprob: -10.37568187713623
    4. '//=' → logprob: -11.37568187713623
    5. '＞' → logprob: -12.62568187713623
    6. '//' → logprob: -13.12568187713623
    7. ' ' → logprob: -13.37568187713623
    8. '   ' → logprob: -13.37568187713623
    9. '&gt' → logprob: -13.75068187713623
    10. ' >>=' → logprob: -14.37568187713623

Token 390: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.750015258789062
    4. '0' → logprob: -18.375015258789062
    5. '>' → logprob: -18.500015258789062
    6. '=' → logprob: -19.125015258789062
    7. '  ' → logprob: -19.625015258789062
    8. '    ' → logprob: -19.875015258789062
    9. '
' → logprob: -20.125015258789062
    10. '１' → logprob: -20.500015258789062

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -15.750003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '
' → logprob: -19.500003814697266
    6. '>' → logprob: -20.000003814697266
    7. '۱' → logprob: -20.125003814697266
    8. '```' → logprob: -20.375003814697266
    9. '１' → logprob: -20.625003814697266
    10. '=' → logprob: -20.937503814697266

Token 392: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16252708435058594
    2. ':' → logprob: -1.912527084350586
    3. ' and' → logprob: -6.662527084350586
    4. '       ' → logprob: -7.662527084350586
    5. '):
' → logprob: -9.287527084350586
    6. ',' → logprob: -9.287527084350586
    7. ' :
' → logprob: -9.537527084350586
    8. '           ' → logprob: -9.787527084350586
    9. ':
' → logprob: -10.037527084350586
    10. '=' → logprob: -10.287527084350586

Token 393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002727013546973467
    2. 'k' → logprob: -6.502727031707764
    3. ' k' → logprob: -7.252727031707764
    4. '	       ' → logprob: -8.377726554870605
    5. '       ' → logprob: -9.127726554870605
    6. '<|end|>' → logprob: -9.627726554870605
    7. '   ' → logprob: -10.627726554870605
    8. '
' → logprob: -10.752726554870605
    9. '```' → logprob: -11.127726554870605
    10. '<|end|>' → logprob: -11.877726554870605

Token 394: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10336913168430328
    2. ' k' → logprob: -2.3533692359924316
    3. '               ' → logprob: -5.853369235992432
    4. '       ' → logprob: -8.853368759155273
    5. '   ' → logprob: -9.728368759155273
    6. '           ' → logprob: -9.978368759155273
    7. '	k' → logprob: -10.853368759155273
    8. ' ' → logprob: -12.353368759155273
    9. '
' → logprob: -12.603368759155273
    10. '```' → logprob: -12.728368759155273

Token 395: ' alors' (ID: 17971)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.3213025744771585e-05
    2. ' k' → logprob: -10.500033378601074
    3. '           ' → logprob: -12.125033378601074
    4. '               ' → logprob: -15.625033378601074
    5. '   ' → logprob: -16.875032424926758
    6. '	k' → logprob: -18.750032424926758
    7. '       ' → logprob: -19.000032424926758
    8. 'self' → logprob: -22.000032424926758
    9. '            ' → logprob: -22.125032424926758
    10. '            
' → logprob: -22.125032424926758

Token 396: ' là' (ID: 8052)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009007589891552925
    2. ' k' → logprob: -4.759007453918457
    3. '           ' → logprob: -7.884007453918457
    4. '               ' → logprob: -11.259007453918457
    5. '   ' → logprob: -13.134007453918457
    6. '	k' → logprob: -14.134007453918457
    7. '       ' → logprob: -14.759007453918457
    8. '
' → logprob: -15.509007453918457
    9. ',k' → logprob: -16.509008407592773
    10. ' ' → logprob: -17.259008407592773

Token 397: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10101116448640823
    2. ' k' → logprob: -2.351011276245117
    3. '           ' → logprob: -7.476011276245117
    4. '               ' → logprob: -8.476011276245117
    5. ',k' → logprob: -11.476011276245117
    6. ',' → logprob: -11.601011276245117
    7. '	k' → logprob: -12.101011276245117
    8. '
' → logprob: -13.476011276245117
    9. '   ' → logprob: -13.851011276245117
    10. '       ' → logprob: -15.226011276245117

Token 398: ' je' (ID: 1264)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04863278940320015
    2. ' k' → logprob: -3.048632860183716
    3. '           ' → logprob: -10.048632621765137
    4. '   ' → logprob: -13.798632621765137
    5. '               ' → logprob: -14.048632621765137
    6. '	k' → logprob: -15.173632621765137
    7. '       ' → logprob: -16.298633575439453
    8. ' ' → logprob: -17.923633575439453
    9. '            ' → logprob: -18.173633575439453
    10. '    ' → logprob: -18.298633575439453

Token 399: ' fais' (ID: 24376)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.043770477175712585
    2. ' k' → logprob: -3.1687705516815186
    3. '=k' → logprob: -8.418770790100098
    4. '=' → logprob: -8.668770790100098
    5. ' >>=' → logprob: -9.293770790100098
    6. '           ' → logprob: -9.418770790100098
    7. ' =' → logprob: -9.918770790100098
    8. '//=' → logprob: -10.418770790100098
    9. '/k' → logprob: -10.668770790100098
    10. '/' → logprob: -10.918770790100098

Token 400: ' avec' (ID: 3937)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1003308817744255
    2. 'k' → logprob: -2.3503308296203613
    3. '           ' → logprob: -9.60033130645752
    4. '               ' → logprob: -10.47533130645752
    5. '   ' → logprob: -11.60033130645752
    6. '       ' → logprob: -11.85033130645752
    7. '	k' → logprob: -12.22533130645752
    8. '    ' → logprob: -12.60033130645752
    9. ' ' → logprob: -13.47533130645752
    10. '            ' → logprob: -14.60033130645752

Token 401: ' <<
' (ID: 135620)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.386907160282135
    2. 'k' → logprob: -1.1369071006774902
    3. '           ' → logprob: -10.386907577514648
    4. '   ' → logprob: -13.511907577514648
    5. '	k' → logprob: -13.511907577514648
    6. '    ' → logprob: -14.136907577514648
    7. '               ' → logprob: -14.636907577514648
    8. '            ' → logprob: -15.136907577514648
    9. ' ' → logprob: -15.136907577514648
    10. '       ' → logprob: -15.261907577514648

Token 402: '           ' (ID: 352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1241295263171196
    2. ' k' → logprob: -2.7491295337677
    3. '1' → logprob: -3.7491295337677
    4. '           ' → logprob: -3.9991295337677
    5. '=' → logprob: -4.749129295349121
    6. ' ' → logprob: -7.124129295349121
    7. '2' → logprob: -7.624129295349121
    8. '=k' → logprob: -8.499129295349121
    9. ',' → logprob: -8.999129295349121
    10. '6' → logprob: -8.999129295349121

Token 403: ' self' (ID: 1051)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001439459010725841
    2. ' k' → logprob: -8.875144004821777
    3. '           ' → logprob: -12.625144004821777
    4. '   ' → logprob: -14.375144004821777
    5. '               ' → logprob: -16.12514305114746
    6. '       ' → logprob: -16.62514305114746
    7. '
' → logprob: -18.12514305114746
    8. '	k' → logprob: -18.12514305114746
    9. ' ' → logprob: -18.50014305114746
    10. '                   ' → logprob: -19.25014305114746

Token 404: '.tree' (ID: 49211)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.24933984875679016
    2. '.tree' → logprob: -1.8743398189544678
    3. 'k' → logprob: -3.1243398189544678
    4. '>>' → logprob: -4.749340057373047
    5. '=' → logprob: -4.874340057373047
    6. ' tree' → logprob: -6.499340057373047
    7. ' >>=' → logprob: -6.624340057373047
    8. ' ' → logprob: -7.249340057373047
    9. '   ' → logprob: -7.374340057373047
    10. '#' → logprob: -7.749340057373047

Token 405: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.4855663721391466e-05
    2. '[' → logprob: -11.500015258789062
    3. '[parent' → logprob: -13.625015258789062
    4. '[(' → logprob: -13.875015258789062
    5. '[i' → logprob: -13.875015258789062
    6. '[int' → logprob: -14.000015258789062
    7. '[self' → logprob: -15.375015258789062
    8. ' [' → logprob: -15.875015258789062
    9. '   ' → logprob: -16.375015258789062
    10. '[
' → logprob: -16.500015258789062

Token 406: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.004443055018782616
    2. '//' → logprob: -5.879443168640137
    3. ']' → logprob: -7.379443168640137
    4. ' >>=' → logprob: -7.879443168640137
    5. '=' → logprob: -8.129443168640137
    6. '//=' → logprob: -8.879443168640137
    7. ' >>' → logprob: -9.754443168640137
    8. '#' → logprob: -10.129443168640137
    9. '<<' → logprob: -10.504443168640137
    10. ' //' → logprob: -10.629443168640137

Token 407: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.5
    4. '```' → logprob: -19.625
    5. '１' → logprob: -19.75
    6. '=' → logprob: -21.375
    7. '१' → logprob: -22.0
    8. ' ' → logprob: -22.0
    9. '১' → logprob: -22.125
    10. '' → logprob: -22.125

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -16.375
    4. '   ' → logprob: -17.75
    5. '１' → logprob: -18.1875
    6. '' → logprob: -18.1875
    7. '=' → logprob: -19.25
    8. '১' → logprob: -19.3125
    9. '१' → logprob: -19.3125
    10. '﻿' → logprob: -19.4375

Token 409: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017755765293259174
    2. ']=' → logprob: -8.750177383422852
    3. ' ]' → logprob: -10.875177383422852
    4. '=' → logprob: -16.12517738342285
    5. ')' → logprob: -17.75017738342285
    6. ']
' → logprob: -17.87517738342285
    7. ']=(' → logprob: -18.00017738342285
    8. ']+=' → logprob: -18.50017738342285
    9. '>' → logprob: -19.12517738342285
    10. '```' → logprob: -19.50017738342285

Token 410: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=self' → logprob: -16.13604736328125
    4. ']' → logprob: -18.76104736328125
    5. ']=' → logprob: -19.01104736328125
    6. '=

' → logprob: -19.26104736328125
    7. ')' → logprob: -19.38604736328125
    8. '=
' → logprob: -19.38604736328125
    9. '=min' → logprob: -19.38604736328125
    10. '＝' → logprob: -19.51104736328125

Token 411: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004088135901838541
    2. ' self' → logprob: -5.504087924957275
    3. 'seg' → logprob: -11.754088401794434
    4. ' ' → logprob: -14.504088401794434
    5. 'se' → logprob: -14.504088401794434
    6. 'sel' → logprob: -15.629088401794434
    7. '	self' → logprob: -16.129087448120117
    8. ' seg' → logprob: -16.254087448120117
    9. '   ' → logprob: -16.379087448120117
    10. 'min' → logprob: -16.754087448120117

Token 412: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -5.955703818472102e-05
    2. 'seg' → logprob: -9.750059127807617
    3. '(seg' → logprob: -14.625059127807617
    4. '.' → logprob: -15.125059127807617
    5. '.sig' → logprob: -15.875059127807617
    6. '_seg' → logprob: -16.375059127807617
    7. ' seg' → logprob: -16.500059127807617
    8. '.se' → logprob: -17.125059127807617
    9. 'Seg' → logprob: -17.250059127807617
    10. '.sem' → logprob: -17.375059127807617

Token 413: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -1.9361264946837764e-07
    2. 'function' → logprob: -16.625
    3. '_func' → logprob: -18.0
    4. 'self' → logprob: -18.25
    5. 'fun' → logprob: -18.875
    6. ' func' → logprob: -18.875
    7. '   ' → logprob: -19.25
    8. 'f' → logprob: -19.25
    9. 'def' → logprob: -19.5
    10. 'unction' → logprob: -19.875

Token 414: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.668304245569743e-05
    2. '(' → logprob: -10.000046730041504
    3. '(
' → logprob: -14.000046730041504
    4. 'self' → logprob: -15.250046730041504
    5. ' (' → logprob: -16.500045776367188
    6. '(this' → logprob: -19.250045776367188
    7. ' self' → logprob: -19.875045776367188
    8. '(s' → logprob: -20.125045776367188
    9. '(

' → logprob: -20.500045776367188
    10. '(sel' → logprob: -20.625045776367188

Token 415: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.00026979928952641785
    2. 'tree' → logprob: -8.250269889831543
    3. '.' → logprob: -12.250269889831543
    4. '	tree' → logprob: -13.250269889831543
    5. ' .' → logprob: -13.625269889831543
    6. ' tree' → logprob: -15.125269889831543
    7. '.table' → logprob: -16.250268936157227
    8. '
' → logprob: -16.375268936157227
    9. '.tr' → logprob: -16.500268936157227
    10. '(tree' → logprob: -16.750268936157227

Token 416: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.961759259458631e-06
    2. 'k' → logprob: -13.000004768371582
    3. '[' → logprob: -13.625004768371582
    4. '[(' → logprob: -13.750004768371582
    5. '   ' → logprob: -15.750004768371582
    6. '	k' → logprob: -16.3750057220459
    7. '[
' → logprob: -17.6250057220459
    8. ' k' → logprob: -18.0000057220459
    9. ',k' → logprob: -18.1250057220459
    10. '  ' → logprob: -18.2500057220459

Token 417: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0009699412039481103
    2. ']' → logprob: -7.250969886779785
    3. ' ],' → logprob: -9.500969886779785
    4. '   ' → logprob: -9.625969886779785
    5. '],
' → logprob: -9.875969886779785
    6. ' ' → logprob: -10.750969886779785
    7. '    ' → logprob: -11.500969886779785
    8. '  ' → logprob: -11.625969886779785
    9. '<<' → logprob: -12.125969886779785
    10. 'k' → logprob: -12.250969886779785

Token 418: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009119403548538685
    2. ' self' → logprob: -7.000911712646484
    3. '           ' → logprob: -15.375911712646484
    4. '       ' → logprob: -16.375911712646484
    5. '   ' → logprob: -17.000911712646484
    6. '               ' → logprob: -17.625911712646484
    7. '[self' → logprob: -17.875911712646484
    8. '  ' → logprob: -18.375911712646484
    9. '         ' → logprob: -18.500911712646484
    10. ' ' → logprob: -18.625911712646484

Token 419: '.tree' (ID: 49211)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020825056359171867
    2. '^' → logprob: -3.895825147628784
    3. ' k' → logprob: -8.895825386047363
    4. '[k' → logprob: -9.395825386047363
    5. ' ^' → logprob: -10.020825386047363
    6. '(k' → logprob: -11.770825386047363
    7. '^(' → logprob: -12.270825386047363
    8. '{k' → logprob: -13.895825386047363
    9. '  ' → logprob: -14.270825386047363
    10. '	k' → logprob: -14.395825386047363

Token 420: '[k' (ID: 14298)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.7646015286445618
    2. 'k' → logprob: -1.014601469039917
    3. '[k' → logprob: -1.764601469039917
    4. ' ^' → logprob: -7.889601707458496
    5. '^(' → logprob: -8.764601707458496
    6. ' k' → logprob: -9.389601707458496
    7. '[' → logprob: -10.639601707458496
    8. '(k' → logprob: -11.014601707458496
    9. '   ' → logprob: -12.264601707458496
    10. '_k' → logprob: -12.639601707458496

Token 421: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.01817803643643856
    2. ' ^' → logprob: -4.0181779861450195
    3. '>>' → logprob: -11.01817798614502
    4. '^(' → logprob: -12.14317798614502
    5. ' ' → logprob: -12.89317798614502
    6. '^^' → logprob: -13.14317798614502
    7. '   ' → logprob: -14.39317798614502
    8. ']' → logprob: -14.89317798614502
    9. '  ' → logprob: -15.01817798614502
    10. '1' → logprob: -16.018178939819336

Token 422: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '2' → logprob: -18.37500762939453
    4. '   ' → logprob: -19.12500762939453
    5. '  ' → logprob: -20.75000762939453
    6. '１' → logprob: -21.12500762939453
    7. '```' → logprob: -21.75000762939453
    8. '    ' → logprob: -22.50000762939453
    9. '
' → logprob: -23.00000762939453
    10. '0' → logprob: -23.12500762939453

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.3750057220459
    4. '2' → logprob: -18.6250057220459
    5. '```' → logprob: -19.1250057220459
    6. '  ' → logprob: -20.2500057220459
    7. '１' → logprob: -20.3750057220459
    8. '    ' → logprob: -21.7500057220459
    9. '0' → logprob: -22.0000057220459
    10. '``' → logprob: -22.0000057220459

Token 424: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.001024831784889102
    2. '])
' → logprob: -7.5010247230529785
    3. ' ])' → logprob: -7.7510247230529785
    4. ')' → logprob: -10.626025199890137
    5. ']' → logprob: -12.376025199890137
    6. '])
' → logprob: -13.126025199890137
    7. '])

' → logprob: -13.126025199890137
    8. ' ])
' → logprob: -13.376025199890137
    9. ' )' → logprob: -13.501025199890137
    10. ')])' → logprob: -13.626025199890137

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009115827269852161
    2. ' k' → logprob: -7.500911712646484
    3. '   ' → logprob: -8.500911712646484
    4. '       ' → logprob: -9.375911712646484
    5. 'k' → logprob: -9.625911712646484
    6. ' ' → logprob: -13.500911712646484
    7. '          ' → logprob: -13.875911712646484
    8. '		' → logprob: -14.500911712646484
    9. '	       ' → logprob: -14.625911712646484
    10. '	   ' → logprob: -15.125911712646484

Token 426: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.003978547174483538
    2. '           ' → logprob: -6.003978729248047
    3. ' k' → logprob: -6.503978729248047
    4. '	k' → logprob: -13.628978729248047
    5. '   ' → logprob: -13.753978729248047
    6. '       ' → logprob: -13.878978729248047
    7. '               ' → logprob: -14.628978729248047
    8. '          ' → logprob: -15.378978729248047
    9. '         ' → logprob: -16.503978729248047
    10. '     ' → logprob: -16.503978729248047

Token 427: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.025874532759189606
    2. '=' → logprob: -3.775874614715576
    3. '//=' → logprob: -6.150874614715576
    4. ' >>=' → logprob: -7.650874614715576
    5. '>' → logprob: -11.150874137878418
    6. '≫' → logprob: -13.775874137878418
    7. '/=' → logprob: -14.400874137878418
    8. '>>>' → logprob: -14.775874137878418
    9. '   ' → logprob: -14.900874137878418
    10. '>>
' → logprob: -15.150874137878418

Token 428: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -20.5
    4. '2' → logprob: -21.125
    5. '```' → logprob: -21.375
    6. '۱' → logprob: -21.875
    7. '１' → logprob: -22.25
    8. '<|end|>' → logprob: -23.375
    9. '১' → logprob: -23.5
    10. '१' → logprob: -23.625

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -19.875
    4. '۱' → logprob: -20.5
    5. '１' → logprob: -21.125
    6. '2' → logprob: -21.375
    7. '' → logprob: -21.5
    8. '১' → logprob: -21.75
    9. '१' → logprob: -21.75
    10. '   ' → logprob: -21.875

Token 430: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30995526909828186
    2. '<|end|>' → logprob: -1.5599552392959595
    3. 'def' → logprob: -3.059955358505249
    4. ')' → logprob: -5.55995512008667
    5. '```' → logprob: -6.43495512008667
    6. '#' → logprob: -6.80995512008667
    7. '       ' → logprob: -6.93495512008667
    8. '<|end|>' → logprob: -7.43495512008667
    9. ' def' → logprob: -7.55995512008667
    10. '
' → logprob: -8.559955596923828

Token 432: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07480082660913467
    2. '<|end|>' → logprob: -3.199800729751587
    3. '   ' → logprob: -4.449800968170166
    4. ' def' → logprob: -4.699800968170166
    5. ')' → logprob: -4.824800968170166
    6. '```' → logprob: -7.074800968170166
    7. '#' → logprob: -7.449800968170166
    8. '}' → logprob: -7.949800968170166
    9. ' ' → logprob: -8.449800491333008
    10. ']' → logprob: -9.324800491333008

Token 433: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.0012139255413785577
    2. 'get' → logprob: -6.751214027404785
    3. ' query' → logprob: -10.376214027404785
    4. '_query' → logprob: -11.876214027404785
    5. 'prod' → logprob: -13.376214027404785
    6. 'find' → logprob: -13.626214027404785
    7. 'build' → logprob: -13.751214027404785
    8. '__' → logprob: -14.251214027404785
    9. '.query' → logprob: -15.251214027404785
    10. 'Query' → logprob: -15.626214027404785

Token 434: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -11.750009536743164
    3. '   ' → logprob: -13.750009536743164
    4. ' (' → logprob: -15.125009536743164
    5. 'self' → logprob: -15.125009536743164
    6. 'def' → logprob: -15.750009536743164
    7. '       ' → logprob: -17.500009536743164
    8. ' ' → logprob: -18.375009536743164
    9. '(
' → logprob: -18.875009536743164
    10. '(s' → logprob: -19.000009536743164

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006080791936255991
    2. '(self' → logprob: -7.500607967376709
    3. 'self' → logprob: -10.000608444213867
    4. ',self' → logprob: -12.250608444213867
    5. ' ,' → logprob: -12.500608444213867
    6. '   ' → logprob: -15.250608444213867
    7. ',
' → logprob: -15.500608444213867
    8. '(' → logprob: -15.750608444213867
    9. '       ' → logprob: -16.000608444213867
    10. ')' → logprob: -16.000608444213867

Token 436: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018199224025011063
    2. 'self' → logprob: -4.018199443817139
    3. 'a' → logprob: -10.64319896697998
    4. 'left' → logprob: -10.89319896697998
    5. ' l' → logprob: -12.64319896697998
    6. '
' → logprob: -13.64319896697998
    7. 'L' → logprob: -13.89319896697998
    8. ' self' → logprob: -14.26819896697998
    9. 'p' → logprob: -14.64319896697998
    10. '(self' → logprob: -15.51819896697998

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. ' ,' → logprob: -10.375033378601074
    3. ',r' → logprob: -13.125033378601074
    4. ',
' → logprob: -15.750033378601074
    5. ',l' → logprob: -18.50003433227539
    6. ',b' → logprob: -18.50003433227539
    7. 'r' → logprob: -18.62503433227539
    8. ',k' → logprob: -19.37503433227539
    9. ',int' → logprob: -19.50003433227539
    10. '   ' → logprob: -19.62503433227539

Token 438: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006715370807796717
    2. ' r' → logprob: -5.006715297698975
    3. '	r' → logprob: -18.881715774536133
    4. '   ' → logprob: -19.881715774536133
    5. ' ' → logprob: -22.881715774536133
    6. '
' → logprob: -23.256715774536133
    7. ',r' → logprob: -23.381715774536133
    8. 'rans' → logprob: -24.131715774536133
    9. ' ' → logprob: -24.631715774536133
    10. '    ' → logprob: -24.881715774536133

Token 439: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12704768776893616
    2. '):
' → logprob: -2.1270477771759033
    3. '):
' → logprob: -10.252047538757324
    4. ')' → logprob: -10.377047538757324
    5. ' ):' → logprob: -10.877047538757324
    6. '   ' → logprob: -11.127047538757324
    7. '       ' → logprob: -11.627047538757324
    8. ',' → logprob: -12.002047538757324
    9. ':' → logprob: -13.002047538757324
    10. ' ):
' → logprob: -13.752047538757324

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004478662274777889
    2. 'res' → logprob: -6.129478454589844
    3. '   ' → logprob: -7.004478454589844
    4. 'l' → logprob: -7.504478454589844
    5. 'result' → logprob: -7.629478454589844
    6. ' res' → logprob: -8.629478454589844
    7. 'r' → logprob: -9.254478454589844
    8. '    ' → logprob: -11.129478454589844
    9. 's' → logprob: -11.379478454589844
    10. '	' → logprob: -11.504478454589844

Token 441: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.04095719754695892
    2. '       ' → logprob: -4.415956974029541
    3. ' res' → logprob: -4.665956974029541
    4. 's' → logprob: -4.790956974029541
    5. 'l' → logprob: -5.165956974029541
    6. '   ' → logprob: -5.415956974029541
    7. '	res' → logprob: -9.6659574508667
    8. 'result' → logprob: -10.4159574508667
    9. ' ' → logprob: -10.5409574508667
    10. '    ' → logprob: -11.5409574508667

Token 442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889099419116974
    2. '=' → logprob: -2.5788910388946533
    3. ' ' → logprob: -13.703890800476074
    4. ',' → logprob: -16.07889175415039
    5. '＝' → logprob: -16.95389175415039
    6. '   ' → logprob: -17.07889175415039
    7. ' =
' → logprob: -17.57889175415039
    8. '=self' → logprob: -18.95389175415039
    9. 'l' → logprob: -19.07889175415039
    10. '  ' → logprob: -19.20389175415039

Token 443: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09788352251052856
    2. ' self' → logprob: -2.722883462905884
    3. 'ide' → logprob: -3.597883462905884
    4. ' ide' → logprob: -8.972883224487305
    5. '   ' → logprob: -10.472883224487305
    6. '10' → logprob: -11.097883224487305
    7. ' ' → logprob: -13.347883224487305
    8. '	self' → logprob: -13.472883224487305
    9. '    ' → logprob: -13.722883224487305
    10. '       ' → logprob: -13.847883224487305

Token 444: '.ide' (ID: 136377)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.5775617957115173
    2. '.ide' → logprob: -0.8275617957115173
    3. '.' → logprob: -7.577561855316162
    4. '_' → logprob: -7.827561855316162
    5. 'self' → logprob: -8.952561378479004
    6. ' =' → logprob: -9.327561378479004
    7. '6' → logprob: -10.077561378479004
    8. '=' → logprob: -10.327561378479004
    9. ' ide' → logprob: -10.327561378479004
    10. 'def' → logprob: -10.452561378479004

Token 445: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.0009149204124696553
    2. 'ele' → logprob: -7.000915050506592
    3. 'Ele' → logprob: -13.375914573669434
    4. '-ele' → logprob: -13.750914573669434
    5. '_e' → logprob: -14.250914573669434
    6. '(ele' → logprob: -15.875914573669434
    7. '_le' → logprob: -17.12591552734375
    8. 'ELE' → logprob: -17.12591552734375
    9. ' ele' → logprob: -17.62591552734375
    10. '_el' → logprob: -18.37591552734375

Token 446: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17330323159694672
    2. ' 
' → logprob: -2.6733031272888184
    3. '  
' → logprob: -3.2983031272888184
    4. '       ' → logprob: -3.7983031272888184
    5. '        
' → logprob: -4.173303127288818
    6. ',' → logprob: -6.048303127288818
    7. ',
' → logprob: -6.173303127288818
    8. '		
' → logprob: -6.298303127288818
    9. '    
' → logprob: -6.298303127288818
    10. '<|end|>' → logprob: -6.423303127288818

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1470263004302979
    2. '<|end|>' → logprob: -1.2720263004302979
    3. '        
' → logprob: -1.5220263004302979
    4. ' 
' → logprob: -2.522026300430298
    5. '  
' → logprob: -3.022026300430298
    6. '    
' → logprob: -3.772026300430298
    7. ' ' → logprob: -5.272026062011719
    8. '
' → logprob: -5.647026062011719
    9. '   
' → logprob: -5.772026062011719
    10. '		
' → logprob: -6.022026062011719

Token 448: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0001149867384810932
    2. '       ' → logprob: -9.250115394592285
    3. ' l' → logprob: -11.000115394592285
    4. 'while' → logprob: -13.875115394592285
    5. '   ' → logprob: -14.000115394592285
    6. '	l' → logprob: -14.875115394592285
    7. '```' → logprob: -17.87511444091797
    8. ' while' → logprob: -18.25011444091797
    9. '        
' → logprob: -19.37511444091797
    10. '
' → logprob: -19.50011444091797

Token 449: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.23187829554080963
    2. ' +=' → logprob: -1.6068782806396484
    3. ',' → logprob: -5.356878280639648
    4. '=' → logprob: -6.731878280639648
    5. ' ,' → logprob: -8.356878280639648
    6. '|' → logprob: -9.356878280639648
    7. ' =' → logprob: -9.856878280639648
    8. ' <<=' → logprob: -9.856878280639648
    9. ' |=' → logprob: -10.356878280639648
    10. '   ' → logprob: -10.981878280639648

Token 450: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.541112427134067e-05
    2. ' self' → logprob: -9.500075340270996
    3. '       ' → logprob: -14.875075340270996
    4. '   ' → logprob: -16.375076293945312
    5. '[self' → logprob: -17.375076293945312
    6. '(self' → logprob: -18.000076293945312
    7. '	self' → logprob: -18.125076293945312
    8. '
' → logprob: -18.375076293945312
    9. '<|end|>' → logprob: -18.500076293945312
    10. '1' → logprob: -19.625076293945312

Token 451: '.num' (ID: 19403)
  Prédit: '.num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.num' → logprob: -0.2521313428878784
    2. 'num' → logprob: -1.5021313428878784
    3. ' num' → logprob: -9.127131462097168
    4. '<num' → logprob: -10.627131462097168
    5. '_num' → logprob: -11.377131462097168
    6. 'self' → logprob: -11.377131462097168
    7. '1' → logprob: -12.252131462097168
    8. '.user' → logprob: -12.252131462097168
    9. '[num' → logprob: -12.377131462097168
    10. '   ' → logprob: -12.502131462097168

Token 452: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36481142044067383
    2. '
' → logprob: -1.2398114204406738
    3. ' 
' → logprob: -5.114811420440674
    4. 'r' → logprob: -5.614811420440674
    5. '        
' → logprob: -6.114811420440674
    6. 'while' → logprob: -6.364811420440674
    7. '  
' → logprob: -7.239811420440674
    8. ' while' → logprob: -8.239810943603516
    9. ')
' → logprob: -8.364810943603516
    10. '    
' → logprob: -8.489810943603516

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16234010457992554
    2. 'r' → logprob: -1.9123401641845703
    3. ' r' → logprob: -6.78734016418457
    4. '   ' → logprob: -7.03734016418457
    5. '	r' → logprob: -10.16234016418457
    6. 'while' → logprob: -11.03734016418457
    7. '	' → logprob: -11.28734016418457
    8. '
' → logprob: -11.66234016418457
    9. ',' → logprob: -12.41234016418457
    10. ',r' → logprob: -12.53734016418457

Token 454: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -9.615255839889869e-05
    2. ' r' → logprob: -9.250096321105957
    3. '   ' → logprob: -22.25009536743164
    4. '	r' → logprob: -22.37509536743164
    5. '
' → logprob: -23.25009536743164
    6. '       ' → logprob: -23.62509536743164
    7. 'res' → logprob: -24.12509536743164
    8. '_r' → logprob: -24.75009536743164
    9. '[r' → logprob: -25.75009536743164
    10. 'rans' → logprob: -25.75009536743164

Token 455: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5774158835411072
    2. ' +=' → logprob: -0.8274158835411072
    3. '+' → logprob: -6.577415943145752
    4. '+
' → logprob: -10.327415466308594
    5. ' +' → logprob: -10.577415466308594
    6. ']+=' → logprob: -11.327415466308594
    7. '
' → logprob: -12.577415466308594
    8. '=' → logprob: -12.702415466308594
    9. ' ' → logprob: -13.827415466308594
    10. '    ' → logprob: -13.952415466308594

Token 456: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008211346343159676
    2. ' self' → logprob: -5.008211135864258
    3. '1' → logprob: -6.508211135864258
    4. ' ' → logprob: -13.133211135864258
    5. '       ' → logprob: -14.758211135864258
    6. 'r' → logprob: -15.008211135864258
    7. '   ' → logprob: -15.133211135864258
    8. '0' → logprob: -15.258211135864258
    9. '(self' → logprob: -15.508211135864258
    10. '	self' → logprob: -15.883211135864258

Token 457: '.num' (ID: 19403)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009289718000218272
    2. 'self' → logprob: -7.62592887878418
    3. '       ' → logprob: -8.12592887878418
    4. 'num' → logprob: -9.25092887878418
    5. ' ' → logprob: -11.00092887878418
    6. ' self' → logprob: -11.25092887878418
    7. '   ' → logprob: -11.87592887878418
    8. '.num' → logprob: -12.87592887878418
    9. '.' → logprob: -13.00092887878418
    10. '+' → logprob: -13.12592887878418

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16699688136577606
    2. 'while' → logprob: -2.416996955871582
    3. '
' → logprob: -2.791996955871582
    4. ' while' → logprob: -6.416996955871582
    5. '   ' → logprob: -7.166996955871582
    6. '        
' → logprob: -7.416996955871582
    7. '	while' → logprob: -9.166996955871582
    8. ' 
' → logprob: -9.916996955871582
    9. '    
' → logprob: -10.291996955871582
    10. '  
' → logprob: -10.416996955871582

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04032101109623909
    2. '
' → logprob: -3.915321111679077
    3. '   ' → logprob: -4.790320873260498
    4. '        
' → logprob: -5.165320873260498
    5. 'while' → logprob: -5.915320873260498
    6. '    
' → logprob: -6.415320873260498
    7. ' while' → logprob: -7.540320873260498
    8. '  
' → logprob: -8.415321350097656
    9. ' 
' → logprob: -8.665321350097656
    10. '   
' → logprob: -9.665321350097656

Token 460: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00015217094914987683
    2. '       ' → logprob: -9.500152587890625
    3. ' while' → logprob: -9.500152587890625
    4. '
' → logprob: -13.625152587890625
    5. '	while' → logprob: -13.875152587890625
    6. '   ' → logprob: -15.500152587890625
    7. 'While' → logprob: -16.875152587890625
    8. '        
' → logprob: -17.250152587890625
    9. '```' → logprob: -19.375152587890625
    10. '    
' → logprob: -20.250152587890625

Token 461: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0009118211455643177
    2. ' while' → logprob: -7.000911712646484
    3. '       ' → logprob: -16.000911712646484
    4. 'While' → logprob: -16.250911712646484
    5. '	while' → logprob: -17.500911712646484
    6. '   ' → logprob: -18.250911712646484
    7. '
' → logprob: -18.875911712646484
    8. '        
' → logprob: -20.625911712646484
    9. '```' → logprob: -20.750911712646484
    10. 'l' → logprob: -21.375911712646484

Token 462: ' classique' (ID: 76895)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2874259352684021
    2. 'while' → logprob: -1.4124259948730469
    3. '   ' → logprob: -5.662425994873047
    4. '       ' → logprob: -6.412425994873047
    5. '	while' → logprob: -7.412425994873047
    6. ' ' → logprob: -9.162425994873047
    7. '    ' → logprob: -9.537425994873047
    8. '
' → logprob: -9.662425994873047
    9. ':
' → logprob: -9.912425994873047
    10. ':' → logprob: -9.912425994873047

Token 463: ' sur' (ID: 1512)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24839134514331818
    2. ' while' → logprob: -2.1233913898468018
    3. 'while' → logprob: -2.6233913898468018
    4. '
' → logprob: -4.123391151428223
    5. '   ' → logprob: -5.498391151428223
    6. '	while' → logprob: -5.748391151428223
    7. '<|end|>' → logprob: -6.373391151428223
    8. '        
' → logprob: -7.248391151428223
    9. ' 
' → logprob: -7.873391151428223
    10. '  
' → logprob: -8.123391151428223

Token 464: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.269626647233963
    2. ' l' → logprob: -1.5196266174316406
    3. 'while' → logprob: -4.644626617431641
    4. ' while' → logprob: -5.019626617431641
    5. 'r' → logprob: -7.269626617431641
    6. 'range' → logprob: -8.39462661743164
    7. '   ' → logprob: -8.76962661743164
    8. ' range' → logprob: -9.51962661743164
    9. ' r' → logprob: -9.51962661743164
    10. ' ' → logprob: -10.89462661743164

Token 465: ' intervals' (ID: 49900)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6660776734352112
    2. 'interval' → logprob: -1.9160776138305664
    3. 'ranges' → logprob: -2.2910776138305664
    4. 'segments' → logprob: -2.5410776138305664
    5. 'l' → logprob: -3.2910776138305664
    6. ' segments' → logprob: -3.4160776138305664
    7. 'range' → logprob: -3.5410776138305664
    8. ' intervals' → logprob: -3.9160776138305664
    9. 'indices' → logprob: -5.041077613830566
    10. ' ranges' → logprob: -5.166077613830566

Token 466: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14591379463672638
    2. ' while' → logprob: -2.39591383934021
    3. 'while' → logprob: -4.395913600921631
    4. '        
' → logprob: -4.770913600921631
    5. '   ' → logprob: -5.270913600921631
    6. '<|end|>' → logprob: -5.395913600921631
    7. '
' → logprob: -5.520913600921631
    8. ' 
' → logprob: -6.145913600921631
    9. ' ' → logprob: -6.395913600921631
    10. '	while' → logprob: -6.520913600921631

Token 467: ' pas' (ID: 2173)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1646903157234192
    2. ' while' → logprob: -1.9146902561187744
    3. '       ' → logprob: -5.4146904945373535
    4. '	while' → logprob: -12.539690017700195
    5. '   ' → logprob: -13.414690017700195
    6. '        ' → logprob: -16.039690017700195
    7. '    ' → logprob: -16.289690017700195
    8. '
' → logprob: -16.789690017700195
    9. 'While' → logprob: -16.789690017700195
    10. '        
' → logprob: -18.039690017700195

Token 468: ' trop' (ID: 14765)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12193161994218826
    2. ' while' → logprob: -2.246931552886963
    3. '   ' → logprob: -5.746931552886963
    4. '(' → logprob: -6.746931552886963
    5. '       ' → logprob: -6.996931552886963
    6. '    ' → logprob: -7.246931552886963
    7. ' (' → logprob: -7.871931552886963
    8. ' ' → logprob: -7.871931552886963
    9. '(r' → logprob: -7.996931552886963
    10. 'de' → logprob: -8.246932029724121

Token 469: ' mal' (ID: 3849)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.39480167627334595
    2. ' while' → logprob: -1.2698016166687012
    3. '   ' → logprob: -4.769801616668701
    4. 'r' → logprob: -5.019801616668701
    5. ' strict' → logprob: -5.019801616668701
    6. '       ' → logprob: -5.394801616668701
    7. '=' → logprob: -5.519801616668701
    8. '```' → logprob: -5.894801616668701
    9. 'strict' → logprob: -5.894801616668701
    10. '>' → logprob: -6.769801616668701

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2748294770717621
    2. ' while' → logprob: -1.8998295068740845
    3. '
' → logprob: -3.524829387664795
    4. '   ' → logprob: -3.649829387664795
    5. 'while' → logprob: -3.899829387664795
    6. '<|end|>' → logprob: -5.274829387664795
    7. ' ' → logprob: -6.274829387664795
    8. '	while' → logprob: -6.524829387664795
    9. ' 
' → logprob: -6.524829387664795
    10. '        
' → logprob: -6.524829387664795

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5538496375083923
    2. 'while' → logprob: -1.803849697113037
    3. ' while' → logprob: -1.803849697113037
    4. '   ' → logprob: -2.678849697113037
    5. '
' → logprob: -3.928849697113037
    6. '	while' → logprob: -5.303849697113037
    7. '```' → logprob: -6.678849697113037
    8. '        
' → logprob: -8.053849220275879
    9. ' ' → logprob: -8.428849220275879
    10. '  
' → logprob: -8.553849220275879

Token 472: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0009508833172731102
    2. ' while' → logprob: -7.000950813293457
    3. '       ' → logprob: -10.875950813293457
    4. '   ' → logprob: -11.625950813293457
    5. '	while' → logprob: -12.000950813293457
    6. '
' → logprob: -12.250950813293457
    7. '        
' → logprob: -15.250950813293457
    8. '```' → logprob: -15.750950813293457
    9. 'While' → logprob: -15.875950813293457
    10. '    
' → logprob: -16.625951766967773

Token 473: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6931495666503906
    2. ' l' → logprob: -0.6931495666503906
    3. '	l' → logprob: -13.69314956665039
    4. '   ' → logprob: -14.56814956665039
    5. ' ' → logprob: -14.94314956665039
    6. '(l' → logprob: -15.94314956665039
    7. ' ' → logprob: -16.06814956665039
    8. '_l' → logprob: -16.94314956665039
    9. '
' → logprob: -17.19314956665039
    10. '    ' → logprob: -17.31814956665039

Token 474: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.005274668801575899
    2. ' <' → logprob: -5.255274772644043
    3. '<=' → logprob: -10.130274772644043
    4. ' <=' → logprob: -15.130274772644043
    5. '<R' → logprob: -15.130274772644043
    6. '<n' → logprob: -15.505274772644043
    7. '<th' → logprob: -16.380273818969727
    8. '<m' → logprob: -17.130273818969727
    9. ' ' → logprob: -17.255273818969727
    10. '<len' → logprob: -17.255273818969727

Token 475: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007100477814674377
    2. ' r' → logprob: -7.2507100105285645
    3. '	r' → logprob: -17.875709533691406
    4. '_r' → logprob: -19.500709533691406
    5. ' ' → logprob: -20.375709533691406
    6. '   ' → logprob: -20.375709533691406
    7. '=r' → logprob: -21.125709533691406
    8. '(r' → logprob: -21.125709533691406
    9. '-r' → logprob: -21.625709533691406
    10. '[r' → logprob: -21.750709533691406

Token 476: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38721153140068054
    2. ':
' → logprob: -1.137211561203003
    3. '       ' → logprob: -8.887211799621582
    4. ' :
' → logprob: -9.512211799621582
    5. ' :' → logprob: -10.012211799621582
    6. ',' → logprob: -10.637211799621582
    7. ':
' → logprob: -11.137211799621582
    8. ' and' → logprob: -11.262211799621582
    9. '           ' → logprob: -11.512211799621582
    10. '):
' → logprob: -11.887211799621582

Token 477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029718761797994375
    2. ' if' → logprob: -6.127971649169922
    3. 'if' → logprob: -7.377971649169922
    4. '	       ' → logprob: -9.752971649169922
    5. '       ' → logprob: -11.127971649169922
    6. '   ' → logprob: -11.127971649169922
    7. '```' → logprob: -11.252971649169922
    8. '          ' → logprob: -11.252971649169922
    9. '            
' → logprob: -11.502971649169922
    10. '<|end|>' → logprob: -11.752971649169922

Token 478: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08106651902198792
    2. '           ' → logprob: -2.581066608428955
    3. ' if' → logprob: -6.206066608428955
    4. '   ' → logprob: -8.831066131591797
    5. ' ' → logprob: -12.581066131591797
    6. '	if' → logprob: -12.956066131591797
    7. 'If' → logprob: -13.581066131591797
    8. '		' → logprob: -14.081066131591797
    9. '               ' → logprob: -14.081066131591797
    10. '       ' → logprob: -14.331066131591797

Token 479: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007101670489646494
    2. ' l' → logprob: -7.2507100105285645
    3. '(l' → logprob: -16.000709533691406
    4. '   ' → logprob: -17.375709533691406
    5. '	l' → logprob: -17.625709533691406
    6. 'r' → logprob: -17.750709533691406
    7. ' ' → logprob: -18.125709533691406
    8. ' (' → logprob: -18.750709533691406
    9. '```' → logprob: -19.625709533691406
    10. '1' → logprob: -20.250709533691406

Token 480: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.008621551096439362
    2. ' &' → logprob: -4.758621692657471
    3. '&
' → logprob: -12.258621215820312
    4. '＆' → logprob: -14.258621215820312
    5. '%' → logprob: -14.633621215820312
    6. '&amp' → logprob: -14.883621215820312
    7. '&I' → logprob: -15.008621215820312
    8. '&nbsp' → logprob: -16.508621215820312
    9. '&B' → logprob: -17.008621215820312
    10. '&q' → logprob: -17.008621215820312

Token 481: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '１' → logprob: -19.125009536743164
    4. '   ' → logprob: -19.250009536743164
    5. '01' → logprob: -20.625009536743164
    6. '۱' → logprob: -21.125009536743164
    7. '#' → logprob: -21.625009536743164
    8. '১' → logprob: -22.125009536743164
    9. '{' → logprob: -22.250009536743164
    10. '
' → logprob: -22.500009536743164

Token 482: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '１' → logprob: -19.875
    4. '01' → logprob: -22.0
    5. '   ' → logprob: -22.5
    6. '
' → logprob: -22.625
    7. '۱' → logprob: -22.625
    8. '{' → logprob: -22.875
    9. '১' → logprob: -23.5
    10. '#' → logprob: -23.75

Token 483: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5766229629516602
    2. ':
' → logprob: -0.8266229629516602
    3. '==' → logprob: -7.57662296295166
    4. ' ==' → logprob: -9.70162296295166
    5. ' :' → logprob: -10.07662296295166
    6. '=' → logprob: -10.20162296295166
    7. ' :
' → logprob: -11.20162296295166
    8. ':
' → logprob: -11.82662296295166
    9. '):
' → logprob: -13.07662296295166
    10. '1' → logprob: -13.45162296295166

Token 484: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24047458171844482
    2. 'res' → logprob: -1.6154745817184448
    3. '           ' → logprob: -4.615474700927734
    4. ' res' → logprob: -5.365474700927734
    5. '	           ' → logprob: -9.740474700927734
    6. '	       ' → logprob: -9.865474700927734
    7. '<|end|>' → logprob: -9.865474700927734
    8. '
' → logprob: -10.115474700927734
    9. '		       ' → logprob: -10.240474700927734
    10. '	res' → logprob: -11.115474700927734

Token 485: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0019528986886143684
    2. ' res' → logprob: -6.501953125
    3. '               ' → logprob: -7.751953125
    4. '                   ' → logprob: -11.251953125
    5. '           ' → logprob: -12.376953125
    6. '	res' → logprob: -12.876953125
    7. '   ' → logprob: -15.376953125
    8. ' ' → logprob: -15.626953125
    9. '                ' → logprob: -16.251953125
    10. '
' → logprob: -16.376953125

Token 486: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=
' → logprob: -16.561967849731445
    4. '＝' → logprob: -18.061967849731445
    5. '=self' → logprob: -18.561967849731445
    6. '=

' → logprob: -19.186967849731445
    7. '.=' → logprob: -19.311967849731445
    8. ' ' → logprob: -19.436967849731445
    9. '   ' → logprob: -20.186967849731445
    10. ' =
' → logprob: -20.686967849731445

Token 487: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011703446507453918
    2. ' self' → logprob: -6.7511701583862305
    3. 'seg' → logprob: -16.751171112060547
    4. ' ' → logprob: -18.001171112060547
    5. '   ' → logprob: -18.376171112060547
    6. '           ' → logprob: -18.501171112060547
    7. '	self' → logprob: -18.501171112060547
    8. '(self' → logprob: -19.626171112060547
    9. '  ' → logprob: -19.876171112060547
    10. '```' → logprob: -20.001171112060547

Token 488: '.seg' (ID: 178516)
  Prédit: '.seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.seg' → logprob: -0.0024285749532282352
    2. 'seg' → logprob: -6.1274285316467285
    3. ' seg' → logprob: -9.252429008483887
    4. '.' → logprob: -10.127429008483887
    5. '_seg' → logprob: -10.627429008483887
    6. '.res' → logprob: -11.127429008483887
    7. '(seg' → logprob: -11.127429008483887
    8. '.sem' → logprob: -11.377429008483887
    9. 'Seg' → logprob: -12.252429008483887
    10. '.segment' → logprob: -12.377429008483887

Token 489: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: 0.0
    2. 'res' → logprob: -17.75
    3. ' func' → logprob: -18.375
    4. '(func' → logprob: -20.125
    5. '   ' → logprob: -20.5
    6. '	func' → logprob: -20.625
    7. '.func' → logprob: -20.75
    8. 'def' → logprob: -21.125
    9. '_func' → logprob: -21.375
    10. 'fun' → logprob: -21.375

Token 490: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. '(
' → logprob: -17.875001907348633
    4. ' (' → logprob: -17.875001907348633
    5. 'res' → logprob: -18.250001907348633
    6. ',res' → logprob: -19.125001907348633
    7. '   ' → logprob: -20.875001907348633
    8. '(result' → logprob: -21.750001907348633
    9. ',' → logprob: -22.250001907348633
    10. '(self' → logprob: -22.250001907348633

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.845798710244708e-05
    2. ',self' → logprob: -10.750038146972656
    3. ' ,' → logprob: -11.500038146972656
    4. 'self' → logprob: -12.625038146972656
    5. ',
' → logprob: -13.000038146972656
    6. ',res' → logprob: -13.875038146972656
    7. '(self' → logprob: -16.250038146972656
    8. '   ' → logprob: -17.000038146972656
    9. '       ' → logprob: -17.500038146972656
    10. 'res' → logprob: -17.500038146972656

Token 492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003178782993927598
    2. ' self' → logprob: -5.753178596496582
    3. '           ' → logprob: -14.628178596496582
    4. '   ' → logprob: -15.753178596496582
    5. '               ' → logprob: -15.878178596496582
    6. '       ' → logprob: -16.6281795501709
    7. ' ' → logprob: -16.8781795501709
    8. '(self' → logprob: -17.0031795501709
    9. '[self' → logprob: -17.3781795501709
    10. '	self' → logprob: -17.5031795501709

Token 493: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -6.349075556499884e-05
    2. 'tree' → logprob: -9.7500638961792
    3. '.' → logprob: -12.3750638961792
    4. ' .' → logprob: -14.7500638961792
    5. '	tree' → logprob: -15.3750638961792
    6. 'ree' → logprob: -15.8750638961792
    7. ' tree' → logprob: -16.250062942504883
    8. '.table' → logprob: -16.750062942504883
    9. '
' → logprob: -16.875062942504883
    10. '[' → logprob: -17.000062942504883

Token 494: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.3856492842023727e-06
    2. 'l' → logprob: -13.750000953674316
    3. '[' → logprob: -15.375000953674316
    4. '[
' → logprob: -18.000001907348633
    5. '	l' → logprob: -18.625001907348633
    6. '   ' → logprob: -18.875001907348633
    7. ' [' → logprob: -19.000001907348633
    8. ',l' → logprob: -19.375001907348633
    9. '
' → logprob: -19.875001907348633
    10. '```' → logprob: -20.625001907348633

Token 495: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2377154529094696
    2. '])
' → logprob: -1.737715482711792
    3. ')' → logprob: -3.862715482711792
    4. '])' → logprob: -4.237715244293213
    5. ' )
' → logprob: -8.987715721130371
    6. ')
' → logprob: -10.612715721130371
    7. ']
' → logprob: -11.612715721130371
    8. ']' → logprob: -11.737715721130371
    9. '])
' → logprob: -11.862715721130371
    10. ' )' → logprob: -12.362715721130371

Token 496: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00941368006169796
    2. ' l' → logprob: -4.884413719177246
    3. '           ' → logprob: -6.634413719177246
    4. 'l' → logprob: -7.884413719177246
    5. '   ' → logprob: -10.509413719177246
    6. '                
' → logprob: -10.634413719177246
    7. '	l' → logprob: -11.384413719177246
    8. ' ' → logprob: -11.634413719177246
    9. ',l' → logprob: -11.634413719177246
    10. '	           ' → logprob: -11.759413719177246

Token 497: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.08699692785739899
    2. ' l' → logprob: -3.0869970321655273
    3. '           ' → logprob: -3.7119970321655273
    4. '               ' → logprob: -4.336997032165527
    5. '                   ' → logprob: -8.836997032165527
    6. '	l' → logprob: -11.086997032165527
    7. '   ' → logprob: -11.836997032165527
    8. '       ' → logprob: -13.211997032165527
    9. '             ' → logprob: -13.586997032165527
    10. '            ' → logprob: -13.586997032165527

Token 498: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009118211455643177
    2. ' +=' → logprob: -7.000911712646484
    3. ']+=' → logprob: -16.000911712646484
    4. '=' → logprob: -16.375911712646484
    5. '+' → logprob: -16.625911712646484
    6. '+=(' → logprob: -20.750911712646484
    7. '   ' → logprob: -21.125911712646484
    8. '```' → logprob: -21.375911712646484
    9. '+="' → logprob: -22.000911712646484
    10. '++' → logprob: -22.000911712646484

Token 499: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -22.0
    4. '   ' → logprob: -22.875
    5. '１' → logprob: -23.875
    6. '
' → logprob: -24.5
    7. '۱' → logprob: -24.75
    8. '  ' → logprob: -25.625
    9. '१' → logprob: -26.25
    10. '১' → logprob: -26.375

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -21.5
    5. '１' → logprob: -23.125
    6. '
' → logprob: -23.125
    7. '۱' → logprob: -23.125
    8. '  ' → logprob: -23.625
    9. '१' → logprob: -25.0625
    10. '১' → logprob: -25.25

Token 501: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002509687910787761
    2. '       ' → logprob: -9.125250816345215
    3. '
' → logprob: -9.750250816345215
    4. '            
' → logprob: -10.375250816345215
    5. '          ' → logprob: -11.375250816345215
    6. '<|end|>' → logprob: -12.250250816345215
    7. '```' → logprob: -12.250250816345215
    8. '   ' → logprob: -12.875250816345215
    9. ' 
' → logprob: -13.000250816345215
    10. 'r' → logprob: -13.000250816345215

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001182052365038544
    2. '       ' → logprob: -9.625118255615234
    3. '          ' → logprob: -10.500118255615234
    4. 'if' → logprob: -11.875118255615234
    5. ' if' → logprob: -12.375118255615234
    6. '```' → logprob: -12.375118255615234
    7. '         ' → logprob: -13.375118255615234
    8. 'r' → logprob: -13.500118255615234
    9. '   ' → logprob: -13.875118255615234
    10. '​' → logprob: -14.000118255615234

Token 503: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03009027987718582
    2. ' if' → logprob: -3.53009033203125
    3. '           ' → logprob: -8.03009033203125
    4. '       ' → logprob: -11.90509033203125
    5. 'r' → logprob: -12.53009033203125
    6. '   ' → logprob: -13.40509033203125
    7. 'while' → logprob: -13.65509033203125
    8. ' ' → logprob: -15.15509033203125
    9. '            
' → logprob: -15.15509033203125
    10. '```' → logprob: -15.65509033203125

Token 504: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.07889044284820557
    2. 'r' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.828890800476074
    4. '   ' → logprob: -15.828890800476074
    5. '	r' → logprob: -16.078889846801758
    6. ' ' → logprob: -17.453889846801758
    7. '(r' → logprob: -17.953889846801758
    8. '  ' → logprob: -18.328889846801758
    9. '_r' → logprob: -19.078889846801758
    10. ' not' → logprob: -20.078889846801758

Token 505: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.3868962824344635
    2. ' &' → logprob: -1.1368962526321411
    3. '&
' → logprob: -11.761896133422852
    4. ' ' → logprob: -11.886896133422852
    5. '&amp' → logprob: -12.261896133422852
    6. ' &=' → logprob: -13.136896133422852
    7. ' &
' → logprob: -13.511896133422852
    8. '&nbsp' → logprob: -14.136896133422852
    9. '   ' → logprob: -14.886896133422852
    10. '&r' → logprob: -15.261896133422852

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '-' → logprob: -18.87537956237793
    4. '   ' → logprob: -19.00037956237793
    5. '
' → logprob: -19.37537956237793
    6. 'r' → logprob: -19.75037956237793
    7. '１' → logprob: -20.25037956237793
    8. '>' → logprob: -20.31287956237793
    9. '#' → logprob: -20.62537956237793
    10. '```' → logprob: -21.12537956237793

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '-' → logprob: -16.750001907348633
    4. '
' → logprob: -18.625001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '```' → logprob: -20.625001907348633
    7. '>' → logprob: -20.750001907348633
    8. '{
' → logprob: -21.125001907348633
    9. '１' → logprob: -21.375001907348633
    10. '  ' → logprob: -21.500001907348633

Token 508: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6540776491165161
    2. ':' → logprob: -0.7790776491165161
    3. '               ' → logprob: -4.154077529907227
    4. '           ' → logprob: -6.154077529907227
    5. '==' → logprob: -6.654077529907227
    6. ' :' → logprob: -7.779077529907227
    7. ' ==' → logprob: -7.904077529907227
    8. '>' → logprob: -8.154077529907227
    9. ' :
' → logprob: -8.279077529907227
    10. '   ' → logprob: -8.779077529907227

Token 509: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00551725784316659
    2. '           ' → logprob: -5.755517482757568
    3. ':
' → logprob: -6.380517482757568
    4. '```' → logprob: -8.63051700592041
    5. ':' → logprob: -8.88051700592041
    6. '0' → logprob: -9.25551700592041
    7. '              ' → logprob: -10.00551700592041
    8. ' r' → logprob: -10.50551700592041
    9. ' ' → logprob: -10.75551700592041
    10. '   ' → logprob: -10.88051700592041

Token 510: ' res' (ID: 694)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018233763054013252
    2. ' r' → logprob: -4.018233776092529
    3. '               ' → logprob: -9.643233299255371
    4. '           ' → logprob: -11.393233299255371
    5. '   ' → logprob: -12.143233299255371
    6. 'res' (adapté à ' res') → logprob: -14.268233299255371
    7. ' ' → logprob: -14.768233299255371
    8. '
' → logprob: -14.893233299255371
    9. '                   ' → logprob: -15.268233299255371
    10. '       ' → logprob: -15.393233299255371

Token 511: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.6338872909545898
    2. ' -=' → logprob: -0.7588872909545898
    3. '-' → logprob: -7.13388729095459
    4. '           ' → logprob: -8.88388729095459
    5. '               ' → logprob: -9.00888729095459
    6. '>' → logprob: -9.25888729095459
    7. '=' → logprob: -10.00888729095459
    8. '   ' → logprob: -10.25888729095459
    9. ' ' → logprob: -11.63388729095459
    10. '```' → logprob: -11.75888729095459

Token 512: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07891743630170822
    2. ' self' → logprob: -2.5789175033569336
    3. '               ' → logprob: -11.203917503356934
    4. '           ' → logprob: -11.453917503356934
    5. '   ' → logprob: -14.078917503356934
    6. ' ' → logprob: -14.328917503356934
    7. '(self' → logprob: -14.703917503356934
    8. '	self' → logprob: -14.953917503356934
    9. '                   ' → logprob: -15.078917503356934
    10. '[self' → logprob: -15.078917503356934

Token 513: '.seg' (ID: 178516)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1130478382110596
    2. 'seg' → logprob: -1.1130478382110596
    3. '.seg' → logprob: -1.9880478382110596
    4. '
' → logprob: -2.4880478382110596
    5. ' seg' → logprob: -3.7380478382110596
    6. ' =' → logprob: -4.3630475997924805
    7. 'res' → logprob: -4.3630475997924805
    8. ' self' → logprob: -4.4880475997924805
    9. ',' → logprob: -5.2380475997924805
    10. 'def' → logprob: -5.3630475997924805

Token 514: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.00010437761375214905
    2. '.func' → logprob: -10.500103950500488
    3. '   ' → logprob: -10.875103950500488
    4. '       ' → logprob: -10.875103950500488
    5. '               ' → logprob: -11.125103950500488
    6. '           ' → logprob: -12.000103950500488
    7. '_func' → logprob: -12.375103950500488
    8. '[self' → logprob: -12.875103950500488
    9. ' func' → logprob: -13.125103950500488
    10. '(func' → logprob: -13.125103950500488

Token 515: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.8624639324116288e-06
    2. ' (' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '(' → logprob: -15.625001907348633
    5. '(
' → logprob: -16.500001907348633
    6. '       ' → logprob: -16.750001907348633
    7. ' ' → logprob: -16.750001907348633
    8. '           ' → logprob: -17.625001907348633
    9. 'res' → logprob: -18.250001907348633
    10. '     ' → logprob: -18.375001907348633

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014047559816390276
    2. ',self' → logprob: -7.251404762268066
    3. ' ,' → logprob: -7.376404762268066
    4. ',
' → logprob: -10.501404762268066
    5. '               ' → logprob: -10.626404762268066
    6. '           ' → logprob: -12.501404762268066
    7. 'self' → logprob: -12.876404762268066
    8. '(self' → logprob: -13.126404762268066
    9. '   ' → logprob: -13.251404762268066
    10. ',r' → logprob: -13.376404762268066

Token 517: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00071386230411008
    2. ' self' → logprob: -7.25071382522583
    3. '               ' → logprob: -12.750714302062988
    4. '           ' → logprob: -14.500714302062988
    5. '   ' → logprob: -15.500714302062988
    6. '[self' → logprob: -16.250713348388672
    7. ' ' → logprob: -16.375713348388672
    8. '                   ' → logprob: -17.000713348388672
    9. '(self' → logprob: -17.375713348388672
    10. '  ' → logprob: -17.500713348388672

Token 518: '.tree' (ID: 49211)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007017049007117748
    2. 'r' → logprob: -5.257017135620117
    3. '[r' → logprob: -6.632017135620117
    4. ' -' → logprob: -7.882017135620117
    5. '[' → logprob: -10.257017135620117
    6. ')' → logprob: -11.507017135620117
    7. ' r' → logprob: -11.757017135620117
    8. '
' → logprob: -12.007017135620117
    9. '1' → logprob: -12.132017135620117
    10. '[self' → logprob: -12.632017135620117

Token 519: '[r' (ID: 33265)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02663535252213478
    2. '[r' → logprob: -3.7766354084014893
    3. ' -' → logprob: -6.27663516998291
    4. '[' → logprob: -7.15163516998291
    5. 'r' → logprob: -7.27663516998291
    6. '   ' → logprob: -11.52663516998291
    7. '[-' → logprob: -12.52663516998291
    8. ' r' → logprob: -12.77663516998291
    9. '[
' → logprob: -12.90163516998291
    10. ' ' → logprob: -13.27663516998291

Token 520: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20142687857151031
    2. ' -' → logprob: -1.7014268636703491
    3. ' ' → logprob: -11.45142650604248
    4. '   ' → logprob: -13.32642650604248
    5. '  ' → logprob: -14.20142650604248
    6. ')' → logprob: -14.82642650604248
    7. ' ' → logprob: -15.95142650604248
    8. '1' → logprob: -16.576427459716797
    9. '–' → logprob: -16.701427459716797
    10. '−' → logprob: -16.701427459716797

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.625009536743164
    4. '           ' → logprob: -16.125009536743164
    5. '               ' → logprob: -17.625009536743164
    6. '       ' → logprob: -17.750009536743164
    7. '```' → logprob: -17.875009536743164
    8. '                   ' → logprob: -18.125009536743164
    9. ')' → logprob: -19.250009536743164
    10. '  ' → logprob: -19.375009536743164

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.625
    4. ')' → logprob: -19.25
    5. '```' → logprob: -19.375
    6. '])' → logprob: -20.625
    7. '  ' → logprob: -20.625
    8. '           ' → logprob: -20.625
    9. '       ' → logprob: -21.125
    10. ']' → logprob: -21.3125

Token 523: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3871321976184845
    2. ')' → logprob: -1.137132167816162
    3. '               ' → logprob: -8.63713264465332
    4. '           ' → logprob: -10.01213264465332
    5. ')
' → logprob: -10.38713264465332
    6. ' )
' → logprob: -12.76213264465332
    7. ')

' → logprob: -13.88713264465332
    8. '       ' → logprob: -14.13713264465332
    9. '),' → logprob: -14.13713264465332
    10. ')`
' → logprob: -14.13713264465332

Token 524: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6382480263710022
    2. '           ' → logprob: -0.7632480263710022
    3. '       ' → logprob: -5.763247966766357
    4. 'r' → logprob: -6.638247966766357
    5. '   ' → logprob: -7.138247966766357
    6. ' r' → logprob: -8.013248443603516
    7. '                   ' → logprob: -10.763248443603516
    8. '             ' → logprob: -12.388248443603516
    9. ' ' → logprob: -12.513248443603516
    10. '              ' → logprob: -12.513248443603516

Token 525: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.013908322900533676
    2. ' r' → logprob: -5.013908386230469
    3. '           ' → logprob: -6.138908386230469
    4. '   ' → logprob: -6.263908386230469
    5. '               ' → logprob: -6.263908386230469
    6. '       ' → logprob: -6.763908386230469
    7. '                   ' → logprob: -11.138908386230469
    8. '    ' → logprob: -12.013908386230469
    9. '     ' → logprob: -12.513908386230469
    10. '  ' → logprob: -12.638908386230469

Token 526: ' >>=' (ID: 81952)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.491611123085022
    2. '>>' → logprob: -1.741611123085022
    3. ' >>=' → logprob: -1.991611123085022
    4. ' +=' → logprob: -2.6166110038757324
    5. ',' → logprob: -5.866611003875732
    6. '=' → logprob: -7.991611003875732
    7. ' <<=' → logprob: -8.86661148071289
    8. '>>>' → logprob: -9.24161148071289
    9. '   ' → logprob: -10.24161148071289
    10. ' ,' → logprob: -10.49161148071289

Token 527: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.000001907348633
    4. '0' → logprob: -16.000001907348633
    5. '       ' → logprob: -17.875001907348633
    6. '```' → logprob: -17.875001907348633
    7. '           ' → logprob: -19.875001907348633
    8. '
' → logprob: -20.500001907348633
    9. '１' → logprob: -21.500001907348633
    10. '' → logprob: -21.500001907348633

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '0' → logprob: -17.75
    4. '   ' → logprob: -18.875
    5. '
' → logprob: -19.75
    6. '       ' → logprob: -21.875
    7. '' → logprob: -22.125
    8. '```' → logprob: -22.25
    9. '１' → logprob: -23.375
    10. '  ' → logprob: -23.5

Token 529: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14534609019756317
    2. 'r' → logprob: -2.020346164703369
    3. '   ' → logprob: -6.645346164703369
    4. '       ' → logprob: -6.770346164703369
    5. ' r' → logprob: -9.145345687866211
    6. '               ' → logprob: -10.020345687866211
    7. ' ' → logprob: -11.020345687866211
    8. '          ' → logprob: -11.270345687866211
    9. ',r' → logprob: -11.270345687866211
    10. '         ' → logprob: -12.395345687866211

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03167321905493736
    2. 'r' → logprob: -3.7816731929779053
    3. '       ' → logprob: -4.906673431396484
    4. '   ' → logprob: -7.031673431396484
    5. '               ' → logprob: -9.781673431396484
    6. '```' → logprob: -10.906673431396484
    7. ' r' → logprob: -11.031673431396484
    8. ',r' → logprob: -11.906673431396484
    9. '          ' → logprob: -12.531673431396484
    10. '``' → logprob: -13.656673431396484

Token 531: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -2.7610454708337784e-05
    2. ' r' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.37502670288086
    4. '           ' → logprob: -18.12502670288086
    5. '       ' → logprob: -18.50002670288086
    6. '	r' → logprob: -19.00002670288086
    7. ' ' → logprob: -20.00002670288086
    8. '  ' → logprob: -21.12502670288086
    9. '    ' → logprob: -22.50002670288086
    10. '     ' → logprob: -23.00002670288086

Token 532: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.00018149138486478478
    2. ' >>=' → logprob: -8.625181198120117
    3. '=' → logprob: -14.125181198120117
    4. '>>>' → logprob: -14.250181198120117
    5. '//=' → logprob: -15.875181198120117
    6. '-=' → logprob: -16.375181198120117
    7. ')>>' → logprob: -16.625181198120117
    8. '   ' → logprob: -17.500181198120117
    9. '>' → logprob: -17.750181198120117
    10. ' ' → logprob: -17.875181198120117

Token 533: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.500001907348633
    4. '```' → logprob: -19.375001907348633
    5. '<|end|>' → logprob: -19.625001907348633
    6. '0' → logprob: -20.375001907348633
    7. '	' → logprob: -20.875001907348633
    8. '۱' → logprob: -20.875001907348633
    9. '１' → logprob: -20.875001907348633
    10. '       ' → logprob: -21.375001907348633

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '   ' → logprob: -19.125
    4. '<|end|>' → logprob: -20.75
    5. '```' → logprob: -20.75
    6. '0' → logprob: -21.25
    7. '۱' → logprob: -21.875
    8. '१' → logprob: -22.5
    9. '2' → logprob: -22.625
    10. '১' → logprob: -22.875

Token 535: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0592995285987854
    2. '           ' → logprob: -3.1842994689941406
    3. '<|end|>' → logprob: -4.559299468994141
    4. 'return' → logprob: -5.434299468994141
    5. ' return' → logprob: -7.434299468994141
    6. 'r' → logprob: -8.80929946899414
    7. '   ' → logprob: -9.05929946899414
    8. ' r' → logprob: -9.30929946899414
    9. ':return' → logprob: -9.43429946899414
    10. '<|end|>' → logprob: -9.93429946899414

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1785021722316742
    2. '           ' → logprob: -2.178502082824707
    3. 'return' → logprob: -3.053502082824707
    4. 'r' → logprob: -6.053502082824707
    5. ' return' → logprob: -7.803502082824707
    6. '   ' → logprob: -9.428502082824707
    7. '```' → logprob: -9.678502082824707
    8. ':return' → logprob: -10.053502082824707
    9. '               ' → logprob: -10.928502082824707
    10. '<|end|>' → logprob: -11.178502082824707

Token 537: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.042923249304294586
    2. '       ' → logprob: -3.5429232120513916
    3. 'r' → logprob: -4.667923450469971
    4. ' return' → logprob: -5.667923450469971
    5. '           ' → logprob: -9.042922973632812
    6. ' r' → logprob: -10.042922973632812
    7. '   ' → logprob: -10.167922973632812
    8. '```' → logprob: -10.792922973632812
    9. '	return' → logprob: -12.042922973632812
    10. '               ' → logprob: -12.292922973632812

Token 538: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06196768581867218
    2. ' res' → logprob: -2.811967611312866
    3. '	res' → logprob: -16.936967849731445
    4. 'r' → logprob: -18.186967849731445
    5. '(res' → logprob: -18.686967849731445
    6. ' ' → logprob: -19.186967849731445
    7. 're' → logprob: -19.311967849731445
    8. ' ' → logprob: -19.436967849731445
    9. '$res' → logprob: -19.686967849731445
    10. '_res' → logprob: -19.936967849731445

Token 539: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39924973249435425
    2. '       ' → logprob: -1.149249792098999
    3. '               ' → logprob: -5.39924955368042
    4. 'r' → logprob: -5.64924955368042
    5. '<|end|>' → logprob: -6.89924955368042
    6. '   ' → logprob: -7.02424955368042
    7. '```' → logprob: -7.52424955368042
    8. '          ' → logprob: -8.399250030517578
    9. '[' → logprob: -8.524250030517578
    10. '        ' → logprob: -8.649250030517578

Token 540: 'input' (ID: 2586)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0629669576883316
    2. '           ' → logprob: -3.06296706199646
    3. '       ' → logprob: -4.312966823577881
    4. '               ' → logprob: -7.937966823577881
    5. '   ' → logprob: -8.187967300415039
    6. ' r' → logprob: -8.937967300415039
    7. '	r' → logprob: -10.062967300415039
    8. '          ' → logprob: -11.437967300415039
    9. '         ' → logprob: -11.812967300415039
    10. '            ' → logprob: -11.812967300415039

Token 541: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6366633176803589
    2. '=' → logprob: -0.8866633176803589
    3. ' =' → logprob: -2.8866634368896484
    4. '().' → logprob: -6.511663436889648
    5. '(' → logprob: -7.511663436889648
    6. '.readline' → logprob: -8.511663436889648
    7. '()>' → logprob: -9.011663436889648
    8. '.' → logprob: -9.136663436889648
    9. ')' → logprob: -9.261663436889648
    10. 'data' → logprob: -9.511663436889648

Token 542: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10021303594112396
    2. ' sys' → logprob: -2.350213050842285
    3. 'input' → logprob: -13.100213050842285
    4. '=sys' → logprob: -13.100213050842285
    5. '	sys' → logprob: -13.225213050842285
    6. '(sys' → logprob: -15.225213050842285
    7. 'lambda' → logprob: -16.60021209716797
    8. ' ' → logprob: -16.85021209716797
    9. ' input' → logprob: -17.10021209716797
    10. '```' → logprob: -17.97521209716797

Token 543: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06873609870672226
    2. '.' → logprob: -2.8187360763549805
    3. '.readline' → logprob: -5.1937360763549805
    4. '.std' → logprob: -7.9437360763549805
    5. '.stdout' → logprob: -8.06873607635498
    6. 'stdin' → logprob: -8.69373607635498
    7. '.input' → logprob: -9.81873607635498
    8. '._' → logprob: -9.94373607635498
    9. '.__' → logprob: -9.94373607635498
    10. ' .' → logprob: -10.19373607635498

Token 544: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00035691517405211926
    2. '.read' → logprob: -8.125356674194336
    3. '.' → logprob: -10.250356674194336
    4. '.readlines' → logprob: -11.375356674194336
    5. '.buffer' → logprob: -12.375356674194336
    6. '.stdin' → logprob: -12.375356674194336
    7. 'read' → logprob: -12.375356674194336
    8. ' readline' → logprob: -14.500356674194336
    9. ')' → logprob: -15.250356674194336
    10. '.Read' → logprob: -15.625356674194336

Token 545: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19290459156036377
    2. 'N' → logprob: -1.9429045915603638
    3. 'Q' → logprob: -3.692904472351074
    4. '#' → logprob: -5.817904472351074
    5. 'q' → logprob: -6.317904472351074
    6. 'def' → logprob: -6.817904472351074
    7. 't' → logprob: -7.067904472351074
    8. 'class' → logprob: -8.442904472351074
    9. 'T' → logprob: -8.817904472351074
    10. 'H' → logprob: -10.692904472351074

Token 547: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002026304369792342
    2. ' =' → logprob: -7.002026081085205
    3. '=' → logprob: -7.752026081085205
    4. ' ,' → logprob: -7.752026081085205
    5. ',N' → logprob: -8.877026557922363
    6. ',K' → logprob: -10.627026557922363
    7. ',n' → logprob: -11.252026557922363
    8. ',k' → logprob: -11.377026557922363
    9. ',r' → logprob: -11.502026557922363
    10. ',M' → logprob: -11.627026557922363

Token 548: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005265425890684128
    2. ' int' → logprob: -5.255265235900879
    3. '10' → logprob: -10.505265235900879
    4. ' ' → logprob: -13.130265235900879
    5. '5' → logprob: -13.880265235900879
    6. '20' → logprob: -15.505265235900879
    7. '0' → logprob: -15.630265235900879
    8. '(int' → logprob: -15.880265235900879
    9. '[int' → logprob: -15.880265235900879
    10. '7' → logprob: -16.630266189575195

Token 549: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.42480963468551636
    2. '()' → logprob: -1.1748096942901611
    3. '(' → logprob: -3.424809694290161
    4. '(sys' → logprob: -5.424809455871582
    5. 'input' → logprob: -8.549809455871582
    6. ' ()' → logprob: -9.799809455871582
    7. '('' → logprob: -11.799809455871582
    8. ' (' → logprob: -13.049809455871582
    9. '(
' → logprob: -13.299809455871582
    10. '();' → logprob: -13.924809455871582

Token 550: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005422769580036402
    2. '().' → logprob: -5.255422592163086
    3. '()' → logprob: -8.630422592163086
    4. ')' → logprob: -12.255422592163086
    5. '(' → logprob: -13.130422592163086
    6. ' ())' → logprob: -13.255422592163086
    7. '())
' → logprob: -13.505422592163086
    8. '()
' → logprob: -15.630422592163086
    9. '();)' → logprob: -15.755422592163086
    10. '())

' → logprob: -16.130422592163086

Token 551: 'beam' (ID: 95917)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14576007425785065
    2. 'arr' → logprob: -2.8957600593566895
    3. 'a' → logprob: -3.8957600593566895
    4. 'S' → logprob: -4.2707600593566895
    5. 'P' → logprob: -4.3957600593566895
    6. 'Q' → logprob: -4.7707600593566895
    7. 'M' → logprob: -6.1457600593566895
    8. 'K' → logprob: -6.1457600593566895
    9. 'H' → logprob: -6.2707600593566895
    10. 'X' → logprob: -6.2707600593566895

Token 552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05019323527812958
    2. '_width' → logprob: -3.4251933097839355
    3. '_size' → logprob: -4.8001933097839355
    4. '=' → logprob: -5.0501933097839355
    5. '=[]' → logprob: -7.1751933097839355
    6. 'width' → logprob: -7.8001933097839355
    7. '=[' → logprob: -8.925192832946777
    8. ' ' → logprob: -9.050192832946777
    9. ' =[' → logprob: -9.925192832946777
    10. '_search' → logprob: -10.050192832946777

Token 553: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05260385200381279
    2. '[]' → logprob: -3.0526039600372314
    3. '[random' → logprob: -6.177603721618652
    4. '[N' → logprob: -7.552603721618652
    5. '[(' → logprob: -7.802603721618652
    6. '[int' → logprob: -8.177603721618652
    7. '[max' → logprob: -8.302603721618652
    8. '100' → logprob: -9.677603721618652
    9. '[-' → logprob: -9.802603721618652
    10. '10' → logprob: -10.302603721618652

Token 554: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08791660517454147
    2. 'dp' → logprob: -3.087916612625122
    3. 'A' → logprob: -4.837916374206543
    4. 'ans' → logprob: -5.712916374206543
    5. 'beam' → logprob: -5.712916374206543
    6. 'initial' → logprob: -6.087916374206543
    7. 'arr' → logprob: -6.087916374206543
    8. 'seg' → logprob: -6.212916374206543
    9. 'heap' → logprob: -6.462916374206543
    10. 'S' → logprob: -6.712916374206543

Token 555: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005215498153120279
    2. ' _' → logprob: -6.005215644836426
    3. 'i' → logprob: -6.380215644836426
    4. ' i' → logprob: -7.255215644836426
    5. '_i' → logprob: -8.005215644836426
    6. '_N' → logprob: -15.005215644836426
    7. ' ' → logprob: -15.380215644836426
    8. ' in' → logprob: -15.630215644836426
    9. '_
' → logprob: -16.13021469116211
    10. '_=' → logprob: -16.25521469116211

Token 556: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030494937673211098
    2. 'in' → logprob: -3.5304949283599854
    3. ' ' → logprob: -7.2804951667785645
    4. '_' → logprob: -10.405494689941406
    5. ',' → logprob: -11.905494689941406
    6. 'range' → logprob: -12.280494689941406
    7. ')' → logprob: -12.530494689941406
    8. 'n' → logprob: -13.405494689941406
    9. '```' → logprob: -13.405494689941406
    10. ' _' → logprob: -13.780494689941406

Token 557: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006364276050589979
    2. ' range' → logprob: -7.375636577606201
    3. 'input' → logprob: -12.000636100769043
    4. 'in' → logprob: -14.000636100769043
    5. 'beam' → logprob: -14.250636100769043
    6. 'rang' → logprob: -14.875636100769043
    7. 'ran' → logprob: -15.000636100769043
    8. '	range' → logprob: -15.500636100769043
    9. '```' → logprob: -15.750636100769043
    10. '(range' → logprob: -15.875636100769043

Token 558: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00029744720086455345
    2. '(' → logprob: -8.125297546386719
    3. '(n' → logprob: -14.500297546386719
    4. '(
' → logprob: -15.375297546386719
    5. 'N' → logprob: -15.375297546386719
    6. '()' → logprob: -16.25029754638672
    7. '(M' → logprob: -16.87529754638672
    8. '((' → logprob: -17.00029754638672
    9. ' (' → logprob: -17.12529754638672
    10. '(B' → logprob: -17.12529754638672

Token 559: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14904265105724335
    2. '):' → logprob: -2.0240426063537598
    3. ')' → logprob: -5.64904260635376
    4. '+' → logprob: -6.02404260635376
    5. '   ' → logprob: -8.399043083190918
    6. '):
' → logprob: -9.149043083190918
    7. ':' → logprob: -10.524043083190918
    8. ' ):
' → logprob: -11.524043083190918
    9. ',' → logprob: -11.649043083190918
    10. ' +' → logprob: -11.899043083190918

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006765736034139991
    2. ' a' → logprob: -8.750676155090332
    3. ' s' → logprob: -9.000676155090332
    4. ' beam' → logprob: -9.000676155090332
    5. ' line' → logprob: -9.125676155090332
    6. 'a' → logprob: -9.500676155090332
    7. 'beam' → logprob: -11.125676155090332
    8. '   ' → logprob: -11.500676155090332
    9. ' x' → logprob: -11.750676155090332
    10. 'line' → logprob: -12.000676155090332

Token 561: ' beam' (ID: 36650)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14447897672653198
    2. 'x' → logprob: -2.7694790363311768
    3. 'l' → logprob: -3.6444790363311768
    4. 'beam' (adapté à ' beam') → logprob: -4.269478797912598
    5. 's' → logprob: -5.144478797912598
    6. 'c' → logprob: -5.394478797912598
    7. 'arr' → logprob: -5.644478797912598
    8. '   ' → logprob: -5.769478797912598
    9. 'v' → logprob: -6.144478797912598
    10. 'A' → logprob: -6.269478797912598

Token 562: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0021625140216201544
    2. ' =' → logprob: -6.877162456512451
    3. '.' → logprob: -7.752162456512451
    4. '=' → logprob: -8.00216293334961
    5. '.extend' → logprob: -8.75216293334961
    6. ' +=' → logprob: -9.12716293334961
    7. ' .' → logprob: -10.00216293334961
    8. '+=' → logprob: -10.87716293334961
    9. '   ' → logprob: -11.75216293334961
    10. 'a' → logprob: -12.12716293334961

Token 563: '(tuple' (ID: 133029)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.36734580993652344
    2. '(list' → logprob: -1.9923458099365234
    3. '(tuple' → logprob: -1.9923458099365234
    4. '(random' → logprob: -3.6173458099365234
    5. '(' → logprob: -5.492345809936523
    6. '((' → logprob: -7.242345809936523
    7. '(i' → logprob: -7.242345809936523
    8. '([' → logprob: -7.242345809936523
    9. '([]' → logprob: -7.242345809936523
    10. '(input' → logprob: -8.617345809936523

Token 564: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -11.750024795532227
    3. '(int' → logprob: -11.750024795532227
    4. 'map' → logprob: -12.875024795532227
    5. '(input' → logprob: -12.875024795532227
    6. '(sorted' → logprob: -13.000024795532227
    7. '(random' → logprob: -13.875024795532227
    8. ' map' → logprob: -16.000024795532227
    9. '(
' → logprob: -16.250024795532227
    10. '(list' → logprob: -16.875024795532227

Token 565: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00022439735766965896
    2. 'int' → logprob: -9.000224113464355
    3. ',int' → logprob: -9.375224113464355
    4. '(' → logprob: -11.375224113464355
    5. '<int' → logprob: -13.875224113464355
    6. '(
' → logprob: -14.125224113464355
    7. ' int' → logprob: -14.125224113464355
    8. '(str' → logprob: -14.250224113464355
    9. '[int' → logprob: -14.875224113464355
    10. '=int' → logprob: -15.000224113464355

Token 566: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.31365424394607544
    2. ',' → logprob: -1.3136541843414307
    3. '(input' → logprob: -7.93865442276001
    4. 'input' → logprob: -10.438653945922852
    5. ' ,' → logprob: -12.938653945922852
    6. ',(' → logprob: -13.313653945922852
    7. '(),' → logprob: -13.813653945922852
    8. '(' → logprob: -14.563653945922852
    9. ',
' → logprob: -15.563653945922852
    10. '   ' → logprob: -15.938653945922852

Token 567: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007100477814674377
    2. ' input' → logprob: -7.2507100105285645
    3. ',input' → logprob: -17.375709533691406
    4. '(input' → logprob: -17.625709533691406
    5. '   ' → logprob: -18.625709533691406
    6. '
' → logprob: -19.375709533691406
    7. '	input' → logprob: -19.375709533691406
    8. ' ' → logprob: -19.750709533691406
    9. '_input' → logprob: -20.500709533691406
    10. '.input' → logprob: -20.875709533691406

Token 568: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.696889623621246e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -16.500001907348633
    4. '(' → logprob: -19.250001907348633
    5. '.readline' → logprob: -19.500001907348633
    6. '()
' → logprob: -20.125001907348633
    7. '.' → logprob: -21.250001907348633
    8. '())))' → logprob: -21.375001907348633
    9. '().__' → logprob: -22.250001907348633
    10. '.strip' → logprob: -23.125001907348633

Token 569: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12731610238552094
    2. 'strip' → logprob: -2.1273159980773926
    3. 'rstrip' → logprob: -7.877315998077393
    4. 'read' → logprob: -11.75231647491455
    5. ' split' → logprob: -14.50231647491455
    6. '(split' → logprob: -15.75231647491455
    7. ' strip' → logprob: -16.252315521240234
    8. '().' → logprob: -17.377315521240234
    9. 'spl' → logprob: -18.252315521240234
    10. 's' → logprob: -18.377315521240234

Token 570: '())))' (ID: 168342)
  Prédit: '())))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.4350287616252899
    2. ')))' → logprob: -1.1850287914276123
    3. '()' → logprob: -3.3100287914276123
    4. '()))' → logprob: -4.685028553009033
    5. '())))
' → logprob: -7.435028553009033
    6. '())' → logprob: -7.935028553009033
    7. '(' → logprob: -9.060029029846191
    8. ')' → logprob: -9.435029029846191
    9. '))' → logprob: -9.560029029846191
    10. '().' → logprob: -11.060029029846191

Token 571: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: ' va' (ID: 3423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.44870924949646
    2. 'beam' → logprob: -1.57370924949646
    3. '#' → logprob: -1.82370924949646
    4. ' ' → logprob: -2.19870924949646
    5. 'sorted' → logprob: -2.32370924949646
    6. '<|end|>' → logprob: -2.32370924949646
    7. '[' → logprob: -4.198709487915039
    8. ' beam' → logprob: -4.573709487915039
    9. ' sorted' → logprob: -4.823709487915039
    10. '.sort' → logprob: -5.073709487915039

Token 576: ''est' (ID: 6616)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9713218212127686
    2. '?' → logprob: -2.2213218212127686
    3. ' pas' → logprob: -2.4713218212127686
    4. 'pas' → logprob: -2.5963218212127686
    5. '')' → logprob: -3.0963218212127686
    6. ' marcher' → logprob: -3.4713218212127686
    7. ' bien' → logprob: -3.9713218212127686
    8. ' marche' → logprob: -4.096322059631348
    9. 'n't' → logprob: -4.096322059631348
    10. 'a' → logprob: -4.221322059631348

Token 577: ' classique' (ID: 76895)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.8945105075836182
    2. 'bon' → logprob: -2.269510507583618
    3. 'tout' → logprob: -2.394510507583618
    4. 'pas' → logprob: -3.019510507583618
    5. ' ok' → logprob: -3.144510507583618
    6. 'bien' → logprob: -3.394510507583618
    7. 'tri' → logprob: -3.769510507583618
    8. 'correct' → logprob: -4.269510269165039
    9. 'OK' → logprob: -4.269510269165039
    10. ' tri' → logprob: -4.394510269165039

Token 578: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: 'def' (ID: 1314)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.01753915473818779
    2. 'max' → logprob: -5.017539024353027
    3. '#' → logprob: -5.642539024353027
    4. 'dp' → logprob: -6.017539024353027
    5. 'M' → logprob: -7.017539024353027
    6. 'Q' → logprob: -7.392539024353027
    7. 'sorted' → logprob: -7.892539024353027
    8. 'heap' → logprob: -8.142539024353027
    9. 'best' → logprob: -8.392539024353027
    10. ' beam' → logprob: -8.642539024353027

Token 580: ' solve' (ID: 17722)
  Prédit: ' beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.46267062425613403
    2. ' solve' → logprob: -1.2126705646514893
    3. ' main' → logprob: -3.3376705646514893
    4. ' max' → logprob: -4.962670803070068
    5. 'solve' → logprob: -5.087670803070068
    6. ' binary' → logprob: -5.587670803070068
    7. ' find' → logprob: -5.837670803070068
    8. ' calc' → logprob: -5.837670803070068
    9. 'beam' → logprob: -6.087670803070068
    10. ' best' → logprob: -6.337670803070068

Token 581: '2' (ID: 17)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013965456746518612
    2. '(' → logprob: -6.876396656036377
    3. ' ():' → logprob: -8.376396179199219
    4. '():
' → logprob: -9.376396179199219
    5. '()' → logprob: -10.876396179199219
    6. '(N' → logprob: -11.751396179199219
    7. '(a' → logprob: -12.251396179199219
    8. '(l' → logprob: -12.501396179199219
    9. '(:' → logprob: -12.876396179199219
    10. '(i' → logprob: -13.001396179199219

Token 582: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007970467209815979
    2. '(' → logprob: -5.007970333099365
    3. ' ():' → logprob: -7.632970333099365
    4. '(N' → logprob: -8.632970809936523
    5. '(l' → logprob: -9.257970809936523
    6. '(a' → logprob: -9.257970809936523
    7. '(b' → logprob: -9.257970809936523
    8. '():
' → logprob: -9.507970809936523
    9. '(i' → logprob: -10.132970809936523
    10. '()' → logprob: -10.257970809936523

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001475220051361248
    2. ' res' → logprob: -9.625147819519043
    3. ' max' → logprob: -11.125147819519043
    4. ' n' → logprob: -11.500147819519043
    5. 'n' → logprob: -11.500147819519043
    6. ' ans' → logprob: -11.875147819519043
    7. '   ' → logprob: -12.000147819519043
    8. '    
' → logprob: -12.500147819519043
    9. ' heap' → logprob: -12.625147819519043
    10. 'max' → logprob: -12.750147819519043

Token 584: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2101168930530548
    2. 'beam' → logprob: -2.7101168632507324
    3. 'res' → logprob: -3.5851168632507324
    4. '   ' → logprob: -3.9601168632507324
    5. 'n' → logprob: -4.335116863250732
    6. 'heap' → logprob: -4.585116863250732
    7. 'ans' → logprob: -4.960116863250732
    8. 'from' → logprob: -5.460116863250732
    9. 'max' → logprob: -5.585116863250732
    10. 'K' → logprob: -5.585116863250732

Token 585: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3508358597755432
    2. 'beam' → logprob: -2.1008358001708984
    3. 'from' → logprob: -3.7258358001708984
    4. 'res' → logprob: -3.7258358001708984
    5. 'heap' → logprob: -3.9758358001708984
    6. 'global' → logprob: -3.9758358001708984
    7. '   ' → logprob: -4.725835800170898
    8. '#' → logprob: -4.725835800170898
    9. 'ans' → logprob: -4.975835800170898
    10. 'max' → logprob: -5.100835800170898

Token 586: ' trie' (ID: 139428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09920194000005722
    2. 'import' → logprob: -3.8492019176483154
    3. 'def' → logprob: -4.4742021560668945
    4. ' n' → logprob: -4.7242021560668945
    5. 'n' → logprob: -4.7242021560668945
    6. '#' → logprob: -5.0992021560668945
    7. ' global' → logprob: -5.0992021560668945
    8. 'global' → logprob: -5.3492021560668945
    9. 'from' → logprob: -5.4742021560668945
    10. 'max' → logprob: -5.8492021560668945

Token 587: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6062890291213989
    2. '(' → logprob: -0.8562890291213989
    3. 'beam' → logprob: -3.6062889099121094
    4. '()' → logprob: -6.606288909912109
    5. 'def' → logprob: -7.606288909912109
    6. ' beam' → logprob: -8.85628890991211
    7. '(
' → logprob: -9.10628890991211
    8. ')' → logprob: -9.35628890991211
    9. ':' → logprob: -9.73128890991211
    10. '  ' → logprob: -9.85628890991211

Token 588: ' le' (ID: 505)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.13461793959140778
    2. 'x' → logprob: -2.259618043899536
    3. 'beam' → logprob: -4.134617805480957
    4. ' lambda' → logprob: -6.884617805480957
    5. '-' → logprob: -6.884617805480957
    6. 'key' → logprob: -7.259617805480957
    7. 'reverse' → logprob: -7.509617805480957
    8. 'lam' → logprob: -8.009617805480957
    9. 'len' → logprob: -8.009617805480957
    10. 'l' → logprob: -8.134617805480957

Token 589: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.822239875793457
    2. 'lambda' → logprob: -1.572239875793457
    3. '0' → logprob: -1.947239875793457
    4. '[' → logprob: -2.447239875793457
    5. '1' → logprob: -3.197239875793457
    6. 'first' → logprob: -3.947239875793457
    7. 'prem' → logprob: -4.322239875793457
    8. 'beam' → logprob: -4.822239875793457
    9. 'max' → logprob: -5.322239875793457
    10. 'start' → logprob: -5.447239875793457

Token 590: '2' (ID: 17)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3225083351135254
    2. '0' → logprob: -1.8225083351135254
    3. '[' → logprob: -2.4475083351135254
    4. '1' → logprob: -3.6975083351135254
    5. 'x' → logprob: -6.322508335113525
    6. 'item' → logprob: -8.322507858276367
    7. 'reverse' → logprob: -9.072507858276367
    8. 'lam' → logprob: -9.197507858276367
    9. '-' → logprob: -9.322507858276367
    10. '2' → logprob: -9.947507858276367

Token 591: 'ème' (ID: 9767)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.8635615110397339
    2. 'e' → logprob: -1.3635615110397339
    3. 'ème' → logprob: -1.9885615110397339
    4. ']' → logprob: -2.8635616302490234
    5. 'eme' → logprob: -2.9885616302490234
    6. 'ième' → logprob: -3.3635616302490234
    7. '[' → logprob: -4.113561630249023
    8. 'ieme' → logprob: -4.238561630249023
    9. ' eme' → logprob: -5.738561630249023
    10. 'è' → logprob: -5.988561630249023

Token 592: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.1051589250564575
    2. 'element' → logprob: -1.3551589250564575
    3. 'beam' → logprob: -1.7301589250564575
    4. 'key' → logprob: -2.105158805847168
    5. 'elem' → logprob: -3.230158805847168
    6. ',' → logprob: -3.980158805847168
    7. 'index' → logprob: -4.355158805847168
    8. 'indice' → logprob: -4.980158805847168
    9. ' élément' → logprob: -5.105158805847168
    10. '_key' → logprob: -5.480158805847168

Token 593: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020425561524461955
    2. '(' → logprob: -9.000204086303711
    3. ',' → logprob: -10.375204086303711
    4. ':' → logprob: -10.875204086303711
    5. '       ' → logprob: -11.875204086303711
    6. 'beam' → logprob: -12.125204086303711
    7. 'sorted' → logprob: -12.125204086303711
    8. '.' → logprob: -12.750204086303711
    9. ')' → logprob: -13.250204086303711
    10. '```' → logprob: -13.625204086303711

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013758889399468899
    2. 'beam' → logprob: -4.388758659362793
    3. ' beam' → logprob: -7.013758659362793
    4. ',' → logprob: -8.138758659362793
    5. 'sorted' → logprob: -11.263758659362793
    6. ')' → logprob: -11.388758659362793
    7. '   ' → logprob: -12.513758659362793
    8. '    
' → logprob: -12.888758659362793
    9. '    ' → logprob: -13.013758659362793
    10. '.' → logprob: -13.388758659362793

Token 595: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' (adapté à ' beam') → logprob: -0.015849944204092026
    2. '   ' → logprob: -4.265850067138672
    3. ' beam' → logprob: -6.640850067138672
    4. 'global' → logprob: -8.265850067138672
    5. 'sorted' → logprob: -9.390850067138672
    6. 'be' → logprob: -10.890850067138672
    7. ' ' → logprob: -12.390850067138672
    8. 'b' → logprob: -12.640850067138672
    9. 'heap' → logprob: -13.140850067138672
    10. 'beat' → logprob: -13.640850067138672

Token 596: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.002667926950380206
    2. '.' → logprob: -6.0026679039001465
    3. '=' → logprob: -8.627668380737305
    4. '.sorted' → logprob: -11.877668380737305
    5. '_sorted' → logprob: -12.627668380737305
    6. ' .' → logprob: -14.127668380737305
    7. 'sorted' → logprob: -14.377668380737305
    8. 'sort' → logprob: -14.502668380737305
    9. ' =' → logprob: -14.627668380737305
    10. '.s' → logprob: -15.127668380737305

Token 597: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00026217024424113333
    2. '()' → logprob: -8.250262260437012
    3. '()
' → logprob: -15.125262260437012
    4. 'key' → logprob: -15.125262260437012
    5. '(reverse' → logprob: -15.125262260437012
    6. '(' → logprob: -17.125261306762695
    7. ',key' → logprob: -20.000261306762695
    8. ' key' → logprob: -20.000261306762695
    9. '()

' → logprob: -20.375261306762695
    10. '(lambda' → logprob: -20.625261306762695

Token 598: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -9.686778503237292e-05
    2. '=' → logprob: -9.250097274780273
    3. 'lambda' → logprob: -14.125097274780273
    4. '(lambda' → logprob: -18.125097274780273
    5. ' =' → logprob: -18.625097274780273
    6. '=
' → logprob: -19.375097274780273
    7. ' lambda' → logprob: -21.000097274780273
    8. '=l' → logprob: -21.125097274780273
    9. '=item' → logprob: -22.000097274780273
    10. '=\' → logprob: -22.375097274780273

Token 599: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132803440093994
    2. ' x' → logprob: -1.3132803440093994
    3. 'b' → logprob: -11.81328010559082
    4. 't' → logprob: -12.68828010559082
    5. 'a' → logprob: -12.68828010559082
    6. ' b' → logprob: -13.93828010559082
    7. 'y' → logprob: -13.93828010559082
    8. ' a' → logprob: -14.06328010559082
    9. 'e' → logprob: -14.43828010559082
    10. ' ' → logprob: -15.31328010559082

Token 600: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034654809860512614
    2. ':x' → logprob: -8.000346183776855
    3. ' :' → logprob: -11.500346183776855
    4. 'x' → logprob: -14.125346183776855
    5. ':
' → logprob: -15.500346183776855
    6. '：' → logprob: -17.875347137451172
    7. ' x' → logprob: -18.000347137451172
    8. '=' → logprob: -18.250347137451172
    9. '   ' → logprob: -18.375347137451172
    10. '```' → logprob: -18.625347137451172

Token 601: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005233882926404476
    2. ' x' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.880233764648438
    4. '	x' → logprob: -17.505233764648438
    5. ' ' → logprob: -17.630233764648438
    6. '(x' → logprob: -18.130233764648438
    7. ')x' → logprob: -19.255233764648438
    8. '  ' → logprob: -19.380233764648438
    9. '-' → logprob: -19.755233764648438
    10. '    ' → logprob: -19.880233764648438

Token 602: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. ':' → logprob: -12.625004768371582
    3. ' [' → logprob: -13.500004768371582
    4. '.' → logprob: -16.6250057220459
    5. '[
' → logprob: -16.6250057220459
    6. ')[' → logprob: -16.7500057220459
    7. '
' → logprob: -17.0000057220459
    8. '1' → logprob: -17.0000057220459
    9. '][' → logprob: -17.7500057220459
    10. ':[' → logprob: -17.8750057220459

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.125008583068848
    3. '
' → logprob: -13.875008583068848
    4. ':' → logprob: -14.000008583068848
    5. '0' → logprob: -14.750008583068848
    6. '   ' → logprob: -14.750008583068848
    7. '[' → logprob: -15.250008583068848
    8. 'x' → logprob: -16.125009536743164
    9. '```' → logprob: -16.500009536743164
    10. '  ' → logprob: -16.750009536743164

Token 604: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019235177896916866
    2. '])' → logprob: -6.376923561096191
    3. ',' → logprob: -8.876923561096191
    4. ' )' → logprob: -10.251923561096191
    5. '))' → logprob: -11.126923561096191
    6. ')
' → logprob: -11.501923561096191
    7. '})' → logprob: -11.751923561096191
    8. '),' → logprob: -12.376923561096191
    9. '>)' → logprob: -12.376923561096191
    10. ')#' → logprob: -13.751923561096191

Token 605: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06092468276619911
    2. 'max' → logprob: -3.310924768447876
    3. '
' → logprob: -5.310924530029297
    4. 'n' → logprob: -5.435924530029297
    5. ' max' → logprob: -5.560924530029297
    6. '<|end|>' → logprob: -5.935924530029297
    7. 'm' → logprob: -7.060924530029297
    8. '    
' → logprob: -7.060924530029297
    9. 'count' → logprob: -7.435924530029297
    10. 'length' → logprob: -7.685924530029297

Token 606: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30960774421691895
    2. 'max' → logprob: -2.309607744216919
    3. 'n' → logprob: -3.559607744216919
    4. 'res' → logprob: -3.684607744216919
    5. 'st' → logprob: -3.809607744216919
    6. 'seg' → logprob: -4.05960750579834
    7. 'M' → logprob: -4.55960750579834
    8. 'ans' → logprob: -4.80960750579834
    9. 'from' → logprob: -5.18460750579834
    10. 'm' → logprob: -5.30960750579834

Token 607: ' Pré' (ID: 86400)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5267172455787659
    2. 'max' → logprob: -1.526717185974121
    3. 'res' → logprob: -3.776717185974121
    4. '#' → logprob: -4.151717185974121
    5. 'n' → logprob: -4.276717185974121
    6. 'st' → logprob: -4.401717185974121
    7. 'heap' → logprob: -4.526717185974121
    8. 'seg' → logprob: -4.901717185974121
    9. 'K' → logprob: -5.026717185974121
    10. 'stack' → logprob: -5.151717185974121

Token 608: '-cal' (ID: 84920)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0998130738735199
    2. 'f' → logprob: -2.8498129844665527
    3. 'sum' → logprob: -4.099812984466553
    4. 'c' → logprob: -4.849812984466553
    5. 's' → logprob: -4.974812984466553
    6. 'cis' → logprob: -6.224812984466553
    7. '#' → logprob: -7.224812984466553
    8. 'fixed' → logprob: -7.474812984466553
    9. 'v' → logprob: -7.724812984466553
    10. 'fx' → logprob: -7.974812984466553

Token 609: 'cul' (ID: 2885)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.0349574089050293
    2. 'al' → logprob: -1.5349574089050293
    3. 'cul' → logprob: -2.1599574089050293
    4. 'om' → logprob: -2.5349574089050293
    5. 'ulation' → logprob: -2.5349574089050293
    6. 'culation' → logprob: -2.6599574089050293
    7. 'c' → logprob: -3.1599574089050293
    8. 'alc' → logprob: -3.9099574089050293
    9. 'm' → logprob: -5.784957408905029
    10. 'u' → logprob: -5.909957408905029

Token 610: ' des' (ID: 731)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8955594301223755
    2. 'min' → logprob: -1.6455594301223755
    3. ' max' → logprob: -1.8955594301223755
    4. '   ' → logprob: -3.145559310913086
    5. ' min' → logprob: -3.270559310913086
    6. 's' → logprob: -3.270559310913086
    7. 'sum' → logprob: -3.520559310913086
    8. 'prefix' → logprob: -3.645559310913086
    9. 'suffix' → logprob: -4.270559310913086
    10. ' prefix' → logprob: -4.895559310913086

Token 611: ' data' (ID: 1238)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6800729632377625
    2. 'min' → logprob: -1.5550730228424072
    3. 'prefix' → logprob: -2.8050730228424072
    4. 'dp' → logprob: -3.1800730228424072
    5. 'val' → logprob: -3.4300730228424072
    6. 'minimum' → logprob: -3.6800730228424072
    7. 'suffix' → logprob: -4.180072784423828
    8. 'mins' → logprob: -4.180072784423828
    9. 'diff' → logprob: -4.430072784423828
    10. 'dist' → logprob: -4.680072784423828

Token 612: '
' (ID: 198)
  Prédit: ' structures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' structures' → logprob: -0.9254865050315857
    2. ' max' → logprob: -1.8004865646362305
    3. 'max' → logprob: -1.8004865646362305
    4. 'min' → logprob: -2.5504865646362305
    5. ' min' → logprob: -3.1754865646362305
    6. 's' → logprob: -3.4254865646362305
    7. 'structures' → logprob: -3.4254865646362305
    8. ' =' → logprob: -4.6754865646362305
    9. ' prefix' → logprob: -4.9254865646362305
    10. 'prefix' → logprob: -5.0504865646362305

Token 613: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8203635215759277
    2. ' max' → logprob: -2.3203635215759277
    3. 'prefix' → logprob: -2.6953635215759277
    4. 's' → logprob: -2.8203635215759277
    5. 'length' → logprob: -3.0703635215759277
    6. ' structures' → logprob: -3.0703635215759277
    7. 'sum' → logprob: -3.3203635215759277
    8. 'n' → logprob: -3.4453635215759277
    9. '   ' → logprob: -3.5703635215759277
    10. ' lengths' → logprob: -3.8203635215759277

Token 614: ' data' (ID: 1238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8011640310287476
    2. 'max' → logprob: -1.6761640310287476
    3. 'prefix' → logprob: -2.426164150238037
    4. 'n' → logprob: -2.926164150238037
    5. 'M' → logprob: -3.301164150238037
    6. 'x' → logprob: -4.051164150238037
    7. 'pref' → logprob: -4.426164150238037
    8. 'pos' → logprob: -4.676164150238037
    9. ' max' → logprob: -4.801164150238037
    10. 'pre' → logprob: -4.801164150238037

Token 615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026441827416419983
    2. ' =' → logprob: -3.651441812515259
    3. '=[]' → logprob: -10.90144157409668
    4. 's' → logprob: -11.02644157409668
    5. '1' → logprob: -11.02644157409668
    6. 'max' → logprob: -11.27644157409668
    7. ',' → logprob: -11.52644157409668
    8. '=[' → logprob: -11.52644157409668
    9. 'x' → logprob: -11.65144157409668
    10. 'a' → logprob: -12.15144157409668

Token 616: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011564325541257858
    2. '[-' → logprob: -5.261564254760742
    3. '[N' → logprob: -5.761564254760742
    4. '[len' → logprob: -6.761564254760742
    5. ' [' → logprob: -7.511564254760742
    6. '[i' → logprob: -8.261564254760742
    7. '[]' → logprob: -8.261564254760742
    8. '[min' → logprob: -8.761564254760742
    9. '[]
' → logprob: -9.136564254760742
    10. '[(' → logprob: -9.136564254760742

Token 617: 'min' (ID: 1493)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7201043963432312
    2. 'x' → logprob: -0.7201043963432312
    3. 'float' → logprob: -4.595104217529297
    4. 'a' → logprob: -5.470104217529297
    5. 'pos' → logprob: -5.720104217529297
    6. '0' → logprob: -5.845104217529297
    7. 'p' → logprob: -7.220104217529297
    8. 'v' → logprob: -7.220104217529297
    9. '(x' → logprob: -7.345104217529297
    10. 'item' → logprob: -7.970104217529297

Token 618: '(' (ID: 7)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.37473776936531067
    2. '(x' → logprob: -1.4997377395629883
    3. '(a' → logprob: -2.7497377395629883
    4. '(' → logprob: -4.249737739562988
    5. 'x' → logprob: -5.999737739562988
    6. 'a' → logprob: -6.249737739562988
    7. 'b' → logprob: -6.624737739562988
    8. '(i' → logprob: -6.999737739562988
    9. '(be' → logprob: -7.374737739562988
    10. '(p' → logprob: -7.624737739562988

Token 619: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3332485258579254
    2. 'a' → logprob: -2.2082486152648926
    3. 'x' → logprob: -2.4582486152648926
    4. '(b' → logprob: -2.9582486152648926
    5. '(x' → logprob: -4.208248615264893
    6. '(a' → logprob: -5.083248615264893
    7. '(' → logprob: -5.458248615264893
    8. 'beam' → logprob: -5.708248615264893
    9. 'v' → logprob: -6.833248615264893
    10. 'p' → logprob: -7.208248615264893

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002951197326183319
    2. ')]' → logprob: -7.252951145172119
    3. ',b' → logprob: -7.502951145172119
    4. ',
' → logprob: -8.002951622009277
    5. ',x' → logprob: -8.502951622009277
    6. 'b' → logprob: -8.752951622009277
    7. ')' → logprob: -9.002951622009277
    8. 'x' → logprob: -9.127951622009277
    9. '
' → logprob: -9.377951622009277
    10. ' ,' → logprob: -9.377951622009277

Token 621: ' beam' (ID: 36650)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.37461721897125244
    2. 'x' → logprob: -1.2496172189712524
    3. ' b' → logprob: -4.124617099761963
    4. ' x' → logprob: -5.124617099761963
    5. 'a' → logprob: -6.374617099761963
    6. 'beam' → logprob: -7.624617099761963
    7. 'p' → logprob: -7.999617099761963
    8. 'v' → logprob: -8.124617576599121
    9. 'i' → logprob: -9.124617576599121
    10. '   ' → logprob: -9.124617576599121

Token 622: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.227250610711053e-05
    2. '[' → logprob: -11.125041961669922
    3. '[j' → logprob: -11.500041961669922
    4. '[x' → logprob: -11.875041961669922
    5. 'i' → logprob: -12.250041961669922
    6. '[k' → logprob: -12.875041961669922
    7. '[idx' → logprob: -14.625041961669922
    8. '[a' → logprob: -14.750041961669922
    9. '[_' → logprob: -15.500041961669922
    10. '
' → logprob: -15.625041961669922

Token 623: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011883260449394584
    2. '[' → logprob: -6.876188278198242
    3. ')[' → logprob: -10.126188278198242
    4. ' ][' → logprob: -10.501188278198242
    5. ']' → logprob: -10.626188278198242
    6. '][-' → logprob: -11.251188278198242
    7. '   ' → logprob: -11.626188278198242
    8. '0' → logprob: -11.813688278198242
    9. '1' → logprob: -11.876188278198242
    10. '-' → logprob: -12.188688278198242

Token 624: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01828935742378235
    2. '1' → logprob: -4.268289566040039
    3. '2' → logprob: -5.518289566040039
    4. ' ' → logprob: -9.893289566040039
    5. '   ' → logprob: -10.830789566040039
    6. '
' → logprob: -11.768289566040039
    7. ']' → logprob: -12.205789566040039
    8. '3' → logprob: -12.455789566040039
    9. '[' → logprob: -12.643289566040039
    10. ':' → logprob: -13.643289566040039

Token 625: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.036325257271528244
    2. ']' → logprob: -3.536325216293335
    3. ')' → logprob: -6.286325454711914
    4. ']-' → logprob: -6.286325454711914
    5. ' -' → logprob: -6.786325454711914
    6. '-' → logprob: -7.036325454711914
    7. ' ])' → logprob: -7.786325454711914
    8. '   ' → logprob: -9.536325454711914
    9. '[' → logprob: -10.036325454711914
    10. '])
' → logprob: -10.161325454711914

Token 626: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033399004489183426
    2. ' -' → logprob: -3.5333991050720215
    3. '-' → logprob: -6.1583991050720215
    4. ' )' → logprob: -6.9083991050720215
    5. '[' → logprob: -8.783398628234863
    6. '   ' → logprob: -8.908398628234863
    7. ')]' → logprob: -10.158398628234863
    8. '-)' → logprob: -10.158398628234863
    9. '])' → logprob: -10.533398628234863
    10. ')
' → logprob: -10.783398628234863

Token 627: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.019175494089722633
    2. 'i' → logprob: -4.3941755294799805
    3. '1' → logprob: -6.3941755294799805
    4. ' beam' → logprob: -6.5191755294799805
    5. '(i' → logprob: -7.1441755294799805
    6. '(' → logprob: -7.3941755294799805
    7. '100' → logprob: -7.6441755294799805
    8. 'N' → logprob: -7.8941755294799805
    9. '10' → logprob: -8.51917552947998
    10. ' (' → logprob: -8.64417552947998

Token 628: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014726664870977402
    2. '[' → logprob: -4.764726638793945
    3. 'i' → logprob: -5.389726638793945
    4. '[N' → logprob: -7.764726638793945
    5. '1' → logprob: -7.889726638793945
    6. 's' → logprob: -8.014726638793945
    7. '0' → logprob: -8.639726638793945
    8. '(i' → logprob: -10.639726638793945
    9. 'N' → logprob: -10.702226638793945
    10. '[-' → logprob: -10.702226638793945

Token 629: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6472858190536499
    2. '-' → logprob: -0.7722858190536499
    3. ' -' → logprob: -4.3972859382629395
    4. '+' → logprob: -6.5222859382629395
    5. '[' → logprob: -7.5222859382629395
    6. '1' → logprob: -10.209785461425781
    7. ' +' → logprob: -10.334785461425781
    8. '   ' → logprob: -10.334785461425781
    9. ' ][' → logprob: -10.647285461425781
    10. ']' → logprob: -10.709785461425781

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032069424632936716
    2. '2' → logprob: -5.878206729888916
    3. ' ' → logprob: -8.753207206726074
    4. '   ' → logprob: -9.878207206726074
    5. '0' → logprob: -10.003207206726074
    6. 'i' → logprob: -10.440707206726074
    7. 'N' → logprob: -10.440707206726074
    8. '3' → logprob: -10.628207206726074
    9. '100' → logprob: -11.815707206726074
    10. '-' → logprob: -12.315707206726074

Token 631: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09211880713701248
    2. '])' → logprob: -2.467118740081787
    3. ' )' → logprob: -6.342118740081787
    4. '))' → logprob: -7.842118740081787
    5. '   ' → logprob: -7.967118740081787
    6. ' ])' → logprob: -8.467119216918945
    7. ')
' → logprob: -8.842119216918945
    8. ')])' → logprob: -9.592119216918945
    9. '[i' → logprob: -10.342119216918945
    10. ')+' → logprob: -10.342119216918945

Token 632: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03807087242603302
    2. 'for' → logprob: -3.6630709171295166
    3. '   ' → logprob: -4.5380706787109375
    4. ')' → logprob: -7.1630706787109375
    5. '       ' → logprob: -9.413070678710938
    6. ' ' → logprob: -10.413070678710938
    7. '    ' → logprob: -10.663070678710938
    8. '	for' → logprob: -10.788070678710938
    9. '           ' → logprob: -11.288070678710938
    10. '  ' → logprob: -11.663070678710938

Token 633: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.142689511179924
    2. ' i' → logprob: -2.0176894664764404
    3. ' ' → logprob: -12.01768970489502
    4. ' range' → logprob: -12.14268970489502
    5. ')' → logprob: -14.39268970489502
    6. 'range' → logprob: -14.39268970489502
    7. '	i' → logprob: -14.64268970489502
    8. ' ' → logprob: -14.76768970489502
    9. ' in' → logprob: -15.26768970489502
    10. '  ' → logprob: -15.39268970489502

Token 634: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014202766120433807
    2. 'in' → logprob: -4.51420259475708
    3. 'range' → logprob: -6.01420259475708
    4. ' range' → logprob: -7.38920259475708
    5. ')' → logprob: -10.764203071594238
    6. 'i' → logprob: -11.014203071594238
    7. ' i' → logprob: -11.014203071594238
    8. 's' → logprob: -11.514203071594238
    9. 'n' → logprob: -12.014203071594238
    10. ' ' → logprob: -12.514203071594238

Token 635: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024758970830589533
    2. ' range' → logprob: -6.002475738525391
    3. '	range' → logprob: -15.87747573852539
    4. '(range' → logprob: -16.75247573852539
    5. '
' → logprob: -17.25247573852539
    6. 'i' → logprob: -18.25247573852539
    7. ' ' → logprob: -18.62747573852539
    8. '   ' → logprob: -18.75247573852539
    9. '  ' → logprob: -19.00247573852539
    10. '```' → logprob: -19.50247573852539

Token 636: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.9092954993247986
    2. 'range' → logprob: -0.9092954993247986
    3. 'N' → logprob: -2.0342955589294434
    4. ' range' → logprob: -3.6592955589294434
    5. 'i' → logprob: -4.159295558929443
    6. '(i' → logprob: -4.534295558929443
    7. '(range' → logprob: -5.159295558929443
    8. '(len' → logprob: -5.659295558929443
    9. 'len' → logprob: -7.284295558929443
    10. '(' → logprob: -7.409295558929443

Token 637: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0685073733329773
    2. ')' → logprob: -2.818507432937622
    3. ']' → logprob: -5.193507194519043
    4. '   ' → logprob: -7.693507194519043
    5. ' )' → logprob: -8.068507194519043
    6. ')]
' → logprob: -8.943507194519043
    7. ')
' → logprob: -10.693507194519043
    8. ' ]' → logprob: -10.818507194519043
    9. ')])' → logprob: -11.943507194519043
    10. ']
' → logprob: -12.193507194519043

Token 638: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05745866522192955
    2. '
' → logprob: -3.1824586391448975
    3. '<|end|>' → logprob: -4.807458877563477
    4. '    
' → logprob: -5.557458877563477
    5. ')' → logprob: -6.557458877563477
    6. 'data' → logprob: -8.682458877563477
    7. ',' → logprob: -8.807458877563477
    8. '<|end|>' → logprob: -9.432458877563477
    9. '#' → logprob: -10.057458877563477
    10. ' 
' → logprob: -10.057458877563477

Token 639: ' for' (ID: 395)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.25332313776016235
    2. 'st' → logprob: -1.6283230781555176
    3. 'se' → logprob: -4.128323078155518
    4. 'tree' → logprob: -5.628323078155518
    5. '   ' → logprob: -6.003323078155518
    6. 'sg' → logprob: -6.378323078155518
    7. 'dp' → logprob: -6.628323078155518
    8. 's' → logprob: -7.128323078155518
    9. ' seg' → logprob: -7.378323078155518
    10. 'segment' → logprob: -8.753323554992676

Token 640: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3135363757610321
    2. ' i' → logprob: -1.3135364055633545
    3. ' ' → logprob: -9.438536643981934
    4. '_' → logprob: -9.938536643981934
    5. 'j' → logprob: -10.188536643981934
    6. '   ' → logprob: -10.563536643981934
    7. ' j' → logprob: -10.813536643981934
    8. '_i' → logprob: -11.063536643981934
    9. ')' → logprob: -11.688536643981934
    10. ' _' → logprob: -11.938536643981934

Token 641: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03423740714788437
    2. 'in' → logprob: -3.4092373847961426
    3. '   ' → logprob: -8.4092378616333
    4. '+' → logprob: -8.7842378616333
    5. ' ' → logprob: -9.2842378616333
    6. ',' → logprob: -10.1592378616333
    7. '  ' → logprob: -10.4092378616333
    8. '1' → logprob: -12.1592378616333
    9. 'range' → logprob: -12.2842378616333
    10. '(' → logprob: -12.4092378616333

Token 642: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017142124706879258
    2. ' range' → logprob: -6.37671422958374
    3. '   ' → logprob: -12.001713752746582
    4. ' ' → logprob: -12.876713752746582
    5. '  ' → logprob: -13.751713752746582
    6. '
' → logprob: -14.501713752746582
    7. '    ' → logprob: -15.376713752746582
    8. '	range' → logprob: -15.376713752746582
    9. '(range' → logprob: -15.376713752746582
    10. 'r' → logprob: -15.501713752746582

Token 643: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.33371177315711975
    2. '(N' → logprob: -1.9587117433547974
    3. '(' → logprob: -2.458711862564087
    4. '(range' → logprob: -3.083711862564087
    5. ' range' → logprob: -4.958711624145508
    6. 'N' → logprob: -5.708711624145508
    7. '   ' → logprob: -7.958711624145508
    8. ')' → logprob: -8.458711624145508
    9. '1' → logprob: -8.583711624145508
    10. ' ' → logprob: -9.958711624145508

Token 644: ' -' (ID: 533)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.793170154094696
    2. '+' → logprob: -0.918170154094696
    3. '):' → logprob: -3.043170213699341
    4. '-' → logprob: -3.418170213699341
    5. '   ' → logprob: -3.543170213699341
    6. ' +' → logprob: -4.168169975280762
    7. ',' → logprob: -5.043169975280762
    8. ':' → logprob: -5.293169975280762
    9. '       ' → logprob: -5.418169975280762
    10. ' -' → logprob: -5.543169975280762

Token 645: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026808295398950577
    2. '2' → logprob: -3.651808261871338
    3. ' ' → logprob: -7.651808261871338
    4. '3' → logprob: -11.026808738708496
    5. '   ' → logprob: -11.901808738708496
    6. '-' → logprob: -13.276808738708496
    7. '5' → logprob: -13.651808738708496
    8. '10' → logprob: -13.714308738708496
    9. '  ' → logprob: -14.151808738708496
    10. '
' → logprob: -14.401808738708496

Token 646: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.160311758518219
    2. '2' → logprob: -1.9103116989135742
    3. ' ' → logprob: -9.785311698913574
    4. '3' → logprob: -11.160311698913574
    5. '
' → logprob: -11.785311698913574
    6. '-' → logprob: -13.097811698913574
    7. '   ' → logprob: -13.410311698913574
    8. '0' → logprob: -14.035311698913574
    9. '4' → logprob: -14.285311698913574
    10. '10' → logprob: -14.722811698913574

Token 647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026947084814310074
    2. ',-' → logprob: -3.901947021484375
    3. '-' → logprob: -5.776947021484375
    4. '   ' → logprob: -6.651947021484375
    5. ' ,' → logprob: -6.901947021484375
    6. ' -' → logprob: -7.401947021484375
    7. '1' → logprob: -9.276947021484375
    8. '):
' → logprob: -9.651947021484375
    9. ' ,-' → logprob: -9.776947021484375
    10. '       ' → logprob: -10.151947021484375

Token 648: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.386890709400177
    2. ' -' → logprob: -1.1368906497955322
    3. '   ' → logprob: -11.636890411376953
    4. '-i' → logprob: -12.136890411376953
    5. ' ' → logprob: -13.011890411376953
    6. '0' → logprob: -14.011890411376953
    7. '    ' → logprob: -14.136890411376953
    8. 'i' → logprob: -14.511890411376953
    9. '  ' → logprob: -15.261890411376953
    10. '     ' → logprob: -15.511890411376953

Token 649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. '```' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.875
    5. '
' → logprob: -16.875
    6. '2' → logprob: -16.875
    7. '-' → logprob: -17.375
    8. '0' → logprob: -18.0
    9. '``' → logprob: -18.75
    10. ' -' → logprob: -18.75

Token 650: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004382655490189791
    2. '-' → logprob: -6.379382610321045
    3. ',-' → logprob: -6.629382610321045
    4. ' ,' → logprob: -6.879382610321045
    5. ' -' → logprob: -8.254383087158203
    6. '   ' → logprob: -10.504383087158203
    7. '):
' → logprob: -11.004383087158203
    8. ' ,-' → logprob: -11.629383087158203
    9. '1' → logprob: -11.879383087158203
    10. ',
' → logprob: -12.504383087158203

Token 651: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002186307217925787
    2. ' -' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.37718677520752
    4. 'i' → logprob: -14.87718677520752
    5. '-i' → logprob: -15.37718677520752
    6. '):
' → logprob: -17.002185821533203
    7. ')' → logprob: -17.127185821533203
    8. ' ' → logprob: -17.752185821533203
    9. '       ' → logprob: -18.377185821533203
    10. '0' → logprob: -18.502185821533203

Token 652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '2' → logprob: -18.250001907348633
    5. ')' → logprob: -18.625001907348633
    6. '
' → logprob: -19.375001907348633
    7. '```' → logprob: -19.750001907348633
    8. '):
' → logprob: -19.875001907348633
    9. ',' → logprob: -20.000001907348633
    10. '  ' → logprob: -20.125001907348633

Token 653: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03968488797545433
    2. '):' → logprob: -3.289684772491455
    3. ':' → logprob: -6.914684772491455
    4. '   ' → logprob: -8.414685249328613
    5. ':
' → logprob: -8.914685249328613
    6. ')' → logprob: -9.039685249328613
    7. '):
' → logprob: -9.414685249328613
    8. ' ):
' → logprob: -9.914685249328613
    9. ',' → logprob: -11.039685249328613
    10. ' :' → logprob: -11.789685249328613

Token 654: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016556495800614357
    2. '   ' → logprob: -4.516556262969971
    3. 'data' → logprob: -5.391556262969971
    4. ' data' → logprob: -7.016556262969971
    5. '```' → logprob: -11.391556739807129
    6. '	data' → logprob: -11.516556739807129
    7. '
' → logprob: -12.891556739807129
    8. ',' → logprob: -12.891556739807129
    9. '	   ' → logprob: -13.016556739807129
    10. ',data' → logprob: -13.516556739807129

Token 655: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.02726266346871853
    2. ' data' → logprob: -3.7772626876831055
    3. '   ' → logprob: -5.5272626876831055
    4. '       ' → logprob: -11.027262687683105
    5. '	data' → logprob: -11.277262687683105
    6. 'if' → logprob: -13.402262687683105
    7. '
' → logprob: -14.402262687683105
    8. '```' → logprob: -14.777262687683105
    9. ' ' → logprob: -15.402262687683105
    10. ' if' → logprob: -16.02726173400879

Token 656: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014072739577386528
    2. '[min' → logprob: -9.500141143798828
    3. '[' → logprob: -10.250141143798828
    4. ' [' → logprob: -11.500141143798828
    5. '[
' → logprob: -11.875141143798828
    6. '
' → logprob: -13.125141143798828
    7. '   ' → logprob: -13.250141143798828
    8. '[data' → logprob: -13.250141143798828
    9. '=' → logprob: -13.250141143798828
    10. '[max' → logprob: -13.750141143798828

Token 657: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.060070570558309555
    2. '=' → logprob: -3.560070514678955
    3. ']=' → logprob: -3.685070514678955
    4. ' =' → logprob: -5.560070514678955
    5. ')' → logprob: -7.185070514678955
    6. ')=' → logprob: -9.060070991516113
    7. '   ' → logprob: -11.060070991516113
    8. ' ]' → logprob: -11.060070991516113
    9. ']+=' → logprob: -11.685070991516113
    10. ',' → logprob: -13.185070991516113

Token 658: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023286247625947
    2. ' =' → logprob: -3.7732863426208496
    3. '=min' → logprob: -10.148285865783691
    4. '+=' → logprob: -14.023285865783691
    5. '=
' → logprob: -14.523285865783691
    6. '=max' → logprob: -15.773285865783691
    7. '   ' → logprob: -16.148286819458008
    8. '>' → logprob: -16.898286819458008
    9. '=

' → logprob: -17.023286819458008
    10. ')=' → logprob: -17.773286819458008

Token 659: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0011109242914244533
    2. ' data' → logprob: -7.501111030578613
    3. 'max' → logprob: -7.626111030578613
    4. '   ' → logprob: -9.751111030578613
    5. ' max' → logprob: -12.376111030578613
    6. '
' → logprob: -13.001111030578613
    7. 'min' → logprob: -13.126111030578613
    8. ' ' → logprob: -13.251111030578613
    9. '  ' → logprob: -14.626111030578613
    10. '0' → logprob: -15.626111030578613

Token 660: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.750000953674316
    3. '[' → logprob: -15.875000953674316
    4. '[
' → logprob: -17.375
    5. ' [' → logprob: -18.0
    6. '   ' → logprob: -18.5
    7. '(i' → logprob: -18.625
    8. '[I' → logprob: -19.0
    9. '{i' → logprob: -19.25
    10. ' i' → logprob: -20.0

Token 661: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12697450816631317
    2. ' +' → logprob: -2.126974582672119
    3. '+i' → logprob: -10.376974105834961
    4. '[i' → logprob: -11.501974105834961
    5. '   ' → logprob: -12.626974105834961
    6. '[' → logprob: -14.001974105834961
    7. ' ' → logprob: -14.376974105834961
    8. '[next' → logprob: -16.00197410583496
    9. ']' → logprob: -16.12697410583496
    10. '1' → logprob: -16.75197410583496

Token 662: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.3750057220459
    4. '
' → logprob: -17.6250057220459
    5. '   ' → logprob: -17.6250057220459
    6. 'i' → logprob: -20.0000057220459
    7. '  ' → logprob: -20.1250057220459
    8. '<|end|>' → logprob: -20.7500057220459
    9. '2' → logprob: -21.3750057220459
    10. '0' → logprob: -22.0000057220459

Token 663: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '
' → logprob: -17.12500762939453
    4. '```' → logprob: -18.25000762939453
    5. '   ' → logprob: -18.37500762939453
    6. '  ' → logprob: -19.50000762939453
    7. '2' → logprob: -20.00000762939453
    8. '0' → logprob: -20.56250762939453
    9. '

' → logprob: -20.87500762939453
    10. '１' → logprob: -21.06250762939453

Token 664: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8834628462791443
    2. '<|end|>' → logprob: -1.133462905883789
    3. ']' → logprob: -1.383462905883789
    4. '<|end|>' → logprob: -4.758462905883789
    5. '   ' → logprob: -5.883462905883789
    6. '       ' → logprob: -7.383462905883789
    7. '
' → logprob: -8.508462905883789
    8. 'def' → logprob: -8.633462905883789
    9. '])' → logprob: -8.758462905883789
    10. ')return' → logprob: -8.758462905883789

Token 665: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 666: ' cum' (ID: 10023)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7879417538642883
    2. 'max' → logprob: -1.2879416942596436
    3. 'res' → logprob: -3.0379416942596436
    4. 'seg' → logprob: -3.5379416942596436
    5. '   ' → logprob: -4.162941932678223
    6. 'm' → logprob: -4.287941932678223
    7. 'pos' → logprob: -4.412941932678223
    8. '#' → logprob: -4.412941932678223
    9. 'prefix' → logprob: -4.537941932678223
    10. 'best' → logprob: -4.662941932678223

Token 667: 'min' (ID: 1493)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10804999619722366
    2. '=' → logprob: -3.3580501079559326
    3. '_sum' → logprob: -3.3580501079559326
    4. 'sum' → logprob: -4.1080498695373535
    5. '_data' → logprob: -5.1080498695373535
    6. '=[]' → logprob: -5.7330498695373535
    7. '=sum' → logprob: -6.2330498695373535
    8. 'ulated' → logprob: -6.8580498695373535
    9. 'data' → logprob: -7.1080498695373535
    10. 'ulative' → logprob: -7.4830498695373535

Token 668: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07979495078325272
    2. '=' → logprob: -2.5797948837280273
    3. 's' → logprob: -7.329794883728027
    4. '_' → logprob: -9.704794883728027
    5. '=[' → logprob: -10.454794883728027
    6. '=[]' → logprob: -10.579794883728027
    7. '_data' → logprob: -10.829794883728027
    8. '=[]
' → logprob: -11.329794883728027
    9. ',' → logprob: -11.579794883728027
    10. 'data' → logprob: -11.704794883728027

Token 669: ' [' (ID: 723)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.2532598376274109
    2. '[' → logprob: -1.5032598972320557
    3. 'data' → logprob: -7.503259658813477
    4. ' Seg' → logprob: -8.503259658813477
    5. '0' → logprob: -9.003259658813477
    6. '[]
' → logprob: -9.253259658813477
    7. ' [' → logprob: -9.378259658813477
    8. 'Segment' → logprob: -9.878259658813477
    9. '[data' → logprob: -10.003259658813477
    10. 'list' → logprob: -10.878259658813477

Token 670: 'beam' (ID: 95917)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6927154064178467
    2. 'ide' → logprob: -1.1927154064178467
    3. 'data' → logprob: -2.4427154064178467
    4. '10' → logprob: -2.9427154064178467
    5. 'float' → logprob: -3.8177154064178467
    6. 'beam' → logprob: -4.192715644836426
    7. '(' → logprob: -4.692715644836426
    8. 'N' → logprob: -6.130215644836426
    9. 'None' → logprob: -6.817715644836426
    10. 'ideo' → logprob: -7.380215644836426

Token 671: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14270253479480743
    2. '[' → logprob: -2.017702579498291
    3. '[j' → logprob: -11.892702102661133
    4. '[I' → logprob: -12.642702102661133
    5. '[x' → logprob: -12.767702102661133
    6. '[
' → logprob: -12.892702102661133
    7. '[-' → logprob: -13.392702102661133
    8. '[n' → logprob: -13.392702102661133
    9. '<|end|>' → logprob: -14.017702102661133
    10. '[idx' → logprob: -14.267702102661133

Token 672: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6943088173866272
    2. '][' → logprob: -0.6943088173866272
    3. ')[' → logprob: -7.694308757781982
    4. ']' → logprob: -8.56930923461914
    5. '   ' → logprob: -9.63180923461914
    6. ' ][' → logprob: -9.63180923461914
    7. '(' → logprob: -10.19430923461914
    8. '0' → logprob: -10.38180923461914
    9. '[i' → logprob: -10.44430923461914
    10. '-' → logprob: -10.50680923461914

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1798577457666397
    2. '0' → logprob: -1.8048577308654785
    3. ' ' → logprob: -9.929858207702637
    4. '[' → logprob: -10.804858207702637
    5. '][' → logprob: -11.054858207702637
    6. ']' → logprob: -12.117358207702637
    7. '   ' → logprob: -12.242358207702637
    8. 'i' → logprob: -12.867358207702637
    9. '-' → logprob: -12.992358207702637
    10. '
' → logprob: -13.117358207702637

Token 674: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0441080331802368
    2. ']' → logprob: -1.1691080331802368
    3. 'for' → logprob: -1.1691080331802368
    4. '[' → logprob: -3.7941079139709473
    5. '   ' → logprob: -6.044107913970947
    6. '	for' → logprob: -8.044108390808105
    7. '-' → logprob: -8.294108390808105
    8. '][' → logprob: -8.419108390808105
    9. ')' → logprob: -8.919108390808105
    10. ' ' → logprob: -9.294108390808105

Token 675: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47611144185066223
    2. ' for' → logprob: -0.9761114120483398
    3. '   ' → logprob: -7.35111141204834
    4. ' if' → logprob: -7.72611141204834
    5. 'if' → logprob: -7.85111141204834
    6. '+' → logprob: -8.35111141204834
    7. ']' → logprob: -9.85111141204834
    8. '-' → logprob: -9.97611141204834
    9. ' +' → logprob: -10.22611141204834
    10. ' ' → logprob: -10.35111141204834

Token 676: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024763736873865128
    2. ' i' → logprob: -6.002476215362549
    3. '
' → logprob: -14.752476692199707
    4. '	i' → logprob: -16.37747573852539
    5. ' ' → logprob: -16.62747573852539
    6. '  ' → logprob: -17.25247573852539
    7. ' in' → logprob: -17.50247573852539
    8. '   ' → logprob: -17.87747573852539
    9. 'in' → logprob: -18.12747573852539
    10. ' ' → logprob: -18.75247573852539

Token 677: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42619988322257996
    2. ' in' → logprob: -1.1761999130249023
    3. 'i' → logprob: -3.4261999130249023
    4. ' i' → logprob: -5.551199913024902
    5. 'range' → logprob: -6.676199913024902
    6. ' range' → logprob: -7.051199913024902
    7. ' ' → logprob: -10.551199913024902
    8. ',' → logprob: -12.551199913024902
    9. ']' → logprob: -12.676199913024902
    10. ')' → logprob: -12.926199913024902

Token 678: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002614550176076591
    2. ' range' → logprob: -8.250261306762695
    3. '
' → logprob: -16.500261306762695
    4. '   ' → logprob: -17.125261306762695
    5. '(range' → logprob: -18.000261306762695
    6. 're' → logprob: -18.875261306762695
    7. '  ' → logprob: -18.875261306762695
    8. ' ' → logprob: -19.125261306762695
    9. '	range' → logprob: -19.125261306762695
    10. 'ran' → logprob: -19.250261306762695

Token 679: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006158163887448609
    2. '(N' → logprob: -7.50061559677124
    3. 'range' → logprob: -10.625616073608398
    4. '(' → logprob: -11.125616073608398
    5. '   ' → logprob: -11.750616073608398
    6. 'len' → logprob: -11.750616073608398
    7. ' N' → logprob: -12.500616073608398
    8. '
' → logprob: -13.750616073608398
    9. 'i' → logprob: -13.875616073608398
    10. ')' → logprob: -14.625616073608398

Token 680: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16600044071674347
    2. ']
' → logprob: -2.0410003662109375
    3. ')]' → logprob: -4.2910003662109375
    4. ')]
' → logprob: -5.9160003662109375
    5. ' ]' → logprob: -6.0410003662109375
    6. ' ]
' → logprob: -6.2910003662109375
    7. '-' → logprob: -7.0410003662109375
    8. '   ' → logprob: -8.041000366210938
    9. ')' → logprob: -8.041000366210938
    10. ',' → logprob: -8.416000366210938

Token 681: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.040059011429548264
    2. '   ' → logprob: -3.9150590896606445
    3. 'cum' → logprob: -4.6650590896606445
    4. ' for' → logprob: -4.7900590896606445
    5. '
' → logprob: -6.5400590896606445
    6. 'c' → logprob: -9.790059089660645
    7. '<|end|>' → logprob: -10.665059089660645
    8. '	for' → logprob: -10.665059089660645
    9. ')' → logprob: -11.415059089660645
    10. '```' → logprob: -11.665059089660645

Token 682: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014232022687792778
    2. ' for' → logprob: -4.264232158660889
    3. 'cum' → logprob: -10.13923168182373
    4. '   ' → logprob: -10.88923168182373
    5. '
' → logprob: -12.26423168182373
    6. '```' → logprob: -13.51423168182373
    7. '	for' → logprob: -13.88923168182373
    8. '<|end|>' → logprob: -14.13923168182373
    9. 'c' → logprob: -14.51423168182373
    10. '[' → logprob: -14.76423168182373

Token 683: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017086135921999812
    2. ' i' → logprob: -6.376708507537842
    3. '   ' → logprob: -12.751708984375
    4. ' ' → logprob: -13.251708984375
    5. '	i' → logprob: -14.126708984375
    6. '  ' → logprob: -14.626708984375
    7. 'j' → logprob: -15.751708984375
    8. ' ' → logprob: -16.626708984375
    9. '`' → logprob: -16.751708984375
    10. 'int' → logprob: -16.876708984375

Token 684: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005932828411459923
    2. 'in' → logprob: -5.130932807922363
    3. 'range' → logprob: -13.380932807922363
    4. '   ' → logprob: -13.880932807922363
    5. ' i' → logprob: -14.630932807922363
    6. '	in' → logprob: -14.755932807922363
    7. ' ' → logprob: -14.880932807922363
    8. '
' → logprob: -16.38093376159668
    9. 'In' → logprob: -16.50593376159668
    10. ',' → logprob: -16.50593376159668

Token 685: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006718925200402737
    2. ' range' → logprob: -5.00671911239624
    3. 're' → logprob: -14.006718635559082
    4. '   ' → logprob: -14.006718635559082
    5. '
' → logprob: -14.756718635559082
    6. ' ' → logprob: -14.881718635559082
    7. '(range' → logprob: -15.256718635559082
    8. '  ' → logprob: -15.381718635559082
    9. 'rang' → logprob: -15.631718635559082
    10. '	range' → logprob: -15.631718635559082

Token 686: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0006740703247487545
    2. '(' → logprob: -8.0006742477417
    3. 'range' → logprob: -8.8756742477417
    4. '(i' → logprob: -9.0006742477417
    5. '(range' → logprob: -9.7506742477417
    6. ' range' → logprob: -12.0006742477417
    7. 'N' → logprob: -12.2506742477417
    8. '(n' → logprob: -13.2506742477417
    9. '(len' → logprob: -13.3756742477417
    10. ' (' → logprob: -14.3756742477417

Token 687: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08896956592798233
    2. ' -' → logprob: -2.4639694690704346
    3. '
' → logprob: -11.463969230651855
    4. '   ' → logprob: -11.588969230651855
    5. ',' → logprob: -12.838969230651855
    6. '1' → logprob: -12.963969230651855
    7. ' ' → logprob: -13.338969230651855
    8. ')' → logprob: -13.713969230651855
    9. '+' → logprob: -14.588969230651855
    10. '):
' → logprob: -14.588969230651855

Token 688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19594477117061615
    2. '   ' → logprob: -1.8209447860717773
    3. 'cum' → logprob: -4.445944786071777
    4. ' if' → logprob: -6.070944786071777
    5. 'if' → logprob: -6.320944786071777
    6. ' cum' → logprob: -8.945944786071777
    7. 'c' → logprob: -10.320944786071777
    8. '	c' → logprob: -10.570944786071777
    9. '	if' → logprob: -11.195944786071777
    10. '	   ' → logprob: -11.695944786071777

Token 689: ' if' (ID: 538)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.39333871006965637
    2. '   ' → logprob: -1.893338680267334
    3. 'if' (adapté à ' if') → logprob: -1.893338680267334
    4. ' if' → logprob: -4.643338680267334
    5. ' cum' → logprob: -4.643338680267334
    6. '       ' → logprob: -5.518338680267334
    7. 'c' → logprob: -7.768338680267334
    8. ' ' → logprob: -8.893339157104492
    9. '	c' → logprob: -8.893339157104492
    10. '	if' → logprob: -10.768339157104492

Token 690: ' beam' (ID: 36650)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007369395345449448
    2. ' i' → logprob: -5.007369518280029
    3. '   ' → logprob: -7.632369518280029
    4. '	i' → logprob: -8.757369041442871
    5. '  ' → logprob: -12.132369041442871
    6. ' ' → logprob: -13.007369041442871
    7. '(i' → logprob: -13.257369041442871
    8. '       ' → logprob: -14.007369041442871
    9. '
' → logprob: -14.757369041442871
    10. '    ' → logprob: -14.882369041442871

Token 691: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002153378736693412
    2. '[' → logprob: -8.750215530395508
    3. '][' → logprob: -10.375215530395508
    4. ' [' → logprob: -11.625215530395508
    5. ')[' → logprob: -13.000215530395508
    6. '   ' → logprob: -13.250215530395508
    7. '```' → logprob: -13.500215530395508
    8. ']' → logprob: -13.500215530395508
    9. '[
' → logprob: -13.625215530395508
    10. '
' → logprob: -13.875215530395508

Token 692: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026713121682405472
    2. '[' → logprob: -3.7767131328582764
    3. '[i' → logprob: -6.526712894439697
    4. '-' → logprob: -8.526713371276855
    5. ']' → logprob: -8.526713371276855
    6. '0' → logprob: -8.651713371276855
    7. '   ' → logprob: -8.776713371276855
    8. 'i' → logprob: -8.901713371276855
    9. '#' → logprob: -9.026713371276855
    10. ')][' → logprob: -9.026713371276855

Token 693: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10029660165309906
    2. '1' → logprob: -2.3502964973449707
    3. ' ' → logprob: -9.725296974182129
    4. '   ' → logprob: -11.725296974182129
    5. ']' → logprob: -12.537796974182129
    6. '...' → logprob: -13.287796974182129
    7. '```' → logprob: -13.412796974182129
    8. '[' → logprob: -13.475296974182129
    9. '][' → logprob: -13.662796974182129
    10. '
' → logprob: -13.850296974182129

Token 694: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08804138749837875
    2. '[' → logprob: -2.838041305541992
    3. ']>' → logprob: -4.963041305541992
    4. ']<' → logprob: -5.088041305541992
    5. '>' → logprob: -5.838041305541992
    6. ' <' → logprob: -6.088041305541992
    7. '][' → logprob: -6.338041305541992
    8. '<' → logprob: -6.588041305541992
    9. ' ]' → logprob: -6.838041305541992
    10. '[i' → logprob: -7.213041305541992

Token 695: ' -' (ID: 533)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6476529836654663
    2. '<' → logprob: -0.8976529836654663
    3. '>' → logprob: -3.397653102874756
    4. ' >' → logprob: -3.397653102874756
    5. ' <=' → logprob: -7.647653102874756
    6. ' ' → logprob: -7.772653102874756
    7. ' >=' → logprob: -8.147652626037598
    8. '<=' → logprob: -8.147652626037598
    9. '>=' → logprob: -8.397652626037598
    10. '[' → logprob: -8.897652626037598

Token 696: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.004137529991567135
    2. ' beam' → logprob: -5.5041375160217285
    3. 'cum' → logprob: -10.129137992858887
    4. 'i' → logprob: -11.629137992858887
    5. '   ' → logprob: -12.879137992858887
    6. ' ' → logprob: -13.504137992858887
    7. ' i' → logprob: -13.879137992858887
    8. '1' → logprob: -14.379137992858887
    9. '0' → logprob: -14.379137992858887
    10. ' cum' → logprob: -14.504137992858887

Token 697: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. 'i' → logprob: -12.875005722045898
    3. '[' → logprob: -13.125005722045898
    4. '{i' → logprob: -14.625005722045898
    5. '(i' → logprob: -14.875005722045898
    6. 's' → logprob: -15.750005722045898
    7. 'a' → logprob: -17.1250057220459
    8. '[
' → logprob: -17.3750057220459
    9. '
' → logprob: -17.5000057220459
    10. '1' → logprob: -17.8750057220459

Token 698: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06848499923944473
    2. '1' → logprob: -3.3184850215911865
    3. '[' → logprob: -3.5684850215911865
    4. ']' → logprob: -6.443484783172607
    5. ']>' → logprob: -10.818485260009766
    6. '#' → logprob: -10.943485260009766
    7. '-' → logprob: -10.943485260009766
    8. ''][' → logprob: -10.943485260009766
    9. '"][' → logprob: -11.318485260009766
    10. ']][' → logprob: -11.318485260009766

Token 699: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003159201005473733
    2. '0' → logprob: -8.75031566619873
    3. 'i' → logprob: -9.12531566619873
    4. '[i' → logprob: -10.50031566619873
    5. '[' → logprob: -12.12531566619873
    6. ' ' → logprob: -12.37531566619873
    7. '   ' → logprob: -12.75031566619873
    8. ']' → logprob: -12.93781566619873
    9. ' i' → logprob: -14.31281566619873
    10. '```' → logprob: -14.37531566619873

Token 700: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10483364760875702
    2. ']<' → logprob: -3.2298336029052734
    3. ']>' → logprob: -3.3548336029052734
    4. '>' → logprob: -4.229833602905273
    5. '<' → logprob: -5.854833602905273
    6. ' <' → logprob: -6.354833602905273
    7. ' ]' → logprob: -6.354833602905273
    8. ')' → logprob: -6.729833602905273
    9. ']>=' → logprob: -6.729833602905273
    10. ' >' → logprob: -7.104833602905273

Token 701: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9334362149238586
    2. '<' → logprob: -1.6834361553192139
    3. ' <' → logprob: -1.6834361553192139
    4. ' >' → logprob: -1.8084361553192139
    5. '<=' → logprob: -3.433436155319214
    6. ' <=' → logprob: -3.558436155319214
    7. '>=' → logprob: -5.183436393737793
    8. ' >=' → logprob: -5.808436393737793
    9. '   ' → logprob: -7.683436393737793
    10. ')' → logprob: -8.183436393737793

Token 702: ' ' (ID: 220)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.23956190049648285
    2. '0' → logprob: -1.739561915397644
    3. 'beam' → logprob: -3.4895617961883545
    4. ' cum' → logprob: -5.989562034606934
    5. ' ' → logprob: -6.114562034606934
    6. '   ' → logprob: -7.739562034606934
    7. 'data' → logprob: -7.989562034606934
    8. '(' → logprob: -8.114562034606934
    9. '1' → logprob: -8.802062034606934
    10. 'i' → logprob: -8.864562034606934

Token 703: '0' (ID: 15)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.615166187286377
    2. '0' → logprob: -1.365166187286377
    3. 'beam' → logprob: -1.615166187286377
    4. ' ' → logprob: -6.740166187286377
    5. 'i' → logprob: -7.240166187286377
    6. 'data' → logprob: -7.240166187286377
    7. ' cum' → logprob: -7.740166187286377
    8. '   ' → logprob: -7.990166187286377
    9. '(' → logprob: -8.177665710449219
    10. '-' → logprob: -8.552665710449219

Token 704: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43314915895462036
    2. ':' → logprob: -1.0581490993499756
    3. ' and' → logprob: -6.558149337768555
    4. '       ' → logprob: -7.058149337768555
    5. ' :
' → logprob: -7.308149337768555
    6. '           ' → logprob: -8.058149337768555
    7. ' :' → logprob: -8.308149337768555
    8. ',' → logprob: -8.433149337768555
    9. '):
' → logprob: -8.558149337768555
    10. ' =' → logprob: -8.933149337768555

Token 705: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011900577694177628
    2. '       ' → logprob: -4.636900424957275
    3. 'cum' → logprob: -6.636900424957275
    4. ' cum' → logprob: -7.636900424957275
    5. '
' → logprob: -9.386900901794434
    6. '	       ' → logprob: -9.886900901794434
    7. '   ' → logprob: -10.011900901794434
    8. ':' → logprob: -10.136900901794434
    9. ':
' → logprob: -10.886900901794434
    10. '	   ' → logprob: -10.886900901794434

Token 706: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.13660971820354462
    2. ' cum' → logprob: -2.5116097927093506
    3. '       ' → logprob: -3.3866097927093506
    4. '   ' → logprob: -4.7616095542907715
    5. '           ' → logprob: -5.6366095542907715
    6. 'c' → logprob: -8.26161003112793
    7. '	c' → logprob: -9.38661003112793
    8. ' ' → logprob: -9.76161003112793
    9. ' cumulative' → logprob: -10.69911003112793
    10. '
' → logprob: -10.82411003112793

Token 707: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0087516784551553e-05
    2. '[i' → logprob: -12.37501049041748
    3. '[min' → logprob: -13.37501049041748
    4. 'max' → logprob: -13.87501049041748
    5. 'for' → logprob: -14.25001049041748
    6. 'cum' → logprob: -14.37501049041748
    7. 'i' → logprob: -15.00001049041748
    8. '=' → logprob: -15.25001049041748
    9. '[' → logprob: -15.25001049041748
    10. '=min' → logprob: -15.25001049041748

Token 708: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006221305229701102
    2. '[' → logprob: -8.250621795654297
    3. ' =' → logprob: -8.750621795654297
    4. '[-' → logprob: -9.375621795654297
    5. '=' → logprob: -9.625621795654297
    6. ' [' → logprob: -10.875621795654297
    7. '[c' → logprob: -11.750621795654297
    8. '=[' → logprob: -12.375621795654297
    9. '[N' → logprob: -12.375621795654297
    10. '   ' → logprob: -12.500621795654297

Token 709: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0548052117228508
    2. ']=' → logprob: -3.179805278778076
    3. '=' → logprob: -5.304805278778076
    4. ' =' → logprob: -5.429805278778076
    5. ']+=' → logprob: -6.679805278778076
    6. ' ]' → logprob: -6.929805278778076
    7. ']=-' → logprob: -10.054804801940918
    8. '+=' → logprob: -10.304804801940918
    9. '=i' → logprob: -11.054804801940918
    10. '   ' → logprob: -11.429804801940918

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43567806482315063
    2. ' =' → logprob: -1.0606780052185059
    3. '+=' → logprob: -5.310678005218506
    4. '-=' → logprob: -6.935678005218506
    5. ' +=' → logprob: -7.560678005218506
    6. ' -=' → logprob: -8.310678482055664
    7. '=-' → logprob: -8.560678482055664
    8. '*=' → logprob: -11.310678482055664
    9. '=min' → logprob: -11.435678482055664
    10. ' ' → logprob: -11.935678482055664

Token 711: ' ' (ID: 220)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.8117455244064331
    2. 'float' → logprob: -1.686745524406433
    3. '0' → logprob: -1.811745524406433
    4. '10' → logprob: -2.3117456436157227
    5. '-' → logprob: -2.6867456436157227
    6. '-(' → logprob: -4.561745643615723
    7. '-be' → logprob: -4.561745643615723
    8. 'max' → logprob: -5.061745643615723
    9. 'min' → logprob: -6.436745643615723
    10. '(' → logprob: -6.561745643615723

Token 712: '10' (ID: 702)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.8276105523109436
    2. 'float' → logprob: -1.3276104927062988
    3. '0' → logprob: -1.8276104927062988
    4. '10' → logprob: -2.702610492706299
    5. '-' → logprob: -3.327610492706299
    6. '-be' → logprob: -4.202610492706299
    7. '-(' → logprob: -4.952610492706299
    8. 'ide' → logprob: -6.577610492706299
    9. 'max' → logprob: -6.577610492706299
    10. '-N' → logprob: -6.827610492706299

Token 713: ' **' (ID: 6240)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -4.000763510703109e-05
    2. '```' → logprob: -11.125040054321289
    3. '9' → logprob: -11.375040054321289
    4. '**' → logprob: -11.500040054321289
    5. '16' → logprob: -13.125040054321289
    6. '
' → logprob: -14.750040054321289
    7. '10' → logprob: -15.250040054321289
    8. '12' → logprob: -15.250040054321289
    9. '18' → logprob: -16.00004005432129
    10. '^' → logprob: -16.25004005432129

Token 714: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0038753733970224857
    2. '18' → logprob: -6.628875255584717
    3. '16' → logprob: -6.628875255584717
    4. '9' → logprob: -7.628875255584717
    5. '10' → logprob: -7.753875255584717
    6. '12' → logprob: -9.128875732421875
    7. '20' → logprob: -9.253875732421875
    8. '17' → logprob: -10.003875732421875
    9. '14' → logprob: -10.253875732421875
    10. '13' → logprob: -11.503875732421875

Token 715: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.03359752520918846
    2. '9' → logprob: -4.533597469329834
    3. '18' → logprob: -4.533597469329834
    4. '10' → logprob: -5.158597469329834
    5. '16' → logprob: -5.783597469329834
    6. '12' → logprob: -6.533597469329834
    7. '14' → logprob: -7.658597469329834
    8. '20' → logprob: -8.283597946166992
    9. '17' → logprob: -8.533597946166992
    10. '13' → logprob: -8.658597946166992

Token 716: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3694581389427185
    2. '   ' → logprob: -2.1194581985473633
    3. '<|end|>' → logprob: -2.1194581985473633
    4. '
' → logprob: -2.8694581985473633
    5. 'else' → logprob: -5.494458198547363
    6. ' else' → logprob: -5.869458198547363
    7. ')' → logprob: -6.369458198547363
    8. '<|end|>' → logprob: -7.119458198547363
    9. '           ' → logprob: -7.619458198547363
    10. ' ' → logprob: -7.744458198547363

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45673999190330505
    2. 'for' → logprob: -1.0817400217056274
    3. ' for' → logprob: -3.831739902496338
    4. '<|end|>' → logprob: -6.456739902496338
    5. '```' → logprob: -6.456739902496338
    6. '
' → logprob: -6.581739902496338
    7. '       ' → logprob: -7.956739902496338
    8. 'if' → logprob: -8.456740379333496
    9. 'from' → logprob: -8.706740379333496
    10. 'else' → logprob: -8.831740379333496

Token 718: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0031808018684387207
    2. 'from' → logprob: -5.878180980682373
    3. 'seg' → logprob: -8.253180503845215
    4. ' for' → logprob: -9.628180503845215
    5. '#' → logprob: -11.003180503845215
    6. 'import' → logprob: -11.628180503845215
    7. '   ' → logprob: -11.753180503845215
    8. 'cum' → logprob: -12.128180503845215
    9. 'min' → logprob: -12.503180503845215
    10. '
' → logprob: -13.378180503845215

Token 719: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11286735534667969
    2. ' i' → logprob: -2.2378673553466797
    3. 'j' → logprob: -10.98786735534668
    4. ' ' → logprob: -11.36286735534668
    5. ' j' → logprob: -12.73786735534668
    6. '	i' → logprob: -12.73786735534668
    7. '_' → logprob: -12.86286735534668
    8. '_i' → logprob: -13.73786735534668
    9. ')' → logprob: -13.98786735534668
    10. '   ' → logprob: -14.23786735534668

Token 720: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043109383434057236
    2. 'in' → logprob: -3.16810941696167
    3. '+' → logprob: -10.668108940124512
    4. '   ' → logprob: -10.793108940124512
    5. ',' → logprob: -11.168108940124512
    6. '1' → logprob: -11.293108940124512
    7. '
' → logprob: -11.668108940124512
    8. 'range' → logprob: -11.668108940124512
    9. '	in' → logprob: -12.293108940124512
    10. '```' → logprob: -12.543108940124512

Token 721: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2811932861804962
    2. 'range' → logprob: -1.4061932563781738
    3. ' ' → logprob: -11.531193733215332
    4. 're' → logprob: -11.531193733215332
    5. ' reversed' → logprob: -11.781193733215332
    6. '	range' → logprob: -13.156193733215332
    7. '(range' → logprob: -13.281193733215332
    8. '   ' → logprob: -13.406193733215332
    9. 'in' → logprob: -13.531193733215332
    10. '
' → logprob: -13.781193733215332

Token 722: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.07187201082706451
    2. '(' → logprob: -2.8218719959259033
    3. 'N' → logprob: -4.946872234344482
    4. 'range' → logprob: -6.071872234344482
    5. '(range' → logprob: -8.946871757507324
    6. '1' → logprob: -9.071871757507324
    7. '(len' → logprob: -9.446871757507324
    8. ' range' → logprob: -10.696871757507324
    9. '(n' → logprob: -10.946871757507324
    10. ')' → logprob: -11.321871757507324

Token 723: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1406742334365845
    2. '-' → logprob: -1.1406742334365845
    3. ' -' → logprob: -1.5156742334365845
    4. ' +' → logprob: -2.640674114227295
    5. '):
' → logprob: -2.890674114227295
    6. '   ' → logprob: -4.765674114227295
    7. '
' → logprob: -5.890674114227295
    8. '1' → logprob: -7.015674114227295
    9. ',' → logprob: -7.390674114227295
    10. ' ' → logprob: -7.515674114227295

Token 724: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3869558274745941
    2. '1' → logprob: -1.1369558572769165
    3. ' ' → logprob: -9.886956214904785
    4. '3' → logprob: -10.886956214904785
    5. '-' → logprob: -11.511956214904785
    6. '
' → logprob: -13.324456214904785
    7. '   ' → logprob: -13.949456214904785
    8. '(' → logprob: -14.699456214904785
    9. '0' → logprob: -14.886956214904785
    10. '```' → logprob: -15.449456214904785

Token 725: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16042619943618774
    2. '1' → logprob: -1.910426139831543
    3. '3' → logprob: -9.160426139831543
    4. '-' → logprob: -9.410426139831543
    5. ' ' → logprob: -11.910426139831543
    6. '
' → logprob: -13.535426139831543
    7. '0' → logprob: -13.597926139831543
    8. '4' → logprob: -13.972926139831543
    9. '5' → logprob: -14.410426139831543
    10. '   ' → logprob: -14.535426139831543

Token 726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001111639547161758
    2. ',-' → logprob: -6.8761115074157715
    3. ' ,' → logprob: -10.25111198425293
    4. '-' → logprob: -11.00111198425293
    5. ' -' → logprob: -11.62611198425293
    6. ',
' → logprob: -11.87611198425293
    7. '   ' → logprob: -12.12611198425293
    8. ',i' → logprob: -13.25111198425293
    9. '
' → logprob: -13.87611198425293
    10. '       ' → logprob: -14.75111198425293

Token 727: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4800087511539459
    2. '-' → logprob: -0.9800087213516235
    3. 'i' → logprob: -5.230008602142334
    4. ' i' → logprob: -7.605008602142334
    5. '-i' → logprob: -9.730009078979492
    6. ' ' → logprob: -13.480009078979492
    7. '0' → logprob: -14.855009078979492
    8. '	i' → logprob: -14.855009078979492
    9. ',' → logprob: -15.230009078979492
    10. ')' → logprob: -15.730009078979492

Token 728: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '2' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '-' → logprob: -14.875004768371582
    5. '   ' → logprob: -15.000004768371582
    6. '0' → logprob: -15.500004768371582
    7. '```' → logprob: -15.500004768371582
    8. '
' → logprob: -16.7500057220459
    9. ' -' → logprob: -16.8750057220459
    10. '       ' → logprob: -17.5000057220459

Token 729: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003418912645429373
    2. ',-' → logprob: -5.753418922424316
    3. '-' → logprob: -9.128418922424316
    4. ',
' → logprob: -10.128418922424316
    5. ' ,' → logprob: -10.628418922424316
    6. '   ' → logprob: -11.003418922424316
    7. '-,' → logprob: -11.128418922424316
    8. '):
' → logprob: -11.253418922424316
    9. ',i' → logprob: -11.753418922424316
    10. ' -' → logprob: -11.878418922424316

Token 730: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10587070137262344
    2. ' -' → logprob: -2.3558707237243652
    3. 'i' → logprob: -5.605870723724365
    4. '-i' → logprob: -6.355870723724365
    5. ' i' → logprob: -8.480870246887207
    6. '   ' → logprob: -11.230870246887207
    7. ')' → logprob: -11.730870246887207
    8. '       ' → logprob: -12.980870246887207
    9. ',' → logprob: -13.730870246887207
    10. '0' → logprob: -13.855870246887207

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.125
    4. '-' → logprob: -17.25
    5. '2' → logprob: -17.75
    6. '```' → logprob: -18.375
    7. '
' → logprob: -20.125
    8. '       ' → logprob: -20.5
    9. '``' → logprob: -20.75
    10. '  ' → logprob: -20.75

Token 732: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7080549001693726
    2. ':' → logprob: -0.8330549001693726
    3. ':
' → logprob: -3.083055019378662
    4. '):' → logprob: -3.833055019378662
    5. '   ' → logprob: -5.708055019378662
    6. ',' → logprob: -6.583055019378662
    7. '):
' → logprob: -9.458054542541504
    8. '-' → logprob: -9.583054542541504
    9. '       ' → logprob: -9.583054542541504
    10. ' :' → logprob: -9.708054542541504

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0050872876308858395
    2. 'cum' → logprob: -5.630087375640869
    3. 'if' → logprob: -7.130087375640869
    4. '   ' → logprob: -7.380087375640869
    5. 'c' → logprob: -10.130086898803711
    6. ' if' → logprob: -11.380086898803711
    7. '           ' → logprob: -11.880086898803711
    8. ' cum' → logprob: -13.505086898803711
    9. '	c' → logprob: -14.130086898803711
    10. '```' → logprob: -15.005086898803711

Token 734: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.2633953094482422
    2. '       ' → logprob: -1.5133953094482422
    3. '   ' → logprob: -4.638395309448242
    4. ' cum' → logprob: -6.638395309448242
    5. 'if' → logprob: -8.263395309448242
    6. 'c' → logprob: -9.138395309448242
    7. '	c' → logprob: -10.513395309448242
    8. '           ' → logprob: -11.013395309448242
    9. ' ' → logprob: -12.888395309448242
    10. '```' → logprob: -13.263395309448242

Token 735: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: 0.0
    2. '[i' → logprob: -17.875
    3. '[min' → logprob: -19.625
    4. '   ' → logprob: -20.25
    5. 'm' → logprob: -20.875
    6. '[' → logprob: -21.25
    7. 'max' → logprob: -21.25
    8. 'in' → logprob: -21.375
    9. '_min' → logprob: -21.875
    10. ' min' → logprob: -22.0

Token 736: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.870950215263292e-05
    2. '[min' → logprob: -11.000048637390137
    3. '[' → logprob: -11.250048637390137
    4. '[I' → logprob: -12.250048637390137
    5. '   ' → logprob: -12.625048637390137
    6. '=' → logprob: -12.625048637390137
    7. '[j' → logprob: -13.500048637390137
    8. ' [' → logprob: -13.625048637390137
    9. ' =' → logprob: -13.625048637390137
    10. '```' → logprob: -13.625048637390137

Token 737: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16411665081977844
    2. ' =' → logprob: -2.289116621017456
    3. ']' → logprob: -3.164116621017456
    4. ']=' → logprob: -4.914116859436035
    5. '=min' → logprob: -8.039116859436035
    6. ')' → logprob: -10.039116859436035
    7. '   ' → logprob: -10.914116859436035
    8. ')=' → logprob: -11.414116859436035
    9. ',' → logprob: -12.414116859436035
    10. ' ]' → logprob: -13.039116859436035

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002165299083571881
    2. ' =' → logprob: -8.500216484069824
    3. '=min' → logprob: -11.250216484069824
    4. '=
' → logprob: -17.12521743774414
    5. '.=' → logprob: -18.50021743774414
    6. '=

' → logprob: -19.12521743774414
    7. 'min' → logprob: -19.37521743774414
    8. '+=' → logprob: -19.75021743774414
    9. '=}' → logprob: -20.37521743774414
    10. '%=' → logprob: -20.50021743774414

Token 739: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.710618905955926e-05
    2. ' min' → logprob: -9.250097274780273
    3. 'seg' → logprob: -14.750097274780273
    4. '   ' → logprob: -15.000097274780273
    5. '	min' → logprob: -16.375097274780273
    6. 'max' → logprob: -16.500097274780273
    7. 'cum' → logprob: -16.625097274780273
    8. 'mini' → logprob: -17.750097274780273
    9. 'minimum' → logprob: -17.875097274780273
    10. '=min' → logprob: -18.625097274780273

Token 740: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.512236498361744e-07
    2. 'cum' → logprob: -15.000000953674316
    3. '(' → logprob: -15.500000953674316
    4. '(
' → logprob: -17.75
    5. 'c' → logprob: -18.25
    6. '	c' → logprob: -20.125
    7. '   ' → logprob: -20.5
    8. '()' → logprob: -21.875
    9. '((' → logprob: -22.125
    10. 'Cum' → logprob: -22.125

Token 741: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.07961057126522064
    2. 'cum' → logprob: -2.579610586166382
    3. '(c' → logprob: -7.329610347747803
    4. '[c' → logprob: -10.079610824584961
    5. 'c' → logprob: -11.954610824584961
    6. '(' → logprob: -12.454610824584961
    7. ' cum' → logprob: -12.579610824584961
    8. '   ' → logprob: -13.204610824584961
    9. '[' → logprob: -13.454610824584961
    10. 'kum' → logprob: -13.704610824584961

Token 742: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1604144275188446
    2. 'in' → logprob: -1.910414457321167
    3. '[i' → logprob: -9.410414695739746
    4. 'un' → logprob: -10.035414695739746
    5. '[min' → logprob: -10.660414695739746
    6. '   ' → logprob: -11.410414695739746
    7. '(min' → logprob: -12.285414695739746
    8. 'um' → logprob: -12.285414695739746
    9. '
' → logprob: -13.035414695739746
    10. ' min' → logprob: -13.160414695739746

Token 743: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.250006675720215
    3. 'i' → logprob: -14.750006675720215
    4. '[
' → logprob: -14.875006675720215
    5. '```' → logprob: -15.000006675720215
    6. '(i' → logprob: -15.750006675720215
    7. '[I' → logprob: -15.750006675720215
    8. ')[' → logprob: -17.3750057220459
    9. ' [' → logprob: -17.6250057220459
    10. '   ' → logprob: -18.2500057220459

Token 744: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.20333832502365112
    2. '[i' → logprob: -2.328338384628296
    3. ',' → logprob: -2.578338384628296
    4. '+' → logprob: -5.078338146209717
    5. ',i' → logprob: -5.703338146209717
    6. ' ,' → logprob: -8.078338623046875
    7. ']' → logprob: -8.203338623046875
    8. '   ' → logprob: -8.953338623046875
    9. 'i' → logprob: -9.328338623046875
    10. '],
' → logprob: -9.578338623046875

Token 745: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.0008188001229427755
    2. ' cum' → logprob: -7.125818729400635
    3. '   ' → logprob: -11.375819206237793
    4. '       ' → logprob: -13.125819206237793
    5. 'c' → logprob: -15.875819206237793
    6. '           ' → logprob: -15.875819206237793
    7. ' ' → logprob: -16.000818252563477
    8. '    ' → logprob: -16.500818252563477
    9. '        ' → logprob: -16.500818252563477
    10. '         ' → logprob: -16.500818252563477

Token 746: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.22606781125068665
    2. 'in' → logprob: -1.6010677814483643
    3. '[i' → logprob: -7.476068019866943
    4. '   ' → logprob: -10.476067543029785
    5. 'i' → logprob: -11.601067543029785
    6. '1' → logprob: -11.726067543029785
    7. '[' → logprob: -11.851067543029785
    8. '[min' → logprob: -12.101067543029785
    9. '+' → logprob: -12.601067543029785
    10. 'un' → logprob: -12.726067543029785

Token 747: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.5
    3. '[' → logprob: -18.375
    4. '[I' → logprob: -19.25
    5. '[
' → logprob: -19.75
    6. '(i' → logprob: -21.5
    7. '{i' → logprob: -21.875
    8. '   ' → logprob: -22.625
    9. '```' → logprob: -22.625
    10. ' [' → logprob: -22.875

Token 748: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025006290525197983
    2. ' +' → logprob: -6.002500534057617
    3. '+i' → logprob: -10.752500534057617
    4. '[i' → logprob: -13.002500534057617
    5. '   ' → logprob: -14.252500534057617
    6. 'i' → logprob: -14.752500534057617
    7. '[' → logprob: -16.252500534057617
    8. '1' → logprob: -17.127500534057617
    9. ' ' → logprob: -17.252500534057617
    10. '+
' → logprob: -17.752500534057617

Token 749: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -15.625000953674316
    4. '   ' → logprob: -18.5
    5. 'i' → logprob: -19.375
    6. '
' → logprob: -19.5
    7. '``' → logprob: -20.375
    8. '-' → logprob: -21.0
    9. '0' → logprob: -21.0
    10. '  ' → logprob: -21.0625

Token 750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.25
    5. '```' → logprob: -18.75
    6. ']' → logprob: -19.375
    7. '[i' → logprob: -19.875
    8. '0' → logprob: -20.0
    9. '(i' → logprob: -20.375
    10. ')' → logprob: -21.125

Token 751: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -12.125007629394531
    3. ' )' → logprob: -13.125007629394531
    4. '   ' → logprob: -15.500007629394531
    5. '       ' → logprob: -16.25000762939453
    6. '))' → logprob: -16.75000762939453
    7. '())' → logprob: -16.87500762939453
    8. ')return' → logprob: -18.00000762939453
    9. ')#' → logprob: -18.00000762939453
    10. ')}' → logprob: -18.50000762939453

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002704304177314043
    2. 'for' → logprob: -7.12770414352417
    3. 'def' → logprob: -7.25270414352417
    4. '
' → logprob: -7.50270414352417
    5. ')' → logprob: -8.002704620361328
    6. '```' → logprob: -9.627704620361328
    7. ' for' → logprob: -9.877704620361328
    8. 'i' → logprob: -9.877704620361328
    9. '<|end|>' → logprob: -10.502704620361328
    10. '    
' → logprob: -10.502704620361328

Token 753: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8043295741081238
    2. '   ' → logprob: -1.3043296337127686
    3. 'i' → logprob: -2.1793296337127686
    4. 'res' → logprob: -2.9293296337127686
    5. '#' (adapté à ' #') → logprob: -4.3043293952941895
    6. 'def' → logprob: -4.4293293952941895
    7. 'max' → logprob: -4.4293293952941895
    8. 'idx' → logprob: -4.5543293952941895
    9. 'l' → logprob: -4.6793293952941895
    10. 'answer' → logprob: -4.8043293952941895

Token 754: ' test' (ID: 1746)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.8228363990783691
    2. 'idx' → logprob: -1.8228363990783691
    3. 'dp' → logprob: -2.072836399078369
    4. 'l' → logprob: -2.322836399078369
    5. 'right' → logprob: -2.697836399078369
    6. 'left' → logprob: -2.822836399078369
    7. 'pos' → logprob: -2.947836399078369
    8. 'r' → logprob: -3.072836399078369
    9. 'for' → logprob: -3.447836399078369
    10. '#' → logprob: -4.197836399078369

Token 755: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28610336780548096
    2. 'for' → logprob: -2.1611032485961914
    3. ' for' → logprob: -2.9111032485961914
    4. 'i' → logprob: -3.9111032485961914
    5. 'print' → logprob: -4.036103248596191
    6. '#' → logprob: -4.911103248596191
    7. 'l' → logprob: -5.036103248596191
    8. 'if' → logprob: -5.036103248596191
    9. ' l' → logprob: -5.911103248596191
    10. ' if' → logprob: -5.911103248596191

Token 756: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4138229191303253
    2. ' i' → logprob: -1.288822889328003
    3. '_' → logprob: -3.038822889328003
    4. ' True' → logprob: -5.538823127746582
    5. 'j' → logprob: -6.413823127746582
    6. ' _' → logprob: -6.663823127746582
    7. ' j' → logprob: -6.663823127746582
    8. 'k' → logprob: -6.913823127746582
    9. '0' → logprob: -6.913823127746582
    10. 'True' → logprob: -7.038823127746582

Token 757: ' m' (ID: 284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11636662483215332
    2. ' i' → logprob: -2.8663666248321533
    3. 'k' → logprob: -3.8663666248321533
    4. '#' → logprob: -5.616366386413574
    5. 'idx' → logprob: -5.741366386413574
    6. 'max' → logprob: -5.991366386413574
    7. 'for' → logprob: -6.366366386413574
    8. 'beam' → logprob: -6.616366386413574
    9. 'e' → logprob: -6.991366386413574
    10. '
' → logprob: -7.116366386413574

Token 758: ' donné' (ID: 52079)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.2612130343914032
    2. '=' → logprob: -2.3862130641937256
    3. 'in' → logprob: -2.6362130641937256
    4. 'for' → logprob: -4.1362128257751465
    5. ':' → logprob: -4.5112128257751465
    6. 'range' → logprob: -4.7612128257751465
    7. 'max' → logprob: -5.2612128257751465
    8. 'en' → logprob: -5.3862128257751465
    9. ' =' → logprob: -5.5112128257751465
    10. 'def' → logprob: -6.0112128257751465

Token 759: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.550941526889801
    2. '   ' → logprob: -1.4259414672851562
    3. 'def' → logprob: -2.4259414672851562
    4. ':' → logprob: -3.1759414672851562
    5. '
' → logprob: -4.300941467285156
    6. ' m' → logprob: -4.675941467285156
    7. ' for' → logprob: -4.925941467285156
    8. '#' → logprob: -4.925941467285156
    9. 'for' → logprob: -5.175941467285156
    10. '```' → logprob: -6.300941467285156

Token 760: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15115219354629517
    2. 'm' → logprob: -2.6511521339416504
    3. 'def' → logprob: -2.9011521339416504
    4. ' for' → logprob: -5.40115213394165
    5. ' m' → logprob: -5.52615213394165
    6. 'for' → logprob: -6.65115213394165
    7. '#' → logprob: -6.77615213394165
    8. 'l' → logprob: -7.27615213394165
    9. ' def' → logprob: -7.27615213394165
    10. ' l' → logprob: -7.40115213394165

Token 761: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09098249673843384
    2. '   ' → logprob: -3.090982437133789
    3. ' def' → logprob: -3.215982437133789
    4. 'm' → logprob: -7.340982437133789
    5. ')' → logprob: -8.590982437133789
    6. '```' → logprob: -9.215982437133789
    7. '    
' → logprob: -9.465982437133789
    8. '
' → logprob: -9.465982437133789
    9. '<|end|>' → logprob: -9.465982437133789
    10. ' for' → logprob: -9.840982437133789

Token 762: ' cond' (ID: 4664)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.899121105670929
    2. 'test' → logprob: -1.1491210460662842
    3. 'can' → logprob: -1.6491210460662842
    4. 'possible' → logprob: -3.149121046066284
    5. 'valid' → logprob: -4.024121284484863
    6. 'is' → logprob: -4.774121284484863
    7. 'ok' → logprob: -5.399121284484863
    8. ' test' → logprob: -6.024121284484863
    9. 'fe' → logprob: -6.524121284484863
    10. 'm' → logprob: -6.649121284484863

Token 763: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.4498052223643754e-05
    2. '(i' → logprob: -12.375014305114746
    3. '(mid' → logprob: -12.625014305114746
    4. '(x' → logprob: -12.750014305114746
    5. '(' → logprob: -13.750014305114746
    6. '(k' → logprob: -14.000014305114746
    7. '(M' → logprob: -14.125014305114746
    8. '(l' → logprob: -14.500014305114746
    9. '(a' → logprob: -15.750014305114746
    10. '(pos' → logprob: -16.000015258789062

Token 764: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06265540421009064
    2. ',' → logprob: -2.812655448913574
    3. '):
' → logprob: -7.937655448913574
    4. ')' → logprob: -8.437655448913574
    5. '   ' → logprob: -9.812655448913574
    6. ' ):' → logprob: -11.562655448913574
    7. ':' → logprob: -11.687655448913574
    8. ' ,' → logprob: -11.937655448913574
    9. ',k' → logprob: -12.187655448913574
    10. '):
' → logprob: -12.187655448913574

Token 765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003574649803340435
    2. ' for' → logprob: -6.253574848175049
    3. '   ' → logprob: -7.378574848175049
    4. 'for' → logprob: -8.00357437133789
    5. 'l' → logprob: -8.62857437133789
    6. ' if' → logprob: -9.12857437133789
    7. ' l' → logprob: -9.25357437133789
    8. ' res' → logprob: -9.62857437133789
    9. ' i' → logprob: -10.62857437133789
    10. ' return' → logprob: -10.87857437133789

Token 766: ' if' (ID: 538)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1730804443359375
    2. 'pos' → logprob: -1.9230804443359375
    3. 'for' → logprob: -2.4230804443359375
    4. '   ' → logprob: -2.5480804443359375
    5. 'min' → logprob: -2.6730804443359375
    6. 'max' → logprob: -2.9230804443359375
    7. 'i' → logprob: -3.5480804443359375
    8. 'j' → logprob: -3.7980804443359375
    9. '       ' → logprob: -3.7980804443359375
    10. '#' → logprob: -3.7980804443359375

Token 767: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.027457647025585175
    2. 'beam' → logprob: -4.7774577140808105
    3. 'cum' → logprob: -4.7774577140808105
    4. ' m' → logprob: -4.9024577140808105
    5. 'data' → logprob: -7.2774577140808105
    6. 'N' → logprob: -7.5274577140808105
    7. 'len' → logprob: -8.027457237243652
    8. 'not' → logprob: -8.027457237243652
    9. ' cum' → logprob: -8.152457237243652
    10. ' beam' → logprob: -8.277457237243652

Token 768: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7790344953536987
    2. ' ==' → logprob: -1.0290344953536987
    3. ' <' → logprob: -2.4040346145629883
    4. '<' → logprob: -3.9040346145629883
    5. '>=' → logprob: -3.9040346145629883
    6. ' >=' → logprob: -4.029034614562988
    7. '<=' → logprob: -4.404034614562988
    8. ' <=' → logprob: -5.029034614562988
    9. '>' → logprob: -5.154034614562988
    10. ' >' → logprob: -5.654034614562988

Token 769: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0883045345544815
    2. 'N' → logprob: -2.5883045196533203
    3. '-' → logprob: -5.08830451965332
    4. ' ' → logprob: -6.08830451965332
    5. '10' → logprob: -7.96330451965332
    6. ' N' → logprob: -7.96330451965332
    7. '1' → logprob: -9.21330451965332
    8. ' -' → logprob: -9.71330451965332
    9. 'len' → logprob: -10.33830451965332
    10. '100' → logprob: -11.08830451965332

Token 770: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1489533931016922
    2. 'N' → logprob: -2.023953437805176
    3. '-' → logprob: -5.148953437805176
    4. '1' → logprob: -9.023953437805176
    5. 'len' → logprob: -9.273953437805176
    6. ' ' → logprob: -9.398953437805176
    7. '10' → logprob: -9.398953437805176
    8. ' N' → logprob: -10.773953437805176
    9. '100' → logprob: -11.523953437805176
    10. '   ' → logprob: -12.148953437805176

Token 771: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05597750470042229
    2. ':
' → logprob: -2.9309775829315186
    3. ':return' → logprob: -6.9309773445129395
    4. '       ' → logprob: -9.430977821350098
    5. '):' → logprob: -11.805977821350098
    6. '           ' → logprob: -12.055977821350098
    7. ' :' → logprob: -12.555977821350098
    8. ':
' → logprob: -12.680977821350098
    9. ' and' → logprob: -12.680977821350098
    10. '   ' → logprob: -12.930977821350098

Token 772: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08462841808795929
    2. '       ' → logprob: -2.7096283435821533
    3. 'return' → logprob: -4.709628582000732
    4. ' return' → logprob: -5.209628582000732
    5. '   ' → logprob: -10.459628105163574
    6. '	       ' → logprob: -10.459628105163574
    7. '
' → logprob: -11.709628105163574
    8. '               ' → logprob: -12.084628105163574
    9. '	return' → logprob: -12.334628105163574
    10. '          ' → logprob: -12.334628105163574

Token 773: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014962917193770409
    2. ' return' → logprob: -6.751496315002441
    3. '   ' → logprob: -8.126496315002441
    4. '       ' → logprob: -10.626496315002441
    5. 'for' → logprob: -13.001496315002441
    6. 'if' (adapté à ' if') → logprob: -14.001496315002441
    7. '#' → logprob: -14.001496315002441
    8. ' ' → logprob: -14.251496315002441
    9. '	return' → logprob: -14.626496315002441
    10. '           ' → logprob: -15.001496315002441

Token 774: ' data' (ID: 1238)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.23394106328487396
    2. 'N' → logprob: -2.233941078186035
    3. 'cum' → logprob: -3.483941078186035
    4. ' beam' → logprob: -3.858941078186035
    5. 'len' → logprob: -3.983941078186035
    6. 'data' → logprob: -4.483941078186035
    7. 'm' → logprob: -5.233941078186035
    8. ' N' → logprob: -5.483941078186035
    9. 'not' → logprob: -5.858941078186035
    10. ' len' → logprob: -6.483941078186035

Token 775: '[' (ID: 58)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.020758045837283134
    2. '[' → logprob: -3.8957581520080566
    3. '==' → logprob: -9.145757675170898
    4. ' ==' → logprob: -9.895757675170898
    5. '[len' → logprob: -11.270757675170898
    6. '[-' → logprob: -11.520757675170898
    7. '```' → logprob: -12.020757675170898
    8. 'm' → logprob: -12.020757675170898
    9. ' [' → logprob: -12.270757675170898
    10. '<m' → logprob: -12.770757675170898

Token 776: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1326237916946411
    2. 'm' → logprob: -2.3826236724853516
    3. 'N' → logprob: -3.5076236724853516
    4. '-' → logprob: -6.382623672485352
    5. ']' → logprob: -9.382623672485352
    6. 'len' → logprob: -10.632623672485352
    7. ' m' → logprob: -11.257623672485352
    8. ' N' → logprob: -11.382623672485352
    9. ' ' → logprob: -11.382623672485352
    10. '-N' → logprob: -11.507623672485352

Token 777: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14817093312740326
    2. ']>=' → logprob: -2.3981709480285645
    3. ']<=' → logprob: -3.2731709480285645
    4. ']==' → logprob: -6.0231709480285645
    5. ']<' → logprob: -6.1481709480285645
    6. ']>' → logprob: -6.1481709480285645
    7. ' ]' → logprob: -6.5231709480285645
    8. '<=' → logprob: -8.023170471191406
    9. '[' → logprob: -9.023170471191406
    10. ']!=' → logprob: -9.523170471191406

Token 778: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6482598185539246
    2. '<=' → logprob: -0.8982598185539246
    3. '>' → logprob: -3.5232598781585693
    4. ' >=' → logprob: -4.02325963973999
    5. ' <=' → logprob: -4.52325963973999
    6. '<' → logprob: -4.64825963973999
    7. ' <' → logprob: -7.52325963973999
    8. ' >' → logprob: -7.52325963973999
    9. '==' → logprob: -7.64825963973999
    10. '[' → logprob: -8.898260116577148

Token 779: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00637807184830308
    2. ' ' → logprob: -5.631378173828125
    3. '-' → logprob: -6.881378173828125
    4. 'm' → logprob: -7.131378173828125
    5. '10' → logprob: -7.631378173828125
    6. 'beam' → logprob: -8.381378173828125
    7. ' -' → logprob: -8.881378173828125
    8. '   ' → logprob: -10.756378173828125
    9. ' m' → logprob: -11.506378173828125
    10. '100' → logprob: -11.568878173828125

Token 780: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004894073354080319
    2. ' ' → logprob: -8.375489234924316
    3. '10' → logprob: -9.125489234924316
    4. 'beam' → logprob: -9.125489234924316
    5. '-' → logprob: -10.750489234924316
    6. '1' → logprob: -12.437989234924316
    7. 'm' → logprob: -12.750489234924316
    8. ' -' → logprob: -13.312989234924316
    9. '   ' → logprob: -13.375489234924316
    10. '100' → logprob: -13.562989234924316

Token 781: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08164864033460617
    2. ':
' → logprob: -2.956648588180542
    3. ':return' → logprob: -3.706648588180542
    4. '           ' → logprob: -7.331648826599121
    5. '               ' → logprob: -7.581648826599121
    6. '       ' → logprob: -7.831648826599121
    7. ' and' → logprob: -9.456648826599121
    8. '.' → logprob: -9.956648826599121
    9. ' :' → logprob: -10.331648826599121
    10. ',' → logprob: -10.581648826599121

Token 782: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5294982194900513
    2. ':' → logprob: -1.1544982194900513
    3. ':
' → logprob: -2.7794981002807617
    4. ':return' → logprob: -3.5294981002807617
    5. '           ' → logprob: -5.904498100280762
    6. '       ' → logprob: -7.029498100280762
    7. ' return' → logprob: -8.654498100280762
    8. ')' → logprob: -9.279498100280762
    9. '):' → logprob: -9.529498100280762
    10. '.' → logprob: -9.654498100280762

Token 783: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.28628674149513245
    2. 'return' (adapté à ' return') → logprob: -1.66128671169281
    3. '           ' → logprob: -3.4112868309020996
    4. '               ' → logprob: -3.7862868309020996
    5. ':return' → logprob: -6.4112868309021
    6. '	return' → logprob: -7.9112868309021
    7. '```' → logprob: -7.9112868309021
    8. '       ' → logprob: -8.411286354064941
    9. ' 
' → logprob: -8.536286354064941
    10. '   ' → logprob: -9.286286354064941

Token 784: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00012356207298580557
    2. ' True' → logprob: -9.000123977661133
    3. 'False' → logprob: -16.875123977661133
    4. '1' → logprob: -17.000123977661133
    5. '   ' → logprob: -18.625123977661133
    6. '(True' → logprob: -19.125123977661133
    7. '       ' → logprob: -21.000123977661133
    8. '
' → logprob: -21.750123977661133
    9. 'Tr' → logprob: -21.750123977661133
    10. 'true' → logprob: -21.750123977661133

Token 785: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03353262320160866
    2. '           ' → logprob: -4.033532619476318
    3. '<|end|>' → logprob: -5.408532619476318
    4. '
' → logprob: -5.908532619476318
    5. '   ' → logprob: -6.158532619476318
    6. '```' → logprob: -7.158532619476318
    7. '        
' → logprob: -7.283532619476318
    8. '	' → logprob: -7.283532619476318
    9. '    ' → logprob: -7.658532619476318
    10. '        ' → logprob: -7.658532619476318

Token 786: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003235228592529893
    2. '           ' → logprob: -5.878235340118408
    3. '   ' → logprob: -8.25323486328125
    4. '	' → logprob: -9.62823486328125
    5. '```' → logprob: -10.87823486328125
    6. '<|end|>' → logprob: -11.00323486328125
    7. 'return' → logprob: -11.50323486328125
    8. ' return' → logprob: -11.50323486328125
    9. '.' → logprob: -12.00323486328125
    10. '    ' → logprob: -12.25323486328125

Token 787: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033105581533163786
    2. 'return' → logprob: -6.003310680389404
    3. '           ' → logprob: -7.253310680389404
    4. ' return' → logprob: -9.503310203552246
    5. '   ' → logprob: -11.253310203552246
    6. '
' → logprob: -11.253310203552246
    7. 'if' → logprob: -11.628310203552246
    8. 'else' (adapté à ' else') → logprob: -12.253310203552246
    9. '      ' → logprob: -13.378310203552246
    10. '        ' → logprob: -13.628310203552246

Token 788: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08142383396625519
    2. ':
' → logprob: -2.956423759460449
    3. ':' → logprob: -4.081423759460449
    4. '           ' → logprob: -5.081423759460449
    5. ' return' → logprob: -7.081423759460449
    6. ':return' → logprob: -7.081423759460449
    7. '       ' → logprob: -7.581423759460449
    8. ' :
' → logprob: -7.831423759460449
    9. ' :' → logprob: -9.08142375946045
    10. 'return' → logprob: -9.70642375946045

Token 789: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006296341773122549
    2. ' return' → logprob: -5.131296157836914
    3. 'return' → logprob: -8.506296157836914
    4. '           ' → logprob: -9.006296157836914
    5. '       ' → logprob: -10.256296157836914
    6. '                   ' → logprob: -13.506296157836914
    7. '	           ' → logprob: -13.881296157836914
    8. '   ' → logprob: -14.131296157836914
    9. '```' → logprob: -14.131296157836914
    10. '		       ' → logprob: -14.756296157836914

Token 790: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004282704088836908
    2. ' return' → logprob: -5.504282474517822
    3. '               ' → logprob: -8.50428295135498
    4. '                   ' → logprob: -13.87928295135498
    5. '           ' → logprob: -14.50428295135498
    6. '	return' → logprob: -16.629281997680664
    7. '   ' → logprob: -17.129281997680664
    8. '       ' → logprob: -17.629281997680664
    9. '                ' → logprob: -17.629281997680664
    10. '```' → logprob: -17.879281997680664

Token 791: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01814994215965271
    2. ' False' → logprob: -4.0181498527526855
    3. '(False' → logprob: -17.018150329589844
    4. 'True' → logprob: -19.393150329589844
    5. '
' → logprob: -20.018150329589844
    6. '=False' → logprob: -21.268150329589844
    7. ' ' → logprob: -21.643150329589844
    8. '_false' → logprob: -21.768150329589844
    9. 'None' → logprob: -22.018150329589844
    10. '   ' → logprob: -22.018150329589844

Token 792: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020690545439720154
    2. '<|end|>' → logprob: -4.645690441131592
    3. '
' → logprob: -5.520690441131592
    4. '	' → logprob: -5.770690441131592
    5. '```' → logprob: -6.770690441131592
    6. '\n' → logprob: -7.270690441131592
    7. '        
' → logprob: -7.645690441131592
    8. '' → logprob: -8.64569091796875
    9. '<|end|>' → logprob: -8.89569091796875
    10. '   ' → logprob: -9.02069091796875

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5024420619010925
    2. '<|end|>' → logprob: -1.3774421215057373
    3. '   ' → logprob: -2.7524421215057373
    4. '```' → logprob: -3.1274421215057373
    5. ')' → logprob: -4.502441883087158
    6. '\n' → logprob: -5.752441883087158
    7. '	' → logprob: -6.252441883087158
    8. ' ' → logprob: -6.252441883087158
    9. '    ' → logprob: -6.502441883087158
    10. '<|end|>' → logprob: -6.502441883087158

Token 794: ' que' (ID: 661)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.171998143196106
    2. 'if' → logprob: -1.796998143196106
    3. 'r' → logprob: -1.921998143196106
    4. 'idx' → logprob: -1.921998143196106
    5. 'pos' → logprob: -2.9219980239868164
    6. 'j' → logprob: -3.0469980239868164
    7. 'right' → logprob: -3.2969980239868164
    8. 'for' → logprob: -4.171998023986816
    9. 'res' → logprob: -4.546998023986816
    10. 'i' → logprob: -4.546998023986816

Token 795: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132680654525757
    2. '=' → logprob: -1.3132680654525757
    3. ',' → logprob: -12.563267707824707
    4. ' ' → logprob: -13.938267707824707
    5. '  ' → logprob: -15.313267707824707
    6. '   ' → logprob: -15.313267707824707
    7. 'u' → logprob: -15.688267707824707
    8. 's' → logprob: -15.813267707824707
    9. '.' → logprob: -15.938267707824707
    10. 'import' → logprob: -16.063268661499023

Token 796: ' Heap' (ID: 100280)
  Prédit: 'Heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -0.004732960369437933
    2. '[]' → logprob: -5.629733085632324
    3. ' Heap' → logprob: -7.004733085632324
    4. '[]
' → logprob: -9.004733085632324
    5. 'Max' → logprob: -10.129733085632324
    6. '[' → logprob: -10.629733085632324
    7. ' []' → logprob: -11.004733085632324
    8. 'max' → logprob: -11.754733085632324
    9. '[]

' → logprob: -13.129733085632324
    10. 'heap' → logprob: -13.379733085632324

Token 797: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.093505099765025e-05
    2. '([]' → logprob: -11.625020980834961
    3. '[]' → logprob: -11.875020980834961
    4. '[' → logprob: -12.500020980834961
    5. '(' → logprob: -14.375020980834961
    6. '()' → logprob: -16.12502098083496
    7. '```' → logprob: -16.12502098083496
    8. '(max' → logprob: -16.37502098083496
    9. '=[]' → logprob: -16.50002098083496
    10. 'Q' → logprob: -16.87502098083496

Token 798: '([])
' (ID: 91082)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.15757878124713898
    2. '([]' → logprob: -2.407578706741333
    3. '(c' → logprob: -3.782578706741333
    4. '([-' → logprob: -4.282578945159912
    5. '(data' → logprob: -4.657578945159912
    6. '(' → logprob: -5.407578945159912
    7. '([(' → logprob: -6.407578945159912
    8. '([])
' → logprob: -6.407578945159912
    9. '[' → logprob: -7.532578945159912
    10. '[]' → logprob: -7.782578945159912

Token 799: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 800: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2821202278137207
    2. 'res' → logprob: -1.5321202278137207
    3. 'sum' → logprob: -2.4071202278137207
    4. 'max' → logprob: -2.5321202278137207
    5. 'offset' → logprob: -2.9071202278137207
    6. 'idx' → logprob: -3.4071202278137207
    7. 'total' → logprob: -3.6571202278137207
    8. 'c' → logprob: -3.6571202278137207
    9. 'diff' → logprob: -4.032120227813721
    10. 'cum' → logprob: -4.282120227813721

Token 801: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759848356246948
    2. '=' → logprob: -0.8259848356246948
    3. ')' → logprob: -11.325984954833984
    4. '<|end|>' → logprob: -11.325984954833984
    5. ',' → logprob: -11.700984954833984
    6. '(' → logprob: -12.825984954833984
    7. '   ' → logprob: -12.950984954833984
    8. '+=' → logprob: -13.200984954833984
    9. ' +=' → logprob: -13.575984954833984
    10. ' ==' → logprob: -14.700984954833984

Token 802: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006283254479058087
    2. ' ' → logprob: -7.375628471374512
    3. '1' → logprob: -14.000628471374512
    4. '   ' → logprob: -14.625628471374512
    5. 'm' → logprob: -15.250628471374512
    6. '  ' → logprob: -16.875627517700195
    7. '       ' → logprob: -17.750627517700195
    8. ' m' → logprob: -17.750627517700195
    9. '    ' → logprob: -18.125627517700195
    10. '[' → logprob: -18.125627517700195

Token 803: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.873571692267433e-05
    2. ' ' → logprob: -9.750068664550781
    3. '1' → logprob: -12.250068664550781
    4. '-' → logprob: -12.750068664550781
    5. 'm' → logprob: -13.250068664550781
    6. '   ' → logprob: -15.375068664550781
    7. 'len' → logprob: -15.375068664550781
    8. 'N' → logprob: -16.50006866455078
    9. '2' → logprob: -16.62506866455078
    10. '10' → logprob: -17.25006866455078

Token 804: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 805: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9953705072402954
    2. '
' → logprob: -1.8703705072402954
    3. ' for' → logprob: -1.9953705072402954
    4. '       ' → logprob: -2.370370388031006
    5. 'for' → logprob: -2.995370388031006
    6. ' while' → logprob: -3.370370388031006
    7. '   ' → logprob: -3.495370388031006
    8. '<|end|>' → logprob: -3.495370388031006
    9. 'while' → logprob: -3.870370388031006
    10. '  
' → logprob: -4.120370388031006

Token 806: ' S' (ID: 336)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1744967699050903
    2. 'idx' → logprob: -1.4244967699050903
    3. 'j' → logprob: -1.6744967699050903
    4. 'for' → logprob: -2.049496650695801
    5. 'sum' → logprob: -3.049496650695801
    6. 'pos' → logprob: -4.049496650695801
    7. 'i' → logprob: -4.174496650695801
    8. 'total' → logprob: -4.674496650695801
    9. 'ans' → logprob: -4.799496650695801
    10. 's' → logprob: -5.174496650695801

Token 807: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09556329250335693
    2. '=' → logprob: -2.4705634117126465
    3. 'um' → logprob: -5.0955634117126465
    4. ' ' → logprob: -8.220562934875488
    5. ',' → logprob: -9.595562934875488
    6. '   ' → logprob: -10.220562934875488
    7. ' +=' → logprob: -10.970562934875488
    8. ' ' → logprob: -11.220562934875488
    9. 'sum' → logprob: -11.845562934875488
    10. '       ' → logprob: -12.220562934875488

Token 808: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042102107545360923
    2. ' ' → logprob: -8.125420570373535
    3. 'beam' → logprob: -9.500420570373535
    4. '[]' → logprob: -11.375420570373535
    5. '[' → logprob: -11.625420570373535
    6. '-' → logprob: -12.250420570373535
    7. '10' → logprob: -12.375420570373535
    8. 'data' → logprob: -12.625420570373535
    9. ' beam' → logprob: -13.375420570373535
    10. '(' → logprob: -13.375420570373535

Token 809: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017362393555231392
    2. '[]' → logprob: -9.625173568725586
    3. '[' → logprob: -10.500173568725586
    4. ' ' → logprob: -10.875173568725586
    5. 'beam' → logprob: -10.875173568725586
    6. 'data' → logprob: -11.625173568725586
    7. 'float' → logprob: -12.250173568725586
    8. '10' → logprob: -12.375173568725586
    9. '-' → logprob: -12.500173568725586
    10. 'm' → logprob: -13.062673568725586

Token 810: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 812: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3173633813858032
    2. 'for' (adapté à ' for') → logprob: -1.3173633813858032
    3. '       ' → logprob: -5.942363262176514
    4. ' i' → logprob: -7.067363262176514
    5. 'i' → logprob: -8.567363739013672
    6. '<|end|>' → logprob: -8.942363739013672
    7. '   ' → logprob: -9.817363739013672
    8. ' while' → logprob: -9.942363739013672
    9. 'while' → logprob: -10.192363739013672
    10. '	for' → logprob: -10.317363739013672

Token 813: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.057907529175281525
    2. ' i' → logprob: -3.1829075813293457
    3. 'x' → logprob: -4.682907581329346
    4. 'beam' → logprob: -6.682907581329346
    5. 'a' → logprob: -7.057907581329346
    6. 'j' → logprob: -7.932907581329346
    7. 'v' → logprob: -8.182907104492188
    8. '0' → logprob: -8.307907104492188
    9. ' beam' → logprob: -8.307907104492188
    10. '(' → logprob: -8.307907104492188

Token 814: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020547492429614067
    2. 'in' → logprob: -3.895547389984131
    3. ' ' → logprob: -13.395547866821289
    4. ',' → logprob: -13.645547866821289
    5. '	in' → logprob: -14.270547866821289
    6. 'n' → logprob: -14.770547866821289
    7. '```' → logprob: -15.270547866821289
    8. '[' → logprob: -15.770547866821289
    9. 'In' → logprob: -15.895547866821289
    10. '=' → logprob: -16.02054786682129

Token 815: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010397175792604685
    2. ' range' → logprob: -6.876039505004883
    3. '   ' → logprob: -13.501039505004883
    4. '(range' → logprob: -13.876039505004883
    5. 'ran' → logprob: -14.501039505004883
    6. '```' → logprob: -14.501039505004883
    7. 'queue' → logprob: -14.626039505004883
    8. 'm' → logprob: -14.876039505004883
    9. 'beam' → logprob: -14.876039505004883
    10. 'que' → logprob: -15.001039505004883

Token 816: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6603382229804993
    2. 'm' → logprob: -0.7853382229804993
    3. '(N' → logprob: -4.035338401794434
    4. '(m' → logprob: -4.785338401794434
    5. '(' → logprob: -8.035338401794434
    6. '   ' → logprob: -8.285338401794434
    7. '(len' → logprob: -8.660338401794434
    8. ' N' → logprob: -8.785338401794434
    9. '0' → logprob: -9.285338401794434
    10. '       ' → logprob: -9.410338401794434

Token 817: ' -' (ID: 533)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1432989239692688
    2. '):' → logprob: -2.393298864364624
    3. '       ' → logprob: -3.518298864364624
    4. '-' → logprob: -5.143299102783203
    5. '   ' → logprob: -6.018299102783203
    6. ' -' → logprob: -6.643299102783203
    7. '           ' → logprob: -7.393299102783203
    8. '-m' → logprob: -7.643299102783203
    9. '):
' → logprob: -7.643299102783203
    10. ')' → logprob: -8.143299102783203

Token 818: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025805358309298754
    2. 'm' → logprob: -6.002580642700195
    3. ' ' → logprob: -9.502580642700195
    4. ' m' → logprob: -11.127580642700195
    5. '0' → logprob: -12.377580642700195
    6. '2' → logprob: -12.877580642700195
    7. '```' → logprob: -13.877580642700195
    8. '   ' → logprob: -14.002580642700195
    9. '3' → logprob: -14.127580642700195
    10. '(' → logprob: -14.440080642700195

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.030616793781518936
    2. 'm' → logprob: -3.5306167602539062
    3. 'N' → logprob: -7.905616760253906
    4. '0' → logprob: -8.655616760253906
    5. ' ' → logprob: -9.405616760253906
    6. '(' → logprob: -10.030616760253906
    7. ' m' → logprob: -10.280616760253906
    8. '2' → logprob: -10.405616760253906
    9. '(m' → logprob: -10.530616760253906
    10. 'len' → logprob: -10.655616760253906

Token 820: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32517653703689575
    2. '-' → logprob: -1.575176477432251
    3. ' -' → logprob: -3.450176477432251
    4. '+' → logprob: -3.700176477432251
    5. ',-' → logprob: -5.57517671585083
    6. '):
' → logprob: -5.82517671585083
    7. '-m' → logprob: -6.32517671585083
    8. '       ' → logprob: -6.95017671585083
    9. ' ,' → logprob: -6.95017671585083
    10. '   ' → logprob: -7.07517671585083

Token 821: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3262914717197418
    2. 'if' (adapté à ' if') → logprob: -1.4512914419174194
    3. '           ' → logprob: -4.076291561126709
    4. '       ' → logprob: -4.326291561126709
    5. 'S' → logprob: -5.451291561126709
    6. '        ' → logprob: -5.951291561126709
    7. '	       ' → logprob: -6.451291561126709
    8. '               ' → logprob: -6.951291561126709
    9. ' S' → logprob: -7.076291561126709
    10. 'while' → logprob: -7.451291561126709

Token 823: ' cnt' (ID: 27340)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.5293152928352356
    2. 'i' → logprob: -1.5293152332305908
    3. 'cnt' → logprob: -1.9043152332305908
    4. ' beam' → logprob: -4.15431547164917
    5. ' cnt' → logprob: -5.02931547164917
    6. ' i' → logprob: -5.02931547164917
    7. '(i' → logprob: -5.65431547164917
    8. 'cum' → logprob: -5.77931547164917
    9. '(' → logprob: -5.90431547164917
    10. '(cnt' → logprob: -6.77931547164917

Token 824: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6003363728523254
    2. '<' → logprob: -0.9753363728523254
    3. '+' → logprob: -3.8503363132476807
    4. ' ==' → logprob: -3.9753363132476807
    5. ' >=' → logprob: -4.22533655166626
    6. ' +' → logprob: -4.85033655166626
    7. '>=' → logprob: -5.60033655166626
    8. '==' → logprob: -5.60033655166626
    9. ' <=' → logprob: -6.47533655166626
    10. '<=' → logprob: -7.47533655166626

Token 825: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0029741376638412476
    2. '0' → logprob: -5.877974033355713
    3. ' m' → logprob: -8.877974510192871
    4. 'i' → logprob: -11.627974510192871
    5. '<m' → logprob: -11.877974510192871
    6. ' ' → logprob: -12.377974510192871
    7. '   ' → logprob: -13.377974510192871
    8. '	m' → logprob: -13.502974510192871
    9. '1' → logprob: -14.252974510192871
    10. '2' → logprob: -14.315474510192871

Token 826: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2165272831916809
    2. ':' → logprob: -2.216527223587036
    3. 'and' → logprob: -3.216527223587036
    4. ':
' → logprob: -3.716527223587036
    5. '==' → logprob: -4.591527462005615
    6. '           ' → logprob: -5.591527462005615
    7. ' ==' → logprob: -5.966527462005615
    8. '       ' → logprob: -7.091527462005615
    9. '<|end|>' → logprob: -7.216527462005615
    10. '>' → logprob: -7.341527462005615

Token 827: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010501441545784473
    2. '           ' → logprob: -6.135501384735107
    3. '<|end|>' → logprob: -6.135501384735107
    4. ' if' → logprob: -6.510501384735107
    5. ' return' → logprob: -6.635501384735107
    6. ' break' → logprob: -7.385501384735107
    7. ' S' → logprob: -8.385501861572266
    8. '                
' → logprob: -8.385501861572266
    9. ' que' → logprob: -8.635501861572266
    10. ' ' → logprob: -8.760501861572266

Token 828: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5451881885528564
    2. 'if' → logprob: -2.1701881885528564
    3. ' break' → logprob: -2.2951881885528564
    4. 'S' → logprob: -2.6701881885528564
    5. '               ' → logprob: -3.0451881885528564
    6. ' if' → logprob: -3.2951881885528564
    7. '           ' → logprob: -4.045187950134277
    8. '       ' → logprob: -4.420187950134277
    9. ' S' → logprob: -4.670187950134277
    10. 'return' → logprob: -5.795187950134277

Token 829: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7093682885169983
    2. 'que' → logprob: -1.5843682289123535
    3. 'S' → logprob: -1.9593682289123535
    4. '           ' → logprob: -3.5843682289123535
    5. '       ' → logprob: -3.5843682289123535
    6. ' if' → logprob: -3.7093682289123535
    7. 'while' → logprob: -3.9593682289123535
    8. ' que' → logprob: -4.0843682289123535
    9. 'break' → logprob: -4.2093682289123535
    10. '               ' → logprob: -5.2093682289123535

Token 830: ' teste' (ID: 62670)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.7166651487350464
    2. 'break' → logprob: -1.8416651487350464
    3. 'if' → logprob: -1.9666651487350464
    4. '       ' → logprob: -1.9666651487350464
    5. 'pop' → logprob: -2.341665267944336
    6. ' break' → logprob: -2.841665267944336
    7. ' if' → logprob: -3.716665267944336
    8. 'while' → logprob: -3.841665267944336
    9. 'for' → logprob: -3.966665267944336
    10. 'que' → logprob: -3.966665267944336

Token 831: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33133167028427124
    2. 'if' → logprob: -1.581331729888916
    3. '       ' → logprob: -3.206331729888916
    4. '           ' → logprob: -4.456331729888916
    5. '               ' → logprob: -4.706331729888916
    6. 'S' → logprob: -5.081331729888916
    7. ' S' → logprob: -6.206331729888916
    8. '                   ' → logprob: -6.706331729888916
    9. 'break' → logprob: -6.706331729888916
    10. 's' → logprob: -7.456331729888916

Token 832: ' on' (ID: 402)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.12821047008037567
    2. 'cum' → logprob: -2.3782105445861816
    3. ' S' → logprob: -3.8782105445861816
    4. ' cum' → logprob: -5.753210544586182
    5. 'data' → logprob: -6.878210544586182
    6. 'beam' → logprob: -7.753210544586182
    7. 'que' → logprob: -7.878210544586182
    8. 'not' → logprob: -8.003210067749023
    9. ' data' → logprob: -8.753210067749023
    10. '   ' → logprob: -8.878210067749023

Token 833: ' peut' (ID: 9216)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9655980467796326
    2. 'can' → logprob: -2.3405981063842773
    3. '           ' → logprob: -2.4655981063842773
    4. ' peut' → logprob: -2.9655981063842773
    5. '.top' → logprob: -2.9655981063842773
    6. '.can' → logprob: -2.9655981063842773
    7. '               ' → logprob: -3.2155981063842773
    8. '.peek' → logprob: -3.2155981063842773
    9. 'S' → logprob: -3.5905981063842773
    10. 'top' → logprob: -3.7155981063842773

Token 834: ' remplacer' (ID: 116120)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33955538272857666
    2. 'if' → logprob: -1.9645553827285767
    3. 'S' → logprob: -3.089555263519287
    4. ' S' → logprob: -3.714555263519287
    5. '           ' → logprob: -3.839555263519287
    6. '               ' → logprob: -4.089555263519287
    7. '       ' → logprob: -4.339555263519287
    8. '                   ' → logprob: -5.589555263519287
    9. '#' → logprob: -5.714555263519287
    10. ' while' → logprob: -5.839555263519287

Token 835: ' un' (ID: 537)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8814829587936401
    2. ' S' → logprob: -1.5064829587936401
    3. '               ' → logprob: -1.7564829587936401
    4. ' if' → logprob: -2.2564830780029297
    5. '           ' → logprob: -3.5064830780029297
    6. '                   ' → logprob: -4.00648307800293
    7. 'if' → logprob: -4.00648307800293
    8. '       ' → logprob: -4.88148307800293
    9. ' for' → logprob: -5.88148307800293
    10. ' que' → logprob: -6.13148307800293

Token 836: ' max' (ID: 2999)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.1862536072731018
    2. 'max' → logprob: -2.811253547668457
    3. ' top' → logprob: -3.561253547668457
    4. 'min' → logprob: -3.936253547668457
    5. 'element' → logprob: -3.936253547668457
    6. 'élé' → logprob: -5.561253547668457
    7. 'elem' → logprob: -5.686253547668457
    8. 'val' → logprob: -5.811253547668457
    9. 'if' → logprob: -5.936253547668457
    10. 'maximum' → logprob: -6.186253547668457

Token 837: '
' (ID: 198)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.5526844263076782
    2. ' token' → logprob: -2.0526843070983887
    3. ' que' → logprob: -2.6776843070983887
    4. 'heap' → logprob: -3.3026843070983887
    5. ' heap' → logprob: -3.4276843070983887
    6. 'element' → logprob: -4.302684307098389
    7. ' in' → logprob: -4.302684307098389
    8. 'token' → logprob: -4.427684307098389
    9. ' élément' → logprob: -4.427684307098389
    10. '-' → logprob: -5.052684307098389

Token 838: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10874996334314346
    2. '                   ' → logprob: -2.9837498664855957
    3. ' by' → logprob: -3.9837498664855957
    4. '           ' → logprob: -4.108749866485596
    5. '<|end|>' → logprob: -4.858749866485596
    6. ' with' → logprob: -6.233749866485596
    7. ',' → logprob: -6.358749866485596
    8. ' if' → logprob: -6.483749866485596
    9. ')' → logprob: -7.608749866485596
    10. ' =' → logprob: -7.608749866485596

Token 839: ' test' (ID: 1746)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.7058738470077515
    2. 'if' → logprob: -0.9558738470077515
    3. ' if' → logprob: -3.705873966217041
    4. 'max' → logprob: -3.830873966217041
    5. 'x' → logprob: -4.080873966217041
    6. ' top' → logprob: -4.205873966217041
    7. '               ' → logprob: -4.330873966217041
    8. 't' → logprob: -4.830873966217041
    9. 'v' → logprob: -5.455873966217041
    10. 'S' → logprob: -5.705873966217041

Token 840: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11889202892780304
    2. '=' → logprob: -2.243891954421997
    3. '_val' → logprob: -5.993892192840576
    4. '   ' → logprob: -7.868892192840576
    5. '_value' → logprob: -7.868892192840576
    6. 'if' → logprob: -7.868892192840576
    7. '_' → logprob: -8.243891716003418
    8. '_s' → logprob: -8.618891716003418
    9. 'val' → logprob: -8.618891716003418
    10. '=S' → logprob: -8.743891716003418

Token 841: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.4360504448413849
    2. 'S' → logprob: -1.0610504150390625
    3. ' que' → logprob: -5.8110504150390625
    4. ' S' → logprob: -6.1860504150390625
    5. '-' → logprob: -7.3110504150390625
    6. 'max' → logprob: -7.4360504150390625
    7. 'queue' → logprob: -8.561050415039062
    8. '   ' → logprob: -8.936050415039062
    9. '-S' → logprob: -8.936050415039062
    10. 'qu' → logprob: -10.061050415039062

Token 842: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.00015383612480945885
    2. '.' → logprob: -9.375153541564941
    3. '.pop' → logprob: -10.000153541564941
    4. '().' → logprob: -10.875153541564941
    5. '.peek' → logprob: -13.375153541564941
    6. ' .' → logprob: -14.125153541564941
    7. '.max' → logprob: -14.500153541564941
    8. 'top' → logprob: -14.875153541564941
    9. '   ' → logprob: -15.000153541564941
    10. '.push' → logprob: -15.625153541564941

Token 843: '()
' (ID: 1234)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5976026654243469
    2. '()' → logprob: -1.5976026058197021
    3. ' +' → logprob: -1.7226026058197021
    4. '-' → logprob: -3.597602605819702
    5. '+' → logprob: -3.722602605819702
    6. '()+' → logprob: -5.347602844238281
    7. '()>' → logprob: -5.347602844238281
    8. '()-' → logprob: -5.847602844238281
    9. ' >' → logprob: -6.347602844238281
    10. '>' → logprob: -6.722602844238281

Token 844: '               ' (ID: 506)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5000115036964417
    2. '<|end|>' → logprob: -2.125011444091797
    3. ' if' → logprob: -2.500011444091797
    4. '               ' → logprob: -3.000011444091797
    5. ' -' → logprob: -3.125011444091797
    6. '+' → logprob: -3.125011444091797
    7. '           ' → logprob: -3.875011444091797
    8. ')' → logprob: -4.500011444091797
    9. '
' → logprob: -5.000011444091797
    10. '-' → logprob: -5.500011444091797

Token 845: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08820401132106781
    2. 'if' (adapté à ' if') → logprob: -2.8382039070129395
    3. '           ' → logprob: -4.7132039070129395
    4. '               ' → logprob: -5.3382039070129395
    5. ' ' → logprob: -5.4632039070129395
    6. ' 
' → logprob: -6.0882039070129395
    7. '<|end|>' → logprob: -6.4632039070129395
    8. ')' → logprob: -6.8382039070129395
    9. ' ' → logprob: -7.2132039070129395
    10. '
' → logprob: -7.7132039070129395

Token 846: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.061700981110334396
    2. 'test' → logprob: -3.0617010593414307
    3. 'S' → logprob: -4.936700820922852
    4. ' beam' → logprob: -5.561700820922852
    5. 'data' → logprob: -7.811700820922852
    6. '-' → logprob: -8.186700820922852
    7. ' test' → logprob: -8.311700820922852
    8. 'queue' → logprob: -8.561700820922852
    9. '   ' → logprob: -8.936700820922852
    10. 'que' → logprob: -9.061700820922852

Token 847: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.250016212463379
    3. '[
' → logprob: -14.125016212463379
    4. ' [' → logprob: -15.375016212463379
    5. '           ' → logprob: -15.375016212463379
    6. '```' → logprob: -15.500016212463379
    7. '[I' → logprob: -15.500016212463379
    8. '[m' → logprob: -15.625016212463379
    9. '[q' → logprob: -15.625016212463379
    10. '[j' → logprob: -15.625016212463379

Token 848: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2562164068222046
    2. '[' → logprob: -1.5062164068222046
    3. ']' → logprob: -6.506216526031494
    4. ' ][' → logprob: -7.381216526031494
    5. ')[' → logprob: -7.506216526031494
    6. ' [' → logprob: -7.631216526031494
    7. '[i' → logprob: -7.631216526031494
    8. '>[' → logprob: -8.756216049194336
    9. '   ' → logprob: -9.756216049194336
    10. ']
' → logprob: -9.881216049194336

Token 849: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011076001450419426
    2. '0' → logprob: -4.511075973510742
    3. ' ' → logprob: -11.386075973510742
    4. '   ' → logprob: -12.636075973510742
    5. '```' → logprob: -12.761075973510742
    6. '[' → logprob: -12.823575973510742
    7. ']' → logprob: -13.261075973510742
    8. '
' → logprob: -13.761075973510742
    9. '2' → logprob: -14.386075973510742
    10. '])' → logprob: -14.448575973510742

Token 850: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.581695020198822
    2. '[' → logprob: -1.2066950798034668
    3. ']' → logprob: -2.706695079803467
    4. ' -' → logprob: -3.831695079803467
    5. '-' → logprob: -3.956695079803467
    6. '>' → logprob: -4.456695079803467
    7. ']>' → logprob: -4.831695079803467
    8. ' >' → logprob: -5.081695079803467
    9. ' ][' → logprob: -6.206695079803467
    10. '>[' → logprob: -6.831695079803467

Token 851: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31285348534584045
    2. '>' → logprob: -1.562853455543518
    3. ' -' → logprob: -3.6878535747528076
    4. '-' → logprob: -4.1878533363342285
    5. '[' → logprob: -4.6878533363342285
    6. ' <' → logprob: -5.4378533363342285
    7. '+' → logprob: -6.4378533363342285
    8. ' +' → logprob: -6.4378533363342285
    9. '<' → logprob: -6.9378533363342285
    10. ' ' → logprob: -8.562853813171387

Token 852: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.0007509016431868076
    2. ' test' → logprob: -7.62575101852417
    3. 'que' → logprob: -8.375750541687012
    4. 'beam' → logprob: -11.375750541687012
    5. 'queue' → logprob: -11.875750541687012
    6. '
' → logprob: -13.500750541687012
    7. '0' → logprob: -13.625750541687012
    8. 'heap' → logprob: -13.625750541687012
    9. '   ' → logprob: -13.750750541687012
    10. '	test' → logprob: -13.875750541687012

Token 853: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6402959227561951
    2. ':' → logprob: -1.0152959823608398
    3. '):
' → logprob: -3.39029598236084
    4. '):' → logprob: -3.39029598236084
    5. ' and' → logprob: -4.14029598236084
    6. ' :
' → logprob: -4.51529598236084
    7. ')' → logprob: -5.64029598236084
    8. '():
' → logprob: -5.64029598236084
    9. ' :' → logprob: -5.76529598236084
    10. '               ' → logprob: -6.14029598236084

Token 854: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.66034334897995
    2. '               ' → logprob: -0.91034334897995
    3. ')' → logprob: -3.2853434085845947
    4. ':' → logprob: -4.660343170166016
    5. '):' → logprob: -4.785343170166016
    6. '                ' → logprob: -4.910343170166016
    7. '           ' → logprob: -5.535343170166016
    8. '):
' → logprob: -5.785343170166016
    9. '<|end|>' → logprob: -5.785343170166016
    10. ':
' → logprob: -6.160343170166016

Token 855: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -0.16897250711917877
    2. '                   ' → logprob: -2.2939724922180176
    3. '               ' → logprob: -4.418972492218018
    4. 'pop' → logprob: -4.418972492218018
    5. 'q' → logprob: -4.918972492218018
    6. 'heap' → logprob: -5.168972492218018
    7. 'top' → logprob: -5.918972492218018
    8. ' que' → logprob: -6.043972492218018
    9. 'continue' → logprob: -6.043972492218018
    10. 'queue' → logprob: -6.293972492218018

Token 856: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.012884422205388546
    2. '.push' → logprob: -4.387884616851807
    3. '.' → logprob: -8.137884140014648
    4. 'pop' → logprob: -9.762884140014648
    5. '.top' → logprob: -11.012884140014648
    6. '   ' → logprob: -12.637884140014648
    7. 'push' → logprob: -13.387884140014648
    8. ' .' → logprob: -13.637884140014648
    9. '	pop' → logprob: -14.637884140014648
    10. '.Pop' → logprob: -15.387884140014648

Token 857: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23305979371070862
    2. '()
' → logprob: -1.7330597639083862
    3. '()' → logprob: -3.483059883117676
    4. ')
' → logprob: -9.358059883117676
    5. '
' → logprob: -9.608059883117676
    6. '())
' → logprob: -10.233059883117676
    7. '()
' → logprob: -10.483059883117676
    8. '                    
' → logprob: -10.483059883117676
    9. '           ' → logprob: -10.733059883117676
    10. '				' → logprob: -10.858059883117676

Token 858: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00039468807517550886
    2. '               ' → logprob: -8.875394821166992
    3. '```' → logprob: -9.625394821166992
    4. '           ' → logprob: -9.875394821166992
    5. '                    
' → logprob: -10.375394821166992
    6. '   ' → logprob: -10.500394821166992
    7. '				' → logprob: -11.125394821166992
    8. '                  ' → logprob: -11.250394821166992
    9. '                    ' → logprob: -11.375394821166992
    10. '
' → logprob: -11.750394821166992

Token 859: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -0.00025406808708794415
    2. ' que' → logprob: -9.125253677368164
    3. '                   ' → logprob: -9.750253677368164
    4. 'queue' → logprob: -10.125253677368164
    5. '```' → logprob: -10.250253677368164
    6. 'heap' → logprob: -12.250253677368164
    7. 'qui' → logprob: -13.250253677368164
    8. 'ques' → logprob: -14.000253677368164
    9. '               ' → logprob: -14.125253677368164
    10. 'quee' → logprob: -14.625253677368164

Token 860: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.00017445837147533894
    2. '.' → logprob: -8.750174522399902
    3. '   ' → logprob: -12.250174522399902
    4. ' .' → logprob: -12.875174522399902
    5. ').' → logprob: -13.000174522399902
    6. 'push' → logprob: -13.000174522399902
    7. '().' → logprob: -14.000174522399902
    8. '```' → logprob: -14.000174522399902
    9. '	push' → logprob: -14.750174522399902
    10. '.append' → logprob: -15.000174522399902

Token 861: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5716304410016164e-05
    2. 'beam' → logprob: -10.250035285949707
    3. '(
' → logprob: -15.875035285949707
    4. ' beam' → logprob: -16.750036239624023
    5. '((' → logprob: -17.000036239624023
    6. 'Beam' → logprob: -17.500036239624023
    7. '(be' → logprob: -17.875036239624023
    8. 'be' → logprob: -18.375036239624023
    9. '`' → logprob: -18.625036239624023
    10. '(heap' → logprob: -18.625036239624023

Token 862: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -2.3080716346157715e-05
    2. ' beam' → logprob: -10.875022888183594
    3. '   ' → logprob: -12.750022888183594
    4. 'be' → logprob: -14.875022888183594
    5. 'beat' → logprob: -15.000022888183594
    6. 'heap' → logprob: -15.375022888183594
    7. 'Beam' → logprob: -16.375022888183594
    8. '           ' → logprob: -17.500022888183594
    9. '```' → logprob: -17.625022888183594
    10. '       ' → logprob: -17.625022888183594

Token 863: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. 'i' → logprob: -12.125005722045898
    3. '[' → logprob: -15.625005722045898
    4. '(i' → logprob: -16.3750057220459
    5. '```' → logprob: -16.5000057220459
    6. '   ' → logprob: -17.1250057220459
    7. ' i' → logprob: -17.6250057220459
    8. '[
' → logprob: -17.6250057220459
    9. ')' → logprob: -17.7500057220459
    10. '_i' → logprob: -17.8750057220459

Token 864: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25568851828575134
    2. '][' → logprob: -1.8806885480880737
    3. '[' → logprob: -2.755688428878784
    4. ')[' → logprob: -4.755688667297363
    5. '   ' → logprob: -8.505688667297363
    6. '0' → logprob: -9.130688667297363
    7. ' [' → logprob: -9.630688667297363
    8. ')' → logprob: -9.630688667297363
    9. ' ][' → logprob: -9.755688667297363
    10. ']' → logprob: -9.880688667297363

Token 865: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4034345187828876e-05
    2. '1' → logprob: -11.00002384185791
    3. ' ' → logprob: -12.25002384185791
    4. '   ' → logprob: -14.12502384185791
    5. '[' → logprob: -14.50002384185791
    6. '```' → logprob: -15.62502384185791
    7. 'i' → logprob: -15.75002384185791
    8. '
' → logprob: -15.81252384185791
    9. '2' → logprob: -16.875024795532227
    10. 'x' → logprob: -16.937524795532227

Token 866: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07046173512935638
    2. ')
' → logprob: -2.6954617500305176
    3. '                   ' → logprob: -7.695461750030518
    4. '               ' → logprob: -10.57046127319336
    5. ' )' → logprob: -11.07046127319336
    6. ')
' → logprob: -11.69546127319336
    7. ' )
' → logprob: -12.19546127319336
    8. '           ' → logprob: -12.44546127319336
    9. '   ' → logprob: -12.69546127319336
    10. ')

' → logprob: -12.94546127319336

Token 867: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019217297667637467
    2. '               ' → logprob: -6.751921653747559
    3. '<|end|>' → logprob: -8.626921653747559
    4. ' S' → logprob: -9.126921653747559
    5. '           ' → logprob: -9.251921653747559
    6. '                  ' → logprob: -9.376921653747559
    7. '                    
' → logprob: -10.251921653747559
    8. '   ' → logprob: -10.376921653747559
    9. '	               ' → logprob: -10.501921653747559
    10. '				' → logprob: -10.751921653747559

Token 868: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.08280625939369202
    2. '                   ' → logprob: -2.582806348800659
    3. '           ' → logprob: -6.20780611038208
    4. '               ' → logprob: -6.45780611038208
    5. ' S' → logprob: -8.457806587219238
    6. '       ' → logprob: -9.832806587219238
    7. '   ' → logprob: -10.457806587219238
    8. '                  ' → logprob: -11.957806587219238
    9. 's' → logprob: -12.332806587219238
    10. 'else' → logprob: -12.332806587219238

Token 869: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.42313671112060547
    2. '=' → logprob: -1.5481367111206055
    3. '-=' → logprob: -2.2981367111206055
    4. ' +=' → logprob: -4.0481367111206055
    5. ' -=' → logprob: -4.4231367111206055
    6. ' =' → logprob: -6.2981367111206055
    7. '-' → logprob: -7.7981367111206055
    8. '    ' → logprob: -9.798136711120605
    9. '+' → logprob: -10.173136711120605
    10. '   ' → logprob: -10.548136711120605

Token 870: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0005707867676392198
    2. ' beam' → logprob: -7.875570774078369
    3. '-' → logprob: -9.375571250915527
    4. '-be' → logprob: -9.375571250915527
    5. '   ' → logprob: -11.750571250915527
    6. '(' → logprob: -11.750571250915527
    7. ' -' → logprob: -13.750571250915527
    8. 'be' → logprob: -13.875571250915527
    9. ' ' → logprob: -14.250571250915527
    10. '0' → logprob: -14.625571250915527

Token 871: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6047699318733066e-05
    2. 'i' → logprob: -11.750016212463379
    3. '[' → logprob: -12.000016212463379
    4. '(i' → logprob: -13.875016212463379
    5. '{i' → logprob: -15.125016212463379
    6. '```' → logprob: -15.500016212463379
    7. '[
' → logprob: -15.875016212463379
    8. '   ' → logprob: -17.000015258789062
    9. ',i' → logprob: -17.125015258789062
    10. '[I' → logprob: -17.250015258789062

Token 872: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009884051978588104
    2. '][' → logprob: -4.634883880615234
    3. '0' → logprob: -10.134883880615234
    4. ')[' → logprob: -10.884883880615234
    5. '()[' → logprob: -11.259883880615234
    6. ' ][' → logprob: -11.759883880615234
    7. ' [' → logprob: -11.759883880615234
    8. '   ' → logprob: -12.009883880615234
    9. '[
' → logprob: -12.134883880615234
    10. '[i' → logprob: -12.384883880615234

Token 873: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000215457082958892
    2. '1' → logprob: -8.500215530395508
    3. '[' → logprob: -12.750215530395508
    4. '
' → logprob: -13.000215530395508
    5. '[i' → logprob: -13.937715530395508
    6. 'i' → logprob: -13.937715530395508
    7. '```' → logprob: -14.250215530395508
    8. '(i' → logprob: -14.500215530395508
    9. 'cnt' → logprob: -14.937715530395508
    10. '-' → logprob: -15.000215530395508

Token 874: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.013257168233394623
    2. '-' → logprob: -4.388257026672363
    3. ')' → logprob: -7.388257026672363
    4. '<|end|>' → logprob: -9.638257026672363
    5. ')
' → logprob: -10.763257026672363
    6. '-S' → logprob: -11.513257026672363
    7. '-s' → logprob: -12.013257026672363
    8. '
' → logprob: -12.263257026672363
    9. '   ' → logprob: -12.388257026672363
    10. '                   ' → logprob: -12.763257026672363

Token 875: ' -' (ID: 533)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6706299185752869
    2. '               ' → logprob: -1.1706299781799316
    3. '<|end|>' → logprob: -2.9206299781799316
    4. '+' → logprob: -3.0456299781799316
    5. '           ' → logprob: -3.2956299781799316
    6. '-' → logprob: -3.9206299781799316
    7. '                ' → logprob: -5.420629978179932
    8. '       ' → logprob: -6.170629978179932
    9. '<|end|>' → logprob: -6.170629978179932
    10. ')' → logprob: -6.545629978179932

Token 876: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.0001600347168277949
    2. ' test' → logprob: -8.750160217285156
    3. '(test' → logprob: -13.500160217285156
    4. ')test' → logprob: -16.750160217285156
    5. '
' → logprob: -17.375160217285156
    6. '	test' → logprob: -18.125160217285156
    7. '[test' → logprob: -18.625160217285156
    8. ' ' → logprob: -19.250160217285156
    9. '               ' → logprob: -19.375160217285156
    10. 't' → logprob: -19.500160217285156

Token 877: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2523776590824127
    2. '           ' → logprob: -2.37737774848938
    3. '                   ' → logprob: -3.00237774848938
    4. '<|end|>' → logprob: -3.37737774848938
    5. '       ' → logprob: -4.252377510070801
    6. '                ' → logprob: -4.752377510070801
    7. ' 
' → logprob: -5.252377510070801
    8. ')' → logprob: -5.502377510070801
    9. '                
' → logprob: -6.627377510070801
    10. '                    
' → logprob: -6.877377510070801

Token 878: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06113765016198158
    2. '               ' → logprob: -4.186137676239014
    3. 'else' (adapté à ' else') → logprob: -4.686137676239014
    4. '       ' → logprob: -4.811137676239014
    5. ' else' → logprob: -5.186137676239014
    6. '<|end|>' → logprob: -5.561137676239014
    7. '		' → logprob: -5.686137676239014
    8. '                   ' → logprob: -5.686137676239014
    9. ' ' → logprob: -5.936137676239014
    10. ' ' → logprob: -6.186137676239014

Token 880: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4484321177005768
    2. '           ' → logprob: -1.4484320878982544
    3. '       ' → logprob: -2.823432207107544
    4. ' if' → logprob: -3.073432207107544
    5. '	       ' → logprob: -4.823431968688965
    6. '<|end|>' → logprob: -5.448431968688965
    7. '   ' → logprob: -6.948431968688965
    8. ',' → logprob: -7.073431968688965
    9. '[' → logprob: -7.073431968688965
    10. ' que' → logprob: -7.323431968688965

Token 881: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.440684050321579
    2. '               ' → logprob: -1.4406840801239014
    3. '       ' → logprob: -2.4406840801239014
    4. ' que' → logprob: -3.8156840801239014
    5. '	       ' → logprob: -5.815683841705322
    6. ' if' → logprob: -5.940683841705322
    7. ' ' → logprob: -6.815683841705322
    8. '            ' → logprob: -7.190683841705322
    9. '   ' → logprob: -7.315683841705322
    10. '```' → logprob: -7.565683841705322

Token 882: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4901544451713562
    2. 'que' (adapté à ' que') → logprob: -0.9901544451713562
    3. '               ' → logprob: -4.365154266357422
    4. '       ' → logprob: -6.865154266357422
    5. '           ' → logprob: -7.115154266357422
    6. '   ' → logprob: -7.615154266357422
    7. ' if' → logprob: -8.365154266357422
    8. '```' → logprob: -9.115154266357422
    9. 'queue' → logprob: -9.365154266357422
    10. ' ' → logprob: -9.365154266357422

Token 883: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.0009401659481227398
    2. '.' → logprob: -7.125940322875977
    3. '.pop' → logprob: -9.250940322875977
    4. '   ' → logprob: -10.750940322875977
    5. ' .' → logprob: -11.875940322875977
    6. '.append' → logprob: -12.625940322875977
    7. '       ' → logprob: -13.250940322875977
    8. ').' → logprob: -13.375940322875977
    9. 'push' → logprob: -13.875940322875977
    10. '.put' → logprob: -14.250940322875977

Token 884: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. 'beam' → logprob: -14.625000953674316
    3. '(
' → logprob: -15.250000953674316
    4. '   ' → logprob: -18.375
    5. '((' → logprob: -18.75
    6. '(be' → logprob: -19.0
    7. '()' → logprob: -19.75
    8. '(heap' → logprob: -20.25
    9. ' beam' → logprob: -20.375
    10. 'Beam' → logprob: -20.75

Token 885: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -1.0802738870552275e-05
    2. ' beam' → logprob: -12.25001049041748
    3. 'heap' → logprob: -12.87501049041748
    4. '(' → logprob: -13.25001049041748
    5. '   ' → logprob: -14.12501049041748
    6. 'be' → logprob: -14.37501049041748
    7. 'beat' → logprob: -16.125011444091797
    8. ')' → logprob: -17.000011444091797
    9. 'Beam' → logprob: -17.000011444091797
    10. 'bee' → logprob: -17.000011444091797

Token 886: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.500004768371582
    3. '[
' → logprob: -14.875004768371582
    4. 'i' → logprob: -16.000003814697266
    5. '[cnt' → logprob: -16.375003814697266
    6. ')' → logprob: -17.000003814697266
    7. '```' → logprob: -17.500003814697266
    8. '(i' → logprob: -17.625003814697266
    9. '   ' → logprob: -17.625003814697266
    10. ' [' → logprob: -17.750003814697266

Token 887: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04701726511120796
    2. '[' → logprob: -3.1720173358917236
    3. '[i' → logprob: -5.9220170974731445
    4. '0' → logprob: -7.7970170974731445
    5. '   ' → logprob: -8.047017097473145
    6. ')[' → logprob: -8.672017097473145
    7. ' ][' → logprob: -8.797017097473145
    8. ']' → logprob: -9.047017097473145
    9. ']
' → logprob: -10.547017097473145
    10. '       ' → logprob: -11.047017097473145

Token 888: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34850746393203735
    2. 'i' → logprob: -1.2235074043273926
    3. ' i' → logprob: -10.72350788116455
    4. '[i' → logprob: -10.97350788116455
    5. '   ' → logprob: -11.84850788116455
    6. '(i' → logprob: -12.72350788116455
    7. '```' → logprob: -12.84850788116455
    8. 'cnt' → logprob: -13.34850788116455
    9. ' ' → logprob: -13.72350788116455
    10. '[' → logprob: -13.84850788116455

Token 889: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20150788128376007
    2. ')' → logprob: -1.7015079259872437
    3. '           ' → logprob: -10.201507568359375
    4. '       ' → logprob: -11.076507568359375
    5. '               ' → logprob: -11.076507568359375
    6. ')
' → logprob: -11.326507568359375
    7. ' )
' → logprob: -11.951507568359375
    8. ')

' → logprob: -12.451507568359375
    9. '<|end|>' → logprob: -14.076507568359375
    10. '   ' → logprob: -14.201507568359375

Token 890: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02200288511812687
    2. '               ' → logprob: -5.022002696990967
    3. '```' → logprob: -5.272002696990967
    4. '		' → logprob: -6.022002696990967
    5. '	       ' → logprob: -6.272002696990967
    6. '       ' → logprob: -6.272002696990967
    7. '<|end|>' → logprob: -6.772002696990967
    8. '                   ' → logprob: -7.147002696990967
    9. '	' → logprob: -8.522003173828125
    10. '``' → logprob: -8.647003173828125

Token 891: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.12088152021169662
    2. 'cnt' → logprob: -2.2458815574645996
    3. '               ' → logprob: -4.8708815574646
    4. ' S' → logprob: -8.870881080627441
    5. '           ' → logprob: -9.495881080627441
    6. ' cnt' → logprob: -10.120881080627441
    7. '   ' → logprob: -10.870881080627441
    8. '              ' → logprob: -10.995881080627441
    9. '	cnt' → logprob: -10.995881080627441
    10. '			' → logprob: -11.620881080627441

Token 892: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38708046078681946
    2. ' +=' → logprob: -1.137080430984497
    3. '=' → logprob: -8.512080192565918
    4. ' =' → logprob: -13.012080192565918
    5. '+' → logprob: -13.262080192565918
    6. ']+=' → logprob: -13.262080192565918
    7. '   ' → logprob: -14.387080192565918
    8. '    ' → logprob: -14.512080192565918
    9. '       ' → logprob: -15.012080192565918
    10. '++' → logprob: -15.387080192565918

Token 893: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00029637437546625733
    2. ' beam' → logprob: -8.125296592712402
    3. 'heap' → logprob: -16.375295639038086
    4. ' ' → logprob: -16.375295639038086
    5. '   ' → logprob: -16.500295639038086
    6. 'be' → logprob: -17.875295639038086
    7. '0' → logprob: -18.500295639038086
    8. '  ' → logprob: -18.625295639038086
    9. '1' → logprob: -18.625295639038086
    10. 'beat' → logprob: -19.000295639038086

Token 894: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010032468708232045
    2. '[' → logprob: -9.250100135803223
    3. ' [' → logprob: -13.875100135803223
    4. 'i' → logprob: -14.500100135803223
    5. '   ' → logprob: -14.875100135803223
    6. '[
' → logprob: -14.875100135803223
    7. '[I' → logprob: -14.875100135803223
    8. '           ' → logprob: -15.125100135803223
    9. '[S' → logprob: -15.500100135803223
    10. ')' → logprob: -15.500100135803223

Token 895: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5302411317825317
    2. '[' → logprob: -1.2802411317825317
    3. '][' → logprob: -2.030241012573242
    4. ']' → logprob: -7.405241012573242
    5. ' [' → logprob: -7.905241012573242
    6. ' ][' → logprob: -8.030241012573242
    7. ')[' → logprob: -8.155241012573242
    8. ')' → logprob: -8.280241012573242
    9. '   ' → logprob: -9.030241012573242
    10. '[
' → logprob: -10.030241012573242

Token 896: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '[i' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.125000953674316
    4. 'i' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '```' → logprob: -17.000001907348633
    7. '[' → logprob: -17.125001907348633
    8. '1' → logprob: -17.625001907348633
    9. '(i' → logprob: -17.750001907348633
    10. '
' → logprob: -18.500001907348633

Token 897: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11741826683282852
    2. '<|end|>' → logprob: -2.2424182891845703
    3. '<|end|>' → logprob: -6.49241828918457
    4. '+' → logprob: -6.86741828918457
    5. ' )' → logprob: -7.11741828918457
    6. ')
' → logprob: -8.11741828918457
    7. ' +' → logprob: -8.49241828918457
    8. ']' → logprob: -9.36741828918457
    9. '
' → logprob: -9.36741828918457
    10. '       ' → logprob: -9.61741828918457

Token 898: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051892634481191635
    2. '       ' → logprob: -3.5518925189971924
    3. '<|end|>' → logprob: -4.5518927574157715
    4. '```' → logprob: -5.0518927574157715
    5. '               ' → logprob: -6.4268927574157715
    6. '		' → logprob: -6.6768927574157715
    7. '                   ' → logprob: -7.6768927574157715
    8. '	' → logprob: -8.176892280578613
    9. '<|end|>' → logprob: -8.176892280578613
    10. '   ' → logprob: -8.176892280578613

Token 899: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.14030541479587555
    2. '               ' → logprob: -2.515305519104004
    3. '           ' → logprob: -3.015305519104004
    4. '   ' → logprob: -7.390305519104004
    5. '       ' → logprob: -8.640305519104004
    6. '	cnt' → logprob: -9.390305519104004
    7. ' cnt' → logprob: -10.515305519104004
    8. '	           ' → logprob: -10.640305519104004
    9. '                   ' → logprob: -10.765305519104004
    10. 'count' → logprob: -11.015305519104004

Token 900: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008626040071249008
    2. ' +=' → logprob: -4.7586259841918945
    3. '```' → logprob: -12.133625984191895
    4. ']+=' → logprob: -13.133625984191895
    5. '=' → logprob: -13.383625984191895
    6. '+' → logprob: -13.508625984191895
    7. '       ' → logprob: -14.758625984191895
    8. '==' → logprob: -15.133625984191895
    9. '   ' → logprob: -15.633625984191895
    10. '+="' → logprob: -16.25862693786621

Token 901: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.500024795532227
    4. '```' → logprob: -20.625024795532227
    5. '           ' → logprob: -20.875024795532227
    6. '１' → logprob: -21.500024795532227
    7. '
' → logprob: -21.625024795532227
    8. ' ' → logprob: -22.000024795532227
    9. '۱' → logprob: -22.000024795532227
    10. '       ' → logprob: -22.250024795532227

Token 902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.875009536743164
    4. '```' → logprob: -19.000009536743164
    5. '１' → logprob: -21.687509536743164
    6. '  ' → logprob: -21.875009536743164
    7. '۱' → logprob: -22.250009536743164
    8. '           ' → logprob: -22.375009536743164
    9. '       ' → logprob: -22.437509536743164
    10. '`' → logprob: -22.750009536743164

Token 903: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 904: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 905: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10924939811229706
    2. '<|end|>' → logprob: -2.9842493534088135
    3. ' if' → logprob: -3.7342493534088135
    4. '   ' → logprob: -4.734249591827393
    5. '           ' → logprob: -4.734249591827393
    6. ' ' → logprob: -6.234249591827393
    7. 'if' (adapté à ' if') → logprob: -6.734249591827393
    8. ' ' → logprob: -6.859249591827393
    9. '```' → logprob: -7.109249591827393
    10. ')' → logprob: -7.359249591827393

Token 906: ' cnt' (ID: 27340)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.043913085013628006
    2. ' beam' → logprob: -3.7939131259918213
    3. 'i' → logprob: -4.793912887573242
    4. 'cum' → logprob: -4.793912887573242
    5. 'que' → logprob: -6.793912887573242
    6. 'S' → logprob: -7.168912887573242
    7. ' i' → logprob: -7.543912887573242
    8. 'cnt' → logprob: -8.168912887573242
    9. 'data' → logprob: -8.293912887573242
    10. 'queue' → logprob: -8.918912887573242

Token 907: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04420008137822151
    2. '==' → logprob: -3.4192001819610596
    3. ' >=' → logprob: -4.9191999435424805
    4. ' >' → logprob: -6.4191999435424805
    5. ' <=' → logprob: -7.6691999435424805
    6. '>=' → logprob: -7.7941999435424805
    7. '   ' → logprob: -8.29419994354248
    8. '>' → logprob: -9.16919994354248
    9. ' +' → logprob: -9.66919994354248
    10. '+' → logprob: -9.66919994354248

Token 908: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0006881289882585406
    2. ' m' → logprob: -7.625688076019287
    3. '   ' → logprob: -9.875688552856445
    4. 'i' → logprob: -9.875688552856445
    5. '0' → logprob: -10.125688552856445
    6. 'N' → logprob: -10.625688552856445
    7. 'beam' → logprob: -11.000688552856445
    8. '	m' → logprob: -12.625688552856445
    9. ' ' → logprob: -13.250688552856445
    10. '           ' → logprob: -13.500688552856445

Token 909: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03531588241457939
    2. ':' → logprob: -4.285315990447998
    3. ':
' → logprob: -4.660315990447998
    4. 'and' → logprob: -4.660315990447998
    5. '       ' → logprob: -6.785315990447998
    6. '           ' → logprob: -7.785315990447998
    7. '   ' → logprob: -8.78531551361084
    8. '<|end|>' → logprob: -9.66031551361084
    9. ' ' → logprob: -10.16031551361084
    10. '               ' → logprob: -10.41031551361084

Token 910: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28663602471351624
    2. ' if' → logprob: -1.5366359949111938
    3. '           ' → logprob: -4.536635875701904
    4. '<|end|>' → logprob: -4.661635875701904
    5. ' and' → logprob: -4.786635875701904
    6. '```' → logprob: -5.911635875701904
    7. 'if' → logprob: -6.786635875701904
    8. ',' → logprob: -7.536635875701904
    9. '	       ' → logprob: -8.411636352539062
    10. '<|end|>' → logprob: -8.411636352539062

Token 911: ' test' (ID: 1746)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06492055207490921
    2. 'S' → logprob: -2.939920663833618
    3. '       ' → logprob: -4.814920425415039
    4. ' if' → logprob: -7.064920425415039
    5. 'total' → logprob: -7.689920425415039
    6. 's' → logprob: -8.939920425415039
    7. 'val' → logprob: -9.064920425415039
    8. '           ' → logprob: -9.189920425415039
    9. 'diff' → logprob: -9.939920425415039
    10. 'test' (adapté à ' test') → logprob: -10.314920425415039

Token 912: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6983058452606201
    2. ' =' → logprob: -0.6983058452606201
    3. '+=' → logprob: -6.323306083679199
    4. '   ' → logprob: -6.948306083679199
    5. ' +=' → logprob: -7.573306083679199
    6. ':' → logprob: -7.573306083679199
    7. 'if' → logprob: -8.0733060836792
    8. '<=' → logprob: -8.9483060836792
    9. '==' → logprob: -9.1983060836792
    10. '>=' → logprob: -9.1983060836792

Token 913: ' S' (ID: 336)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.6716623902320862
    2. 'data' → logprob: -2.0466623306274414
    3. 'min' → logprob: -2.0466623306274414
    4. 'S' → logprob: -2.1716623306274414
    5. 'que' → logprob: -2.5466623306274414
    6. 'beam' → logprob: -4.046662330627441
    7. '-' → logprob: -5.171662330627441
    8. 'max' → logprob: -5.296662330627441
    9. 'heap' → logprob: -6.421662330627441
    10. ' cum' → logprob: -6.546662330627441

Token 914: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4972372353076935
    2. '+' → logprob: -1.372237205505371
    3. ' -' → logprob: -2.372237205505371
    4. '-' → logprob: -4.122237205505371
    5. ' >' → logprob: -4.247237205505371
    6. '>' → logprob: -5.497237205505371
    7. ' >=' → logprob: -5.997237205505371
    8. ' <=' → logprob: -5.997237205505371
    9. '   ' → logprob: -6.622237205505371
    10. '>=' → logprob: -6.622237205505371

Token 915: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3539119362831116
    2. 'cum' → logprob: -1.3539118766784668
    3. 'min' → logprob: -3.603911876678467
    4. 'max' → logprob: -5.103911876678467
    5. '(data' → logprob: -5.853911876678467
    6. ' cum' → logprob: -7.103911876678467
    7. ' data' → logprob: -7.228911876678467
    8. '(min' → logprob: -7.478911876678467
    9. 'beam' → logprob: -7.478911876678467
    10. '(c' → logprob: -8.228912353515625

Token 916: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4378848391061183e-05
    2. '[cnt' → logprob: -11.750014305114746
    3. '[' → logprob: -12.625014305114746
    4. '   ' → logprob: -13.750014305114746
    5. 'i' → logprob: -14.000014305114746
    6. '       ' → logprob: -14.875014305114746
    7. '           ' → logprob: -15.250014305114746
    8. '                   ' → logprob: -15.625014305114746
    9. '[m' → logprob: -15.875014305114746
    10. '               ' → logprob: -16.250015258789062

Token 917: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03628571331501007
    2. ']' → logprob: -3.911285638809204
    3. ' +' → logprob: -4.161285877227783
    4. '   ' → logprob: -12.161285400390625
    5. ']+' → logprob: -12.286285400390625
    6. '[' → logprob: -12.536285400390625
    7. ']
' → logprob: -13.036285400390625
    8. '])' → logprob: -13.161285400390625
    9. '+]' → logprob: -13.161285400390625
    10. '+i' → logprob: -13.661285400390625

Token 918: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.25000286102295
    3. '2' → logprob: -14.50000286102295
    4. '```' → logprob: -15.25000286102295
    5. '
' → logprob: -16.937501907348633
    6. '   ' → logprob: -17.437501907348633
    7. '[' → logprob: -18.375001907348633
    8. '0' → logprob: -18.750001907348633
    9. '１' → logprob: -18.812501907348633
    10. '           ' → logprob: -19.062501907348633

Token 919: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.5
    4. '```' → logprob: -17.25
    5. '１' → logprob: -18.125
    6. '   ' → logprob: -19.3125
    7. '۱' → logprob: -19.5625
    8. '१' → logprob: -20.1875
    9. '
' → logprob: -20.875
    10. '১' → logprob: -20.9375

Token 920: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6590747237205505
    2. '<|end|>' → logprob: -0.7840747237205505
    3. '<|end|>' → logprob: -4.909074783325195
    4. '       ' → logprob: -5.034074783325195
    5. ')
' → logprob: -5.159074783325195
    6. '           ' → logprob: -6.034074783325195
    7. '               ' → logprob: -7.034074783325195
    8. '+' → logprob: -7.909074783325195
    9. '
' → logprob: -8.034074783325195
    10. ']' → logprob: -8.284074783325195

Token 921: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07872893661260605
    2. '<|end|>' → logprob: -3.0787289142608643
    3. '```' → logprob: -3.9537289142608643
    4. '           ' → logprob: -5.578729152679443
    5. '                   ' → logprob: -6.203729152679443
    6. '       ' → logprob: -6.703729152679443
    7. '<|end|>' → logprob: -7.078729152679443
    8. ' if' → logprob: -7.578729152679443
    9. '``' → logprob: -8.203728675842285
    10. ' and' → logprob: -8.453728675842285

Token 922: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08737354725599289
    2. '           ' → logprob: -2.8373734951019287
    3. '               ' → logprob: -3.9623734951019287
    4. ' if' → logprob: -5.212373733520508
    5. '       ' → logprob: -7.462373733520508
    6. '	if' → logprob: -11.462373733520508
    7. '```' → logprob: -11.712373733520508
    8. '   ' → logprob: -12.212373733520508
    9. '                   ' → logprob: -12.337373733520508
    10. '	       ' → logprob: -12.587373733520508

Token 923: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.014192530885338783
    2. ' test' → logprob: -4.264192581176758
    3. 'not' → logprob: -10.639192581176758
    4. ' not' → logprob: -13.264192581176758
    5. '(test' → logprob: -13.639192581176758
    6. '	test' → logprob: -14.514192581176758
    7. '   ' → logprob: -14.889192581176758
    8. 't' → logprob: -15.389192581176758
    9. 'tes' → logprob: -15.389192581176758
    10. '
' → logprob: -15.514192581176758

Token 924: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2820204496383667
    2. '<=' → logprob: -1.4070204496383667
    3. ' >' → logprob: -8.157020568847656
    4. '>' → logprob: -8.282020568847656
    5. ' >=' → logprob: -9.532020568847656
    6. ' <' → logprob: -9.782020568847656
    7. '<' → logprob: -9.907020568847656
    8. '>=' → logprob: -10.032020568847656
    9. '   ' → logprob: -10.907020568847656
    10. '           ' → logprob: -10.907020568847656

Token 925: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024144348572008312
    2. ' ' → logprob: -9.12524127960205
    3. '10' → logprob: -9.75024127960205
    4. 'beam' → logprob: -10.12524127960205
    5. 'cum' → logprob: -11.12524127960205
    6. '   ' → logprob: -11.62524127960205
    7. '1' → logprob: -13.75024127960205
    8. 'm' → logprob: -13.87524127960205
    9. '  ' → logprob: -14.06274127960205
    10. '```' → logprob: -14.18774127960205

Token 926: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002525184245314449
    2. 'beam' → logprob: -9.125252723693848
    3. '10' → logprob: -9.375252723693848
    4. ' ' → logprob: -10.125252723693848
    5. '   ' → logprob: -12.375252723693848
    6. '-' → logprob: -13.375252723693848
    7. 'cum' → logprob: -13.437752723693848
    8. '
' → logprob: -13.625252723693848
    9. '1' → logprob: -13.687752723693848
    10. 'be' → logprob: -13.812752723693848

Token 927: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34948045015335083
    2. ':
' → logprob: -1.349480390548706
    3. '           ' → logprob: -4.349480628967285
    4. '                   ' → logprob: -4.599480628967285
    5. '               ' → logprob: -4.724480628967285
    6. ':return' → logprob: -5.849480628967285
    7. '<|end|>' → logprob: -7.974480628967285
    8. ' and' → logprob: -8.974480628967285
    9. '                       ' → logprob: -9.349480628967285
    10. ',' → logprob: -9.849480628967285

Token 928: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002012740820646286
    2. '               ' → logprob: -7.002012729644775
    3. '                       ' → logprob: -7.877012729644775
    4. '```' → logprob: -8.377013206481934
    5. '<|end|>' → logprob: -8.877013206481934
    6. ' return' → logprob: -9.252013206481934
    7. '                  ' → logprob: -9.377013206481934
    8. '                    
' → logprob: -10.377013206481934
    9. '           ' → logprob: -10.502013206481934
    10. '	               ' → logprob: -11.377013206481934

Token 929: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14609065651893616
    2. ' return' → logprob: -2.3960907459259033
    3. '                   ' → logprob: -3.1460907459259033
    4. '                       ' → logprob: -6.646090507507324
    5. '               ' → logprob: -7.646090507507324
    6. '	return' → logprob: -10.771090507507324
    7. '           ' → logprob: -10.771090507507324
    8. '       ' → logprob: -12.521090507507324
    9. '   ' → logprob: -13.271090507507324
    10. ':return' → logprob: -14.271090507507324

Token 930: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.1472419600977446e-06
    2. ' True' → logprob: -13.750000953674316
    3. '   ' → logprob: -19.750001907348633
    4. '(True' → logprob: -19.875001907348633
    5. 'False' → logprob: -20.500001907348633
    6. 'true' → logprob: -21.625001907348633
    7. '1' → logprob: -23.250001907348633
    8. '               ' → logprob: -23.625001907348633
    9. '=True' → logprob: -23.750001907348633
    10. '
' → logprob: -23.875001907348633

Token 931: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48316457867622375
    2. '           ' → logprob: -1.1081645488739014
    3. '```' → logprob: -4.1081647872924805
    4. '        
' → logprob: -4.2331647872924805
    5. '<|end|>' → logprob: -5.3581647872924805
    6. '\n' → logprob: -5.4831647872924805
    7. '               ' → logprob: -5.7331647872924805
    8. '            
' → logprob: -6.1081647872924805
    9. '	' → logprob: -6.3581647872924805
    10. '		
' → logprob: -6.9831647872924805

Token 932: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06476882100105286
    2. '       ' → logprob: -2.9397687911987305
    3. '               ' → logprob: -5.3147687911987305
    4. '		' → logprob: -6.5647687911987305
    5. '<|end|>' → logprob: -6.5647687911987305
    6. '	' → logprob: -8.18976879119873
    7. '```' → logprob: -8.31476879119873
    8. '	       ' → logprob: -8.43976879119873
    9. '        
' → logprob: -8.81476879119873
    10. '            
' → logprob: -8.93976879119873

Token 933: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13407786190509796
    2. '           ' → logprob: -2.134077787399292
    3. '               ' → logprob: -5.759078025817871
    4. '   ' → logprob: -6.009078025817871
    5. '                   ' → logprob: -7.759078025817871
    6. '	' → logprob: -7.884078025817871
    7. '```' → logprob: -8.134078025817871
    8. '		' → logprob: -9.509078025817871
    9. '<|end|>' → logprob: -9.884078025817871
    10. '        
' → logprob: -10.634078025817871

Token 934: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001584850688232109
    2. ' False' → logprob: -8.750158309936523
    3. '(False' → logprob: -19.750158309936523
    4. '   ' → logprob: -21.000158309936523
    5. 'True' → logprob: -22.250158309936523
    6. 'false' → logprob: -22.500158309936523
    7. '
' → logprob: -22.500158309936523
    8. 'None' → logprob: -23.000158309936523
    9. '=False' → logprob: -23.375158309936523
    10. 'F' → logprob: -23.375158309936523

Token 935: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5635239481925964
    2. '<|end|>' → logprob: -0.9385239481925964
    3. '       ' → logprob: -3.938524007797241
    4. ')' → logprob: -4.188523769378662
    5. '```' → logprob: -6.063523769378662
    6. '.' → logprob: -7.188523769378662
    7. '<|end|>' → logprob: -7.438523769378662
    8. '    
' → logprob: -8.18852424621582
    9. ',' → logprob: -8.81352424621582
    10. '...' → logprob: -9.31352424621582

Token 936: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6549198627471924
    2. 'm' → logprob: -1.6549198627471924
    3. '   ' → logprob: -2.0299198627471924
    4. 'l' → logprob: -2.6549198627471924
    5. 'def' → logprob: -3.7799198627471924
    6. 'left' → logprob: -4.154919624328613
    7. ' for' → logprob: -4.154919624328613
    8. 'low' → logprob: -4.529919624328613
    9. 'r' → logprob: -5.154919624328613
    10. 'lo' → logprob: -5.404919624328613

Token 937: ' start' (ID: 1604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.424640953540802
    2. 'l' → logprob: -1.7996408939361572
    3. 'lo' → logprob: -2.1746408939361572
    4. 'left' → logprob: -3.4246408939361572
    5. 'low' → logprob: -3.7996408939361572
    6. '
' → logprob: -5.049641132354736
    7. 'def' → logprob: -6.424641132354736
    8. '    
' → logprob: -6.424641132354736
    9. 'for' → logprob: -6.924641132354736
    10. '```' → logprob: -6.924641132354736

Token 938: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9304611682891846
    2. ' =' → logprob: -0.9304611682891846
    3. ',' → logprob: -1.5554611682891846
    4. ' ,' → logprob: -8.930460929870605
    5. ',end' → logprob: -10.930460929870605
    6. '=int' → logprob: -12.555460929870605
    7. ' ' → logprob: -13.180460929870605
    8. '```' → logprob: -13.180460929870605
    9. '=start' → logprob: -13.680460929870605
    10. '=end' → logprob: -13.805460929870605

Token 939: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.546478935983032e-05
    2. ' ' → logprob: -10.625025749206543
    3. '1' → logprob: -14.000025749206543
    4. '-' → logprob: -15.500025749206543
    5. '```' → logprob: -17.500024795532227
    6. '   ' → logprob: -17.625024795532227
    7. ' -' → logprob: -18.125024795532227
    8. '=' → logprob: -18.375024795532227
    9. '10' → logprob: -19.437524795532227
    10. '2' → logprob: -19.437524795532227

Token 940: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4378848391061183e-05
    2. '-' → logprob: -11.500014305114746
    3. ' ' → logprob: -12.625014305114746
    4. '1' → logprob: -14.000014305114746
    5. 'N' → logprob: -17.125015258789062
    6. ' -' → logprob: -17.250015258789062
    7. 'max' → logprob: -17.625015258789062
    8. '```' → logprob: -18.375015258789062
    9. '=' → logprob: -19.562515258789062
    10. '   ' → logprob: -19.875015258789062

Token 941: '
' (ID: 198)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.014083814807236195
    2. ',end' → logprob: -5.0140838623046875
    3. ' end' → logprob: -5.6390838623046875
    4. ',' → logprob: -5.7640838623046875
    5. '```' → logprob: -8.639083862304688
    6. ',
' → logprob: -9.139083862304688
    7. '=end' → logprob: -9.139083862304688
    8. '[end' → logprob: -9.514083862304688
    9. '
' → logprob: -9.889083862304688
    10. '	end' → logprob: -10.764083862304688

Token 942: '   ' (ID: 271)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -9.090760431718081e-05
    2. ',end' → logprob: -9.500090599060059
    3. ' end' → logprob: -11.125090599060059
    4. '=end' → logprob: -14.250090599060059
    5. '(end' → logprob: -15.625090599060059
    6. '[end' → logprob: -15.875090599060059
    7. ',' → logprob: -16.000091552734375
    8. '	end' → logprob: -16.250091552734375
    9. ''end' → logprob: -17.375091552734375
    10. '```' → logprob: -17.750091552734375

Token 943: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -2.7968066206085496e-05
    2. ' end' → logprob: -10.500027656555176
    3. '=end' → logprob: -15.625027656555176
    4. ',end' → logprob: -16.625028610229492
    5. '[end' → logprob: -16.875028610229492
    6. ''end' → logprob: -17.250028610229492
    7. '	end' → logprob: -18.125028610229492
    8. 'stop' → logprob: -18.250028610229492
    9. 'goal' → logprob: -18.250028610229492
    10. '(end' → logprob: -18.375028610229492

Token 944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694627046585083
    2. '=' → logprob: -2.126946210861206
    3. '=N' → logprob: -11.126946449279785
    4. '=len' → logprob: -13.626946449279785
    5. ' N' → logprob: -14.251946449279785
    6. '   ' → logprob: -14.376946449279785
    7. ' =
' → logprob: -14.751946449279785
    8. 'N' → logprob: -15.001946449279785
    9. '=
' → logprob: -16.12694549560547
    10. ',' → logprob: -16.25194549560547

Token 945: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011715330183506012
    2. ' N' → logprob: -6.751171588897705
    3. 'len' → logprob: -13.876171112060547
    4. '   ' → logprob: -15.376171112060547
    5. '10' → logprob: -16.876171112060547
    6. ' ' → logprob: -17.126171112060547
    7. '	N' → logprob: -18.126171112060547
    8. 'max' → logprob: -18.376171112060547
    9. '100' → logprob: -18.501171112060547
    10. '=N' → logprob: -18.626171112060547

Token 946: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 947: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14504244923591614
    2. 'while' → logprob: -2.2700424194335938
    3. '```' → logprob: -4.020042419433594
    4. '   ' → logprob: -5.020042419433594
    5. ' while' → logprob: -5.145042419433594
    6. ' 
' → logprob: -7.645042419433594
    7. '    
' → logprob: -8.395042419433594
    8. '  
' → logprob: -8.520042419433594
    9. '``' → logprob: -9.270042419433594
    10. '   
' → logprob: -10.020042419433594

Token 948: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3618302643299103
    2. '
' → logprob: -1.861830234527588
    3. ' while' → logprob: -2.111830234527588
    4. '   ' → logprob: -4.361830234527588
    5. '```' → logprob: -4.611830234527588
    6. '    
' → logprob: -6.486830234527588
    7. ' 
' → logprob: -6.611830234527588
    8. '  
' → logprob: -6.986830234527588
    9. '   
' → logprob: -8.611830711364746
    10. '	while' → logprob: -9.111830711364746

Token 949: ' Une' (ID: 19758)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.56102097814437e-05
    2. ' while' → logprob: -10.125045776367188
    3. '
' → logprob: -12.875045776367188
    4. '   ' → logprob: -13.125045776367188
    5. 'mid' → logprob: -14.875045776367188
    6. 'While' → logprob: -15.500045776367188
    7. '	while' → logprob: -15.625045776367188
    8. '```' → logprob: -15.750045776367188
    9. '    
' → logprob: -17.625045776367188
    10. '#' → logprob: -19.250045776367188

Token 950: ' b' (ID: 287)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0903693214058876
    2. ' while' → logprob: -2.46536922454834
    3. '
' → logprob: -7.34036922454834
    4. '   ' → logprob: -7.59036922454834
    5. ' =' → logprob: -9.96536922454834
    6. ':' → logprob: -10.84036922454834
    7. '       ' → logprob: -10.84036922454834
    8. ' #' → logprob: -10.84036922454834
    9. '```' → logprob: -11.09036922454834
    10. ' ' → logprob: -11.21536922454834

Token 951: 'inaire' (ID: 41465)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7649210691452026
    2. 'in' → logprob: -1.1399210691452026
    3. 'inary' → logprob: -2.639921188354492
    4. 'y' → logprob: -3.139921188354492
    5. '=' → logprob: -3.514921188354492
    6. ' =' → logprob: -4.014921188354492
    7. 'b' → logprob: -5.014921188354492
    8. 's' → logprob: -5.014921188354492
    9. '```' → logprob: -5.139921188354492
    10. '
' → logprob: -5.639921188354492

Token 952: ' search' (ID: 3684)
  Prédit: '_search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_search' → logprob: -0.895163893699646
    2. ' search' → logprob: -1.145163893699646
    3. 'search' → logprob: -1.645163893699646
    4. ' while' → logprob: -3.2701640129089355
    5. '   ' → logprob: -3.7701640129089355
    6. 'while' → logprob: -5.5201640129089355
    7. ' ' → logprob: -5.8951640129089355
    8. ' =' → logprob: -6.0201640129089355
    9. ' 
' → logprob: -6.2701640129089355
    10. 'earch' → logprob: -6.7701640129089355

Token 953: ' histoire' (ID: 49307)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43629270792007446
    2. ' while' → logprob: -2.0612926483154297
    3. ':' → logprob: -2.3112926483154297
    4. 'while' → logprob: -2.5612926483154297
    5. '
' → logprob: -3.3112926483154297
    6. ':
' → logprob: -5.18629264831543
    7. '	while' → logprob: -6.81129264831543
    8. '       ' → logprob: -7.56129264831543
    9. ' :
' → logprob: -7.56129264831543
    10. '  ' → logprob: -7.56129264831543

Token 954: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00196836213581264
    2. ' de' → logprob: -7.5019683837890625
    3. ' while' → logprob: -8.001968383789062
    4. '	while' → logprob: -8.126968383789062
    5. 'while' → logprob: -9.001968383789062
    6. '       ' → logprob: -9.126968383789062
    7. ' of' → logprob: -9.376968383789062
    8. ',' → logprob: -9.376968383789062
    9. '    ' → logprob: -9.501968383789062
    10. ':' → logprob: -9.751968383789062

Token 955: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.887435793876648
    2. 'while' → logprob: -1.262435793876648
    3. ' while' → logprob: -1.262435793876648
    4. '       ' → logprob: -3.8874359130859375
    5. '    ' → logprob: -7.1374359130859375
    6. '  ' → logprob: -8.262435913085938
    7. '	while' → logprob: -8.262435913085938
    8. '```' → logprob: -10.012435913085938
    9. 'faire' → logprob: -10.137435913085938
    10. 'hile' → logprob: -10.137435913085938

Token 956: 'optim' (ID: 29513)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11743216216564178
    2. 'tr' → logprob: -2.617432117462158
    3. 'find' → logprob: -4.617432117462158
    4. 'continue' → logprob: -4.992432117462158
    5. ' while' → logprob: -5.492432117462158
    6. 'fin' → logprob: -5.492432117462158
    7. 'contin' → logprob: -5.742432117462158
    8. '   ' → logprob: -6.117432117462158
    9. 'faire' → logprob: -6.492432117462158
    10. 'start' → logprob: -7.367432117462158

Token 957: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.00948583148419857
    2. 'isation' → logprob: -5.134485721588135
    3. 'izer' → logprob: -6.384485721588135
    4. 'e' → logprob: -7.509485721588135
    5. 'er' → logprob: -7.509485721588135
    6. 'ize' → logprob: -8.634486198425293
    7. 'ale' → logprob: -9.259486198425293
    8. 'isé' → logprob: -9.509486198425293
    9. '#' → logprob: -9.634486198425293
    10. 'ise' → logprob: -9.759486198425293

Token 958: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17291554808616638
    2. ' while' → logprob: -2.172915458679199
    3. '   ' → logprob: -3.672915458679199
    4. '
' → logprob: -4.797915458679199
    5. '```' → logprob: -5.797915458679199
    6. ' 
' → logprob: -6.047915458679199
    7. '	while' → logprob: -6.172915458679199
    8. '  
' → logprob: -6.297915458679199
    9. '    
' → logprob: -7.297915458679199
    10. '<|end|>' → logprob: -7.547915458679199

Token 959: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.015620655380189419
    2. '   ' → logprob: -4.390620708465576
    3. ' while' → logprob: -6.015620708465576
    4. '
' → logprob: -7.765620708465576
    5. '```' → logprob: -8.890620231628418
    6. '	while' → logprob: -9.640620231628418
    7. '  
' → logprob: -11.515620231628418
    8. '    
' → logprob: -11.640620231628418
    9. 'While' → logprob: -12.390620231628418
    10. '``' → logprob: -12.765620231628418

Token 960: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0019915630109608173
    2. ' while' → logprob: -6.3769917488098145
    3. '
' → logprob: -8.751991271972656
    4. '   ' → logprob: -9.251991271972656
    5. '```' → logprob: -10.626991271972656
    6. '	while' → logprob: -12.126991271972656
    7. 'While' → logprob: -13.501991271972656
    8. '    
' → logprob: -13.626991271972656
    9. '  
' → logprob: -14.001991271972656
    10. ' 
' → logprob: -14.126991271972656

Token 961: ' end' (ID: 1268)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.38692185282707214
    2. ' start' → logprob: -1.1369218826293945
    3. 'end' → logprob: -10.011921882629395
    4. ' end' → logprob: -12.386921882629395
    5. '(start' → logprob: -13.511921882629395
    6. '	start' → logprob: -15.136921882629395
    7. '   ' → logprob: -17.011920928955078
    8. ' ' → logprob: -17.136920928955078
    9. ' ' → logprob: -18.636920928955078
    10. '[start' → logprob: -18.886920928955078

Token 962: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6417131423950195
    2. ' >' → logprob: -1.7667131423950195
    3. '>' → logprob: -1.8917131423950195
    4. '-' → logprob: -1.8917131423950195
    5. '   ' → logprob: -8.01671314239502
    6. '=' → logprob: -8.51671314239502
    7. ' !=' → logprob: -8.76671314239502
    8. '!=' → logprob: -9.26671314239502
    9. '```' → logprob: -9.64171314239502
    10. ' >
' → logprob: -10.26671314239502

Token 963: ' start' (ID: 1604)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03825928643345833
    2. 'start' → logprob: -3.288259267807007
    3. '>' → logprob: -9.163259506225586
    4. ' ' → logprob: -10.038259506225586
    5. ' start' → logprob: -10.038259506225586
    6. '   ' → logprob: -11.038259506225586
    7. '(start' → logprob: -12.538259506225586
    8. ' >' → logprob: -12.663259506225586
    9. 'end' → logprob: -14.038259506225586
    10. '```' → logprob: -14.538259506225586

Token 964: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007607577834278345
    2. ' >' → logprob: -4.882607460021973
    3. '()>' → logprob: -14.632607460021973
    4. '1' → logprob: -15.007607460021973
    5. '>
' → logprob: -16.00760841369629
    6. '＞' → logprob: -16.13260841369629
    7. ' ' → logprob: -16.63260841369629
    8. '">' → logprob: -16.63260841369629
    9. ')>' → logprob: -16.88260841369629
    10. '&gt' → logprob: -17.00760841369629

Token 965: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.375053405761719
    4. '>' → logprob: -16.25005340576172
    5. '```' → logprob: -17.00005340576172
    6. '  ' → logprob: -17.50005340576172
    7. '
' → logprob: -18.87505340576172
    8. '	' → logprob: -19.12505340576172
    9. '       ' → logprob: -19.87505340576172
    10. '    ' → logprob: -20.18755340576172

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -17.375
    3. '```' → logprob: -18.125
    4. ' ' → logprob: -18.5
    5. '
' → logprob: -19.75
    6. '01' → logprob: -20.0
    7. '>' → logprob: -20.25
    8. '``' → logprob: -20.5
    9. '2' → logprob: -21.0
    10. '  ' → logprob: -21.25

Token 967: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20524302124977112
    2. ':
' → logprob: -1.7052429914474487
    3. '       ' → logprob: -6.080243110656738
    4. '   ' → logprob: -6.830243110656738
    5. '<|end|>' → logprob: -8.205243110656738
    6. '<|end|>' → logprob: -10.205243110656738
    7. ' and' → logprob: -10.705243110656738
    8. ',' → logprob: -10.830243110656738
    9. ' :
' → logprob: -11.080243110656738
    10. '```' → logprob: -11.080243110656738

Token 968: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43338829278945923
    2. ' mid' → logprob: -1.3083882331848145
    3. '       ' → logprob: -2.8083882331848145
    4. 'mid' → logprob: -4.5583882331848145
    5. '```' → logprob: -4.8083882331848145
    6. '	m' → logprob: -6.5583882331848145
    7. '    ' → logprob: -8.183388710021973
    8. ' middle' → logprob: -9.058388710021973
    9. '    
' → logprob: -9.433388710021973
    10. '[mid' → logprob: -9.433388710021973

Token 969: ' test' (ID: 1746)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.31418758630752563
    2. 'mid' → logprob: -1.3141875267028809
    3. '   ' → logprob: -7.689187526702881
    4. 'm' → logprob: -8.189188003540039
    5. ' m' → logprob: -8.689188003540039
    6. ' middle' → logprob: -11.439188003540039
    7. '	m' → logprob: -12.189188003540039
    8. 'middle' → logprob: -12.939188003540039
    9. '       ' → logprob: -14.439188003540039
    10. ' mids' → logprob: -14.689188003540039

Token 970: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11298363655805588
    2. ' =' → logprob: -2.2379837036132812
    3. 'mid' → logprob: -9.237983703613281
    4. '_mid' → logprob: -10.237983703613281
    5. '=int' → logprob: -12.112983703613281
    6. 'm' → logprob: -12.362983703613281
    7. '=end' → logprob: -12.612983703613281
    8. '=
' → logprob: -12.987983703613281
    9. '(mid' → logprob: -13.487983703613281
    10. '<|end|>' → logprob: -13.612983703613281

Token 971: ' (' (ID: 350)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.1282624900341034
    2. ' (' → logprob: -2.128262519836426
    3. '(end' → logprob: -6.628262519836426
    4. '(mid' → logprob: -12.378262519836426
    5. '(begin' → logprob: -13.628262519836426
    6. '       ' → logprob: -13.628262519836426
    7. '(next' → logprob: -14.003262519836426
    8. '[start' → logprob: -14.253262519836426
    9. '   ' → logprob: -14.253262519836426
    10. 'start' → logprob: -14.378262519836426

Token 972: 'end' (ID: 419)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00012439649435691535
    2. ' start' → logprob: -9.000123977661133
    3. 'end' → logprob: -14.000123977661133
    4. '(start' → logprob: -16.875123977661133
    5. '	start' → logprob: -18.500123977661133
    6. 'star' → logprob: -20.125123977661133
    7. '[start' → logprob: -20.625123977661133
    8. '   ' → logprob: -21.000123977661133
    9. '=start' → logprob: -21.625123977661133
    10. ' ' → logprob: -21.625123977661133

Token 973: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759403705596924
    2. '+' → logprob: -0.8259403705596924
    3. ' ' → logprob: -14.950940132141113
    4. '+
' → logprob: -15.450940132141113
    5. ' +
' → logprob: -15.575940132141113
    6. ' ' → logprob: -16.82594108581543
    7. '```' → logprob: -17.20094108581543
    8. '
' → logprob: -17.70094108581543
    9. '＋' → logprob: -18.32594108581543
    10. 'start' → logprob: -18.70094108581543

Token 974: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00033546582562848926
    2. ' start' → logprob: -8.000335693359375
    3. ' ' → logprob: -19.250335693359375
    4. '   ' → logprob: -21.375335693359375
    5. '	start' → logprob: -21.625335693359375
    6. '(start' → logprob: -21.875335693359375
    7. '[start' → logprob: -21.875335693359375
    8. '  ' → logprob: -22.500335693359375
    9. '
' → logprob: -22.750335693359375
    10. ')' → logprob: -23.125335693359375

Token 975: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0126840758603066e-05
    2. ')//' → logprob: -10.500040054321289
    3. ')>>' → logprob: -11.500040054321289
    4. ' )' → logprob: -13.000040054321289
    5. ')
' → logprob: -17.00004005432129
    6. '   ' → logprob: -17.75004005432129
    7. '）' → logprob: -17.75004005432129
    8. '>>' → logprob: -18.37504005432129
    9. '//' → logprob: -19.75004005432129
    10. ' ' → logprob: -20.00004005432129

Token 976: ' //' (ID: 602)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.025419633835554123
    2. ')' → logprob: -4.52541971206665
    3. ' >>' → logprob: -5.02541971206665
    4. ' //' → logprob: -5.52541971206665
    5. '//' → logprob: -5.77541971206665
    6. ')>>' → logprob: -7.65041971206665
    7. '```' → logprob: -10.150419235229492
    8. ')//' → logprob: -10.775419235229492
    9. ' ' → logprob: -11.025419235229492
    10. ' ' → logprob: -11.150419235229492

Token 977: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -20.875030517578125
    4. '```' → logprob: -21.000030517578125
    5. '۲' → logprob: -22.625030517578125
    6. '２' → logprob: -22.750030517578125
    7. '  ' → logprob: -22.875030517578125
    8. '=' → logprob: -23.125030517578125
    9. '٢' → logprob: -24.625030517578125
    10. '२' → logprob: -24.875030517578125

Token 978: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -21.125
    4. '   ' → logprob: -22.25
    5. '=' → logprob: -23.0
    6. '２' → logprob: -23.125
    7. '۲' → logprob: -23.375
    8. '  ' → logprob: -24.0
    9. '
' → logprob: -24.0
    10. '>' → logprob: -24.25

Token 979: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022855693474411964
    2. ' if' → logprob: -4.397855758666992
    3. 'if' → logprob: -5.147855758666992
    4. '<|end|>' → logprob: -5.772855758666992
    5. '
' → logprob: -6.772855758666992
    6. '<|end|>' → logprob: -9.772855758666992
    7. '        
' → logprob: -10.022855758666992
    8. '   ' → logprob: -10.647855758666992
    9. '	' → logprob: -10.897855758666992
    10. '	if' → logprob: -11.147855758666992

Token 980: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05721844732761383
    2. ' if' → logprob: -3.307218551635742
    3. 'if' → logprob: -4.057218551635742
    4. '<|end|>' → logprob: -6.557218551635742
    5. '	if' → logprob: -9.307218551635742
    6. '	' → logprob: -9.557218551635742
    7. '   ' → logprob: -9.932218551635742
    8. '<|end|>' → logprob: -10.432218551635742
    9. '```' → logprob: -11.807218551635742
    10. 'If' → logprob: -11.932218551635742

Token 981: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007156484294682741
    2. '       ' → logprob: -5.2571563720703125
    3. ' if' → logprob: -6.2571563720703125
    4. '	if' → logprob: -12.882156372070312
    5. '   ' → logprob: -14.257156372070312
    6. 'If' → logprob: -14.507156372070312
    7. '```' → logprob: -15.382156372070312
    8. '	' → logprob: -16.507156372070312
    9. '<|end|>' → logprob: -17.382156372070312
    10. '           ' → logprob: -18.007156372070312

Token 982: ' cond' (ID: 4664)
  Prédit: 'cond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.07889188081026077
    2. ' cond' → logprob: -2.5788919925689697
    3. '(cond' → logprob: -13.20389175415039
    4. '   ' → logprob: -15.70389175415039
    5. 'conds' → logprob: -17.82889175415039
    6. 'not' → logprob: -18.20389175415039
    7. ' not' → logprob: -18.32889175415039
    8. '       ' → logprob: -18.70389175415039
    9. 'condition' → logprob: -18.70389175415039
    10. ' ' → logprob: -19.57889175415039

Token 983: '(test' (ID: 16066)
  Prédit: '(test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(test' → logprob: -1.8624639324116288e-06
    2. ' (' → logprob: -13.500001907348633
    3. 'test' → logprob: -14.875001907348633
    4. '(' → logprob: -17.500001907348633
    5. '(t' → logprob: -18.375001907348633
    6. '[test' → logprob: -18.625001907348633
    7. ')test' → logprob: -18.750001907348633
    8. ' test' → logprob: -19.375001907348633
    9. ',test' → logprob: -19.500001907348633
    10. '(train' → logprob: -20.250001907348633

Token 984: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038059163838624954
    2. '):' → logprob: -3.2880592346191406
    3. ' ):
' → logprob: -12.28805923461914
    4. ':' → logprob: -12.41305923461914
    5. ':
' → logprob: -12.53805923461914
    6. ')' → logprob: -12.78805923461914
    7. '):
' → logprob: -13.78805923461914
    8. ' ):' → logprob: -14.28805923461914
    9. '       ' → logprob: -14.78805923461914
    10. '==' → logprob: -15.41305923461914

Token 985: '           ' (ID: 352)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.13709211349487305
    2. ' start' → logprob: -2.137092113494873
    3. '       ' → logprob: -4.637092113494873
    4. '[start' → logprob: -8.387092590332031
    5. '           ' → logprob: -9.512092590332031
    6. ':start' → logprob: -10.262092590332031
    7. ',start' → logprob: -10.387092590332031
    8. '
' → logprob: -10.887092590332031
    9. '	start' → logprob: -11.637092590332031
    10. '{
' → logprob: -12.262092590332031

Token 986: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.052883733063936234
    2. 'end' → logprob: -3.0528836250305176
    3. ' start' → logprob: -5.552883625030518
    4. ' end' → logprob: -7.802883625030518
    5. '	start' → logprob: -14.177884101867676
    6. '
' → logprob: -14.427884101867676
    7. '[start' → logprob: -14.677884101867676
    8. '	end' → logprob: -15.427884101867676
    9. '           ' → logprob: -15.677884101867676
    10. '   ' → logprob: -16.17788314819336

Token 987: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692904472351074
    2. ' =' → logprob: -2.1269290447235107
    3. '=test' → logprob: -14.00192928314209
    4. '<|end|>' → logprob: -17.001928329467773
    5. '＝' → logprob: -17.251928329467773
    6. '=}' → logprob: -18.126928329467773
    7. '*=' → logprob: -18.626928329467773
    8. '=
' → logprob: -18.751928329467773
    9. '+=' → logprob: -18.751928329467773
    10. ',' → logprob: -18.876928329467773

Token 988: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -7.493430894101039e-05
    2. ' test' → logprob: -9.500075340270996
    3. '	test' → logprob: -18.00007438659668
    4. '(test' → logprob: -19.00007438659668
    5. '   ' → logprob: -19.87507438659668
    6. ')test' → logprob: -20.50007438659668
    7. '=test' → logprob: -20.62507438659668
    8. '[test' → logprob: -20.87507438659668
    9. 't' → logprob: -22.00007438659668
    10. '       ' → logprob: -22.25007438659668

Token 989: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025390924885869026
    2. 'else' → logprob: -3.775390863418579
    3. ' else' → logprob: -6.150391101837158
    4. '
' → logprob: -12.400390625
    5. '```' → logprob: -13.150390625
    6. '<|end|>' → logprob: -13.900390625
    7. '#else' → logprob: -14.150390625
    8. '   ' → logprob: -14.525390625
    9. '	else' → logprob: -14.525390625
    10. '}else' → logprob: -14.900390625

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20251445472240448
    2. 'else' → logprob: -1.702514410018921
    3. ' else' → logprob: -6.8275146484375
    4. '```' → logprob: -11.2025146484375
    5. '   ' → logprob: -13.7025146484375
    6. '	else' → logprob: -13.9525146484375
    7. '<|end|>' → logprob: -14.5775146484375
    8. '	' → logprob: -15.2025146484375
    9. '#else' → logprob: -16.0775146484375
    10. '``' → logprob: -16.3275146484375

Token 991: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.015091083943843842
    2. '       ' → logprob: -4.5150909423828125
    3. ' else' → logprob: -5.5150909423828125
    4. '	else' → logprob: -12.390090942382812
    5. '   ' → logprob: -12.765090942382812
    6. '```' → logprob: -13.140090942382812
    7. '_else' → logprob: -15.890090942382812
    8. '#else' → logprob: -16.015090942382812
    9. '}else' → logprob: -16.640090942382812
    10. 'elser' → logprob: -16.890090942382812

Token 992: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7195794582366943
    2. '           ' → logprob: -1.0945794582366943
    3. 'end' → logprob: -1.9695794582366943
    4. ' end' → logprob: -4.469579696655273
    5. ':' → logprob: -5.219579696655273
    6. '       ' → logprob: -5.344579696655273
    7. ',end' → logprob: -5.344579696655273
    8. '[end' → logprob: -5.719579696655273
    9. '=end' → logprob: -5.844579696655273
    10. ':end' → logprob: -6.094579696655273

Token 993: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2543254792690277
    2. 'end' → logprob: -1.50432550907135
    3. '[end' → logprob: -7.3793253898620605
    4. '=end' → logprob: -7.7543253898620605
    5. '(end' → logprob: -8.004325866699219
    6. '	end' → logprob: -8.254325866699219
    7. '>end' → logprob: -8.629325866699219
    8. ' end' → logprob: -8.754325866699219
    9. ',end' → logprob: -9.129325866699219
    10. '		' → logprob: -9.879325866699219

Token 994: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.00021903318702243268
    2. ' end' → logprob: -8.875219345092773
    3. '           ' → logprob: -9.875219345092773
    4. '	end' → logprob: -11.625219345092773
    5. '(end' → logprob: -12.500219345092773
    6. '[end' → logprob: -12.500219345092773
    7. '=end' → logprob: -12.625219345092773
    8. ''end' → logprob: -12.875219345092773
    9. ',end' → logprob: -13.625219345092773
    10. '       ' → logprob: -13.750219345092773

Token 995: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193077325820923
    2. ' =' → logprob: -1.5019307136535645
    3. '=end' → logprob: -14.001931190490723
    4. '=test' → logprob: -14.626931190490723
    5. '=start' → logprob: -16.376930236816406
    6. '=
' → logprob: -16.501930236816406
    7. '＝' → logprob: -16.751930236816406
    8. ' =
' → logprob: -17.251930236816406
    9. ' ' → logprob: -17.626930236816406
    10. '=int' → logprob: -18.376930236816406

Token 996: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -4.5491004129871726e-05
    2. ' test' → logprob: -10.000045776367188
    3. 'end' → logprob: -17.250045776367188
    4. '(test' → logprob: -17.625045776367188
    5. 'start' → logprob: -18.750045776367188
    6. '	test' → logprob: -19.125045776367188
    7. '       ' → logprob: -19.750045776367188
    8. ')test' → logprob: -20.000045776367188
    9. '[test' → logprob: -20.375045776367188
    10. '=test' → logprob: -20.500045776367188

Token 997: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09776687622070312
    2. 'print' → logprob: -2.472766876220703
    3. 'return' → logprob: -4.847766876220703
    4. '
' → logprob: -7.472766876220703
    5. '    
' → logprob: -8.847766876220703
    6. '```' → logprob: -9.222766876220703
    7. ')' → logprob: -10.347766876220703
    8. 'else' → logprob: -11.097766876220703
    9. 'newline' → logprob: -11.597766876220703
    10. '<|end|>' → logprob: -11.597766876220703

Token 998: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5978320837020874
    2. 'print' → logprob: -0.8478320837020874
    3. '   ' → logprob: -3.847832202911377
    4. '```' → logprob: -8.347831726074219
    5. ' return' → logprob: -9.472831726074219
    6. '
' → logprob: -11.472831726074219
    7. ' print' → logprob: -13.347831726074219
    8. '	return' → logprob: -13.472831726074219
    9. '    
' → logprob: -14.722831726074219
    10. '``' → logprob: -14.847831726074219

Token 999: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01817932352423668
    2. 'return' → logprob: -4.018179416656494
    3. 'if' (adapté à ' if') → logprob: -10.893178939819336
    4. '```' → logprob: -11.518178939819336
    5. '   ' → logprob: -15.143178939819336
    6. ' print' → logprob: -15.268178939819336
    7. '
' → logprob: -16.143178939819336
    8. ' return' → logprob: -16.643178939819336
    9. 'result' → logprob: -17.268178939819336
    10. '``' → logprob: -17.643178939819336

Token 1000: ' not' (ID: 625)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4740857183933258
    2. ' start' → logprob: -0.9740856885910034
    3. ' N' → logprob: -13.099085807800293
    4. 'N' → logprob: -13.599085807800293
    5. ' ' → logprob: -13.724085807800293
    6. '   ' → logprob: -14.099085807800293
    7. 'end' → logprob: -14.224085807800293
    8. '(start' → logprob: -14.349085807800293
    9. ' end' → logprob: -14.474085807800293
    10. '__' → logprob: -14.724085807800293

Token 1001: ' cond' (ID: 4664)
  Prédit: 'cond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.09934809803962708
    2. ' cond' → logprob: -2.4743480682373047
    3. 'start' → logprob: -4.974348068237305
    4. '(cond' → logprob: -6.599348068237305
    5. 'beam' → logprob: -6.974348068237305
    6. ' start' → logprob: -7.599348068237305
    7. 'N' → logprob: -8.724348068237305
    8. 'solve' → logprob: -8.849348068237305
    9. 'data' → logprob: -9.474348068237305
    10. ' beam' → logprob: -9.474348068237305

Token 1002: '(' (ID: 7)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.00027706706896424294
    2. '(end' → logprob: -8.500277519226074
    3. '(' → logprob: -9.625277519226074
    4. ' (' → logprob: -12.125277519226074
    5. 'start' → logprob: -13.250277519226074
    6. '(
' → logprob: -16.000276565551758
    7. '(stop' → logprob: -16.250276565551758
    8. '(last' → logprob: -17.000276565551758
    9. '((' → logprob: -17.500276565551758
    10. ')' → logprob: -17.750276565551758

Token 1003: '0' (ID: 15)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.015138650313019753
    2. 'N' → logprob: -4.640138626098633
    3. '(start' → logprob: -5.390138626098633
    4. '(N' → logprob: -7.765138626098633
    5. '0' → logprob: -8.890138626098633
    6. ')' → logprob: -9.015138626098633
    7. 'end' → logprob: -9.515138626098633
    8. '(' → logprob: -10.515138626098633
    9. '(end' → logprob: -11.390138626098633
    10. ' start' → logprob: -11.890138626098633

Token 1004: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20219196379184723
    2. '):
' → logprob: -1.702191948890686
    3. ')' → logprob: -7.4521918296813965
    4. ':' → logprob: -9.202192306518555
    5. '   ' → logprob: -10.077192306518555
    6. ':
' → logprob: -10.327192306518555
    7. ' or' → logprob: -11.702192306518555
    8. '):
' → logprob: -12.077192306518555
    9. ' ):' → logprob: -13.077192306518555
    10. '       ' → logprob: -13.452192306518555

Token 1005: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47834599018096924
    2. '       ' → logprob: -0.9783459901809692
    3. 'print' → logprob: -5.47834587097168
    4. ' print' → logprob: -10.22834587097168
    5. 'return' → logprob: -10.72834587097168
    6. '```' → logprob: -11.35334587097168
    7. 'start' → logprob: -12.10334587097168
    8. '
' → logprob: -12.85334587097168
    9. '	print' → logprob: -13.85334587097168
    10. ' return' → logprob: -13.97834587097168

Token 1006: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06831711530685425
    2. '   ' → logprob: -2.818317174911499
    3. 'return' → logprob: -5.56831693649292
    4. ' print' → logprob: -6.31831693649292
    5. '```' → logprob: -7.44331693649292
    6. '
' → logprob: -10.068317413330078
    7. ' return' → logprob: -10.193317413330078
    8. '       ' → logprob: -10.693317413330078
    9. '``' → logprob: -11.443317413330078
    10. '	print' → logprob: -11.943317413330078

Token 1007: '("' (ID: 568)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013060462661087513
    2. '0' → logprob: -4.388060569763184
    3. '(-' → logprob: -7.638060569763184
    4. '(' → logprob: -10.013060569763184
    5. '"-' → logprob: -11.138060569763184
    6. '("-' → logprob: -13.013060569763184
    7. ' -' → logprob: -13.263060569763184
    8. '-N' → logprob: -14.013060569763184
    9. ''-' → logprob: -14.138060569763184
    10. '"' → logprob: -14.763060569763184

Token 1008: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003443499794229865
    2. 'Impossible' → logprob: -6.503443717956543
    3. 'No' → logprob: -7.378443717956543
    4. '"-' → logprob: -7.753443717956543
    5. 'im' → logprob: -8.503443717956543
    6. '":' → logprob: -8.878443717956543
    7. '0' → logprob: -8.878443717956543
    8. '-im' → logprob: -9.003443717956543
    9. '"' → logprob: -9.253443717956543
    10. ':' → logprob: -9.628443717956543

Token 1009: ' ' (ID: 220)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.18071264028549194
    2. '")
' → logprob: -1.8057126998901367
    3. ')")
' → logprob: -8.055712699890137
    4. ')")' → logprob: -8.305712699890137
    5. '0' → logprob: -9.055712699890137
    6. ')' → logprob: -9.055712699890137
    7. '")
' → logprob: -9.180712699890137
    8. '\n' → logprob: -11.555712699890137
    9. '}")' → logprob: -11.680712699890137
    10. '"' → logprob: -11.805712699890137

Token 1010: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002104221610352397
    2. '")' → logprob: -6.62710428237915
    3. '")
' → logprob: -8.002103805541992
    4. '1' → logprob: -8.252103805541992
    5. '\n' → logprob: -9.127103805541992
    6. ' ' → logprob: -9.877103805541992
    7. '-' → logprob: -11.502103805541992
    8. '"' → logprob: -12.127103805541992
    9. '")
' → logprob: -14.002103805541992
    10. 'n' → logprob: -14.377103805541992

Token 1011: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01125212199985981
    2. '")
' → logprob: -4.636251926422119
    3. '")
' → logprob: -7.386251926422119
    4. '0' → logprob: -7.761251926422119
    5. '\n' → logprob: -8.136252403259277
    6. ')' → logprob: -9.511252403259277
    7. ')")' → logprob: -9.886252403259277
    8. ')")
' → logprob: -11.511252403259277
    9. '"' → logprob: -12.261252403259277
    10. '1' → logprob: -12.886252403259277

Token 1012: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008190384833142161
    2. 'else' → logprob: -7.750819206237793
    3. '       ' → logprob: -7.875819206237793
    4. 'return' → logprob: -12.000819206237793
    5. '```' → logprob: -13.250819206237793
    6. 'import' → logprob: -15.625819206237793
    7. 'elif' → logprob: -15.750819206237793
    8. ' else' → logprob: -16.875818252563477
    9. '
' → logprob: -17.000818252563477
    10. ' ' → logprob: -17.625818252563477

Token 1013: ' exit' (ID: 10654)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7025518417358398
    2. '       ' → logprob: -0.7025518417358398
    3. 'return' → logprob: -4.70255184173584
    4. 'else' → logprob: -8.20255184173584
    5. 'elif' → logprob: -12.20255184173584
    6. '```' → logprob: -12.20255184173584
    7. ' return' → logprob: -13.95255184173584
    8. 'print' → logprob: -14.32755184173584
    9. '
' → logprob: -14.45255184173584
    10. 'import' → logprob: -14.45255184173584

Token 1014: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014352317666634917
    2. '
' → logprob: -7.751435279846191
    3. '    
' → logprob: -8.251435279846191
    4. '()' → logprob: -8.376435279846191
    5. '()
' → logprob: -8.501435279846191
    6. 'print' → logprob: -9.001435279846191
    7. '(' → logprob: -9.001435279846191
    8. '0' → logprob: -11.001435279846191
    9. ')' → logprob: -11.251435279846191
    10. '1' → logprob: -11.626435279846191

Token 1015: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025598532520234585
    2. '   ' → logprob: -6.502559661865234
    3. '```' → logprob: -7.002559661865234
    4. '
' → logprob: -9.002559661865234
    5. '``' → logprob: -11.752559661865234
    6. ' print' → logprob: -12.002559661865234
    7. '    
' → logprob: -13.127559661865234
    8. 'else' → logprob: -13.377559661865234
    9. 'if' → logprob: -13.502559661865234
    10. '	print' → logprob: -13.627559661865234

Token 1016: ' m' (ID: 284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015800826076883823
    2. '   ' → logprob: -10.000158309936523
    3. 'for' → logprob: -10.000158309936523
    4. '```' → logprob: -10.625158309936523
    5. 'while' → logprob: -11.000158309936523
    6. 'count' → logprob: -12.250158309936523
    7. 'left' → logprob: -12.875158309936523
    8. 'pr' → logprob: -13.000158309936523
    9. 'start' → logprob: -13.125158309936523
    10. 'i' → logprob: -13.125158309936523

Token 1017: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08017361909151077
    2. ' =' → logprob: -2.5801737308502197
    3. ',' → logprob: -7.330173492431641
    4. '+=' → logprob: -7.830173492431641
    5. ' +=' → logprob: -9.45517349243164
    6. ')' → logprob: -10.70517349243164
    7. '+' → logprob: -10.70517349243164
    8. '=int' → logprob: -10.83017349243164
    9. '=
' → logprob: -11.20517349243164
    10. 'print' → logprob: -11.45517349243164

Token 1018: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00026181264547631145
    2. ' start' → logprob: -8.250262260437012
    3. 'N' → logprob: -15.500262260437012
    4. 'end' → logprob: -15.875262260437012
    5. '   ' → logprob: -16.125261306762695
    6. '[start' → logprob: -18.875261306762695
    7. '
' → logprob: -19.375261306762695
    8. '0' → logprob: -19.500261306762695
    9. 'solve' → logprob: -20.125261306762695
    10. ' N' → logprob: -20.250261306762695

Token 1019: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14739888906478882
    2. '
' → logprob: -2.5223989486694336
    3. 'if' → logprob: -4.772398948669434
    4. 'ans' → logprob: -4.772398948669434
    5. 'res' → logprob: -5.147398948669434
    6. 'for' → logprob: -5.272398948669434
    7. 's' → logprob: -5.647398948669434
    8. 'S' → logprob: -5.647398948669434
    9. 'best' → logprob: -5.897398948669434
    10. 'while' → logprob: -6.022398948669434

Token 1020: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029590792953968048
    2. 'res' → logprob: -5.404590606689453
    3. 'r' → logprob: -5.779590606689453
    4. 's' → logprob: -5.779590606689453
    5. 'ans' → logprob: -5.779590606689453
    6. '   ' → logprob: -6.029590606689453
    7. 'k' → logprob: -6.279590606689453
    8. 'cnt' → logprob: -6.279590606689453
    9. 'pos' → logprob: -6.904590606689453
    10. 'p' → logprob: -7.029590606689453

Token 1021: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.4860070943832397
    2. 'res' → logprob: -2.1110072135925293
    3. 'l' → logprob: -2.4860072135925293
    4. 'idx' → logprob: -2.7360072135925293
    5. 'left' → logprob: -2.8610072135925293
    6. 'answer' → logprob: -3.2360072135925293
    7. 'S' → logprob: -3.3610072135925293
    8. 'end' → logprob: -3.3610072135925293
    9. 'ok' → logprob: -3.4860072135925293
    10. 'pos' → logprob: -3.6110072135925293

Token 1022: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5035825371742249
    2. ' =' → logprob: -1.50358247756958
    3. ',' → logprob: -1.75358247756958
    4. ',m' → logprob: -10.503582954406738
    5. ' ,' → logprob: -10.628582954406738
    6. '=
' → logprob: -10.878582954406738
    7. '```' → logprob: -11.128582954406738
    8. ',n' → logprob: -12.003582954406738
    9. '=int' → logprob: -12.128582954406738
    10. '<|end|>' → logprob: -12.253582954406738

Token 1023: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8763403296470642
    2. '[' → logprob: -1.626340389251709
    3. '1' → logprob: -1.751340389251709
    4. 'N' → logprob: -3.126340389251709
    5. 'm' → logprob: -3.251340389251709
    6. '(' → logprob: -3.251340389251709
    7. '10' → logprob: -3.876340389251709
    8. '[m' → logprob: -4.251340389251709
    9. '"' → logprob: -4.626340389251709
    10. 'beam' → logprob: -4.751340389251709

Token 1024: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19642268121242523
    2. 'i' → logprob: -2.946422576904297
    3. '-' → logprob: -3.196422576904297
    4. 'False' → logprob: -3.821422576904297
    5. '[]' → logprob: -4.196422576904297
    6. 'beam' → logprob: -4.321422576904297
    7. 'float' → logprob: -4.571422576904297
    8. '(' → logprob: -5.196422576904297
    9. ']' → logprob: -5.571422576904297
    10. '1' → logprob: -5.571422576904297

Token 1025: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0073495120741426945
    2. ']*' → logprob: -5.757349491119385
    3. 'for' → logprob: -6.382349491119385
    4. ',' → logprob: -6.507349491119385
    5. ' for' → logprob: -7.632349491119385
    6. '<|end|>' → logprob: -8.757349967956543
    7. '   ' → logprob: -9.382349967956543
    8. ')' → logprob: -10.257349967956543
    9. ']
' → logprob: -10.257349967956543
    10. ' ]' → logprob: -10.632349967956543

Token 1026: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7523301839828491
    2. '10' → logprob: -1.2523301839828491
    3. 'N' → logprob: -1.5023301839828491
    4. 'float' → logprob: -4.377330303192139
    5. '1' → logprob: -5.252330303192139
    6. '-' → logprob: -7.377330303192139
    7. 'm' → logprob: -8.00232982635498
    8. 'None' → logprob: -8.12732982635498
    9. ' ' → logprob: -8.25232982635498
    10. 'int' → logprob: -8.50232982635498

Token 1027: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5461645126342773
    2. '0' → logprob: -1.0461645126342773
    3. 'float' → logprob: -3.5461645126342773
    4. 'N' → logprob: -3.5461645126342773
    5. '1' → logprob: -5.171164512634277
    6. 'int' → logprob: -5.671164512634277
    7. 'm' → logprob: -6.921164512634277
    8. '-' → logprob: -7.296164512634277
    9. '(' → logprob: -8.296164512634277
    10. 'len' → logprob: -8.671164512634277

Token 1028: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5761664509773254
    2. ']' → logprob: -0.8261664509773254
    3. '   ' → logprob: -9.326166152954102
    4. ']
' → logprob: -9.326166152954102
    5. ']

' → logprob: -10.201166152954102
    6. ')
' → logprob: -12.701166152954102
    7. '
' → logprob: -12.951166152954102
    8. ')' → logprob: -13.201166152954102
    9. ' ]
' → logprob: -13.701166152954102
    10. ' ]' → logprob: -13.826166152954102

Token 1029: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02389133907854557
    2. 'left' → logprob: -4.898891448974609
    3. 'low' → logprob: -5.773891448974609
    4. 'count' → logprob: -5.898891448974609
    5. 'i' → logprob: -6.398891448974609
    6. 'while' → logprob: -6.523891448974609
    7. 'idx' → logprob: -6.523891448974609
    8. 'l' → logprob: -6.648891448974609
    9. 'def' → logprob: -7.648891448974609
    10. '   ' → logprob: -7.898891448974609

Token 1030: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009338809177279472
    2. 'i' → logprob: -5.509338855743408
    3. 'idx' → logprob: -6.634338855743408
    4. 'count' → logprob: -7.259338855743408
    5. 'last' → logprob: -7.884338855743408
    6. 'pos' → logprob: -8.00933837890625
    7. 'prev' → logprob: -8.13433837890625
    8. 'ans' → logprob: -8.13433837890625
    9. 'cnt' → logprob: -8.13433837890625
    10. 'm' → logprob: -8.25933837890625

Token 1031: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0889742523431778
    2. ' =' → logprob: -2.4639742374420166
    3. '=
' → logprob: -11.088973999023438
    4. '=[]' → logprob: -11.713973999023438
    5. '.push' → logprob: -12.213973999023438
    6. '=[]
' → logprob: -13.338973999023438
    7. ',' → logprob: -13.963973999023438
    8. '＝' → logprob: -13.963973999023438
    9. '	' → logprob: -14.338973999023438
    10. '   ' → logprob: -14.713973999023438

Token 1032: ' Heap' (ID: 100280)
  Prédit: 'Heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -2.15310683415737e-05
    2. '[]' → logprob: -10.875021934509277
    3. ' Heap' → logprob: -13.000021934509277
    4. '[]
' → logprob: -15.875021934509277
    5. 'heap' → logprob: -17.25002098083496
    6. 'Beam' → logprob: -17.62502098083496
    7. '[' → logprob: -18.62502098083496
    8. '[]}' → logprob: -19.25002098083496
    9. 'max' → logprob: -19.62502098083496
    10. 'Heat' → logprob: -20.00002098083496

Token 1033: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. '[]' → logprob: -16.125
    3. '[' → logprob: -16.625
    4. 'Q' → logprob: -17.625
    5. '```' → logprob: -17.625
    6. ']' → logprob: -19.875
    7. '`' → logprob: -20.25
    8. 'Que' → logprob: -20.375
    9. 'que' → logprob: -20.375
    10. '([]' → logprob: -20.5

Token 1034: '([])
' (ID: 91082)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.00017588881019037217
    2. '[]' → logprob: -8.875175476074219
    3. '([])
' → logprob: -10.500175476074219
    4. '(' → logprob: -12.125175476074219
    5. '([' → logprob: -13.000175476074219
    6. '([],' → logprob: -14.250175476074219
    7. '((' → logprob: -16.87517547607422
    8. '=[]' → logprob: -17.62517547607422
    9. '()' → logprob: -18.37517547607422
    10. '([-' → logprob: -18.37517547607422

Token 1035: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.1659216731786728
    2. 'S' → logprob: -1.915921688079834
    3. 'for' → logprob: -5.790921688079834
    4. 'm' → logprob: -6.165921688079834
    5. 'count' → logprob: -8.665921211242676
    6. '```' → logprob: -9.040921211242676
    7. '   ' → logprob: -9.415921211242676
    8. ' cnt' → logprob: -10.540921211242676
    9. ' S' → logprob: -10.540921211242676
    10. 'i' → logprob: -10.790921211242676

Token 1036: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.08225259929895401
    2. 'S' → logprob: -2.7072525024414062
    3. 'for' → logprob: -4.457252502441406
    4. 'idx' → logprob: -7.957252502441406
    5. 'count' → logprob: -8.707252502441406
    6. 'm' → logprob: -10.082252502441406
    7. '```' → logprob: -10.457252502441406
    8. 'index' → logprob: -11.582252502441406
    9. 'ans' → logprob: -11.707252502441406
    10. 'counter' → logprob: -12.082252502441406

Token 1037: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740927219390869
    2. '=' → logprob: -0.9740927219390869
    3. '   ' → logprob: -11.599092483520508
    4. '=
' → logprob: -12.849092483520508
    5. ' =
' → logprob: -14.224092483520508
    6. '    ' → logprob: -14.724092483520508
    7. '	' → logprob: -14.849092483520508
    8. '+=' → logprob: -14.849092483520508
    9. '<|end|>' → logprob: -14.849092483520508
    10. ',' → logprob: -15.099092483520508

Token 1038: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '1' → logprob: -19.000003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '۰' → logprob: -21.375003814697266
    6. '```' → logprob: -21.375003814697266
    7. ' ' → logprob: -21.500003814697266
    8. '=' → logprob: -21.625003814697266
    9. '<|end|>' → logprob: -21.625003814697266
    10. '	' → logprob: -21.750003814697266

Token 1039: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -19.5
    4. 'm' → logprob: -20.25
    5. '=' → logprob: -20.25
    6. '1' → logprob: -20.625
    7. '   ' → logprob: -21.0
    8. ' ' → logprob: -21.875
    9. '  ' → logprob: -21.875
    10. '000' → logprob: -22.5

Token 1040: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2394341379404068
    2. 'S' → logprob: -1.8644341230392456
    3. 'i' → logprob: -3.489434242248535
    4. ' for' → logprob: -3.864434242248535
    5. 'idx' → logprob: -5.614434242248535
    6. '   ' → logprob: -6.614434242248535
    7. '	for' → logprob: -7.989434242248535
    8. ' S' → logprob: -8.114434242248535
    9. ' i' → logprob: -8.489434242248535
    10. '```' → logprob: -8.489434242248535

Token 1041: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.002229832811281085
    2. 'for' → logprob: -6.127229690551758
    3. '   ' → logprob: -10.377229690551758
    4. 'idx' → logprob: -12.502229690551758
    5. 'i' → logprob: -13.127229690551758
    6. 's' → logprob: -13.627229690551758
    7. ' S' → logprob: -13.877229690551758
    8. 'A' → logprob: -14.002229690551758
    9. 'import' → logprob: -14.127229690551758
    10. 'res' → logprob: -14.377229690551758

Token 1042: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.006161870900541544
    2. 'for' → logprob: -5.131161689758301
    3. 'idx' → logprob: -9.3811616897583
    4. 'res' → logprob: -10.3811616897583
    5. 'import' → logprob: -10.6311616897583
    6. 'ans' → logprob: -10.8811616897583
    7. 'result' → logprob: -11.2561616897583
    8. 'index' → logprob: -11.3811616897583
    9. 'from' → logprob: -11.5061616897583
    10. 'total' → logprob: -12.2561616897583

Token 1043: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740803837776184
    2. '=' → logprob: -0.9740803837776184
    3. '   ' → logprob: -13.099080085754395
    4. '=
' → logprob: -14.724080085754395
    5. 'for' → logprob: -15.349080085754395
    6. ',' → logprob: -15.974080085754395
    7. ' ' → logprob: -16.34908103942871
    8. ' =
' → logprob: -16.47408103942871
    9. '+=' → logprob: -16.47408103942871
    10. ' ' → logprob: -16.47408103942871

Token 1044: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '۰' → logprob: -18.87506675720215
    4. '=' → logprob: -19.50006675720215
    5. ' ' → logprob: -19.75006675720215
    6. '   ' → logprob: -19.87506675720215
    7. '+' → logprob: -20.62506675720215
    8. '  ' → logprob: -21.00006675720215
    9. '00' → logprob: -21.37506675720215
    10. '<|end|>' → logprob: -21.62506675720215

Token 1045: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -19.375
    4. '=' → logprob: -21.25
    5. '000' → logprob: -21.375
    6. '00' → logprob: -21.625
    7. '۰' → logprob: -21.75
    8. '  ' → logprob: -22.625
    9. '#' → logprob: -22.75
    10. '```' → logprob: -23.125

Token 1046: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4076078236103058
    2. '   ' → logprob: -1.2826077938079834
    3. ' for' → logprob: -2.9076077938079834
    4. '
' → logprob: -6.2826080322265625
    5. '<|end|>' → logprob: -7.2826080322265625
    6. '	for' → logprob: -8.782608032226562
    7. '    
' → logprob: -10.407608032226562
    8. '```' → logprob: -10.407608032226562
    9. 'i' → logprob: -10.532608032226562
    10. 'idx' → logprob: -11.032608032226562

Token 1047: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002210681326687336
    2. ' for' → logprob: -6.50221061706543
    3. '```' → logprob: -7.87721061706543
    4. '   ' → logprob: -8.12721061706543
    5. '	for' → logprob: -10.62721061706543
    6. '
' → logprob: -12.12721061706543
    7. 'i' → logprob: -13.12721061706543
    8. '    
' → logprob: -13.87721061706543
    9. '``' → logprob: -15.25221061706543
    10. '_for' → logprob: -15.87721061706543

Token 1048: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2352385965641588e-05
    2. 'i' → logprob: -11.500012397766113
    3. ' for' → logprob: -13.250012397766113
    4. '```' → logprob: -15.375012397766113
    5. '   ' → logprob: -15.750012397766113
    6. 'idx' → logprob: -18.000011444091797
    7. '	for' → logprob: -18.750011444091797
    8. '
' → logprob: -19.250011444091797
    9. 'index' → logprob: -19.625011444091797
    10. 'while' → logprob: -20.125011444091797

Token 1049: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.22671952843666077
    2. ' m' → logprob: -1.6017194986343384
    3. 'cnt' → logprob: -7.101719379425049
    4. ' cnt' → logprob: -8.101719856262207
    5. 'N' → logprob: -9.851719856262207
    6. ' not' → logprob: -10.476719856262207
    7. 'not' → logprob: -10.976719856262207
    8. '   ' → logprob: -10.976719856262207
    9. ' N' → logprob: -11.351719856262207
    10. 'start' → logprob: -11.976719856262207

Token 1050: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5311627984046936
    2. ' >' → logprob: -1.1561627388000488
    3. ' ==' → logprob: -2.781162738800049
    4. '==' → logprob: -3.406162738800049
    5. ':' → logprob: -6.906162738800049
    6. ' <' → logprob: -7.406162738800049
    7. '<' → logprob: -8.406163215637207
    8. ' !=' → logprob: -8.781163215637207
    9. '   ' → logprob: -9.031163215637207
    10. '!=' → logprob: -9.281163215637207

Token 1051: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037859921576455235
    2. 'N' → logprob: -8.000378608703613
    3. ' ' → logprob: -10.125378608703613
    4. '   ' → logprob: -13.375378608703613
    5. ' N' → logprob: -13.875378608703613
    6. '1' → logprob: -15.125378608703613
    7. '```' → logprob: -15.750378608703613
    8. 'None' → logprob: -17.250377655029297
    9. '  ' → logprob: -17.875377655029297
    10. '<N' → logprob: -18.250377655029297

Token 1052: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.375007629394531
    3. 'N' → logprob: -12.750007629394531
    4. '   ' → logprob: -16.50000762939453
    5. ' N' → logprob: -18.37500762939453
    6. '1' → logprob: -18.75000762939453
    7. '  ' → logprob: -19.37500762939453
    8. 'start' → logprob: -19.50000762939453
    9. 'None' → logprob: -20.37500762939453
    10. '```' → logprob: -20.37500762939453

Token 1053: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018158724531531334
    2. ':
' → logprob: -4.018158912658691
    3. '   ' → logprob: -12.018158912658691
    4. ' :' → logprob: -13.393158912658691
    5. '.' → logprob: -15.143158912658691
    6. '       ' → logprob: -15.268158912658691
    7. ' :
' → logprob: -15.643158912658691
    8. ',' → logprob: -15.768158912658691
    9. '{' → logprob: -15.893158912658691
    10. ':

' → logprob: -16.018157958984375

Token 1054: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3712935149669647
    2. ' for' → logprob: -1.871293544769287
    3. '   ' → logprob: -1.996293544769287
    4. '	for' → logprob: -4.496293544769287
    5. 'for' → logprob: -4.871293544769287
    6. '```' → logprob: -7.121293544769287
    7. '	   ' → logprob: -7.496293544769287
    8. '    ' → logprob: -9.871293067932129
    9. '	' → logprob: -9.871293067932129
    10. '
' → logprob: -10.871293067932129

Token 1055: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14415062963962555
    2. '   ' → logprob: -2.019150733947754
    3. '       ' → logprob: -7.394150733947754
    4. ' for' → logprob: -7.394150733947754
    5. 'idx' → logprob: -9.144150733947754
    6. 'i' → logprob: -9.769150733947754
    7. 'que' → logprob: -10.769150733947754
    8. 'j' → logprob: -11.019150733947754
    9. '	for' → logprob: -11.269150733947754
    10. '```' → logprob: -11.269150733947754

Token 1056: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.062299732118844986
    2. ' i' → logprob: -2.8122997283935547
    3. '_i' → logprob: -9.562299728393555
    4. '0' → logprob: -9.562299728393555
    5. '_' → logprob: -9.937299728393555
    6. 'range' → logprob: -10.562299728393555
    7. '   ' → logprob: -10.687299728393555
    8. 'beam' → logprob: -10.812299728393555
    9. ' range' → logprob: -11.874799728393555
    10. '```' → logprob: -11.937299728393555

Token 1057: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02632700465619564
    2. 'in' → logprob: -3.651326894760132
    3. ' ' → logprob: -12.401327133178711
    4. ',' → logprob: -12.526327133178711
    5. '   ' → logprob: -12.776327133178711
    6. '	in' → logprob: -12.776327133178711
    7. 'range' → logprob: -12.901327133178711
    8. '    ' → logprob: -13.026327133178711
    9. '```' → logprob: -13.526327133178711
    10. '0' → logprob: -13.651327133178711

Token 1058: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00040219054790213704
    2. ' range' → logprob: -7.875401973724365
    3. 'in' → logprob: -11.375402450561523
    4. '   ' → logprob: -12.750402450561523
    5. '```' → logprob: -13.125402450561523
    6. '(range' → logprob: -13.500402450561523
    7. '
' → logprob: -13.625402450561523
    8. '0' → logprob: -14.375402450561523
    9. '	range' → logprob: -15.000402450561523
    10. ' in' → logprob: -15.125402450561523

Token 1059: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016381781548261642
    2. ' range' → logprob: -5.141381740570068
    3. '(N' → logprob: -5.266381740570068
    4. '(range' → logprob: -5.391381740570068
    5. 'N' → logprob: -7.891381740570068
    6. '(' → logprob: -8.391382217407227
    7. '   ' → logprob: -9.766382217407227
    8. 'm' → logprob: -12.141382217407227
    9. '0' → logprob: -12.391382217407227
    10. '(m' → logprob: -12.891382217407227

Token 1060: ' -' (ID: 533)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07671894133090973
    2. '):' → logprob: -3.451719045639038
    3. '   ' → logprob: -3.826719045639038
    4. '       ' → logprob: -4.201718807220459
    5. '           ' → logprob: -6.576718807220459
    6. ')' → logprob: -6.826718807220459
    7. ':' → logprob: -6.826718807220459
    8. ':
' → logprob: -7.576718807220459
    9. '+' → logprob: -7.576718807220459
    10. '-' → logprob: -8.201719284057617

Token 1061: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009211953729391098
    2. 'm' → logprob: -4.759212017059326
    3. ' ' → logprob: -8.009211540222168
    4. ')' → logprob: -9.634211540222168
    5. ' m' → logprob: -10.134211540222168
    6. '   ' → logprob: -10.384211540222168
    7. '(' → logprob: -10.384211540222168
    8. '0' → logprob: -11.009211540222168
    9. '(m' → logprob: -11.009211540222168
    10. '2' → logprob: -11.134211540222168

Token 1062: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018395140068605542
    2. 'm' → logprob: -6.376839637756348
    3. '2' → logprob: -9.251839637756348
    4. ' ' → logprob: -10.876839637756348
    5. '(' → logprob: -12.126839637756348
    6. '   ' → logprob: -12.751839637756348
    7. '0' → logprob: -12.751839637756348
    8. '(m' → logprob: -12.876839637756348
    9. ' m' → logprob: -13.001839637756348
    10. '```' → logprob: -13.376839637756348

Token 1063: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1665409803390503
    2. ':
' → logprob: -1.1665409803390503
    3. '):
' → logprob: -1.2915409803390503
    4. '):' → logprob: -2.66654109954834
    5. '   ' → logprob: -4.29154109954834
    6. '       ' → logprob: -4.66654109954834
    7. '+' → logprob: -5.16654109954834
    8. '           ' → logprob: -6.41654109954834
    9. ' :' → logprob: -7.41654109954834
    10. ',' → logprob: -7.41654109954834

Token 1064: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042512163519859314
    2. '       ' → logprob: -3.6675121784210205
    3. '```' → logprob: -4.417511940002441
    4. ' if' → logprob: -5.792511940002441
    5. 'if' → logprob: -8.167511940002441
    6. '<|end|>' → logprob: -8.417511940002441
    7. '	       ' → logprob: -8.792511940002441
    8. '               ' → logprob: -9.417511940002441
    9. '   ' → logprob: -9.667511940002441
    10. '	   ' → logprob: -10.167511940002441

Token 1065: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.144626259803772
    2. ' if' → logprob: -1.144626259803772
    3. '           ' → logprob: -1.644626259803772
    4. '       ' → logprob: -2.3946261405944824
    5. '               ' → logprob: -2.6446261405944824
    6. '   ' → logprob: -5.894626140594482
    7. '	       ' → logprob: -6.019626140594482
    8. '	if' → logprob: -6.394626140594482
    9. '	   ' → logprob: -7.519626140594482
    10. '	' → logprob: -9.01962661743164

Token 1066: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.01642376370728016
    2. ' cnt' → logprob: -4.14142370223999
    3. '           ' → logprob: -8.016424179077148
    4. '   ' → logprob: -10.766424179077148
    5. '               ' → logprob: -11.391424179077148
    6. '	cnt' → logprob: -11.766424179077148
    7. '(cnt' → logprob: -11.891424179077148
    8. 'count' → logprob: -12.016424179077148
    9. '       ' → logprob: -14.016424179077148
    10. '[cnt' → logprob: -14.266424179077148

Token 1067: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12918826937675476
    2. '==' → logprob: -2.379188299179077
    3. ' <' → logprob: -3.879188299179077
    4. ' !=' → logprob: -5.629188060760498
    5. '<' → logprob: -5.754188060760498
    6. '!=' → logprob: -7.504188060760498
    7. '   ' → logprob: -8.379188537597656
    8. '	' → logprob: -9.004188537597656
    9. ' ' → logprob: -9.879188537597656
    10. '    ' → logprob: -10.004188537597656

Token 1068: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.15441757265944e-05
    2. ' m' → logprob: -10.375031471252441
    3. '0' → logprob: -15.250031471252441
    4. 'start' → logprob: -18.875032424926758
    5. '           ' → logprob: -19.125032424926758
    6. '	m' → logprob: -19.375032424926758
    7. '```' → logprob: -19.375032424926758
    8. '<m' → logprob: -19.500032424926758
    9. '<|end|>' → logprob: -19.625032424926758
    10. '   ' → logprob: -19.750032424926758

Token 1069: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5309510827064514
    2. ':' → logprob: -1.1559510231018066
    3. '               ' → logprob: -2.4059510231018066
    4. ' and' → logprob: -5.780951023101807
    5. '           ' → logprob: -6.030951023101807
    6. '<|end|>' → logprob: -7.905951023101807
    7. ' :
' → logprob: -8.405951499938965
    8. '):
' → logprob: -8.405951499938965
    9. '{
' → logprob: -9.405951499938965
    10. ',' → logprob: -9.655951499938965

Token 1070: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000885730201844126
    2. '       ' → logprob: -7.750885963439941
    3. '           ' → logprob: -8.500885963439941
    4. ' if' → logprob: -9.875885963439941
    5. '   ' → logprob: -10.125885963439941
    6. '<|end|>' → logprob: -10.625885963439941
    7. '	       ' → logprob: -10.750885963439941
    8. '                
' → logprob: -11.250885963439941
    9. '	           ' → logprob: -11.750885963439941
    10. '			' → logprob: -11.750885963439941

Token 1071: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05639774724841118
    2. ' if' → logprob: -3.8063976764678955
    3. '                   ' → logprob: -4.681397914886475
    4. 'if' → logprob: -4.931397914886475
    5. 'test' → logprob: -5.056397914886475
    6. ' test' → logprob: -5.181397914886475
    7. 'token' → logprob: -7.306397914886475
    8. '   ' → logprob: -7.306397914886475
    9. '           ' → logprob: -7.431397914886475
    10. '```' → logprob: -8.056397438049316

Token 1072: ' encore' (ID: 14043)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.08211522549390793
    2. 'if' → logprob: -2.5821151733398438
    3. '               ' → logprob: -6.332115173339844
    4. '           ' → logprob: -6.832115173339844
    5. 'que' → logprob: -8.957115173339844
    6. '                   ' → logprob: -9.707115173339844
    7. '   ' → logprob: -9.832115173339844
    8. ' test' → logprob: -9.832115173339844
    9. '       ' → logprob: -10.582115173339844
    10. ' if' → logprob: -11.332115173339844

Token 1073: ' ce' (ID: 2357)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17696236073970795
    2. '               ' → logprob: -1.9269623756408691
    3. 'test' → logprob: -5.301962375640869
    4. '           ' → logprob: -5.426962375640869
    5. 'que' → logprob: -6.426962375640869
    6. ' test' → logprob: -6.426962375640869
    7. '```' → logprob: -6.676962375640869
    8. ' que' → logprob: -7.051962375640869
    9. 'if' → logprob: -7.801962375640869
    10. '#' → logprob: -8.301961898803711

Token 1074: ' replace' (ID: 13284)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.45329150557518005
    2. 'test' → logprob: -1.8282915353775024
    3. 'if' → logprob: -2.828291416168213
    4. 'max' → logprob: -2.953291416168213
    5. 'top' → logprob: -3.703291416168213
    6. '```' → logprob: -3.953291416168213
    7. ' test' → logprob: -4.328291416168213
    8. ' que' → logprob: -4.328291416168213
    9. 'token' → logprob: -5.703291416168213
    10. ')' → logprob: -6.078291416168213

Token 1075: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.29159578680992126
    2. '               ' → logprob: -1.4165958166122437
    3. '           ' → logprob: -5.041595935821533
    4. ':' → logprob: -6.791595935821533
    5. ' if' → logprob: -7.416595935821533
    6. '                       ' → logprob: -7.541595935821533
    7. 'if' → logprob: -8.041595458984375
    8. '<|end|>' → logprob: -8.166595458984375
    9. '.' → logprob: -8.666595458984375
    10. '   ' → logprob: -8.666595458984375

Token 1076: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6668555736541748
    2. 'que' → logprob: -0.7918555736541748
    3. 'top' → logprob: -4.666855812072754
    4. 'test' → logprob: -5.041855812072754
    5. 'la' → logprob: -5.166855812072754
    6. ' que' → logprob: -5.916855812072754
    7. ' max' → logprob: -6.291855812072754
    8. 'm' → logprob: -6.416855812072754
    9. 'queue' → logprob: -6.666855812072754
    10. '```' → logprob: -6.916855812072754

Token 1077: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02491825446486473
    2. '               ' → logprob: -3.7749183177948
    3. '                       ' → logprob: -7.524918079376221
    4. '           ' → logprob: -7.899918079376221
    5. '                    
' → logprob: -8.399918556213379
    6. ':
' → logprob: -9.024918556213379
    7. 'test' → logprob: -9.774918556213379
    8. '   ' → logprob: -10.024918556213379
    9. '<|end|>' → logprob: -10.524918556213379
    10. '				' → logprob: -10.649918556213379

Token 1078: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016228847205638885
    2. '               ' → logprob: -4.266228675842285
    3. '           ' → logprob: -6.766228675842285
    4. '{
' → logprob: -8.391228675842285
    5. '                       ' → logprob: -8.516228675842285
    6. '<|end|>' → logprob: -9.141228675842285
    7. 'token' → logprob: -9.641228675842285
    8. ':
' → logprob: -10.141228675842285
    9. '```' → logprob: -10.141228675842285
    10. '                    
' → logprob: -10.516228675842285

Token 1079: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' (adapté à ' test') → logprob: -0.6458331346511841
    2. 'if' → logprob: -1.645833134651184
    3. '               ' → logprob: -1.645833134651184
    4. ' test' → logprob: -3.1458330154418945
    5. ' if' → logprob: -3.7708330154418945
    6. '                   ' → logprob: -4.1458330154418945
    7. 'que' → logprob: -5.3958330154418945
    8. '           ' → logprob: -6.6458330154418945
    9. '   ' → logprob: -7.2708330154418945
    10. ' que' → logprob: -7.3958330154418945

Token 1080: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003190666902810335
    2. '=' → logprob: -5.753190517425537
    3. '()' → logprob: -11.628190994262695
    4. ' =
' → logprob: -13.503190994262695
    5. '=
' → logprob: -14.628190994262695
    6. ')' → logprob: -14.878190994262695
    7. '()
' → logprob: -15.003190994262695
    8. '(' → logprob: -15.503190994262695
    9. ' ==' → logprob: -15.628190994262695
    10. '   ' → logprob: -15.878190994262695

Token 1081: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.005235529970377684
    2. ' que' → logprob: -5.25523567199707
    3. 'qu' → logprob: -14.88023567199707
    4. '```' → logprob: -14.88023567199707
    5. 'qui' → logprob: -15.38023567199707
    6. ' ' → logprob: -15.63023567199707
    7. 'queue' → logprob: -15.88023567199707
    8. 'quee' → logprob: -16.25523567199707
    9. '`' → logprob: -16.38023567199707
    10. 'ques' → logprob: -16.50523567199707

Token 1082: '.top' (ID: 16801)
  Prédit: '.top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.top' → logprob: -0.02978358045220375
    2. '.pop' → logprob: -3.5297834873199463
    3. 'pop' → logprob: -11.029783248901367
    4. 'top' → logprob: -11.404783248901367
    5. '.' → logprob: -12.154783248901367
    6. ' top' → logprob: -16.029783248901367
    7. '```' → logprob: -16.279783248901367
    8. '.peek' → logprob: -16.654783248901367
    9. 'トップ' → logprob: -17.029783248901367
    10. '.Top' → logprob: -17.029783248901367

Token 1083: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07107847929000854
    2. '()' → logprob: -2.6960785388946533
    3. '               ' → logprob: -7.071078300476074
    4. ')
' → logprob: -9.821078300476074
    5. '<|end|>' → logprob: -9.821078300476074
    6. '()
' → logprob: -9.946078300476074
    7. '()\' → logprob: -10.821078300476074
    8. '();
' → logprob: -10.946078300476074
    9. '())
' → logprob: -10.946078300476074
    10. ')' → logprob: -11.196078300476074

Token 1084: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6420139074325562
    2. '                   ' → logprob: -0.7670139074325562
    3. '<|end|>' → logprob: -5.517014026641846
    4. '                       ' → logprob: -6.392014026641846
    5. '```' → logprob: -6.392014026641846
    6. '           ' → logprob: -7.642014026641846
    7. ')' → logprob: -8.142013549804688
    8. '       ' → logprob: -8.642013549804688
    9. '                ' → logprob: -8.642013549804688
    10. '                               ' → logprob: -8.892013549804688

Token 1085: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3446349501609802
    2. 'if' (adapté à ' if') → logprob: -1.344635009765625
    3. '                   ' → logprob: -4.094635009765625
    4. 'que' → logprob: -4.469635009765625
    5. ' if' → logprob: -6.219635009765625
    6. '           ' → logprob: -8.469635009765625
    7. '```' → logprob: -9.219635009765625
    8. ' que' → logprob: -9.594635009765625
    9. 'ques' → logprob: -9.594635009765625
    10. 'queue' → logprob: -9.719635009765625

Token 1086: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -6.921253225300461e-05
    2. ' beam' → logprob: -9.625069618225098
    3. '   ' → logprob: -13.375069618225098
    4. '           ' → logprob: -14.250069618225098
    5. 'be' → logprob: -14.500069618225098
    6. 'beat' → logprob: -15.375069618225098
    7. 'heap' → logprob: -16.87506866455078
    8. '               ' → logprob: -17.12506866455078
    9. '       ' → logprob: -17.25006866455078
    10. 'Beam' → logprob: -17.50006866455078

Token 1087: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.438573680294212e-06
    2. 'i' → logprob: -12.875005722045898
    3. '           ' → logprob: -13.500005722045898
    4. '[' → logprob: -14.250005722045898
    5. '               ' → logprob: -15.250005722045898
    6. '```' → logprob: -15.500005722045898
    7. '(i' → logprob: -16.6250057220459
    8. '{i' → logprob: -16.8750057220459
    9. '                   ' → logprob: -17.0000057220459
    10. ',i' → logprob: -17.5000057220459

Token 1088: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6950092315673828
    2. '][' → logprob: -0.6950092315673828
    3. ')[' → logprob: -6.820009231567383
    4. '>[' → logprob: -8.570009231567383
    5. '           ' → logprob: -8.945009231567383
    6. '```' → logprob: -9.445009231567383
    7. ''][' → logprob: -9.695009231567383
    8. '[i' → logprob: -9.820009231567383
    9. '0' → logprob: -10.195009231567383
    10. '"][' → logprob: -10.445009231567383

Token 1089: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. 'i' → logprob: -12.375014305114746
    3. '   ' → logprob: -13.125014305114746
    4. '```' → logprob: -13.125014305114746
    5. '[' → logprob: -13.562514305114746
    6. '
' → logprob: -13.812514305114746
    7. '1' → logprob: -14.000014305114746
    8. ' ' → logprob: -14.187514305114746
    9. '``' → logprob: -15.000014305114746
    10. '  ' → logprob: -15.500014305114746

Token 1090: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00603343453258276
    2. '<' → logprob: -5.131033420562744
    3. ')' → logprob: -10.631033897399902
    4. ']' → logprob: -10.756033897399902
    5. ' >' → logprob: -11.131033897399902
    6. ']<' → logprob: -11.756033897399902
    7. '[' → logprob: -12.131033897399902
    8. ')<' → logprob: -12.131033897399902
    9. '<|end|>' → logprob: -12.256033897399902
    10. '>' → logprob: -12.756033897399902

Token 1091: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5234252214431763
    2. '<' → logprob: -0.8984252214431763
    3. '<|end|>' → logprob: -9.148425102233887
    4. '<int' → logprob: -9.648425102233887
    5. '<size' → logprob: -11.023425102233887
    6. '<
' → logprob: -11.273425102233887
    7. '<class' → logprob: -11.523425102233887
    8. '[' → logprob: -11.648425102233887
    9. '<n' → logprob: -11.648425102233887
    10. '<p' → logprob: -11.898425102233887

Token 1092: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.0013263145228847861
    2. ' test' → logprob: -6.626326084136963
    3. '(test' → logprob: -16.001325607299805
    4. 'que' → logprob: -16.376325607299805
    5. '   ' → logprob: -16.751325607299805
    6. '	test' → logprob: -17.001325607299805
    7. '```' → logprob: -17.251325607299805
    8. ' ' → logprob: -17.876325607299805
    9. ')test' → logprob: -18.251325607299805
    10. 'tes' → logprob: -18.751325607299805

Token 1093: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29570797085762024
    2. '                   ' → logprob: -1.5457079410552979
    3. '):
' → logprob: -3.920707941055298
    4. ':' → logprob: -4.420708179473877
    5. '               ' → logprob: -5.170708179473877
    6. '():
' → logprob: -6.420708179473877
    7. '```' → logprob: -7.295708179473877
    8. '<|end|>' → logprob: -7.295708179473877
    9. '                  ' → logprob: -7.545708179473877
    10. ')' → logprob: -8.045707702636719

Token 1094: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02308870665729046
    2. '```' → logprob: -4.5230889320373535
    3. '               ' → logprob: -4.8980889320373535
    4. '<|end|>' → logprob: -6.3980889320373535
    5. '                       ' → logprob: -7.0230889320373535
    6. '{
' → logprob: -7.3980889320373535
    7. '``' → logprob: -8.148088455200195
    8. '                  ' → logprob: -8.648088455200195
    9. '           ' → logprob: -8.898088455200195
    10. '                    
' → logprob: -9.023088455200195

Token 1095: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -0.12800094485282898
    2. '                   ' → logprob: -2.7530009746551514
    3. ' que' → logprob: -2.8780009746551514
    4. '               ' → logprob: -9.50300121307373
    5. '```' → logprob: -10.37800121307373
    6. 'queue' → logprob: -10.87800121307373
    7. '                       ' → logprob: -11.00300121307373
    8. '                  ' → logprob: -12.25300121307373
    9. '           ' → logprob: -12.50300121307373
    10. '   ' → logprob: -12.75300121307373

Token 1096: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.2855416066013277e-05
    2. 'pop' → logprob: -10.375032424926758
    3. '.' → logprob: -14.000032424926758
    4. ' .' → logprob: -14.875032424926758
    5. '	pop' → logprob: -16.250032424926758
    6. '```' → logprob: -16.375032424926758
    7. '_pop' → logprob: -16.750032424926758
    8. '(pop' → logprob: -16.750032424926758
    9. ' pop' → logprob: -16.750032424926758
    10. '.Pop' → logprob: -18.125032424926758

Token 1097: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.20190034806728363
    2. '()' → logprob: -1.7019003629684448
    3. '                   ' → logprob: -7.951900482177734
    4. ')
' → logprob: -9.701900482177734
    5. '()
' → logprob: -10.326900482177734
    6. '())
' → logprob: -11.201900482177734
    7. ')' → logprob: -11.201900482177734
    8. '```' → logprob: -12.201900482177734
    9. '();' → logprob: -13.451900482177734
    10. '();
' → logprob: -13.826900482177734

Token 1098: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011264264583587646
    2. '```' → logprob: -4.636264324188232
    3. '                    
' → logprob: -6.886264324188232
    4. '                    ' → logprob: -8.511263847351074
    5. 'que' → logprob: -9.636263847351074
    6. '               ' → logprob: -10.011263847351074
    7. '                       ' → logprob: -10.386263847351074
    8. '                  ' → logprob: -10.636263847351074
    9. '				' → logprob: -10.761263847351074
    10. '           ' → logprob: -11.011263847351074

Token 1099: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -0.00021319588995538652
    2. ' que' → logprob: -9.125213623046875
    3. '```' → logprob: -9.625213623046875
    4. '                   ' → logprob: -10.500213623046875
    5. 'queue' → logprob: -11.750213623046875
    6. 'qu' → logprob: -14.375213623046875
    7. 'ques' → logprob: -14.875213623046875
    8. '               ' → logprob: -14.875213623046875
    9. '                  ' → logprob: -15.500213623046875
    10. 'heap' → logprob: -15.750213623046875

Token 1100: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.0026474790647625923
    2. 'push' → logprob: -6.002647399902344
    3. '.pop' → logprob: -8.752647399902344
    4. '```' → logprob: -11.752647399902344
    5. '.' → logprob: -12.752647399902344
    6. 'pop' → logprob: -13.877647399902344
    7. ' push' → logprob: -14.252647399902344
    8. '	push' → logprob: -14.502647399902344
    9. '_push' → logprob: -15.252647399902344
    10. ' .' → logprob: -15.377647399902344

Token 1101: '(' (ID: 7)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.25194668769836426
    2. '(' → logprob: -1.5019466876983643
    3. ' beam' → logprob: -11.126946449279785
    4. '(
' → logprob: -13.376946449279785
    5. 'Beam' → logprob: -14.751946449279785
    6. '(be' → logprob: -15.251946449279785
    7. '           ' → logprob: -15.876946449279785
    8. '```' → logprob: -15.876946449279785
    9. '   ' → logprob: -16.1269474029541
    10. 'be' → logprob: -16.5019474029541

Token 1102: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -6.704273118884885e-07
    2. ' beam' → logprob: -14.375000953674316
    3. 'heap' → logprob: -18.125
    4. '
' → logprob: -18.25
    5. '   ' → logprob: -18.75
    6. 'be' → logprob: -18.875
    7. '```' → logprob: -18.875
    8. 'Beam' → logprob: -19.125
    9. 'beat' → logprob: -19.25
    10. 'boat' → logprob: -19.875

Token 1103: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017672323156148195
    2. '[' → logprob: -9.250176429748535
    3. 'i' → logprob: -9.875176429748535
    4. '           ' → logprob: -11.000176429748535
    5. '(i' → logprob: -13.000176429748535
    6. '               ' → logprob: -13.000176429748535
    7. '```' → logprob: -13.250176429748535
    8. '[
' → logprob: -13.875176429748535
    9. '
' → logprob: -14.125176429748535
    10. '   ' → logprob: -14.250176429748535

Token 1104: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.017415925860404968
    2. '[' → logprob: -4.267416000366211
    3. '][' → logprob: -5.892416000366211
    4. ')[' → logprob: -8.767416000366211
    5. 'i' → logprob: -8.892416000366211
    6. '```' → logprob: -9.767416000366211
    7. '
' → logprob: -10.517416000366211
    8. '   ' → logprob: -11.142416000366211
    9. '(i' → logprob: -11.267416000366211
    10. '[
' → logprob: -11.267416000366211

Token 1105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2961512513575144e-05
    2. '[i' → logprob: -11.625022888183594
    3. 'i' → logprob: -12.000022888183594
    4. '[' → logprob: -13.250022888183594
    5. '```' → logprob: -13.250022888183594
    6. '   ' → logprob: -13.375022888183594
    7. ' ' → logprob: -14.250022888183594
    8. '1' → logprob: -14.625022888183594
    9. '
' → logprob: -14.937522888183594
    10. '(i' → logprob: -15.250022888183594

Token 1106: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06211445480585098
    2. ')' → logprob: -2.9371144771575928
    3. '                   ' → logprob: -4.937114238739014
    4. ' )
' → logprob: -11.437114715576172
    5. ')
' → logprob: -12.437114715576172
    6. '               ' → logprob: -12.562114715576172
    7. '   ' → logprob: -12.812114715576172
    8. '           ' → logprob: -13.062114715576172
    9. '')
' → logprob: -13.687114715576172
    10. '                  ' → logprob: -13.812114715576172

Token 1107: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5144489407539368
    2. '```' → logprob: -1.014448881149292
    3. 'S' → logprob: -4.139449119567871
    4. '``' → logprob: -4.514449119567871
    5. '                           ' → logprob: -5.764449119567871
    6. '<|end|>' → logprob: -5.764449119567871
    7. ' S' → logprob: -6.639449119567871
    8. '                                           ' → logprob: -7.389449119567871
    9. '           ' → logprob: -7.389449119567871
    10. '               ' → logprob: -7.639449119567871

Token 1108: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.0030863285064697266
    2. '                   ' → logprob: -6.378086090087891
    3. ' S' → logprob: -6.628086090087891
    4. '   ' → logprob: -10.87808609008789
    5. '               ' → logprob: -11.12808609008789
    6. '	S' → logprob: -12.00308609008789
    7. '```' → logprob: -12.12808609008789
    8. '           ' → logprob: -12.37808609008789
    9. ' ' → logprob: -13.12808609008789
    10. '                           ' → logprob: -13.12808609008789

Token 1109: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5234072208404541
    2. ' +=' → logprob: -1.648407220840454
    3. ' -=' → logprob: -2.148407220840454
    4. '-=' → logprob: -2.398407220840454
    5. '=' → logprob: -5.148406982421875
    6. '```' → logprob: -6.898406982421875
    7. '    ' → logprob: -8.398406982421875
    8. '-' → logprob: -8.523406982421875
    9. '   ' → logprob: -9.398406982421875
    10. '       ' → logprob: -10.148406982421875

Token 1110: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.01132449321448803
    2. ' beam' → logprob: -4.511324405670166
    3. '-' → logprob: -8.511324882507324
    4. ' -' → logprob: -10.636324882507324
    5. '(' → logprob: -11.261324882507324
    6. '   ' → logprob: -12.011324882507324
    7. 'test' → logprob: -12.386324882507324
    8. '0' → logprob: -12.511324882507324
    9. '           ' → logprob: -12.636324882507324
    10. '(-' → logprob: -12.761324882507324

Token 1111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.282920129597187e-05
    2. 'i' → logprob: -11.625012397766113
    3. '[' → logprob: -13.000012397766113
    4. '[
' → logprob: -14.500012397766113
    5. '```' → logprob: -15.625012397766113
    6. '{i' → logprob: -15.875012397766113
    7. '           ' → logprob: -15.875012397766113
    8. '   ' → logprob: -16.00001335144043
    9. ' [' → logprob: -16.12501335144043
    10. '[-' → logprob: -16.50001335144043

Token 1112: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013875870034098625
    2. '[i' → logprob: -4.638875961303711
    3. '0' → logprob: -5.888875961303711
    4. '-' → logprob: -7.013875961303711
    5. ' -' → logprob: -9.013875961303711
    6. '][' → logprob: -9.513875961303711
    7. '           ' → logprob: -9.513875961303711
    8. '```' → logprob: -9.763875961303711
    9. ' [' → logprob: -10.763875961303711
    10. '       ' → logprob: -11.013875961303711

Token 1113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. '-' → logprob: -12.500008583068848
    3. ' ' → logprob: -12.500008583068848
    4. '   ' → logprob: -14.375008583068848
    5. ' -' → logprob: -15.000008583068848
    6. '[' → logprob: -15.875008583068848
    7. '```' → logprob: -16.000009536743164
    8. '
' → logprob: -16.625009536743164
    9. '       ' → logprob: -16.875009536743164
    10. '1' → logprob: -17.625009536743164

Token 1114: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06200544163584709
    2. '-' → logprob: -2.8120055198669434
    3. '-test' → logprob: -10.562005043029785
    4. '                   ' → logprob: -12.437005043029785
    5. '           ' → logprob: -12.687005043029785
    6. '   ' → logprob: -14.062005043029785
    7. '          ' → logprob: -14.187005043029785
    8. ' ' → logprob: -14.562005043029785
    9. '               ' → logprob: -14.687005043029785
    10. ' -
' → logprob: -15.187005043029785

Token 1115: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47414231300354004
    2. '-' → logprob: -0.97414231300354
    3. '-test' → logprob: -9.724142074584961
    4. '           ' → logprob: -13.849142074584961
    5. '   ' → logprob: -13.974142074584961
    6. ' ' → logprob: -14.099142074584961
    7. '-
' → logprob: -14.099142074584961
    8. '-token' → logprob: -14.974142074584961
    9. '
' → logprob: -15.724142074584961
    10. '-t' → logprob: -16.09914207458496

Token 1116: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -4.5491004129871726e-05
    2. ' test' → logprob: -10.000045776367188
    3. '(test' → logprob: -19.250045776367188
    4. '[test' → logprob: -23.000045776367188
    5. '	test' → logprob: -23.250045776367188
    6. ')test' → logprob: -24.000045776367188
    7. '
' → logprob: -24.125045776367188
    8. '@test' → logprob: -24.125045776367188
    9. ' ' → logprob: -25.000045776367188
    10. '=test' → logprob: -25.125045776367188

Token 1117: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1350243091583252
    2. '                   ' → logprob: -2.635024309158325
    3. '               ' → logprob: -3.510024309158325
    4. '<|end|>' → logprob: -4.510024070739746
    5. '       ' → logprob: -5.010024070739746
    6. '```' → logprob: -6.135024070739746
    7. '<|end|>' → logprob: -6.135024070739746
    8. '   ' → logprob: -6.885024070739746
    9. 'i' → logprob: -8.135024070739746
    10. '		' → logprob: -8.260024070739746

Token 1119: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03580206632614136
    2. '               ' → logprob: -4.160801887512207
    3. 'else' (adapté à ' else') → logprob: -4.535801887512207
    4. '       ' → logprob: -5.285801887512207
    5. '                   ' → logprob: -6.035801887512207
    6. '```' → logprob: -6.910801887512207
    7. '		' → logprob: -8.660801887512207
    8. '   ' → logprob: -9.660801887512207
    9. ' else' → logprob: -10.035801887512207
    10. 'elif' → logprob: -10.285801887512207

Token 1120: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016862474149093032
    2. ' que' → logprob: -7.001686096191406
    3. '```' → logprob: -7.376686096191406
    4. '           ' → logprob: -9.751686096191406
    5. '                   ' → logprob: -10.251686096191406
    6. 'que' → logprob: -10.626686096191406
    7. '              ' → logprob: -11.876686096191406
    8. ' ' → logprob: -12.001686096191406
    9. '       ' → logprob: -12.626686096191406
    10. '                
' → logprob: -13.126686096191406

Token 1121: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006386718712747097
    2. '```' → logprob: -5.631386756896973
    3. '           ' → logprob: -6.131386756896973
    4. 'que' → logprob: -8.131386756896973
    5. '                   ' → logprob: -8.381386756896973
    6. ' que' → logprob: -9.756386756896973
    7. '       ' → logprob: -11.631386756896973
    8. '              ' → logprob: -12.131386756896973
    9. '``' → logprob: -12.631386756896973
    10. '	           ' → logprob: -13.256386756896973

Token 1122: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -0.057503681629896164
    2. '               ' → logprob: -3.3075037002563477
    3. '```' → logprob: -4.682503700256348
    4. ' que' → logprob: -4.807503700256348
    5. '           ' → logprob: -6.432503700256348
    6. '   ' → logprob: -9.932503700256348
    7. ' ' → logprob: -10.057503700256348
    8. '                   ' → logprob: -10.557503700256348
    9. '``' → logprob: -10.807503700256348
    10. '			' → logprob: -10.932503700256348

Token 1123: '.push' (ID: 4885)
  Prédit: '.push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.push' → logprob: -0.00020425561524461955
    2. '.' → logprob: -8.625204086303711
    3. ' .' → logprob: -11.000204086303711
    4. '.pop' → logprob: -12.000204086303711
    5. '.Push' → logprob: -13.875204086303711
    6. '```' → logprob: -14.750204086303711
    7. '​.' → logprob: -15.625204086303711
    8. ').' → logprob: -16.62520408630371
    9. '.put' → logprob: -16.62520408630371
    10. ' push' → logprob: -16.75020408630371

Token 1124: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023288918659090996
    2. 'beam' → logprob: -3.7732889652252197
    3. '           ' → logprob: -10.77328872680664
    4. ' beam' → logprob: -11.64828872680664
    5. '(
' → logprob: -12.02328872680664
    6. '               ' → logprob: -13.14828872680664
    7. '   ' → logprob: -13.14828872680664
    8. '(be' → logprob: -13.52328872680664
    9. 'be' → logprob: -13.89828872680664
    10. '       ' → logprob: -14.89828872680664

Token 1125: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -3.292907877039397e-06
    2. ' beam' → logprob: -12.75000286102295
    3. '           ' → logprob: -15.62500286102295
    4. '   ' → logprob: -16.750003814697266
    5. 'heap' → logprob: -17.250003814697266
    6. '               ' → logprob: -17.250003814697266
    7. '
' → logprob: -18.625003814697266
    8. 'beat' → logprob: -18.750003814697266
    9. 'be' → logprob: -19.000003814697266
    10. '       ' → logprob: -19.375003814697266

Token 1126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.2576454335358e-05
    2. '[' → logprob: -9.875092506408691
    3. '```' → logprob: -11.125092506408691
    4. 'i' → logprob: -12.125092506408691
    5. '           ' → logprob: -12.375092506408691
    6. '[m' → logprob: -12.750092506408691
    7. ')' → logprob: -12.875092506408691
    8. '`' → logprob: -12.875092506408691
    9. '               ' → logprob: -13.250092506408691
    10. '[cnt' → logprob: -13.625092506408691

Token 1127: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7675149440765381
    2. '[' → logprob: -1.017514944076538
    3. '][' → logprob: -1.767514944076538
    4. ')[' → logprob: -6.267515182495117
    5. '0' → logprob: -7.642515182495117
    6. '   ' → logprob: -8.017515182495117
    7. '           ' → logprob: -8.517515182495117
    8. 'i' → logprob: -8.892515182495117
    9. '```' → logprob: -8.892515182495117
    10. '       ' → logprob: -9.017515182495117

Token 1128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014041600516065955
    2. 'i' → logprob: -7.376404285430908
    3. '[i' → logprob: -8.12640380859375
    4. 'beam' → logprob: -8.62640380859375
    5. '   ' → logprob: -9.12640380859375
    6. ' ' → logprob: -9.37640380859375
    7. '```' → logprob: -10.50140380859375
    8. '[' → logprob: -11.12640380859375
    9. '       ' → logprob: -11.25140380859375
    10. '`' → logprob: -11.25140380859375

Token 1129: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08927357941865921
    2. ')' → logprob: -2.464273691177368
    3. '               ' → logprob: -8.464273452758789
    4. '           ' → logprob: -9.339273452758789
    5. ')
' → logprob: -10.839273452758789
    6. '                   ' → logprob: -12.214273452758789
    7. '       ' → logprob: -12.839273452758789
    8. ' )
' → logprob: -13.089273452758789
    9. ')

' → logprob: -14.339273452758789
    10. ')\
' → logprob: -14.339273452758789

Token 1130: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5412511825561523
    2. '           ' → logprob: -1.9162511825561523
    3. 'S' → logprob: -2.1662511825561523
    4. '<|end|>' → logprob: -3.0412511825561523
    5. '	       ' → logprob: -3.5412511825561523
    6. ' S' → logprob: -4.041251182556152
    7. '   ' → logprob: -4.416251182556152
    8. '``' → logprob: -4.416251182556152
    9. '               ' → logprob: -4.666251182556152
    10. '       ' → logprob: -4.791251182556152

Token 1131: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.20293961465358734
    2. 'S' (adapté à ' S') → logprob: -1.7029396295547485
    3. '```' → logprob: -6.952939510345459
    4. ' ' → logprob: -8.452939987182617
    5. ' ' → logprob: -8.827939987182617
    6. ' cnt' → logprob: -9.577939987182617
    7. ' 
' → logprob: -10.202939987182617
    8. 'cnt' → logprob: -10.202939987182617
    9. '``' → logprob: -10.827939987182617
    10. '    ' → logprob: -11.077939987182617

Token 1132: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38692420721054077
    2. '+=' → logprob: -1.1369242668151855
    3. '```' → logprob: -10.636923789978027
    4. '           ' → logprob: -11.636923789978027
    5. '            ' → logprob: -12.261923789978027
    6. ']+=' → logprob: -12.636923789978027
    7. '+' → logprob: -13.136923789978027
    8. '        ' → logprob: -13.261923789978027
    9. ' ' → logprob: -13.511923789978027
    10. '       ' → logprob: -13.636923789978027

Token 1133: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.3149791657924652
    2. 'beam' → logprob: -1.3149791955947876
    3. '```' → logprob: -7.689979076385498
    4. ' ' → logprob: -7.814979076385498
    5. '1' → logprob: -8.064979553222656
    6. ' S' → logprob: -9.064979553222656
    7. ' ' → logprob: -9.189979553222656
    8. ' a' → logprob: -9.939979553222656
    9. '`' → logprob: -10.252479553222656
    10. ' 
' → logprob: -10.814979553222656

Token 1134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002494802698493004
    2. '[' → logprob: -6.127494812011719
    3. '           ' → logprob: -9.002494812011719
    4. '[
' → logprob: -9.502494812011719
    5. '               ' → logprob: -10.877494812011719
    6. '```' → logprob: -11.127494812011719
    7. '       ' → logprob: -11.502494812011719
    8. '[S' → logprob: -11.502494812011719
    9. '   ' → logprob: -11.627494812011719
    10. '
' → logprob: -11.752494812011719

Token 1135: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18732012808322906
    2. '0' → logprob: -1.9373201131820679
    3. '[i' → logprob: -3.9373202323913574
    4. '][' → logprob: -5.687320232391357
    5. '```' → logprob: -7.312320232391357
    6. '           ' → logprob: -7.312320232391357
    7. '       ' → logprob: -7.687320232391357
    8. '   ' → logprob: -7.812320232391357
    9. '-' → logprob: -8.0623197555542
    10. '
' → logprob: -8.3123197555542

Token 1136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.125001907348633
    3. '```' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.125001907348633
    5. 'i' → logprob: -15.750001907348633
    6. '           ' → logprob: -16.250001907348633
    7. '[i' → logprob: -16.500001907348633
    8. '       ' → logprob: -16.750001907348633
    9. '1' → logprob: -17.375001907348633
    10. '[' → logprob: -17.625001907348633

Token 1137: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6398940086364746
    2. ')
' → logprob: -1.2648940086364746
    3. '
' → logprob: -2.6398940086364746
    4. ')' → logprob: -3.0148940086364746
    5. '<|end|>' → logprob: -3.3898940086364746
    6. '           ' → logprob: -3.6398940086364746
    7. '                   ' → logprob: -6.014894008636475
    8. '            
' → logprob: -7.389894008636475
    9. '<|end|>' → logprob: -7.389894008636475
    10. '       ' → logprob: -7.389894008636475

Token 1138: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08923213928937912
    2. '           ' → logprob: -2.7142322063446045
    3. '```' → logprob: -4.714231967926025
    4. '                   ' → logprob: -5.589231967926025
    5. '	           ' → logprob: -6.464231967926025
    6. '       ' → logprob: -6.964231967926025
    7. '	       ' → logprob: -7.464231967926025
    8. 'cnt' → logprob: -7.839231967926025
    9. '<|end|>' → logprob: -7.964231967926025
    10. '              ' → logprob: -8.214232444763184

Token 1139: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.029674004763364792
    2. '               ' → logprob: -3.6546740531921387
    3. ' cnt' → logprob: -5.904674053192139
    4. '           ' → logprob: -8.27967357635498
    5. '```' → logprob: -8.27967357635498
    6. '	cnt' → logprob: -9.40467357635498
    7. '   ' → logprob: -11.02967357635498
    8. 'count' → logprob: -11.15467357635498
    9. '       ' → logprob: -12.15467357635498
    10. 'counter' → logprob: -12.27967357635498

Token 1140: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10053293406963348
    2. ' +=' → logprob: -2.3505330085754395
    3. '=' → logprob: -8.225532531738281
    4. '+' → logprob: -10.225532531738281
    5. '```' → logprob: -11.350532531738281
    6. ']+=' → logprob: -12.225532531738281
    7. ' =' → logprob: -13.350532531738281
    8. '           ' → logprob: -14.350532531738281
    9. '<|end|>' → logprob: -14.600532531738281
    10. '+="' → logprob: -14.975532531738281

Token 1141: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028052295092493296
    2. ' ' → logprob: -5.877805233001709
    3. '```' → logprob: -15.50280475616455
    4. ' ' → logprob: -15.87780475616455
    5. '   ' → logprob: -16.752805709838867
    6. '	' → logprob: -17.627805709838867
    7. '
' → logprob: -18.752805709838867
    8. '１' → logprob: -19.252805709838867
    9. '               ' → logprob: -19.627805709838867
    10. '۱' → logprob: -19.752805709838867

Token 1142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -16.375009536743164
    4. '   ' → logprob: -17.375009536743164
    5. '<|end|>' → logprob: -20.250009536743164
    6. '
' → logprob: -20.250009536743164
    7. '0' → logprob: -20.500009536743164
    8. '	' → logprob: -21.187509536743164
    9. '  ' → logprob: -21.375009536743164
    10. '           ' → logprob: -21.375009536743164

Token 1143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6500164270401001
    2. '<|end|>' → logprob: -1.5250164270401
    3. '```' → logprob: -2.1500163078308105
    4. '       ' → logprob: -2.1500163078308105
    5. '           ' → logprob: -4.1500163078308105
    6. '
' → logprob: -5.7750163078308105
    7. '<|end|>' → logprob: -6.0250163078308105
    8. '    
' → logprob: -6.4000163078308105
    9. '\n' → logprob: -6.7750163078308105
    10. '\' → logprob: -7.6500163078308105

Token 1144: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1145: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21234877407550812
    2. '       ' → logprob: -1.8373488187789917
    3. 'if' (adapté à ' if') → logprob: -3.837348699569702
    4. ' if' → logprob: -4.837348937988281
    5. '```' → logprob: -6.212348937988281
    6. '   ' → logprob: -7.837348937988281
    7. '               ' → logprob: -9.587348937988281
    8. ' ' → logprob: -10.212348937988281
    9. '	if' → logprob: -11.212348937988281
    10. '	   ' → logprob: -11.212348937988281

Token 1146: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.3144729435443878
    2. ' cnt' → logprob: -1.3144729137420654
    3. '(cnt' → logprob: -7.9394731521606445
    4. 'i' → logprob: -8.064473152160645
    5. '   ' → logprob: -8.689473152160645
    6. 'test' → logprob: -9.689473152160645
    7. '       ' → logprob: -9.814473152160645
    8. ' i' → logprob: -10.064473152160645
    9. '	cnt' → logprob: -10.064473152160645
    10. '           ' → logprob: -10.439473152160645

Token 1147: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023246755823493004
    2. '==' → logprob: -3.7732467651367188
    3. '```' → logprob: -14.648246765136719
    4. ' ' → logprob: -15.273246765136719
    5. '   ' → logprob: -15.773246765136719
    6. ' ==
' → logprob: -16.14824676513672
    7. '==
' → logprob: -16.52324676513672
    8. '=' → logprob: -16.77324676513672
    9. '           ' → logprob: -17.39824676513672
    10. '[' → logprob: -17.52324676513672

Token 1148: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0036032749339938164
    2. ' m' → logprob: -5.628603458404541
    3. '```' → logprob: -13.753602981567383
    4. '   ' → logprob: -14.003602981567383
    5. '           ' → logprob: -14.003602981567383
    6. '       ' → logprob: -16.253602981567383
    7. '0' → logprob: -16.253602981567383
    8. '	m' → logprob: -16.378602981567383
    9. ' ' → logprob: -16.503602981567383
    10. '               ' → logprob: -17.003602981567383

Token 1149: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8276870846748352
    2. ':' → logprob: -1.3276870250701904
    3. ':
' → logprob: -2.0776870250701904
    4. '               ' → logprob: -2.3276870250701904
    5. '           ' → logprob: -3.0776870250701904
    6. '==' → logprob: -4.5776872634887695
    7. '```' → logprob: -4.8276872634887695
    8. ' ==' → logprob: -5.0776872634887695
    9. '       ' → logprob: -6.9526872634887695
    10. '<|end|>' → logprob: -7.2026872634887695

Token 1150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02372080832719803
    2. '```' → logprob: -3.7737207412719727
    3. '           ' → logprob: -8.648720741271973
    4. '``' → logprob: -8.898720741271973
    5. '                   ' → logprob: -10.148720741271973
    6. '<|end|>' → logprob: -10.648720741271973
    7. '       ' → logprob: -10.773720741271973
    8. ' and' → logprob: -11.023720741271973
    9. '
' → logprob: -11.523720741271973
    10. '                       ' → logprob: -12.023720741271973

Token 1151: ' test' (ID: 1746)
  Prédit: ' test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.2620198428630829
    2. 'test' (adapté à ' test') → logprob: -1.5120198726654053
    3. ' if' → logprob: -6.012019634246826
    4. 'ans' → logprob: -6.137019634246826
    5. 'if' → logprob: -6.637019634246826
    6. ' ans' → logprob: -6.762019634246826
    7. '```' → logprob: -6.762019634246826
    8. '           ' → logprob: -7.137019634246826
    9. '               ' → logprob: -7.762019634246826
    10. ' return' → logprob: -9.262020111083984

Token 1152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039165280759334564
    2. ' ==' → logprob: -3.9141652584075928
    3. '=' → logprob: -4.414165496826172
    4. '           ' → logprob: -5.664165496826172
    5. ' <=' → logprob: -7.164165496826172
    6. '```' → logprob: -7.539165496826172
    7. '               ' → logprob: -7.664165496826172
    8. '==' → logprob: -8.539165496826172
    9. '   ' → logprob: -8.664165496826172
    10. '       ' → logprob: -8.789165496826172

Token 1153: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.25193601846694946
    2. 'S' → logprob: -1.5019359588623047
    3. '   ' → logprob: -12.501935958862305
    4. '(S' → logprob: -13.751935958862305
    5. '           ' → logprob: -14.876935958862305
    6. '```' → logprob: -15.001935958862305
    7. ' ' → logprob: -15.126935958862305
    8. ' ' → logprob: -15.251935958862305
    9. '	S' → logprob: -15.251935958862305
    10. '               ' → logprob: -15.751935958862305

Token 1154: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47256964445114136
    2. ' +' → logprob: -1.0975697040557861
    3. '<=' → logprob: -3.972569704055786
    4. '           ' → logprob: -4.472569465637207
    5. ' <=' → logprob: -4.472569465637207
    6. '+=' → logprob: -7.347569465637207
    7. ' +=' → logprob: -8.097569465637207
    8. '               ' → logprob: -9.472569465637207
    9. '          ' → logprob: -9.597569465637207
    10. '=' → logprob: -9.972569465637207

Token 1155: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.38687315583229065
    2. 'data' → logprob: -1.1368731260299683
    3. '```' → logprob: -13.511873245239258
    4. '	data' → logprob: -15.511873245239258
    5. '   ' → logprob: -16.261873245239258
    6. '(data' → logprob: -16.386873245239258
    7. '_data' → logprob: -17.011873245239258
    8. ' ' → logprob: -17.011873245239258
    9. '\data' → logprob: -17.136873245239258
    10. '.data' → logprob: -17.136873245239258

Token 1156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '(i' → logprob: -13.500001907348633
    3. '[
' → logprob: -15.750001907348633
    4. 'i' → logprob: -16.500001907348633
    5. '[' → logprob: -17.250001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '```' → logprob: -19.250001907348633
    8. '{i' → logprob: -20.500001907348633
    9. '
' → logprob: -20.625001907348633
    10. '       ' → logprob: -21.000001907348633

Token 1157: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014245775528252125
    2. ' +' → logprob: -4.264245986938477
    3. '[' → logprob: -9.764245986938477
    4. '```' → logprob: -11.264245986938477
    5. '           ' → logprob: -11.764245986938477
    6. '+
' → logprob: -13.764245986938477
    7. '+i' → logprob: -14.389245986938477
    8. '               ' → logprob: -14.764245986938477
    9. '       ' → logprob: -14.764245986938477
    10. '＋' → logprob: -14.889245986938477

Token 1158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -12.125014305114746
    3. '```' → logprob: -12.250014305114746
    4. '   ' → logprob: -13.875014305114746
    5. '
' → logprob: -13.875014305114746
    6. '           ' → logprob: -14.250014305114746
    7. '       ' → logprob: -14.375014305114746
    8. '+' → logprob: -15.437514305114746
    9. '                   ' → logprob: -15.625014305114746
    10. '               ' → logprob: -15.812514305114746

Token 1159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. '```' → logprob: -11.87501335144043
    3. '           ' → logprob: -13.00001335144043
    4. ' ' → logprob: -13.50001335144043
    5. '
' → logprob: -14.25001335144043
    6. '               ' → logprob: -14.62501335144043
    7. '+' → logprob: -14.62501335144043
    8. '                   ' → logprob: -15.12501335144043
    9. '       ' → logprob: -15.37501335144043
    10. '   ' → logprob: -15.50001335144043

Token 1160: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.023336410522461
    2. '<=' → logprob: -1.648336410522461
    3. ' <=' → logprob: -1.648336410522461
    4. '                   ' → logprob: -2.273336410522461
    5. '           ' → logprob: -2.398336410522461
    6. '```' → logprob: -4.398336410522461
    7. ')<=' → logprob: -4.398336410522461
    8. '<|end|>' → logprob: -4.398336410522461
    9. ')' → logprob: -4.523336410522461
    10. ']<=' → logprob: -5.648336410522461

Token 1161: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8068991899490356
    2. '               ' → logprob: -0.9318991899490356
    3. '                   ' → logprob: -1.9318991899490356
    4. '``' → logprob: -4.681899070739746
    5. '           ' → logprob: -5.806899070739746
    6. '                       ' → logprob: -6.556899070739746
    7. '                               ' → logprob: -8.181899070739746
    8. ':
' → logprob: -8.556899070739746
    9. ':' → logprob: -8.556899070739746
    10. '<|end|>' → logprob: -8.931899070739746

Token 1162: ' B' (ID: 418)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.484020471572876
    2. '               ' → logprob: -0.984020471572876
    3. ' if' → logprob: -5.359020233154297
    4. '```' → logprob: -6.359020233154297
    5. 'if' → logprob: -6.734020233154297
    6. ' return' → logprob: -7.234020233154297
    7. '           ' → logprob: -7.234020233154297
    8. 'return' → logprob: -7.734020233154297
    9. '                       ' → logprob: -8.234020233154297
    10. '``' → logprob: -9.984020233154297

Token 1163: ' =' (ID: 314)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1854057312011719
    2. 'reak' → logprob: -1.1854057312011719
    3. '           ' → logprob: -1.9354057312011719
    4. '=' → logprob: -2.310405731201172
    5. '                   ' → logprob: -3.060405731201172
    6. '<=' → logprob: -3.810405731201172
    7. '+=' → logprob: -4.060405731201172
    8. '==' → logprob: -4.435405731201172
    9. ' =' → logprob: -4.560405731201172
    10. 'REAK' → logprob: -4.935405731201172

Token 1164: ' cum' (ID: 10023)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.18057981133460999
    2. ' beam' → logprob: -1.9305797815322876
    3. 'cum' → logprob: -5.305579662322998
    4. '0' → logprob: -5.555579662322998
    5. ' i' → logprob: -5.930579662322998
    6. 'i' → logprob: -6.055579662322998
    7. ' cum' → logprob: -6.805579662322998
    8. 'que' → logprob: -7.430579662322998
    9. 'heap' → logprob: -7.430579662322998
    10. '   ' → logprob: -7.680579662322998

Token 1165: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00045843268162570894
    2. '[i' → logprob: -7.750458240509033
    3. '[min' → logprob: -10.750458717346191
    4. 'in' → logprob: -12.375458717346191
    5. '_min' → logprob: -14.500458717346191
    6. '   ' → logprob: -15.000458717346191
    7. 'i' → logprob: -15.125458717346191
    8. 'max' → logprob: -15.125458717346191
    9. '[' → logprob: -16.000457763671875
    10. ' min' → logprob: -16.625457763671875

Token 1166: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00036382899270392954
    2. '[' → logprob: -8.125364303588867
    3. '   ' → logprob: -11.000364303588867
    4. '       ' → logprob: -11.500364303588867
    5. ' [' → logprob: -11.625364303588867
    6. '           ' → logprob: -11.625364303588867
    7. '               ' → logprob: -12.000364303588867
    8. '                   ' → logprob: -12.250364303588867
    9. '```' → logprob: -12.250364303588867
    10. '[j' → logprob: -12.625364303588867

Token 1167: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020961301401257515
    2. ']
' → logprob: -4.270961284637451
    3. '[i' → logprob: -6.395961284637451
    4. '-' → logprob: -6.520961284637451
    5. '+' → logprob: -6.645961284637451
    6. '           ' → logprob: -7.895961284637451
    7. '       ' → logprob: -7.895961284637451
    8. '[' → logprob: -7.895961284637451
    9. ']-' → logprob: -8.02096176147461
    10. ' -' → logprob: -8.27096176147461

Token 1168: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017040544480551034
    2. ' ' → logprob: -8.875170707702637
    3. '0' → logprob: -11.125170707702637
    4. '```' → logprob: -11.750170707702637
    5. '   ' → logprob: -13.000170707702637
    6. '
' → logprob: -13.000170707702637
    7. '2' → logprob: -14.125170707702637
    8. '  ' → logprob: -15.250170707702637
    9. ']' → logprob: -15.375170707702637
    10. '...' → logprob: -15.500170707702637

Token 1169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.125016212463379
    3. '```' → logprob: -15.125016212463379
    4. '
' → logprob: -15.250016212463379
    5. '   ' → logprob: -15.750016212463379
    6. '2' → logprob: -16.500015258789062
    7. '0' → logprob: -16.875015258789062
    8. '+' → logprob: -18.000015258789062
    9. '...' → logprob: -18.125015258789062
    10. '  ' → logprob: -18.187515258789062

Token 1170: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.435093879699707
    2. ']' → logprob: -1.685093879699707
    3. '-' → logprob: -2.060093879699707
    4. '```' → logprob: -2.060093879699707
    5. ']
' → logprob: -2.435093879699707
    6. '
' → logprob: -2.560093879699707
    7. '           ' → logprob: -2.685093879699707
    8. ' -' → logprob: -3.685093879699707
    9. '               ' → logprob: -4.310093879699707
    10. '<|end|>' → logprob: -4.310093879699707

Token 1171: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10052809119224548
    2. '               ' → logprob: -2.9755280017852783
    3. '```' → logprob: -3.2255280017852783
    4. ' if' → logprob: -6.225528240203857
    5. '<|end|>' → logprob: -6.600528240203857
    6. 'if' → logprob: -6.975528240203857
    7. ',' → logprob: -8.4755277633667
    8. '       ' → logprob: -9.2255277633667
    9. '                   ' → logprob: -9.9755277633667
    10. '<|end|>' → logprob: -10.2255277633667

Token 1172: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.29501986503601074
    2. '               ' → logprob: -1.6700198650360107
    3. ' if' → logprob: -3.0450198650360107
    4. '           ' → logprob: -4.67002010345459
    5. '```' → logprob: -4.67002010345459
    6. '                   ' → logprob: -7.29502010345459
    7. '       ' → logprob: -9.17002010345459
    8. '``' → logprob: -10.54502010345459
    9. '              ' → logprob: -10.92002010345459
    10. ' ' → logprob: -11.42002010345459

Token 1173: ' test' (ID: 1746)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.4741802215576172
    2. ' test' → logprob: -0.9741802215576172
    3. '(test' → logprob: -9.474180221557617
    4. '               ' → logprob: -11.349180221557617
    5. '           ' → logprob: -12.099180221557617
    6. 'cond' → logprob: -13.224180221557617
    7. '                   ' → logprob: -13.224180221557617
    8. '```' → logprob: -13.849180221557617
    9. ' cond' → logprob: -14.224180221557617
    10. '	test' → logprob: -14.599180221557617

Token 1174: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08070588856935501
    2. '<=' → logprob: -2.5807058811187744
    3. '```' → logprob: -6.4557061195373535
    4. '           ' → logprob: -9.205705642700195
    5. '                   ' → logprob: -9.580705642700195
    6. '               ' → logprob: -10.330705642700195
    7. ' <' → logprob: -12.080705642700195
    8. ' ==' → logprob: -12.455705642700195
    9. '          ' → logprob: -12.455705642700195
    10. '==' → logprob: -12.705705642700195

Token 1175: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024762547109276056
    2. ' ' → logprob: -6.002476215362549
    3. '```' → logprob: -14.377476692199707
    4. ' ' → logprob: -16.87747573852539
    5. '   ' → logprob: -18.50247573852539
    6. '``' → logprob: -18.50247573852539
    7. '10' → logprob: -18.87747573852539
    8. '
' → logprob: -20.25247573852539
    9. '1' → logprob: -20.25247573852539
    10. '`' → logprob: -20.62747573852539

Token 1176: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.625003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '
' → logprob: -19.125003814697266
    6. ' ' → logprob: -20.000003814697266
    7. ' ' → logprob: -20.000003814697266
    8. '``' → logprob: -20.500003814697266
    9. '     ' → logprob: -21.125003814697266
    10. '  ' → logprob: -21.125003814697266

Token 1177: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6854572892189026
    2. ':
' → logprob: -0.9354572892189026
    3. ':' → logprob: -2.560457229614258
    4. '                   ' → logprob: -4.310457229614258
    5. 'and' → logprob: -5.310457229614258
    6. '               ' → logprob: -5.310457229614258
    7. '           ' → logprob: -6.685457229614258
    8. '                       ' → logprob: -6.810457229614258
    9. '<|end|>' → logprob: -8.810457229614258
    10. '```' → logprob: -8.935457229614258

Token 1178: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027156978845596313
    2. '                       ' → logprob: -4.402156829833984
    3. '               ' → logprob: -5.277156829833984
    4. ' and' → logprob: -5.527156829833984
    5. '```' → logprob: -5.527156829833984
    6. ':
' → logprob: -7.527156829833984
    7. ':' → logprob: -8.402156829833984
    8. '           ' → logprob: -8.652156829833984
    9. '<|end|>' → logprob: -9.027156829833984
    10. '                  ' → logprob: -9.027156829833984

Token 1179: ' t' (ID: 260)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0908762663602829
    2. 'ans' → logprob: -3.090876340866089
    3. ' ans' → logprob: -3.715876340866089
    4. '               ' → logprob: -5.21587610244751
    5. '                       ' → logprob: -5.34087610244751
    6. ' return' → logprob: -5.96587610244751
    7. '```' → logprob: -6.21587610244751
    8. 'return' → logprob: -6.59087610244751
    9. 'break' → logprob: -8.465876579284668
    10. '           ' → logprob: -8.840876579284668

Token 1180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5370798110961914
    2. '=' → logprob: -1.2870798110961914
    3. 'ans' → logprob: -3.0370798110961914
    4. ' ans' → logprob: -3.7870798110961914
    5. '       ' → logprob: -3.9120798110961914
    6. ' break' → logprob: -4.662079811096191
    7. 'break' → logprob: -4.912079811096191
    8. 'r' → logprob: -4.912079811096191
    9. '           ' → logprob: -5.037079811096191
    10. '               ' → logprob: -6.287079811096191

Token 1181: ' abs' (ID: 8443)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13551121950149536
    2. 'cum' → logprob: -3.0105111598968506
    3. ' i' → logprob: -3.8855111598968506
    4. '(i' → logprob: -4.26051139831543
    5. 'B' → logprob: -4.76051139831543
    6. 'beam' → logprob: -5.26051139831543
    7. 'min' → logprob: -5.38551139831543
    8. '(' → logprob: -5.76051139831543
    9. '0' → logprob: -5.88551139831543
    10. '-' → logprob: -6.01051139831543

Token 1182: '(test' (ID: 16066)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0738551989197731
    2. '(' → logprob: -3.32385516166687
    3. '(c' → logprob: -3.44885516166687
    4. '(b' → logprob: -6.573855400085449
    5. '(test' → logprob: -7.448855400085449
    6. 'B' → logprob: -7.698855400085449
    7. '(be' → logprob: -7.823855400085449
    8. 'cum' → logprob: -9.07385540008545
    9. '(
' → logprob: -9.19885540008545
    10. '((' → logprob: -9.44885540008545

Token 1183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2308838963508606
    2. ')
' → logprob: -1.7308838367462158
    3. ' -' → logprob: -4.605884075164795
    4. '                   ' → logprob: -5.105884075164795
    5. '+' → logprob: -5.480884075164795
    6. '-' → logprob: -5.605884075164795
    7. ' +' → logprob: -5.730884075164795
    8. ')+' → logprob: -6.855884075164795
    9. '                       ' → logprob: -8.480883598327637
    10. ')-' → logprob: -8.730883598327637

Token 1184: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01490156352519989
    2. '               ' → logprob: -5.514901638031006
    3. '<|end|>' → logprob: -5.514901638031006
    4. '           ' → logprob: -5.889901638031006
    5. '```' → logprob: -6.014901638031006
    6. '                       ' → logprob: -7.889901638031006
    7. ' and' → logprob: -8.514901161193848
    8. '                           ' → logprob: -8.889901161193848
    9. ' if' → logprob: -8.889901161193848
    10. '+' → logprob: -9.139901161193848

Token 1185: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21844911575317383
    2. '                   ' → logprob: -2.468449115753174
    3. 'ans' → logprob: -2.968449115753174
    4. ' if' → logprob: -3.968449115753174
    5. '```' → logprob: -3.968449115753174
    6. 'pos' → logprob: -4.718449115753174
    7. '``' → logprob: -5.968449115753174
    8. '               ' → logprob: -6.093449115753174
    9. 'ratio' → logprob: -6.218449115753174
    10. 'for' → logprob: -6.718449115753174

Token 1186: ' B' (ID: 418)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13385170698165894
    2. ' t' → logprob: -2.2588517665863037
    3. 'B' → logprob: -4.008851528167725
    4. ' B' → logprob: -6.383851528167725
    5. '(t' → logprob: -8.008852005004883
    6. '           ' → logprob: -8.883852005004883
    7. '                   ' → logprob: -9.258852005004883
    8. '(B' → logprob: -9.633852005004883
    9. 'cum' → logprob: -9.758852005004883
    10. ' (' → logprob: -9.883852005004883

Token 1187: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.30734387040138245
    2. '<=' → logprob: -2.1823439598083496
    3. ' <' → logprob: -3.1823439598083496
    4. ' >=' → logprob: -3.3073439598083496
    5. ' >' → logprob: -3.5573439598083496
    6. '+' → logprob: -4.18234395980835
    7. '>' → logprob: -4.55734395980835
    8. '>=' → logprob: -5.05734395980835
    9. '```' → logprob: -5.18234395980835
    10. '<' → logprob: -6.43234395980835

Token 1188: ' ans' (ID: 3345)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03326928988099098
    2. ' t' → logprob: -3.6582694053649902
    3. '(t' → logprob: -5.78326940536499
    4. '(' → logprob: -7.28326940536499
    5. '-' → logprob: -7.28326940536499
    6. '0' → logprob: -7.65826940536499
    7. 'abs' → logprob: -8.033268928527832
    8. '-t' → logprob: -8.033268928527832
    9. 'beam' → logprob: -8.408268928527832
    10. ' (' → logprob: -8.533268928527832

Token 1189: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.37939828634262085
    2. '[' → logprob: -2.3793983459472656
    3. '[m' → logprob: -2.5043983459472656
    4. '[t' → logprob: -2.6293983459472656
    5. '[-' → logprob: -3.2543983459472656
    6. '```' → logprob: -4.629398345947266
    7. '[
' → logprob: -4.754398345947266
    8. '[cnt' → logprob: -5.504398345947266
    9. '[len' → logprob: -5.629398345947266
    10. ' [' → logprob: -7.504398345947266

Token 1190: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3540114164352417
    2. '0' → logprob: -1.2290114164352417
    3. '-' → logprob: -5.229011535644531
    4. '```' → logprob: -10.104011535644531
    5. '2' → logprob: -10.604011535644531
    6. '[' → logprob: -10.604011535644531
    7. ' ' → logprob: -10.729011535644531
    8. ' -' → logprob: -10.854011535644531
    9. '   ' → logprob: -11.229011535644531
    10. '
' → logprob: -11.604011535644531

Token 1191: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7036816477775574
    2. ' <' → logprob: -1.2036817073822021
    3. '>' → logprob: -2.578681707382202
    4. ' <=' → logprob: -2.703681707382202
    5. '<' → logprob: -3.328681707382202
    6. '<=' → logprob: -4.328681468963623
    7. '[' → logprob: -5.078681468963623
    8. '```' → logprob: -5.828681468963623
    9. ' >=' → logprob: -6.578681468963623
    10. '>=' → logprob: -7.453681468963623

Token 1192: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3452446460723877
    2. ' <' → logprob: -2.2202446460723877
    3. '>' → logprob: -2.5952446460723877
    4. ' >' → logprob: -3.0952446460723877
    5. '<t' → logprob: -4.345244407653809
    6. '[' → logprob: -4.470244407653809
    7. '```' → logprob: -4.470244407653809
    8. '<=' → logprob: -4.720244407653809
    9. '*' → logprob: -5.345244407653809
    10. ' <=' → logprob: -5.470244407653809

Token 1193: ' ans' (ID: 3345)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.004747672006487846
    2. ' t' → logprob: -6.3797478675842285
    3. 'ans' → logprob: -6.8797478675842285
    4. '(t' → logprob: -7.0047478675842285
    5. 'm' → logprob: -7.5047478675842285
    6. '(ans' → logprob: -8.25474739074707
    7. '   ' → logprob: -8.87974739074707
    8. 'B' → logprob: -10.12974739074707
    9. ' ans' → logprob: -10.25474739074707
    10. 'b' → logprob: -10.37974739074707

Token 1194: '[' (ID: 58)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6801131963729858
    2. '1' → logprob: -0.9301131963729858
    3. '[' → logprob: -2.4301133155822754
    4. '   ' → logprob: -6.055113315582275
    5. 'i' → logprob: -6.305113315582275
    6. ' ' → logprob: -6.305113315582275
    7. ' t' → logprob: -6.305113315582275
    8. '0' → logprob: -7.180113315582275
    9. '`t' → logprob: -7.555113315582275
    10. 'm' → logprob: -7.680113315582275

Token 1195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39622339606285095
    2. '2' → logprob: -1.1462234258651733
    3. 'i' → logprob: -5.271223545074463
    4. '3' → logprob: -6.521223545074463
    5. '0' → logprob: -7.021223545074463
    6. '-' → logprob: -7.646223545074463
    7. '
' → logprob: -7.771223545074463
    8. '```' → logprob: -8.146223068237305
    9. '   ' → logprob: -8.521223068237305
    10. 't' → logprob: -8.771223068237305

Token 1196: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.45279619097709656
    2. '*t' → logprob: -1.077796220779419
    3. '*' → logprob: -4.82779598236084
    4. ':
' → logprob: -5.07779598236084
    5. '                       ' → logprob: -6.32779598236084
    6. ':' → logprob: -6.45279598236084
    7. ' or' → logprob: -6.57779598236084
    8. ' and' → logprob: -7.07779598236084
    9. 't' → logprob: -7.20279598236084
    10. ' t' → logprob: -7.82779598236084

Token 1197: ' *' (ID: 425)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.5411670804023743
    2. ' *' → logprob: -1.0411670207977295
    3. '*' → logprob: -2.9161670207977295
    4. 't' → logprob: -5.541167259216309
    5. ' t' → logprob: -5.791167259216309
    6. '```' → logprob: -7.291167259216309
    7. '                       ' → logprob: -7.666167259216309
    8. ' and' → logprob: -8.166167259216309
    9. '                           ' → logprob: -8.416167259216309
    10. '                   ' → logprob: -8.666167259216309

Token 1198: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00026336227892898023
    2. '(t' → logprob: -8.500263214111328
    3. ' t' → logprob: -9.875263214111328
    4. '   ' → logprob: -12.625263214111328
    5. '
' → logprob: -13.000263214111328
    6. '(' → logprob: -14.375263214111328
    7. '           ' → logprob: -14.750263214111328
    8. ' ' → logprob: -15.000263214111328
    9. '       ' → logprob: -15.375263214111328
    10. 'm' → logprob: -15.750263214111328

Token 1199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1653749942779541
    2. ':
' → logprob: -2.290374994277954
    3. '                       ' → logprob: -4.290374755859375
    4. ' and' → logprob: -4.665374755859375
    5. '<|end|>' → logprob: -5.165374755859375
    6. '```' → logprob: -5.540374755859375
    7. 'and' → logprob: -5.790374755859375
    8. '                           ' → logprob: -5.790374755859375
    9. '):
' → logprob: -6.415374755859375
    10. '                   ' → logprob: -6.415374755859375

Token 1200: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3572004437446594
    2. '                       ' → logprob: -1.8572003841400146
    3. '                   ' → logprob: -2.7322003841400146
    4. '                               ' → logprob: -3.3572003841400146
    5. '``' → logprob: -4.232200622558594
    6. '                           ' → logprob: -4.482200622558594
    7. '               ' → logprob: -4.732200622558594
    8. '(ans' → logprob: -6.232200622558594
    9. ' ans' → logprob: -6.482200622558594
    10. ')' → logprob: -6.482200622558594

Token 1201: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2617691159248352
    2. 'ans' (adapté à ' ans') → logprob: -1.5117690563201904
    3. '                           ' → logprob: -5.7617692947387695
    4. '                       ' → logprob: -6.1367692947387695
    5. '(ans' → logprob: -6.1367692947387695
    6. '```' → logprob: -6.8867692947387695
    7. '                   ' → logprob: -7.6367692947387695
    8. '           ' → logprob: -8.38676929473877
    9. '               ' → logprob: -8.51176929473877
    10. '                               ' → logprob: -8.63676929473877

Token 1202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16627515852451324
    2. '[' → logprob: -1.916275143623352
    3. '=[' → logprob: -5.4162750244140625
    4. ' =' → logprob: -6.6662750244140625
    5. '```' → logprob: -8.916275024414062
    6. '=
' → logprob: -9.416275024414062
    7. '=[
' → logprob: -10.041275024414062
    8. '[
' → logprob: -10.291275024414062
    9. '[-' → logprob: -11.666275024414062
    10. ' =[' → logprob: -11.916275024414062

Token 1203: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.7454860806465149
    2. '[' → logprob: -0.9954860806465149
    3. ' [' → logprob: -1.8704860210418701
    4. ' t' → logprob: -7.120486259460449
    5. '[
' → logprob: -7.120486259460449
    6. '(t' → logprob: -9.37048625946045
    7. '[B' → logprob: -9.99548625946045
    8. '[token' → logprob: -10.37048625946045
    9. 't' → logprob: -10.99548625946045
    10. ' (' → logprob: -11.37048625946045

Token 1204: 't' (ID: 83)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006129052489995956
    2. 't' → logprob: -5.131129264831543
    3. 'm' → logprob: -9.006129264831543
    4. '   ' → logprob: -11.006129264831543
    5. ' B' → logprob: -11.131129264831543
    6. '           ' → logprob: -11.756129264831543
    7. '                   ' → logprob: -11.756129264831543
    8. '       ' → logprob: -12.006129264831543
    9. 'b' → logprob: -12.381129264831543
    10. '               ' → logprob: -12.381129264831543

Token 1205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016323324525728822
    2. ',m' → logprob: -6.876632213592529
    3. ',i' → logprob: -9.001632690429688
    4. ' ,' → logprob: -9.126632690429688
    5. ',B' → logprob: -9.376632690429688
    6. ',
' → logprob: -9.376632690429688
    7. ',b' → logprob: -10.126632690429688
    8. ',t' → logprob: -10.126632690429688
    9. ',c' → logprob: -11.251632690429688
    10. '```' → logprob: -11.376632690429688

Token 1206: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.007627569139003754
    2. ' B' → logprob: -4.882627487182617
    3. 't' → logprob: -11.382627487182617
    4. '1' → logprob: -13.132627487182617
    5. '(' → logprob: -13.382627487182617
    6. '(B' → logprob: -13.382627487182617
    7. '-B' → logprob: -13.882627487182617
    8. ' t' → logprob: -13.882627487182617
    9. ' (' → logprob: -14.382627487182617
    10. 'abs' → logprob: -14.757627487182617

Token 1207: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001690058154053986
    2. ']
' → logprob: -6.501689910888672
    3. ' ]' → logprob: -8.876689910888672
    4. '<|end|>' → logprob: -10.501689910888672
    5. '       ' → logprob: -12.126689910888672
    6. ']

' → logprob: -12.376689910888672
    7. '   ' → logprob: -12.501689910888672
    8. '```' → logprob: -13.501689910888672
    9. '[' → logprob: -13.626689910888672
    10. '+' → logprob: -14.751689910888672

Token 1208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7897685170173645
    2. '```' → logprob: -1.9147684574127197
    3. '               ' → logprob: -2.0397684574127197
    4. '           ' → logprob: -2.4147684574127197
    5. '<|end|>' → logprob: -2.9147684574127197
    6. '                   ' → logprob: -3.0397684574127197
    7. '   ' → logprob: -3.7897684574127197
    8. '                       ' → logprob: -4.164768695831299
    9. ')' → logprob: -4.414768695831299
    10. 'return' → logprob: -4.914768695831299

Token 1209: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07073754817247391
    2. 'return' → logprob: -3.195737600326538
    3. 'if' → logprob: -4.195737361907959
    4. '       ' → logprob: -5.195737361907959
    5. '```' → logprob: -5.570737361907959
    6. ' if' → logprob: -6.945737361907959
    7. 'else' → logprob: -7.195737361907959
    8. 'for' → logprob: -7.445737361907959
    9. '
' → logprob: -8.820737838745117
    10. ' return' → logprob: -8.945737838745117

Token 1210: ' initial' (ID: 4871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6790282726287842
    2. 'return' → logprob: -1.6790282726287842
    3. 'for' → logprob: -1.8040282726287842
    4. '       ' → logprob: -2.304028272628784
    5. 'if' → logprob: -3.679028272628784
    6. '#' → logprob: -5.679028511047363
    7. 'ans' → logprob: -5.929028511047363
    8. ' for' → logprob: -6.179028511047363
    9. '```' → logprob: -6.429028511047363
    10. ' return' → logprob: -6.554028511047363

Token 1211: 'isation' (ID: 6993)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0647989511489868
    2. '   ' → logprob: -1.5647989511489868
    3. 'iser' → logprob: -1.5647989511489868
    4. '#' → logprob: -2.1897988319396973
    5. 'izer' → logprob: -3.5647988319396973
    6. 'er' → logprob: -3.8147988319396973
    7. 'isé' → logprob: -3.8147988319396973
    8. 'ement' → logprob: -4.064798831939697
    9. 'ans' → logprob: -4.939798831939697
    10. '
' → logprob: -5.564798831939697

Token 1212: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016546647995710373
    2. 'dp' → logprob: -5.391546726226807
    3. '       ' → logprob: -5.641546726226807
    4. 'seg' → logprob: -6.141546726226807
    5. 'left' → logprob: -7.641546726226807
    6. 'cum' → logprob: -7.891546726226807
    7. 'm' → logprob: -8.016546249389648
    8. 'p' → logprob: -8.141546249389648
    9. 'ans' → logprob: -8.266546249389648
    10. 'pos' → logprob: -8.516546249389648

Token 1213: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9703258275985718
    2. 'for' → logprob: -1.5953258275985718
    3. '       ' → logprob: -1.9703258275985718
    4. 'ans' → logprob: -2.7203259468078613
    5. 'if' → logprob: -3.0953259468078613
    6. 'm' → logprob: -3.3453259468078613
    7. 'pos' → logprob: -3.5953259468078613
    8. 'den' → logprob: -3.8453259468078613
    9. 't' → logprob: -4.720325946807861
    10. '```' → logprob: -4.720325946807861

Token 1214: ' start' (ID: 1604)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.8684923648834229
    2. 'for' → logprob: -1.9934923648834229
    3. 'pos' → logprob: -2.868492364883423
    4. '       ' → logprob: -2.993492364883423
    5. 'ans' → logprob: -2.993492364883423
    6. 'den' → logprob: -3.118492364883423
    7. 'ratio' → logprob: -3.243492364883423
    8. 'S' → logprob: -3.618492364883423
    9. 'm' → logprob: -3.618492364883423
    10. 'i' → logprob: -3.743492364883423

Token 1215: 'L' (ID: 43)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.270560622215271
    2. ' =' → logprob: -1.520560622215271
    3. ',' → logprob: -4.0205607414245605
    4. '=start' → logprob: -8.145560264587402
    5. ',end' → logprob: -9.145560264587402
    6. '=end' → logprob: -9.270560264587402
    7. ' ,' → logprob: -12.020560264587402
    8. ',start' → logprob: -12.020560264587402
    9. '```' → logprob: -12.645560264587402
    10. '=
' → logprob: -13.145560264587402

Token 1216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21392390131950378
    2. ' =' → logprob: -1.7139239311218262
    3. ',' → logprob: -4.838923931121826
    4. '=start' → logprob: -5.463923931121826
    5. '=end' → logprob: -9.588923454284668
    6. '=
' → logprob: -9.713923454284668
    7. ',start' → logprob: -9.838923454284668
    8. '   ' → logprob: -10.838923454284668
    9. '```' → logprob: -11.088923454284668
    10. ',end' → logprob: -11.088923454284668

Token 1217: ' [-' (ID: 20191)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15641632676124573
    2. 'N' → logprob: -2.156416416168213
    3. 'm' → logprob: -3.656416416168213
    4. 'start' → logprob: -6.906416416168213
    5. '1' → logprob: -7.906416416168213
    6. 'beam' → logprob: -8.281415939331055
    7. '   ' → logprob: -8.406415939331055
    8. '-' → logprob: -8.531415939331055
    9. 'i' → logprob: -8.531415939331055
    10. 'end' → logprob: -8.656415939331055

Token 1218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.512282133102417
    2. '10' → logprob: -2.012282133102417
    3. '(' → logprob: -2.387282133102417
    4. 'm' → logprob: -2.762282133102417
    5. 'ans' → logprob: -3.262282133102417
    6. 'float' → logprob: -3.262282133102417
    7. 'beam' → logprob: -4.012282371520996
    8. 'start' → logprob: -5.137282371520996
    9. '((' → logprob: -6.387282371520996
    10. '(-' → logprob: -6.512282371520996

Token 1219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5486351251602173
    2. ',' → logprob: -1.7986351251602173
    3. ' for' → logprob: -1.7986351251602173
    4. 'for' → logprob: -2.9236350059509277
    5. ']
' → logprob: -3.4236350059509277
    6. ' +' → logprob: -6.548635005950928
    7. '+' → logprob: -7.048635005950928
    8. ',
' → logprob: -7.298635005950928
    9. ',start' → logprob: -7.548635005950928
    10. '       ' → logprob: -8.423635482788086

Token 1220: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9889901876449585
    2. ',' → logprob: -1.2389901876449585
    3. '
' → logprob: -1.7389901876449585
    4. ' for' → logprob: -2.863990306854248
    5. '[start' → logprob: -3.363990306854248
    6. '```' → logprob: -4.238990306854248
    7. ']' → logprob: -4.363990306854248
    8. 'start' → logprob: -4.488990306854248
    9. ',start' → logprob: -4.738990306854248
    10. '*' → logprob: -5.613990306854248

Token 1221: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4326861500740051
    2. '(N' → logprob: -1.1826860904693604
    3. 'm' → logprob: -3.3076860904693604
    4. '(m' → logprob: -4.9326863288879395
    5. '(' → logprob: -7.1826863288879395
    6. 'M' → logprob: -9.557685852050781
    7. ' (' → logprob: -9.682685852050781
    8. '(len' → logprob: -11.182685852050781
    9. '   ' → logprob: -11.307685852050781
    10. '(n' → logprob: -11.557685852050781

Token 1222: '
' (ID: 198)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8087058663368225
    2. '   ' → logprob: -0.9337058663368225
    3. 'pos' → logprob: -2.6837058067321777
    4. '```' → logprob: -3.3087058067321777
    5. 'indices' → logprob: -4.558705806732178
    6. 'count' → logprob: -4.683705806732178
    7. 'for' → logprob: -4.808705806732178
    8. '       ' → logprob: -5.058705806732178
    9. 'used' → logprob: -5.558705806732178
    10. 'idx' → logprob: -5.808705806732178

Token 1223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.732933521270752
    2. 'end' → logprob: -1.732933521270752
    3. 'count' → logprob: -2.732933521270752
    4. 'pos' → logprob: -2.857933521270752
    5. 'for' → logprob: -3.107933521270752
    6. '```' → logprob: -3.232933521270752
    7. 'start' → logprob: -3.357933521270752
    8. 'stack' → logprob: -3.357933521270752
    9. '   ' → logprob: -3.482933521270752
    10. 'next' → logprob: -4.482933521270752

Token 1224: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.15755128860473633
    2. 'pos' → logprob: -2.4075512886047363
    3. 'stack' → logprob: -3.9075512886047363
    4. 'start' → logprob: -4.657551288604736
    5. 'count' → logprob: -5.282551288604736
    6. 'last' → logprob: -5.907551288604736
    7. 'used' → logprob: -6.157551288604736
    8. 'idx' → logprob: -6.157551288604736
    9. 'next' → logprob: -6.282551288604736
    10. 'dp' → logprob: -6.407551288604736

Token 1225: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5677347183227539
    2. '=' → logprob: -1.192734718322754
    3. ' =' → logprob: -2.067734718322754
    4. '[' → logprob: -6.942734718322754
    5. '=[' → logprob: -7.317734718322754
    6. '   ' → logprob: -7.567734718322754
    7. 's' → logprob: -7.692734718322754
    8. '_' → logprob: -8.442734718322754
    9. '```' → logprob: -8.567734718322754
    10. '=[]' → logprob: -9.192734718322754

Token 1226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01816117763519287
    2. ' =' → logprob: -4.018161296844482
    3. '=[' → logprob: -12.268160820007324
    4. '```' → logprob: -12.643160820007324
    5. '[' → logprob: -13.143160820007324
    6. '   ' → logprob: -14.268160820007324
    7. '=[]' → logprob: -15.518160820007324
    8. ']' → logprob: -15.643160820007324
    9. ' =[' → logprob: -16.51816177368164
    10. ']=' → logprob: -16.76816177368164

Token 1227: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.03837469592690468
    2. '[' → logprob: -3.288374662399292
    3. '[N' → logprob: -8.038374900817871
    4. 'N' → logprob: -12.038374900817871
    5. ' [-' → logprob: -12.663374900817871
    6. ' [' → logprob: -14.288374900817871
    7. '[m' → logprob: -15.038374900817871
    8. '[n' → logprob: -16.163373947143555
    9. '[len' → logprob: -16.663373947143555
    10. '   ' → logprob: -16.788373947143555

Token 1228: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4741174876689911
    2. '1' → logprob: -0.9741175174713135
    3. '```' → logprob: -10.724117279052734
    4. ' N' → logprob: -11.724117279052734
    5. '(N' → logprob: -12.724117279052734
    6. '(' → logprob: -13.349117279052734
    7. ' ' → logprob: -13.974117279052734
    8. '   ' → logprob: -14.099117279052734
    9. '``' → logprob: -14.224117279052734
    10. ']' → logprob: -14.349117279052734

Token 1229: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009498104336671531
    2. '*' → logprob: -7.750949859619141
    3. ']*' → logprob: -8.37594985961914
    4. '   ' → logprob: -8.62594985961914
    5. 'for' → logprob: -10.37594985961914
    6. ']
' → logprob: -10.62594985961914
    7. '```' → logprob: -11.37594985961914
    8. ' ]' → logprob: -11.50094985961914
    9. '[' → logprob: -12.00094985961914
    10. ' *' → logprob: -12.12594985961914

Token 1230: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07201578468084335
    2. '*' → logprob: -2.8220157623291016
    3. '*N' → logprob: -4.697015762329102
    4. ']' → logprob: -7.947015762329102
    5. '[' → logprob: -9.322015762329102
    6. '```' → logprob: -9.697015762329102
    7. '[N' → logprob: -9.822015762329102
    8. '   ' → logprob: -9.947015762329102
    9. ' N' → logprob: -9.947015762329102
    10. '[]' → logprob: -9.947015762329102

Token 1231: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.6240566083070007e-06
    2. '```' → logprob: -14.500001907348633
    3. '(' → logprob: -14.875001907348633
    4. 'size' → logprob: -15.125001907348633
    5. ' N' → logprob: -16.000001907348633
    6. '(N' → logprob: -16.625001907348633
    7. '
' → logprob: -17.000001907348633
    8. '1' → logprob: -17.125001907348633
    9. 'm' → logprob: -17.250001907348633
    10. 'len' → logprob: -17.375001907348633

Token 1232: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7918082475662231
    2. '       ' → logprob: -1.5418082475662231
    3. 'start' → logprob: -1.9168082475662231
    4. 'stack' → logprob: -2.9168081283569336
    5. 'count' → logprob: -3.0418081283569336
    6. '```' → logprob: -3.9168081283569336
    7. '   ' → logprob: -4.166808128356934
    8. 'cnt' → logprob: -4.541808128356934
    9. 'i' → logprob: -4.666808128356934
    10. ' for' → logprob: -4.666808128356934

Token 1233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.550910234451294
    2. 'for' → logprob: -1.050910234451294
    3. '```' → logprob: -3.925910234451294
    4. '   ' → logprob: -4.175909996032715
    5. 'stack' → logprob: -4.175909996032715
    6. 'count' → logprob: -5.300909996032715
    7. ' for' → logprob: -5.425909996032715
    8. 'start' → logprob: -5.675909996032715
    9. 'i' → logprob: -6.175909996032715
    10. 'pos' → logprob: -6.550909996032715

Token 1234: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2246987372636795
    2. 'stack' → logprob: -2.724698781967163
    3. 'left' → logprob: -3.099698781967163
    4. 'i' → logprob: -3.849698781967163
    5. '       ' → logprob: -4.224698543548584
    6. 'l' → logprob: -4.724698543548584
    7. 'start' → logprob: -4.849698543548584
    8. 'idx' → logprob: -4.974698543548584
    9. 'pos' → logprob: -4.974698543548584
    10. 'cnt' → logprob: -5.224698543548584

Token 1235: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5901080369949341
    2. ' =' → logprob: -0.8401080369949341
    3. '=[]' → logprob: -4.9651079177856445
    4. '.push' → logprob: -5.2151079177856445
    5. '=[]
' → logprob: -7.0901079177856445
    6. '   ' → logprob: -7.8401079177856445
    7. '.append' → logprob: -8.590107917785645
    8. ',' → logprob: -9.590107917785645
    9. '.pop' → logprob: -10.340107917785645
    10. '```' → logprob: -10.465107917785645

Token 1236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11318463832139969
    2. '=' → logprob: -2.238184690475464
    3. '.push' → logprob: -8.238184928894043
    4. '=[]' → logprob: -9.988184928894043
    5. '.' → logprob: -10.738184928894043
    6. '=[]
' → logprob: -11.738184928894043
    7. '=
' → logprob: -12.613184928894043
    8. ' =
' → logprob: -12.738184928894043
    9. ',' → logprob: -12.738184928894043
    10. '```' → logprob: -13.238184928894043

Token 1237: ' []
' (ID: 8911)
  Prédit: 'Heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -0.0005343250813893974
    2. '[]' → logprob: -8.250534057617188
    3. '[]
' → logprob: -8.625534057617188
    4. '[' → logprob: -9.750534057617188
    5. ' Heap' → logprob: -11.125534057617188
    6. 'Seg' → logprob: -12.250534057617188
    7. 'max' → logprob: -12.500534057617188
    8. 'heap' → logprob: -12.625534057617188
    9. 'Max' → logprob: -13.125534057617188
    10. '[max' → logprob: -13.875534057617188

Token 1238: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4031122326850891
    2. '       ' → logprob: -1.7781121730804443
    3. 'heap' → logprob: -2.0281121730804443
    4. '   ' → logprob: -4.153112411499023
    5. '```' → logprob: -4.778112411499023
    6. 'import' → logprob: -5.653112411499023
    7. 'while' → logprob: -7.028112411499023
    8. 'Heap' → logprob: -7.153112411499023
    9. 'max' → logprob: -7.403112411499023
    10. ' for' → logprob: -8.278112411499023

Token 1239: ' trash' (ID: 26508)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21115684509277344
    2. 'heap' → logprob: -2.0861568450927734
    3. '       ' → logprob: -2.9611568450927734
    4. 'i' → logprob: -5.711156845092773
    5. 'import' → logprob: -5.836156845092773
    6. 'S' → logprob: -6.336156845092773
    7. '   ' → logprob: -6.586156845092773
    8. 'from' → logprob: -7.086156845092773
    9. '```' → logprob: -7.211156845092773
    10. 'while' → logprob: -7.461156845092773

Token 1240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36023733019828796
    2. ' =' → logprob: -1.4852373600006104
    3. '=[]' → logprob: -2.6102373600006104
    4. '.append' → logprob: -7.360237121582031
    5. 'heap' → logprob: -7.485237121582031
    6. ',' → logprob: -7.985237121582031
    7. '=[]
' → logprob: -8.110237121582031
    8. '.clear' → logprob: -8.360237121582031
    9. '_heap' → logprob: -9.110237121582031
    10. '[]' → logprob: -9.485237121582031

Token 1241: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0015584280481562018
    2. '{}' → logprob: -7.251558303833008
    3. '[]
' → logprob: -7.376558303833008
    4. '[' → logprob: -9.126558303833008
    5. ' []' → logprob: -9.626558303833008
    6. 'heap' → logprob: -11.001558303833008
    7. '{' → logprob: -12.001558303833008
    8. '0' → logprob: -12.001558303833008
    9. '[]}' → logprob: -12.001558303833008
    10. '[]>' → logprob: -12.501558303833008

Token 1242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6933550238609314
    2. 'for' → logprob: -1.8183550834655762
    3. 'while' → logprob: -1.8183550834655762
    4. '```' → logprob: -2.693355083465576
    5. '   ' → logprob: -2.943355083465576
    6. 'heap' → logprob: -3.443355083465576
    7. 'import' → logprob: -5.068355083465576
    8. ' for' → logprob: -5.193355083465576
    9. '           ' → logprob: -5.693355083465576
    10. ' while' → logprob: -6.193355083465576

Token 1243: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8255416750907898
    2. 'heap' → logprob: -0.9505416750907898
    3. 'import' → logprob: -2.7005417346954346
    4. 'i' → logprob: -3.0755417346954346
    5. '       ' → logprob: -3.5755417346954346
    6. 'from' → logprob: -4.2005414962768555
    7. '   ' → logprob: -5.5755414962768555
    8. 'cnt' (adapté à ' cnt') → logprob: -5.7005414962768555
    9. 'pos' → logprob: -5.9505414962768555
    10. 'idx' → logprob: -5.9505414962768555

Token 1244: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3873218297958374
    2. ' =' → logprob: -1.1373218297958374
    3. '+=' → logprob: -8.762321472167969
    4. ' +=' → logprob: -9.012321472167969
    5. '   ' → logprob: -10.137321472167969
    6. '<|end|>' → logprob: -10.262321472167969
    7. '```' → logprob: -10.512321472167969
    8. '       ' → logprob: -11.012321472167969
    9. '	' → logprob: -11.762321472167969
    10. '=
' → logprob: -11.762321472167969

Token 1245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12700359523296356
    2. ' =' → logprob: -2.1270036697387695
    3. '+=' → logprob: -9.75200366973877
    4. ' +=' → logprob: -11.12700366973877
    5. '```' → logprob: -13.62700366973877
    6. '   ' → logprob: -14.50200366973877
    7. '=
' → logprob: -15.75200366973877
    8. '       ' → logprob: -16.127002716064453
    9. '	' → logprob: -16.127002716064453
    10. '=int' → logprob: -16.252002716064453

Token 1246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.375004768371582
    3. '1' → logprob: -14.875004768371582
    4. '```' → logprob: -16.2500057220459
    5. 'm' → logprob: -16.5000057220459
    6. '   ' → logprob: -17.5000057220459
    7. '       ' → logprob: -18.1250057220459
    8. '
' → logprob: -18.3750057220459
    9. '  ' → logprob: -18.8750057220459
    10. ' ' → logprob: -18.8750057220459

Token 1247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -17.125
    4. '```' → logprob: -17.5
    5. '   ' → logprob: -18.0
    6. 'm' → logprob: -18.0
    7. '       ' → logprob: -18.5
    8. '000' → logprob: -19.125
    9. '  ' → logprob: -19.625
    10. 'cnt' → logprob: -20.25

Token 1248: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7451143264770508
    2. ' for' → logprob: -0.8701143264770508
    3. 'for' → logprob: -2.495114326477051
    4. '   ' → logprob: -4.620114326477051
    5. 'heap' → logprob: -5.620114326477051
    6. '```' → logprob: -6.120114326477051
    7. ' while' → logprob: -6.245114326477051
    8. 'while' → logprob: -6.370114326477051
    9. '	for' → logprob: -6.620114326477051
    10. '           ' → logprob: -7.620114326477051

Token 1249: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7799994945526123
    2. 'while' → logprob: -1.1549994945526123
    3. '       ' → logprob: -1.9049994945526123
    4. '```' → logprob: -3.7799994945526123
    5. '   ' → logprob: -4.029999732971191
    6. ' for' → logprob: -4.279999732971191
    7. '	for' → logprob: -4.779999732971191
    8. '	while' → logprob: -5.404999732971191
    9. 'heap' → logprob: -5.404999732971191
    10. ' while' → logprob: -5.404999732971191

Token 1250: ' S' (ID: 336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11354383826255798
    2. 'while' → logprob: -2.738543748855591
    3. '       ' → logprob: -4.23854398727417
    4. 'heap' → logprob: -4.36354398727417
    5. 'import' → logprob: -5.48854398727417
    6. 'i' → logprob: -5.61354398727417
    7. '```' → logprob: -5.73854398727417
    8. '   ' → logprob: -6.61354398727417
    9. 'S' (adapté à ' S') → logprob: -6.73854398727417
    10. 'que' → logprob: -6.98854398727417

Token 1251: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38706544041633606
    2. '=' → logprob: -1.1370654106140137
    3. ' +=' → logprob: -9.262065887451172
    4. '+=' → logprob: -9.887065887451172
    5. '```' → logprob: -10.762065887451172
    6. '       ' → logprob: -12.387065887451172
    7. '   ' → logprob: -12.512065887451172
    8. ',' → logprob: -12.637065887451172
    9. ')' → logprob: -13.012065887451172
    10. '	' → logprob: -13.387065887451172

Token 1252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18280135095119476
    2. '=' → logprob: -1.807801365852356
    3. ' +=' → logprob: -6.182801246643066
    4. '+=' → logprob: -7.557801246643066
    5. '       ' → logprob: -8.057801246643066
    6. '```' → logprob: -10.182801246643066
    7. '        ' → logprob: -10.432801246643066
    8. ')' → logprob: -10.557801246643066
    9. '   ' → logprob: -11.182801246643066
    10. '    ' → logprob: -11.807801246643066

Token 1253: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. ' ' → logprob: -17.500625610351562
    4. '   ' → logprob: -19.875625610351562
    5. '```' → logprob: -19.875625610351562
    6. '  ' → logprob: -20.750625610351562
    7. ' 
' → logprob: -20.875625610351562
    8. '
' → logprob: -21.000625610351562
    9. '=' → logprob: -21.000625610351562
    10. '	' → logprob: -21.500625610351562

Token 1254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -17.125009536743164
    4. 'S' → logprob: -18.125009536743164
    5. '       ' → logprob: -18.250009536743164
    6. '00' → logprob: -18.250009536743164
    7. '  ' → logprob: -18.500009536743164
    8. '000' → logprob: -18.625009536743164
    9. '=' → logprob: -19.000009536743164
    10. '[]' → logprob: -19.125009536743164

Token 1255: '
' (ID: 198)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.9966220259666443
    2. '       ' → logprob: -1.371622085571289
    3. ' for' → logprob: -1.746622085571289
    4. '<|end|>' → logprob: -2.371622085571289
    5. 'for' → logprob: -2.621622085571289
    6. '   ' → logprob: -4.246622085571289
    7. '```' → logprob: -5.496622085571289
    8. '	while' → logprob: -5.496622085571289
    9. '	' → logprob: -5.621622085571289
    10. '
' → logprob: -6.121622085571289

Token 1256: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7898516654968262
    2. 'for' → logprob: -1.1648516654968262
    3. '	for' → logprob: -2.164851665496826
    4. '```' → logprob: -2.914851665496826
    5. '   ' → logprob: -3.289851665496826
    6. '       ' → logprob: -3.914851665496826
    7. '
' → logprob: -6.039851665496826
    8. '	while' → logprob: -6.164851665496826
    9. 'while' → logprob: -6.664851665496826
    10. ' while' → logprob: -7.289851665496826

Token 1257: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008304862305521965
    2. 'i' → logprob: -5.383305072784424
    3. ' for' → logprob: -6.008305072784424
    4. 'import' → logprob: -8.008304595947266
    5. 'from' → logprob: -8.133304595947266
    6. '       ' → logprob: -8.133304595947266
    7. 'heap' → logprob: -9.258304595947266
    8. '```' → logprob: -9.383304595947266
    9. 'while' → logprob: -10.008304595947266
    10. '   ' → logprob: -10.133304595947266

Token 1258: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6632311940193176
    2. '2' → logprob: -1.4132311344146729
    3. ' =' → logprob: -2.288231134414673
    4. '=' → logprob: -2.413231134414673
    5. '```' → logprob: -3.538231134414673
    6. '       ' → logprob: -5.538231372833252
    7. '   ' → logprob: -5.913231372833252
    8. '[
' → logprob: -6.163231372833252
    9. ')' → logprob: -6.288231372833252
    10. ',' → logprob: -6.663231372833252

Token 1259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.58283931016922
    2. '=' → logprob: -0.83283931016922
    3. '[' → logprob: -5.832839488983154
    4. '2' → logprob: -6.832839488983154
    5. ',' → logprob: -7.332839488983154
    6. ']' → logprob: -7.457839488983154
    7. ')' → logprob: -7.832839488983154
    8. '   ' → logprob: -7.957839488983154
    9. '```' → logprob: -8.332839012145996
    10. '=[]' → logprob: -8.582839012145996

Token 1260: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013018340803682804
    2. 'data' → logprob: -5.2630181312561035
    3. '[data' → logprob: -5.7630181312561035
    4. '[-' → logprob: -7.1380181312561035
    5. '[]' → logprob: -7.3880181312561035
    6. ' [' → logprob: -7.7630181312561035
    7. '[m' → logprob: -7.7630181312561035
    8. 'beam' → logprob: -7.7630181312561035
    9. '[start' → logprob: -8.013018608093262
    10. '[c' → logprob: -8.388018608093262

Token 1261: 'ide' (ID: 617)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4610777497291565
    2. 'ide' → logprob: -1.4610776901245117
    3. '10' → logprob: -2.3360776901245117
    4. 'float' → logprob: -4.211077690124512
    5. 'beam' → logprob: -5.211077690124512
    6. 'heap' → logprob: -5.461077690124512
    7. '(' → logprob: -5.961077690124512
    8. 'None' → logprob: -6.086077690124512
    9. 'data' → logprob: -6.336077690124512
    10. 'seg' → logprob: -6.461077690124512

Token 1262: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.0015267637791112065
    2. 'ele' → logprob: -6.501526832580566
    3. 'Ele' → logprob: -11.126526832580566
    4. '_e' → logprob: -13.001526832580566
    5. ']' → logprob: -13.501526832580566
    6. '-ele' → logprob: -13.751526832580566
    7. 'ELE' → logprob: -13.751526832580566
    8. '_elem' → logprob: -14.126526832580566
    9. '**' → logprob: -14.501526832580566
    10. '```' → logprob: -14.626526832580566

Token 1263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00527621153742075
    2. ' for' → logprob: -5.755276203155518
    3. 'for' → logprob: -6.630276203155518
    4. '   ' → logprob: -8.255276679992676
    5. ']*' → logprob: -8.755276679992676
    6. ']
' → logprob: -9.380276679992676
    7. '       ' → logprob: -9.880276679992676
    8. ' ]' → logprob: -10.130276679992676
    9. ',' → logprob: -10.255276679992676
    10. '[' → logprob: -11.005276679992676

Token 1264: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1265: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023309536278247833
    2. '(N' → logprob: -3.7733094692230225
    3. '(' → logprob: -10.023309707641602
    4. '
' → logprob: -12.398309707641602
    5. ' (' → logprob: -12.398309707641602
    6. '(len' → logprob: -12.898309707641602
    7. 'len' → logprob: -13.148309707641602
    8. ' N' → logprob: -13.148309707641602
    9. 'n' → logprob: -13.523309707641602
    10. '   ' → logprob: -14.148309707641602

Token 1266: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0988441705703735
    2. 'for' → logprob: -1.2238441705703735
    3. '       ' → logprob: -1.8488441705703735
    4. '```' → logprob: -1.9738441705703735
    5. '   ' → logprob: -3.098844051361084
    6. '	for' → logprob: -3.973844051361084
    7. '
' → logprob: -5.348844051361084
    8. '\t' → logprob: -6.598844051361084
    9. '``' → logprob: -6.598844051361084
    10. 'i' → logprob: -6.973844051361084

Token 1267: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33874818682670593
    2. ' for' → logprob: -1.4637482166290283
    3. '       ' → logprob: -3.5887482166290283
    4. '```' → logprob: -4.213747978210449
    5. '	for' → logprob: -4.838747978210449
    6. '   ' → logprob: -5.463747978210449
    7. '
' → logprob: -7.088747978210449
    8. 'i' → logprob: -8.21374797821045
    9. '``' → logprob: -9.33874797821045
    10. 'while' → logprob: -10.46374797821045

Token 1268: ' data' (ID: 1238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09100458770990372
    2. 'i' → logprob: -2.5910046100616455
    3. '       ' → logprob: -4.591004371643066
    4. 'k' → logprob: -7.216004371643066
    5. '```' → logprob: -7.341004371643066
    6. ' for' → logprob: -8.716004371643066
    7. '   ' → logprob: -9.091004371643066
    8. 'heap' → logprob: -9.466004371643066
    9. 'idx' → logprob: -9.966004371643066
    10. 'l' → logprob: -10.216004371643066

Token 1269: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8421782851219177
    2. '[' → logprob: -0.9671782851219177
    3. ' =' → logprob: -2.4671783447265625
    4. '=' → logprob: -3.2171783447265625
    5. '1' → logprob: -3.3421783447265625
    6. '_' → logprob: -5.4671783447265625
    7. 'for' → logprob: -5.5921783447265625
    8. '```' → logprob: -5.7171783447265625
    9. '   ' → logprob: -5.9671783447265625
    10. 's' → logprob: -6.2171783447265625

Token 1270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14270243048667908
    2. '=' → logprob: -2.017702341079712
    3. '[' → logprob: -11.267702102661133
    4. '=[' → logprob: -12.142702102661133
    5. '=[]' → logprob: -12.767702102661133
    6. ' =[' → logprob: -13.517702102661133
    7. '   ' → logprob: -13.767702102661133
    8. ',' → logprob: -13.767702102661133
    9. '<|end|>' → logprob: -14.767702102661133
    10. ')' → logprob: -14.767702102661133

Token 1271: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019330393988639116
    2. '[data' → logprob: -7.1269330978393555
    3. '[N' → logprob: -7.3769330978393555
    4. ' [' → logprob: -8.251933097839355
    5. 'data' → logprob: -9.501933097839355
    6. '[-' → logprob: -9.501933097839355
    7. '   ' → logprob: -10.626933097839355
    8. '[len' → logprob: -10.876933097839355
    9. '[i' → logprob: -11.251933097839355
    10. '[ind' → logprob: -12.626933097839355

Token 1272: 'ide' (ID: 617)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09624141454696655
    2. 'ide' → logprob: -2.4712414741516113
    3. '(N' → logprob: -5.721241474151611
    4. '(' → logprob: -5.721241474151611
    5. '10' → logprob: -9.096240997314453
    6. 'm' → logprob: -9.346240997314453
    7. 'len' → logprob: -9.596240997314453
    8. '0' → logprob: -9.721240997314453
    9. 'ideo' → logprob: -9.721240997314453
    10. '   ' → logprob: -10.346240997314453

Token 1273: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.01890624687075615
    2. 'ele' → logprob: -4.018906116485596
    3. 'Ele' → logprob: -8.893906593322754
    4. 'le' → logprob: -9.143906593322754
    5. '_le' → logprob: -9.893906593322754
    6. '_e' → logprob: -9.893906593322754
    7. '`' → logprob: -10.143906593322754
    8. 'ELE' → logprob: -10.768906593322754
    9. '_elem' → logprob: -10.893906593322754
    10. '-ele' → logprob: -11.018906593322754

Token 1274: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001216901931911707
    2. '*' → logprob: -7.501216888427734
    3. ' *' → logprob: -7.876216888427734
    4. ']*' → logprob: -8.876216888427734
    5. ' ]' → logprob: -9.376216888427734
    6. '   ' → logprob: -10.501216888427734
    7. '#' → logprob: -11.376216888427734
    8. '[' → logprob: -12.751216888427734
    9. '**' → logprob: -13.126216888427734
    10. '```' → logprob: -13.251216888427734

Token 1275: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7682279944419861
    2. '       ' → logprob: -1.0182280540466309
    3. '   ' → logprob: -3.018228054046631
    4. ' *' → logprob: -3.143228054046631
    5. '[' → logprob: -3.393228054046631
    6. ')' → logprob: -4.518228054046631
    7. '*' → logprob: -4.643228054046631
    8. '        ' → logprob: -5.018228054046631
    9. '[:' → logprob: -5.393228054046631
    10. '[]' → logprob: -5.518228054046631

Token 1276: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00046677692444063723
    2. '(N' → logprob: -7.750466823577881
    3. '(' → logprob: -10.625466346740723
    4. ' N' → logprob: -12.125466346740723
    5. ' (' → logprob: -13.500466346740723
    6. '       ' → logprob: -13.625466346740723
    7. '   ' → logprob: -14.000466346740723
    8. '```' → logprob: -14.625466346740723
    9. '           ' → logprob: -14.750466346740723
    10. '
' → logprob: -15.250466346740723

Token 1277: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1233142614364624
    2. 'for' → logprob: -1.3733142614364624
    3. '   ' → logprob: -1.6233142614364624
    4. ' for' → logprob: -2.123314380645752
    5. '
' → logprob: -2.498314380645752
    6. '```' → logprob: -3.998314380645752
    7. '	for' → logprob: -6.623314380645752
    8. 'i' → logprob: -7.498314380645752
    9. '        
' → logprob: -7.873314380645752
    10. '    
' → logprob: -7.998314380645752

Token 1278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05511629208922386
    2. 'for' → logprob: -3.9301161766052246
    3. '```' → logprob: -3.9301161766052246
    4. ' for' → logprob: -4.430116176605225
    5. '   ' → logprob: -6.305116176605225
    6. '	for' → logprob: -8.555116653442383
    7. '
' → logprob: -9.055116653442383
    8. '           ' → logprob: -9.305116653442383
    9. 'i' → logprob: -9.555116653442383
    10. '``' → logprob: -10.805116653442383

Token 1279: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011194592341780663
    2. 'i' → logprob: -4.761194705963135
    3. '       ' → logprob: -6.386194705963135
    4. 'k' → logprob: -8.386194229125977
    5. 'from' → logprob: -8.761194229125977
    6. 'l' → logprob: -9.386194229125977
    7. '```' → logprob: -9.386194229125977
    8. 'while' → logprob: -9.511194229125977
    9. 'idx' → logprob: -9.511194229125977
    10. 'heap' → logprob: -9.636194229125977

Token 1280: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0027977488934993744
    2. ' i' → logprob: -6.002797603607178
    3. 'j' → logprob: -8.502798080444336
    4. 'k' → logprob: -10.877798080444336
    5. 'x' → logprob: -10.877798080444336
    6. 'l' → logprob: -11.752798080444336
    7. 'idx' → logprob: -11.752798080444336
    8. 'r' → logprob: -11.877798080444336
    9. 't' → logprob: -11.877798080444336
    10. 'v' → logprob: -12.377798080444336

Token 1281: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05502062290906906
    2. 'in' → logprob: -2.930020570755005
    3. '```' → logprob: -10.180020332336426
    4. ',' → logprob: -11.055020332336426
    5. '	in' → logprob: -11.430020332336426
    6. '(' → logprob: -11.430020332336426
    7. '   ' → logprob: -11.555020332336426
    8. '(N' → logprob: -11.930020332336426
    9. '=' → logprob: -12.180020332336426
    10. ' i' → logprob: -12.305020332336426

Token 1282: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3215785026550293
    2. ' range' → logprob: -1.3215785026550293
    3. '0' → logprob: -4.821578502655029
    4. 'N' → logprob: -8.821578979492188
    5. '_' → logprob: -10.946578979492188
    6. '(range' → logprob: -11.321578979492188
    7. 'i' → logprob: -11.571578979492188
    8. ' ' → logprob: -11.821578979492188
    9. 'in' → logprob: -12.321578979492188
    10. ' in' → logprob: -12.446578979492188

Token 1283: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1495157778263092
    2. 'm' → logprob: -2.2745158672332764
    3. '(N' → logprob: -3.6495158672332764
    4. 'range' → logprob: -5.274515628814697
    5. '0' → logprob: -6.274515628814697
    6. '       ' → logprob: -6.774515628814697
    7. '(m' → logprob: -7.649515628814697
    8. '   ' → logprob: -8.149516105651855
    9. '1' → logprob: -8.399516105651855
    10. 'i' → logprob: -8.649516105651855

Token 1284: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16216294467449188
    2. ' -' → logprob: -2.037163019180298
    3. '):
' → logprob: -4.037162780761719
    4. '       ' → logprob: -7.162162780761719
    5. '   ' → logprob: -7.662162780761719
    6. '
' → logprob: -8.537162780761719
    7. '):' → logprob: -9.287162780761719
    8. ',' → logprob: -10.287162780761719
    9. '+' → logprob: -10.912162780761719
    10. '           ' → logprob: -11.162162780761719

Token 1285: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4603838324546814
    2. '           ' → logprob: -1.8353838920593262
    3. '       ' → logprob: -2.335383892059326
    4. ' if' → logprob: -2.835383892059326
    5. '   ' → logprob: -3.085383892059326
    6. 'if' → logprob: -5.710383892059326
    7. '	   ' → logprob: -6.335383892059326
    8. '``' → logprob: -7.210383892059326
    9. '	if' → logprob: -7.585383892059326
    10. '   ' → logprob: -7.710383892059326

Token 1286: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7533271312713623
    2. 'if' (adapté à ' if') → logprob: -1.2533271312713623
    3. '```' → logprob: -1.6283271312713623
    4. '       ' → logprob: -3.3783271312713623
    5. '           ' → logprob: -5.503327369689941
    6. 'while' → logprob: -5.628327369689941
    7. ' while' → logprob: -6.253327369689941
    8. '   ' → logprob: -6.878327369689941
    9. ' que' → logprob: -7.503327369689941
    10. 'que' → logprob: -7.878327369689941

Token 1287: ' cnt' (ID: 27340)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.360812246799469
    2. 'cnt' → logprob: -1.3608121871948242
    3. ' beam' → logprob: -3.860812187194824
    4. ' cnt' → logprob: -4.360812187194824
    5. 'que' → logprob: -4.735812187194824
    6. ' que' → logprob: -7.360812187194824
    7. '   ' → logprob: -7.485812187194824
    8. 'queue' → logprob: -7.610812187194824
    9. 'count' → logprob: -8.110812187194824
    10. 'not' → logprob: -8.235812187194824

Token 1288: '2' (ID: 17)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1027908325195312
    2. ' !=' → logprob: -1.3527908325195312
    3. ' <' → logprob: -1.8527908325195312
    4. '<' → logprob: -1.9777908325195312
    5. '==' → logprob: -2.6027908325195312
    6. '!=' → logprob: -3.8527908325195312
    7. '2' → logprob: -4.977790832519531
    8. '[i' → logprob: -5.352790832519531
    9. '```' → logprob: -6.602790832519531
    10. '   ' → logprob: -6.852790832519531

Token 1289: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18345606327056885
    2. ' <' → logprob: -2.4334559440612793
    3. '==' → logprob: -2.6834559440612793
    4. '<' → logprob: -4.558455944061279
    5. '```' → logprob: -8.183456420898438
    6. '<int' → logprob: -9.058456420898438
    7. '   ' → logprob: -9.058456420898438
    8. ' !=' → logprob: -9.183456420898438
    9. ' <=' → logprob: -9.433456420898438
    10. '[i' → logprob: -10.433456420898438

Token 1290: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02085389383137226
    2. '0' → logprob: -3.8958539962768555
    3. ' m' → logprob: -8.145853996276855
    4. ' ' → logprob: -11.645853996276855
    5. '<|end|>' → logprob: -12.020853996276855
    6. '<m' → logprob: -13.145853996276855
    7. '```' → logprob: -13.645853996276855
    8. '	m' → logprob: -14.395853996276855
    9. '
' → logprob: -14.645853996276855
    10. '1' → logprob: -14.645853996276855

Token 1291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9944263100624084
    2. ':
' → logprob: -0.9944263100624084
    3. '           ' → logprob: -1.6194262504577637
    4. ' and' → logprob: -3.7444262504577637
    5. '       ' → logprob: -4.244426250457764
    6. ' or' → logprob: -4.369426250457764
    7. '               ' → logprob: -5.744426250457764
    8. '```' → logprob: -6.119426250457764
    9. '<|end|>' → logprob: -6.619426250457764
    10. '==' → logprob: -6.744426250457764

Token 1292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3471929430961609
    2. '```' → logprob: -1.7221930027008057
    3. '           ' → logprob: -2.2221930027008057
    4. '[' → logprob: -6.472192764282227
    5. '``' → logprob: -6.847192764282227
    6. ':
' → logprob: -6.972192764282227
    7. ':' → logprob: -7.472192764282227
    8. '       ' → logprob: -7.847192764282227
    9. '<|end|>' → logprob: -8.222192764282227
    10. ' ' → logprob: -8.472192764282227

Token 1293: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5842210054397583
    2. '           ' → logprob: -0.9592210054397583
    3. '               ' → logprob: -3.8342208862304688
    4. '```' → logprob: -3.9592208862304688
    5. 'if' → logprob: -4.709220886230469
    6. ' while' → logprob: -5.709220886230469
    7. '       ' → logprob: -6.709220886230469
    8. ' ' → logprob: -7.084220886230469
    9. ' que' → logprob: -7.334220886230469
    10. '<|end|>' → logprob: -7.459220886230469

Token 1294: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7029467821121216
    2. 'if' → logprob: -1.3279467821121216
    3. ' if' → logprob: -1.8279467821121216
    4. 'while' → logprob: -3.577946662902832
    5. '```' → logprob: -3.827946662902832
    6. '               ' → logprob: -4.327946662902832
    7. ' while' → logprob: -4.952946662902832
    8. '       ' → logprob: -5.577946662902832
    9. 'heap' → logprob: -6.952946662902832
    10. 'que' → logprob: -7.202946662902832

Token 1295: ' bos' (ID: 26134)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8972740769386292
    2. ' while' → logprob: -1.6472740173339844
    3. '```' → logprob: -1.6472740173339844
    4. '           ' → logprob: -2.6472740173339844
    5. '       ' → logprob: -3.3972740173339844
    6. 'if' → logprob: -3.7722740173339844
    7. 'import' → logprob: -3.8972740173339844
    8. 'while' → logprob: -4.272274017333984
    9. ' heap' → logprob: -4.522274017333984
    10. ' import' → logprob: -4.772274017333984

Token 1296: 'se' (ID: 344)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.746792197227478
    2. '```' → logprob: -1.871792197227478
    3. '               ' → logprob: -2.4967923164367676
    4. 'sert' → logprob: -2.7467923164367676
    5. 'erve' → logprob: -2.8717923164367676
    6. '       ' → logprob: -3.1217923164367676
    7. 't' → logprob: -4.371792316436768
    8. 'uy' → logprob: -4.371792316436768
    9. 'push' → logprob: -4.621792316436768
    10. 'rv' → logprob: -4.746792316436768

Token 1297: ' sur' (ID: 1512)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3077402114868164
    2. '```' → logprob: -1.8077402114868164
    3. '               ' → logprob: -2.9327402114868164
    4. '<|end|>' → logprob: -4.682740211486816
    5. '                   ' → logprob: -4.807740211486816
    6. ' if' → logprob: -4.932740211486816
    7. 'if' → logprob: -5.807740211486816
    8. '#' → logprob: -6.057740211486816
    9. ',' → logprob: -6.057740211486816
    10. '		' → logprob: -6.307740211486816

Token 1298: ' les' (ID: 1341)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.20191456377506256
    2. 'i' → logprob: -1.8269145488739014
    3. ' que' → logprob: -5.3269147872924805
    4. '       ' → logprob: -5.5769147872924805
    5. '   ' → logprob: -5.5769147872924805
    6. '```' → logprob: -6.0769147872924805
    7. '     ' → logprob: -6.9519147872924805
    8. 'len' → logprob: -7.0769147872924805
    9. 'heap' → logprob: -7.0769147872924805
    10. 'queue' → logprob: -7.2019147872924805

Token 1299: ' deux' (ID: 10301)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33640429377555847
    2. 'que' → logprob: -2.461404323577881
    3. '```' → logprob: -2.711404323577881
    4. '       ' → logprob: -3.461404323577881
    5. 'heap' → logprob: -3.711404323577881
    6. '           ' → logprob: -3.961404323577881
    7. '               ' → logprob: -4.336404323577881
    8. '   ' → logprob: -4.336404323577881
    9. 'if' → logprob: -5.211404323577881
    10. 'queue' → logprob: -5.586404323577881

Token 1300: ' heaps' (ID: 154901)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.200448989868164
    2. '           ' → logprob: -1.450448989868164
    3. '               ' → logprob: -1.575448989868164
    4. ' if' → logprob: -2.825448989868164
    5. 'if' → logprob: -3.325448989868164
    6. '       ' → logprob: -3.450448989868164
    7. '                   ' → logprob: -3.700448989868164
    8. 'indices' → logprob: -3.950448989868164
    9. ' indices' → logprob: -4.575448989868164
    10. 'queues' → logprob: -4.700448989868164

Token 1301: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005473282653838396
    2. '```' → logprob: -6.2554731369018555
    3. '               ' → logprob: -6.3804731369018555
    4. '                   ' → logprob: -6.7554731369018555
    5. ',' → logprob: -8.380473136901855
    6. '<|end|>' → logprob: -8.880473136901855
    7. '       ' → logprob: -9.755473136901855
    8. '``' → logprob: -10.130473136901855
    9. ':' → logprob: -10.630473136901855
    10. '[' → logprob: -10.630473136901855

Token 1302: ' indices' (ID: 30378)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2283772230148315
    2. 'continue' → logprob: -1.9783772230148315
    3. 'que' → logprob: -2.228377342224121
    4. ' que' → logprob: -2.353377342224121
    5. '           ' → logprob: -2.603377342224121
    6. '       ' → logprob: -2.728377342224121
    7. '                   ' → logprob: -3.103377342224121
    8. ' continue' → logprob: -3.603377342224121
    9. 'trash' → logprob: -3.853377342224121
    10. 'if' → logprob: -4.478377342224121

Token 1303: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056690093129873276
    2. '               ' → logprob: -3.431689977645874
    3. '                   ' → logprob: -4.431690216064453
    4. '```' → logprob: -5.056690216064453
    5. ',' → logprob: -6.306690216064453
    6. '<|end|>' → logprob: -7.431690216064453
    7. '       ' → logprob: -8.306690216064453
    8. '``' → logprob: -8.306690216064453
    9. '		' → logprob: -8.556690216064453
    10. '            
' → logprob: -8.681690216064453

Token 1304: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.310551255941391
    2. '               ' → logprob: -2.185551166534424
    3. '                   ' → logprob: -2.310551166534424
    4. '```' → logprob: -2.935551166534424
    5. '       ' → logprob: -7.060551166534424
    6. '``' → logprob: -7.810551166534424
    7. '                       ' → logprob: -8.185551643371582
    8. '<|end|>' → logprob: -8.685551643371582
    9. '   ' → logprob: -9.060551643371582
    10. ':
' → logprob: -9.310551643371582

Token 1305: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8816016316413879
    2. '           ' → logprob: -1.1316015720367432
    3. '               ' → logprob: -2.256601572036743
    4. '```' → logprob: -2.756601572036743
    5. ' while' → logprob: -3.756601572036743
    6. ' test' → logprob: -3.881601572036743
    7. 'if' → logprob: -4.006601810455322
    8. ' que' → logprob: -5.006601810455322
    9. 'test' → logprob: -5.381601810455322
    10. ' ' → logprob: -5.381601810455322

Token 1306: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4343441426753998
    2. '=' → logprob: -1.0593441724777222
    3. ',' → logprob: -6.309344291687012
    4. '       ' → logprob: -6.559344291687012
    5. '           ' → logprob: -6.809344291687012
    6. '   ' → logprob: -8.434344291687012
    7. ' if' → logprob: -9.059344291687012
    8. '               ' → logprob: -9.184344291687012
    9. 'import' → logprob: -9.184344291687012
    10. '=
' → logprob: -9.184344291687012

Token 1307: ' id' (ID: 1211)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03484051674604416
    2. ' idx' → logprob: -4.2848405838012695
    3. 'ind' → logprob: -4.7848405838012695
    4. 'index' → logprob: -5.0348405838012695
    5. 'pos' → logprob: -5.6598405838012695
    6. 'id' → logprob: -7.2848405838012695
    7. '   ' → logprob: -7.9098405838012695
    8. 'indx' → logprob: -8.78484058380127
    9. ' ' → logprob: -9.03484058380127
    10. 'i' → logprob: -9.15984058380127

Token 1308: 'd' (ID: 67)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07002613693475723
    2. ' =' → logprob: -2.695026159286499
    3. 'x' → logprob: -9.695026397705078
    4. '   ' → logprob: -11.195026397705078
    5. ',' → logprob: -12.945026397705078
    6. '    ' → logprob: -13.070026397705078
    7. '_=' → logprob: -13.195026397705078
    8. ' ' → logprob: -13.570026397705078
    9. ')' → logprob: -13.820026397705078
    10. 's' → logprob: -14.195026397705078

Token 1309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04883114621043205
    2. ' =' → logprob: -3.0488312244415283
    3. 'x' → logprob: -8.67383098602295
    4. '   ' → logprob: -10.67383098602295
    5. ')' → logprob: -11.04883098602295
    6. 'd' → logprob: -12.17383098602295
    7. '_' → logprob: -12.79883098602295
    8. '=
' → logprob: -12.79883098602295
    9. 'dx' → logprob: -12.92383098602295
    10. ')=' → logprob: -13.04883098602295

Token 1310: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.511145293712616
    2. 'heap' → logprob: -1.0111453533172607
    3. ' heap' → logprob: -4.011145114898682
    4. ' que' → logprob: -4.261145114898682
    5. 'he' → logprob: -5.761145114898682
    6. 'queue' → logprob: -8.01114559173584
    7. ' he' → logprob: -8.63614559173584
    8. '   ' → logprob: -8.88614559173584
    9. '-' → logprob: -9.38614559173584
    10. ' -' → logprob: -10.51114559173584

Token 1311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2690136134624481
    2. 'push' → logprob: -2.3940136432647705
    3. '.push' → logprob: -2.5190136432647705
    4. '       ' → logprob: -3.7690136432647705
    5. '.append' → logprob: -4.144013404846191
    6. '   ' → logprob: -4.769013404846191
    7. '```' → logprob: -4.769013404846191
    8. '           ' → logprob: -5.394013404846191
    9. 'pop' → logprob: -7.269013404846191
    10. '.pop' → logprob: -7.519013404846191

Token 1312: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28235605359077454
    2. '[-' → logprob: -1.7823560237884521
    3. '.pop' → logprob: -3.782356023788452
    4. '=' → logprob: -4.157356262207031
    5. '```' → logprob: -4.157356262207031
    6. ' =' → logprob: -5.407356262207031
    7. '       ' → logprob: -5.657356262207031
    8. 'pop' → logprob: -5.782356262207031
    9. '   ' → logprob: -6.157356262207031
    10. '[
' → logprob: -6.407356262207031

Token 1313: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006066487403586507
    2. '-' → logprob: -7.500606536865234
    3. '```' → logprob: -11.125606536865234
    4. '[' → logprob: -11.625606536865234
    5. ' ' → logprob: -12.000606536865234
    6. '
' → logprob: -12.125606536865234
    7. '1' → logprob: -12.500606536865234
    8. ' -' → logprob: -13.000606536865234
    9. ' ' → logprob: -13.500606536865234
    10. '	' → logprob: -13.625606536865234

Token 1314: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.24286708235740662
    2. ']' → logprob: -1.742867112159729
    3. '[' → logprob: -4.2428669929504395
    4. '0' → logprob: -5.1178669929504395
    5. ']
' → logprob: -5.1178669929504395
    6. ']=' → logprob: -5.3678669929504395
    7. '].' → logprob: -6.2428669929504395
    8. '],' → logprob: -6.4928669929504395
    9. '-' → logprob: -6.9928669929504395
    10. '()][' → logprob: -7.2428669929504395

Token 1315: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5500127673149109
    2. '           ' → logprob: -1.5500128269195557
    3. '       ' → logprob: -2.3000128269195557
    4. '[' → logprob: -2.8000128269195557
    5. '``' → logprob: -4.675012588500977
    6. ' =' → logprob: -4.800012588500977
    7. ',' → logprob: -4.925012588500977
    8. '               ' → logprob: -5.175012588500977
    9. '=' → logprob: -5.550012588500977
    10. '<|end|>' → logprob: -5.925012588500977

Token 1316: ' val' (ID: 1459)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.15706786513328552
    2. '           ' → logprob: -3.0320677757263184
    3. '               ' → logprob: -3.0320677757263184
    4. '       ' → logprob: -4.157067775726318
    5. '                   ' → logprob: -4.657067775726318
    6. 'heap' → logprob: -4.782067775726318
    7. '``' → logprob: -5.782067775726318
    8. ' heap' → logprob: -5.907067775726318
    9. ' if' → logprob: -6.282067775726318
    10. ' val' → logprob: -6.407067775726318

Token 1317: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8968147039413452
    2. '[' → logprob: -1.2718147039413452
    3. '=' → logprob: -1.6468147039413452
    4. 'import' → logprob: -3.5218148231506348
    5. ' =' → logprob: -3.7718148231506348
    6. '.pop' → logprob: -3.8968148231506348
    7. '<|end|>' → logprob: -4.396814823150635
    8. '   ' → logprob: -5.146814823150635
    9. '       ' → logprob: -5.271814823150635
    10. '```' → logprob: -6.021814823150635

Token 1318: ' -' (ID: 533)
  Prédit: '-val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-val' → logprob: -0.28752464056015015
    2. '-' → logprob: -1.412524700164795
    3. '-id' → logprob: -5.912524700164795
    4. ' -' → logprob: -6.412524700164795
    5. 'val' → logprob: -7.037524700164795
    6. '-s' → logprob: -8.037524223327637
    7. '-he' → logprob: -9.037524223327637
    8. '-Val' → logprob: -9.287524223327637
    9. '-qu' → logprob: -9.662524223327637
    10. '-q' → logprob: -9.787524223327637

Token 1319: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0008077251841314137
    2. 'que' → logprob: -7.250807762145996
    3. 'heap' → logprob: -9.625807762145996
    4. '	val' → logprob: -12.500807762145996
    5. '<|end|>' → logprob: -12.500807762145996
    6. 'valu' → logprob: -12.625807762145996
    7. ' val' → logprob: -13.000807762145996
    8. '1' → logprob: -13.125807762145996
    9. '(val' → logprob: -13.375807762145996
    10. 'id' → logprob: -13.750807762145996

Token 1320: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1321: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.23027653992176056
    2. '                   ' → logprob: -2.105276584625244
    3. '           ' → logprob: -3.105276584625244
    4. '               ' → logprob: -3.480276584625244
    5. ',' → logprob: -5.855276584625244
    6. '``' → logprob: -6.230276584625244
    7. '<|end|>' → logprob: -6.355276584625244
    8. '[' → logprob: -6.980276584625244
    9. '       ' → logprob: -8.355276107788086
    10. '                       ' → logprob: -9.480276107788086

Token 1322: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5337668657302856
    2. '```' → logprob: -1.4087668657302856
    3. 'heap' → logprob: -2.658766746520996
    4. '           ' → logprob: -3.283766746520996
    5. '                   ' → logprob: -3.533766746520996
    6. ' heap' → logprob: -5.033766746520996
    7. 'val' → logprob: -5.283766746520996
    8. '			' → logprob: -5.533766746520996
    9. ' ' → logprob: -6.158766746520996
    10. '<|end|>' → logprob: -6.283766746520996

Token 1323: ' val' (ID: 1459)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.19599789381027222
    2. ' beam' → logprob: -2.320997953414917
    3. 'val' → logprob: -2.820997953414917
    4. '   ' → logprob: -5.570997714996338
    5. 'que' → logprob: -5.695997714996338
    6. 'S' → logprob: -6.070997714996338
    7. ' que' → logprob: -6.320997714996338
    8. ' val' → logprob: -6.445997714996338
    9. 'i' → logprob: -6.570997714996338
    10. 'queue' → logprob: -6.570997714996338

Token 1324: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6165889501571655
    2. ' <' → logprob: -0.8665889501571655
    3. '>' → logprob: -3.491589069366455
    4. '<' → logprob: -5.741589069366455
    5. '[' → logprob: -6.241589069366455
    6. ' ==' → logprob: -6.241589069366455
    7. '<|end|>' → logprob: -7.241589069366455
    8. '==' → logprob: -8.366588592529297
    9. ' >=' → logprob: -8.491588592529297
    10. ' <=' → logprob: -8.491588592529297

Token 1325: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.005440431647002697
    2. 'que' → logprob: -6.1304402351379395
    3. ' beam' → logprob: -6.2554402351379395
    4. 'heap' → logprob: -7.6304402351379395
    5. 'queue' → logprob: -8.005440711975098
    6. 'test' → logprob: -8.255440711975098
    7. '   ' → logprob: -9.380440711975098
    8. ' que' → logprob: -9.755440711975098
    9. '0' → logprob: -10.755440711975098
    10. '```' → logprob: -11.005440711975098

Token 1326: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002354832977289334
    2. 'i' → logprob: -8.875235557556152
    3. '[' → logprob: -9.500235557556152
    4. '[id' → logprob: -11.125235557556152
    5. '```' → logprob: -12.625235557556152
    6. '[
' → logprob: -14.375235557556152
    7. '`' → logprob: -14.750235557556152
    8. ' i' → logprob: -15.000235557556152
    9. '[idx' → logprob: -15.125235557556152
    10. '``' → logprob: -15.250235557556152

Token 1327: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01469424832612276
    2. '[' → logprob: -4.2646942138671875
    3. '[i' → logprob: -8.639694213867188
    4. '0' → logprob: -8.764694213867188
    5. ' ][' → logprob: -10.014694213867188
    6. ']' → logprob: -10.389694213867188
    7. '   ' → logprob: -10.764694213867188
    8. '```' → logprob: -10.889694213867188
    9. ')[' → logprob: -11.139694213867188
    10. 'i' → logprob: -11.514694213867188

Token 1328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.816591434879228e-05
    2. '1' → logprob: -9.37508773803711
    3. ' ' → logprob: -13.37508773803711
    4. '
' → logprob: -14.50008773803711
    5. '[' → logprob: -14.93758773803711
    6. '   ' → logprob: -15.50008773803711
    7. '2' → logprob: -15.93758773803711
    8. '```' → logprob: -16.37508773803711
    9. '<|end|>' → logprob: -16.37508773803711
    10. '۰' → logprob: -16.62508773803711

Token 1329: ']:
' (ID: 22152)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17003026604652405
    2. '):
' → logprob: -2.920030355453491
    3. ':
' → logprob: -3.170030355453491
    4. '               ' → logprob: -3.295030355453491
    5. ':' → logprob: -4.795030117034912
    6. ']:
' → logprob: -5.670030117034912
    7. '                       ' → logprob: -5.920030117034912
    8. ',' → logprob: -6.045030117034912
    9. '```' → logprob: -6.545030117034912
    10. '           ' → logprob: -6.670030117034912

Token 1330: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4499133825302124
    2. '```' → logprob: -1.0749133825302124
    3. '``' → logprob: -4.824913501739502
    4. '<|end|>' → logprob: -5.574913501739502
    5. '               ' → logprob: -5.824913501739502
    6. ')' → logprob: -5.949913501739502
    7. '                       ' → logprob: -7.074913501739502
    8. ',' → logprob: -7.574913501739502
    9. '           ' → logprob: -8.074913024902344
    10. '                ' → logprob: -8.699913024902344

Token 1331: ' heap' (ID: 37237)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9228000044822693
    2. 'val' → logprob: -1.547800064086914
    3. '```' → logprob: -1.672800064086914
    4. 'heap' (adapté à ' heap') → logprob: -2.672800064086914
    5. ' val' → logprob: -2.922800064086914
    6. '               ' → logprob: -4.297800064086914
    7. '				' → logprob: -4.422800064086914
    8. ' que' → logprob: -4.672800064086914
    9. '                       ' → logprob: -4.922800064086914
    10. ' heap' → logprob: -5.297800064086914

Token 1332: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0036940164864063263
    2. 'replace' → logprob: -5.6286940574646
    3. '```' → logprob: -9.753693580627441
    4. 'push' → logprob: -10.628693580627441
    5. '[' → logprob: -12.628693580627441
    6. 'que' → logprob: -13.003693580627441
    7. 'pop' → logprob: -13.378693580627441
    8. '       ' → logprob: -14.003693580627441
    9. 'Replace' → logprob: -14.378693580627441
    10. '``' → logprob: -14.503693580627441

Token 1333: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.29462841153144836
    2. '.heap' → logprob: -1.544628381729126
    3. 'heap' → logprob: -3.669628381729126
    4. 'he' → logprob: -4.169628620147705
    5. 'q' → logprob: -7.919628620147705
    6. '```' → logprob: -8.919628143310547
    7. 'replace' → logprob: -9.044628143310547
    8. ' he' → logprob: -9.169628143310547
    9. '(heap' → logprob: -9.794628143310547
    10. '   ' → logprob: -9.919628143310547

Token 1334: 'app' (ID: 903)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.02764076739549637
    2. 'app' → logprob: -3.6526408195495605
    3. 'push' → logprob: -7.5276408195495605
    4. 'p' → logprob: -7.9026408195495605
    5. 'pp' → logprob: -8.402640342712402
    6. 'pop' → logprob: -9.652640342712402
    7. 'he' → logprob: -10.277640342712402
    8. 'q' → logprob: -10.277640342712402
    9. 'ap' → logprob: -11.027640342712402
    10. 'Replace' → logprob: -11.527640342712402

Token 1335: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0005336135509423912
    2. 'push' → logprob: -7.750533580780029
    3. 'op' → logprob: -9.375534057617188
    4. 'replace' → logprob: -11.875534057617188
    5. '```' → logprob: -12.375534057617188
    6. 'e' → logprob: -13.000534057617188
    7. 'app' → logprob: -13.375534057617188
    8. 'pop' → logprob: -14.125534057617188
    9. '_push' → logprob: -14.250534057617188
    10. '[' → logprob: -14.750534057617188

Token 1336: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7848862373502925e-05
    2. 'que' → logprob: -10.500027656555176
    3. '(tr' → logprob: -16.125028610229492
    4. '(queue' → logprob: -17.000028610229492
    5. '(
' → logprob: -17.750028610229492
    6. ' que' → logprob: -18.125028610229492
    7. ' (' → logprob: -18.625028610229492
    8. '((' → logprob: -19.625028610229492
    9. '```' → logprob: -20.500028610229492
    10. 'quee' → logprob: -20.750028610229492

Token 1337: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -3.2020991056924686e-05
    2. ' que' → logprob: -10.375032424926758
    3. 'queue' → logprob: -15.250032424926758
    4. 'qui' → logprob: -16.125032424926758
    5. 'qu' → logprob: -16.375032424926758
    6. '
' → logprob: -16.375032424926758
    7. '   ' → logprob: -16.875032424926758
    8. '```' → logprob: -17.625032424926758
    9. 'ques' → logprob: -18.000032424926758
    10. '(' → logprob: -18.375032424926758

Token 1338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.039108309894800186
    2. ')' → logprob: -3.6641082763671875
    3. '[' → logprob: -4.5391082763671875
    4. ')
' → logprob: -6.6641082763671875
    5. '```' → logprob: -8.539108276367188
    6. 'que' → logprob: -8.789108276367188
    7. '       ' → logprob: -8.914108276367188
    8. '[
' → logprob: -9.539108276367188
    9. '(' → logprob: -10.164108276367188
    10. '   ' → logprob: -11.039108276367188

Token 1339: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0038232298102229834
    2. ')' → logprob: -5.628823280334473
    3. '                   ' → logprob: -8.628823280334473
    4. ')
' → logprob: -10.753823280334473
    5. '           ' → logprob: -11.628823280334473
    6. '               ' → logprob: -12.378823280334473
    7. '       ' → logprob: -12.753823280334473
    8. '```' → logprob: -13.253823280334473
    9. ')

' → logprob: -13.378823280334473
    10. '())
' → logprob: -14.628823280334473

Token 1340: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7527571320533752
    2. '```' → logprob: -0.7527571320533752
    3. '(' → logprob: -3.3777570724487305
    4. ',' → logprob: -4.3777570724487305
    5. '                       ' → logprob: -6.3777570724487305
    6. ')' → logprob: -6.3777570724487305
    7. '``' → logprob: -6.6277570724487305
    8. ')
' → logprob: -7.0027570724487305
    9. '                    
' → logprob: -7.1277570724487305
    10. 'val' → logprob: -7.5027570724487305

Token 1341: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.251091377227567e-05
    2. '```' → logprob: -10.375042915344238
    3. '                   ' → logprob: -12.125042915344238
    4. 'queue' → logprob: -13.000042915344238
    5. 'que' → logprob: -13.000042915344238
    6. ' heap' → logprob: -14.750042915344238
    7. '               ' → logprob: -15.375042915344238
    8. '``' → logprob: -15.500042915344238
    9. 'val' → logprob: -15.875042915344238
    10. '
' → logprob: -16.250041961669922

Token 1342: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00011594036914175376
    2. '.he' → logprob: -10.125116348266602
    3. '```' → logprob: -10.500116348266602
    4. 'push' → logprob: -10.750116348266602
    5. 'he' → logprob: -11.000116348266602
    6. 'app' → logprob: -12.625116348266602
    7. '   ' → logprob: -13.250116348266602
    8. '       ' → logprob: -14.000116348266602
    9. 'p' → logprob: -14.250116348266602
    10. '[' → logprob: -14.500116348266602

Token 1343: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0033433556091040373
    2. 'he' → logprob: -5.75334358215332
    3. '.heap' → logprob: -9.50334358215332
    4. '```' → logprob: -9.87834358215332
    5. 'q' → logprob: -10.87834358215332
    6. 'heap' → logprob: -11.75334358215332
    7. '   ' → logprob: -12.62834358215332
    8. '.push' → logprob: -12.75334358215332
    9. 'push' → logprob: -12.75334358215332
    10. 'app' → logprob: -13.87834358215332

Token 1344: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.47711026668548584
    2. 'ush' → logprob: -1.1021102666854858
    3. 'push' → logprob: -3.2271103858947754
    4. 'pp' → logprob: -5.102110385894775
    5. '```' → logprob: -7.727110385894775
    6. 'op' → logprob: -8.102109909057617
    7. 'q' → logprob: -8.352109909057617
    8. 'p' → logprob: -9.227109909057617
    9. 'he' → logprob: -9.602109909057617
    10. '.push' → logprob: -9.727109909057617

Token 1345: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.008399914018809795
    2. 'app' → logprob: -4.883399963378906
    3. 'push' → logprob: -8.133399963378906
    4. 'op' → logprob: -8.508399963378906
    5. '```' → logprob: -8.508399963378906
    6. '       ' → logprob: -9.883399963378906
    7. '           ' → logprob: -11.258399963378906
    8. 'q' → logprob: -12.258399963378906
    9. '   ' → logprob: -12.258399963378906
    10. '[' → logprob: -12.758399963378906

Token 1346: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.250006675720215
    3. 'trash' → logprob: -14.500006675720215
    4. '(
' → logprob: -15.000006675720215
    5. 'que' → logprob: -15.625006675720215
    6. '
' → logprob: -16.2500057220459
    7. '```' → logprob: -16.6250057220459
    8. '(queue' → logprob: -16.6250057220459
    9. '(trg' → logprob: -17.2500057220459
    10. '	tr' → logprob: -17.3750057220459

Token 1347: 'ash' (ID: 1229)
  Prédit: 'ash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ash' → logprob: -0.012184909544885159
    2. 'sh' → logprob: -5.012185096740723
    3. 'que' → logprob: -6.762185096740723
    4. 'ue' → logprob: -7.012185096740723
    5. 'ush' → logprob: -7.012185096740723
    6. 'e' → logprob: -8.012185096740723
    7. 'as' → logprob: -8.012185096740723
    8. '
' → logprob: -8.137185096740723
    9. 'ach' → logprob: -8.762185096740723
    10. 'ap' → logprob: -9.012185096740723

Token 1348: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23036640882492065
    2. '(tr' → logprob: -1.8553664684295654
    3. ',' → logprob: -3.6053664684295654
    4. ')' → logprob: -4.480366230010986
    5. 'que' → logprob: -6.105366230010986
    6. '```' → logprob: -6.480366230010986
    7. '                   ' → logprob: -6.605366230010986
    8. '[' → logprob: -6.855366230010986
    9. '(
' → logprob: -7.105366230010986
    10. '   ' → logprob: -7.105366230010986

Token 1349: ' val' (ID: 1459)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3047630190849304
    2. '-val' → logprob: -2.554763078689575
    3. '(val' → logprob: -2.929763078689575
    4. '-' → logprob: -3.179763078689575
    5. 'val' → logprob: -3.554763078689575
    6. '-id' → logprob: -3.679763078689575
    7. '(id' → logprob: -4.054762840270996
    8. '(' → logprob: -4.554762840270996
    9. '-(' → logprob: -6.179762840270996
    10. 'id' → logprob: -6.554762840270996

Token 1350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07123956829309464
    2. '-' → logprob: -3.571239471435547
    3. '                   ' → logprob: -4.321239471435547
    4. ')
' → logprob: -4.696239471435547
    5. ',' → logprob: -5.321239471435547
    6. ' -' → logprob: -5.446239471435547
    7. ' )' → logprob: -6.196239471435547
    8. '   ' → logprob: -6.446239471435547
    9. '```' → logprob: -6.821239471435547
    10. '[' → logprob: -7.321239471435547

Token 1351: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5084118843078613
    2. '                   ' → logprob: -1.0084118843078613
    3. ')' → logprob: -4.008411884307861
    4. '               ' → logprob: -5.133411884307861
    5. '``' → logprob: -5.633411884307861
    6. '           ' → logprob: -6.883411884307861
    7. '                    ' → logprob: -7.133411884307861
    8. '       ' → logprob: -7.258411884307861
    9. ',' → logprob: -7.383411884307861
    10. '`' → logprob: -7.633411884307861

Token 1352: ' end' (ID: 1268)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5486752986907959
    2. '```' → logprob: -2.048675298690796
    3. ' que' → logprob: -2.798675298690796
    4. '       ' → logprob: -3.173675298690796
    5. '           ' → logprob: -3.298675298690796
    6. ' heap' → logprob: -3.298675298690796
    7. 'que' → logprob: -3.548675298690796
    8. '                   ' → logprob: -3.548675298690796
    9. 'val' → logprob: -4.923675537109375
    10. '               ' → logprob: -5.048675537109375

Token 1353: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02396339550614357
    2. '[i' → logprob: -3.773963451385498
    3. '[' → logprob: -8.14896297454834
    4. '```' → logprob: -8.39896297454834
    5. '[L' → logprob: -10.02396297454834
    6. '[idx' → logprob: -10.39896297454834
    7. '_' → logprob: -10.64896297454834
    8. '   ' → logprob: -10.64896297454834
    9. '_idx' → logprob: -11.14896297454834
    10. '[id' → logprob: -11.27396297454834

Token 1354: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43018269538879395
    2. '[id' → logprob: -1.555182695388794
    3. '[i' → logprob: -2.180182695388794
    4. '[end' → logprob: -3.805182695388794
    5. '[start' → logprob: -6.555182456970215
    6. '[val' → logprob: -6.930182456970215
    7. '[idx' → logprob: -7.805182456970215
    8. '[ind' → logprob: -9.180182456970215
    9. '[cnt' → logprob: -9.930182456970215
    10. '[arr' → logprob: -10.180182456970215

Token 1355: 'idd' (ID: 3619)
  Prédit: 'idd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idd' → logprob: -0.12364368885755539
    2. 'id' → logprob: -2.998643636703491
    3. 'que' → logprob: -3.373643636703491
    4. '0' → logprob: -4.12364387512207
    5. ' id' → logprob: -5.49864387512207
    6. 'i' → logprob: -5.62364387512207
    7. ' que' → logprob: -5.87364387512207
    8. 'idx' → logprob: -6.49864387512207
    9. ' i' → logprob: -7.37364387512207
    10. 'val' → logprob: -7.87364387512207

Token 1356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010249509941786528
    2. ']=' → logprob: -7.8760247230529785
    3. ' ]' → logprob: -8.626025199890137
    4. ']
' → logprob: -9.126025199890137
    5. '       ' → logprob: -9.876025199890137
    6. ']+=' → logprob: -9.876025199890137
    7. '],' → logprob: -10.376025199890137
    8. '   ' → logprob: -10.501025199890137
    9. '<|end|>' → logprob: -10.501025199890137
    10. '[' → logprob: -10.501025199890137

Token 1357: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004669595509767532
    2. ' =' → logprob: -5.379669666290283
    3. ')' → logprob: -11.254669189453125
    4. '<|end|>' → logprob: -11.629669189453125
    5. '=
' → logprob: -11.879669189453125
    6. ']' → logprob: -12.504669189453125
    7. '+=' → logprob: -12.754669189453125
    8. '==' → logprob: -12.754669189453125
    9. ']=' → logprob: -13.129669189453125
    10. ',' → logprob: -13.254669189453125

Token 1358: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.676981345459353e-06
    2. ' i' → logprob: -12.625005722045898
    3. '   ' → logprob: -13.125005722045898
    4. '```' → logprob: -16.0000057220459
    5. '           ' → logprob: -16.5000057220459
    6. '                   ' → logprob: -17.1250057220459
    7. '       ' → logprob: -17.3750057220459
    8. '	i' → logprob: -18.0000057220459
    9. '`' → logprob: -18.2500057220459
    10. '               ' → logprob: -18.8750057220459

Token 1359: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2699320316314697
    2. '<|end|>' → logprob: -1.2699320316314697
    3. '```' → logprob: -2.0199320316314697
    4. '                   ' → logprob: -2.2699320316314697
    5. '               ' → logprob: -2.2699320316314697
    6. '           ' → logprob: -3.1449320316314697
    7. '       ' → logprob: -3.2699320316314697
    8. '   ' → logprob: -5.644931793212891
    9. '                       ' → logprob: -6.019931793212891
    10. '                           ' → logprob: -6.144931793212891

Token 1360: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -19.375
    4. '<|end|>' → logprob: -20.25
    5. '   ' → logprob: -20.375
    6. '
' → logprob: -21.125
    7. '           ' → logprob: -21.625
    8. 'import' → logprob: -21.75
    9. '       ' → logprob: -22.0
    10. '2' → logprob: -22.25

Token 1361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '<|end|>' → logprob: -17.625
    4. 'import' → logprob: -19.625
    5. '```' → logprob: -19.875
    6. '   ' → logprob: -20.625
    7. '
' → logprob: -21.375
    8. 'start' → logprob: -21.875
    9. '2' → logprob: -22.0
    10. '       ' → logprob: -22.625

Token 1362: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5948883891105652
    2. '<|end|>' → logprob: -1.09488844871521
    3. '                   ' → logprob: -2.46988844871521
    4. '               ' → logprob: -4.094888210296631
    5. '```' → logprob: -5.719888210296631
    6. '           ' → logprob: -6.219888210296631
    7. '<|end|>' → logprob: -6.594888210296631
    8. '       ' → logprob: -6.719888210296631
    9. '(heap' → logprob: -7.594888210296631
    10. ' )' → logprob: -7.844888210296631

Token 1363: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2756684720516205
    2. '                   ' → logprob: -1.5256685018539429
    3. 'heap' → logprob: -5.025668621063232
    4. '<|end|>' → logprob: -5.525668621063232
    5. ')' → logprob: -5.650668621063232
    6. '               ' → logprob: -6.025668621063232
    7. '[' → logprob: -6.525668621063232
    8. '``' → logprob: -6.650668621063232
    9. '                       ' → logprob: -6.775668621063232
    10. '                           ' → logprob: -7.400668621063232

Token 1364: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.49345242977142334
    2. 'que' → logprob: -0.9934524297714233
    3. '```' → logprob: -4.118452548980713
    4. 'queue' → logprob: -6.618452548980713
    5. 'val' → logprob: -7.618452548980713
    6. '           ' → logprob: -7.993452548980713
    7. '                   ' → logprob: -8.118452072143555
    8. '               ' → logprob: -8.618452072143555
    9. '       ' → logprob: -8.993452072143555
    10. ' que' → logprob: -10.368452072143555

Token 1365: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.949026571121067e-05
    2. '```' → logprob: -9.250099182128906
    3. 'que' → logprob: -14.375099182128906
    4. '       ' → logprob: -14.500099182128906
    5. '#' → logprob: -15.000099182128906
    6. '[' → logprob: -15.125099182128906
    7. 'ql' → logprob: -15.375099182128906
    8. '           ' → logprob: -15.750099182128906
    9. '...' → logprob: -15.875099182128906
    10. 'queue' → logprob: -15.875099182128906

Token 1366: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.01907094195485115
    2. 'q' → logprob: -4.019071102142334
    3. 'he' → logprob: -7.394071102142334
    4. '.heap' → logprob: -8.644070625305176
    5. 'ush' → logprob: -9.269070625305176
    6. 'heap' → logprob: -11.769070625305176
    7. '```' → logprob: -11.769070625305176
    8. ' he' → logprob: -12.019070625305176
    9. 'op' → logprob: -13.144070625305176
    10. 'push' → logprob: -13.269070625305176

Token 1367: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.051931679248809814
    2. 'pp' → logprob: -3.176931619644165
    3. '```' → logprob: -6.301931858062744
    4. 'ush' → logprob: -6.551931858062744
    5. 'q' → logprob: -7.051931858062744
    6. 'e' → logprob: -7.051931858062744
    7. 'op' → logprob: -7.176931858062744
    8. 'p' → logprob: -7.301931858062744
    9. 'push' → logprob: -7.301931858062744
    10. 'ap' → logprob: -7.801931858062744

Token 1368: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.009173333644866943
    2. 'op' → logprob: -4.884173393249512
    3. 'push' → logprob: -7.009173393249512
    4. '```' → logprob: -8.884173393249512
    5. 'pp' → logprob: -9.009173393249512
    6. 'app' → logprob: -9.259173393249512
    7. 'p' → logprob: -9.634173393249512
    8. 'q' → logprob: -9.634173393249512
    9. '       ' → logprob: -10.384173393249512
    10. 'opp' → logprob: -10.509173393249512

Token 1369: '(' (ID: 7)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.002189756603911519
    2. '(' → logprob: -6.127189636230469
    3. '(queue' → logprob: -13.752189636230469
    4. 'trash' → logprob: -14.127189636230469
    5. 'que' → logprob: -14.502189636230469
    6. '```' → logprob: -15.002189636230469
    7. '(
' → logprob: -15.127189636230469
    8. '(q' → logprob: -15.252189636230469
    9. '((' → logprob: -15.502189636230469
    10. '(qu' → logprob: -15.752189636230469

Token 1370: 'que' (ID: 1126)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.5887693762779236
    2. 'que' → logprob: -0.8387693762779236
    3. '(tr' → logprob: -5.088769435882568
    4. 'tr' → logprob: -5.838769435882568
    5. 'queue' → logprob: -6.588769435882568
    6. '(' → logprob: -6.963769435882568
    7. 'tras' → logprob: -8.46376895904541
    8. '```' → logprob: -8.58876895904541
    9. 'ques' → logprob: -9.33876895904541
    10. '   ' → logprob: -9.33876895904541

Token 1371: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007121934904716909
    2. '(' → logprob: -7.6257123947143555
    3. '(tr' → logprob: -8.750712394714355
    4. '```' → logprob: -9.750712394714355
    5. '[' → logprob: -13.250712394714355
    6. 'que' → logprob: -14.000712394714355
    7. 'i' → logprob: -14.125712394714355
    8. 'tr' → logprob: -14.250712394714355
    9. '(queue' → logprob: -14.375712394714355
    10. '``' → logprob: -14.375712394714355

Token 1372: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06580986827611923
    2. '((' → logprob: -3.690809965133667
    3. '((-' → logprob: -4.065809726715088
    4. '(-' → logprob: -4.065809726715088
    5. ',' → logprob: -6.565809726715088
    6. '```' → logprob: -6.940809726715088
    7. '(tr' → logprob: -7.315809726715088
    8. '(-(' → logprob: -7.690809726715088
    9. '           ' → logprob: -8.690810203552246
    10. '   ' → logprob: -9.315810203552246

Token 1373: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.625000953674316
    3. ' (-' → logprob: -15.625000953674316
    4. '-' → logprob: -15.875000953674316
    5. '((-' → logprob: -16.0
    6. '   ' → logprob: -17.375
    7. '(-(' → logprob: -17.375
    8. '[-' → logprob: -17.875
    9. '-p' → logprob: -18.5
    10. '-val' → logprob: -18.625

Token 1374: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -5.200166469876422e-06
    2. ' beam' → logprob: -12.500004768371582
    3. 'heap' → logprob: -14.375004768371582
    4. '   ' → logprob: -14.625004768371582
    5. 'queue' → logprob: -16.3750057220459
    6. '(' → logprob: -16.7500057220459
    7. '```' → logprob: -17.1250057220459
    8. 'i' → logprob: -17.2500057220459
    9. '`' → logprob: -17.3750057220459
    10. 'val' → logprob: -18.1250057220459

Token 1375: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006575119914487004
    2. 'i' → logprob: -7.375657558441162
    3. '[' → logprob: -10.875657081604004
    4. '[
' → logprob: -11.625657081604004
    5. '(i' → logprob: -13.625657081604004
    6. '
' → logprob: -15.125657081604004
    7. ' i' → logprob: -15.375657081604004
    8. '][' → logprob: -15.375657081604004
    9. ')' → logprob: -15.750657081604004
    10. '```' → logprob: -16.00065803527832

Token 1376: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10179121047258377
    2. '[i' → logprob: -2.3517911434173584
    3. '][' → logprob: -6.9767913818359375
    4. '0' → logprob: -7.4767913818359375
    5. 'i' → logprob: -10.351791381835938
    6. ')[' → logprob: -11.101791381835938
    7. '   ' → logprob: -11.601791381835938
    8. '[
' → logprob: -12.226791381835938
    9. '[][' → logprob: -12.226791381835938
    10. '(i' → logprob: -12.601791381835938

Token 1377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0219828002154827e-05
    2. 'i' → logprob: -10.875020027160645
    3. '[i' → logprob: -13.875020027160645
    4. '[' → logprob: -15.875020027160645
    5. '   ' → logprob: -15.875020027160645
    6. ' ' → logprob: -16.50002098083496
    7. '
' → logprob: -16.87502098083496
    8. '۰' → logprob: -17.62502098083496
    9. ' i' → logprob: -18.25002098083496
    10. '(i' → logprob: -18.50002098083496

Token 1378: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000536232371814549
    2. '),' → logprob: -7.6255364418029785
    3. ' ,' → logprob: -10.87553596496582
    4. ',i' → logprob: -11.87553596496582
    5. '           ' → logprob: -12.75053596496582
    6. ')' → logprob: -12.75053596496582
    7. '   ' → logprob: -12.87553596496582
    8. '‌,' → logprob: -13.25053596496582
    9. '```' → logprob: -13.37553596496582
    10. '       ' → logprob: -13.50053596496582

Token 1379: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00975927896797657
    2. ' i' → logprob: -4.634759426116943
    3. '   ' → logprob: -12.884758949279785
    4. '	i' → logprob: -15.384758949279785
    5. ' ' → logprob: -16.1347599029541
    6. '(i' → logprob: -16.3847599029541
    7. 'idd' → logprob: -16.6347599029541
    8. '{i' → logprob: -16.8847599029541
    9. ' (' → logprob: -17.5097599029541
    10. ',i' → logprob: -17.6347599029541

Token 1380: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08379121869802475
    2. '))
' → logprob: -2.9587912559509277
    3. ')' → logprob: -3.5837912559509277
    4. ')
' → logprob: -7.333791255950928
    5. '                   ' → logprob: -10.70879077911377
    6. ')))' → logprob: -10.83379077911377
    7. ' ))' → logprob: -12.20879077911377
    8. '))
' → logprob: -12.33379077911377
    9. '           ' → logprob: -12.45879077911377
    10. '               ' → logprob: -12.45879077911377

Token 1381: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5603732466697693
    2. '```' → logprob: -0.9353732466697693
    3. '<|end|>' → logprob: -3.935373306274414
    4. '               ' → logprob: -5.310373306274414
    5. ')' → logprob: -5.935373306274414
    6. '           ' → logprob: -6.060373306274414
    7. '       ' → logprob: -6.435373306274414
    8. '``' → logprob: -6.810373306274414
    9. '                       ' → logprob: -7.310373306274414
    10. '                  ' → logprob: -7.435373306274414

Token 1382: ' start' (ID: 1604)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.003849240019917488
    2. '                   ' → logprob: -6.253849029541016
    3. '           ' → logprob: -6.878849029541016
    4. '               ' → logprob: -7.628849029541016
    5. 'cnt' → logprob: -8.503849029541016
    6. ' S' → logprob: -9.878849029541016
    7. 'heap' → logprob: -9.878849029541016
    8. 'continue' → logprob: -10.753849029541016
    9. '   ' → logprob: -11.503849029541016
    10. 'start' (adapté à ' start') → logprob: -11.503849029541016

Token 1383: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -8.697387966094539e-05
    2. '[' → logprob: -9.500086784362793
    3. '[i' → logprob: -12.000086784362793
    4. ' L' → logprob: -13.375086784362793
    5. '=' → logprob: -14.000086784362793
    6. '[L' → logprob: -14.250086784362793
    7. '[idx' → logprob: -14.500086784362793
    8. ' =' → logprob: -14.750086784362793
    9. '```' → logprob: -14.875086784362793
    10. '<|end|>' → logprob: -15.250086784362793

Token 1384: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03088225983083248
    2. '[i' → logprob: -4.030882358551025
    3. '=' → logprob: -4.405882358551025
    4. '[id' → logprob: -8.280881881713867
    5. ' =' → logprob: -9.780881881713867
    6. '=[' → logprob: -10.030881881713867
    7. '```' → logprob: -10.530881881713867
    8. '[idx' → logprob: -10.655881881713867
    9. '[ind' → logprob: -11.405881881713867
    10. '                               ' → logprob: -12.530881881713867

Token 1385: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07332039624452591
    2. ')' → logprob: -3.1983203887939453
    3. ']' → logprob: -3.8233203887939453
    4. ' =' → logprob: -5.323320388793945
    5. ']=' → logprob: -6.073320388793945
    6. ')=' → logprob: -7.323320388793945
    7. ')]' → logprob: -10.073320388793945
    8. '<|end|>' → logprob: -10.823320388793945
    9. '=
' → logprob: -11.073320388793945
    10. ' )' → logprob: -11.073320388793945

Token 1386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001801801408873871
    2. ' =' → logprob: -8.6251802444458
    3. '=
' → logprob: -15.1251802444458
    4. '=-' → logprob: -16.250179290771484
    5. '```' → logprob: -17.000179290771484
    6. '<|end|>' → logprob: -17.375179290771484
    7. '=True' → logprob: -18.000179290771484
    8. '=i' → logprob: -18.125179290771484
    9. '＝' → logprob: -18.375179290771484
    10. '=None' → logprob: -18.375179290771484

Token 1387: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004446731880307198
    2. 'idd' → logprob: -6.379446506500244
    3. 'id' → logprob: -6.754446506500244
    4. ' i' → logprob: -7.629446506500244
    5. '   ' → logprob: -7.879446506500244
    6. 'end' → logprob: -7.879446506500244
    7. '0' → logprob: -9.129446983337402
    8. 'iend' → logprob: -9.379446983337402
    9. 'que' → logprob: -10.629446983337402
    10. ' ' → logprob: -11.004446983337402

Token 1388: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1389: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.20077309012413025
    2. '<|end|>' → logprob: -2.075773000717163
    3. ')' → logprob: -3.200773000717163
    4. '                   ' → logprob: -5.575773239135742
    5. '
' → logprob: -6.075773239135742
    6. '``' → logprob: -6.075773239135742
    7. '                               ' → logprob: -6.450773239135742
    8. '                           ' → logprob: -7.325773239135742
    9. '                                           ' → logprob: -7.575773239135742
    10. ' 
' → logprob: -7.700773239135742

Token 1390: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.03552874177694321
    2. '           ' → logprob: -4.785528659820557
    3. '                   ' → logprob: -5.160528659820557
    4. '```' → logprob: -5.160528659820557
    5. '<|end|>' → logprob: -5.535528659820557
    6. ' S' → logprob: -6.035528659820557
    7. '               ' → logprob: -6.160528659820557
    8. 'cnt' → logprob: -6.285528659820557
    9. '       ' → logprob: -6.410528659820557
    10. 'i' → logprob: -6.785528659820557

Token 1391: '2' (ID: 17)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.046211834996938705
    2. '+=' → logprob: -3.5462117195129395
    3. ' -=' → logprob: -4.1712117195129395
    4. '+' → logprob: -7.7962117195129395
    5. '```' → logprob: -8.921212196350098
    6. ' +' → logprob: -9.046212196350098
    7. '    ' → logprob: -10.296212196350098
    8. '        ' → logprob: -10.671212196350098
    9. '       ' → logprob: -10.671212196350098
    10. '   ' → logprob: -10.796212196350098

Token 1392: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5471339821815491
    2. '+=' → logprob: -0.9221339821815491
    3. '+' → logprob: -3.9221339225769043
    4. ' +' → logprob: -5.922133922576904
    5. ' -=' → logprob: -7.172133922576904
    6. '=' → logprob: -9.172134399414062
    7. '<|end|>' → logprob: -9.172134399414062
    8. '```' → logprob: -10.547134399414062
    9. '    ' → logprob: -10.672134399414062
    10. '        ' → logprob: -10.797134399414062

Token 1393: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00011236425780225545
    2. ' beam' → logprob: -9.125112533569336
    3. '-' → logprob: -13.125112533569336
    4. '(' → logprob: -15.000112533569336
    5. '-be' → logprob: -15.375112533569336
    6. '   ' → logprob: -15.375112533569336
    7. '  ' → logprob: -15.500112533569336
    8. 'be' → logprob: -16.000112533569336
    9. '(-' → logprob: -16.875112533569336
    10. 'Beam' → logprob: -16.875112533569336

Token 1394: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3557529857498594e-05
    2. '[' → logprob: -11.12502384185791
    3. 'i' → logprob: -12.00002384185791
    4. '[
' → logprob: -13.87502384185791
    5. '```' → logprob: -14.37502384185791
    6. '(i' → logprob: -14.62502384185791
    7. '   ' → logprob: -15.50002384185791
    8. ')' → logprob: -16.375022888183594
    9. '`' → logprob: -17.000022888183594
    10. ' [' → logprob: -17.000022888183594

Token 1395: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05461741238832474
    2. '[i' → logprob: -3.054617404937744
    3. '][' → logprob: -5.179617404937744
    4. '[
' → logprob: -8.929617881774902
    5. '[][' → logprob: -9.679617881774902
    6. '```' → logprob: -10.054617881774902
    7. 'i' → logprob: -10.304617881774902
    8. '0' → logprob: -10.429617881774902
    9. ')[' → logprob: -11.304617881774902
    10. '>[' → logprob: -11.679617881774902

Token 1396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.875011444091797
    3. '```' → logprob: -12.625011444091797
    4. 'i' → logprob: -14.750011444091797
    5. '   ' → logprob: -14.875011444091797
    6. '-' → logprob: -15.125011444091797
    7. '+' → logprob: -15.875011444091797
    8. '[i' → logprob: -16.375011444091797
    9. '(i' → logprob: -16.625011444091797
    10. '  ' → logprob: -16.625011444091797

Token 1397: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012562395073473454
    2. '-' → logprob: -4.387562274932861
    3. '   ' → logprob: -10.51256275177002
    4. '                   ' → logprob: -11.88756275177002
    5. '           ' → logprob: -13.13756275177002
    6. '-p' → logprob: -13.26256275177002
    7. ' ' → logprob: -13.26256275177002
    8. ')' → logprob: -13.38756275177002
    9. '-S' → logprob: -13.51256275177002
    10. '<|end|>' → logprob: -13.88756275177002

Token 1398: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1399: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.008268921636044979
    2. ' val' → logprob: -5.0082688331604
    3. 'test' → logprob: -6.5082688331604
    4. 'heap' → logprob: -10.133269309997559
    5. ' test' → logprob: -10.883269309997559
    6. '(val' → logprob: -14.133269309997559
    7. 'trash' → logprob: -14.508269309997559
    8. '
' → logprob: -14.883269309997559
    9. '```' → logprob: -15.633269309997559
    10. 'value' → logprob: -15.633269309997559

Token 1400: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1401: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.09932111203670502
    2. '                   ' → logprob: -2.599321126937866
    3. '<|end|>' → logprob: -4.849320888519287
    4. '               ' → logprob: -5.224320888519287
    5. '           ' → logprob: -5.974320888519287
    6. '``' → logprob: -6.724320888519287
    7. ' ' → logprob: -7.349320888519287
    8. '                       ' → logprob: -7.349320888519287
    9. '       ' → logprob: -7.724320888519287
    10. ')' → logprob: -7.974320888519287

Token 1402: ' else' (ID: 1203)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5995979905128479
    2. '           ' → logprob: -1.7245979309082031
    3. ' ' → logprob: -2.349597930908203
    4. '               ' → logprob: -2.849597930908203
    5. ' else' → logprob: -4.224597930908203
    6. 'else' (adapté à ' else') → logprob: -4.224597930908203
    7. '       ' → logprob: -4.349597930908203
    8. '<|end|>' → logprob: -4.599597930908203
    9. ' 
' → logprob: -4.724597930908203
    10. '                               ' → logprob: -4.724597930908203

Token 1403: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3141390085220337
    2. '                   ' → logprob: -2.314138889312744
    3. ':
' → logprob: -2.689138889312744
    4. '```' → logprob: -3.064138889312744
    5. ':' → logprob: -3.564138889312744
    6. '           ' → logprob: -5.064138889312744
    7. '                               ' → logprob: -5.564138889312744
    8. '              ' → logprob: -5.564138889312744
    9. '                ' → logprob: -6.064138889312744
    10. '<|end|>' → logprob: -6.189138889312744

Token 1404: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26190057396888733
    2. '                   ' → logprob: -1.511900544166565
    3. '```' → logprob: -5.136900424957275
    4. '           ' → logprob: -6.261900424957275
    5. '                ' → logprob: -7.386900424957275
    6. '                       ' → logprob: -7.636900424957275
    7. '       ' → logprob: -8.011900901794434
    8. '``' → logprob: -8.511900901794434
    9. '              ' → logprob: -8.886900901794434
    10. '                  ' → logprob: -9.386900901794434

Token 1405: ' heap' (ID: 37237)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2898729741573334
    2. 'heap' (adapté à ' heap') → logprob: -2.039872884750366
    3. 'S' → logprob: -2.664872884750366
    4. '           ' → logprob: -4.164873123168945
    5. '               ' → logprob: -4.914873123168945
    6. '                   ' → logprob: -5.039873123168945
    7. 'i' → logprob: -5.039873123168945
    8. 'continue' → logprob: -5.789873123168945
    9. 'pass' → logprob: -5.914873123168945
    10. 'que' → logprob: -6.289873123168945

Token 1406: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.9153885558771435e-06
    2. '```' → logprob: -12.375005722045898
    3. '[' → logprob: -13.750005722045898
    4. '
' → logprob: -15.500005722045898
    5. '#' → logprob: -16.2500057220459
    6. '``' → logprob: -16.6250057220459
    7. 'Q' → logprob: -16.7500057220459
    8. '[
' → logprob: -17.3750057220459
    9. '       ' → logprob: -17.3750057220459
    10. 'ql' → logprob: -17.6250057220459

Token 1407: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0018137017032131553
    2. 'q' → logprob: -6.626813888549805
    3. 'he' → logprob: -7.876813888549805
    4. '.heap' → logprob: -9.626813888549805
    5. '```' → logprob: -11.126813888549805
    6. 'push' → logprob: -11.876813888549805
    7. '.push' → logprob: -12.126813888549805
    8. '   ' → logprob: -12.251813888549805
    9. ' he' → logprob: -12.626813888549805
    10. '       ' → logprob: -13.376813888549805

Token 1408: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.17785385251045227
    2. 'pp' → logprob: -1.9278538227081299
    3. 'q' → logprob: -4.177854061126709
    4. 'op' → logprob: -6.927854061126709
    5. 'ush' → logprob: -7.427854061126709
    6. '```' → logprob: -8.30285358428955
    7. 'ap' → logprob: -8.92785358428955
    8. 'p' → logprob: -9.80285358428955
    9. 'push' → logprob: -10.05285358428955
    10. 'pl' → logprob: -10.80285358428955

Token 1409: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.029769469052553177
    2. 'op' → logprob: -4.529769420623779
    3. 'app' → logprob: -4.529769420623779
    4. 'q' → logprob: -5.279769420623779
    5. 'pp' → logprob: -6.654769420623779
    6. '```' → logprob: -7.279769420623779
    7. 'push' → logprob: -8.779769897460938
    8. 'ap' → logprob: -9.029769897460938
    9. 'e' → logprob: -9.154769897460938
    10. 'p' → logprob: -9.404769897460938

Token 1410: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.0003382038848940283
    2. '(' → logprob: -8.000338554382324
    3. 'trash' → logprob: -13.500338554382324
    4. '(
' → logprob: -14.750338554382324
    5. '   ' → logprob: -15.125338554382324
    6. '(queue' → logprob: -15.625338554382324
    7. '	tr' → logprob: -16.625337600708008
    8. 'que' → logprob: -16.625337600708008
    9. '
' → logprob: -16.875337600708008
    10. '```' → logprob: -17.125337600708008

Token 1411: 'ash' (ID: 1229)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.08774507790803909
    2. 'que' → logprob: -2.587745189666748
    3. 'tr' → logprob: -5.712745189666748
    4. 'queue' → logprob: -6.587745189666748
    5. 'tras' → logprob: -6.587745189666748
    6. '   ' → logprob: -7.712745189666748
    7. 'trap' → logprob: -7.837745189666748
    8. '(tr' → logprob: -8.83774471282959
    9. '  ' → logprob: -8.96274471282959
    10. ' trash' → logprob: -8.96274471282959

Token 1412: ',' (ID: 11)
  Prédit: '(tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -0.5238089561462402
    2. ',' → logprob: -1.0238089561462402
    3. '(-' → logprob: -3.5238089561462402
    4. '(' → logprob: -4.14880895614624
    5. ',tr' → logprob: -6.89880895614624
    6. '((-' → logprob: -7.77380895614624
    7. ',
' → logprob: -8.148809432983398
    8. '```' → logprob: -8.273809432983398
    9. ')' → logprob: -8.648809432983398
    10. '([],' → logprob: -8.773809432983398

Token 1413: ' beam' (ID: 36650)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6731325387954712
    2. '-be' → logprob: -0.9231325387954712
    3. '-tr' → logprob: -3.7981324195861816
    4. '-val' → logprob: -4.173132419586182
    5. '(-' → logprob: -4.298132419586182
    6. ' -' → logprob: -4.423132419586182
    7. 'beam' → logprob: -4.673132419586182
    8. '-b' → logprob: -5.548132419586182
    9. '   ' → logprob: -6.423132419586182
    10. '-trash' → logprob: -6.423132419586182

Token 1414: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8087270038668066e-05
    2. 'i' → logprob: -10.750027656555176
    3. '[' → logprob: -12.375027656555176
    4. '(i' → logprob: -13.250027656555176
    5. '[
' → logprob: -15.750027656555176
    6. '{i' → logprob: -16.125028610229492
    7. '```' → logprob: -16.500028610229492
    8. '_i' → logprob: -16.750028610229492
    9. '[user' → logprob: -17.500028610229492
    10. '   ' → logprob: -17.750028610229492

Token 1415: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004173252731561661
    2. '[i' → logprob: -5.504173278808594
    3. '][' → logprob: -9.504173278808594
    4. ')[' → logprob: -12.004173278808594
    5. ' [' → logprob: -12.379173278808594
    6. '[
' → logprob: -12.504173278808594
    7. '0' → logprob: -13.504173278808594
    8. '```' → logprob: -13.879173278808594
    9. ')' → logprob: -14.254173278808594
    10. '   ' → logprob: -14.254173278808594

Token 1416: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023846338444855064
    2. '[i' → logprob: -8.500238418579102
    3. '[' → logprob: -10.750238418579102
    4. '(i' → logprob: -12.000238418579102
    5. 'i' → logprob: -12.500238418579102
    6. ' ' → logprob: -14.250238418579102
    7. '   ' → logprob: -14.500238418579102
    8. '1' → logprob: -14.625238418579102
    9. '{i' → logprob: -14.625238418579102
    10. '```' → logprob: -14.625238418579102

Token 1417: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010029936209321022
    2. ')
' → logprob: -4.6350297927856445
    3. '                   ' → logprob: -8.760029792785645
    4. ' )' → logprob: -10.135029792785645
    5. '               ' → logprob: -10.385029792785645
    6. '   ' → logprob: -11.510029792785645
    7. '           ' → logprob: -11.635029792785645
    8. '       ' → logprob: -12.260029792785645
    9. ',' → logprob: -12.885029792785645
    10. ' )
' → logprob: -12.885029792785645

Token 1418: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5751289129257202
    2. '<|end|>' → logprob: -1.4501289129257202
    3. '               ' → logprob: -2.5751290321350098
    4. '                   ' → logprob: -3.0751290321350098
    5. ')' → logprob: -3.4501290321350098
    6. '       ' → logprob: -4.45012903213501
    7. '           ' → logprob: -4.82512903213501
    8. '``' → logprob: -5.32512903213501
    9. '\n' → logprob: -5.45012903213501
    10. '<|end|>' → logprob: -6.07512903213501

Token 1419: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8039063811302185
    2. '       ' → logprob: -1.3039064407348633
    3. '```' → logprob: -1.6789064407348633
    4. 'else' (adapté à ' else') → logprob: -3.4289064407348633
    5. '               ' → logprob: -3.5539064407348633
    6. ' ' → logprob: -4.803906440734863
    7. ' else' → logprob: -4.928906440734863
    8. '\n' → logprob: -5.678906440734863
    9. '   ' → logprob: -5.678906440734863
    10. '<|end|>' → logprob: -6.428906440734863

Token 1420: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6095285415649414
    2. '       ' → logprob: -1.3595285415649414
    3. '           ' → logprob: -1.8595285415649414
    4. '	       ' → logprob: -4.234528541564941
    5. ':
' → logprob: -4.734528541564941
    6. '		' → logprob: -5.109528541564941
    7. '```' → logprob: -5.609528541564941
    8. '	' → logprob: -6.234528541564941
    9. '[' → logprob: -6.484528541564941
    10. ':' → logprob: -6.484528541564941

Token 1421: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6402194499969482
    2. '               ' → logprob: -1.5152194499969482
    3. '```' → logprob: -1.5152194499969482
    4. '           ' → logprob: -3.6402194499969482
    5. '``' → logprob: -5.640219688415527
    6. '	       ' → logprob: -7.515219688415527
    7. ' que' → logprob: -7.515219688415527
    8. ' ' → logprob: -7.765219688415527
    9. '	' → logprob: -7.765219688415527
    10. '		' → logprob: -8.015219688415527

Token 1422: ' heap' (ID: 37237)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5002182126045227
    2. '```' → logprob: -1.625218152999878
    3. 'que' → logprob: -2.000218152999878
    4. '           ' → logprob: -3.000218152999878
    5. ' que' → logprob: -5.500218391418457
    6. '                   ' → logprob: -6.000218391418457
    7. 'heap' (adapté à ' heap') → logprob: -6.250218391418457
    8. '``' → logprob: -6.875218391418457
    9. '       ' → logprob: -6.875218391418457
    10. '			' → logprob: -7.750218391418457

Token 1423: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.372294698550832e-06
    2. 'que' → logprob: -12.250009536743164
    3. '```' → logprob: -13.375009536743164
    4. 'push' → logprob: -13.750009536743164
    5. '       ' → logprob: -13.750009536743164
    6. '``' → logprob: -15.625009536743164
    7. 'qu' → logprob: -15.750009536743164
    8. 'ql' → logprob: -16.125009536743164
    9. 'p' → logprob: -16.125009536743164
    10. '           ' → logprob: -16.500009536743164

Token 1424: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.1378060132265091
    2. 'he' → logprob: -2.887805938720703
    3. '.push' → logprob: -2.887805938720703
    4. 'q' → logprob: -5.012805938720703
    5. 'ush' → logprob: -5.387805938720703
    6. 'push' → logprob: -5.512805938720703
    7. '```' → logprob: -7.137805938720703
    8. '.heap' → logprob: -7.137805938720703
    9. 'heap' → logprob: -8.762805938720703
    10. '   ' → logprob: -9.012805938720703

Token 1425: 'app' (ID: 903)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.16743268072605133
    2. 'ush' → logprob: -1.9174326658248901
    3. '.push' → logprob: -5.04243278503418
    4. '```' → logprob: -8.41743278503418
    5. 'app' → logprob: -9.04243278503418
    6. ' push' → logprob: -9.16743278503418
    7. 'op' → logprob: -10.41743278503418
    8. 'pus' → logprob: -10.41743278503418
    9. 's' → logprob: -10.54243278503418
    10. 'ushed' → logprob: -10.79243278503418

Token 1426: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00034702493576332927
    2. 'push' → logprob: -8.000347137451172
    3. '.push' → logprob: -12.375347137451172
    4. '       ' → logprob: -13.375347137451172
    5. 'sh' → logprob: -13.375347137451172
    6. 'op' → logprob: -13.750347137451172
    7. 'app' → logprob: -14.000347137451172
    8. '   ' → logprob: -14.375347137451172
    9. '               ' → logprob: -14.750347137451172
    10. '```' → logprob: -15.000347137451172

Token 1427: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.3822154111694545e-05
    2. 'que' → logprob: -10.125043869018555
    3. '(tr' → logprob: -12.875043869018555
    4. '(queue' → logprob: -14.375043869018555
    5. '(
' → logprob: -15.375043869018555
    6. ' (' → logprob: -15.750043869018555
    7. ' que' → logprob: -15.875043869018555
    8. '(qu' → logprob: -19.125043869018555
    9. '```' → logprob: -19.375043869018555
    10. '((' → logprob: -20.000043869018555

Token 1428: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.8312570318812504e-05
    2. ' que' → logprob: -11.125018119812012
    3. '(' → logprob: -13.125018119812012
    4. 'queue' → logprob: -13.750018119812012
    5. '   ' → logprob: -16.625019073486328
    6. '```' → logprob: -16.625019073486328
    7. 'qui' → logprob: -16.750019073486328
    8. 'qu' → logprob: -17.375019073486328
    9. 'q' → logprob: -17.750019073486328
    10. '  ' → logprob: -17.875019073486328

Token 1429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002700377081055194
    2. 'que' → logprob: -8.375269889831543
    3. '       ' → logprob: -11.500269889831543
    4. '```' → logprob: -11.625269889831543
    5. '(' → logprob: -11.875269889831543
    6. '   ' → logprob: -12.375269889831543
    7. '      ' → logprob: -13.000269889831543
    8. '_' → logprob: -13.500269889831543
    9. '               ' → logprob: -13.875269889831543
    10. 'queue' → logprob: -14.125269889831543

Token 1430: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007355782203376293
    2. ',' → logprob: -5.257355690002441
    3. '((-' → logprob: -6.757355690002441
    4. '(tr' → logprob: -7.757355690002441
    5. '(-' → logprob: -7.882355690002441
    6. '               ' → logprob: -9.507355690002441
    7. '([],' → logprob: -10.132355690002441
    8. '((' → logprob: -10.882355690002441
    9. ' (' → logprob: -12.257355690002441
    10. '           ' → logprob: -12.257355690002441

Token 1431: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.061989083886146545
    2. ' (-' → logprob: -2.8119890689849854
    3. '   ' → logprob: -10.811988830566406
    4. '       ' → logprob: -14.561988830566406
    5. '(' → logprob: -15.436988830566406
    6. '((-' → logprob: -15.936988830566406
    7. ' ' → logprob: -16.186988830566406
    8. '```' → logprob: -16.436988830566406
    9. '(-(' → logprob: -16.561988830566406
    10. ' (' → logprob: -17.061988830566406

Token 1432: 'beam' (ID: 95917)
  Prédit: 'beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -7.226628895296017e-06
    2. ' beam' → logprob: -11.875007629394531
    3. 'heap' → logprob: -16.62500762939453
    4. 'Beam' → logprob: -18.62500762939453
    5. '
' → logprob: -18.75000762939453
    6. '(' → logprob: -18.87500762939453
    7. '   ' → logprob: -18.87500762939453
    8. 'beat' → logprob: -19.87500762939453
    9. 'bean' → logprob: -20.00000762939453
    10. '```' → logprob: -20.12500762939453

Token 1433: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2352385965641588e-05
    2. 'i' → logprob: -11.375012397766113
    3. '[' → logprob: -14.750012397766113
    4. '[
' → logprob: -15.375012397766113
    5. '
' → logprob: -17.375011444091797
    6. '(i' → logprob: -17.375011444091797
    7. '```' → logprob: -17.625011444091797
    8. '           ' → logprob: -17.750011444091797
    9. '{i' → logprob: -18.375011444091797
    10. '       ' → logprob: -18.750011444091797

Token 1434: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08914972096681595
    2. '[' → logprob: -2.4641497135162354
    3. ')[' → logprob: -8.839149475097656
    4. '0' → logprob: -10.589149475097656
    5. '[i' → logprob: -12.214149475097656
    6. ']' → logprob: -12.464149475097656
    7. ' ][' → logprob: -12.464149475097656
    8. '   ' → logprob: -12.714149475097656
    9. ',' → logprob: -12.839149475097656
    10. ''][' → logprob: -12.839149475097656

Token 1435: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. '1' → logprob: -12.500005722045898
    3. ' ' → logprob: -13.500005722045898
    4. '```' → logprob: -14.625005722045898
    5. '   ' → logprob: -15.875005722045898
    6. '[' → logprob: -16.5000057220459
    7. '
' → logprob: -17.6250057220459
    8. '       ' → logprob: -18.7500057220459
    9. '  ' → logprob: -18.9375057220459
    10. ',' → logprob: -19.1875057220459

Token 1436: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. '),' → logprob: -12.500009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. '‌,' → logprob: -14.375009536743164
    5. '   ' → logprob: -14.625009536743164
    6. ',i' → logprob: -14.750009536743164
    7. '       ' → logprob: -14.875009536743164
    8. '```' → logprob: -14.875009536743164
    9. '           ' → logprob: -15.000009536743164
    10. '`,' → logprob: -15.250009536743164

Token 1437: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019286326132714748
    2. ' i' → logprob: -6.251928806304932
    3. '(i' → logprob: -17.001928329467773
    4. '   ' → logprob: -18.001928329467773
    5. '	i' → logprob: -18.126928329467773
    6. ' ' → logprob: -19.126928329467773
    7. ')i' → logprob: -19.626928329467773
    8. '{i' → logprob: -19.876928329467773
    9. ' (' → logprob: -20.126928329467773
    10. ''i' → logprob: -20.751928329467773

Token 1438: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10027696937322617
    2. ')' → logprob: -2.3502769470214844
    3. '               ' → logprob: -9.975276947021484
    4. '))
' → logprob: -11.475276947021484
    5. '           ' → logprob: -12.225276947021484
    6. ')
' → logprob: -12.350276947021484
    7. '))' → logprob: -14.100276947021484
    8. '       ' → logprob: -14.225276947021484
    9. ')

' → logprob: -14.350276947021484
    10. '```' → logprob: -14.475276947021484

Token 1439: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2883087396621704
    2. '``' → logprob: -1.4133087396621704
    3. '\n' → logprob: -6.413308620452881
    4. '               ' → logprob: -7.288308620452881
    5. '\t' → logprob: -7.538308620452881
    6. '​' → logprob: -7.663308620452881
    7. '
' → logprob: -7.788308620452881
    8. ''\' → logprob: -7.788308620452881
    9. ' 
' → logprob: -7.913308620452881
    10. '                   ' → logprob: -8.038309097290039

Token 1440: ' start' (ID: 1604)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.38147956132888794
    2. 'cnt' → logprob: -1.2564795017242432
    3. ' S' → logprob: -4.131479740142822
    4. '```' → logprob: -5.006479740142822
    5. 'start' (adapté à ' start') → logprob: -5.256479740142822
    6. ' cnt' → logprob: -5.631479740142822
    7. '``' → logprob: -7.756479740142822
    8. '   ' → logprob: -8.881479263305664
    9. ' start' → logprob: -9.506479263305664
    10. 'count' → logprob: -9.756479263305664

Token 1441: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -7.107425062713446e-06
    2. '```' → logprob: -12.875006675720215
    3. '[i' → logprob: -13.125006675720215
    4. '[' → logprob: -13.625006675720215
    5. '   ' → logprob: -15.125006675720215
    6. '	L' → logprob: -15.500006675720215
    7. '       ' → logprob: -15.625006675720215
    8. ' L' → logprob: -15.750006675720215
    9. '	' → logprob: -16.00000762939453
    10. '           ' → logprob: -16.12500762939453

Token 1442: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06274116039276123
    2. 'i' → logprob: -2.937741279602051
    3. ' i' → logprob: -5.437741279602051
    4. '```' → logprob: -6.187741279602051
    5. '=i' → logprob: -7.562741279602051
    6. '	i' → logprob: -7.562741279602051
    7. '(i' → logprob: -9.06274127960205
    8. '[' → logprob: -9.56274127960205
    9. '=' → logprob: -9.68774127960205
    10. ' =' → logprob: -9.93774127960205

Token 1443: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11502446234226227
    2. ']' → logprob: -2.7400245666503906
    3. ')' → logprob: -3.2400245666503906
    4. ' =' → logprob: -6.615024566650391
    5. ']=' → logprob: -6.865024566650391
    6. '```' → logprob: -7.240024566650391
    7. '   ' → logprob: -7.365024566650391
    8. ']+=' → logprob: -7.490024566650391
    9. '+=' → logprob: -8.24002456665039
    10. '       ' → logprob: -8.74002456665039

Token 1444: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0024781543761491776
    2. ' =' → logprob: -6.002478122711182
    3. '=
' → logprob: -13.50247859954834
    4. '+=' → logprob: -13.75247859954834
    5. ' +=' → logprob: -17.127477645874023
    6. '```' → logprob: -18.127477645874023
    7. '=True' → logprob: -18.502477645874023
    8. ')' → logprob: -18.877477645874023
    9. '   ' → logprob: -19.127477645874023
    10. '＝' → logprob: -19.377477645874023

Token 1445: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018232580623589456
    2. ' i' → logprob: -9.000182151794434
    3. '	i' → logprob: -9.750182151794434
    4. '   ' → logprob: -15.000182151794434
    5. '```' → logprob: -16.25018310546875
    6. '<|end|>' → logprob: -17.12518310546875
    7. '	' → logprob: -17.62518310546875
    8. '    ' → logprob: -18.12518310546875
    9. ' ' → logprob: -18.25018310546875
    10. '<|end|>' → logprob: -18.25018310546875

Token 1446: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7534124851226807
    2. '```' → logprob: -1.2534124851226807
    3. '       ' → logprob: -1.7534124851226807
    4. '<|end|>' → logprob: -3.2534124851226807
    5. '           ' → logprob: -4.003412246704102
    6. '``' → logprob: -5.503412246704102
    7. '
' → logprob: -6.378412246704102
    8. '                   ' → logprob: -6.628412246704102
    9. '   ' → logprob: -7.003412246704102
    10. ',' → logprob: -7.003412246704102

Token 1447: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.30891719460487366
    2. '               ' → logprob: -1.5589171648025513
    3. '``' → logprob: -3.683917284011841
    4. '           ' → logprob: -4.808917045593262
    5. '       ' → logprob: -4.933917045593262
    6. '\t' → logprob: -5.558917045593262
    7. '                   ' → logprob: -6.058917045593262
    8. '			' → logprob: -6.558917045593262
    9. '<|end|>' → logprob: -6.558917045593262
    10. '\' → logprob: -7.183917045593262

Token 1448: ' S' (ID: 336)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.06264689564704895
    2. '```' → logprob: -3.4376468658447266
    3. 'S' (adapté à ' S') → logprob: -4.687646865844727
    4. ' cnt' → logprob: -4.937646865844727
    5. '               ' → logprob: -4.937646865844727
    6. ' S' → logprob: -5.562646865844727
    7. '``' → logprob: -7.562646865844727
    8. '	cnt' → logprob: -8.187646865844727
    9. '                   ' → logprob: -8.437646865844727
    10. '           ' → logprob: -10.562646865844727

Token 1449: '2' (ID: 17)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2548985481262207
    2. '+=' → logprob: -1.5048985481262207
    3. '+' → logprob: -6.379898548126221
    4. '```' → logprob: -6.879898548126221
    5. ' +' → logprob: -9.129898071289062
    6. '       ' → logprob: -10.129898071289062
    7. '      ' → logprob: -10.504898071289062
    8. ' ' → logprob: -10.879898071289062
    9. '        ' → logprob: -12.004898071289062
    10. '2' → logprob: -12.129898071289062

Token 1450: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47420433163642883
    2. '+=' → logprob: -0.9742043018341064
    3. '+' → logprob: -10.099204063415527
    4. '```' → logprob: -10.224204063415527
    5. '       ' → logprob: -10.849204063415527
    6. '           ' → logprob: -10.974204063415527
    7. '   ' → logprob: -12.599204063415527
    8. ']+=' → logprob: -12.599204063415527
    9. ' +' → logprob: -13.474204063415527
    10. ' ' → logprob: -13.849204063415527

Token 1451: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.004621422383934259
    2. ' beam' → logprob: -5.379621505737305
    3. ' ' → logprob: -14.754621505737305
    4. '           ' → logprob: -15.754621505737305
    5. 'be' → logprob: -15.879621505737305
    6. '+' → logprob: -16.254621505737305
    7. ' ' → logprob: -16.379621505737305
    8. '```' → logprob: -16.629621505737305
    9. ' +' → logprob: -16.754621505737305
    10. '   ' → logprob: -17.004621505737305

Token 1452: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001515576965175569
    2. '[' → logprob: -6.7515153884887695
    3. '2' → logprob: -8.75151538848877
    4. '```' → logprob: -9.75151538848877
    5. 'i' → logprob: -10.12651538848877
    6. '`' → logprob: -10.25151538848877
    7. '   ' → logprob: -10.50151538848877
    8. '[
' → logprob: -11.75151538848877
    9. '       ' → logprob: -12.62651538848877
    10. '(i' → logprob: -12.75151538848877

Token 1453: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0368821956217289
    2. '[i' → logprob: -3.661882162094116
    3. '][' → logprob: -4.786882400512695
    4. '0' → logprob: -6.911882400512695
    5. '```' → logprob: -8.411882400512695
    6. '2' → logprob: -8.661882400512695
    7. ')[' → logprob: -8.911882400512695
    8. ')' → logprob: -9.161882400512695
    9. ' [' → logprob: -9.286882400512695
    10. '   ' → logprob: -9.411882400512695

Token 1454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.000001907348633
    3. '1' → logprob: -14.625001907348633
    4. '   ' → logprob: -16.312501907348633
    5. 'i' → logprob: -16.437501907348633
    6. '```' → logprob: -16.562501907348633
    7. '۰' → logprob: -17.500001907348633
    8. '[' → logprob: -18.125001907348633
    9. '-' → logprob: -18.250001907348633
    10. '  ' → logprob: -18.312501907348633

Token 1455: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19895954430103302
    2. '<|end|>' → logprob: -1.8239595890045166
    3. ' -' → logprob: -5.3239593505859375
    4. ' +' → logprob: -5.8239593505859375
    5. '+' → logprob: -5.9489593505859375
    6. '               ' → logprob: -6.1989593505859375
    7. '<|end|>' → logprob: -6.4489593505859375
    8. ' )' → logprob: -7.0739593505859375
    9. '       ' → logprob: -7.1989593505859375
    10. '-' → logprob: -7.5739593505859375

Token 1456: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7304717898368835
    2. '               ' → logprob: -0.8554717898368835
    3. '```' → logprob: -2.6054718494415283
    4. '       ' → logprob: -5.230471611022949
    5. '                   ' → logprob: -6.105471611022949
    6. '	       ' → logprob: -6.105471611022949
    7. 'cnt' → logprob: -6.230471611022949
    8. '		' → logprob: -6.355471611022949
    9. '	           ' → logprob: -6.480471611022949
    10. '			' → logprob: -6.730471611022949

Token 1457: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0009221808286383748
    2. ' cnt' → logprob: -8.125922203063965
    3. '	cnt' → logprob: -8.500922203063965
    4. '```' → logprob: -8.625922203063965
    5. '   ' → logprob: -9.500922203063965
    6. '               ' → logprob: -9.500922203063965
    7. '           ' → logprob: -9.750922203063965
    8. '       ' → logprob: -10.750922203063965
    9. 'count' → logprob: -12.250922203063965
    10. '``' → logprob: -12.375922203063965

Token 1458: '2' (ID: 17)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0725003033876419
    2. '+=' → logprob: -2.697500228881836
    3. '```' → logprob: -7.197500228881836
    4. '	' → logprob: -7.322500228881836
    5. '+' → logprob: -8.197500228881836
    6. '       ' → logprob: -8.447500228881836
    7. ' +' → logprob: -8.447500228881836
    8. '   ' → logprob: -9.447500228881836
    9. '    ' → logprob: -9.822500228881836
    10. '        ' → logprob: -9.947500228881836

Token 1459: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.24447713792324066
    2. ' +=' → logprob: -1.6194771528244019
    3. '       ' → logprob: -4.869477272033691
    4. '```' → logprob: -5.244477272033691
    5. '	' → logprob: -5.369477272033691
    6. '   ' → logprob: -7.369477272033691
    7. '=' → logprob: -8.744477272033691
    8. '	       ' → logprob: -9.369477272033691
    9. '        ' → logprob: -9.869477272033691
    10. ' ' → logprob: -9.869477272033691

Token 1460: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.250003814697266
    4. '	' → logprob: -16.625003814697266
    5. '```' → logprob: -20.125003814697266
    6. '۱' → logprob: -21.750003814697266
    7. '  ' → logprob: -22.125003814697266
    8. '       ' → logprob: -22.250003814697266
    9. '１' → logprob: -22.500003814697266
    10. '           ' → logprob: -22.625003814697266

Token 1461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -18.5
    4. '	' → logprob: -19.375
    5. '```' → logprob: -19.75
    6. '۱' → logprob: -21.0
    7. '' → logprob: -22.0
    8. '１' → logprob: -22.0
    9. '
' → logprob: -23.125
    10. '१' → logprob: -23.375

Token 1462: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.07966208457946777
    2. '\n' → logprob: -3.0796620845794678
    3. '<|end|>' → logprob: -4.329662322998047
    4. '           ' → logprob: -5.204662322998047
    5. '
' → logprob: -5.454662322998047
    6. '\' → logprob: -6.329662322998047
    7. '``' → logprob: -6.454662322998047
    8. '   ' → logprob: -6.829662322998047
    9. 'if' → logprob: -7.454662322998047
    10. '       ' → logprob: -7.454662322998047

Token 1463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22133110463619232
    2. '       ' → logprob: -1.9713311195373535
    3. '```' → logprob: -2.9713311195373535
    4. '   ' → logprob: -5.4713311195373535
    5. 'if' → logprob: -5.8463311195373535
    6. '<|end|>' → logprob: -7.9713311195373535
    7. ' if' → logprob: -8.346330642700195
    8. 'continue' → logprob: -8.846330642700195
    9. 'while' → logprob: -9.846330642700195
    10. 'for' → logprob: -10.346330642700195

Token 1464: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16404876112937927
    2. '           ' → logprob: -2.539048671722412
    3. ' if' → logprob: -3.164048671722412
    4. '```' → logprob: -3.914048671722412
    5. '       ' → logprob: -5.039048671722412
    6. '   ' → logprob: -6.414048671722412
    7. '	if' → logprob: -6.414048671722412
    8. 'i' → logprob: -8.91404914855957
    9. '		' → logprob: -9.78904914855957
    10. ' ' → logprob: -10.16404914855957

Token 1465: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.47699353098869324
    2. 'cnt' → logprob: -0.9769935607910156
    3. '   ' → logprob: -6.226993560791016
    4. '(cnt' → logprob: -8.351993560791016
    5. 'S' → logprob: -8.851993560791016
    6. ' ' → logprob: -9.601993560791016
    7. ' S' → logprob: -9.601993560791016
    8. '    ' → logprob: -9.851993560791016
    9. '	cnt' → logprob: -9.851993560791016
    10. 'count' → logprob: -9.976993560791016

Token 1466: '2' (ID: 17)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10577225685119629
    2. '2' → logprob: -2.8557722568511963
    3. '==' → logprob: -3.2307722568511963
    4. '   ' → logprob: -5.980772018432617
    5. '```' → logprob: -7.980772018432617
    6. '           ' → logprob: -8.855772018432617
    7. '       ' → logprob: -8.980772018432617
    8. ' ' → logprob: -9.730772018432617
    9. '[i' → logprob: -10.230772018432617
    10. '    ' → logprob: -10.730772018432617

Token 1467: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17981943488121033
    2. '==' → logprob: -1.8048194646835327
    3. '   ' → logprob: -10.679819107055664
    4. '=' → logprob: -11.304819107055664
    5. '```' → logprob: -11.304819107055664
    6. '==
' → logprob: -11.804819107055664
    7. '[' → logprob: -11.929819107055664
    8. ' ' → logprob: -12.179819107055664
    9. ' ==
' → logprob: -13.804819107055664
    10. '       ' → logprob: -14.054819107055664

Token 1468: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.255413681268692
    2. 'i' → logprob: -1.6304136514663696
    3. ' i' → logprob: -4.00541353225708
    4. ' m' → logprob: -4.50541353225708
    5. '(i' → logprob: -8.880414009094238
    6. '1' → logprob: -9.755414009094238
    7. '```' → logprob: -10.255414009094238
    8. '   ' → logprob: -10.630414009094238
    9. ' ' → logprob: -11.380414009094238
    10. ' (' → logprob: -12.255414009094238

Token 1469: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2426167130470276
    2. ':' → logprob: -2.117616653442383
    3. ' and' → logprob: -3.117616653442383
    4. '           ' → logprob: -3.367616653442383
    5. '       ' → logprob: -4.742616653442383
    6. '```' → logprob: -5.117616653442383
    7. '               ' → logprob: -6.867616653442383
    8. 'and' → logprob: -8.867616653442383
    9. '<|end|>' → logprob: -9.117616653442383
    10. '   ' → logprob: -9.242616653442383

Token 1470: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.25687867403030396
    2. '               ' → logprob: -1.5068786144256592
    3. '           ' → logprob: -5.631878852844238
    4. '``' → logprob: -6.881878852844238
    5. '<|end|>' → logprob: -8.881878852844238
    6. '       ' → logprob: -10.131878852844238
    7. '<|end|>' → logprob: -10.631878852844238
    8. '\' → logprob: -11.131878852844238
    9. ',' → logprob: -11.256878852844238
    10. '`' → logprob: -11.631878852844238

Token 1471: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5124205350875854
    2. 'test' → logprob: -1.0124205350875854
    3. '```' → logprob: -4.137420654296875
    4. ' test' → logprob: -4.637420654296875
    5. '           ' → logprob: -5.387420654296875
    6. 'data' → logprob: -5.887420654296875
    7. 'val' → logprob: -7.137420654296875
    8. 't' → logprob: -7.137420654296875
    9. '       ' → logprob: -7.137420654296875
    10. 'if' (adapté à ' if') → logprob: -7.512420654296875

Token 1472: ' i' (ID: 575)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8534694910049438
    2. 'trash' → logprob: -1.8534694910049438
    3. 'start' → logprob: -2.4784693717956543
    4. '   ' → logprob: -2.7284693717956543
    5. 'cum' → logprob: -3.2284693717956543
    6. ' S' → logprob: -3.2284693717956543
    7. 'data' → logprob: -3.3534693717956543
    8. 'test' → logprob: -3.6034693717956543
    9. 'beam' → logprob: -3.9784693717956543
    10. '       ' → logprob: -4.353469371795654

Token 1473: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4878908693790436
    2. ' +' → logprob: -1.6128908395767212
    3. ' >=' → logprob: -2.2378909587860107
    4. '+' → logprob: -2.8628909587860107
    5. '==' → logprob: -4.112890720367432
    6. '>=' → logprob: -5.987890720367432
    7. '```' → logprob: -6.362890720367432
    8. ' <' → logprob: -7.487890720367432
    9. '   ' → logprob: -7.737890720367432
    10. ' !=' → logprob: -8.36289119720459

Token 1474: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019385118503123522
    2. '0' → logprob: -6.376938343048096
    3. ' N' → logprob: -8.501938819885254
    4. '(N' → logprob: -12.126938819885254
    5. '           ' → logprob: -12.251938819885254
    6. '                   ' → logprob: -12.376938819885254
    7. '   ' → logprob: -12.501938819885254
    8. '```' → logprob: -12.876938819885254
    9. 'len' → logprob: -13.251938819885254
    10. 'n' → logprob: -13.501938819885254

Token 1475: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22545163333415985
    2. ' -' → logprob: -1.6004515886306763
    3. '```' → logprob: -10.600451469421387
    4. '1' → logprob: -12.850451469421387
    5. '   ' → logprob: -12.975451469421387
    6. '       ' → logprob: -13.100451469421387
    7. ' ' → logprob: -13.600451469421387
    8. '–' → logprob: -14.350451469421387
    9. ':' → logprob: -14.350451469421387
    10. '           ' → logprob: -14.475451469421387

Token 1476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.894790981779806e-05
    2. '2' → logprob: -10.500048637390137
    3. ' ' → logprob: -11.125048637390137
    4. '```' → logprob: -12.125048637390137
    5. '   ' → logprob: -14.875048637390137
    6. '           ' → logprob: -15.000048637390137
    7. '
' → logprob: -15.875048637390137
    8. '       ' → logprob: -16.000049591064453
    9. '0' → logprob: -16.875049591064453
    10. '...' → logprob: -17.375049591064453

Token 1477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '2' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '```' → logprob: -14.750004768371582
    5. '   ' → logprob: -15.375004768371582
    6. '           ' → logprob: -15.750004768371582
    7. '
' → logprob: -15.750004768371582
    8. '       ' → logprob: -16.375003814697266
    9. '               ' → logprob: -18.500003814697266
    10. '１' → logprob: -18.875003814697266

Token 1478: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3374117910861969
    2. ':
' → logprob: -1.9624117612838745
    3. ':' → logprob: -2.837411880493164
    4. ' and' → logprob: -2.962411880493164
    5. '```' → logprob: -3.712411880493164
    6. '               ' → logprob: -5.212411880493164
    7. '                       ' → logprob: -6.337411880493164
    8. '           ' → logprob: -6.962411880493164
    9. '<|end|>' → logprob: -7.837411880493164
    10. 'and' → logprob: -7.962411880493164

Token 1479: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022028187289834023
    2. '```' → logprob: -3.8970282077789307
    3. '               ' → logprob: -7.022027969360352
    4. '           ' → logprob: -8.772027969360352
    5. '``' → logprob: -8.772027969360352
    6. '                       ' → logprob: -9.647027969360352
    7. ':
' → logprob: -10.022027969360352
    8. '   ' → logprob: -10.522027969360352
    9. '       ' → logprob: -10.647027969360352
    10. ' and' → logprob: -10.897027969360352

Token 1480: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.16806410253047943
    2. '                   ' → logprob: -2.7930641174316406
    3. 'test' → logprob: -2.9180641174316406
    4. 'if' → logprob: -4.793064117431641
    5. 'S' → logprob: -5.043064117431641
    6. 't' → logprob: -5.168064117431641
    7. 'val' → logprob: -5.168064117431641
    8. '               ' → logprob: -5.668064117431641
    9. ' data' → logprob: -6.168064117431641
    10. '```' → logprob: -6.293064117431641

Token 1481: '1' (ID: 16)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4717061519622803
    2. '2' → logprob: -1.0967061519622803
    3. '1' → logprob: -4.096706390380859
    4. '[' → logprob: -4.221706390380859
    5. ' =' → logprob: -5.471706390380859
    6. '```' → logprob: -5.971706390380859
    7. '[
' → logprob: -7.096706390380859
    8. '=' → logprob: -7.221706390380859
    9. '   ' → logprob: -7.596706390380859
    10. '
' → logprob: -8.09670639038086

Token 1482: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005263420753180981
    2. '[' → logprob: -7.875526428222656
    3. '[S' → logprob: -10.125526428222656
    4. '[I' → logprob: -10.750526428222656
    5. '[min' → logprob: -11.375526428222656
    6. '[k' → logprob: -11.500526428222656
    7. '```' → logprob: -11.500526428222656
    8. '[data' → logprob: -11.875526428222656
    9. '[self' → logprob: -11.875526428222656
    10. '[
' → logprob: -12.250526428222656

Token 1483: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3716593086719513
    2. ' =' → logprob: -1.496659278869629
    3. '=' → logprob: -2.996659278869629
    4. ']=' → logprob: -3.996659278869629
    5. '+' → logprob: -4.621659278869629
    6. '                   ' → logprob: -5.746659278869629
    7. ' +' → logprob: -6.246659278869629
    8. '][' → logprob: -7.871659278869629
    9. ' ]' → logprob: -7.996659278869629
    10. '           ' → logprob: -7.996659278869629

Token 1484: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038054123520851135
    2. ' =' → logprob: -3.2880542278289795
    3. '=
' → logprob: -12.663054466247559
    4. '+=' → logprob: -12.913054466247559
    5. '=S' → logprob: -13.163054466247559
    6. '=min' → logprob: -13.413054466247559
    7. '+' → logprob: -14.163054466247559
    8. '[' → logprob: -14.788054466247559
    9. ',' → logprob: -14.913054466247559
    10. '=k' → logprob: -15.038054466247559

Token 1485: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.01148973498493433
    2. 'min' → logprob: -4.8864898681640625
    3. 'abs' → logprob: -6.2614898681640625
    4. '-' → logprob: -7.5114898681640625
    5. ' S' → logprob: -7.6364898681640625
    6. '-S' → logprob: -8.386489868164062
    7. '-min' → logprob: -9.011489868164062
    8. 'cum' → logprob: -9.511489868164062
    9. 'max' → logprob: -9.636489868164062
    10. 'data' → logprob: -9.761489868164062

Token 1486: '2' (ID: 17)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4106810986995697
    2. '+' → logprob: -1.160681128501892
    3. '2' → logprob: -3.9106810092926025
    4. '                   ' → logprob: -7.285681247711182
    5. '   ' → logprob: -7.285681247711182
    6. '```' → logprob: -8.160680770874023
    7. '<|end|>' → logprob: -8.410680770874023
    8. '    ' → logprob: -8.410680770874023
    9. '       ' → logprob: -8.785680770874023
    10. '               ' → logprob: -8.910680770874023

Token 1487: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.018100619316101
    2. '                   ' → logprob: -1.143100619316101
    3. '+' → logprob: -1.768100619316101
    4. ' -' → logprob: -2.6431007385253906
    5. '               ' → logprob: -3.6431007385253906
    6. '<|end|>' → logprob: -3.8931007385253906
    7. '           ' → logprob: -4.643100738525391
    8. '-' → logprob: -4.768100738525391
    9. '       ' → logprob: -5.768100738525391
    10. '
' → logprob: -6.768100738525391

Token 1488: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.9862216504407115e-05
    2. ' data' → logprob: -11.000020027160645
    3. 'min' → logprob: -13.625020027160645
    4. '
' → logprob: -14.250020027160645
    5. '   ' → logprob: -14.375020027160645
    6. '(data' → logprob: -15.500020027160645
    7. 'max' → logprob: -16.375019073486328
    8. 'beam' → logprob: -16.750019073486328
    9. 'cum' → logprob: -17.000019073486328
    10. 'random' → logprob: -17.250019073486328

Token 1489: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009805790148675442
    2. 'i' → logprob: -4.634805679321289
    3. ' i' → logprob: -11.384805679321289
    4. '[' → logprob: -11.634805679321289
    5. '(i' → logprob: -11.634805679321289
    6. '```' → logprob: -11.634805679321289
    7. ' [' → logprob: -12.634805679321289
    8. '   ' → logprob: -12.759805679321289
    9. '{i' → logprob: -13.759805679321289
    10. '[
' → logprob: -13.884805679321289

Token 1490: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00468371482565999
    2. '[i' → logprob: -6.254683494567871
    3. '+i' → logprob: -6.254683494567871
    4. ' +' → logprob: -7.379683494567871
    5. 'i' → logprob: -9.004683494567871
    6. '```' → logprob: -10.504683494567871
    7. '[' → logprob: -10.754683494567871
    8. '                   ' → logprob: -10.879683494567871
    9. '1' → logprob: -12.254683494567871
    10. '(i' → logprob: -12.754683494567871

Token 1491: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -15.375000953674316
    3. '
' → logprob: -15.500000953674316
    4. '           ' → logprob: -16.125
    5. ' ' → logprob: -16.625
    6. '   ' → logprob: -16.75
    7. '       ' → logprob: -17.375
    8. '2' → logprob: -17.625
    9. '                   ' → logprob: -18.125
    10. '0' → logprob: -18.125

Token 1492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.62500286102295
    4. '```' → logprob: -15.50000286102295
    5. '
' → logprob: -15.75000286102295
    6. '2' → logprob: -16.625001907348633
    7. '           ' → logprob: -16.750001907348633
    8. 'i' → logprob: -16.750001907348633
    9. '       ' → logprob: -16.875001907348633
    10. '                   ' → logprob: -18.375001907348633

Token 1493: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9783311486244202
    2. ')' → logprob: -1.1033310890197754
    3. '<|end|>' → logprob: -1.7283310890197754
    4. '                   ' → logprob: -2.9783310890197754
    5. '               ' → logprob: -3.6033310890197754
    6. '```' → logprob: -4.228331089019775
    7. '       ' → logprob: -4.978331089019775
    8. '<|end|>' → logprob: -5.353331089019775
    9. '           ' → logprob: -5.728331089019775
    10. ']
' → logprob: -6.103331089019775

Token 1494: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5842811465263367
    2. '```' → logprob: -0.8342811465263367
    3. '               ' → logprob: -5.709280967712402
    4. '``' → logprob: -5.959280967712402
    5. '           ' → logprob: -7.084280967712402
    6. '       ' → logprob: -7.709280967712402
    7. '                       ' → logprob: -7.709280967712402
    8. '<|end|>' → logprob: -8.834280967712402
    9. '                    
' → logprob: -9.209280967712402
    10. '
' → logprob: -9.334280967712402

Token 1495: ' if' (ID: 538)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.779836118221283
    2. '                   ' → logprob: -1.7798361778259277
    3. 'data' → logprob: -2.2798361778259277
    4. 'l' → logprob: -2.2798361778259277
    5. '               ' → logprob: -3.0298361778259277
    6. 'i' → logprob: -3.5298361778259277
    7. '           ' → logprob: -3.9048361778259277
    8. 'heap' → logprob: -3.9048361778259277
    9. 'for' → logprob: -4.779836177825928
    10. 'start' → logprob: -4.904836177825928

Token 1496: ' trash' (ID: 26508)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.5436205863952637
    2. 'cum' → logprob: -1.2936205863952637
    3. 'len' → logprob: -3.1686205863952637
    4. 'not' → logprob: -3.4186205863952637
    5. 'beam' → logprob: -3.9186205863952637
    6. 'start' → logprob: -4.418620586395264
    7. 'data' → logprob: -4.668620586395264
    8. 'que' → logprob: -4.793620586395264
    9. 'B' → logprob: -5.418620586395264
    10. 'end' → logprob: -5.793620586395264

Token 1497: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.24660931527614594
    2. '[' → logprob: -2.2466092109680176
    3. ' and' → logprob: -2.8716092109680176
    4. '```' → logprob: -2.9966092109680176
    5. '``' → logprob: -6.746609210968018
    6. '[i' → logprob: -7.371609210968018
    7. '[-' → logprob: -7.496609210968018
    8. ':' → logprob: -7.746609210968018
    9. '[len' → logprob: -7.871609210968018
    10. '                   ' → logprob: -8.246609687805176

Token 1498: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.47629913687705994
    2. '```' → logprob: -0.9762991666793823
    3. '``' → logprob: -7.101299285888672
    4. '                   ' → logprob: -7.101299285888672
    5. '                        ' → logprob: -9.351299285888672
    6. '                           ' → logprob: -9.351299285888672
    7. ',' → logprob: -9.851299285888672
    8. '                      ' → logprob: -9.976299285888672
    9. ' ```' → logprob: -10.101299285888672
    10. ':
' → logprob: -10.476299285888672

Token 1499: ' data' (ID: 1238)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.37696096301078796
    2. 'while' → logprob: -1.3769609928131104
    3. ' val' → logprob: -4.001960754394531
    4. ' while' → logprob: -4.251960754394531
    5. 'heap' → logprob: -5.001960754394531
    6. 'min' → logprob: -5.501960754394531
    7. '                   ' → logprob: -5.626960754394531
    8. 'v' → logprob: -6.126960754394531
    9. 'x' → logprob: -6.126960754394531
    10. '```' → logprob: -6.251960754394531

Token 1500: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7805956602096558
    2. '[i' → logprob: -1.0305956602096558
    3. '```' → logprob: -2.4055957794189453
    4. '[' → logprob: -2.5305957794189453
    5. 'i' → logprob: -5.405595779418945
    6. '[-' → logprob: -5.655595779418945
    7. '.append' → logprob: -6.405595779418945
    8. '   ' → logprob: -7.155595779418945
    9. '
' → logprob: -7.405595779418945
    10. '=' → logprob: -7.530595779418945

Token 1501: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05127232149243355
    2. '[-' → logprob: -3.176272392272949
    3. '[' → logprob: -5.176272392272949
    4. '```' → logprob: -7.301272392272949
    5. '[data' → logprob: -8.42627239227295
    6. '                   ' → logprob: -8.55127239227295
    7. ' =' → logprob: -8.67627239227295
    8. 'data' → logprob: -8.67627239227295
    9. '=' → logprob: -8.92627239227295
    10. '
' → logprob: -9.05127239227295

Token 1502: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.957192599773407
    2. '[-' → logprob: -0.957192599773407
    3. ']' → logprob: -2.5821926593780518
    4. ' =' → logprob: -3.3321926593780518
    5. ')' → logprob: -3.4571926593780518
    6. '=' → logprob: -3.5821926593780518
    7. '][-' → logprob: -4.457192420959473
    8. ']=' → logprob: -4.582192420959473
    9. '.pop' → logprob: -5.207192420959473
    10. '].' → logprob: -5.457192420959473

Token 1503: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13247050344944
    2. ' =' → logprob: -2.1324706077575684
    3. '[-' → logprob: -6.257470607757568
    4. '[' → logprob: -7.007470607757568
    5. ',' → logprob: -7.507470607757568
    6. '   ' → logprob: -8.00747013092041
    7. '.pop' → logprob: -8.00747013092041
    8. '.append' → logprob: -8.13247013092041
    9. '=-' → logprob: -8.13247013092041
    10. '=min' → logprob: -8.50747013092041

Token 1504: ' S' (ID: 336)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.10651999711990356
    2. '-trash' → logprob: -2.356519937515259
    3. '-tr' → logprob: -5.606520175933838
    4. '-' → logprob: -6.606520175933838
    5. ' trash' → logprob: -7.981520175933838
    6. 'tras' → logprob: -8.10651969909668
    7. ' -' → logprob: -8.48151969909668
    8. 'heap' → logprob: -8.85651969909668
    9. 'tr' → logprob: -9.23151969909668
    10. '-t' → logprob: -9.98151969909668

Token 1505: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011367550177965313
    2. '   ' → logprob: -9.875113487243652
    3. '       ' → logprob: -11.375113487243652
    4. '
' → logprob: -11.625113487243652
    5. '```' → logprob: -11.875113487243652
    6. '[' → logprob: -12.500113487243652
    7. '₂' → logprob: -12.500113487243652
    8. '        ' → logprob: -12.500113487243652
    9. '    ' → logprob: -12.625113487243652
    10. '           ' → logprob: -12.875113487243652

Token 1506: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28946661949157715
    2. '+' → logprob: -1.5394666194915771
    3. ' -' → logprob: -3.414466619491577
    4. '-' → logprob: -6.039466857910156
    5. '<|end|>' → logprob: -7.289466857910156
    6. ')' → logprob: -8.789466857910156
    7. ' ' → logprob: -8.914466857910156
    8. '[' → logprob: -9.039466857910156
    9. '[-' → logprob: -9.789466857910156
    10. '+
' → logprob: -9.789466857910156

Token 1507: ' data' (ID: 1238)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.07253621518611908
    2. 'heap' → logprob: -2.6975362300872803
    3. 'min' → logprob: -6.822535991668701
    4. '-trash' → logprob: -7.322535991668701
    5. 'max' → logprob: -8.19753646850586
    6. '-' → logprob: -8.57253646850586
    7. 'tr' → logprob: -9.44753646850586
    8. 'tras' → logprob: -9.44753646850586
    9. '-tr' → logprob: -9.57253646850586
    10. 'data' → logprob: -9.94753646850586

Token 1508: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012197980657219887
    2. '[N' → logprob: -4.637197971343994
    3. '[' → logprob: -6.262197971343994
    4. '```' → logprob: -8.637198448181152
    5. 'i' → logprob: -9.262198448181152
    6. '[len' → logprob: -9.387198448181152
    7. '`' → logprob: -9.762198448181152
    8. '   ' → logprob: -10.887198448181152
    9. 'len' → logprob: -11.012198448181152
    10. 'N' → logprob: -11.012198448181152

Token 1509: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02935211732983589
    2. '[i' → logprob: -3.7793521881103516
    3. '+i' → logprob: -5.279352188110352
    4. ' +' → logprob: -7.279352188110352
    5. 'i' → logprob: -9.154352188110352
    6. '[' → logprob: -9.529352188110352
    7. '+[' → logprob: -10.904352188110352
    8. '+
' → logprob: -11.029352188110352
    9. '       ' → logprob: -11.279352188110352
    10. '```' → logprob: -11.279352188110352

Token 1510: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -12.12501335144043
    3. '
' → logprob: -12.62501335144043
    4. 'i' → logprob: -12.87501335144043
    5. '   ' → logprob: -14.12501335144043
    6. '(i' → logprob: -15.00001335144043
    7. '[i' → logprob: -15.25001335144043
    8. '```' → logprob: -15.93751335144043
    9. '       ' → logprob: -16.31251335144043
    10. 'len' → logprob: -16.37501335144043

Token 1511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.625008583068848
    3. '
' → logprob: -13.125008583068848
    4. '2' → logprob: -14.125008583068848
    5. '   ' → logprob: -14.375008583068848
    6. '```' → logprob: -14.500008583068848
    7. 'i' → logprob: -15.000008583068848
    8. '`' → logprob: -16.37500762939453
    9. '``' → logprob: -16.62500762939453
    10. '0' → logprob: -16.62500762939453

Token 1512: ']' (ID: 60)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.491373062133789
    2. '[' → logprob: -1.616373062133789
    3. ' +' → logprob: -1.616373062133789
    4. '                   ' → logprob: -2.366373062133789
    5. ' -' → logprob: -2.616373062133789
    6. '+' → logprob: -3.116373062133789
    7. '-' → logprob: -3.116373062133789
    8. '                           ' → logprob: -3.241373062133789
    9. '```' → logprob: -3.366373062133789
    10. ')' → logprob: -4.116373062133789

Token 1513: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1514: ' trash' (ID: 26508)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.6047085523605347
    2. '-trash' → logprob: -0.9797085523605347
    3. '-tr' → logprob: -2.979708671569824
    4. 'heap' → logprob: -3.854708671569824
    5. '-' → logprob: -6.354708671569824
    6. '(-' → logprob: -6.479708671569824
    7. ' -' → logprob: -6.729708671569824
    8. 'tras' → logprob: -7.229708671569824
    9. 'tr' → logprob: -8.104708671569824
    10. '   ' → logprob: -8.854708671569824

Token 1515: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019221604452468455
    2. 'q' → logprob: -9.000192642211914
    3. '```' → logprob: -9.875192642211914
    4. '[-' → logprob: -12.250192642211914
    5. '[
' → logprob: -12.250192642211914
    6. '`' → logprob: -13.375192642211914
    7. 'Q' → logprob: -13.500192642211914
    8. 'heap' → logprob: -13.625192642211914
    9. '   ' → logprob: -14.125192642211914
    10. '
' → logprob: -14.250192642211914

Token 1516: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. '
' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.250003814697266
    4. '```' → logprob: -16.125003814697266
    5. ' ' → logprob: -16.250003814697266
    6. '﻿' → logprob: -17.250003814697266
    7. '-' → logprob: -17.500003814697266
    8. '  ' → logprob: -17.937503814697266
    9. '[' → logprob: -18.187503814697266
    10. '``' → logprob: -18.500003814697266

Token 1517: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5841032266616821
    2. '[' → logprob: -1.2091032266616821
    3. '<|end|>' → logprob: -2.0841031074523926
    4. '```' → logprob: -5.084103107452393
    5. ')' → logprob: -5.584103107452393
    6. '<|end|>' → logprob: -5.584103107452393
    7. '])' → logprob: -6.209103107452393
    8. '][' → logprob: -7.334103107452393
    9. '()' → logprob: -7.834103107452393
    10. ']()' → logprob: -8.08410358428955

Token 1518: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9761136174201965
    2. '```' → logprob: -1.2261135578155518
    3. '               ' → logprob: -1.8511135578155518
    4. ')' → logprob: -2.3511135578155518
    5. '           ' → logprob: -3.2261135578155518
    6. '                       ' → logprob: -4.101113796234131
    7. '       ' → logprob: -5.101113796234131
    8. '<|end|>' → logprob: -5.476113796234131
    9. '                           ' → logprob: -6.226113796234131
    10. '``' → logprob: -6.226113796234131

Token 1519: ' else' (ID: 1203)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33001619577407837
    2. '               ' → logprob: -2.2050161361694336
    3. '```' → logprob: -2.2050161361694336
    4. '           ' → logprob: -3.4550161361694336
    5. '<|end|>' → logprob: -4.705016136169434
    6. '                       ' → logprob: -4.830016136169434
    7. '       ' → logprob: -5.955016136169434
    8. 'heap' → logprob: -6.080016136169434
    9. ')' → logprob: -6.705016136169434
    10. '                ' → logprob: -7.705016136169434

Token 1520: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47315648198127747
    2. '                       ' → logprob: -1.473156452178955
    3. ':' → logprob: -2.348156452178955
    4. '                   ' → logprob: -2.973156452178955
    5. '):
' → logprob: -7.973156452178955
    6. '               ' → logprob: -8.848156929016113
    7. 'None' → logprob: -9.348156929016113
    8. '=' → logprob: -9.848156929016113
    9. '       ' → logprob: -9.973156929016113
    10. '```' → logprob: -9.973156929016113

Token 1521: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8183559775352478
    2. '```' → logprob: -0.9433559775352478
    3. '                       ' → logprob: -1.8183560371398926
    4. '``' → logprob: -5.443356037139893
    5. '               ' → logprob: -6.943356037139893
    6. 'heap' → logprob: -7.443356037139893
    7. '           ' → logprob: -7.568356037139893
    8. '       ' → logprob: -8.693355560302734
    9. '                    ' → logprob: -9.318355560302734
    10. 'data' → logprob: -9.443355560302734

Token 1522: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -4.6087021473795176e-05
    2. ' data' → logprob: -10.875045776367188
    3. '10' → logprob: -11.375045776367188
    4. '0' → logprob: -12.375045776367188
    5. '                   ' → logprob: -12.375045776367188
    6. 'pass' → logprob: -12.625045776367188
    7. '   ' → logprob: -13.875045776367188
    8. '                       ' → logprob: -14.250045776367188
    9. 'S' → logprob: -14.500045776367188
    10. 'heap' → logprob: -15.000045776367188

Token 1523: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015424156561493874
    2. '[' → logprob: -4.2654242515563965
    3. ' =' → logprob: -7.2654242515563965
    4. '=' → logprob: -8.140423774719238
    5. '```' → logprob: -9.140423774719238
    6. '.append' → logprob: -9.640423774719238
    7. '   ' → logprob: -10.765423774719238
    8. '[-' → logprob: -10.890423774719238
    9. '       ' → logprob: -11.015423774719238
    10. '[
' → logprob: -12.265423774719238

Token 1524: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.687536358833313
    2. '[i' → logprob: -0.812536358833313
    3. '.append' → logprob: -3.4375362396240234
    4. ' =' → logprob: -4.437536239624023
    5. '[' → logprob: -5.062536239624023
    6. '[
' → logprob: -7.312536239624023
    7. '```' → logprob: -7.312536239624023
    8. '[:]' → logprob: -7.437536239624023
    9. '[-' → logprob: -7.812536239624023
    10. '=i' → logprob: -8.937536239624023

Token 1525: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26745811104774475
    2. ' =' → logprob: -1.7674580812454224
    3. ']' → logprob: -3.017458200454712
    4. '[' → logprob: -5.142457962036133
    5. '.append' → logprob: -5.267457962036133
    6. '[i' → logprob: -6.892457962036133
    7. '[:]' → logprob: -7.017457962036133
    8. ']=' → logprob: -7.642457962036133
    9. ')' → logprob: -7.767457962036133
    10. '```' → logprob: -8.267457962036133

Token 1526: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012798984535038471
    2. '.append' → logprob: -4.51279878616333
    3. ' =' → logprob: -6.38779878616333
    4. '[:]' → logprob: -11.012799263000488
    5. '```' → logprob: -11.137799263000488
    6. '+=' → logprob: -11.637799263000488
    7. '=
' → logprob: -11.887799263000488
    8. '.extend' → logprob: -12.262799263000488
    9. '   ' → logprob: -12.387799263000488
    10. 'append' → logprob: -12.512799263000488

Token 1527: ' S' (ID: 336)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.11158110946416855
    2. '10' → logprob: -2.4865810871124268
    3. 'S' → logprob: -4.611581325531006
    4. 'seg' → logprob: -4.861581325531006
    5. 'data' → logprob: -5.986581325531006
    6. ' ide' → logprob: -8.486580848693848
    7. 'Seg' → logprob: -8.486580848693848
    8. 'self' → logprob: -8.611580848693848
    9. 'float' → logprob: -8.611580848693848
    10. ' ' → logprob: -8.861580848693848

Token 1528: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5329347252845764
    2. '[' → logprob: -0.9079347252845764
    3. '[i' → logprob: -5.407934665679932
    4. '```' → logprob: -5.782934665679932
    5. '**' → logprob: -7.532934665679932
    6. '_' → logprob: -7.782934665679932
    7. 'q' → logprob: -8.03293514251709
    8. '[
' → logprob: -8.90793514251709
    9. '   ' → logprob: -9.15793514251709
    10. '[-' → logprob: -9.53293514251709

Token 1529: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8028285503387451
    2. '<|end|>' → logprob: -1.1778285503387451
    3. '+' → logprob: -1.4278285503387451
    4. '<|end|>' → logprob: -6.802828788757324
    5. '[' → logprob: -7.177828788757324
    6. '```' → logprob: -7.177828788757324
    7. ')' → logprob: -7.552828788757324
    8. '0' → logprob: -8.927828788757324
    9. '#' → logprob: -9.302828788757324
    10. '
' → logprob: -9.552828788757324

Token 1530: ' data' (ID: 1238)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04471489414572716
    2. 'que' → logprob: -3.79471492767334
    3. 'heap' → logprob: -4.79471492767334
    4. ' ' → logprob: -4.79471492767334
    5. 'trash' → logprob: -6.04471492767334
    6. 'data' → logprob: -7.54471492767334
    7. 'test' → logprob: -7.54471492767334
    8. ' que' → logprob: -7.91971492767334
    9. 'queue' → logprob: -8.04471492767334
    10. ' heap' → logprob: -9.16971492767334

Token 1531: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014934792183339596
    2. '2' → logprob: -4.26493501663208
    3. '0' → logprob: -8.139934539794922
    4. '```' → logprob: -8.389934539794922
    5. '   ' → logprob: -8.764934539794922
    6. 'heap' → logprob: -11.139934539794922
    7. '1' → logprob: -11.264934539794922
    8. '
' → logprob: -11.514934539794922
    9. '[
' → logprob: -11.514934539794922
    10. 'q' → logprob: -12.014934539794922

Token 1532: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00471611088141799
    2. '2' → logprob: -6.129715919494629
    3. '```' → logprob: -6.754715919494629
    4. '+' → logprob: -6.879715919494629
    5. '   ' → logprob: -9.254715919494629
    6. '1' → logprob: -9.504715919494629
    7. ' +' → logprob: -9.754715919494629
    8. 'import' → logprob: -10.629715919494629
    9. '
' → logprob: -11.504715919494629
    10. ']' → logprob: -11.629715919494629

Token 1533: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.706686690449715e-05
    2. '2' → logprob: -10.250066757202148
    3. ' ' → logprob: -11.375066757202148
    4. '
' → logprob: -11.500066757202148
    5. '   ' → logprob: -12.562566757202148
    6. '0' → logprob: -13.312566757202148
    7. '```' → logprob: -13.312566757202148
    8. '`' → logprob: -14.875066757202148
    9. '3' → logprob: -15.562566757202148
    10. '  ' → logprob: -15.625066757202148

Token 1534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3596853831550106e-05
    2. '2' → logprob: -10.500053405761719
    3. ' ' → logprob: -11.375053405761719
    4. '
' → logprob: -11.500053405761719
    5. '```' → logprob: -13.375053405761719
    6. '   ' → logprob: -13.812553405761719
    7. '0' → logprob: -14.625053405761719
    8. '  ' → logprob: -15.875053405761719
    9. '`' → logprob: -16.00005340576172
    10. '``' → logprob: -16.31255340576172

Token 1535: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006588897202163935
    2. '+' → logprob: -5.881588935852051
    3. ']' → logprob: -6.506588935852051
    4. ' +' → logprob: -6.506588935852051
    5. ')' → logprob: -8.88158893585205
    6. '[-' → logprob: -9.00658893585205
    7. '```' → logprob: -9.13158893585205
    8. '-' → logprob: -9.38158893585205
    9. '][' → logprob: -9.63158893585205
    10. ' -' → logprob: -10.00658893585205

Token 1536: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2047993242740631
    2. '                   ' → logprob: -2.3297994136810303
    3. '               ' → logprob: -2.7047994136810303
    4. '```' → logprob: -3.9547994136810303
    5. '       ' → logprob: -6.579799175262451
    6. '                       ' → logprob: -9.45479965209961
    7. '``' → logprob: -9.45479965209961
    8. '<|end|>' → logprob: -9.70479965209961
    9. '   ' → logprob: -9.95479965209961
    10. '
' → logprob: -10.07979965209961

Token 1537: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5376657247543335
    2. '                   ' → logprob: -1.0376657247543335
    3. '           ' → logprob: -3.537665843963623
    4. '```' → logprob: -3.537665843963623
    5. '       ' → logprob: -6.537665843963623
    6. '<|end|>' → logprob: -6.787665843963623
    7. '                       ' → logprob: -8.162665367126465
    8. '                ' → logprob: -9.037665367126465
    9. '              ' → logprob: -9.287665367126465
    10. '<|end|>' → logprob: -9.412665367126465

Token 1538: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.794512927532196
    2. ':
' → logprob: -1.0445129871368408
    3. '                   ' → logprob: -1.7945129871368408
    4. '```' → logprob: -4.169512748718262
    5. '           ' → logprob: -5.044512748718262
    6. '               ' → logprob: -5.169512748718262
    7. '   ' → logprob: -7.169512748718262
    8. '       ' → logprob: -7.419512748718262
    9. '                       ' → logprob: -7.794512748718262
    10. '<|end|>' → logprob: -8.669512748718262

Token 1539: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3517667055130005
    2. '           ' → logprob: -2.226766586303711
    3. '```' → logprob: -2.226766586303711
    4. '               ' → logprob: -2.851766586303711
    5. '       ' → logprob: -3.976766586303711
    6. '                       ' → logprob: -5.851766586303711
    7. '``' → logprob: -6.976766586303711
    8. '   ' → logprob: -8.226766586303711
    9. 'continue' → logprob: -9.601766586303711
    10. 'for' → logprob: -10.351766586303711

Token 1540: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.020872578024864197
    2. '                   ' → logprob: -4.145872592926025
    3. 'for' → logprob: -6.395872592926025
    4. '```' → logprob: -6.520872592926025
    5. '                       ' → logprob: -7.770872592926025
    6. 'pass' → logprob: -7.895872592926025
    7. '               ' → logprob: -7.895872592926025
    8. '           ' → logprob: -8.770872116088867
    9. ' data' → logprob: -9.270872116088867
    10. '       ' → logprob: -9.520872116088867

Token 1541: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010674840770661831
    2. '1' → logprob: -4.885674953460693
    3. '[i' → logprob: -6.385674953460693
    4. '[' → logprob: -7.635674953460693
    5. '```' → logprob: -7.635674953460693
    6. '   ' → logprob: -8.885674476623535
    7. ' =' → logprob: -9.385674476623535
    8. '=' → logprob: -10.260674476623535
    9. '[
' → logprob: -10.760674476623535
    10. '.append' → logprob: -10.885674476623535

Token 1542: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006774079520255327
    2. '[-' → logprob: -8.500677108764648
    3. '[' → logprob: -8.875677108764648
    4. '```' → logprob: -8.875677108764648
    5. '[N' → logprob: -9.250677108764648
    6. ' =' → logprob: -10.375677108764648
    7. '.append' → logprob: -10.625677108764648
    8. '=' → logprob: -11.250677108764648
    9. '   ' → logprob: -11.875677108764648
    10. '
' → logprob: -11.875677108764648

Token 1543: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11575151979923248
    2. ']' → logprob: -2.4907515048980713
    3. ' =' → logprob: -3.7407515048980713
    4. ']=' → logprob: -6.11575174331665
    5. ')' → logprob: -8.115751266479492
    6. '=
' → logprob: -9.490751266479492
    7. '[' → logprob: -10.115751266479492
    8. '                   ' → logprob: -10.615751266479492
    9. '```' → logprob: -10.615751266479492
    10. ')=' → logprob: -11.865751266479492

Token 1544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004969134461134672
    2. ' =' → logprob: -7.625496864318848
    3. '=
' → logprob: -11.875496864318848
    4. ')' → logprob: -14.000496864318848
    5. '=data' → logprob: -14.750496864318848
    6. '<|end|>' → logprob: -16.250497817993164
    7. '```' → logprob: -16.250497817993164
    8. '=None' → logprob: -16.625497817993164
    9. ',' → logprob: -16.750497817993164
    10. '   ' → logprob: -17.000497817993164

Token 1545: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.069664333248511e-05
    2. '10' → logprob: -11.500020980834961
    3. ' S' → logprob: -12.000020980834961
    4. '0' → logprob: -13.500020980834961
    5. 'ide' → logprob: -13.625020980834961
    6. '   ' → logprob: -14.875020980834961
    7. 'float' → logprob: -15.250020980834961
    8. 'min' → logprob: -15.750020980834961
    9. ' ' → logprob: -15.875020980834961
    10. '  ' → logprob: -16.00002098083496

Token 1546: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012144023785367608
    2. '[i' → logprob: -6.876214504241943
    3. '```' → logprob: -9.626214027404785
    4. '   ' → logprob: -10.126214027404785
    5. '[' → logprob: -10.501214027404785
    6. 'i' → logprob: -11.001214027404785
    7. '\[' → logprob: -11.876214027404785
    8. '_' → logprob: -12.751214027404785
    9. '[S' → logprob: -12.876214027404785
    10. '       ' → logprob: -13.251214027404785

Token 1547: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1548: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.33462193608283997
    2. '                   ' → logprob: -1.3346219062805176
    3. '       ' → logprob: -5.209621906280518
    4. '``' → logprob: -5.334621906280518
    5. '           ' → logprob: -5.334621906280518
    6. '               ' → logprob: -5.584621906280518
    7. '<|end|>' → logprob: -6.584621906280518
    8. '                       ' → logprob: -8.209622383117676
    9. '   ' → logprob: -8.209622383117676
    10. '\' → logprob: -9.834622383117676

Token 1549: ' if' (ID: 538)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.00841078907251358
    2. '```' → logprob: -5.383410930633545
    3. '                   ' → logprob: -5.633410930633545
    4. ' data' → logprob: -9.383410453796387
    5. '               ' → logprob: -10.258410453796387
    6. '           ' → logprob: -10.508410453796387
    7. '       ' → logprob: -11.008410453796387
    8. '                       ' → logprob: -11.133410453796387
    9. '   ' → logprob: -11.758410453796387
    10. '``' → logprob: -12.133410453796387

Token 1550: ' trash' (ID: 26508)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.006532523315399885
    2. ' trash' → logprob: -5.131532669067383
    3. '   ' → logprob: -8.756532669067383
    4. 'len' → logprob: -9.131532669067383
    5. 'i' → logprob: -9.256532669067383
    6. 'cnt' → logprob: -9.506532669067383
    7. 'tr' → logprob: -10.631532669067383
    8. 'data' → logprob: -10.631532669067383
    9. 'N' → logprob: -10.756532669067383
    10. ' i' → logprob: -11.131532669067383

Token 1551: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.2819359302520752
    2. ':' → logprob: -1.4069359302520752
    3. ':
' → logprob: -1.4069359302520752
    4. ' and' → logprob: -2.031935930252075
    5. '[' → logprob: -2.656935930252075
    6. '```' → logprob: -3.781935930252075
    7. '[i' → logprob: -5.406935691833496
    8. '``' → logprob: -7.031935691833496
    9. '):
' → logprob: -7.281935691833496
    10. '   ' → logprob: -7.656935691833496

Token 1552: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5681655406951904
    2. '                       ' → logprob: -0.9431655406951904
    3. '                   ' → logprob: -3.6931655406951904
    4. '[' → logprob: -4.4431657791137695
    5. ' =' → logprob: -5.9431657791137695
    6. '``' → logprob: -6.5681657791137695
    7. ':' → logprob: -7.0681657791137695
    8. '=' → logprob: -7.4431657791137695
    9. '                        ' → logprob: -7.6931657791137695
    10. '                           ' → logprob: -7.9431657791137695

Token 1553: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.03600689023733139
    2. ' data' → logprob: -4.036006927490234
    3. '```' → logprob: -4.161006927490234
    4. 'heap' → logprob: -6.786006927490234
    5. '``' → logprob: -7.911006927490234
    6. '                       ' → logprob: -8.286006927490234
    7. '                   ' → logprob: -8.661006927490234
    8. '                           ' → logprob: -9.661006927490234
    9. '   ' → logprob: -10.286006927490234
    10. '                               ' → logprob: -10.536006927490234

Token 1554: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007156603503972292
    2. '```' → logprob: -5.5071563720703125
    3. '[' → logprob: -6.5071563720703125
    4. '[i' → logprob: -7.0071563720703125
    5. '
' → logprob: -7.7571563720703125
    6. '   ' → logprob: -9.257156372070312
    7. '1' → logprob: -10.257156372070312
    8. '``' → logprob: -10.882156372070312
    9. 'heap' → logprob: -10.882156372070312
    10. '#' → logprob: -11.632156372070312

Token 1555: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.813969957875088e-05
    2. '```' → logprob: -9.750067710876465
    3. '[' → logprob: -12.375067710876465
    4. '[
' → logprob: -13.375067710876465
    5. '   ' → logprob: -13.750067710876465
    6. '
' → logprob: -14.375067710876465
    7. '[I' → logprob: -14.750067710876465
    8. '.append' → logprob: -15.000067710876465
    9. ' =' → logprob: -15.000067710876465
    10. '=' → logprob: -15.000067710876465

Token 1556: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01676763966679573
    2. ']' → logprob: -4.266767501831055
    3. '[' → logprob: -6.516767501831055
    4. ' =' → logprob: -7.516767501831055
    5. '=' → logprob: -8.391767501831055
    6. '   ' → logprob: -9.016767501831055
    7. 'i' → logprob: -9.016767501831055
    8. '```' → logprob: -10.516767501831055
    9. '
' → logprob: -10.891767501831055
    10. '[
' → logprob: -11.641767501831055

Token 1557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006118744611740112
    2. ' =' → logprob: -5.1311187744140625
    3. '[i' → logprob: -9.381118774414062
    4. '[' → logprob: -9.881118774414062
    5. '```' → logprob: -10.756118774414062
    6. '   ' → logprob: -11.256118774414062
    7. '+=' → logprob: -11.881118774414062
    8. '=
' → logprob: -12.131118774414062
    9. '=i' → logprob: -13.131118774414062
    10. '[-' → logprob: -13.506118774414062

Token 1558: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0028937978204339743
    2. ' S' → logprob: -5.877893924713135
    3. 'data' → logprob: -9.627893447875977
    4. '10' → logprob: -12.002893447875977
    5. ' data' → logprob: -12.002893447875977
    6. 'max' → logprob: -12.252893447875977
    7. '   ' → logprob: -12.502893447875977
    8. '_S' → logprob: -14.752893447875977
    9. 'min' → logprob: -14.877893447875977
    10. ' ' → logprob: -14.877893447875977

Token 1559: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04463977366685867
    2. '[' → logprob: -3.169639825820923
    3. '[i' → logprob: -6.794639587402344
    4. '_' → logprob: -8.669639587402344
    5. 'S' → logprob: -8.794639587402344
    6. '```' → logprob: -9.169639587402344
    7. '`' → logprob: -11.169639587402344
    8. '   ' → logprob: -11.294639587402344
    9. '[S' → logprob: -11.419639587402344
    10. '₂' → logprob: -12.044639587402344

Token 1560: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38697442412376404
    2. '+' → logprob: -1.1369744539260864
    3. '[' → logprob: -10.511974334716797
    4. '```' → logprob: -10.636974334716797
    5. '<|end|>' → logprob: -11.136974334716797
    6. '+
' → logprob: -11.261974334716797
    7. '
' → logprob: -12.011974334716797
    8. ')' → logprob: -12.761974334716797
    9. '+[' → logprob: -12.761974334716797
    10. ' +
' → logprob: -13.011974334716797

Token 1561: ' trash' (ID: 26508)
  Prédit: 'trash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trash' → logprob: -0.006725437473505735
    2. ' trash' → logprob: -5.006725311279297
    3. 'tras' → logprob: -12.756725311279297
    4. 'tr' → logprob: -12.756725311279297
    5. '0' → logprob: -13.006725311279297
    6. '-trash' → logprob: -14.006725311279297
    7. '   ' → logprob: -15.256725311279297
    8. 'Trash' → logprob: -16.131725311279297
    9. 'trap' → logprob: -16.131725311279297
    10. '
' → logprob: -16.381725311279297

Token 1562: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0325924449716695e-05
    2. '[
' → logprob: -11.75001049041748
    3. '0' → logprob: -13.75001049041748
    4. '```' → logprob: -13.75001049041748
    5. 'import' → logprob: -16.500009536743164
    6. '`' → logprob: -16.625009536743164
    7. '#' → logprob: -17.500009536743164
    8. '\[' → logprob: -18.000009536743164
    9. '
' → logprob: -18.125009536743164
    10. 'q' → logprob: -18.250009536743164

Token 1563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931595206260681
    2. '[' → logprob: -0.6931595206260681
    3. '```' → logprob: -12.068159103393555
    4. 'import' → logprob: -13.193159103393555
    5. '   ' → logprob: -13.818159103393555
    6. '#' → logprob: -13.818159103393555
    7. '[
' → logprob: -14.068159103393555
    8. ' ' → logprob: -14.693159103393555
    9. '
' → logprob: -14.943159103393555
    10. '(' → logprob: -15.318159103393555

Token 1564: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6648507118225098
    2. ']' → logprob: -0.7898507118225098
    3. '                   ' → logprob: -3.7898507118225098
    4. '```' → logprob: -5.66485071182251
    5. '                       ' → logprob: -6.53985071182251
    6. ')' → logprob: -7.28985071182251
    7. '           ' → logprob: -7.41485071182251
    8. '       ' → logprob: -7.66485071182251
    9. ')
' → logprob: -7.78985071182251
    10. '}
' → logprob: -7.91485071182251

Token 1565: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.18438784778118134
    2. '                   ' → logprob: -1.9343878030776978
    3. '               ' → logprob: -4.059387683868408
    4. '           ' → logprob: -5.434387683868408
    5. '       ' → logprob: -7.059387683868408
    6. '``' → logprob: -7.684387683868408
    7. '<|end|>' → logprob: -7.809387683868408
    8. '                       ' → logprob: -8.184388160705566
    9. '   ' → logprob: -9.184388160705566
    10. 'else' → logprob: -10.434388160705566

Token 1566: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.27797532081604
    2. '```' → logprob: -1.52797532081604
    3. '                   ' → logprob: -1.65297532081604
    4. 'else' (adapté à ' else') → logprob: -1.90297532081604
    5. '   ' → logprob: -3.15297532081604
    6. ')' → logprob: -3.40297532081604
    7. '           ' → logprob: -3.52797532081604
    8. ' else' → logprob: -3.90297532081604
    9. '                       ' → logprob: -4.902975082397461
    10. '       ' → logprob: -4.902975082397461

Token 1567: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.22898167371749878
    2. ':
' → logprob: -1.7289817333221436
    3. ':' → logprob: -3.8539817333221436
    4. '                           ' → logprob: -5.8539814949035645
    5. '                   ' → logprob: -6.2289814949035645
    6. '                        ' → logprob: -8.103981971740723
    7. '[' → logprob: -8.978981971740723
    8. '0' → logprob: -8.978981971740723
    9. '                      ' → logprob: -9.478981971740723
    10. '{
' → logprob: -9.728981971740723

Token 1568: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09210706502199173
    2. '0' → logprob: -2.592107057571411
    3. '                   ' → logprob: -5.59210729598999
    4. '10' → logprob: -5.84210729598999
    5. '                           ' → logprob: -6.21710729598999
    6. '                        ' → logprob: -6.34210729598999
    7. '                    ' → logprob: -7.71710729598999
    8. 'data' → logprob: -7.96710729598999
    9. '                      ' → logprob: -8.092106819152832
    10. '           ' → logprob: -8.217106819152832

Token 1569: ' data' (ID: 1238)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.07891611754894257
    2. 'data' (adapté à ' data') → logprob: -2.578916072845459
    3. ' data' → logprob: -11.828916549682617
    4. '                   ' → logprob: -11.828916549682617
    5. ' S' → logprob: -12.203916549682617
    6. '               ' → logprob: -13.703916549682617
    7. '0' → logprob: -13.828916549682617
    8. '                       ' → logprob: -13.953916549682617
    9. '           ' → logprob: -14.203916549682617
    10. '   ' → logprob: -14.453916549682617

Token 1570: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008101735264062881
    2. '[i' → logprob: -5.008101940155029
    3. '[' → logprob: -7.008101940155029
    4. '   ' → logprob: -8.633101463317871
    5. '1' → logprob: -9.133101463317871
    6. '```' → logprob: -9.508101463317871
    7. '_' → logprob: -9.758101463317871
    8. '[
' → logprob: -10.133101463317871
    9. '
' → logprob: -12.258101463317871
    10. ']' → logprob: -13.133101463317871

Token 1571: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.2166411478538066e-05
    2. '[' → logprob: -10.750052452087402
    3. '   ' → logprob: -11.500052452087402
    4. ' =' → logprob: -11.750052452087402
    5. '```' → logprob: -12.000052452087402
    6. ' [' → logprob: -13.125052452087402
    7. '=' → logprob: -13.375052452087402
    8. '                   ' → logprob: -13.625052452087402
    9. '[
' → logprob: -14.750052452087402
    10. '`' → logprob: -15.250052452087402

Token 1572: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12840349972248077
    2. '[i' → logprob: -2.128403425216675
    3. '=' → logprob: -7.003403663635254
    4. ']=' → logprob: -7.753403663635254
    5. '[' → logprob: -10.253403663635254
    6. '                   ' → logprob: -10.378403663635254
    7. ' =' → logprob: -10.753403663635254
    8. '   ' → logprob: -11.628403663635254
    9. ']
' → logprob: -11.628403663635254
    10. '[
' → logprob: -11.753403663635254

Token 1573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01104935072362423
    2. ' =' → logprob: -4.511049270629883
    3. '=
' → logprob: -13.886049270629883
    4. ']' → logprob: -15.386049270629883
    5. '                   ' → logprob: -16.136049270629883
    6. ']=' → logprob: -16.636049270629883
    7. '[' → logprob: -16.761049270629883
    8. '           ' → logprob: -16.761049270629883
    9. ' =
' → logprob: -16.886049270629883
    10. '```' → logprob: -17.011049270629883

Token 1574: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.668304245569743e-05
    2. ' S' → logprob: -10.000046730041504
    3. '10' → logprob: -14.000046730041504
    4. '   ' → logprob: -15.875046730041504
    5. '0' → logprob: -16.625045776367188
    6. '                   ' → logprob: -16.875045776367188
    7. '_S' → logprob: -17.750045776367188
    8. '           ' → logprob: -18.000045776367188
    9. ' ' → logprob: -18.125045776367188
    10. '               ' → logprob: -18.500045776367188

Token 1575: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010277166962623596
    2. '_' → logprob: -4.635277271270752
    3. '[' → logprob: -8.760276794433594
    4. '```' → logprob: -9.010276794433594
    5. '15' → logprob: -9.635276794433594
    6. '`' → logprob: -9.885276794433594
    7. '[i' → logprob: -10.635276794433594
    8. '[
' → logprob: -11.135276794433594
    9. '0' → logprob: -11.510276794433594
    10. '_
' → logprob: -11.510276794433594

Token 1576: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4427240490913391
    2. '                   ' → logprob: -1.5677239894866943
    3. '               ' → logprob: -2.5677239894866943
    4. '<|end|>' → logprob: -3.4427239894866943
    5. '```' → logprob: -3.5677239894866943
    6. '       ' → logprob: -5.192724227905273
    7. '<|end|>' → logprob: -6.317724227905273
    8. '   ' → logprob: -6.692724227905273
    9. '
' → logprob: -7.567724227905273
    10. '                       ' → logprob: -7.817724227905273

Token 1577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07010793685913086
    2. '   ' → logprob: -3.570107936859131
    3. '```' → logprob: -3.945107936859131
    4. 'for' → logprob: -4.695107936859131
    5. '
' → logprob: -5.070107936859131
    6. '           ' → logprob: -5.695107936859131
    7. '               ' → logprob: -7.070107936859131
    8. '                   ' → logprob: -7.820107936859131
    9. '#' → logprob: -9.945108413696289
    10. ' for' → logprob: -10.570108413696289

Token 1578: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.060819581151008606
    2. '   ' → logprob: -3.435819625854492
    3. 'seg' → logprob: -5.435819625854492
    4. 'from' → logprob: -5.435819625854492
    5. '#' → logprob: -5.685819625854492
    6. '       ' → logprob: -5.810819625854492
    7. 'best' → logprob: -6.810819625854492
    8. 'st' → logprob: -6.935819625854492
    9. 'pos' → logprob: -7.060819625854492
    10. 'i' → logprob: -7.060819625854492

Token 1579: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008082019630819559
    2. ' i' → logprob: -7.375808238983154
    3. 'j' → logprob: -9.000807762145996
    4. '_i' → logprob: -11.250807762145996
    5. '_' → logprob: -11.375807762145996
    6. 'x' → logprob: -11.750807762145996
    7. 'idx' → logprob: -11.750807762145996
    8. 'k' → logprob: -12.500807762145996
    9. 'v' → logprob: -13.000807762145996
    10. 'l' → logprob: -13.000807762145996

Token 1580: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3134360611438751
    2. ' in' → logprob: -1.3134360313415527
    3. ',' → logprob: -9.563436508178711
    4. '   ' → logprob: -9.813436508178711
    5. '       ' → logprob: -11.188436508178711
    6. 'i' → logprob: -11.938436508178711
    7. '```' → logprob: -12.063436508178711
    8. ' ' → logprob: -12.688436508178711
    9. 'range' → logprob: -12.813436508178711
    10. '(' → logprob: -12.813436508178711

Token 1581: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007910476415418088
    2. ' range' → logprob: -7.500791072845459
    3. 'in' → logprob: -8.3757905960083
    4. 're' → logprob: -12.7507905960083
    5. ' in' → logprob: -12.7507905960083
    6. '
' → logprob: -14.7507905960083
    7. '(range' → logprob: -14.7507905960083
    8. 'i' → logprob: -15.1257905960083
    9. '_' → logprob: -15.2507905960083
    10. '   ' → logprob: -15.8757905960083

Token 1582: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14403988420963287
    2. 'N' → logprob: -2.2690398693084717
    3. 'm' → logprob: -3.6440398693084717
    4. ' range' → logprob: -6.519040107727051
    5. '(N' → logprob: -6.519040107727051
    6. 'start' → logprob: -7.269040107727051
    7. '(range' → logprob: -8.26904010772705
    8. '1' → logprob: -8.51904010772705
    9. '(m' → logprob: -9.14404010772705
    10. '(' → logprob: -9.14404010772705

Token 1583: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20261648297309875
    2. ' -' → logprob: -1.7026164531707764
    3. '):
' → logprob: -7.5776166915893555
    4. '       ' → logprob: -7.8276166915893555
    5. '
' → logprob: -8.702616691589355
    6. '   ' → logprob: -9.952616691589355
    7. '):' → logprob: -10.702616691589355
    8. ',' → logprob: -10.827616691589355
    9. '           ' → logprob: -11.827616691589355
    10. '+' → logprob: -12.577616691589355

Token 1584: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1818939447402954
    2. '       ' → logprob: -1.4318939447402954
    3. '```' → logprob: -1.4318939447402954
    4. '           ' → logprob: -1.5568939447402954
    5. ' if' → logprob: -6.306893825531006
    6. '<|end|>' → logprob: -6.681893825531006
    7. '	       ' → logprob: -8.306894302368164
    8. '	   ' → logprob: -8.306894302368164
    9. '	if' → logprob: -9.056894302368164
    10. '``' → logprob: -9.056894302368164

Token 1585: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1741245836019516
    2. 'if' (adapté à ' if') → logprob: -2.2991244792938232
    3. ' if' → logprob: -3.0491244792938232
    4. '       ' → logprob: -4.549124717712402
    5. 'for' → logprob: -6.924124717712402
    6. '           ' → logprob: -8.424124717712402
    7. ' for' → logprob: -8.674124717712402
    8. '```' → logprob: -9.674124717712402
    9. '   ' → logprob: -11.299124717712402
    10. '#' → logprob: -11.299124717712402

Token 1586: ' start' (ID: 1604)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.45226433873176575
    2. 'start' → logprob: -1.2022643089294434
    3. 'cum' → logprob: -3.8272643089294434
    4. ' data' → logprob: -4.702264308929443
    5. 'cnt' → logprob: -4.702264308929443
    6. 'ans' → logprob: -4.827264308929443
    7. 'end' → logprob: -5.452264308929443
    8. 'm' → logprob: -5.827264308929443
    9. 'que' → logprob: -5.952264308929443
    10. ' start' → logprob: -6.577264308929443

Token 1587: 'L' (ID: 43)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3504982888698578
    2. 'L' → logprob: -1.2254983186721802
    3. '[L' → logprob: -6.975498199462891
    4. '[' → logprob: -7.100498199462891
    5. '```' → logprob: -8.60049819946289
    6. '][' → logprob: -10.22549819946289
    7. '[
' → logprob: -10.97549819946289
    8. ' [' → logprob: -11.22549819946289
    9. ']' → logprob: -12.22549819946289
    10. '[start' → logprob: -12.22549819946289

Token 1588: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. '```' → logprob: -12.625005722045898
    3. 'i' → logprob: -14.250005722045898
    4. '][' → logprob: -14.375005722045898
    5. '[' → logprob: -14.500005722045898
    6. '[
' → logprob: -15.500005722045898
    7. '   ' → logprob: -16.0000057220459
    8. '[I' → logprob: -16.1250057220459
    9. '``' → logprob: -17.0000057220459
    10. '(i' → logprob: -17.0000057220459

Token 1589: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01362801343202591
    2. ']==' → logprob: -4.763628005981445
    3. ']!=' → logprob: -6.138628005981445
    4. '==' → logprob: -6.763628005981445
    5. '==-' → logprob: -7.888628005981445
    6. '```' → logprob: -7.888628005981445
    7. '+' → logprob: -8.263628005981445
    8. ' ==' → logprob: -8.638628005981445
    9. '!=' → logprob: -8.638628005981445
    10. ' !=' → logprob: -9.513628005981445

Token 1590: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5220365524291992
    2. '!=' → logprob: -1.6470365524291992
    3. ' ==' → logprob: -2.397036552429199
    4. ' !=' → logprob: -3.272036552429199
    5. '==-' → logprob: -3.647036552429199
    6. '>=' → logprob: -4.397036552429199
    7. '!=-' → logprob: -4.397036552429199
    8. '>' → logprob: -4.647036552429199
    9. '[i' → logprob: -4.647036552429199
    10. '[' → logprob: -5.022036552429199

Token 1591: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.531315314830863e-06
    2. ' -' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.500003814697266
    4. '-i' → logprob: -17.375003814697266
    5. '```' → logprob: -17.500003814697266
    6. '0' → logprob: -19.000003814697266
    7. '-
' → logprob: -19.125003814697266
    8. '=-' → logprob: -19.250003814697266
    9. '       ' → logprob: -19.250003814697266
    10. '=' → logprob: -19.625003814697266

Token 1592: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. '```' → logprob: -12.500005722045898
    3. '-' → logprob: -13.875005722045898
    4. ' ' → logprob: -15.125005722045898
    5. '2' → logprob: -15.625005722045898
    6. ' -' → logprob: -16.3750057220459
    7. '...' → logprob: -17.6250057220459
    8. '   ' → logprob: -18.1250057220459
    9. '=' → logprob: -18.1250057220459
    10. '0' → logprob: -18.3750057220459

Token 1593: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.001565926824696362
    2. 'and' → logprob: -7.501565933227539
    3. '               ' → logprob: -7.626565933227539
    4. '           ' → logprob: -7.876565933227539
    5. '```' → logprob: -9.501565933227539
    6. ':
' → logprob: -9.876565933227539
    7. '       ' → logprob: -12.626565933227539
    8. ':' → logprob: -12.751565933227539
    9. '                   ' → logprob: -13.126565933227539
    10. '	and' → logprob: -13.376565933227539

Token 1594: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.05498451367020607
    2. 'data' → logprob: -4.3049845695495605
    3. 'cum' → logprob: -4.3049845695495605
    4. '(end' → logprob: -4.5549845695495605
    5. ' end' → logprob: -5.1799845695495605
    6. '(i' → logprob: -5.8049845695495605
    7. 'start' → logprob: -6.6799845695495605
    8. '(c' → logprob: -6.6799845695495605
    9. '(' → logprob: -6.9299845695495605
    10. 'beam' → logprob: -7.3049845695495605

Token 1595: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004323779605329037
    2. '[i' → logprob: -5.504323959350586
    3. '```' → logprob: -8.379323959350586
    4. '][' → logprob: -12.379323959350586
    5. ']' → logprob: -12.379323959350586
    6. 'i' → logprob: -12.504323959350586
    7. '(i' → logprob: -13.879323959350586
    8. ' L' → logprob: -14.129323959350586
    9. '[' → logprob: -14.379323959350586
    10. '``' → logprob: -14.754323959350586

Token 1596: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004682049620896578
    2. '[end' → logprob: -6.0046820640563965
    3. '[' → logprob: -6.7546820640563965
    4. '```' → logprob: -7.2546820640563965
    5. '[start' → logprob: -8.254681587219238
    6. '][' → logprob: -10.754681587219238
    7. '[j' → logprob: -11.129681587219238
    8. ']' → logprob: -12.004681587219238
    9. 'i' → logprob: -12.504681587219238
    10. '[
' → logprob: -12.879681587219238

Token 1597: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07602370530366898
    2. '[i' → logprob: -2.951023817062378
    3. ']!=' → logprob: -4.451023578643799
    4. ' !=' → logprob: -5.326023578643799
    5. '```' → logprob: -6.451023578643799
    6. '!=' → logprob: -6.576023578643799
    7. '[' → logprob: -7.576023578643799
    8. '+' → logprob: -8.451024055480957
    9. ']+' → logprob: -8.701024055480957
    10. '!=-' → logprob: -9.326024055480957

Token 1598: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3465166687965393
    2. '!=' → logprob: -1.3465166091918945
    3. '!=-' → logprob: -4.3465166091918945
    4. '+' → logprob: -4.7215166091918945
    5. '```' → logprob: -5.2215166091918945
    6. '<=' → logprob: -6.3465166091918945
    7. '==' → logprob: -7.2215166091918945
    8. ' +' → logprob: -7.4715166091918945
    9. ' <=' → logprob: -7.7215166091918945
    10. ' ==' → logprob: -7.8465166091918945

Token 1599: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006197061389684677
    2. 'i' → logprob: -5.381196975708008
    3. 'N' → logprob: -6.756196975708008
    4. ' -' → logprob: -7.881196975708008
    5. '-N' → logprob: -10.506196975708008
    6. '   ' → logprob: -13.006196975708008
    7. ' i' → logprob: -13.506196975708008
    8. ' N' → logprob: -13.881196975708008
    9. '-i' → logprob: -14.006196975708008
    10. '```' → logprob: -14.506196975708008

Token 1600: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09109796583652496
    2. 'i' → logprob: -2.7160980701446533
    3. 'N' → logprob: -3.9660980701446533
    4. '-N' → logprob: -7.216097831726074
    5. '1' → logprob: -7.466097831726074
    6. ' -' → logprob: -8.216097831726074
    7. '0' → logprob: -8.591097831726074
    8. '-i' → logprob: -9.466097831726074
    9. '(N' → logprob: -10.591097831726074
    10. '```' → logprob: -10.716097831726074

Token 1601: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7910977005958557
    2. ':
' → logprob: -0.7910977005958557
    3. ' and' → logprob: -3.666097640991211
    4. ':' → logprob: -3.791097640991211
    5. ' =' → logprob: -3.916097640991211
    6. '           ' → logprob: -4.041097640991211
    7. '```' → logprob: -5.791097640991211
    8. '=' → logprob: -6.166097640991211
    9. '                   ' → logprob: -7.541097640991211
    10. ' ==' → logprob: -7.791097640991211

Token 1602: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012353649362921715
    2. '```' → logprob: -4.512353420257568
    3. '           ' → logprob: -7.262353420257568
    4. ' end' → logprob: -7.887353420257568
    5. 'end' → logprob: -9.012353897094727
    6. '   ' → logprob: -10.887353897094727
    7. '       ' → logprob: -11.012353897094727
    8. '=end' → logprob: -11.137353897094727
    9. '                   ' → logprob: -11.262353897094727
    10. '[end' → logprob: -11.262353897094727

Token 1603: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.21364696323871613
    2. 'end' (adapté à ' end') → logprob: -1.7136470079421997
    3. '               ' → logprob: -4.58864688873291
    4. '           ' → logprob: -6.83864688873291
    5. '```' → logprob: -7.58864688873291
    6. '   ' → logprob: -8.21364688873291
    7. '                   ' → logprob: -9.08864688873291
    8. '=end' → logprob: -11.83864688873291
    9. '[end' → logprob: -12.08864688873291
    10. '(end' → logprob: -12.58864688873291

Token 1604: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -15.000000953674316
    3. '_L' → logprob: -15.375000953674316
    4. '[i' → logprob: -16.0
    5. '           ' → logprob: -17.25
    6. ' L' → logprob: -17.75
    7. '       ' → logprob: -18.0
    8. '[' → logprob: -18.25
    9. '[L' → logprob: -18.75
    10. '=' → logprob: -19.25

Token 1605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.209963900502771e-05
    2. '```' → logprob: -10.125092506408691
    3. '[' → logprob: -10.500092506408691
    4. '=' → logprob: -11.000092506408691
    5. '[
' → logprob: -12.250092506408691
    6. '\[' → logprob: -13.750092506408691
    7. '   ' → logprob: -15.500092506408691
    8. '=i' → logprob: -15.625092506408691
    9. '[start' → logprob: -15.750092506408691
    10. '
' → logprob: -15.750092506408691

Token 1606: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09057088196277618
    2. ' =' → logprob: -2.4655709266662598
    3. ']' → logprob: -7.21557092666626
    4. '=i' → logprob: -7.96557092666626
    5. ']=' → logprob: -8.090570449829102
    6. '```' → logprob: -9.840570449829102
    7. '=True' → logprob: -9.965570449829102
    8. '=
' → logprob: -10.340570449829102
    9. '=None' → logprob: -10.840570449829102
    10. ')' → logprob: -11.340570449829102

Token 1607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001549737062305212
    2. ' =' → logprob: -6.50154972076416
    3. '=i' → logprob: -10.50154972076416
    4. '=
' → logprob: -10.87654972076416
    5. '=len' → logprob: -15.25154972076416
    6. '=int' → logprob: -15.75154972076416
    7. '=end' → logprob: -16.376550674438477
    8. '=None' → logprob: -16.501550674438477
    9. '```' → logprob: -16.501550674438477
    10. ']=' → logprob: -16.751550674438477

Token 1608: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.4498052223643754e-05
    2. ' N' → logprob: -11.875014305114746
    3. '   ' → logprob: -12.750014305114746
    4. '                   ' → logprob: -13.375014305114746
    5. '               ' → logprob: -13.500014305114746
    6. '           ' → logprob: -13.875014305114746
    7. '       ' → logprob: -14.625014305114746
    8. '                       ' → logprob: -16.250015258789062
    9. '             ' → logprob: -17.625015258789062
    10. '                           ' → logprob: -18.125015258789062

Token 1609: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004084808751940727
    2. ' -' → logprob: -5.504084587097168
    3. '```' → logprob: -12.629084587097168
    4. '1' → logprob: -13.629084587097168
    5. '
' → logprob: -14.504084587097168
    6. '<|end|>' → logprob: -15.004084587097168
    7. '–' → logprob: -15.254084587097168
    8. '       ' → logprob: -15.629084587097168
    9. '()-' → logprob: -16.254085540771484
    10. '[' → logprob: -16.379085540771484

Token 1610: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -12.250009536743164
    3. '2' → logprob: -12.500009536743164
    4. '```' → logprob: -15.125009536743164
    5. '   ' → logprob: -15.250009536743164
    6. '
' → logprob: -15.250009536743164
    7. '       ' → logprob: -17.250009536743164
    8. '...' → logprob: -17.375009536743164
    9. '-' → logprob: -17.750009536743164
    10. 'i' → logprob: -17.875009536743164

Token 1611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. '2' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.500041007995605
    4. '```' → logprob: -15.625041007995605
    5. '   ' → logprob: -16.50004005432129
    6. '
' → logprob: -16.62504005432129
    7. 'i' → logprob: -18.37504005432129
    8. '       ' → logprob: -18.50004005432129
    9. '-' → logprob: -18.62504005432129
    10. 'import' → logprob: -19.12504005432129

Token 1612: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0486509799957275
    2. '
' → logprob: -1.4236509799957275
    3. '```' → logprob: -1.5486509799957275
    4. '<|end|>' → logprob: -2.2986509799957275
    5. 'for' → logprob: -3.4236509799957275
    6. '   ' → logprob: -3.6736509799957275
    7. '        
' → logprob: -5.048650741577148
    8. '#' → logprob: -5.423650741577148
    9. '           ' → logprob: -5.548650741577148
    10. ')' → logprob: -5.673650741577148

Token 1613: '       ' (ID: 309)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.0411463975906372
    2. '       ' → logprob: -1.4161463975906372
    3. '```' → logprob: -2.0411462783813477
    4. '
' → logprob: -2.2911462783813477
    5. '   ' → logprob: -2.6661462783813477
    6. 'for' → logprob: -3.1661462783813477
    7. 'st' → logprob: -3.1661462783813477
    8. 'class' → logprob: -5.541146278381348
    9. 'tree' → logprob: -5.791146278381348
    10. 'from' → logprob: -6.166146278381348

Token 1614: ' Seg' (ID: 13616)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.3405154347419739
    2. 'st' → logprob: -1.465515375137329
    3. 'for' → logprob: -3.965515375137329
    4. 'se' → logprob: -4.090515613555908
    5. '   ' → logprob: -5.090515613555908
    6. 'tree' → logprob: -5.965515613555908
    7. 's' → logprob: -6.465515613555908
    8. '#' → logprob: -6.715515613555908
    9. 'sg' → logprob: -6.965515613555908
    10. 'from' → logprob: -7.340515613555908

Token 1615: '1' (ID: 16)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -6.704273118884885e-07
    2. 'tree' → logprob: -14.750000953674316
    3. ' Tree' → logprob: -16.625
    4. 'Tre' → logprob: -16.875
    5. 'T' → logprob: -18.25
    6. 'ree' → logprob: -18.625
    7. '	Tree' → logprob: -19.625
    8. 't' → logprob: -20.0
    9. 'TREE' → logprob: -21.0
    10. '<Tree' → logprob: -21.125

Token 1616: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6889216899871826
    2. 'Tree' → logprob: -0.9389216899871826
    3. '=' → logprob: -2.3139216899871826
    4. '   ' → logprob: -5.438921928405762
    5. 'tree' → logprob: -6.438921928405762
    6. 'ree' → logprob: -7.563921928405762
    7. 'e' → logprob: -8.188921928405762
    8. ' Tree' → logprob: -8.188921928405762
    9. '_tree' → logprob: -8.313921928405762
    10. '(Tree' → logprob: -8.813921928405762

Token 1617: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.002476135268807411
    2. ' Seg' → logprob: -6.002476215362549
    3. 'Segment' → logprob: -15.12747573852539
    4. '   ' → logprob: -16.37747573852539
    5. 'seg' → logprob: -16.75247573852539
    6. 'Segments' → logprob: -18.00247573852539
    7. 'Seb' → logprob: -19.37747573852539
    8. ' ' → logprob: -19.50247573852539
    9. ' seg' → logprob: -19.50247573852539
    10. 'Sig' → logprob: -19.62747573852539

Token 1618: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -9.088346359931165e-07
    2. 'ree' → logprob: -14.500000953674316
    3. 'tree' → logprob: -15.375000953674316
    4. ' Tree' → logprob: -16.625
    5. '	Tree' → logprob: -17.125
    6. '(Tree' → logprob: -18.125
    7. '<Tree' → logprob: -18.625
    8. '```' → logprob: -18.875
    9. 't' → logprob: -19.375
    10. '[' → logprob: -20.0

Token 1619: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.0009326597792096436
    2. '([' → logprob: -7.375932693481445
    3. 'data' → logprob: -8.625932693481445
    4. '       ' → logprob: -10.125932693481445
    5. '[data' → logprob: -10.250932693481445
    6. '(' → logprob: -11.000932693481445
    7. '   ' → logprob: -11.250932693481445
    8. '(c' → logprob: -11.750932693481445
    9. '(seg' → logprob: -13.000932693481445
    10. '```' → logprob: -13.125932693481445

Token 1620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013069282285869122
    2. ',' → logprob: -4.388069152832031
    3. '2' → logprob: -7.888069152832031
    4. '   ' → logprob: -9.763069152832031
    5. '(' → logprob: -10.388069152832031
    6. ',
' → logprob: -10.763069152832031
    7. '       ' → logprob: -11.138069152832031
    8. '[' → logprob: -11.263069152832031
    9. ')' → logprob: -11.513069152832031
    10. ' ,' → logprob: -11.513069152832031

Token 1621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011629798245849088
    2. ',data' → logprob: -9.625116348266602
    3. '   ' → logprob: -10.625116348266602
    4. ' ,' → logprob: -11.375116348266602
    5. ',
' → logprob: -11.500116348266602
    6. '(seg' → logprob: -14.375116348266602
    7. ',len' → logprob: -14.375116348266602
    8. ',(' → logprob: -14.750116348266602
    9. '       ' → logprob: -14.750116348266602
    10. '```' → logprob: -15.375116348266602

Token 1622: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.008050769567489624
    2. 'min' → logprob: -5.258050918579102
    3. ' seg' → logprob: -5.883050918579102
    4. ' min' → logprob: -10.883050918579102
    5. '(seg' → logprob: -12.633050918579102
    6. '   ' → logprob: -13.508050918579102
    7. 'se' → logprob: -13.508050918579102
    8. '```' → logprob: -14.508050918579102
    9. '           ' → logprob: -15.383050918579102
    10. '       ' → logprob: -15.633050918579102

Token 1623: 'func' (ID: 5652)
  Prédit: 'func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -1.9361264946837764e-07
    2. 'min' → logprob: -17.0
    3. ' func' → logprob: -17.125
    4. 'def' → logprob: -17.5
    5. 'fun' → logprob: -18.375
    6. '   ' → logprob: -18.625
    7. '_func' → logprob: -18.875
    8. '1' → logprob: -19.125
    9. '
' → logprob: -19.5
    10. 'f' → logprob: -19.5

Token 1624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ',
' → logprob: -12.250007629394531
    3. ' ,' → logprob: -13.000007629394531
    4. ',data' → logprob: -15.125007629394531
    5. ',len' → logprob: -15.500007629394531
    6. '   ' → logprob: -16.25000762939453
    7. '```' → logprob: -16.37500762939453
    8. ')' → logprob: -17.00000762939453
    9. ',(' → logprob: -17.62500762939453
    10. ',int' → logprob: -17.75000762939453

Token 1625: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -2.1008713702030946e-06
    2. '10' → logprob: -14.000001907348633
    3. ' ide' → logprob: -14.375001907348633
    4. 'ideo' → logprob: -15.000001907348633
    5. 'ideal' → logprob: -15.375001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '```' → logprob: -18.125001907348633
    8. ' ' → logprob: -19.500001907348633
    9. 'idi' → logprob: -20.000001907348633
    10. '`' → logprob: -20.375001907348633

Token 1626: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -7.636475493200123e-05
    2. 'ele' → logprob: -9.500076293945312
    3. '_e' → logprob: -14.750076293945312
    4. '```' → logprob: -15.000076293945312
    5. 'Ele' → logprob: -15.125076293945312
    6. '`' → logprob: -16.000076293945312
    7. '-ele' → logprob: -16.125076293945312
    8. '\' → logprob: -16.375076293945312
    9. '__' → logprob: -17.625076293945312
    10. '**' → logprob: -18.000076293945312

Token 1627: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01417420245707035
    2. ')
' → logprob: -4.264173984527588
    3. '       ' → logprob: -11.764174461364746
    4. '   ' → logprob: -13.139174461364746
    5. ')
' → logprob: -15.014174461364746
    6. '),' → logprob: -16.13917350769043
    7. ' )' → logprob: -16.51417350769043
    8. ')

' → logprob: -16.63917350769043
    9. ')`' → logprob: -17.26417350769043
    10. ')`
' → logprob: -17.38917350769043

Token 1628: '       ' (ID: 309)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -1.2113979209971149e-05
    2. ' Seg' → logprob: -11.500012397766113
    3. '       ' → logprob: -14.000012397766113
    4. 'Segment' → logprob: -14.375012397766113
    5. '```' → logprob: -15.250012397766113
    6. '   ' → logprob: -16.250011444091797
    7. 'Segments' → logprob: -16.375011444091797
    8. 'seg' → logprob: -17.375011444091797
    9. 'Segue' → logprob: -18.125011444091797
    10. '
' → logprob: -18.375011444091797

Token 1629: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' (adapté à ' Seg') → logprob: -1.9361264946837764e-07
    2. ' Seg' → logprob: -16.75
    3. 'seg' → logprob: -16.875
    4. 'Segment' → logprob: -17.375
    5. '   ' → logprob: -18.625
    6. '
' → logprob: -19.75
    7. 'Segments' → logprob: -20.0
    8. '       ' → logprob: -20.625
    9. 'Segue' → logprob: -20.75
    10. '```' → logprob: -21.625

Token 1630: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7848862373502925e-05
    2. 'Tree' → logprob: -10.500027656555176
    3. ' =' → logprob: -16.500028610229492
    4. '=' → logprob: -16.875028610229492
    5. '#' → logprob: -17.000028610229492
    6. 'tree' → logprob: -18.250028610229492
    7. '_' → logprob: -18.250028610229492
    8. '```' → logprob: -18.250028610229492
    9. '   ' → logprob: -18.375028610229492
    10. '
' → logprob: -18.375028610229492

Token 1631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326398253440857
    2. '=' → logprob: -1.313264012336731
    3. ')' → logprob: -14.563263893127441
    4. '   ' → logprob: -14.688263893127441
    5. '```' → logprob: -15.188263893127441
    6. '=data' → logprob: -15.313263893127441
    7. '=
' → logprob: -15.688263893127441
    8. ',' → logprob: -16.188264846801758
    9. 'data' → logprob: -16.313264846801758
    10. ' ' → logprob: -16.313264846801758

Token 1632: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.00020377879263833165
    2. ' Seg' → logprob: -8.500204086303711
    3. 'Segment' → logprob: -15.750204086303711
    4. 'seg' → logprob: -16.87520408630371
    5. 'Segue' → logprob: -18.00020408630371
    6. '   ' → logprob: -18.00020408630371
    7. 'Sig' → logprob: -18.12520408630371
    8. 'Segments' → logprob: -18.62520408630371
    9. 'Se' → logprob: -18.75020408630371
    10. 'Sent' → logprob: -19.00020408630371

Token 1633: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.4378848391061183e-05
    2. 'ree' → logprob: -11.250014305114746
    3. 'Tre' → logprob: -15.250014305114746
    4. ' Tree' → logprob: -15.500014305114746
    5. '[' → logprob: -15.625014305114746
    6. '1' → logprob: -16.000015258789062
    7. '	Tree' → logprob: -16.250015258789062
    8. '_T' → logprob: -16.625015258789062
    9. '```' → logprob: -16.875015258789062
    10. '_tree' → logprob: -16.875015258789062

Token 1634: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -4.56102097814437e-05
    2. 'data' → logprob: -10.000045776367188
    3. '[data' → logprob: -15.500045776367188
    4. '<data' → logprob: -19.000045776367188
    5. ' data' → logprob: -19.250045776367188
    6. '(' → logprob: -19.250045776367188
    7. '=data' → logprob: -19.375045776367188
    8. '   ' → logprob: -19.750045776367188
    9. '	data' → logprob: -20.500045776367188
    10. ',data' → logprob: -20.625045776367188

Token 1635: '2' (ID: 17)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.10651303082704544
    2. '2' → logprob: -2.606513023376465
    3. '(data' → logprob: -4.106513023376465
    4. '[data' → logprob: -4.731513023376465
    5. '   ' → logprob: -7.356513023376465
    6. '[' → logprob: -7.606513023376465
    7. ' data' → logprob: -8.481513023376465
    8. ',' → logprob: -8.606513023376465
    9. ',data' → logprob: -9.481513023376465
    10. '_data' → logprob: -9.481513023376465

Token 1636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002509687910787761
    2. ',data' → logprob: -9.000250816345215
    3. '(data' → logprob: -9.500250816345215
    4. '   ' → logprob: -10.625250816345215
    5. ' ,' → logprob: -11.375250816345215
    6. '(' → logprob: -11.875250816345215
    7. '[data' → logprob: -12.750250816345215
    8. 'data' → logprob: -13.125250816345215
    9. '[' → logprob: -13.250250816345215
    10. '```' → logprob: -14.125250816345215

Token 1637: ' seg' (ID: 3055)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.6932019591331482
    2. 'seg' → logprob: -0.6932019591331482
    3. '(seg' → logprob: -11.568202018737793
    4. ' ide' → logprob: -11.693202018737793
    5. 'func' → logprob: -11.693202018737793
    6. ' seg' → logprob: -11.943202018737793
    7. '10' → logprob: -12.193202018737793
    8. 'ideo' → logprob: -12.443202018737793
    9. '   ' → logprob: -12.443202018737793
    10. '       ' → logprob: -13.443202018737793

Token 1638: 'func' (ID: 5652)
  Prédit: '_ele'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.012650205753743649
    2. 'ele' → logprob: -4.387650012969971
    3. 'Ele' → logprob: -10.387650489807129
    4. 'def' → logprob: -10.637650489807129
    5. '   ' → logprob: -10.887650489807129
    6. '```' → logprob: -11.387650489807129
    7. 'ide' → logprob: -11.887650489807129
    8. '`' → logprob: -12.012650489807129
    9. 'ile' → logprob: -12.137650489807129
    10. 'func' → logprob: -12.137650489807129

Token 1639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ',
' → logprob: -13.87501335144043
    4. '(' → logprob: -13.87501335144043
    5. '   ' → logprob: -14.87501335144043
    6. ')' → logprob: -15.50001335144043
    7. '```' → logprob: -15.50001335144043
    8. '(seg' → logprob: -15.62501335144043
    9. '[' → logprob: -16.37501335144043
    10. '#' → logprob: -17.25001335144043

Token 1640: ' ide' (ID: 2750)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.10021626949310303
    2. ' ide' → logprob: -2.3502163887023926
    3. '       ' → logprob: -12.600215911865234
    4. 'ideo' → logprob: -12.850215911865234
    5. '   ' → logprob: -12.975215911865234
    6. '           ' → logprob: -15.225215911865234
    7. '10' → logprob: -15.850215911865234
    8. ' ' → logprob: -15.850215911865234
    9. '.ide' → logprob: -16.100215911865234
    10. '        ' → logprob: -16.350215911865234

Token 1641: '_ele' (ID: 154942)
  Prédit: '_ele'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ele' → logprob: -0.014245182275772095
    2. 'ele' → logprob: -4.26424503326416
    3. 'le' → logprob: -9.51424503326416
    4. '_le' → logprob: -12.51424503326416
    5. '_e' → logprob: -13.13924503326416
    6. 'Ele' → logprob: -13.63924503326416
    7. 'e' → logprob: -15.13924503326416
    8. '-ele' → logprob: -15.38924503326416
    9. 'lef' → logprob: -16.514245986938477
    10. '```' → logprob: -16.639245986938477

Token 1642: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014442270912695676
    2. ')
' → logprob: -9.125144004821777
    3. '       ' → logprob: -10.750144004821777
    4. '   ' → logprob: -11.250144004821777
    5. ' )' → logprob: -14.875144004821777
    6. '#' → logprob: -16.000144958496094
    7. ')

' → logprob: -16.375144958496094
    8. '<|end|>' → logprob: -16.500144958496094
    9. '),' → logprob: -16.750144958496094
    10. '())' → logprob: -16.875144958496094

Token 1643: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6796911954879761
    2. 'for' → logprob: -0.8046911954879761
    3. '```' → logprob: -3.4296913146972656
    4. 'i' → logprob: -4.429691314697266
    5. ' for' → logprob: -7.554691314697266
    6. 'def' → logprob: -7.679691314697266
    7. '``' → logprob: -8.429691314697266
    8. '
' → logprob: -9.179691314697266
    9. 'idx' → logprob: -9.554691314697266
    10. 'best' → logprob: -9.679691314697266

Token 1644: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018967075273394585
    2. '   ' → logprob: -5.018967151641846
    3. 'l' → logprob: -5.393967151641846
    4. 'def' → logprob: -5.768967151641846
    5. 'left' → logprob: -6.768967151641846
    6. 'start' → logprob: -7.393967151641846
    7. 'best' → logprob: -7.393967151641846
    8. 'i' → logprob: -7.893967151641846
    9. 'idx' → logprob: -8.018966674804688
    10. '```' → logprob: -8.518966674804688

Token 1645: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08844388276338577
    2. 'j' → logprob: -3.0884439945220947
    3. 'm' → logprob: -4.213443756103516
    4. ' i' → logprob: -4.838443756103516
    5. 'x' → logprob: -5.088443756103516
    6. 'k' → logprob: -5.963443756103516
    7. 'l' → logprob: -6.463443756103516
    8. ' j' → logprob: -6.713443756103516
    9. 'r' → logprob: -6.713443756103516
    10. 'b' → logprob: -7.713443756103516

Token 1646: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016297580674290657
    2. 'in' → logprob: -4.141297817230225
    3. ',' → logprob: -8.891297340393066
    4. '       ' → logprob: -10.391297340393066
    5. '   ' → logprob: -11.016297340393066
    6. '        ' → logprob: -11.391297340393066
    7. '	in' → logprob: -11.391297340393066
    8. '(' → logprob: -11.891297340393066
    9. ')' → logprob: -12.141297340393066
    10. ' i' → logprob: -12.391297340393066

Token 1647: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004574863996822387
    2. ' range' → logprob: -7.750457286834717
    3. 'start' → logprob: -10.875457763671875
    4. '(range' → logprob: -13.375457763671875
    5. 'in' → logprob: -13.625457763671875
    6. 'm' → logprob: -13.625457763671875
    7. '0' → logprob: -13.750457763671875
    8. '   ' → logprob: -14.625457763671875
    9. '
' → logprob: -14.750457763671875
    10. 're' → logprob: -15.500457763671875

Token 1648: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.8386753797531128
    2. '(N' → logprob: -1.5886753797531128
    3. 'range' → logprob: -1.7136753797531128
    4. 'm' → logprob: -1.9636753797531128
    5. '(range' → logprob: -4.088675498962402
    6. 'N' → logprob: -4.088675498962402
    7. '(' → logprob: -5.838675498962402
    8. 'start' → logprob: -5.838675498962402
    9. '(start' → logprob: -6.463675498962402
    10. ' range' → logprob: -7.088675498962402

Token 1649: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6398152112960815
    2. ',' → logprob: -1.2648152112960815
    3. ' -' → logprob: -2.639815330505371
    4. '+' → logprob: -3.389815330505371
    5. '):
' → logprob: -3.514815330505371
    6. '       ' → logprob: -3.889815330505371
    7. '):' → logprob: -4.514815330505371
    8. '   ' → logprob: -4.639815330505371
    9. '-m' → logprob: -5.389815330505371
    10. ' +' → logprob: -5.764815330505371

Token 1650: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11549197882413864
    2. '   ' → logprob: -2.7404918670654297
    3. '       ' → logprob: -3.8654918670654297
    4. '```' → logprob: -4.61549186706543
    5. ' for' → logprob: -4.86549186706543
    6. 'for' → logprob: -6.74049186706543
    7. '	       ' → logprob: -6.99049186706543
    8. '	   ' → logprob: -7.24049186706543
    9. ' if' → logprob: -7.24049186706543
    10. ' print' → logprob: -8.11549186706543

Token 1651: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7796009182929993
    2. '       ' → logprob: -1.0296008586883545
    3. ' for' → logprob: -2.4046008586883545
    4. '           ' → logprob: -3.4046008586883545
    5. 'for' → logprob: -3.7796008586883545
    6. '```' → logprob: -4.404601097106934
    7. ' if' → logprob: -5.154601097106934
    8. 'print' → logprob: -5.279601097106934
    9. 'start' → logprob: -5.779601097106934
    10. ' print' → logprob: -5.904601097106934

Token 1652: ' end' (ID: 1268)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.5135970115661621
    2. 'i' → logprob: -1.763597011566162
    3. 'ans' → logprob: -2.513597011566162
    4. 'start' → logprob: -2.513597011566162
    5. 'cum' → logprob: -3.638597011566162
    6. '   ' → logprob: -4.263597011566162
    7. 'end' → logprob: -4.388597011566162
    8. ' i' → logprob: -5.388597011566162
    9. 'm' → logprob: -6.013597011566162
    10. ' beam' → logprob: -6.013597011566162

Token 1653: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00039158877916634083
    2. '[i' → logprob: -8.375391960144043
    3. '```' → logprob: -9.875391960144043
    4. '[' → logprob: -10.125391960144043
    5. '       ' → logprob: -11.375391960144043
    6. '+' → logprob: -11.500391960144043
    7. '   ' → logprob: -11.625391960144043
    8. '           ' → logprob: -11.875391960144043
    9. ' L' → logprob: -12.375391960144043
    10. 'i' → logprob: -12.500391960144043

Token 1654: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009899048134684563
    2. '[' → logprob: -4.884899139404297
    3. '[start' → logprob: -6.884899139404297
    4. '][' → logprob: -7.259899139404297
    5. '[j' → logprob: -8.634899139404297
    6. ']' → logprob: -9.884899139404297
    7. '[in' → logprob: -10.009899139404297
    8. '[end' → logprob: -10.009899139404297
    9. ' [' → logprob: -10.509899139404297
    10. '[id' → logprob: -10.759899139404297

Token 1655: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0861421450972557
    2. '[i' → logprob: -3.836142063140869
    3. ' ==' → logprob: -4.461142063140869
    4. ' !=' → logprob: -4.836142063140869
    5. '==' → logprob: -4.961142063140869
    6. '+' → logprob: -4.961142063140869
    7. '<' → logprob: -5.211142063140869
    8. ']==' → logprob: -5.336142063140869
    9. ' <' → logprob: -5.461142063140869
    10. ')' → logprob: -6.336142063140869

Token 1656: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6525458693504333
    2. '==' → logprob: -1.6525459289550781
    3. ' <' → logprob: -2.402545928955078
    4. ' ==' → logprob: -2.402545928955078
    5. ' !=' → logprob: -3.777545928955078
    6. '>=' → logprob: -4.152545928955078
    7. '!=' → logprob: -4.277545928955078
    8. '<=' → logprob: -4.402545928955078
    9. '>' → logprob: -4.777545928955078
    10. '+' → logprob: -4.902545928955078

Token 1657: ' m' (ID: 284)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40290316939353943
    2. 'i' → logprob: -1.7779031991958618
    3. 'start' → logprob: -2.2779030799865723
    4. 'N' → logprob: -2.9029030799865723
    5. 'm' → logprob: -6.152903079986572
    6. '   ' → logprob: -7.152903079986572
    7. ' -' → logprob: -7.527903079986572
    8. '       ' → logprob: -7.527903079986572
    9. '-start' → logprob: -7.652903079986572
    10. '           ' → logprob: -8.02790355682373

Token 1658: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8182336091995239
    2. ':
' → logprob: -2.3182334899902344
    3. '-' → logprob: -2.4432334899902344
    4. '+' → logprob: -2.4432334899902344
    5. ' -' → logprob: -2.8182334899902344
    6. '<|end|>' → logprob: -2.9432334899902344
    7. '           ' → logprob: -3.0682334899902344
    8. ' +' → logprob: -3.1932334899902344
    9. '               ' → logprob: -4.193233489990234
    10. ' and' → logprob: -4.193233489990234

Token 1659: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. 'i' → logprob: -11.375017166137695
    3. '```' → logprob: -13.250017166137695
    4. ' ' → logprob: -13.375017166137695
    5. '           ' → logprob: -14.250017166137695
    6. '0' → logprob: -14.875017166137695
    7. '<|end|>' → logprob: -15.625017166137695
    8. '   ' → logprob: -15.875017166137695
    9. '2' → logprob: -15.875017166137695
    10. '...' → logprob: -16.250017166137695

Token 1660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. 'i' → logprob: -10.62502670288086
    3. '```' → logprob: -14.25002670288086
    4. '           ' → logprob: -14.75002670288086
    5. ' ' → logprob: -14.87502670288086
    6. '0' → logprob: -15.12502670288086
    7. '   ' → logprob: -16.00002670288086
    8. '       ' → logprob: -16.50002670288086
    9. '               ' → logprob: -17.37502670288086
    10. '2' → logprob: -17.50002670288086

Token 1661: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19019658863544464
    2. '               ' → logprob: -1.9401966333389282
    3. '           ' → logprob: -4.815196514129639
    4. ':
' → logprob: -5.315196514129639
    5. 'and' → logprob: -5.315196514129639
    6. ':' → logprob: -5.440196514129639
    7. '<|end|>' → logprob: -5.565196514129639
    8. ' ==' → logprob: -7.190196514129639
    9. ' or' → logprob: -7.440196514129639
    10. '                   ' → logprob: -7.690196514129639

Token 1662: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12488609552383423
    2. '```' → logprob: -2.7498860359191895
    3. '           ' → logprob: -2.9998860359191895
    4. '	       ' → logprob: -6.8748860359191895
    5. '<|end|>' → logprob: -7.1248860359191895
    6. '       ' → logprob: -8.249886512756348
    7. '	           ' → logprob: -8.249886512756348
    8. ' and' → logprob: -8.499886512756348
    9. '``' → logprob: -8.999886512756348
    10. '[' → logprob: -9.249886512756348

Token 1663: ' temp' (ID: 5484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18755772709846497
    2. '               ' → logprob: -2.5625576972961426
    3. 'continue' → logprob: -3.1875576972961426
    4. 'if' → logprob: -4.187557697296143
    5. 'for' → logprob: -4.312557697296143
    6. 'break' → logprob: -5.687557697296143
    7. '```' → logprob: -5.687557697296143
    8. '                   ' → logprob: -5.812557697296143
    9. ' if' → logprob: -5.937557697296143
    10. ' for' → logprob: -5.937557697296143

Token 1664: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1633327156305313
    2. '=' → logprob: -1.9133327007293701
    3. '[' → logprob: -7.288332939147949
    4. ',' → logprob: -8.28833293914795
    5. 's' → logprob: -8.53833293914795
    6. '```' → logprob: -8.53833293914795
    7. '_idx' → logprob: -9.28833293914795
    8. '   ' → logprob: -9.28833293914795
    9. '<|end|>' → logprob: -9.41333293914795
    10. '       ' → logprob: -9.53833293914795

Token 1665: ' Seg' (ID: 13616)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7222959995269775
    2. 'data' → logprob: -1.0972959995269775
    3. 'ans' → logprob: -2.7222959995269775
    4. ' abs' → logprob: -3.9722959995269775
    5. 'Seg' → logprob: -3.9722959995269775
    6. '(abs' → logprob: -3.9722959995269775
    7. ' data' → logprob: -4.472295761108398
    8. '(ans' → logprob: -4.847295761108398
    9. '(' → logprob: -5.347295761108398
    10. 'min' → logprob: -5.597295761108398

Token 1666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.062229279428720474
    2. '2' → logprob: -3.0622293949127197
    3. 'Tree' → logprob: -4.812229156494141
    4. 'query' → logprob: -5.312229156494141
    5. 'func' → logprob: -8.81222915649414
    6. '   ' → logprob: -8.93722915649414
    7. 'Query' → logprob: -9.68722915649414
    8. '```' → logprob: -9.93722915649414
    9. 'tree' → logprob: -10.43722915649414
    10. '.query' → logprob: -10.81222915649414

Token 1667: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.00032712158281356096
    2. 'query' → logprob: -8.125327110290527
    3. '   ' → logprob: -11.750327110290527
    4. '```' → logprob: -11.875327110290527
    5. '       ' → logprob: -12.375327110290527
    6. '.' → logprob: -12.750327110290527
    7. '
' → logprob: -13.250327110290527
    8. '               ' → logprob: -13.750327110290527
    9. ' query' → logprob: -14.000327110290527
    10. '           ' → logprob: -14.125327110290527

Token 1668: '(m' (ID: 2145)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006832706276327372
    2. '(' → logprob: -5.256832599639893
    3. '(start' → logprob: -7.006832599639893
    4. 'i' → logprob: -7.881832599639893
    5. '(end' → logprob: -9.13183307647705
    6. '           ' → logprob: -9.38183307647705
    7. 'start' → logprob: -9.50683307647705
    8. '               ' → logprob: -10.88183307647705
    9. '0' → logprob: -11.00683307647705
    10. 'end' → logprob: -12.25683307647705

Token 1669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06656055152416229
    2. ',i' → logprob: -3.1915605068206787
    3. 'i' → logprob: -4.316560745239258
    4. '               ' → logprob: -6.191560745239258
    5. ',m' → logprob: -6.441560745239258
    6. ',end' → logprob: -6.566560745239258
    7. '+' → logprob: -6.816560745239258
    8. '(i' → logprob: -6.941560745239258
    9. '                   ' → logprob: -7.191560745239258
    10. '           ' → logprob: -7.566560745239258

Token 1670: ' N' (ID: 478)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5982935428619385
    2. 'N' → logprob: -0.8482935428619385
    3. 'i' → logprob: -4.473293304443359
    4. 'm' → logprob: -5.348293304443359
    5. 'start' → logprob: -5.973293304443359
    6. ' N' → logprob: -6.848293304443359
    7. ' end' → logprob: -7.723293304443359
    8. '           ' → logprob: -7.973293304443359
    9. '   ' → logprob: -8.22329330444336
    10. '       ' → logprob: -8.22329330444336

Token 1671: ')
' (ID: 446)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3266102969646454
    2. ',' → logprob: -1.7016103267669678
    3. ')' → logprob: -2.7016103267669678
    4. ',i' → logprob: -4.201610088348389
    5. '[i' → logprob: -5.451610088348389
    6. '(temp' → logprob: -5.701610088348389
    7. 'i' → logprob: -6.451610088348389
    8. ')
' → logprob: -6.701610088348389
    9. '(' → logprob: -6.826610088348389
    10. '               ' → logprob: -7.326610088348389

Token 1672: '               ' (ID: 506)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04598177224397659
    2. '(temp' → logprob: -4.2959818840026855
    3. '```' → logprob: -4.5459818840026855
    4. '(' → logprob: -4.6709818840026855
    5. '+' → logprob: -5.2959818840026855
    6. '-' → logprob: -5.9209818840026855
    7. '[i' → logprob: -6.7959818840026855
    8. '+i' → logprob: -7.4209818840026855
    9. ')' → logprob: -7.9209818840026855
    10. ' (' → logprob: -8.295981407165527

Token 1673: ' temp' (ID: 5484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3977661728858948
    2. ' if' → logprob: -1.77276611328125
    3. 'if' → logprob: -1.89776611328125
    4. '```' → logprob: -5.39776611328125
    5. '<|end|>' → logprob: -5.77276611328125
    6. '[' → logprob: -8.77276611328125
    7. ')' → logprob: -9.14776611328125
    8. '                   ' → logprob: -9.89776611328125
    9. '           ' → logprob: -9.89776611328125
    10. '*' → logprob: -10.14776611328125

Token 1674: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.140451580286026
    2. ' =' → logprob: -2.390451669692993
    3. '               ' → logprob: -4.140451431274414
    4. 'if' → logprob: -4.890451431274414
    5. ' if' → logprob: -5.265451431274414
    6. '                   ' → logprob: -5.765451431274414
    7. '<' → logprob: -6.140451431274414
    8. '<=' → logprob: -7.015451431274414
    9. '           ' → logprob: -7.140451431274414
    10. ',' → logprob: -7.515451431274414

Token 1675: ' beam' (ID: 36650)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.44474563002586365
    2. 'beam' → logprob: -1.319745659828186
    3. 'S' → logprob: -3.6947455406188965
    4. '-' → logprob: -4.1947455406188965
    5. 'abs' → logprob: -4.4447455406188965
    6. '-S' → logprob: -5.1947455406188965
    7. 'start' → logprob: -5.1947455406188965
    8. '-c' → logprob: -5.1947455406188965
    9. 'cum' → logprob: -5.3197455406188965
    10. '-be' → logprob: -5.6947455406188965

Token 1676: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021915239631198347
    2. '[end' → logprob: -9.250219345092773
    3. '[temp' → logprob: -9.875219345092773
    4. '[' → logprob: -10.250219345092773
    5. '[start' → logprob: -11.250219345092773
    6. '[m' → logprob: -11.625219345092773
    7. '```' → logprob: -12.625219345092773
    8. '[j' → logprob: -13.250219345092773
    9. '   ' → logprob: -14.000219345092773
    10. '[I' → logprob: -14.125219345092773

Token 1677: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013854467310011387
    2. ')[' → logprob: -4.638854503631592
    3. '[' → logprob: -6.013854503631592
    4. '[i' → logprob: -6.763854503631592
    5. '   ' → logprob: -8.513854026794434
    6. ' ][' → logprob: -10.138854026794434
    7. ')][' → logprob: -10.263854026794434
    8. '"][' → logprob: -10.638854026794434
    9. '#' → logprob: -10.763854026794434
    10. '```' → logprob: -10.888854026794434

Token 1678: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05489063635468483
    2. '0' → logprob: -2.9298906326293945
    3. '```' → logprob: -13.304890632629395
    4. ' ' → logprob: -13.554890632629395
    5. '2' → logprob: -13.679890632629395
    6. '[' → logprob: -13.867390632629395
    7. '
' → logprob: -14.367390632629395
    8. '   ' → logprob: -14.554890632629395
    9. '][' → logprob: -14.554890632629395
    10. '１' → logprob: -15.367390632629395

Token 1679: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4417872428894043
    2. '-' → logprob: -1.3167872428894043
    3. ')' → logprob: -2.9417872428894043
    4. '<|end|>' → logprob: -4.441787242889404
    5. ')
' → logprob: -4.566787242889404
    6. '
' → logprob: -5.066787242889404
    7. '               ' → logprob: -6.191787242889404
    8. '           ' → logprob: -6.691787242889404
    9. '                   ' → logprob: -7.066787242889404
    10. '       ' → logprob: -7.816787242889404

Token 1680: ' -' (ID: 533)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8057857751846313
    2. '<|end|>' → logprob: -0.9307857751846313
    3. '           ' → logprob: -2.680785655975342
    4. ' if' → logprob: -2.930785655975342
    5. '                   ' → logprob: -4.430785655975342
    6. ' and' → logprob: -5.680785655975342
    7. '+' → logprob: -6.055785655975342
    8. ')' → logprob: -6.055785655975342
    9. '<|end|>' → logprob: -6.055785655975342
    10. '                       ' → logprob: -6.305785655975342

Token 1681: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.008295645006000996
    2. 'Seg' → logprob: -5.00829553604126
    3. 'temp' → logprob: -7.75829553604126
    4. 'data' → logprob: -8.508296012878418
    5. 'seg' → logprob: -8.508296012878418
    6. ' beam' → logprob: -8.758296012878418
    7. 'que' → logprob: -8.883296012878418
    8. 'm' → logprob: -9.383296012878418
    9. '(' → logprob: -9.758296012878418
    10. '0' → logprob: -10.258296012878418

Token 1682: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10481797903776169
    2. 'i' → logprob: -2.3548178672790527
    3. '[m' → logprob: -5.729817867279053
    4. 'm' → logprob: -6.729817867279053
    5. '```' → logprob: -9.229818344116211
    6. '[' → logprob: -10.979818344116211
    7. '(i' → logprob: -11.604818344116211
    8. ']' → logprob: -11.729818344116211
    9. '[
' → logprob: -12.104818344116211
    10. '][' → logprob: -12.104818344116211

Token 1683: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0030970238149166107
    2. '[i' → logprob: -6.003097057342529
    3. '[' → logprob: -8.253096580505371
    4. '+' → logprob: -9.253096580505371
    5. '[m' → logprob: -10.003096580505371
    6. 'm' → logprob: -10.503096580505371
    7. ']' → logprob: -10.628096580505371
    8. '```' → logprob: -10.628096580505371
    9. '+m' → logprob: -11.128096580505371
    10. '   ' → logprob: -11.128096580505371

Token 1684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -15.125000953674316
    3. '```' → logprob: -15.375000953674316
    4. 'm' → logprob: -15.750000953674316
    5. ' ' → logprob: -15.875000953674316
    6. '[i' → logprob: -15.875000953674316
    7. '][' → logprob: -16.000001907348633
    8. '           ' → logprob: -16.875001907348633
    9. 'i' → logprob: -17.750001907348633
    10. ''s' → logprob: -18.000001907348633

Token 1685: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03187679871916771
    2. ')
' → logprob: -3.906876802444458
    3. '<|end|>' → logprob: -5.156876564025879
    4. ']' → logprob: -6.281876564025879
    5. '       ' → logprob: -6.406876564025879
    6. '               ' → logprob: -6.781876564025879
    7. '```' → logprob: -8.406876564025879
    8. '           ' → logprob: -9.406876564025879
    9. ')*' → logprob: -9.656876564025879
    10. '<|end|>' → logprob: -9.906876564025879

Token 1686: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09744034707546234
    2. '```' → logprob: -3.222440242767334
    3. ' if' → logprob: -3.722440242767334
    4. 'if' → logprob: -4.972440242767334
    5. '<|end|>' → logprob: -5.222440242767334
    6. '+' → logprob: -5.847440242767334
    7. '                       ' → logprob: -6.097440242767334
    8. '                   ' → logprob: -6.222440242767334
    9. '           ' → logprob: -6.472440242767334
    10. '``' → logprob: -6.472440242767334

Token 1687: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.27677595615386963
    2. '               ' → logprob: -1.9017759561538696
    3. ' if' → logprob: -2.90177583694458
    4. '```' → logprob: -3.65177583694458
    5. '           ' → logprob: -4.52677583694458
    6. '                   ' → logprob: -8.401776313781738
    7. '       ' → logprob: -9.026776313781738
    8. '<|end|>' → logprob: -9.276776313781738
    9. '``' → logprob: -9.651776313781738
    10. 'for' → logprob: -9.776776313781738

Token 1688: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0005580356228165329
    2. ' temp' → logprob: -7.500557899475098
    3. 'ans' → logprob: -12.625557899475098
    4. '   ' → logprob: -14.125557899475098
    5. 'tmp' → logprob: -15.125557899475098
    6. '(temp' → logprob: -15.375557899475098
    7. 'beam' → logprob: -15.625557899475098
    8. '
' → logprob: -16.875558853149414
    9. '	temp' → logprob: -16.875558853149414
    10. '0' → logprob: -17.125558853149414

Token 1689: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2542072832584381
    2. '<=' → logprob: -1.5042072534561157
    3. ' <' → logprob: -7.004207134246826
    4. '<' → logprob: -7.004207134246826
    5. '```' → logprob: -8.879207611083984
    6. '>' → logprob: -9.504207611083984
    7. '   ' → logprob: -9.754207611083984
    8. ' >' → logprob: -9.879207611083984
    9. ' >=' → logprob: -10.504207611083984
    10. '>=' → logprob: -10.879207611083984

Token 1690: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.288163083605468e-05
    2. ' ' → logprob: -9.875052452087402
    3. '10' → logprob: -13.750052452087402
    4. '```' → logprob: -16.12505340576172
    5. '   ' → logprob: -16.75005340576172
    6. '       ' → logprob: -17.00005340576172
    7. '                   ' → logprob: -17.12505340576172
    8. '           ' → logprob: -17.37505340576172
    9. '               ' → logprob: -17.62505340576172
    10. '                       ' → logprob: -18.25005340576172

Token 1691: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '10' → logprob: -17.1250057220459
    4. '```' → logprob: -17.6250057220459
    5. '   ' → logprob: -18.2500057220459
    6. '
' → logprob: -18.8750057220459
    7. '       ' → logprob: -19.8750057220459
    8. '000' → logprob: -20.6250057220459
    9. '<|end|>' → logprob: -20.6250057220459
    10. '  ' → logprob: -20.6250057220459

Token 1692: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5886840224266052
    2. ':
' → logprob: -1.83868408203125
    3. ':' → logprob: -2.08868408203125
    4. ' and' → logprob: -2.08868408203125
    5. '               ' → logprob: -3.96368408203125
    6. '                       ' → logprob: -4.58868408203125
    7. '           ' → logprob: -5.08868408203125
    8. 'and' → logprob: -6.96368408203125
    9. '                           ' → logprob: -7.08868408203125
    10. ' or' → logprob: -8.21368408203125

Token 1693: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18849018216133118
    2. ':
' → logprob: -2.813490152359009
    3. ' and' → logprob: -3.063490152359009
    4. '                       ' → logprob: -3.188490152359009
    5. '```' → logprob: -5.188490390777588
    6. ':' → logprob: -5.313490390777588
    7. '               ' → logprob: -5.313490390777588
    8. '                           ' → logprob: -5.563490390777588
    9. '                               ' → logprob: -6.438490390777588
    10. 'and' → logprob: -7.313490390777588

Token 1694: ' temp' (ID: 5484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10115446150302887
    2. ' ans' → logprob: -3.1011545658111572
    3. '                   ' → logprob: -3.2261545658111572
    4. '                       ' → logprob: -4.601154327392578
    5. '	ans' → logprob: -7.601154327392578
    6. '```' → logprob: -7.726154327392578
    7. '               ' → logprob: -8.726154327392578
    8. '(ans' → logprob: -9.351154327392578
    9. 'answer' → logprob: -9.601154327392578
    10. 'for' → logprob: -10.101154327392578

Token 1695: ' =' (ID: 314)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.46204325556755066
    2. ' =' → logprob: -1.337043285369873
    3. '=' → logprob: -3.337043285369873
    4. '                       ' → logprob: -4.087043285369873
    5. '<=' → logprob: -4.837043285369873
    6. '                   ' → logprob: -4.962043285369873
    7. ' ==' → logprob: -4.962043285369873
    8. '                           ' → logprob: -5.087043285369873
    9. ':' → logprob: -5.212043285369873
    10. ' +=' → logprob: -5.462043285369873

Token 1696: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.49502459168434143
    2. 'min' → logprob: -2.3700246810913086
    3. 'ans' → logprob: -3.2450246810913086
    4. '(' → logprob: -3.4950246810913086
    5. 'temp' → logprob: -3.6200246810913086
    6. ' abs' → logprob: -3.6200246810913086
    7. ' min' → logprob: -3.6200246810913086
    8. '0' → logprob: -3.6200246810913086
    9. 'max' → logprob: -3.6200246810913086
    10. 'beam' → logprob: -3.8700246810913086

Token 1697: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.11327255517244339
    2. 'temp' → logprob: -2.3632726669311523
    3. '(' → logprob: -4.363272666931152
    4. '(test' → logprob: -9.363272666931152
    5. 'beam' → logprob: -9.738272666931152
    6. '(be' → logprob: -10.113272666931152
    7. '(
' → logprob: -10.488272666931152
    8. '(-' → logprob: -11.863272666931152
    9. 'test' → logprob: -12.113272666931152
    10. '(S' → logprob: -12.488272666931152

Token 1698: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7141560316085815
    2. '                   ' → logprob: -1.5891560316085815
    3. '):
' → logprob: -2.339156150817871
    4. '                       ' → logprob: -2.589156150817871
    5. ':
' → logprob: -3.214156150817871
    6. ':' → logprob: -3.589156150817871
    7. '):' → logprob: -3.839156150817871
    8. ' and' → logprob: -4.339156150817871
    9. '               ' → logprob: -4.839156150817871
    10. '<|end|>' → logprob: -5.589156150817871

Token 1699: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9528664350509644
    2. '                   ' → logprob: -1.0778664350509644
    3. '                           ' → logprob: -2.327866554260254
    4. '                               ' → logprob: -2.577866554260254
    5. '```' → logprob: -3.077866554260254
    6. ' and' → logprob: -4.327866554260254
    7. '<|end|>' → logprob: -4.327866554260254
    8. ')' → logprob: -5.577866554260254
    9. '               ' → logprob: -5.702866554260254
    10. '                                           ' → logprob: -5.952866554260254

Token 1700: ' B' (ID: 418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02631342224776745
    2. '                   ' → logprob: -4.276313304901123
    3. ' if' → logprob: -4.651313304901123
    4. '```' → logprob: -6.151313304901123
    5. '                       ' → logprob: -8.776313781738281
    6. 'for' → logprob: -8.776313781738281
    7. '``' → logprob: -10.526313781738281
    8. '                           ' → logprob: -11.026313781738281
    9. '           ' → logprob: -11.151313781738281
    10. '               ' → logprob: -11.401313781738281

Token 1701: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45985251665115356
    2. ' =' → logprob: -1.3348524570465088
    3. ',' → logprob: -2.959852457046509
    4. '```' → logprob: -3.584852457046509
    5. '*' → logprob: -3.959852457046509
    6. '[' → logprob: -6.334852695465088
    7. '*=' → logprob: -7.084852695465088
    8. '   ' → logprob: -7.084852695465088
    9. ',
' → logprob: -7.334852695465088
    10. '``' → logprob: -7.584852695465088

Token 1702: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.031212305650115013
    2. ' beam' → logprob: -3.531212329864502
    3. 'cum' → logprob: -7.406212329864502
    4. 'ans' → logprob: -7.531212329864502
    5. ' cum' → logprob: -8.531211853027344
    6. ' ans' → logprob: -9.781211853027344
    7. '   ' → logprob: -11.281211853027344
    8. 'be' → logprob: -12.031211853027344
    9. '10' → logprob: -12.406211853027344
    10. '(' → logprob: -12.531211853027344

Token 1703: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.432518421206623e-05
    2. '[' → logprob: -10.5000638961792
    3. '```' → logprob: -10.8750638961792
    4. '[
' → logprob: -11.2500638961792
    5. 'i' → logprob: -12.8750638961792
    6. '(i' → logprob: -14.8750638961792
    7. '<|end|>' → logprob: -15.2500638961792
    8. '``' → logprob: -15.3750638961792
    9. '`' → logprob: -15.3750638961792
    10. ']' → logprob: -15.3750638961792

Token 1704: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08203835785388947
    2. '[' → logprob: -2.582038402557373
    3. ')[' → logprob: -6.707038402557373
    4. '[i' → logprob: -6.707038402557373
    5. '```' → logprob: -8.207037925720215
    6. ']' → logprob: -8.457037925720215
    7. '   ' → logprob: -9.832037925720215
    8. '>[' → logprob: -10.207037925720215
    9. ')][' → logprob: -10.707037925720215
    10. '])[' → logprob: -11.207037925720215

Token 1705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002016331272898242
    2. '```' → logprob: -9.250201225280762
    3. '0' → logprob: -9.625201225280762
    4. 'i' → logprob: -11.000201225280762
    5. '[' → logprob: -11.750201225280762
    6. '   ' → logprob: -12.500201225280762
    7. '``' → logprob: -13.125201225280762
    8. '[i' → logprob: -13.500201225280762
    9. '`' → logprob: -13.625201225280762
    10. '-' → logprob: -13.875201225280762

Token 1706: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.830025315284729
    2. '<|end|>' → logprob: -0.955025315284729
    3. ')' → logprob: -2.0800251960754395
    4. ']' → logprob: -4.2050251960754395
    5. '               ' → logprob: -4.9550251960754395
    6. '           ' → logprob: -4.9550251960754395
    7. '<|end|>' → logprob: -5.3300251960754395
    8. ')
' → logprob: -5.3300251960754395
    9. '       ' → logprob: -5.8300251960754395
    10. '```' → logprob: -5.9550251960754395

Token 1707: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.44137030839920044
    2. '                   ' → logprob: -1.0663702487945557
    3. '                       ' → logprob: -5.066370487213135
    4. '``' → logprob: -5.816370487213135
    5. '                           ' → logprob: -6.316370487213135
    6. '                               ' → logprob: -7.691370487213135
    7. ' if' → logprob: -8.191370010375977
    8. '<|end|>' → logprob: -8.691370010375977
    9. '               ' → logprob: -8.941370010375977
    10. '           ' → logprob: -9.691370010375977

Token 1708: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2547394335269928
    2. 'if' (adapté à ' if') → logprob: -1.5047394037246704
    3. ' if' → logprob: -6.504739284515381
    4. '```' → logprob: -6.879739284515381
    5. '                       ' → logprob: -9.004739761352539
    6. 'for' → logprob: -9.879739761352539
    7. '           ' → logprob: -10.254739761352539
    8. '                           ' → logprob: -10.254739761352539
    9. '               ' → logprob: -10.629739761352539
    10. '``' → logprob: -12.754739761352539

Token 1709: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06251251697540283
    2. ' B' → logprob: -2.8125123977661133
    3. 'temp' → logprob: -7.687512397766113
    4. 'ans' → logprob: -10.187512397766113
    5. ' ans' → logprob: -10.812512397766113
    6. ' temp' → logprob: -11.312512397766113
    7. '   ' → logprob: -12.312512397766113
    8. '	B' → logprob: -12.812512397766113
    9. '(B' → logprob: -12.812512397766113
    10. '
' → logprob: -13.687512397766113

Token 1710: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.43185967206954956
    2. '*' → logprob: -1.0568597316741943
    3. '>' → logprob: -6.556859493255615
    4. ' >' → logprob: -6.931859493255615
    5. '*i' → logprob: -8.306859970092773
    6. '```' → logprob: -8.431859970092773
    7. '[i' → logprob: -9.556859970092773
    8. '   ' → logprob: -9.681859970092773
    9. '           ' → logprob: -10.931859970092773
    10. ')' → logprob: -11.306859970092773

Token 1711: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07922684401273727
    2. ' ans' → logprob: -2.5792267322540283
    3. 'temp' → logprob: -8.20422649383545
    4. '(ans' → logprob: -10.07922649383545
    5. ' temp' → logprob: -11.07922649383545
    6. '	ans' → logprob: -12.45422649383545
    7. '_ans' → logprob: -14.20422649383545
    8. 'answer' → logprob: -14.82922649383545
    9. '```' → logprob: -14.95422649383545
    10. 'anst' → logprob: -15.07922649383545

Token 1712: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006757409777492285
    2. '[temp' → logprob: -5.8817572593688965
    3. '<' → logprob: -6.3817572593688965
    4. '```' → logprob: -7.1317572593688965
    5. '>' → logprob: -7.7567572593688965
    6. ' <' → logprob: -8.256757736206055
    7. 'temp' → logprob: -8.256757736206055
    8. '[i' → logprob: -8.506757736206055
    9. '   ' → logprob: -9.381757736206055
    10. 'ans' → logprob: -10.131757736206055

Token 1713: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07898198813199997
    2. '1' → logprob: -2.578981876373291
    3. '   ' → logprob: -10.07898235321045
    4. ' ' → logprob: -10.95398235321045
    5. '```' → logprob: -11.45398235321045
    6. '[' → logprob: -11.95398235321045
    7. '
' → logprob: -12.07898235321045
    8. '#' → logprob: -13.07898235321045
    9. '    ' → logprob: -13.57898235321045
    10. '``' → logprob: -13.89148235321045

Token 1714: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22823168337345123
    2. '<' → logprob: -1.72823166847229
    3. '>' → logprob: -4.228231906890869
    4. ' >' → logprob: -4.478231906890869
    5. '[' → logprob: -9.228231430053711
    6. '                   ' → logprob: -9.478231430053711
    7. '                       ' → logprob: -9.853231430053711
    8. '```' → logprob: -9.853231430053711
    9. '<int' → logprob: -10.228231430053711
    10. '   ' → logprob: -10.478231430053711

Token 1715: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.024873949587345123
    2. ' <' → logprob: -3.774873971939087
    3. '<int' → logprob: -6.899873733520508
    4. '>' → logprob: -8.149873733520508
    5. '```' → logprob: -9.274873733520508
    6. '[' → logprob: -9.649873733520508
    7. '<size' → logprob: -10.399873733520508
    8. '<class' → logprob: -11.399873733520508
    9. '<
' → logprob: -11.524873733520508
    10. ' >' → logprob: -11.524873733520508

Token 1716: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.023250484839081764
    2. ' ans' → logprob: -3.7732505798339844
    3. '(ans' → logprob: -13.148250579833984
    4. '	ans' → logprob: -13.273250579833984
    5. 'temp' → logprob: -14.273250579833984
    6. '   ' → logprob: -14.773250579833984
    7. '_ans' → logprob: -16.398250579833984
    8. 'anst' → logprob: -16.898250579833984
    9. ' ' → logprob: -17.023250579833984
    10. 'B' → logprob: -17.023250579833984

Token 1717: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.047134305234067e-05
    2. '```' → logprob: -10.500030517578125
    3. '[i' → logprob: -13.500030517578125
    4. '[
' → logprob: -14.750030517578125
    5. '``' → logprob: -15.125030517578125
    6. ' [' → logprob: -15.250030517578125
    7. '   ' → logprob: -15.625030517578125
    8. 'ans' → logprob: -16.500030517578125
    9. '`' → logprob: -16.750030517578125
    10. '#' → logprob: -16.875030517578125

Token 1718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023167727049440145
    2. 'i' → logprob: -6.127316951751709
    3. '```' → logprob: -9.87731647491455
    4. '   ' → logprob: -10.25231647491455
    5. '0' → logprob: -11.00231647491455
    6. ' ' → logprob: -11.37731647491455
    7. '[i' → logprob: -12.25231647491455
    8. '(i' → logprob: -12.75231647491455
    9. ' i' → logprob: -12.87731647491455
    10. '``' → logprob: -13.25231647491455

Token 1719: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01607472635805607
    2. '*' → logprob: -4.1410746574401855
    3. '```' → logprob: -10.891075134277344
    4. '                   ' → logprob: -11.766075134277344
    5. '[i' → logprob: -12.891075134277344
    6. '[' → logprob: -13.016075134277344
    7. '                    ' → logprob: -13.766075134277344
    8. '               ' → logprob: -13.891075134277344
    9. ':
' → logprob: -14.141075134277344
    10. ' ' → logprob: -14.141075134277344

Token 1720: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5323558449745178
    2. '*' → logprob: -0.9073558449745178
    3. '```' → logprob: -5.907355785369873
    4. ' <' → logprob: -6.157355785369873
    5. '[' → logprob: -6.282355785369873
    6. '<' → logprob: -6.907355785369873
    7. '[i' → logprob: -7.532355785369873
    8. '*[' → logprob: -8.282356262207031
    9. ':' → logprob: -9.282356262207031
    10. '``' → logprob: -9.407356262207031

Token 1721: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.00026205103495158255
    2. ' temp' → logprob: -8.250262260437012
    3. 'ans' → logprob: -15.250262260437012
    4. 't' → logprob: -15.500262260437012
    5. '
' → logprob: -16.000261306762695
    6. 'tmp' → logprob: -16.125261306762695
    7. '(temp' → logprob: -16.875261306762695
    8. 'tem' → logprob: -17.625261306762695
    9. 'abs' → logprob: -17.750261306762695
    10. '	temp' → logprob: -18.500261306762695

Token 1722: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2214040905237198
    2. '                       ' → logprob: -1.7214040756225586
    3. ':' → logprob: -4.221404075622559
    4. '                   ' → logprob: -5.721404075622559
    5. '[' → logprob: -6.846404075622559
    6. '                      ' → logprob: -8.596404075622559
    7. '```' → logprob: -8.721404075622559
    8. '):
' → logprob: -9.221404075622559
    9. '                           ' → logprob: -9.471404075622559
    10. ' :
' → logprob: -9.596404075622559

Token 1723: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08328394591808319
    2. '```' → logprob: -3.0832839012145996
    3. '                               ' → logprob: -4.5832839012146
    4. '                   ' → logprob: -4.5832839012146
    5. '                           ' → logprob: -4.7082839012146
    6. '``' → logprob: -7.0832839012146
    7. '                        ' → logprob: -7.2082839012146
    8. ':
' → logprob: -7.3332839012146
    9. '                        
' → logprob: -7.3332839012146
    10. '):
' → logprob: -7.7082839012146

Token 1724: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0003147280658595264
    2. ' ans' → logprob: -8.375314712524414
    3. '```' → logprob: -9.750314712524414
    4. '	ans' → logprob: -11.375314712524414
    5. '                           ' → logprob: -12.375314712524414
    6. '                       ' → logprob: -13.000314712524414
    7. '``' → logprob: -13.250314712524414
    8. '(ans' → logprob: -13.250314712524414
    9. '                   ' → logprob: -13.500314712524414
    10. 'answer' → logprob: -13.500314712524414

Token 1725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02325223572552204
    2. ' =' → logprob: -3.773252248764038
    3. '```' → logprob: -12.648252487182617
    4. '=[' → logprob: -13.273252487182617
    5. '[' → logprob: -13.773252487182617
    6. '=
' → logprob: -15.023252487182617
    7. '                       ' → logprob: -16.523252487182617
    8. '＝' → logprob: -16.648252487182617
    9. ',' → logprob: -17.023252487182617
    10. '           ' → logprob: -17.148252487182617

Token 1726: ' [' (ID: 723)
  Prédit: '[temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[temp' → logprob: -0.20245106518268585
    2. ' [' → logprob: -1.9524511098861694
    3. '[' → logprob: -3.20245099067688
    4. '[t' → logprob: -7.577451229095459
    5. '[B' → logprob: -9.0774507522583
    6. '[
' → logprob: -10.4524507522583
    7. '[tmp' → logprob: -11.4524507522583
    8. '[T' → logprob: -12.4524507522583
    9. '[token' → logprob: -12.7024507522583
    10. 'temp' → logprob: -13.2024507522583

Token 1727: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0005538671393878758
    2. ' temp' → logprob: -7.500554084777832
    3. 'tmp' → logprob: -14.875554084777832
    4. '   ' → logprob: -15.875554084777832
    5. 'B' → logprob: -16.375553131103516
    6. '	temp' → logprob: -16.750553131103516
    7. '                           ' → logprob: -17.000553131103516
    8. 't' → logprob: -17.250553131103516
    9. '                   ' → logprob: -17.375553131103516
    10. '(temp' → logprob: -17.500553131103516

Token 1728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002226093056378886
    2. ' ,' → logprob: -9.250222206115723
    3. ',
' → logprob: -9.500222206115723
    4. '           ' → logprob: -11.125222206115723
    5. ',B' → logprob: -11.125222206115723
    6. ',i' → logprob: -11.375222206115723
    7. '```' → logprob: -12.625222206115723
    8. ',b' → logprob: -13.625222206115723
    9. '                   ' → logprob: -13.750222206115723
    10. '       ' → logprob: -13.875222206115723

Token 1729: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.012046286836266518
    2. ' B' → logprob: -4.5120463371276855
    3. 'beam' → logprob: -7.0120463371276855
    4. ' beam' → logprob: -9.637045860290527
    5. '   ' → logprob: -12.387045860290527
    6. '           ' → logprob: -12.637045860290527
    7. '                   ' → logprob: -12.637045860290527
    8. '               ' → logprob: -13.012045860290527
    9. '       ' → logprob: -13.137045860290527
    10. 'b' → logprob: -13.262045860290527

Token 1730: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1226272583007812
    2. '                   ' → logprob: -1.7476272583007812
    3. '               ' → logprob: -2.1226272583007812
    4. '           ' → logprob: -2.1226272583007812
    5. '                       ' → logprob: -2.2476272583007812
    6. ')' → logprob: -2.8726272583007812
    7. '```' → logprob: -3.1226272583007812
    8. '       ' → logprob: -3.7476272583007812
    9. '                           ' → logprob: -4.122627258300781
    10. '<|end|>' → logprob: -4.622627258300781

Token 1731: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5254283547401428
    2. '```' → logprob: -1.400428295135498
    3. '               ' → logprob: -2.650428295135498
    4. '           ' → logprob: -3.400428295135498
    5. '                   ' → logprob: -3.900428295135498
    6. ')' → logprob: -4.400428295135498
    7. '   ' → logprob: -4.525428295135498
    8. '<|end|>' → logprob: -4.900428295135498
    9. '                       ' → logprob: -5.650428295135498
    10. '``' → logprob: -7.150428295135498

Token 1732: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14110293984413147
    2. '```' → logprob: -2.5161030292510986
    3. '               ' → logprob: -4.0161027908325195
    4. '           ' → logprob: -4.3911027908325195
    5. 'for' → logprob: -4.6411027908325195
    6. 'else' (adapté à ' else') → logprob: -5.2661027908325195
    7. '                   ' → logprob: -6.8911027908325195
    8. ' for' → logprob: -7.2661027908325195
    9. '<|end|>' → logprob: -7.3911027908325195
    10. '                       ' → logprob: -7.5161027908325195

Token 1733: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23555850982666016
    2. '           ' → logprob: -1.6105585098266602
    3. '```' → logprob: -5.98555850982666
    4. ' if' → logprob: -6.23555850982666
    5. 'if' → logprob: -6.73555850982666
    6. '                   ' → logprob: -6.98555850982666
    7. '       ' → logprob: -7.11055850982666
    8. ' for' → logprob: -7.23555850982666
    9. ':
' → logprob: -7.48555850982666
    10. 'for' → logprob: -7.73555850982666

Token 1734: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.19914047420024872
    2. '       ' → logprob: -2.1991405487060547
    3. '               ' → logprob: -3.1991405487060547
    4. '           ' → logprob: -3.6991405487060547
    5. ' for' → logprob: -6.824140548706055
    6. '``' → logprob: -7.074140548706055
    7. 'for' → logprob: -7.199140548706055
    8. '                   ' → logprob: -7.449140548706055
    9. '                       ' → logprob: -8.074140548706055
    10. ' ' → logprob: -8.574140548706055

Token 1735: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8767873048782349
    2. 'temp' → logprob: -1.1267873048782349
    3. '               ' → logprob: -2.2517871856689453
    4. ' for' → logprob: -2.6267871856689453
    5. '                   ' → logprob: -3.1267871856689453
    6. '```' → logprob: -4.126787185668945
    7. ' temp' → logprob: -4.251787185668945
    8. '                       ' → logprob: -6.251787185668945
    9. '           ' → logprob: -6.376787185668945
    10. ' ' → logprob: -6.501787185668945

Token 1736: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1946190744638443
    2. '=' → logprob: -1.819619059562683
    3. '               ' → logprob: -4.444619178771973
    4. '                   ' → logprob: -6.319619178771973
    5. '           ' → logprob: -7.694619178771973
    6. ',' → logprob: -8.319619178771973
    7. '=end' → logprob: -9.194619178771973
    8. '=L' → logprob: -9.444619178771973
    9. '                ' → logprob: -9.569619178771973
    10. '   ' → logprob: -9.569619178771973

Token 1737: ' R' (ID: 460)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5517048239707947
    2. 'start' → logprob: -1.3017048835754395
    3. 'R' → logprob: -2.4267048835754395
    4. ' end' → logprob: -3.4267048835754395
    5. ' start' → logprob: -4.1767048835754395
    6. ' =' → logprob: -5.4267048835754395
    7. ' R' → logprob: -5.5517048835754395
    8. '   ' → logprob: -6.5517048835754395
    9. '       ' → logprob: -6.5517048835754395
    10. '=' → logprob: -6.9267048835754395

Token 1738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029765525832772255
    2. ' =' → logprob: -3.5297656059265137
    3. '               ' → logprob: -11.529765129089355
    4. '=end' → logprob: -13.404765129089355
    5. ',' → logprob: -13.904765129089355
    6. '                   ' → logprob: -14.279765129089355
    7. '                ' → logprob: -14.529765129089355
    8. '            ' → logprob: -14.654765129089355
    9. '=L' → logprob: -14.904765129089355
    10. '           ' → logprob: -15.279765129089355

Token 1739: ' m' (ID: 284)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16312037408351898
    2. ' end' → logprob: -1.9131203889846802
    3. '(end' → logprob: -6.038120269775391
    4. 'start' → logprob: -8.78812026977539
    5. '               ' → logprob: -8.91312026977539
    6. ' (' → logprob: -9.91312026977539
    7. '[end' → logprob: -10.41312026977539
    8. '                   ' → logprob: -10.53812026977539
    9. '   ' → logprob: -10.66312026977539
    10. '(' → logprob: -11.16312026977539

Token 1740: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2796710431575775
    2. ',' → logprob: -1.9046710729599
    3. ' =' → logprob: -2.4046709537506104
    4. '               ' → logprob: -6.2796711921691895
    5. '[i' → logprob: -7.1546711921691895
    6. '```' → logprob: -7.6546711921691895
    7. '=i' → logprob: -7.9046711921691895
    8. '                   ' → logprob: -8.279670715332031
    9. '=end' → logprob: -8.279670715332031
    10. '=L' → logprob: -8.779670715332031

Token 1741: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.06200891733169556
    2. ' end' → logprob: -2.812008857727051
    3. '               ' → logprob: -10.81200885772705
    4. '           ' → logprob: -11.56200885772705
    5. '       ' → logprob: -12.31200885772705
    6. '   ' → logprob: -12.81200885772705
    7. '                   ' → logprob: -13.18700885772705
    8. '(end' → logprob: -14.43700885772705
    9. '                       ' → logprob: -15.18700885772705
    10. '            ' → logprob: -15.31200885772705

Token 1742: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.811348480870947e-05
    2. '[i' → logprob: -10.62504768371582
    3. '+' → logprob: -11.75004768371582
    4. 'R' → logprob: -12.25004768371582
    5. '```' → logprob: -12.37504768371582
    6. '[L' → logprob: -13.75004768371582
    7. 'l' → logprob: -14.00004768371582
    8. '``' → logprob: -14.12504768371582
    9. '   ' → logprob: -14.50004768371582
    10. '(i' → logprob: -14.50004768371582

Token 1743: '[i' (ID: 1768)
  Prédit: '[end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[end' → logprob: -0.6831498742103577
    2. '[L' → logprob: -1.183149814605713
    3. '[' → logprob: -2.183149814605713
    4. '[i' → logprob: -2.808149814605713
    5. 'L' → logprob: -4.808149814605713
    6. '+' → logprob: -5.433149814605713
    7. '[R' → logprob: -6.433149814605713
    8. '```' → logprob: -8.433150291442871
    9. '[start' → logprob: -8.808150291442871
    10. '[left' → logprob: -9.058150291442871

Token 1744: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10282816737890244
    2. ' +' → logprob: -2.35282826423645
    3. ']' → logprob: -6.477828025817871
    4. ']+' → logprob: -7.102828025817871
    5. '               ' → logprob: -9.102828025817871
    6. '[i' → logprob: -9.727828025817871
    7. ']
' → logprob: -10.727828025817871
    8. '```' → logprob: -10.852828025817871
    9. '[' → logprob: -11.227828025817871
    10. '                   ' → logprob: -11.352828025817871

Token 1745: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.42189884185791016
    2. '               ' → logprob: -1.6718988418579102
    3. '                   ' → logprob: -2.04689884185791
    4. '``' → logprob: -4.67189884185791
    5. '                       ' → logprob: -4.92189884185791
    6. '[' → logprob: -5.67189884185791
    7. '       ' → logprob: -6.29689884185791
    8. '   ' → logprob: -7.04689884185791
    9. ':
' → logprob: -7.17189884185791
    10. '           ' → logprob: -7.17189884185791

Token 1746: ' temp' (ID: 5484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4600516557693481
    2. '```' → logprob: -1.4600516557693481
    3. '               ' → logprob: -1.7100516557693481
    4. '                   ' → logprob: -2.4600515365600586
    5. 'temp' (adapté à ' temp') → logprob: -2.7100515365600586
    6. ' for' → logprob: -2.8350515365600586
    7. '                       ' → logprob: -2.8350515365600586
    8. 'while' → logprob: -2.9600515365600586
    9. '[' → logprob: -4.835051536560059
    10. ' temp' → logprob: -5.085051536560059

Token 1747: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4752945005893707
    2. '=' → logprob: -0.9752944707870483
    3. '```' → logprob: -7.475294589996338
    4. ',' → logprob: -8.60029411315918
    5. '               ' → logprob: -9.72529411315918
    6. '                   ' → logprob: -9.72529411315918
    7. '       ' → logprob: -9.97529411315918
    8. '+' → logprob: -10.22529411315918
    9. '=temp' → logprob: -10.47529411315918
    10. '_temp' → logprob: -10.60029411315918

Token 1748: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.00043221889063715935
    2. ' Seg' → logprob: -7.750432014465332
    3. 'Segment' → logprob: -13.875432014465332
    4. 'seg' → logprob: -15.250432014465332
    5. 'Segments' → logprob: -16.00043296813965
    6. 'max' → logprob: -16.62543296813965
    7. '               ' → logprob: -17.87543296813965
    8. 'min' → logprob: -18.25043296813965
    9. '                   ' → logprob: -18.37543296813965
    10. '   ' → logprob: -18.50043296813965

Token 1749: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9737583994865417
    2. '2' → logprob: -1.2237584590911865
    3. '[L' → logprob: -1.9737584590911865
    4. 'L' → logprob: -2.4737584590911865
    5. '```' → logprob: -3.7237584590911865
    6. 'R' → logprob: -3.9737584590911865
    7. '   ' → logprob: -4.223758220672607
    8. 'Tree' → logprob: -4.723758220672607
    9. '(L' → logprob: -4.848758220672607
    10. '[i' → logprob: -5.098758220672607

Token 1750: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -3.011373155459296e-05
    2. '```' → logprob: -11.375030517578125
    3. '.' → logprob: -12.000030517578125
    4. '       ' → logprob: -12.375030517578125
    5. 'query' → logprob: -12.625030517578125
    6. '   ' → logprob: -13.375030517578125
    7. ' .' → logprob: -14.000030517578125
    8. '           ' → logprob: -14.125030517578125
    9. '               ' → logprob: -14.750030517578125
    10. ').' → logprob: -15.125030517578125

Token 1751: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.01448020152747631
    2. '(m' → logprob: -4.264480113983154
    3. 'L' → logprob: -8.514480590820312
    4. '(
' → logprob: -10.014480590820312
    5. 'm' → logprob: -10.139480590820312
    6. '(' → logprob: -10.764480590820312
    7. '(M' → logprob: -12.139480590820312
    8. '(i' → logprob: -12.639480590820312
    9. '(R' → logprob: -14.514480590820312
    10. '(l' → logprob: -14.639480590820312

Token 1752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01888144575059414
    2. ',R' → logprob: -4.143881320953369
    3. ',m' → logprob: -6.893881320953369
    4. ',L' → logprob: -7.268881320953369
    5. 'R' → logprob: -7.768881320953369
    6. ',
' → logprob: -8.518881797790527
    7. '+' → logprob: -9.268881797790527
    8. '               ' → logprob: -9.393881797790527
    9. 'L' → logprob: -9.643881797790527
    10. ' ,' → logprob: -9.893881797790527

Token 1753: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.001432620221748948
    2. 'end' → logprob: -6.626432418823242
    3. ' R' → logprob: -9.376432418823242
    4. '   ' → logprob: -12.126432418823242
    5. 'r' → logprob: -12.501432418823242
    6. '               ' → logprob: -12.626432418823242
    7. '           ' → logprob: -13.126432418823242
    8. 'L' → logprob: -13.876432418823242
    9. '                   ' → logprob: -13.876432418823242
    10. '       ' → logprob: -14.001432418823242

Token 1754: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0039658546447754
    2. ' +' → logprob: -1.0039658546447754
    3. ')' → logprob: -1.3789658546447754
    4. ')
' → logprob: -4.628965854644775
    5. '               ' → logprob: -5.628965854644775
    6. '```' → logprob: -6.878965854644775
    7. ')+' → logprob: -7.628965854644775
    8. '                   ' → logprob: -9.378965377807617
    9. '       ' → logprob: -9.378965377807617
    10. '                ' → logprob: -10.003965377807617

Token 1755: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2842308680992573e-05
    2. '```' → logprob: -11.750022888183594
    3. '+' → logprob: -12.000022888183594
    4. '2' → logprob: -12.250022888183594
    5. ' ' → logprob: -13.000022888183594
    6. ')' → logprob: -13.750022888183594
    7. '(' → logprob: -15.000022888183594
    8. '   ' → logprob: -15.875022888183594
    9. '``' → logprob: -16.625022888183594
    10. ')
' → logprob: -17.000022888183594

Token 1756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '+' → logprob: -13.250004768371582
    3. '```' → logprob: -13.250004768371582
    4. '2' → logprob: -14.750004768371582
    5. ')' → logprob: -15.375004768371582
    6. ' ' → logprob: -16.125003814697266
    7. '(' → logprob: -17.125003814697266
    8. '   ' → logprob: -17.375003814697266
    9. '
' → logprob: -17.375003814697266
    10. '``' → logprob: -17.750003814697266

Token 1757: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22989524900913239
    2. '               ' → logprob: -2.3548953533172607
    3. '<|end|>' → logprob: -2.8548953533172607
    4. '```' → logprob: -3.3548953533172607
    5. '+' → logprob: -5.104895114898682
    6. ')
' → logprob: -5.604895114898682
    7. '       ' → logprob: -6.729895114898682
    8. ' +' → logprob: -6.854895114898682
    9. '[' → logprob: -6.979895114898682
    10. '                   ' → logprob: -7.229895114898682

Token 1758: ' -' (ID: 533)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7313511967658997
    2. '               ' → logprob: -1.6063511371612549
    3. '<|end|>' → logprob: -1.8563511371612549
    4. '                   ' → logprob: -2.231351137161255
    5. '                       ' → logprob: -3.856351137161255
    6. '``' → logprob: -4.731351375579834
    7. '           ' → logprob: -5.356351375579834
    8. '+' → logprob: -5.731351375579834
    9. '       ' → logprob: -5.981351375579834
    10. '[' → logprob: -6.106351375579834

Token 1759: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.022664697840809822
    2. '(' → logprob: -4.397664546966553
    3. ' beam' → logprob: -4.772664546966553
    4. ' (' → logprob: -7.147664546966553
    5. '           ' → logprob: -7.897664546966553
    6. '(be' → logprob: -8.772665023803711
    7. '       ' → logprob: -9.647665023803711
    8. 'be' → logprob: -9.897665023803711
    9. '               ' → logprob: -10.022665023803711
    10. '(b' → logprob: -11.022665023803711

Token 1760: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015158153837546706
    2. '[' → logprob: -7.376515865325928
    3. 'i' → logprob: -7.501515865325928
    4. '```' → logprob: -8.12651538848877
    5. '[
' → logprob: -10.37651538848877
    6. '(i' → logprob: -12.50151538848877
    7. ' i' → logprob: -13.25151538848877
    8. '``' → logprob: -13.25151538848877
    9. '`' → logprob: -14.00151538848877
    10. '[L' → logprob: -14.87651538848877

Token 1761: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38813650608062744
    2. '[' → logprob: -1.1381365060806274
    3. '```' → logprob: -7.138136386871338
    4. '>[' → logprob: -9.263136863708496
    5. ''][' → logprob: -9.888136863708496
    6. ''[' → logprob: -9.888136863708496
    7. ')[' → logprob: -10.013136863708496
    8. ']' → logprob: -10.763136863708496
    9. '"][' → logprob: -10.763136863708496
    10. ' ][' → logprob: -10.763136863708496

Token 1762: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. '0' → logprob: -10.250041007995605
    3. '```' → logprob: -13.000041007995605
    4. 'i' → logprob: -13.375041007995605
    5. ' ' → logprob: -15.125041007995605
    6. '   ' → logprob: -15.250041007995605
    7. '
' → logprob: -15.562541007995605
    8. '[' → logprob: -16.25004005432129
    9. ']' → logprob: -16.31254005432129
    10. '``' → logprob: -16.75004005432129

Token 1763: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41179898381233215
    2. '[' → logprob: -2.2867989540100098
    3. '               ' → logprob: -2.9117989540100098
    4. '<|end|>' → logprob: -2.9117989540100098
    5. ' -' → logprob: -3.4117989540100098
    6. '[i' → logprob: -4.28679895401001
    7. '+' → logprob: -4.41179895401001
    8. '-' → logprob: -4.41179895401001
    9. '```' → logprob: -4.41179895401001
    10. ' +' → logprob: -4.53679895401001

Token 1764: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6339815855026245
    2. '```' → logprob: -0.8839815855026245
    3. '                   ' → logprob: -3.883981704711914
    4. '<|end|>' → logprob: -4.508981704711914
    5. ')' → logprob: -5.383981704711914
    6. '+' → logprob: -5.383981704711914
    7. '[' → logprob: -5.633981704711914
    8. '                       ' → logprob: -5.758981704711914
    9. '``' → logprob: -6.133981704711914
    10. '                ' → logprob: -6.383981704711914

Token 1765: ' temp' (ID: 5484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03593134135007858
    2. '               ' → logprob: -3.785931348800659
    3. 'if' → logprob: -4.53593111038208
    4. '```' → logprob: -7.28593111038208
    5. ' ' → logprob: -7.53593111038208
    6. '                   ' → logprob: -8.410931587219238
    7. '	if' → logprob: -9.035931587219238
    8. '                ' → logprob: -9.285931587219238
    9. '<|end|>' → logprob: -9.660931587219238
    10. ' temp' → logprob: -10.535931587219238

Token 1766: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48231667280197144
    2. ' =' → logprob: -1.4823167324066162
    3. ' <=' → logprob: -3.357316732406616
    4. '<|end|>' → logprob: -3.357316732406616
    5. ' +=' → logprob: -3.732316732406616
    6. '           ' → logprob: -4.982316493988037
    7. '<=' → logprob: -4.982316493988037
    8. ' -=' → logprob: -5.107316493988037
    9. '```' → logprob: -5.232316493988037
    10. '       ' → logprob: -5.482316493988037

Token 1767: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0021368174348026514
    2. ' beam' → logprob: -6.252136707305908
    3. '(' → logprob: -9.752137184143066
    4. 'abs' → logprob: -9.877137184143066
    5. '-' → logprob: -10.627137184143066
    6. 'be' → logprob: -11.002137184143066
    7. '   ' → logprob: -11.252137184143066
    8. '-be' → logprob: -11.627137184143066
    9. 'ans' → logprob: -12.377137184143066
    10. '       ' → logprob: -12.377137184143066

Token 1768: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '```' → logprob: -12.87500286102295
    3. '[' → logprob: -16.125003814697266
    4. '``' → logprob: -16.375003814697266
    5. 'i' → logprob: -17.250003814697266
    6. '`' → logprob: -17.375003814697266
    7. ''[' → logprob: -17.875003814697266
    8. '(i' → logprob: -18.000003814697266
    9. '[
' → logprob: -18.000003814697266
    10. ''s' → logprob: -18.750003814697266

Token 1769: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009637462790124118
    2. '[' → logprob: -7.2509636878967285
    3. '[i' → logprob: -9.000964164733887
    4. '```' → logprob: -9.625964164733887
    5. ''][' → logprob: -10.875964164733887
    6. '"][' → logprob: -11.375964164733887
    7. '>[' → logprob: -11.875964164733887
    8. ']' → logprob: -12.000964164733887
    9. ' ][' → logprob: -12.625964164733887
    10. ')[' → logprob: -12.625964164733887

Token 1770: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01622052863240242
    2. 'i' → logprob: -4.141220569610596
    3. '0' → logprob: -9.016220092773438
    4. '[i' → logprob: -10.391220092773438
    5. '(i' → logprob: -11.891220092773438
    6. '
' → logprob: -12.141220092773438
    7. '```' → logprob: -12.141220092773438
    8. ' i' → logprob: -12.266220092773438
    9. '   ' → logprob: -12.641220092773438
    10. '	i' → logprob: -13.391220092773438

Token 1771: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.060338594019412994
    2. ' -' → logprob: -3.1853384971618652
    3. '-' → logprob: -4.310338497161865
    4. '```' → logprob: -6.560338497161865
    5. '[i' → logprob: -7.185338497161865
    6. '           ' → logprob: -7.435338497161865
    7. '       ' → logprob: -8.560338973999023
    8. ')' → logprob: -8.810338973999023
    9. '   ' → logprob: -9.060338973999023
    10. '#' → logprob: -9.310338973999023

Token 1772: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04885554686188698
    2. '-' → logprob: -3.0488555431365967
    3. '```' → logprob: -8.423855781555176
    4. ' ' → logprob: -11.548855781555176
    5. '<|end|>' → logprob: -11.548855781555176
    6. '[' → logprob: -11.923855781555176
    7. '   ' → logprob: -11.923855781555176
    8. '       ' → logprob: -12.798855781555176
    9. '``' → logprob: -12.798855781555176
    10. ' ' → logprob: -13.298855781555176

Token 1773: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00038264848990365863
    2. ' beam' → logprob: -7.875382423400879
    3. '```' → logprob: -13.125382423400879
    4. '   ' → logprob: -15.125382423400879
    5. '       ' → logprob: -17.375383377075195
    6. 'be' → logprob: -17.375383377075195
    7. '``' → logprob: -17.375383377075195
    8. ' ' → logprob: -17.875383377075195
    9. '  ' → logprob: -18.125383377075195
    10. ' ' → logprob: -18.250383377075195

Token 1774: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009815473109483719
    2. '[' → logprob: -4.634815692901611
    3. '```' → logprob: -10.134815216064453
    4. 'i' → logprob: -11.384815216064453
    5. '[
' → logprob: -12.384815216064453
    6. '   ' → logprob: -14.259815216064453
    7. '``' → logprob: -14.384815216064453
    8. '(i' → logprob: -14.884815216064453
    9. 'beam' → logprob: -15.009815216064453
    10. '[user' → logprob: -15.384815216064453

Token 1775: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0067501855082809925
    2. '[' → logprob: -5.006750106811523
    3. '[i' → logprob: -11.506750106811523
    4. ''][' → logprob: -11.631750106811523
    5. '>[' → logprob: -12.381750106811523
    6. '```' → logprob: -12.631750106811523
    7. '"][' → logprob: -13.381750106811523
    8. ']' → logprob: -14.006750106811523
    9. 'def' → logprob: -14.131750106811523
    10. '#' → logprob: -14.131750106811523

Token 1776: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.274932143744081e-05
    2. '[i' → logprob: -10.750042915344238
    3. 'i' → logprob: -11.000042915344238
    4. '```' → logprob: -13.250042915344238
    5. '   ' → logprob: -14.125042915344238
    6. '[' → logprob: -14.250042915344238
    7. 'beam' → logprob: -15.125042915344238
    8. '
' → logprob: -15.250042915344238
    9. '(i' → logprob: -16.062541961669922
    10. '<|end|>' → logprob: -16.250041961669922

Token 1777: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0274945255368948
    2. ')
' → logprob: -4.277494430541992
    3. '               ' → logprob: -5.152494430541992
    4. ']' → logprob: -5.527494430541992
    5. '<|end|>' → logprob: -6.277494430541992
    6. '       ' → logprob: -7.277494430541992
    7. '```' → logprob: -8.277494430541992
    8. '           ' → logprob: -8.277494430541992
    9. ']
' → logprob: -8.902494430541992
    10. '                   ' → logprob: -9.902494430541992

Token 1778: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49008259177207947
    2. '```' → logprob: -0.9900826215744019
    3. '``' → logprob: -4.990082740783691
    4. '                   ' → logprob: -5.115082740783691
    5. '                       ' → logprob: -6.365082740783691
    6. '           ' → logprob: -8.115082740783691
    7. '                               ' → logprob: -8.615082740783691
    8. '       ' → logprob: -8.615082740783691
    9. '<|end|>' → logprob: -8.865082740783691
    10. ' if' → logprob: -9.365082740783691

Token 1779: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1403234302997589
    2. ' if' → logprob: -2.1403234004974365
    3. 'if' (adapté à ' if') → logprob: -4.640323638916016
    4. '```' → logprob: -5.890323638916016
    5. '                   ' → logprob: -7.765323638916016
    6. ' ' → logprob: -9.140323638916016
    7. '			' → logprob: -9.390323638916016
    8. '``' → logprob: -9.640323638916016
    9. '           ' → logprob: -9.890323638916016
    10. '                       ' → logprob: -10.140323638916016

Token 1780: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.38689306378364563
    2. 'temp' → logprob: -1.1368930339813232
    3. '(temp' → logprob: -11.011893272399902
    4. '               ' → logprob: -12.761893272399902
    5. '                   ' → logprob: -14.261893272399902
    6. '	temp' → logprob: -15.011893272399902
    7. ' ' → logprob: -15.511893272399902
    8. 't' → logprob: -15.761893272399902
    9. ' temps' → logprob: -15.761893272399902
    10. '                ' → logprob: -16.261892318725586

Token 1781: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16115610301494598
    2. '<=' → logprob: -1.9111560583114624
    3. '```' → logprob: -7.661156177520752
    4. '                   ' → logprob: -8.286155700683594
    5. '               ' → logprob: -9.161155700683594
    6. '           ' → logprob: -10.286155700683594
    7. '                  ' → logprob: -10.536155700683594
    8. '              ' → logprob: -11.786155700683594
    9. '                ' → logprob: -12.036155700683594
    10. ')<=' → logprob: -12.536155700683594

Token 1782: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018153687939047813
    2. ' ' → logprob: -4.018153667449951
    3. '               ' → logprob: -13.51815414428711
    4. '```' → logprob: -13.64315414428711
    5. '                   ' → logprob: -14.76815414428711
    6. '1' → logprob: -14.89315414428711
    7. '``' → logprob: -15.39315414428711
    8. '   ' → logprob: -15.39315414428711
    9. '           ' → logprob: -16.89315414428711
    10. ' ' → logprob: -17.64315414428711

Token 1783: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -18.0000057220459
    4. '```' → logprob: -18.7500057220459
    5. '   ' → logprob: -18.8750057220459
    6. '1' → logprob: -19.1250057220459
    7. ' ' → logprob: -20.1250057220459
    8. '               ' → logprob: -20.3750057220459
    9. '                   ' → logprob: -20.6250057220459
    10. ' ' → logprob: -20.7500057220459

Token 1784: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2147199809551239
    2. ':' → logprob: -1.9647200107574463
    3. ':
' → logprob: -3.0897200107574463
    4. '               ' → logprob: -5.464719772338867
    5. '                       ' → logprob: -6.339719772338867
    6. '```' → logprob: -7.089719772338867
    7. '           ' → logprob: -8.214719772338867
    8. ' and' → logprob: -9.589719772338867
    9. '                  ' → logprob: -9.589719772338867
    10. '                           ' → logprob: -9.839719772338867

Token 1785: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10396755486726761
    2. '                       ' → logprob: -2.9789676666259766
    3. '```' → logprob: -3.1039676666259766
    4. '               ' → logprob: -6.353967666625977
    5. '``' → logprob: -7.603967666625977
    6. '                               ' → logprob: -7.853967666625977
    7. '                           ' → logprob: -8.478967666625977
    8. '           ' → logprob: -9.603967666625977
    9. '                    ' → logprob: -10.978967666625977
    10. '                  ' → logprob: -11.228967666625977

Token 1786: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2449914813041687
    2. '                       ' → logprob: -1.7449915409088135
    3. '```' → logprob: -3.2449915409088135
    4. '``' → logprob: -6.994991302490234
    5. '               ' → logprob: -7.369991302490234
    6. '                           ' → logprob: -7.494991302490234
    7. '                               ' → logprob: -7.994991302490234
    8. ' temp' → logprob: -8.369991302490234
    9. '
' → logprob: -8.369991302490234
    10. 'temp' (adapté à ' temp') → logprob: -8.619991302490234

Token 1787: ' =' (ID: 314)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8016144037246704
    2. ' =' → logprob: -1.0516144037246704
    3. '=' → logprob: -1.8016144037246704
    4. '                   ' → logprob: -3.426614284515381
    5. ':' → logprob: -7.176614284515381
    6. '               ' → logprob: -7.301614284515381
    7. '                      ' → logprob: -7.301614284515381
    8. '                        ' → logprob: -7.426614284515381
    9. '                           ' → logprob: -7.926614284515381
    10. '                    ' → logprob: -8.051614761352539

Token 1788: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2014172375202179
    2. ' abs' → logprob: -1.7014172077178955
    3. '(abs' → logprob: -12.576416969299316
    4. '_abs' → logprob: -15.451416969299316
    5. '.abs' → logprob: -15.951416969299316
    6. '                   ' → logprob: -16.701417922973633
    7. '               ' → logprob: -17.076417922973633
    8. '0' → logprob: -17.076417922973633
    9. ' ' → logprob: -17.326417922973633
    10. '
' → logprob: -17.701417922973633

Token 1789: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.2015679031610489
    2. 'temp' → logprob: -1.7015678882598877
    3. '(
' → logprob: -8.951567649841309
    4. '(' → logprob: -10.826567649841309
    5. ' temp' → logprob: -13.076567649841309
    6. '[temp' → logprob: -13.951567649841309
    7. '$temp' → logprob: -14.076567649841309
    8. '
' → logprob: -15.076567649841309
    9. '_temp' → logprob: -15.326567649841309
    10. '	temp' → logprob: -15.326567649841309

Token 1790: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6001577973365784
    2. ')
' → logprob: -0.8501577973365784
    3. '                   ' → logprob: -4.850157737731934
    4. '```' → logprob: -5.475157737731934
    5. '):
' → logprob: -5.600157737731934
    6. '                       ' → logprob: -6.475157737731934
    7. '               ' → logprob: -6.975157737731934
    8. '[' → logprob: -7.100157737731934
    9. '                           ' → logprob: -7.350157737731934
    10. '[i' → logprob: -7.975157737731934

Token 1791: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.11885657906532288
    2. '``' → logprob: -2.99385666847229
    3. '                       ' → logprob: -3.24385666847229
    4. '                   ' → logprob: -3.99385666847229
    5. '                           ' → logprob: -6.618856430053711
    6. '               ' → logprob: -7.743856430053711
    7. '                               ' → logprob: -7.868856430053711
    8. 'temp' → logprob: -7.993856430053711
    9. '                        
' → logprob: -8.243856430053711
    10. '                     ' → logprob: -8.368856430053711

Token 1792: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.00012761499965563416
    2. '                   ' → logprob: -10.000127792358398
    3. '```' → logprob: -10.250127792358398
    4. 'if' → logprob: -10.625127792358398
    5. ' B' → logprob: -11.500127792358398
    6. '                       ' → logprob: -12.375127792358398
    7. '                     ' → logprob: -13.250127792358398
    8. 'for' → logprob: -13.500127792358398
    9. '                    ' → logprob: -13.875127792358398
    10. '``' → logprob: -14.500127792358398

Token 1793: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09444767981767654
    2. '[i' → logprob: -2.969447612762451
    3. '*' → logprob: -3.844447612762451
    4. '[' → logprob: -4.594447612762451
    5. ' =' → logprob: -5.844447612762451
    6. ' *=' → logprob: -6.219447612762451
    7. '=' → logprob: -7.344447612762451
    8. '```' → logprob: -7.469447612762451
    9. '*[' → logprob: -8.34444808959961
    10. ' [' → logprob: -8.59444808959961

Token 1794: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.6931689381599426
    2. 'beam' → logprob: -0.6931689381599426
    3. '```' → logprob: -11.818168640136719
    4. ' ' → logprob: -12.193168640136719
    5. '           ' → logprob: -12.943168640136719
    6. '   ' → logprob: -13.193168640136719
    7. '`' → logprob: -14.068168640136719
    8. 'be' → logprob: -14.068168640136719
    9. 'Beam' → logprob: -14.443168640136719
    10. '               ' → logprob: -14.568168640136719

Token 1795: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.625001907348633
    3. 'i' → logprob: -14.750001907348633
    4. '[' → logprob: -14.750001907348633
    5. '           ' → logprob: -17.250001907348633
    6. ' [' → logprob: -17.375001907348633
    7. '`' → logprob: -17.500001907348633
    8. '][' → logprob: -17.625001907348633
    9. '``' → logprob: -18.125001907348633
    10. '[
' → logprob: -18.375001907348633

Token 1796: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006065786816179752
    2. '[' → logprob: -5.131065845489502
    3. '[i' → logprob: -9.881065368652344
    4. ')[' → logprob: -10.381065368652344
    5. '   ' → logprob: -11.131065368652344
    6. ']' → logprob: -11.131065368652344
    7. '```' → logprob: -11.756065368652344
    8. ' ][' → logprob: -12.131065368652344
    9. '>[' → logprob: -12.631065368652344
    10. ''][' → logprob: -13.256065368652344

Token 1797: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4171867370605469
    2. '1' → logprob: -1.1671867370605469
    3. '[' → logprob: -3.792186737060547
    4. '[i' → logprob: -5.792186737060547
    5. ' i' → logprob: -5.917186737060547
    6. '   ' → logprob: -7.042186737060547
    7. '```' → logprob: -8.042186737060547
    8. '0' → logprob: -9.042186737060547
    9. ' ' → logprob: -9.167186737060547
    10. '	i' → logprob: -10.542186737060547

Token 1798: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2356852889060974
    2. '```' → logprob: -2.485685348510742
    3. '                       ' → logprob: -2.610685348510742
    4. '               ' → logprob: -3.610685348510742
    5. '           ' → logprob: -4.735685348510742
    6. '                           ' → logprob: -5.860685348510742
    7. '                        
' → logprob: -6.360685348510742
    8. '<|end|>' → logprob: -6.485685348510742
    9. '       ' → logprob: -6.610685348510742
    10. ')' → logprob: -6.735685348510742

Token 1799: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.26404476165771484
    2. '                       ' → logprob: -2.014044761657715
    3. '                   ' → logprob: -2.514044761657715
    4. '                           ' → logprob: -4.764044761657715
    5. '                               ' → logprob: -5.764044761657715
    6. '``' → logprob: -6.389044761657715
    7. '                        ' → logprob: -7.014044761657715
    8. '<|end|>' → logprob: -7.139044761657715
    9. '               ' → logprob: -7.514044761657715
    10. '                    ' → logprob: -8.139044761657715

Token 1800: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1812900304794312
    2. '                       ' → logprob: -1.4312900304794312
    3. '                   ' → logprob: -1.4312900304794312
    4. ' if' → logprob: -1.8062900304794312
    5. '```' → logprob: -3.1812901496887207
    6. '                               ' → logprob: -5.431290149688721
    7. '                           ' → logprob: -5.806290149688721
    8. '               ' → logprob: -7.431290149688721
    9. '``' → logprob: -7.556290149688721
    10. '                        ' → logprob: -8.931289672851562

Token 1801: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12713482975959778
    2. ' B' → logprob: -2.1271347999572754
    3. ' ans' → logprob: -8.877135276794434
    4. 'ans' → logprob: -9.752135276794434
    5. '(ans' → logprob: -12.752135276794434
    6. '                   ' → logprob: -12.877135276794434
    7. '(B' → logprob: -14.127135276794434
    8. '           ' → logprob: -14.627135276794434
    9. '               ' → logprob: -14.877135276794434
    10. '```' → logprob: -15.127135276794434

Token 1802: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.020593157038092613
    2. '*' → logprob: -3.8955931663513184
    3. '```' → logprob: -10.27059268951416
    4. '   ' → logprob: -12.14559268951416
    5. '               ' → logprob: -13.02059268951416
    6. '       ' → logprob: -13.14559268951416
    7. '           ' → logprob: -13.14559268951416
    8. '                   ' → logprob: -14.39559268951416
    9. '          ' → logprob: -14.39559268951416
    10. ' ' → logprob: -14.39559268951416

Token 1803: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0015043864259496331
    2. ' ans' → logprob: -6.501504421234131
    3. '	ans' → logprob: -13.876503944396973
    4. '(ans' → logprob: -14.001503944396973
    5. 'anst' → logprob: -15.626503944396973
    6. '_ans' → logprob: -16.75150489807129
    7. '```' → logprob: -17.75150489807129
    8. '
' → logprob: -17.87650489807129
    9. '   ' → logprob: -18.75150489807129
    10. '           ' → logprob: -19.37650489807129

Token 1804: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016674461076036096
    2. ' <' → logprob: -7.626667499542236
    3. '```' → logprob: -7.626667499542236
    4. '   ' → logprob: -8.501667022705078
    5. ' [' → logprob: -8.751667022705078
    6. '<' → logprob: -9.501667022705078
    7. '[i' → logprob: -9.751667022705078
    8. '       ' → logprob: -9.876667022705078
    9. '[-' → logprob: -10.876667022705078
    10. '``' → logprob: -11.001667022705078

Token 1805: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001159623614512384
    2. '[' → logprob: -7.12615966796875
    3. 'temp' → logprob: -8.75115966796875
    4. 'ans' → logprob: -9.87615966796875
    5. '   ' → logprob: -10.00115966796875
    6. ' ' → logprob: -10.50115966796875
    7. '1' → logprob: -10.62615966796875
    8. '       ' → logprob: -11.50115966796875
    9. ' ans' → logprob: -11.75115966796875
    10. 'i' → logprob: -12.12615966796875

Token 1806: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10046372562646866
    2. '<' → logprob: -2.350463628768921
    3. '```' → logprob: -9.1004638671875
    4. '[' → logprob: -9.8504638671875
    5. '                           ' → logprob: -11.4754638671875
    6. '                       ' → logprob: -11.4754638671875
    7. '<int' → logprob: -11.7254638671875
    8. ' >' → logprob: -11.7254638671875
    9. '                        ' → logprob: -11.8504638671875
    10. '                   ' → logprob: -12.4754638671875

Token 1807: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4754422903060913
    2. ' <' → logprob: -0.9754422903060913
    3. '[' → logprob: -7.225442409515381
    4. '```' → logprob: -8.225441932678223
    5. '<|end|>' → logprob: -9.475441932678223
    6. '                           ' → logprob: -9.475441932678223
    7. '                       ' → logprob: -9.850441932678223
    8. '<int' → logprob: -9.975441932678223
    9. '<class' → logprob: -11.475441932678223
    10. '<size' → logprob: -11.975441932678223

Token 1808: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005238140933215618
    2. ' ans' → logprob: -5.255238056182861
    3. '(ans' → logprob: -12.63023853302002
    4. '	ans' → logprob: -14.13023853302002
    5. '   ' → logprob: -15.88023853302002
    6. '```' → logprob: -16.255237579345703
    7. '_ans' → logprob: -17.130237579345703
    8. '           ' → logprob: -17.630237579345703
    9. 'answer' → logprob: -17.755237579345703
    10. 'B' → logprob: -18.130237579345703

Token 1809: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004912919830530882
    2. ' ans' → logprob: -5.754912853240967
    3. '[i' → logprob: -7.754912853240967
    4. 'ans' → logprob: -7.754912853240967
    5. ' [' → logprob: -8.004913330078125
    6. '           ' → logprob: -8.754913330078125
    7. '   ' → logprob: -9.254913330078125
    8. '```' → logprob: -9.504913330078125
    9. '1' → logprob: -10.004913330078125
    10. '               ' → logprob: -10.254913330078125

Token 1810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011713240382960066
    2. 'ans' → logprob: -9.125117301940918
    3. ' ' → logprob: -12.250117301940918
    4. '   ' → logprob: -13.000117301940918
    5. ' ans' → logprob: -14.250117301940918
    6. 'i' → logprob: -16.2501163482666
    7. '
' → logprob: -16.2501163482666
    8. '  ' → logprob: -17.0001163482666
    9. '```' → logprob: -17.0001163482666
    10. '           ' → logprob: -17.2501163482666

Token 1811: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0022821726743131876
    2. '*' → logprob: -6.12728214263916
    3. '                       ' → logprob: -10.62728214263916
    4. '                        ' → logprob: -10.75228214263916
    5. '                    ' → logprob: -11.00228214263916
    6. '                   ' → logprob: -11.37728214263916
    7. '                ' → logprob: -11.75228214263916
    8. '```' → logprob: -12.62728214263916
    9. '                      ' → logprob: -13.00228214263916
    10. ' ' → logprob: -13.00228214263916

Token 1812: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014200646430253983
    2. '*' → logprob: -4.264200687408447
    3. '                        ' → logprob: -11.139200210571289
    4. '                    ' → logprob: -11.764200210571289
    5. '                       ' → logprob: -12.014200210571289
    6. '                   ' → logprob: -12.764200210571289
    7. '                ' → logprob: -13.514200210571289
    8. '                      ' → logprob: -14.139200210571289
    9. '               ' → logprob: -14.389200210571289
    10. '```' → logprob: -14.639200210571289

Token 1813: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.055673111230134964
    2. ' temp' → logprob: -2.930673122406006
    3. 'beam' → logprob: -7.930673122406006
    4. 'B' → logprob: -9.055672645568848
    5. ' beam' → logprob: -9.180672645568848
    6. '   ' → logprob: -9.680672645568848
    7. 'ans' → logprob: -10.180672645568848
    8. 't' → logprob: -11.055672645568848
    9. ' ans' → logprob: -11.555672645568848
    10. 'tmp' → logprob: -11.555672645568848

Token 1814: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3919437527656555
    2. ':
' → logprob: -1.7669436931610107
    3. '                       ' → logprob: -1.8919436931610107
    4. '                   ' → logprob: -6.64194393157959
    5. '```' → logprob: -8.01694393157959
    6. '):
' → logprob: -8.26694393157959
    7. '                           ' → logprob: -8.51694393157959
    8. '               ' → logprob: -9.26694393157959
    9. '=' → logprob: -9.51694393157959
    10. '[' → logprob: -9.76694393157959

Token 1815: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06204599514603615
    2. '```' → logprob: -3.0620460510253906
    3. '                               ' → logprob: -5.187046051025391
    4. '                           ' → logprob: -5.437046051025391
    5. '``' → logprob: -7.187046051025391
    6. '                   ' → logprob: -7.312046051025391
    7. '                        
' → logprob: -7.687046051025391
    8. '                        ' → logprob: -7.937046051025391
    9. '                                               ' → logprob: -8.18704605102539
    10. '<|end|>' → logprob: -8.68704605102539

Token 1816: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.012711649760603905
    2. 'ans' (adapté à ' ans') → logprob: -4.387711524963379
    3. '                           ' → logprob: -9.387711524963379
    4. '```' → logprob: -9.762711524963379
    5. '	ans' → logprob: -10.887711524963379
    6. '(ans' → logprob: -11.137711524963379
    7. '                               ' → logprob: -11.637711524963379
    8. '                       ' → logprob: -12.012711524963379
    9. '           ' → logprob: -12.887711524963379
    10. '``' → logprob: -13.012711524963379

Token 1817: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602409929037094
    2. '=' → logprob: -1.9102410078048706
    3. '```' → logprob: -11.91024112701416
    4. '[' → logprob: -12.16024112701416
    5. '=
' → logprob: -13.78524112701416
    6. '                           ' → logprob: -14.28524112701416
    7. '           ' → logprob: -14.53524112701416
    8. '=[' → logprob: -14.53524112701416
    9. '                       ' → logprob: -14.91024112701416
    10. ')' → logprob: -15.28524112701416

Token 1818: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.03815027326345444
    2. '[' → logprob: -3.2881503105163574
    3. '[B' → logprob: -10.0381498336792
    4. ' beam' → logprob: -10.7881498336792
    5. ' B' → logprob: -11.2881498336792
    6. '[b' → logprob: -12.1631498336792
    7. '[val' → logprob: -12.1631498336792
    8. '[
' → logprob: -12.1631498336792
    9. ' (' → logprob: -12.4131498336792
    10. '[i' → logprob: -12.9131498336792

Token 1819: 'temp' (ID: 7340)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.044961657375097275
    2. 'beam' → logprob: -3.29496169090271
    3. ' B' → logprob: -5.169961452484131
    4. ' beam' → logprob: -7.544961452484131
    5. 'temp' → logprob: -7.669961452484131
    6. 'ans' → logprob: -9.169961929321289
    7. '	B' → logprob: -10.919961929321289
    8. '   ' → logprob: -11.044961929321289
    9. '           ' → logprob: -11.544961929321289
    10. '_B' → logprob: -11.794961929321289

Token 1820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026968008023686707
    2. ' ,' → logprob: -9.125269889831543
    3. '           ' → logprob: -9.875269889831543
    4. ',
' → logprob: -10.125269889831543
    5. ',B' → logprob: -10.750269889831543
    6. '               ' → logprob: -11.875269889831543
    7. '                   ' → logprob: -11.875269889831543
    8. '                       ' → logprob: -12.000269889831543
    9. '                           ' → logprob: -12.000269889831543
    10. '```' → logprob: -12.125269889831543

Token 1821: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.701890230178833
    2. 'beam' → logprob: -0.951890230178833
    3. ' beam' → logprob: -2.451890230178833
    4. ' B' → logprob: -3.451890230178833
    5. 'ans' → logprob: -8.576889991760254
    6. '   ' → logprob: -9.576889991760254
    7. ' ans' → logprob: -10.201889991760254
    8. '           ' → logprob: -10.201889991760254
    9. '               ' → logprob: -10.451889991760254
    10. '       ' → logprob: -10.701889991760254

Token 1822: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5986337065696716
    2. '               ' → logprob: -1.9736337661743164
    3. '                       ' → logprob: -2.0986337661743164
    4. '                   ' → logprob: -2.2236337661743164
    5. '           ' → logprob: -2.9736337661743164
    6. '       ' → logprob: -4.098633766174316
    7. '                           ' → logprob: -5.348633766174316
    8. '```' → logprob: -5.598633766174316
    9. ')' → logprob: -6.473633766174316
    10. '<|end|>' → logprob: -7.348633766174316

Token 1823: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003434238489717245
    2. '```' → logprob: -6.253434181213379
    3. '   ' → logprob: -6.753434181213379
    4. 'for' → logprob: -8.628434181213379
    5. '       ' → logprob: -9.128434181213379
    6. '
' → logprob: -10.378434181213379
    7. '``' → logprob: -11.628434181213379
    8. ' print' → logprob: -13.003434181213379
    9. '                        
' → logprob: -13.253434181213379
    10. '           ' → logprob: -13.753434181213379

Token 1824: ' temp' (ID: 5484)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1825: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.9316838979721069
    2. ' +=' → logprob: -1.056683897972107
    3. '=' → logprob: -2.1816840171813965
    4. '+=' → logprob: -2.5566840171813965
    5. ' =' → logprob: -3.0566840171813965
    6. '-=' → logprob: -3.9316840171813965
    7. '-' → logprob: -7.6816840171813965
    8. '   ' → logprob: -7.9316840171813965
    9. ' <<=' → logprob: -8.681683540344238
    10. '```' → logprob: -9.431683540344238

Token 1826: ' Seg' (ID: 13616)
  Prédit: ' Seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Seg' → logprob: -0.5966283679008484
    2. 'Seg' → logprob: -0.8466283679008484
    3. ' seg' → logprob: -4.846628189086914
    4. 'abs' → logprob: -4.971628189086914
    5. ' abs' → logprob: -5.721628189086914
    6. 'seg' → logprob: -7.096628189086914
    7. '0' → logprob: -7.346628189086914
    8. ' temp' → logprob: -8.346628189086914
    9. 'temp' → logprob: -8.346628189086914
    10. 'Segment' → logprob: -9.971628189086914

Token 1827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28123098611831665
    2. '2' → logprob: -1.4062309265136719
    3. 'Tree' → logprob: -9.531230926513672
    4. '```' → logprob: -12.781230926513672
    5. '   ' → logprob: -13.281230926513672
    6. 'Seg' → logprob: -13.656230926513672
    7. '
' → logprob: -14.906230926513672
    8. '  ' → logprob: -15.406230926513672
    9. '``' → logprob: -15.531230926513672
    10. ' ' → logprob: -15.531230926513672

Token 1828: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -3.650518920039758e-06
    2. '.' → logprob: -13.875003814697266
    3. 'query' → logprob: -13.875003814697266
    4. '```' → logprob: -14.125003814697266
    5. ' .' → logprob: -14.375003814697266
    6. '   ' → logprob: -16.500003814697266
    7. '       ' → logprob: -16.500003814697266
    8. '$query' → logprob: -16.750003814697266
    9. '=query' → logprob: -17.625003814697266
    10. '.temp' → logprob: -17.750003814697266

Token 1829: '(R' (ID: 4092)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.5801391005516052
    2. '(L' → logprob: -0.8301391005516052
    3. '(R' → logprob: -6.08013916015625
    4. '(m' → logprob: -6.70513916015625
    5. '(' → logprob: -7.95513916015625
    6. '(temp' → logprob: -9.70513916015625
    7. '(
' → logprob: -9.70513916015625
    8. 'end' → logprob: -9.83013916015625
    9. 'L' → logprob: -9.95513916015625
    10. '(start' → logprob: -10.70513916015625

Token 1830: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.46739014983177185
    2. '(R' → logprob: -1.0923901796340942
    3. 'R' → logprob: -4.217390060424805
    4. ',' → logprob: -4.592390060424805
    5. ' +' → logprob: -5.092390060424805
    6. '(L' → logprob: -6.217390060424805
    7. 'L' → logprob: -6.217390060424805
    8. ',R' → logprob: -6.717390060424805
    9. '```' → logprob: -7.467390060424805
    10. '(' → logprob: -8.092390060424805

Token 1831: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -11.250020980834961
    3. '+' → logprob: -13.000020980834961
    4. '```' → logprob: -13.000020980834961
    5. '   ' → logprob: -13.875020980834961
    6. '2' → logprob: -14.000020980834961
    7. '           ' → logprob: -15.125020980834961
    8. 'R' → logprob: -15.250020980834961
    9. 'L' → logprob: -16.00002098083496
    10. '(' → logprob: -16.12502098083496

Token 1832: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010008628305513412
    2. '2' → logprob: -9.250100135803223
    3. ' ' → logprob: -13.750100135803223
    4. '   ' → logprob: -14.000100135803223
    5. '```' → logprob: -14.375100135803223
    6. '                       ' → logprob: -15.875100135803223
    7. '                           ' → logprob: -15.875100135803223
    8. '                   ' → logprob: -15.875100135803223
    9. '(' → logprob: -15.875100135803223
    10. '0' → logprob: -16.000099182128906

Token 1833: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046067722141742706
    2. '(m' → logprob: -3.296067714691162
    3. ',m' → logprob: -5.921067714691162
    4. '```' → logprob: -6.046067714691162
    5. '+' → logprob: -6.671067714691162
    6. ' +' → logprob: -7.296067714691162
    7. '(' → logprob: -7.796067714691162
    8. '           ' → logprob: -8.92106819152832
    9. '       ' → logprob: -9.42106819152832
    10. ' ,' → logprob: -9.42106819152832

Token 1834: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007941728457808495
    2. 'm' → logprob: -4.882941722869873
    3. ' N' → logprob: -8.257942199707031
    4. '   ' → logprob: -10.507942199707031
    5. '           ' → logprob: -11.257942199707031
    6. '       ' → logprob: -11.632942199707031
    7. 'R' → logprob: -11.757942199707031
    8. '               ' → logprob: -12.132942199707031
    9. '                   ' → logprob: -12.507942199707031
    10. ' m' → logprob: -13.132942199707031

Token 1835: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10220425575971603
    2. ')
' → logprob: -2.3522043228149414
    3. '```' → logprob: -7.102204322814941
    4. '               ' → logprob: -7.602204322814941
    5. '+' → logprob: -7.852204322814941
    6. ')+' → logprob: -9.227204322814941
    7. '       ' → logprob: -10.102204322814941
    8. ' +' → logprob: -10.477204322814941
    9. ')
' → logprob: -10.602204322814941
    10. '           ' → logprob: -10.727204322814941

Token 1836: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010954678989946842
    2. '```' → logprob: -4.885954856872559
    3. '+' → logprob: -6.010954856872559
    4. '<|end|>' → logprob: -7.885954856872559
    5. ' +' → logprob: -8.635954856872559
    6. '              ' → logprob: -9.385954856872559
    7. 'temp' → logprob: -9.510954856872559
    8. '                ' → logprob: -10.135954856872559
    9. '                   ' → logprob: -11.010954856872559
    10. '(temp' → logprob: -11.135954856872559

Token 1837: ' temp' (ID: 5484)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02844369225203991
    2. '```' → logprob: -3.7784435749053955
    3. 'temp' (adapté à ' temp') → logprob: -5.528443813323975
    4. '                   ' → logprob: -7.903443813323975
    5. ' temp' → logprob: -8.278443336486816
    6. '           ' → logprob: -9.278443336486816
    7. '              ' → logprob: -9.278443336486816
    8. '                ' → logprob: -9.403443336486816
    9. '``' → logprob: -9.403443336486816
    10. '                       ' → logprob: -9.903443336486816

Token 1838: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38725078105926514
    2. '+=' → logprob: -1.6372507810592651
    3. '               ' → logprob: -2.2622509002685547
    4. '                   ' → logprob: -4.262250900268555
    5. '                ' → logprob: -6.387250900268555
    6. '           ' → logprob: -6.637250900268555
    7. ' =' → logprob: -6.762250900268555
    8. '```' → logprob: -7.137250900268555
    9. '                       ' → logprob: -7.262250900268555
    10. '              ' → logprob: -7.387250900268555

Token 1839: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0052891382947564125
    2. ' beam' → logprob: -5.255289077758789
    3. '-be' → logprob: -11.005289077758789
    4. '-' → logprob: -11.130289077758789
    5. 'be' → logprob: -11.505289077758789
    6. 'abs' → logprob: -12.505289077758789
    7. '       ' → logprob: -13.130289077758789
    8. '           ' → logprob: -13.130289077758789
    9. '   ' → logprob: -13.255289077758789
    10. '0' → logprob: -13.880289077758789

Token 1840: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -14.500001907348633
    3. '           ' → logprob: -14.625001907348633
    4. '```' → logprob: -15.500001907348633
    5. '(i' → logprob: -15.625001907348633
    6. '               ' → logprob: -15.875001907348633
    7. '       ' → logprob: -16.000001907348633
    8. '[' → logprob: -16.125001907348633
    9. '[
' → logprob: -16.625001907348633
    10. '`' → logprob: -17.125001907348633

Token 1841: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0677613839507103
    2. '[i' → logprob: -2.8177614212036133
    3. '```' → logprob: -5.442761421203613
    4. '           ' → logprob: -7.442761421203613
    5. '][' → logprob: -8.067761421203613
    6. '   ' → logprob: -9.317761421203613
    7. '       ' → logprob: -9.317761421203613
    8. ' [' → logprob: -9.817761421203613
    9. '>[' → logprob: -9.942761421203613
    10. '`' → logprob: -9.942761421203613

Token 1842: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. '1' → logprob: -11.750008583068848
    3. '[' → logprob: -14.625008583068848
    4. '
' → logprob: -15.250008583068848
    5. '   ' → logprob: -15.500008583068848
    6. ' ' → logprob: -15.875008583068848
    7. '```' → logprob: -16.625009536743164
    8. 'i' → logprob: -18.125009536743164
    9. '۰' → logprob: -18.375009536743164
    10. '(' → logprob: -18.750009536743164

Token 1843: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018442675471305847
    2. '-' → logprob: -4.518442630767822
    3. '               ' → logprob: -5.268442630767822
    4. '```' → logprob: -7.018442630767822
    5. '[' → logprob: -7.518442630767822
    6. ')' → logprob: -8.39344310760498
    7. '           ' → logprob: -9.39344310760498
    8. '                   ' → logprob: -9.51844310760498
    9. '<|end|>' → logprob: -9.76844310760498
    10. '              ' → logprob: -9.89344310760498

Token 1844: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030292348936200142
    2. '-' → logprob: -3.530292272567749
    3. '               ' → logprob: -7.780292510986328
    4. '```' → logprob: -9.780292510986328
    5. '           ' → logprob: -10.655292510986328
    6. '                   ' → logprob: -11.405292510986328
    7. '       ' → logprob: -12.405292510986328
    8. '              ' → logprob: -12.405292510986328
    9. '                ' → logprob: -12.530292510986328
    10. ' ' → logprob: -12.655292510986328

Token 1845: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -2.2842308680992573e-05
    2. ' beam' → logprob: -10.750022888183594
    3. '```' → logprob: -14.375022888183594
    4. '   ' → logprob: -15.375022888183594
    5. 'be' → logprob: -15.750022888183594
    6. '
' → logprob: -16.500022888183594
    7. '       ' → logprob: -16.500022888183594
    8. '           ' → logprob: -16.625022888183594
    9. 'bee' → logprob: -16.750022888183594
    10. 'beat' → logprob: -17.625022888183594

Token 1846: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6349473595619202
    2. 'beam' → logprob: -1.0099472999572754
    3. 'i' → logprob: -2.3849472999572754
    4. '[' → logprob: -5.384947299957275
    5. '```' → logprob: -5.759947299957275
    6. '1' → logprob: -6.009947299957275
    7. 'b' → logprob: -7.384947299957275
    8. 'be' → logprob: -7.509947299957275
    9. '   ' → logprob: -7.634947299957275
    10. '[
' → logprob: -7.634947299957275

Token 1847: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026155028492212296
    2. '][' → logprob: -3.9011549949645996
    3. '```' → logprob: -6.0261549949646
    4. '[i' → logprob: -6.7761549949646
    5. '1' → logprob: -6.7761549949646
    6. '-' → logprob: -7.6511549949646
    7. '#' → logprob: -8.776155471801758
    8. '           ' → logprob: -9.776155471801758
    9. '>[' → logprob: -10.276155471801758
    10. '       ' → logprob: -10.276155471801758

Token 1848: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004131536406930536
    2. 'i' → logprob: -7.875412940979004
    3. '<|end|>' → logprob: -11.625412940979004
    4. '   ' → logprob: -11.750412940979004
    5. ' ' → logprob: -12.000412940979004
    6. '[i' → logprob: -13.000412940979004
    7. '```' → logprob: -13.125412940979004
    8. '<|end|>' → logprob: -13.250412940979004
    9. '[' → logprob: -13.500412940979004
    10. ' i' → logprob: -14.500412940979004

Token 1849: ']
' (ID: 1592)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8102032542228699
    2. '               ' → logprob: -1.0602033138275146
    3. '       ' → logprob: -2.6852033138275146
    4. ']' → logprob: -3.0602033138275146
    5. ']
' → logprob: -3.1852033138275146
    6. ')' → logprob: -4.1852030754089355
    7. '<|end|>' → logprob: -4.3102030754089355
    8. ')
' → logprob: -4.8102030754089355
    9. '``' → logprob: -5.0602030754089355
    10. '           ' → logprob: -5.1852030754089355

Token 1850: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03423142060637474
    2. '```' → logprob: -3.409231424331665
    3. '<|end|>' → logprob: -7.784231185913086
    4. '``' → logprob: -9.159231185913086
    5. '                   ' → logprob: -10.784231185913086
    6. ' if' → logprob: -10.909231185913086
    7. '           ' → logprob: -12.534231185913086
    8. '                       ' → logprob: -13.034231185913086
    9. '<|end|>' → logprob: -13.034231185913086
    10. '                
' → logprob: -13.159231185913086

Token 1851: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020953716710209846
    2. '```' → logprob: -4.52095365524292
    3. 'if' (adapté à ' if') → logprob: -5.02095365524292
    4. ' if' → logprob: -5.77095365524292
    5. '                   ' → logprob: -9.395954132080078
    6. '``' → logprob: -10.520954132080078
    7. '                       ' → logprob: -11.770954132080078
    8. '           ' → logprob: -12.270954132080078
    9. '<|end|>' → logprob: -12.270954132080078
    10. '              ' → logprob: -12.770954132080078

Token 1852: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.3868728280067444
    2. ' temp' → logprob: -1.1368727684020996
    3. '(temp' → logprob: -13.511873245239258
    4. '	temp' → logprob: -16.261873245239258
    5. '   ' → logprob: -17.011873245239258
    6. '           ' → logprob: -17.136873245239258
    7. '               ' → logprob: -17.261873245239258
    8. 'temps' → logprob: -17.261873245239258
    9. ' temps' → logprob: -17.386873245239258
    10. 'tem' → logprob: -17.511873245239258

Token 1853: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5803796052932739
    2. '<=' → logprob: -0.8303796052932739
    3. '```' → logprob: -6.080379486083984
    4. '               ' → logprob: -6.830379486083984
    5. '                   ' → logprob: -7.455379486083984
    6. '           ' → logprob: -7.955379486083984
    7. '                  ' → logprob: -10.330379486083984
    8. '              ' → logprob: -10.705379486083984
    9. '          ' → logprob: -11.455379486083984
    10. '   ' → logprob: -11.580379486083984

Token 1854: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00475133815780282
    2. ' ' → logprob: -5.379751205444336
    3. '1' → logprob: -9.379751205444336
    4. '```' → logprob: -11.129751205444336
    5. '               ' → logprob: -11.379751205444336
    6. '   ' → logprob: -11.879751205444336
    7. '                   ' → logprob: -12.254751205444336
    8. 'True' → logprob: -13.254751205444336
    9. '           ' → logprob: -13.379751205444336
    10. '``' → logprob: -13.879751205444336

Token 1855: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.632542913896032e-05
    2. ' ' → logprob: -10.125046730041504
    3. '```' → logprob: -13.125046730041504
    4. '
' → logprob: -13.375046730041504
    5. '   ' → logprob: -13.875046730041504
    6. '1' → logprob: -14.000046730041504
    7. '       ' → logprob: -15.500046730041504
    8. '``' → logprob: -16.125045776367188
    9. '           ' → logprob: -16.375045776367188
    10. '     ' → logprob: -16.375045776367188

Token 1856: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011908233165740967
    2. ':' → logprob: -5.136908054351807
    3. '```' → logprob: -6.136908054351807
    4. '                       ' → logprob: -6.261908054351807
    5. '               ' → logprob: -7.011908054351807
    6. ':
' → logprob: -7.386908054351807
    7. '           ' → logprob: -9.011908531188965
    8. '                  ' → logprob: -9.261908531188965
    9. '                    ' → logprob: -10.261908531188965
    10. '                           ' → logprob: -10.386908531188965

Token 1857: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02104663848876953
    2. '```' → logprob: -4.7710466384887695
    3. '                       ' → logprob: -4.8960466384887695
    4. '               ' → logprob: -5.6460466384887695
    5. '           ' → logprob: -7.5210466384887695
    6. '                           ' → logprob: -8.64604663848877
    7. '                  ' → logprob: -8.77104663848877
    8. '                               ' → logprob: -9.02104663848877
    9. '``' → logprob: -9.39604663848877
    10. '                    ' → logprob: -9.77104663848877

Token 1858: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2572927474975586
    2. 'temp' (adapté à ' temp') → logprob: -2.2572927474975586
    3. ' temp' → logprob: -3.0072927474975586
    4. '                       ' → logprob: -3.1322927474975586
    5. '```' → logprob: -4.257292747497559
    6. '               ' → logprob: -4.632292747497559
    7. '           ' → logprob: -6.507292747497559
    8. '                           ' → logprob: -7.132292747497559
    9. '``' → logprob: -7.382292747497559
    10. '                    ' → logprob: -7.382292747497559

Token 1859: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34893953800201416
    2. '=' → logprob: -1.2239395380020142
    3. '                       ' → logprob: -8.848939895629883
    4. ' +=' → logprob: -9.098939895629883
    5. '                   ' → logprob: -9.598939895629883
    6. '```' → logprob: -10.473939895629883
    7. '+=' → logprob: -10.598939895629883
    8. '               ' → logprob: -10.723939895629883
    9. '                    ' → logprob: -10.848939895629883
    10. '           ' → logprob: -11.223939895629883

Token 1860: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.003108430653810501
    2. ' abs' → logprob: -6.503108501434326
    3. 'True' → logprob: -6.503108501434326
    4. 'temp' → logprob: -9.628108024597168
    5. '(abs' → logprob: -11.128108024597168
    6. ' True' → logprob: -11.628108024597168
    7. 'ans' → logprob: -12.253108024597168
    8. '
' → logprob: -13.128108024597168
    9. 'Abs' → logprob: -13.878108024597168
    10. '0' → logprob: -13.878108024597168

Token 1861: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.0012727351859211922
    2. 'temp' → logprob: -6.876272678375244
    3. '(
' → logprob: -8.751273155212402
    4. '(' → logprob: -9.501273155212402
    5. '[temp' → logprob: -12.626273155212402
    6. '(tmp' → logprob: -13.501273155212402
    7. ',temp' → logprob: -14.501273155212402
    8. '=temp' → logprob: -15.126273155212402
    9. '```' → logprob: -15.376273155212402
    10. '$temp' → logprob: -15.376273155212402

Token 1862: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13373179733753204
    2. ')' → logprob: -3.1337318420410156
    3. '               ' → logprob: -3.7587318420410156
    4. '                       ' → logprob: -3.8837318420410156
    5. ')
' → logprob: -4.133731842041016
    6. '```' → logprob: -4.633731842041016
    7. '           ' → logprob: -5.633731842041016
    8. '``' → logprob: -6.258731842041016
    9. '                  ' → logprob: -7.258731842041016
    10. '                    ' → logprob: -7.258731842041016

Token 1863: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08030916005373001
    2. '                       ' → logprob: -2.7053091526031494
    3. '```' → logprob: -4.8303093910217285
    4. '               ' → logprob: -7.2053093910217285
    5. '``' → logprob: -7.2053093910217285
    6. '+' → logprob: -8.70530891418457
    7. '                    ' → logprob: -9.08030891418457
    8. '                           ' → logprob: -9.20530891418457
    9. '           ' → logprob: -9.45530891418457
    10. '                     ' → logprob: -9.58030891418457

Token 1864: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -4.4849443838757e-06
    2. ' B' → logprob: -12.375004768371582
    3. '                   ' → logprob: -15.625004768371582
    4. '```' → logprob: -17.625003814697266
    5. '           ' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.250003814697266
    7. '               ' → logprob: -18.250003814697266
    8. 'ans' → logprob: -19.625003814697266
    9. 'A' → logprob: -20.625003814697266
    10. '_B' → logprob: -20.750003814697266

Token 1865: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2298152893781662
    2. '=' → logprob: -1.6048152446746826
    3. '                   ' → logprob: -5.479815483093262
    4. '```' → logprob: -9.229815483093262
    5. '                    ' → logprob: -9.979815483093262
    6. '                       ' → logprob: -10.479815483093262
    7. '               ' → logprob: -11.104815483093262
    8. '           ' → logprob: -11.479815483093262
    9. '                ' → logprob: -12.229815483093262
    10. '                        ' → logprob: -12.479815483093262

Token 1866: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.349584698677063
    2. ' beam' → logprob: -1.224584698677063
    3. ' ans' → logprob: -7.224584579467773
    4. 'ans' → logprob: -7.974584579467773
    5. ' ' → logprob: -10.474584579467773
    6. '```' → logprob: -11.974584579467773
    7. 'be' → logprob: -11.974584579467773
    8. '           ' → logprob: -12.224584579467773
    9. '               ' → logprob: -12.474584579467773
    10. '                   ' → logprob: -12.724584579467773

Token 1867: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.375017166137695
    3. 'i' → logprob: -12.250017166137695
    4. '```' → logprob: -13.875017166137695
    5. '(i' → logprob: -16.500017166137695
    6. '   ' → logprob: -16.500017166137695
    7. '`' → logprob: -17.375017166137695
    8. '[
' → logprob: -17.750017166137695
    9. ',i' → logprob: -17.875017166137695
    10. '``' → logprob: -17.875017166137695

Token 1868: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002193908003391698
    2. '][' → logprob: -8.500219345092773
    3. '```' → logprob: -11.875219345092773
    4. '[' → logprob: -12.250219345092773
    5. ']' → logprob: -13.625219345092773
    6. 'i' → logprob: -14.125219345092773
    7. '[
' → logprob: -14.250219345092773
    8. '   ' → logprob: -14.375219345092773
    9. '[I' → logprob: -15.750219345092773
    10. '`' → logprob: -16.000219345092773

Token 1869: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.2855416066013277e-05
    2. '[i' → logprob: -10.375032424926758
    3. '```' → logprob: -14.125032424926758
    4. '
' → logprob: -14.875032424926758
    5. '   ' → logprob: -15.500032424926758
    6. '1' → logprob: -15.625032424926758
    7. ' i' → logprob: -16.375032424926758
    8. '`' → logprob: -17.750032424926758
    9. '	i' → logprob: -17.750032424926758
    10. ''i' → logprob: -18.500032424926758

Token 1870: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03835885599255562
    2. '                       ' → logprob: -3.7883589267730713
    3. '```' → logprob: -5.288358688354492
    4. '               ' → logprob: -5.663358688354492
    5. ' *' → logprob: -6.288358688354492
    6. '           ' → logprob: -6.413358688354492
    7. '[' → logprob: -7.413358688354492
    8. ']' → logprob: -7.663358688354492
    9. ' if' → logprob: -8.038358688354492
    10. '*' → logprob: -8.288358688354492

Token 1871: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8581924438476562
    2. '                   ' → logprob: -0.9831924438476562
    3. '                       ' → logprob: -1.6081924438476562
    4. '``' → logprob: -7.358192443847656
    5. '               ' → logprob: -8.108192443847656
    6. '                           ' → logprob: -8.608192443847656
    7. '<|end|>' → logprob: -8.983192443847656
    8. '                        ' → logprob: -9.358192443847656
    9. '                    ' → logprob: -9.483192443847656
    10. '           ' → logprob: -9.608192443847656

Token 1872: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004422405268996954
    2. '                   ' → logprob: -5.754422187805176
    3. ' if' → logprob: -6.754422187805176
    4. '                       ' → logprob: -10.004422187805176
    5. '```' → logprob: -11.004422187805176
    6. 'for' → logprob: -11.629422187805176
    7. '               ' → logprob: -12.879422187805176
    8. '                           ' → logprob: -13.629422187805176
    9. '           ' → logprob: -13.754422187805176
    10. '                    ' → logprob: -13.879422187805176

Token 1873: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.20147961378097534
    2. 'B' → logprob: -1.7014796733856201
    3. ' ans' → logprob: -9.8264799118042
    4. 'ans' → logprob: -12.2014799118042
    5. '(B' → logprob: -13.2014799118042
    6. '   ' → logprob: -13.5764799118042
    7. '(ans' → logprob: -13.8264799118042
    8. ' ' → logprob: -13.8264799118042
    9. ' ' → logprob: -14.3264799118042
    10. '    ' → logprob: -15.2014799118042

Token 1874: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003211938077583909
    2. '*' → logprob: -5.753211975097656
    3. '```' → logprob: -10.628211975097656
    4. '[' → logprob: -12.628211975097656
    5. ' ' → logprob: -13.378211975097656
    6. '               ' → logprob: -13.878211975097656
    7. '                   ' → logprob: -14.003211975097656
    8. '*[' → logprob: -14.253211975097656
    9. ' ' → logprob: -14.503211975097656
    10. '           ' → logprob: -15.003211975097656

Token 1875: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.07889540493488312
    2. 'ans' → logprob: -2.578895330429077
    3. '(ans' → logprob: -12.828895568847656
    4. '	ans' → logprob: -13.703895568847656
    5. '```' → logprob: -14.078895568847656
    6. '_ans' → logprob: -14.203895568847656
    7. '`' → logprob: -16.203895568847656
    8. 'Ans' → logprob: -16.828895568847656
    9. ' ' → logprob: -16.828895568847656
    10. '
' → logprob: -16.828895568847656

Token 1876: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005711443373002112
    2. '```' → logprob: -9.125571250915527
    3. '   ' → logprob: -9.375571250915527
    4. '           ' → logprob: -9.625571250915527
    5. '*' → logprob: -9.875571250915527
    6. '               ' → logprob: -10.000571250915527
    7. '                   ' → logprob: -10.125571250915527
    8. '                       ' → logprob: -10.375571250915527
    9. ' [' → logprob: -10.625571250915527
    10. '[i' → logprob: -10.625571250915527

Token 1877: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02997632883489132
    2. '1' → logprob: -3.5299763679504395
    3. ' ' → logprob: -9.154975891113281
    4. '   ' → logprob: -9.904975891113281
    5. '
' → logprob: -10.654975891113281
    6. '```' → logprob: -11.279975891113281
    7. '[' → logprob: -11.654975891113281
    8. '-' → logprob: -11.904975891113281
    9. '  ' → logprob: -12.779975891113281
    10. 'i' → logprob: -12.779975891113281

Token 1878: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.007614201866090298
    2. '<' → logprob: -4.8826141357421875
    3. '[' → logprob: -12.882614135742188
    4. '```' → logprob: -12.882614135742188
    5. ']' → logprob: -14.632614135742188
    6. ')' → logprob: -15.007614135742188
    7. ' >' → logprob: -15.132614135742188
    8. '   ' → logprob: -15.507614135742188
    9. ']<' → logprob: -15.757614135742188
    10. ' ' → logprob: -15.757614135742188

Token 1879: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1134386956691742
    2. '<' → logprob: -2.238438606262207
    3. '```' → logprob: -7.488438606262207
    4. '[' → logprob: -10.488438606262207
    5. ' <=' → logprob: -11.988438606262207
    6. '``' → logprob: -12.863438606262207
    7. ' *' → logprob: -13.363438606262207
    8. '   ' → logprob: -13.613438606262207
    9. '<=' → logprob: -13.613438606262207
    10. '<p' → logprob: -13.613438606262207

Token 1880: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6931675672531128
    2. ' ans' → logprob: -0.6931675672531128
    3. '(ans' → logprob: -10.943167686462402
    4. '	ans' → logprob: -13.193167686462402
    5. '_ans' → logprob: -14.318167686462402
    6. '```' → logprob: -15.818167686462402
    7. 'Ans' → logprob: -16.443166732788086
    8. '           ' → logprob: -18.068166732788086
    9. '   ' → logprob: -18.318166732788086
    10. '``' → logprob: -18.568166732788086

Token 1881: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.996708104154095e-05
    2. 'ans' → logprob: -9.875100135803223
    3. '   ' → logprob: -10.375100135803223
    4. '1' → logprob: -11.375100135803223
    5. '       ' → logprob: -13.125100135803223
    6. '           ' → logprob: -13.625100135803223
    7. '0' → logprob: -13.750100135803223
    8. '(ans' → logprob: -14.750100135803223
    9. ' ans' → logprob: -15.375100135803223
    10. '
' → logprob: -15.500100135803223

Token 1882: '1' (ID: 16)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4776989817619324
    2. '1' → logprob: -0.9776989817619324
    3. ' ans' → logprob: -5.727698802947998
    4. 'i' → logprob: -8.727699279785156
    5. '```' → logprob: -9.602699279785156
    6. '   ' → logprob: -9.977699279785156
    7. '(ans' → logprob: -10.477699279785156
    8. ' ' → logprob: -10.602699279785156
    9. '	ans' → logprob: -11.477699279785156
    10. '_ans' → logprob: -11.602699279785156

Token 1883: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02055496536195278
    2. '*' → logprob: -3.895555019378662
    3. '```' → logprob: -11.645554542541504
    4. '                   ' → logprob: -13.770554542541504
    5. ' ' → logprob: -14.270554542541504
    6. '                       ' → logprob: -14.770554542541504
    7. '               ' → logprob: -15.145554542541504
    8. '[' → logprob: -15.270554542541504
    9. ' ' → logprob: -15.270554542541504
    10. '``' → logprob: -15.520554542541504

Token 1884: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12695026397705078
    2. '*' → logprob: -2.126950263977051
    3. '```' → logprob: -11.25195026397705
    4. '                   ' → logprob: -13.25195026397705
    5. '*[' → logprob: -13.50195026397705
    6. '                       ' → logprob: -13.87695026397705
    7. '[' → logprob: -14.12695026397705
    8. '[temp' → logprob: -14.25195026397705
    9. '``' → logprob: -14.50195026397705
    10. '               ' → logprob: -14.87695026397705

Token 1885: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.005950132850557566
    2. ' temp' → logprob: -5.130949974060059
    3. 'beam' → logprob: -11.755949974060059
    4. '   ' → logprob: -12.755949974060059
    5. '           ' → logprob: -12.755949974060059
    6. 'B' → logprob: -13.505949974060059
    7. '(temp' → logprob: -13.755949974060059
    8. 'tmp' → logprob: -14.130949974060059
    9. '               ' → logprob: -14.380949974060059
    10. '	temp' → logprob: -14.505949974060059

Token 1886: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.034558866173028946
    2. ':
' → logprob: -3.7845587730407715
    3. ':' → logprob: -5.0345587730407715
    4. '```' → logprob: -5.7845587730407715
    5. '                   ' → logprob: -7.5345587730407715
    6. '                      ' → logprob: -7.6595587730407715
    7. '                           ' → logprob: -8.15955924987793
    8. '                        ' → logprob: -8.65955924987793
    9. ' and' → logprob: -10.15955924987793
    10. '                               ' → logprob: -10.40955924987793

Token 1887: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02827150747179985
    2. '```' → logprob: -3.653271436691284
    3. '                           ' → logprob: -7.278271675109863
    4. '``' → logprob: -7.778271675109863
    5. '                   ' → logprob: -7.903271675109863
    6. '                               ' → logprob: -8.903271675109863
    7. '                        ' → logprob: -9.028271675109863
    8. ':
' → logprob: -9.403271675109863
    9. '                      ' → logprob: -10.153271675109863
    10. ':' → logprob: -10.153271675109863

Token 1888: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.4742267429828644
    2. ' ans' → logprob: -0.974226713180542
    3. '```' → logprob: -9.724226951599121
    4. '	ans' → logprob: -10.099226951599121
    5. '(ans' → logprob: -11.099226951599121
    6. '                           ' → logprob: -11.099226951599121
    7. '                               ' → logprob: -11.849226951599121
    8. '``' → logprob: -12.724226951599121
    9. '_ans' → logprob: -12.974226951599121
    10. '                       ' → logprob: -13.349226951599121

Token 1889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38711634278297424
    2. ' =' → logprob: -1.1371163129806519
    3. '=
' → logprob: -8.762116432189941
    4. '```' → logprob: -10.637116432189941
    5. '=[
' → logprob: -11.262116432189941
    6. ' =
' → logprob: -11.262116432189941
    7. '=[' → logprob: -11.637116432189941
    8. '[' → logprob: -11.887116432189941
    9. '+=' → logprob: -12.012116432189941
    10. '[
' → logprob: -12.137116432189941

Token 1890: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5402244329452515
    2. '[' → logprob: -0.9152244329452515
    3. ' beam' → logprob: -4.540224552154541
    4. 'beam' → logprob: -5.665224552154541
    5. '[
' → logprob: -6.790224552154541
    6. '[i' → logprob: -7.165224552154541
    7. ' B' → logprob: -8.540224075317383
    8. ' [
' → logprob: -8.665224075317383
    9. ' i' → logprob: -9.290224075317383
    10. '```' → logprob: -9.540224075317383

Token 1891: 'temp' (ID: 7340)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.14432545006275177
    2. 'beam' → logprob: -2.2693254947662354
    3. 'ans' → logprob: -4.019325256347656
    4. 'temp' → logprob: -4.394325256347656
    5. ' B' → logprob: -8.144325256347656
    6. '[' → logprob: -9.269325256347656
    7. '   ' → logprob: -9.394325256347656
    8. ' beam' → logprob: -9.644325256347656
    9. '[B' → logprob: -10.769325256347656
    10. '           ' → logprob: -11.144325256347656

Token 1892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003541734768077731
    2. '```' → logprob: -9.125353813171387
    3. '                       ' → logprob: -9.500353813171387
    4. ' ,' → logprob: -10.250353813171387
    5. '[' → logprob: -10.250353813171387
    6. '           ' → logprob: -10.375353813171387
    7. '                   ' → logprob: -10.625353813171387
    8. ',
' → logprob: -11.500353813171387
    9. '                           ' → logprob: -11.500353813171387
    10. '               ' → logprob: -11.500353813171387

Token 1893: ' B' (ID: 418)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.1729426085948944
    2. ' beam' → logprob: -2.047942638397217
    3. 'B' → logprob: -4.047942638397217
    4. ' B' → logprob: -5.047942638397217
    5. 'ans' → logprob: -5.422942638397217
    6. ' ans' → logprob: -6.547942638397217
    7. 'b' → logprob: -10.922942161560059
    8. '   ' → logprob: -11.297942161560059
    9. 'be' → logprob: -11.422942161560059
    10. '               ' → logprob: -11.672942161560059

Token 1894: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8074787855148315
    2. ']' → logprob: -1.9324787855148315
    3. '                   ' → logprob: -2.182478904724121
    4. '           ' → logprob: -2.182478904724121
    5. '               ' → logprob: -2.682478904724121
    6. '```' → logprob: -3.057478904724121
    7. ')' → logprob: -3.557478904724121
    8. '       ' → logprob: -3.807478904724121
    9. '                           ' → logprob: -4.557478904724121
    10. ']
' → logprob: -5.932478904724121

Token 1895: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6712310314178467
    2. '       ' → logprob: -1.1712310314178467
    3. 'print' → logprob: -2.2962310314178467
    4. '   ' → logprob: -3.1712310314178467
    5. ')' → logprob: -4.546231269836426
    6. '           ' → logprob: -5.171231269836426
    7. '               ' → logprob: -5.171231269836426
    8. '``' → logprob: -5.421231269836426
    9. '                   ' → logprob: -5.921231269836426
    10. 'for' → logprob: -6.171231269836426

Token 1896: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015641892328858376
    2. '   ' → logprob: -4.640641689300537
    3. '```' → logprob: -5.390641689300537
    4. 'return' → logprob: -6.890641689300537
    5. 'for' (adapté à ' for') → logprob: -8.765642166137695
    6. ')' → logprob: -9.890642166137695
    7. '<|end|>' → logprob: -10.765642166137695
    8. '``' → logprob: -10.765642166137695
    9. '       ' → logprob: -11.140642166137695
    10. ' print' → logprob: -11.265642166137695

Token 1897: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.054982371628284454
    2. ' i' → logprob: -2.9299824237823486
    3. 'j' → logprob: -9.92998218536377
    4. '_' → logprob: -11.55498218536377
    5. 'x' → logprob: -11.80498218536377
    6. '_i' → logprob: -11.80498218536377
    7. ' j' → logprob: -12.05498218536377
    8. '	i' → logprob: -12.67998218536377
    9. ' ' → logprob: -12.80498218536377
    10. '```' → logprob: -13.30498218536377

Token 1898: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5762489438056946
    2. 'in' → logprob: -0.8262489438056946
    3. '   ' → logprob: -8.826249122619629
    4. '```' → logprob: -10.451249122619629
    5. ',' → logprob: -10.701249122619629
    6. '(' → logprob: -11.201249122619629
    7. '_' → logprob: -11.326249122619629
    8. ' ' → logprob: -11.451249122619629
    9. 'i' → logprob: -11.576249122619629
    10. ' i' → logprob: -11.701249122619629

Token 1899: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00018625585653353482
    2. ' range' → logprob: -9.1251859664917
    3. 'in' → logprob: -9.5001859664917
    4. 'm' → logprob: -13.5001859664917
    5. ' in' → logprob: -15.5001859664917
    6. 'i' → logprob: -15.5001859664917
    7. '```' → logprob: -15.6251859664917
    8. '
' → logprob: -15.7501859664917
    9. '(range' → logprob: -16.000186920166016
    10. 'r' → logprob: -16.625186920166016

Token 1900: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.04385969415307045
    2. 'm' → logprob: -3.1688597202301025
    3. 'range' → logprob: -7.793859481811523
    4. '(N' → logprob: -8.043859481811523
    5. '(' → logprob: -9.668859481811523
    6. 'N' → logprob: -10.543859481811523
    7. '(range' → logprob: -11.043859481811523
    8. '   ' → logprob: -12.043859481811523
    9. '(n' → logprob: -12.793859481811523
    10. '(i' → logprob: -12.918859481811523

Token 1901: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011568211019039154
    2. '+' → logprob: -4.761568069458008
    3. '       ' → logprob: -7.511568069458008
    4. ',
' → logprob: -7.511568069458008
    5. ',N' → logprob: -7.511568069458008
    6. ',m' → logprob: -7.886568069458008
    7. '           ' → logprob: -8.136568069458008
    8. '   ' → logprob: -8.636568069458008
    9. ' ,' → logprob: -9.261568069458008
    10. ' +' → logprob: -9.386568069458008

Token 1902: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.3319124011322856e-05
    2. ' N' → logprob: -10.875022888183594
    3. '       ' → logprob: -12.875022888183594
    4. '           ' → logprob: -13.875022888183594
    5. '   ' → logprob: -15.500022888183594
    6. 'len' → logprob: -16.000022888183594
    7. '               ' → logprob: -16.125022888183594
    8. '
' → logprob: -16.500022888183594
    9. '                   ' → logprob: -16.500022888183594
    10. ')' → logprob: -17.000022888183594

Token 1903: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.53794264793396
    2. '):' → logprob: -1.53794264793396
    3. ':' → logprob: -1.66294264793396
    4. ':
' → logprob: -4.912942886352539
    5. '   ' → logprob: -6.537942886352539
    6. '       ' → logprob: -6.662942886352539
    7. '```' → logprob: -7.412942886352539
    8. '():
' → logprob: -7.912942886352539
    9. '           ' → logprob: -8.912942886352539
    10. ')' → logprob: -9.162942886352539

Token 1904: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3056625425815582
    2. '       ' → logprob: -1.8056625127792358
    3. '           ' → logprob: -2.4306626319885254
    4. '   ' → logprob: -4.930662631988525
    5. ' if' → logprob: -6.180662631988525
    6. '``' → logprob: -7.055662631988525
    7. 'if' → logprob: -7.805662631988525
    8. ':
' → logprob: -8.555662155151367
    9. ':' → logprob: -9.805662155151367
    10. '<|end|>' → logprob: -9.930662155151367

Token 1905: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038933124393224716
    2. '           ' → logprob: -4.288933277130127
    3. 'temp' → logprob: -4.413933277130127
    4. 'test' → logprob: -5.288933277130127
    5. '```' → logprob: -5.538933277130127
    6. '       ' → logprob: -6.913933277130127
    7. 'val' → logprob: -7.163933277130127
    8. ' if' → logprob: -7.413933277130127
    9. 'for' → logprob: -8.038932800292969
    10. '   ' → logprob: -8.288932800292969

Token 1906: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.17580673098564148
    2. 'end' → logprob: -3.050806760787964
    3. 'cum' → logprob: -3.175806760787964
    4. 'start' → logprob: -3.300806760787964
    5. ' beam' → logprob: -3.550806760787964
    6. ' start' → logprob: -6.425806522369385
    7. ' cum' → logprob: -6.550806522369385
    8. 'ans' → logprob: -6.550806522369385
    9. ' end' → logprob: -6.800806522369385
    10. '   ' → logprob: -8.300806999206543

Token 1907: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.861651490908116e-05
    2. '```' → logprob: -9.875068664550781
    3. '[' → logprob: -11.250068664550781
    4. '``' → logprob: -13.250068664550781
    5. '[
' → logprob: -14.375068664550781
    6. '][' → logprob: -14.625068664550781
    7. 'i' → logprob: -14.875068664550781
    8. '`' → logprob: -15.375068664550781
    9. '   ' → logprob: -15.375068664550781
    10. '(i' → logprob: -16.50006866455078

Token 1908: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004410771187394857
    2. '[' → logprob: -5.504410743713379
    3. '```' → logprob: -9.004410743713379
    4. ']' → logprob: -10.129410743713379
    5. '   ' → logprob: -10.504410743713379
    6. '>[' → logprob: -10.629410743713379
    7. ']][' → logprob: -11.379410743713379
    8. '``' → logprob: -11.379410743713379
    9. ')[' → logprob: -11.629410743713379
    10. '-' → logprob: -11.629410743713379

Token 1909: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02977617457509041
    2. '1' → logprob: -3.529776096343994
    3. '[' → logprob: -11.529776573181152
    4. '-' → logprob: -12.779776573181152
    5. '...' → logprob: -12.779776573181152
    6. '```' → logprob: -12.779776573181152
    7. ' ' → logprob: -13.592276573181152
    8. '   ' → logprob: -13.654776573181152
    9. '][' → logprob: -13.717276573181152
    10. '#' → logprob: -14.592276573181152

Token 1910: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005442928057163954
    2. ']' → logprob: -5.630443096160889
    3. '[' → logprob: -6.505443096160889
    4. '   ' → logprob: -9.25544261932373
    5. '-' → logprob: -10.25544261932373
    6. '>[' → logprob: -10.38044261932373
    7. '```' → logprob: -10.63044261932373
    8. ']>' → logprob: -10.75544261932373
    9. ']<' → logprob: -10.88044261932373
    10. ' ][' → logprob: -10.88044261932373

Token 1911: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06259918957948685
    2. '-' → logprob: -3.1875991821289062
    3. ' -' → logprob: -4.562599182128906
    4. '```' → logprob: -5.437599182128906
    5. ' <' → logprob: -6.687599182128906
    6. '][' → logprob: -6.937599182128906
    7. '   ' → logprob: -7.062599182128906
    8. '<' → logprob: -8.062599182128906
    9. '       ' → logprob: -8.562599182128906
    10. '>' → logprob: -8.562599182128906

Token 1912: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00023619852436240762
    2. ' beam' → logprob: -8.375236511230469
    3. 'i' → logprob: -12.625236511230469
    4. '0' → logprob: -14.250236511230469
    5. '```' → logprob: -14.250236511230469
    6. '   ' → logprob: -15.000236511230469
    7. '1' → logprob: -15.625236511230469
    8. ' i' → logprob: -15.875236511230469
    9. ' ' → logprob: -16.37523651123047
    10. '[i' → logprob: -16.37523651123047

Token 1913: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04972239211201668
    2. '[' → logprob: -3.04972243309021
    3. 'i' → logprob: -7.049722194671631
    4. 'beam' → logprob: -8.674722671508789
    5. '[user' → logprob: -10.424722671508789
    6. '```' → logprob: -10.799722671508789
    7. '1' → logprob: -11.049722671508789
    8. '(i' → logprob: -11.549722671508789
    9. 'user' → logprob: -11.924722671508789
    10. '[
' → logprob: -12.924722671508789

Token 1914: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07506813853979111
    2. '[' → logprob: -2.700068235397339
    3. '1' → logprob: -5.57506799697876
    4. '>[' → logprob: -7.07506799697876
    5. '-' → logprob: -8.325068473815918
    6. '>' → logprob: -9.575068473815918
    7. ']' → logprob: -9.575068473815918
    8. '[i' → logprob: -10.325068473815918
    9. '```' → logprob: -11.575068473815918
    10. 'i' → logprob: -11.575068473815918

Token 1915: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -14.125001907348633
    3. '[' → logprob: -14.375001907348633
    4. 'i' → logprob: -15.000001907348633
    5. '```' → logprob: -15.250001907348633
    6. '   ' → logprob: -16.250001907348633
    7. '[i' → logprob: -16.500001907348633
    8. '<|end|>' → logprob: -16.750001907348633
    9. 'user' → logprob: -17.125001907348633
    10. '[
' → logprob: -17.250001907348633

Token 1916: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16132694482803345
    2. '<=' → logprob: -2.9113268852233887
    3. ' >' → logprob: -3.1613268852233887
    4. '>' → logprob: -3.4113268852233887
    5. ']' → logprob: -4.536326885223389
    6. '```' → logprob: -5.661326885223389
    7. ')' → logprob: -5.911326885223389
    8. ' ==' → logprob: -6.786326885223389
    9. ' <' → logprob: -8.036327362060547
    10. '==' → logprob: -8.536327362060547

Token 1917: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3976784646511078
    2. ' <=' → logprob: -1.1476784944534302
    3. '>' → logprob: -4.647678375244141
    4. ' >' → logprob: -7.522678375244141
    5. '```' → logprob: -7.647678375244141
    6. '>=' → logprob: -10.39767837524414
    7. '==' → logprob: -10.52267837524414
    8. '<' → logprob: -10.89767837524414
    9. ')' → logprob: -11.39767837524414
    10. '   ' → logprob: -11.52267837524414

Token 1918: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.901345038088039e-05
    2. '10' → logprob: -9.375099182128906
    3. ' ' → logprob: -11.250099182128906
    4. '```' → logprob: -15.000099182128906
    5. '
' → logprob: -15.875099182128906
    6. '   ' → logprob: -16.125099182128906
    7. '1' → logprob: -16.125099182128906
    8. 'm' → logprob: -16.250099182128906
    9. '(' → logprob: -16.687599182128906
    10. 'ans' → logprob: -17.125099182128906

Token 1919: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.813969957875088e-05
    2. '10' → logprob: -9.625067710876465
    3. ' ' → logprob: -13.500067710876465
    4. 'ans' → logprob: -14.750067710876465
    5. '100' → logprob: -16.50006866455078
    6. '
' → logprob: -16.81256866455078
    7. '1' → logprob: -16.87506866455078
    8. 'ide' → logprob: -17.43756866455078
    9. '-' → logprob: -17.87506866455078
    10. 'm' → logprob: -18.18756866455078

Token 1920: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07892118394374847
    2. ' and' → logprob: -3.07892107963562
    3. ':' → logprob: -3.57892107963562
    4. '               ' → logprob: -6.703921318054199
    5. 'and' → logprob: -7.953921318054199
    6. '           ' → logprob: -8.0789213180542
    7. '):
' → logprob: -11.2039213180542
    8. ' or' → logprob: -11.7039213180542
    9. '       ' → logprob: -11.7039213180542
    10. ':
' → logprob: -11.9539213180542

Token 1921: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14283007383346558
    2. ':
' → logprob: -2.8928301334381104
    3. ' and' → logprob: -3.1428301334381104
    4. '```' → logprob: -3.8928301334381104
    5. ':' → logprob: -4.642829895019531
    6. '           ' → logprob: -5.892829895019531
    7. 'and' → logprob: -7.267829895019531
    8. '``' → logprob: -8.767829895019531
    9. '<|end|>' → logprob: -9.142829895019531
    10. '       ' → logprob: -9.267829895019531

Token 1922: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0488269329071045
    2. '                   ' → logprob: -1.2988269329071045
    3. 'continue' → logprob: -1.2988269329071045
    4. ' continue' → logprob: -3.4238269329071045
    5. '                       ' → logprob: -4.173827171325684
    6. 'return' → logprob: -4.673827171325684
    7. '```' → logprob: -4.673827171325684
    8. '           ' → logprob: -5.048827171325684
    9. ':
' → logprob: -5.048827171325684
    10. 'ans' → logprob: -5.423827171325684

Token 1923: ' start' (ID: 1604)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.8633813261985779
    2. ' beam' → logprob: -1.3633813858032227
    3. ' ans' → logprob: -1.8633813858032227
    4. 'ans' → logprob: -1.9883813858032227
    5. 'B' → logprob: -4.238381385803223
    6. 'cum' → logprob: -5.738381385803223
    7. '(ans' → logprob: -5.988381385803223
    8. ' B' → logprob: -6.238381385803223
    9. 'True' → logprob: -6.238381385803223
    10. ' cum' → logprob: -6.363381385803223

Token 1924: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02097204327583313
    2. '[i' → logprob: -3.8959720134735107
    3. '```' → logprob: -8.27097225189209
    4. 'i' → logprob: -9.02097225189209
    5. '(i' → logprob: -11.27097225189209
    6. '[' → logprob: -11.27097225189209
    7. '==' → logprob: -12.02097225189209
    8. '   ' → logprob: -12.64597225189209
    9. '``' → logprob: -12.64597225189209
    10. '_' → logprob: -13.39597225189209

Token 1925: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. 'i' → logprob: -13.000004768371582
    3. '[' → logprob: -13.125004768371582
    4. '```' → logprob: -14.500004768371582
    5. '==' → logprob: -17.0000057220459
    6. '[
' → logprob: -17.6250057220459
    7. '   ' → logprob: -18.0000057220459
    8. ' [' → logprob: -18.1250057220459
    9. '(i' → logprob: -18.2500057220459
    10. '[j' → logprob: -18.3750057220459

Token 1926: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019427591934800148
    2. ']!=' → logprob: -5.14442777633667
    3. '[i' → logprob: -5.64442777633667
    4. ']==' → logprob: -5.76942777633667
    5. '!=' → logprob: -6.01942777633667
    6. ' !=' → logprob: -6.64442777633667
    7. '```' → logprob: -6.89442777633667
    8. '==' → logprob: -7.01942777633667
    9. '][' → logprob: -7.64442777633667
    10. '[' → logprob: -8.269427299499512

Token 1927: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9636940956115723
    2. ' !=' → logprob: -0.9636940956115723
    3. '==' → logprob: -1.8386940956115723
    4. '!=' → logprob: -2.7136940956115723
    5. '[' → logprob: -5.838694095611572
    6. '```' → logprob: -6.088694095611572
    7. '!=-' → logprob: -6.213694095611572
    8. ']' → logprob: -6.463694095611572
    9. ']==' → logprob: -6.838694095611572
    10. '==-' → logprob: -6.838694095611572

Token 1928: ' -' (ID: 533)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43834877014160156
    2. '-' → logprob: -1.0633487701416016
    3. 'm' → logprob: -4.813348770141602
    4. '0' → logprob: -7.188348770141602
    5. ' -' → logprob: -8.063348770141602
    6. ' i' → logprob: -8.438348770141602
    7. '   ' → logprob: -9.063348770141602
    8. '-i' → logprob: -9.813348770141602
    9. ' m' → logprob: -12.688348770141602
    10. 'N' → logprob: -12.813348770141602

Token 1929: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. '```' → logprob: -10.875032424926758
    3. '-' → logprob: -12.250032424926758
    4. ' ' → logprob: -12.500032424926758
    5. '``' → logprob: -13.750032424926758
    6. '#' → logprob: -14.500032424926758
    7. '   ' → logprob: -14.625032424926758
    8. '=' → logprob: -14.625032424926758
    9. '`' → logprob: -14.750032424926758
    10. '>' → logprob: -15.125032424926758

Token 1930: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.37799522280693054
    2. ' and' → logprob: -1.752995252609253
    3. '                   ' → logprob: -2.627995252609253
    4. ' or' → logprob: -2.877995252609253
    5. 'and' → logprob: -5.377995014190674
    6. ':' → logprob: -5.502995014190674
    7. '               ' → logprob: -5.877995014190674
    8. 'or' → logprob: -8.127995491027832
    9. '                       ' → logprob: -8.127995491027832
    10. '```' → logprob: -8.127995491027832

Token 1931: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3620591461658478
    2. '```' → logprob: -1.2370591163635254
    3. '                       ' → logprob: -5.362059116363525
    4. '               ' → logprob: -5.362059116363525
    5. '``' → logprob: -6.112059116363525
    6. '                               ' → logprob: -7.737059116363525
    7. ':
' → logprob: -8.362059593200684
    8. '                    ' → logprob: -8.987059593200684
    9. 'continue' → logprob: -9.112059593200684
    10. ' and' → logprob: -9.237059593200684

Token 1932: ' temp' (ID: 5484)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6818501353263855
    2. 'continue' → logprob: -1.9318501949310303
    3. ' continue' → logprob: -2.0568501949310303
    4. 'start' → logprob: -2.4318501949310303
    5. ' start' → logprob: -2.8068501949310303
    6. 'ans' → logprob: -2.9318501949310303
    7. '                   ' → logprob: -4.431849956512451
    8. '```' → logprob: -5.681849956512451
    9. '               ' → logprob: -6.806849956512451
    10. ' for' → logprob: -7.056849956512451

Token 1933: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42940109968185425
    2. '=' → logprob: -1.054401159286499
    3. ' ==' → logprob: -8.554401397705078
    4. '```' → logprob: -8.804401397705078
    5. '                   ' → logprob: -9.679401397705078
    6. ' +=' → logprob: -9.679401397705078
    7. '==' → logprob: -9.929401397705078
    8. '+=' → logprob: -10.554401397705078
    9. '               ' → logprob: -10.679401397705078
    10. ')' → logprob: -11.054401397705078

Token 1934: ' Seg' (ID: 13616)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3670271337032318
    2. '0' → logprob: -1.9920271635055542
    3. 'ans' → logprob: -2.6170270442962646
    4. 'beam' → logprob: -3.4920270442962646
    5. 'temp' → logprob: -3.9920270442962646
    6. 'Seg' → logprob: -4.117027282714844
    7. 'data' → logprob: -4.492027282714844
    8. 'cum' → logprob: -5.242027282714844
    9. ' abs' → logprob: -5.867027282714844
    10. 'S' → logprob: -5.992027282714844

Token 1935: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8937225341796875
    2. 'query' → logprob: -1.2687225341796875
    3. '1' → logprob: -1.7687225341796875
    4. 'Tree' → logprob: -2.1437225341796875
    5. '.query' → logprob: -4.6437225341796875
    6. '```' → logprob: -5.6437225341796875
    7. 'i' → logprob: -5.7687225341796875
    8. '[i' → logprob: -5.8937225341796875
    9. '``' → logprob: -7.7687225341796875
    10. 'Query' → logprob: -7.7687225341796875

Token 1936: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.00013214473437983543
    2. '.' → logprob: -9.00013256072998
    3. '```' → logprob: -12.62513256072998
    4. 'query' → logprob: -12.75013256072998
    5. ').' → logprob: -14.00013256072998
    6. '   ' → logprob: -14.50013256072998
    7. ' .' → logprob: -15.37513256072998
    8. '].' → logprob: -15.62513256072998
    9. '`.' → logprob: -15.62513256072998
    10. '=query' → logprob: -16.000131607055664

Token 1937: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12575647234916687
    2. '(m' → logprob: -2.5007565021514893
    3. 'i' → logprob: -3.5007565021514893
    4. 'm' → logprob: -5.37575626373291
    5. '(' → logprob: -6.75075626373291
    6. '0' → logprob: -9.62575626373291
    7. '(start' → logprob: -9.87575626373291
    8. 'start' → logprob: -10.37575626373291
    9. 'beam' → logprob: -12.00075626373291
    10. '```' → logprob: -12.25075626373291

Token 1938: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1513638198375702
    2. '(i' → logprob: -2.6513638496398926
    3. ',i' → logprob: -3.4013638496398926
    4. '+' → logprob: -3.6513638496398926
    5. '```' → logprob: -4.901363849639893
    6. '(' → logprob: -6.276363849639893
    7. ' +' → logprob: -7.776363849639893
    8. 'i' → logprob: -8.151363372802734
    9. '``' → logprob: -9.151363372802734
    10. ' ,' → logprob: -9.276363372802734

Token 1939: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5565113425254822
    2. 'm' → logprob: -1.556511402130127
    3. 'i' → logprob: -1.556511402130127
    4. ' N' → logprob: -6.306511402130127
    5. ' i' → logprob: -6.556511402130127
    6. '(i' → logprob: -7.306511402130127
    7. ' m' → logprob: -7.431511402130127
    8. '0' → logprob: -8.806510925292969
    9. '```' → logprob: -9.181510925292969
    10. 'n' → logprob: -9.681510925292969

Token 1940: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02033398114144802
    2. ')' → logprob: -4.145333766937256
    3. '                   ' → logprob: -5.895333766937256
    4. '               ' → logprob: -7.270333766937256
    5. '```' → logprob: -7.520333766937256
    6. '+' → logprob: -9.645334243774414
    7. '()
' → logprob: -9.770334243774414
    8. '()' → logprob: -10.020334243774414
    9. '           ' → logprob: -10.770334243774414
    10. '                       ' → logprob: -10.895334243774414

Token 1941: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3375191390514374
    2. '                       ' → logprob: -1.7125191688537598
    3. '                   ' → logprob: -2.3375191688537598
    4. '``' → logprob: -5.08751916885376
    5. '               ' → logprob: -7.21251916885376
    6. '<|end|>' → logprob: -7.71251916885376
    7. '                           ' → logprob: -7.83751916885376
    8. '                               ' → logprob: -7.96251916885376
    9. '                        
' → logprob: -8.337518692016602
    10. '           ' → logprob: -8.462518692016602

Token 1942: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05355717986822128
    2. 'if' → logprob: -3.6785571575164795
    3. 'temp' (adapté à ' temp') → logprob: -4.428557395935059
    4. '                       ' → logprob: -4.803557395935059
    5. '```' → logprob: -5.678557395935059
    6. ' if' → logprob: -6.178557395935059
    7. '               ' → logprob: -7.928557395935059
    8. '                           ' → logprob: -8.303557395935059
    9. '           ' → logprob: -8.678557395935059
    10. ' temp' → logprob: -9.303557395935059

Token 1943: ' +=' (ID: 2757)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8265042901039124
    2. ' <=' → logprob: -1.2015042304992676
    3. '<=' → logprob: -1.5765042304992676
    4. '+=' → logprob: -4.451504230499268
    5. '```' → logprob: -4.451504230499268
    6. ' +=' → logprob: -4.576504230499268
    7. '=' → logprob: -4.701504230499268
    8. '+' → logprob: -5.701504230499268
    9. ' =' → logprob: -5.826504230499268
    10. '                       ' → logprob: -6.326504230499268

Token 1944: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0011590276844799519
    2. ' beam' → logprob: -7.001159191131592
    3. 'abs' → logprob: -9.001158714294434
    4. '-be' → logprob: -9.376158714294434
    5. '-' → logprob: -11.126158714294434
    6. '0' → logprob: -12.001158714294434
    7. 'be' → logprob: -12.251158714294434
    8. '   ' → logprob: -12.501158714294434
    9. '(' → logprob: -13.751158714294434
    10. '  ' → logprob: -13.876158714294434

Token 1945: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '```' → logprob: -12.875004768371582
    3. '[' → logprob: -13.375004768371582
    4. 'i' → logprob: -15.000004768371582
    5. ' [' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.3750057220459
    7. '(i' → logprob: -16.8750057220459
    8. '``' → logprob: -16.8750057220459
    9. '
' → logprob: -17.0000057220459
    10. '[
' → logprob: -17.1250057220459

Token 1946: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003996596205979586
    2. '[' → logprob: -5.6289963722229
    3. '[i' → logprob: -8.878996849060059
    4. '```' → logprob: -8.878996849060059
    5. '>[' → logprob: -10.378996849060059
    6. ')[' → logprob: -10.628996849060059
    7. '   ' → logprob: -11.378996849060059
    8. ']' → logprob: -11.628996849060059
    9. ' ][' → logprob: -12.003996849060059
    10. '`' → logprob: -12.253996849060059

Token 1947: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008624620735645294
    2. '0' → logprob: -4.75862455368042
    3. '```' → logprob: -11.883625030517578
    4. '[' → logprob: -14.008625030517578
    5. ' ' → logprob: -14.383625030517578
    6. '-' → logprob: -14.633625030517578
    7. '   ' → logprob: -14.883625030517578
    8. '
' → logprob: -15.008625030517578
    9. 'i' → logprob: -15.008625030517578
    10. '[i' → logprob: -16.946125030517578

Token 1948: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2538045644760132
    2. '-' → logprob: -2.0038046836853027
    3. '[' → logprob: -2.6288046836853027
    4. '```' → logprob: -4.753804683685303
    5. ')' → logprob: -5.628804683685303
    6. ']' → logprob: -6.378804683685303
    7. '()' → logprob: -7.378804683685303
    8. ']-' → logprob: -7.878804683685303
    9. '[i' → logprob: -8.128804206848145
    10. '`' → logprob: -8.253804206848145

Token 1949: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026415938511490822
    2. '-' → logprob: -3.6514158248901367
    3. '```' → logprob: -9.151415824890137
    4. '                   ' → logprob: -12.401415824890137
    5. '``' → logprob: -13.401415824890137
    6. ' ' → logprob: -14.526415824890137
    7. ' ' → logprob: -14.526415824890137
    8. '               ' → logprob: -14.651415824890137
    9. '           ' → logprob: -14.901415824890137
    10. '<|end|>' → logprob: -15.151415824890137

Token 1950: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00011749001714633778
    2. ' beam' → logprob: -9.125117301940918
    3. '```' → logprob: -11.875117301940918
    4. '   ' → logprob: -14.875117301940918
    5. 'be' → logprob: -15.125117301940918
    6. 'i' → logprob: -15.250117301940918
    7. 'bee' → logprob: -16.250118255615234
    8. '``' → logprob: -16.250118255615234
    9. '           ' → logprob: -16.250118255615234
    10. ' ' → logprob: -16.375118255615234

Token 1951: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012303499970585108
    2. 'i' → logprob: -6.751230239868164
    3. '```' → logprob: -10.251230239868164
    4. '[' → logprob: -10.876230239868164
    5. '[
' → logprob: -12.876230239868164
    6. '(i' → logprob: -14.126230239868164
    7. '``' → logprob: -14.626230239868164
    8. 'beam' → logprob: -14.751230239868164
    9. '   ' → logprob: -15.126230239868164
    10. '{i' → logprob: -15.251230239868164

Token 1952: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4584062993526459
    2. '[' → logprob: -1.0834063291549683
    3. '[i' → logprob: -3.5834062099456787
    4. '1' → logprob: -7.458406448364258
    5. '>[' → logprob: -8.208406448364258
    6. '-' → logprob: -8.458406448364258
    7. '```' → logprob: -9.083406448364258
    8. ')[' → logprob: -9.208406448364258
    9. ''][' → logprob: -10.208406448364258
    10. '}[' → logprob: -10.333406448364258

Token 1953: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47991418838500977
    2. '1' → logprob: -0.9799141883850098
    3. 'beam' → logprob: -5.85491418838501
    4. '[i' → logprob: -6.10491418838501
    5. '<|end|>' → logprob: -8.604913711547852
    6. '   ' → logprob: -8.604913711547852
    7. ' i' → logprob: -9.229913711547852
    8. '```' → logprob: -9.354913711547852
    9. '<|end|>' → logprob: -10.354913711547852
    10. '(i' → logprob: -10.479913711547852

Token 1954: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.8302792310714722
    2. '                   ' → logprob: -1.4552792310714722
    3. '               ' → logprob: -1.5802792310714722
    4. '```' → logprob: -3.0802793502807617
    5. ')' → logprob: -3.4552793502807617
    6. '       ' → logprob: -4.205279350280762
    7. '
' → logprob: -4.580279350280762
    8. '           ' → logprob: -4.830279350280762
    9. '()
' → logprob: -5.705279350280762
    10. ']
' → logprob: -5.955279350280762

Token 1955: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07406178116798401
    2. '```' → logprob: -3.324061870574951
    3. '                       ' → logprob: -3.449061870574951
    4. '``' → logprob: -6.574061870574951
    5. '               ' → logprob: -6.574061870574951
    6. '           ' → logprob: -8.449061393737793
    7. ':
' → logprob: -8.574061393737793
    8. '
' → logprob: -9.199061393737793
    9. '<|end|>' → logprob: -10.074061393737793
    10. '\' → logprob: -10.074061393737793

Token 1956: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13455021381378174
    2. 'if' (adapté à ' if') → logprob: -2.134550094604492
    3. '```' → logprob: -5.759550094604492
    4. '                       ' → logprob: -6.009550094604492
    5. ' if' → logprob: -6.384550094604492
    6. '               ' → logprob: -8.634550094604492
    7. '           ' → logprob: -9.509550094604492
    8. '``' → logprob: -11.134550094604492
    9. '                           ' → logprob: -11.634550094604492
    10. '                  ' → logprob: -12.259550094604492

Token 1957: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.13776478171348572
    2. ' temp' → logprob: -2.2627646923065186
    3. 'beam' → logprob: -4.137764930725098
    4. ' beam' → logprob: -5.012764930725098
    5. 'B' → logprob: -7.137764930725098
    6. 'ans' → logprob: -7.637764930725098
    7. ' ans' → logprob: -8.387764930725098
    8. 'start' → logprob: -8.887764930725098
    9. '(temp' → logprob: -9.137764930725098
    10. ' B' → logprob: -10.137764930725098

Token 1958: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.22568708658218384
    2. '<=' → logprob: -1.600687026977539
    3. '```' → logprob: -8.600687026977539
    4. '                  ' → logprob: -10.850687026977539
    5. '                   ' → logprob: -10.975687026977539
    6. '          ' → logprob: -11.725687026977539
    7. '                      ' → logprob: -11.850687026977539
    8. '=' → logprob: -12.225687026977539
    9. ')<=' → logprob: -12.350687026977539
    10. '   ' → logprob: -12.725687026977539

Token 1959: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '                   ' → logprob: -17.501502990722656
    4. '               ' → logprob: -17.751502990722656
    5. '```' → logprob: -17.876502990722656
    6. '   ' → logprob: -18.876502990722656
    7. ' ' → logprob: -18.876502990722656
    8. '                       ' → logprob: -19.251502990722656
    9. '           ' → logprob: -19.626502990722656
    10. '  ' → logprob: -20.001502990722656

Token 1960: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -16.125001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '``' → logprob: -19.125001907348633
    6. '
' → logprob: -19.125001907348633
    7. ' ' → logprob: -20.000001907348633
    8. '       ' → logprob: -20.250001907348633
    9. '               ' → logprob: -21.000001907348633
    10. '  ' → logprob: -21.250001907348633

Token 1961: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23211242258548737
    2. ':' → logprob: -2.107112407684326
    3. '                       ' → logprob: -2.607112407684326
    4. '                   ' → logprob: -4.482112407684326
    5. '```' → logprob: -8.482112884521484
    6. ' and' → logprob: -8.982112884521484
    7. '                      ' → logprob: -10.107112884521484
    8. '               ' → logprob: -10.232112884521484
    9. '):
' → logprob: -11.232112884521484
    10. '                           ' → logprob: -11.232112884521484

Token 1962: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2972579002380371
    2. '```' → logprob: -1.422257900238037
    3. '                   ' → logprob: -4.672257900238037
    4. '                               ' → logprob: -5.547257900238037
    5. '                           ' → logprob: -6.922257900238037
    6. '``' → logprob: -7.422257900238037
    7. '                        
' → logprob: -8.547258377075195
    8. '                      ' → logprob: -8.672258377075195
    9. '                        ' → logprob: -8.797258377075195
    10. '<|end|>' → logprob: -8.797258377075195

Token 1963: ' temp' (ID: 5484)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5205774307250977
    2. 'temp' (adapté à ' temp') → logprob: -2.1455774307250977
    3. '                           ' → logprob: -2.7705774307250977
    4. '                               ' → logprob: -2.8955774307250977
    5. 'B' → logprob: -3.2705774307250977
    6. '``' → logprob: -3.5205774307250977
    7. '                       ' → logprob: -3.6455774307250977
    8. 'ans' → logprob: -4.020577430725098
    9. ' ans' → logprob: -4.270577430725098
    10. ' temp' → logprob: -4.270577430725098

Token 1964: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2532923221588135
    2. ' =' → logprob: -1.5032923221588135
    3. '```' → logprob: -6.753292083740234
    4. '                       ' → logprob: -9.503292083740234
    5. '                           ' → logprob: -9.878292083740234
    6. '                   ' → logprob: -11.253292083740234
    7. '*=' → logprob: -11.628292083740234
    8. '           ' → logprob: -12.003292083740234
    9. ':' → logprob: -12.378292083740234
    10. '==' → logprob: -12.503292083740234

Token 1965: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.10023427754640579
    2. ' abs' → logprob: -2.350234270095825
    3. '(abs' → logprob: -11.225234031677246
    4. '0' → logprob: -11.850234031677246
    5. '_abs' → logprob: -13.350234031677246
    6. '1' → logprob: -13.475234031677246
    7. 'ans' → logprob: -13.975234031677246
    8. 'beam' → logprob: -14.100234031677246
    9. '.abs' → logprob: -14.225234031677246
    10. 'temp' → logprob: -14.600234031677246

Token 1966: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.0015031944494694471
    2. 'temp' → logprob: -6.501502990722656
    3. '[temp' → logprob: -14.501502990722656
    4. '$temp' → logprob: -15.251502990722656
    5. '	temp' → logprob: -16.751502990722656
    6. '=temp' → logprob: -16.876502990722656
    7. ' temp' → logprob: -17.251502990722656
    8. ',temp' → logprob: -17.376502990722656
    9. '(tmp' → logprob: -18.001502990722656
    10. '(' → logprob: -18.001502990722656

Token 1967: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0050186170265078545
    2. ')' → logprob: -6.380018711090088
    3. '                       ' → logprob: -6.380018711090088
    4. '                   ' → logprob: -6.755018711090088
    5. '):
' → logprob: -8.63001823425293
    6. '                           ' → logprob: -8.88001823425293
    7. '```' → logprob: -10.50501823425293
    8. ')
' → logprob: -10.75501823425293
    9. '               ' → logprob: -10.75501823425293
    10. ':
' → logprob: -11.13001823425293

Token 1968: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.48137587308883667
    2. '                       ' → logprob: -1.3563759326934814
    3. '                           ' → logprob: -2.3563759326934814
    4. '``' → logprob: -3.7313759326934814
    5. '                   ' → logprob: -5.856375694274902
    6. '                               ' → logprob: -6.356375694274902
    7. '                        ' → logprob: -8.106375694274902
    8. '           ' → logprob: -8.231375694274902
    9. '               ' → logprob: -8.356375694274902
    10. '                         ' → logprob: -9.356375694274902

Token 1969: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.022917328402400017
    2. 'if' → logprob: -4.6479172706604
    3. 'beam' → logprob: -5.5229172706604
    4. 'ans' → logprob: -5.7729172706604
    5. ' B' → logprob: -6.0229172706604
    6. '```' → logprob: -6.6479172706604
    7. 'for' → logprob: -7.0229172706604
    8. ' if' → logprob: -7.5229172706604
    9. ' ans' → logprob: -7.6479172706604
    10. ' beam' → logprob: -9.522917747497559

Token 1970: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4902108609676361
    2. '=' → logprob: -1.6152108907699585
    3. ' =' → logprob: -2.365210771560669
    4. '```' → logprob: -2.865210771560669
    5. '[i' → logprob: -3.740210771560669
    6. '           ' → logprob: -5.615211009979248
    7. '                           ' → logprob: -6.365211009979248
    8. '                       ' → logprob: -6.365211009979248
    9. '               ' → logprob: -6.740211009979248
    10. '                               ' → logprob: -7.365211009979248

Token 1971: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0015030752401798964
    2. ' beam' → logprob: -6.501502990722656
    3. 'be' → logprob: -14.376502990722656
    4. 'ans' → logprob: -15.626502990722656
    5. '   ' → logprob: -17.376502990722656
    6. 'beat' → logprob: -17.751502990722656
    7. '```' → logprob: -17.751502990722656
    8. '       ' → logprob: -18.001502990722656
    9. 'b' → logprob: -18.126502990722656
    10. '           ' → logprob: -18.126502990722656

Token 1972: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5213274309644476e-05
    2. '```' → logprob: -11.375015258789062
    3. 'i' → logprob: -13.375015258789062
    4. '[' → logprob: -13.875015258789062
    5. '[
' → logprob: -14.625015258789062
    6. '][' → logprob: -15.000015258789062
    7. '`' → logprob: -15.875015258789062
    8. '(i' → logprob: -16.500015258789062
    9. ']' → logprob: -16.500015258789062
    10. ' i' → logprob: -16.625015258789062

Token 1973: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0015217645559459925
    2. '][' → logprob: -6.626521587371826
    3. '[' → logprob: -9.126522064208984
    4. 'i' → logprob: -10.126522064208984
    5. '```' → logprob: -10.376522064208984
    6. '[
' → logprob: -12.001522064208984
    7. ']' → logprob: -13.251522064208984
    8. '(i' → logprob: -13.501522064208984
    9. ',i' → logprob: -13.876522064208984
    10. '=i' → logprob: -14.001522064208984

Token 1974: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3495159447193146
    2. 'i' → logprob: -1.2245159149169922
    3. '```' → logprob: -6.974515914916992
    4. '[' → logprob: -9.974515914916992
    5. ' i' → logprob: -10.349515914916992
    6. '[i' → logprob: -11.099515914916992
    7. '   ' → logprob: -11.599515914916992
    8. 'user' → logprob: -11.974515914916992
    9. '0' → logprob: -12.349515914916992
    10. '
' → logprob: -12.474515914916992

Token 1975: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09777682274580002
    2. '```' → logprob: -3.4727768898010254
    3. '                   ' → logprob: -3.8477768898010254
    4. ':
' → logprob: -4.597776889801025
    5. '           ' → logprob: -4.597776889801025
    6. '                           ' → logprob: -4.847776889801025
    7. '               ' → logprob: -5.097776889801025
    8. ')
' → logprob: -6.472776889801025
    9. '):
' → logprob: -6.972776889801025
    10. '       ' → logprob: -7.222776889801025

Token 1976: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.43437957763671875
    2. '                       ' → logprob: -1.0593795776367188
    3. '                           ' → logprob: -5.809379577636719
    4. '``' → logprob: -6.934379577636719
    5. '                               ' → logprob: -7.309379577636719
    6. '                   ' → logprob: -7.684379577636719
    7. '                        ' → logprob: -8.309379577636719
    8. '           ' → logprob: -8.934379577636719
    9. '               ' → logprob: -9.809379577636719
    10. '<|end|>' → logprob: -10.059379577636719

Token 1977: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5004013180732727
    2. ' if' → logprob: -1.125401258468628
    3. '```' → logprob: -3.250401258468628
    4. '                       ' → logprob: -3.875401258468628
    5. '                           ' → logprob: -4.875401496887207
    6. '                               ' → logprob: -6.750401496887207
    7. '``' → logprob: -7.250401496887207
    8. '                        ' → logprob: -10.000401496887207
    9. '                        
' → logprob: -11.000401496887207
    10. '                   ' → logprob: -11.125401496887207

Token 1978: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04300741106271744
    2. ' B' → logprob: -3.1680073738098145
    3. 'ans' → logprob: -12.668007850646973
    4. ' ans' → logprob: -13.293007850646973
    5. '
' → logprob: -14.168007850646973
    6. '```' → logprob: -14.668007850646973
    7. 'b' → logprob: -15.043007850646973
    8. '   ' → logprob: -15.168007850646973
    9. ' ' → logprob: -15.168007850646973
    10. '`' → logprob: -15.168007850646973

Token 1979: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1605117917060852
    2. '*' → logprob: -1.9105117321014404
    3. '```' → logprob: -8.41051197052002
    4. '*[' → logprob: -10.53551197052002
    5. '[' → logprob: -10.91051197052002
    6. '*object' → logprob: -12.78551197052002
    7. '**' → logprob: -12.78551197052002
    8. '#' → logprob: -13.53551197052002
    9. '*i' → logprob: -13.66051197052002
    10. '*out' → logprob: -13.78551197052002

Token 1980: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12693126499652863
    2. ' ans' → logprob: -2.1269311904907227
    3. '(ans' → logprob: -12.876931190490723
    4. '	ans' → logprob: -14.751931190490723
    5. '
' → logprob: -16.50193214416504
    6. '_ans' → logprob: -16.62693214416504
    7. 'B' → logprob: -16.62693214416504
    8. 'anst' → logprob: -17.25193214416504
    9. 'Ans' → logprob: -17.62693214416504
    10. '```' → logprob: -18.00193214416504

Token 1981: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0372442789375782
    2. ' <' → logprob: -3.6622443199157715
    3. '```' → logprob: -5.5372443199157715
    4. ' [' → logprob: -5.7872443199157715
    5. '<' → logprob: -6.2872443199157715
    6. ' ' → logprob: -7.4122443199157715
    7. '*' → logprob: -7.5372443199157715
    8. ' *' → logprob: -8.287243843078613
    9. '   ' → logprob: -8.537243843078613
    10. '       ' → logprob: -9.662243843078613

Token 1982: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014025058771949261
    2. '[' → logprob: -9.250140190124512
    3. '1' → logprob: -10.625140190124512
    4. '
' → logprob: -11.750140190124512
    5. '   ' → logprob: -12.500140190124512
    6. ' ' → logprob: -12.875140190124512
    7. '```' → logprob: -13.000140190124512
    8. 'ans' → logprob: -14.125140190124512
    9. '  ' → logprob: -15.000140190124512
    10. '``' → logprob: -15.000140190124512

Token 1983: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11290568113327026
    2. '<' → logprob: -2.237905740737915
    3. '```' → logprob: -10.237905502319336
    4. '[' → logprob: -10.362905502319336
    5. ']' → logprob: -11.987905502319336
    6. ')' → logprob: -13.612905502319336
    7. ' >' → logprob: -13.737905502319336
    8. ' ' → logprob: -14.112905502319336
    9. ']<' → logprob: -14.112905502319336
    10. '>' → logprob: -14.362905502319336

Token 1984: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5233429074287415
    2. ' <' → logprob: -0.8983429074287415
    3. '```' → logprob: -8.898343086242676
    4. '<int' → logprob: -10.898343086242676
    5. '[' → logprob: -11.523343086242676
    6. '*' → logprob: -11.773343086242676
    7. '<size' → logprob: -12.273343086242676
    8. '<|end|>' → logprob: -12.398343086242676
    9. '<th' → logprob: -12.898343086242676
    10. '<=' → logprob: -13.148343086242676

Token 1985: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.10027287900447845
    2. 'ans' → logprob: -2.3502728939056396
    3. '(ans' → logprob: -9.850273132324219
    4. '_ans' → logprob: -11.975273132324219
    5. '	ans' → logprob: -12.100273132324219
    6. '```' → logprob: -13.725273132324219
    7. 'Ans' → logprob: -15.975273132324219
    8. '``' → logprob: -17.47527313232422
    9. 'anst' → logprob: -17.47527313232422
    10. 'answer' → logprob: -17.60027313232422

Token 1986: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19859975576400757
    2. 'ans' → logprob: -1.8235998153686523
    3. ' ans' → logprob: -4.323599815368652
    4. '```' → logprob: -6.073599815368652
    5. '[i' → logprob: -6.323599815368652
    6. '           ' → logprob: -8.073599815368652
    7. ' [' → logprob: -8.323599815368652
    8. '   ' → logprob: -8.823599815368652
    9. '(ans' → logprob: -8.948599815368652
    10. '               ' → logprob: -9.573599815368652

Token 1987: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. 'i' → logprob: -12.125018119812012
    3. '   ' → logprob: -12.250018119812012
    4. ' ' → logprob: -13.250018119812012
    5. '0' → logprob: -13.250018119812012
    6. 'ans' → logprob: -13.750018119812012
    7. '```' → logprob: -13.750018119812012
    8. '[i' → logprob: -14.125018119812012
    9. '
' → logprob: -15.000018119812012
    10. '  ' → logprob: -15.250018119812012

Token 1988: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008088844828307629
    2. '*' → logprob: -4.883089065551758
    3. '                       ' → logprob: -8.633089065551758
    4. '```' → logprob: -9.008089065551758
    5. ' ' → logprob: -9.383089065551758
    6. '                        ' → logprob: -10.883089065551758
    7. ':' → logprob: -11.133089065551758
    8. ':
' → logprob: -11.133089065551758
    9. '[' → logprob: -11.258089065551758
    10. '                           ' → logprob: -11.633089065551758

Token 1989: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04452906548976898
    2. '*' → logprob: -3.1695289611816406
    3. '                       ' → logprob: -7.169528961181641
    4. '                           ' → logprob: -7.669528961181641
    5. '```' → logprob: -8.79452896118164
    6. '                        ' → logprob: -9.41952896118164
    7. '                               ' → logprob: -11.91952896118164
    8. ' ' → logprob: -12.04452896118164
    9. '*[' → logprob: -12.04452896118164
    10. '*t' → logprob: -12.29452896118164

Token 1990: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.09849980473518372
    2. ' temp' → logprob: -2.5984997749328613
    3. 'B' → logprob: -4.473499774932861
    4. ' B' → logprob: -6.098499774932861
    5. 'beam' → logprob: -6.223499774932861
    6. 'ans' → logprob: -6.598499774932861
    7. 't' → logprob: -6.723499774932861
    8. ' beam' → logprob: -7.598499774932861
    9. ' ans' → logprob: -7.973499774932861
    10. ' t' → logprob: -8.97350025177002

Token 1991: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.35747042298316956
    2. ':
' → logprob: -2.1074705123901367
    3. '                           ' → logprob: -2.3574705123901367
    4. '```' → logprob: -2.8574705123901367
    5. ':' → logprob: -4.107470512390137
    6. '[' → logprob: -5.982470512390137
    7. '                   ' → logprob: -6.107470512390137
    8. '                        ' → logprob: -6.857470512390137
    9. '=' → logprob: -6.857470512390137
    10. '           ' → logprob: -7.357470512390137

Token 1992: '                           ' (ID: 1686)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7831593751907349
    2. '                           ' → logprob: -1.2831593751907349
    3. '                       ' → logprob: -1.6581593751907349
    4. '                               ' → logprob: -3.6581592559814453
    5. '``' → logprob: -3.9081592559814453
    6. ':
' → logprob: -4.408159255981445
    7. '                        ' → logprob: -5.533159255981445
    8. '):
' → logprob: -5.783159255981445
    9. ':' → logprob: -5.908159255981445
    10. '                   ' → logprob: -6.783159255981445

Token 1993: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.1003534197807312
    2. ' ans' → logprob: -2.350353479385376
    3. '```' → logprob: -9.475353240966797
    4. '                           ' → logprob: -10.475353240966797
    5. '                               ' → logprob: -11.100353240966797
    6. '(ans' → logprob: -11.600353240966797
    7. '	ans' → logprob: -11.725353240966797
    8. '_ans' → logprob: -12.100353240966797
    9. '``' → logprob: -13.225353240966797
    10. '                                   ' → logprob: -14.475353240966797

Token 1994: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029982350766658783
    2. ' =' → logprob: -3.529982328414917
    3. '```' → logprob: -9.279982566833496
    4. '=
' → logprob: -9.529982566833496
    5. '=[
' → logprob: -10.529982566833496
    6. '=[' → logprob: -10.529982566833496
    7. '[' → logprob: -12.154982566833496
    8. '[
' → logprob: -12.904982566833496
    9. ']=' → logprob: -14.029982566833496
    10. '                           ' → logprob: -14.779982566833496

Token 1995: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6933103799819946
    2. ' [' → logprob: -0.6933103799819946
    3. '[t' → logprob: -9.193310737609863
    4. '[
' → logprob: -10.193310737609863
    5. '[temp' → logprob: -11.818310737609863
    6. '[i' → logprob: -12.443310737609863
    7. '[B' → logprob: -12.443310737609863
    8. '[b' → logprob: -13.443310737609863
    9. ' [
' → logprob: -13.568310737609863
    10. '[token' → logprob: -14.443310737609863

Token 1996: 'temp' (ID: 7340)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6721724271774292
    2. 'temp' → logprob: -0.7971724271774292
    3. 't' → logprob: -3.7971725463867188
    4. 'beam' → logprob: -4.172172546386719
    5. 'ans' → logprob: -8.547172546386719
    6. '0' → logprob: -9.047172546386719
    7. ' B' → logprob: -9.172172546386719
    8. '           ' → logprob: -9.422172546386719
    9. '               ' → logprob: -9.922172546386719
    10. 'tmp' → logprob: -9.922172546386719

Token 1997: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010592726175673306
    2. ',
' → logprob: -10.250105857849121
    3. '                           ' → logprob: -10.875105857849121
    4. ' ,' → logprob: -11.000105857849121
    5. '           ' → logprob: -11.625105857849121
    6. '```' → logprob: -11.625105857849121
    7. '`,' → logprob: -12.500105857849121
    8. '',' → logprob: -12.750105857849121
    9. '                               ' → logprob: -13.375105857849121
    10. '                   ' → logprob: -13.625105857849121

Token 1998: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8743259310722351
    2. 'beam' → logprob: -1.1243259906768799
    3. ' B' → logprob: -1.7493259906768799
    4. ' beam' → logprob: -2.49932599067688
    5. 'ans' → logprob: -6.624325752258301
    6. ' ans' → logprob: -7.624325752258301
    7. ' ' → logprob: -10.7493257522583
    8. '_B' → logprob: -11.2493257522583
    9. '           ' → logprob: -11.3743257522583
    10. 'i' → logprob: -11.4993257522583

Token 1999: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22636927664279938
    2. '                       ' → logprob: -2.4763693809509277
    3. '                           ' → logprob: -2.8513693809509277
    4. '               ' → logprob: -4.226369380950928
    5. '       ' → logprob: -4.351369380950928
    6. '                   ' → logprob: -4.476369380950928
    7. '           ' → logprob: -4.601369380950928
    8. '                               ' → logprob: -5.226369380950928
    9. ']
' → logprob: -5.726369380950928
    10. '```' → logprob: -6.601369380950928

Token 2000: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21064285933971405
    2. '   ' → logprob: -2.4606428146362305
    3. '```' → logprob: -2.8356428146362305
    4. ')' → logprob: -4.2106428146362305
    5. '                       ' → logprob: -4.7106428146362305
    6. '                           ' → logprob: -5.4606428146362305
    7. '           ' → logprob: -5.4606428146362305
    8. '               ' → logprob: -5.7106428146362305
    9. 'print' → logprob: -5.8356428146362305
    10. '                   ' → logprob: -6.2106428146362305

Token 2001: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7314974069595337
    2. '               ' → logprob: -0.9814974069595337
    3. '           ' → logprob: -2.856497287750244
    4. '```' → logprob: -3.231497287750244
    5. '                   ' → logprob: -3.481497287750244
    6. '                       ' → logprob: -5.231497287750244
    7. 'else' (adapté à ' else') → logprob: -5.731497287750244
    8. '                           ' → logprob: -5.981497287750244
    9. '<|end|>' → logprob: -6.981497287750244
    10. '   ' → logprob: -7.106497287750244

Token 2002: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03558914363384247
    2. '               ' → logprob: -4.410589218139648
    3. '                       ' → logprob: -4.660589218139648
    4. ':
' → logprob: -5.160589218139648
    5. '```' → logprob: -5.660589218139648
    6. '                           ' → logprob: -6.035589218139648
    7. '                               ' → logprob: -7.285589218139648
    8. ':' → logprob: -7.660589218139648
    9. '           ' → logprob: -8.410589218139648
    10. '                ' → logprob: -9.910589218139648

Token 2003: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0146381855010986
    2. '                   ' → logprob: -1.1396381855010986
    3. '                           ' → logprob: -2.1396381855010986
    4. '                               ' → logprob: -2.3896381855010986
    5. '               ' → logprob: -2.8896381855010986
    6. '                       ' → logprob: -3.0146381855010986
    7. '``' → logprob: -6.5146379470825195
    8. '           ' → logprob: -7.3896379470825195
    9. '                                   ' → logprob: -8.13963794708252
    10. '                        ' → logprob: -8.26463794708252

Token 2004: ' L' (ID: 451)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4272458851337433
    2. '                   ' → logprob: -1.302245855331421
    3. 'temp' → logprob: -3.427245855331421
    4. ' temp' → logprob: -4.42724609375
    5. '                       ' → logprob: -4.67724609375
    6. '``' → logprob: -4.67724609375
    7. '               ' → logprob: -5.42724609375
    8. 'for' → logprob: -5.80224609375
    9. ' for' → logprob: -5.92724609375
    10. ' L' → logprob: -7.17724609375

Token 2005: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.849204957485199
    2. '=' → logprob: -0.849204957485199
    3. ' =' → logprob: -1.9742050170898438
    4. '                   ' → logprob: -5.974205017089844
    5. '```' → logprob: -6.099205017089844
    6. '=i' → logprob: -9.099205017089844
    7. '=L' → logprob: -9.349205017089844
    8. ',i' → logprob: -9.474205017089844
    9. '[i' → logprob: -9.474205017089844
    10. ',
' → logprob: -9.599205017089844

Token 2006: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.048684559762477875
    2. ' start' → logprob: -3.048684597015381
    3. 'end' → logprob: -9.673684120178223
    4. '                   ' → logprob: -10.673684120178223
    5. ' end' → logprob: -12.798684120178223
    6. '   ' → logprob: -12.798684120178223
    7. '           ' → logprob: -13.548684120178223
    8. '               ' → logprob: -13.923684120178223
    9. '0' → logprob: -14.173684120178223
    10. '[start' → logprob: -14.548684120178223

Token 2007: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00016563729150220752
    2. '[i' → logprob: -9.250165939331055
    3. '```' → logprob: -9.750165939331055
    4. '[L' → logprob: -12.750165939331055
    5. '[' → logprob: -13.000165939331055
    6. '           ' → logprob: -13.750165939331055
    7. '                   ' → logprob: -14.250165939331055
    8. '   ' → logprob: -14.250165939331055
    9. 'i' → logprob: -14.375165939331055
    10. '[
' → logprob: -14.625165939331055

Token 2008: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001495484757469967
    2. '[L' → logprob: -9.000149726867676
    3. 'i' → logprob: -11.125149726867676
    4. 'L' → logprob: -12.125149726867676
    5. '```' → logprob: -12.250149726867676
    6. '[' → logprob: -14.375149726867676
    7. '                   ' → logprob: -15.375149726867676
    8. '(i' → logprob: -16.25014877319336
    9. '[
' → logprob: -16.62514877319336
    10. '           ' → logprob: -16.75014877319336

Token 2009: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005437385407276452
    2. '                   ' → logprob: -7.875543594360352
    3. '```' → logprob: -9.000543594360352
    4. '               ' → logprob: -11.500543594360352
    5. '[L' → logprob: -11.625543594360352
    6. '[' → logprob: -11.875543594360352
    7. '           ' → logprob: -12.625543594360352
    8. 'i' → logprob: -13.125543594360352
    9. ']' → logprob: -13.250543594360352
    10. '[
' → logprob: -13.625543594360352

Token 2010: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.037720680236816406
    2. '                   ' → logprob: -3.5377206802368164
    3. '``' → logprob: -4.912720680236816
    4. ',' → logprob: -9.037720680236816
    5. '                       ' → logprob: -9.162720680236816
    6. '       ' → logprob: -9.162720680236816
    7. '                           ' → logprob: -9.662720680236816
    8. '           ' → logprob: -10.037720680236816
    9. '               ' → logprob: -10.537720680236816
    10. '                    ' → logprob: -10.787720680236816

Token 2011: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.21407268941402435
    2. ' R' → logprob: -1.7140727043151855
    3. '                   ' → logprob: -4.9640727043151855
    4. '```' → logprob: -5.2140727043151855
    5. '``' → logprob: -9.714072227478027
    6. '                       ' → logprob: -10.464072227478027
    7. '                    ' → logprob: -11.214072227478027
    8. '   ' → logprob: -11.714072227478027
    9. '               ' → logprob: -12.089072227478027
    10. ',' → logprob: -12.089072227478027

Token 2012: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.41177868843078613
    2. '=' → logprob: -2.036778688430786
    3. '```' → logprob: -2.286778688430786
    4. '                   ' → logprob: -2.411778688430786
    5. ' =' → logprob: -4.661778450012207
    6. '=i' → logprob: -6.786778450012207
    7. '[' → logprob: -7.036778450012207
    8. '                       ' → logprob: -7.161778450012207
    9. '[R' → logprob: -7.536778450012207
    10. '``' → logprob: -7.661778450012207

Token 2013: ' end' (ID: 1268)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05007055401802063
    2. ' i' → logprob: -3.0500705242156982
    3. 'm' → logprob: -7.050070762634277
    4. 'end' → logprob: -8.175070762634277
    5. ' m' → logprob: -9.300070762634277
    6. '                   ' → logprob: -9.675070762634277
    7. ' end' → logprob: -10.050070762634277
    8. '           ' → logprob: -10.425070762634277
    9. '[i' → logprob: -10.800070762634277
    10. '```' → logprob: -10.800070762634277

Token 2014: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -8.537868779967539e-06
    2. '[i' → logprob: -12.250008583068848
    3. '```' → logprob: -13.000008583068848
    4. '[' → logprob: -14.750008583068848
    5. 'i' → logprob: -14.875008583068848
    6. '[L' → logprob: -15.375008583068848
    7. ' L' → logprob: -15.625008583068848
    8. ']' → logprob: -16.25000762939453
    9. '   ' → logprob: -16.87500762939453
    10. '(i' → logprob: -17.00000762939453

Token 2015: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021951000962872058
    2. '[L' → logprob: -8.500219345092773
    3. 'i' → logprob: -12.000219345092773
    4. '```' → logprob: -12.000219345092773
    5. '[R' → logprob: -13.000219345092773
    6. '[' → logprob: -13.750219345092773
    7. 'L' → logprob: -15.625219345092773
    8. '(i' → logprob: -16.750219345092773
    9. '   ' → logprob: -17.375219345092773
    10. '                   ' → logprob: -17.625219345092773

Token 2016: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6028850674629211
    2. ']
' → logprob: -0.8528850674629211
    3. '[i' → logprob: -3.7278850078582764
    4. '                   ' → logprob: -6.9778852462768555
    5. '```' → logprob: -7.3528852462768555
    6. 'i' → logprob: -7.7278852462768555
    7. '           ' → logprob: -8.602885246276855
    8. '   ' → logprob: -9.477885246276855
    9. '               ' → logprob: -9.727885246276855
    10. ']
' → logprob: -9.977885246276855

Token 2017: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.023636754602193832
    2. '``' → logprob: -4.023636817932129
    3. '                   ' → logprob: -5.398636817932129
    4. '                       ' → logprob: -7.523636817932129
    5. '               ' → logprob: -9.023636817932129
    6. '                               ' → logprob: -10.023636817932129
    7. '                           ' → logprob: -10.648636817932129
    8. '       ' → logprob: -10.773636817932129
    9. '                    ' → logprob: -10.898636817932129
    10. '				' → logprob: -10.898636817932129

Token 2018: ' temp' (ID: 5484)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3402704894542694
    2. '                   ' → logprob: -1.3402705192565918
    3. '``' → logprob: -4.090270519256592
    4. '                       ' → logprob: -4.715270519256592
    5. '               ' → logprob: -7.590270519256592
    6. 'temp' (adapté à ' temp') → logprob: -9.090270042419434
    7. '           ' → logprob: -9.340270042419434
    8. '
' → logprob: -9.965270042419434
    9. '                           ' → logprob: -10.090270042419434
    10. '       ' → logprob: -10.465270042419434

Token 2019: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20268578827381134
    2. '=' → logprob: -1.702685832977295
    3. '```' → logprob: -7.077685832977295
    4. '                   ' → logprob: -7.827685832977295
    5. '           ' → logprob: -12.327685356140137
    6. '                    ' → logprob: -12.577685356140137
    7. '``' → logprob: -12.702685356140137
    8. '               ' → logprob: -12.702685356140137
    9. '   ' → logprob: -12.952685356140137
    10. '                       ' → logprob: -13.202685356140137

Token 2020: ' Seg' (ID: 13616)
  Prédit: ' Seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Seg' → logprob: -0.06199995428323746
    2. 'Seg' → logprob: -2.812000036239624
    3. ' seg' → logprob: -10.437000274658203
    4. 'Segment' → logprob: -13.812000274658203
    5. 'seg' → logprob: -13.937000274658203
    6. '```' → logprob: -14.687000274658203
    7. 'Segments' → logprob: -15.687000274658203
    8. '   ' → logprob: -16.562000274658203
    9. '`' → logprob: -16.562000274658203
    10. '_seg' → logprob: -16.937000274658203

Token 2021: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3974914252758026
    2. 'L' → logprob: -1.522491455078125
    3. 'i' → logprob: -3.397491455078125
    4. '[i' → logprob: -3.897491455078125
    5. 'temp' → logprob: -4.272491455078125
    6. '```' → logprob: -4.272491455078125
    7. '(i' → logprob: -4.897491455078125
    8. 'Tree' → logprob: -5.147491455078125
    9. '[L' → logprob: -5.772491455078125
    10. 'R' → logprob: -6.272491455078125

Token 2022: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.0033224381040781736
    2. '```' → logprob: -5.878322601318359
    3. 'query' → logprob: -7.628322601318359
    4. '.' → logprob: -11.25332260131836
    5. '[L' → logprob: -12.37832260131836
    6. '   ' → logprob: -12.50332260131836
    7. '       ' → logprob: -13.12832260131836
    8. '$query' → logprob: -13.37832260131836
    9. 'L' → logprob: -13.75332260131836
    10. ' .' → logprob: -14.12832260131836

Token 2023: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00027230256819166243
    2. 'L' → logprob: -8.250272750854492
    3. '(R' → logprob: -11.500272750854492
    4. '(' → logprob: -14.500272750854492
    5. '(
' → logprob: -15.625272750854492
    6. '```' → logprob: -16.375272750854492
    7. 'R' → logprob: -16.500272750854492
    8. '[L' → logprob: -16.750272750854492
    9. '   ' → logprob: -17.625272750854492
    10. '(i' → logprob: -18.000272750854492

Token 2024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006647797417826951
    2. '                   ' → logprob: -7.875664710998535
    3. ' ,' → logprob: -9.250664710998535
    4. ',i' → logprob: -9.875664710998535
    5. '```' → logprob: -10.125664710998535
    6. '   ' → logprob: -11.000664710998535
    7. '+' → logprob: -11.000664710998535
    8. '           ' → logprob: -11.250664710998535
    9. ',R' → logprob: -11.875664710998535
    10. '               ' → logprob: -12.000664710998535

Token 2025: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.16070397198200226
    2. 'i' → logprob: -1.9107040166854858
    3. ' R' → logprob: -7.910704135894775
    4. ' i' → logprob: -9.535703659057617
    5. '   ' → logprob: -11.285703659057617
    6. 'start' → logprob: -11.410703659057617
    7. '                   ' → logprob: -12.285703659057617
    8. '(i' → logprob: -13.035703659057617
    9. 'r' → logprob: -13.160703659057617
    10. '           ' → logprob: -13.285703659057617

Token 2026: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869692385196686
    2. ' +' → logprob: -1.1369692087173462
    3. '```' → logprob: -9.386969566345215
    4. '                   ' → logprob: -12.136969566345215
    5. ')' → logprob: -13.511969566345215
    6. '＋' → logprob: -14.386969566345215
    7. '                               ' → logprob: -14.511969566345215
    8. '                    ' → logprob: -14.636969566345215
    9. '               ' → logprob: -14.636969566345215
    10. '           ' → logprob: -14.636969566345215

Token 2027: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.875022888183594
    3. '```' → logprob: -12.625022888183594
    4. '+' → logprob: -15.625022888183594
    5. ')' → logprob: -15.875022888183594
    6. '   ' → logprob: -17.375022888183594
    7. '2' → logprob: -17.875022888183594
    8. '``' → logprob: -18.125022888183594
    9. '
' → logprob: -18.875022888183594
    10. '(' → logprob: -19.250022888183594

Token 2028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -15.75
    3. ' ' → logprob: -16.625
    4. '   ' → logprob: -17.625
    5. '+' → logprob: -18.0
    6. '2' → logprob: -19.5
    7. 'i' → logprob: -20.375
    8. '１' → logprob: -20.375
    9. '۱' → logprob: -20.875
    10. '
' → logprob: -21.125

Token 2029: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020976828411221504
    2. '```' → logprob: -4.020977020263672
    3. '                   ' → logprob: -6.520977020263672
    4. '               ' → logprob: -7.270977020263672
    5. '-' → logprob: -8.270977020263672
    6. ')
' → logprob: -9.020977020263672
    7. '           ' → logprob: -10.145977020263672
    8. '                       ' → logprob: -10.395977020263672
    9. ')+' → logprob: -10.395977020263672
    10. '``' → logprob: -10.645977020263672

Token 2030: ' -' (ID: 533)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07768186926841736
    2. '```' → logprob: -2.82768177986145
    3. '               ' → logprob: -4.827682018280029
    4. '-' → logprob: -5.952682018280029
    5. '           ' → logprob: -6.452682018280029
    6. '                       ' → logprob: -6.827682018280029
    7. '+' → logprob: -7.452682018280029
    8. '                  ' → logprob: -7.827682018280029
    9. '``' → logprob: -7.827682018280029
    10. ' -' → logprob: -8.577681541442871

Token 2031: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.018166566267609596
    2. ' beam' → logprob: -4.018166542053223
    3. '           ' → logprob: -11.643166542053223
    4. '```' → logprob: -12.518166542053223
    5. '                   ' → logprob: -13.893166542053223
    6. '               ' → logprob: -14.268166542053223
    7. 'heap' → logprob: -14.393166542053223
    8. '   ' → logprob: -14.643166542053223
    9. 'be' → logprob: -14.643166542053223
    10. ' ' → logprob: -15.268166542053223

Token 2032: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002217748697148636
    2. 'i' → logprob: -8.750222206115723
    3. '[' → logprob: -9.875222206115723
    4. '```' → logprob: -11.625222206115723
    5. '`' → logprob: -13.875222206115723
    6. '   ' → logprob: -14.625222206115723
    7. '1' → logprob: -14.750222206115723
    8. '(i' → logprob: -15.000222206115723
    9. '``' → logprob: -15.625222206115723
    10. '[
' → logprob: -16.000221252441406

Token 2033: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.550082266330719
    2. '][' → logprob: -0.925082266330719
    3. '```' → logprob: -4.175082206726074
    4. '[i' → logprob: -5.050082206726074
    5. '`' → logprob: -6.050082206726074
    6. '>[' → logprob: -7.175082206726074
    7. ''[' → logprob: -7.925082206726074
    8. ''][' → logprob: -8.300082206726074
    9. 'i' → logprob: -8.550082206726074
    10. '``' → logprob: -8.550082206726074

Token 2034: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000565541791729629
    2. '[' → logprob: -8.125565528869629
    3. 'i' → logprob: -9.625565528869629
    4. '[i' → logprob: -9.625565528869629
    5. '1' → logprob: -10.000565528869629
    6. '```' → logprob: -10.125565528869629
    7. ' ' → logprob: -10.875565528869629
    8. 'beam' → logprob: -11.000565528869629
    9. '   ' → logprob: -11.750565528869629
    10. '
' → logprob: -13.250565528869629

Token 2035: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2666405737400055
    2. '<|end|>' → logprob: -2.5166406631469727
    3. '                   ' → logprob: -2.8916406631469727
    4. '```' → logprob: -3.0166406631469727
    5. ']' → logprob: -4.266640663146973
    6. '               ' → logprob: -4.641640663146973
    7. ')
' → logprob: -5.016640663146973
    8. '                       ' → logprob: -5.766640663146973
    9. '       ' → logprob: -6.266640663146973
    10. '           ' → logprob: -6.266640663146973

Token 2036: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.06392443180084229
    2. '                   ' → logprob: -3.5639243125915527
    3. '``' → logprob: -3.6889243125915527
    4. '               ' → logprob: -6.563924312591553
    5. '                               ' → logprob: -6.688924312591553
    6. '<|end|>' → logprob: -6.813924312591553
    7. '                  ' → logprob: -7.188924312591553
    8. '           ' → logprob: -7.313924312591553
    9. '                       ' → logprob: -7.688924312591553
    10. '                           ' → logprob: -7.688924312591553

Token 2037: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.73248690366745
    2. 'temp' (adapté à ' temp') → logprob: -0.73248690366745
    3. '```' → logprob: -4.232486724853516
    4. ' temp' → logprob: -4.482486724853516
    5. '``' → logprob: -5.982486724853516
    6. '                           ' → logprob: -6.482486724853516
    7. '               ' → logprob: -6.607486724853516
    8. '                               ' → logprob: -6.607486724853516
    9. 'beam' → logprob: -6.607486724853516
    10. '                       ' → logprob: -6.982486724853516

Token 2038: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05511843040585518
    2. '+=' → logprob: -3.5551183223724365
    3. '```' → logprob: -4.055118560791016
    4. '           ' → logprob: -5.805118560791016
    5. '                   ' → logprob: -5.805118560791016
    6. '       ' → logprob: -7.930118560791016
    7. '          ' → logprob: -8.430118560791016
    8. '               ' → logprob: -8.430118560791016
    9. '   ' → logprob: -8.930118560791016
    10. '``' → logprob: -9.180118560791016

Token 2039: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.34845754504203796
    2. 'beam' → logprob: -1.2234575748443604
    3. '```' → logprob: -12.223457336425781
    4. '0' → logprob: -12.473457336425781
    5. ' ' → logprob: -13.598457336425781
    6. 'be' → logprob: -14.098457336425781
    7. ' ' → logprob: -14.973457336425781
    8. '1' → logprob: -14.973457336425781
    9. '``' → logprob: -15.348457336425781
    10. '`' → logprob: -15.348457336425781

Token 2040: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023298001906368881
    2. 'i' → logprob: -8.500232696533203
    3. '```' → logprob: -10.750232696533203
    4. '[' → logprob: -12.250232696533203
    5. '(i' → logprob: -14.250232696533203
    6. '[
' → logprob: -14.375232696533203
    7. '{i' → logprob: -14.375232696533203
    8. '``' → logprob: -14.750232696533203
    9. ' i' → logprob: -15.000232696533203
    10. '   ' → logprob: -15.250232696533203

Token 2041: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009620201773941517
    2. '[' → logprob: -5.259620189666748
    3. '][' → logprob: -5.759620189666748
    4. '```' → logprob: -7.134620189666748
    5. 'i' → logprob: -8.759620666503906
    6. '   ' → logprob: -8.884620666503906
    7. '[
' → logprob: -10.884620666503906
    8. '`' → logprob: -10.884620666503906
    9. '``' → logprob: -11.134620666503906
    10. '(i' → logprob: -11.384620666503906

Token 2042: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07102884352207184
    2. '0' → logprob: -2.6960289478302
    3. '[i' → logprob: -7.196028709411621
    4. '```' → logprob: -8.821028709411621
    5. ' i' → logprob: -9.196028709411621
    6. '[' → logprob: -9.821028709411621
    7. '   ' → logprob: -11.446028709411621
    8. ' ' → logprob: -12.196028709411621
    9. '1' → logprob: -12.696028709411621
    10. '-' → logprob: -12.821028709411621

Token 2043: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4937390387058258
    2. '-' → logprob: -1.9937390089035034
    3. '[i' → logprob: -1.9937390089035034
    4. '[' → logprob: -2.618739128112793
    5. '```' → logprob: -3.743739128112793
    6. ']' → logprob: -5.368739128112793
    7. '][' → logprob: -5.493739128112793
    8. '           ' → logprob: -6.118739128112793
    9. '`' → logprob: -6.243739128112793
    10. '       ' → logprob: -6.368739128112793

Token 2044: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.043428000062704086
    2. '-' → logprob: -3.1684279441833496
    3. '```' → logprob: -7.79342794418335
    4. '[' → logprob: -11.918428421020508
    5. '``' → logprob: -13.168428421020508
    6. ' ' → logprob: -13.293428421020508
    7. '   ' → logprob: -13.793428421020508
    8. '`' → logprob: -13.793428421020508
    9. '<|end|>' → logprob: -13.793428421020508
    10. '           ' → logprob: -14.168428421020508

Token 2045: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.014199115335941315
    2. ' beam' → logprob: -4.264199256896973
    3. '```' → logprob: -11.514199256896973
    4. 'i' → logprob: -11.764199256896973
    5. '   ' → logprob: -12.639199256896973
    6. '           ' → logprob: -13.014199256896973
    7. ' i' → logprob: -13.139199256896973
    8. 'be' → logprob: -13.389199256896973
    9. ' ' → logprob: -14.014199256896973
    10. 'b' → logprob: -14.014199256896973

Token 2046: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.17195862531661987
    2. '[' → logprob: -2.0469586849212646
    3. '1' → logprob: -3.6719586849212646
    4. '```' → logprob: -5.9219584465026855
    5. 'i' → logprob: -7.4219584465026855
    6. '``' → logprob: -10.046958923339844
    7. '(i' → logprob: -10.296958923339844
    8. '   ' → logprob: -10.796958923339844
    9. '[
' → logprob: -11.046958923339844
    10. '-' → logprob: -11.921958923339844

Token 2047: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013348452746868134
    2. '[i' → logprob: -4.763348579406738
    3. '[' → logprob: -5.513348579406738
    4. '-' → logprob: -8.388348579406738
    5. '```' → logprob: -8.763348579406738
    6. ''][' → logprob: -9.013348579406738
    7. '>[' → logprob: -9.888348579406738
    8. ']' → logprob: -10.388348579406738
    9. '"][' → logprob: -10.513348579406738
    10. '   ' → logprob: -11.388348579406738

Token 2048: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002850998193025589
    2. 'i' → logprob: -6.0028510093688965
    3. '```' → logprob: -8.502850532531738
    4. '[i' → logprob: -8.877850532531738
    5. '   ' → logprob: -11.127850532531738
    6. '[' → logprob: -11.627850532531738
    7. ' ' → logprob: -13.252850532531738
    8. '``' → logprob: -13.502850532531738
    9. ' i' → logprob: -14.002850532531738
    10. '[
' → logprob: -14.002850532531738

Token 2049: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4955555498600006
    2. ']
' → logprob: -1.3705555200576782
    3. '```' → logprob: -2.6205556392669678
    4. ')
' → logprob: -3.7455556392669678
    5. ']' → logprob: -4.370555400848389
    6. '       ' → logprob: -4.745555400848389
    7. '                   ' → logprob: -4.870555400848389
    8. '           ' → logprob: -5.120555400848389
    9. ')' → logprob: -5.995555400848389
    10. '``' → logprob: -7.370555400848389

Token 2050: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5170059204101562
    2. '```' → logprob: -1.0170059204101562
    3. '               ' → logprob: -4.267005920410156
    4. '                       ' → logprob: -4.392005920410156
    5. '``' → logprob: -4.517005920410156
    6. '                           ' → logprob: -6.392005920410156
    7. '           ' → logprob: -6.642005920410156
    8. '\' → logprob: -7.767005920410156
    9. '                               ' → logprob: -8.267005920410156
    10. '<|end|>' → logprob: -8.642005920410156

Token 2051: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03669178858399391
    2. 'if' (adapté à ' if') → logprob: -4.036691665649414
    3. '               ' → logprob: -4.786691665649414
    4. ' if' → logprob: -5.786691665649414
    5. '                       ' → logprob: -5.786691665649414
    6. '```' → logprob: -5.786691665649414
    7. '           ' → logprob: -7.661691665649414
    8. '``' → logprob: -8.786691665649414
    9. '                           ' → logprob: -9.286691665649414
    10. '                  ' → logprob: -10.786691665649414

Token 2052: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.20141683518886566
    2. 'temp' → logprob: -1.7014168500900269
    3. '(temp' → logprob: -13.326416969299316
    4. ' temps' → logprob: -14.201416969299316
    5. '                   ' → logprob: -15.451416969299316
    6. '	temp' → logprob: -15.576416969299316
    7. '```' → logprob: -15.826416969299316
    8. 't' → logprob: -16.326416015625
    9. 'temps' → logprob: -16.326416015625
    10. '_temp' → logprob: -16.451416015625

Token 2053: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6964952349662781
    2. '<=' → logprob: -0.6964952349662781
    3. '```' → logprob: -6.571495056152344
    4. '                  ' → logprob: -7.196495056152344
    5. '                   ' → logprob: -7.446495056152344
    6. '               ' → logprob: -8.321495056152344
    7. '              ' → logprob: -8.821495056152344
    8. '           ' → logprob: -9.446495056152344
    9. '          ' → logprob: -9.946495056152344
    10. '                      ' → logprob: -10.571495056152344

Token 2054: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.474106103181839
    2. ' ' → logprob: -0.9741060733795166
    3. '```' → logprob: -11.349105834960938
    4. '                   ' → logprob: -12.349105834960938
    5. '               ' → logprob: -12.599105834960938
    6. '   ' → logprob: -12.599105834960938
    7. '``' → logprob: -13.599105834960938
    8. '           ' → logprob: -13.724105834960938
    9. '1' → logprob: -14.099105834960938
    10. '              ' → logprob: -14.849105834960938

Token 2055: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007975964690558612
    2. ' ' → logprob: -7.250797748565674
    3. '```' → logprob: -9.500797271728516
    4. '1' → logprob: -12.375797271728516
    5. '   ' → logprob: -12.625797271728516
    6. '``' → logprob: -12.875797271728516
    7. '
' → logprob: -14.375797271728516
    8. '                   ' → logprob: -15.000797271728516
    9. '               ' → logprob: -15.125797271728516
    10. '       ' → logprob: -15.125797271728516

Token 2056: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1163206696510315
    2. '                   ' → logprob: -2.4913206100463867
    3. ':' → logprob: -3.8663206100463867
    4. ':
' → logprob: -5.616320610046387
    5. '```' → logprob: -6.366320610046387
    6. '                           ' → logprob: -8.366320610046387
    7. '               ' → logprob: -8.741320610046387
    8. '                               ' → logprob: -8.991320610046387
    9. '                      ' → logprob: -9.991320610046387
    10. '           ' → logprob: -10.366320610046387

Token 2057: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013394211418926716
    2. '                   ' → logprob: -5.013394355773926
    3. '                               ' → logprob: -5.888394355773926
    4. '```' → logprob: -6.013394355773926
    5. '                           ' → logprob: -7.388394355773926
    6. '               ' → logprob: -7.888394355773926
    7. '``' → logprob: -8.388394355773926
    8. '                        ' → logprob: -9.763394355773926
    9. '                      ' → logprob: -10.013394355773926
    10. '           ' → logprob: -10.763394355773926

Token 2058: ' temp' (ID: 5484)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6382559537887573
    2. ' temp' → logprob: -1.0132559537887573
    3. 'temp' (adapté à ' temp') → logprob: -3.013256072998047
    4. '                           ' → logprob: -3.263256072998047
    5. '                   ' → logprob: -5.013256072998047
    6. '```' → logprob: -5.013256072998047
    7. '                               ' → logprob: -5.263256072998047
    8. '           ' → logprob: -6.888256072998047
    9. '               ' → logprob: -8.013256072998047
    10. '   ' → logprob: -8.138256072998047

Token 2059: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25287193059921265
    2. '=' → logprob: -1.5028719902038574
    3. '                           ' → logprob: -7.752871990203857
    4. '```' → logprob: -8.2528715133667
    5. '                       ' → logprob: -9.0028715133667
    6. '           ' → logprob: -10.6278715133667
    7. '                        ' → logprob: -10.7528715133667
    8. '                               ' → logprob: -11.1278715133667
    9. '       ' → logprob: -11.3778715133667
    10. '                   ' → logprob: -11.5028715133667

Token 2060: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.575941264629364
    2. ' abs' → logprob: -0.825941264629364
    3. '(abs' → logprob: -13.57594108581543
    4. '
' → logprob: -15.95094108581543
    5. ' ' → logprob: -16.20094108581543
    6. '.abs' → logprob: -16.20094108581543
    7. '_abs' → logprob: -17.20094108581543
    8. '           ' → logprob: -17.57594108581543
    9. '               ' → logprob: -17.82594108581543
    10. '```' → logprob: -17.95094108581543

Token 2061: '(temp' (ID: 19094)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.6933839321136475
    2. '(temp' → logprob: -0.6933839321136475
    3. '[temp' → logprob: -9.068384170532227
    4. ' temp' → logprob: -9.818384170532227
    5. '(' → logprob: -10.693384170532227
    6. '```' → logprob: -11.818384170532227
    7. '(
' → logprob: -12.068384170532227
    8. '$temp' → logprob: -12.193384170532227
    9. '                   ' → logprob: -12.443384170532227
    10. '                       ' → logprob: -12.443384170532227

Token 2062: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.24033191800117493
    2. ')
' → logprob: -2.1153318881988525
    3. '                   ' → logprob: -3.2403318881988525
    4. '                           ' → logprob: -3.4903318881988525
    5. '```' → logprob: -4.615332126617432
    6. '               ' → logprob: -5.615332126617432
    7. '``' → logprob: -5.865332126617432
    8. '           ' → logprob: -6.615332126617432
    9. '                               ' → logprob: -6.990332126617432
    10. ')' → logprob: -7.115332126617432

Token 2063: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.20304763317108154
    2. '```' → logprob: -1.9530476331710815
    3. '                       ' → logprob: -4.203047752380371
    4. '``' → logprob: -4.453047752380371
    5. '                               ' → logprob: -4.578047752380371
    6. 'B' → logprob: -6.578047752380371
    7. '                         ' → logprob: -7.328047752380371
    8. '                   ' → logprob: -7.453047752380371
    9. '                             ' → logprob: -7.828047752380371
    10. '                            ' → logprob: -8.078047752380371

Token 2064: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.38692522048950195
    2. ' B' → logprob: -1.136925220489502
    3. '```' → logprob: -10.511924743652344
    4. '                   ' → logprob: -11.136924743652344
    5. '                       ' → logprob: -12.511924743652344
    6. '_B' → logprob: -13.011924743652344
    7. ' beam' → logprob: -13.261924743652344
    8. '                           ' → logprob: -13.261924743652344
    9. '``' → logprob: -14.136924743652344
    10. 'beam' → logprob: -14.636924743652344

Token 2065: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21698357164859772
    2. '=' → logprob: -1.9669835567474365
    3. ' *' → logprob: -3.2169835567474365
    4. ' *=' → logprob: -4.966983795166016
    5. '*' → logprob: -5.841983795166016
    6. '*=' → logprob: -6.341983795166016
    7. '[i' → logprob: -6.966983795166016
    8. '```' → logprob: -7.216983795166016
    9. ',' → logprob: -7.341983795166016
    10. '[' → logprob: -7.966983795166016

Token 2066: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.10020699352025986
    2. ' beam' → logprob: -2.3502070903778076
    3. '```' → logprob: -16.10020637512207
    4. 'be' → logprob: -16.22520637512207
    5. 'Beam' → logprob: -16.97520637512207
    6. 'b' → logprob: -17.10020637512207
    7. ' ' → logprob: -17.47520637512207
    8. '   ' → logprob: -17.47520637512207
    9. '`' → logprob: -18.47520637512207
    10. ' ' → logprob: -18.72520637512207

Token 2067: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. 'i' → logprob: -12.125005722045898
    3. '```' → logprob: -15.375005722045898
    4. '[' → logprob: -17.0000057220459
    5. '[
' → logprob: -18.0000057220459
    6. '[user' → logprob: -18.1250057220459
    7. '{i' → logprob: -18.5000057220459
    8. '(i' → logprob: -19.0000057220459
    9. '[I' → logprob: -19.1250057220459
    10. '_i' → logprob: -19.2500057220459

Token 2068: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.43230950832366943
    2. '][' → logprob: -1.3073095083236694
    3. '[' → logprob: -2.557309627532959
    4. '```' → logprob: -6.182309627532959
    5. ']' → logprob: -7.807309627532959
    6. ')[' → logprob: -8.8073091506958
    7. '>[' → logprob: -9.5573091506958
    8. ''][' → logprob: -10.1823091506958
    9. 'i' → logprob: -10.1823091506958
    10. '`' → logprob: -10.6823091506958

Token 2069: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001099968678317964
    2. 'i' → logprob: -6.876100063323975
    3. '```' → logprob: -9.876099586486816
    4. '[' → logprob: -12.001099586486816
    5. '
' → logprob: -12.251099586486816
    6. '[i' → logprob: -13.251099586486816
    7. '   ' → logprob: -13.501099586486816
    8. '``' → logprob: -15.001099586486816
    9. '`' → logprob: -15.626099586486816
    10. '...' → logprob: -15.751099586486816

Token 2070: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.010599108412861824
    2. '                   ' → logprob: -5.385599136352539
    3. ']
' → logprob: -5.510599136352539
    4. '                           ' → logprob: -7.010599136352539
    5. '               ' → logprob: -8.385599136352539
    6. '           ' → logprob: -8.385599136352539
    7. ')
' → logprob: -8.885599136352539
    8. '```' → logprob: -9.010599136352539
    9. '       ' → logprob: -9.635599136352539
    10. '                        ' → logprob: -9.760599136352539

Token 2071: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.25138622522354126
    2. '```' → logprob: -1.8763861656188965
    3. '                           ' → logprob: -2.8763861656188965
    4. '``' → logprob: -4.8763861656188965
    5. '                               ' → logprob: -6.0013861656188965
    6. '                   ' → logprob: -7.1263861656188965
    7. '                        ' → logprob: -7.3763861656188965
    8. '
' → logprob: -8.501386642456055
    9. '               ' → logprob: -8.501386642456055
    10. '           ' → logprob: -8.501386642456055

Token 2072: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5870808959007263
    2. 'if' (adapté à ' if') → logprob: -0.8370808959007263
    3. ' if' → logprob: -4.712080955505371
    4. '                           ' → logprob: -6.712080955505371
    5. '```' → logprob: -7.212080955505371
    6. '                               ' → logprob: -9.837080955505371
    7. '                   ' → logprob: -9.962080955505371
    8. '``' → logprob: -11.212080955505371
    9. '                        ' → logprob: -11.462080955505371
    10. '               ' → logprob: -12.212080955505371

Token 2073: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.12694396078586578
    2. 'B' → logprob: -2.126944065093994
    3. '(B' → logprob: -12.251943588256836
    4. ' ans' → logprob: -12.626943588256836
    5. '   ' → logprob: -13.501943588256836
    6. '                   ' → logprob: -13.876943588256836
    7. '           ' → logprob: -14.126943588256836
    8. ' ' → logprob: -14.251943588256836
    9. '               ' → logprob: -14.376943588256836
    10. ' beam' → logprob: -14.501943588256836

Token 2074: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026430921629071236
    2. '*' → logprob: -3.65143084526062
    3. '```' → logprob: -10.1514310836792
    4. '                           ' → logprob: -10.7764310836792
    5. '[' → logprob: -10.9014310836792
    6. ' ' → logprob: -11.7764310836792
    7. '               ' → logprob: -11.9014310836792
    8. '                               ' → logprob: -12.0264310836792
    9. '   ' → logprob: -12.1514310836792
    10. '           ' → logprob: -12.2764310836792

Token 2075: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20145387947559357
    2. ' ans' → logprob: -1.7014539241790771
    3. '```' → logprob: -11.326454162597656
    4. '(ans' → logprob: -11.451454162597656
    5. 'B' → logprob: -12.201454162597656
    6. '_ans' → logprob: -12.326454162597656
    7. '	ans' → logprob: -12.951454162597656
    8. '
' → logprob: -13.201454162597656
    9. '[' → logprob: -14.201454162597656
    10. 'answer' → logprob: -14.576454162597656

Token 2076: '[' (ID: 58)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7012941241264343
    2. '[' → logprob: -1.076294183731079
    3. '*' → logprob: -1.826294183731079
    4. '```' → logprob: -7.2012939453125
    5. '*[' → logprob: -8.2012939453125
    6. '[i' → logprob: -8.3262939453125
    7. ' [' → logprob: -8.8262939453125
    8. '                           ' → logprob: -9.0762939453125
    9. '           ' → logprob: -9.3262939453125
    10. '               ' → logprob: -9.8262939453125

Token 2077: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -13.875003814697266
    3. ' ' → logprob: -13.875003814697266
    4. '[' → logprob: -14.625003814697266
    5. '
' → logprob: -14.750003814697266
    6. '```' → logprob: -14.750003814697266
    7. '1' → logprob: -15.125003814697266
    8. '       ' → logprob: -15.750003814697266
    9. '           ' → logprob: -16.250003814697266
    10. '  ' → logprob: -16.875003814697266

Token 2078: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.020863821730017662
    2. '<' → logprob: -3.8958637714385986
    3. ' *' → logprob: -8.77086353302002
    4. '*' → logprob: -9.39586353302002
    5. '[' → logprob: -9.89586353302002
    6. '```' → logprob: -11.39586353302002
    7. ']' → logprob: -12.02086353302002
    8. '   ' → logprob: -12.39586353302002
    9. ':' → logprob: -14.02086353302002
    10. ' ' → logprob: -14.27086353302002

Token 2079: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.349735289812088
    2. '<' → logprob: -1.2247352600097656
    3. '```' → logprob: -6.974735260009766
    4. '[' → logprob: -8.974735260009766
    5. ' *' → logprob: -9.849735260009766
    6. '*' → logprob: -9.849735260009766
    7. '                           ' → logprob: -10.599735260009766
    8. '   ' → logprob: -11.099735260009766
    9. '``' → logprob: -11.474735260009766
    10. '=' → logprob: -12.224735260009766

Token 2080: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.25196632742881775
    2. 'ans' → logprob: -1.5019663572311401
    3. '(ans' → logprob: -10.87696647644043
    4. 'B' → logprob: -11.37696647644043
    5. '	ans' → logprob: -13.00196647644043
    6. '_ans' → logprob: -13.50196647644043
    7. 'Ans' → logprob: -13.87696647644043
    8. '```' → logprob: -14.25196647644043
    9. ' B' → logprob: -14.50196647644043
    10. '           ' → logprob: -15.62696647644043

Token 2081: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00804970320314169
    2. 'ans' → logprob: -5.008049488067627
    3. '```' → logprob: -7.258049488067627
    4. '   ' → logprob: -9.008049964904785
    5. '0' → logprob: -9.383049964904785
    6. '               ' → logprob: -9.633049964904785
    7. '`' → logprob: -9.758049964904785
    8. '                   ' → logprob: -9.883049964904785
    9. '(ans' → logprob: -10.008049964904785
    10. '[i' → logprob: -10.008049964904785

Token 2082: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08912311494350433
    2. '0' → logprob: -2.464123010635376
    3. '   ' → logprob: -9.589122772216797
    4. ' ' → logprob: -9.964122772216797
    5. 'ans' → logprob: -10.714122772216797
    6. '-' → logprob: -11.089122772216797
    7. '[' → logprob: -11.589122772216797
    8. '```' → logprob: -11.839122772216797
    9. '
' → logprob: -12.214122772216797
    10. '2' → logprob: -12.589122772216797

Token 2083: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01471269316971302
    2. '*' → logprob: -4.264712810516357
    3. '                           ' → logprob: -8.0147123336792
    4. '                       ' → logprob: -9.2647123336792
    5. '                        ' → logprob: -9.7647123336792
    6. '```' → logprob: -10.2647123336792
    7. '                          ' → logprob: -11.6397123336792
    8. '                         ' → logprob: -12.3897123336792
    9. '                            ' → logprob: -12.3897123336792
    10. '                               ' → logprob: -13.2647123336792

Token 2084: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03897302597761154
    2. '*' → logprob: -3.288973093032837
    3. '                           ' → logprob: -7.538972854614258
    4. '```' → logprob: -8.038972854614258
    5. '                       ' → logprob: -10.663972854614258
    6. '                               ' → logprob: -11.288972854614258
    7. '[' → logprob: -11.788972854614258
    8. '*[' → logprob: -12.163972854614258
    9. '                        ' → logprob: -12.413972854614258
    10. '                            ' → logprob: -12.663972854614258

Token 2085: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.01816621422767639
    2. ' temp' → logprob: -4.0181660652160645
    3. 'B' → logprob: -11.768166542053223
    4. 'tmp' → logprob: -13.393166542053223
    5. 'ans' → logprob: -13.518166542053223
    6. 't' → logprob: -13.643166542053223
    7. 'tem' → logprob: -14.268166542053223
    8. ' ans' → logprob: -14.518166542053223
    9. 'beam' → logprob: -14.643166542053223
    10. '(temp' → logprob: -14.893166542053223

Token 2086: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2446204423904419
    2. '                       ' → logprob: -1.744620442390442
    3. '```' → logprob: -3.7446203231811523
    4. ' <' → logprob: -4.619620323181152
    5. '                               ' → logprob: -5.744620323181152
    6. ':
' → logprob: -5.869620323181152
    7. '                   ' → logprob: -7.619620323181152
    8. '                        ' → logprob: -7.744620323181152
    9. '                          ' → logprob: -7.994620323181152
    10. '<' → logprob: -7.994620323181152

Token 2087: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6027688980102539
    2. '                               ' → logprob: -1.477768898010254
    3. '                       ' → logprob: -2.227768898010254
    4. '```' → logprob: -2.227768898010254
    5. '++' → logprob: -5.977768898010254
    6. '                                   ' → logprob: -6.727768898010254
    7. ')' → logprob: -6.727768898010254
    8. '``' → logprob: -7.227768898010254
    9. '                                       ' → logprob: -7.727768898010254
    10. '                        ' → logprob: -7.727768898010254

Token 2088: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.6932333111763
    2. ' ans' → logprob: -0.6932333111763
    3. '```' → logprob: -10.068233489990234
    4. '(ans' → logprob: -11.068233489990234
    5. '                           ' → logprob: -11.318233489990234
    6. '	ans' → logprob: -12.193233489990234
    7. '                               ' → logprob: -12.318233489990234
    8. '``' → logprob: -13.068233489990234
    9. '_ans' → logprob: -13.193233489990234
    10. '
' → logprob: -13.818233489990234

Token 2089: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3301089107990265
    2. ' =' → logprob: -1.330108880996704
    3. '[' → logprob: -4.580109119415283
    4. '=
' → logprob: -6.205109119415283
    5. '```' → logprob: -6.580109119415283
    6. '[
' → logprob: -7.205109119415283
    7. '+=' → logprob: -7.205109119415283
    8. '.append' → logprob: -7.830109119415283
    9. ' +=' → logprob: -7.830109119415283
    10. '=[
' → logprob: -8.830108642578125

Token 2090: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37786710262298584
    2. ' [' → logprob: -1.2528671026229858
    3. '[temp' → logprob: -4.127867221832275
    4. '[t' → logprob: -4.502867221832275
    5. '[B' → logprob: -7.627867221832275
    6. '[
' → logprob: -7.877867221832275
    7. ' ans' → logprob: -8.627866744995117
    8. '[token' → logprob: -9.627866744995117
    9. '[b' → logprob: -9.752866744995117
    10. 'ans' → logprob: -9.752866744995117

Token 2091: 'temp' (ID: 7340)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.24739904701709747
    2. 'ans' → logprob: -1.872399091720581
    3. 'temp' → logprob: -3.247399091720581
    4. '[' → logprob: -4.247398853302002
    5. 'beam' → logprob: -5.247398853302002
    6. '[temp' → logprob: -6.122398853302002
    7. '[B' → logprob: -6.622398853302002
    8. '0' → logprob: -7.372398853302002
    9. ' B' → logprob: -7.622398853302002
    10. '   ' → logprob: -7.747398853302002

Token 2092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.134509021649137e-05
    2. '                           ' → logprob: -10.25006103515625
    3. ' ,' → logprob: -11.75006103515625
    4. '```' → logprob: -12.50006103515625
    5. '                               ' → logprob: -12.75006103515625
    6. '[' → logprob: -12.87506103515625
    7. '           ' → logprob: -13.12506103515625
    8. ',
' → logprob: -13.50006103515625
    9. '                       ' → logprob: -13.87506103515625
    10. '               ' → logprob: -14.00006103515625

Token 2093: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6964428424835205
    2. ' B' → logprob: -0.6964428424835205
    3. 'beam' → logprob: -6.196442604064941
    4. ' beam' → logprob: -6.696442604064941
    5. 'ans' → logprob: -12.196442604064941
    6. ' ans' → logprob: -12.571442604064941
    7. '1' → logprob: -13.571442604064941
    8. '```' → logprob: -13.571442604064941
    9. 'b' → logprob: -13.696442604064941
    10. ' ' → logprob: -13.696442604064941

Token 2094: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8265262246131897
    2. '                       ' → logprob: -1.201526165008545
    3. ')' → logprob: -1.826526165008545
    4. '                           ' → logprob: -2.701526165008545
    5. '               ' → logprob: -4.951526165008545
    6. '           ' → logprob: -5.201526165008545
    7. '                               ' → logprob: -5.326526165008545
    8. '       ' → logprob: -5.576526165008545
    9. '                   ' → logprob: -5.576526165008545
    10. '```' → logprob: -5.701526165008545

Token 2095: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.279678076505661
    2. '       ' → logprob: -2.4046781063079834
    3. 'print' → logprob: -2.6546781063079834
    4. ')' → logprob: -3.5296781063079834
    5. '                       ' → logprob: -4.404677867889404
    6. '   ' → logprob: -4.404677867889404
    7. '               ' → logprob: -5.279677867889404
    8. '           ' → logprob: -5.279677867889404
    9. '                           ' → logprob: -5.279677867889404
    10. '                   ' → logprob: -5.279677867889404

Token 2096: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2996990382671356
    2. '```' → logprob: -1.924699068069458
    3. '                       ' → logprob: -2.549699068069458
    4. '               ' → logprob: -4.174698829650879
    5. '                           ' → logprob: -4.424698829650879
    6. '           ' → logprob: -6.299698829650879
    7. '                               ' → logprob: -6.424698829650879
    8. '       ' → logprob: -7.549698829650879
    9. '<|end|>' → logprob: -7.674698829650879
    10. '                    ' → logprob: -7.799698829650879

Token 2097: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14351209998130798
    2. '=' → logprob: -2.143512010574341
    3. '```' → logprob: -4.51851224899292
    4. ' +=' → logprob: -5.76851224899292
    5. ' -=' → logprob: -6.76851224899292
    6. '           ' → logprob: -7.76851224899292
    7. '                   ' → logprob: -8.393511772155762
    8. '+=' → logprob: -8.393511772155762
    9. '   ' → logprob: -9.393511772155762
    10. '               ' → logprob: -9.768511772155762

Token 2098: ' Seg' (ID: 13616)
  Prédit: ' Seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Seg' → logprob: -0.3868785798549652
    2. 'Seg' → logprob: -1.1368786096572876
    3. ' seg' → logprob: -12.511878967285156
    4. 'Segment' → logprob: -13.261878967285156
    5. 'seg' → logprob: -13.511878967285156
    6. '_seg' → logprob: -15.136878967285156
    7. '```' → logprob: -15.511878967285156
    8. 'Segments' → logprob: -16.261878967285156
    9. 'SEG' → logprob: -17.261878967285156
    10. '   ' → logprob: -17.386878967285156

Token 2099: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31361642479896545
    2. '2' → logprob: -1.313616394996643
    3. '(i' → logprob: -9.188616752624512
    4. 'i' → logprob: -9.813616752624512
    5. 'Tree' → logprob: -9.938616752624512
    6. '   ' → logprob: -10.438616752624512
    7. '[i' → logprob: -10.813616752624512
    8. '```' → logprob: -11.188616752624512
    9. '(' → logprob: -11.313616752624512
    10. 'Seg' → logprob: -11.688616752624512

Token 2100: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -8.065608562901616e-05
    2. '```' → logprob: -10.125081062316895
    3. 'query' → logprob: -10.250081062316895
    4. ' .' → logprob: -12.750081062316895
    5. '$query' → logprob: -14.375081062316895
    6. '=query' → logprob: -14.875081062316895
    7. '.' → logprob: -15.000081062316895
    8. '       ' → logprob: -15.000081062316895
    9. '   ' → logprob: -15.375081062316895
    10. 'QUERY' → logprob: -16.500080108642578

Token 2101: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.012041106820106506
    2. '(i' → logprob: -4.512041091918945
    3. '(end' → logprob: -7.012041091918945
    4. '(' → logprob: -10.137041091918945
    5. 'R' → logprob: -10.262041091918945
    6. 'i' → logprob: -11.387041091918945
    7. '(
' → logprob: -13.137041091918945
    8. '(L' → logprob: -13.762041091918945
    9. '(start' → logprob: -14.387041091918945
    10. 'end' → logprob: -14.637041091918945

Token 2102: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03834979608654976
    2. ' +' → logprob: -3.2883498668670654
    3. '```' → logprob: -8.163350105285645
    4. 'R' → logprob: -11.663350105285645
    5. '                   ' → logprob: -12.913350105285645
    6. ',' → logprob: -12.913350105285645
    7. '+,' → logprob: -13.163350105285645
    8. '(R' → logprob: -13.163350105285645
    9. '``' → logprob: -13.413350105285645
    10. '[R' → logprob: -14.038350105285645

Token 2103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022683741990476847
    2. '+' → logprob: -6.127268314361572
    3. ' ' → logprob: -9.75226879119873
    4. ' +' → logprob: -10.75226879119873
    5. '```' → logprob: -13.12726879119873
    6. '   ' → logprob: -14.37726879119873
    7. '           ' → logprob: -15.00226879119873
    8. '                   ' → logprob: -15.62726879119873
    9. '2' → logprob: -16.252267837524414
    10. '                       ' → logprob: -16.377267837524414

Token 2104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.113290095934644e-05
    2. '+' → logprob: -9.500081062316895
    3. '```' → logprob: -12.375081062316895
    4. ' ' → logprob: -14.000081062316895
    5. '   ' → logprob: -16.00008201599121
    6. 'i' → logprob: -16.00008201599121
    7. '(i' → logprob: -16.00008201599121
    8. '           ' → logprob: -16.12508201599121
    9. '
' → logprob: -16.12508201599121
    10. '                   ' → logprob: -16.50008201599121

Token 2105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021256830543279648
    2. '```' → logprob: -4.271256923675537
    3. '+' → logprob: -5.146256923675537
    4. '           ' → logprob: -8.146256446838379
    5. ' +' → logprob: -8.146256446838379
    6. '                   ' → logprob: -8.646256446838379
    7. ' ,' → logprob: -8.896256446838379
    8. '       ' → logprob: -9.396256446838379
    9. '(' → logprob: -9.896256446838379
    10. '+,' → logprob: -10.146256446838379

Token 2106: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.659005157416686e-05
    2. ' N' → logprob: -9.625066757202148
    3. '                   ' → logprob: -14.875066757202148
    4. 'i' → logprob: -17.12506675720215
    5. '   ' → logprob: -17.75006675720215
    6. '```' → logprob: -17.87506675720215
    7. '                           ' → logprob: -18.12506675720215
    8. '                       ' → logprob: -18.37506675720215
    9. '(N' → logprob: -18.87506675720215
    10. '           ' → logprob: -18.87506675720215

Token 2107: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.984402596950531
    2. ')' → logprob: -1.4844026565551758
    3. '                   ' → logprob: -1.4844026565551758
    4. '```' → logprob: -2.734402656555176
    5. '           ' → logprob: -2.984402656555176
    6. '               ' → logprob: -3.859402656555176
    7. '()' → logprob: -3.859402656555176
    8. '       ' → logprob: -5.484402656555176
    9. '()
' → logprob: -5.484402656555176
    10. '+' → logprob: -6.359402656555176

Token 2108: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.013465842232108116
    2. '``' → logprob: -4.763465881347656
    3. '+' → logprob: -6.138465881347656
    4. '                   ' → logprob: -6.888465881347656
    5. '+=' → logprob: -7.888465881347656
    6. '           ' → logprob: -8.013465881347656
    7. '               ' → logprob: -8.763465881347656
    8. '                       ' → logprob: -8.763465881347656
    9. ' +=' → logprob: -9.013465881347656
    10. '()' → logprob: -9.013465881347656

Token 2109: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.3636374771595001
    2. '```' → logprob: -1.8636374473571777
    3. '                   ' → logprob: -2.2386374473571777
    4. ' temp' → logprob: -3.8636374473571777
    5. '+' → logprob: -4.113637447357178
    6. '``' → logprob: -5.988637447357178
    7. '                       ' → logprob: -6.738637447357178
    8. '                           ' → logprob: -7.363637447357178
    9. '+=' → logprob: -7.738637447357178
    10. '                    ' → logprob: -8.613637924194336

Token 2110: ' +=' (ID: 2757)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7044999003410339
    2. '                   ' → logprob: -1.4544999599456787
    3. ' +=' → logprob: -1.9544999599456787
    4. '+=' → logprob: -2.0794999599456787
    5. '           ' → logprob: -6.5794997215271
    6. '               ' → logprob: -6.8294997215271
    7. '                       ' → logprob: -7.2044997215271
    8. '                  ' → logprob: -7.5794997215271
    9. '                    ' → logprob: -7.8294997215271
    10. '``' → logprob: -7.8294997215271

Token 2111: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.6931824684143066
    2. 'beam' → logprob: -0.6931824684143066
    3. '```' → logprob: -11.318181991577148
    4. ' ' → logprob: -11.943181991577148
    5. '                   ' → logprob: -12.193181991577148
    6. '               ' → logprob: -12.943181991577148
    7. 'be' → logprob: -13.193181991577148
    8. '   ' → logprob: -13.568181991577148
    9. '           ' → logprob: -13.568181991577148
    10. '``' → logprob: -14.068181991577148

Token 2112: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.514650183613412e-05
    2. 'i' → logprob: -10.375055313110352
    3. '[' → logprob: -11.125055313110352
    4. '```' → logprob: -12.125055313110352
    5. '   ' → logprob: -13.250055313110352
    6. '`' → logprob: -14.375055313110352
    7. '(i' → logprob: -15.000055313110352
    8. '[
' → logprob: -15.125055313110352
    9. ' [' → logprob: -15.875055313110352
    10. '``' → logprob: -16.12505531311035

Token 2113: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.23372218012809753
    2. '][' → logprob: -1.73372220993042
    3. '[' → logprob: -3.48372220993042
    4. '           ' → logprob: -8.108721733093262
    5. '```' → logprob: -8.733721733093262
    6. '   ' → logprob: -8.858721733093262
    7. ']' → logprob: -9.358721733093262
    8. '       ' → logprob: -9.608721733093262
    9. '`' → logprob: -9.983721733093262
    10. '               ' → logprob: -9.983721733093262

Token 2114: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006422612932510674
    2. '[i' → logprob: -7.6256422996521
    3. '0' → logprob: -10.125641822814941
    4. '```' → logprob: -10.250641822814941
    5. 'beam' → logprob: -10.500641822814941
    6. '   ' → logprob: -11.250641822814941
    7. ' i' → logprob: -11.500641822814941
    8. '[' → logprob: -11.625641822814941
    9. '1' → logprob: -12.375641822814941
    10. '(i' → logprob: -12.375641822814941

Token 2115: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5035842657089233
    2. '[' → logprob: -2.003584384918213
    3. '-' → logprob: -2.128584384918213
    4. '][' → logprob: -2.253584384918213
    5. ']' → logprob: -4.628584384918213
    6. '[i' → logprob: -5.128584384918213
    7. '```' → logprob: -5.128584384918213
    8. '           ' → logprob: -5.878584384918213
    9. '   ' → logprob: -6.003584384918213
    10. ' ' → logprob: -6.253584384918213

Token 2116: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04871068149805069
    2. '-' → logprob: -3.048710584640503
    3. '```' → logprob: -9.173710823059082
    4. '[' → logprob: -12.173710823059082
    5. '``' → logprob: -13.048710823059082
    6. '<|end|>' → logprob: -13.048710823059082
    7. ' ' → logprob: -13.423710823059082
    8. '   ' → logprob: -13.548710823059082
    9. '                   ' → logprob: -13.798710823059082
    10. '#' → logprob: -13.798710823059082

Token 2117: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0005768624832853675
    2. ' beam' → logprob: -7.500576972961426
    3. '```' → logprob: -12.000576972961426
    4. '           ' → logprob: -12.250576972961426
    5. '   ' → logprob: -12.750576972961426
    6. '               ' → logprob: -13.250576972961426
    7. '                   ' → logprob: -13.250576972961426
    8. 'bee' → logprob: -13.500576972961426
    9. '       ' → logprob: -13.875576972961426
    10. 'be' → logprob: -14.375576972961426

Token 2118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000789259618613869
    2. '[' → logprob: -7.250789165496826
    3. 'i' → logprob: -10.000789642333984
    4. '1' → logprob: -11.000789642333984
    5. '[
' → logprob: -12.250789642333984
    6. '```' → logprob: -12.500789642333984
    7. '   ' → logprob: -12.625789642333984
    8. '(i' → logprob: -13.875789642333984
    9. ',i' → logprob: -14.375789642333984
    10. '[user' → logprob: -14.625789642333984

Token 2119: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09692946076393127
    2. '[' → logprob: -2.9719295501708984
    3. '[i' → logprob: -3.8469295501708984
    4. '-' → logprob: -3.9719295501708984
    5. '>[' → logprob: -8.221929550170898
    6. '1' → logprob: -8.721929550170898
    7. 'i' → logprob: -9.221929550170898
    8. ')[' → logprob: -9.346929550170898
    9. '```' → logprob: -9.846929550170898
    10. ']' → logprob: -9.971929550170898

Token 2120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016912502469494939
    2. 'i' → logprob: -6.5016913414001465
    3. '```' → logprob: -9.251690864562988
    4. '   ' → logprob: -10.126690864562988
    5. '[i' → logprob: -10.501690864562988
    6. ' ' → logprob: -11.626690864562988
    7. '[' → logprob: -12.001690864562988
    8. '(i' → logprob: -13.126690864562988
    9. '``' → logprob: -13.376690864562988
    10. '                   ' → logprob: -13.876690864562988

Token 2121: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15215280652046204
    2. '```' → logprob: -2.5271527767181396
    3. '               ' → logprob: -3.4021527767181396
    4. '           ' → logprob: -4.902153015136719
    5. ')
' → logprob: -5.402153015136719
    6. ')' → logprob: -5.402153015136719
    7. '()' → logprob: -5.652153015136719
    8. '                       ' → logprob: -5.902153015136719
    9. '       ' → logprob: -6.402153015136719
    10. '``' → logprob: -6.902153015136719

Token 2122: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31202200055122375
    2. '```' → logprob: -1.5620219707489014
    3. '``' → logprob: -3.8120219707489014
    4. '                       ' → logprob: -3.9370219707489014
    5. '               ' → logprob: -4.5620222091674805
    6. '                           ' → logprob: -5.6870222091674805
    7. '           ' → logprob: -6.4370222091674805
    8. '                               ' → logprob: -8.06202220916748
    9. '\' → logprob: -8.56202220916748
    10. '                  ' → logprob: -9.31202220916748

Token 2123: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7292424440383911
    2. 'if' (adapté à ' if') → logprob: -1.1042424440383911
    3. ' if' → logprob: -1.7292424440383911
    4. '                       ' → logprob: -5.354242324829102
    5. '```' → logprob: -6.229242324829102
    6. '               ' → logprob: -6.979242324829102
    7. '           ' → logprob: -7.229242324829102
    8. '                           ' → logprob: -8.354242324829102
    9. '                    ' → logprob: -10.229242324829102
    10. '``' → logprob: -10.229242324829102

Token 2124: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.38688570261001587
    2. 'temp' → logprob: -1.136885643005371
    3. '(temp' → logprob: -12.011885643005371
    4. '                           ' → logprob: -12.761885643005371
    5. '```' → logprob: -14.011885643005371
    6. ' temps' → logprob: -14.136885643005371
    7. '	temp' → logprob: -14.511885643005371
    8. '                   ' → logprob: -14.511885643005371
    9. '                               ' → logprob: -14.636885643005371
    10. '                       ' → logprob: -14.886885643005371

Token 2125: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12565113604068756
    2. '<=' → logprob: -2.2506511211395264
    3. '                   ' → logprob: -4.7506513595581055
    4. '```' → logprob: -6.1256513595581055
    5. '                  ' → logprob: -7.3756513595581055
    6. '                    ' → logprob: -8.250651359558105
    7. '               ' → logprob: -8.375651359558105
    8. '                       ' → logprob: -8.875651359558105
    9. '                      ' → logprob: -8.875651359558105
    10. '                ' → logprob: -9.125651359558105

Token 2126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07896767556667328
    2. ' ' → logprob: -2.578967571258545
    3. '```' → logprob: -9.828968048095703
    4. '=' → logprob: -12.203968048095703
    5. '                   ' → logprob: -12.203968048095703
    6. '   ' → logprob: -12.453968048095703
    7. '1' → logprob: -12.578968048095703
    8. '                       ' → logprob: -13.453968048095703
    9. '``' → logprob: -13.703968048095703
    10. '               ' → logprob: -13.703968048095703

Token 2127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -14.375012397766113
    4. '1' → logprob: -16.625011444091797
    5. '   ' → logprob: -17.375011444091797
    6. '``' → logprob: -17.500011444091797
    7. '
' → logprob: -17.875011444091797
    8. '                   ' → logprob: -19.125011444091797
    9. '               ' → logprob: -20.125011444091797
    10. '       ' → logprob: -20.125011444091797

Token 2128: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02474568784236908
    2. ':' → logprob: -4.649745464324951
    3. ':
' → logprob: -5.024745464324951
    4. '                   ' → logprob: -5.149745464324951
    5. '```' → logprob: -6.274745464324951
    6. '               ' → logprob: -8.89974594116211
    7. '                           ' → logprob: -9.02474594116211
    8. '           ' → logprob: -9.64974594116211
    9. '``' → logprob: -9.64974594116211
    10. '                               ' → logprob: -9.89974594116211

Token 2129: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005137573461979628
    2. '```' → logprob: -5.6301374435424805
    3. '                           ' → logprob: -7.2551374435424805
    4. '                               ' → logprob: -7.8801374435424805
    5. '``' → logprob: -8.75513744354248
    6. '                   ' → logprob: -9.13013744354248
    7. '                        ' → logprob: -9.75513744354248
    8. '                      ' → logprob: -10.25513744354248
    9. '                        
' → logprob: -10.25513744354248
    10. 'temp' → logprob: -11.50513744354248

Token 2130: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.7112010717391968
    2. 'temp' (adapté à ' temp') → logprob: -1.5862010717391968
    3. '                           ' → logprob: -1.7112010717391968
    4. '```' → logprob: -2.5862011909484863
    5. '                       ' → logprob: -3.4612011909484863
    6. '                               ' → logprob: -4.461201190948486
    7. '``' → logprob: -5.961201190948486
    8. '                        ' → logprob: -6.961201190948486
    9. '                            ' → logprob: -7.586201190948486
    10. ' ' → logprob: -7.961201190948486

Token 2131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20236548781394958
    2. '=' → logprob: -1.702365517616272
    3. '```' → logprob: -7.952365398406982
    4. '                           ' → logprob: -8.07736587524414
    5. '                       ' → logprob: -9.20236587524414
    6. '                        ' → logprob: -9.32736587524414
    7. ' +=' → logprob: -10.57736587524414
    8. '+=' → logprob: -11.20236587524414
    9. '                            ' → logprob: -11.45236587524414
    10. '                               ' → logprob: -11.82736587524414

Token 2132: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5759546756744385
    2. ' abs' → logprob: -0.8259546756744385
    3. '(abs' → logprob: -11.70095443725586
    4. '.abs' → logprob: -13.32595443725586
    5. '```' → logprob: -13.32595443725586
    6. '_abs' → logprob: -13.70095443725586
    7. '0' → logprob: -14.07595443725586
    8. ' temp' → logprob: -14.45095443725586
    9. 'temp' → logprob: -14.45095443725586
    10. '
' → logprob: -15.32595443725586

Token 2133: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.10035914182662964
    2. 'temp' → logprob: -2.3503592014312744
    3. '                   ' → logprob: -9.850358963012695
    4. '                       ' → logprob: -10.850358963012695
    5. '[temp' → logprob: -10.850358963012695
    6. '                           ' → logprob: -11.225358963012695
    7. '$temp' → logprob: -11.475358963012695
    8. '_temp' → logprob: -11.725358963012695
    9. '(' → logprob: -11.975358963012695
    10. 'temps' → logprob: -12.225358963012695

Token 2134: ')
' (ID: 446)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.024354737251996994
    2. '(temp' → logprob: -4.274354934692383
    3. '                           ' → logprob: -5.399354934692383
    4. '[temp' → logprob: -6.024354934692383
    5. '                   ' → logprob: -6.899354934692383
    6. '+' → logprob: -7.024354934692383
    7. '                       ' → logprob: -7.399354934692383
    8. '```' → logprob: -9.024354934692383
    9. '                               ' → logprob: -9.149354934692383
    10. ' temp' → logprob: -9.649354934692383

Token 2135: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3193274438381195
    2. '```' → logprob: -1.944327473640442
    3. '                       ' → logprob: -2.3193273544311523
    4. '``' → logprob: -4.694327354431152
    5. '                               ' → logprob: -5.069327354431152
    6. '                   ' → logprob: -5.569327354431152
    7. '                        ' → logprob: -5.569327354431152
    8. '                            ' → logprob: -6.069327354431152
    9. '                         ' → logprob: -6.944327354431152
    10. 'B' → logprob: -7.194327354431152

Token 2136: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.004899515770375729
    2. ' B' → logprob: -5.754899501800537
    3. 'ans' → logprob: -6.504899501800537
    4. ' ans' → logprob: -8.504899978637695
    5. '                       ' → logprob: -12.004899978637695
    6. '                           ' → logprob: -12.129899978637695
    7. '                   ' → logprob: -12.129899978637695
    8. '_B' → logprob: -13.379899978637695
    9. '```' → logprob: -13.754899978637695
    10. '   ' → logprob: -14.754899978637695

Token 2137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4630066156387329
    2. '=' → logprob: -1.838006615638733
    3. '[i' → logprob: -1.963006615638733
    4. '```' → logprob: -3.8380064964294434
    5. '                   ' → logprob: -3.9630064964294434
    6. '[' → logprob: -4.088006496429443
    7. '           ' → logprob: -5.838006496429443
    8. '                       ' → logprob: -6.088006496429443
    9. ' +=' → logprob: -6.213006496429443
    10. '               ' → logprob: -6.463006496429443

Token 2138: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.5759481191635132
    2. ' beam' → logprob: -0.8259481191635132
    3. '```' → logprob: -12.325947761535645
    4. 'be' → logprob: -13.450947761535645
    5. ' ' → logprob: -13.700947761535645
    6. '`' → logprob: -14.575947761535645
    7. 'b' → logprob: -15.075947761535645
    8. '``' → logprob: -15.825947761535645
    9. '   ' → logprob: -16.07594871520996
    10. 'Beam' → logprob: -16.45094871520996

Token 2139: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020938136731274426
    2. '[' → logprob: -9.37520980834961
    3. 'i' → logprob: -9.50020980834961
    4. '```' → logprob: -10.50020980834961
    5. '   ' → logprob: -11.75020980834961
    6. '[
' → logprob: -12.37520980834961
    7. '_i' → logprob: -13.62520980834961
    8. '(i' → logprob: -13.62520980834961
    9. ')' → logprob: -13.87520980834961
    10. '`' → logprob: -14.12520980834961

Token 2140: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005818825680762529
    2. '[i' → logprob: -5.255818843841553
    3. '[' → logprob: -7.630818843841553
    4. ']' → logprob: -10.255818367004395
    5. ')[' → logprob: -10.880818367004395
    6. ''][' → logprob: -11.505818367004395
    7. '"][' → logprob: -11.630818367004395
    8. '```' → logprob: -12.380818367004395
    9. ' ][' → logprob: -12.505818367004395
    10. '>[' → logprob: -12.755818367004395

Token 2141: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00014180023572407663
    2. '[i' → logprob: -8.875142097473145
    3. ' i' → logprob: -14.375142097473145
    4. '   ' → logprob: -14.375142097473145
    5. '```' → logprob: -15.000142097473145
    6. '1' → logprob: -15.750142097473145
    7. ''i' → logprob: -16.000141143798828
    8. '
' → logprob: -16.625141143798828
    9. '[' → logprob: -17.000141143798828
    10. '	i' → logprob: -17.500141143798828

Token 2142: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005211228504776955
    2. '                           ' → logprob: -6.005211353302002
    3. ']
' → logprob: -7.255211353302002
    4. '```' → logprob: -7.505211353302002
    5. '                   ' → logprob: -7.630211353302002
    6. '                        ' → logprob: -8.255210876464844
    7. ']' → logprob: -8.505210876464844
    8. '][' → logprob: -9.380210876464844
    9. '           ' → logprob: -9.630210876464844
    10. '[' → logprob: -9.880210876464844

Token 2143: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6850185990333557
    2. '                           ' → logprob: -1.310018539428711
    3. '                       ' → logprob: -1.560018539428711
    4. '                               ' → logprob: -4.685018539428711
    5. '``' → logprob: -5.685018539428711
    6. '                        ' → logprob: -6.185018539428711
    7. '                            ' → logprob: -8.560018539428711
    8. '                         ' → logprob: -8.560018539428711
    9. ' if' → logprob: -8.810018539428711
    10. 'if' → logprob: -8.810018539428711

Token 2144: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07759373635053635
    2. ' if' → logprob: -3.0775938034057617
    3. '                       ' → logprob: -3.5775938034057617
    4. '                           ' → logprob: -7.577593803405762
    5. '```' → logprob: -9.077593803405762
    6. '                               ' → logprob: -11.827593803405762
    7. '                        ' → logprob: -12.077593803405762
    8. '                   ' → logprob: -12.452593803405762
    9. '``' → logprob: -13.577593803405762
    10. '                         ' → logprob: -13.827593803405762

Token 2145: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2736019492149353
    2. ' B' → logprob: -1.52360200881958
    3. ' ans' → logprob: -3.89860200881958
    4. 'ans' → logprob: -6.77360200881958
    5. '(ans' → logprob: -11.273601531982422
    6. '```' → logprob: -12.398601531982422
    7. 'Ans' → logprob: -13.398601531982422
    8. '                   ' → logprob: -13.773601531982422
    9. '   ' → logprob: -14.023601531982422
    10. '           ' → logprob: -14.523601531982422

Token 2146: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1129397600889206
    2. '*' → logprob: -2.2379398345947266
    3. '```' → logprob: -9.987939834594727
    4. '   ' → logprob: -11.362939834594727
    5. ' ' → logprob: -11.487939834594727
    6. '           ' → logprob: -11.612939834594727
    7. '               ' → logprob: -12.237939834594727
    8. '       ' → logprob: -12.237939834594727
    9. ' ' → logprob: -12.487939834594727
    10. '*[' → logprob: -12.862939834594727

Token 2147: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.048600658774375916
    2. ' ans' → logprob: -3.048600673675537
    3. '(ans' → logprob: -11.798600196838379
    4. '_ans' → logprob: -12.923600196838379
    5. '	ans' → logprob: -13.423600196838379
    6. '
' → logprob: -14.048600196838379
    7. 'answer' → logprob: -15.173600196838379
    8. '```' → logprob: -15.923600196838379
    9. 'ann' → logprob: -16.048601150512695
    10. 'abs' → logprob: -16.423601150512695

Token 2148: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.047719426453113556
    2. '*' → logprob: -3.4227194786071777
    3. '[i' → logprob: -5.047719478607178
    4. ' *' → logprob: -5.797719478607178
    5. '```' → logprob: -5.922719478607178
    6. '*[' → logprob: -7.547719478607178
    7. ' [' → logprob: -7.672719478607178
    8. '   ' → logprob: -8.54771900177002
    9. '``' → logprob: -9.04771900177002
    10. '                           ' → logprob: -9.17271900177002

Token 2149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004329341172706336
    2. 'ans' → logprob: -8.750432968139648
    3. ' ' → logprob: -9.250432968139648
    4. ' ans' → logprob: -9.750432968139648
    5. '1' → logprob: -10.000432968139648
    6. '
' → logprob: -10.500432968139648
    7. '   ' → logprob: -11.125432968139648
    8. '[' → logprob: -11.500432968139648
    9. '```' → logprob: -12.125432968139648
    10. '           ' → logprob: -13.125432968139648

Token 2150: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.020628780126571655
    2. '<' → logprob: -3.8956286907196045
    3. '```' → logprob: -10.020628929138184
    4. '[' → logprob: -11.270628929138184
    5. '*' → logprob: -12.020628929138184
    6. ' *' → logprob: -12.895628929138184
    7. ' <=' → logprob: -13.145628929138184
    8. '<class' → logprob: -13.270628929138184
    9. '                           ' → logprob: -13.395628929138184
    10. '   ' → logprob: -13.395628929138184

Token 2151: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2017475813627243
    2. '<' → logprob: -1.7017475366592407
    3. '```' → logprob: -8.32674789428711
    4. '[' → logprob: -10.70174789428711
    5. ' *' → logprob: -10.95174789428711
    6. '*' → logprob: -11.70174789428711
    7. ' >' → logprob: -11.70174789428711
    8. ' <=' → logprob: -12.20174789428711
    9. '>' → logprob: -12.45174789428711
    10. '<int' → logprob: -12.70174789428711

Token 2152: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4740912914276123
    2. ' ans' → logprob: -0.9740912914276123
    3. '(ans' → logprob: -11.724091529846191
    4. '	ans' → logprob: -12.224091529846191
    5. '_ans' → logprob: -13.974091529846191
    6. '           ' → logprob: -16.349090576171875
    7. '                   ' → logprob: -16.974090576171875
    8. 'Ans' → logprob: -17.099090576171875
    9. '               ' → logprob: -17.099090576171875
    10. '0' → logprob: -17.474090576171875

Token 2153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004222997464239597
    2. 'ans' → logprob: -6.129222869873047
    3. ' ans' → logprob: -7.629222869873047
    4. ' [' → logprob: -7.754222869873047
    5. '                   ' → logprob: -8.004222869873047
    6. '```' → logprob: -8.504222869873047
    7. '               ' → logprob: -8.879222869873047
    8. '           ' → logprob: -9.004222869873047
    9. '                       ' → logprob: -9.254222869873047
    10. '(ans' → logprob: -10.254222869873047

Token 2154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003045994380954653
    2. '0' → logprob: -9.000304222106934
    3. ' ' → logprob: -9.375304222106934
    4. '   ' → logprob: -10.250304222106934
    5. 'ans' → logprob: -10.375304222106934
    6. ' ans' → logprob: -11.625304222106934
    7. '           ' → logprob: -13.000304222106934
    8. '
' → logprob: -13.125304222106934
    9. '       ' → logprob: -13.125304222106934
    10. '[' → logprob: -13.250304222106934

Token 2155: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07008837163448334
    2. ' <' → logprob: -2.8200883865356445
    3. '*' → logprob: -5.0700883865356445
    4. '<' → logprob: -7.6950883865356445
    5. '                           ' → logprob: -7.8200883865356445
    6. '```' → logprob: -7.8200883865356445
    7. '[' → logprob: -8.195088386535645
    8. '                       ' → logprob: -9.945088386535645
    9. ' ' → logprob: -10.445088386535645
    10. '                        ' → logprob: -10.945088386535645

Token 2156: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023293694481253624
    2. '*' → logprob: -3.7732937335968018
    3. '[' → logprob: -10.773293495178223
    4. '```' → logprob: -11.523293495178223
    5. '                           ' → logprob: -12.273293495178223
    6. '*[' → logprob: -12.398293495178223
    7. '                       ' → logprob: -13.273293495178223
    8. ' ' → logprob: -13.898293495178223
    9. '                        ' → logprob: -14.023293495178223
    10. '[temp' → logprob: -14.523293495178223

Token 2157: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0700780376791954
    2. ' temp' → logprob: -2.695078134536743
    3. 'B' → logprob: -9.070077896118164
    4. ' B' → logprob: -12.195077896118164
    5. '                           ' → logprob: -12.945077896118164
    6. 'tmp' → logprob: -13.070077896118164
    7. 'beam' → logprob: -13.195077896118164
    8. '(temp' → logprob: -13.445077896118164
    9. 'tem' → logprob: -13.570077896118164
    10. 't' → logprob: -13.695077896118164

Token 2158: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.36867761611938477
    2. ':
' → logprob: -1.4936776161193848
    3. ':' → logprob: -2.8686776161193848
    4. '                       ' → logprob: -3.7436776161193848
    5. '                               ' → logprob: -5.993677616119385
    6. '```' → logprob: -8.493677139282227
    7. '                          ' → logprob: -8.618677139282227
    8. '                        ' → logprob: -9.368677139282227
    9. '                            ' → logprob: -9.743677139282227
    10. '                         ' → logprob: -9.743677139282227

Token 2159: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03883187472820282
    2. '                               ' → logprob: -3.413831949234009
    3. '                       ' → logprob: -5.66383171081543
    4. '```' → logprob: -6.53883171081543
    5. '                            ' → logprob: -9.78883171081543
    6. '                          ' → logprob: -10.03883171081543
    7. '                                   ' → logprob: -10.16383171081543
    8. '``' → logprob: -10.41383171081543
    9. '                        ' → logprob: -10.66383171081543
    10. '                         ' → logprob: -10.91383171081543

Token 2160: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.01827624812722206
    2. ' ans' → logprob: -4.018276214599609
    3. '```' → logprob: -9.76827621459961
    4. '                               ' → logprob: -10.51827621459961
    5. '                           ' → logprob: -10.76827621459961
    6. '(ans' → logprob: -11.64327621459961
    7. '``' → logprob: -12.01827621459961
    8. '	ans' → logprob: -12.89327621459961
    9. '                                   ' → logprob: -13.76827621459961
    10. '_ans' → logprob: -14.01827621459961

Token 2161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869045674800873
    2. '=' → logprob: -1.1369045972824097
    3. '=
' → logprob: -11.3869047164917
    4. '=[' → logprob: -11.5119047164917
    5. '[' → logprob: -12.3869047164917
    6. ' =
' → logprob: -13.1369047164917
    7. ' =[' → logprob: -13.3869047164917
    8. '```' → logprob: -13.7619047164917
    9. '                           ' → logprob: -14.6369047164917
    10. '=[
' → logprob: -14.6369047164917

Token 2162: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31751760840415955
    2. ' [' → logprob: -1.567517638206482
    3. '[temp' → logprob: -2.8175175189971924
    4. '[t' → logprob: -6.0675177574157715
    5. '[
' → logprob: -7.3175177574157715
    6. ' ans' → logprob: -7.9425177574157715
    7. '[test' → logprob: -9.442517280578613
    8. '[B' → logprob: -9.692517280578613
    9. 'ans' → logprob: -9.692517280578613
    10. 'temp' → logprob: -10.192517280578613

Token 2163: 'temp' (ID: 7340)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.016423294320702553
    2. '1' → logprob: -4.391423225402832
    3. '0' → logprob: -6.266423225402832
    4. 'temp' → logprob: -6.516423225402832
    5. '[' → logprob: -8.266423225402832
    6. ' ans' → logprob: -8.766423225402832
    7. 'B' → logprob: -10.766423225402832
    8. '   ' → logprob: -11.016423225402832
    9. '(ans' → logprob: -11.141423225402832
    10. 'i' → logprob: -11.891423225402832

Token 2164: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1139010190963745
    2. '=' → logprob: -1.2389010190963745
    3. ']' → logprob: -1.4889010190963745
    4. '                           ' → logprob: -3.113901138305664
    5. ',' → logprob: -3.488901138305664
    6. '```' → logprob: -3.738901138305664
    7. '[' → logprob: -4.238901138305664
    8. '                       ' → logprob: -4.363901138305664
    9. '               ' → logprob: -5.363901138305664
    10. '                   ' → logprob: -5.488901138305664

Token 2165: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.28116682171821594
    2. 'B' → logprob: -1.4061667919158936
    3. ' beam' → logprob: -12.906167030334473
    4. 'beam' → logprob: -13.156167030334473
    5. '0' → logprob: -13.406167030334473
    6. ' ' → logprob: -13.531167030334473
    7. '               ' → logprob: -13.656167030334473
    8. '_B' → logprob: -13.781167030334473
    9. ' ans' → logprob: -13.906167030334473
    10. '                   ' → logprob: -14.156167030334473

Token 2166: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0279221534729004
    2. '                       ' → logprob: -1.0279221534729004
    3. ']' → logprob: -1.9029221534729004
    4. '                           ' → logprob: -2.7779221534729004
    5. '```' → logprob: -3.9029221534729004
    6. '                               ' → logprob: -4.6529221534729
    7. '               ' → logprob: -4.6529221534729
    8. '           ' → logprob: -4.7779221534729
    9. '                   ' → logprob: -4.9029221534729
    10. '<|end|>' → logprob: -5.4029221534729

Token 2167: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08780556917190552
    2. '   ' → logprob: -2.5878055095672607
    3. '```' → logprob: -4.83780574798584
    4. ' print' → logprob: -7.83780574798584
    5. '       ' → logprob: -8.21280574798584
    6. '
' → logprob: -8.71280574798584
    7. '           ' → logprob: -10.46280574798584
    8. '``' → logprob: -10.46280574798584
    9. '                           ' → logprob: -11.33780574798584
    10. '    
' → logprob: -11.58780574798584

Token 2168: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9127853512763977
    2. 'print' → logprob: -1.037785291671753
    3. '   ' → logprob: -2.412785291671753
    4. '<|end|>' → logprob: -2.662785291671753
    5. '```' → logprob: -3.537785291671753
    6. ')' → logprob: -3.662785291671753
    7. '
' → logprob: -4.537785530090332
    8. ' print' → logprob: -5.287785530090332
    9. '           ' → logprob: -5.787785530090332
    10. '                        
' → logprob: -6.162785530090332

Token 2169: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14627841114997864
    2. '               ' → logprob: -2.6462783813476562
    3. ':' → logprob: -2.8962783813476562
    4. '           ' → logprob: -5.146278381347656
    5. '```' → logprob: -5.771278381347656
    6. ' continue' → logprob: -8.396278381347656
    7. '                   ' → logprob: -8.771278381347656
    8. '       ' → logprob: -9.021278381347656
    9. '                       ' → logprob: -9.021278381347656
    10. '):
' → logprob: -9.146278381347656

Token 2170: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3619309067726135
    2. '           ' → logprob: -1.7369308471679688
    3. '```' → logprob: -2.2369308471679688
    4. '                   ' → logprob: -4.611930847167969
    5. '       ' → logprob: -5.361930847167969
    6. 'continue' → logprob: -5.986930847167969
    7. '                       ' → logprob: -6.486930847167969
    8. ' continue' → logprob: -7.361930847167969
    9. '   ' → logprob: -8.111930847167969
    10. '``' → logprob: -8.486930847167969

Token 2171: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7535574436187744
    2. 'for' → logprob: -1.2535574436187744
    3. 'continue' → logprob: -2.3785574436187744
    4. '                   ' → logprob: -2.8785574436187744
    5. '```' → logprob: -3.5035574436187744
    6. 'que' → logprob: -3.7535574436187744
    7. 'pass' → logprob: -4.003557205200195
    8. '           ' → logprob: -4.753557205200195
    9. 'break' → logprob: -5.378557205200195
    10. 'if' (adapté à ' if') → logprob: -5.628557205200195

Token 2172: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3375142216682434
    2. ' start' → logprob: -1.9625141620635986
    3. 'cnt' → logprob: -2.5875141620635986
    4. 'beam' → logprob: -3.9625141620635986
    5. ' cnt' → logprob: -4.087514400482178
    6. 'i' → logprob: -4.837514400482178
    7. ' i' → logprob: -5.337514400482178
    8. 'not' → logprob: -5.587514400482178
    9. ' beam' → logprob: -5.712514400482178
    10. 'end' → logprob: -6.087514400482178

Token 2173: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.6047699318733066e-05
    2. '[i' → logprob: -12.000016212463379
    3. '_L' → logprob: -12.625016212463379
    4. '```' → logprob: -13.125016212463379
    5. '           ' → logprob: -13.250016212463379
    6. ' L' → logprob: -14.500016212463379
    7. '[L' → logprob: -14.500016212463379
    8. '==' → logprob: -15.250016212463379
    9. '               ' → logprob: -15.375016212463379
    10. '[' → logprob: -15.500016212463379

Token 2174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.623244553338736e-05
    2. '```' → logprob: -10.250065803527832
    3. 'i' → logprob: -10.750065803527832
    4. '[' → logprob: -13.250065803527832
    5. '==' → logprob: -13.375065803527832
    6. '   ' → logprob: -14.000065803527832
    7. '               ' → logprob: -14.250065803527832
    8. '           ' → logprob: -14.375065803527832
    9. '`' → logprob: -14.500065803527832
    10. '``' → logprob: -14.625065803527832

Token 2175: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8123592734336853
    2. '==' → logprob: -1.68735933303833
    3. '[i' → logprob: -1.93735933303833
    4. ' ==' → logprob: -2.56235933303833
    5. '```' → logprob: -2.56235933303833
    6. '][' → logprob: -3.31235933303833
    7. ']==' → logprob: -3.93735933303833
    8. '[' → logprob: -4.93735933303833
    9. '``' → logprob: -6.06235933303833
    10. '               ' → logprob: -6.56235933303833

Token 2176: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6649149060249329
    2. ' ==' → logprob: -1.789914846420288
    3. '[i' → logprob: -2.164914846420288
    4. ']' → logprob: -2.664914846420288
    5. '```' → logprob: -2.789914846420288
    6. '==-' → logprob: -4.164915084838867
    7. '][' → logprob: -4.414915084838867
    8. ']==' → logprob: -4.414915084838867
    9. '!=' → logprob: -4.414915084838867
    10. ' !=' → logprob: -4.914915084838867

Token 2177: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010506733087822795
    2. ' -' → logprob: -6.8760504722595215
    3. 'm' → logprob: -12.00105094909668
    4. '-m' → logprob: -12.00105094909668
    5. '0' → logprob: -13.00105094909668
    6. '```' → logprob: -13.62605094909668
    7. '1' → logprob: -14.37605094909668
    8. '           ' → logprob: -15.12605094909668
    9. '   ' → logprob: -15.25105094909668
    10. '10' → logprob: -15.25105094909668

Token 2178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25237032771110535
    2. '-' → logprob: -1.5023703575134277
    3. ' -' → logprob: -8.00236988067627
    4. ' ' → logprob: -9.75236988067627
    5. '```' → logprob: -10.50236988067627
    6. '(-' → logprob: -12.25236988067627
    7. '   ' → logprob: -12.75236988067627
    8. '=' → logprob: -13.37736988067627
    9. '=-' → logprob: -13.37736988067627
    10. '#' → logprob: -13.68986988067627

Token 2179: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07379906624555588
    2. ':
' → logprob: -2.8237991333007812
    3. '               ' → logprob: -5.073799133300781
    4. '                       ' → logprob: -5.823799133300781
    5. ':' → logprob: -6.448799133300781
    6. ' and' → logprob: -7.823799133300781
    7. '```' → logprob: -8.198799133300781
    8. '           ' → logprob: -9.698799133300781
    9. '                    ' → logprob: -9.823799133300781
    10. '                           ' → logprob: -10.573799133300781

Token 2180: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18832914531230927
    2. '```' → logprob: -1.8133291006088257
    3. '                       ' → logprob: -5.563329219818115
    4. '               ' → logprob: -6.188329219818115
    5. '``' → logprob: -6.313329219818115
    6. '                    ' → logprob: -8.438328742980957
    7. '                               ' → logprob: -8.438328742980957
    8. '                           ' → logprob: -9.313328742980957
    9. '                  ' → logprob: -9.563328742980957
    10. '                ' → logprob: -9.563328742980957

Token 2181: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6614125370979309
    2. '```' → logprob: -1.7864124774932861
    3. 'que' → logprob: -1.9114124774932861
    4. '               ' → logprob: -2.536412477493286
    5. 'heap' → logprob: -3.536412477493286
    6. '``' → logprob: -3.786412477493286
    7. 'for' → logprob: -4.411412715911865
    8. '                       ' → logprob: -4.411412715911865
    9. 'temp' (adapté à ' temp') → logprob: -4.911412715911865
    10. '                           ' → logprob: -7.036412715911865

Token 2182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038261689245700836
    2. '=' → logprob: -3.288261651992798
    3. ' +=' → logprob: -9.163261413574219
    4. '```' → logprob: -9.663261413574219
    5. '+=' → logprob: -11.163261413574219
    6. '   ' → logprob: -12.038261413574219
    7. 'temp' → logprob: -12.163261413574219
    8. '``' → logprob: -12.538261413574219
    9. '       ' → logprob: -12.788261413574219
    10. '    ' → logprob: -13.413261413574219

Token 2183: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.03822554647922516
    2. ' Seg' → logprob: -3.2882256507873535
    3. ' seg' → logprob: -9.413225173950195
    4. 'seg' → logprob: -9.413225173950195
    5. 'Segment' → logprob: -11.538225173950195
    6. 'beam' → logprob: -13.288225173950195
    7. '_seg' → logprob: -13.538225173950195
    8. 'Segments' → logprob: -13.913225173950195
    9. '0' → logprob: -13.913225173950195
    10. '10' → logprob: -14.038225173950195

Token 2184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00787407997995615
    2. '2' → logprob: -5.007874011993408
    3. 'i' → logprob: -7.007874011993408
    4. 'Tree' → logprob: -9.132874488830566
    5. 'temp' → logprob: -10.132874488830566
    6. '```' → logprob: -10.882874488830566
    7. '[i' → logprob: -11.007874488830566
    8. '(i' → logprob: -11.132874488830566
    9. 'input' → logprob: -12.007874488830566
    10. ' i' → logprob: -12.007874488830566

Token 2185: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -6.749814019713085e-06
    2. ' .' → logprob: -13.625006675720215
    3. 'query' → logprob: -13.625006675720215
    4. '```' → logprob: -13.625006675720215
    5. '       ' → logprob: -13.875006675720215
    6. '.' → logprob: -14.125006675720215
    7. '   ' → logprob: -14.375006675720215
    8. '	query' → logprob: -15.625006675720215
    9. '$query' → logprob: -15.750006675720215
    10. ').' → logprob: -16.37500762939453

Token 2186: '(m' (ID: 2145)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.572941179503687e-05
    2. '(' → logprob: -10.250045776367188
    3. 'i' → logprob: -12.000045776367188
    4. '(start' → logprob: -14.125045776367188
    5. '(m' → logprob: -14.500045776367188
    6. ' (' → logprob: -14.750045776367188
    7. '(
' → logprob: -14.875045776367188
    8. '       ' → logprob: -15.125045776367188
    9. '   ' → logprob: -15.250045776367188
    10. '           ' → logprob: -15.250045776367188

Token 2187: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035359212197363377
    2. ',i' → logprob: -6.253535747528076
    3. '                   ' → logprob: -6.628535747528076
    4. ' ,' → logprob: -9.503536224365234
    5. '           ' → logprob: -9.753536224365234
    6. '(i' → logprob: -9.878536224365234
    7. '               ' → logprob: -10.253536224365234
    8. '```' → logprob: -11.378536224365234
    9. ',m' → logprob: -11.378536224365234
    10. '                  ' → logprob: -12.003536224365234

Token 2188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.037369001656770706
    2. 'i' → logprob: -3.5373690128326416
    3. ' i' → logprob: -5.4123687744140625
    4. ' ' → logprob: -6.0373687744140625
    5. '0' → logprob: -8.162368774414062
    6. '```' → logprob: -8.412368774414062
    7. ',' → logprob: -9.537368774414062
    8. '(i' → logprob: -10.037368774414062
    9. 'm' → logprob: -11.162368774414062
    10. ')' → logprob: -11.349868774414062

Token 2189: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012794863432645798
    2. '1' → logprob: -4.7627949714660645
    3. ' i' → logprob: -6.3877949714660645
    4. '0' → logprob: -6.6377949714660645
    5. '```' → logprob: -7.2627949714660645
    6. ',' → logprob: -9.137794494628906
    7. ',i' → logprob: -9.387794494628906
    8. '(i' → logprob: -9.387794494628906
    9. 'N' → logprob: -9.512794494628906
    10. 'm' → logprob: -10.387794494628906

Token 2190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03144174441695213
    2. '+' → logprob: -3.9064416885375977
    3. ' +' → logprob: -5.281441688537598
    4. '                   ' → logprob: -5.906441688537598
    5. '```' → logprob: -6.531441688537598
    6. ' ,' → logprob: -7.156441688537598
    7. ',i' → logprob: -8.531441688537598
    8. '-' → logprob: -9.156441688537598
    9. '           ' → logprob: -9.656441688537598
    10. '   ' → logprob: -9.906441688537598

Token 2191: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.051635339856147766
    2. 'i' → logprob: -3.426635265350342
    3. ' N' → logprob: -4.301635265350342
    4. 'm' → logprob: -5.801635265350342
    5. ' i' → logprob: -6.926635265350342
    6. ' m' → logprob: -8.6766357421875
    7. 'temp' → logprob: -9.9266357421875
    8. 'n' → logprob: -11.3016357421875
    9. '```' → logprob: -11.4266357421875
    10. '                   ' → logprob: -12.1766357421875

Token 2192: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2764742076396942
    2. '                   ' → logprob: -1.6514742374420166
    3. ')' → logprob: -3.1514742374420166
    4. ',' → logprob: -5.6514739990234375
    5. '```' → logprob: -6.4014739990234375
    6. '               ' → logprob: -7.2764739990234375
    7. '           ' → logprob: -8.151473999023438
    8. '+' → logprob: -8.776473999023438
    9. '                       ' → logprob: -8.901473999023438
    10. '   ' → logprob: -9.526473999023438

Token 2193: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22556275129318237
    2. '```' → logprob: -1.7255628108978271
    3. '``' → logprob: -4.225562572479248
    4. '                       ' → logprob: -5.725562572479248
    5. '[' → logprob: -6.725562572479248
    6. '               ' → logprob: -7.475562572479248
    7. ')' → logprob: -7.600562572479248
    8. ':
' → logprob: -7.725562572479248
    9. '           ' → logprob: -7.975562572479248
    10. '                        
' → logprob: -7.975562572479248

Token 2194: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2716357111930847
    2. '```' → logprob: -2.3966357707977295
    3. '                           ' → logprob: -2.7716357707977295
    4. '                       ' → logprob: -3.0216357707977295
    5. '                    ' → logprob: -4.14663553237915
    6. '                               ' → logprob: -5.27163553237915
    7. '``' → logprob: -5.52163553237915
    8. '                            ' → logprob: -6.52163553237915
    9. '                        ' → logprob: -6.64663553237915
    10. '           ' → logprob: -7.52163553237915

Token 2195: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7504193782806396
    2. '+=' → logprob: -1.1254193782806396
    3. '                   ' → logprob: -1.7504193782806396
    4. ' -=' → logprob: -4.000419616699219
    5. '                    ' → logprob: -5.500419616699219
    6. '```' → logprob: -6.500419616699219
    7. '=' → logprob: -6.750419616699219
    8. '-=' → logprob: -6.875419616699219
    9. '                       ' → logprob: -7.000419616699219
    10. '               ' → logprob: -7.750419616699219

Token 2196: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0789998397231102
    2. ' beam' → logprob: -2.5789997577667236
    3. '-' → logprob: -10.203999519348145
    4. '-be' → logprob: -11.078999519348145
    5. 'abs' → logprob: -11.453999519348145
    6. '0' → logprob: -11.578999519348145
    7. ' -' → logprob: -11.953999519348145
    8. 'be' → logprob: -12.078999519348145
    9. '   ' → logprob: -12.203999519348145
    10. '10' → logprob: -12.578999519348145

Token 2197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5776860184123507e-06
    2. ' [' → logprob: -13.62500286102295
    3. '[' → logprob: -14.37500286102295
    4. '```' → logprob: -15.87500286102295
    5. '   ' → logprob: -16.125001907348633
    6. '
' → logprob: -16.250001907348633
    7. 'i' → logprob: -16.250001907348633
    8. '[m' → logprob: -16.750001907348633
    9. '(i' → logprob: -17.125001907348633
    10. '[
' → logprob: -17.125001907348633

Token 2198: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16488473117351532
    2. '][' → logprob: -1.9148846864700317
    3. ')[' → logprob: -6.539884567260742
    4. '[' → logprob: -6.664884567260742
    5. '```' → logprob: -7.289884567260742
    6. '>[' → logprob: -8.289884567260742
    7. ''[' → logprob: -8.664884567260742
    8. '`' → logprob: -8.789884567260742
    9. '           ' → logprob: -9.289884567260742
    10. ']' → logprob: -9.664884567260742

Token 2199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031087737530469894
    2. '1' → logprob: -3.531087636947632
    3. 'i' → logprob: -6.781087875366211
    4. '[' → logprob: -9.281087875366211
    5. '[i' → logprob: -9.531087875366211
    6. '-' → logprob: -11.656087875366211
    7. ' ' → logprob: -11.906087875366211
    8. '(i' → logprob: -12.281087875366211
    9. '   ' → logprob: -12.406087875366211
    10. '```' → logprob: -12.656087875366211

Token 2200: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.044945359230041504
    2. '-' → logprob: -3.169945240020752
    3. '                   ' → logprob: -6.919945240020752
    4. '```' → logprob: -7.919945240020752
    5. ')' → logprob: -9.29494571685791
    6. '                           ' → logprob: -9.41994571685791
    7. '   ' → logprob: -10.16994571685791
    8. '                    ' → logprob: -10.16994571685791
    9. '                       ' → logprob: -10.29494571685791
    10. ' ' → logprob: -10.54494571685791

Token 2201: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0025294104125350714
    2. '-' → logprob: -6.002529621124268
    3. '```' → logprob: -10.25252914428711
    4. '                   ' → logprob: -12.87752914428711
    5. ' ' → logprob: -12.87752914428711
    6. '   ' → logprob: -13.50252914428711
    7. '                       ' → logprob: -13.75252914428711
    8. '                           ' → logprob: -13.75252914428711
    9. '<|end|>' → logprob: -13.75252914428711
    10. '[' → logprob: -14.00252914428711

Token 2202: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.00037037418223917484
    2. ' beam' → logprob: -8.125370025634766
    3. '   ' → logprob: -10.375370025634766
    4. '           ' → logprob: -11.125370025634766
    5. 'i' → logprob: -11.750370025634766
    6. '               ' → logprob: -12.125370025634766
    7. '                   ' → logprob: -12.375370025634766
    8. '       ' → logprob: -12.625370025634766
    9. '```' → logprob: -13.375370025634766
    10. ' i' → logprob: -14.125370025634766

Token 2203: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017590753268450499
    2. '[' → logprob: -6.376759052276611
    3. 'i' → logprob: -10.12675952911377
    4. '```' → logprob: -11.50175952911377
    5. '[
' → logprob: -12.37675952911377
    6. '[-' → logprob: -14.62675952911377
    7. '1' → logprob: -15.00175952911377
    8. '   ' → logprob: -15.25175952911377
    9. '_i' → logprob: -15.75175952911377
    10. '(i' → logprob: -16.001758575439453

Token 2204: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10576249659061432
    2. '[i' → logprob: -2.480762481689453
    3. '][' → logprob: -4.605762481689453
    4. '1' → logprob: -5.355762481689453
    5. '-' → logprob: -6.355762481689453
    6. 'i' → logprob: -9.980762481689453
    7. ')[' → logprob: -10.105762481689453
    8. '```' → logprob: -10.480762481689453
    9. '#' → logprob: -11.105762481689453
    10. '   ' → logprob: -11.230762481689453

Token 2205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003917749505490065
    2. 'i' → logprob: -6.003917694091797
    3. 'beam' → logprob: -6.628917694091797
    4. '```' → logprob: -10.378917694091797
    5. '   ' → logprob: -11.128917694091797
    6. '<|end|>' → logprob: -11.253917694091797
    7. ' ' → logprob: -11.378917694091797
    8. '<|end|>' → logprob: -11.378917694091797
    9. '[i' → logprob: -12.003917694091797
    10. '[' → logprob: -12.253917694091797

Token 2206: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11263410747051239
    2. ')' → logprob: -3.2376341819763184
    3. ')
' → logprob: -3.2376341819763184
    4. '```' → logprob: -4.862634181976318
    5. '               ' → logprob: -4.987634181976318
    6. '           ' → logprob: -5.112634181976318
    7. ']
' → logprob: -5.987634181976318
    8. ']' → logprob: -6.362634181976318
    9. '<|end|>' → logprob: -6.987634181976318
    10. '       ' → logprob: -7.237634181976318

Token 2207: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030422082170844078
    2. '```' → logprob: -3.6554219722747803
    3. '                       ' → logprob: -6.280422210693359
    4. '``' → logprob: -6.780422210693359
    5. '           ' → logprob: -8.03042221069336
    6. '               ' → logprob: -8.28042221069336
    7. '
' → logprob: -9.15542221069336
    8. '       ' → logprob: -9.53042221069336
    9. '                    ' → logprob: -9.90542221069336
    10. '\' → logprob: -10.03042221069336

Token 2208: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0566650852560997
    2. '                       ' → logprob: -3.4316651821136475
    3. '                           ' → logprob: -4.431664943695068
    4. '```' → logprob: -5.056664943695068
    5. '           ' → logprob: -7.056664943695068
    6. '                               ' → logprob: -7.181664943695068
    7. '               ' → logprob: -7.306664943695068
    8. '                    ' → logprob: -7.556664943695068
    9. '``' → logprob: -8.556665420532227
    10. '                  ' → logprob: -8.556665420532227

Token 2209: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.17981812357902527
    2. ' temp' → logprob: -1.8048181533813477
    3. '```' → logprob: -11.429818153381348
    4. '(temp' → logprob: -11.554818153381348
    5. ' beam' → logprob: -11.679818153381348
    6. 'beam' → logprob: -12.304818153381348
    7. 'ans' → logprob: -12.304818153381348
    8. ' ans' → logprob: -12.429818153381348
    9. '   ' → logprob: -12.429818153381348
    10. 'test' → logprob: -12.554818153381348

Token 2210: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0502755343914032
    2. '<=' → logprob: -3.0502755641937256
    3. '```' → logprob: -6.6752753257751465
    4. '                   ' → logprob: -8.425275802612305
    5. '                  ' → logprob: -10.050275802612305
    6. '           ' → logprob: -10.425275802612305
    7. '               ' → logprob: -10.675275802612305
    8. '[' → logprob: -11.050275802612305
    9. '                       ' → logprob: -11.550275802612305
    10. '          ' → logprob: -11.550275802612305

Token 2211: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04862596467137337
    2. ' ' → logprob: -3.048625946044922
    3. '```' → logprob: -11.423625946044922
    4. '   ' → logprob: -12.048625946044922
    5. '<=' → logprob: -12.048625946044922
    6. '                   ' → logprob: -12.173625946044922
    7. '               ' → logprob: -13.173625946044922
    8. '                       ' → logprob: -13.298625946044922
    9. '=' → logprob: -13.673625946044922
    10. '           ' → logprob: -13.923625946044922

Token 2212: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004330532974563539
    2. ' ' → logprob: -7.750432968139648
    3. '```' → logprob: -13.750432968139648
    4. '
' → logprob: -14.750432968139648
    5. '   ' → logprob: -14.750432968139648
    6. '<=' → logprob: -15.875432968139648
    7. '1' → logprob: -16.50043296813965
    8. '  ' → logprob: -16.62543296813965
    9. '``' → logprob: -16.62543296813965
    10. '10' → logprob: -16.87543296813965

Token 2213: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6054866909980774
    2. '                   ' → logprob: -1.4804866313934326
    3. ':' → logprob: -1.8554866313934326
    4. ':
' → logprob: -2.7304866313934326
    5. '                           ' → logprob: -5.855486869812012
    6. '```' → logprob: -6.730486869812012
    7. '                               ' → logprob: -8.355486869812012
    8. '               ' → logprob: -8.480486869812012
    9. '           ' → logprob: -9.105486869812012
    10. '):
' → logprob: -9.480486869812012

Token 2214: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.1271113157272339
    2. '```' → logprob: -2.3771114349365234
    3. '                               ' → logprob: -4.377111434936523
    4. '                           ' → logprob: -5.252111434936523
    5. '                   ' → logprob: -5.252111434936523
    6. '``' → logprob: -6.002111434936523
    7. '                        
' → logprob: -8.002111434936523
    8. '                        ' → logprob: -8.002111434936523
    9. '                                           ' → logprob: -10.252111434936523
    10. '               ' → logprob: -10.377111434936523

Token 2215: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.508626401424408
    2. ' temp' → logprob: -1.1336264610290527
    3. '                               ' → logprob: -3.5086264610290527
    4. '```' → logprob: -3.7586264610290527
    5. '                           ' → logprob: -4.008626461029053
    6. '                       ' → logprob: -6.758626461029053
    7. ' test' → logprob: -7.008626461029053
    8. '``' → logprob: -7.258626461029053
    9. '                                   ' → logprob: -7.633626461029053
    10. ' ' → logprob: -7.758626461029053

Token 2216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28226354718208313
    2. '=' → logprob: -1.4072635173797607
    3. '                           ' → logprob: -7.15726375579834
    4. '                       ' → logprob: -9.03226375579834
    5. '                        ' → logprob: -10.40726375579834
    6. '                   ' → logprob: -10.53226375579834
    7. '                               ' → logprob: -10.78226375579834
    8. ' ' → logprob: -10.90726375579834
    9. ' +=' → logprob: -10.90726375579834
    10. '```' → logprob: -11.03226375579834

Token 2217: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.12693136930465698
    2. 'abs' → logprob: -2.1269314289093018
    3. '(abs' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.251931190490723
    5. '_abs' → logprob: -14.251931190490723
    6. '.abs' → logprob: -14.376931190490723
    7. '```' → logprob: -14.626931190490723
    8. ' temp' → logprob: -16.37693214416504
    9. '
' → logprob: -17.12693214416504
    10. ' 
' → logprob: -18.00193214416504

Token 2218: '(temp' (ID: 19094)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0021855919621884823
    2. '(temp' → logprob: -6.252185821533203
    3. '(
' → logprob: -8.502185821533203
    4. ' temp' → logprob: -10.502185821533203
    5. '(' → logprob: -11.002185821533203
    6. 'test' → logprob: -12.627185821533203
    7. '
' → logprob: -13.502185821533203
    8. '```' → logprob: -13.627185821533203
    9. '[temp' → logprob: -13.877185821533203
    10. 'tem' → logprob: -13.877185821533203

Token 2219: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.30342191457748413
    2. ')' → logprob: -1.553421974182129
    3. '                       ' → logprob: -3.303421974182129
    4. '                           ' → logprob: -4.428421974182129
    5. '                   ' → logprob: -8.053421974182129
    6. '                               ' → logprob: -8.303421974182129
    7. ')
' → logprob: -8.428421974182129
    8. '```' → logprob: -8.553421974182129
    9. '                        
' → logprob: -9.553421974182129
    10. '               ' → logprob: -9.803421974182129

Token 2220: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.44005346298217773
    2. '                           ' → logprob: -1.4400534629821777
    3. '```' → logprob: -2.5650534629821777
    4. '                               ' → logprob: -3.3150534629821777
    5. '``' → logprob: -5.565053462982178
    6. '                        ' → logprob: -7.440053462982178
    7. '                            ' → logprob: -8.315053939819336
    8. '                   ' → logprob: -8.315053939819336
    9. '<|end|>' → logprob: -9.065053939819336
    10. '               ' → logprob: -9.315053939819336

Token 2221: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.2519344687461853
    2. ' B' → logprob: -1.50193452835083
    3. ' ans' → logprob: -12.501934051513672
    4. '                           ' → logprob: -14.501934051513672
    5. '                   ' → logprob: -15.001934051513672
    6. '_B' → logprob: -15.626934051513672
    7. '           ' → logprob: -15.626934051513672
    8. 'ans' → logprob: -15.751934051513672
    9. '                       ' → logprob: -16.126934051513672
    10. '```' → logprob: -16.251934051513672

Token 2222: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.779474675655365
    2. '=' → logprob: -1.7794747352600098
    3. '[' → logprob: -2.1544747352600098
    4. '*' → logprob: -2.4044747352600098
    5. ' =' → logprob: -3.4044747352600098
    6. ' ans' → logprob: -3.4044747352600098
    7. ' *' → logprob: -3.5294747352600098
    8. '```' → logprob: -3.7794747352600098
    9. '[i' → logprob: -4.02947473526001
    10. '*=' → logprob: -4.77947473526001

Token 2223: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.6931512355804443
    2. 'beam' → logprob: -0.6931512355804443
    3. ' ' → logprob: -13.943151473999023
    4. 'be' → logprob: -14.193151473999023
    5. '           ' → logprob: -14.943151473999023
    6. 'ans' → logprob: -15.068151473999023
    7. 'Beam' → logprob: -15.193151473999023
    8. ' ans' → logprob: -15.193151473999023
    9. 'B' → logprob: -15.818151473999023
    10. '```' → logprob: -16.068151473999023

Token 2224: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. 'i' → logprob: -13.125005722045898
    3. '```' → logprob: -13.250005722045898
    4. '[' → logprob: -13.500005722045898
    5. '[
' → logprob: -15.500005722045898
    6. '(i' → logprob: -16.7500057220459
    7. ']' → logprob: -17.1250057220459
    8. '
' → logprob: -17.5000057220459
    9. '   ' → logprob: -17.5000057220459
    10. '][' → logprob: -17.6250057220459

Token 2225: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4165123403072357
    2. '][' → logprob: -1.166512370109558
    3. '[' → logprob: -3.5415122509002686
    4. ')[' → logprob: -8.791512489318848
    5. ']' → logprob: -10.291512489318848
    6. 'i' → logprob: -11.416512489318848
    7. '```' → logprob: -11.541512489318848
    8. '}[' → logprob: -12.416512489318848
    9. '>[' → logprob: -12.666512489318848
    10. '[
' → logprob: -12.666512489318848

Token 2226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5761511921882629
    2. 'i' → logprob: -0.8261511921882629
    3. '[i' → logprob: -9.576150894165039
    4. '```' → logprob: -9.576150894165039
    5. '[' → logprob: -10.451150894165039
    6. ' i' → logprob: -11.451150894165039
    7. '   ' → logprob: -11.451150894165039
    8. '
' → logprob: -11.576150894165039
    9. '0' → logprob: -12.326150894165039
    10. ''i' → logprob: -13.451150894165039

Token 2227: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011513781733810902
    2. '                           ' → logprob: -5.386513710021973
    3. ']
' → logprob: -5.511513710021973
    4. ')
' → logprob: -7.011513710021973
    5. '                   ' → logprob: -7.011513710021973
    6. '```' → logprob: -8.261513710021973
    7. '                               ' → logprob: -8.386513710021973
    8. '                        ' → logprob: -9.386513710021973
    9. '               ' → logprob: -9.511513710021973
    10. '           ' → logprob: -9.761513710021973

Token 2228: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8590271472930908
    2. '                           ' → logprob: -1.2340271472930908
    3. '                       ' → logprob: -1.4840271472930908
    4. '                               ' → logprob: -3.109027147293091
    5. '``' → logprob: -4.734026908874512
    6. '                        ' → logprob: -6.859026908874512
    7. '<|end|>' → logprob: -7.234026908874512
    8. '                        
' → logprob: -7.484026908874512
    9. '                   ' → logprob: -7.859026908874512
    10. ')' → logprob: -8.359026908874512

Token 2229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.598710298538208
    2. ' if' → logprob: -1.223710298538208
    3. '                           ' → logprob: -2.473710298538208
    4. '                       ' → logprob: -2.723710298538208
    5. '                               ' → logprob: -5.473710060119629
    6. '```' → logprob: -6.348710060119629
    7. '                        ' → logprob: -8.973710060119629
    8. '                   ' → logprob: -9.098710060119629
    9. '``' → logprob: -9.473710060119629
    10. '           ' → logprob: -10.473710060119629

Token 2230: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6326204538345337
    2. ' B' → logprob: -0.7576204538345337
    3. ' ans' → logprob: -11.132620811462402
    4. 'ans' → logprob: -13.132620811462402
    5. '   ' → logprob: -13.507620811462402
    6. ' ' → logprob: -14.507620811462402
    7. 'beam' → logprob: -14.757620811462402
    8. ' beam' → logprob: -15.007620811462402
    9. 'b' → logprob: -15.132620811462402
    10. '           ' → logprob: -15.257620811462402

Token 2231: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023296372964978218
    2. '*' → logprob: -3.773296356201172
    3. '```' → logprob: -10.023296356201172
    4. ' ' → logprob: -13.023296356201172
    5. '[' → logprob: -14.398296356201172
    6. '``' → logprob: -14.523296356201172
    7. ' ' → logprob: -14.523296356201172
    8. '*[' → logprob: -14.648296356201172
    9. '   ' → logprob: -14.773296356201172
    10. '#' → logprob: -15.398296356201172

Token 2232: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4740805923938751
    2. ' ans' → logprob: -0.9740805625915527
    3. '(ans' → logprob: -12.724081039428711
    4. '_ans' → logprob: -15.224081039428711
    5. '	ans' → logprob: -15.349081039428711
    6. '
' → logprob: -16.97408103942871
    7. ' ' → logprob: -17.59908103942871
    8. '```' → logprob: -18.09908103942871
    9. 'Ans' → logprob: -18.47408103942871
    10. 'answer' → logprob: -18.47408103942871

Token 2233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000869413954205811
    2. '*' → logprob: -7.625869274139404
    3. ' *' → logprob: -8.500869750976562
    4. ' [' → logprob: -9.500869750976562
    5. '```' → logprob: -9.500869750976562
    6. '_' → logprob: -12.125869750976562
    7. '`' → logprob: -12.375869750976562
    8. '   ' → logprob: -12.375869750976562
    9. '*[' → logprob: -13.125869750976562
    10. '``' → logprob: -13.375869750976562

Token 2234: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001182052365038544
    2. '[' → logprob: -9.875118255615234
    3. ' ' → logprob: -10.750118255615234
    4. '1' → logprob: -10.750118255615234
    5. '   ' → logprob: -11.500118255615234
    6. '```' → logprob: -12.125118255615234
    7. '       ' → logprob: -13.375118255615234
    8. '
' → logprob: -13.375118255615234
    9. '           ' → logprob: -13.875118255615234
    10. '         ' → logprob: -14.375118255615234

Token 2235: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009307744912803173
    2. ' <' → logprob: -5.634307861328125
    3. ']<' → logprob: -6.009307861328125
    4. '<' → logprob: -6.259307861328125
    5. '[' → logprob: -7.134307861328125
    6. '][' → logprob: -8.634307861328125
    7. '```' → logprob: -8.634307861328125
    8. ' ]' → logprob: -9.634307861328125
    9. '*' → logprob: -10.884307861328125
    10. ')' → logprob: -11.384307861328125

Token 2236: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08895112574100494
    2. '<' → logprob: -2.4639511108398438
    3. ' <=' → logprob: -12.838951110839844
    4. '```' → logprob: -12.963951110839844
    5. ' *' → logprob: -13.338951110839844
    6. '   ' → logprob: -14.213951110839844
    7. '*' → logprob: -14.213951110839844
    8. '<=' → logprob: -14.338951110839844
    9. ' ' → logprob: -14.463951110839844
    10. '[' → logprob: -14.588951110839844

Token 2237: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.014166207052767277
    2. 'ans' → logprob: -4.264166355133057
    3. '(ans' → logprob: -13.139165878295898
    4. '	ans' → logprob: -14.639165878295898
    5. '_ans' → logprob: -15.639165878295898
    6. 'Ans' → logprob: -17.8891658782959
    7. ' ' → logprob: -17.8891658782959
    8. '```' → logprob: -18.8891658782959
    9. ' ' → logprob: -19.2641658782959
    10. 'ANS' → logprob: -19.7641658782959

Token 2238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005373203195631504
    2. '[i' → logprob: -5.755373001098633
    3. 'ans' → logprob: -6.380373001098633
    4. ' ans' → logprob: -8.005373001098633
    5. ' [' → logprob: -9.630373001098633
    6. '_ans' → logprob: -10.880373001098633
    7. '   ' → logprob: -11.005373001098633
    8. '           ' → logprob: -11.005373001098633
    9. '(ans' → logprob: -11.880373001098633
    10. '[
' → logprob: -11.880373001098633

Token 2239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005449208430945873
    2. 'i' → logprob: -6.005449295043945
    3. ' ' → logprob: -6.255449295043945
    4. 'ans' → logprob: -7.505449295043945
    5. ' i' → logprob: -9.255449295043945
    6. '   ' → logprob: -9.505449295043945
    7. 'start' → logprob: -9.630449295043945
    8. '-' → logprob: -9.880449295043945
    9. ' ans' → logprob: -9.880449295043945
    10. '0' → logprob: -10.130449295043945

Token 2240: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00692707346752286
    2. '*' → logprob: -5.006927013397217
    3. '                           ' → logprob: -9.881927490234375
    4. '                        ' → logprob: -10.006927490234375
    5. '[' → logprob: -10.381927490234375
    6. '```' → logprob: -11.006927490234375
    7. ' ' → logprob: -11.131927490234375
    8. '                       ' → logprob: -11.381927490234375
    9. '                          ' → logprob: -11.631927490234375
    10. '                            ' → logprob: -11.756927490234375

Token 2241: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018214326351881027
    2. '*' → logprob: -4.018214225769043
    3. '                        ' → logprob: -10.268214225769043
    4. ' ' → logprob: -11.893214225769043
    5. '                       ' → logprob: -12.018214225769043
    6. '                           ' → logprob: -12.393214225769043
    7. '```' → logprob: -12.768214225769043
    8. '                            ' → logprob: -13.518214225769043
    9. '                          ' → logprob: -13.893214225769043
    10. '                    ' → logprob: -13.893214225769043

Token 2242: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.18123479187488556
    2. ' temp' → logprob: -1.8062348365783691
    3. 'ans' → logprob: -7.181234836578369
    4. ' ans' → logprob: -7.556234836578369
    5. 'B' → logprob: -9.931234359741211
    6. 't' → logprob: -10.181234359741211
    7. 'tmp' → logprob: -10.806234359741211
    8. ' B' → logprob: -11.306234359741211
    9. 'abs' → logprob: -11.431234359741211
    10. '   ' → logprob: -11.431234359741211

Token 2243: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.37381184101104736
    2. '                       ' → logprob: -1.3738118410110474
    3. ':
' → logprob: -2.998811721801758
    4. '                               ' → logprob: -5.248811721801758
    5. ':' → logprob: -6.123811721801758
    6. '                        ' → logprob: -7.998811721801758
    7. '```' → logprob: -8.248811721801758
    8. '                   ' → logprob: -8.998811721801758
    9. '                          ' → logprob: -8.998811721801758
    10. '                            ' → logprob: -9.248811721801758

Token 2244: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.09139926731586456
    2. '                               ' → logprob: -2.5913991928100586
    3. '                       ' → logprob: -4.466399192810059
    4. '```' → logprob: -8.466399192810059
    5. '<|end|>' → logprob: -8.841399192810059
    6. '                          ' → logprob: -8.841399192810059
    7. '                            ' → logprob: -9.341399192810059
    8. '                        ' → logprob: -9.591399192810059
    9. '                                   ' → logprob: -9.966399192810059
    10. '                              ' → logprob: -10.466399192810059

Token 2245: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.014752281829714775
    2. 'ans' (adapté à ' ans') → logprob: -4.264752388000488
    3. '                               ' → logprob: -8.264752388000488
    4. '                           ' → logprob: -8.389752388000488
    5. '```' → logprob: -10.014752388000488
    6. '	ans' → logprob: -11.514752388000488
    7. '_ans' → logprob: -11.889752388000488
    8. '(ans' → logprob: -12.139752388000488
    9. ' print' → logprob: -12.264752388000488
    10. 'print' → logprob: -12.639752388000488

Token 2246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145291090011597
    2. ' =' → logprob: -1.7014529705047607
    3. '=[' → logprob: -11.32645320892334
    4. '```' → logprob: -12.07645320892334
    5. '[' → logprob: -12.20145320892334
    6. ')' → logprob: -12.32645320892334
    7. '=
' → logprob: -12.57645320892334
    8. ' =[' → logprob: -12.82645320892334
    9. ']=' → logprob: -13.32645320892334
    10. '+=' → logprob: -13.57645320892334

Token 2247: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1271895170211792
    2. '[' → logprob: -2.1271896362304688
    3. ' beam' → logprob: -9.127189636230469
    4. ' B' → logprob: -10.127189636230469
    5. ' temp' → logprob: -10.252189636230469
    6. '[temp' → logprob: -10.627189636230469
    7. ' ans' → logprob: -11.377189636230469
    8. ' ' → logprob: -11.877189636230469
    9. '[
' → logprob: -12.377189636230469
    10. '[i' → logprob: -12.502189636230469

Token 2248: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.007488669361919165
    2. 'B' → logprob: -5.13248872756958
    3. ' temp' → logprob: -7.25748872756958
    4. 'ans' → logprob: -7.75748872756958
    5. '0' → logprob: -8.382488250732422
    6. 'tmp' → logprob: -10.132488250732422
    7. ' B' → logprob: -10.382488250732422
    8. '           ' → logprob: -10.632488250732422
    9. '[' → logprob: -10.882488250732422
    10. '   ' → logprob: -11.132488250732422

Token 2249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021486106561496854
    2. ',
' → logprob: -8.875214576721191
    3. ' ,' → logprob: -11.000214576721191
    4. '           ' → logprob: -11.000214576721191
    5. '                           ' → logprob: -11.375214576721191
    6. '                   ' → logprob: -11.625214576721191
    7. '[' → logprob: -12.000214576721191
    8. '               ' → logprob: -12.000214576721191
    9. '                       ' → logprob: -13.250214576721191
    10. '                               ' → logprob: -13.500214576721191

Token 2250: ' B' (ID: 418)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7821127772331238
    2. 'ans' → logprob: -1.1571128368377686
    3. 'B' → logprob: -1.9071128368377686
    4. ' B' → logprob: -2.5321128368377686
    5. 'beam' → logprob: -9.407113075256348
    6. ' beam' → logprob: -10.282113075256348
    7. '1' → logprob: -11.407113075256348
    8. '	ans' → logprob: -11.782113075256348
    9. ' ' → logprob: -12.032113075256348
    10. '(ans' → logprob: -12.032113075256348

Token 2251: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.900672972202301
    2. '                           ' → logprob: -1.5256729125976562
    3. ']' → logprob: -2.1506729125976562
    4. '               ' → logprob: -2.2756729125976562
    5. '           ' → logprob: -3.1506729125976562
    6. ')' → logprob: -3.4006729125976562
    7. '                   ' → logprob: -3.6506729125976562
    8. '       ' → logprob: -3.7756729125976562
    9. '                               ' → logprob: -4.025672912597656
    10. '<|end|>' → logprob: -4.900672912597656

Token 2252: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.6339137554168701
    2. '                       ' → logprob: -1.6339137554168701
    3. '```' → logprob: -1.6339137554168701
    4. '                   ' → logprob: -2.13391375541687
    5. '       ' → logprob: -2.63391375541687
    6. ')' → logprob: -2.88391375541687
    7. '                           ' → logprob: -3.00891375541687
    8. '<|end|>' → logprob: -3.50891375541687
    9. '           ' → logprob: -3.88391375541687
    10. 'print' → logprob: -3.88391375541687

Token 2253: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5022991895675659
    2. '                   ' → logprob: -1.502299189567566
    3. 'else' (adapté à ' else') → logprob: -1.877299189567566
    4. '```' → logprob: -4.5022993087768555
    5. '                       ' → logprob: -5.7522993087768555
    6. ' else' → logprob: -6.2522993087768555
    7. '           ' → logprob: -6.3772993087768555
    8. 'for' → logprob: -7.8772993087768555
    9. '       ' → logprob: -8.252299308776855
    10. '                           ' → logprob: -9.377299308776855

Token 2254: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00502976356074214
    2. '```' → logprob: -5.630029678344727
    3. '                       ' → logprob: -7.505029678344727
    4. '               ' → logprob: -7.755029678344727
    5. ':
' → logprob: -8.380029678344727
    6. ':' → logprob: -10.380029678344727
    7. '                    ' → logprob: -10.380029678344727
    8. '           ' → logprob: -10.380029678344727
    9. '   ' → logprob: -11.130029678344727
    10. '                  ' → logprob: -11.130029678344727

Token 2255: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03184250369668007
    2. '```' → logprob: -3.7818424701690674
    3. '               ' → logprob: -5.0318427085876465
    4. '                       ' → logprob: -6.9068427085876465
    5. '``' → logprob: -8.156842231750488
    6. '           ' → logprob: -8.281842231750488
    7. '                ' → logprob: -8.781842231750488
    8. '                    ' → logprob: -9.781842231750488
    9. '                 ' → logprob: -9.906842231750488
    10. '       ' → logprob: -10.031842231750488

Token 2256: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.5874364376068115
    2. '                   ' → logprob: -0.9624364376068115
    3. ' L' → logprob: -2.9624364376068115
    4. '                       ' → logprob: -5.337436676025391
    5. '```' → logprob: -5.587436676025391
    6. '   ' → logprob: -6.837436676025391
    7. '                    ' → logprob: -8.46243667602539
    8. ' for' → logprob: -8.96243667602539
    9. 'for' → logprob: -9.33743667602539
    10. '               ' → logprob: -9.46243667602539

Token 2257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14119933545589447
    2. '=' → logprob: -2.1411993503570557
    3. '                   ' → logprob: -4.391199111938477
    4. ',' → logprob: -6.641199111938477
    5. '                    ' → logprob: -8.891199111938477
    6. '				' → logprob: -9.266199111938477
    7. '=L' → logprob: -9.266199111938477
    8. ',L' → logprob: -10.266199111938477
    9. '```' → logprob: -10.891199111938477
    10. '	' → logprob: -11.141199111938477

Token 2258: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0052422950975596905
    2. ' start' → logprob: -5.255242347717285
    3. 'end' → logprob: -11.880242347717285
    4. '                   ' → logprob: -13.755242347717285
    5. '   ' → logprob: -15.630242347717285
    6. '[start' → logprob: -15.755242347717285
    7. '	start' → logprob: -17.13024139404297
    8. ' end' → logprob: -17.25524139404297
    9. '               ' → logprob: -17.25524139404297
    10. '           ' → logprob: -17.50524139404297

Token 2259: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -2.339278580620885e-06
    2. '_L' → logprob: -13.750001907348633
    3. '                   ' → logprob: -14.875001907348633
    4. '```' → logprob: -15.125001907348633
    5. '           ' → logprob: -15.625001907348633
    6. 'i' → logprob: -15.750001907348633
    7. '[i' → logprob: -15.875001907348633
    8. ' L' → logprob: -16.375001907348633
    9. '   ' → logprob: -17.000001907348633
    10. '[' → logprob: -17.500001907348633

Token 2260: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.000001907348633
    3. '                   ' → logprob: -14.875001907348633
    4. '[' → logprob: -16.500001907348633
    5. '(i' → logprob: -16.625001907348633
    6. ' [' → logprob: -16.750001907348633
    7. 'i' → logprob: -16.875001907348633
    8. '[
' → logprob: -18.500001907348633
    9. '       ' → logprob: -19.000001907348633
    10. '           ' → logprob: -19.125001907348633

Token 2261: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026660313829779625
    2. ']
' → logprob: -4.651660442352295
    3. '```' → logprob: -5.401660442352295
    4. '           ' → logprob: -5.776660442352295
    5. '               ' → logprob: -6.151660442352295
    6. ',' → logprob: -6.401660442352295
    7. '[i' → logprob: -6.651660442352295
    8. ',i' → logprob: -7.151660442352295
    9. '+' → logprob: -7.276660442352295
    10. ']' → logprob: -7.526660442352295

Token 2262: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007390333339571953
    2. '```' → logprob: -5.00739049911499
    3. '``' → logprob: -8.132390022277832
    4. '				' → logprob: -9.507390022277832
    5. '		           ' → logprob: -9.632390022277832
    6. '               ' → logprob: -9.882390022277832
    7. '	               ' → logprob: -9.882390022277832
    8. '           ' → logprob: -10.132390022277832
    9. '                       ' → logprob: -10.507390022277832
    10. '                    ' → logprob: -11.257390022277832

Token 2263: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.010267014615237713
    2. ' R' → logprob: -4.6352667808532715
    3. '                   ' → logprob: -7.6352667808532715
    4. '				' → logprob: -11.38526725769043
    5. '                    ' → logprob: -12.01026725769043
    6. '```' → logprob: -12.01026725769043
    7. '	R' → logprob: -13.63526725769043
    8. '                     ' → logprob: -13.88526725769043
    9. '                       ' → logprob: -14.76026725769043
    10. '``' → logprob: -15.01026725769043

Token 2264: ' =' (ID: 314)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6932125687599182
    2. ' =' → logprob: -0.9432125687599182
    3. '=' → logprob: -2.3182125091552734
    4. '```' → logprob: -4.818212509155273
    5. '                    ' → logprob: -6.568212509155273
    6. '[i' → logprob: -6.818212509155273
    7. '           ' → logprob: -8.568212509155273
    8. '               ' → logprob: -8.943212509155273
    9. '                ' → logprob: -8.943212509155273
    10. '``' → logprob: -8.943212509155273

Token 2265: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2216009795665741
    2. 'i' → logprob: -1.7216010093688965
    3. ' end' → logprob: -4.2216010093688965
    4. ' i' → logprob: -5.3466010093688965
    5. 'start' → logprob: -7.7216010093688965
    6. '[i' → logprob: -10.471600532531738
    7. '[end' → logprob: -10.596600532531738
    8. '                   ' → logprob: -10.846600532531738
    9. '           ' → logprob: -11.846600532531738
    10. 'm' → logprob: -12.096600532531738

Token 2266: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.010322121903300285
    2. '[i' → logprob: -4.760322093963623
    3. 'i' → logprob: -6.385322093963623
    4. '(i' → logprob: -12.010322570800781
    5. ' L' → logprob: -13.010322570800781
    6. '[L' → logprob: -13.260322570800781
    7. '```' → logprob: -13.510322570800781
    8. ' i' → logprob: -13.510322570800781
    9. '{i' → logprob: -13.885322570800781
    10. '           ' → logprob: -14.010322570800781

Token 2267: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010485442908247933
    2. '                   ' → logprob: -9.250104904174805
    3. '```' → logprob: -11.875104904174805
    4. '               ' → logprob: -14.625104904174805
    5. '[' → logprob: -14.625104904174805
    6. ' [' → logprob: -15.375104904174805
    7. '           ' → logprob: -15.625104904174805
    8. '       ' → logprob: -16.000104904174805
    9. 'i' → logprob: -16.375104904174805
    10. '(i' → logprob: -16.750104904174805

Token 2268: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.225453719496727
    2. ']' → logprob: -1.8504537343978882
    3. '                   ' → logprob: -3.6004536151885986
    4. '```' → logprob: -4.225453853607178
    5. '   ' → logprob: -7.350453853607178
    6. '[i' → logprob: -7.725453853607178
    7. '               ' → logprob: -7.725453853607178
    8. '``' → logprob: -8.22545337677002
    9. ']
' → logprob: -8.47545337677002
    10. '       ' → logprob: -8.60045337677002

Token 2269: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12205412983894348
    2. '                   ' → logprob: -2.372054100036621
    3. '``' → logprob: -3.872054100036621
    4. '                       ' → logprob: -7.747054100036621
    5. '               ' → logprob: -9.372054100036621
    6. '				' → logprob: -9.747054100036621
    7. '       ' → logprob: -10.497054100036621
    8. ''''
' → logprob: -10.622054100036621
    9. '                    ' → logprob: -10.622054100036621
    10. '           ' → logprob: -10.747054100036621

Token 2270: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2269672304391861
    2. '```' → logprob: -1.726967215538025
    3. '``' → logprob: -4.2269673347473145
    4. 'temp' (adapté à ' temp') → logprob: -4.9769673347473145
    5. '               ' → logprob: -6.4769673347473145
    6. '                       ' → logprob: -7.2269673347473145
    7. '           ' → logprob: -7.4769673347473145
    8. '
' → logprob: -8.101966857910156
    9. '       ' → logprob: -8.851966857910156
    10. ' temp' → logprob: -9.226966857910156

Token 2271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01114945113658905
    2. '=' → logprob: -4.5111494064331055
    3. '```' → logprob: -9.511149406433105
    4. '                   ' → logprob: -10.886149406433105
    5. '    ' → logprob: -13.011149406433105
    6. '                    ' → logprob: -13.386149406433105
    7. '   ' → logprob: -14.386149406433105
    8. ' ' → logprob: -14.761149406433105
    9. '``' → logprob: -14.761149406433105
    10. '	' → logprob: -14.761149406433105

Token 2272: ' Seg' (ID: 13616)
  Prédit: ' Seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Seg' → logprob: -0.061967913061380386
    2. 'Seg' → logprob: -2.8119678497314453
    3. ' seg' → logprob: -16.061967849731445
    4. 'Segment' → logprob: -16.811967849731445
    5. '_seg' → logprob: -18.436967849731445
    6. '   ' → logprob: -19.061967849731445
    7. 'Segments' → logprob: -19.061967849731445
    8. 'seg' → logprob: -19.061967849731445
    9. ' ' → logprob: -19.311967849731445
    10. ' Segment' → logprob: -20.311967849731445

Token 2273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023880181834101677
    2. 'Tree' → logprob: -6.752388000488281
    3. 'L' → logprob: -7.377388000488281
    4. '1' → logprob: -7.877388000488281
    5. '   ' → logprob: -9.877388000488281
    6. 'temp' → logprob: -9.877388000488281
    7. '```' → logprob: -10.252388000488281
    8. '       ' → logprob: -11.752388000488281
    9. '(L' → logprob: -12.127388000488281
    10. 'T' → logprob: -12.127388000488281

Token 2274: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.00025549851125106215
    2. 'query' → logprob: -8.875255584716797
    3. '```' → logprob: -9.125255584716797
    4. '$query' → logprob: -12.750255584716797
    5. '	query' → logprob: -13.500255584716797
    6. ' query' → logprob: -14.625255584716797
    7. '=query' → logprob: -14.750255584716797
    8. '.' → logprob: -14.875255584716797
    9. 'QUERY' → logprob: -15.125255584716797
    10. '
' → logprob: -15.750255584716797

Token 2275: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0005539863486774266
    2. 'L' → logprob: -7.500554084777832
    3. '                   ' → logprob: -14.625554084777832
    4. '[L' → logprob: -16.000553131103516
    5. ' L' → logprob: -16.375553131103516
    6. '(' → logprob: -16.375553131103516
    7. '(R' → logprob: -16.875553131103516
    8. '```' → logprob: -17.125553131103516
    9. '	L' → logprob: -17.375553131103516
    10. '(
' → logprob: -17.375553131103516

Token 2276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000330220878822729
    2. '                   ' → logprob: -8.250329971313477
    3. ' ,' → logprob: -10.250329971313477
    4. ',R' → logprob: -11.375329971313477
    5. '           ' → logprob: -11.750329971313477
    6. '```' → logprob: -12.000329971313477
    7. '               ' → logprob: -13.375329971313477
    8. ',i' → logprob: -13.625329971313477
    9. '   ' → logprob: -14.000329971313477
    10. '       ' → logprob: -14.125329971313477

Token 2277: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10020947456359863
    2. ' R' → logprob: -2.3502094745635986
    3. '                   ' → logprob: -13.22520923614502
    4. '   ' → logprob: -15.22520923614502
    5. '```' → logprob: -15.72520923614502
    6. ' ' → logprob: -15.97520923614502
    7. '                    ' → logprob: -16.475210189819336
    8. 'r' → logprob: -16.600210189819336
    9. '    ' → logprob: -16.975210189819336
    10. '           ' → logprob: -17.100210189819336

Token 2278: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47443416714668274
    2. ' +' → logprob: -0.9744341373443604
    3. ',' → logprob: -8.349433898925781
    4. '```' → logprob: -9.724433898925781
    5. '                   ' → logprob: -9.849433898925781
    6. '                    ' → logprob: -13.349433898925781
    7. '                       ' → logprob: -13.974433898925781
    8. '＋' → logprob: -14.349433898925781
    9. '                ' → logprob: -14.474433898925781
    10. '                  ' → logprob: -14.724433898925781

Token 2279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.625015258789062
    3. '+' → logprob: -12.375015258789062
    4. '```' → logprob: -13.625015258789062
    5. ' +' → logprob: -15.625015258789062
    6. '                   ' → logprob: -16.125015258789062
    7. '   ' → logprob: -17.375015258789062
    8. '                       ' → logprob: -18.875015258789062
    9. '           ' → logprob: -19.125015258789062
    10. '                               ' → logprob: -19.250015258789062

Token 2280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '+' → logprob: -13.12500286102295
    3. ' ' → logprob: -15.50000286102295
    4. '(' → logprob: -15.62500286102295
    5. '```' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.000001907348633
    7. 'R' → logprob: -18.125001907348633
    8. '0' → logprob: -18.750001907348633
    9. '  ' → logprob: -19.000001907348633
    10. '           ' → logprob: -19.250001907348633

Token 2281: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00220461655408144
    2. '                   ' → logprob: -6.377204418182373
    3. ')-' → logprob: -8.502204895019531
    4. '```' → logprob: -8.877204895019531
    5. '               ' → logprob: -9.877204895019531
    6. '           ' → logprob: -10.502204895019531
    7. '-' → logprob: -10.752204895019531
    8. ')
' → logprob: -11.502204895019531
    9. '                  ' → logprob: -11.877204895019531
    10. '                    ' → logprob: -12.252204895019531

Token 2282: ' -' (ID: 533)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7047871351242065
    2. '-' → logprob: -1.4547871351242065
    3. ' -' → logprob: -1.8297871351242065
    4. '```' → logprob: -2.579787254333496
    5. '               ' → logprob: -3.704787254333496
    6. '           ' → logprob: -5.954787254333496
    7. '                    ' → logprob: -6.454787254333496
    8. '                  ' → logprob: -6.579787254333496
    9. '                       ' → logprob: -6.704787254333496
    10. '                ' → logprob: -7.079787254333496

Token 2283: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.06197093799710274
    2. ' beam' → logprob: -2.8119709491729736
    3. '```' → logprob: -13.436970710754395
    4. 'heap' → logprob: -13.811970710754395
    5. '           ' → logprob: -14.811970710754395
    6. '   ' → logprob: -16.18697166442871
    7. '               ' → logprob: -16.43697166442871
    8. ' ' → logprob: -16.68697166442871
    9. '       ' → logprob: -17.06197166442871
    10. '                   ' → logprob: -17.18697166442871

Token 2284: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.018032405525445938
    2. 'i' → logprob: -4.268032550811768
    3. '```' → logprob: -6.518032550811768
    4. '[' → logprob: -6.643032550811768
    5. '`' → logprob: -7.143032550811768
    6. '0' → logprob: -9.14303207397461
    7. '``' → logprob: -9.26803207397461
    8. '   ' → logprob: -10.14303207397461
    9. '(i' → logprob: -11.76803207397461
    10. '           ' → logprob: -12.01803207397461

Token 2285: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2749524414539337
    2. '[' → logprob: -1.6499524116516113
    3. '[i' → logprob: -3.3999524116516113
    4. '```' → logprob: -4.399952411651611
    5. '>[' → logprob: -7.149952411651611
    6. '`' → logprob: -7.399952411651611
    7. '       ' → logprob: -8.27495288848877
    8. '``' → logprob: -8.89995288848877
    9. ''][' → logprob: -9.27495288848877
    10. '           ' → logprob: -9.27495288848877

Token 2286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2233183042553719e-05
    2. '```' → logprob: -12.000012397766113
    3. ' ' → logprob: -13.000012397766113
    4. '[' → logprob: -13.500012397766113
    5. '   ' → logprob: -13.750012397766113
    6. 'i' → logprob: -15.125012397766113
    7. '       ' → logprob: -15.375012397766113
    8. '1' → logprob: -15.625012397766113
    9. '[i' → logprob: -16.000011444091797
    10. '`' → logprob: -16.375011444091797

Token 2287: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008596846833825111
    2. '```' → logprob: -5.383596897125244
    3. '               ' → logprob: -6.883596897125244
    4. '           ' → logprob: -7.258596897125244
    5. ')
' → logprob: -7.258596897125244
    6. '
' → logprob: -7.758596897125244
    7. ']
' → logprob: -8.008596420288086
    8. 'temp' → logprob: -8.008596420288086
    9. '``' → logprob: -9.383596420288086
    10. '				' → logprob: -9.883596420288086

Token 2288: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07180722802877426
    2. '```' → logprob: -3.0718071460723877
    3. 'temp' → logprob: -4.446807384490967
    4. '``' → logprob: -4.571807384490967
    5. '               ' → logprob: -8.071806907653809
    6. '           ' → logprob: -8.446806907653809
    7. '                       ' → logprob: -9.071806907653809
    8. '
' → logprob: -9.946806907653809
    9. '                           ' → logprob: -10.071806907653809
    10. '<|end|>' → logprob: -10.571806907653809

Token 2289: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.3246323764324188
    2. '                   ' → logprob: -1.3246324062347412
    3. ' temp' → logprob: -4.574632167816162
    4. '```' → logprob: -7.574632167816162
    5. '``' → logprob: -8.44963264465332
    6. '           ' → logprob: -9.19963264465332
    7. '               ' → logprob: -9.94963264465332
    8. '                       ' → logprob: -10.07463264465332
    9. '                    ' → logprob: -10.82463264465332
    10. '                           ' → logprob: -11.82463264465332

Token 2290: ' +=' (ID: 2757)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8210095763206482
    2. ' +=' → logprob: -1.321009635925293
    3. '+=' → logprob: -1.321009635925293
    4. '```' → logprob: -3.946009635925293
    5. '=' → logprob: -6.196009635925293
    6. '                  ' → logprob: -6.821009635925293
    7. '                    ' → logprob: -7.196009635925293
    8. '           ' → logprob: -7.196009635925293
    9. '               ' → logprob: -7.821009635925293
    10. '+' → logprob: -7.821009635925293

Token 2291: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.5759410262107849
    2. ' beam' → logprob: -0.8259410262107849
    3. 'be' → logprob: -14.57594108581543
    4. '```' → logprob: -14.82594108581543
    5. ' ' → logprob: -15.07594108581543
    6. 'Beam' → logprob: -15.70094108581543
    7. 'b' → logprob: -16.57594108581543
    8. '           ' → logprob: -17.20094108581543
    9. ' beams' → logprob: -17.20094108581543
    10. '``' → logprob: -17.32594108581543

Token 2292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007666609715670347
    2. 'i' → logprob: -4.88266658782959
    3. '                   ' → logprob: -10.88266658782959
    4. '(i' → logprob: -11.38266658782959
    5. '```' → logprob: -11.75766658782959
    6. '               ' → logprob: -11.88266658782959
    7. '           ' → logprob: -12.13266658782959
    8. '{i' → logprob: -12.63266658782959
    9. '                 ' → logprob: -13.38266658782959
    10. '_i' → logprob: -13.88266658782959

Token 2293: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.885492621222511e-05
    2. '][' → logprob: -10.125068664550781
    3. '```' → logprob: -11.375068664550781
    4. 'i' → logprob: -11.625068664550781
    5. '[' → logprob: -12.375068664550781
    6. '   ' → logprob: -13.750068664550781
    7. '
' → logprob: -15.000068664550781
    8. '(i' → logprob: -15.125068664550781
    9. '``' → logprob: -15.250068664550781
    10. '`' → logprob: -15.250068664550781

Token 2294: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007664944045245647
    2. '0' → logprob: -4.882665157318115
    3. '[i' → logprob: -10.132664680480957
    4. ' i' → logprob: -11.882664680480957
    5. '```' → logprob: -12.507664680480957
    6. '[' → logprob: -12.757664680480957
    7. '   ' → logprob: -13.757664680480957
    8. '1' → logprob: -13.757664680480957
    9. '
' → logprob: -14.007664680480957
    10. '(i' → logprob: -14.257664680480957

Token 2295: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01827062852680683
    2. '-' → logprob: -4.018270492553711
    3. '```' → logprob: -9.768270492553711
    4. '                   ' → logprob: -11.018270492553711
    5. '[' → logprob: -11.018270492553711
    6. ' ' → logprob: -12.018270492553711
    7. '<|end|>' → logprob: -12.643270492553711
    8. '           ' → logprob: -12.768270492553711
    9. ')' → logprob: -12.893270492553711
    10. ']' → logprob: -13.018270492553711

Token 2296: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06271988898515701
    2. '-' → logprob: -2.8127198219299316
    3. '```' → logprob: -7.312719821929932
    4. ' ' → logprob: -10.81272029876709
    5. '           ' → logprob: -11.18772029876709
    6. '[' → logprob: -11.56272029876709
    7. '   ' → logprob: -12.18772029876709
    8. '          ' → logprob: -12.31272029876709
    9. '``' → logprob: -12.43772029876709
    10. '       ' → logprob: -12.56272029876709

Token 2297: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.02657441422343254
    2. ' beam' → logprob: -3.6515743732452393
    3. '   ' → logprob: -10.02657413482666
    4. 'be' → logprob: -10.27657413482666
    5. '           ' → logprob: -10.27657413482666
    6. '1' → logprob: -10.52657413482666
    7. '               ' → logprob: -10.52657413482666
    8. '                   ' → logprob: -11.15157413482666
    9. ' ' → logprob: -11.40157413482666
    10. '```' → logprob: -11.52657413482666

Token 2298: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.021347511559724808
    2. '[' → logprob: -4.521347522735596
    3. '-' → logprob: -4.771347522735596
    4. '```' → logprob: -7.646347522735596
    5. '1' → logprob: -7.771347522735596
    6. 'i' → logprob: -8.146347045898438
    7. '_i' → logprob: -8.896347045898438
    8. '   ' → logprob: -8.896347045898438
    9. '_' → logprob: -9.396347045898438
    10. '(i' → logprob: -10.146347045898438

Token 2299: '][' (ID: 2696)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5715867280960083
    2. '[' → logprob: -1.3215867280960083
    3. '][' → logprob: -1.9465867280960083
    4. '1' → logprob: -4.196586608886719
    5. '[i' → logprob: -4.696586608886719
    6. '```' → logprob: -7.571586608886719
    7. ']' → logprob: -8.321586608886719
    8. ''][' → logprob: -8.446586608886719
    9. 'i' → logprob: -8.571586608886719
    10. '   ' → logprob: -9.321586608886719

Token 2300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.125000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '
' → logprob: -15.750000953674316
    5. ' ' → logprob: -16.000001907348633
    6. '-' → logprob: -16.500001907348633
    7. 'i' → logprob: -17.625001907348633
    8. '[' → logprob: -18.000001907348633
    9. '１' → logprob: -18.250001907348633
    10. '[i' → logprob: -18.437501907348633

Token 2301: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09730959683656693
    2. '```' → logprob: -3.4723095893859863
    3. '               ' → logprob: -3.7223095893859863
    4. ']
' → logprob: -3.8473095893859863
    5. ')
' → logprob: -5.097309589385986
    6. ']' → logprob: -6.097309589385986
    7. '           ' → logprob: -6.222309589385986
    8. '                       ' → logprob: -6.222309589385986
    9. '       ' → logprob: -7.097309589385986
    10. ')' → logprob: -7.222309589385986

Token 2302: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25860652327537537
    2. '```' → logprob: -1.5086065530776978
    3. '``' → logprob: -5.758606433868408
    4. '                       ' → logprob: -6.258606433868408
    5. '               ' → logprob: -6.758606433868408
    6. '           ' → logprob: -8.633606910705566
    7. '                           ' → logprob: -9.383606910705566
    8. '                               ' → logprob: -10.508606910705566
    9. '<|end|>' → logprob: -10.633606910705566
    10. '                  ' → logprob: -10.633606910705566

Token 2303: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6048775315284729
    2. 'if' (adapté à ' if') → logprob: -1.1048774719238281
    3. '                   ' → logprob: -2.104877471923828
    4. '```' → logprob: -7.979877471923828
    5. '               ' → logprob: -8.479877471923828
    6. '                       ' → logprob: -9.104877471923828
    7. '           ' → logprob: -10.354877471923828
    8. '``' → logprob: -10.604877471923828
    9. '                    ' → logprob: -11.979877471923828
    10. '   ' → logprob: -12.104877471923828

Token 2304: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.6931955814361572
    2. 'temp' → logprob: -0.6931955814361572
    3. 'B' → logprob: -11.318195343017578
    4. '                   ' → logprob: -11.693195343017578
    5. '   ' → logprob: -12.443195343017578
    6. ' B' → logprob: -12.568195343017578
    7. '           ' → logprob: -12.693195343017578
    8. '               ' → logprob: -12.818195343017578
    9. ' temps' → logprob: -12.943195343017578
    10. '(temp' → logprob: -13.068195343017578

Token 2305: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.030227692797780037
    2. '<=' → logprob: -3.5302276611328125
    3. '                   ' → logprob: -8.530227661132812
    4. '               ' → logprob: -9.155227661132812
    5. '                  ' → logprob: -10.405227661132812
    6. ' &' → logprob: -10.780227661132812
    7. '                       ' → logprob: -10.780227661132812
    8. '              ' → logprob: -11.155227661132812
    9. '                ' → logprob: -11.155227661132812
    10. '           ' → logprob: -11.280227661132812

Token 2306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197284162044525
    2. ' ' → logprob: -2.8119728565216064
    3. '                   ' → logprob: -13.436972618103027
    4. '               ' → logprob: -13.811972618103027
    5. '   ' → logprob: -14.186972618103027
    6. '                       ' → logprob: -14.311972618103027
    7. ' ' → logprob: -14.436972618103027
    8. '           ' → logprob: -15.436972618103027
    9. '
' → logprob: -15.936972618103027
    10. '                 ' → logprob: -16.061973571777344

Token 2307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.602024900028482e-05
    2. ' ' → logprob: -9.375085830688477
    3. '
' → logprob: -14.375085830688477
    4. '1' → logprob: -14.750085830688477
    5. '   ' → logprob: -16.875085830688477
    6. ' ' → logprob: -18.125085830688477
    7. '```' → logprob: -18.250085830688477
    8. '  ' → logprob: -18.375085830688477
    9. '-' → logprob: -18.625085830688477
    10. '       ' → logprob: -19.312585830688477

Token 2308: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012405924499034882
    2. '                   ' → logprob: -4.762405872344971
    3. ':
' → logprob: -6.012405872344971
    4. ':' → logprob: -7.012405872344971
    5. '```' → logprob: -8.762406349182129
    6. '               ' → logprob: -9.137406349182129
    7. '                           ' → logprob: -10.137406349182129
    8. '                      ' → logprob: -10.512406349182129
    9. '):
' → logprob: -10.887406349182129
    10. '       ' → logprob: -11.012406349182129

Token 2309: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0001375089050270617
    2. '```' → logprob: -9.875137329101562
    3. '                               ' → logprob: -10.000137329101562
    4. '                           ' → logprob: -10.875137329101562
    5. '                   ' → logprob: -11.375137329101562
    6. '                        ' → logprob: -12.625137329101562
    7. '``' → logprob: -13.000137329101562
    8. '                      ' → logprob: -13.500137329101562
    9. '					' → logprob: -14.250137329101562
    10. '                        
' → logprob: -14.750137329101562

Token 2310: ' temp' (ID: 5484)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9874280691146851
    2. ' temp' → logprob: -1.112428069114685
    3. 'temp' (adapté à ' temp') → logprob: -1.612428069114685
    4. '                           ' → logprob: -2.7374281883239746
    5. '                               ' → logprob: -3.9874281883239746
    6. '```' → logprob: -4.612428188323975
    7. '                   ' → logprob: -5.862428188323975
    8. '                        ' → logprob: -6.987428188323975
    9. ' ' → logprob: -7.862428188323975
    10. '``' → logprob: -7.987428188323975

Token 2311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2821313142776489
    2. '=' → logprob: -1.407131314277649
    3. '                       ' → logprob: -7.907131195068359
    4. '                           ' → logprob: -8.15713119506836
    5. '```' → logprob: -8.40713119506836
    6. '                        ' → logprob: -9.78213119506836
    7. '                               ' → logprob: -12.03213119506836
    8. '                   ' → logprob: -12.15713119506836
    9. '           ' → logprob: -12.15713119506836
    10. '                            ' → logprob: -12.65713119506836

Token 2312: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2520858645439148
    2. 'abs' → logprob: -1.5020859241485596
    3. 'True' → logprob: -9.37708568572998
    4. ' True' → logprob: -10.12708568572998
    5. '0' → logprob: -11.12708568572998
    6. '(abs' → logprob: -11.87708568572998
    7. '_abs' → logprob: -12.25208568572998
    8. 'False' → logprob: -12.62708568572998
    9. 'Abs' → logprob: -14.00208568572998
    10. '.abs' → logprob: -14.50208568572998

Token 2313: '(temp' (ID: 19094)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.004062371328473091
    2. '(temp' → logprob: -5.754062175750732
    3. '(
' → logprob: -7.879062175750732
    4. 'temps' → logprob: -8.25406265258789
    5. ' temp' → logprob: -9.25406265258789
    6. '(' → logprob: -9.25406265258789
    7. '_temp' → logprob: -10.75406265258789
    8. '```' → logprob: -11.75406265258789
    9. '                   ' → logprob: -12.50406265258789
    10. 'tmp' → logprob: -12.87906265258789

Token 2314: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.037436630576848984
    2. '                           ' → logprob: -4.162436485290527
    3. ')
' → logprob: -4.787436485290527
    4. '                   ' → logprob: -5.162436485290527
    5. ')' → logprob: -5.412436485290527
    6. '```' → logprob: -7.287436485290527
    7. '``' → logprob: -7.787436485290527
    8. '               ' → logprob: -8.162436485290527
    9. '                        ' → logprob: -8.287436485290527
    10. '                               ' → logprob: -8.537436485290527

Token 2315: '                       ' (ID: 968)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5758312940597534
    2. '                           ' → logprob: -1.2008312940597534
    3. '                       ' → logprob: -2.825831413269043
    4. '                               ' → logprob: -3.325831413269043
    5. '``' → logprob: -4.075831413269043
    6. '                        ' → logprob: -4.200831413269043
    7. '                            ' → logprob: -6.075831413269043
    8. '                   ' → logprob: -6.200831413269043
    9. '                         ' → logprob: -6.950831413269043
    10. '                             ' → logprob: -7.075831413269043

Token 2316: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -3.583550642360933e-05
    2. ' B' → logprob: -10.250036239624023
    3. '                   ' → logprob: -15.375036239624023
    4. '```' → logprob: -16.000036239624023
    5. '                       ' → logprob: -16.250036239624023
    6. '                           ' → logprob: -16.500036239624023
    7. '_B' → logprob: -17.875036239624023
    8. '           ' → logprob: -18.125036239624023
    9. 'ans' → logprob: -19.250036239624023
    10. '               ' → logprob: -19.500036239624023

Token 2317: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8305509090423584
    2. '[' → logprob: -1.2055509090423584
    3. '=' → logprob: -2.4555509090423584
    4. ' =' → logprob: -2.7055509090423584
    5. '*' → logprob: -2.9555509090423584
    6. ' [' → logprob: -4.3305511474609375
    7. '```' → logprob: -4.3305511474609375
    8. '[i' → logprob: -4.4555511474609375
    9. ' *=' → logprob: -4.9555511474609375
    10. '*=' → logprob: -5.0805511474609375

Token 2318: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.6931514739990234
    2. 'beam' → logprob: -0.6931514739990234
    3. ' ' → logprob: -13.193151473999023
    4. 'B' → logprob: -14.443151473999023
    5. 'Beam' → logprob: -14.943151473999023
    6. 'b' → logprob: -15.318151473999023
    7. '   ' → logprob: -15.443151473999023
    8. 'be' → logprob: -15.443151473999023
    9. '```' → logprob: -15.568151473999023
    10. ' ans' → logprob: -16.193151473999023

Token 2319: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.274932143744081e-05
    2. 'i' → logprob: -10.500042915344238
    3. '```' → logprob: -11.625042915344238
    4. '[' → logprob: -12.375042915344238
    5. '(i' → logprob: -13.750042915344238
    6. '   ' → logprob: -14.750042915344238
    7. '{i' → logprob: -15.000042915344238
    8. '[
' → logprob: -16.875041961669922
    9. ',i' → logprob: -17.125041961669922
    10. '           ' → logprob: -17.250041961669922

Token 2320: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16100165247917175
    2. '][' → logprob: -1.9110016822814941
    3. '[' → logprob: -7.536001682281494
    4. ')[' → logprob: -8.536001205444336
    5. 'i' → logprob: -11.286001205444336
    6. ']' → logprob: -11.661001205444336
    7. '```' → logprob: -12.036001205444336
    8. '[user' → logprob: -12.661001205444336
    9. ''][' → logprob: -12.911001205444336
    10. '}[' → logprob: -13.036001205444336

Token 2321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01612856425344944
    2. 'i' → logprob: -4.1411285400390625
    3. '```' → logprob: -9.891128540039062
    4. '[i' → logprob: -10.516128540039062
    5. '
' → logprob: -12.141128540039062
    6. '[' → logprob: -12.266128540039062
    7. ' i' → logprob: -12.391128540039062
    8. '`' → logprob: -14.641128540039062
    9. '   ' → logprob: -14.766128540039062
    10. ''i' → logprob: -15.141128540039062

Token 2322: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.024911627173423767
    2. ']
' → logprob: -4.149911403656006
    3. '                   ' → logprob: -4.899911403656006
    4. '                           ' → logprob: -7.399911403656006
    5. ']' → logprob: -8.649911880493164
    6. '```' → logprob: -8.899911880493164
    7. '           ' → logprob: -9.149911880493164
    8. '               ' → logprob: -9.649911880493164
    9. '                        ' → logprob: -9.774911880493164
    10. '       ' → logprob: -10.024911880493164

Token 2323: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11417660117149353
    2. '```' → logprob: -2.3641765117645264
    3. '                           ' → logprob: -4.6141767501831055
    4. '                        ' → logprob: -5.8641767501831055
    5. '``' → logprob: -7.3641767501831055
    6. '                               ' → logprob: -8.364176750183105
    7. '                      ' → logprob: -9.739176750183105
    8. ' if' → logprob: -9.739176750183105
    9. '                   ' → logprob: -10.239176750183105
    10. '                         ' → logprob: -10.739176750183105

Token 2324: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1736053079366684
    2. 'if' (adapté à ' if') → logprob: -1.9236053228378296
    3. '                           ' → logprob: -4.923605442047119
    4. '                       ' → logprob: -5.298605442047119
    5. '```' → logprob: -7.423605442047119
    6. '                               ' → logprob: -8.048604965209961
    7. '                        ' → logprob: -9.673604965209961
    8. '``' → logprob: -11.423604965209961
    9. '                         ' → logprob: -11.798604965209961
    10. '                            ' → logprob: -12.173604965209961

Token 2325: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5761991143226624
    2. ' B' → logprob: -0.8261991143226624
    3. ' ans' → logprob: -8.326199531555176
    4. 'ans' → logprob: -11.201199531555176
    5. 'b' → logprob: -14.201199531555176
    6. '```' → logprob: -14.451199531555176
    7. ' ' → logprob: -14.826199531555176
    8. '(B' → logprob: -14.826199531555176
    9. '(ans' → logprob: -14.826199531555176
    10. ' ' → logprob: -14.951199531555176

Token 2326: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.011088147759437561
    2. '*' → logprob: -4.5110883712768555
    3. '```' → logprob: -10.386088371276855
    4. '[' → logprob: -12.386088371276855
    5. '*[' → logprob: -13.261088371276855
    6. ' ' → logprob: -14.261088371276855
    7. '``' → logprob: -14.511088371276855
    8. ' [' → logprob: -15.261088371276855
    9. ' ' → logprob: -15.261088371276855
    10. '           ' → logprob: -15.511088371276855

Token 2327: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20694901049137115
    2. ' ans' → logprob: -1.70694899559021
    3. 'B' → logprob: -5.206949234008789
    4. '(ans' → logprob: -10.831949234008789
    5. ' B' → logprob: -11.081949234008789
    6. '	ans' → logprob: -13.331949234008789
    7. 'Ans' → logprob: -13.456949234008789
    8. '_ans' → logprob: -13.581949234008789
    9. '
' → logprob: -14.581949234008789
    10. 'ann' → logprob: -14.831949234008789

Token 2328: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2246291337069124e-05
    2. '```' → logprob: -11.125021934509277
    3. '[
' → logprob: -12.875021934509277
    4. ' [' → logprob: -13.500021934509277
    5. ']' → logprob: -14.500021934509277
    6. '][' → logprob: -14.500021934509277
    7. '           ' → logprob: -14.750021934509277
    8. '``' → logprob: -15.000021934509277
    9. '=' → logprob: -15.375021934509277
    10. '   ' → logprob: -15.375021934509277

Token 2329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -11.875007629394531
    3. '[' → logprob: -15.250007629394531
    4. '   ' → logprob: -15.250007629394531
    5. '1' → logprob: -16.00000762939453
    6. '
' → logprob: -16.37500762939453
    7. '```' → logprob: -17.50000762939453
    8. '  ' → logprob: -17.75000762939453
    9. '           ' → logprob: -17.87500762939453
    10. '       ' → logprob: -18.25000762939453

Token 2330: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2014443278312683
    2. '<' → logprob: -1.701444387435913
    3. '[' → logprob: -11.951444625854492
    4. '```' → logprob: -12.826444625854492
    5. '<class' → logprob: -13.201444625854492
    6. ']' → logprob: -13.326444625854492
    7. '                           ' → logprob: -13.451444625854492
    8. '<n' → logprob: -13.576444625854492
    9. '<int' → logprob: -13.826444625854492
    10. '>' → logprob: -13.826444625854492

Token 2331: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4740847051143646
    2. '<' → logprob: -0.974084734916687
    3. '```' → logprob: -13.724084854125977
    4. '<n' → logprob: -13.974084854125977
    5. '>' → logprob: -14.349084854125977
    6. '<class' → logprob: -14.599084854125977
    7. '<int' → logprob: -14.599084854125977
    8. '[' → logprob: -14.599084854125977
    9. '<size' → logprob: -14.974084854125977
    10. '<len' → logprob: -15.099084854125977

Token 2332: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0040793512016534805
    2. ' ans' → logprob: -5.504079341888428
    3. '(ans' → logprob: -14.254079818725586
    4. '	ans' → logprob: -15.254079818725586
    5. '_ans' → logprob: -16.754079818725586
    6. '0' → logprob: -18.379079818725586
    7. '
' → logprob: -18.379079818725586
    8. '1' → logprob: -18.629079818725586
    9. 'Ans' → logprob: -18.754079818725586
    10. '           ' → logprob: -18.754079818725586

Token 2333: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011403311509639025
    2. '1' → logprob: -9.375114440917969
    3. ']' → logprob: -11.750114440917969
    4. '][' → logprob: -11.875114440917969
    5. '           ' → logprob: -12.375114440917969
    6. 'ans' → logprob: -13.125114440917969
    7. '```' → logprob: -13.125114440917969
    8. '   ' → logprob: -13.625114440917969
    9. '_' → logprob: -13.625114440917969
    10. '               ' → logprob: -14.125114440917969

Token 2334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38716697692871094
    2. '0' → logprob: -1.137166976928711
    3. '   ' → logprob: -9.512166976928711
    4. '
' → logprob: -9.887166976928711
    5. '[' → logprob: -10.137166976928711
    6. ' ' → logprob: -10.262166976928711
    7. '-' → logprob: -10.262166976928711
    8. '```' → logprob: -10.387166976928711
    9. '       ' → logprob: -12.262166976928711
    10. '           ' → logprob: -12.637166976928711

Token 2335: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.152769073843956
    2. '*' → logprob: -2.027769088745117
    3. ']' → logprob: -4.902769088745117
    4. ']*' → logprob: -7.027769088745117
    5. '```' → logprob: -7.777769088745117
    6. '                       ' → logprob: -8.027769088745117
    7. '                           ' → logprob: -8.277769088745117
    8. '[' → logprob: -8.652769088745117
    9. '][' → logprob: -8.777769088745117
    10. '                        ' → logprob: -9.152769088745117

Token 2336: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4881896674633026
    2. '*' → logprob: -0.988189697265625
    3. '                           ' → logprob: -4.488189697265625
    4. '                       ' → logprob: -6.613189697265625
    5. '                        ' → logprob: -7.363189697265625
    6. '```' → logprob: -8.113189697265625
    7. '                               ' → logprob: -8.613189697265625
    8. '                            ' → logprob: -8.988189697265625
    9. '                          ' → logprob: -10.488189697265625
    10. '                         ' → logprob: -10.738189697265625

Token 2337: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.10020893067121506
    2. ' temp' → logprob: -2.3502089977264404
    3. 'B' → logprob: -13.72520923614502
    4. 'tem' → logprob: -15.35020923614502
    5. 'tmp' → logprob: -15.72520923614502
    6. '                           ' → logprob: -15.85020923614502
    7. 'temps' → logprob: -15.97520923614502
    8. '_temp' → logprob: -16.100208282470703
    9. '	temp' → logprob: -16.350208282470703
    10. ' B' → logprob: -16.475208282470703

Token 2338: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2015819400548935
    2. '                       ' → logprob: -1.8265819549560547
    3. ':
' → logprob: -5.201581954956055
    4. '                               ' → logprob: -5.451581954956055
    5. ' <' → logprob: -5.576581954956055
    6. '```' → logprob: -5.701581954956055
    7. ':' → logprob: -6.951581954956055
    8. '<' → logprob: -7.201581954956055
    9. '                        ' → logprob: -7.326581954956055
    10. '                          ' → logprob: -7.576581954956055

Token 2339: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.10695821046829224
    2. '                       ' → logprob: -2.7319581508636475
    3. '                               ' → logprob: -3.3569581508636475
    4. '```' → logprob: -6.981958389282227
    5. '                        ' → logprob: -9.106958389282227
    6. '                                   ' → logprob: -9.356958389282227
    7. '                          ' → logprob: -9.606958389282227
    8. '                   ' → logprob: -9.731958389282227
    9. '                         ' → logprob: -9.856958389282227
    10. '                            ' → logprob: -9.981958389282227

Token 2340: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3870299458503723
    2. ' ans' → logprob: -1.1370298862457275
    3. '                           ' → logprob: -9.637029647827148
    4. '                               ' → logprob: -10.012029647827148
    5. '```' → logprob: -10.512029647827148
    6. '	ans' → logprob: -11.387029647827148
    7. '(ans' → logprob: -12.887029647827148
    8. '_ans' → logprob: -13.387029647827148
    9. '``' → logprob: -13.762029647827148
    10. 'answer' → logprob: -13.887029647827148

Token 2341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740878641605377
    2. ' =' → logprob: -0.9740878343582153
    3. '=
' → logprob: -12.724087715148926
    4. ')' → logprob: -13.724087715148926
    5. '=[' → logprob: -13.724087715148926
    6. ']=' → logprob: -13.849087715148926
    7. ']' → logprob: -13.974087715148926
    8. ' =
' → logprob: -14.224087715148926
    9. '```' → logprob: -14.224087715148926
    10. '=[
' → logprob: -14.599087715148926

Token 2342: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.11646965891122818
    2. '[temp' → logprob: -2.616469621658325
    3. '[' → logprob: -3.616469621658325
    4. '[t' → logprob: -4.616469860076904
    5. '[token' → logprob: -9.991469383239746
    6. '[target' → logprob: -11.116469383239746
    7. '[B' → logprob: -11.616469383239746
    8. '[test' → logprob: -11.616469383239746
    9. '[b' → logprob: -12.491469383239746
    10. '[tmp' → logprob: -12.616469383239746

Token 2343: 'temp' (ID: 7340)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.15970633924007416
    2. '[' → logprob: -2.4097063541412354
    3. 'temp' → logprob: -3.0347063541412354
    4. '[temp' → logprob: -4.909706115722656
    5. 'B' → logprob: -6.784706115722656
    6. ' ans' → logprob: -7.659706115722656
    7. '[B' → logprob: -8.534706115722656
    8. '   ' → logprob: -9.159706115722656
    9. '(ans' → logprob: -9.284706115722656
    10. '0' → logprob: -9.409706115722656

Token 2344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010121402330696583
    2. '                       ' → logprob: -4.7601213455200195
    3. '                           ' → logprob: -7.5101213455200195
    4. '[' → logprob: -8.38512134552002
    5. '                               ' → logprob: -8.38512134552002
    6. '               ' → logprob: -8.38512134552002
    7. '                   ' → logprob: -9.38512134552002
    8. '           ' → logprob: -9.51012134552002
    9. '       ' → logprob: -10.51012134552002
    10. '][' → logprob: -10.63512134552002

Token 2345: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5950418710708618
    2. 'B' → logprob: -0.8450418710708618
    3. ' ans' → logprob: -4.095041751861572
    4. 'ans' → logprob: -6.095041751861572
    5. '_B' → logprob: -12.59504222869873
    6. '	B' → logprob: -13.34504222869873
    7. ' ' → logprob: -13.59504222869873
    8. '   ' → logprob: -13.97004222869873
    9. 'beam' → logprob: -14.22004222869873
    10. '           ' → logprob: -14.34504222869873

Token 2346: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48900890350341797
    2. '                       ' → logprob: -1.364008903503418
    3. ']' → logprob: -2.614008903503418
    4. '               ' → logprob: -3.739008903503418
    5. '           ' → logprob: -4.364008903503418
    6. '       ' → logprob: -4.989008903503418
    7. '                   ' → logprob: -5.364008903503418
    8. ')
' → logprob: -5.864008903503418
    9. '```' → logprob: -6.114008903503418
    10. '                           ' → logprob: -6.364008903503418

Token 2347: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1282951980829239
    2. '                       ' → logprob: -3.1282951831817627
    3. '               ' → logprob: -3.2532951831817627
    4. '```' → logprob: -4.003295421600342
    5. '                           ' → logprob: -5.003295421600342
    6. '           ' → logprob: -5.628295421600342
    7. '       ' → logprob: -6.128295421600342
    8. 'print' → logprob: -6.378295421600342
    9. '                    ' → logprob: -7.128295421600342
    10. 'else' → logprob: -7.503295421600342

Token 2348: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06800898909568787
    2. 'temp' (adapté à ' temp') → logprob: -2.9430088996887207
    3. '               ' → logprob: -4.568008899688721
    4. '```' → logprob: -6.443008899688721
    5. '                       ' → logprob: -7.818008899688721
    6. ' temp' → logprob: -8.193009376525879
    7. '           ' → logprob: -8.693009376525879
    8. '``' → logprob: -9.693009376525879
    9. '
' → logprob: -10.318009376525879
    10. '                 ' → logprob: -10.943009376525879

Token 2349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039072081446647644
    2. '=' → logprob: -3.289072036743164
    3. '                   ' → logprob: -7.039072036743164
    4. '```' → logprob: -9.914072036743164
    5. '               ' → logprob: -10.289072036743164
    6. '           ' → logprob: -11.039072036743164
    7. '                ' → logprob: -11.289072036743164
    8. '                    ' → logprob: -11.539072036743164
    9. ' +=' → logprob: -11.789072036743164
    10. '            ' → logprob: -12.414072036743164

Token 2350: ' min' (ID: 1349)
  Prédit: ' Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Seg' → logprob: -0.038044821470975876
    2. 'Seg' → logprob: -3.2880449295043945
    3. ' seg' → logprob: -12.913044929504395
    4. '_seg' → logprob: -15.163044929504395
    5. 'Segment' → logprob: -15.163044929504395
    6. 'seg' → logprob: -15.913044929504395
    7. '```' → logprob: -16.663043975830078
    8. 'Segments' → logprob: -17.788043975830078
    9. '_SEG' → logprob: -17.788043975830078
    10. ' Segment' → logprob: -17.913043975830078

Token 2351: '(S' (ID: 6181)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.5977066159248352
    2. '(S' → logprob: -0.8477066159248352
    3. ' Seg' → logprob: -3.8477065563201904
    4. '(' → logprob: -8.72270679473877
    5. '(
' → logprob: -10.72270679473877
    6. ' (' → logprob: -12.34770679473877
    7. '(seg' → logprob: -12.34770679473877
    8. '_seg' → logprob: -12.72270679473877
    9. 'Segment' → logprob: -13.09770679473877
    10. '```' → logprob: -13.47270679473877

Token 2352: 'eg' (ID: 1207)
  Prédit: 'eg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.024259204044938087
    2. 'Seg' → logprob: -4.774259090423584
    3. '1' → logprob: -4.899259090423584
    4. 'g' → logprob: -5.649259090423584
    5. 'e' → logprob: -6.899259090423584
    6. '2' → logprob: -6.899259090423584
    7. 'Eg' → logprob: -7.774259090423584
    8. 'G' → logprob: -8.149259567260742
    9. 'egs' → logprob: -8.524259567260742
    10. 'egment' → logprob: -8.649259567260742

Token 2353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05156548321247101
    2. '2' → logprob: -3.176565408706665
    3. 'eg' → logprob: -5.051565647125244
    4. 'Tree' → logprob: -6.426565647125244
    5. '   ' → logprob: -9.176565170288086
    6. '```' → logprob: -9.426565170288086
    7. 'tree' → logprob: -9.551565170288086
    8. 'egment' → logprob: -9.926565170288086
    9. '[' → logprob: -10.301565170288086
    10. 'g' → logprob: -10.426565170288086

Token 2354: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.00010747690976131707
    2. 'query' → logprob: -9.625107765197754
    3. '.' → logprob: -10.250107765197754
    4. '```' → logprob: -12.375107765197754
    5. ' .' → logprob: -14.000107765197754
    6. '$query' → logprob: -15.250107765197754
    7. '
' → logprob: -15.750107765197754
    8. ' query' → logprob: -16.250106811523438
    9. '].' → logprob: -16.250106811523438
    10. ').' → logprob: -16.250106811523438

Token 2355: '(R' (ID: 4092)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3485076129436493
    2. '(R' → logprob: -1.2235076427459717
    3. ' R' → logprob: -10.72350788116455
    4. '(' → logprob: -11.59850788116455
    5. '(L' → logprob: -11.84850788116455
    6. ',R' → logprob: -12.09850788116455
    7. '                   ' → logprob: -12.34850788116455
    8. '   ' → logprob: -12.72350788116455
    9. 'i' → logprob: -13.34850788116455
    10. 'L' → logprob: -13.47350788116455

Token 2356: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12836229801177979
    2. ' +' → logprob: -2.7533621788024902
    3. '(R' → logprob: -2.8783621788024902
    4. ',' → logprob: -8.628362655639648
    5. 'R' → logprob: -8.753362655639648
    6. '(' → logprob: -9.253362655639648
    7. ',R' → logprob: -11.503362655639648
    8. '```' → logprob: -11.503362655639648
    9. '       ' → logprob: -11.628362655639648
    10. '           ' → logprob: -11.753362655639648

Token 2357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002913678181357682
    2. '```' → logprob: -9.12529182434082
    3. '+' → logprob: -9.50029182434082
    4. ' ' → logprob: -10.00029182434082
    5. '                   ' → logprob: -10.37529182434082
    6. '                       ' → logprob: -11.87529182434082
    7. '           ' → logprob: -12.50029182434082
    8. '                           ' → logprob: -12.75029182434082
    9. '                               ' → logprob: -12.75029182434082
    10. 'R' → logprob: -13.37529182434082

Token 2358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.244413766078651e-05
    2. '+' → logprob: -9.875082015991211
    3. '```' → logprob: -10.875082015991211
    4. ' ' → logprob: -12.250082015991211
    5. '   ' → logprob: -13.250082015991211
    6. '2' → logprob: -14.250082015991211
    7. '                   ' → logprob: -14.250082015991211
    8. '       ' → logprob: -14.375082015991211
    9. '           ' → logprob: -14.375082015991211
    10. '(' → logprob: -14.375082015991211

Token 2359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035286827478557825
    2. '(N' → logprob: -6.253528594970703
    3. ',N' → logprob: -6.753528594970703
    4. '(' → logprob: -8.253528594970703
    5. ' ,' → logprob: -9.503528594970703
    6. ',R' → logprob: -10.253528594970703
    7. '(R' → logprob: -10.753528594970703
    8. '```' → logprob: -11.003528594970703
    9. '           ' → logprob: -12.003528594970703
    10. '       ' → logprob: -12.378528594970703

Token 2360: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00010950337309623137
    2. ' N' → logprob: -9.125109672546387
    3. '                   ' → logprob: -15.375109672546387
    4. ')' → logprob: -16.37510871887207
    5. '```' → logprob: -16.50010871887207
    6. '(N' → logprob: -17.87510871887207
    7. '                    ' → logprob: -17.87510871887207
    8. '                       ' → logprob: -18.12510871887207
    9. '                           ' → logprob: -18.12510871887207
    10. '   ' → logprob: -18.12510871887207

Token 2361: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010671088239178061
    2. ',R' → logprob: -7.751067161560059
    3. '                   ' → logprob: -8.751067161560059
    4. ',N' → logprob: -9.001067161560059
    5. ' ,' → logprob: -9.376067161560059
    6. ')' → logprob: -9.376067161560059
    7. '),' → logprob: -10.126067161560059
    8. '           ' → logprob: -10.501067161560059
    9. '       ' → logprob: -10.876067161560059
    10. ',r' → logprob: -11.376067161560059

Token 2362: ' Seg' (ID: 13616)
  Prédit: 'Seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Seg' → logprob: -0.5052528977394104
    2. 'temp' → logprob: -1.7552528381347656
    3. 'abs' → logprob: -2.1302528381347656
    4. ' Seg' → logprob: -3.3802528381347656
    5. 'ans' → logprob: -4.005252838134766
    6. ' temp' → logprob: -4.380252838134766
    7. 'beam' → logprob: -4.630252838134766
    8. '10' → logprob: -4.880252838134766
    9. ' ans' → logprob: -5.130252838134766
    10. 'ide' → logprob: -6.005252838134766

Token 2363: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06994810700416565
    2. '1' → logprob: -2.694948196411133
    3. '   ' → logprob: -13.194948196411133
    4. ' ' → logprob: -13.819948196411133
    5. '```' → logprob: -13.819948196411133
    6. '           ' → logprob: -13.944948196411133
    7. 'Tree' → logprob: -13.944948196411133
    8. '(' → logprob: -14.069948196411133
    9. ')' → logprob: -14.069948196411133
    10. '  ' → logprob: -14.194948196411133

Token 2364: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -0.023379763588309288
    2. 'query' → logprob: -3.7733798027038574
    3. '(query' → logprob: -9.8983793258667
    4. '```' → logprob: -10.6483793258667
    5. '.' → logprob: -11.5233793258667
    6. '(i' → logprob: -12.1483793258667
    7. '(' → logprob: -12.2733793258667
    8. ' query' → logprob: -12.3983793258667
    9. '(m' → logprob: -12.5233793258667
    10. '$query' → logprob: -12.5233793258667

Token 2365: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9038738012313843
    2. '(m' → logprob: -0.9038738012313843
    3. 'i' → logprob: -2.778873920440674
    4. '(R' → logprob: -2.903873920440674
    5. '(i' → logprob: -3.153873920440674
    6. 'R' → logprob: -3.528873920440674
    7. '(L' → logprob: -8.028873443603516
    8. '(' → logprob: -8.153873443603516
    9. 'L' → logprob: -9.903873443603516
    10. 'start' → logprob: -10.028873443603516

Token 2366: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12005923688411713
    2. ' -' → logprob: -3.3700592517852783
    3. '-' → logprob: -4.120059013366699
    4. ' ,' → logprob: -4.245059013366699
    5. '(R' → logprob: -4.370059013366699
    6. ' +' → logprob: -4.745059013366699
    7. ',R' → logprob: -4.745059013366699
    8. '+' → logprob: -4.870059013366699
    9. '(m' → logprob: -6.120059013366699
    10. '       ' → logprob: -6.245059013366699

Token 2367: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001509739668108523
    2. ' ' → logprob: -6.501509666442871
    3. '```' → logprob: -13.376509666442871
    4. '   ' → logprob: -13.751509666442871
    5. '0' → logprob: -14.126509666442871
    6. '           ' → logprob: -14.814009666442871
    7. ')' → logprob: -14.814009666442871
    8. '       ' → logprob: -14.876509666442871
    9. '...' → logprob: -15.001509666442871
    10. ',' → logprob: -15.189009666442871

Token 2368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -11.500021934509277
    3. '```' → logprob: -12.250021934509277
    4. '   ' → logprob: -13.375021934509277
    5. '       ' → logprob: -14.000021934509277
    6. '0' → logprob: -14.187521934509277
    7. '           ' → logprob: -14.625021934509277
    8. '...' → logprob: -14.687521934509277
    9. ',' → logprob: -14.812521934509277
    10. '                   ' → logprob: -15.062521934509277

Token 2369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35245227813720703
    2. '+' → logprob: -1.602452278137207
    3. ' +' → logprob: -2.352452278137207
    4. ' ,' → logprob: -8.477452278137207
    5. '```' → logprob: -8.602452278137207
    6. ',R' → logprob: -10.727452278137207
    7. '   ' → logprob: -11.102452278137207
    8. '       ' → logprob: -11.352452278137207
    9. ')' → logprob: -11.727452278137207
    10. ',N' → logprob: -11.852452278137207

Token 2370: ' L' (ID: 451)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011050650849938393
    2. ' N' → logprob: -4.511050701141357
    3. '0' → logprob: -14.7610502243042
    4. '    ' → logprob: -15.3860502243042
    5. '                   ' → logprob: -15.3860502243042
    6. '   ' → logprob: -15.7610502243042
    7. ')' → logprob: -15.8860502243042
    8. '                    ' → logprob: -16.011051177978516
    9. '                               ' → logprob: -16.261051177978516
    10. ' ' → logprob: -16.261051177978516

Token 2371: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6938022971153259
    2. ' +' → logprob: -0.6938022971153259
    3. '))' → logprob: -7.443802356719971
    4. '))
' → logprob: -10.318801879882812
    5. '```' → logprob: -10.818801879882812
    6. ')' → logprob: -12.193801879882812
    7. ',' → logprob: -12.318801879882812
    8. '1' → logprob: -12.443801879882812
    9. '),' → logprob: -14.443801879882812
    10. ')
' → logprob: -14.818801879882812

Token 2372: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.810415506362915
    2. '```' → logprob: -0.810415506362915
    3. '+' → logprob: -2.810415506362915
    4. '``' → logprob: -3.685415506362915
    5. ' +' → logprob: -5.060415267944336
    6. '
' → logprob: -5.685415267944336
    7. '               ' → logprob: -5.685415267944336
    8. '           ' → logprob: -6.185415267944336
    9. '+
' → logprob: -6.185415267944336
    10. '                       ' → logprob: -6.435415267944336

Token 2373: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' (adapté à ' temp') → logprob: -0.43122607469558716
    2. '```' → logprob: -1.3062260150909424
    3. '                   ' → logprob: -2.9312260150909424
    4. '``' → logprob: -4.1812262535095215
    5. '
' → logprob: -5.4312262535095215
    6. ' temp' → logprob: -6.5562262535095215
    7. ')
' → logprob: -6.9312262535095215
    8. '                       ' → logprob: -7.4312262535095215
    9. '               ' → logprob: -7.8062262535095215
    10. ')' → logprob: -8.056225776672363

Token 2374: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20145495235919952
    2. '+=' → logprob: -1.701454997062683
    3. '=' → logprob: -11.326455116271973
    4. '   ' → logprob: -11.701455116271973
    5. ' =' → logprob: -12.701455116271973
    6. '+' → logprob: -12.826455116271973
    7. '           ' → logprob: -12.826455116271973
    8. '                   ' → logprob: -13.201455116271973
    9. '          ' → logprob: -13.326455116271973
    10. '       ' → logprob: -13.326455116271973

Token 2375: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.38688352704048157
    2. ' beam' → logprob: -1.1368834972381592
    3. ' ' → logprob: -12.261883735656738
    4. 'be' → logprob: -12.511883735656738
    5. '```' → logprob: -13.761883735656738
    6. '   ' → logprob: -14.011883735656738
    7. '    ' → logprob: -15.261883735656738
    8. ' ' → logprob: -15.261883735656738
    9. 'b' → logprob: -15.386883735656738
    10. '           ' → logprob: -15.761883735656738

Token 2376: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.875011444091797
    3. 'i' → logprob: -12.875011444091797
    4. '```' → logprob: -13.500011444091797
    5. '(i' → logprob: -15.375011444091797
    6. ' [' → logprob: -16.000011444091797
    7. '[
' → logprob: -16.125011444091797
    8. '   ' → logprob: -16.250011444091797
    9. '{i' → logprob: -17.250011444091797
    10. '`' → logprob: -18.375011444091797

Token 2377: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03068743459880352
    2. '][' → logprob: -4.15568733215332
    3. '[' → logprob: -4.28068733215332
    4. '```' → logprob: -8.28068733215332
    5. ')[' → logprob: -8.53068733215332
    6. '>[' → logprob: -9.28068733215332
    7. '}[' → logprob: -10.40568733215332
    8. '[
' → logprob: -10.90568733215332
    9. '   ' → logprob: -10.90568733215332
    10. ''[' → logprob: -11.03068733215332

Token 2378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0068111727014184
    2. '1' → logprob: -5.006811141967773
    3. '[' → logprob: -9.631811141967773
    4. ' ' → logprob: -11.381811141967773
    5. '```' → logprob: -11.506811141967773
    6. '-' → logprob: -12.756811141967773
    7. '
' → logprob: -13.256811141967773
    8. '   ' → logprob: -13.381811141967773
    9. '`' → logprob: -14.631811141967773
    10. '#' → logprob: -14.881811141967773

Token 2379: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0037113616708666086
    2. '-' → logprob: -5.628711223602295
    3. '```' → logprob: -9.753711700439453
    4. '<|end|>' → logprob: -11.128711700439453
    5. ')' → logprob: -11.378711700439453
    6. '[' → logprob: -11.503711700439453
    7. ' ' → logprob: -12.128711700439453
    8. ']' → logprob: -13.378711700439453
    9. ',' → logprob: -13.503711700439453
    10. '`' → logprob: -13.753711700439453

Token 2380: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038057442754507065
    2. '-' → logprob: -3.288057327270508
    3. '```' → logprob: -11.538057327270508
    4. ' ' → logprob: -13.038057327270508
    5. ' ' → logprob: -13.913057327270508
    6. '<|end|>' → logprob: -14.413057327270508
    7. '          ' → logprob: -14.788057327270508
    8. ',' → logprob: -14.788057327270508
    9. '        ' → logprob: -15.163057327270508
    10. '           ' → logprob: -15.288057327270508

Token 2381: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0011939177056774497
    2. ' beam' → logprob: -6.751194000244141
    3. '```' → logprob: -11.12619400024414
    4. 'be' → logprob: -13.12619400024414
    5. '   ' → logprob: -13.75119400024414
    6. 'i' → logprob: -13.87619400024414
    7. 'bee' → logprob: -14.12619400024414
    8. '           ' → logprob: -14.37619400024414
    9. '       ' → logprob: -14.75119400024414
    10. '``' → logprob: -14.75119400024414

Token 2382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008902788162231445
    2. '[' → logprob: -4.758902549743652
    3. 'i' → logprob: -8.258902549743652
    4. '```' → logprob: -10.758902549743652
    5. '[
' → logprob: -12.883902549743652
    6. 'beam' → logprob: -13.008902549743652
    7. '(i' → logprob: -14.633902549743652
    8. '{i' → logprob: -15.133902549743652
    9. '``' → logprob: -15.133902549743652
    10. ' [' → logprob: -15.133902549743652

Token 2383: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.205624520778656
    2. '[i' → logprob: -1.7056245803833008
    3. '-' → logprob: -6.705624580383301
    4. '1' → logprob: -6.830624580383301
    5. 'i' → logprob: -7.205624580383301
    6. '```' → logprob: -7.580624580383301
    7. '][' → logprob: -7.830624580383301
    8. '[
' → logprob: -8.8306245803833
    9. ']' → logprob: -10.7056245803833
    10. '(i' → logprob: -10.7056245803833

Token 2384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. 'i' → logprob: -11.37501335144043
    3. ' ' → logprob: -14.25001335144043
    4. '```' → logprob: -14.25001335144043
    5. '
' → logprob: -15.12501335144043
    6. '   ' → logprob: -15.87501335144043
    7. '[i' → logprob: -16.00001335144043
    8. '１' → logprob: -17.75001335144043
    9. '‌' → logprob: -18.25001335144043
    10. ' i' → logprob: -18.25001335144043

Token 2385: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11267054080963135
    2. '```' → logprob: -3.362670421600342
    3. '               ' → logprob: -3.612670421600342
    4. '           ' → logprob: -4.112670421600342
    5. '                       ' → logprob: -4.362670421600342
    6. ')
' → logprob: -5.112670421600342
    7. ']
' → logprob: -5.237670421600342
    8. '       ' → logprob: -6.362670421600342
    9. '                           ' → logprob: -7.237670421600342
    10. ')' → logprob: -7.487670421600342

Token 2386: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17620080709457397
    2. '```' → logprob: -1.9262008666992188
    3. '                       ' → logprob: -5.426200866699219
    4. '``' → logprob: -5.676200866699219
    5. '           ' → logprob: -5.801200866699219
    6. '               ' → logprob: -6.176200866699219
    7. 'if' → logprob: -6.926200866699219
    8. '
' → logprob: -7.176200866699219
    9. ' if' → logprob: -7.426200866699219
    10. '                           ' → logprob: -8.176200866699219

Token 2387: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.020192522555589676
    2. ' if' → logprob: -4.020192623138428
    3. '```' → logprob: -6.895192623138428
    4. '                   ' → logprob: -7.270192623138428
    5. '``' → logprob: -8.77019214630127
    6. '                       ' → logprob: -9.27019214630127
    7. '               ' → logprob: -10.39519214630127
    8. '                           ' → logprob: -11.27019214630127
    9. '           ' → logprob: -11.39519214630127
    10. '
' → logprob: -11.89519214630127

Token 2388: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.6931478977203369
    2. 'temp' → logprob: -0.6931478977203369
    3. '	temp' → logprob: -15.818147659301758
    4. ' temps' → logprob: -16.068147659301758
    5. '(temp' → logprob: -16.068147659301758
    6. 'temps' → logprob: -16.443147659301758
    7. '```' → logprob: -17.068147659301758
    8. '
' → logprob: -17.318147659301758
    9. '_temp' → logprob: -17.568147659301758
    10. 'tem' → logprob: -17.568147659301758

Token 2389: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16050590574741364
    2. '<=' → logprob: -1.9105058908462524
    3. '                  ' → logprob: -9.535506248474121
    4. '                   ' → logprob: -10.035506248474121
    5. '```' → logprob: -10.285506248474121
    6. '                      ' → logprob: -10.410506248474121
    7. ' >' → logprob: -10.785506248474121
    8. '>' → logprob: -10.910506248474121
    9. '              ' → logprob: -11.160506248474121
    10. '          ' → logprob: -11.410506248474121

Token 2390: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22544755041599274
    2. ' ' → logprob: -1.6004475355148315
    3. '```' → logprob: -11.475447654724121
    4. '<=' → logprob: -11.975447654724121
    5. '   ' → logprob: -12.100447654724121
    6. '
' → logprob: -12.600447654724121
    7. '  ' → logprob: -13.350447654724121
    8. '1' → logprob: -13.350447654724121
    9. '``' → logprob: -13.350447654724121
    10. '=' → logprob: -13.600447654724121

Token 2391: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008110555354505777
    2. ' ' → logprob: -7.1258111000061035
    3. '```' → logprob: -13.000810623168945
    4. '
' → logprob: -13.375810623168945
    5. '   ' → logprob: -13.625810623168945
    6. '``' → logprob: -14.875810623168945
    7. '  ' → logprob: -15.000810623168945
    8. '1' → logprob: -15.625810623168945
    9. '=' → logprob: -16.125810623168945
    10. '<=' → logprob: -16.375810623168945

Token 2392: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06611543893814087
    2. ':
' → logprob: -3.191115379333496
    3. ':' → logprob: -4.191115379333496
    4. '                   ' → logprob: -5.441115379333496
    5. '```' → logprob: -5.816115379333496
    6. '                           ' → logprob: -8.691115379333496
    7. '``' → logprob: -9.816115379333496
    8. '):
' → logprob: -9.941115379333496
    9. '               ' → logprob: -10.316115379333496
    10. '                      ' → logprob: -10.566115379333496

Token 2393: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0017206385964527726
    2. '                           ' → logprob: -7.251720428466797
    3. '                   ' → logprob: -7.501720428466797
    4. '```' → logprob: -8.376720428466797
    5. '                               ' → logprob: -8.751720428466797
    6. '               ' → logprob: -10.876720428466797
    7. '``' → logprob: -11.251720428466797
    8. '                      ' → logprob: -11.626720428466797
    9. '                        ' → logprob: -11.751720428466797
    10. '           ' → logprob: -12.001720428466797

Token 2394: ' temp' (ID: 5484)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -1.0563310384750366
    2. '                       ' → logprob: -1.4313310384750366
    3. ' temp' → logprob: -1.4313310384750366
    4. 'temp' (adapté à ' temp') → logprob: -1.9313310384750366
    5. '                               ' → logprob: -4.056331157684326
    6. '```' → logprob: -4.681331157684326
    7. '
' → logprob: -7.181331157684326
    8. '                   ' → logprob: -7.431331157684326
    9. '``' → logprob: -7.806331157684326
    10. '                                   ' → logprob: -8.681330680847168

Token 2395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12704654037952423
    2. '=' → logprob: -2.127046585083008
    3. ' +=' → logprob: -9.752046585083008
    4. '```' → logprob: -10.127046585083008
    5. '+=' → logprob: -11.252046585083008
    6. '                           ' → logprob: -13.002046585083008
    7. ' ' → logprob: -13.627046585083008
    8. ' ' → logprob: -14.002046585083008
    9. '                        ' → logprob: -14.377046585083008
    10. '                       ' → logprob: -14.877046585083008

Token 2396: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5759410262107849
    2. ' abs' → logprob: -0.8259410262107849
    3. '(abs' → logprob: -13.57594108581543
    4. '.abs' → logprob: -15.70094108581543
    5. '_abs' → logprob: -16.45094108581543
    6. '```' → logprob: -17.32594108581543
    7. 'temp' → logprob: -17.57594108581543
    8. '0' → logprob: -18.20094108581543
    9. ' temp' → logprob: -18.57594108581543
    10. '
' → logprob: -19.45094108581543

Token 2397: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.1270420253276825
    2. 'temp' → logprob: -2.127042055130005
    3. '(
' → logprob: -9.877041816711426
    4. '(' → logprob: -10.627041816711426
    5. '[temp' → logprob: -11.752041816711426
    6. '_temp' → logprob: -11.877041816711426
    7. 'temps' → logprob: -12.002041816711426
    8. '$temp' → logprob: -12.252041816711426
    9. ' temp' → logprob: -12.627041816711426
    10. ',temp' → logprob: -12.752041816711426

Token 2398: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3556593358516693
    2. '                       ' → logprob: -1.2306593656539917
    3. ')' → logprob: -5.980659484863281
    4. '                           ' → logprob: -5.980659484863281
    5. '                   ' → logprob: -6.855659484863281
    6. '               ' → logprob: -8.355659484863281
    7. '```' → logprob: -8.605659484863281
    8. '           ' → logprob: -8.730659484863281
    9. '                        
' → logprob: -9.230659484863281
    10. '``' → logprob: -9.730659484863281

Token 2399: '                       ' (ID: 968)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6744176149368286
    2. '                       ' → logprob: -0.7994176149368286
    3. '```' → logprob: -3.424417495727539
    4. '                               ' → logprob: -5.549417495727539
    5. '``' → logprob: -6.674417495727539
    6. '                        ' → logprob: -7.549417495727539
    7. '                   ' → logprob: -7.799417495727539
    8. '                            ' → logprob: -8.049417495727539
    9. '                         ' → logprob: -8.174417495727539
    10. '               ' → logprob: -8.299417495727539

Token 2400: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.12694038450717926
    2. ' B' → logprob: -2.1269404888153076
    3. ' ans' → logprob: -11.501940727233887
    4. '```' → logprob: -13.876940727233887
    5. 'ans' → logprob: -14.376940727233887
    6. '                   ' → logprob: -15.376940727233887
    7. '                           ' → logprob: -15.751940727233887
    8. '                       ' → logprob: -15.876940727233887
    9. '_B' → logprob: -16.00193977355957
    10. '           ' → logprob: -16.50193977355957

Token 2401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4886884093284607
    2. '=' → logprob: -0.9886884093284607
    3. '```' → logprob: -4.7386884689331055
    4. '                       ' → logprob: -6.3636884689331055
    5. '[' → logprob: -7.1136884689331055
    6. ' *' → logprob: -7.2386884689331055
    7. ' *=' → logprob: -7.6136884689331055
    8. '*' → logprob: -7.7386884689331055
    9. '*=' → logprob: -7.8636884689331055
    10. '                        ' → logprob: -7.8636884689331055

Token 2402: ' beam' (ID: 36650)
  Prédit: ' beam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beam' → logprob: -0.10020904988050461
    2. 'beam' → logprob: -2.3502089977264404
    3. '```' → logprob: -13.85020923614502
    4. ' ' → logprob: -14.85020923614502
    5. ' beams' → logprob: -15.35020923614502
    6. 'be' → logprob: -15.47520923614502
    7. ' ans' → logprob: -15.47520923614502
    8. '`' → logprob: -15.72520923614502
    9. 'Beam' → logprob: -16.475208282470703
    10. 'ans' → logprob: -17.225208282470703

Token 2403: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6047699318733066e-05
    2. 'i' → logprob: -11.500016212463379
    3. '[' → logprob: -12.250016212463379
    4. '```' → logprob: -14.625016212463379
    5. '[
' → logprob: -15.000016212463379
    6. ' [' → logprob: -16.000015258789062
    7. '
' → logprob: -16.875015258789062
    8. '(i' → logprob: -16.875015258789062
    9. '   ' → logprob: -16.875015258789062
    10. '`' → logprob: -17.125015258789062

Token 2404: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007267255801707506
    2. '][' → logprob: -5.132267475128174
    3. '[' → logprob: -6.632267475128174
    4. ')[' → logprob: -11.507266998291016
    5. '```' → logprob: -12.632266998291016
    6. '[
' → logprob: -14.132266998291016
    7. 'i' → logprob: -14.132266998291016
    8. ''[' → logprob: -14.257266998291016
    9. ']' → logprob: -14.382266998291016
    10. ' [' → logprob: -14.382266998291016

Token 2405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025131162256002426
    2. 'i' → logprob: -6.3775129318237305
    3. '[i' → logprob: -8.00251293182373
    4. '[' → logprob: -8.25251293182373
    5. '```' → logprob: -8.75251293182373
    6. '
' → logprob: -10.00251293182373
    7. '(i' → logprob: -13.25251293182373
    8. '   ' → logprob: -13.37751293182373
    9. '`' → logprob: -13.50251293182373
    10. '0' → logprob: -13.75251293182373

Token 2406: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010705619351938367
    2. '                           ' → logprob: -7.876070499420166
    3. '```' → logprob: -8.251070976257324
    4. '                        ' → logprob: -9.001070976257324
    5. '
' → logprob: -9.251070976257324
    6. '                   ' → logprob: -9.876070976257324
    7. '                        
' → logprob: -10.376070976257324
    8. '                      ' → logprob: -10.626070976257324
    9. '               ' → logprob: -11.001070976257324
    10. '[' → logprob: -11.251070976257324

Token 2407: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10162678360939026
    2. '                           ' → logprob: -2.4766268730163574
    3. '```' → logprob: -4.726626873016357
    4. '                               ' → logprob: -6.851626873016357
    5. '                        ' → logprob: -7.101626873016357
    6. '[' → logprob: -7.851626873016357
    7. 'if' → logprob: -7.976626873016357
    8. ' if' → logprob: -8.4766263961792
    9. '                         ' → logprob: -8.7266263961792
    10. '                   ' → logprob: -8.9766263961792

Token 2408: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18619196116924286
    2. ' if' → logprob: -1.9361919164657593
    3. '                       ' → logprob: -3.686192035675049
    4. '                           ' → logprob: -7.936192035675049
    5. '```' → logprob: -8.56119155883789
    6. '                        ' → logprob: -12.06119155883789
    7. '                               ' → logprob: -12.31119155883789
    8. 'for' → logprob: -13.18619155883789
    9. '``' → logprob: -13.31119155883789
    10. '                         ' → logprob: -13.56119155883789

Token 2409: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.038336146622896194
    2. 'B' → logprob: -3.2883360385894775
    3. ' ans' → logprob: -8.163335800170898
    4. 'ans' → logprob: -11.663335800170898
    5. '(ans' → logprob: -15.038335800170898
    6. ' ' → logprob: -15.288335800170898
    7. ' ' → logprob: -15.538335800170898
    8. '(B' → logprob: -15.663335800170898
    9. '```' → logprob: -16.1633358001709
    10. '	B' → logprob: -16.5383358001709

Token 2410: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002191779436543584
    2. '*' → logprob: -6.127191543579102
    3. '```' → logprob: -12.627191543579102
    4. '[' → logprob: -13.252191543579102
    5. ' ' → logprob: -14.377191543579102
    6. '*[' → logprob: -14.752191543579102
    7. ' ' → logprob: -15.627191543579102
    8. ' [' → logprob: -15.877191543579102
    9. '``' → logprob: -16.5021915435791
    10. '           ' → logprob: -16.7521915435791

Token 2411: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.048587825149297714
    2. ' ans' → logprob: -3.0485877990722656
    3. '(ans' → logprob: -15.298587799072266
    4. '	ans' → logprob: -16.048587799072266
    5. '
' → logprob: -16.298587799072266
    6. '_ans' → logprob: -17.673587799072266
    7. ' ' → logprob: -18.173587799072266
    8. '   ' → logprob: -19.423587799072266
    9. ' ' → logprob: -20.048587799072266
    10. '  ' → logprob: -20.048587799072266

Token 2412: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1994775377388578e-05
    2. '```' → logprob: -11.625012397766113
    3. '[
' → logprob: -13.250012397766113
    4. ' [' → logprob: -14.750012397766113
    5. '][' → logprob: -15.500012397766113
    6. '           ' → logprob: -15.875012397766113
    7. '``' → logprob: -16.500011444091797
    8. '       ' → logprob: -16.875011444091797
    9. '`' → logprob: -17.000011444091797
    10. ']' → logprob: -17.250011444091797

Token 2413: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.62508487701416
    3. '[' → logprob: -11.87508487701416
    4. '   ' → logprob: -12.37508487701416
    5. '
' → logprob: -12.62508487701416
    6. '1' → logprob: -13.50008487701416
    7. '  ' → logprob: -14.12508487701416
    8. '-' → logprob: -14.43758487701416
    9. '```' → logprob: -14.50008487701416
    10. '2' → logprob: -15.12508487701416

Token 2414: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04300855100154877
    2. '<' → logprob: -3.16800856590271
    3. '```' → logprob: -12.668008804321289
    4. '                           ' → logprob: -13.418008804321289
    5. '[' → logprob: -13.543008804321289
    6. '   ' → logprob: -15.168008804321289
    7. '<class' → logprob: -15.418008804321289
    8. ' ' → logprob: -15.418008804321289
    9. '<int' → logprob: -15.793008804321289
    10. '                       ' → logprob: -15.793008804321289

Token 2415: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6327726244926453
    2. '<' → logprob: -0.7577726244926453
    3. '```' → logprob: -9.257772445678711
    4. '[' → logprob: -9.882772445678711
    5. '<=' → logprob: -12.382772445678711
    6. '<int' → logprob: -13.007772445678711
    7. '<n' → logprob: -13.257772445678711
    8. '<size' → logprob: -13.382772445678711
    9. ' <=' → logprob: -13.382772445678711
    10. '<len' → logprob: -13.507772445678711

Token 2416: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.007616798859089613
    2. 'ans' → logprob: -4.882616996765137
    3. '(ans' → logprob: -11.632616996765137
    4. '	ans' → logprob: -14.007616996765137
    5. 'Ans' → logprob: -14.757616996765137
    6. '_ans' → logprob: -14.882616996765137
    7. '1' → logprob: -16.25761604309082
    8. '0' → logprob: -17.75761604309082
    9. ' Ans' → logprob: -18.00761604309082
    10. ' ' → logprob: -18.13261604309082

Token 2417: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015154262073338032
    2. 'ans' → logprob: -4.2651543617248535
    3. ' ans' → logprob: -7.2651543617248535
    4. ' [' → logprob: -9.015153884887695
    5. '```' → logprob: -10.140153884887695
    6. '(ans' → logprob: -10.640153884887695
    7. '[
' → logprob: -10.890153884887695
    8. '           ' → logprob: -11.015153884887695
    9. '[i' → logprob: -11.265153884887695
    10. '   ' → logprob: -11.390153884887695

Token 2418: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -13.125003814697266
    3. '   ' → logprob: -14.500003814697266
    4. ' ' → logprob: -14.625003814697266
    5. '
' → logprob: -14.750003814697266
    6. '[i' → logprob: -14.750003814697266
    7. '-' → logprob: -17.375003814697266
    8. '```' → logprob: -17.625003814697266
    9. 'i' → logprob: -18.125003814697266
    10. '
' → logprob: -18.250003814697266

Token 2419: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012556859292089939
    2. '*' → logprob: -4.387557029724121
    3. '                       ' → logprob: -10.262557029724121
    4. '```' → logprob: -12.137557029724121
    5. '                           ' → logprob: -12.887557029724121
    6. '                        ' → logprob: -14.012557029724121
    7. '                   ' → logprob: -14.387557029724121
    8. ' ' → logprob: -14.762557029724121
    9. '*b' → logprob: -14.762557029724121
    10. '               ' → logprob: -15.137557029724121

Token 2420: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023248739540576935
    2. '*' → logprob: -3.7732486724853516
    3. '```' → logprob: -12.898248672485352
    4. ' ' → logprob: -15.898248672485352
    5. '*t' → logprob: -16.02324867248535
    6. '                       ' → logprob: -16.02324867248535
    7. '*object' → logprob: -16.89824867248535
    8. '*b' → logprob: -17.02324867248535
    9. ' ' → logprob: -17.14824867248535
    10. '#' → logprob: -17.27324867248535

Token 2421: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0007616263465024531
    2. ' temp' → logprob: -7.25076150894165
    3. 'B' → logprob: -9.875761985778809
    4. 'tmp' → logprob: -15.750761985778809
    5. ' B' → logprob: -16.375761032104492
    6. 't' → logprob: -17.375761032104492
    7. 'tem' → logprob: -18.125761032104492
    8. '	temp' → logprob: -18.375761032104492
    9. '$temp' → logprob: -19.125761032104492
    10. '       ' → logprob: -19.250761032104492

Token 2422: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.45504987239837646
    2. ':
' → logprob: -1.7050498723983765
    3. '                       ' → logprob: -2.455049991607666
    4. ':' → logprob: -2.455049991607666
    5. '                               ' → logprob: -5.705049991607666
    6. '```' → logprob: -5.955049991607666
    7. '[' → logprob: -6.080049991607666
    8. '                   ' → logprob: -7.205049991607666
    9. '                          ' → logprob: -7.330049991607666
    10. '=' → logprob: -7.830049991607666

Token 2423: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4703949987888336
    2. '                               ' → logprob: -1.0953949689865112
    3. '                       ' → logprob: -3.595395088195801
    4. 'ans' → logprob: -4.845395088195801
    5. ' ans' → logprob: -5.720395088195801
    6. '```' → logprob: -6.470395088195801
    7. '                                   ' → logprob: -7.970395088195801
    8. '                            ' → logprob: -9.4703950881958
    9. '                                       ' → logprob: -9.9703950881958
    10. '                   ' → logprob: -10.3453950881958

Token 2424: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.038047123700380325
    2. ' ans' → logprob: -3.2880470752716064
    3. '                           ' → logprob: -12.788046836853027
    4. '	ans' → logprob: -13.288046836853027
    5. '                               ' → logprob: -14.913046836853027
    6. '_ans' → logprob: -15.163046836853027
    7. '(ans' → logprob: -15.288046836853027
    8. 'answer' → logprob: -16.413047790527344
    9. '   ' → logprob: -16.538047790527344
    10. 'Ans' → logprob: -16.913047790527344

Token 2425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933019757270813
    2. ' =' → logprob: -0.6933019757270813
    3. '=
' → logprob: -9.693302154541016
    4. '[' → logprob: -9.818302154541016
    5. '```' → logprob: -11.568302154541016
    6. '=[' → logprob: -11.693302154541016
    7. ' =
' → logprob: -12.568302154541016
    8. '[
' → logprob: -12.693302154541016
    9. '=[
' → logprob: -12.693302154541016
    10. ')' → logprob: -13.318302154541016

Token 2426: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8559357523918152
    2. '[temp' → logprob: -1.10593581199646
    3. '[t' → logprob: -2.10593581199646
    4. '[' → logprob: -2.10593581199646
    5. '[B' → logprob: -7.480935573577881
    6. '[target' → logprob: -9.980936050415039
    7. '[token' → logprob: -10.480936050415039
    8. '[test' → logprob: -10.480936050415039
    9. '[tmp' → logprob: -11.355936050415039
    10. '[i' → logprob: -11.355936050415039

Token 2427: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.001976095838472247
    2. 'B' → logprob: -6.626976013183594
    3. ' temp' → logprob: -8.626976013183594
    4. '[temp' → logprob: -8.626976013183594
    5. 'ans' → logprob: -9.251976013183594
    6. 't' → logprob: -9.751976013183594
    7. '[' → logprob: -10.001976013183594
    8. 'tmp' → logprob: -10.876976013183594
    9. '0' → logprob: -11.001976013183594
    10. 'beam' → logprob: -11.126976013183594

Token 2428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03012983687222004
    2. '[' → logprob: -3.530129909515381
    3. ' ,' → logprob: -8.655129432678223
    4. '```' → logprob: -9.530129432678223
    5. '           ' → logprob: -10.155129432678223
    6. ',
' → logprob: -10.655129432678223
    7. '               ' → logprob: -11.280129432678223
    8. '       ' → logprob: -11.280129432678223
    9. ']' → logprob: -12.030129432678223
    10. '                   ' → logprob: -12.030129432678223

Token 2429: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0015023599844425917
    2. ' B' → logprob: -6.501502513885498
    3. '_B' → logprob: -18.501502990722656
    4. 'b' → logprob: -18.626502990722656
    5. '	B' → logprob: -18.626502990722656
    6. '[B' → logprob: -18.751502990722656
    7. '   ' → logprob: -18.751502990722656
    8. '       ' → logprob: -19.751502990722656
    9. 'ans' → logprob: -19.876502990722656
    10. '               ' → logprob: -20.126502990722656

Token 2430: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41848844289779663
    2. '       ' → logprob: -1.9184885025024414
    3. ']' → logprob: -2.0434885025024414
    4. ')
' → logprob: -3.9184885025024414
    5. '           ' → logprob: -4.418488502502441
    6. '```' → logprob: -4.793488502502441
    7. '               ' → logprob: -5.168488502502441
    8. ']
' → logprob: -5.418488502502441
    9. '                       ' → logprob: -5.543488502502441
    10. '                           ' → logprob: -5.918488502502441

Token 2431: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013802330940961838
    2. '   ' → logprob: -6.626380443572998
    3. '```' → logprob: -10.25137996673584
    4. ' print' → logprob: -11.50137996673584
    5. 'if' → logprob: -12.00137996673584
    6. ')' → logprob: -14.25137996673584
    7. 'for' → logprob: -14.25137996673584
    8. '       ' → logprob: -14.87637996673584
    9. '``' → logprob: -15.00137996673584
    10. 'return' → logprob: -15.25137996673584

Token 2432: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018244998529553413
    2. '   ' → logprob: -4.018245220184326
    3. '```' → logprob: -9.518244743347168
    4. ' print' → logprob: -11.143244743347168
    5. 'if' → logprob: -12.268244743347168
    6. '       ' → logprob: -14.018244743347168
    7. 'return' → logprob: -14.143244743347168
    8. '``' → logprob: -14.893244743347168
    9. 'for' → logprob: -15.518244743347168
    10. '	print' → logprob: -15.893244743347168

Token 2433: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12702658772468567
    2. ':' → logprob: -2.1270265579223633
    3. '   ' → logprob: -9.877026557922363
    4. '       ' → logprob: -10.127026557922363
    5. ':

' → logprob: -12.502026557922363
    6. ':
' → logprob: -13.502026557922363
    7. ' :
' → logprob: -13.877026557922363
    8. ' :' → logprob: -15.377026557922363
    9. '):
' → logprob: -16.00202751159668
    10. '[' → logprob: -16.12702751159668

Token 2434: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4002654552459717
    2. 'print' → logprob: -1.1502654552459717
    3. ' print' → logprob: -4.400265693664551
    4. '```' → logprob: -6.900265693664551
    5. '``' → logprob: -11.27526569366455
    6. '	print' → logprob: -12.77526569366455
    7. 'for' → logprob: -12.90026569366455
    8. '       ' → logprob: -13.02526569366455
    9. ' for' → logprob: -13.40026569366455
    10. '
' → logprob: -14.27526569366455

Token 2435: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019310165662318468
    2. 'for' (adapté à ' for') → logprob: -7.126931190490723
    3. '   ' → logprob: -7.501931190490723
    4. '```' → logprob: -8.001931190490723
    5. ' print' → logprob: -8.751931190490723
    6. 'ans' → logprob: -9.626931190490723
    7. ' for' → logprob: -12.001931190490723
    8. 'pass' → logprob: -12.126931190490723
    9. '``' → logprob: -13.376931190490723
    10. 'pr' → logprob: -14.251931190490723

Token 2436: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029857739806175232
    2. ' i' → logprob: -3.529857635498047
    3. '_i' → logprob: -10.654857635498047
    4. '_' → logprob: -11.029857635498047
    5. 'temp' → logprob: -11.404857635498047
    6. '(i' → logprob: -11.404857635498047
    7. 't' → logprob: -11.529857635498047
    8. '   ' → logprob: -12.279857635498047
    9. '0' → logprob: -12.404857635498047
    10. '	i' → logprob: -12.654857635498047

Token 2437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16026993095874786
    2. 'in' → logprob: -1.9102699756622314
    3. '   ' → logprob: -10.535269737243652
    4. 'i' → logprob: -12.410269737243652
    5. ' ' → logprob: -12.535269737243652
    6. ' i' → logprob: -12.910269737243652
    7. '    ' → logprob: -13.160269737243652
    8. '  ' → logprob: -13.410269737243652
    9. ',' → logprob: -13.660269737243652
    10. '	in' → logprob: -14.035269737243652

Token 2438: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009759752079844475
    2. ' range' → logprob: -4.634759902954102
    3. '(range' → logprob: -13.509759902954102
    4. '[' → logprob: -13.759759902954102
    5. '0' → logprob: -14.759759902954102
    6. '	range' → logprob: -15.259759902954102
    7. '   ' → logprob: -15.759759902954102
    8. 'Range' → logprob: -16.0097599029541
    9. '(' → logprob: -16.5097599029541
    10. 'r' → logprob: -16.6347599029541

Token 2439: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012777675874531269
    2. '(N' → logprob: -4.512777805328369
    3. 'range' → logprob: -6.387777805328369
    4. '(' → logprob: -10.387777328491211
    5. ' range' → logprob: -12.762777328491211
    6. 'in' → logprob: -12.887777328491211
    7. 'n' → logprob: -13.012777328491211
    8. '1' → logprob: -13.012777328491211
    9. '0' → logprob: -13.762777328491211
    10. '   ' → logprob: -13.887777328491211

Token 2440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10392007976770401
    2. '):' → logprob: -2.6039199829101562
    3. ':' → logprob: -4.103919982910156
    4. ':
' → logprob: -5.103919982910156
    5. '       ' → logprob: -7.228919982910156
    6. '   ' → logprob: -7.353919982910156
    7. '():
' → logprob: -7.478919982910156
    8. ')' → logprob: -9.728919982910156
    9. '-' → logprob: -10.853919982910156
    10. ']:
' → logprob: -10.978919982910156

Token 2441: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10524952411651611
    2. '           ' → logprob: -2.7302494049072266
    3. 'if' → logprob: -4.355249404907227
    4. ' if' → logprob: -4.730249404907227
    5. '   ' → logprob: -4.980249404907227
    6. '```' → logprob: -5.105249404907227
    7. '	   ' → logprob: -10.355249404907227
    8. '	if' → logprob: -11.230249404907227
    9. 'print' → logprob: -11.480249404907227
    10. '``' → logprob: -11.605249404907227

Token 2442: ' test' (ID: 1746)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009104699827730656
    2. '   ' → logprob: -6.0091047286987305
    3. '           ' → logprob: -6.3841047286987305
    4. 'temp' → logprob: -6.3841047286987305
    5. ' if' → logprob: -6.6341047286987305
    6. '       ' → logprob: -6.8841047286987305
    7. 'B' → logprob: -7.6341047286987305
    8. 'print' → logprob: -8.13410472869873
    9. 'ans' → logprob: -9.50910472869873
    10. '               ' → logprob: -11.50910472869873

Token 2443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2731173634529114
    2. '=' → logprob: -2.1481173038482666
    3. '           ' → logprob: -2.1481173038482666
    4. '       ' → logprob: -6.273117542266846
    5. '               ' → logprob: -6.773117542266846
    6. '   ' → logprob: -6.773117542266846
    7. 'if' → logprob: -8.023117065429688
    8. '          ' → logprob: -8.648117065429688
    9. '        ' → logprob: -9.148117065429688
    10. 's' → logprob: -9.523117065429688

Token 2444: ' data' (ID: 1238)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.1742393523454666
    2. 'abs' → logprob: -2.29923939704895
    3. ' beam' → logprob: -3.54923939704895
    4. 'data' → logprob: -4.299239158630371
    5. ' abs' → logprob: -5.049239158630371
    6. '0' → logprob: -5.174239158630371
    7. ' data' → logprob: -6.549239158630371
    8. 'min' → logprob: -6.674239158630371
    9. '(' → logprob: -7.549239158630371
    10. 'cum' → logprob: -7.674239158630371

Token 2445: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004961982485838234
    2. '[' → logprob: -7.6254963874816895
    3. 'i' → logprob: -12.125495910644531
    4. '   ' → logprob: -14.125495910644531
    5. '][' → logprob: -14.625495910644531
    6. '```' → logprob: -14.750495910644531
    7. '=' → logprob: -15.375495910644531
    8. '0' → logprob: -15.875495910644531
    9. '(i' → logprob: -16.00049591064453
    10. '=i' → logprob: -16.25049591064453

Token 2446: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11685643345117569
    2. ']
' → logprob: -2.241856336593628
    3. ']+' → logprob: -6.366856575012207
    4. ']
' → logprob: -7.116856575012207
    5. '           ' → logprob: -7.616856575012207
    6. '       ' → logprob: -8.241856575012207
    7. '+' → logprob: -8.491856575012207
    8. ']<=' → logprob: -8.491856575012207
    9. ' ]' → logprob: -9.491856575012207
    10. ' +' → logprob: -9.491856575012207

Token 2447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06928940862417221
    2. '```' → logprob: -3.694289445877075
    3. ' if' → logprob: -4.319289207458496
    4. '<=' → logprob: -4.444289207458496
    5. '<|end|>' → logprob: -5.694289207458496
    6. '==' → logprob: -5.944289207458496
    7. 'if' → logprob: -5.944289207458496
    8. '=' → logprob: -6.069289207458496
    9. '               ' → logprob: -6.194289207458496
    10. ' <=' → logprob: -6.944289207458496

Token 2448: ' B' (ID: 418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3286236524581909
    2. '           ' → logprob: -1.453623652458191
    3. ' if' → logprob: -3.0786237716674805
    4. 'break' → logprob: -8.70362377166748
    5. '```' → logprob: -9.32862377166748
    6. 'temp' → logprob: -10.07862377166748
    7. '               ' → logprob: -11.82862377166748
    8. '       ' → logprob: -11.82862377166748
    9. '<|end|>' → logprob: -11.95362377166748
    10. '   ' → logprob: -12.07862377166748

Token 2449: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232135653495789
    2. ' =' → logprob: -0.8982135653495789
    3. '           ' → logprob: -10.148213386535645
    4. 'if' → logprob: -11.648213386535645
    5. ' if' → logprob: -11.773213386535645
    6. '       ' → logprob: -12.023213386535645
    7. '        ' → logprob: -12.398213386535645
    8. '=i' → logprob: -12.773213386535645
    9. '*=' → logprob: -13.023213386535645
    10. ',' → logprob: -13.148213386535645

Token 2450: ' cum' (ID: 10023)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0006285638664849102
    2. ' beam' → logprob: -7.375628471374512
    3. 'be' → logprob: -14.000628471374512
    4. '10' → logprob: -14.000628471374512
    5. '   ' → logprob: -16.375629425048828
    6. '```' → logprob: -17.125629425048828
    7. 'bee' → logprob: -17.250629425048828
    8. ' ' → logprob: -17.625629425048828
    9. '1' → logprob: -17.625629425048828
    10. '0' → logprob: -17.750629425048828

Token 2451: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00017147827020380646
    2. '[i' → logprob: -8.750171661376953
    3. 'i' → logprob: -11.625171661376953
    4. 'in' → logprob: -13.500171661376953
    5. '[min' → logprob: -13.500171661376953
    6. '[' → logprob: -14.250171661376953
    7. '```' → logprob: -15.000171661376953
    8. ' min' → logprob: -16.625171661376953
    9. 'max' → logprob: -17.875171661376953
    10. '_min' → logprob: -18.000171661376953

Token 2452: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.750001907348633
    3. '```' → logprob: -15.250001907348633
    4. '           ' → logprob: -16.125001907348633
    5. ' [' → logprob: -16.125001907348633
    6. '][' → logprob: -16.250001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '       ' → logprob: -16.500001907348633
    9. '[
' → logprob: -16.625001907348633
    10. ')[' → logprob: -17.500001907348633

Token 2453: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.029896045103669167
    2. ']' → logprob: -3.5298960208892822
    3. ']
' → logprob: -9.404895782470703
    4. '       ' → logprob: -10.279895782470703
    5. '           ' → logprob: -11.279895782470703
    6. ' ]
' → logprob: -12.029895782470703
    7. '[' → logprob: -13.029895782470703
    8. ']

' → logprob: -13.404895782470703
    9. '[i' → logprob: -13.529895782470703
    10. '```' → logprob: -13.529895782470703

Token 2454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003552463313098997
    2. ' if' → logprob: -8.62535572052002
    3. '```' → logprob: -9.37535572052002
    4. 'if' → logprob: -10.00035572052002
    5. '               ' → logprob: -10.87535572052002
    6. '<|end|>' → logprob: -11.00035572052002
    7. '
' → logprob: -12.75035572052002
    8. '       ' → logprob: -12.87535572052002
    9. '                   ' → logprob: -14.12535572052002
    10. '​' → logprob: -14.62535572052002

Token 2455: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5778077840805054
    2. '           ' → logprob: -0.8278077840805054
    3. ' if' → logprob: -6.327807903289795
    4. '```' → logprob: -10.077807426452637
    5. '       ' → logprob: -10.577807426452637
    6. '               ' → logprob: -11.952807426452637
    7. '   ' → logprob: -12.827807426452637
    8. '                   ' → logprob: -14.077807426452637
    9. '          ' → logprob: -14.327807426452637
    10. '		' → logprob: -14.327807426452637

Token 2456: ' test' (ID: 1746)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.058091457933187485
    2. ' B' → logprob: -2.933091402053833
    3. 'test' → logprob: -5.933091640472412
    4. ' test' → logprob: -7.933091640472412
    5. 'data' → logprob: -8.933091163635254
    6. ' data' → logprob: -10.683091163635254
    7. 'cum' → logprob: -11.183091163635254
    8. '10' → logprob: -12.183091163635254
    9. ' ' → logprob: -12.433091163635254
    10. '(test' → logprob: -12.683091163635254

Token 2457: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.38919687271118164
    2. '<=' → logprob: -1.1391968727111816
    3. ' ==' → logprob: -6.764196872711182
    4. '==' → logprob: -7.014196872711182
    5. '           ' → logprob: -9.014196395874023
    6. '```' → logprob: -9.639196395874023
    7. '       ' → logprob: -11.264196395874023
    8. '=' → logprob: -11.389196395874023
    9. '          ' → logprob: -11.514196395874023
    10. '!=' → logprob: -11.764196395874023

Token 2458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.256715774536133
    4. '
' → logprob: -17.006715774536133
    5. '```' → logprob: -17.631715774536133
    6. '   ' → logprob: -17.881715774536133
    7. ' ' → logprob: -18.756715774536133
    8. '10' → logprob: -18.881715774536133
    9. '  ' → logprob: -19.256715774536133
    10. '	' → logprob: -19.631715774536133

Token 2459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '10' → logprob: -18.37500762939453
    4. '```' → logprob: -19.87500762939453
    5. '
' → logprob: -20.25000762939453
    6. ' ' → logprob: -21.00000762939453
    7. '   ' → logprob: -22.00000762939453
    8. '1' → logprob: -22.00000762939453
    9. '000' → logprob: -22.12500762939453
    10. '00' → logprob: -22.25000762939453

Token 2460: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2461516261100769
    2. ' and' → logprob: -1.8711516857147217
    3. ':
' → logprob: -3.6211516857147217
    4. '           ' → logprob: -3.9961516857147217
    5. 'and' → logprob: -4.371151447296143
    6. ':' → logprob: -5.121151447296143
    7. '                   ' → logprob: -8.2461519241333
    8. '              ' → logprob: -8.9961519241333
    9. ',' → logprob: -10.4961519241333
    10. '                       ' → logprob: -10.6211519241333

Token 2461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0192140880972147
    2. ' and' → logprob: -4.644214153289795
    3. '```' → logprob: -4.894214153289795
    4. 'and' → logprob: -7.394214153289795
    5. '                       ' → logprob: -7.894214153289795
    6. '           ' → logprob: -8.144213676452637
    7. '                               ' → logprob: -8.894213676452637
    8. '                           ' → logprob: -9.019213676452637
    9. '              ' → logprob: -9.144213676452637
    10. '                   ' → logprob: -9.269213676452637

Token 2462: ' t' (ID: 260)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.4731175899505615
    2. 't' (adapté à ' t') → logprob: -1.7231175899505615
    3. '               ' → logprob: -1.7231175899505615
    4. 'test' → logprob: -4.973117828369141
    5. ' temp' → logprob: -5.598117828369141
    6. ' t' → logprob: -5.598117828369141
    7. 'b' → logprob: -6.223117828369141
    8. 'if' → logprob: -6.473117828369141
    9. 'B' → logprob: -6.598117828369141
    10. 'for' → logprob: -8.84811782836914

Token 2463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0700172409415245
    2. '=' → logprob: -2.8200173377990723
    3. '               ' → logprob: -5.695017337799072
    4. '           ' → logprob: -6.070017337799072
    5. '                   ' → logprob: -6.195017337799072
    6. '       ' → logprob: -9.320016860961914
    7. '                       ' → logprob: -9.945016860961914
    8. ':' → logprob: -10.445016860961914
    9. ' ' → logprob: -11.070016860961914
    10. '                ' → logprob: -11.195016860961914

Token 2464: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.142714723944664
    2. ' abs' → logprob: -2.017714738845825
    3. ' data' → logprob: -11.017714500427246
    4. 'data' → logprob: -11.017714500427246
    5. '(abs' → logprob: -13.142714500427246
    6. '0' → logprob: -14.142714500427246
    7. ' -' → logprob: -14.392714500427246
    8. '1' → logprob: -14.392714500427246
    9. '-' → logprob: -14.517714500427246
    10. 'test' → logprob: -14.642714500427246

Token 2465: '(test' (ID: 16066)
  Prédit: '(test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(test' → logprob: -1.8193366486229934e-05
    2. 'test' → logprob: -11.500018119812012
    3. '(' → logprob: -12.500018119812012
    4. '(
' → logprob: -12.625018119812012
    5. '(t' → logprob: -13.875018119812012
    6. '(data' → logprob: -17.375019073486328
    7. ')test' → logprob: -18.625019073486328
    8. '(temp' → logprob: -18.750019073486328
    9. '(

' → logprob: -19.875019073486328
    10. '(
' → logprob: -19.875019073486328

Token 2466: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.028940515592694283
    2. ')' → logprob: -4.528940677642822
    3. '               ' → logprob: -4.903940677642822
    4. '):
' → logprob: -5.028940677642822
    5. '                   ' → logprob: -6.403940677642822
    6. '           ' → logprob: -6.528940677642822
    7. '```' → logprob: -8.028940200805664
    8. ')
' → logprob: -9.653940200805664
    9. '                       ' → logprob: -9.653940200805664
    10. '       ' → logprob: -9.653940200805664

Token 2467: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9908698201179504
    2. '```' → logprob: -1.2408697605133057
    3. '               ' → logprob: -1.4908697605133057
    4. '                       ' → logprob: -2.8658697605133057
    5. '                               ' → logprob: -3.3658697605133057
    6. '                           ' → logprob: -4.240869998931885
    7. ' if' → logprob: -5.740869998931885
    8. '           ' → logprob: -6.115869998931885
    9. 'if' → logprob: -6.865869998931885
    10. '``' → logprob: -6.990869998931885

Token 2468: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004434035625308752
    2. '               ' → logprob: -5.504434108734131
    3. ' if' → logprob: -8.004433631896973
    4. '                   ' → logprob: -11.254433631896973
    5. '           ' → logprob: -12.004433631896973
    6. '```' → logprob: -13.379433631896973
    7. '                       ' → logprob: -14.254433631896973
    8. '              ' → logprob: -16.50443458557129
    9. 'for' → logprob: -16.87943458557129
    10. '       ' → logprob: -17.25443458557129

Token 2469: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.029779991135001183
    2. ' B' → logprob: -3.5297799110412598
    3. 'cum' → logprob: -11.279780387878418
    4. ' cum' → logprob: -11.779780387878418
    5. '   ' → logprob: -12.279780387878418
    6. '    ' → logprob: -13.779780387878418
    7. ' ' → logprob: -13.779780387878418
    8. '  ' → logprob: -14.029780387878418
    9. '	B' → logprob: -14.654780387878418
    10. '       ' → logprob: -15.529780387878418

Token 2470: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04301197826862335
    2. '*' → logprob: -3.1680119037628174
    3. ' ' → logprob: -11.543011665344238
    4. ' *
' → logprob: -14.543011665344238
    5. ' ' → logprob: -14.668011665344238
    6. ' ans' → logprob: -15.293011665344238
    7. '*[' → logprob: -15.543011665344238
    8. '**' → logprob: -15.668011665344238
    9. '*out' → logprob: -15.668011665344238
    10. '[' → logprob: -15.668011665344238

Token 2471: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003475339850410819
    2. ' ans' → logprob: -5.753475189208984
    3. 't' → logprob: -8.128475189208984
    4. ' t' → logprob: -13.253475189208984
    5. '	ans' → logprob: -15.003475189208984
    6. '(ans' → logprob: -15.253475189208984
    7. '_ans' → logprob: -16.378475189208984
    8. '
' → logprob: -17.253475189208984
    9. 'Ans' → logprob: -17.378475189208984
    10. 'answer' → logprob: -17.628475189208984

Token 2472: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004634707234799862
    2. '0' → logprob: -5.379634857177734
    3. ' ' → logprob: -11.754634857177734
    4. ' [' → logprob: -13.129634857177734
    5. '[
' → logprob: -13.379634857177734
    6. '```' → logprob: -13.879634857177734
    7. ' ans' → logprob: -14.129634857177734
    8. 'ans' → logprob: -14.254634857177734
    9. '
' → logprob: -14.879634857177734
    10. '#' → logprob: -16.254634857177734

Token 2473: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015267668291926384
    2. '[' → logprob: -4.265267848968506
    3. 'ans' → logprob: -7.015267848968506
    4. ' ans' → logprob: -9.390267372131348
    5. ' ' → logprob: -9.890267372131348
    6. 'i' → logprob: -10.390267372131348
    7. '1' → logprob: -10.765267372131348
    8. 't' → logprob: -12.390267372131348
    9. '   ' → logprob: -12.390267372131348
    10. '[i' → logprob: -12.765267372131348

Token 2474: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759571194648743
    2. '<' → logprob: -0.8259571194648743
    3. '<|end|>' → logprob: -12.325957298278809
    4. '[' → logprob: -12.575957298278809
    5. ')<' → logprob: -13.075957298278809
    6. '<int' → logprob: -13.575957298278809
    7. ')' → logprob: -13.825957298278809
    8. '<const' → logprob: -14.575957298278809
    9. '<class' → logprob: -14.575957298278809
    10. '<span' → logprob: -14.825957298278809

Token 2475: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25196170806884766
    2. ' <' → logprob: -1.5019617080688477
    3. '[' → logprob: -11.126961708068848
    4. '<int' → logprob: -11.876961708068848
    5. '```' → logprob: -13.126961708068848
    6. '<size' → logprob: -13.376961708068848
    7. '<n' → logprob: -14.126961708068848
    8. '<|end|>' → logprob: -14.251961708068848
    9. '<T' → logprob: -14.501961708068848
    10. '<class' → logprob: -14.626961708068848

Token 2476: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3132641315460205
    2. ' ans' → logprob: -1.3132641315460205
    3. '(ans' → logprob: -13.563263893127441
    4. 't' → logprob: -14.313263893127441
    5. '	ans' → logprob: -14.813263893127441
    6. '_ans' → logprob: -17.063264846801758
    7. 'B' → logprob: -17.563264846801758
    8. 'test' → logprob: -17.688264846801758
    9. ' t' → logprob: -17.813264846801758
    10. '```' → logprob: -18.188264846801758

Token 2477: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08227434009313583
    2. 'ans' → logprob: -2.5822744369506836
    3. ' ans' → logprob: -6.207274436950684
    4. '1' → logprob: -7.082274436950684
    5. '[i' → logprob: -7.832274436950684
    6. '(ans' → logprob: -9.832274436950684
    7. '	ans' → logprob: -10.457274436950684
    8. '```' → logprob: -10.832274436950684
    9. '[
' → logprob: -11.832274436950684
    10. ' [' → logprob: -12.457274436950684

Token 2478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022505302913486958
    2. 'i' → logprob: -6.252250671386719
    3. 'ans' → logprob: -8.127250671386719
    4. '[i' → logprob: -11.252250671386719
    5. '   ' → logprob: -12.252250671386719
    6. ' ' → logprob: -13.252250671386719
    7. '```' → logprob: -13.377250671386719
    8. '0' → logprob: -13.752250671386719
    9. ' i' → logprob: -13.877250671386719
    10. ' ans' → logprob: -14.002250671386719

Token 2479: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00524075236171484
    2. '*' → logprob: -5.2552409172058105
    3. '```' → logprob: -12.880240440368652
    4. '               ' → logprob: -13.755240440368652
    5. '*t' → logprob: -14.255240440368652
    6. ' ' → logprob: -14.505240440368652
    7. ':' → logprob: -14.880240440368652
    8. '                   ' → logprob: -15.505240440368652
    9. '                       ' → logprob: -15.630240440368652
    10. '                           ' → logprob: -15.880240440368652

Token 2480: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10047267377376556
    2. '*' → logprob: -2.3504726886749268
    3. '*t' → logprob: -9.100472450256348
    4. '```' → logprob: -9.475472450256348
    5. ' t' → logprob: -10.100472450256348
    6. 't' → logprob: -10.350472450256348
    7. ' ' → logprob: -13.600472450256348
    8. '``' → logprob: -14.475472450256348
    9. ' ' → logprob: -14.975472450256348
    10. 'B' → logprob: -14.975472450256348

Token 2481: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001170225441455841
    2. ' t' → logprob: -6.7511701583862305
    3. '
' → logprob: -17.126171112060547
    4. '`t' → logprob: -19.126171112060547
    5. '	t' → logprob: -19.251171112060547
    6. '```' → logprob: -19.376171112060547
    7. '               ' → logprob: -21.001171112060547
    8. '   ' → logprob: -21.251171112060547
    9. ' ' → logprob: -21.376171112060547
    10. '                   ' → logprob: -21.751171112060547

Token 2482: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.043076153844594955
    2. ':' → logprob: -3.2930760383605957
    3. '                       ' → logprob: -5.793076038360596
    4. '                   ' → logprob: -6.418076038360596
    5. '                           ' → logprob: -8.293076515197754
    6. '               ' → logprob: -10.293076515197754
    7. '                               ' → logprob: -11.668076515197754
    8. '```' → logprob: -11.918076515197754
    9. '           ' → logprob: -12.168076515197754
    10. '=' → logprob: -12.293076515197754

Token 2483: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3536689579486847
    2. '                           ' → logprob: -1.9786689281463623
    3. '                   ' → logprob: -2.2286689281463623
    4. '                               ' → logprob: -3.1036689281463623
    5. '                                   ' → logprob: -5.478669166564941
    6. '                                           ' → logprob: -7.228669166564941
    7. '                                       ' → logprob: -7.353669166564941
    8. '```' → logprob: -7.728669166564941
    9. '                        ' → logprob: -8.103669166564941
    10. '               ' → logprob: -8.728669166564941

Token 2484: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.007948352955281734
    2. ' ans' → logprob: -5.007948398590088
    3. '                   ' → logprob: -6.757948398590088
    4. '	ans' → logprob: -10.00794792175293
    5. '```' → logprob: -11.63294792175293
    6. '                       ' → logprob: -11.75794792175293
    7. '(ans' → logprob: -12.63294792175293
    8. '               ' → logprob: -13.13294792175293
    9. '                           ' → logprob: -14.25794792175293
    10. '   ' → logprob: -14.38294792175293

Token 2485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11337878555059433
    2. ' =' → logprob: -2.2383787631988525
    3. '[' → logprob: -8.113378524780273
    4. '=
' → logprob: -9.238378524780273
    5. '```' → logprob: -9.988378524780273
    6. '=[' → logprob: -10.363378524780273
    7. '=[
' → logprob: -10.613378524780273
    8. '[
' → logprob: -11.113378524780273
    9. '<|end|>' → logprob: -11.988378524780273
    10. '|=
' → logprob: -12.738378524780273

Token 2486: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.06483820825815201
    2. ' [' → logprob: -2.814838171005249
    3. '[B' → logprob: -6.314838409423828
    4. '[test' → logprob: -7.439838409423828
    5. '[' → logprob: -7.689838409423828
    6. '[b' → logprob: -12.689838409423828
    7. '[T' → logprob: -13.064838409423828
    8. '[i' → logprob: -13.689838409423828
    9. '[
' → logprob: -14.064838409423828
    10. '[data' → logprob: -14.314838409423828

Token 2487: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0002302383363712579
    2. ' t' → logprob: -8.500229835510254
    3. 'B' → logprob: -10.625229835510254
    4. '0' → logprob: -14.500229835510254
    5. '   ' → logprob: -14.875229835510254
    6. 'b' → logprob: -15.250229835510254
    7. '               ' → logprob: -15.500229835510254
    8. '	t' → logprob: -15.500229835510254
    9. 'test' → logprob: -15.625229835510254
    10. '           ' → logprob: -15.750229835510254

Token 2488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.35837464465294e-05
    2. '                   ' → logprob: -10.500043869018555
    3. ' ,' → logprob: -12.125043869018555
    4. ',B' → logprob: -12.375043869018555
    5. ',
' → logprob: -12.625043869018555
    6. ',i' → logprob: -14.500043869018555
    7. '           ' → logprob: -15.000043869018555
    8. '               ' → logprob: -15.125043869018555
    9. ',b' → logprob: -15.250043869018555
    10. '‌,' → logprob: -15.250043869018555

Token 2489: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005234121344983578
    2. ' B' → logprob: -5.255234241485596
    3. '                   ' → logprob: -15.755233764648438
    4. '   ' → logprob: -16.130233764648438
    5. '               ' → logprob: -16.880233764648438
    6. '           ' → logprob: -17.630233764648438
    7. '    ' → logprob: -17.630233764648438
    8. '       ' → logprob: -18.505233764648438
    9. '	B' → logprob: -18.755233764648438
    10. '                       ' → logprob: -18.880233764648438

Token 2490: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005796308163553476
    2. '               ' → logprob: -5.505796432495117
    3. '                   ' → logprob: -6.880796432495117
    4. '           ' → logprob: -8.005796432495117
    5. '       ' → logprob: -8.255796432495117
    6. ']
' → logprob: -10.130796432495117
    7. '                       ' → logprob: -11.255796432495117
    8. '   ' → logprob: -11.380796432495117
    9. ')' → logprob: -11.505796432495117
    10. ')]' → logprob: -12.380796432495117

Token 2491: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48313388228416443
    2. 'print' → logprob: -0.9831339120864868
    3. '```' → logprob: -4.858133792877197
    4. '
' → logprob: -7.108133792877197
    5. ')
' → logprob: -8.608134269714355
    6. '``' → logprob: -9.233134269714355
    7. ')' → logprob: -9.483134269714355
    8. '       ' → logprob: -10.608134269714355
    9. 'for' → logprob: -11.108134269714355
    10. '    
' → logprob: -11.233134269714355

Token 2492: ' M' (ID: 391)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001559139578603208
    2. '   ' → logprob: -6.501559257507324
    3. ' print' → logprob: -10.251559257507324
    4. '```' → logprob: -10.876559257507324
    5. 'for' → logprob: -13.626559257507324
    6. '	print' → logprob: -14.001559257507324
    7. '``' → logprob: -15.626559257507324
    8. 'return' → logprob: -16.126558303833008
    9. '
' → logprob: -16.126558303833008
    10. '<|end|>' → logprob: -16.376558303833008

Token 2493: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016907735262066126
    2. 'ax' → logprob: -6.501690864562988
    3. '```' → logprob: -9.376690864562988
    4. '   ' → logprob: -10.001690864562988
    5. '#print' → logprob: -11.501690864562988
    6. '=' → logprob: -11.751690864562988
    7. '#' → logprob: -11.876690864562988
    8. ' print' → logprob: -12.001690864562988
    9. 'a' → logprob: -12.126690864562988
    10. '_print' → logprob: -12.376690864562988

Token 2494: ' min' (ID: 1349)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9018848538398743
    2. 'm' → logprob: -1.4018847942352295
    3. '0' → logprob: -1.6518847942352295
    4. 'ans' → logprob: -2.6518847942352295
    5. 'max' → logprob: -3.1518847942352295
    6. 'len' → logprob: -3.9018847942352295
    7. '1' → logprob: -4.901885032653809
    8. 'min' → logprob: -5.901885032653809
    9. '10' → logprob: -6.026885032653809
    10. '-' → logprob: -6.401885032653809

Token 2495: '(data' (ID: 4819)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8869242072105408
    2. '(ans' → logprob: -1.1369242668151855
    3. '([' → logprob: -2.5119242668151855
    4. '(N' → logprob: -2.8869242668151855
    5. '(c' → logprob: -3.3869242668151855
    6. '(M' → logprob: -3.7619242668151855
    7. '(range' → logprob: -3.7619242668151855
    8. '(B' → logprob: -4.6369242668151855
    9. '(data' → logprob: -4.7619242668151855
    10. 'ans' → logprob: -4.8869242668151855

Token 2496: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057774998247623444
    2. ')
' → logprob: -3.5577750205993652
    3. '[M' → logprob: -3.9327750205993652
    4. '[i' → logprob: -5.432775020599365
    5. '[N' → logprob: -6.432775020599365
    6. '[:' → logprob: -7.057775020599365
    7. '[' → logprob: -7.307775020599365
    8. '))' → logprob: -9.057774543762207
    9. '   ' → logprob: -9.057774543762207
    10. '(M' → logprob: -9.432774543762207

Token 2497: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4936910569667816
    2. '   ' → logprob: -1.618691086769104
    3. 'for' → logprob: -2.6186909675598145
    4. 'if' → logprob: -2.8686909675598145
    5. 'M' → logprob: -3.4936909675598145
    6. ' if' → logprob: -5.1186909675598145
    7. 'idx' → logprob: -5.1186909675598145
    8. ' for' → logprob: -5.2436909675598145
    9. '       ' → logprob: -5.6186909675598145
    10. 'index' → logprob: -5.7436909675598145

Token 2498: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06382603198289871
    2. 'if' → logprob: -4.188826084136963
    3. 'm' → logprob: -4.313826084136963
    4. 'idx' → logprob: -4.313826084136963
    5. 'M' → logprob: -4.813826084136963
    6. 'for' (adapté à ' for') → logprob: -5.688826084136963
    7. '```' → logprob: -6.563826084136963
    8. ' print' → logprob: -6.938826084136963
    9. 'min' → logprob: -6.938826084136963
    10. 'end' → logprob: -6.938826084136963

Token 2499: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002154187997803092
    2. ' i' → logprob: -6.252154350280762
    3. 'j' → logprob: -9.002154350280762
    4. 'M' → logprob: -10.377154350280762
    5. 'ans' → logprob: -11.377154350280762
    6. '   ' → logprob: -11.502154350280762
    7. 'k' → logprob: -11.877154350280762
    8. '(i' → logprob: -12.502154350280762
    9. 'range' → logprob: -12.627154350280762
    10. '_i' → logprob: -12.752154350280762

Token 2500: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02689092420041561
    2. ' in' → logprob: -4.151890754699707
    3. 'range' → logprob: -4.776890754699707
    4. '_' → logprob: -6.276890754699707
    5. '(range' → logprob: -8.651890754699707
    6. ',' → logprob: -9.026890754699707
    7. 'i' → logprob: -9.526890754699707
    8. 'idx' → logprob: -11.026890754699707
    9. 'import' → logprob: -11.026890754699707
    10. 'index' → logprob: -11.276890754699707

Token 2501: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.420598219847307e-05
    2. ' range' → logprob: -10.0000638961792
    3. 'data' → logprob: -11.7500638961792
    4. '(range' → logprob: -12.1250638961792
    5. '[' → logprob: -12.7500638961792
    6. 'enumer' → logprob: -15.2500638961792
    7. '
' → logprob: -15.3750638961792
    8. 'i' → logprob: -15.3750638961792
    9. 're' → logprob: -15.7500638961792
    10. '   ' → logprob: -16.125064849853516

Token 2502: '(N' (ID: 10564)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19356945157051086
    2. 'N' → logprob: -1.8185694217681885
    3. '(N' → logprob: -4.693569660186768
    4. '(range' → logprob: -6.068569660186768
    5. '[N' → logprob: -7.068569660186768
    6. 'len' → logprob: -7.193569660186768
    7. ' range' → logprob: -8.44356918334961
    8. 'data' → logprob: -8.94356918334961
    9. '[' → logprob: -8.94356918334961
    10. '(len' → logprob: -9.44356918334961

Token 2503: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029500054195523262
    2. '-' → logprob: -3.9045000076293945
    3. '):' → logprob: -5.7795000076293945
    4. '   ' → logprob: -5.9045000076293945
    5. ' -' → logprob: -6.5295000076293945
    6. ',' → logprob: -7.2795000076293945
    7. '       ' → logprob: -7.5295000076293945
    8. '():
' → logprob: -9.654500007629395
    9. '
' → logprob: -10.279500007629395
    10. ':' → logprob: -10.279500007629395

Token 2504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02054784446954727
    2. '```' → logprob: -4.395547866821289
    3. '       ' → logprob: -5.145547866821289
    4. '   ' → logprob: -7.520547866821289
    5. '               ' → logprob: -7.645547866821289
    6. '	       ' → logprob: -8.145547866821289
    7. '<|end|>' → logprob: -8.270547866821289
    8. '		' → logprob: -8.770547866821289
    9. ' if' → logprob: -9.020547866821289
    10. '	   ' → logprob: -9.395547866821289

Token 2505: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12916815280914307
    2. '           ' → logprob: -2.3791680335998535
    3. ' if' → logprob: -4.0041680335998535
    4. '       ' → logprob: -5.2541680335998535
    5. '   ' → logprob: -5.3791680335998535
    6. '```' → logprob: -7.8791680335998535
    7. '               ' → logprob: -10.254168510437012
    8. '	if' → logprob: -11.004168510437012
    9. 'for' → logprob: -11.754168510437012
    10. '#' → logprob: -11.754168510437012

Token 2506: ' beam' (ID: 36650)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.03492766246199608
    2. ' data' → logprob: -3.5349276065826416
    3. 'cum' → logprob: -5.784927845001221
    4. 'M' → logprob: -6.659927845001221
    5. 'beam' → logprob: -8.284927368164062
    6. 'ans' → logprob: -8.284927368164062
    7. ' cum' → logprob: -9.284927368164062
    8. ' M' → logprob: -9.659927368164062
    9. '   ' → logprob: -9.659927368164062
    10. ' ans' → logprob: -10.909927368164062

Token 2507: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '```' → logprob: -13.000004768371582
    3. '[' → logprob: -13.250004768371582
    4. 'i' → logprob: -15.875004768371582
    5. '   ' → logprob: -16.375003814697266
    6. '[
' → logprob: -16.500003814697266
    7. '[I' → logprob: -17.125003814697266
    8. '][' → logprob: -17.250003814697266
    9. '``' → logprob: -17.500003814697266
    10. ' [' → logprob: -18.125003814697266

Token 2508: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.019888605922460556
    2. '[' → logprob: -4.144888401031494
    3. '[i' → logprob: -5.644888401031494
    4. '```' → logprob: -9.019888877868652
    5. ')[' → logprob: -9.769888877868652
    6. ']' → logprob: -10.519888877868652
    7. '#' → logprob: -10.769888877868652
    8. '   ' → logprob: -11.519888877868652
    9. '[
' → logprob: -11.644888877868652
    10. '"][' → logprob: -11.644888877868652

Token 2509: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01816597953438759
    2. '1' → logprob: -4.0181660652160645
    3. '```' → logprob: -12.518165588378906
    4. '   ' → logprob: -13.393165588378906
    5. '][' → logprob: -13.518165588378906
    6. '
' → logprob: -13.580665588378906
    7. 'i' → logprob: -13.580665588378906
    8. '[' → logprob: -13.705665588378906
    9. ']' → logprob: -14.018165588378906
    10. '2' → logprob: -14.143165588378906

Token 2510: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.033555444329977036
    2. '[' → logprob: -4.033555507659912
    3. '[i' → logprob: -5.033555507659912
    4. ']' → logprob: -5.033555507659912
    5. '-' → logprob: -6.783555507659912
    6. '   ' → logprob: -8.033555030822754
    7. '#' → logprob: -8.783555030822754
    8. ' -' → logprob: -8.908555030822754
    9. '           ' → logprob: -9.533555030822754
    10. '```' → logprob: -9.908555030822754

Token 2511: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6351604461669922
    2. '[' → logprob: -0.7601604461669922
    3. '][' → logprob: -6.635160446166992
    4. ' -' → logprob: -7.385160446166992
    5. '[i' → logprob: -8.260160446166992
    6. '```' → logprob: -9.135160446166992
    7. '   ' → logprob: -9.510160446166992
    8. '==' → logprob: -10.010160446166992
    9. '#' → logprob: -11.010160446166992
    10. '-i' → logprob: -11.385160446166992

Token 2512: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.0002354832977289334
    2. ' beam' → logprob: -8.375235557556152
    3. '   ' → logprob: -13.000235557556152
    4. 'be' → logprob: -14.125235557556152
    5. '           ' → logprob: -14.625235557556152
    6. '       ' → logprob: -14.875235557556152
    7. '```' → logprob: -15.250235557556152
    8. 'i' → logprob: -15.500235557556152
    9. 'beat' → logprob: -16.625234603881836
    10. ' ' → logprob: -16.750234603881836

Token 2513: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019476758316159248
    2. '[' → logprob: -6.87694787979126
    3. 'beam' → logprob: -7.50194787979126
    4. '[user' → logprob: -8.751947402954102
    5. 'i' → logprob: -8.876947402954102
    6. 'user' → logprob: -10.501947402954102
    7. '1' → logprob: -11.626947402954102
    8. '```' → logprob: -11.751947402954102
    9. '[player' → logprob: -12.376947402954102
    10. '   ' → logprob: -13.251947402954102

Token 2514: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.569610595703125
    2. '[i' → logprob: -1.194610595703125
    3. '][' → logprob: -2.694610595703125
    4. '1' → logprob: -2.944610595703125
    5. 'i' → logprob: -4.819610595703125
    6. 'user' → logprob: -6.819610595703125
    7. ']' → logprob: -6.944610595703125
    8. '>[' → logprob: -8.944610595703125
    9. 's' → logprob: -9.069610595703125
    10. '-' → logprob: -9.194610595703125

Token 2515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001895935565698892
    2. 'i' → logprob: -8.875189781188965
    3. 'beam' → logprob: -10.500189781188965
    4. '[i' → logprob: -11.250189781188965
    5. ' ' → logprob: -12.500189781188965
    6. '```' → logprob: -12.750189781188965
    7. '   ' → logprob: -13.625189781188965
    8. '[' → logprob: -14.250189781188965
    9. ' i' → logprob: -16.00018882751465
    10. '１' → logprob: -16.12518882751465

Token 2516: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.891465961933136
    2. ' <=' → logprob: -0.891465961933136
    3. '<=' → logprob: -1.8914659023284912
    4. ']<=' → logprob: -4.01646614074707
    5. '>' → logprob: -5.01646614074707
    6. ' >' → logprob: -6.26646614074707
    7. ']>' → logprob: -7.64146614074707
    8. ')' → logprob: -8.01646614074707
    9. ' ]' → logprob: -8.14146614074707
    10. '()' → logprob: -8.26646614074707

Token 2517: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5288273096084595
    2. ' <=' → logprob: -0.9038273096084595
    3. '>' → logprob: -5.52882719039917
    4. ' >' → logprob: -7.52882719039917
    5. '==' → logprob: -7.65382719039917
    6. ' ==' → logprob: -8.028827667236328
    7. '>=' → logprob: -9.153827667236328
    8. '<' → logprob: -9.403827667236328
    9. ' <' → logprob: -9.778827667236328
    10. ' >=' → logprob: -10.028827667236328

Token 2518: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038145645521581173
    2. ' ' → logprob: -7.8753814697265625
    3. '10' → logprob: -14.125381469726562
    4. '>' → logprob: -15.000381469726562
    5. '<|end|>' → logprob: -16.500381469726562
    6. '1' → logprob: -16.750381469726562
    7. '   ' → logprob: -16.750381469726562
    8. '```' → logprob: -17.000381469726562
    9. '#' → logprob: -17.125381469726562
    10. '-' → logprob: -17.625381469726562

Token 2519: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.875059127807617
    3. '10' → logprob: -12.375059127807617
    4. '-' → logprob: -14.125059127807617
    5. '1' → logprob: -14.500059127807617
    6. 'M' → logprob: -14.625059127807617
    7. 'm' → logprob: -15.375059127807617
    8. '   ' → logprob: -15.625059127807617
    9. '```' → logprob: -15.875059127807617
    10. '>' → logprob: -15.937559127807617

Token 2520: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1280459314584732
    2. ':
' → logprob: -3.0030460357666016
    3. 'and' → logprob: -3.3780460357666016
    4. ':' → logprob: -4.003046035766602
    5. '               ' → logprob: -4.378046035766602
    6. '           ' → logprob: -5.378046035766602
    7. '                       ' → logprob: -8.128046035766602
    8. '                   ' → logprob: -8.628046035766602
    9. '==' → logprob: -8.753046035766602
    10. '                           ' → logprob: -9.753046035766602

Token 2521: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043810077011585236
    2. ' and' → logprob: -4.04380989074707
    3. '           ' → logprob: -4.29380989074707
    4. '```' → logprob: -5.29380989074707
    5. '                   ' → logprob: -5.66880989074707
    6. '                       ' → logprob: -6.29380989074707
    7. ':
' → logprob: -7.66880989074707
    8. 'and' → logprob: -8.16880989074707
    9. ':' → logprob: -9.41880989074707
    10. '              ' → logprob: -9.54380989074707

Token 2522: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3518141806125641
    2. 'break' → logprob: -2.4768142700195312
    3. '               ' → logprob: -2.7268142700195312
    4. '                       ' → logprob: -3.3518142700195312
    5. ' ans' → logprob: -3.4768142700195312
    6. 'ans' → logprob: -3.6018142700195312
    7. '```' → logprob: -4.351814270019531
    8. ' break' → logprob: -4.601814270019531
    9. 'continue' → logprob: -4.976814270019531
    10. '           ' → logprob: -5.226814270019531

Token 2523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6243221759796143
    2. ' =' → logprob: -0.9993221759796143
    3. '                   ' → logprob: -2.4993221759796143
    4. '               ' → logprob: -5.124321937561035
    5. '                       ' → logprob: -5.249321937561035
    6. '                  ' → logprob: -8.124321937561035
    7. '                           ' → logprob: -8.124321937561035
    8. '```' → logprob: -8.249321937561035
    9. '+=' → logprob: -8.499321937561035
    10. ' +=' → logprob: -8.499321937561035

Token 2524: ' M' (ID: 391)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.8132684230804443
    2. 'min' → logprob: -1.8132684230804443
    3. 'data' → logprob: -1.9382684230804443
    4. '10' → logprob: -2.8132684230804443
    5. 'ans' → logprob: -3.3132684230804443
    6. 'seg' → logprob: -3.4382684230804443
    7. 'abs' → logprob: -3.4382684230804443
    8. 'max' → logprob: -3.6882684230804443
    9. '0' → logprob: -3.9382684230804443
    10. 'Seg' → logprob: -4.563268661499023

Token 2525: ' +' (ID: 659)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5254684686660767
    2. '               ' → logprob: -2.525468349456787
    3. ' =' → logprob: -2.775468349456787
    4. ' <' → logprob: -3.275468349456787
    5. '                       ' → logprob: -3.275468349456787
    6. '=' → logprob: -3.525468349456787
    7. ' *' → logprob: -3.525468349456787
    8. ' >' → logprob: -3.650468349456787
    9. ' if' → logprob: -3.775468349456787
    10. ' -' → logprob: -3.900468349456787

Token 2526: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.004469519946724176
    2. '(' → logprob: -5.504469394683838
    3. ' beam' → logprob: -8.629469871520996
    4. 'data' → logprob: -9.379469871520996
    5. 'abs' → logprob: -9.504469871520996
    6. '   ' → logprob: -11.254469871520996
    7. '0' → logprob: -11.879469871520996
    8. 'be' → logprob: -12.004469871520996
    9. ' (' → logprob: -12.754469871520996
    10. '(abs' → logprob: -12.754469871520996

Token 2527: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.5014188799541444e-05
    2. 'i' → logprob: -10.750044822692871
    3. '[' → logprob: -11.000044822692871
    4. '[
' → logprob: -13.125044822692871
    5. '][' → logprob: -13.500044822692871
    6. '```' → logprob: -13.750044822692871
    7. '[I' → logprob: -14.375044822692871
    8. ']' → logprob: -15.500044822692871
    9. 's' → logprob: -15.500044822692871
    10. '(i' → logprob: -15.625044822692871

Token 2528: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000939450750593096
    2. '[' → logprob: -7.50093936920166
    3. '[i' → logprob: -8.12593936920166
    4. ']' → logprob: -10.50093936920166
    5. ' ][' → logprob: -11.12593936920166
    6. ''][' → logprob: -11.25093936920166
    7. '"][' → logprob: -11.62593936920166
    8. '>[' → logprob: -12.12593936920166
    9. '```' → logprob: -12.37593936920166
    10. '#' → logprob: -12.87593936920166

Token 2529: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029810892418026924
    2. '0' → logprob: -3.529810905456543
    3. '[' → logprob: -10.404810905456543
    4. '[i' → logprob: -10.904810905456543
    5. 'i' → logprob: -12.404810905456543
    6. '```' → logprob: -12.529810905456543
    7. '(i' → logprob: -13.154810905456543
    8. '(' → logprob: -14.404810905456543
    9. ' ' → logprob: -14.529810905456543
    10. '   ' → logprob: -14.529810905456543

Token 2530: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026369158178567886
    2. '-' → logprob: -3.651369094848633
    3. '[' → logprob: -10.026369094848633
    4. ' -
' → logprob: -12.526369094848633
    5. '[i' → logprob: -12.651369094848633
    6. ')' → logprob: -12.776369094848633
    7. '               ' → logprob: -12.776369094848633
    8. ' ' → logprob: -12.901369094848633
    9. ']' → logprob: -13.901369094848633
    10. '<|end|>' → logprob: -14.026369094848633

Token 2531: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00640247343108058
    2. '-' → logprob: -5.131402492523193
    3. '               ' → logprob: -8.381402015686035
    4. '<|end|>' → logprob: -9.381402015686035
    5. '```' → logprob: -9.881402015686035
    6. '                   ' → logprob: -10.381402015686035
    7. '              ' → logprob: -11.506402015686035
    8. '                               ' → logprob: -12.006402015686035
    9. '                       ' → logprob: -12.256402015686035
    10. ' -
' → logprob: -12.256402015686035

Token 2532: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -2.248469718324486e-05
    2. ' beam' → logprob: -11.000022888183594
    3. '   ' → logprob: -13.250022888183594
    4. '10' → logprob: -14.125022888183594
    5. 'i' → logprob: -14.375022888183594
    6. '1' → logprob: -14.500022888183594
    7. '           ' → logprob: -15.000022888183594
    8. '```' → logprob: -15.250022888183594
    9. '       ' → logprob: -15.500022888183594
    10. 'be' → logprob: -15.750022888183594

Token 2533: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2457752227783203
    2. 'i' → logprob: -1.8707752227783203
    3. '1' → logprob: -2.8707752227783203
    4. '[' → logprob: -5.24577522277832
    5. '```' → logprob: -6.87077522277832
    6. 'beam' → logprob: -7.87077522277832
    7. '(i' → logprob: -8.99577522277832
    8. 'user' → logprob: -9.12077522277832
    9. '[
' → logprob: -9.49577522277832
    10. '{i' → logprob: -9.49577522277832

Token 2534: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10383153706789017
    2. '][' → logprob: -2.8538315296173096
    3. '[i' → logprob: -3.2288315296173096
    4. '1' → logprob: -7.478831768035889
    5. 'i' → logprob: -8.47883129119873
    6. ']' → logprob: -8.60383129119873
    7. '```' → logprob: -9.22883129119873
    8. '>[' → logprob: -9.35383129119873
    9. '[
' → logprob: -9.85383129119873
    10. ' [' → logprob: -10.35383129119873

Token 2535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.7888184528565034e-05
    2. '```' → logprob: -10.1250581741333
    3. 'i' → logprob: -12.0000581741333
    4. ' ' → logprob: -12.3750581741333
    5. 'beam' → logprob: -12.6250581741333
    6. '   ' → logprob: -14.0000581741333
    7. '[' → logprob: -14.1250581741333
    8. '<|end|>' → logprob: -14.2500581741333
    9. 'b' → logprob: -15.3750581741333
    10. 'user' → logprob: -15.5000581741333

Token 2536: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09063424915075302
    2. '           ' → logprob: -3.840634346008301
    3. '                   ' → logprob: -3.965634346008301
    4. '
' → logprob: -4.340634346008301
    5. ']
' → logprob: -4.465634346008301
    6. ')
' → logprob: -4.965634346008301
    7. ':
' → logprob: -5.590634346008301
    8. '       ' → logprob: -5.715634346008301
    9. '```' → logprob: -5.840634346008301
    10. ')' → logprob: -6.590634346008301

Token 2537: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5952678322792053
    2. '                   ' → logprob: -1.0952677726745605
    3. '                       ' → logprob: -2.5952677726745605
    4. '```' → logprob: -3.4702677726745605
    5. '``' → logprob: -6.7202677726745605
    6. ' and' → logprob: -6.8452677726745605
    7. '                               ' → logprob: -6.8452677726745605
    8. ' if' → logprob: -6.9702677726745605
    9. '           ' → logprob: -7.2202677726745605
    10. '                           ' → logprob: -7.3452677726745605

Token 2538: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22748705744743347
    2. 'if' (adapté à ' if') → logprob: -1.7274870872497559
    3. '               ' → logprob: -4.102487087249756
    4. '                   ' → logprob: -5.227487087249756
    5. '                       ' → logprob: -6.477487087249756
    6. '```' → logprob: -6.602487087249756
    7. '                               ' → logprob: -7.352487087249756
    8. '<|end|>' → logprob: -9.352486610412598
    9. '                           ' → logprob: -9.727486610412598
    10. 'temp' → logprob: -11.102486610412598

Token 2539: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.13273820281028748
    2. 'beam' → logprob: -2.7577381134033203
    3. ' temp' → logprob: -3.1327381134033203
    4. 'B' → logprob: -4.75773811340332
    5. ' beam' → logprob: -5.00773811340332
    6. ' B' → logprob: -6.50773811340332
    7. '(' → logprob: -9.50773811340332
    8. '(temp' → logprob: -9.63273811340332
    9. '   ' → logprob: -9.88273811340332
    10. 'be' → logprob: -9.88273811340332

Token 2540: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06205832213163376
    2. '<=' → logprob: -2.812058210372925
    3. '```' → logprob: -9.812058448791504
    4. ' <' → logprob: -11.937058448791504
    5. '[' → logprob: -12.437058448791504
    6. '           ' → logprob: -12.562058448791504
    7. '               ' → logprob: -12.562058448791504
    8. '                   ' → logprob: -12.812058448791504
    9. '<' → logprob: -13.187058448791504
    10. ' ' → logprob: -13.437058448791504

Token 2541: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031794982496649027
    2. ' ' → logprob: -5.753179550170898
    3. '```' → logprob: -13.753179550170898
    4. '   ' → logprob: -15.128179550170898
    5. '
' → logprob: -15.753179550170898
    6. ' ' → logprob: -15.878179550170898
    7. '``' → logprob: -16.3781795501709
    8. '       ' → logprob: -18.1281795501709
    9. '  ' → logprob: -18.2531795501709
    10. '	' → logprob: -18.8781795501709

Token 2542: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.62500286102295
    3. '```' → logprob: -13.75000286102295
    4. '
' → logprob: -16.625001907348633
    5. '``' → logprob: -19.125001907348633
    6. ' ' → logprob: -19.750001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '  ' → logprob: -20.500001907348633
    9. ' ' → logprob: -20.875001907348633
    10. '1' → logprob: -20.875001907348633

Token 2543: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01840019039809704
    2. ':
' → logprob: -5.018400192260742
    3. '                       ' → logprob: -5.268400192260742
    4. ':' → logprob: -5.643400192260742
    5. '               ' → logprob: -6.268400192260742
    6. '                           ' → logprob: -7.768400192260742
    7. ' and' → logprob: -8.143400192260742
    8. '           ' → logprob: -9.268400192260742
    9. '                  ' → logprob: -9.643400192260742
    10. '                    ' → logprob: -10.518400192260742

Token 2544: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10952434688806534
    2. '                       ' → logprob: -2.9845242500305176
    3. '                               ' → logprob: -3.6095242500305176
    4. '                           ' → logprob: -4.359524250030518
    5. '```' → logprob: -4.484524250030518
    6. '               ' → logprob: -6.859524250030518
    7. '                                   ' → logprob: -7.984524250030518
    8. '                                           ' → logprob: -8.359524726867676
    9. '                                       ' → logprob: -8.859524726867676
    10. '``' → logprob: -9.859524726867676

Token 2545: ' temp' (ID: 5484)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5921071767807007
    2. '                       ' → logprob: -1.7171071767807007
    3. '                               ' → logprob: -1.9671071767807007
    4. 'temp' (adapté à ' temp') → logprob: -2.8421072959899902
    5. '```' → logprob: -3.5921072959899902
    6. '                           ' → logprob: -3.9671072959899902
    7. 'if' → logprob: -5.46710729598999
    8. 'for' → logprob: -5.59210729598999
    9. ' temp' → logprob: -5.59210729598999
    10. '                                           ' → logprob: -5.96710729598999

Token 2546: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.422094464302063
    2. '=' → logprob: -1.672094464302063
    3. '                   ' → logprob: -2.0470943450927734
    4. ' +=' → logprob: -4.047094345092773
    5. '                       ' → logprob: -5.297094345092773
    6. ' <=' → logprob: -6.672094345092773
    7. '               ' → logprob: -7.172094345092773
    8. '+=' → logprob: -7.172094345092773
    9. '```' → logprob: -8.047094345092773
    10. '                    ' → logprob: -8.172094345092773

Token 2547: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5759443044662476
    2. ' abs' → logprob: -0.8259443044662476
    3. 'temp' → logprob: -12.575943946838379
    4. ' temp' → logprob: -13.825943946838379
    5. '(abs' → logprob: -15.450943946838379
    6. '.abs' → logprob: -16.325944900512695
    7. '_abs' → logprob: -16.575944900512695
    8. ' ' → logprob: -17.575944900512695
    9. '0' → logprob: -18.075944900512695
    10. '```' → logprob: -18.325944900512695

Token 2548: '(temp' (ID: 19094)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.31371816992759705
    2. '(temp' → logprob: -1.3137181997299194
    3. '(
' → logprob: -7.813718318939209
    4. '(' → logprob: -10.06371784210205
    5. ' temp' → logprob: -12.18871784210205
    6. '$temp' → logprob: -13.81371784210205
    7. '```' → logprob: -13.93871784210205
    8. '_temp' → logprob: -13.93871784210205
    9. '	temp' → logprob: -14.56371784210205
    10. '                   ' → logprob: -15.18871784210205

Token 2549: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1202782690525055
    2. '                   ' → logprob: -2.3702783584594727
    3. ')' → logprob: -3.9952783584594727
    4. '):
' → logprob: -7.245278358459473
    5. '               ' → logprob: -8.120278358459473
    6. '                       ' → logprob: -9.120278358459473
    7. '```' → logprob: -9.120278358459473
    8. ')
' → logprob: -9.370278358459473
    9. ':
' → logprob: -9.995278358459473
    10. '           ' → logprob: -10.495278358459473

Token 2550: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.232419952750206
    2. '```' → logprob: -2.357419967651367
    3. '                   ' → logprob: -2.857419967651367
    4. '                           ' → logprob: -3.232419967651367
    5. '                               ' → logprob: -4.732419967651367
    6. '``' → logprob: -5.982419967651367
    7. '                        ' → logprob: -6.482419967651367
    8. '                    ' → logprob: -7.107419967651367
    9. '                      ' → logprob: -7.482419967651367
    10. '                     ' → logprob: -8.607419967651367

Token 2551: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.08444821089506149
    2. ' B' → logprob: -2.5844480991363525
    3. '```' → logprob: -6.209448337554932
    4. '                   ' → logprob: -6.459448337554932
    5. 'for' → logprob: -6.834448337554932
    6. 'beam' → logprob: -7.959448337554932
    7. 'temp' → logprob: -8.834447860717773
    8. ' for' → logprob: -9.084447860717773
    9. ' beam' → logprob: -9.334447860717773
    10. 'if' → logprob: -10.084447860717773

Token 2552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22349531948566437
    2. '=' → logprob: -1.848495364189148
    3. ' *' → logprob: -3.4734952449798584
    4. '                   ' → logprob: -5.9734954833984375
    5. '<|end|>' → logprob: -6.5984954833984375
    6. ' *=' → logprob: -6.8484954833984375
    7. '[i' → logprob: -7.0984954833984375
    8. '*' → logprob: -7.0984954833984375
    9. ',' → logprob: -7.4734954833984375
    10. '[' → logprob: -7.5984954833984375

Token 2553: ' beam' (ID: 36650)
  Prédit: 'beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beam' → logprob: -0.1269315630197525
    2. ' beam' → logprob: -2.126931667327881
    3. '```' → logprob: -13.751931190490723
    4. ' ' → logprob: -14.251931190490723
    5. 'be' → logprob: -14.626931190490723
    6. '`' → logprob: -14.876931190490723
    7. 'heap' → logprob: -15.376931190490723
    8. '   ' → logprob: -15.376931190490723
    9. 'Beam' → logprob: -15.376931190490723
    10. 'b' → logprob: -15.751931190490723

Token 2554: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.750003814697266
    3. '```' → logprob: -15.000003814697266
    4. 'i' → logprob: -16.250003814697266
    5. '[
' → logprob: -17.500003814697266
    6. '   ' → logprob: -19.000003814697266
    7. '
' → logprob: -19.250003814697266
    8. '(i' → logprob: -19.250003814697266
    9. '`' → logprob: -19.500003814697266
    10. ' i' → logprob: -19.750003814697266

Token 2555: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007238718098960817
    2. '][' → logprob: -7.250723838806152
    3. '[' → logprob: -11.625723838806152
    4. ']' → logprob: -13.375723838806152
    5. 'i' → logprob: -13.625723838806152
    6. '```' → logprob: -14.500723838806152
    7. '[
' → logprob: -14.875723838806152
    8. '   ' → logprob: -15.250723838806152
    9. ' [' → logprob: -15.750723838806152
    10. '
' → logprob: -15.875723838806152

Token 2556: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5277564525604248
    2. '1' → logprob: -0.9027564525604248
    3. '[i' → logprob: -6.027756690979004
    4. ' i' → logprob: -6.277756690979004
    5. '```' → logprob: -8.652756690979004
    6. '[' → logprob: -9.527756690979004
    7. '	i' → logprob: -11.027756690979004
    8. '   ' → logprob: -11.402756690979004
    9. '][' → logprob: -11.652756690979004
    10. ',i' → logprob: -11.902756690979004

Token 2557: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.36164191365242004
    2. ']
' → logprob: -1.2366418838500977
    3. '               ' → logprob: -5.236641883850098
    4. '                       ' → logprob: -5.861641883850098
    5. '           ' → logprob: -6.611641883850098
    6. ':
' → logprob: -6.986641883850098
    7. '```' → logprob: -7.486641883850098
    8. ')
' → logprob: -7.611641883850098
    9. ']:
' → logprob: -7.861641883850098
    10. '       ' → logprob: -7.861641883850098

Token 2558: '                   ' (ID: 699)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.28605151176452637
    2. '                   ' → logprob: -2.1610515117645264
    3. '                       ' → logprob: -2.7860515117645264
    4. '                           ' → logprob: -3.4110515117645264
    5. '                               ' → logprob: -3.4110515117645264
    6. '``' → logprob: -5.6610517501831055
    7. '               ' → logprob: -7.9110517501831055
    8. '                                   ' → logprob: -8.161051750183105
    9. '                                           ' → logprob: -8.286051750183105
    10. '                        ' → logprob: -8.411051750183105

Token 2559: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41190260648727417
    2. ' if' → logprob: -1.161902666091919
    3. '                   ' → logprob: -4.41190242767334
    4. '                       ' → logprob: -5.03690242767334
    5. '```' → logprob: -5.16190242767334
    6. '                           ' → logprob: -8.53690242767334
    7. '                               ' → logprob: -9.53690242767334
    8. '``' → logprob: -10.66190242767334
    9. '               ' → logprob: -10.78690242767334
    10. '                    ' → logprob: -11.41190242767334

Token 2560: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.632760763168335
    2. ' B' → logprob: -0.757760763168335
    3. 'temp' → logprob: -9.132761001586914
    4. ' temp' → logprob: -10.882761001586914
    5. '(B' → logprob: -11.632761001586914
    6. '                   ' → logprob: -12.007761001586914
    7. ' ans' → logprob: -12.507761001586914
    8. '   ' → logprob: -13.382761001586914
    9. '               ' → logprob: -13.507761001586914
    10. 'b' → logprob: -13.632761001586914

Token 2561: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00532957399263978
    2. '*' → logprob: -5.255329608917236
    3. '```' → logprob: -9.505329132080078
    4. ' ' → logprob: -12.380329132080078
    5. ' <' → logprob: -12.630329132080078
    6. ')' → logprob: -13.130329132080078
    7. '[' → logprob: -13.255329132080078
    8. ' *
' → logprob: -13.755329132080078
    9. '                           ' → logprob: -13.755329132080078
    10. '<|end|>' → logprob: -14.005329132080078

Token 2562: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.47411486506462097
    2. ' ans' → logprob: -0.9741148948669434
    3. '(ans' → logprob: -10.724114418029785
    4. 'temp' → logprob: -11.474114418029785
    5. '	ans' → logprob: -12.974114418029785
    6. '_ans' → logprob: -13.724114418029785
    7. '```' → logprob: -14.849114418029785
    8. ' temp' → logprob: -14.974114418029785
    9. 'answer' → logprob: -15.349114418029785
    10. 'anst' → logprob: -15.599114418029785

Token 2563: '[' (ID: 58)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2205154448747635
    2. '[' → logprob: -1.720515489578247
    3. '*' → logprob: -4.095515251159668
    4. '```' → logprob: -6.845515251159668
    5. ' [' → logprob: -7.720515251159668
    6. ' <' → logprob: -8.345515251159668
    7. '   ' → logprob: -9.220515251159668
    8. '           ' → logprob: -9.345515251159668
    9. '*[' → logprob: -9.345515251159668
    10. ' ' → logprob: -9.470515251159668

Token 2564: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017840604996308684
    2. '1' → logprob: -6.376783847808838
    3. '[' → logprob: -10.251784324645996
    4. ' ' → logprob: -10.751784324645996
    5. '   ' → logprob: -12.001784324645996
    6. '
' → logprob: -12.126784324645996
    7. '```' → logprob: -12.126784324645996
    8. 'ans' → logprob: -12.876784324645996
    9. '-' → logprob: -13.876784324645996
    10. '       ' → logprob: -14.376784324645996

Token 2565: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06218267232179642
    2. '<' → logprob: -2.812182664871216
    3. '[' → logprob: -9.187182426452637
    4. ']' → logprob: -10.187182426452637
    5. '```' → logprob: -10.187182426452637
    6. ']<' → logprob: -12.312182426452637
    7. '                           ' → logprob: -12.437182426452637
    8. '                       ' → logprob: -12.812182426452637
    9. '                   ' → logprob: -12.937182426452637
    10. '<p' → logprob: -13.437182426452637

Token 2566: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1426936537027359
    2. '<' → logprob: -2.0176937580108643
    3. '```' → logprob: -12.017693519592285
    4. '[' → logprob: -12.517693519592285
    5. ' <=' → logprob: -12.767693519592285
    6. ' >' → logprob: -13.892693519592285
    7. '<int' → logprob: -14.017693519592285
    8. '<=' → logprob: -14.142693519592285
    9. '>' → logprob: -14.767693519592285
    10. '<n' → logprob: -15.267693519592285

Token 2567: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07890443503856659
    2. ' ans' → logprob: -2.578904390335083
    3. '(ans' → logprob: -11.828904151916504
    4. '	ans' → logprob: -12.078904151916504
    5. '```' → logprob: -14.828904151916504
    6. 'B' → logprob: -14.828904151916504
    7. '_ans' → logprob: -15.078904151916504
    8. 'temp' → logprob: -15.828904151916504
    9. 'beam' → logprob: -16.32890510559082
    10. 'answer' → logprob: -16.57890510559082

Token 2568: '[' (ID: 58)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05141567811369896
    2. '[' → logprob: -3.3014156818389893
    3. '*' → logprob: -4.80141544342041
    4. ' [' → logprob: -6.67641544342041
    5. '```' → logprob: -7.05141544342041
    6. '[
' → logprob: -7.17641544342041
    7. '[i' → logprob: -7.42641544342041
    8. ' ans' → logprob: -7.67641544342041
    9. 'ans' → logprob: -7.80141544342041
    10. ' ' → logprob: -9.17641544342041

Token 2569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009841199032962322
    2. 'ans' → logprob: -4.634840965270996
    3. '   ' → logprob: -10.009840965270996
    4. ' ans' → logprob: -11.134840965270996
    5. ' ' → logprob: -11.259840965270996
    6. 'i' → logprob: -12.759840965270996
    7. '                   ' → logprob: -13.009840965270996
    8. '           ' → logprob: -13.384840965270996
    9. '       ' → logprob: -13.884840965270996
    10. '               ' → logprob: -14.134840965270996

Token 2570: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012836175039410591
    2. '*' → logprob: -4.38783597946167
    3. ']' → logprob: -10.137836456298828
    4. '```' → logprob: -10.137836456298828
    5. '[i' → logprob: -10.262836456298828
    6. '[' → logprob: -10.762836456298828
    7. '                   ' → logprob: -10.887836456298828
    8. ':
' → logprob: -11.012836456298828
    9. ']:
' → logprob: -11.137836456298828
    10. '                       ' → logprob: -11.137836456298828

Token 2571: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.13386255502700806
    2. ' <' → logprob: -3.1338624954223633
    3. '                           ' → logprob: -3.5088624954223633
    4. '                       ' → logprob: -4.008862495422363
    5. ':
' → logprob: -4.383862495422363
    6. '```' → logprob: -5.383862495422363
    7. '                   ' → logprob: -6.008862495422363
    8. '[' → logprob: -6.133862495422363
    9. '*' → logprob: -6.383862495422363
    10. '                        ' → logprob: -6.508862495422363

Token 2572: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.47451043128967285
    2. 'temp' → logprob: -0.9745104312896729
    3. 't' → logprob: -8.224510192871094
    4. ' t' → logprob: -8.849510192871094
    5. ' te' → logprob: -12.474510192871094
    6. ' beam' → logprob: -12.474510192871094
    7. 'tem' → logprob: -12.974510192871094
    8. ' ' → logprob: -13.224510192871094
    9. '
' → logprob: -13.599510192871094
    10. ' temps' → logprob: -13.974510192871094

Token 2573: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32687729597091675
    2. '                       ' → logprob: -1.4518773555755615
    3. ':' → logprob: -3.2018773555755615
    4. '                   ' → logprob: -6.326877117156982
    5. '                           ' → logprob: -6.576877117156982
    6. '                               ' → logprob: -8.45187759399414
    7. '):
' → logprob: -8.82687759399414
    8. '               ' → logprob: -8.95187759399414
    9. '```' → logprob: -8.95187759399414
    10. '                      ' → logprob: -9.57687759399414

Token 2574: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.021354280412197113
    2. '                               ' → logprob: -4.2713541984558105
    3. '                           ' → logprob: -5.2713541984558105
    4. '```' → logprob: -6.8963541984558105
    5. '                   ' → logprob: -8.021354675292969
    6. '                        ' → logprob: -8.646354675292969
    7. '                      ' → logprob: -8.646354675292969
    8. '(' → logprob: -10.146354675292969
    9. '                                       ' → logprob: -10.521354675292969
    10. '                                   ' → logprob: -10.646354675292969

Token 2575: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5771490335464478
    2. 'ans' (adapté à ' ans') → logprob: -0.8271490335464478
    3. '```' → logprob: -6.827148914337158
    4. '                           ' → logprob: -10.077149391174316
    5. '``' → logprob: -10.452149391174316
    6. '	ans' → logprob: -10.827149391174316
    7. '(ans' → logprob: -10.827149391174316
    8. '                               ' → logprob: -12.077149391174316
    9. '_ans' → logprob: -12.952149391174316
    10. '                       ' → logprob: -13.077149391174316

Token 2576: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08902595937252045
    2. ' =' → logprob: -2.4640259742736816
    3. '=
' → logprob: -9.839025497436523
    4. '```' → logprob: -11.339025497436523
    5. '[' → logprob: -11.839025497436523
    6. '=[' → logprob: -12.964025497436523
    7. ')' → logprob: -12.964025497436523
    8. ' =
' → logprob: -13.339025497436523
    9. ']=' → logprob: -13.964025497436523
    10. ']' → logprob: -13.964025497436523

Token 2577: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.06565437465906143
    2. '[' → logprob: -2.9406542778015137
    3. '[t' → logprob: -4.565654277801514
    4. '[temp' → logprob: -8.190654754638672
    5. '[
' → logprob: -11.940654754638672
    6. '[b' → logprob: -12.190654754638672
    7. ' beam' → logprob: -12.440654754638672
    8. ' t' → logprob: -12.565654754638672
    9. '[B' → logprob: -12.815654754638672
    10. '[token' → logprob: -12.815654754638672

Token 2578: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.1160349458805285e-05
    2. ' temp' → logprob: -11.500011444091797
    3. '[temp' → logprob: -14.875011444091797
    4. 't' → logprob: -15.750011444091797
    5. '               ' → logprob: -16.125011444091797
    6. '                   ' → logprob: -16.125011444091797
    7. '$temp' → logprob: -16.375011444091797
    8. 'tmp' → logprob: -16.500011444091797
    9. '(temp' → logprob: -17.125011444091797
    10. '   ' → logprob: -17.250011444091797

Token 2579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.64970643306151e-05
    2. ',
' → logprob: -10.000086784362793
    3. ' ,' → logprob: -11.750086784362793
    4. '                   ' → logprob: -12.250086784362793
    5. '           ' → logprob: -12.375086784362793
    6. '`,' → logprob: -12.375086784362793
    7. '```' → logprob: -12.625086784362793
    8. '[' → logprob: -12.750086784362793
    9. '',' → logprob: -12.875086784362793
    10. '               ' → logprob: -12.875086784362793

Token 2580: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6070599555969238
    2. 'beam' → logprob: -1.1070599555969238
    3. ' beam' → logprob: -2.607059955596924
    4. ' B' → logprob: -2.982059955596924
    5. '                   ' → logprob: -11.107059478759766
    6. ' ' → logprob: -11.732059478759766
    7. 'Beam' → logprob: -11.857059478759766
    8. '               ' → logprob: -11.857059478759766
    9. '```' → logprob: -11.857059478759766
    10. '   ' → logprob: -12.107059478759766

Token 2581: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40333977341651917
    2. ')' → logprob: -1.5283397436141968
    3. '                   ' → logprob: -3.0283398628234863
    4. '                       ' → logprob: -3.7783398628234863
    5. '           ' → logprob: -4.153339862823486
    6. '               ' → logprob: -4.153339862823486
    7. '       ' → logprob: -5.278339862823486
    8. '                           ' → logprob: -5.903339862823486
    9. '```' → logprob: -6.653339862823486
    10. ']
' → logprob: -6.903339862823486

Token 2582: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003419508459046483
    2. '```' → logprob: -5.878419399261475
    3. ')
' → logprob: -8.128419876098633
    4. ')' → logprob: -8.628419876098633
    5. '``' → logprob: -9.753419876098633
    6. '
' → logprob: -10.128419876098633
    7. '(print' → logprob: -11.128419876098633
    8. ' print' → logprob: -11.878419876098633
    9. '<|end|>' → logprob: -12.253419876098633
    10. '(
' → logprob: -12.878419876098633

Token 2583: ' p' (ID: 275)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018577957525849342
    2. '```' → logprob: -4.018578052520752
    3. '``' → logprob: -7.768578052520752
    4. ' print' → logprob: -13.268577575683594
    5. '   ' → logprob: -13.643577575683594
    6. 'for' → logprob: -13.643577575683594
    7. 'ans' → logprob: -14.393577575683594
    8. '
' → logprob: -15.768577575683594
    9. 'if' → logprob: -16.393577575683594
    10. '\' → logprob: -17.018577575683594

Token 2584: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020175233657937497
    2. '=' → logprob: -9.125202178955078
    3. '_r' → logprob: -10.500202178955078
    4. '=r' → logprob: -10.750202178955078
    5. '```' → logprob: -11.250202178955078
    6. ' =' → logprob: -11.375202178955078
    7. ',' → logprob: -12.625202178955078
    8. ',r' → logprob: -12.625202178955078
    9. '[r' → logprob: -13.250202178955078
    10. 'er' → logprob: -13.250202178955078

Token 2585: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.5491004129871726e-05
    2. ' q' → logprob: -10.000045776367188
    3. 'ans' → logprob: -17.000045776367188
    4. '0' → logprob: -19.500045776367188
    5. '	q' → logprob: -19.500045776367188
    6. ' ' → logprob: -19.625045776367188
    7. '
' → logprob: -19.750045776367188
    8. '   ' → logprob: -20.000045776367188
    9. ''q' → logprob: -20.375045776367188
    10. '[q' → logprob: -20.875045776367188

Token 2586: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0026897944044321775
    2. ' =' → logprob: -6.252689838409424
    3. ',' → logprob: -8.252689361572266
    4. '=p' → logprob: -8.377689361572266
    5. '=
' → logprob: -8.752689361572266
    6. '<|end|>' → logprob: -10.002689361572266
    7. '=True' → logprob: -11.127689361572266
    8. '[' → logprob: -11.627689361572266
    9. ',p' → logprob: -11.752689361572266
    10. '   ' → logprob: -11.752689361572266

Token 2587: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0003963569179177284
    2. ' ans' → logprob: -7.875396251678467
    3. '(ans' → logprob: -11.250396728515625
    4. '   ' → logprob: -13.250396728515625
    5. '0' → logprob: -14.625396728515625
    6. '	ans' → logprob: -15.000396728515625
    7. '_ans' → logprob: -15.500396728515625
    8. '
' → logprob: -16.000396728515625
    9. 'answer' → logprob: -16.250396728515625
    10. '1' → logprob: -17.000396728515625

Token 2588: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0689622238278389
    2. '[' → logprob: -2.943962335586548
    3. ' =' → logprob: -5.068962097167969
    4. '/' → logprob: -5.443962097167969
    5. '```' → logprob: -7.068962097167969
    6. ',' → logprob: -7.568962097167969
    7. '=
' → logprob: -7.693962097167969
    8. '/=' → logprob: -8.193962097167969
    9. '[p' → logprob: -8.318962097167969
    10. '=p' → logprob: -8.818962097167969

Token 2589: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23734864592552185
    2. 'if' → logprob: -2.6123485565185547
    3. '
' → logprob: -2.8623485565185547
    4. '#' → logprob: -3.7373485565185547
    5. '//' → logprob: -3.7373485565185547
    6. '```' → logprob: -3.9873485565185547
    7. '   ' → logprob: -5.612348556518555
    8. 'p' → logprob: -5.987348556518555
    9. '``' → logprob: -5.987348556518555
    10. '=' → logprob: -5.987348556518555

Token 2590: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3279230296611786
    2. 'from' → logprob: -1.452923059463501
    3. 'p' → logprob: -4.202922821044922
    4. 'import' → logprob: -4.452922821044922
    5. 'g' → logprob: -4.452922821044922
    6. 'if' → logprob: -5.827922821044922
    7. '```' → logprob: -6.452922821044922
    8. '   ' → logprob: -6.452922821044922
    9. '
' → logprob: -7.452922821044922
    10. 'q' → logprob: -8.202922821044922

Token 2591: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5240225195884705
    2. '=' → logprob: -1.0240225791931152
    3. '=res' → logprob: -4.399022579193115
    4. 'ult' → logprob: -4.649022579193115
    5. '```' → logprob: -5.149022579193115
    6. 's' → logprob: -5.524022579193115
    7. 'ults' → logprob: -5.649022579193115
    8. 'res' → logprob: -6.024022579193115
    9. '=[]
' → logprob: -6.149022579193115
    10. '=p' → logprob: -6.274022579193115

Token 2592: ' [' (ID: 723)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03537089005112648
    2. 'f' → logprob: -3.4103708267211914
    3. 'str' → logprob: -7.160370826721191
    4. ' p' → logprob: -7.410370826721191
    5. '(p' → logprob: -8.535370826721191
    6. '(f' → logprob: -10.160370826721191
    7. ' f' → logprob: -10.285370826721191
    8. '"{' → logprob: -10.410370826721191
    9. 'float' → logprob: -12.035370826721191
    10. '"' → logprob: -12.035370826721191

Token 2593: 'q' (ID: 80)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005755288060754538
    2. 'str' → logprob: -5.380755424499512
    3. ''p' → logprob: -7.255755424499512
    4. ''' → logprob: -8.880755424499512
    5. '"/' → logprob: -9.630755424499512
    6. '   ' → logprob: -9.755755424499512
    7. '(p' → logprob: -10.255755424499512
    8. ''-' → logprob: -10.755755424499512
    9. ' p' → logprob: -11.380755424499512
    10. '0' → logprob: -11.380755424499512

Token 2594: ' *' (ID: 425)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.49702614545822144
    2. ',' → logprob: -1.1220262050628662
    3. '/
' → logprob: -4.122025966644287
    4. ' /' → logprob: -4.247025966644287
    5. ',
' → logprob: -4.497025966644287
    6. ']' → logprob: -5.247025966644287
    7. '*' → logprob: -5.497025966644287
    8. '[' → logprob: -5.497025966644287
    9. '/p' → logprob: -6.122025966644287
    10. '//' → logprob: -6.247025966644287

Token 2595: ' m' (ID: 284)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0033700885251164436
    2. 'm' → logprob: -5.87837028503418
    3. 'N' → logprob: -8.75337028503418
    4. '(p' → logprob: -8.87837028503418
    5. ' p' → logprob: -9.50337028503418
    6. '1' → logprob: -10.25337028503418
    7. '(' → logprob: -10.75337028503418
    8. 'start' → logprob: -10.87837028503418
    9. '2' → logprob: -11.00337028503418
    10. '-' → logprob: -11.25337028503418

Token 2596: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.30284130573272705
    2. '-' → logprob: -1.427841305732727
    3. '-p' → logprob: -3.9278411865234375
    4. '+' → logprob: -6.5528411865234375
    5. ',' → logprob: -9.302841186523438
    6. ' +' → logprob: -9.302841186523438
    7. '```' → logprob: -10.052841186523438
    8. '+p' → logprob: -10.177841186523438
    9. 'p' → logprob: -10.677841186523438
    10. ' p' → logprob: -11.302841186523438

Token 2597: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.013584381900727749
    2. ' p' → logprob: -4.388584613800049
    3. ''' → logprob: -7.138584613800049
    4. '"' → logprob: -9.63858413696289
    5. 'r' → logprob: -9.63858413696289
    6. ''p' → logprob: -10.01358413696289
    7. '(p' → logprob: -10.38858413696289
    8. ' (' → logprob: -10.88858413696289
    9. '1' → logprob: -11.51358413696289
    10. 'q' → logprob: -11.76358413696289

Token 2598: ',' (ID: 11)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6381835341453552
    2. ' //' → logprob: -1.13818359375
    3. ',' → logprob: -2.01318359375
    4. ']' → logprob: -4.51318359375
    5. ',
' → logprob: -6.51318359375
    6. ' /' → logprob: -6.76318359375
    7. ' ,' → logprob: -7.26318359375
    8. ',//' → logprob: -7.26318359375
    9. '```' → logprob: -7.76318359375
    10. '   ' → logprob: -7.88818359375

Token 2599: ' N' (ID: 478)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7537864446640015
    2. 'q' → logprob: -0.7537864446640015
    3. 'm' → logprob: -3.753786563873291
    4. ' p' → logprob: -4.128786563873291
    5. ' q' → logprob: -4.753786563873291
    6. ''' → logprob: -5.628786563873291
    7. '"' → logprob: -5.753786563873291
    8. ' m' → logprob: -7.003786563873291
    9. ''q' → logprob: -7.378786563873291
    10. '0' → logprob: -7.503786563873291

Token 2600: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2946876287460327
    2. ',' → logprob: -2.0446877479553223
    3. ')' → logprob: -3.1696877479553223
    4. '-' → logprob: -3.5446877479553223
    5. ' -' → logprob: -4.044687747955322
    6. '*' → logprob: -4.544687747955322
    7. '+' → logprob: -4.919687747955322
    8. ']
' → logprob: -5.294687747955322
    9. ' ]' → logprob: -5.669687747955322
    10. ' *' → logprob: -5.919687747955322

Token 2601: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06526412814855576
    2. 'p' → logprob: -2.8152642250061035
    3. 'm' → logprob: -5.9402642250061035
    4. ' q' → logprob: -8.190263748168945
    5. '(q' → logprob: -8.690263748168945
    6. '(p' → logprob: -9.190263748168945
    7. '(m' → logprob: -10.440263748168945
    8. ' p' → logprob: -10.815263748168945
    9. '1' → logprob: -11.315263748168945
    10. 'ans' → logprob: -11.565263748168945

Token 2602: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6204427480697632
    2. '-' → logprob: -1.2454427480697632
    3. ' -' → logprob: -1.9954427480697632
    4. ']
' → logprob: -4.120442867279053
    5. ')' → logprob: -4.620442867279053
    6. '+' → logprob: -5.370442867279053
    7. ' ]' → logprob: -6.245442867279053
    8. '//' → logprob: -6.370442867279053
    9. '   ' → logprob: -7.370442867279053
    10. '```' → logprob: -7.495442867279053

Token 2603: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3516630232334137
    2. ')
' → logprob: -2.351663112640381
    3. '//' → logprob: -3.351663112640381
    4. 'print' → logprob: -3.351663112640381
    5. 'for' → logprob: -3.851663112640381
    6. 'p' → logprob: -4.101663112640381
    7. 'res' → logprob: -4.351663112640381
    8. '   ' → logprob: -4.351663112640381
    9. '```' → logprob: -4.351663112640381
    10. '[' → logprob: -4.976663112640381

Token 2604: ' from' (ID: 591)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.46472784876823425
    2. 'res' → logprob: -2.8397278785705566
    3. ')' → logprob: -2.9647278785705566
    4. 'print' → logprob: -3.2147278785705566
    5. '[' → logprob: -3.2147278785705566
    6. 'for' → logprob: -3.7147278785705566
    7. '   ' → logprob: -3.8397278785705566
    8. '``' → logprob: -3.9647278785705566
    9. '+
' → logprob: -3.9647278785705566
    10. '[
' → logprob: -4.089727878570557

Token 2605: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2014412134885788
    2. 'fra' → logprob: -1.7014411687850952
    3. ' fractions' → logprob: -10.701440811157227
    4. ' math' → logprob: -12.326440811157227
    5. 'cmath' → logprob: -16.076440811157227
    6. '_math' → logprob: -16.076440811157227
    7. '```' → logprob: -16.201440811157227
    8. 'heap' → logprob: -16.326440811157227
    9. 'Fra' → logprob: -16.326440811157227
    10. '_fraction' → logprob: -16.576440811157227

Token 2606: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0055231922306120396
    2. 'from' → logprob: -6.130523204803467
    3. ' import' → logprob: -6.380523204803467
    4. '```' → logprob: -7.005523204803467
    5. '/math' → logprob: -8.380522727966309
    6. '
' → logprob: -9.630522727966309
    7. '/' → logprob: -10.130522727966309
    8. 'math' → logprob: -10.255522727966309
    9. '	import' → logprob: -10.380522727966309
    10. '.math' → logprob: -10.380522727966309

Token 2607: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.000700045726262033
    2. ' gcd' → logprob: -7.500699996948242
    3. 'math' → logprob: -8.875699996948242
    4. 'import' → logprob: -12.125699996948242
    5. '```' → logprob: -13.750699996948242
    6. 'fra' → logprob: -15.125699996948242
    7. '_g' → logprob: -15.625699996948242
    8. '__' → logprob: -16.250699996948242
    9. '.g' → logprob: -16.500699996948242
    10. '
' → logprob: -16.750699996948242

Token 2608: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.018126532435417175
    2. '   ' → logprob: -4.643126487731934
    3. '
' → logprob: -6.018126487731934
    4. ',' → logprob: -6.143126487731934
    5. ',
' → logprob: -7.018126487731934
    6. 'p' → logprob: -7.268126487731934
    7. 'res' → logprob: -7.643126487731934
    8. '```' → logprob: -7.643126487731934
    9. '\' → logprob: -8.393126487731934
    10. '`' → logprob: -8.893126487731934

Token 2609: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.003939363639801741
    2. '   ' → logprob: -6.003939151763916
    3. 'd' → logprob: -6.628939151763916
    4. '
' → logprob: -10.253939628601074
    5. '```' → logprob: -10.878939628601074
    6. 'res' → logprob: -11.253939628601074
    7. '/g' → logprob: -11.253939628601074
    8. '_g' → logprob: -11.378939628601074
    9. 'r' → logprob: -11.503939628601074
    10. ' g' → logprob: -11.753939628601074

Token 2610: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.00018196819291915745
    2. 'd' → logprob: -9.750182151794434
    3. '_g' → logprob: -9.750182151794434
    4. '   ' → logprob: -10.125182151794434
    5. '
' → logprob: -10.875182151794434
    6. '```' → logprob: -12.625182151794434
    7. ' g' → logprob: -13.500182151794434
    8. 'gg' → logprob: -14.750182151794434
    9. '``' → logprob: -15.500182151794434
    10. '    
' → logprob: -15.625182151794434

Token 2611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18982601165771484
    2. '=g' → logprob: -1.9398260116577148
    3. ' =' → logprob: -4.189826011657715
    4. 'cd' → logprob: -4.689826011657715
    5. '=p' → logprob: -5.814826011657715
    6. '=
' → logprob: -6.814826011657715
    7. 'g' → logprob: -7.939826011657715
    8. '```' → logprob: -8.689826011657715
    9. '=res' → logprob: -9.689826011657715
    10. 'p' → logprob: -10.189826011657715

Token 2612: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.000916935910936445
    2. ' gcd' → logprob: -7.000916957855225
    3. '_g' → logprob: -13.375916481018066
    4. 'math' → logprob: -13.500916481018066
    5. '	g' → logprob: -14.000916481018066
    6. '```' → logprob: -14.625916481018066
    7. 'import' → logprob: -14.750916481018066
    8. '-g' → logprob: -15.000916481018066
    9. '   ' → logprob: -15.375916481018066
    10. ' g' → logprob: -16.000917434692383

Token 2613: '(res' (ID: 8331)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.14641651511192322
    2. '(res' → logprob: -2.646416425704956
    3. 'res' → logprob: -2.896416425704956
    4. '(g' → logprob: -5.396416664123535
    5. 'p' → logprob: -5.646416664123535
    6. 'g' → logprob: -6.271416664123535
    7. '(m' → logprob: -9.771416664123535
    8. '(
' → logprob: -10.021416664123535
    9. '(' → logprob: -12.021416664123535
    10. ' res' → logprob: -12.896416664123535

Token 2614: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07290367037057877
    2. 'p' → logprob: -3.322903633117676
    3. 'g' → logprob: -4.197903633117676
    4. '(p' → logprob: -5.072903633117676
    5. '(g' → logprob: -6.072903633117676
    6. '[g' → logprob: -6.072903633117676
    7. 'res' → logprob: -6.322903633117676
    8. '0' → logprob: -6.447903633117676
    9. '[p' → logprob: -6.697903633117676
    10. '(' → logprob: -6.822903633117676

Token 2615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002270198310725391
    2. '1' → logprob: -9.250226974487305
    3. 'g' → logprob: -9.500226974487305
    4. 'p' → logprob: -10.000226974487305
    5. '[' → logprob: -11.875226974487305
    6. '
' → logprob: -13.375226974487305
    7. '```' → logprob: -14.250226974487305
    8. '-' → logprob: -15.000226974487305
    9. 'res' → logprob: -15.125226974487305
    10. '(' → logprob: -15.500226974487305

Token 2616: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03025255911052227
    2. ',res' → logprob: -3.530252456665039
    3. ',
' → logprob: -8.155252456665039
    4. 'res' → logprob: -9.280252456665039
    5. '[' → logprob: -9.405252456665039
    6. ',g' → logprob: -10.905252456665039
    7. '```' → logprob: -11.905252456665039
    8. ' ,' → logprob: -12.155252456665039
    9. 'g' → logprob: -12.780252456665039
    10. '(res' → logprob: -13.405252456665039

Token 2617: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0280383548888494e-06
    2. ' res' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '	res' → logprob: -21.250001907348633
    5. '       ' → logprob: -21.500001907348633
    6. '```' → logprob: -21.875001907348633
    7. '  ' → logprob: -22.125001907348633
    8. '    ' → logprob: -22.250001907348633
    9. '$res' → logprob: -22.875001907348633
    10. '(res' → logprob: -23.000001907348633

Token 2618: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47435569763183594
    2. '[' → logprob: -0.9743556976318359
    3. '[
' → logprob: -8.724355697631836
    4. '0' → logprob: -10.349355697631836
    5. ',' → logprob: -11.099355697631836
    6. '])
' → logprob: -11.224355697631836
    7. '```' → logprob: -11.224355697631836
    8. ']' → logprob: -11.349355697631836
    9. ']
' → logprob: -11.349355697631836
    10. '-' → logprob: -12.224355697631836

Token 2619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005929743405431509
    2. '0' → logprob: -5.130929946899414
    3. '   ' → logprob: -14.505929946899414
    4. '```' → logprob: -15.130929946899414
    5. '-' → logprob: -15.630929946899414
    6. '[' → logprob: -16.505929946899414
    7. ' ' → logprob: -16.755929946899414
    8. ']' → logprob: -17.630929946899414
    9. '``' → logprob: -17.755929946899414
    10. '
' → logprob: -17.755929946899414

Token 2620: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2534267008304596
    2. ')' → logprob: -1.5034266710281372
    3. '])
' → logprob: -7.253426551818848
    4. '])' → logprob: -7.503426551818848
    5. ']' → logprob: -9.003426551818848
    6. ']
' → logprob: -10.128426551818848
    7. ')]' → logprob: -10.503426551818848
    8. ')`
' → logprob: -11.253426551818848
    9. ')]
' → logprob: -11.878426551818848
    10. '```' → logprob: -12.128426551818848

Token 2621: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005559944082051516
    2. '```' → logprob: -5.505559921264648
    3. 'p' → logprob: -7.630559921264648
    4. '``' → logprob: -7.880559921264648
    5. 'for' → logprob: -8.130559921264648
    6. '   ' → logprob: -8.130559921264648
    7. '`' → logprob: -11.380559921264648
    8. ' res' → logprob: -12.255559921264648
    9. 'return' → logprob: -12.755559921264648
    10. '
' → logprob: -12.880559921264648

Token 2622: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07103472948074341
    2. 'for' → logprob: -3.0710346698760986
    3. '```' → logprob: -4.071034908294678
    4. '   ' → logprob: -6.071034908294678
    5. '``' → logprob: -6.446034908294678
    6. 'p' → logprob: -7.321034908294678
    7. '`' → logprob: -8.32103443145752
    8. 'g' → logprob: -8.82103443145752
    9. '[' → logprob: -9.32103443145752
    10. ' res' → logprob: -10.07103443145752

Token 2623: ' (' (ID: 350)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.014164566993713379
    2. ' res' → logprob: -4.264164447784424
    3. '(res' → logprob: -13.764164924621582
    4. '   ' → logprob: -17.264163970947266
    5. '	res' → logprob: -17.639163970947266
    6. '```' → logprob: -18.389163970947266
    7. ' (' → logprob: -18.889163970947266
    8. ' ' → logprob: -20.639163970947266
    9. '[' → logprob: -20.639163970947266
    10. '_res' → logprob: -21.139163970947266

Token 2624: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -7.896309739408025e-07
    2. ' res' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.875
    4. '(res' → logprob: -18.125
    5. '	res' → logprob: -20.25
    6. '
' → logprob: -21.5
    7. '_res' → logprob: -21.875
    8. '```' → logprob: -22.625
    9. 'r' → logprob: -23.125
    10. 'g' → logprob: -23.125

Token 2625: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.255003958940506
    2. '[g' → logprob: -1.5050039291381836
    3. '[
' → logprob: -5.880003929138184
    4. ')[' → logprob: -9.255003929138184
    5. '   ' → logprob: -10.380003929138184
    6. '[m' → logprob: -10.380003929138184
    7. '0' → logprob: -10.505003929138184
    8. '][' → logprob: -10.755003929138184
    9. '[p' → logprob: -10.880003929138184
    10. ')' → logprob: -11.255003929138184

Token 2626: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.0
    3. '[' → logprob: -16.375
    4. '   ' → logprob: -17.875
    5. ')' → logprob: -18.625
    6. '#' → logprob: -18.875
    7. '1' → logprob: -18.875
    8. '
' → logprob: -19.5
    9. '```' → logprob: -19.625
    10. '2' → logprob: -19.875

Token 2627: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2922644019126892
    2. ' //' → logprob: -1.792264461517334
    3. '//' → logprob: -2.542264461517334
    4. '   ' → logprob: -6.042264461517334
    5. ',
' → logprob: -6.417264461517334
    6. ')' → logprob: -6.667264461517334
    7. ' ,' → logprob: -6.792264461517334
    8. 'g' → logprob: -7.917264461517334
    9. ' ' → logprob: -8.042263984680176
    10. ',//' → logprob: -8.042263984680176

Token 2628: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5294498205184937
    2. '//' → logprob: -0.9044498205184937
    3. ',' → logprob: -5.529449939727783
    4. '```' → logprob: -7.029449939727783
    5. '   ' → logprob: -7.654449939727783
    6. ')' → logprob: -7.904449939727783
    7. ' ' → logprob: -8.654449462890625
    8. ' ' → logprob: -9.779449462890625
    9. '//
' → logprob: -9.779449462890625
    10. ')//' → logprob: -9.904449462890625

Token 2629: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.9361264946837764e-07
    2. ' g' → logprob: -16.625
    3. '	g' → logprob: -20.375
    4. '
' → logprob: -20.875
    5. '=g' → logprob: -21.375
    6. '[g' → logprob: -21.625
    7. '_g' → logprob: -21.75
    8. '#g' → logprob: -22.0
    9. '```' → logprob: -22.25
    10. ''g' → logprob: -22.875

Token 2630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037969883996993303
    2. ',
' → logprob: -5.8787970542907715
    3. ')' → logprob: -7.3787970542907715
    4. '```' → logprob: -9.003796577453613
    5. ' ,' → logprob: -9.253796577453613
    6. ',res' → logprob: -9.753796577453613
    7. '),' → logprob: -10.628796577453613
    8. '   ' → logprob: -11.003796577453613
    9. ',//' → logprob: -11.128796577453613
    10. '//' → logprob: -11.753796577453613

Token 2631: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0004306692280806601
    2. ' res' → logprob: -7.750430583953857
    3. 'g' → logprob: -22.125431060791016
    4. '```' → logprob: -22.500431060791016
    5. '(res' → logprob: -23.000431060791016
    6. '
' → logprob: -23.125431060791016
    7. '	res' → logprob: -23.500431060791016
    8. '_res' → logprob: -24.125431060791016
    9. '$res' → logprob: -24.500431060791016
    10. ' ' → logprob: -24.750431060791016

Token 2632: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '[
' → logprob: -14.625000953674316
    3. '1' → logprob: -14.875000953674316
    4. '```' → logprob: -17.25
    5. '
' → logprob: -18.75
    6. '   ' → logprob: -20.125
    7. 'g' → logprob: -20.625
    8. '``' → logprob: -21.5
    9. '	' → logprob: -21.75
    10. ')[' → logprob: -21.875

Token 2633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -17.875
    3. '   ' → logprob: -19.375
    4. ' ' → logprob: -19.5
    5. '```' → logprob: -19.625
    6. '[' → logprob: -20.0
    7. 'g' → logprob: -20.25
    8. '１' → logprob: -21.375
    9. '{' → logprob: -21.875
    10. '  ' → logprob: -22.375

Token 2634: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5893915891647339
    2. '])' → logprob: -1.3393915891647339
    3. '//' → logprob: -2.3393917083740234
    4. ']' → logprob: -2.4643917083740234
    5. '[' → logprob: -6.839391708374023
    6. ' //' → logprob: -8.089391708374023
    7. '   ' → logprob: -9.464391708374023
    8. '<|end|>' → logprob: -9.714391708374023
    9. '```' → logprob: -9.964391708374023
    10. '#' → logprob: -9.964391708374023

Token 2635: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5353760719299316
    2. ')' → logprob: -0.9103760719299316
    3. ' //' → logprob: -4.660376071929932
    4. '```' → logprob: -7.285376071929932
    5. ']' → logprob: -7.660376071929932
    6. 'g' → logprob: -7.785376071929932
    7. ')//' → logprob: -7.785376071929932
    8. '[g' → logprob: -8.660375595092773
    9. ')
' → logprob: -8.785375595092773
    10. '[' → logprob: -9.160375595092773

Token 2636: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: 0.0
    2. ' g' → logprob: -16.75
    3. '
' → logprob: -21.375
    4. '```' → logprob: -22.25
    5. '	g' → logprob: -23.25
    6. '   ' → logprob: -24.0
    7. '_g' → logprob: -25.125
    8. '[g' → logprob: -25.625
    9. ''g' → logprob: -26.125
    10. 'res' → logprob: -26.5

Token 2637: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -15.250000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '```' → logprob: -15.500000953674316
    5. '`)' → logprob: -15.750000953674316
    6. '   ' → logprob: -16.125001907348633
    7. ')#' → logprob: -16.250001907348633
    8. ')`' → logprob: -16.625001907348633
    9. '<|end|>' → logprob: -17.125001907348633
    10. ')return' → logprob: -17.625001907348633

Token 2638: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0035000499337911606
    2. ')' → logprob: -6.378499984741211
    3. 'solve' → logprob: -6.753499984741211
    4. 'result' → logprob: -7.628499984741211
    5. 'res' → logprob: -10.003499984741211
    6. '```' → logprob: -10.628499984741211
    7. 'for' → logprob: -10.753499984741211
    8. 'output' → logprob: -11.753499984741211
    9. 'answer' → logprob: -11.878499984741211
    10. '#' → logprob: -12.253499984741211

Token 2639: ' App' (ID: 2583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006846087984740734
    2. 'result' → logprob: -5.006845951080322
    3. 'p' → logprob: -9.50684642791748
    4. 'output' → logprob: -10.38184642791748
    5. 'res' → logprob: -11.00684642791748
    6. 'r' → logprob: -12.50684642791748
    7. 'if' → logprob: -13.25684642791748
    8. 'pr' → logprob: -14.13184642791748
    9. '(p' → logprob: -14.63184642791748
    10. 'ans' → logprob: -15.13184642791748

Token 2640: 'el' (ID: 296)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0593876838684082
    2. 'rove' → logprob: -1.1843876838684082
    3. 'ly' → logprob: -2.559387683868408
    4. '=' → logprob: -2.809387683868408
    5. 'solve' → logprob: -2.809387683868408
    6. 'end' → logprob: -3.559387683868408
    7. 's' → logprob: -3.934387683868408
    8. '```' → logprob: -3.934387683868408
    9. 'e' → logprob: -4.059387683868408
    10. '#' → logprob: -4.059387683868408

Token 2641: ' principal' (ID: 10589)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023262908216565847
    2. 'result' → logprob: -6.127326488494873
    3. 'solve' → logprob: -9.377326011657715
    4. 'res' → logprob: -10.377326011657715
    5. '```' → logprob: -12.252326011657715
    6. 'output' → logprob: -12.627326011657715
    7. 'solution' → logprob: -12.752326011657715
    8. 'pr' → logprob: -12.877326011657715
    9. '(print' → logprob: -12.877326011657715
    10. 'for' → logprob: -13.127326011657715

Token 2642: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007127957884222269
    2. 'result' → logprob: -5.00712776184082
    3. 'res' → logprob: -8.63212776184082
    4. 'if' → logprob: -8.63212776184082
    5. 'ans' → logprob: -10.00712776184082
    6. '```' → logprob: -12.75712776184082
    7. 'answer' → logprob: -12.88212776184082
    8. 'output' → logprob: -13.13212776184082
    9. '
' → logprob: -13.25712776184082
    10. 'r' → logprob: -14.50712776184082

Token 2643: 'bon' (ID: 6865)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04806192219257355
    2. ')' → logprob: -3.6730618476867676
    3. ')
' → logprob: -4.548061847686768
    4. 'if' → logprob: -4.798061847686768
    5. '):
' → logprob: -6.673061847686768
    6. '):' → logprob: -7.798061847686768
    7. 'res' → logprob: -8.423062324523926
    8. 'p' → logprob: -8.798062324523926
    9. 'result' → logprob: -8.923062324523926
    10. '()
' → logprob: -8.923062324523926

Token 2644: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0704164057970047
    2. '):
' → logprob: -3.5704164505004883
    3. ')
' → logprob: -3.9454164505004883
    4. '):' → logprob: -4.445416450500488
    5. 'print' → logprob: -6.070416450500488
    6. '()
' → logprob: -6.445416450500488
    7. '()' → logprob: -6.695416450500488
    8. '())
' → logprob: -6.820416450500488
    9. '():
' → logprob: -7.570416450500488
    10. '())' → logprob: -7.820416450500488

Token 2645: ' un' (ID: 537)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002027731155976653
    2. 'p' → logprob: -7.12702751159668
    3. ')' → logprob: -7.37702751159668
    4. ')
' → logprob: -8.12702751159668
    5. '*' → logprob: -8.87702751159668
    6. '```' → logprob: -10.00202751159668
    7. '
' → logprob: -10.62702751159668
    8. 'res' → logprob: -10.87702751159668
    9. '*p' → logprob: -11.37702751159668
    10. 'm' → logprob: -11.50202751159668

Token 2646: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10068094730377197
    2. '()' → logprob: -3.3506808280944824
    3. ')
' → logprob: -4.100680828094482
    4. '()
' → logprob: -4.350680828094482
    5. '```' → logprob: -5.600680828094482
    6. '=' → logprob: -5.725680828094482
    7. '`' → logprob: -5.850680828094482
    8. '")' → logprob: -5.850680828094482
    9. '(
' → logprob: -6.350680828094482
    10. ':' → logprob: -6.475680828094482

Token 2647: ' classique' (ID: 76895)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.5059762001037598
    2. 'print' → logprob: -1.6309762001037598
    3. '()' → logprob: -2.0059762001037598
    4. ')' → logprob: -3.7559762001037598
    5. '(' → logprob: -3.8809762001037598
    6. '()
' → logprob: -4.50597620010376
    7. '(s' → logprob: -5.63097620010376
    8. '())' → logprob: -6.13097620010376
    9. ')(' → logprob: -6.25597620010376
    10. '```' → logprob: -7.00597620010376

Token 2648: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06385386735200882
    2. ')' → logprob: -3.6888539791107178
    3. '()' → logprob: -3.9388539791107178
    4. '()
' → logprob: -4.438853740692139
    5. '(print' → logprob: -5.938853740692139
    6. ')
' → logprob: -6.688853740692139
    7. '())
' → logprob: -7.438853740692139
    8. '())' → logprob: -7.813853740692139
    9. '```' → logprob: -8.313854217529297
    10. '();' → logprob: -9.063854217529297

Token 2649: ' la' (ID: 557)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7768669128417969
    2. 'la' → logprob: -1.9018669128417969
    3. '#' → logprob: -2.276866912841797
    4. ')' → logprob: -2.651866912841797
    5. '```' → logprob: -2.901866912841797
    6. ' la' → logprob: -3.651866912841797
    7. 'solve' → logprob: -3.651866912841797
    8. 'print' → logprob: -3.901866912841797
    9. ')
' → logprob: -3.901866912841797
    10. 'f' → logprob: -4.276866912841797

Token 2650: ' fin' (ID: 2131)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7232530117034912
    2. 'fin' → logprob: -1.2232530117034912
    3. '```' → logprob: -1.9732530117034912
    4. 'finish' → logprob: -3.223253011703491
    5. 'print' → logprob: -4.22325325012207
    6. 'done' → logprob: -4.84825325012207
    7. 'stdout' → logprob: -5.59825325012207
    8. 'main' → logprob: -6.09825325012207
    9. '#' → logprob: -6.34825325012207
    10. 'bottom' → logprob: -6.59825325012207

Token 2651: ')
' (ID: 446)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1333221197128296
    2. '()
' → logprob: -1.2583221197128296
    3. '()' → logprob: -1.6333221197128296
    4. ')' → logprob: -2.258322238922119
    5. ')
' → logprob: -2.758322238922119
    6. '())
' → logprob: -3.633322238922119
    7. '())' → logprob: -6.758322238922119
    8. '(print' → logprob: -7.133322238922119
    9. '()

' → logprob: -7.383322238922119
    10. '```' → logprob: -7.508322238922119

Token 2652: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016281676944345236
    2. 'result' → logprob: -6.501628398895264
    3. 'res' → logprob: -9.751627922058105
    4. '```' → logprob: -9.876627922058105
    5. 'pr' → logprob: -11.626627922058105
    6. 'r' → logprob: -12.376627922058105
    7. 'ans' → logprob: -13.251627922058105
    8. '``' → logprob: -15.126627922058105
    9. 'ret' → logprob: -15.501627922058105
    10. 'output' → logprob: -15.626627922058105

Token 2653: '(*' (ID: 9000)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.39280492067337036
    2. '(*' → logprob: -1.1428048610687256
    3. '(' → logprob: -5.267805099487305
    4. 'solve' → logprob: -7.642805099487305
    5. '(tuple' → logprob: -9.267805099487305
    6. '(solution' → logprob: -10.517805099487305
    7. '(*(' → logprob: -10.517805099487305
    8. '((*' → logprob: -10.642805099487305
    9. '(sol' → logprob: -10.892805099487305
    10. '()' → logprob: -10.892805099487305

Token 2654: 'solve' (ID: 117273)
  Prédit: 'solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -7.896309739408025e-07
    2. ' solve' → logprob: -14.625000953674316
    3. ')' → logprob: -15.875000953674316
    4. 'resolve' → logprob: -16.125
    5. '.solve' → logprob: -20.25
    6. 'list' → logprob: -21.125
    7. '
' → logprob: -21.375
    8. 'save' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. 'tuple' → logprob: -22.0

Token 2655: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.375
    3. '())' → logprob: -17.5
    4. '２' → logprob: -20.375
    5. '_' → logprob: -21.0
    6. ')' → logprob: -21.5
    7. '۲' → logprob: -21.875
    8. '(' → logprob: -23.25
    9. '₂' → logprob: -23.375
    10. ' ' → logprob: -23.625

Token 2656: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00020425561524461955
    2. '()' → logprob: -8.500204086303711
    3. '(),' → logprob: -14.875204086303711
    4. '();)' → logprob: -15.375204086303711
    5. ')' → logprob: -16.00020408630371
    6. ' ())' → logprob: -16.87520408630371
    7. '())
' → logprob: -17.37520408630371
    8. '()]' → logprob: -17.87520408630371
    9. '()))' → logprob: -18.25020408630371
    10. '())

' → logprob: -18.62520408630371


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2654
Tokens correctement prédits (1ère position, stricte): 1030
Tokens correctement prédits (1ère position, avec adaptation): 1152
Tokens correctement prédits (top 10): 2222
Précision stricte (1ère position): 38.81%
Précision adaptée (1ère position): 43.41%
Précision (top 10): 83.72%
================================================================================
