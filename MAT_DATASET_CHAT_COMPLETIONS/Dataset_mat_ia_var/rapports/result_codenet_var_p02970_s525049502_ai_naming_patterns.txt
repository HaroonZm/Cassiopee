================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
num_initial, step_distance = map(int, input().split())

counter_steps = 0
while num_initial > 0:
    num_initial -= (2 * step_distance + 1)
    counter_steps += 1

print(counter_steps)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'num' (ID: 4571)
  → Token d'amorce (pas de prédiction)

Token 1: '_initial' (ID: 45740)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' step' (ID: 5983)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.077575922012329
    2. '_num' → logprob: -1.702575922012329
    3. 'num' → logprob: -1.702575922012329
    4. '=' → logprob: -2.952575922012329
    5. ' _' → logprob: -3.077575922012329
    6. ' num' → logprob: -3.202575922012329
    7. ' ' → logprob: -3.827575922012329
    8. '_max' → logprob: -4.32757568359375
    9. '_steps' → logprob: -4.32757568359375
    10. '_size' → logprob: -4.57757568359375

Token 4: '_distance' (ID: 45537)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30222538113594055
    2. '_' → logprob: -1.5522253513336182
    3. ',' → logprob: -3.427225351333618
    4. ' =' → logprob: -5.052225589752197
    5. '*' → logprob: -5.677225589752197
    6. '+' → logprob: -5.927225589752197
    7. '```' → logprob: -6.302225589752197
    8. ')' → logprob: -7.427225589752197
    9. '**' → logprob: -7.677225589752197
    10. '(' → logprob: -8.427225112915039

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3540046215057373
    2. '_' → logprob: -1.4790046215057373
    3. ',' → logprob: -3.2290046215057373
    4. ' =' → logprob: -4.604004859924316
    5. ')' → logprob: -5.104004859924316
    6. '```' → logprob: -5.229004859924316
    7. '*' → logprob: -5.604004859924316
    8. '+' → logprob: -5.854004859924316
    9. '**' → logprob: -6.854004859924316
    10. '-' → logprob: -7.729004859924316

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0632162094116211
    2. '0' → logprob: -3.063216209411621
    3. '1' → logprob: -4.438216209411621
    4. ' num' → logprob: -7.313216209411621
    5. 'num' → logprob: -7.438216209411621
    6. ' map' → logprob: -7.938216209411621
    7. 'map' → logprob: -8.188216209411621
    8. '10' → logprob: -8.313216209411621
    9. '5' → logprob: -8.688216209411621
    10. '2' → logprob: -9.313216209411621

Token 7: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.34439176321029663
    2. ')' → logprob: -1.9693918228149414
    3. '(' → logprob: -2.0943918228149414
    4. '(user' → logprob: -4.219391822814941
    5. '<|end|>' → logprob: -4.969391822814941
    6. '(range' → logprob: -7.219391822814941
    7. '(raw' → logprob: -7.344391822814941
    8. '<|end|>' → logprob: -7.469391822814941
    9. '(token' → logprob: -7.844391822814941
    10. 'input' → logprob: -7.844391822814941

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5768387913703918
    2. ' input' → logprob: -0.8268387913703918
    3. ')' → logprob: -7.201838970184326
    4. '(input' → logprob: -9.201838493347168
    5. ',input' → logprob: -11.201838493347168
    6. ' )' → logprob: -11.451838493347168
    7. 'range' → logprob: -11.826838493347168
    8. '<input' → logprob: -12.826838493347168
    9. '=input' → logprob: -12.951838493347168
    10. '[input' → logprob: -13.076838493347168

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.426761269569397
    2. '())' → logprob: -1.176761269569397
    3. '().' → logprob: -3.6767611503601074
    4. ')' → logprob: -5.676761150360107
    5. '(' → logprob: -5.926761150360107
    6. '(()' → logprob: -6.176761150360107
    7. '());' → logprob: -6.551761150360107
    8. '()))' → logprob: -7.426761150360107
    9. '();)' → logprob: -7.551761150360107
    10. '()`' → logprob: -7.676761150360107

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024930182844400406
    2. 'strip' → logprob: -6.002492904663086
    3. 'rstrip' → logprob: -11.252492904663086
    4. ' split' → logprob: -12.752492904663086
    5. '(split' → logprob: -14.752492904663086
    6. 'startswith' → logprob: -15.127492904663086
    7. 'read' → logprob: -15.377492904663086
    8. 'spl' → logprob: -15.502492904663086
    9. '```' → logprob: -16.002492904663086
    10. 'replace' → logprob: -16.252492904663086

Token 12: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09224795550107956
    2. ')' → logprob: -2.59224796295166
    3. '()' → logprob: -4.46724796295166
    4. '(' → logprob: -6.96724796295166
    5. '()))' → logprob: -8.34224796295166
    6. '))' → logprob: -8.46724796295166
    7. '`)' → logprob: -8.71724796295166
    8. '`()' → logprob: -9.96724796295166
    9. ' ())' → logprob: -10.09224796295166
    10. '('' → logprob: -10.71724796295166

Token 13: 'counter' (ID: 32128)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2224912643432617
    2. '+' → logprob: -1.3474912643432617
    3. '*' → logprob: -2.3474912643432617
    4. ',' → logprob: -2.5974912643432617
    5. ':' → logprob: -2.7224912643432617
    6. '#' → logprob: -3.2224912643432617
    7. 'for' → logprob: -3.4724912643432617
    8. 'if' → logprob: -3.5974912643432617
    9. '.' → logprob: -3.8474912643432617
    10. '\n' → logprob: -3.9724912643432617

Token 14: '_steps' (ID: 52120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17387935519218445
    2. '+' → logprob: -2.798879384994507
    3. ' +=' → logprob: -2.798879384994507
    4. '+=' → logprob: -4.298879146575928
    5. '(' → logprob: -4.798879146575928
    6. '=' → logprob: -5.048879146575928
    7. ')' → logprob: -5.798879146575928
    8. '++' → logprob: -6.048879146575928
    9. ' =' → logprob: -7.423879146575928
    10. ' +' → logprob: -7.673879146575928

Token 15: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2903260886669159
    2. '+=' → logprob: -2.1653261184692383
    3. '=' → logprob: -3.0403261184692383
    4. ' =' → logprob: -3.1653261184692383
    5. '_' → logprob: -3.2903261184692383
    6. '+' → logprob: -5.290326118469238
    7. '[' → logprob: -6.415326118469238
    8. '++' → logprob: -7.415326118469238
    9. '(' → logprob: -7.665326118469238
    10. ')' → logprob: -8.040326118469238

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2594188153743744
    2. ' ' → logprob: -1.5094188451766968
    3. 'num' → logprob: -5.634418964385986
    4. ' num' → logprob: -7.009418964385986
    5. 'step' → logprob: -7.134418964385986
    6. ' [' → logprob: -7.634418964385986
    7. '[' → logprob: -7.759418964385986
    8. '[num' → logprob: -7.884418964385986
    9. 'counter' → logprob: -8.134418487548828
    10. '1' → logprob: -8.509418487548828

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25344887375831604
    2. 'num' → logprob: -1.6284488439559937
    3. 'step' → logprob: -3.753448963165283
    4. 'counter' → logprob: -6.378448963165283
    5. '1' → logprob: -6.503448963165283
    6. '[num' → logprob: -8.003448486328125
    7. '[' → logprob: -8.253448486328125
    8. 'range' → logprob: -9.503448486328125
    9. ' ' → logprob: -9.878448486328125
    10. ' num' → logprob: -10.128448486328125

Token 18: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5942109823226929
    2. '
' → logprob: -1.9692109823226929
    3. ' while' → logprob: -2.0942111015319824
    4. '<|end|>' → logprob: -2.3442111015319824
    5. 'for' → logprob: -3.2192111015319824
    6. '```' → logprob: -4.469211101531982
    7. ' for' → logprob: -4.469211101531982
    8. '\' → logprob: -4.844211101531982
    9. ',' → logprob: -5.094211101531982
    10. '<|end|>' → logprob: -6.094211101531982

Token 19: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4175197184085846
    2. 'while' → logprob: -1.2925196886062622
    3. ' for' → logprob: -3.9175198078155518
    4. 'if' → logprob: -4.042519569396973
    5. ' while' → logprob: -4.292519569396973
    6. '
' → logprob: -5.417519569396973
    7. '```' → logprob: -5.417519569396973
    8. '<|end|>' → logprob: -6.667519569396973
    9. 'counter' → logprob: -7.167519569396973
    10. '\n' → logprob: -7.292519569396973

Token 20: ' num' (ID: 2269)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.00836031511425972
    2. 'counter' → logprob: -5.133360385894775
    3. ' num' → logprob: -6.133360385894775
    4. ' step' → logprob: -8.758359909057617
    5. 'num' → logprob: -10.258359909057617
    6. ' ' → logprob: -10.883359909057617
    7. '(counter' → logprob: -11.008359909057617
    8. '	counter' → logprob: -11.383359909057617
    9. '_counter' → logprob: -11.508359909057617
    10. ' ' → logprob: -12.758359909057617

Token 21: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -0.0005608965293504298
    2. '_' → logprob: -7.500560760498047
    3. '_steps' → logprob: -12.500560760498047
    4. '_in' → logprob: -13.250560760498047
    5. '_i' → logprob: -14.000560760498047
    6. '_init' → logprob: -15.000560760498047
    7. 'initial' → logprob: -15.125560760498047
    8. '_INITIAL' → logprob: -15.125560760498047
    9. '_initialized' → logprob: -15.125560760498047
    10. '_ini' → logprob: -16.375560760498047

Token 22: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.004711126442998648
    2. '>' → logprob: -5.629711151123047
    3. ' <' → logprob: -7.379711151123047
    4. ' >=' → logprob: -8.379711151123047
    5. ' ' → logprob: -9.004711151123047
    6. ' !=' → logprob: -9.754711151123047
    7. ' <=' → logprob: -9.754711151123047
    8. '-' → logprob: -11.754711151123047
    9. ' -' → logprob: -13.504711151123047
    10. '<' → logprob: -13.504711151123047

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3872840404510498
    2. '0' → logprob: -1.1372840404510498
    3. 'step' → logprob: -8.387284278869629
    4. ' step' → logprob: -9.387284278869629
    5. '=' → logprob: -10.137284278869629
    6. '1' → logprob: -10.637284278869629
    7. 'counter' → logprob: -10.762284278869629
    8. ' counter' → logprob: -12.512284278869629
    9. '>' → logprob: -13.262284278869629
    10. '2' → logprob: -13.324784278869629

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022664708085358143
    2. ' ' → logprob: -6.7522664070129395
    3. 'step' → logprob: -6.8772664070129395
    4. '1' → logprob: -10.627266883850098
    5. 'counter' → logprob: -10.752266883850098
    6. ' step' → logprob: -11.877266883850098
    7. 'num' → logprob: -12.502266883850098
    8. '5' → logprob: -13.127266883850098
    9. '10' → logprob: -13.252266883850098
    10. '100' → logprob: -14.002266883850098

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.596781946020201e-05
    2. ' :' → logprob: -10.875045776367188
    3. ':
' → logprob: -11.125045776367188
    4. ',' → logprob: -12.125045776367188
    5. ' and' → logprob: -13.250045776367188
    6. ':**' → logprob: -13.250045776367188
    7. '   ' → logprob: -14.000045776367188
    8. '):' → logprob: -14.500045776367188
    9. '.' → logprob: -15.250045776367188
    10. ',:' → logprob: -15.375045776367188

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0749405175447464
    2. ' counter' → logprob: -4.1999406814575195
    3. ' 
' → logprob: -4.3249406814575195
    4. '```' → logprob: -4.4499406814575195
    5. '    
' → logprob: -5.0749406814575195
    6. 'counter' → logprob: -5.1999406814575195
    7. '<|end|>' → logprob: -5.5749406814575195
    8. ' ' → logprob: -5.5749406814575195
    9. '    ' → logprob: -5.9499406814575195
    10. '
' → logprob: -6.0749406814575195

Token 27: ' num' (ID: 2269)
  Prédit: ' counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counter' → logprob: -0.8972293734550476
    2. ' num' → logprob: -1.6472294330596924
    3. 'num' (adapté à ' num') → logprob: -1.6472294330596924
    4. 'counter' → logprob: -2.0222294330596924
    5. ' step' → logprob: -3.5222294330596924
    6. '   ' → logprob: -3.7722294330596924
    7. 'step' → logprob: -4.647229194641113
    8. '```' → logprob: -4.772229194641113
    9. '``' → logprob: -6.897229194641113
    10. '    
' → logprob: -7.272229194641113

Token 28: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -2.4034345187828876e-05
    2. '_' → logprob: -11.62502384185791
    3. '```' → logprob: -13.00002384185791
    4. '_current' → logprob: -13.50002384185791
    5. '_initialized' → logprob: -13.50002384185791
    6. '_final' → logprob: -13.50002384185791
    7. '_steps' → logprob: -13.62502384185791
    8. 'initial' → logprob: -13.62502384185791
    9. '_in' → logprob: -13.87502384185791
    10. '_INITIAL' → logprob: -14.12502384185791

Token 29: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.00917793158441782
    2. '-=' → logprob: -5.009178161621094
    3. ' =' → logprob: -7.009178161621094
    4. '-' → logprob: -7.259178161621094
    5. '=' → logprob: -7.884178161621094
    6. ' -' → logprob: -8.134178161621094
    7. ' +=' → logprob: -9.509178161621094
    8. ' ' → logprob: -10.259178161621094
    9. '```' → logprob: -10.634178161621094
    10. '    ' → logprob: -11.134178161621094

Token 30: ' (' (ID: 350)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.018246404826641083
    2. ' step' → logprob: -4.018246173858643
    3. '1' → logprob: -9.2682466506958
    4. '	step' → logprob: -14.2682466506958
    5. ' ' → logprob: -15.1432466506958
    6. '2' → logprob: -15.1432466506958
    7. '   ' → logprob: -15.6432466506958
    8. 'counter' → logprob: -15.6432466506958
    9. '(step' → logprob: -15.7682466506958
    10. '0' → logprob: -15.7682466506958

Token 31: '2' (ID: 17)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.04306085407733917
    2. ' step' → logprob: -3.168060779571533
    3. '1' → logprob: -10.293061256408691
    4. 'counter' → logprob: -11.918061256408691
    5. ' ' → logprob: -12.293061256408691
    6. '(step' → logprob: -12.418061256408691
    7. '2' → logprob: -12.668061256408691
    8. ')' → logprob: -12.793061256408691
    9. '   ' → logprob: -13.418061256408691
    10. '	step' → logprob: -13.668061256408691

Token 32: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6119440197944641
    2. ' +' → logprob: -1.3619439601898193
    3. '*' → logprob: -2.2369439601898193
    4. ' **' → logprob: -2.7369439601898193
    5. '+' → logprob: -3.9869439601898193
    6. '**' → logprob: -4.736944198608398
    7. ')' → logprob: -6.611944198608398
    8. ' ' → logprob: -7.611944198608398
    9. ' -' → logprob: -7.611944198608398
    10. ' )' → logprob: -9.486944198608398

Token 33: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.4939110577106476
    2. 'step' → logprob: -0.9939110279083252
    3. ' counter' → logprob: -4.118911266326904
    4. 'counter' → logprob: -5.743911266326904
    5. ' num' → logprob: -9.743910789489746
    6. ')' → logprob: -10.243910789489746
    7. 'num' → logprob: -10.743910789489746
    8. ' ' → logprob: -11.118910789489746
    9. '(step' → logprob: -11.368910789489746
    10. '	step' → logprob: -11.993910789489746

Token 34: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -2.618001053633634e-05
    2. '_' → logprob: -11.125025749206543
    3. '_counter' → logprob: -12.750025749206543
    4. ' _' → logprob: -12.875025749206543
    5. ')_' → logprob: -13.125025749206543
    6. '_d' → logprob: -13.750025749206543
    7. 'distance' → logprob: -14.000025749206543
    8. ')' → logprob: -14.375025749206543
    9. '_dist' → logprob: -14.875025749206543
    10. '_difference' → logprob: -15.750025749206543

Token 35: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009234408847987652
    2. '+' → logprob: -5.759234428405762
    3. ' +' → logprob: -5.759234428405762
    4. ' )' → logprob: -6.009234428405762
    5. ')
' → logprob: -8.009234428405762
    6. '   ' → logprob: -9.634234428405762
    7. ' )
' → logprob: -11.884234428405762
    8. ' ' → logprob: -12.384234428405762
    9. '+)' → logprob: -12.384234428405762
    10. '))' → logprob: -12.634234428405762

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47620391845703125
    2. '1' → logprob: -0.9762039184570312
    3. ' counter' → logprob: -7.476203918457031
    4. '3' → logprob: -7.976203918457031
    5. ')' → logprob: -8.226203918457031
    6. ' )' → logprob: -8.601203918457031
    7. ' step' → logprob: -8.601203918457031
    8. '2' → logprob: -8.726203918457031
    9. 'counter' → logprob: -8.976203918457031
    10. '5' → logprob: -9.851203918457031

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03795219957828522
    2. ' ' → logprob: -3.412952184677124
    3. '3' → logprob: -6.287952423095703
    4. '2' → logprob: -7.287952423095703
    5. 'counter' → logprob: -8.037952423095703
    6. '5' → logprob: -8.287952423095703
    7. '4' → logprob: -8.412952423095703
    8. 'num' → logprob: -8.537952423095703
    9. ')' → logprob: -8.787952423095703
    10. ' counter' → logprob: -9.037952423095703

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00040934275602921844
    2. ' )' → logprob: -7.875409126281738
    3. ')
' → logprob: -10.625409126281738
    4. '   ' → logprob: -13.000409126281738
    5. '+' → logprob: -13.750409126281738
    6. '))' → logprob: -14.875409126281738
    7. ' ' → logprob: -15.000409126281738
    8. ' )
' → logprob: -15.625409126281738
    9. ')
' → logprob: -16.125410079956055
    10. ')

' → logprob: -16.375410079956055

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9103121161460876
    2. '   ' → logprob: -1.1603121757507324
    3. '    
' → logprob: -2.1603121757507324
    4. ' 
' → logprob: -3.0353121757507324
    5. '  
' → logprob: -3.1603121757507324
    6. '\n' → logprob: -3.6603121757507324
    7. 'counter' → logprob: -4.285312175750732
    8. '\' → logprob: -4.785312175750732
    9. '   
' → logprob: -4.910312175750732
    10. ' counter' → logprob: -5.160312175750732

Token 40: ' counter' (ID: 9446)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' (adapté à ' counter') → logprob: -0.7064266800880432
    2. '   ' → logprob: -1.4564266204833984
    3. ' counter' → logprob: -1.4564266204833984
    4. '
' → logprob: -3.8314266204833984
    5. '    
' → logprob: -4.331426620483398
    6. '_counter' → logprob: -6.456426620483398
    7. '	counter' → logprob: -6.706426620483398
    8. ' 
' → logprob: -6.956426620483398
    9. '\n' → logprob: -8.081426620483398
    10. '```' → logprob: -8.206426620483398

Token 41: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.0004936986370012164
    2. '_' → logprob: -7.62549352645874
    3. '_s' → logprob: -12.500494003295898
    4. ' _' → logprob: -13.750494003295898
    5. '_tokens' → logprob: -15.750494003295898
    6. '__' → logprob: -16.1254940032959
    7. '```' → logprob: -16.2504940032959
    8. '_S' → logprob: -16.6254940032959
    9. '+' → logprob: -16.8754940032959
    10. '_step' → logprob: -17.0004940032959

Token 42: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931548714637756
    2. '+=' → logprob: -0.6931548714637756
    3. '+' → logprob: -12.318155288696289
    4. '=' → logprob: -13.818155288696289
    5. ']+=' → logprob: -13.818155288696289
    6. '+='' → logprob: -14.443155288696289
    7. '+="' → logprob: -15.443155288696289
    8. '+=(' → logprob: -15.568155288696289
    9. '```' → logprob: -16.06815528869629
    10. '<|end|>' → logprob: -16.19315528869629

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -9.000123977661133
    3. '2' → logprob: -15.125123977661133
    4. '   ' → logprob: -15.625123977661133
    5. 'step' → logprob: -16.750123977661133
    6. '```' → logprob: -16.750123977661133
    7. '3' → logprob: -17.312623977661133
    8. '  ' → logprob: -18.312623977661133
    9. ' step' → logprob: -18.500123977661133
    10. '4' → logprob: -19.062623977661133

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.045823566731997e-05
    2. ' ' → logprob: -11.125020027160645
    3. '2' → logprob: -12.500020027160645
    4. 'step' → logprob: -14.375020027160645
    5. '3' → logprob: -14.500020027160645
    6. '   ' → logprob: -16.18752098083496
    7. '4' → logprob: -16.37502098083496
    8. '```' → logprob: -16.43752098083496
    9. '+' → logprob: -16.75002098083496
    10. '<|end|>' → logprob: -16.87502098083496

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31650760769844055
    2. '<|end|>' → logprob: -1.4415075778961182
    3. 'print' → logprob: -4.566507816314697
    4. '\n' → logprob: -4.941507816314697
    5. '#' → logprob: -4.941507816314697
    6. '```' → logprob: -5.566507816314697
    7. '   ' → logprob: -6.566507816314697
    8. ')' → logprob: -6.941507816314697
    9. ' 
' → logprob: -7.191507816314697
    10. '  
' → logprob: -7.441507816314697

Token 46: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49518656730651855
    2. '
' → logprob: -1.8701865673065186
    3. '<|end|>' → logprob: -1.8701865673065186
    4. '#' → logprob: -3.2451865673065186
    5. ')' → logprob: -4.245186805725098
    6. '\n' → logprob: -4.620186805725098
    7. '```' → logprob: -4.995186805725098
    8. ' ' → logprob: -6.245186805725098
    9. ' print' → logprob: -6.495186805725098
    10. ' 
' → logprob: -6.495186805725098

Token 47: '(counter' (ID: 85625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2015831172466278
    2. '(counter' → logprob: -1.7015831470489502
    3. '()' → logprob: -8.951582908630371
    4. '('' → logprob: -11.326582908630371
    5. '((' → logprob: -12.201582908630371
    6. '(len' → logprob: -12.326582908630371
    7. '("("' → logprob: -12.826582908630371
    8. '(sum' → logprob: -13.076582908630371
    9. '(`' → logprob: -13.201582908630371
    10. 'counter' → logprob: -13.326582908630371

Token 48: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.00011486753646750003
    2. '_' → logprob: -9.375114440917969
    3. '_)' → logprob: -11.125114440917969
    4. ')_' → logprob: -11.375114440917969
    5. ')' → logprob: -13.250114440917969
    6. '_s' → logprob: -13.625114440917969
    7. '_counter' → logprob: -14.625114440917969
    8. ' _' → logprob: -16.12511444091797
    9. '_step' → logprob: -16.12511444091797
    10. '_st' → logprob: -17.25011444091797

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '))' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '`)' → logprob: -15.875001907348633
    5. ')`' → logprob: -16.125001907348633
    6. '')' → logprob: -16.125001907348633
    7. '()' → logprob: -17.000001907348633
    8. ')
' → logprob: -17.500001907348633
    9. '```' → logprob: -18.250001907348633
    10. '）' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 42.55%
Précision adaptée (1ère position): 44.68%
Précision (top 10): 80.85%
================================================================================
