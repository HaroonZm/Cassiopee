================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin as _sin
READ = _sin.buffer.read
RNL = _sin.buffer.readline
RLNS = _sin.buffer.readlines

N, M = map(int, RNL().split())
UVS = list(map(int, READ().split()))

# C'est parti pour des dicos indexés à partir de 1 et une nomenclature peu standard
network = [ { } for __ in range(N+1)]
IV = iter(UVS)
for A,B,W in zip(IV, IV, IV):
    network[A][B] = W
    network[B][A] = W

def DF_s(ROOT, VAL):
    Z = [0]*(N+1)
    L = [-1]*(N+1)
    P = (-1,)*(N+1)
    P = list(P)
    Z[ROOT] = VAL
    L[ROOT] = 0
    mystack = [ROOT]
    while mystack:
        nextguy = []
        while mystack:
            me = mystack.pop()
            for you,rel in network[me].items():
                if you == P[me]: continue
                hisval = rel - Z[me]
                # on adore les & à la place de "and"
                if (L[you] != -1)&(Z[you] != hisval):
                    loopd = L[you] + L[me] + 1
                    if not loopd % 2:
                        print(0)
                        quit()
                    else:
                        fixit = Z[you] + hisval
                        if fixit&1:
                            print(0)
                            quit()
                        return (False,Z,L,you,fixit//2)
                elif L[you] == -1:
                    L[you] = L[me] + 1
                    Z[you] = hisval
                    P[you] = me
                    nextguy.append(you)
        mystack = nextguy[:]
    return (True,Z,L,0,0)

res,fvals,deep,rt,first = DF_s(1,0)
if not res:
    r2,fvals,deep,rt,first = DF_s(rt,first)
    if not r2:
        print(0)
    else:
        if min(fvals[1:])<1:
            print(0)
        else:
            print(1)
    quit()

ll = lambda x: [fvals[i] for i in range(1,N+1) if deep[i]%2==x]

E = ll(0)
O = ll(1)
out = 1+(min(E)-1)+(min(O)-1)
print(out if out>0 else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.051410701125860214
    2. ' argv' → logprob: -3.426410675048828
    3. 'exit' → logprob: -4.176410675048828
    4. ' exit' → logprob: -6.801410675048828
    5. 'stdout' → logprob: -7.301410675048828
    6. 'stdin' → logprob: -8.426410675048828
    7. 'path' → logprob: -8.926410675048828
    8. 'import' → logprob: -10.176410675048828
    9. 'stderr' → logprob: -10.426410675048828
    10. 'version' → logprob: -10.676410675048828

Token 4: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006422612932510674
    2. '.readline' → logprob: -8.250641822814941
    3. '\n' → logprob: -8.500641822814941
    4. '.
' → logprob: -10.125641822814941
    5. 'import' → logprob: -10.250641822814941
    6. '\' → logprob: -10.500641822814941
    7. '```' → logprob: -10.875641822814941
    8. '.read' → logprob: -10.875641822814941
    9. '' → logprob: -12.000641822814941
    10. ',' → logprob: -12.125641822814941

Token 5: ' _' (ID: 1175)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07850512117147446
    2. ' input' → logprob: -3.453505039215088
    3. 'sys' → logprob: -3.703505039215088
    4. 'stdin' → logprob: -4.328505039215088
    5. ' sys' → logprob: -6.453505039215088
    6. 'f' → logprob: -6.828505039215088
    7. 's' → logprob: -6.828505039215088
    8. 'in' → logprob: -7.578505039215088
    9. 'inp' → logprob: -7.828505039215088
    10. 'r' → logprob: -7.828505039215088

Token 6: 'sin' (ID: 23516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21383562684059143
    2. 'stdin' → logprob: -1.963835597038269
    3. 's' → logprob: -3.2138357162475586
    4. 'std' → logprob: -5.838835716247559
    5. 'is' → logprob: -6.338835716247559
    6. 'in' → logprob: -6.463835716247559
    7. '_s' → logprob: -6.588835716247559
    8. '_st' → logprob: -6.963835716247559
    9. 'st' → logprob: -7.088835716247559
    10. 'r' → logprob: -7.463835716247559

Token 7: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006990649271756411
    2. 't' → logprob: -6.006990432739258
    3. '.readline' → logprob: -6.631990432739258
    4. '\' → logprob: -7.256990432739258
    5. ',' → logprob: -7.256990432739258
    6. 'put' → logprob: -7.506990432739258
    7. '.read' → logprob: -7.756990432739258
    8. '' → logprob: -9.006990432739258
    9. 'read' → logprob: -9.506990432739258
    10. '[' → logprob: -9.631990432739258

Token 8: 'READ' (ID: 21810)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13871431350708008
    2. ',' → logprob: -2.76371431350708
    3. '
' → logprob: -3.63871431350708
    4. '' → logprob: -4.51371431350708
    5. '\n' → logprob: -4.51371431350708
    6. '_' → logprob: -4.63871431350708
    7. '.
' → logprob: -5.76371431350708
    8. ',
' → logprob: -7.13871431350708
    9. '.readline' → logprob: -7.38871431350708
    10. '

' → logprob: -7.63871431350708

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3254706561565399
    2. ' =' → logprob: -1.7004706859588623
    3. '_' → logprob: -3.0754706859588623
    4. 'LINE' → logprob: -3.5754706859588623
    5. '_LINE' → logprob: -5.325470447540283
    6. 'BUF' → logprob: -5.950470447540283
    7. '=_' → logprob: -6.075470447540283
    8. '()' → logprob: -6.825470447540283
    9. 'BUFFER' → logprob: -6.950470447540283
    10. 'D' → logprob: -7.325470447540283

Token 10: ' _' (ID: 1175)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.006521864328533411
    2. ' _' → logprob: -5.131521701812744
    3. ' ' → logprob: -9.131522178649902
    4. '_read' → logprob: -9.256522178649902
    5. '_S' → logprob: -9.506522178649902
    6. '_sink' → logprob: -10.006522178649902
    7. '_syn' → logprob: -10.381522178649902
    8. '_lambda' → logprob: -10.381522178649902
    9. '_super' → logprob: -10.881522178649902
    10. '_' → logprob: -10.881522178649902

Token 11: 'sin' (ID: 23516)
  Prédit: 'sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -3.128163257315464e-07
    2. 'in' → logprob: -16.0
    3. '.sin' → logprob: -16.875
    4. 's' → logprob: -17.125
    5. ' sin' → logprob: -17.125
    6. '*sin' → logprob: -17.875
    7. 'cin' → logprob: -18.125
    8. '_s' → logprob: -18.375
    9. 'stdin' → logprob: -18.375
    10. 'SIN' → logprob: -18.5

Token 12: '.buffer' (ID: 48964)
  Prédit: '.read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.7390788197517395
    2. '.readline' → logprob: -0.7390788197517395
    3. '.' → logprob: -3.1140787601470947
    4. 'read' → logprob: -7.864078998565674
    5. '.write' → logprob: -10.114078521728516
    6. '.Read' → logprob: -11.239078521728516
    7. '.readlines' → logprob: -11.364078521728516
    8. 't' → logprob: -12.364078521728516
    9. ' .' → logprob: -12.864078521728516
    10. '.tell' → logprob: -13.114078521728516

Token 13: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.38968586921691895
    2. '.' → logprob: -1.764685869216919
    3. '.read' → logprob: -1.889685869216919
    4. '.READ' → logprob: -9.13968563079834
    5. 'read' → logprob: -9.26468563079834
    6. '.readlines' → logprob: -9.88968563079834
    7. '.Read' → logprob: -10.63968563079834
    8. '<|end|>' → logprob: -11.13968563079834
    9. '<|end|>' → logprob: -11.38968563079834
    10. '_read' → logprob: -11.38968563079834

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4427095055580139
    2. '()' → logprob: -1.0677094459533691
    3. '().' → logprob: -4.442709445953369
    4. '.' → logprob: -7.442709445953369
    5. '(
' → logprob: -8.192709922790527
    6. '```' → logprob: -8.192709922790527
    7. ')' → logprob: -8.817709922790527
    8. 'line' → logprob: -8.942709922790527
    9. ',' → logprob: -9.442709922790527
    10. '().__' → logprob: -9.942709922790527

Token 15: 'R' (ID: 49)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04238637164235115
    2. '(' → logprob: -3.292386293411255
    3. '().' → logprob: -7.167386531829834
    4. '()
' → logprob: -7.292386531829834
    5. '(
' → logprob: -7.542386531829834
    6. '_line' → logprob: -7.667386531829834
    7. '_' → logprob: -7.917386531829834
    8. '()

' → logprob: -8.292386054992676
    9. 'line' → logprob: -8.417386054992676
    10. '()\' → logprob: -8.792386054992676

Token 16: 'NL' (ID: 35315)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.681820273399353
    2. 'AW' → logprob: -1.306820273399353
    3. 'EV' → logprob: -2.5568203926086426
    4. 'EC' → logprob: -3.0568203926086426
    5. 'UN' → logprob: -3.8068203926086426
    6. 'ANGE' → logprob: -4.056820392608643
    7. 'EG' → logprob: -4.556820392608643
    8. 'EF' → logprob: -4.681820392608643
    9. 'ES' → logprob: -4.806820392608643
    10. 'AND' → logprob: -5.556820392608643

Token 17: ' =' (ID: 314)
  Prédit: 'INE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INE' → logprob: -0.057974692434072495
    2. '=' → logprob: -3.9329745769500732
    3. 'INES' → logprob: -4.182974815368652
    4. 'E' → logprob: -4.682974815368652
    5. 'N' → logprob: -5.057974815368652
    6. '()' → logprob: -6.057974815368652
    7. ' =' → logprob: -7.057974815368652
    8. '```' → logprob: -7.807974815368652
    9. 'NE' → logprob: -7.932974815368652
    10. 'IST' → logprob: -7.932974815368652

Token 18: ' _' (ID: 1175)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6777674555778503
    2. 'b' → logprob: -0.8027674555778503
    3. '.readline' → logprob: -3.802767515182495
    4. 'lambda' → logprob: -4.677767276763916
    5. '\n' → logprob: -6.927767276763916
    6. '100' → logprob: -6.927767276763916
    7. ' readline' → logprob: -6.927767276763916
    8. ' b' → logprob: -6.927767276763916
    9. '_lambda' → logprob: -6.927767276763916
    10. '_read' → logprob: -7.177767276763916

Token 19: 'sin' (ID: 23516)
  Prédit: 'sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.2150980681180954
    2. 'NL' → logprob: -2.0900981426239014
    3. 'IN' → logprob: -4.340097904205322
    4. ''\' → logprob: -4.465097904205322
    5. 'in' → logprob: -4.590097904205322
    6. 'LN' → logprob: -4.965097904205322
    7. 'L' → logprob: -5.215097904205322
    8. '"\' → logprob: -5.840097904205322
    9. 'SIN' → logprob: -6.090097904205322
    10. '('\' → logprob: -6.340097904205322

Token 20: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0017450349405407906
    2. '.' → logprob: -6.501745223999023
    3. 'ead' → logprob: -9.751745223999023
    4. 'e' → logprob: -10.126745223999023
    5. '.readlines' → logprob: -10.376745223999023
    6. 'buffer' → logprob: -10.501745223999023
    7. 'read' → logprob: -10.751745223999023
    8. '.read' → logprob: -10.751745223999023
    9. ' readline' → logprob: -12.001745223999023
    10. 'line' → logprob: -12.501745223999023

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0721922516822815
    2. ' readline' → logprob: -3.0721921920776367
    3. 'read' → logprob: -3.8221921920776367
    4. '1' → logprob: -7.322192192077637
    5. '_read' → logprob: -8.447192192077637
    6. '```' → logprob: -8.447192192077637
    7. 'line' → logprob: -8.697192192077637
    8. 'r' → logprob: -9.697192192077637
    9. 'readonly' → logprob: -10.697192192077637
    10. 'newline' → logprob: -11.072192192077637

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42272740602493286
    2. '()' → logprob: -2.047727346420288
    3. '(' → logprob: -2.172727346420288
    4. '<|end|>' → logprob: -3.047727346420288
    5. '\n' → logprob: -3.547727346420288
    6. '(
' → logprob: -5.172727584838867
    7. '#' → logprob: -5.547727584838867
    8. ')' → logprob: -5.922727584838867
    9. '<|end|>' → logprob: -6.172727584838867
    10. ',' → logprob: -6.422727584838867

Token 23: 'RL' (ID: 40408)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13079828023910522
    2. '_' → logprob: -2.50579833984375
    3. 'R' → logprob: -4.63079833984375
    4. '#' → logprob: -5.00579833984375
    5. '\n' → logprob: -5.38079833984375
    6. '\' → logprob: -5.63079833984375
    7. '()' → logprob: -5.75579833984375
    8. '
' → logprob: -6.00579833984375
    9. 'D' → logprob: -6.13079833984375
    10. '__' → logprob: -7.00579833984375

Token 24: 'NS' (ID: 5121)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8341114521026611
    2. 'INE' → logprob: -1.0841114521026611
    3. '=' → logprob: -1.8341114521026611
    4. 'E' → logprob: -2.959111452102661
    5. 'NE' → logprob: -5.459111213684082
    6. 'A' → logprob: -5.709111213684082
    7. 'ine' → logprob: -6.459111213684082
    8. 'INES' → logprob: -6.834111213684082
    9. ' =' → logprob: -6.959111213684082
    10. 'NL' → logprob: -7.084111213684082

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1353440135717392
    2. ' =' → logprob: -3.1353440284729004
    3. 'S' → logprob: -3.5103440284729004
    4. 'T' → logprob: -4.2603440284729
    5. '.' → logprob: -4.3853440284729
    6. '.readline' → logprob: -4.7603440284729
    7. 'INE' → logprob: -5.5103440284729
    8. 's' → logprob: -5.7603440284729
    9. '_' → logprob: -6.1353440284729
    10. '()' → logprob: -7.1353440284729

Token 26: ' _' (ID: 1175)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.4630287885665894
    2. '_read' → logprob: -1.5880287885665894
    3. '_lambda' → logprob: -2.213028907775879
    4. '.readline' → logprob: -2.588028907775879
    5. 'lambda' → logprob: -2.588028907775879
    6. '[]' → logprob: -2.838028907775879
    7. 'b' → logprob: -3.838028907775879
    8. '_s' → logprob: -3.838028907775879
    9. '(lambda' → logprob: -3.963028907775879
    10. '_READ' → logprob: -3.963028907775879

Token 27: 'sin' (ID: 23516)
  Prédit: 'sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -4.68022444692906e-05
    2. 's' → logprob: -11.125046730041504
    3. 'in' → logprob: -11.125046730041504
    4. 'R' → logprob: -12.375046730041504
    5. '_s' → logprob: -13.500046730041504
    6. ' sin' → logprob: -13.750046730041504
    7. 'int' → logprob: -14.000046730041504
    8. 'str' → logprob: -14.000046730041504
    9. '.sin' → logprob: -14.125046730041504
    10. 'stdin' → logprob: -14.250046730041504

Token 28: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01315152458846569
    2. '.buffer' → logprob: -5.0131516456604
    3. '.readlines' → logprob: -5.1381516456604
    4. 'buffer' → logprob: -7.6381516456604
    5. '.' → logprob: -10.388151168823242
    6. 's' → logprob: -11.388151168823242
    7. '.read' → logprob: -12.263151168823242
    8. '.rstrip' → logprob: -12.388151168823242
    9. 'rstrip' → logprob: -13.513151168823242
    10. '.r' → logprob: -13.763151168823242

Token 29: '.readlines' (ID: 92237)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.1204436793923378
    2. '.readline' → logprob: -2.37044358253479
    3. '.readlines' → logprob: -3.99544358253479
    4. '.read' → logprob: -6.620443820953369
    5. ' readline' → logprob: -9.370443344116211
    6. '_read' → logprob: -9.495443344116211
    7. 'decode' → logprob: -9.995443344116211
    8. 'line' → logprob: -10.995443344116211
    9. 'rstrip' → logprob: -11.120443344116211
    10. 'lines' → logprob: -11.370443344116211

Token 30: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6146773099899292
    2. 'def' → logprob: -1.9896773099899292
    3. '()' → logprob: -1.9896773099899292
    4. '_' → logprob: -3.1146774291992188
    5. '(' → logprob: -3.6146774291992188
    6. '__' → logprob: -4.114677429199219
    7. '=' → logprob: -4.364677429199219
    8. '#' → logprob: -4.364677429199219
    9. '(
' → logprob: -4.864677429199219
    10. '()
' → logprob: -4.864677429199219

Token 31: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4185859262943268
    2. '
' → logprob: -2.168586015701294
    3. '_' → logprob: -2.668586015701294
    4. '(' → logprob: -2.918586015701294
    5. '()' → logprob: -3.793586015701294
    6. '\n' → logprob: -3.918586015701294
    7. '#' → logprob: -4.668585777282715
    8. '(
' → logprob: -4.793585777282715
    9. '=' → logprob: -4.793585777282715
    10. '\' → logprob: -4.918585777282715

Token 32: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15043802559375763
    2. ' =' → logprob: -2.025438070297241
    3. ',' → logprob: -4.900437831878662
    4. '=int' → logprob: -9.02543830871582
    5. '_' → logprob: -9.65043830871582
    6. ' ' → logprob: -10.52543830871582
    7. ')' → logprob: -10.90043830871582
    8. '.' → logprob: -11.52543830871582
    9. ' ,' → logprob: -12.02543830871582
    10. '=

' → logprob: -12.27543830871582

Token 33: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.0191724300384521
    2. '_' → logprob: -1.2691724300384521
    3. 'K' → logprob: -2.144172430038452
    4. ' =' → logprob: -2.394172430038452
    5. ' M' → logprob: -3.019172430038452
    6. '=' → logprob: -3.644172430038452
    7. ' ' → logprob: -3.769172430038452
    8. 'M' → logprob: -4.394172668457031
    9. ' k' → logprob: -5.394172668457031
    10. ' T' → logprob: -5.644172668457031

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761218070983887
    2. ' =' → logprob: -0.8261218070983887
    3. ',' → logprob: -8.701122283935547
    4. '=input' → logprob: -12.451122283935547
    5. ' ' → logprob: -12.701122283935547
    6. ')' → logprob: -12.951122283935547
    7. '=int' → logprob: -13.326122283935547
    8. '=

' → logprob: -14.201122283935547
    9. '<|end|>' → logprob: -14.701122283935547
    10. '=line' → logprob: -14.826122283935547

Token 35: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01695658639073372
    2. 'map' → logprob: -4.141956806182861
    3. ' ' → logprob: -7.391956806182861
    4. ' READ' → logprob: -9.141956329345703
    5. ' R' → logprob: -10.016956329345703
    6. ' [' → logprob: -10.516956329345703
    7. ' list' → logprob: -10.766956329345703
    8. '0' → logprob: -10.891956329345703
    9. '[' → logprob: -11.391956329345703
    10. 'READ' → logprob: -11.641956329345703

Token 36: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22442522644996643
    2. '(lambda' → logprob: -1.849425196647644
    3. '(int' → logprob: -3.5994253158569336
    4. '(str' → logprob: -4.224425315856934
    5. '<|end|>' → logprob: -6.724425315856934
    6. '(None' → logprob: -9.474425315856934
    7. '(len' → logprob: -9.599425315856934
    8. '(
' → logprob: -9.974425315856934
    9. '((' → logprob: -10.224425315856934
    10. '(eval' → logprob: -10.349425315856934

Token 37: ',' (ID: 11)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.45041921734809875
    2. ',' → logprob: -1.3254191875457764
    3. '(_' → logprob: -3.3254191875457764
    4. '(' → logprob: -3.4504191875457764
    5. ',R' → logprob: -3.8254191875457764
    6. ',_' → logprob: -5.3254194259643555
    7. ')' → logprob: -6.5754194259643555
    8. '(RE' → logprob: -7.9504194259643555
    9. ' ,' → logprob: -8.825419425964355
    10. ')(_' → logprob: -8.825419425964355

Token 38: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.8737258911132812
    2. ' R' → logprob: -0.9987258911132812
    3. 'READ' → logprob: -1.9987258911132812
    4. ' READ' → logprob: -3.1237258911132812
    5. '_READ' → logprob: -3.9987258911132812
    6. '_R' → logprob: -4.873725891113281
    7. 'RL' → logprob: -5.498725891113281
    8. ')' → logprob: -5.998725891113281
    9. '_read' → logprob: -6.873725891113281
    10. '_' → logprob: -8.373725891113281

Token 39: 'NL' (ID: 35315)
  Prédit: 'NL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NL' → logprob: -0.12590950727462769
    2. 'L' → logprob: -2.2509095668792725
    3. 'LN' → logprob: -4.625909328460693
    4. 'N' → logprob: -5.750909328460693
    5. ' NL' → logprob: -11.250909805297852
    6. 'NS' → logprob: -13.625909805297852
    7. '(N' → logprob: -13.750909805297852
    8. 'Nl' → logprob: -13.750909805297852
    9. '(L' → logprob: -14.625909805297852
    10. 'LIN' → logprob: -14.625909805297852

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5135552883148193
    2. '())' → logprob: -1.2635552883148193
    3. '()' → logprob: -2.1385552883148193
    4. ')' → logprob: -7.763555526733398
    5. '()[' → logprob: -7.888555526733398
    6. '()))' → logprob: -8.388555526733398
    7. '(' → logprob: -9.763555526733398
    8. ' ())' → logprob: -11.388555526733398
    9. '()]' → logprob: -11.763555526733398
    10. '();)' → logprob: -11.888555526733398

Token 41: 'split' (ID: 13627)
  Prédit: 'decode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.46329912543296814
    2. 'strip' → logprob: -1.7132991552352905
    3. 'rstrip' → logprob: -1.7132991552352905
    4. 'split' → logprob: -4.58829927444458
    5. '```' → logprob: -10.713298797607422
    6. 'read' → logprob: -10.713298797607422
    7. ' decode' → logprob: -11.338298797607422
    8. '.decode' → logprob: -11.588298797607422
    9. ')' → logprob: -12.213298797607422
    10. ' strip' → logprob: -12.213298797607422

Token 42: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015190535224974155
    2. ')' → logprob: -4.515190601348877
    3. '()))' → logprob: -5.765190601348877
    4. '))' → logprob: -7.640190601348877
    5. '()' → logprob: -7.640190601348877
    6. '())
' → logprob: -10.765190124511719
    7. '(' → logprob: -12.515190124511719
    8. ' ())' → logprob: -12.765190124511719
    9. '()),' → logprob: -13.015190124511719
    10. '`)' → logprob: -13.890190124511719

Token 43: 'UV' (ID: 29203)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6252663135528564
    2. 'arr' → logprob: -2.5002663135528564
    3. '\n' → logprob: -2.7502663135528564
    4. 'A' → logprob: -2.8752663135528564
    5. 'a' → logprob: -2.8752663135528564
    6. ')' → logprob: -3.6252663135528564
    7. 'graph' → logprob: -3.8752663135528564
    8. '```' → logprob: -4.000266075134277
    9. '
' → logprob: -4.500266075134277
    10. 'array' → logprob: -4.625266075134277

Token 44: 'S' (ID: 50)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08004125207662582
    2. ' =' → logprob: -3.0800411701202393
    3. 's' → logprob: -3.7050411701202393
    4. 'S' → logprob: -5.580041408538818
    5. '_' → logprob: -7.080041408538818
    6. '=[]' → logprob: -7.205041408538818
    7. '[]' → logprob: -7.955041408538818
    8. '```' → logprob: -9.33004093170166
    9. 'I' → logprob: -9.95504093170166
    10. '_=' → logprob: -10.08004093170166

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994777172803879
    2. '=' → logprob: -2.6949477195739746
    3. '=[]' → logprob: -12.444948196411133
    4. ' ' → logprob: -13.319948196411133
    5. ',' → logprob: -13.694948196411133
    6. ')' → logprob: -13.944948196411133
    7. '[' → logprob: -13.944948196411133
    8. '  ' → logprob: -14.069948196411133
    9. '[]' → logprob: -14.444948196411133
    10. '[:]' → logprob: -15.069948196411133

Token 46: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45686784386634827
    2. '[R' → logprob: -1.9568678140640259
    3. '[list' → logprob: -1.9568678140640259
    4. '[int' → logprob: -2.7068679332733154
    5. 'list' → logprob: -5.331867694854736
    6. 'RL' → logprob: -5.831867694854736
    7. '[List' → logprob: -6.206867694854736
    8. '[len' → logprob: -6.456867694854736
    9. '[]' → logprob: -6.706867694854736
    10. '[str' → logprob: -7.456867694854736

Token 47: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.030576560646295547
    2. '(' → logprob: -3.530576467514038
    3. '(int' → logprob: -7.280576705932617
    4. '()' → logprob: -9.530576705932617
    5. '(range' → logprob: -11.030576705932617
    6. '(R' → logprob: -11.155576705932617
    7. '(
' → logprob: -11.905576705932617
    8. '(zip' → logprob: -11.905576705932617
    9. '(_' → logprob: -12.280576705932617
    10. '(m' → logprob: -12.905576705932617

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006419036653824151
    2. '(' → logprob: -7.875641822814941
    3. 'int' → logprob: -8.375641822814941
    4. '(lambda' → logprob: -11.750641822814941
    5. ',int' → logprob: -11.875641822814941
    6. '[int' → logprob: -12.250641822814941
    7. '<int' → logprob: -12.500641822814941
    8. '=int' → logprob: -13.375641822814941
    9. ')' → logprob: -13.625641822814941
    10. ']int' → logprob: -13.625641822814941

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008836266584694386
    2. ',R' → logprob: -5.133836269378662
    3. '(R' → logprob: -6.133836269378662
    4. '(' → logprob: -8.133835792541504
    5. '(),' → logprob: -8.383835792541504
    6. ' ,' → logprob: -8.633835792541504
    7. 'R' → logprob: -12.133835792541504
    8. '，' → logprob: -12.383835792541504
    9. ' R' → logprob: -12.508835792541504
    10. 's' → logprob: -12.508835792541504

Token 50: ' READ' (ID: 34406)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.05044999718666077
    2. ' R' → logprob: -3.175450086593628
    3. 'RL' → logprob: -4.925449848175049
    4. ' RL' → logprob: -9.550450325012207
    5. '_R' → logprob: -10.425450325012207
    6. 'Rl' → logprob: -11.300450325012207
    7. '   ' → logprob: -11.550450325012207
    8. '	R' → logprob: -11.550450325012207
    9. ' ' → logprob: -11.800450325012207
    10. '_rl' → logprob: -11.925450325012207

Token 51: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00988003984093666
    2. '()))' → logprob: -4.759880065917969
    3. '()' → logprob: -6.884880065917969
    4. '())' → logprob: -9.009880065917969
    5. '()));' → logprob: -10.384880065917969
    6. '))' → logprob: -10.509880065917969
    7. '())))' → logprob: -10.884880065917969
    8. '(' → logprob: -11.759880065917969
    9. '()[' → logprob: -12.009880065917969
    10. '()))
' → logprob: -12.384880065917969

Token 52: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.9650025428272784e-05
    2. 'strip' → logprob: -11.375040054321289
    3. ' split' → logprob: -11.375040054321289
    4. 'rstrip' → logprob: -11.500040054321289
    5. 'decode' → logprob: -12.375040054321289
    6. '.split' → logprob: -14.000040054321289
    7. '().' → logprob: -14.125040054321289
    8. 'spl' → logprob: -15.250040054321289
    9. '```' → logprob: -15.500040054321289
    10. ')' → logprob: -15.625040054321289

Token 53: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.352014422416687
    2. '()))' → logprob: -1.227014422416687
    3. '()' → logprob: -6.227014541625977
    4. '())' → logprob: -6.977014541625977
    5. ')' → logprob: -7.602014541625977
    6. '(' → logprob: -9.352014541625977
    7. '()))
' → logprob: -10.227014541625977
    8. ')))' → logprob: -12.102014541625977
    9. '()));' → logprob: -12.102014541625977
    10. '))
' → logprob: -12.352014541625977

Token 54: '#' (ID: 2)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.087086796760559
    2. 'graph' → logprob: -1.587086796760559
    3. ')' → logprob: -1.837086796760559
    4. 'edges' → logprob: -2.3370866775512695
    5. '
' → logprob: -3.0870866775512695
    6. '#' → logprob: -3.4620866775512695
    7. 'd' → logprob: -4.0870866775512695
    8. 'A' → logprob: -4.7120866775512695
    9. 'adj' → logprob: -4.8370866775512695
    10. '[' → logprob: -5.0870866775512695

Token 55: ' C' (ID: 363)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.521502137184143
    2. '#' → logprob: -2.2715020179748535
    3. ' graph' → logprob: -2.3965020179748535
    4. 'edges' → logprob: -2.6465020179748535
    5. ' edges' → logprob: -2.7715020179748535
    6. 'U' → logprob: -2.7715020179748535
    7. 'graph' → logprob: -2.8965020179748535
    8. 'E' → logprob: -3.2715020179748535
    9. 'd' → logprob: -3.3965020179748535
    10. 's' → logprob: -3.5215020179748535

Token 56: ''est' (ID: 6616)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7997214794158936
    2. 'ounter' → logprob: -0.7997214794158936
    3. 'ount' → logprob: -3.1747214794158936
    4. 'ol' → logprob: -4.549721717834473
    5. 'ounters' → logprob: -4.549721717834473
    6. '#' → logprob: -5.174721717834473
    7. 'on' → logprob: -5.674721717834473
    8. 'ou' → logprob: -5.674721717834473
    9. '[' → logprob: -5.674721717834473
    10. '=' → logprob: -5.924721717834473

Token 57: ' parti' (ID: 37271)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7439696788787842
    2. ' un' → logprob: -1.6189696788787842
    3. ' la' → logprob: -2.493969678878784
    4. 'le' → logprob: -2.868969678878784
    5. ' une' → logprob: -2.868969678878784
    6. 'l' → logprob: -3.368969678878784
    7. ' pour' → logprob: -4.118969917297363
    8. ' l' → logprob: -4.243969917297363
    9. 'tout' → logprob: -4.743969917297363
    10. 'une' → logprob: -4.993969917297363

Token 58: ' pour' (ID: 1930)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5720277428627014
    2. '#' → logprob: -1.9470276832580566
    3. 'edges' → logprob: -2.4470276832580566
    4. 'G' → logprob: -2.4470276832580566
    5. 'adj' → logprob: -3.3220276832580566
    6. 'g' → logprob: -3.5720276832580566
    7. 'u' → logprob: -4.072027683258057
    8. 'd' → logprob: -5.197027683258057
    9. 'UV' → logprob: -5.572027683258057
    10. 'neighbors' → logprob: -5.697027683258057

Token 59: ' des' (ID: 731)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7393910884857178
    2. ' la' → logprob: -0.8643910884857178
    3. ' le' → logprob: -3.6143910884857178
    4. ' range' → logprob: -4.239391326904297
    5. ' for' → logprob: -4.489391326904297
    6. ' ' → logprob: -4.489391326904297
    7. ' les' → logprob: -4.614391326904297
    8. ' i' → logprob: -4.864391326904297
    9. 'l' → logprob: -5.739391326904297
    10. 'for' → logprob: -6.239391326904297

Token 60: ' d' (ID: 272)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.41290774941444397
    2. 'graph' → logprob: -1.1629077196121216
    3. ' graphs' → logprob: -5.787907600402832
    4. 'graphs' → logprob: -5.787907600402832
    5. ' listes' → logprob: -5.912907600402832
    6. 'list' → logprob: -6.975407600402832
    7. 'f' → logprob: -7.100407600402832
    8. ' vacances' → logprob: -7.287907600402832
    9. 'u' → logprob: -7.537907600402832
    10. '#' → logprob: -7.537907600402832

Token 61: 'icos' (ID: 6302)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1241480112075806
    2. 'é' → logprob: -1.1241480112075806
    3. 'éf' → logprob: -2.124147891998291
    4. 'onnées' → logprob: -2.499147891998291
    5. 'f' → logprob: -3.999147891998291
    6. 'fs' → logprob: -4.249147891998291
    7. '```' → logprob: -4.499147891998291
    8. 'onne' → logprob: -4.499147891998291
    9. 'ép' → logprob: -4.624147891998291
    10. 'ef' → logprob: -4.624147891998291

Token 62: ' index' (ID: 3472)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2234470844268799
    2. 'd' → logprob: -1.8484470844268799
    3. 'edges' → logprob: -2.47344708442688
    4. 'graph' → logprob: -2.84844708442688
    5. 'u' → logprob: -2.97344708442688
    6. 'adj' → logprob: -3.09844708442688
    7. 'es' → logprob: -3.34844708442688
    8. 'G' → logprob: -3.59844708442688
    9. 'neighbors' → logprob: -3.84844708442688
    10. 'g' → logprob: -3.97344708442688

Token 63: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.017967069521546364
    2. 'es' → logprob: -4.642967224121094
    3. 'é' → logprob: -4.892967224121094
    4. 'ées' → logprob: -8.642967224121094
    5. 'ès' → logprob: -9.017967224121094
    6. '```' → logprob: -9.892967224121094
    7. 's' → logprob: -10.142967224121094
    8. '0' → logprob: -10.142967224121094
    9. 't' → logprob: -10.517967224121094
    10. 'e' → logprob: -10.642967224121094

Token 64: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8307538628578186
    2. '_' → logprob: -1.3307538032531738
    3. ' =' → logprob: -1.7057538032531738
    4. '(' → logprob: -3.205753803253174
    5. ' defaultdict' → logprob: -4.205753803253174
    6. '0' → logprob: -5.205753803253174
    7. '_uv' → logprob: -5.205753803253174
    8. '=' → logprob: -5.205753803253174
    9. ' _' → logprob: -5.705753803253174
    10. ' by' → logprob: -5.705753803253174

Token 65: ' partir' (ID: 12100)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1307978630065918
    2. '0' → logprob: -2.505797863006592
    3. ' ' → logprob: -3.505797863006592
    4. ' partir' → logprob: -4.755797863006592
    5. 'un' → logprob: -6.630797863006592
    6. 'part' → logprob: -8.63079833984375
    7. 'u' → logprob: -9.00579833984375
    8. 'z' → logprob: -9.13079833984375
    9. 'from' → logprob: -9.50579833984375
    10. ' ' → logprob: -9.63079833984375

Token 66: ' de' (ID: 334)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00104305159766227
    2. '0' → logprob: -7.62604284286499
    3. ' ' → logprob: -7.62604284286499
    4. 'un' → logprob: -10.876043319702148
    5. '#' → logprob: -11.626043319702148
    6. '2' → logprob: -12.126043319702148
    7. 'à' → logprob: -12.376043319702148
    8. 's' → logprob: -12.751043319702148
    9. '```' → logprob: -12.938543319702148
    10. '   ' → logprob: -13.188543319702148

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007883060025051236
    2. '0' → logprob: -7.25078821182251
    3. ' ' → logprob: -9.500788688659668
    4. '2' → logprob: -13.750788688659668
    5. '   ' → logprob: -15.438288688659668
    6. '```' → logprob: -15.438288688659668
    7. ' ' → logprob: -15.813288688659668
    8. '6' → logprob: -15.938288688659668
    9. 'u' → logprob: -16.18828773498535
    10. '-' → logprob: -16.18828773498535

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022504113148897886
    2. '0' → logprob: -6.1272501945495605
    3. ' ' → logprob: -9.752250671386719
    4. '2' → logprob: -12.502250671386719
    5. 'un' → logprob: -14.439750671386719
    6. 'u' → logprob: -15.627250671386719
    7. '(' → logprob: -15.689750671386719
    8. '```' → logprob: -15.877250671386719
    9. '-' → logprob: -16.18975067138672
    10. 'l' → logprob: -16.37725067138672

Token 69: ' et' (ID: 859)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8911722898483276
    2. 'graph' → logprob: -1.7661722898483276
    3. 'adj' → logprob: -2.516172409057617
    4. 'edges' → logprob: -2.641172409057617
    5. 'G' → logprob: -2.891172409057617
    6. 'neighbors' → logprob: -3.641172409057617
    7. 'g' → logprob: -4.141172409057617
    8. ')' → logprob: -4.266172409057617
    9. 'u' → logprob: -4.391172409057617
    10. '
' → logprob: -4.516172409057617

Token 70: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.336476445198059
    2. ' des' → logprob: -1.336476445198059
    3. 'des' → logprob: -1.836476445198059
    4. 'M' → logprob: -3.0864763259887695
    5. ' M' → logprob: -3.4614763259887695
    6. ' non' → logprob: -3.7114763259887695
    7. 'default' → logprob: -3.7114763259887695
    8. 'de' → logprob: -3.7114763259887695
    9. '1' → logprob: -3.8364763259887695
    10. 'collections' → logprob: -3.8364763259887695

Token 71: ' nomen' (ID: 109606)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.5791321396827698
    2. ' adjacency' → logprob: -2.454132080078125
    3. '#' → logprob: -2.954132080078125
    4. 'from' → logprob: -3.454132080078125
    5. 'for' → logprob: -3.579132080078125
    6. 'liste' → logprob: -3.579132080078125
    7. ' defaultdict' → logprob: -3.954132080078125
    8. 'graph' → logprob: -4.079132080078125
    9. '```' → logprob: -4.079132080078125
    10. 'range' → logprob: -4.329132080078125

Token 72: 'clature' (ID: 180380)
  Prédit: 'clature'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clature' → logprob: -0.003122221678495407
    2. 'cl' → logprob: -6.003122329711914
    3. 'n' → logprob: -7.503122329711914
    4. '```' → logprob: -10.128122329711914
    5. 'cla' → logprob: -12.378122329711914
    6. 'r' → logprob: -12.503122329711914
    7. 'dict' → logprob: -12.878122329711914
    8. '_' → logprob: -12.878122329711914
    9. 'd' → logprob: -13.003122329711914
    10. 'm' → logprob: -13.253122329711914

Token 73: ' peu' (ID: 9235)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6338397860527039
    2. 'des' → logprob: -2.1338398456573486
    3. 'd' → logprob: -2.8838398456573486
    4. '=' → logprob: -3.1338398456573486
    5. ' =' → logprob: -3.2588398456573486
    6. ' :' → logprob: -3.6338398456573486
    7. ' des' → logprob: -3.7588398456573486
    8. 'de' → logprob: -4.0088396072387695
    9. '```' → logprob: -4.0088396072387695
    10. '_' → logprob: -4.0088396072387695

Token 74: ' standard' (ID: 7024)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comm' → logprob: -1.2898703813552856
    2. 'cl' → logprob: -2.164870262145996
    3. 'clair' → logprob: -2.164870262145996
    4. 'con' → logprob: -2.289870262145996
    5. 'exp' → logprob: -3.039870262145996
    6. 'lis' → logprob: -3.164870262145996
    7. 'python' → logprob: -3.289870262145996
    8. 'idi' → logprob: -3.664870262145996
    9. 'py' → logprob: -3.789870262145996
    10. 'compr' → logprob: -3.914870262145996

Token 75: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.37758663296699524
    2. 'g' → logprob: -2.502586603164673
    3. 'graph' → logprob: -2.752586603164673
    4. 'G' → logprob: -2.877586603164673
    5. 'adj' → logprob: -3.502586603164673
    6. 'u' → logprob: -3.752586603164673
    7. 'edges' → logprob: -4.252586841583252
    8. ':' → logprob: -5.127586841583252
    9. 'E' → logprob: -5.502586841583252
    10. '
' → logprob: -6.002586841583252

Token 76: 'network' (ID: 26724)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.762410581111908
    2. 'G' → logprob: -1.6374106407165527
    3. 'graph' → logprob: -2.2624106407165527
    4. 'g' → logprob: -2.8874106407165527
    5. 'u' → logprob: -3.1374106407165527
    6. 'adj' → logprob: -3.1374106407165527
    7. 'edges' → logprob: -3.6374106407165527
    8. '
' → logprob: -4.762410640716553
    9. 'E' → logprob: -4.887410640716553
    10. 'U' → logprob: -5.137410640716553

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026751074939966202
    2. '=' → logprob: -3.6517510414123535
    3. 's' → logprob: -8.401751518249512
    4. '_' → logprob: -8.526751518249512
    5. ',' → logprob: -11.901751518249512
    6. '1' → logprob: -12.151751518249512
    7. ' ' → logprob: -12.276751518249512
    8. '_edges' → logprob: -13.776751518249512
    9. '={}' → logprob: -13.776751518249512
    10. 'd' → logprob: -14.026751518249512

Token 78: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.8577479720115662
    2. '{' → logprob: -1.232748031616211
    3. '[' → logprob: -1.607748031616211
    4. ' {' → logprob: -3.482748031616211
    5. ' {}' → logprob: -3.982748031616211
    6. ' [' → logprob: -4.232748031616211
    7. ' [{}' → logprob: -4.357748031616211
    8. ' [[]' → logprob: -5.232748031616211
    9. 'dict' → logprob: -7.357748031616211
    10. '[{' → logprob: -7.482748031616211

Token 79: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.404609352350235
    2. 'set' → logprob: -1.7796093225479126
    3. '[]' → logprob: -2.029609441757202
    4. '0' → logprob: -4.029609203338623
    5. '{' → logprob: -4.904609203338623
    6. 'dict' → logprob: -5.029609203338623
    7. '[' → logprob: -8.404609680175781
    8. 'default' → logprob: -8.654609680175781
    9. ' []' → logprob: -8.904609680175781
    10. ' {}' → logprob: -9.404609680175781

Token 80: ' }' (ID: 388)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00045962471631355584
    2. 'i' → logprob: -8.000459671020508
    3. 'k' → logprob: -9.875459671020508
    4. 'j' → logprob: -10.375459671020508
    5. '}]' → logprob: -11.750459671020508
    6. ' }' → logprob: -11.875459671020508
    7. '}
' → logprob: -12.125459671020508
    8. '},' → logprob: -12.375459671020508
    9. '[]}' → logprob: -12.875459671020508
    10. ''i' → logprob: -13.125459671020508

Token 81: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6389796137809753
    2. 'for' → logprob: -0.7639796137809753
    3. ']' → logprob: -5.388979434967041
    4. ',' → logprob: -7.013979434967041
    5. '}' → logprob: -7.513979434967041
    6. ' ' → logprob: -8.2639799118042
    7. '()' → logprob: -10.1389799118042
    8. ')' → logprob: -11.3889799118042
    9. '	for' → logprob: -11.3889799118042
    10. ' ]' → logprob: -11.5139799118042

Token 82: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -6.265633419388905e-05
    2. ' _' → logprob: -10.125062942504883
    3. '_range' → logprob: -11.500062942504883
    4. 'i' → logprob: -12.500062942504883
    5. '_i' → logprob: -12.750062942504883
    6. ' range' → logprob: -13.375062942504883
    7. ' ' → logprob: -13.375062942504883
    8. 'range' → logprob: -13.875062942504883
    9. '(' → logprob: -14.000062942504883
    10. ' i' → logprob: -15.250062942504883

Token 83: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11098276823759079
    2. ' in' → logprob: -2.735982656478882
    3. ' _' → logprob: -4.235982894897461
    4. 'in' → logprob: -4.485982894897461
    5. 'range' → logprob: -5.110982894897461
    6. ' range' → logprob: -5.485982894897461
    7. ' ' → logprob: -5.735982894897461
    8. ' i' → logprob: -7.485982894897461
    9. 'i' → logprob: -7.860982894897461
    10. '_range' → logprob: -10.235982894897461

Token 84: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011052302084863186
    2. ' range' → logprob: -4.511052131652832
    3. 'rang' → logprob: -13.386052131652832
    4. '	range' → logprob: -14.011052131652832
    5. 'ran' → logprob: -14.261052131652832
    6. '_' → logprob: -14.261052131652832
    7. ' ' → logprob: -15.261052131652832
    8. 'r' → logprob: -15.261052131652832
    9. '(range' → logprob: -15.761052131652832
    10. 'ra' → logprob: -16.88605308532715

Token 85: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0013589247828349471
    2. '(' → logprob: -6.626358985900879
    3. '(M' → logprob: -10.626358985900879
    4. ' (' → logprob: -12.126358985900879
    5. 'N' → logprob: -13.376358985900879
    6. '(n' → logprob: -13.876358985900879
    7. '((' → logprob: -14.376358985900879
    8. '(
' → logprob: -16.376358032226562
    9. ' ' → logprob: -17.251358032226562
    10. ' N' → logprob: -17.876358032226562

Token 86: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010317517444491386
    2. ' +' → logprob: -4.635317325592041
    3. ')' → logprob: -7.885317325592041
    4. ')]' → logprob: -8.6353178024292
    5. ' )' → logprob: -12.6353178024292
    6. '1' → logprob: -13.0103178024292
    7. '+)' → logprob: -14.2603178024292
    8. ' ' → logprob: -14.6353178024292
    9. '+
' → logprob: -15.5103178024292
    10. '2' → logprob: -15.8853178024292

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011689399980241433
    2. ' ' → logprob: -9.375117301940918
    3. '2' → logprob: -10.375117301940918
    4. ')' → logprob: -15.812617301940918
    5. '   ' → logprob: -16.2501163482666
    6. '+' → logprob: -16.4376163482666
    7. '１' → logprob: -16.6251163482666
    8. '(' → logprob: -16.7501163482666
    9. '```' → logprob: -16.8126163482666
    10. '  ' → logprob: -17.0626163482666

Token 88: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5775429606437683
    2. ')]' → logprob: -0.8275429606437683
    3. ' )' → logprob: -7.202542781829834
    4. ']' → logprob: -7.202542781829834
    5. '}' → logprob: -9.827543258666992
    6. ' ]' → logprob: -10.577543258666992
    7. '}]' → logprob: -11.327543258666992
    8. ')}' → logprob: -11.577543258666992
    9. ' }]' → logprob: -12.327543258666992
    10. ')])' → logprob: -13.077543258666992

Token 89: 'IV' (ID: 4478)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0716148614883423
    2. '<|end|>' → logprob: -1.0716148614883423
    3. '
' → logprob: -1.8216148614883423
    4. ' for' → logprob: -2.1966147422790527
    5. ' 
' → logprob: -4.571614742279053
    6. '\n' → logprob: -4.946614742279053
    7. '  
' → logprob: -5.071614742279053
    8. ' ' → logprob: -5.196614742279053
    9. '' → logprob: -6.071614742279053
    10. ')' → logprob: -6.321614742279053

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.803697943687439
    2. 'S' → logprob: -1.053697943687439
    3. '=' → logprob: -2.8036980628967285
    4. 'E' → logprob: -2.9286980628967285
    5. 'L' → logprob: -3.9286980628967285
    6. 'A' → logprob: -4.5536980628967285
    7. 'ES' → logprob: -4.8036980628967285
    8. 'C' → logprob: -4.9286980628967285
    9. 'D' → logprob: -4.9286980628967285
    10. 's' → logprob: -5.5536980628967285

Token 91: ' iter' (ID: 10621)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28314948081970215
    2. '{}' → logprob: -2.158149480819702
    3. ' [' → logprob: -2.533149480819702
    4. '{' → logprob: -3.783149480819702
    5. '0' → logprob: -4.283149719238281
    6. '[]' → logprob: -5.033149719238281
    7. '1' → logprob: -6.033149719238281
    8. '[M' → logprob: -6.033149719238281
    9. ' {}' → logprob: -6.408149719238281
    10. ' ' → logprob: -7.783149719238281

Token 92: '(U' (ID: 27452)
  Prédit: '(U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(U' → logprob: -2.951771421066951e-05
    2. '(' → logprob: -10.500029563903809
    3. '((' → logprob: -13.500029563903809
    4. '(UI' → logprob: -15.000029563903809
    5. '(V' → logprob: -16.500028610229492
    6. '(E' → logprob: -17.000028610229492
    7. '([' → logprob: -17.625028610229492
    8. '(
' → logprob: -18.250028610229492
    9. 'U' → logprob: -18.375028610229492
    10. '(u' → logprob: -18.500028610229492

Token 93: 'VS' (ID: 35688)
  Prédit: 'VS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VS' → logprob: -0.0014569011982530355
    2. 'V' → logprob: -6.6264567375183105
    3. 'SV' → logprob: -9.751457214355469
    4. 'S' → logprob: -10.626457214355469
    5. '(V' → logprob: -11.126457214355469
    6. 'Vs' → logprob: -11.376457214355469
    7. '(S' → logprob: -11.501457214355469
    8. 'vs' → logprob: -12.251457214355469
    9. '(' → logprob: -12.376457214355469
    10. ' VS' → logprob: -14.001457214355469

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004424667276907712
    2. ' )' → logprob: -7.7504425048828125
    3. '))' → logprob: -12.125442504882812
    4. ')
' → logprob: -13.500442504882812
    5. '())' → logprob: -14.000442504882812
    6. ')}' → logprob: -14.625442504882812
    7. ' ' → logprob: -14.750442504882812
    8. ')

' → logprob: -14.875442504882812
    9. ',)' → logprob: -14.875442504882812
    10. '()' → logprob: -15.000442504882812

Token 95: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010067472234368324
    2. ' for' → logprob: -5.010067462921143
    3. '
' → logprob: -6.010067462921143
    4. '<|end|>' → logprob: -7.260067462921143
    5. ')' → logprob: -9.3850679397583
    6. '  
' → logprob: -10.3850679397583
    7. ':' → logprob: -10.6350679397583
    8. ' 
' → logprob: -11.2600679397583
    9. ' ' → logprob: -12.3850679397583
    10. '' → logprob: -12.6350679397583

Token 96: ' A' (ID: 355)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6006168723106384
    2. 'u' → logprob: -1.1006169319152832
    3. ' _' → logprob: -2.850616931915283
    4. '_' → logprob: -2.975616931915283
    5. '_u' → logprob: -4.975616931915283
    6. '(u' → logprob: -7.100616931915283
    7. ' ' → logprob: -7.725616931915283
    8. '_i' → logprob: -7.975616931915283
    9. '__' → logprob: -8.100616455078125
    10. ' i' → logprob: -8.100616455078125

Token 97: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10154106467962265
    2. ',B' → logprob: -2.351541042327881
    3. ' ,' → logprob: -6.851541042327881
    4. ',_' → logprob: -8.851541519165039
    5. '_,' → logprob: -9.851541519165039
    6. ',V' → logprob: -10.476541519165039
    7. ',b' → logprob: -11.351541519165039
    8. ' in' → logprob: -11.601541519165039
    9. ',I' → logprob: -12.601541519165039
    10. 'B' → logprob: -12.601541519165039

Token 98: ',W' (ID: 117252)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25195011496543884
    2. 'in' → logprob: -1.5019501447677612
    3. ' ' → logprob: -11.00195026397705
    4. ',' → logprob: -13.87695026397705
    5. 'n' → logprob: -14.00195026397705
    6. 'In' → logprob: -14.75195026397705
    7. '  ' → logprob: -14.87695026397705
    8. '	in' → logprob: -14.87695026397705
    9. ',in' → logprob: -15.87695026397705
    10. 's' → logprob: -16.001949310302734

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07007326185703278
    2. 'in' → logprob: -2.695073366165161
    3. ' ' → logprob: -9.445073127746582
    4. ',' → logprob: -10.320073127746582
    5. '  ' → logprob: -11.695073127746582
    6. 'n' → logprob: -12.570073127746582
    7. 's' → logprob: -12.820073127746582
    8. 'In' → logprob: -13.445073127746582
    9. ' ,' → logprob: -13.945073127746582
    10. '_' → logprob: -14.320073127746582

Token 100: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.014263882301747799
    2. 'zip' → logprob: -4.264264106750488
    3. '(zip' → logprob: -9.264264106750488
    4. ' ' → logprob: -12.389264106750488
    5. '.zip' → logprob: -14.764264106750488
    6. '  ' → logprob: -15.139264106750488
    7. '[(' → logprob: -15.139264106750488
    8. '   ' → logprob: -15.889264106750488
    9. '_zip' → logprob: -16.389263153076172
    10. '[' → logprob: -16.514263153076172

Token 101: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.895480277715251e-06
    2. '(I' → logprob: -11.875008583068848
    3. 'IV' → logprob: -14.250008583068848
    4. ' (' → logprob: -15.125008583068848
    5. '(iv' → logprob: -15.375008583068848
    6. '(A' → logprob: -15.500008583068848
    7. '(
' → logprob: -15.625008583068848
    8. '(IP' → logprob: -16.500009536743164
    9. '(IM' → logprob: -17.000009536743164
    10. '<|end|>' → logprob: -17.125009536743164

Token 102: 'IV' (ID: 4478)
  Prédit: 'IV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IV' → logprob: -4.906711546937004e-05
    2. ' IV' → logprob: -10.000048637390137
    3. ')' → logprob: -14.000048637390137
    4. '   ' → logprob: -14.000048637390137
    5. ' ' → logprob: -14.250048637390137
    6. '  ' → logprob: -14.625048637390137
    7. '_IV' → logprob: -15.125048637390137
    8. '    ' → logprob: -15.500048637390137
    9. 'iv' → logprob: -16.375049591064453
    10. '(' → logprob: -16.625049591064453

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020084569696336985
    2. ' ,' → logprob: -6.252008438110352
    3. '(),' → logprob: -9.752008438110352
    4. ' ' → logprob: -12.127008438110352
    5. '_,' → logprob: -12.752008438110352
    6. ',_' → logprob: -12.752008438110352
    7. ',__' → logprob: -13.002008438110352
    8. '   ' → logprob: -13.752008438110352
    9. 'IV' → logprob: -14.252008438110352
    10. ',A' → logprob: -14.377008438110352

Token 104: ' IV' (ID: 21695)
  Prédit: 'IV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IV' → logprob: -2.7729658540920354e-05
    2. ' IV' → logprob: -10.500027656555176
    3. ' ' → logprob: -16.250028610229492
    4. '_IV' → logprob: -17.375028610229492
    5. '   ' → logprob: -18.875028610229492
    6. 'iv' → logprob: -19.000028610229492
    7. '-IV' → logprob: -19.000028610229492
    8. 'UV' → logprob: -19.125028610229492
    9. '  ' → logprob: -19.875028610229492
    10. 'Iv' → logprob: -19.875028610229492

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009905342012643814
    2. '):' → logprob: -7.250990390777588
    3. ' ,' → logprob: -8.500990867614746
    4. ',W' → logprob: -10.250990867614746
    5. ')' → logprob: -10.875990867614746
    6. '):
' → logprob: -12.500990867614746
    7. '),' → logprob: -13.063490867614746
    8. ' ' → logprob: -13.188490867614746
    9. ' ):' → logprob: -13.813490867614746
    10. '(),' → logprob: -13.813490867614746

Token 106: ' IV' (ID: 21695)
  Prédit: 'IV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IV' → logprob: -0.00024251631111837924
    2. 'UV' → logprob: -9.000242233276367
    3. ' IV' → logprob: -9.375242233276367
    4. ')' → logprob: -10.375242233276367
    5. '_IV' → logprob: -13.500242233276367
    6. 'range' → logprob: -15.375242233276367
    7. ' ' → logprob: -15.375242233276367
    8. 'iv' → logprob: -15.750242233276367
    9. 'III' → logprob: -16.125242233276367
    10. '):
' → logprob: -16.500242233276367

Token 107: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012797261297237128
    2. '):
' → logprob: -9.500127792358398
    3. ')' → logprob: -10.250127792358398
    4. ' ):' → logprob: -11.250127792358398
    5. ':' → logprob: -12.500127792358398
    6. '):
' → logprob: -14.875127792358398
    7. '():' → logprob: -15.750127792358398
    8. ')：' → logprob: -16.3751277923584
    9. ',' → logprob: -16.6251277923584
    10. ']:' → logprob: -16.8751277923584

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021506788209080696
    2. ' network' → logprob: -4.2715067863464355
    3. 'network' → logprob: -5.0215067863464355
    4. '   ' → logprob: -8.271507263183594
    5. '
' → logprob: -9.021507263183594
    6. '<|end|>' → logprob: -9.271507263183594
    7. '    
' → logprob: -9.646507263183594
    8. '	net' → logprob: -10.521507263183594
    9. '  ' → logprob: -11.146507263183594
    10. ' ' → logprob: -11.271507263183594

Token 109: ' network' (ID: 5402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48849916458129883
    2. ' network' → logprob: -1.6134991645812988
    3. 'network' (adapté à ' network') → logprob: -1.7384991645812988
    4. ' if' → logprob: -4.863499164581299
    5. 'if' → logprob: -5.738499164581299
    6. '       ' → logprob: -8.48849868774414
    7. ' ' → logprob: -9.61349868774414
    8. '  ' → logprob: -9.73849868774414
    9. '
' → logprob: -9.86349868774414
    10. '    
' → logprob: -10.86349868774414

Token 110: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.004780526738613844
    2. '[B' → logprob: -5.379780292510986
    3. '[' → logprob: -8.754780769348145
    4. '[a' → logprob: -15.004780769348145
    5. '   ' → logprob: -15.254780769348145
    6. '[int' → logprob: -15.379780769348145
    7. 'A' → logprob: -15.379780769348145
    8. ' [' → logprob: -15.379780769348145
    9. '```' → logprob: -15.504780769348145
    10. '[I' → logprob: -15.754780769348145

Token 111: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0020776940509676933
    2. '].' → logprob: -6.752077579498291
    3. ']' → logprob: -7.127077579498291
    4. '[' → logprob: -10.37707805633545
    5. ' ][' → logprob: -10.50207805633545
    6. ']['' → logprob: -11.75207805633545
    7. '   ' → logprob: -12.25207805633545
    8. '[B' → logprob: -12.43957805633545
    9. '.setdefault' → logprob: -12.50207805633545
    10. ' ' → logprob: -12.75207805633545

Token 112: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00011152983643114567
    2. ' B' → logprob: -9.12511157989502
    3. '   ' → logprob: -13.00011157989502
    4. ' ' → logprob: -15.50011157989502
    5. '	B' → logprob: -16.750110626220703
    6. '>B' → logprob: -17.250110626220703
    7. 'b' → logprob: -17.625110626220703
    8. '
' → logprob: -18.000110626220703
    9. '"B' → logprob: -18.000110626220703
    10. ')' → logprob: -18.125110626220703

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007792697753757238
    2. ']=' → logprob: -5.0077924728393555
    3. ' ]' → logprob: -6.8827924728393555
    4. '=' → logprob: -10.007792472839355
    5. ']+=' → logprob: -12.882792472839355
    6. ' =' → logprob: -13.382792472839355
    7. ']=(' → logprob: -14.757792472839355
    8. ' ' → logprob: -14.757792472839355
    9. ')' → logprob: -15.507792472839355
    10. ']
' → logprob: -15.757792472839355

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889573276042938
    2. ' =' → logprob: -2.5788958072662354
    3. '=W' → logprob: -12.703895568847656
    4. ' ' → logprob: -13.578895568847656
    5. '+=' → logprob: -14.078895568847656
    6. '=

' → logprob: -15.203895568847656
    7. ' +=' → logprob: -15.953895568847656
    8. '=w' → logprob: -16.828895568847656
    9. '[' → logprob: -16.953895568847656
    10. '=
' → logprob: -17.078895568847656

Token 115: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.006146823056042194
    2. ' W' → logprob: -5.1311469078063965
    3. 'network' → logprob: -9.881146430969238
    4. 'max' → logprob: -10.256146430969238
    5. ' ' → logprob: -10.506146430969238
    6. '[' → logprob: -10.756146430969238
    7. '	W' → logprob: -11.006146430969238
    8. 'min' → logprob: -11.256146430969238
    9. '   ' → logprob: -11.381146430969238
    10. ' network' → logprob: -12.006146430969238

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006284446571953595
    2. 'network' → logprob: -8.000628471374512
    3. '<|end|>' → logprob: -8.375628471374512
    4. ' network' → logprob: -11.000628471374512
    5. ',' → logprob: -11.375628471374512
    6. '(network' → logprob: -12.250628471374512
    7. ';' → logprob: -12.250628471374512
    8. '.' → logprob: -12.500628471374512
    9. '[' → logprob: -12.625628471374512
    10. '<|end|>' → logprob: -12.750628471374512

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017916783690452576
    2. 'network' → logprob: -6.376791477203369
    3. '<|end|>' → logprob: -9.751791954040527
    4. '```' → logprob: -11.376791954040527
    5. ' network' → logprob: -12.251791954040527
    6. '...' → logprob: -12.751791954040527
    7. '  ' → logprob: -13.126791954040527
    8. '(network' → logprob: -13.501791954040527
    9. '   ' → logprob: -14.126791954040527
    10. '[' → logprob: -14.251791954040527

Token 118: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' (adapté à ' network') → logprob: -0.0023611404467374086
    2. '   ' → logprob: -6.877361297607422
    3. ' network' → logprob: -6.877361297607422
    4. 'if' → logprob: -8.252361297607422
    5. ' ' → logprob: -12.002361297607422
    6. ' if' → logprob: -12.002361297607422
    7. 'net' → logprob: -12.377361297607422
    8. '  ' → logprob: -12.752361297607422
    9. '(network' → logprob: -13.127361297607422
    10. '    ' → logprob: -13.252361297607422

Token 119: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -7.159660890465602e-05
    2. '[A' → logprob: -10.50007152557373
    3. 'B' → logprob: -10.75007152557373
    4. '[' → logprob: -11.37507152557373
    5. ' ' → logprob: -12.75007152557373
    6. '   ' → logprob: -13.25007152557373
    7. '```' → logprob: -13.25007152557373
    8. '[b' → logprob: -14.25007152557373
    9. ' [' → logprob: -14.50007152557373
    10. '	B' → logprob: -14.62507152557373

Token 120: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004757135466206819
    2. '[A' → logprob: -8.125475883483887
    3. ']' → logprob: -9.125475883483887
    4. ' ][' → logprob: -9.625475883483887
    5. '}[' → logprob: -13.625475883483887
    6. ')[' → logprob: -14.125475883483887
    7. '[' → logprob: -14.250475883483887
    8. '"][' → logprob: -14.750475883483887
    9. '   ' → logprob: -15.125475883483887
    10. '[B' → logprob: -15.250475883483887

Token 121: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.735893965815194e-05
    2. ' A' → logprob: -11.000017166137695
    3. ' ' → logprob: -15.125017166137695
    4. '   ' → logprob: -16.000017166137695
    5. '[' → logprob: -16.625017166137695
    6. '<|end|>' → logprob: -16.875017166137695
    7. '[A' → logprob: -16.875017166137695
    8. '  ' → logprob: -17.125017166137695
    9. '	A' → logprob: -18.125017166137695
    10. ']' → logprob: -18.250017166137695

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003286209423094988
    2. ']=' → logprob: -6.003286361694336
    3. '=' → logprob: -7.753286361694336
    4. ' ]' → logprob: -8.503286361694336
    5. '[' → logprob: -8.878286361694336
    6. ' =' → logprob: -10.253286361694336
    7. '][' → logprob: -13.503286361694336
    8. ')' → logprob: -14.378286361694336
    9. ' ' → logprob: -14.503286361694336
    10. '=W' → logprob: -14.878286361694336

Token 123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16473348438739777
    2. ' =' → logprob: -1.9147335290908813
    3. '[' → logprob: -5.414733409881592
    4. '=W' → logprob: -10.16473388671875
    5. ' ' → logprob: -12.53973388671875
    6. ' [' → logprob: -12.78973388671875
    7. ']' → logprob: -13.28973388671875
    8. ')' → logprob: -14.91473388671875
    9. '['' → logprob: -14.91473388671875
    10. ']=' → logprob: -15.16473388671875

Token 124: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.014164801687002182
    2. ' W' → logprob: -4.264164924621582
    3. '	W' → logprob: -14.514164924621582
    4. ' ' → logprob: -15.014164924621582
    5. '   ' → logprob: -15.139164924621582
    6. ' ' → logprob: -16.639163970947266
    7. 'w' → logprob: -17.139163970947266
    8. '<|end|>' → logprob: -17.264163970947266
    9. '  ' → logprob: -17.389163970947266
    10. '```' → logprob: -17.764163970947266

Token 125: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8779410719871521
    2. '#' → logprob: -1.0029411315917969
    3. 'def' → logprob: -3.127941131591797
    4. '<|end|>' → logprob: -4.002941131591797
    5. 'visited' → logprob: -4.377941131591797
    6. 'distance' → logprob: -4.502941131591797
    7. 'dist' → logprob: -4.502941131591797
    8. 'max' → logprob: -4.877941131591797
    9. 'd' → logprob: -4.877941131591797
    10. 'degree' → logprob: -5.002941131591797

Token 126: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5380548238754272
    2. 'for' → logprob: -1.5380548238754272
    3. '
' → logprob: -1.9130548238754272
    4. '#' → logprob: -2.413054943084717
    5. 'dist' → logprob: -2.913054943084717
    6. 'def' → logprob: -3.413054943084717
    7. 'distance' → logprob: -3.663054943084717
    8. 'n' → logprob: -3.788054943084717
    9. '\n' → logprob: -3.913054943084717
    10. ')' → logprob: -4.288054943084717

Token 127: ' DF' (ID: 67634)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08772203326225281
    2. 'd' → logprob: -2.962722063064575
    3. ' dfs' → logprob: -4.212721824645996
    4. ' shortest' → logprob: -4.837721824645996
    5. ' solve' → logprob: -6.337721824645996
    6. 'dfs' → logprob: -6.587721824645996
    7. ' bfs' → logprob: -7.087721824645996
    8. 'short' → logprob: -7.212721824645996
    9. 'solve' → logprob: -7.337721824645996
    10. ' D' → logprob: -7.462721824645996

Token 128: '_s' (ID: 1278)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.513339445111342e-05
    2. 'Search' → logprob: -11.000044822692871
    3. 'Scan' → logprob: -12.500044822692871
    4. '
' → logprob: -12.875044822692871
    5. ' S' → logprob: -13.250044822692871
    6. 'Sc' → logprob: -13.375044822692871
    7. 'Sand' → logprob: -13.375044822692871
    8. '

' → logprob: -13.625044822692871
    9. 's' → logprob: -13.625044822692871
    10. 'T' → logprob: -13.875044822692871

Token 129: '(ROOT' (ID: 188855)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.7476099133491516
    2. 'earch' → logprob: -0.7476099133491516
    3. '(' → logprob: -3.497609853744507
    4. 'f' → logprob: -4.872610092163086
    5. 'E' → logprob: -5.747610092163086
    6. 'ear' → logprob: -5.872610092163086
    7. 'e' → logprob: -6.122610092163086
    8. 'T' → logprob: -6.622610092163086
    9. 'S' → logprob: -7.122610092163086
    10. '_' → logprob: -7.747610092163086

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012666920199990273
    2. '):' → logprob: -4.887666702270508
    3. ',v' → logprob: -6.012666702270508
    4. ',node' → logprob: -6.512666702270508
    5. ' ,' → logprob: -8.262666702270508
    6. ',u' → logprob: -8.887666702270508
    7. ',start' → logprob: -9.012666702270508
    8. ',n' → logprob: -9.012666702270508
    9. ',V' → logprob: -9.637666702270508
    10. ',k' → logprob: -9.637666702270508

Token 131: ' VAL' (ID: 22518)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3654439449310303
    2. ' visited' → logprob: -1.4904439449310303
    3. 'VIS' → logprob: -3.4904439449310303
    4. ' VIS' → logprob: -3.6154439449310303
    5. ' V' → logprob: -5.115444183349609
    6. 'V' → logprob: -5.615444183349609
    7. 'Visited' → logprob: -6.240444183349609
    8. ' node' → logprob: -6.240444183349609
    9. 'node' → logprob: -6.740444183349609
    10. 'seen' → logprob: -7.240444183349609

Token 132: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3784389793872833
    2. '):
' → logprob: -2.003438949584961
    3. '):' → logprob: -2.128438949584961
    4. 'UE' → logprob: -4.003438949584961
    5. 'AL' → logprob: -5.003438949584961
    6. '):

' → logprob: -5.128438949584961
    7. 'ALUE' → logprob: -5.378438949584961
    8. '=' → logprob: -5.378438949584961
    9. 'UES' → logprob: -5.753438949584961
    10. 'E' → logprob: -5.753438949584961

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45268285274505615
    2. ' stack' → logprob: -1.2026828527450562
    3. 'stack' → logprob: -3.4526829719543457
    4. '	stack' → logprob: -3.9526829719543457
    5. ' visited' → logprob: -4.702682971954346
    6. 'visited' → logprob: -6.702682971954346
    7. ' seen' → logprob: -7.077682971954346
    8. ' stk' → logprob: -8.577682495117188
    9. ' for' → logprob: -8.577682495117188
    10. '  ' → logprob: -8.952682495117188

Token 134: ' Z' (ID: 1489)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5070319175720215
    2. ' stack' → logprob: -1.3820319175720215
    3. 'visited' → logprob: -2.6320319175720215
    4. '   ' → logprob: -3.8820319175720215
    5. 'seen' → logprob: -3.8820319175720215
    6. ' visited' → logprob: -4.1320319175720215
    7. ' seen' → logprob: -5.5070319175720215
    8. 'vis' → logprob: -7.0070319175720215
    9. '	stack' → logprob: -7.1320319175720215
    10. 'stk' → logprob: -7.2570319175720215

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2532040476799011
    2. '=' → logprob: -1.753204107284546
    3. ',' → logprob: -4.878203868865967
    4. '=[]' → logprob: -5.003203868865967
    5. '=[]
' → logprob: -5.003203868865967
    6. 'stack' → logprob: -5.503203868865967
    7. 'IST' → logprob: -5.503203868865967
    8. '   ' → logprob: -5.503203868865967
    9. 'is' → logprob: -5.628203868865967
    10. '=[' → logprob: -5.753203868865967

Token 136: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24430647492408752
    2. '{' → logprob: -1.9943064451217651
    3. '[(' → logprob: -2.9943065643310547
    4. '[]' → logprob: -4.244306564331055
    5. 'set' → logprob: -4.869306564331055
    6. '[]
' → logprob: -5.869306564331055
    7. '[val' → logprob: -6.244306564331055
    8. '0' → logprob: -6.494306564331055
    9. '1' → logprob: -7.619306564331055
    10. '[-' → logprob: -7.744306564331055

Token 137: '0' (ID: 15)
  Prédit: 'ROOT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROOT' → logprob: -0.39094364643096924
    2. 'False' → logprob: -1.5159436464309692
    3. '(ROOT' → logprob: -3.2659435272216797
    4. '(' → logprob: -3.7659435272216797
    5. '0' → logprob: -3.7659435272216797
    6. 'Root' → logprob: -4.64094352722168
    7. '(False' → logprob: -5.89094352722168
    8. '-' → logprob: -6.14094352722168
    9. 'VAL' → logprob: -6.14094352722168
    10. '(-' → logprob: -7.76594352722168

Token 138: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13210321962833405
    2. ']*(' → logprob: -2.257103204727173
    3. ']*' → logprob: -4.007103443145752
    4. ' ]' → logprob: -8.257102966308594
    5. ']+' → logprob: -8.382102966308594
    6. ',' → logprob: -8.382102966308594
    7. ' for' → logprob: -9.382102966308594
    8. 'for' → logprob: -9.632102966308594
    9. '])' → logprob: -11.382102966308594
    10. ']
' → logprob: -11.632102966308594

Token 139: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.822646693966817e-06
    2. 'len' → logprob: -11.875007629394531
    3. ' N' → logprob: -14.375007629394531
    4. '(N' → logprob: -15.250007629394531
    5. 'n' → logprob: -18.75000762939453
    6. '(len' → logprob: -18.87500762939453
    7. '   ' → logprob: -19.00000762939453
    8. ' ' → logprob: -19.12500762939453
    9. '	N' → logprob: -19.25000762939453
    10. 'M' → logprob: -19.62500762939453

Token 140: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.523948907968588e-05
    2. ' +' → logprob: -10.375035285949707
    3. '+
' → logprob: -12.625035285949707
    4. '+)' → logprob: -14.625035285949707
    5. '+[' → logprob: -15.750035285949707
    6. '1' → logprob: -17.25003433227539
    7. ')' → logprob: -17.62503433227539
    8. '+B' → logprob: -18.25003433227539
    9. '+

' → logprob: -18.62503433227539
    10. '+A' → logprob: -18.87503433227539

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. '2' → logprob: -10.375041007995605
    3. ' ' → logprob: -11.875041007995605
    4. '```' → logprob: -14.250041007995605
    5. ')' → logprob: -14.375041007995605
    6. '3' → logprob: -14.687541007995605
    7. '7' → logprob: -15.625041007995605
    8. '+' → logprob: -15.625041007995605
    9. '   ' → logprob: -15.875041007995605
    10. '
' → logprob: -15.937541007995605

Token 142: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5290492177009583
    2. ')' → logprob: -0.9040492177009583
    3. ')
' → logprob: -5.154049396514893
    4. ')

' → logprob: -9.904048919677734
    5. ' )
' → logprob: -10.029048919677734
    6. ');' → logprob: -11.029048919677734
    7. ' )' → logprob: -11.404048919677734
    8. '
' → logprob: -12.779048919677734
    9. '
' → logprob: -13.654048919677734
    10. ')

' → logprob: -13.904048919677734

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.277014821767807
    2. ' stack' → logprob: -1.6520148515701294
    3. 'stack' → logprob: -3.40201473236084
    4. '	stack' → logprob: -4.65201473236084
    5. ' Q' → logprob: -6.40201473236084
    6. ' Z' → logprob: -6.90201473236084
    7. 'Z' → logprob: -7.27701473236084
    8. 'Q' → logprob: -7.40201473236084
    9. 'STACK' → logprob: -7.40201473236084
    10. ' STACK' → logprob: -7.77701473236084

Token 144: ' L' (ID: 451)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.4701031744480133
    2. 'Z' → logprob: -1.595103144645691
    3. 'S' → logprob: -2.4701032638549805
    4. 'Q' → logprob: -3.5951032638549805
    5. ' stack' → logprob: -4.0951032638549805
    6. '   ' → logprob: -5.2201032638549805
    7. 'V' → logprob: -5.2201032638549805
    8. ' Z' → logprob: -5.4701032638549805
    9. ' S' → logprob: -5.7201032638549805
    10. 'D' → logprob: -5.7201032638549805

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5978413224220276
    2. '=' → logprob: -1.7228412628173828
    3. 'IST' → logprob: -1.8478412628173828
    4. 'stack' → logprob: -3.972841262817383
    5. '=[' → logprob: -4.347841262817383
    6. 'ist' → logprob: -4.597841262817383
    7. 'V' → logprob: -4.722841262817383
    8. 'L' → logprob: -4.972841262817383
    9. 'IFO' → logprob: -5.097841262817383
    10. 'E' → logprob: -5.222841262817383

Token 146: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021582158282399178
    2. '[(' → logprob: -4.021582126617432
    3. '[R' → logprob: -6.521582126617432
    4. '[]' → logprob: -6.896582126617432
    5. '[root' → logprob: -8.02158260345459
    6. '[val' → logprob: -8.52158260345459
    7. '[V' → logprob: -9.02158260345459
    8. '[B' → logprob: -9.64658260345459
    9. '[A' → logprob: -10.02158260345459
    10. '[I' → logprob: -10.27158260345459

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -12.87501049041748
    3. 'float' → logprob: -13.00001049041748
    4. '2' → logprob: -13.25001049041748
    5. 'N' → logprob: -14.00001049041748
    6. '-' → logprob: -14.12501049041748
    7. '~' → logprob: -14.25001049041748
    8. '999' → logprob: -15.25001049041748
    9. ' ' → logprob: -15.75001049041748
    10. '100' → logprob: -16.000011444091797

Token 148: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.005642566829919815
    2. ']' → logprob: -5.380642414093018
    3. ')*(' → logprob: -7.880642414093018
    4. '*(' → logprob: -8.005642890930176
    5. ' for' → logprob: -8.880642890930176
    6. 'for' → logprob: -9.255642890930176
    7. '](' → logprob: -10.755642890930176
    8. ']*' → logprob: -10.755642890930176
    9. ',' → logprob: -11.505642890930176
    10. ')' → logprob: -11.755642890930176

Token 149: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00016659092216286808
    2. '(N' → logprob: -8.750166893005371
    3. ' N' → logprob: -12.375166893005371
    4. '(' → logprob: -12.750166893005371
    5. 'len' → logprob: -15.250166893005371
    6. 'n' → logprob: -15.500166893005371
    7. ')' → logprob: -15.875166893005371
    8. ' (' → logprob: -16.375165939331055
    9. '
' → logprob: -17.000165939331055
    10. '   ' → logprob: -17.000165939331055

Token 150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000340945553034544
    2. '1' → logprob: -8.000341415405273
    3. ' +' → logprob: -12.250341415405273
    4. '+
' → logprob: -14.750341415405273
    5. '+A' → logprob: -15.875341415405273
    6. '()+' → logprob: -16.875341415405273
    7. '```' → logprob: -16.875341415405273
    8. ')+' → logprob: -16.875341415405273
    9. '＋' → logprob: -17.250341415405273
    10. '[' → logprob: -17.250341415405273

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '2' → logprob: -14.250000953674316
    3. '+' → logprob: -15.125000953674316
    4. ' ' → logprob: -15.500000953674316
    5. '```' → logprob: -16.125001907348633
    6. 'N' → logprob: -16.500001907348633
    7. ')' → logprob: -16.750001907348633
    8. '<|end|>' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '[' → logprob: -19.062501907348633

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0380634106695652
    2. ')
' → logprob: -3.2880635261535645
    3. ')

' → logprob: -11.788063049316406
    4. '<|end|>' → logprob: -12.288063049316406
    5. ')
' → logprob: -12.538063049316406
    6. '   ' → logprob: -12.538063049316406
    7. ' )' → logprob: -14.038063049316406
    8. '
' → logprob: -15.038063049316406
    9. '),' → logprob: -15.163063049316406
    10. ')return' → logprob: -15.413063049316406

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052715472877025604
    2. ' stack' → logprob: -3.427715539932251
    3. 'stack' → logprob: -4.927715301513672
    4. '	stack' → logprob: -5.677715301513672
    5. 'Q' → logprob: -6.302715301513672
    6. ' S' → logprob: -6.802715301513672
    7. 'S' → logprob: -7.052715301513672
    8. ' Q' → logprob: -7.177715301513672
    9. 'Stack' → logprob: -7.802715301513672
    10. 'D' → logprob: -7.927715301513672

Token 154: ' P' (ID: 398)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1385061740875244
    2. 'stack' → logprob: -1.2635061740875244
    3. 'Q' → logprob: -1.8885061740875244
    4. 'Z' → logprob: -2.7635061740875244
    5. 'P' (adapté à ' P') → logprob: -3.2635061740875244
    6. 'T' → logprob: -3.6385061740875244
    7. ' stack' → logprob: -3.6385061740875244
    8. 'L' → logprob: -3.6385061740875244
    9. '   ' → logprob: -4.013505935668945
    10. 'D' → logprob: -4.138505935668945

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3506457507610321
    2. ' =' → logprob: -1.2256457805633545
    3. 'L' → logprob: -8.475646018981934
    4. '[' → logprob: -8.600646018981934
    5. 'def' → logprob: -8.600646018981934
    6. '=[]
' → logprob: -8.600646018981934
    7. '=[]' → logprob: -8.725646018981934
    8. ' ' → logprob: -8.725646018981934
    9. '=[' → logprob: -8.850646018981934
    10. ',' → logprob: -8.975646018981934

Token 156: ' (-' (ID: 21382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0941656231880188
    2. '[-' → logprob: -2.469165563583374
    3. '[root' → logprob: -5.469165802001953
    4. '[]' → logprob: -7.719165802001953
    5. '[R' → logprob: -8.219165802001953
    6. '[(' → logprob: -8.594165802001953
    7. '[]
' → logprob: -10.844165802001953
    8. ' [' → logprob: -10.844165802001953
    9. '(ROOT' → logprob: -11.469165802001953
    10. '[P' → logprob: -12.094165802001953

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000457605579867959
    2. 'ROOT' → logprob: -8.250457763671875
    3. 'N' → logprob: -9.500457763671875
    4. ')' → logprob: -10.625457763671875
    5. 'root' → logprob: -10.875457763671875
    6. '2' → logprob: -10.875457763671875
    7. '(ROOT' → logprob: -11.500457763671875
    8. '(' → logprob: -11.875457763671875
    9. 'VAL' → logprob: -11.875457763671875
    10. '[root' → logprob: -12.000457763671875

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08158106356859207
    2. ')' → logprob: -3.0815811157226562
    3. ',N' → logprob: -4.206581115722656
    4. '1' → logprob: -4.956581115722656
    5. ',)' → logprob: -5.081581115722656
    6. 'N' → logprob: -7.456581115722656
    7. '[' → logprob: -7.831581115722656
    8. '[N' → logprob: -7.831581115722656
    9. ',-' → logprob: -7.956581115722656
    10. ',None' → logprob: -7.956581115722656

Token 159: ')*(' (ID: 44406)
  Prédit: 'ROOT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ROOT' → logprob: -0.10747801512479782
    2. '1' → logprob: -3.107477903366089
    3. ')' → logprob: -3.732477903366089
    4. '[' → logprob: -4.857478141784668
    5. '-' → logprob: -5.107478141784668
    6. 'Root' → logprob: -5.357478141784668
    7. '[root' → logprob: -5.607478141784668
    8. '[]' → logprob: -5.732478141784668
    9. '(ROOT' → logprob: -5.857478141784668
    10. ' ROOT' → logprob: -7.232478141784668

Token 160: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007840367034077644
    2. '(N' → logprob: -4.882840156555176
    3. '(' → logprob: -8.882840156555176
    4. ' N' → logprob: -9.757840156555176
    5. ' (' → logprob: -11.257840156555176
    6. '0' → logprob: -11.882840156555176
    7. '   ' → logprob: -12.632840156555176
    8. '2' → logprob: -13.007840156555176
    9. '1' → logprob: -13.132840156555176
    10. ' ' → logprob: -13.507840156555176

Token 161: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.802049756515771e-05
    2. '1' → logprob: -9.625067710876465
    3. ' +' → logprob: -14.375067710876465
    4. '+
' → logprob: -14.625067710876465
    5. '```' → logprob: -15.000067710876465
    6. '()+' → logprob: -15.750067710876465
    7. '+)' → logprob: -16.62506866455078
    8. '(' → logprob: -16.75006866455078
    9. '[' → logprob: -17.00006866455078
    10. '+A' → logprob: -17.37506866455078

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. '2' → logprob: -12.250006675720215
    3. ')' → logprob: -14.625006675720215
    4. ' ' → logprob: -14.625006675720215
    5. 'N' → logprob: -15.500006675720215
    6. '+' → logprob: -15.625006675720215
    7. '(' → logprob: -16.0000057220459
    8. '```' → logprob: -16.1250057220459
    9. '[' → logprob: -16.6250057220459
    10. '   ' → logprob: -17.3750057220459

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001636739238165319
    2. ')
' → logprob: -6.501636505126953
    3. ' )' → logprob: -9.126636505126953
    4. ',' → logprob: -11.876636505126953
    5. ')

' → logprob: -11.876636505126953
    6. ')
' → logprob: -12.126636505126953
    7. ' ' → logprob: -14.126636505126953
    8. ')`' → logprob: -14.251636505126953
    9. 'def' → logprob: -14.376636505126953
    10. '),' → logprob: -14.501636505126953

Token 164: '   ' (ID: 271)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.593852698802948
    2. '   ' → logprob: -1.3438527584075928
    3. ' stack' → logprob: -1.8438527584075928
    4. 'S' → logprob: -4.718852519989014
    5. 'Q' → logprob: -5.843852519989014
    6. ' S' → logprob: -5.843852519989014
    7. '	stack' → logprob: -5.843852519989014
    8. 'STACK' → logprob: -6.593852519989014
    9. 'Stack' → logprob: -6.968852519989014
    10. '
' → logprob: -6.968852519989014

Token 165: ' P' (ID: 398)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.2772655785083771
    2. 'S' → logprob: -1.9022655487060547
    3. 'Q' → logprob: -3.2772655487060547
    4. ' stack' → logprob: -4.402265548706055
    5. 'L' → logprob: -4.777265548706055
    6. '   ' → logprob: -5.027265548706055
    7. 'Z' → logprob: -5.277265548706055
    8. 'STACK' → logprob: -5.902265548706055
    9. 'stk' → logprob: -6.402265548706055
    10. 's' → logprob: -6.402265548706055

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18072259426116943
    2. ' =' → logprob: -2.055722713470459
    3. '[' → logprob: -3.680722713470459
    4. '[root' → logprob: -5.555722713470459
    5. '=[' → logprob: -6.305722713470459
    6. '(ROOT' → logprob: -6.555722713470459
    7. 'ROOT' → logprob: -7.555722713470459
    8. ')' → logprob: -7.680722713470459
    9. 'def' → logprob: -7.680722713470459
    10. '=list' → logprob: -8.0557222366333

Token 167: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.397416353225708
    2. '(' → logprob: -1.647416353225708
    3. '(-' → logprob: -1.772416353225708
    4. '[' → logprob: -2.522416353225708
    5. 'P' → logprob: -2.522416353225708
    6. '(P' → logprob: -3.022416353225708
    7. '(ROOT' → logprob: -3.022416353225708
    8. '(list' → logprob: -3.147416353225708
    9. '[-' → logprob: -3.272416353225708
    10. 'tuple' → logprob: -4.397416114807129

Token 168: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0005296798190101981
    2. '((-' → logprob: -8.500529289245605
    3. '((' → logprob: -8.750529289245605
    4. 'P' → logprob: -9.125529289245605
    5. '(' → logprob: -10.000529289245605
    6. '(-' → logprob: -11.875529289245605
    7. '(range' → logprob: -12.750529289245605
    8. '(p' → logprob: -14.000529289245605
    9. ' (' → logprob: -14.500529289245605
    10. '[P' → logprob: -14.625529289245605

Token 169: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4767994284629822
    2. ')' → logprob: -0.9767994284629822
    3. ')
' → logprob: -5.976799488067627
    4. ')

' → logprob: -9.351799011230469
    5. ');' → logprob: -11.101799011230469
    6. ' )
' → logprob: -11.476799011230469
    7. 'P' → logprob: -11.476799011230469
    8. '(P' → logprob: -11.476799011230469
    9. '())
' → logprob: -11.726799011230469
    10. '(' → logprob: -11.976799011230469

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14409305155277252
    2. 'stack' → logprob: -2.5190930366516113
    3. ' stack' → logprob: -3.2690930366516113
    4. 'S' → logprob: -5.269093036651611
    5. '	stack' → logprob: -5.894093036651611
    6. ' S' → logprob: -6.394093036651611
    7. 'Q' → logprob: -6.894093036651611
    8. 'Stack' → logprob: -7.269093036651611
    9. 'L' → logprob: -7.394093036651611
    10. 's' → logprob: -7.894093036651611

Token 171: ' Z' (ID: 1489)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8551881909370422
    2. 'stack' → logprob: -1.2301881313323975
    3. 'L' → logprob: -2.2301881313323975
    4. '   ' → logprob: -2.6051881313323975
    5. 'Q' → logprob: -3.3551881313323975
    6. ' stack' → logprob: -3.7301881313323975
    7. 'Z' (adapté à ' Z') → logprob: -3.8551881313323975
    8. ' S' → logprob: -5.730188369750977
    9. 'D' → logprob: -5.980188369750977
    10. 'Stack' → logprob: -6.105188369750977

Token 172: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000824156915768981
    2. '[root' → logprob: -7.250823974609375
    3. '=' → logprob: -9.875823974609375
    4. ' =' → logprob: -10.500823974609375
    5. '[:]' → logprob: -12.125823974609375
    6. '```' → logprob: -12.625823974609375
    7. '(ROOT' → logprob: -12.625823974609375
    8. '[S' → logprob: -12.625823974609375
    9. '

' → logprob: -13.125823974609375
    10. 'ROOT' → logprob: -13.250823974609375

Token 173: 'ROOT' (ID: 51010)
  Prédit: 'ROOT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROOT' → logprob: -0.0004997743526473641
    2. '0' → logprob: -8.500499725341797
    3. 'Root' → logprob: -9.375499725341797
    4. ' ROOT' → logprob: -9.500499725341797
    5. 'root' → logprob: -10.250499725341797
    6. ']' → logprob: -10.375499725341797
    7. '_ROOT' → logprob: -10.500499725341797
    8. '(ROOT' → logprob: -10.875499725341797
    9. '[root' → logprob: -12.125499725341797
    10. 'VAL' → logprob: -12.375499725341797

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017873981269076467
    2. ']=' → logprob: -6.376787185668945
    3. ' ]' → logprob: -9.626787185668945
    4. ']+=' → logprob: -11.251787185668945
    5. '=' → logprob: -12.876787185668945
    6. ')' → logprob: -13.001787185668945
    7. '-' → logprob: -14.751787185668945
    8. '[' → logprob: -14.876787185668945
    9. ']==' → logprob: -16.501787185668945
    10. ']
' → logprob: -16.626787185668945

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07897317409515381
    2. ' =' → logprob: -2.5789732933044434
    3. '+=' → logprob: -9.828972816467285
    4. ',' → logprob: -11.328972816467285
    5. ' +=' → logprob: -11.328972816467285
    6. '=True' → logprob: -13.328972816467285
    7. ' ' → logprob: -13.578972816467285
    8. '[' → logprob: -13.703972816467285
    9. '=int' → logprob: -15.328972816467285
    10. '.=' → logprob: -15.328972816467285

Token 176: ' VAL' (ID: 22518)
  Prédit: 'VAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VAL' → logprob: -0.004044563975185156
    2. '0' → logprob: -6.254044532775879
    3. ' VAL' → logprob: -6.379044532775879
    4. '1' → logprob: -8.129044532775879
    5. 'val' → logprob: -10.004044532775879
    6. ' ' → logprob: -10.254044532775879
    7. 'VA' → logprob: -11.879044532775879
    8. '100' → logprob: -12.004044532775879
    9. '   ' → logprob: -12.629044532775879
    10. 'V' → logprob: -12.754044532775879

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3786495625972748
    2. '
' → logprob: -1.7536495923995972
    3. ' stack' → logprob: -2.8786494731903076
    4. '	stack' → logprob: -3.1286494731903076
    5. 'stack' → logprob: -3.8786494731903076
    6. '    
' → logprob: -5.003649711608887
    7. ' for' → logprob: -5.378649711608887
    8. '<|end|>' → logprob: -6.628649711608887
    9. 'for' → logprob: -6.753649711608887
    10. '_stack' → logprob: -6.878649711608887

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12916919589042664
    2. ' stack' → logprob: -2.879169225692749
    3. '	stack' → logprob: -3.629169225692749
    4. 'stack' → logprob: -3.754169225692749
    5. ' for' → logprob: -4.75416898727417
    6. 'for' → logprob: -6.00416898727417
    7. '
' → logprob: -6.75416898727417
    8. ' queue' → logprob: -7.12916898727417
    9. '	queue' → logprob: -7.87916898727417
    10. '_stack' → logprob: -8.254169464111328

Token 179: ' L' (ID: 451)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.1096697524189949
    2. 'S' → logprob: -2.9846696853637695
    3. 'Q' → logprob: -3.6096696853637695
    4. 'from' → logprob: -4.2346696853637695
    5. 'for' → logprob: -4.7346696853637695
    6. 'L' (adapté à ' L') → logprob: -7.7346696853637695
    7. 'import' → logprob: -7.8596696853637695
    8. '   ' → logprob: -7.9846696853637695
    9. 'Stack' → logprob: -8.23466968536377
    10. 'F' → logprob: -8.23466968536377

Token 180: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011966594029217958
    2. '=' → logprob: -7.25119686126709
    3. '[root' → logprob: -9.12619686126709
    4. '   ' → logprob: -9.37619686126709
    5. ' =' → logprob: -9.37619686126709
    6. '=[' → logprob: -9.50119686126709
    7. 'queue' → logprob: -10.25119686126709
    8. 'stack' → logprob: -11.37619686126709
    9. '_queue' → logprob: -11.50119686126709
    10. '```' → logprob: -11.75119686126709

Token 181: 'ROOT' (ID: 51010)
  Prédit: 'ROOT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ROOT' → logprob: -0.00010819212911883369
    2. ' ROOT' → logprob: -9.375107765197754
    3. '_ROOT' → logprob: -11.500107765197754
    4. '(ROOT' → logprob: -11.750107765197754
    5. '0' → logprob: -13.000107765197754
    6. 'root' → logprob: -13.500107765197754
    7. '[root' → logprob: -14.625107765197754
    8. 'Root' → logprob: -15.125107765197754
    9. 'RO' → logprob: -15.250107765197754
    10. ')' → logprob: -15.625107765197754

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003054950386285782
    2. ']=' → logprob: -5.878055095672607
    3. ' ]' → logprob: -8.37805461883545
    4. '=' → logprob: -11.00305461883545
    5. ')' → logprob: -13.50305461883545
    6. ']+=' → logprob: -14.00305461883545
    7. ' =' → logprob: -14.75305461883545
    8. ']=-' → logprob: -14.87805461883545
    9. '[' → logprob: -16.128055572509766
    10. ',' → logprob: -16.253055572509766

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602274775505066
    2. ' =' → logprob: -1.9102275371551514
    3. ',' → logprob: -13.53522777557373
    4. '0' → logprob: -13.78522777557373
    5. '+=' → logprob: -15.91022777557373
    6. ')' → logprob: -15.91022777557373
    7. '[' → logprob: -16.035226821899414
    8. ']=' → logprob: -16.285226821899414
    9. 'def' → logprob: -16.410226821899414
    10. ' ' → logprob: -16.785226821899414

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005212200339883566
    2. 'VAL' → logprob: -8.000521659851074
    3. ' ' → logprob: -8.750521659851074
    4. '1' → logprob: -10.875521659851074
    5. ' VAL' → logprob: -13.000521659851074
    6. 'val' → logprob: -13.125521659851074
    7. '-' → logprob: -14.563021659851074
    8. 'Val' → logprob: -14.563021659851074
    9. '2' → logprob: -15.313021659851074
    10. 'V' → logprob: -15.313021659851074

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003554847207851708
    2. 'VAL' → logprob: -8.12535572052002
    3. ' ' → logprob: -10.62535572052002
    4. '1' → logprob: -10.87535572052002
    5. 'val' → logprob: -11.87535572052002
    6. '-' → logprob: -12.87535572052002
    7. 'Val' → logprob: -13.62535572052002
    8. ' VAL' → logprob: -14.12535572052002
    9. 'ROOT' → logprob: -14.31285572052002
    10. '00' → logprob: -15.18785572052002

Token 186: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045277390629053116
    2. '	stack' → logprob: -3.9202773571014404
    3. 'stack' → logprob: -4.1702775955200195
    4. ' stack' → logprob: -4.7952775955200195
    5. ' S' → logprob: -9.29527759552002
    6. '	Q' → logprob: -9.42027759552002
    7. '	queue' → logprob: -9.79527759552002
    8. 'Q' → logprob: -9.92027759552002
    9. '_stack' → logprob: -10.17027759552002
    10. 's' → logprob: -10.29527759552002

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07864628732204437
    2. 'stack' → logprob: -2.703646183013916
    3. '	stack' → logprob: -5.328646183013916
    4. ' stack' → logprob: -5.703646183013916
    5. 'for' → logprob: -8.703646659851074
    6. 's' → logprob: -9.703646659851074
    7. ' for' → logprob: -9.703646659851074
    8. 'S' → logprob: -10.828646659851074
    9. '    
' → logprob: -11.078646659851074
    10. 'stk' → logprob: -11.078646659851074

Token 188: ' myst' (ID: 15982)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3183639943599701
    2. 'S' → logprob: -1.9433640241622925
    3. 'from' → logprob: -2.443363904953003
    4. 'Q' → logprob: -3.318363904953003
    5. '   ' → logprob: -6.443364143371582
    6. 'import' → logprob: -7.193364143371582
    7. 'stk' → logprob: -7.318364143371582
    8. 'for' → logprob: -7.443364143371582
    9. 'F' → logprob: -7.568364143371582
    10. 'STACK' → logprob: -7.818364143371582

Token 189: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.0006266565760597587
    2. '=' → logprob: -8.375626564025879
    3. 'e' → logprob: -9.500626564025879
    4. 'q' → logprob: -9.625626564025879
    5. '_stack' → logprob: -10.000626564025879
    6. 'ck' → logprob: -10.250626564025879
    7. 'stack' → logprob: -10.625626564025879
    8. 'k' → logprob: -11.000626564025879
    9. 'er' → logprob: -11.125626564025879
    10. '=[]
' → logprob: -11.250626564025879

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06220071390271187
    2. '=' → logprob: -2.8122007846832275
    3. '=[]' → logprob: -8.562200546264648
    4. '.append' → logprob: -10.937200546264648
    5. '=[]
' → logprob: -12.062200546264648
    6. ' =[' → logprob: -12.437200546264648
    7. '.' → logprob: -12.687200546264648
    8. '   ' → logprob: -13.062200546264648
    9. '=[' → logprob: -13.437200546264648
    10. '[]' → logprob: -13.562200546264648

Token 191: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2068776786327362
    2. '[(' → logprob: -1.7068777084350586
    3. ' [' → logprob: -5.456877708435059
    4. ' [(' → logprob: -6.956877708435059
    5. '[root' → logprob: -8.456877708435059
    6. '[((' → logprob: -11.456877708435059
    7. '[R' → logprob: -12.956877708435059
    8. ' ' → logprob: -13.331877708435059
    9. '[T' → logprob: -14.456877708435059
    10. '[-' → logprob: -14.456877708435059

Token 192: 'ROOT' (ID: 51010)
  Prédit: '(ROOT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ROOT' → logprob: -0.2763291001319885
    2. 'ROOT' → logprob: -1.5263290405273438
    3. ' ROOT' → logprob: -4.776329040527344
    4. '(' → logprob: -4.901329040527344
    5. ' (' → logprob: -5.026329040527344
    6. '(R' → logprob: -6.651329040527344
    7. 'Root' → logprob: -9.276329040527344
    8. '(root' → logprob: -9.401329040527344
    9. '_ROOT' → logprob: -10.151329040527344
    10. 'root' → logprob: -10.651329040527344

Token 193: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002516442909836769
    2. ' ]' → logprob: -6.377516269683838
    3. ']
' → logprob: -7.127516269683838
    4. ']

' → logprob: -12.252516746520996
    5. ' ]
' → logprob: -12.877516746520996
    6. ')' → logprob: -13.627516746520996
    7. ']
' → logprob: -13.877516746520996
    8. ')]' → logprob: -14.002516746520996
    9. ',' → logprob: -14.627516746520996
    10. '])' → logprob: -15.752516746520996

Token 194: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6077432036399841
    2. ' while' → logprob: -0.9827432036399841
    3. '   ' → logprob: -2.607743263244629
    4. '	while' → logprob: -4.982743263244629
    5. '
' → logprob: -7.857743263244629
    6. ')' → logprob: -9.982743263244629
    7. '    
' → logprob: -9.982743263244629
    8. '  ' → logprob: -10.232743263244629
    9. '```' → logprob: -10.857743263244629
    10. ' ' → logprob: -11.482743263244629

Token 195: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0025124046951532364
    2. ' while' → logprob: -6.002512454986572
    3. '   ' → logprob: -10.877511978149414
    4. '	while' → logprob: -11.252511978149414
    5. '
' → logprob: -13.377511978149414
    6. 'While' → logprob: -13.752511978149414
    7. ')' → logprob: -14.127511978149414
    8. '```' → logprob: -14.127511978149414
    9. 'for' → logprob: -15.377511978149414
    10. 'wh' → logprob: -16.502511978149414

Token 196: ' myst' (ID: 15982)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6933757066726685
    2. ' myst' → logprob: -0.6933757066726685
    3. ' len' → logprob: -8.818375587463379
    4. ' ' → logprob: -10.318375587463379
    5. 'len' → logprob: -10.443375587463379
    6. '(m' → logprob: -12.568375587463379
    7. '	m' → logprob: -12.693375587463379
    8. '   ' → logprob: -13.068375587463379
    9. '  ' → logprob: -13.568375587463379
    10. ' mystery' → logprob: -13.818375587463379

Token 197: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.25205445289611816
    2. 'stack' → logprob: -1.5020544528961182
    3. 's' → logprob: -9.877054214477539
    4. '_stack' → logprob: -11.002054214477539
    5. 't' → logprob: -11.127054214477539
    6. 'pack' → logprob: -11.502054214477539
    7. 'e' → logprob: -11.877054214477539
    8. ' stack' → logprob: -13.127054214477539
    9. 'Stack' → logprob: -13.377054214477539
    10. 'a' → logprob: -13.502054214477539

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010960459476336837
    2. '.pop' → logprob: -7.126096248626709
    3. ':
' → logprob: -8.87609577178955
    4. '):' → logprob: -9.37609577178955
    5. 'pop' → logprob: -10.37609577178955
    6. '>:' → logprob: -10.50109577178955
    7. ' :' → logprob: -13.62609577178955
    8. '[-' → logprob: -13.75109577178955
    9. ']:' → logprob: -13.87609577178955
    10. '}:' → logprob: -14.00109577178955

Token 199: '       ' (ID: 309)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.4271317720413208
    2. '   ' → logprob: -1.4271317720413208
    3. 'u' → logprob: -1.6771317720413208
    4. '       ' → logprob: -1.9271317720413208
    5. ' u' → logprob: -2.9271316528320312
    6. ' node' → logprob: -3.0521316528320312
    7. ' v' → logprob: -3.0521316528320312
    8. 'node' → logprob: -3.6771316528320312
    9. ' current' → logprob: -5.677131652832031
    10. 'x' → logprob: -5.677131652832031

Token 200: ' next' (ID: 2613)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8904797434806824
    2. 'u' → logprob: -1.0154798030853271
    3. 'node' → logprob: -2.640479803085327
    4. 'x' → logprob: -3.265479803085327
    5. 'cur' → logprob: -3.765479803085327
    6. ' u' → logprob: -4.390479564666748
    7. ' v' → logprob: -4.515479564666748
    8. 'n' → logprob: -4.640479564666748
    9. 'V' → logprob: -5.015479564666748
    10. 'X' → logprob: -5.140479564666748

Token 201: 'g' (ID: 70)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.757773756980896
    2. 'node' → logprob: -0.882773756980896
    3. '=' → logprob: -2.8827738761901855
    4. ' =' → logprob: -3.5077738761901855
    5. '_' → logprob: -3.6327738761901855
    6. '_=' → logprob: -6.0077738761901855
    7. 'Node' → logprob: -7.1327738761901855
    8. '_vertex' → logprob: -7.7577738761901855
    9. 'v' → logprob: -8.132773399353027
    10. 'n' → logprob: -8.257773399353027

Token 202: 'uy' (ID: 3731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5127130150794983
    2. '=' → logprob: -1.2627129554748535
    3. 'raph' → logprob: -2.5127129554748535
    4. 'roup' → logprob: -3.5127129554748535
    5. '=g' → logprob: -6.3877129554748535
    6. 't' → logprob: -6.5127129554748535
    7. 'node' → logprob: -7.0127129554748535
    8. 'uy' → logprob: -7.3877129554748535
    9. 'et' → logprob: -7.5127129554748535
    10. 'ist' → logprob: -8.387713432312012

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31385162472724915
    2. '=' → logprob: -1.3138515949249268
    3. '=m' → logprob: -7.438851833343506
    4. ' ' → logprob: -14.188851356506348
    5. '   ' → logprob: -14.563851356506348
    6. ')' → logprob: -15.938851356506348
    7. 'm' → logprob: -16.313852310180664
    8. ',' → logprob: -16.563852310180664
    9. '=_' → logprob: -17.188852310180664
    10. '    ' → logprob: -17.313852310180664

Token 204: ' []
' (ID: 8911)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005235190503299236
    2. ' myst' → logprob: -5.255235195159912
    3. '   ' → logprob: -15.130234718322754
    4. '	m' → logprob: -15.505234718322754
    5. '
' → logprob: -15.755234718322754
    6. ' mystery' → logprob: -16.13023567199707
    7. ' m' → logprob: -16.50523567199707
    8. '[m' → logprob: -16.50523567199707
    9. 's' → logprob: -16.63023567199707
    10. ' mystical' → logprob: -16.63023567199707

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2851100564002991
    2. 'for' → logprob: -1.6601099967956543
    3. ' for' → logprob: -2.9101099967956543
    4. '   ' → logprob: -6.410109996795654
    5. '
' → logprob: -6.535109996795654
    6. '	for' → logprob: -8.535110473632812
    7. '        
' → logprob: -9.535110473632812
    8. '	' → logprob: -10.660110473632812
    9. '	   ' → logprob: -11.285110473632812
    10. '<|end|>' → logprob: -11.285110473632812

Token 206: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001366744691040367
    2. ' for' → logprob: -9.000136375427246
    3. '       ' → logprob: -12.000136375427246
    4. '   ' → logprob: -12.125136375427246
    5. '
' → logprob: -13.750136375427246
    6. 'while' (adapté à ' while') → logprob: -14.750136375427246
    7. '	for' → logprob: -15.750136375427246
    8. '        
' → logprob: -17.500137329101562
    9. '           ' → logprob: -18.250137329101562
    10. 'next' → logprob: -18.500137329101562

Token 207: ' myst' (ID: 15982)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0620025210082531
    2. ' myst' → logprob: -2.812002420425415
    3. 'len' → logprob: -11.187002182006836
    4. ' len' → logprob: -12.312002182006836
    5. '   ' → logprob: -13.062002182006836
    6. '	m' → logprob: -13.187002182006836
    7. '[m' → logprob: -13.187002182006836
    8. ' ' → logprob: -13.187002182006836
    9. 'not' → logprob: -13.562002182006836
    10. '    ' → logprob: -13.937002182006836

Token 208: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.05494852364063263
    2. 'stack' → logprob: -2.929948568344116
    3. 's' → logprob: -11.179948806762695
    4. 'g' → logprob: -11.304948806762695
    5. '_stack' → logprob: -11.304948806762695
    6. 'e' → logprob: -12.179948806762695
    7. 'pack' → logprob: -12.429948806762695
    8. 'ACK' → logprob: -12.804948806762695
    9. 't' → logprob: -13.429948806762695
    10. 'ackbar' → logprob: -13.679948806762695

Token 209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029363270732574165
    2. '.pop' → logprob: -8.375293731689453
    3. 'pop' → logprob: -10.750293731689453
    4. '):' → logprob: -11.000293731689453
    5. ':
' → logprob: -11.000293731689453
    6. '>:' → logprob: -13.250293731689453
    7. ' :' → logprob: -13.625293731689453
    8. 'and' → logprob: -13.625293731689453
    9. '():' → logprob: -14.750293731689453
    10. ' and' → logprob: -14.875293731689453

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35474565625190735
    2. 'u' → logprob: -2.354745626449585
    3. 'v' → logprob: -2.729745626449585
    4. ' u' → logprob: -2.854745626449585
    5. ' v' → logprob: -3.729745626449585
    6. 'node' → logprob: -4.479745864868164
    7. 'current' → logprob: -4.729745864868164
    8. ' node' → logprob: -4.729745864868164
    9. 'g' → logprob: -4.979745864868164
    10. ' current' → logprob: -5.354745864868164

Token 211: ' me' (ID: 668)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.3601014614105225
    2. 'u' → logprob: -1.6101014614105225
    3. 'node' → logprob: -2.1101014614105225
    4. 'cur' → logprob: -2.2351014614105225
    5. 'v' → logprob: -2.3601014614105225
    6. 'x' → logprob: -2.8601014614105225
    7. 'now' → logprob: -3.2351014614105225
    8. 'curr' → logprob: -3.2351014614105225
    9. ' guy' → logprob: -4.360101699829102
    10. 'current' → logprob: -4.360101699829102

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869847059249878
    2. ' =' → logprob: -1.1369847059249878
    3. 'm' → logprob: -10.011984825134277
    4. '=m' → logprob: -10.136984825134277
    5. '   ' → logprob: -11.261984825134277
    6. '    ' → logprob: -12.511984825134277
    7. '=my' → logprob: -13.136984825134277
    8. ' ' → logprob: -13.261984825134277
    9. '=
' → logprob: -14.136984825134277
    10. 'p' → logprob: -14.136984825134277

Token 213: ' myst' (ID: 15982)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08897305279970169
    2. ' myst' → logprob: -2.463973045349121
    3. ' ' → logprob: -11.213973045349121
    4. ' mystery' → logprob: -12.588973045349121
    5. ' m' → logprob: -12.963973045349121
    6. '	m' → logprob: -12.963973045349121
    7. ' mystical' → logprob: -13.401473045349121
    8. '   ' → logprob: -13.713973045349121
    9. ' mister' → logprob: -13.901473045349121
    10. ' myster' → logprob: -14.276473045349121

Token 214: 'ack' (ID: 552)
  Prédit: 'ack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.002191660227254033
    2. 'stack' → logprob: -6.127191543579102
    3. 'ock' → logprob: -13.252191543579102
    4. 'g' → logprob: -13.752191543579102
    5. '_stack' → logprob: -14.377191543579102
    6. 'e' → logprob: -14.627191543579102
    7. 's' → logprob: -14.752191543579102
    8. 'ACK' → logprob: -15.127191543579102
    9. 'pack' → logprob: -15.252191543579102
    10. 'lock' → logprob: -15.502191543579102

Token 215: '.pop' (ID: 15746)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.41169530153274536
    2. '.pop' → logprob: -1.2866952419281006
    3. '
' → logprob: -3.5366952419281006
    4. ' =' → logprob: -4.16169548034668
    5. '           ' → logprob: -5.28669548034668
    6. ' pop' → logprob: -5.66169548034668
    7. '=' → logprob: -5.91169548034668
    8. 'm' → logprob: -6.41169548034668
    9. ';' → logprob: -6.78669548034668
    10. '   ' → logprob: -6.91169548034668

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.310693111619912e-05
    2. '()
' → logprob: -10.125042915344238
    3. '(' → logprob: -12.875042915344238
    4. '()

' → logprob: -15.500042915344238
    5. '();' → logprob: -16.250043869018555
    6. '()]' → logprob: -16.500043869018555
    7. '()
' → logprob: -16.625043869018555
    8. '())' → logprob: -17.625043869018555
    9. '().' → logprob: -18.125043869018555
    10. '()`' → logprob: -18.375043869018555

Token 217: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6327455043792725
    2. '   ' → logprob: -1.3827455043792725
    3. 'for' → logprob: -2.3827455043792725
    4. '           ' → logprob: -3.0077455043792725
    5. '       ' → logprob: -3.5077455043792725
    6. '
' → logprob: -3.6327455043792725
    7. '    
' → logprob: -4.882745742797852
    8. '	for' → logprob: -5.757745742797852
    9. '            
' → logprob: -5.882745742797852
    10. '        
' → logprob: -6.632745742797852

Token 218: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014363054186105728
    2. ' for' → logprob: -4.2643632888793945
    3. '   ' → logprob: -9.514363288879395
    4. 'd' → logprob: -10.014363288879395
    5. 'Z' → logprob: -11.264363288879395
    6. '
' → logprob: -11.889363288879395
    7. 'v' → logprob: -11.889363288879395
    8. 'z' → logprob: -12.014363288879395
    9. 'neighbors' → logprob: -12.264363288879395
    10. 'l' → logprob: -12.639363288879395

Token 219: ' you' (ID: 481)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -1.5401843786239624
    2. 'n' → logprob: -2.290184497833252
    3. 'k' → logprob: -2.540184497833252
    4. 'neighbor' → logprob: -2.665184497833252
    5. 'nei' → logprob: -2.790184497833252
    6. 'v' → logprob: -3.290184497833252
    7. 'nbr' → logprob: -3.415184497833252
    8. ' nxt' → logprob: -3.540184497833252
    9. 'adj' → logprob: -3.665184497833252
    10. 'to' → logprob: -3.915184497833252

Token 220: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08300530165433884
    2. 'in' → logprob: -2.58300518989563
    3. ',' → logprob: -5.583005428314209
    4. ',in' → logprob: -8.08300495147705
    5. ' ,' → logprob: -10.83300495147705
    6. '	in' → logprob: -12.08300495147705
    7. ' ' → logprob: -13.33300495147705
    8. '  ' → logprob: -13.83300495147705
    9. '   ' → logprob: -13.95800495147705
    10. ',v' → logprob: -14.08300495147705

Token 221: 'rel' (ID: 6004)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.4752606153488159
    2. 'w' → logprob: -1.600260615348816
    3. 'wt' → logprob: -2.9752607345581055
    4. 'val' → logprob: -3.4752607345581055
    5. ' weight' → logprob: -3.6002607345581055
    6. ' w' → logprob: -4.1002607345581055
    7. 'dist' → logprob: -4.6002607345581055
    8. 'weig' → logprob: -4.7252607345581055
    9. 'po' → logprob: -5.6002607345581055
    10. 'cost' → logprob: -5.7252607345581055

Token 222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022875269874930382
    2. 'weight' → logprob: -4.7728753089904785
    3. '_weight' → logprob: -5.1478753089904785
    4. 'in' → logprob: -5.5228753089904785
    5. 'W' → logprob: -6.3978753089904785
    6. '   ' → logprob: -7.6478753089904785
    7. 'w' → logprob: -7.7728753089904785
    8. ' ' → logprob: -8.14787483215332
    9. ' weight' → logprob: -8.27287483215332
    10. 'ation' → logprob: -8.39787483215332

Token 223: ' network' (ID: 5402)
  Prédit: 'network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'network' → logprob: -0.003178071230649948
    2. ' network' → logprob: -5.753178119659424
    3. '(network' → logprob: -15.253177642822266
    4. '_network' → logprob: -17.003177642822266
    5. 'net' → logprob: -17.253177642822266
    6. '.network' → logprob: -17.378177642822266
    7. 'etwork' → logprob: -17.378177642822266
    8. '   ' → logprob: -17.378177642822266
    9. '-network' → logprob: -18.628177642822266
    10. '
' → logprob: -18.628177642822266

Token 224: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. 'me' → logprob: -13.500003814697266
    3. '   ' → logprob: -14.250003814697266
    4. ' [' → logprob: -14.875003814697266
    5. '       ' → logprob: -15.250003814697266
    6. '.me' → logprob: -15.750003814697266
    7. 's' → logprob: -15.875003814697266
    8. '[mem' → logprob: -15.875003814697266
    9. '(me' → logprob: -16.375003814697266
    10. ' ' → logprob: -16.625003814697266

Token 225: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.005941952113062143
    2. '[' → logprob: -5.130941867828369
    3. ' me' → logprob: -11.380942344665527
    4. '	me' → logprob: -14.255942344665527
    5. '(me' → logprob: -14.755942344665527
    6. '.me' → logprob: -15.005942344665527
    7. '_me' → logprob: -15.380942344665527
    8. '][' → logprob: -15.630942344665527
    9. '   ' → logprob: -16.63094139099121
    10. '```' → logprob: -16.63094139099121

Token 226: '].' (ID: 1651)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.31123071908950806
    2. '].' → logprob: -1.4362306594848633
    3. '.' → logprob: -3.5612306594848633
    4. 'items' → logprob: -7.811230659484863
    5. '}.' → logprob: -7.811230659484863
    6. ' .' → logprob: -8.561230659484863
    7. '.iteritems' → logprob: -8.936230659484863
    8. ').' → logprob: -10.186230659484863
    9. '().' → logprob: -10.686230659484863
    10. '[' → logprob: -11.811230659484863

Token 227: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -6.511406809295295e-06
    2. ' items' → logprob: -12.000006675720215
    3. '.items' → logprob: -15.125006675720215
    4. '```' → logprob: -18.7500057220459
    5. '	items' → logprob: -19.5000057220459
    6. '_items' → logprob: -19.7500057220459
    7. 'getitem' → logprob: -20.1250057220459
    8. 'item' → logprob: -20.1250057220459
    9. '(items' → logprob: -20.7500057220459
    10. '
' → logprob: -21.0000057220459

Token 228: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0013803521869704127
    2. '()' → logprob: -6.751380443572998
    3. '():
' → logprob: -8.75137996673584
    4. ' ():' → logprob: -10.00137996673584
    5. ' ()' → logprob: -13.00137996673584
    6. ':' → logprob: -13.12637996673584
    7. '(' → logprob: -14.00137996673584
    8. '():

' → logprob: -14.37637996673584
    9. '):' → logprob: -15.75137996673584
    10. '()>' → logprob: -15.87637996673584

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006845565512776375
    2. '                
' → logprob: -8.12568473815918
    3. ' if' → logprob: -8.62568473815918
    4. '           ' → logprob: -9.50068473815918
    5. '       ' → logprob: -10.37568473815918
    6. '                ' → logprob: -10.75068473815918
    7. '              ' → logprob: -10.75068473815918
    8. '<|end|>' → logprob: -11.62568473815918
    9. '   ' → logprob: -11.75068473815918
    10. '                   ' → logprob: -12.00068473815918

Token 230: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.020976364612579346
    2. '                   ' → logprob: -4.145976543426514
    3. 'if' (adapté à ' if') → logprob: -6.270976543426514
    4. '               ' → logprob: -6.645976543426514
    5. '   ' → logprob: -7.145976543426514
    6. '    ' → logprob: -7.520976543426514
    7. '           ' → logprob: -8.395976066589355
    8. '                ' → logprob: -9.395976066589355
    9. '       ' → logprob: -10.270976066589355
    10. ' ' → logprob: -11.020976066589355

Token 231: ' you' (ID: 481)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.18094763159751892
    2. ' L' → logprob: -1.8059476613998413
    3. 'Z' → logprob: -7.055947780609131
    4. ' Z' → logprob: -8.180947303771973
    5. '   ' → logprob: -10.680947303771973
    6. ' not' → logprob: -11.430947303771973
    7. ' ' → logprob: -11.930947303771973
    8. 'not' → logprob: -12.743447303771973
    9. '                   ' → logprob: -12.868447303771973
    10. '    ' → logprob: -13.055947303771973

Token 232: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029782891273498535
    2. ' !=' → logprob: -4.404782772064209
    3. 'not' → logprob: -4.529782772064209
    4. '!=' → logprob: -5.279782772064209
    5. '>' → logprob: -8.029783248901367
    6. ')' → logprob: -8.654783248901367
    7. '!=-' → logprob: -8.904783248901367
    8. '<|end|>' → logprob: -9.404783248901367
    9. ' >' → logprob: -9.529783248901367
    10. '>L' → logprob: -9.529783248901367

Token 233: ' P' (ID: 398)
  Prédit: 'ROOT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ROOT' → logprob: -0.031034579500555992
    2. '-' → logprob: -3.781034469604492
    3. '0' → logprob: -5.781034469604492
    4. 'P' → logprob: -6.406034469604492
    5. ' ROOT' → logprob: -6.906034469604492
    6. 'me' → logprob: -7.031034469604492
    7. '(ROOT' → logprob: -8.156034469604492
    8. 'root' → logprob: -8.406034469604492
    9. '_ROOT' → logprob: -8.531034469604492
    10. 'Root' → logprob: -9.156034469604492

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001190225942991674
    2. 'me' → logprob: -6.751190185546875
    3. ' me' → logprob: -11.001190185546875
    4. 'ME' → logprob: -14.001190185546875
    5. ' [' → logprob: -14.501190185546875
    6. '	me' → logprob: -14.501190185546875
    7. '_me' → logprob: -15.126190185546875
    8. 'Me' → logprob: -15.501190185546875
    9. '```' → logprob: -15.751190185546875
    10. 'm' → logprob: -15.751190185546875

Token 235: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0003728774609044194
    2. ' me' → logprob: -8.250372886657715
    3. 'm' → logprob: -9.250372886657715
    4. '[' → logprob: -11.375372886657715
    5. '	me' → logprob: -13.375372886657715
    6. '   ' → logprob: -15.375372886657715
    7. '(me' → logprob: -15.500372886657715
    8. ' ' → logprob: -15.625372886657715
    9. '.me' → logprob: -15.750372886657715
    10. 'meg' → logprob: -15.750372886657715

Token 236: ']:' (ID: 12433)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3962177634239197
    2. ')' → logprob: -1.6462178230285645
    3. 'or' → logprob: -2.3962178230285645
    4. '[' → logprob: -3.8962178230285645
    5. '):' → logprob: -3.8962178230285645
    6. 'me' → logprob: -7.2712178230285645
    7. ']' → logprob: -7.3962178230285645
    8. '):
' → logprob: -7.8962178230285645
    9. '   ' → logprob: -8.271217346191406
    10. ':' → logprob: -8.646217346191406

Token 237: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7288323640823364
    2. ' continue' → logprob: -0.7288323640823364
    3. 'continue' → logprob: -3.478832244873047
    4. '               ' → logprob: -6.478832244873047
    5. ' L' → logprob: -6.603832244873047
    6. '           ' → logprob: -7.978832244873047
    7. ' P' → logprob: -7.978832244873047
    8. '   ' → logprob: -8.603832244873047
    9. 'L' → logprob: -8.978832244873047
    10. ' Z' → logprob: -9.603832244873047

Token 238: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017884672852233052
    2. '
' → logprob: -7.37678861618042
    3. 'if' → logprob: -7.87678861618042
    4. '                
' → logprob: -7.87678861618042
    5. ' if' → logprob: -8.376788139343262
    6. '           ' → logprob: -10.251788139343262
    7. '<|end|>' → logprob: -10.501788139343262
    8. '              ' → logprob: -11.001788139343262
    9. '                ' → logprob: -11.251788139343262
    10. 'L' → logprob: -11.251788139343262

Token 239: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010051418095827103
    2. ' if' → logprob: -5.385051250457764
    3. '           ' → logprob: -6.385051250457764
    4. 'if' → logprob: -6.885051250457764
    5. '                
' → logprob: -7.260051250457764
    6. '
' → logprob: -7.385051250457764
    7. '                ' → logprob: -7.635051250457764
    8. '       ' → logprob: -8.135051727294922
    9. '```' → logprob: -9.385051727294922
    10. ' L' → logprob: -9.510051727294922

Token 240: ' his' (ID: 1232)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.183699831366539
    2. 'L' → logprob: -2.8086998462677
    3. 'Z' → logprob: -2.8086998462677
    4. 'P' → logprob: -3.6836998462677
    5. ' if' → logprob: -4.308699607849121
    6. '               ' → logprob: -5.058699607849121
    7. '                   ' → logprob: -7.433699607849121
    8. 'new' → logprob: -7.808699607849121
    9. '           ' → logprob: -8.433699607849121
    10. 'D' → logprob: -8.808699607849121

Token 241: 'val' (ID: 1105)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8637751340866089
    2. 'L' → logprob: -1.1137751340866089
    3. ' =' → logprob: -2.9887752532958984
    4. ' L' → logprob: -3.4887752532958984
    5. '=' → logprob: -3.8637752532958984
    6. '[L' → logprob: -3.8637752532958984
    7. '=L' → logprob: -4.113775253295898
    8. 'Z' → logprob: -4.488775253295898
    9. 'ght' → logprob: -4.613775253295898
    10. '   ' → logprob: -4.863775253295898

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34846287965774536
    2. '=' → logprob: -1.2234628200531006
    3. ' ' → logprob: -11.97346305847168
    4. '   ' → logprob: -12.97346305847168
    5. '=max' → logprob: -13.34846305847168
    6. ',' → logprob: -13.47346305847168
    7. '    ' → logprob: -14.09846305847168
    8. '[' → logprob: -14.59846305847168
    9. '>' → logprob: -14.84846305847168
    10. ')' → logprob: -15.16096305847168

Token 243: ' rel' (ID: 1536)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.038704466074705124
    2. ' Z' → logprob: -4.1637043952941895
    3. 'VAL' → logprob: -4.7887043952941895
    4. 'rel' → logprob: -5.0387043952941895
    5. 'max' → logprob: -5.6637043952941895
    6. 'val' → logprob: -6.4137043952941895
    7. ' VAL' → logprob: -7.5387043952941895
    8. 'min' → logprob: -7.7887043952941895
    9. 'REL' → logprob: -8.038704872131348
    10. 'L' → logprob: -8.413704872131348

Token 244: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28021112084388733
    2. ' +' → logprob: -2.0302112102508545
    3. '*' → logprob: -2.4052112102508545
    4. '-' → logprob: -4.655210971832275
    5. ' *' → logprob: -4.905210971832275
    6. ' -' → logprob: -6.155210971832275
    7. ' if' → logprob: -6.405210971832275
    8. '^' → logprob: -7.405210971832275
    9. 'if' → logprob: -7.780210971832275
    10. ' ' → logprob: -8.155211448669434

Token 245: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.23283615708351135
    2. 'L' → logprob: -1.607836127281189
    3. 'abs' → logprob: -5.3578362464904785
    4. 'VAL' → logprob: -6.9828362464904785
    5. ' Z' → logprob: -7.9828362464904785
    6. '(' → logprob: -7.9828362464904785
    7. 'val' → logprob: -8.23283576965332
    8. '1' → logprob: -8.73283576965332
    9. '(Z' → logprob: -8.98283576965332
    10. ' L' → logprob: -9.10783576965332

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. 'me' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.125001907348633
    4. '[mem' → logprob: -16.125001907348633
    5. '[P' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.250001907348633
    7. '[N' → logprob: -17.125001907348633
    8. '	' → logprob: -17.500001907348633
    9. '[m' → logprob: -17.625001907348633
    10. '[to' → logprob: -18.125001907348633

Token 247: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -9.019237768370658e-05
    2. '[' → logprob: -9.375090599060059
    3. ' me' → logprob: -13.000090599060059
    4. 'you' → logprob: -14.125090599060059
    5. '	me' → logprob: -14.375090599060059
    6. ']' → logprob: -14.750090599060059
    7. ')' → logprob: -15.000090599060059
    8. 'mo' → logprob: -15.375090599060059
    9. 'ma' → logprob: -15.750090599060059
    10. '   ' → logprob: -15.875090599060059

Token 248: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011975026689469814
    2. ']+' → logprob: -5.136974811553955
    3. '[' → logprob: -5.761974811553955
    4. '+' → logprob: -7.261974811553955
    5. ']
' → logprob: -7.261974811553955
    6. '<|end|>' → logprob: -7.636974811553955
    7. ')' → logprob: -8.511975288391113
    8. ' ]' → logprob: -8.886975288391113
    9. '
' → logprob: -9.011975288391113
    10. '-' → logprob: -9.261975288391113

Token 249: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028036808595061302
    2. ' if' → logprob: -3.9030368328094482
    3. 'if' → logprob: -4.903036594390869
    4. ',' → logprob: -11.403037071228027
    5. '<|end|>' → logprob: -11.528037071228027
    6. '
' → logprob: -12.028037071228027
    7. '           ' → logprob: -12.153037071228027
    8. '                
' → logprob: -13.528037071228027
    9. 'If' → logprob: -13.778037071228027
    10. ';if' → logprob: -14.028037071228027

Token 250: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11575884371995926
    2. '               ' → logprob: -2.7407588958740234
    3. ' if' → logprob: -3.1157588958740234
    4. 'Z' → logprob: -8.490758895874023
    5. '                   ' → logprob: -9.240758895874023
    6. '           ' → logprob: -10.490758895874023
    7. 'L' → logprob: -10.865758895874023
    8. '                ' → logprob: -10.990758895874023
    9. '                
' → logprob: -11.615758895874023
    10. 'for' → logprob: -11.740758895874023

Token 251: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.634111762046814
    2. 'if' → logprob: -0.759111762046814
    3. '                   ' → logprob: -7.8841118812561035
    4. 'Z' → logprob: -8.134111404418945
    5. 'P' → logprob: -8.259111404418945
    6. '               ' → logprob: -8.259111404418945
    7. 'L' → logprob: -9.259111404418945
    8. 'If' → logprob: -9.759111404418945
    9. ' P' → logprob: -10.509111404418945
    10. '```' → logprob: -10.759111404418945

Token 252: ' adore' (ID: 60731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8385758399963379
    2. ' if' → logprob: -0.8385758399963379
    3. '                   ' → logprob: -3.213575839996338
    4. '               ' → logprob: -3.338575839996338
    5. '                       ' → logprob: -4.463575839996338
    6. ' =' → logprob: -4.588575839996338
    7. '=' → logprob: -5.213575839996338
    8. 'continue' → logprob: -5.213575839996338
    9. ' continue' → logprob: -5.713575839996338
    10. '           ' → logprob: -5.963575839996338

Token 253: ' les' (ID: 1341)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1649365872144699
    2. 'if' → logprob: -2.5399365425109863
    3. '                   ' → logprob: -3.5399365425109863
    4. '               ' → logprob: -3.5399365425109863
    5. '                               ' → logprob: -5.914936542510986
    6. '                       ' → logprob: -6.164936542510986
    7. 'Z' → logprob: -6.289936542510986
    8. '           ' → logprob: -6.664936542510986
    9. '
' → logprob: -6.914936542510986
    10. '                ' → logprob: -6.914936542510986

Token 254: ' &' (ID: 827)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.581303596496582
    2. ' if' → logprob: -1.456303596496582
    3. 'abs' → logprob: -2.831303596496582
    4. 'Z' → logprob: -2.956303596496582
    5. ' abs' → logprob: -3.581303596496582
    6. 'val' → logprob: -4.456303596496582
    7. 'for' → logprob: -5.206303596496582
    8. ' Z' → logprob: -5.331303596496582
    9. 'L' → logprob: -5.956303596496582
    10. ' ' → logprob: -6.081303596496582

Token 255: ' à' (ID: 1221)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.009531057439744473
    2. '&
' → logprob: -5.634531021118164
    3. '#' → logprob: -6.509531021118164
    4. ' &' → logprob: -6.634531021118164
    5. '=' → logprob: -6.884531021118164
    6. '&amp' → logprob: -7.509531021118164
    7. '>' → logprob: -8.509531021118164
    8. 'amp' → logprob: -8.634531021118164
    9. ' Z' → logprob: -8.884531021118164
    10. ' (' → logprob: -9.134531021118164

Token 256: ' la' (ID: 557)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.8093277812004089
    2. '#' → logprob: -1.3093278408050537
    3. 'continue' → logprob: -3.4343278408050537
    4. 'b' → logprob: -3.9343278408050537
    5. '1' → logprob: -4.309327602386475
    6. ' ' → logprob: -4.434327602386475
    7. 'contin' → logprob: -4.684327602386475
    8. 'Z' → logprob: -4.684327602386475
    9. 'nbsp' → logprob: -4.809327602386475
    10. '255' → logprob: -4.934327602386475

Token 257: ' place' (ID: 2475)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.6428250074386597
    2. 'bit' → logprob: -1.8928250074386597
    3. 'part' → logprob: -2.017825126647949
    4. 'la' → logprob: -2.892825126647949
    5. 'continue' → logprob: -3.017825126647949
    6. '#' → logprob: -3.267825126647949
    7. '&' → logprob: -3.642825126647949
    8. 'p' → logprob: -3.892825126647949
    9. 'ce' → logprob: -3.892825126647949
    10. 'if' → logprob: -4.142825126647949

Token 258: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6707690358161926
    2. ' de' → logprob: -1.1707689762115479
    3. ' of' → logprob: -2.920768976211548
    4. 'of' → logprob: -2.920768976211548
    5. 'if' → logprob: -3.420768976211548
    6. '&' → logprob: -4.170769214630127
    7. 'd' → logprob: -4.920769214630127
    8. '   ' → logprob: -6.295769214630127
    9. ' if' → logprob: -6.420769214630127
    10. 'des' → logprob: -6.670769214630127

Token 259: ' "' (ID: 392)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.4905318021774292
    2. 'if' → logprob: -2.1155319213867188
    3. 'and' → logprob: -2.2405319213867188
    4. 'or' → logprob: -3.3655319213867188
    5. '+' → logprob: -3.4905319213867188
    6. '==' → logprob: -4.490531921386719
    7. ' if' → logprob: -4.490531921386719
    8. '!=' → logprob: -4.490531921386719
    9. ' and' → logprob: -4.740531921386719
    10. '&&' → logprob: -5.115531921386719

Token 260: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.05917887017130852
    2. ' and' → logprob: -3.8091788291931152
    3. 'if' → logprob: -3.8091788291931152
    4. '==' → logprob: -5.934178829193115
    5. '&&' → logprob: -6.184178829193115
    6. '&' → logprob: -6.684178829193115
    7. ' if' → logprob: -6.809178829193115
    8. '"' → logprob: -6.809178829193115
    9. 'et' → logprob: -7.434178829193115
    10. '=' → logprob: -7.434178829193115

Token 261: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7277008295059204
    2. ' "' → logprob: -1.4777008295059204
    3. '"
' → logprob: -1.9777008295059204
    4. ' "
' → logprob: -2.352700710296631
    5. ' if' → logprob: -3.352700710296631
    6. '",' → logprob: -6.102700710296631
    7. ' Z' → logprob: -6.102700710296631
    8. ' not' → logprob: -6.102700710296631
    9. 'if' → logprob: -6.102700710296631
    10. ' you' → logprob: -6.352700710296631

Token 262: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17916080355644226
    2. ' if' → logprob: -1.9291608333587646
    3. ' and' → logprob: -4.6791605949401855
    4. '                   ' → logprob: -6.1791605949401855
    5. '                
' → logprob: -6.4291605949401855
    6. 'if' → logprob: -6.4291605949401855
    7. '                               ' → logprob: -6.9291605949401855
    8. '<|end|>' → logprob: -7.0541605949401855
    9. '
' → logprob: -7.6791605949401855
    10. '                    
' → logprob: -7.8041605949401855

Token 263: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03439902514219284
    2. ' if' → logprob: -3.4093990325927734
    3. '               ' → logprob: -7.784399032592773
    4. '                   ' → logprob: -8.409399032592773
    5. '                       ' → logprob: -10.659399032592773
    6. 'Z' → logprob: -11.284399032592773
    7. '                               ' → logprob: -11.409399032592773
    8. ' (' → logprob: -11.534399032592773
    9. '(' → logprob: -11.659399032592773
    10. ' you' → logprob: -12.034399032592773

Token 264: ' (' (ID: 350)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.6774100661277771
    2. 'L' → logprob: -2.052410125732422
    3. ' Z' → logprob: -2.052410125732422
    4. ' (' → logprob: -2.552410125732422
    5. 'Z' → logprob: -3.052410125732422
    6. ' his' → logprob: -3.302410125732422
    7. '(' → logprob: -3.677410125732422
    8. ' not' → logprob: -4.302410125732422
    9. '(L' → logprob: -4.427410125732422
    10. 'his' → logprob: -5.302410125732422

Token 265: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4008946120738983
    2. ' L' → logprob: -1.7758946418762207
    3. 'his' → logprob: -2.9008946418762207
    4. 'Z' → logprob: -3.1508946418762207
    5. ' his' → logprob: -3.9008946418762207
    6. ' Z' → logprob: -4.275894641876221
    7. 'you' → logprob: -5.400894641876221
    8. ' (' → logprob: -5.775894641876221
    9. '0' → logprob: -5.775894641876221
    10. '(L' → logprob: -5.775894641876221

Token 266: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015502817404922098
    2. 'you' → logprob: -9.625155448913574
    3. '[next' → logprob: -9.750155448913574
    4. ' [' → logprob: -11.750155448913574
    5. 'me' → logprob: -12.375155448913574
    6. '   ' → logprob: -13.125155448913574
    7. ')[' → logprob: -13.125155448913574
    8. ' you' → logprob: -13.125155448913574
    9. '```' → logprob: -13.125155448913574
    10. ')' → logprob: -13.250155448913574

Token 267: 'you' (ID: 13320)
  Prédit: 'you'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'you' → logprob: -0.17574834823608398
    2. 'me' → logprob: -2.300748348236084
    3. '[' → logprob: -2.800748348236084
    4. '   ' → logprob: -10.675748825073242
    5. ' you' → logprob: -10.675748825073242
    6. 'You' → logprob: -11.050748825073242
    7. '[m' → logprob: -11.175748825073242
    8. 'he' → logprob: -11.175748825073242
    9. '[y' → logprob: -11.675748825073242
    10. '     ' → logprob: -11.738248825073242

Token 268: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1046375036239624
    2. '==-' → logprob: -1.3546375036239624
    3. ' ==' → logprob: -1.7296375036239624
    4. '<' → logprob: -2.104637622833252
    5. '==' → logprob: -2.854637622833252
    6. ' <' → logprob: -3.729637622833252
    7. '+' → logprob: -4.104637622833252
    8. ')' → logprob: -4.729637622833252
    9. ' +' → logprob: -6.979637622833252
    10. ' !=' → logprob: -6.979637622833252

Token 269: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9246100783348083
    2. ' ==' → logprob: -1.4246101379394531
    3. '==' → logprob: -1.4246101379394531
    4. ' <' → logprob: -2.924610137939453
    5. '+' → logprob: -3.549610137939453
    6. '[' → logprob: -4.049610137939453
    7. '==-' → logprob: -4.424610137939453
    8. ')' → logprob: -5.549610137939453
    9. ' +' → logprob: -6.549610137939453
    10. '!=' → logprob: -6.674610137939453

Token 270: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0011762974318116903
    2. ' -' → logprob: -6.751176357269287
    3. '   ' → logprob: -12.876175880432129
    4. ' ' → logprob: -13.251175880432129
    5. '                   ' → logprob: -15.001175880432129
    6. '  ' → logprob: -15.376175880432129
    7. '           ' → logprob: -15.501175880432129
    8. '               ' → logprob: -15.751175880432129
    9. '−' → logprob: -16.001176834106445
    10. '	' → logprob: -16.376176834106445

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010365027701482177
    2. ' ' → logprob: -6.876036643981934
    3. '   ' → logprob: -14.313536643981934
    4. ')' → logprob: -14.376036643981934
    5. '-' → logprob: -14.688536643981934
    6. '  ' → logprob: -15.188536643981934
    7. '
' → logprob: -15.563536643981934
    8. ' -' → logprob: -15.751036643981934
    9. ' ' → logprob: -15.813536643981934
    10. '

' → logprob: -15.813536643981934

Token 272: ')&' (ID: 34370)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16059930622577667
    2. ' and' → logprob: -2.2855992317199707
    3. ' )' → logprob: -3.4105992317199707
    4. ' &' → logprob: -5.035599231719971
    5. ')&' → logprob: -5.410599231719971
    6. 'and' → logprob: -6.535599231719971
    7. ' &)' → logprob: -7.160599231719971
    8. '&' → logprob: -8.285599708557129
    9. ' ' → logprob: -9.660599708557129
    10. '&)' → logprob: -10.160599708557129

Token 273: '(' (ID: 7)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5405434966087341
    2. '(h' → logprob: -1.290543556213379
    3. '(True' → logprob: -2.915543556213379
    4. '(' → logprob: -3.415543556213379
    5. '(L' → logprob: -3.790543556213379
    6. '(Z' → logprob: -4.290543556213379
    7. ' ((' → logprob: -5.290543556213379
    8. '((' → logprob: -5.415543556213379
    9. '(H' → logprob: -5.915543556213379
    10. '(P' → logprob: -6.415543556213379

Token 274: 'Z' (ID: 57)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.068495750427246
    2. '(h' → logprob: -1.318495750427246
    3. '(L' → logprob: -1.693495750427246
    4. '(Z' → logprob: -2.943495750427246
    5. '(abs' → logprob: -3.693495750427246
    6. ' L' → logprob: -3.943495750427246
    7. '(' → logprob: -4.068495750427246
    8. 'his' → logprob: -4.068495750427246
    9. ' his' → logprob: -4.318495750427246
    10. 'L' → logprob: -4.318495750427246

Token 275: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.547789674485102e-05
    2. ')[' → logprob: -11.375035285949707
    3. ')' → logprob: -11.750035285949707
    4. 'you' → logprob: -12.375035285949707
    5. ' [' → logprob: -12.750035285949707
    6. '[next' → logprob: -13.500035285949707
    7. '[u' → logprob: -13.625035285949707
    8. '==' → logprob: -14.000035285949707
    9. '!=' → logprob: -14.375035285949707
    10. '[now' → logprob: -14.750035285949707

Token 276: 'you' (ID: 13320)
  Prédit: 'you'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'you' → logprob: -0.11035984754562378
    2. '[' → logprob: -2.3603599071502686
    3. 'me' → logprob: -4.6103596687316895
    4. ')' → logprob: -10.235360145568848
    5. ']' → logprob: -11.360360145568848
    6. ' you' → logprob: -11.360360145568848
    7. '
' → logprob: -11.485360145568848
    8. '```' → logprob: -11.735360145568848
    9. '[
' → logprob: -11.985360145568848
    10. '   ' → logprob: -12.110360145568848

Token 277: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.321647584438324
    2. '!=' → logprob: -1.3216476440429688
    3. '[' → logprob: -5.946647644042969
    4. ' ==' → logprob: -6.946647644042969
    5. ']' → logprob: -6.946647644042969
    6. ']!=' → logprob: -7.196647644042969
    7. '==' → logprob: -7.321647644042969
    8. '<' → logprob: -7.446647644042969
    9. ')' → logprob: -7.696647644042969
    10. ' <' → logprob: -7.946647644042969

Token 278: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5877088308334351
    2. ' !=' → logprob: -0.8377088308334351
    3. '==' → logprob: -5.462708950042725
    4. ' ==' → logprob: -6.212708950042725
    5. '[' → logprob: -6.337708950042725
    6. '<' → logprob: -6.587708950042725
    7. ')' → logprob: -6.962708950042725
    8. '+' → logprob: -7.837708950042725
    9. '>' → logprob: -8.462708473205566
    10. ')!=' → logprob: -8.712708473205566

Token 279: ' his' (ID: 1232)
  Prédit: 'his'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'his' → logprob: -0.4809155762195587
    2. ' his' → logprob: -0.9809155464172363
    3. '(' → logprob: -6.105915546417236
    4. '0' → logprob: -6.355915546417236
    5. ' (' → logprob: -7.230915546417236
    6. ' ' → logprob: -7.980915546417236
    7. 'Z' → logprob: -8.480916023254395
    8. '(h' → logprob: -8.543416023254395
    9. '=' → logprob: -8.668416023254395
    10. ' Z' → logprob: -8.793416023254395

Token 280: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.1782583391759545e-05
    2. 'va' → logprob: -12.000031471252441
    3. ')' → logprob: -12.562531471252441
    4. '
' → logprob: -13.375031471252441
    5. '   ' → logprob: -13.437531471252441
    6. '(val' → logprob: -13.500031471252441
    7. ' val' → logprob: -13.500031471252441
    8. '[val' → logprob: -13.562531471252441
    9. 'his' → logprob: -13.625031471252441
    10. '	val' → logprob: -13.937531471252441

Token 281: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016800815239548683
    2. '):
' → logprob: -4.391800880432129
    3. ' ):' → logprob: -6.016800880432129
    4. ')' → logprob: -6.391800880432129
    5. ' ):
' → logprob: -10.016800880432129
    6. '):
' → logprob: -10.766800880432129
    7. ' )' → logprob: -10.891800880432129
    8. '                   ' → logprob: -11.266800880432129
    9. ':' → logprob: -11.266800880432129
    10. '               ' → logprob: -11.391800880432129

Token 282: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07763729989528656
    2. ' return' → logprob: -3.327637195587158
    3. '               ' → logprob: -4.577637195587158
    4. 'return' → logprob: -4.577637195587158
    5. ':
' → logprob: -5.077637195587158
    6. '                       ' → logprob: -5.202637195587158
    7. ' continue' → logprob: -6.327637195587158
    8. ':' → logprob: -6.577637195587158
    9. ':return' → logprob: -6.577637195587158
    10. 'continue' → logprob: -6.827637195587158

Token 283: ' loop' (ID: 11453)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2768363654613495
    2. 'return' → logprob: -1.9018363952636719
    3. '                       ' → logprob: -2.651836395263672
    4. ' raise' → logprob: -5.026836395263672
    5. 'raise' → logprob: -5.151836395263672
    6. '
' → logprob: -5.526836395263672
    7. '                   ' → logprob: -6.026836395263672
    8. '                           ' → logprob: -6.651836395263672
    9. 'print' → logprob: -7.526836395263672
    10. ' print' → logprob: -7.651836395263672

Token 284: 'd' (ID: 67)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1395211219787598
    2. '=' → logprob: -1.2645211219787598
    3. '_detect' → logprob: -1.7645211219787598
    4. '_' → logprob: -2.6395211219787598
    5. '_found' → logprob: -2.6395211219787598
    6. 's' → logprob: -3.3895211219787598
    7. '=True' → logprob: -4.01452112197876
    8. '_flag' → logprob: -4.88952112197876
    9. 'found' → logprob: -5.63952112197876
    10. 'det' → logprob: -6.01452112197876

Token 285: ' =' (ID: 314)
  Prédit: 'etect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etect' → logprob: -0.7604777216911316
    2. '=' → logprob: -1.8854777812957764
    3. 'etection' → logprob: -2.0104777812957764
    4. 'etected' → logprob: -2.3854777812957764
    5. ' =' → logprob: -2.7604777812957764
    6. '=True' → logprob: -2.8854777812957764
    7. 'et' → logprob: -4.385477542877197
    8. 'ef' → logprob: -5.135477542877197
    9. 'e' → logprob: -5.260477542877197
    10. '=False' → logprob: -5.885477542877197

Token 286: ' L' (ID: 451)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.28090813755989075
    2. ' True' → logprob: -1.5309081077575684
    3. '1' → logprob: -4.905908107757568
    4. 'False' → logprob: -5.030908107757568
    5. '(True' → logprob: -5.155908107757568
    6. ' ' → logprob: -6.405908107757568
    7. '0' → logprob: -7.030908107757568
    8. ' False' → logprob: -7.155908107757568
    9. '   ' → logprob: -7.405908107757568
    10. '"' → logprob: -7.405908107757568

Token 287: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00037144700763747096
    2. 'you' → logprob: -8.000370979309082
    3. 'me' → logprob: -10.500370979309082
    4. '[next' → logprob: -13.625370979309082
    5. '[now' → logprob: -13.750370979309082
    6. '[mem' → logprob: -14.375370979309082
    7. '   ' → logprob: -14.375370979309082
    8. '[to' → logprob: -14.500370979309082
    9. '```' → logprob: -14.625370979309082
    10. ' [' → logprob: -14.750370979309082

Token 288: 'you' (ID: 13320)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.2813817858695984
    2. 'you' → logprob: -1.4063818454742432
    3. 'him' → logprob: -10.406381607055664
    4. 'he' → logprob: -10.531381607055664
    5. ' you' → logprob: -10.781381607055664
    6. ' me' → logprob: -11.093881607055664
    7. '
' → logprob: -11.093881607055664
    8. '   ' → logprob: -11.218881607055664
    9. 'his' → logprob: -11.531381607055664
    10. '```' → logprob: -11.531381607055664

Token 289: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17742668092250824
    2. ']' → logprob: -2.17742657661438
    3. ')-' → logprob: -4.427426815032959
    4. ' )' → logprob: -4.552426815032959
    5. ']-' → logprob: -5.052426815032959
    6. ')
' → logprob: -5.552426815032959
    7. '])' → logprob: -5.677426815032959
    8. ']!=' → logprob: -6.177426815032959
    9. ')+' → logprob: -6.427426815032959
    10. ']+' → logprob: -6.427426815032959

Token 290: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5740706920623779
    2. '-' → logprob: -1.199070692062378
    3. '!=' → logprob: -2.949070692062378
    4. ' !=' → logprob: -3.449070692062378
    5. '+' → logprob: -3.824070692062378
    6. '<' → logprob: -4.699070930480957
    7. '   ' → logprob: -5.199070930480957
    8. ' <' → logprob: -5.699070930480957
    9. '<=' → logprob: -6.074070930480957
    10. '==' → logprob: -6.324070930480957

Token 291: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.15448498725891113
    2. ' L' → logprob: -2.029484987258911
    3. '1' → logprob: -4.904484748840332
    4. ' ' → logprob: -6.029484748840332
    5. '   ' → logprob: -6.904484748840332
    6. '  ' → logprob: -8.029484748840332
    7. ' (' → logprob: -8.779484748840332
    8. '(' → logprob: -8.904484748840332
    9. '(L' → logprob: -9.654484748840332
    10. '    ' → logprob: -9.779484748840332

Token 292: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021617230959236622
    2. 'me' → logprob: -8.500216484069824
    3. '   ' → logprob: -12.750216484069824
    4. ' [' → logprob: -12.875216484069824
    5. '[mem' → logprob: -13.625216484069824
    6. '           ' → logprob: -13.750216484069824
    7. '       ' → logprob: -14.000216484069824
    8. '               ' → logprob: -14.625216484069824
    9. '	me' → logprob: -14.875216484069824
    10. '                   ' → logprob: -15.250216484069824

Token 293: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.002688967389985919
    2. '[' → logprob: -6.002688884735107
    3. ' me' → logprob: -8.627689361572266
    4. '	me' → logprob: -11.627689361572266
    5. '   ' → logprob: -12.127689361572266
    6. ' ' → logprob: -12.502689361572266
    7. '(me' → logprob: -12.502689361572266
    8. '           ' → logprob: -13.377689361572266
    9. '       ' → logprob: -13.377689361572266
    10. '```' → logprob: -13.752689361572266

Token 294: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27778321504592896
    2. ']+' → logprob: -2.152783155441284
    3. ']' → logprob: -2.402783155441284
    4. ' +' → logprob: -4.277783393859863
    5. '-' → logprob: -4.527783393859863
    6. ' -' → logprob: -6.152783393859863
    7. ']-' → logprob: -6.277783393859863
    8. '                   ' → logprob: -6.527783393859863
    9. ']==' → logprob: -6.527783393859863
    10. '>' → logprob: -6.527783393859863

Token 295: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38138347864151
    2. '-' → logprob: -1.5063834190368652
    3. ' -' → logprob: -3.0063834190368652
    4. ' +' → logprob: -3.2563834190368652
    5. '>' → logprob: -6.381383419036865
    6. '>=' → logprob: -6.756383419036865
    7. '==' → logprob: -6.881383419036865
    8. ' >=' → logprob: -7.631383419036865
    9. ' ==' → logprob: -7.756383419036865
    10. '                   ' → logprob: -8.006383895874023

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006288022268563509
    2. ' ' → logprob: -7.37562894821167
    3. '   ' → logprob: -14.125628471374512
    4. '+' → logprob: -14.375628471374512
    5. '  ' → logprob: -15.375628471374512
    6. '2' → logprob: -15.500628471374512
    7. '     ' → logprob: -17.313129425048828
    8. '```' → logprob: -17.438129425048828
    9. '    ' → logprob: -17.563129425048828
    10. '           ' → logprob: -17.938129425048828

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -10.500032424926758
    3. '2' → logprob: -13.500032424926758
    4. '   ' → logprob: -13.500032424926758
    5. '           ' → logprob: -15.250032424926758
    6. '+' → logprob: -15.437532424926758
    7. '
' → logprob: -15.437532424926758
    8. '  ' → logprob: -15.500032424926758
    9. '                   ' → logprob: -15.625032424926758
    10. '       ' → logprob: -16.375032424926758

Token 298: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07127564400434494
    2. '<|end|>' → logprob: -3.4462757110595703
    3. '
' → logprob: -3.5712757110595703
    4. ')' → logprob: -5.69627571105957
    5. '               ' → logprob: -6.69627571105957
    6. '                    
' → logprob: -7.44627571105957
    7. '<|end|>' → logprob: -7.44627571105957
    8. '                       ' → logprob: -7.57127571105957
    9. '           ' → logprob: -7.69627571105957
    10. ')
' → logprob: -8.19627571105957

Token 299: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006498062051832676
    2. '                       ' → logprob: -6.381497859954834
    3. '<|end|>' → logprob: -6.506497859954834
    4. '
' → logprob: -6.881497859954834
    5. '               ' → logprob: -7.381497859954834
    6. ')' → logprob: -8.006498336791992
    7. '                    
' → logprob: -8.506498336791992
    8. '           ' → logprob: -8.631498336791992
    9. '                           ' → logprob: -8.881498336791992
    10. ',' → logprob: -9.006498336791992

Token 300: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6363410353660583
    2. 'return' → logprob: -0.8863410353660583
    3. 'print' → logprob: -3.886341094970703
    4. ' return' → logprob: -4.261341094970703
    5. 'if' (adapté à ' if') → logprob: -4.511341094970703
    6. '                       ' → logprob: -5.136341094970703
    7. '               ' → logprob: -6.636341094970703
    8. '           ' → logprob: -6.886341094970703
    9. 'for' → logprob: -6.886341094970703
    10. 'Z' → logprob: -7.511341094970703

Token 301: ' not' (ID: 625)
  Prédit: ' loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.817421019077301
    2. 'loop' → logprob: -0.817421019077301
    3. '(loop' → logprob: -2.3174209594726562
    4. ' (' → logprob: -4.817420959472656
    5. ' not' → logprob: -6.192420959472656
    6. ''' → logprob: -6.942420959472656
    7. '(' → logprob: -7.067420959472656
    8. 'not' → logprob: -7.442420959472656
    9. 'Z' → logprob: -7.442420959472656
    10. ' L' → logprob: -7.567420959472656

Token 302: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -1.0978810787200928
    2. ''' → logprob: -1.3478810787200928
    3. ' loop' → logprob: -1.7228810787200928
    4. '(loop' → logprob: -2.0978810787200928
    5. ' '' → logprob: -3.0978810787200928
    6. '('' → logprob: -3.9728810787200928
    7. ' DF' → logprob: -5.222881317138672
    8. ' (' → logprob: -5.347881317138672
    9. 'DF' → logprob: -5.472881317138672
    10. '(' → logprob: -5.597881317138672

Token 303: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3764435946941376
    2. 'det' → logprob: -2.00144362449646
    3. 'found' → logprob: -2.25144362449646
    4. '_found' → logprob: -4.126443386077881
    5. 'check' → logprob: -4.626443386077881
    6. 'flag' → logprob: -4.626443386077881
    7. '_detect' → logprob: -4.751443386077881
    8. 'count' → logprob: -6.001443386077881
    9. 'ed' → logprob: -6.001443386077881
    10. 'ok' → logprob: -6.126443386077881

Token 304: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4384073317050934
    2. ':' → logprob: -1.563407301902771
    3. ' or' → logprob: -2.4384074211120605
    4. '>' → logprob: -4.0634074211120605
    5. ' %' → logprob: -4.3134074211120605
    6. '):' → logprob: -4.6884074211120605
    7. 'or' → logprob: -5.1884074211120605
    8. ')' → logprob: -6.1884074211120605
    9. '>:' → logprob: -6.3134074211120605
    10. ' >' → logprob: -6.6884074211120605

Token 305: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009792207274585962
    2. ' ' → logprob: -7.000979423522949
    3. '3' → logprob: -10.00097942352295
    4. '7' → logprob: -11.25097942352295
    5. '4' → logprob: -12.75097942352295
    6. '  ' → logprob: -13.25097942352295
    7. '   ' → logprob: -13.37597942352295
    8. '5' → logprob: -15.43847942352295
    9. '     ' → logprob: -15.62597942352295
    10. '1' → logprob: -15.62597942352295

Token 306: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.992775888647884e-05
    2. ' ' → logprob: -9.875069618225098
    3. '3' → logprob: -11.500069618225098
    4. '4' → logprob: -13.375069618225098
    5. '7' → logprob: -13.500069618225098
    6. '   ' → logprob: -14.062569618225098
    7. '  ' → logprob: -14.250069618225098
    8. '1' → logprob: -14.750069618225098
    9. '```' → logprob: -14.750069618225098
    10. '201' → logprob: -15.562569618225098

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10228894650936127
    2. '==' → logprob: -2.4772889614105225
    3. ' ==' → logprob: -4.977288722991943
    4. ':
' → logprob: -5.477288722991943
    5. ' :' → logprob: -6.477288722991943
    6. '):' → logprob: -8.102289199829102
    7. '=' → logprob: -8.602289199829102
    8. ')' → logprob: -10.227289199829102
    9. ' :
' → logprob: -10.727289199829102
    10. '):
' → logprob: -10.852289199829102

Token 308: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00742003321647644
    2. ':
' → logprob: -5.632420063018799
    3. ':' → logprob: -6.132420063018799
    4. ' return' → logprob: -8.25741958618164
    5. ' :' → logprob: -8.50741958618164
    6. '):
' → logprob: -8.50741958618164
    7. ' :
' → logprob: -8.63241958618164
    8. '                   ' → logprob: -8.75741958618164
    9. ',' → logprob: -8.88241958618164
    10. '
' → logprob: -9.50741958618164

Token 309: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7300145030021667
    2. 'print' (adapté à ' print') → logprob: -1.4800145626068115
    3. ' return' → logprob: -2.2300145626068115
    4. '                           ' → logprob: -2.6050145626068115
    5. '                       ' → logprob: -2.7300145626068115
    6. 'return' → logprob: -3.4800145626068115
    7. 'raise' → logprob: -5.605014324188232
    8. ' raise' → logprob: -5.730014324188232
    9. '                               ' → logprob: -6.355014324188232
    10. '                   ' → logprob: -6.855014324188232

Token 310: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0736922100186348
    2. '(-' → logprob: -3.1986923217773438
    3. '(' → logprob: -3.8236923217773438
    4. '('' → logprob: -5.198692321777344
    5. '(loop' → logprob: -6.073692321777344
    6. '("-' → logprob: -8.323692321777344
    7. '(("' → logprob: -9.823692321777344
    8. '("?' → logprob: -10.698692321777344
    9. '(":' → logprob: -10.823692321777344
    10. '"' → logprob: -10.948692321777344

Token 311: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.380947083234787
    2. '-' → logprob: -2.2559471130371094
    3. '0' → logprob: -2.6309471130371094
    4. 'loop' → logprob: -2.8809471130371094
    5. '"L' → logprob: -3.3809471130371094
    6. '"No' → logprob: -5.005947113037109
    7. '"-' → logprob: -5.005947113037109
    8. '"You' → logprob: -5.755947113037109
    9. '"W' → logprob: -5.755947113037109
    10. ''' → logprob: -5.880947113037109

Token 312: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14320792257785797
    2. ')' → logprob: -2.0182080268859863
    3. ')return' → logprob: -8.643207550048828
    4. ')
' → logprob: -8.893207550048828
    5. ');' → logprob: -9.268207550048828
    6. '                       ' → logprob: -9.643207550048828
    7. ')`
' → logprob: -11.143207550048828
    8. '                           ' → logprob: -11.143207550048828
    9. ' )
' → logprob: -11.268207550048828
    10. ');
' → logprob: -12.143207550048828

Token 313: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00028576893964782357
    2. ')' → logprob: -9.750286102294922
    3. 'exit' → logprob: -10.125286102294922
    4. '                           ' → logprob: -10.250286102294922
    5. '                        
' → logprob: -10.250286102294922
    6. ',' → logprob: -10.625286102294922
    7. '
' → logprob: -10.750286102294922
    8. '                   ' → logprob: -11.125286102294922
    9. 'return' → logprob: -11.250286102294922
    10. 'import' → logprob: -11.250286102294922

Token 314: ' quit' (ID: 27737)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.04414701461792
    2. '                       ' → logprob: -1.29414701461792
    3. ' return' → logprob: -1.41914701461792
    4. 'exit' → logprob: -2.79414701461792
    5. '
' → logprob: -3.16914701461792
    6. ' exit' → logprob: -3.91914701461792
    7. '                           ' → logprob: -5.54414701461792
    8. '                               ' → logprob: -5.79414701461792
    9. '                        
' → logprob: -7.04414701461792
    10. '                   ' → logprob: -8.419147491455078

Token 315: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015692472457885742
    2. '()
' → logprob: -4.265692710876465
    3. '                   ' → logprob: -6.765692710876465
    4. '               ' → logprob: -8.265692710876465
    5. '()\' → logprob: -10.015692710876465
    6. '           ' → logprob: -10.140692710876465
    7. '                       ' → logprob: -11.640692710876465
    8. '())' → logprob: -11.890692710876465
    9. '();' → logprob: -12.265692710876465
    10. '(' → logprob: -12.515692710876465

Token 316: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049993909895420074
    2. '                   ' → logprob: -3.0499939918518066
    3. ')' → logprob: -7.424993991851807
    4. '                       ' → logprob: -7.674993991851807
    5. 'return' → logprob: -9.174993515014648
    6. '<|end|>' → logprob: -9.674993515014648
    7. '           ' → logprob: -10.299993515014648
    8. ',' → logprob: -10.549993515014648
    9. '                
' → logprob: -10.799993515014648
    10. ' return' → logprob: -11.424993515014648

Token 317: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028559938073158264
    2. '                   ' → logprob: -6.0028557777404785
    3. ')' → logprob: -9.377856254577637
    4. 'else' (adapté à ' else') → logprob: -9.877856254577637
    5. '                       ' → logprob: -9.877856254577637
    6. 'continue' → logprob: -10.627856254577637
    7. '                
' → logprob: -10.752856254577637
    8. ',' → logprob: -10.752856254577637
    9. 'return' → logprob: -11.002856254577637
    10. ' P' → logprob: -11.127856254577637

Token 318: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0124778738245368
    2. '                   ' → logprob: -4.887477874755859
    3. ' P' → logprob: -5.637477874755859
    4. '               ' → logprob: -8.01247787475586
    5. ',' → logprob: -8.38747787475586
    6. '                           ' → logprob: -8.63747787475586
    7. ':' → logprob: -9.01247787475586
    8. ':
' → logprob: -9.51247787475586
    9. 'P' → logprob: -9.63747787475586
    10. ' continue' → logprob: -10.13747787475586

Token 319: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4649154841899872
    2. ' P' → logprob: -1.3399155139923096
    3. 'P' → logprob: -2.8399155139923096
    4. '                   ' → logprob: -3.4649155139923096
    5. '               ' → logprob: -4.9649152755737305
    6. ' return' → logprob: -5.4649152755737305
    7. ' continue' → logprob: -5.4649152755737305
    8. '                           ' → logprob: -6.8399152755737305
    9. 'continue' → logprob: -6.9649152755737305
    10. 'return' → logprob: -7.5899152755737305

Token 320: ' fix' (ID: 9295)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.4060342609882355
    2. 'continue' → logprob: -2.406034231185913
    3. '                   ' → logprob: -3.031034231185913
    4. '                       ' → logprob: -3.156034231185913
    5. 'return' → logprob: -3.406034231185913
    6. 'Z' → logprob: -3.531034231185913
    7. 'if' → logprob: -4.031034469604492
    8. ' P' → logprob: -4.156034469604492
    9. 'print' → logprob: -4.281034469604492
    10. 'loop' → logprob: -4.406034469604492

Token 321: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0626651048660278
    2. ' =' → logprob: -1.5626651048660278
    3. '[' → logprob: -1.6876651048660278
    4. 'ed' → logprob: -2.1876649856567383
    5. '=' → logprob: -3.1876649856567383
    6. '()' → logprob: -3.3126649856567383
    7. 'loop' → logprob: -5.062664985656738
    8. 'network' → logprob: -5.062664985656738
    9. 'val' → logprob: -5.187664985656738
    10. 'ation' → logprob: -5.312664985656738

Token 322: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34751594066619873
    2. ' =' → logprob: -1.5975159406661987
    3. '=' → logprob: -2.5975160598754883
    4. '(' → logprob: -4.597516059875488
    5. '[' → logprob: -5.472516059875488
    6. '=True' → logprob: -7.597516059875488
    7. '()
' → logprob: -8.847516059875488
    8. ' ()' → logprob: -8.847516059875488
    9. '(me' → logprob: -8.972516059875488
    10. '(next' → logprob: -9.097516059875488

Token 323: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.6194919943809509
    2. 'his' → logprob: -1.9944920539855957
    3. 'abs' → logprob: -2.6194920539855957
    4. ' Z' → logprob: -2.7444920539855957
    5. ' his' → logprob: -3.1194920539855957
    6. '(' → logprob: -3.6194920539855957
    7. ' abs' → logprob: -4.244492053985596
    8. ' (' → logprob: -4.369492053985596
    9. '(Z' → logprob: -4.619492053985596
    10. 'rel' → logprob: -4.744492053985596

Token 324: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.484132169745862e-05
    2. 'me' → logprob: -10.875094413757324
    3. '[next' → logprob: -10.875094413757324
    4. 'you' → logprob: -11.125094413757324
    5. '[mem' → logprob: -12.500094413757324
    6. '[to' → logprob: -12.625094413757324
    7. ')' → logprob: -12.875094413757324
    8. '+' → logprob: -13.000094413757324
    9. '<|end|>' → logprob: -13.000094413757324
    10. '[m' → logprob: -13.125094413757324

Token 325: 'you' (ID: 13320)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.6412893533706665
    2. 'you' → logprob: -0.8912893533706665
    3. '[' → logprob: -2.766289234161377
    4. '[m' → logprob: -10.453789710998535
    5. 'mo' → logprob: -10.453789710998535
    6. '```' → logprob: -10.766289710998535
    7. 'my' → logprob: -10.891289710998535
    8. '(me' → logprob: -11.016289710998535
    9. 'ma' → logprob: -11.078789710998535
    10. ' you' → logprob: -11.203789710998535

Token 326: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3694833517074585
    2. ' +' → logprob: -2.119483470916748
    3. '-' → logprob: -2.744483470916748
    4. ' ^' → logprob: -3.119483470916748
    5. '^' → logprob: -3.369483470916748
    6. ' -' → logprob: -3.369483470916748
    7. ')' → logprob: -4.994483470916748
    8. ' if' → logprob: -6.244483470916748
    9. '
' → logprob: -6.994483470916748
    10. 'if' → logprob: -7.494483470916748

Token 327: ' +' (ID: 659)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.7331657409667969
    2. ' ^' → logprob: -0.7331657409667969
    3. '+' → logprob: -3.608165740966797
    4. ' +' → logprob: -5.108165740966797
    5. '-' → logprob: -5.858165740966797
    6. ' -' → logprob: -5.983165740966797
    7. ' if' → logprob: -8.233165740966797
    8. '
' → logprob: -9.233165740966797
    9. 'if' → logprob: -9.858165740966797
    10. ' ^=' → logprob: -9.858165740966797

Token 328: ' his' (ID: 1232)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.2959730327129364
    2. 'rel' → logprob: -2.170973062515259
    3. 'his' → logprob: -2.670973062515259
    4. ' Z' → logprob: -3.045973062515259
    5. ' rel' → logprob: -4.29597282409668
    6. ' his' → logprob: -5.54597282409668
    7. ' ' → logprob: -6.04597282409668
    8. '(rel' → logprob: -6.54597282409668
    9. '1' → logprob: -7.04597282409668
    10. '   ' → logprob: -7.48347282409668

Token 329: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -2.5776860184123507e-06
    2. 'va' → logprob: -14.00000286102295
    3. 'rel' → logprob: -14.62500286102295
    4. '_val' → logprob: -15.37500286102295
    5. 'var' → logprob: -15.50000286102295
    6. ' val' → logprob: -15.87500286102295
    7. 'v' → logprob: -16.250001907348633
    8. '```' → logprob: -16.500001907348633
    9. 'vel' → logprob: -16.625001907348633
    10. '
' → logprob: -16.750001907348633

Token 330: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6209760308265686
    2. '                   ' → logprob: -1.6209759712219238
    3. '
' → logprob: -2.245975971221924
    4. '                           ' → logprob: -2.495975971221924
    5. '<|end|>' → logprob: -3.745975971221924
    6. '           ' → logprob: -4.745975971221924
    7. '                        
' → logprob: -4.870975971221924
    8. '[' → logprob: -5.120975971221924
    9. '               ' → logprob: -5.245975971221924
    10. ')
' → logprob: -5.495975971221924

Token 331: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06462099403142929
    2. '                   ' → logprob: -2.8146209716796875
    3. '                           ' → logprob: -7.4396209716796875
    4. '               ' → logprob: -7.5646209716796875
    5. '                        
' → logprob: -8.064620971679688
    6. '<|end|>' → logprob: -8.064620971679688
    7. ',' → logprob: -8.689620971679688
    8. '
' → logprob: -8.689620971679688
    9. '           ' → logprob: -9.064620971679688
    10. ')' → logprob: -9.439620971679688

Token 332: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.438684344291687
    2. 'Z' → logprob: -1.563684344291687
    3. '                       ' → logprob: -1.813684344291687
    4. 'for' → logprob: -1.938684344291687
    5. 'P' → logprob: -2.4386844635009766
    6. 'print' → logprob: -2.9386844635009766
    7. 'network' → logprob: -3.4386844635009766
    8. '                           ' → logprob: -3.9386844635009766
    9. ' for' → logprob: -4.313684463500977
    10. ' if' → logprob: -4.313684463500977

Token 333: ' fix' (ID: 9295)
  Prédit: ' fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fix' → logprob: -1.3698022365570068
    2. 'fix' → logprob: -1.3698022365570068
    3. 'Z' → logprob: -1.7448022365570068
    4. ' Z' → logprob: -1.7448022365570068
    5. '(Z' → logprob: -3.244802236557007
    6. ' (' → logprob: -3.369802236557007
    7. ' L' → logprob: -3.494802236557007
    8. 'L' → logprob: -3.994802236557007
    9. ' not' → logprob: -5.744802474975586
    10. ' P' → logprob: -5.869802474975586

Token 334: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. '```' → logprob: -16.25
    4. '_' → logprob: -17.25
    5. 'fix' → logprob: -17.25
    6. '[it' → logprob: -17.625
    7. '_it' → logprob: -17.75
    8. 'ix' → logprob: -17.875
    9. 'It' → logprob: -18.875
    10. '

' → logprob: -19.125

Token 335: '&' (ID: 5)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6731947064399719
    2. '<' → logprob: -0.9231947064399719
    3. ' !=' → logprob: -3.673194646835327
    4. ' >' → logprob: -3.798194646835327
    5. '!=' → logprob: -3.798194646835327
    6. '>' → logprob: -4.423194885253906
    7. '%' → logprob: -5.798194885253906
    8. ' not' → logprob: -6.548194885253906
    9. '<=' → logprob: -6.798194885253906
    10. ' <=' → logprob: -6.923194885253906

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046860878355801105
    2. ' ' → logprob: -5.379685878753662
    3. '(' → logprob: -11.12968635559082
    4. ' (' → logprob: -11.81718635559082
    5. '2' → logprob: -12.44218635559082
    6. '0' → logprob: -12.75468635559082
    7. '-' → logprob: -13.06718635559082
    8. '255' → logprob: -13.06718635559082
    9. '#' → logprob: -13.12968635559082
    10. '3' → logprob: -13.12968635559082

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07857830822467804
    2. '==' → logprob: -3.453578233718872
    3. ':
' → logprob: -3.578578233718872
    4. ' ==' → logprob: -4.578578472137451
    5. ' :' → logprob: -5.328578472137451
    6. '!=' → logprob: -8.203577995300293
    7. ' :
' → logprob: -8.453577995300293
    8. ' !=' → logprob: -8.578577995300293
    9. '():' → logprob: -9.953577995300293
    10. ':return' → logprob: -10.328577995300293

Token 338: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.030183615162968636
    2. ':
' → logprob: -4.405183792114258
    3. '                       ' → logprob: -4.780183792114258
    4. '                               ' → logprob: -5.530183792114258
    5. ':' → logprob: -6.155183792114258
    6. '                            
' → logprob: -7.655183792114258
    7. ' return' → logprob: -8.405183792114258
    8. '<|end|>' → logprob: -8.530183792114258
    9. ' :' → logprob: -8.655183792114258
    10. ' :
' → logprob: -8.905183792114258

Token 339: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5612627267837524
    2. ' print' → logprob: -0.9362627267837524
    3. '                               ' → logprob: -3.561262607574463
    4. '                           ' → logprob: -4.811262607574463
    5. 'continue' → logprob: -8.186263084411621
    6. ' continue' → logprob: -8.436263084411621
    7. '                       ' → logprob: -9.561263084411621
    8. ' return' → logprob: -9.561263084411621
    9. 'return' → logprob: -9.936263084411621
    10. '                                   ' → logprob: -10.186263084411621

Token 340: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.692145012086257e-05
    2. '(-' → logprob: -10.625046730041504
    3. '(
' → logprob: -11.750046730041504
    4. '0' → logprob: -11.875046730041504
    5. '('' → logprob: -13.500046730041504
    6. '("' → logprob: -13.500046730041504
    7. ' (' → logprob: -13.500046730041504
    8. '()' → logprob: -13.750046730041504
    9. '(f' → logprob: -14.250046730041504
    10. '((' → logprob: -15.000046730041504

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009097947040572762
    2. '-' → logprob: -8.000909805297852
    3. '1' → logprob: -8.250909805297852
    4. ' ' → logprob: -9.125909805297852
    5. '(' → logprob: -9.250909805297852
    6. ')' → logprob: -10.250909805297852
    7. '2' → logprob: -11.063409805297852
    8. 'fix' → logprob: -11.375909805297852
    9. '"' → logprob: -11.500909805297852
    10. '   ' → logprob: -12.563409805297852

Token 342: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5943742990493774
    2. ')' → logprob: -0.8443742990493774
    3. '                           ' → logprob: -4.094374179840088
    4. '                       ' → logprob: -6.719374179840088
    5. ')return' → logprob: -9.344374656677246
    6. '                               ' → logprob: -9.594374656677246
    7. '<|end|>' → logprob: -9.719374656677246
    8. ')
' → logprob: -9.844374656677246
    9. '           ' → logprob: -10.094374656677246
    10. '               ' → logprob: -11.344374656677246

Token 343: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.006242311093956232
    2. '                       ' → logprob: -5.756242275238037
    3. '                               ' → logprob: -6.506242275238037
    4. '<|end|>' → logprob: -7.131242275238037
    5. ')' → logprob: -7.506242275238037
    6. '           ' → logprob: -10.006242752075195
    7. 'return' → logprob: -10.131242752075195
    8. '                   ' → logprob: -10.506242752075195
    9. '                            
' → logprob: -10.881242752075195
    10. '               ' → logprob: -10.881242752075195

Token 344: ' quit' (ID: 27737)
  Prédit: 'quit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quit' (adapté à ' quit') → logprob: -0.0843035876750946
    2. '                           ' → logprob: -2.709303617477417
    3. '                               ' → logprob: -5.084303379058838
    4. 'exit' → logprob: -6.084303379058838
    5. ' quit' → logprob: -6.209303379058838
    6. 'return' → logprob: -7.334303379058838
    7. '                       ' → logprob: -7.334303379058838
    8. '
' → logprob: -7.459303379058838
    9. '                                   ' → logprob: -7.459303379058838
    10. '           ' → logprob: -8.334303855895996

Token 345: '()
' (ID: 1234)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0188683420419693
    2. ')' → logprob: -4.768868446350098
    3. '<|end|>' → logprob: -5.768868446350098
    4. '               ' → logprob: -6.143868446350098
    5. '                   ' → logprob: -6.643868446350098
    6. '                        
' → logprob: -6.643868446350098
    7. '()' → logprob: -7.393868446350098
    8. '           ' → logprob: -8.018868446350098
    9. '                           ' → logprob: -8.018868446350098
    10. 'else' → logprob: -8.393868446350098

Token 346: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14193512499332428
    2. '<|end|>' → logprob: -2.766935110092163
    3. '                        
' → logprob: -3.516935110092163
    4. '                           ' → logprob: -4.266935348510742
    5. '                            
' → logprob: -5.016935348510742
    6. ')' → logprob: -5.391935348510742
    7. '               ' → logprob: -5.641935348510742
    8. ' else' → logprob: -6.266935348510742
    9. 'else' → logprob: -6.266935348510742
    10. '
' → logprob: -6.266935348510742

Token 347: ' return' (ID: 622)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06617031991481781
    2. '
' → logprob: -4.0661702156066895
    3. '                           ' → logprob: -4.3161702156066895
    4. '               ' → logprob: -4.5661702156066895
    5. '                   ' → logprob: -5.1911702156066895
    6. ')' → logprob: -5.5661702156066895
    7. 'else' → logprob: -5.6911702156066895
    8. '                        
' → logprob: -5.8161702156066895
    9. ' else' → logprob: -6.1911702156066895
    10. '                            
' → logprob: -6.4411702156066895

Token 348: ' (' (ID: 350)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.07008326798677444
    2. '[' → logprob: -3.0700833797454834
    3. ' fix' → logprob: -4.320083141326904
    4. 'Z' → logprob: -5.820083141326904
    5. '[]' → logprob: -7.195083141326904
    6. 'abs' → logprob: -7.320083141326904
    7. 'None' → logprob: -7.820083141326904
    8. 'False' → logprob: -7.820083141326904
    9. ' [' → logprob: -7.945083141326904
    10. '0' → logprob: -8.320083618164062

Token 349: 'False' (ID: 8168)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.17336688935756683
    2. 'Z' → logprob: -2.0483667850494385
    3. 'L' → logprob: -4.423367023468018
    4. 'me' → logprob: -5.923367023468018
    5. ' fix' → logprob: -5.923367023468018
    6. '0' → logprob: -6.048367023468018
    7. '[' → logprob: -6.423367023468018
    8. 'abs' → logprob: -6.423367023468018
    9. 'you' → logprob: -6.798367023468018
    10. ')' → logprob: -6.923367023468018

Token 350: ',Z' (ID: 132501)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5002504587173462
    2. ')' → logprob: -1.2502504587173462
    3. ',)' → logprob: -2.2502503395080566
    4. ',
' → logprob: -7.500250339508057
    5. '<|end|>' → logprob: -7.500250339508057
    6. ' )' → logprob: -7.875250339508057
    7. ' ,' → logprob: -8.625250816345215
    8. ',)
' → logprob: -10.500250816345215
    9. ',:)' → logprob: -10.750250816345215
    10. ')
' → logprob: -11.250250816345215

Token 351: ',L' (ID: 68006)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05573873966932297
    2. '[' → logprob: -3.555738687515259
    3. ' )' → logprob: -4.180738925933838
    4. ',' → logprob: -4.805738925933838
    5. ')
' → logprob: -6.305738925933838
    6. ' ,' → logprob: -8.93073844909668
    7. ' )
' → logprob: -9.43073844909668
    8. ')[' → logprob: -10.93073844909668
    9. ',)' → logprob: -10.93073844909668
    10. '))' → logprob: -11.18073844909668

Token 352: ',you' (ID: 178424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037060158792883158
    2. ',' → logprob: -6.503705978393555
    3. ' )' → logprob: -6.753705978393555
    4. ')
' → logprob: -7.253705978393555
    5. ',)' → logprob: -8.253705978393555
    6. '),' → logprob: -11.378705978393555
    7. '[' → logprob: -11.503705978393555
    8. ',
' → logprob: -11.628705978393555
    9. ' ,' → logprob: -12.003705978393555
    10. '   ' → logprob: -12.003705978393555

Token 353: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13126997649669647
    2. ',' → logprob: -2.131269931793213
    3. ',)' → logprob: -5.506269931793213
    4. ' )' → logprob: -8.881270408630371
    5. ')
' → logprob: -10.756270408630371
    6. '   ' → logprob: -11.006270408630371
    7. '),' → logprob: -11.131270408630371
    8. ' ,' → logprob: -11.256270408630371
    9. ',B' → logprob: -11.756270408630371
    10. ',:)' → logprob: -12.381270408630371

Token 354: 'fix' (ID: 11853)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0016851745313033462
    2. 'you' → logprob: -6.87668514251709
    3. ' me' → logprob: -7.62668514251709
    4. 'fix' → logprob: -10.87668514251709
    5. '   ' → logprob: -11.00168514251709
    6. ')' → logprob: -11.25168514251709
    7. 'loop' → logprob: -11.25168514251709
    8. 'P' → logprob: -11.50168514251709
    9. '(me' → logprob: -11.87668514251709
    10. 'next' → logprob: -12.00168514251709

Token 355: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -4.3464544432936236e-05
    2. '
' → logprob: -12.000043869018555
    3. '   ' → logprob: -12.000043869018555
    4. '_it' → logprob: -12.125043869018555
    5. ')' → logprob: -12.750043869018555
    6. ' it' → logprob: -13.250043869018555
    7. '       ' → logprob: -13.250043869018555
    8. '```' → logprob: -13.375043869018555
    9. 'ot' → logprob: -13.500043869018555
    10. '[' → logprob: -13.500043869018555

Token 356: '//' (ID: 393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.190178904333152e-05
    2. ' )' → logprob: -10.875031471252441
    3. ')
' → logprob: -11.875031471252441
    4. ',' → logprob: -12.625031471252441
    5. ',)' → logprob: -14.375031471252441
    6. '),' → logprob: -14.625031471252441
    7. '   ' → logprob: -15.125031471252441
    8. '<|end|>' → logprob: -15.375031471252441
    9. ')return' → logprob: -15.500031471252441
    10. ')}}' → logprob: -15.750031471252441

Token 357: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.125075340270996
    4. '1' → logprob: -16.500076293945312
    5. '  ' → logprob: -17.250076293945312
    6. '           ' → logprob: -17.250076293945312
    7. '                       ' → logprob: -17.375076293945312
    8. '
' → logprob: -17.750076293945312
    9. '22' → logprob: -17.875076293945312
    10. '```' → logprob: -18.000076293945312

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005157403065823019
    2. ' )' → logprob: -8.375515937805176
    3. ')
' → logprob: -8.500515937805176
    4. '   ' → logprob: -10.125515937805176
    5. ',' → logprob: -10.875515937805176
    6. '       ' → logprob: -12.750515937805176
    7. '           ' → logprob: -12.875515937805176
    8. ')return' → logprob: -12.875515937805176
    9. '                           ' → logprob: -13.000515937805176
    10. '               ' → logprob: -13.125515937805176

Token 359: '               ' (ID: 506)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.6614031195640564
    2. ' ' → logprob: -1.2864031791687012
    3. '_' → logprob: -2.661403179168701
    4. ')' → logprob: -3.161403179168701
    5. ' 
' → logprob: -3.411403179168701
    6. ' else' → logprob: -3.786403179168701
    7. '<|end|>' → logprob: -4.661403179168701
    8. ' return' → logprob: -5.536403179168701
    9. ' next' → logprob: -5.661403179168701
    10. '[' → logprob: -5.661403179168701

Token 360: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28989458084106445
    2. ' else' → logprob: -2.7898945808410645
    3. '                   ' → logprob: -2.7898945808410645
    4. '                ' → logprob: -3.5398945808410645
    5. ' P' → logprob: -3.6648945808410645
    6. 'else' → logprob: -4.1648945808410645
    7. '                       ' → logprob: -4.4148945808410645
    8. 'P' → logprob: -4.7898945808410645
    9. '           ' → logprob: -4.7898945808410645
    10. '                           ' → logprob: -5.2898945808410645

Token 361: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.5255733728408813
    2. 'L' → logprob: -0.9005733728408813
    3. ' (' → logprob: -6.650573253631592
    4. '(L' → logprob: -7.400573253631592
    5. '(' → logprob: -8.52557373046875
    6. ' ' → logprob: -9.65057373046875
    7. '   ' → logprob: -9.90057373046875
    8. '                   ' → logprob: -10.15057373046875
    9. ' not' → logprob: -10.15057373046875
    10. '               ' → logprob: -10.58807373046875

Token 362: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.3458322731312364e-06
    2. 'you' → logprob: -12.500007629394531
    3. ' [' → logprob: -14.000007629394531
    4. '
' → logprob: -14.125007629394531
    5. '```' → logprob: -14.875007629394531
    6. '[
' → logprob: -15.125007629394531
    7. '==' → logprob: -16.12500762939453
    8. '   ' → logprob: -16.12500762939453
    9. '	' → logprob: -16.56250762939453
    10. '       ' → logprob: -16.56250762939453

Token 363: 'you' (ID: 13320)
  Prédit: 'you'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'you' → logprob: -0.0011859419755637646
    2. '[' → logprob: -6.751185894012451
    3. 'me' → logprob: -11.37618637084961
    4. 'vous' → logprob: -13.87618637084961
    5. ' you' → logprob: -14.50118637084961
    6. 'yo' → logprob: -14.62618637084961
    7. '{' → logprob: -15.37618637084961
    8. '```' → logprob: -15.50118637084961
    9. '
' → logprob: -15.87618637084961
    10. '_you' → logprob: -15.87618637084961

Token 364: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.46846234798431396
    2. ' ==' → logprob: -1.593462347984314
    3. '==-' → logprob: -1.843462347984314
    4. '[' → logprob: -5.0934624671936035
    5. ')' → logprob: -5.8434624671936035
    6. ']==' → logprob: -6.3434624671936035
    7. ')==' → logprob: -6.7184624671936035
    8. ']' → logprob: -8.718461990356445
    9. ' ' → logprob: -9.343461990356445
    10. '   ' → logprob: -9.718461990356445

Token 365: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7258647680282593
    2. '==-' → logprob: -0.9758647680282593
    3. ' ==' → logprob: -1.9758647680282593
    4. '[' → logprob: -8.22586441040039
    5. ')==' → logprob: -9.10086441040039
    6. ']==' → logprob: -9.47586441040039
    7. ')' → logprob: -10.60086441040039
    8. '[-' → logprob: -10.60086441040039
    9. '<' → logprob: -10.72586441040039
    10. '==
' → logprob: -10.97586441040039

Token 366: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003398726985324174
    2. ' -' → logprob: -8.00033950805664
    3. '   ' → logprob: -12.62533950805664
    4. ' ' → logprob: -14.25033950805664
    5. '           ' → logprob: -15.87533950805664
    6. '  ' → logprob: -15.87533950805664
    7. '       ' → logprob: -16.25033950805664
    8. '                   ' → logprob: -16.50033950805664
    9. '	' → logprob: -17.12533950805664
    10. '               ' → logprob: -17.25033950805664

Token 367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010008628305513412
    2. '-' → logprob: -9.375100135803223
    3. ' -' → logprob: -11.625100135803223
    4. ' ' → logprob: -12.375100135803223
    5. '   ' → logprob: -14.500100135803223
    6. '```' → logprob: -15.000100135803223
    7. '  ' → logprob: -15.937600135803223
    8. '

' → logprob: -16.250099182128906
    9. '
' → logprob: -16.437599182128906
    10. '<' → logprob: -16.750099182128906

Token 368: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16320867836475372
    2. ':' → logprob: -1.9132087230682373
    3. '                   ' → logprob: -6.288208484649658
    4. ' and' → logprob: -7.788208484649658
    5. '               ' → logprob: -8.163208961486816
    6. '                       ' → logprob: -9.038208961486816
    7. '):
' → logprob: -9.288208961486816
    8. ' or' → logprob: -10.163208961486816
    9. ' :
' → logprob: -10.163208961486816
    10. ',' → logprob: -10.288208961486816

Token 369: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4549025595188141
    2. '               ' → logprob: -1.8299025297164917
    3. 'P' → logprob: -2.3299026489257812
    4. ' P' → logprob: -2.5799026489257812
    5. '                       ' → logprob: -4.204902648925781
    6. 'L' → logprob: -4.704902648925781
    7. ' L' → logprob: -5.579902648925781
    8. '           ' → logprob: -5.954902648925781
    9. '   ' → logprob: -7.454902648925781
    10. '       ' → logprob: -7.704902648925781

Token 370: ' L' (ID: 451)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.494347482919693
    2. 'L' (adapté à ' L') → logprob: -1.4943474531173706
    3. 'Z' → logprob: -2.24434757232666
    4. '                   ' → logprob: -3.49434757232666
    5. ' P' → logprob: -4.24434757232666
    6. '               ' → logprob: -5.49434757232666
    7. '           ' → logprob: -5.61934757232666
    8. ' L' → logprob: -5.99434757232666
    9. '                       ' → logprob: -5.99434757232666
    10. ' Z' → logprob: -6.74434757232666

Token 371: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '   ' → logprob: -14.125001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '```' → logprob: -15.250001907348633
    5. '=' → logprob: -15.375001907348633
    6. '       ' → logprob: -16.000001907348633
    7. ' =' → logprob: -16.500001907348633
    8. 'you' → logprob: -16.750001907348633
    9. '           ' → logprob: -16.875001907348633
    10. 'def' → logprob: -17.250001907348633

Token 372: 'you' (ID: 13320)
  Prédit: 'you'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'you' → logprob: -1.3544423381972592e-05
    2. ' you' → logprob: -12.25001335144043
    3. 'me' → logprob: -12.87501335144043
    4. ']' → logprob: -13.37501335144043
    5. 'yo' → logprob: -13.50001335144043
    6. '[' → logprob: -13.87501335144043
    7. '   ' → logprob: -14.75001335144043
    8. '_you' → logprob: -15.37501335144043
    9. 'You' → logprob: -15.62501335144043
    10. '
' → logprob: -16.06251335144043

Token 373: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1836388111114502
    2. '=' → logprob: -2.43363881111145
    3. ']' → logprob: -2.68363881111145
    4. '[' → logprob: -4.683638572692871
    5. ']=' → logprob: -6.183638572692871
    6. ')' → logprob: -8.808638572692871
    7. '   ' → logprob: -8.933638572692871
    8. '[next' → logprob: -10.308638572692871
    9. ',' → logprob: -10.808638572692871
    10. ' ]' → logprob: -11.308638572692871

Token 374: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022576153278351
    2. ' =' → logprob: -2.3502256870269775
    3. '   ' → logprob: -11.975225448608398
    4. ',' → logprob: -12.100225448608398
    5. '=L' → logprob: -12.475225448608398
    6. ' ' → logprob: -13.725225448608398
    7. '[' → logprob: -14.600225448608398
    8. ')' → logprob: -14.850225448608398
    9. '    ' → logprob: -14.850225448608398
    10. '  ' → logprob: -15.350225448608398

Token 375: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -5.049755782238208e-05
    2. ' L' → logprob: -10.00005054473877
    3. '   ' → logprob: -12.37505054473877
    4. ' ' → logprob: -14.62505054473877
    5. '1' → logprob: -15.50005054473877
    6. '	L' → logprob: -16.500049591064453
    7. '  ' → logprob: -16.750049591064453
    8. '    ' → logprob: -17.500049591064453
    9. '       ' → logprob: -17.625049591064453
    10. '     ' → logprob: -17.875049591064453

Token 376: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10022532939910889
    2. 'me' → logprob: -2.3502254486083984
    3. ' me' → logprob: -12.100225448608398
    4. '   ' → logprob: -12.225225448608398
    5. '	me' → logprob: -13.350225448608398
    6. '+' → logprob: -13.725225448608398
    7. '_me' → logprob: -14.225225448608398
    8. '       ' → logprob: -14.475225448608398
    9. '           ' → logprob: -14.600225448608398
    10. '[mem' → logprob: -14.975225448608398

Token 377: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -1.8550976164988242e-05
    2. ' me' → logprob: -11.000018119812012
    3. 'm' → logprob: -13.750018119812012
    4. '	me' → logprob: -15.250018119812012
    5. '[' → logprob: -16.125019073486328
    6. '   ' → logprob: -16.250019073486328
    7. ' ' → logprob: -16.375019073486328
    8. 'mes' → logprob: -16.500019073486328
    9. '(me' → logprob: -18.250019073486328
    10. 'em' → logprob: -18.500019073486328

Token 378: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005258779972791672
    2. ' +' → logprob: -5.255258560180664
    3. ']+' → logprob: -11.380258560180664
    4. ')+' → logprob: -11.755258560180664
    5. '   ' → logprob: -13.005258560180664
    6. ' plus' → logprob: -13.630258560180664
    7. ')' → logprob: -14.505258560180664
    8. '}+' → logprob: -14.505258560180664
    9. ']' → logprob: -15.130258560180664
    10. '+
' → logprob: -15.505258560180664

Token 379: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07711697369813919
    2. ' +' → logprob: -3.4521169662475586
    3. '
' → logprob: -3.8271169662475586
    4. '                   ' → logprob: -3.9521169662475586
    5. '           ' → logprob: -7.702116966247559
    6. '       ' → logprob: -8.452116966247559
    7. '   ' → logprob: -8.577116966247559
    8. '               ' → logprob: -8.702116966247559
    9. '                       ' → logprob: -8.702116966247559
    10. '<|end|>' → logprob: -8.702116966247559

Token 380: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -14.500015258789062
    4. '           ' → logprob: -18.250015258789062
    5. '```' → logprob: -18.250015258789062
    6. '       ' → logprob: -18.625015258789062
    7. '<|end|>' → logprob: -19.000015258789062
    8. '  ' → logprob: -19.250015258789062
    9. '                   ' → logprob: -19.750015258789062
    10. '[' → logprob: -20.500015258789062

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.37500286102295
    4. '```' → logprob: -19.000003814697266
    5. '  ' → logprob: -19.250003814697266
    6. '           ' → logprob: -19.250003814697266
    7. '<|end|>' → logprob: -19.625003814697266
    8. '       ' → logprob: -19.750003814697266
    9. '[' → logprob: -20.000003814697266
    10. '+' → logprob: -21.187503814697266

Token 382: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006830932572484016
    2. 'P' → logprob: -5.381831169128418
    3. '           ' → logprob: -7.006831169128418
    4. '       ' → logprob: -7.631831169128418
    5. '               ' → logprob: -8.256831169128418
    6. ' P' → logprob: -8.506831169128418
    7. '                       ' → logprob: -8.631831169128418
    8. ',' → logprob: -9.381831169128418
    9. '   ' → logprob: -9.756831169128418
    10. '                  ' → logprob: -11.881831169128418

Token 383: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04425756633281708
    2. 'P' → logprob: -3.794257640838623
    3. '           ' → logprob: -4.669257640838623
    4. '       ' → logprob: -5.169257640838623
    5. ' P' → logprob: -6.044257640838623
    6. '               ' → logprob: -6.669257640838623
    7. '                       ' → logprob: -7.044257640838623
    8. '   ' → logprob: -8.044257164001465
    9. ',' → logprob: -8.544257164001465
    10. '<|end|>' → logprob: -8.919257164001465

Token 384: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' (adapté à ' Z') → logprob: -0.20444034039974213
    2. 'P' → logprob: -1.7044403553009033
    3. '                   ' → logprob: -5.829440116882324
    4. '                       ' → logprob: -10.079440116882324
    5. '           ' → logprob: -11.579440116882324
    6. ' Z' → logprob: -11.829440116882324
    7. '               ' → logprob: -11.829440116882324
    8. ' P' → logprob: -11.954440116882324
    9. '   ' → logprob: -12.954440116882324
    10. '       ' → logprob: -13.204440116882324

Token 385: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. ' =' → logprob: -13.250005722045898
    3. '[to' → logprob: -14.375005722045898
    4. '
' → logprob: -14.500005722045898
    5. '=' → logprob: -14.750005722045898
    6. '   ' → logprob: -15.125005722045898
    7. '```' → logprob: -15.125005722045898
    8. ')[' → logprob: -15.375005722045898
    9. '[next' → logprob: -15.625005722045898
    10. ' [' → logprob: -15.750005722045898

Token 386: 'you' (ID: 13320)
  Prédit: 'you'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'you' → logprob: -0.00044890373828820884
    2. '[' → logprob: -7.750448703765869
    3. ' you' → logprob: -12.000449180603027
    4. ']' → logprob: -13.000449180603027
    5. 'yo' → logprob: -13.250449180603027
    6. ')' → logprob: -13.625449180603027
    7. 'me' → logprob: -14.000449180603027
    8. 'vous' → logprob: -14.250449180603027
    9. '[next' → logprob: -14.375449180603027
    10. '   ' → logprob: -14.750449180603027

Token 387: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026179492473602
    2. ' =' → logprob: -1.9102617502212524
    3. ')' → logprob: -10.910262107849121
    4. ']' → logprob: -11.035262107849121
    5. ']=' → logprob: -13.910262107849121
    6. '[' → logprob: -14.410262107849121
    7. ' )' → logprob: -15.160262107849121
    8. ')=' → logprob: -15.285262107849121
    9. ' ' → logprob: -15.410262107849121
    10. ' ]' → logprob: -15.535262107849121

Token 388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. '.=' → logprob: -16.938262939453125
    4. ',' → logprob: -17.063262939453125
    5. ' +=' → logprob: -17.813262939453125
    6. '[' → logprob: -17.938262939453125
    7. '＝' → logprob: -17.938262939453125
    8. '+=' → logprob: -17.938262939453125
    9. ' ' → logprob: -18.063262939453125
    10. '   ' → logprob: -18.313262939453125

Token 389: ' his' (ID: 1232)
  Prédit: 'his'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'his' → logprob: -0.002673995215445757
    2. ' his' → logprob: -6.252674102783203
    3. '-' → logprob: -8.377674102783203
    4. 'rel' → logprob: -8.627674102783203
    5. 'Z' → logprob: -9.002674102783203
    6. '   ' → logprob: -9.752674102783203
    7. ' -' → logprob: -10.502674102783203
    8. '-h' → logprob: -11.127674102783203
    9. ' ' → logprob: -11.377674102783203
    10. 'h' → logprob: -11.377674102783203

Token 390: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00014120421838015318
    2. '[val' → logprob: -8.875141143798828
    3. ' val' → logprob: -14.000141143798828
    4. '[' → logprob: -15.375141143798828
    5. '	val' → logprob: -16.750141143798828
    6. '_val' → logprob: -17.000141143798828
    7. ',val' → logprob: -17.125141143798828
    8. 'rel' → logprob: -17.125141143798828
    9. 'v' → logprob: -17.625141143798828
    10. '.val' → logprob: -17.750141143798828

Token 391: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018605689983814955
    2. '           ' → logprob: -7.501860618591309
    3. ',' → logprob: -7.876860618591309
    4. '   ' → logprob: -8.376860618591309
    5. '               ' → logprob: -8.376860618591309
    6. '       ' → logprob: -8.626860618591309
    7. '<|end|>' → logprob: -8.876860618591309
    8. '
' → logprob: -10.001860618591309
    9. 'P' → logprob: -10.126860618591309
    10. '                       ' → logprob: -11.126860618591309

Token 392: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01124764047563076
    2. 'P' → logprob: -4.761247634887695
    3. '           ' → logprob: -6.886247634887695
    4. '   ' → logprob: -7.136247634887695
    5. '               ' → logprob: -7.636247634887695
    6. '       ' → logprob: -8.511247634887695
    7. ' P' → logprob: -10.136247634887695
    8. ',' → logprob: -10.261247634887695
    9. '<|end|>' → logprob: -10.886247634887695
    10. '                       ' → logprob: -11.511247634887695

Token 393: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.00318912067450583
    2. '                   ' → logprob: -6.0031890869140625
    3. 'next' → logprob: -7.5031890869140625
    4. '           ' → logprob: -9.378189086914062
    5. ' P' → logprob: -10.128189086914062
    6. '               ' → logprob: -11.128189086914062
    7. '                       ' → logprob: -12.128189086914062
    8. '       ' → logprob: -12.753189086914062
    9. ' next' → logprob: -12.753189086914062
    10. '   ' → logprob: -12.753189086914062

Token 394: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.5
    3. ')[' → logprob: -17.75
    4. '\[' → logprob: -18.125
    5. ' [' → logprob: -18.5
    6. '[user' → logprob: -18.5
    7. '[mem' → logprob: -19.0
    8. '[assembly' → logprob: -19.125
    9. '[to' → logprob: -19.25
    10. '.append' → logprob: -19.25

Token 395: 'you' (ID: 13320)
  Prédit: 'you'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'you' → logprob: -0.004623322281986475
    2. 'me' → logprob: -5.3796234130859375
    3. ' you' → logprob: -14.379623413085938
    4. '[' → logprob: -15.004623413085938
    5. '```' → logprob: -15.004623413085938
    6. 'You' → logprob: -15.379623413085938
    7. 'yo' → logprob: -15.379623413085938
    8. '
' → logprob: -15.629623413085938
    9. '_you' → logprob: -15.629623413085938
    10. ']' → logprob: -15.879623413085938

Token 396: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014605320990085602
    2. ']=' → logprob: -4.889605522155762
    3. '=' → logprob: -5.014605522155762
    4. ' =' → logprob: -8.264605522155762
    5. '[' → logprob: -9.764605522155762
    6. ' ]' → logprob: -11.264605522155762
    7. ')' → logprob: -12.014605522155762
    8. ')=' → logprob: -14.764605522155762
    9. ']==' → logprob: -16.264604568481445
    10. ']
' → logprob: -16.639604568481445

Token 397: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029832987114787102
    2. ' =' → logprob: -3.5298330783843994
    3. '[' → logprob: -9.40483283996582
    4. '.=' → logprob: -16.90483283996582
    5. '=
' → logprob: -18.02983283996582
    6. '   ' → logprob: -18.27983283996582
    7. '=[' → logprob: -18.27983283996582
    8. ')' → logprob: -19.02983283996582
    9. '＝' → logprob: -19.15483283996582
    10. '.' → logprob: -19.27983283996582

Token 398: ' me' (ID: 668)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -6.2729995988775045e-06
    2. ' me' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.5000057220459
    4. 'mo' → logprob: -18.0000057220459
    5. '	me' → logprob: -18.1250057220459
    6. ' ' → logprob: -18.3750057220459
    7. 'ma' → logprob: -19.3750057220459
    8. '(me' → logprob: -19.7500057220459
    9. 'men' → logprob: -20.1250057220459
    10. 'mes' → logprob: -20.3750057220459

Token 399: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003600144700612873
    2. '               ' → logprob: -8.750360488891602
    3. '
' → logprob: -9.500360488891602
    4. '           ' → logprob: -9.625360488891602
    5. '                    
' → logprob: -10.875360488891602
    6. ',' → logprob: -11.125360488891602
    7. 'next' → logprob: -12.250360488891602
    8. '                       ' → logprob: -12.250360488891602
    9. '                  ' → logprob: -12.750360488891602
    10. 'm' → logprob: -13.000360488891602

Token 400: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011877299984917045
    2. 'next' → logprob: -7.251187801361084
    3. '               ' → logprob: -8.376187324523926
    4. '           ' → logprob: -9.001187324523926
    5. ' next' → logprob: -9.126187324523926
    6. '                       ' → logprob: -12.501187324523926
    7. '   ' → logprob: -13.001187324523926
    8. '[next' → logprob: -13.126187324523926
    9. '       ' → logprob: -13.376187324523926
    10. '```' → logprob: -13.501187324523926

Token 401: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.030491581186652184
    2. ' next' → logprob: -3.530491590499878
    3. '                   ' → logprob: -7.280491352081299
    4. '           ' → logprob: -10.405491828918457
    5. '               ' → logprob: -11.030491828918457
    6. '                       ' → logprob: -13.155491828918457
    7. '
' → logprob: -13.655491828918457
    8. '[next' → logprob: -13.905491828918457
    9. '	next' → logprob: -14.530491828918457
    10. '```' → logprob: -15.280491828918457

Token 402: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -5.438573680294212e-06
    2. '_g' → logprob: -12.750005722045898
    3. '.append' → logprob: -14.375005722045898
    4. '```' → logprob: -14.375005722045898
    5. 'gu' → logprob: -14.500005722045898
    6. 'г' → logprob: -15.625005722045898
    7. '[' → logprob: -16.3750057220459
    8. '   ' → logprob: -17.0000057220459
    9. ')' → logprob: -17.1250057220459
    10. 's' → logprob: -17.2500057220459

Token 403: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -8.180258191714529e-06
    2. 'u' → logprob: -11.750008583068848
    3. 'g' → logprob: -15.375008583068848
    4. 'ay' → logprob: -17.37500762939453
    5. 'y' → logprob: -19.37500762939453
    6. 'ut' → logprob: -19.75000762939453
    7. 'uyer' → logprob: -19.75000762939453
    8. '[' → logprob: -20.00000762939453
    9. 'uyen' → logprob: -20.62500762939453
    10. '   ' → logprob: -20.87500762939453

Token 404: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.774276774493046e-05
    2. '.' → logprob: -10.250038146972656
    3. 'append' → logprob: -13.875038146972656
    4. ' .' → logprob: -14.125038146972656
    5. '.app' → logprob: -14.500038146972656
    6. '.ap' → logprob: -16.500038146972656
    7. '.push' → logprob: -18.000038146972656
    8. ' append' → logprob: -18.500038146972656
    9. '.add' → logprob: -18.750038146972656
    10. '_append' → logprob: -18.750038146972656

Token 405: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. 'you' → logprob: -16.625
    3. '((' → logprob: -20.5
    4. '(the' → logprob: -21.375
    5. '```' → logprob: -21.5
    6. ' (' → logprob: -21.5
    7. '()' → logprob: -21.625
    8. 'You' → logprob: -21.625
    9. '   ' → logprob: -21.75
    10. '(y' → logprob: -21.875

Token 406: 'you' (ID: 13320)
  Prédit: 'you'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'you' → logprob: -8.061054359131958e-06
    2. ' you' → logprob: -11.750007629394531
    3. 'yo' → logprob: -17.62500762939453
    4. 'You' → logprob: -18.37500762939453
    5. '   ' → logprob: -18.87500762939453
    6. '```' → logprob: -19.25000762939453
    7. '_you' → logprob: -19.62500762939453
    8. ')' → logprob: -20.50000762939453
    9. '`' → logprob: -21.00000762939453
    10. '(' → logprob: -21.00000762939453

Token 407: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010656783124431968
    2. ')
' → logprob: -6.876065731048584
    3. ' )' → logprob: -11.251065254211426
    4. '       ' → logprob: -11.376065254211426
    5. '           ' → logprob: -12.376065254211426
    6. '<|end|>' → logprob: -13.876065254211426
    7. '   ' → logprob: -14.251065254211426
    8. '               ' → logprob: -14.251065254211426
    9. ')return' → logprob: -14.376065254211426
    10. '')' → logprob: -15.751065254211426

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2698895335197449
    2. '   ' → logprob: -2.5198895931243896
    3. '        
' → logprob: -2.8948895931243896
    4. '
' → logprob: -3.1448895931243896
    5. '    
' → logprob: -3.8948895931243896
    6. 'm' → logprob: -4.1448893547058105
    7. ' 
' → logprob: -4.8948893547058105
    8. '\n' → logprob: -5.6448893547058105
    9. '            
' → logprob: -6.1448893547058105
    10. ' myst' → logprob: -6.6448893547058105

Token 409: ' myst' (ID: 15982)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5125555396080017
    2. '       ' → logprob: -1.0125555992126465
    3. '        
' → logprob: -4.2625555992126465
    4. '   ' → logprob: -4.5125555992126465
    5. '
' → logprob: -5.3875555992126465
    6. '    
' → logprob: -6.0125555992126465
    7. '[m' → logprob: -6.1375555992126465
    8. '	m' → logprob: -7.1375555992126465
    9. '<m' → logprob: -7.3875555992126465
    10. ' myst' → logprob: -7.3875555992126465

Token 410: 'ack' (ID: 552)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.20142988860607147
    2. 'ack' → logprob: -1.701429843902588
    3. '_stack' → logprob: -11.326430320739746
    4. 'append' → logprob: -13.701430320739746
    5. 'Stack' → logprob: -13.701430320739746
    6. ' stack' → logprob: -14.451430320739746
    7. 'g' → logprob: -14.951430320739746
    8. 'app' → logprob: -15.326430320739746
    9. 'uck' → logprob: -16.07642936706543
    10. 'ock' → logprob: -16.07642936706543

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.746380237629637e-05
    2. ' =' → logprob: -9.250097274780273
    3. '.extend' → logprob: -13.625097274780273
    4. '.=' → logprob: -17.000097274780273
    5. '+=' → logprob: -17.875097274780273
    6. '=
' → logprob: -18.125097274780273
    7. '=

' → logprob: -18.375097274780273
    8. ',next' → logprob: -20.250097274780273
    9. '＝' → logprob: -20.250097274780273
    10. 'next' → logprob: -20.375097274780273

Token 412: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.023251067847013474
    2. ' next' → logprob: -3.7732510566711426
    3. '[next' → logprob: -12.2732515335083
    4. '(next' → logprob: -14.0232515335083
    5. '	next' → logprob: -16.648250579833984
    6. '   ' → logprob: -17.398250579833984
    7. ' ' → logprob: -17.648250579833984
    8. '[' → logprob: -18.148250579833984
    9. '.next' → logprob: -18.273250579833984
    10. ',next' → logprob: -19.398250579833984

Token 413: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.320199877838604e-07
    2. '_g' → logprob: -15.25
    3. 'd' → logprob: -16.0
    4. 'gu' → logprob: -17.5
    5. 'next' → logprob: -17.625
    6. '[' → logprob: -17.75
    7. 'got' → logprob: -17.875
    8. '```' → logprob: -18.0
    9. 's' → logprob: -19.125
    10. 'г' → logprob: -19.25

Token 414: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -6.420598219847307e-05
    2. 'u' → logprob: -10.1250638961792
    3. 'ay' → logprob: -10.7500638961792
    4. 'g' → logprob: -13.5000638961792
    5. '[' → logprob: -14.8750638961792
    6. 'ut' → logprob: -15.0000638961792
    7. 'oy' → logprob: -15.0000638961792
    8. 'y' → logprob: -17.000064849853516
    9. '   ' → logprob: -17.125064849853516
    10. 't' → logprob: -17.250064849853516

Token 415: '[:' (ID: 7808)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026794830337166786
    2. 'return' → logprob: -3.651794910430908
    3. '<|end|>' → logprob: -8.40179443359375
    4. ' return' → logprob: -9.02679443359375
    5. '
' → logprob: -9.77679443359375
    6. '	return' → logprob: -10.65179443359375
    7. '    
' → logprob: -10.77679443359375
    8. 'continue' → logprob: -11.77679443359375
    9. '[]' → logprob: -12.02679443359375
    10. 'def' → logprob: -12.15179443359375

Token 416: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035696611739695072
    2. 'return' → logprob: -5.753569602966309
    3. '<|end|>' → logprob: -8.253569602966309
    4. ' return' → logprob: -9.878569602966309
    5. '    
' → logprob: -10.628569602966309
    6. '	return' → logprob: -10.753569602966309
    7. '
' → logprob: -11.253569602966309
    8. '       ' → logprob: -12.378569602966309
    9. ':return' → logprob: -12.628569602966309
    10. ')' → logprob: -13.003569602966309

Token 418: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06264342367649078
    2. 'return' (adapté à ' return') → logprob: -3.187643527984619
    3. ' return' → logprob: -4.937643527984619
    4. '<|end|>' → logprob: -5.187643527984619
    5. ':return' → logprob: -6.187643527984619
    6. '	return' → logprob: -6.187643527984619
    7. ')' → logprob: -7.312643527984619
    8. '
' → logprob: -7.437643527984619
    9. '[' → logprob: -8.437643051147461
    10. '    
' → logprob: -8.562643051147461

Token 419: ' (' (ID: 350)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.8204017877578735
    2. ' True' → logprob: -0.9454017877578735
    3. 'True' → logprob: -1.8204017877578735
    4. ' (' → logprob: -5.945401668548584
    5. '(None' → logprob: -5.945401668548584
    6. 'None' → logprob: -6.070401668548584
    7. ' None' → logprob: -6.445401668548584
    8. '(False' → logprob: -9.695402145385742
    9. '(' → logprob: -10.570402145385742
    10. '(T' → logprob: -11.445402145385742

Token 420: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001895935565698892
    2. '(True' → logprob: -9.000189781188965
    3. ' True' → logprob: -9.625189781188965
    4. '   ' → logprob: -15.875189781188965
    5. 'False' → logprob: -18.25018882751465
    6. '(' → logprob: -18.37518882751465
    7. '
' → logprob: -18.50018882751465
    8. 'None' → logprob: -18.62518882751465
    9. 'TRUE' → logprob: -19.75018882751465
    10. '=True' → logprob: -19.87518882751465

Token 421: ',Z' (ID: 132501)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12729395925998688
    2. ',Z' → logprob: -2.1272940635681152
    3. ',None' → logprob: -8.627293586730957
    4. ')' → logprob: -9.877293586730957
    5. ' ,' → logprob: -10.127293586730957
    6. ',[' → logprob: -10.127293586730957
    7. ',)' → logprob: -10.377293586730957
    8. 'Z' → logprob: -12.002293586730957
    9. ',
' → logprob: -12.502293586730957
    10. 'True' → logprob: -13.002293586730957

Token 422: ',L' (ID: 68006)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2530967593193054
    2. ',L' → logprob: -1.5030968189239502
    3. ')' → logprob: -6.878096580505371
    4. ',Z' → logprob: -9.753096580505371
    5. ',R' → logprob: -10.753096580505371
    6. ' ,' → logprob: -11.003096580505371
    7. ',P' → logprob: -11.628096580505371
    8. ',)' → logprob: -12.128096580505371
    9. ',List' → logprob: -12.503096580505371
    10. ',N' → logprob: -12.628096580505371

Token 423: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006882481975480914
    2. ',' → logprob: -7.500688076019287
    3. ',)' → logprob: -9.000688552856445
    4. ' )' → logprob: -12.250688552856445
    5. ')
' → logprob: -13.250688552856445
    6. ',Z' → logprob: -13.750688552856445
    7. ')return' → logprob: -14.375688552856445
    8. '   ' → logprob: -14.375688552856445
    9. ',None' → logprob: -14.375688552856445
    10. 'def' → logprob: -14.500688552856445

Token 424: '0' (ID: 15)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.007243591360747814
    2. 'None' → logprob: -5.132243633270264
    3. '-' → logprob: -7.507243633270264
    4. '[])' → logprob: -8.257243156433105
    5. ' P' → logprob: -9.132243156433105
    6. '[]' → logprob: -9.257243156433105
    7. ')' → logprob: -9.382243156433105
    8. '0' → logprob: -10.132243156433105
    9. 'True' → logprob: -10.257243156433105
    10. 'False' → logprob: -10.382243156433105

Token 425: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6895233531831764e-05
    2. ')
' → logprob: -11.12502670288086
    3. ' )' → logprob: -12.00002670288086
    4. ',' → logprob: -13.00002670288086
    5. '<|end|>' → logprob: -13.62502670288086
    6. ',)' → logprob: -14.37502670288086
    7. ']' → logprob: -15.25002670288086
    8. '`)' → logprob: -15.62502670288086
    9. ')return' → logprob: -15.75002670288086
    10. '   ' → logprob: -15.87502670288086

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029748454689979553
    2. 'None' → logprob: -6.627974987030029
    3. '-' → logprob: -7.127974987030029
    4. 'VAL' → logprob: -7.877974987030029
    5. ' ' → logprob: -8.002974510192871
    6. 'val' → logprob: -10.377974510192871
    7. '1' → logprob: -11.502974510192871
    8. '   ' → logprob: -11.627974510192871
    9. ' None' → logprob: -11.815474510192871
    10. 'Val' → logprob: -11.940474510192871

Token 427: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.710618905955926e-05
    2. ')
' → logprob: -9.250097274780273
    3. ' )' → logprob: -14.625097274780273
    4. ')

' → logprob: -16.125097274780273
    5. '<|end|>' → logprob: -16.250097274780273
    6. '   ' → logprob: -16.375097274780273
    7. ')return' → logprob: -17.000097274780273
    8. ')`' → logprob: -17.500097274780273
    9. '),' → logprob: -17.625097274780273
    10. ')#' → logprob: -17.750097274780273

Token 428: 'res' (ID: 430)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0900496244430542
    2. 'result' → logprob: -3.7150497436523438
    3. 'res' → logprob: -3.8400497436523438
    4. 'valid' → logprob: -4.090049743652344
    5. 'for' → logprob: -4.965049743652344
    6. ')' → logprob: -5.715049743652344
    7. '#' → logprob: -6.965049743652344
    8. 'R' → logprob: -7.090049743652344
    9. '_' → logprob: -7.090049743652344
    10. 'r' → logprob: -7.090049743652344

Token 429: ',f' (ID: 38733)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.6171298623085022
    2. ' =' → logprob: -1.1171298027038574
    3. 'ults' → logprob: -2.7421298027038574
    4. '=' → logprob: -3.3671298027038574
    5. 'u' → logprob: -3.6171298027038574
    6. '_' → logprob: -5.992129802703857
    7. ',' → logprob: -6.492129802703857
    8. 'ul' → logprob: -6.867129802703857
    9. 'ULT' → logprob: -7.242129802703857
    10. 'ultat' → logprob: -7.367129802703857

Token 430: 'vals' (ID: 44567)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.4297796487808228
    2. 'inal' → logprob: -2.054779529571533
    3. 'ix' → logprob: -2.179779529571533
    4. 'or' → logprob: -2.804779529571533
    5. 'IRST' → logprob: -3.054779529571533
    6. 'unc' → logprob: -3.179779529571533
    7. 'irst' → logprob: -3.429779529571533
    8. 'lag' → logprob: -3.429779529571533
    9. 'Z' → logprob: -3.679779529571533
    10. 'inish' → logprob: -3.929779529571533

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42679324746131897
    2. ',res' → logprob: -1.4267932176589966
    3. '=' → logprob: -2.551793336868286
    4. ',f' → logprob: -4.676793098449707
    5. ',Z' → logprob: -4.676793098449707
    6. ' =' → logprob: -5.426793098449707
    7. ',e' → logprob: -5.551793098449707
    8. ',val' → logprob: -7.426793098449707
    9. '=res' → logprob: -7.926793098449707
    10. ',v' → logprob: -8.551793098449707

Token 432: 'deep' (ID: 71028)
  Prédit: 'levels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'levels' → logprob: -0.05853598937392235
    2. 'level' → logprob: -4.558536052703857
    3. 'lvl' → logprob: -4.683536052703857
    4. 'fl' → logprob: -4.808536052703857
    5. 'l' → logprob: -4.933536052703857
    6. 'f' → logprob: -5.058536052703857
    7. 'lev' → logprob: -5.308536052703857
    8. 'lv' → logprob: -5.933536052703857
    9. 'depth' → logprob: -6.808536052703857
    10. 'length' → logprob: -7.058536052703857

Token 433: ',' (ID: 11)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5666331648826599
    2. ',' → logprob: -1.3166332244873047
    3. 'ness' → logprob: -2.6916332244873047
    4. 'th' → logprob: -3.3166332244873047
    5. ',L' → logprob: -3.4416332244873047
    6. 't' → logprob: -4.566633224487305
    7. '_,' → logprob: -5.441633224487305
    8. '=' → logprob: -5.941633224487305
    9. 's' → logprob: -6.066633224487305
    10. 'h' → logprob: -6.316633224487305

Token 434: 'rt' (ID: 6197)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -1.4384934902191162
    2. 'start' → logprob: -1.8134934902191162
    3. 'loop' → logprob: -2.063493490219116
    4. 'root' → logprob: -2.313493490219116
    5. 'par' → logprob: -3.063493490219116
    6. 'last' → logprob: -3.063493490219116
    7. 'p' → logprob: -3.563493490219116
    8. 'parent' → logprob: -3.688493490219116
    9. 'pivot' → logprob: -3.938493490219116
    10. 'found' → logprob: -4.188493728637695

Token 435: ',' (ID: 11)
  Prédit: 'oot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oot' → logprob: -0.1500968486070633
    2. ',' → logprob: -2.025096893310547
    3. ',_' → logprob: -5.775096893310547
    4. '=' → logprob: -5.900096893310547
    5. ',o' → logprob: -7.275096893310547
    6. 'o' → logprob: -8.400096893310547
    7. '=root' → logprob: -8.650096893310547
    8. 'ot' → logprob: -8.900096893310547
    9. ' =' → logprob: -8.900096893310547
    10. 'OOT' → logprob: -9.775096893310547

Token 436: 'first' (ID: 7743)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.8140825033187866
    2. 'val' → logprob: -2.314082622528076
    3. 'half' → logprob: -2.314082622528076
    4. 'mid' → logprob: -2.814082622528076
    5. 'hf' → logprob: -3.314082622528076
    6. 'ans' → logprob: -3.939082622528076
    7. 'res' → logprob: -3.939082622528076
    8. 'f' → logprob: -4.439082622528076
    9. 'new' → logprob: -4.564082622528076
    10. 'hal' → logprob: -4.689082622528076

Token 437: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008889674209058285
    2. ' =' → logprob: -4.758889675140381
    3. '_val' → logprob: -9.133889198303223
    4. '=_' → logprob: -9.383889198303223
    5. '_=' → logprob: -9.883889198303223
    6. '_' → logprob: -11.758889198303223
    7. 'val' → logprob: -11.758889198303223
    8. ')=' → logprob: -12.383889198303223
    9. '_value' → logprob: -12.633889198303223
    10. ')' → logprob: -13.758889198303223

Token 438: ' DF' (ID: 67634)
  Prédit: 'DF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DF' → logprob: -0.0004317420825827867
    2. ' DF' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.000432014465332
    4. 'df' → logprob: -15.125432014465332
    5. 'False' → logprob: -15.625432014465332
    6. 'True' → logprob: -16.500431060791016
    7. 'DFS' → logprob: -16.625431060791016
    8. ' ' → logprob: -16.750431060791016
    9. '(' → logprob: -17.500431060791016
    10. '  ' → logprob: -17.625431060791016

Token 439: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.512236498361744e-07
    2. 's' → logprob: -14.500000953674316
    3. '_' → logprob: -18.125
    4. '(_' → logprob: -18.375
    5. 'root' → logprob: -18.75
    6. ' _' → logprob: -19.375
    7. ')' → logprob: -19.625
    8. '[root' → logprob: -19.625
    9. '_root' → logprob: -19.75
    10. 'S' → logprob: -19.875

Token 440: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004373867064714432
    2. '_s' → logprob: -5.629374027252197
    3. '(ROOT' → logprob: -7.879374027252197
    4. 's' → logprob: -8.629373550415039
    5. '(N' → logprob: -9.129373550415039
    6. '0' → logprob: -10.129373550415039
    7. ' ' → logprob: -11.129373550415039
    8. '(s' → logprob: -11.504373550415039
    9. '1' → logprob: -11.629373550415039
    10. '(R' → logprob: -12.004373550415039

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9054008084349334e-05
    2. ' ' → logprob: -11.000039100646973
    3. '0' → logprob: -11.125039100646973
    4. '   ' → logprob: -12.000039100646973
    5. '    ' → logprob: -15.625039100646973
    6. '
' → logprob: -15.750039100646973
    7. '(' → logprob: -15.750039100646973
    8. '       ' → logprob: -16.062538146972656
    9. 'root' → logprob: -16.062538146972656
    10. '  ' → logprob: -16.125038146972656

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1160349458805285e-05
    2. ' ,' → logprob: -11.625011444091797
    3. '1' → logprob: -13.750011444091797
    4. ',
' → logprob: -14.250011444091797
    5. '```' → logprob: -15.625011444091797
    6. ')' → logprob: -16.375011444091797
    7. ',

' → logprob: -17.125011444091797
    8. '0' → logprob: -17.625011444091797
    9. '，' → logprob: -18.000011444091797
    10. ',)' → logprob: -18.000011444091797

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. '1' → logprob: -8.875261306762695
    3. ' ' → logprob: -9.500261306762695
    4. '100' → logprob: -11.625261306762695
    5. '2' → logprob: -11.750261306762695
    6. '10' → logprob: -12.125261306762695
    7. '-' → logprob: -12.375261306762695
    8. '000' → logprob: -12.500261306762695
    9. '   ' → logprob: -12.875261306762695
    10. '(' → logprob: -13.937761306762695

Token 444: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.500006675720215
    4. '))' → logprob: -16.87500762939453
    5. '),' → logprob: -17.37500762939453
    6. ')`' → logprob: -17.50000762939453
    7. ')}' → logprob: -17.62500762939453
    8. ')#' → logprob: -17.62500762939453
    9. ')

' → logprob: -17.75000762939453
    10. ')return' → logprob: -18.12500762939453

Token 445: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08675256371498108
    2. 'for' → logprob: -2.5867526531219482
    3. 'i' → logprob: -6.211752414703369
    4. 'print' → logprob: -6.586752414703369
    5. 'res' → logprob: -7.086752414703369
    6. 'while' → logprob: -7.461752414703369
    7. '#' → logprob: -7.586752414703369
    8. 'found' → logprob: -8.211752891540527
    9. 'stack' → logprob: -8.336752891540527
    10. 'f' → logprob: -8.461752891540527

Token 446: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6253472566604614
    2. ' res' → logprob: -0.8753472566604614
    3. 'res' → logprob: -3.625347137451172
    4. 'not' → logprob: -3.875347137451172
    5. ' __' → logprob: -8.625347137451172
    6. ' ' → logprob: -8.750347137451172
    7. ' ' → logprob: -9.125347137451172
    8. '__' → logprob: -9.125347137451172
    9. ' len' → logprob: -9.875347137451172
    10. ' f' → logprob: -10.250347137451172

Token 447: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.47410091757774353
    2. 'res' → logprob: -0.9741009473800659
    3. '(res' → logprob: -10.849101066589355
    4. ' ' → logprob: -13.224101066589355
    5. ' ' → logprob: -13.349101066589355
    6. '	res' → logprob: -15.224101066589355
    7. 'ress' → logprob: -15.474101066589355
    8. '   ' → logprob: -15.724101066589355
    9. '  ' → logprob: -16.47410011291504
    10. 'r' → logprob: -16.97410011291504

Token 448: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25194287300109863
    2. ':
' → logprob: -1.5019428730010986
    3. '   ' → logprob: -12.25194263458252
    4. ':

' → logprob: -13.12694263458252
    5. ':return' → logprob: -13.37694263458252
    6. ',' → logprob: -14.12694263458252
    7. ':
' → logprob: -14.25194263458252
    8. '):
' → logprob: -14.25194263458252
    9. ' :
' → logprob: -14.37694263458252
    10. ' :' → logprob: -14.50194263458252

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34694504737854004
    2. 'print' → logprob: -2.47194504737854
    3. ' for' → logprob: -3.09694504737854
    4. 'Z' → logprob: -3.09694504737854
    5. 'for' → logprob: -3.34694504737854
    6. ' print' → logprob: -3.97194504737854
    7. 'fix' → logprob: -4.096944808959961
    8. ' Z' → logprob: -5.096944808959961
    9. '
' → logprob: -5.471944808959961
    10. ' fix' → logprob: -6.096944808959961

Token 450: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8765439391136169
    2. 'print' → logprob: -1.6265439987182617
    3. 'Z' → logprob: -2.1265439987182617
    4. 'fix' → logprob: -2.2515439987182617
    5. 'f' → logprob: -3.0015439987182617
    6. 'first' → logprob: -4.126543998718262
    7. 'W' → logprob: -4.126543998718262
    8. 'res' → logprob: -4.501543998718262
    9. 'UV' → logprob: -4.501543998718262
    10. 'network' → logprob: -5.251543998718262

Token 451: '2' (ID: 17)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3406568765640259
    2. 'print' → logprob: -2.4656567573547363
    3. 'int' → logprob: -3.0906567573547363
    4. 'eturn' → logprob: -3.2156567573547363
    5. 'e' → logprob: -3.3406567573547363
    6. 't' → logprob: -3.4656567573547363
    7. '```' → logprob: -4.090656757354736
    8. 'ef' → logprob: -4.465656757354736
    9. 'esize' → logprob: -5.715656757354736
    10. 'ange' → logprob: -5.715656757354736

Token 452: ',f' (ID: 38733)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.48830080032348633
    2. 'es' → logprob: -1.3633008003234863
    3. ' =' → logprob: -2.8633008003234863
    4. '=' → logprob: -3.7383008003234863
    5. 'e' → logprob: -4.238300800323486
    6. 'et' → logprob: -4.238300800323486
    7. 'int' → logprob: -5.488300800323486
    8. ',' → logprob: -5.613300800323486
    9. 'ef' → logprob: -5.613300800323486
    10. 'esize' → logprob: -6.363300800323486

Token 453: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.05594278872013092
    2. 'irst' → logprob: -2.9309427738189697
    3. 'ix' → logprob: -7.555943012237549
    4. 'val' → logprob: -9.05594253540039
    5. 'irts' → logprob: -9.55594253540039
    6. 'ivs' → logprob: -9.93094253540039
    7. 'alse' → logprob: -10.05594253540039
    8. 'als' → logprob: -10.30594253540039
    9. 'v' → logprob: -10.55594253540039
    10. '=' → logprob: -10.55594253540039

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008342815563082695
    2. ',r' → logprob: -5.508342742919922
    3. 'irst' → logprob: -5.883342742919922
    4. '=' → logprob: -7.883342742919922
    5. 'rst' → logprob: -8.758342742919922
    6. 'rt' → logprob: -8.758342742919922
    7. ' =' → logprob: -8.883342742919922
    8. '[' → logprob: -9.258342742919922
    9. 'first' → logprob: -9.758342742919922
    10. ',f' → logprob: -9.883342742919922

Token 455: 'deep' (ID: 71028)
  Prédit: 'deep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deep' → logprob: -0.6896002888679504
    2. 'rt' → logprob: -0.8146002888679504
    3. 'df' → logprob: -3.6896002292633057
    4. '_,' → logprob: -4.939600467681885
    5. 'False' → logprob: -5.314600467681885
    6. 'DF' → logprob: -5.564600467681885
    7. 'res' → logprob: -5.814600467681885
    8. 'first' → logprob: -5.939600467681885
    9. 'Z' → logprob: -6.564600467681885
    10. 'dfs' → logprob: -6.564600467681885

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.29340603761375e-05
    2. '[' → logprob: -10.500092506408691
    3. ',r' → logprob: -10.875092506408691
    4. '_,' → logprob: -11.250092506408691
    5. '=' → logprob: -11.750092506408691
    6. ',_' → logprob: -12.500092506408691
    7. ',res' → logprob: -12.625092506408691
    8. ' ,' → logprob: -12.875092506408691
    9. ',re' → logprob: -13.000092506408691
    10. ' =' → logprob: -13.125092506408691

Token 457: 'rt' (ID: 6197)
  Prédit: 'rt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.021733587607741356
    2. 'first' → logprob: -4.02173376083374
    3. '0' → logprob: -5.64673376083374
    4. ' rt' → logprob: -10.896733283996582
    5. '
' → logprob: -12.271733283996582
    6. 'root' → logprob: -12.646733283996582
    7. '1' → logprob: -12.646733283996582
    8. ' first' → logprob: -12.896733283996582
    9. '_rt' → logprob: -13.396733283996582
    10. 'rst' → logprob: -13.521733283996582

Token 458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20673643052577972
    2. '=' → logprob: -1.831736445426941
    3. ',_' → logprob: -3.8317363262176514
    4. ' =' → logprob: -5.7067365646362305
    5. 'first' → logprob: -7.9567365646362305
    6. ',f' → logprob: -8.20673656463623
    7. ',r' → logprob: -8.70673656463623
    8. '[first' → logprob: -8.95673656463623
    9. '_' → logprob: -9.45673656463623
    10. '   ' → logprob: -9.70673656463623

Token 459: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.006497228052467108
    2. '_' → logprob: -5.756497383117676
    3. 'fix' → logprob: -6.381497383117676
    4. '_=' → logprob: -7.631497383117676
    5. 'rt' → logprob: -7.881497383117676
    6. '0' → logprob: -8.631497383117676
    7. 'second' → logprob: -9.131497383117676
    8. 'f' → logprob: -9.506497383117676
    9. 'res' → logprob: -9.881497383117676
    10. 'last' → logprob: -10.256497383117676

Token 460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0306150671094656
    2. ' =' → logprob: -3.5306150913238525
    3. '[' → logprob: -8.030614852905273
    4. '   ' → logprob: -8.905614852905273
    5. '=res' → logprob: -8.905614852905273
    6. '=_' → logprob: -9.905614852905273
    7. '=f' → logprob: -10.030614852905273
    8. ')' → logprob: -10.905614852905273
    9. '=
' → logprob: -10.905614852905273
    10. '=r' → logprob: -11.405614852905273

Token 461: ' DF' (ID: 67634)
  Prédit: 'DF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DF' → logprob: -0.0005790081340819597
    2. ' DF' → logprob: -7.500578880310059
    3. '   ' → logprob: -11.250578880310059
    4. ' ' → logprob: -12.625578880310059
    5. '  ' → logprob: -12.625578880310059
    6. 'DFS' → logprob: -12.875578880310059
    7. 'df' → logprob: -13.500578880310059
    8. '    ' → logprob: -14.250578880310059
    9. '     ' → logprob: -14.750578880310059
    10. '      ' → logprob: -15.500578880310059

Token 462: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -5.796184723294573e-06
    2. 's' → logprob: -12.125005722045898
    3. '_' → logprob: -16.7500057220459
    4. '_r' → logprob: -17.2500057220459
    5. '_S' → logprob: -17.2500057220459
    6. 'S' → logprob: -17.3750057220459
    7. '_f' → logprob: -17.6250057220459
    8. '_t' → logprob: -18.3750057220459
    9. '(' → logprob: -18.5000057220459
    10. '   ' → logprob: -18.6250057220459

Token 463: '(rt' (ID: 138907)
  Prédit: '(rt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rt' → logprob: -0.008675788529217243
    2. '(' → logprob: -4.758675575256348
    3. '1' → logprob: -10.508675575256348
    4. 'rt' → logprob: -10.758675575256348
    5. '(r' → logprob: -12.508675575256348
    6. '0' → logprob: -13.008675575256348
    7. '(int' → logprob: -13.133675575256348
    8. '(first' → logprob: -14.133675575256348
    9. '(
' → logprob: -14.133675575256348
    10. '(root' → logprob: -14.258675575256348

Token 464: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005138330743648112
    2. ',-' → logprob: -7.625514030456543
    3. ',int' → logprob: -11.875514030456543
    4. ',f' → logprob: -12.125514030456543
    5. ',(' → logprob: -12.250514030456543
    6. ' ,' → logprob: -12.375514030456543
    7. ',last' → logprob: -13.625514030456543
    8. ',r' → logprob: -14.125514030456543
    9. ',+' → logprob: -14.500514030456543
    10. ',
' → logprob: -14.750514030456543

Token 465: 'first' (ID: 7743)
  Prédit: 'first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.02227712608873844
    2. '0' → logprob: -3.8972771167755127
    3. '-first' → logprob: -7.022277355194092
    4. '-' → logprob: -7.647277355194092
    5. '1' → logprob: -9.022276878356934
    6. ' first' → logprob: -9.522276878356934
    7. '-f' → logprob: -9.772276878356934
    8. '(first' → logprob: -10.397276878356934
    9. 'f' → logprob: -11.022276878356934
    10. '2' → logprob: -11.272276878356934

Token 466: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016057714819908142
    2. ')
' → logprob: -4.14105749130249
    3. '   ' → logprob: -11.891057968139648
    4. ' )' → logprob: -11.891057968139648
    5. ',' → logprob: -13.641057968139648
    6. '+' → logprob: -14.016057968139648
    7. ')

' → logprob: -14.016057968139648
    8. '[' → logprob: -14.141057968139648
    9. '))' → logprob: -14.141057968139648
    10. ')
' → logprob: -14.141057968139648

Token 467: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1962793618440628
    2. 'if' → logprob: -2.071279287338257
    3. 'for' → logprob: -3.946279287338257
    4. 'print' → logprob: -4.571279525756836
    5. 'elif' → logprob: -4.821279525756836
    6. 'res' → logprob: -5.321279525756836
    7. '#' → logprob: -6.196279525756836
    8. 'ans' → logprob: -6.571279525756836
    9. 'while' → logprob: -7.071279525756836
    10. 'x' → logprob: -7.696279525756836

Token 468: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.020033622160553932
    2. 'print' → logprob: -4.770033836364746
    3. 'res' → logprob: -5.520033836364746
    4. 'for' → logprob: -5.895033836364746
    5. '   ' → logprob: -6.395033836364746
    6. 'else' → logprob: -6.895033836364746
    7. 'r' → logprob: -8.145033836364746
    8. 'f' → logprob: -8.145033836364746
    9. 'assert' → logprob: -8.270033836364746
    10. '#' → logprob: -8.770033836364746

Token 469: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.638889729976654
    2. 'not' → logprob: -0.763889729976654
    3. 'r' → logprob: -5.513889789581299
    4. ' r' → logprob: -6.763889789581299
    5. 'f' → logprob: -7.763889789581299
    6. '(not' → logprob: -8.51388931274414
    7. ' f' → logprob: -9.01388931274414
    8. '   ' → logprob: -9.13888931274414
    9. ' res' → logprob: -9.88888931274414
    10. 'res' → logprob: -10.13888931274414

Token 470: ' r' (ID: 428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0152864456176758
    2. ' res' → logprob: -1.0152864456176758
    3. 'r' → logprob: -1.5152864456176758
    4. ' r' → logprob: -2.890286445617676
    5. ' not' → logprob: -10.390286445617676
    6. ' ' → logprob: -10.890286445617676
    7. '   ' → logprob: -11.140286445617676
    8. '(res' → logprob: -11.265286445617676
    9. 'not' → logprob: -11.765286445617676
    10. ' ' → logprob: -12.640286445617676

Token 471: '2' (ID: 17)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.01027031522244215
    2. '2' → logprob: -5.135270118713379
    3. ':' → logprob: -6.510270118713379
    4. 'es' → logprob: -6.885270118713379
    5. 'res' → logprob: -7.010270118713379
    6. 'not' → logprob: -7.635270118713379
    7. '   ' → logprob: -8.760270118713379
    8. 'o' → logprob: -9.635270118713379
    9. 'r' → logprob: -10.010270118713379
    10. ':
' → logprob: -10.260270118713379

Token 472: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.283563494682312
    2. ':' → logprob: -1.408563494682312
    3. '   ' → logprob: -6.408563613891602
    4. '       ' → logprob: -7.658563613891602
    5. '==' → logprob: -8.533563613891602
    6. '=' → logprob: -10.408563613891602
    7. ' or' → logprob: -11.158563613891602
    8. '):
' → logprob: -11.908563613891602
    9. ' ==' → logprob: -11.908563613891602
    10. ' :
' → logprob: -12.033563613891602

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06109671667218208
    2. ':' → logprob: -2.936096668243408
    3. ':
' → logprob: -5.561096668243408
    4. '   ' → logprob: -6.311096668243408
    5. 'print' → logprob: -9.311097145080566
    6. ',' → logprob: -9.811097145080566
    7. '[' → logprob: -10.061097145080566
    8. '                       ' → logprob: -10.311097145080566
    9. '):' → logprob: -10.436097145080566
    10. ' print' → logprob: -10.436097145080566

Token 474: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005236041033640504
    2. '       ' → logprob: -7.625523567199707
    3. '   ' → logprob: -11.250523567199707
    4. ' print' → logprob: -11.375523567199707
    5. '           ' → logprob: -12.250523567199707
    6. '```' → logprob: -12.500523567199707
    7. '``' → logprob: -14.000523567199707
    8. '
' → logprob: -14.250523567199707
    9. 'exit' → logprob: -14.750523567199707
    10. 'r' → logprob: -15.375523567199707

Token 475: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026304252445697784
    2. '0' → logprob: -3.651304244995117
    3. '(
' → logprob: -13.276304244995117
    4. '(-' → logprob: -14.526304244995117
    5. ' (' → logprob: -14.776304244995117
    6. '
' → logprob: -15.026304244995117
    7. '```' → logprob: -15.151304244995117
    8. ' ' → logprob: -15.276304244995117
    9. '('' → logprob: -15.901304244995117
    10. '("' → logprob: -16.151304244995117

Token 476: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.750004768371582
    3. '(' → logprob: -14.250004768371582
    4. '"' → logprob: -14.875004768371582
    5. '   ' → logprob: -15.250004768371582
    6. ')' → logprob: -15.500004768371582
    7. '```' → logprob: -15.875004768371582
    8. '
' → logprob: -16.3750057220459
    9. '00' → logprob: -16.5000057220459
    10. '1' → logprob: -16.5000057220459

Token 477: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14727410674095154
    2. ')
' → logprob: -2.2722740173339844
    3. '       ' → logprob: -3.3972740173339844
    4. '<|end|>' → logprob: -8.272274017333984
    5. ')return' → logprob: -9.147274017333984
    6. '   ' → logprob: -11.647274017333984
    7. '
' → logprob: -11.772274017333984
    8. ')
' → logprob: -12.522274017333984
    9. '<|end|>' → logprob: -13.272274017333984
    10. '()' → logprob: -13.272274017333984

Token 478: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05465679243206978
    2. '   ' → logprob: -3.054656744003296
    3. 'else' → logprob: -5.929656982421875
    4. '```' → logprob: -6.554656982421875
    5. '<|end|>' → logprob: -7.054656982421875
    6. 'exit' → logprob: -7.929656982421875
    7. '
' → logprob: -8.679656982421875
    8. '#' → logprob: -9.054656982421875
    9. ')' → logprob: -9.179656982421875
    10. 'import' → logprob: -9.429656982421875

Token 479: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5798908472061157
    2. '   ' → logprob: -0.9548908472061157
    3. '       ' → logprob: -2.954890727996826
    4. ' else' → logprob: -6.704890727996826
    5. '
' → logprob: -7.454890727996826
    6. 'exit' → logprob: -8.079891204833984
    7. 'elif' → logprob: -8.079891204833984
    8. '<|end|>' → logprob: -8.079891204833984
    9. '```' → logprob: -10.329891204833984
    10. '#' → logprob: -10.454891204833984

Token 480: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6371585130691528
    2. ':' → logprob: -1.3871585130691528
    3. '       ' → logprob: -1.5121585130691528
    4. '   ' → logprob: -8.012158393859863
    5. ':

' → logprob: -8.137158393859863
    6. ',' → logprob: -9.512158393859863
    7. 'print' → logprob: -10.262158393859863
    8. '):
' → logprob: -10.262158393859863
    9. ' :
' → logprob: -10.387158393859863
    10. '        
' → logprob: -10.637158393859863

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004507850389927626
    2. '   ' → logprob: -5.504508018493652
    3. 'for' → logprob: -8.629508018493652
    4. ' for' → logprob: -9.254508018493652
    5. 'print' → logprob: -9.254508018493652
    6. '```' → logprob: -11.254508018493652
    7. '#' → logprob: -11.754508018493652
    8. ' print' → logprob: -11.754508018493652
    9. '           ' → logprob: -11.879508018493652
    10. ' pass' → logprob: -12.254508018493652

Token 482: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2374732345342636
    2. 'pass' → logprob: -2.612473249435425
    3. 'for' → logprob: -3.237473249435425
    4. 'first' → logprob: -3.487473249435425
    5. 'f' → logprob: -3.987473249435425
    6. 'Z' → logprob: -4.737473011016846
    7. 'exit' → logprob: -4.737473011016846
    8. 'res' → logprob: -4.862473011016846
    9. '   ' → logprob: -5.237473011016846
    10. '       ' → logprob: -5.362473011016846

Token 483: ' min' (ID: 1349)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.564598023891449
    2. ' first' → logprob: -2.1895980834960938
    3. 'deep' → logprob: -2.1895980834960938
    4. 'f' → logprob: -2.8145980834960938
    5. 'all' → logprob: -3.6895980834960938
    6. 'len' → logprob: -4.314598083496094
    7. 'res' → logprob: -4.564598083496094
    8. ' res' → logprob: -4.689598083496094
    9. ' f' → logprob: -4.689598083496094
    10. 'abs' → logprob: -4.939598083496094

Token 484: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0010568645084276795
    2. '(first' → logprob: -7.501056671142578
    3. '(res' → logprob: -8.751056671142578
    4. '(' → logprob: -8.751056671142578
    5. 'f' → logprob: -9.751056671142578
    6. '(r' → logprob: -10.626056671142578
    7. '(
' → logprob: -10.626056671142578
    8. '(min' → logprob: -11.501056671142578
    9. 'first' → logprob: -11.876056671142578
    10. '((' → logprob: -12.001056671142578

Token 485: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0005476722144521773
    2. 'val' → logprob: -7.875547885894775
    3. 'v' → logprob: -9.500547409057617
    4. '(vals' → logprob: -9.500547409057617
    5. ')' → logprob: -12.500547409057617
    6. 'f' → logprob: -12.750547409057617
    7. '_vals' → logprob: -12.750547409057617
    8. 'Vals' → logprob: -13.375547409057617
    9. ' vals' → logprob: -13.625547409057617
    10. '(' → logprob: -13.750547409057617

Token 486: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08438258618116379
    2. ')>' → logprob: -2.7093825340270996
    3. ')==' → logprob: -4.8343825340271
    4. ')<' → logprob: -5.4593825340271
    5. ')>=' → logprob: -7.2093825340271
    6. ')+' → logprob: -7.5843825340271
    7. ')<=' → logprob: -8.084383010864258
    8. ')!=' → logprob: -8.084383010864258
    9. '())' → logprob: -9.834383010864258
    10. '):
' → logprob: -10.084383010864258

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004026276059448719
    2. 'rt' → logprob: -5.754026412963867
    3. '])' → logprob: -7.504026412963867
    4. ':' → logprob: -9.379026412963867
    5. '(rt' → logprob: -9.879026412963867
    6. ')' → logprob: -10.379026412963867
    7. ']' → logprob: -10.379026412963867
    8. '[' → logprob: -10.754026412963867
    9. '(' → logprob: -11.004026412963867
    10. ' ' → logprob: -11.504026412963867

Token 488: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024840110912919044
    2. '[' → logprob: -4.399839878082275
    3. '])' → logprob: -4.524839878082275
    4. ':)' → logprob: -7.149839878082275
    5. ')' → logprob: -8.024840354919434
    6. ':]' → logprob: -8.899840354919434
    7. '::' → logprob: -10.024840354919434
    8. '>)' → logprob: -11.399840354919434
    9. ':])
' → logprob: -11.399840354919434
    10. '):' → logprob: -11.524840354919434

Token 489: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2637476623058319
    2. '])' → logprob: -1.5137476921081543
    3. ')<' → logprob: -5.513747692108154
    4. ')>' → logprob: -5.763747692108154
    5. '())' → logprob: -6.638747692108154
    6. ')+' → logprob: -6.763747692108154
    7. ')==' → logprob: -7.013747692108154
    8. ')<=' → logprob: -8.513747215270996
    9. ')>=' → logprob: -8.513747215270996
    10. ')!=' → logprob: -9.013747215270996

Token 490: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1976841539144516
    2. '>=' → logprob: -2.9476840496063232
    3. '==' → logprob: -3.1976840496063232
    4. '<=' → logprob: -3.4476840496063232
    5. ' <' → logprob: -3.5726840496063232
    6. '>' → logprob: -4.197684288024902
    7. ' ==' → logprob: -5.322684288024902
    8. ' >=' → logprob: -6.197684288024902
    9. ' <=' → logprob: -6.197684288024902
    10. ' >' → logprob: -7.447684288024902

Token 491: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004923873930238187
    2. ' ' → logprob: -8.000492095947266
    3. '1' → logprob: -9.500492095947266
    4. '-' → logprob: -9.875492095947266
    5. 'first' → logprob: -11.125492095947266
    6. '-(' → logprob: -12.625492095947266
    7. ' -' → logprob: -13.125492095947266
    8. ' first' → logprob: -13.312992095947266
    9. '
' → logprob: -13.500492095947266
    10. '   ' → logprob: -13.687992095947266

Token 492: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5182082056999207
    2. ':
' → logprob: -1.2682082653045654
    3. ' or' → logprob: -2.5182082653045654
    4. '       ' → logprob: -3.7682082653045654
    5. '   ' → logprob: -4.518208026885986
    6. ' and' → logprob: -4.893208026885986
    7. ')' → logprob: -8.768208503723145
    8. '):
' → logprob: -9.143208503723145
    9. ' :
' → logprob: -9.268208503723145
    10. '           ' → logprob: -9.393208503723145

Token 493: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008144546300172806
    2. '           ' → logprob: -5.383144378662109
    3. 'print' → logprob: -5.758144378662109
    4. ' print' → logprob: -8.25814437866211
    5. '   ' → logprob: -10.63314437866211
    6. ' for' → logprob: -10.75814437866211
    7. 'for' → logprob: -11.13314437866211
    8. '```' → logprob: -11.25814437866211
    9. '#' → logprob: -11.63314437866211
    10. ',' → logprob: -12.63314437866211

Token 494: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10891611129045486
    2. '       ' → logprob: -3.1089160442352295
    3. '           ' → logprob: -3.1089160442352295
    4. 'first' → logprob: -5.358916282653809
    5. '   ' → logprob: -5.483916282653809
    6. ' print' → logprob: -5.733916282653809
    7. 'for' → logprob: -7.108916282653809
    8. 'f' → logprob: -7.608916282653809
    9. ' first' → logprob: -8.608916282653809
    10. '               ' → logprob: -9.108916282653809

Token 495: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6388480067253113
    2. '(' → logprob: -0.7638480067253113
    3. '(-' → logprob: -5.763847827911377
    4. '-' → logprob: -6.638847827911377
    5. '(first' → logprob: -7.513847827911377
    6. 'first' → logprob: -8.513848304748535
    7. '(min' → logprob: -8.763848304748535
    8. ' ' → logprob: -8.763848304748535
    9. '(f' → logprob: -9.388848304748535
    10. '(max' → logprob: -9.513848304748535

Token 496: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009333750349469483
    2. '-' → logprob: -7.8759331703186035
    3. '1' → logprob: -8.250933647155762
    4. 'first' → logprob: -9.250933647155762
    5. ' ' → logprob: -9.625933647155762
    6. 'min' → logprob: -10.125933647155762
    7. 'max' → logprob: -11.563433647155762
    8. '2' → logprob: -11.938433647155762
    9. 'print' → logprob: -12.125933647155762
    10. '"' → logprob: -12.125933647155762

Token 497: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16558876633644104
    2. ')' → logprob: -2.915588855743408
    3. '   ' → logprob: -3.040588855743408
    4. '           ' → logprob: -3.165588855743408
    5. ')
' → logprob: -4.915588855743408
    6. 'else' → logprob: -7.540588855743408
    7. '
' → logprob: -8.29058837890625
    8. '               ' → logprob: -8.91558837890625
    9. ' else' → logprob: -9.91558837890625
    10. ')return' → logprob: -10.29058837890625

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006726144813001156
    2. 'else' → logprob: -5.131726264953613
    3. '   ' → logprob: -7.381726264953613
    4. '           ' → logprob: -9.006726264953613
    5. 'elif' → logprob: -10.381726264953613
    6. 'import' → logprob: -11.256726264953613
    7. '#!/' → logprob: -13.381726264953613
    8. ' else' → logprob: -13.381726264953613
    9. '#' → logprob: -14.006726264953613
    10. '
' → logprob: -14.131726264953613

Token 499: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021487422287464142
    2. '   ' → logprob: -4.396487236022949
    3. 'else' (adapté à ' else') → logprob: -4.771487236022949
    4. '           ' → logprob: -7.896487236022949
    5. 'import' → logprob: -10.02148723602295
    6. 'elif' → logprob: -10.27148723602295
    7. 'exit' → logprob: -12.27148723602295
    8. 'print' → logprob: -12.89648723602295
    9. 'for' → logprob: -12.89648723602295
    10. ' else' → logprob: -13.14648723602295

Token 500: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46446704864501953
    2. '           ' → logprob: -1.0894670486450195
    3. ':
' → logprob: -3.4644670486450195
    4. ':' → logprob: -5.8394670486450195
    5. 'print' → logprob: -7.3394670486450195
    6. '   ' → logprob: -8.96446704864502
    7. '               ' → logprob: -9.46446704864502
    8. '	       ' → logprob: -11.08946704864502
    9. ' print' → logprob: -11.21446704864502
    10. '):
' → logprob: -11.46446704864502

Token 501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14465054869651794
    2. '       ' → logprob: -2.019650459289551
    3. 'print' → logprob: -6.519650459289551
    4. '   ' → logprob: -7.894650459289551
    5. ' print' → logprob: -10.14465045928955
    6. '               ' → logprob: -10.39465045928955
    7. '#' → logprob: -11.14465045928955
    8. '```' → logprob: -12.01965045928955
    9. '
' → logprob: -12.14465045928955
    10. 'for' → logprob: -12.51965045928955

Token 502: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004275346174836159
    2. 's' → logprob: -6.254275321960449
    3. 'total' → logprob: -7.629275321960449
    4. '           ' → logprob: -8.25427532196045
    5. 'for' → logprob: -8.25427532196045
    6. 'ans' → logprob: -8.50427532196045
    7. 'sum' → logprob: -9.00427532196045
    8. 'S' → logprob: -9.25427532196045
    9. 'answer' → logprob: -9.25427532196045
    10. 'res' → logprob: -9.62927532196045

Token 503: '(' (ID: 7)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.8089994192123413
    2. 'sum' → logprob: -1.8089994192123413
    3. '(min' → logprob: -1.9339994192123413
    4. '(' → logprob: -2.058999538421631
    5. 'min' → logprob: -3.683999538421631
    6. '(f' → logprob: -3.933999538421631
    7. '(max' → logprob: -3.933999538421631
    8. '(first' → logprob: -4.058999538421631
    9. 'first' → logprob: -4.433999538421631
    10. '1' → logprob: -4.683999538421631

Token 504: '1' (ID: 16)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7457517981529236
    2. 'min' → logprob: -1.2457518577575684
    3. '1' → logprob: -2.3707518577575684
    4. 'first' → logprob: -2.8707518577575684
    5. 'pow' → logprob: -3.3707518577575684
    6. 'max' → logprob: -3.8707518577575684
    7. 'f' → logprob: -4.120751857757568
    8. 'M' → logprob: -5.495751857757568
    9. 'res' → logprob: -6.120751857757568
    10. '(sum' → logprob: -6.495751857757568

Token 505: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05310330167412758
    2. ' )' → logprob: -3.05310320854187
    3. '+' → logprob: -6.303103446960449
    4. ',' → logprob: -7.303103446960449
    5. ')
' → logprob: -7.803103446960449
    6. '0' → logprob: -8.42810344696045
    7. ' +' → logprob: -8.55310344696045
    8. '           ' → logprob: -8.67810344696045
    9. '+)' → logprob: -8.67810344696045
    10. '   ' → logprob: -8.92810344696045

Token 506: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4046781361103058
    2. '<|end|>' → logprob: -1.1546781063079834
    3. ' else' → logprob: -4.2796783447265625
    4. 'elif' → logprob: -6.6546783447265625
    5. '```' → logprob: -6.9046783447265625
    6. ')' → logprob: -7.5296783447265625
    7. '...' → logprob: -7.5296783447265625
    8. '<|end|>' → logprob: -9.029678344726562
    9. '#' → logprob: -9.654678344726562
    10. '+' → logprob: -9.904678344726562

Token 507: ' quit' (ID: 27737)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -7.755678961984813e-05
    2. ' else' → logprob: -10.125077247619629
    3. 'elif' → logprob: -10.500077247619629
    4. '   ' → logprob: -12.500077247619629
    5. '<|end|>' → logprob: -12.875077247619629
    6. '
' → logprob: -13.500077247619629
    7. '```' → logprob: -13.625077247619629
    8. '...' → logprob: -15.250077247619629
    9. ')' → logprob: -15.875077247619629
    10. '       ' → logprob: -16.000078201293945

Token 508: '()

' (ID: 5874)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7709922790527344
    2. '#' → logprob: -1.7709922790527344
    3. 'else' → logprob: -2.2709922790527344
    4. 'for' → logprob: -3.1459922790527344
    5. 'ans' → logprob: -3.1459922790527344
    6. 'answer' → logprob: -4.145992279052734
    7. 'count' → logprob: -4.145992279052734
    8. 'res' → logprob: -4.270992279052734
    9. 'cnt' → logprob: -4.895992279052734
    10. '
' → logprob: -5.270992279052734

Token 509: 'll' (ID: 680)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.484221339225769
    2. 'X' → logprob: -2.6092214584350586
    3. 'ans' → logprob: -3.1092214584350586
    4. 'vals' → logprob: -3.1092214584350586
    5. 'x' → logprob: -3.4842214584350586
    6. '#' → logprob: -3.4842214584350586
    7. 'V' → logprob: -3.6092214584350586
    8. 'min' → logprob: -3.7342214584350586
    9. 'dp' → logprob: -3.7342214584350586
    10. 'print' → logprob: -3.7342214584350586

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9905333518981934
    2. '=' → logprob: -1.4905333518981934
    3. 'en' → logprob: -2.8655333518981934
    4. 'ist' → logprob: -2.9905333518981934
    5. 'l' → logprob: -3.1155333518981934
    6. 'for' → logprob: -3.2405333518981934
    7. 'ast' → logprob: -3.4905333518981934
    8. 'min' → logprob: -3.8655333518981934
    9. '=len' → logprob: -3.9905333518981934
    10. 'im' → logprob: -4.240533351898193

Token 511: ' lambda' (ID: 27871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9876109957695007
    2. '[min' → logprob: -1.4876110553741455
    3. 'min' → logprob: -2.1126110553741455
    4. '[]' → logprob: -2.9876110553741455
    5. '0' → logprob: -2.9876110553741455
    6. '[max' → logprob: -3.3626110553741455
    7. '1' → logprob: -4.112610816955566
    8. '[-' → logprob: -4.237610816955566
    9. 'max' → logprob: -4.237610816955566
    10. '[R' → logprob: -4.362610816955566

Token 512: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6707178950309753
    2. 'x' → logprob: -0.7957178950309753
    3. ' s' → logprob: -4.795717716217041
    4. ' a' → logprob: -5.045717716217041
    5. 'a' → logprob: -5.170717716217041
    6. 's' → logprob: -5.920717716217041
    7. ' n' → logprob: -6.545717716217041
    8. ' l' → logprob: -6.545717716217041
    9. ' lst' → logprob: -6.920717716217041
    10. 'n' → logprob: -7.045717716217041

Token 513: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03393059968948364
    2. ' :' → logprob: -4.158930778503418
    3. ':x' → logprob: -4.158930778503418
    4. ':[' → logprob: -6.658930778503418
    5. ':n' → logprob: -8.783930778503418
    6. ':list' → logprob: -8.783930778503418
    7. ':max' → logprob: -9.283930778503418
    8. ':(' → logprob: -9.533930778503418
    9. ':f' → logprob: -9.783930778503418
    10. ':int' → logprob: -9.908930778503418

Token 514: ' [' (ID: 723)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8703879714012146
    2. '(x' → logprob: -1.7453880310058594
    3. '(' → logprob: -2.3703880310058594
    4. 'max' → logprob: -2.8703880310058594
    5. 'min' → logprob: -3.3703880310058594
    6. 'abs' → logprob: -3.3703880310058594
    7. 'f' → logprob: -3.6203880310058594
    8. ' x' → logprob: -3.6203880310058594
    9. ' (' → logprob: -4.745388031005859
    10. '[' → logprob: -4.870388031005859

Token 515: 'f' (ID: 69)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7920733690261841
    2. 'int' → logprob: -1.042073369026184
    3. 'i' → logprob: -3.4170732498168945
    4. '0' → logprob: -3.7920732498168945
    5. 'max' → logprob: -3.7920732498168945
    6. 'f' → logprob: -3.9170732498168945
    7. 'abs' → logprob: -4.0420732498168945
    8. 'Z' → logprob: -4.2920732498168945
    9. '(' → logprob: -4.5420732498168945
    10. '1' → logprob: -5.0420732498168945

Token 516: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.3605472445487976
    2. 'x' → logprob: -1.9855473041534424
    3. 'or' → logprob: -3.1105473041534424
    4. 'int' → logprob: -3.1105473041534424
    5. '(x' → logprob: -3.2355473041534424
    6. '(int' → logprob: -4.860547065734863
    7. 'val' → logprob: -5.610547065734863
    8. 'for' → logprob: -5.735547065734863
    9. 'v' → logprob: -6.110547065734863
    10. 'abs' → logprob: -6.235547065734863

Token 517: '[i' (ID: 1768)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05608954280614853
    2. '(i' → logprob: -3.0560896396636963
    3. '[i' → logprob: -5.681089401245117
    4. '[x' → logprob: -6.181089401245117
    5. '(' → logprob: -6.931089401245117
    6. ']' → logprob: -8.056089401245117
    7. '(int' → logprob: -8.306089401245117
    8. '[' → logprob: -9.306089401245117
    9. 'x' → logprob: -9.556089401245117
    10. 'i' → logprob: -9.931089401245117

Token 518: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.196338176727295
    2. '+x' → logprob: -1.821338176727295
    3. 'for' → logprob: -2.071338176727295
    4. ']+' → logprob: -2.071338176727295
    5. '-' → logprob: -2.571338176727295
    6. ']' → logprob: -2.821338176727295
    7. '-x' → logprob: -3.196338176727295
    8. '+' → logprob: -3.571338176727295
    9. '+i' → logprob: -4.196338176727295
    10. '-i' → logprob: -4.321338176727295

Token 519: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.2452093362808228
    2. '-' → logprob: -1.6202093362808228
    3. ' for' → logprob: -1.7452093362808228
    4. '+' → logprob: -1.9952093362808228
    5. 'for' → logprob: -2.745209217071533
    6. '+x' → logprob: -3.370209217071533
    7. '(i' → logprob: -3.745209217071533
    8. ' -' → logprob: -3.870209217071533
    9. '(' → logprob: -4.120209217071533
    10. ' +' → logprob: -4.495209217071533

Token 520: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029785092920064926
    2. ' i' → logprob: -3.52978515625
    3. 'x' → logprob: -10.40478515625
    4. ' in' → logprob: -13.27978515625
    5. ' x' → logprob: -13.77978515625
    6. ' ' → logprob: -14.15478515625
    7. 'in' → logprob: -14.77978515625
    8. 'range' → logprob: -15.65478515625
    9. '	i' → logprob: -16.52978515625
    10. '   ' → logprob: -16.52978515625

Token 521: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5764991044998169
    2. 'in' → logprob: -0.8264991044998169
    3. 'i' → logprob: -7.576498985290527
    4. ' i' → logprob: -10.826498985290527
    5. ' ' → logprob: -11.076498985290527
    6. 'x' → logprob: -12.451498985290527
    7. 'for' → logprob: -12.451498985290527
    8. '
' → logprob: -13.826498985290527
    9. 'n' → logprob: -14.076498985290527
    10. '  ' → logprob: -14.951498985290527

Token 522: ' range' (ID: 3352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.26092004776000977
    2. 'range' → logprob: -1.5109200477600098
    3. ' range' → logprob: -5.01092004776001
    4. ' x' → logprob: -6.26092004776001
    5. '(' → logprob: -9.135919570922852
    6. 'network' → logprob: -9.510919570922852
    7. 'deep' → logprob: -9.885919570922852
    8. '[' → logprob: -10.010919570922852
    9. '(x' → logprob: -10.260919570922852
    10. '
' → logprob: -10.760919570922852

Token 523: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3638102412223816
    2. '1' → logprob: -1.2388103008270264
    3. 'x' → logprob: -4.613810062408447
    4. '(x' → logprob: -5.363810062408447
    5. 'len' → logprob: -7.988810062408447
    6. '(len' → logprob: -8.363810539245605
    7. '2' → logprob: -10.613810539245605
    8. ' (' → logprob: -10.738810539245605
    9. '   ' → logprob: -11.488810539245605
    10. ' ' → logprob: -11.613810539245605

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11499916762113571
    2. 'x' → logprob: -2.2399990558624268
    3. 'len' → logprob: -6.239999294281006
    4. '(' → logprob: -9.614998817443848
    5. 'N' → logprob: -9.989998817443848
    6. ' ' → logprob: -10.114998817443848
    7. ' x' → logprob: -10.614998817443848
    8. '2' → logprob: -11.114998817443848
    9. '   ' → logprob: -11.739998817443848
    10. '(x' → logprob: -11.739998817443848

Token 525: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12197373062372208
    2. ',len' → logprob: -2.621973752975464
    3. ',x' → logprob: -3.371973752975464
    4. ',N' → logprob: -4.996973514556885
    5. ' ,' → logprob: -6.996973514556885
    6. 'x' → logprob: -9.121973991394043
    7. '(x' → logprob: -10.996973991394043
    8. 'len' → logprob: -10.996973991394043
    9. ',n' → logprob: -11.496973991394043
    10. '(len' → logprob: -11.746973991394043

Token 526: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23451358079910278
    2. ',' → logprob: -2.359513521194458
    3. ',x' → logprob: -3.109513521194458
    4. ',N' → logprob: -3.109513521194458
    5. ',len' → logprob: -4.234513759613037
    6. '(x' → logprob: -5.609513759613037
    7. '(N' → logprob: -5.984513759613037
    8. '(len' → logprob: -6.734513759613037
    9. '(' → logprob: -6.859513759613037
    10. ' +' → logprob: -7.109513759613037

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002800471556838602
    2. '(N' → logprob: -9.125280380249023
    3. '(' → logprob: -9.250280380249023
    4. '+' → logprob: -10.125280380249023
    5. 'N' → logprob: -11.500280380249023
    6. 'x' → logprob: -12.000280380249023
    7. ' ' → logprob: -12.125280380249023
    8. '(x' → logprob: -12.125280380249023
    9. ')' → logprob: -12.625280380249023
    10. '
' → logprob: -13.625280380249023

Token 528: ')' (ID: 8)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -1.2261817455291748
    2. ',' → logprob: -1.4761817455291748
    3. ' if' → logprob: -1.4761817455291748
    4. 'if' → logprob: -2.351181745529175
    5. ']' → logprob: -2.976181745529175
    6. '(x' → logprob: -3.226181745529175
    7. ')]' → logprob: -3.226181745529175
    8. ')' → logprob: -3.851181745529175
    9. '   ' → logprob: -6.726181983947754
    10. ' ,' → logprob: -7.851181983947754

Token 529: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6401064395904541
    2. 'if' → logprob: -1.015106439590454
    3. ']' → logprob: -2.265106439590454
    4. '(x' → logprob: -5.140106201171875
    5. '   ' → logprob: -7.640106201171875
    6. '(' → logprob: -10.140106201171875
    7. '  ' → logprob: -10.515106201171875
    8. ')' → logprob: -10.765106201171875
    9. ' ]' → logprob: -10.765106201171875
    10. '       ' → logprob: -11.140106201171875

Token 530: ' deep' (ID: 8103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0143702030181885
    2. 'deep' → logprob: -1.3893702030181885
    3. 'network' → logprob: -1.5143702030181885
    4. 'i' → logprob: -2.7643702030181885
    5. '(i' → logprob: -3.0143702030181885
    6. 'L' → logprob: -4.014369964599609
    7. '(x' → logprob: -4.639369964599609
    8. 'len' → logprob: -5.514369964599609
    9. '((' → logprob: -5.514369964599609
    10. '(network' → logprob: -5.639369964599609

Token 531: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.47531893849372864
    2. '[x' → logprob: -0.9753189086914062
    3. '[' → logprob: -6.725318908691406
    4. '(x' → logprob: -11.975318908691406
    5. 'x' → logprob: -12.100318908691406
    6. '```' → logprob: -12.100318908691406
    7. '   ' → logprob: -12.600318908691406
    8. '[ix' → logprob: -12.850318908691406
    9. ' [' → logprob: -13.225318908691406
    10. '[
' → logprob: -13.475318908691406

Token 532: ']%' (ID: 158002)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.28105244040489197
    2. ']>=' → logprob: -2.031052350997925
    3. '%' → logprob: -3.031052350997925
    4. '==' → logprob: -3.406052350997925
    5. ' >=' → logprob: -4.281052589416504
    6. ']' → logprob: -4.906052589416504
    7. ']==' → logprob: -5.281052589416504
    8. '<=' → logprob: -5.656052589416504
    9. ' ==' → logprob: -7.406052589416504
    10. '>' → logprob: -7.531052589416504

Token 533: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005905635771341622
    2. ' ' → logprob: -7.750590801239014
    3. '==' → logprob: -9.000590324401855
    4. '```' → logprob: -11.000590324401855
    5. ' ==' → logprob: -12.625590324401855
    6. '
' → logprob: -12.750590324401855
    7. '           ' → logprob: -12.875590324401855
    8. '1' → logprob: -13.125590324401855
    9. '   ' → logprob: -13.375590324401855
    10. '=' → logprob: -13.750590324401855

Token 534: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05511121079325676
    2. ' ==' → logprob: -2.9301111698150635
    3. ']==' → logprob: -8.680110931396484
    4. '==
' → logprob: -10.805110931396484
    5. '!=' → logprob: -11.430110931396484
    6. ')==' → logprob: -12.305110931396484
    7. ']' → logprob: -12.305110931396484
    8. '()==' → logprob: -12.680110931396484
    9. '==(' → logprob: -12.680110931396484
    10. '```' → logprob: -12.680110931396484

Token 535: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14067043364048004
    2. 'x' → logprob: -2.7656705379486084
    3. '1' → logprob: -3.1406705379486084
    4. ' x' → logprob: -4.390670299530029
    5. ' ' → logprob: -4.390670299530029
    6. ' (' → logprob: -9.390670776367188
    7. '(x' → logprob: -10.140670776367188
    8. '==' → logprob: -10.390670776367188
    9. '(' → logprob: -11.078170776367188
    10. '   ' → logprob: -11.265670776367188

Token 536: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018717595376074314
    2. '()]' → logprob: -6.501871585845947
    3. ')]' → logprob: -8.626872062683105
    4. '(' → logprob: -9.251872062683105
    5. ' ]' → logprob: -9.751872062683105
    6. ')' → logprob: -11.126872062683105
    7. '(x' → logprob: -12.126872062683105
    8. ']()' → logprob: -12.876872062683105
    9. '])' → logprob: -13.376872062683105
    10. ']
' → logprob: -13.376872062683105

Token 537: 'E' (ID: 36)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.3657395839691162
    2. 'for' → logprob: -2.365739583969116
    3. 'even' → logprob: -2.490739583969116
    4. 'l' → logprob: -2.490739583969116
    5. 'ans' → logprob: -3.115739583969116
    6. 'r' → logprob: -3.365739583969116
    7. 'p' → logprob: -3.490739583969116
    8. 'lo' → logprob: -3.490739583969116
    9. 'odd' → logprob: -3.615739583969116
    10. 'res' → logprob: -3.740739583969116

Token 538: ' =' (ID: 314)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.6093788146972656
    2. 'ven' → logprob: -1.8593788146972656
    3. 'Q' → logprob: -2.1093788146972656
    4. 'qual' → logprob: -2.7343788146972656
    5. 'q' → logprob: -2.7343788146972656
    6. 'v' → logprob: -2.9843788146972656
    7. 'vals' → logprob: -3.2343788146972656
    8. '_' → logprob: -3.3593788146972656
    9. 'quals' → logprob: -3.4843788146972656
    10. '=' → logprob: -3.4843788146972656

Token 539: ' ll' (ID: 11475)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1072111129760742
    2. '[min' → logprob: -1.1072111129760742
    3. '(min' → logprob: -2.482211112976074
    4. 'max' → logprob: -2.982211112976074
    5. '[' → logprob: -3.232211112976074
    6. '[f' → logprob: -3.607211112976074
    7. '[]' → logprob: -4.232211112976074
    8. '[max' → logprob: -4.232211112976074
    9. ' min' → logprob: -4.357211112976074
    10. 'sum' → logprob: -4.482211112976074

Token 540: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015455135144293308
    2. '0' → logprob: -8.875154495239258
    3. ' (' → logprob: -11.500154495239258
    4. '(lambda' → logprob: -13.125154495239258
    5. '(
' → logprob: -13.250154495239258
    6. '((' → logprob: -15.875154495239258
    7. '[' → logprob: -16.000154495239258
    8. ')' → logprob: -16.250154495239258
    9. '1' → logprob: -16.250154495239258
    10. ' ' → logprob: -17.125154495239258

Token 541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01833161525428295
    2. '1' → logprob: -4.018331527709961
    3. ' ' → logprob: -8.643331527709961
    4. '(' → logprob: -12.518331527709961
    5. 'True' → logprob: -14.393331527709961
    6. 'False' → logprob: -15.018331527709961
    7. '-' → logprob: -15.643331527709961
    8. '   ' → logprob: -15.705831527709961
    9. '[' → logprob: -16.26833152770996
    10. '2' → logprob: -16.64333152770996

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23166459798812866
    2. ')
' → logprob: -1.6066646575927734
    3. ')+' → logprob: -5.106664657592773
    4. ')[' → logprob: -9.606664657592773
    5. ')
' → logprob: -9.606664657592773
    6. '),' → logprob: -11.356664657592773
    7. ')

' → logprob: -11.481664657592773
    8. ')-' → logprob: -12.231664657592773
    9. ')#' → logprob: -12.731664657592773
    10. ');' → logprob: -13.356664657592773

Token 543: 'O' (ID: 46)
  Prédit: 'O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.00039063513395376503
    2. 'E' → logprob: -9.000391006469727
    3. 'S' → logprob: -10.000391006469727
    4. 'L' → logprob: -10.125391006469727
    5. 'F' → logprob: -10.125391006469727
    6. 'D' → logprob: -10.250391006469727
    7. 'print' → logprob: -10.875391006469727
    8. 'o' → logprob: -11.250391006469727
    9. 'for' → logprob: -11.250391006469727
    10. ' O' → logprob: -11.500391006469727

Token 544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326267719268799
    2. ' =' → logprob: -0.7576267719268799
    3. '(' → logprob: -11.3826265335083
    4. ' ' → logprob: -11.7576265335083
    5. ',' → logprob: -12.8826265335083
    6. 'f' → logprob: -13.2576265335083
    7. ')' → logprob: -14.0076265335083
    8. '   ' → logprob: -14.7576265335083
    9. '  ' → logprob: -14.8826265335083
    10. 'l' → logprob: -14.8826265335083

Token 545: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.008618239313364029
    2. ' ll' → logprob: -4.758618354797363
    3. ' ' → logprob: -13.758618354797363
    4. '	ll' → logprob: -14.008618354797363
    5. '(ll' → logprob: -14.633618354797363
    6. 'lll' → logprob: -15.133618354797363
    7. '  ' → logprob: -15.383618354797363
    8. 'lambda' → logprob: -15.633618354797363
    9. '<ll' → logprob: -15.883618354797363
    10. '   ' → logprob: -16.008617401123047

Token 546: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -13.625000953674316
    3. '1' → logprob: -15.750000953674316
    4. '(
' → logprob: -19.375001907348633
    5. '=' → logprob: -20.125001907348633
    6. 'def' → logprob: -20.125001907348633
    7. '((' → logprob: -20.375001907348633
    8. '```' → logprob: -20.750001907348633
    9. 's' → logprob: -21.375001907348633
    10. '   ' → logprob: -21.625001907348633

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.37500286102295
    3. '0' → logprob: -14.00000286102295
    4. '   ' → logprob: -16.125001907348633
    5. ')' → logprob: -16.625001907348633
    6. '
' → logprob: -18.125001907348633
    7. '  ' → logprob: -18.687501907348633
    8. '(' → logprob: -18.875001907348633
    9. '```' → logprob: -18.875001907348633
    10. '[' → logprob: -19.000001907348633

Token 548: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001439459010725841
    2. ']' → logprob: -9.375144004821777
    3. '])' → logprob: -10.375144004821777
    4. ')
' → logprob: -10.875144004821777
    5. ')]' → logprob: -12.125144004821777
    6. ' )' → logprob: -13.500144004821777
    7. '）' → logprob: -14.750144004821777
    8. ')

' → logprob: -14.875144004821777
    9. ')])' → logprob: -15.125144004821777
    10. '))' → logprob: -15.250144004821777

Token 549: 'out' (ID: 468)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3009681701660156
    2. 'print' → logprob: -1.9259681701660156
    3. 'ans' → logprob: -1.9259681701660156
    4. 'diff' → logprob: -2.3009681701660156
    5. 'for' → logprob: -3.5509681701660156
    6. 'from' → logprob: -3.6759681701660156
    7. 'x' → logprob: -3.8009681701660156
    8. 'E' → logprob: -3.9259681701660156
    9. 'import' → logprob: -3.9259681701660156
    10. 'd' → logprob: -3.9259681701660156

Token 550: ' =' (ID: 314)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.03336165472865105
    2. 'puts' → logprob: -4.158361434936523
    3. '=' → logprob: -4.533361434936523
    4. ' =' → logprob: -5.908361434936523
    5. '()' → logprob: -6.533361434936523
    6. '(' → logprob: -6.908361434936523
    7. '_put' → logprob: -8.283361434936523
    8. 'p' → logprob: -8.283361434936523
    9. '('' → logprob: -8.783361434936523
    10. '.put' → logprob: -9.033361434936523

Token 551: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3433687686920166
    2. 'sum' → logprob: -1.3433687686920166
    3. 'min' → logprob: -1.9683687686920166
    4. 'E' → logprob: -2.8433687686920166
    5. 'str' → logprob: -3.0933687686920166
    6. 'abs' → logprob: -3.4683687686920166
    7. '(E' → logprob: -3.5933687686920166
    8. '1' → logprob: -4.0933685302734375
    9. '(max' → logprob: -4.0933685302734375
    10. '0' → logprob: -4.2183685302734375

Token 552: '1' (ID: 16)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.2641276121139526
    2. 'sum' → logprob: -1.3891276121139526
    3. 'max' → logprob: -1.6391276121139526
    4. 'min' → logprob: -1.8891276121139526
    5. 'abs' → logprob: -3.639127731323242
    6. 'E' → logprob: -3.639127731323242
    7. '(E' → logprob: -4.764127731323242
    8. '(str' → logprob: -4.889127731323242
    9. '1' → logprob: -5.264127731323242
    10. 'len' → logprob: -5.389127731323242

Token 553: '+(' (ID: 31717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29431504011154175
    2. ' for' → logprob: -2.5443150997161865
    3. '<<' → logprob: -2.6693150997161865
    4. '+' → logprob: -2.9193150997161865
    5. '*' → logprob: -3.5443150997161865
    6. '+
' → logprob: -5.419314861297607
    7. ' <<' → logprob: -5.794314861297607
    8. ' *' → logprob: -5.794314861297607
    9. '
' → logprob: -5.919314861297607
    10. 'import' → logprob: -6.044314861297607

Token 554: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0673878937959671
    2. 'sum' → logprob: -3.317387819290161
    3. 'min' → logprob: -3.942387819290161
    4. '(max' → logprob: -5.94238805770874
    5. ' max' → logprob: -6.19238805770874
    6. 'E' → logprob: -6.81738805770874
    7. 'O' → logprob: -6.94238805770874
    8. 'len' → logprob: -7.06738805770874
    9. 'M' → logprob: -7.19238805770874
    10. '(min' → logprob: -8.567387580871582

Token 555: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.07080097496509552
    2. '(O' → logprob: -2.695801019668579
    3. '(min' → logprob: -7.69580078125
    4. '(' → logprob: -8.82080078125
    5. '(
' → logprob: -9.69580078125
    6. '([' → logprob: -9.69580078125
    7. '((' → logprob: -10.19580078125
    8. 'E' → logprob: -10.32080078125
    9. '
' → logprob: -11.32080078125
    10. ')' → logprob: -11.57080078125

Token 556: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35813239216804504
    2. ')-' → logprob: -1.2331323623657227
    3. '())' → logprob: -5.608132362365723
    4. ')+' → logprob: -6.108132362365723
    5. '))' → logprob: -7.233132362365723
    6. ')>' → logprob: -7.358132362365723
    7. '()-' → logprob: -7.483132362365723
    8. '()' → logprob: -8.358132362365723
    9. '),' → logprob: -8.358132362365723
    10. ' )' → logprob: -8.358132362365723

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0987381786108017
    2. 'min' → logprob: -2.473738193511963
    3. '(min' → logprob: -5.848738193511963
    4. '-' → logprob: -6.098738193511963
    5. 'max' → logprob: -6.723738193511963
    6. '0' → logprob: -7.223738193511963
    7. '2' → logprob: -7.473738193511963
    8. ' ' → logprob: -7.598738193511963
    9. '-min' → logprob: -7.723738193511963
    10. ' min' → logprob: -7.973738193511963

Token 558: ')+(' (ID: 104644)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.04467818886041641
    2. ')' → logprob: -3.669678211212158
    3. ')*' → logprob: -4.169678211212158
    4. '+' → logprob: -6.544678211212158
    5. ')+(' → logprob: -6.919678211212158
    6. ')+' → logprob: -9.169677734375
    7. '+(' → logprob: -9.544677734375
    8. '*(' → logprob: -9.669677734375
    9. ' )' → logprob: -10.419677734375
    10. '*' → logprob: -10.794677734375

Token 559: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02501789666712284
    2. 'max' → logprob: -3.7750179767608643
    3. '(min' → logprob: -6.775017738342285
    4. 'M' → logprob: -7.900017738342285
    5. 'sum' → logprob: -9.400017738342285
    6. ' min' → logprob: -10.150017738342285
    7. 'N' → logprob: -10.400017738342285
    8. '(max' → logprob: -10.400017738342285
    9. 'len' → logprob: -10.525017738342285
    10. '2' → logprob: -11.025017738342285

Token 560: '(O' (ID: 49357)
  Prédit: '(O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(O' → logprob: -0.009807917289435863
    2. 'O' → logprob: -4.63480806350708
    3. 'min' → logprob: -11.509807586669922
    4. ')' → logprob: -11.634807586669922
    5. '	O' → logprob: -12.134807586669922
    6. '(' → logprob: -12.134807586669922
    7. ' O' → logprob: -12.259807586669922
    8. ' (' → logprob: -13.009807586669922
    9. '(I' → logprob: -13.134807586669922
    10. '```' → logprob: -13.259807586669922

Token 561: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.39215633273124695
    2. '-' → logprob: -1.1421563625335693
    3. ')' → logprob: -5.39215612411499
    4. ' -' → logprob: -7.76715612411499
    5. '[' → logprob: -9.142156600952148
    6. '()-' → logprob: -9.517156600952148
    7. ']-' → logprob: -10.142156600952148
    8. ' ' → logprob: -10.392156600952148
    9. '0' → logprob: -11.767156600952148
    10. ' )' → logprob: -12.142156600952148

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -17.00000762939453
    4. ')' → logprob: -17.25000762939453
    5. '   ' → logprob: -17.62500762939453
    6. 'min' → logprob: -17.75000762939453
    7. '-' → logprob: -18.00000762939453
    8. '(' → logprob: -18.37500762939453
    9. '```' → logprob: -18.50000762939453
    10. '  ' → logprob: -19.00000762939453

Token 563: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05359276756644249
    2. '+' → logprob: -3.6785926818847656
    3. '<|end|>' → logprob: -3.8035926818847656
    4. '+(' → logprob: -6.053592681884766
    5. ' )' → logprob: -7.928592681884766
    6. '<|end|>' → logprob: -8.053592681884766
    7. '
' → logprob: -8.178592681884766
    8. '#' → logprob: -8.428592681884766
    9. ')*(' → logprob: -8.928592681884766
    10. ')+' → logprob: -8.928592681884766

Token 564: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001461546402424574
    2. 'out' → logprob: -7.001461505889893
    3. 'for' → logprob: -7.626461505889893
    4. ' print' → logprob: -11.25146198272705
    5. '
' → logprob: -11.62646198272705
    6. 'if' → logprob: -11.62646198272705
    7. '```' → logprob: -12.50146198272705
    8. '+' → logprob: -12.87646198272705
    9. '+
' → logprob: -12.87646198272705
    10. '\' → logprob: -13.25146198272705

Token 565: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.0003254527400713414
    2. '(' → logprob: -8.125325202941895
    3. 'out' → logprob: -10.500325202941895
    4. '(
' → logprob: -14.250325202941895
    5. ' (' → logprob: -14.625325202941895
    6. '(output' → logprob: -15.250325202941895
    7. '*out' → logprob: -16.00032615661621
    8. '()' → logprob: -16.12532615661621
    9. '('' → logprob: -16.75032615661621
    10. ',out' → logprob: -16.75032615661621

Token 566: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. '+' → logprob: -13.625003814697266
    3. ')
' → logprob: -13.625003814697266
    4. ' )' → logprob: -13.750003814697266
    5. '))' → logprob: -15.500003814697266
    6. ')`' → logprob: -16.375003814697266
    7. ')#' → logprob: -16.375003814697266
    8. '`)' → logprob: -16.625003814697266
    9. '+)' → logprob: -16.750003814697266
    10. '*' → logprob: -17.500003814697266

Token 567: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.18081721663475037
    2. ' out' → logprob: -1.8058172464370728
    3. '0' → logprob: -8.180817604064941
    4. 'E' → logprob: -8.930817604064941
    5. '1' → logprob: -8.930817604064941
    6. ' E' → logprob: -9.555817604064941
    7. ' ' → logprob: -9.555817604064941
    8. 'True' → logprob: -9.930817604064941
    9. 'min' → logprob: -10.055817604064941
    10. '(out' → logprob: -10.180817604064941

Token 568: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.018167153000831604
    2. ' >' → logprob: -4.143167018890381
    3. '>=' → logprob: -6.268167018890381
    4. ')' → logprob: -9.018167495727539
    5. ' >=' → logprob: -9.643167495727539
    6. '>)' → logprob: -10.768167495727539
    7. ')>' → logprob: -11.518167495727539
    8. '!=' → logprob: -11.893167495727539
    9. ' )' → logprob: -12.893167495727539
    10. 'else' → logprob: -13.268167495727539

Token 569: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007786193396896124
    2. '=' → logprob: -5.132786273956299
    3. ' ' → logprob: -6.382786273956299
    4. '-' → logprob: -9.25778579711914
    5. '1' → logprob: -9.88278579711914
    6. '>' → logprob: -12.38278579711914
    7. ' -' → logprob: -12.50778579711914
    8. ' =' → logprob: -13.13278579711914
    9. '=-' → logprob: -13.63278579711914
    10. '   ' → logprob: -13.69528579711914

Token 570: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07889264822006226
    2. 'else' → logprob: -2.578892707824707
    3. ')' → logprob: -13.078892707824707
    4. ' )' → logprob: -14.328892707824707
    5. '	else' → logprob: -16.32889175415039
    6. ' ' → logprob: -16.70389175415039
    7. '_else' → logprob: -18.20389175415039
    8. '<|end|>' → logprob: -18.57889175415039
    9. '>' → logprob: -19.32889175415039
    10. '```' → logprob: -19.32889175415039

Token 571: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006672981660813093
    2. '1' → logprob: -5.5066728591918945
    3. '-' → logprob: -6.0066728591918945
    4. ' ' → logprob: -9.506672859191895
    5. 'print' → logprob: -11.381672859191895
    6. '   ' → logprob: -11.756672859191895
    7. '```' → logprob: -12.006672859191895
    8. '
' → logprob: -12.319172859191895
    9. ' -' → logprob: -12.444172859191895
    10. '-E' → logprob: -13.069172859191895

Token 572: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023941397666931152
    2. '-' → logprob: -3.8989415168762207
    3. '1' → logprob: -5.773941516876221
    4. ' ' → logprob: -9.273941040039062
    5. 'print' → logprob: -9.398941040039062
    6. '```' → logprob: -11.148941040039062
    7. '
' → logprob: -11.398941040039062
    8. '   ' → logprob: -11.586441040039062
    9. ' -' → logprob: -11.711441040039062
    10. '-print' → logprob: -11.961441040039062

Token 573: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -12.375007629394531
    3. ' )' → logprob: -12.875007629394531
    4. '))' → logprob: -15.625007629394531
    5. '`)' → logprob: -16.50000762939453
    6. '())' → logprob: -16.87500762939453
    7. '')' → logprob: -17.50000762939453
    8. ')`' → logprob: -17.62500762939453
    9. ')#' → logprob: -17.87500762939453
    10. '")' → logprob: -17.87500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 571
Tokens correctement prédits (1ère position, stricte): 229
Tokens correctement prédits (1ère position, avec adaptation): 244
Tokens correctement prédits (top 10): 435
Précision stricte (1ère position): 40.11%
Précision adaptée (1ère position): 42.73%
Précision (top 10): 76.18%
================================================================================
