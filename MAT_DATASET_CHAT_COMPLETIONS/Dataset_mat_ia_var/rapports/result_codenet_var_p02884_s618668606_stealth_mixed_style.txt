================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def Go():
    (n, m) = (int(x) for x in input().split())
    edges = []
    for _ in range(m): edges.append([int(x) for x in input().split()])
    q = [[] for z in range(n)]
    for line in edges:
        q[line[0]-1] += [line[1]-1]
    primary = [0]*n; transit = [0]*n; ending = [0]*n
    primary[0]=1
    i = 0
    while i < n-1:
        p = primary[i]
        if p != 0: transit[i] = transit[i]/p
        e = transit[i]; l = len(q[i])
        for child in q[i]:
            increment = 1.0*l
            primary[child] += p/l
            transit[child] += (e+1)*p/l
        i+=1
    k = n-2
    while k>=0:
        cnt=len(q[k])
        for ch in q[k]:
            ending[k] += (ending[ch]+1)/cnt
        k-=1
    from_start = ending[0]; answer = ending[0]
    foo = []
    for v in range(n):
        acc=[ending[to] for to in q[v]]
        res = ((transit[v]+1)*len(q[v])+sum(acc))*primary[v]
        foo += [res]
    for i in range(m):
        src, dst = edges[i]
        idx = src-1
        if q[idx]:
            outd=len(q[idx])
            if(outd>1): 
                answer = min(from_start + foo[idx] * (1/(outd-1)-1/outd) - primary[idx]*(transit[idx]+1+ending[dst-1])/(outd-1), answer)
    print(answer)
Go()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' Go' (ID: 7857)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8352612257003784
    2. '\n' → logprob: -0.8352612257003784
    3. '```' → logprob: -2.585261344909668
    4. ':' → logprob: -4.335261344909668
    5. '   ' → logprob: -4.835261344909668
    6. ''' → logprob: -4.835261344909668
    7. '(' → logprob: -5.210261344909668
    8. '    
' → logprob: -5.585261344909668
    9. ' 
' → logprob: -6.085261344909668
    10. '' → logprob: -6.585261344909668

Token 4: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1905410289764404
    2. '   ' → logprob: -1.5655410289764404
    3. 'pass' → logprob: -1.6905410289764404
    4. 'p' → logprob: -2.6905410289764404
    5. '\n' → logprob: -3.0655410289764404
    6. 'r' → logprob: -3.0655410289764404
    7. 'print' → logprob: -3.1905410289764404
    8. '\' → logprob: -3.5655410289764404
    9. '(' (adapté à ' (') → logprob: -3.9405410289764404
    10. 'n' → logprob: -4.4405412673950195

Token 5: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016848169034346938
    2. 'x' → logprob: -7.501684665679932
    3. '(' → logprob: -8.50168514251709
    4. '_' → logprob: -8.87668514251709
    5. '   ' → logprob: -8.87668514251709
    6. ' ' → logprob: -9.50168514251709
    7. 'a' → logprob: -9.87668514251709
    8. 'return' → logprob: -10.25168514251709
    9. '*' → logprob: -10.62668514251709
    10. '[' → logprob: -10.62668514251709

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2095443606376648
    2. ',' → logprob: -1.9595444202423096
    3. '+' → logprob: -3.5845444202423096
    4. ' )' → logprob: -5.4595441818237305
    5. '=' → logprob: -5.8345441818237305
    6. ',)' → logprob: -5.9595441818237305
    7. ' +' → logprob: -6.5845441818237305
    8. ' ,' → logprob: -6.7095441818237305
    9. '-' → logprob: -6.8345441818237305
    10. '  ' → logprob: -6.8345441818237305

Token 7: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6704549193382263
    2. 'm' → logprob: -0.7954549193382263
    3. 'k' → logprob: -4.170454978942871
    4. ' k' → logprob: -4.295454978942871
    5. ')' → logprob: -5.295454978942871
    6. 'x' → logprob: -8.170454978942871
    7. ' )' → logprob: -8.170454978942871
    8. ' n' → logprob: -8.295454978942871
    9. ' t' → logprob: -8.295454978942871
    10. ' x' → logprob: -8.420454978942871

Token 8: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000374546303646639
    2. ',' → logprob: -8.000374794006348
    3. ')=' → logprob: -10.875374794006348
    4. '),' → logprob: -11.250374794006348
    5. ' )' → logprob: -13.500374794006348
    6. ')
' → logprob: -13.750374794006348
    7. '=' → logprob: -14.125374794006348
    8. '```' → logprob: -14.125374794006348
    9. '   ' → logprob: -14.250374794006348
    10. ',)' → logprob: -14.500374794006348

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18222716450691223
    2. ' =' → logprob: -1.8072271347045898
    3. ',' → logprob: -6.18222713470459
    4. ')' → logprob: -7.93222713470459
    5. '.' → logprob: -11.30722713470459
    6. '[' → logprob: -11.43222713470459
    7. ')=' → logprob: -11.80722713470459
    8. '<|end|>' → logprob: -12.30722713470459
    9. ' ,' → logprob: -12.55722713470459
    10. ' ' → logprob: -12.55722713470459

Token 10: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.49093055725097656
    2. ' input' → logprob: -1.8659305572509766
    3. 'map' → logprob: -1.9909305572509766
    4. 'input' → logprob: -2.3659305572509766
    5. '0' → logprob: -7.115930557250977
    6. 'int' → logprob: -7.365930557250977
    7. ' int' → logprob: -7.615930557250977
    8. ' ' → logprob: -8.240930557250977
    9. 'list' → logprob: -8.865930557250977
    10. ' list' → logprob: -8.865930557250977

Token 11: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5670183897018433
    2. 'map' → logprob: -1.9420183897018433
    3. ' map' → logprob: -2.067018508911133
    4. 'int' → logprob: -2.567018508911133
    5. 'input' → logprob: -3.442018508911133
    6. ' ' → logprob: -3.817018508911133
    7. ' int' → logprob: -4.817018508911133
    8. ')' → logprob: -4.817018508911133
    9. '1' → logprob: -5.442018508911133
    10. ' input' → logprob: -5.692018508911133

Token 12: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4591248631477356
    2. '(input' → logprob: -1.0841248035430908
    3. ')' → logprob: -4.45912504196167
    4. '()' → logprob: -4.45912504196167
    5. '('' → logprob: -5.83412504196167
    6. 'input' → logprob: -6.20912504196167
    7. ',' → logprob: -7.45912504196167
    8. ' ' → logprob: -8.459124565124512
    9. '())' → logprob: -8.584124565124512
    10. '("' → logprob: -8.959124565124512

Token 13: ')' (ID: 8)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4624195098876953
    2. ')' → logprob: -1.2124195098876953
    3. '(input' → logprob: -3.4624195098876953
    4. '()),' → logprob: -4.212419509887695
    5. '()' → logprob: -4.337419509887695
    6. 'input' → logprob: -5.712419509887695
    7. '),' → logprob: -6.212419509887695
    8. '('' → logprob: -6.337419509887695
    9. '(' → logprob: -6.337419509887695
    10. '()))' → logprob: -6.962419509887695

Token 14: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.034125663340091705
    2. ')' → logprob: -3.534125566482544
    3. 'input' → logprob: -5.784125804901123
    4. '(x' → logprob: -7.659125804901123
    5. 'for' → logprob: -8.284125328063965
    6. '())' → logprob: -9.409125328063965
    7. ',' → logprob: -9.534125328063965
    8. '(' → logprob: -9.659125328063965
    9. '(raw' → logprob: -10.159125328063965
    10. '(i' → logprob: -10.284125328063965

Token 15: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.03514141961932182
    2. 'input' → logprob: -3.6601414680480957
    3. ' x' → logprob: -5.535141468048096
    4. ' range' → logprob: -5.910141468048096
    5. ' s' → logprob: -7.785141468048096
    6. '_' → logprob: -8.035140991210938
    7. ' ' → logprob: -8.035140991210938
    8. '(input' → logprob: -8.410140991210938
    9. ' in' → logprob: -8.660140991210938
    10. ')' → logprob: -9.285140991210938

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.056149501353502274
    2. ' input' → logprob: -3.056149482727051
    3. 'in' → logprob: -5.681149482727051
    4. 'input' → logprob: -5.931149482727051
    5. ' range' → logprob: -7.931149482727051
    6. '(input' → logprob: -8.05614948272705
    7. '=input' → logprob: -8.05614948272705
    8. ')' → logprob: -8.43114948272705
    9. '<|end|>' → logprob: -9.05614948272705
    10. ' ' → logprob: -10.30614948272705

Token 17: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759819149971008
    2. 'input' → logprob: -0.8259819149971008
    3. '(input' → logprob: -11.325982093811035
    4. ' ' → logprob: -11.575982093811035
    5. ')' → logprob: -11.825982093811035
    6. 'raw' → logprob: -12.075982093811035
    7. ' raw' → logprob: -13.450982093811035
    8. 'range' → logprob: -13.825982093811035
    9. '=input' → logprob: -14.075982093811035
    10. '<input' → logprob: -14.200982093811035

Token 18: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7003234028816223
    2. '())' → logprob: -0.7003234028816223
    3. '().' → logprob: -4.950323581695557
    4. ')' → logprob: -10.450323104858398
    5. '();)' → logprob: -11.575323104858398
    6. '());' → logprob: -11.950323104858398
    7. '()]' → logprob: -12.200323104858398
    8. ' ())' → logprob: -12.450323104858398
    9. '()),' → logprob: -12.700323104858398
    10. '()))' → logprob: -13.450323104858398

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007402998744510114
    2. 'strip' → logprob: -7.2507405281066895
    3. 'rstrip' → logprob: -10.625740051269531
    4. ' split' → logprob: -12.125740051269531
    5. '(split' → logprob: -15.000740051269531
    6. 'spl' → logprob: -15.750740051269531
    7. 's' → logprob: -16.37574005126953
    8. ')' → logprob: -16.87574005126953
    9. '```' → logprob: -17.50074005126953
    10. 'read' → logprob: -18.00074005126953

Token 20: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00402508769184351
    2. '()' → logprob: -6.004024982452393
    3. ')' → logprob: -6.504024982452393
    4. '()))' → logprob: -10.50402545928955
    5. ' ())' → logprob: -11.12902545928955
    6. '(' → logprob: -13.12902545928955
    7. '))' → logprob: -13.25402545928955
    8. '())
' → logprob: -13.25402545928955
    9. '()),' → logprob: -14.25402545928955
    10. '()]' → logprob: -14.37902545928955

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06438885629177094
    2. ')' → logprob: -3.6893887519836426
    3. ':
' → logprob: -4.689388751983643
    4. ',' → logprob: -4.814388751983643
    5. '\n' → logprob: -5.064388751983643
    6. '
' → logprob: -5.189388751983643
    7. '   ' → logprob: -6.314388751983643
    8. '#' → logprob: -7.314388751983643
    9. '<|end|>' → logprob: -7.314388751983643
    10. ' ' → logprob: -7.564388751983643

Token 22: ' edges' (ID: 22569)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2701853811740875
    2. '   ' → logprob: -2.8951854705810547
    3. ')' → logprob: -3.8951854705810547
    4. 'for' → logprob: -4.020185470581055
    5. 'n' → logprob: -4.145185470581055
    6. '    
' → logprob: -4.520185470581055
    7. '\' → logprob: -4.520185470581055
    8. '
' → logprob: -4.645185470581055
    9. '  
' → logprob: -4.645185470581055
    10. '\r' → logprob: -4.770185470581055

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45339587330818176
    2. '=' → logprob: -1.3283958435058594
    3. '.' → logprob: -2.8283958435058594
    4. '[' → logprob: -3.4533958435058594
    5. '[:]' → logprob: -6.203395843505859
    6. '_' → logprob: -6.453395843505859
    7. '=[]' → logprob: -6.453395843505859
    8. ',' → logprob: -6.953395843505859
    9. '.append' → logprob: -6.953395843505859
    10. ')' → logprob: -7.203395843505859

Token 24: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31565889716148376
    2. ' []' → logprob: -1.3156589269638062
    3. '[' → logprob: -6.940659046173096
    4. '{}' → logprob: -7.065659046173096
    5. 'set' → logprob: -8.190658569335938
    6. ' [' → logprob: -9.440658569335938
    7. ' {}' → logprob: -9.565658569335938
    8. ' set' → logprob: -10.065658569335938
    9. ' [[]' → logprob: -10.565658569335938
    10. ' defaultdict' → logprob: -11.190658569335938

Token 25: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20216108858585358
    2. ' for' → logprob: -2.4521610736846924
    3. '<|end|>' → logprob: -3.2021610736846924
    4. '   ' → logprob: -3.5771610736846924
    5. '	for' → logprob: -3.8271610736846924
    6. '.' → logprob: -5.8271613121032715
    7. '<|end|>' → logprob: -7.0771613121032715
    8. ' ' → logprob: -7.5771613121032715
    9. '[' → logprob: -7.9521613121032715
    10. '.for' → logprob: -8.327160835266113

Token 26: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02812269702553749
    2. ' for' → logprob: -3.653122663497925
    3. '	for' → logprob: -7.153122901916504
    4. '<|end|>' → logprob: -7.653122901916504
    5. '   ' → logprob: -8.528122901916504
    6. '[' → logprob: -9.278122901916504
    7. ')' → logprob: -9.403122901916504
    8. '.' → logprob: -10.028122901916504
    9. ' ' → logprob: -10.528122901916504
    10. '
' → logprob: -11.028122901916504

Token 27: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.14023442566394806
    2. ' i' → logprob: -2.5152344703674316
    3. ' ' → logprob: -3.1402344703674316
    4. '_' → logprob: -5.015234470367432
    5. ' ' → logprob: -10.640233993530273
    6. 'i' → logprob: -11.015233993530273
    7. ' ‌' → logprob: -11.390233993530273
    8. ' range' → logprob: -11.640233993530273
    9. ' ▁' → logprob: -11.765233993530273
    10. '  ' → logprob: -12.140233993530273

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004692611284554005
    2. 'in' → logprob: -5.379692554473877
    3. ' ' → logprob: -10.379693031311035
    4. 'n' → logprob: -11.254693031311035
    5. '  ' → logprob: -11.379693031311035
    6. 'i' → logprob: -12.879693031311035
    7. '	in' → logprob: -12.879693031311035
    8. ' _' → logprob: -13.129693031311035
    9. ' i' → logprob: -13.129693031311035
    10. 'import' → logprob: -13.254693031311035

Token 29: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0297523383051157
    2. ' range' → logprob: -3.529752254486084
    3. '	range' → logprob: -14.654752731323242
    4. ' ' → logprob: -15.154752731323242
    5. 'input' → logprob: -15.529752731323242
    6. 'm' → logprob: -15.654752731323242
    7. '(range' → logprob: -15.779752731323242
    8. '```' → logprob: -16.154752731323242
    9. '  ' → logprob: -16.654752731323242
    10. '   ' → logprob: -16.779752731323242

Token 30: '(m' (ID: 2145)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8414397835731506
    2. '(n' → logprob: -1.0914397239685059
    3. '(' → logprob: -1.4664397239685059
    4. '(m' → logprob: -6.216439723968506
    5. ' ' → logprob: -8.591440200805664
    6. ' n' → logprob: -8.966440200805664
    7. ' m' → logprob: -10.341440200805664
    8. '(range' → logprob: -10.716440200805664
    9. '  ' → logprob: -11.091440200805664
    10. ' )' → logprob: -11.466440200805664

Token 31: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006383875850588083
    2. ')' → logprob: -5.131383895874023
    3. '):
' → logprob: -8.381383895874023
    4. ':' → logprob: -9.131383895874023
    5. ' ):' → logprob: -9.256383895874023
    6. '   ' → logprob: -11.256383895874023
    7. '():' → logprob: -13.381383895874023
    8. ' ' → logprob: -13.881383895874023
    9. ' )' → logprob: -13.881383895874023
    10. ',' → logprob: -14.381383895874023

Token 32: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.36153486371040344
    2. '   ' → logprob: -2.361534833908081
    3. '    ' → logprob: -2.486534833908081
    4. ' 
' → logprob: -2.986534833908081
    5. 'edges' → logprob: -3.111534833908081
    6. '(edges' → logprob: -4.11153507232666
    7. '       ' → logprob: -5.73653507232666
    8. '_edges' → logprob: -6.11153507232666
    9. '<|end|>' → logprob: -6.23653507232666
    10. ' ' → logprob: -6.23653507232666

Token 33: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.026443224400281906
    2. '.' → logprob: -3.6514432430267334
    3. '.extend' → logprob: -9.401443481445312
    4. ' .' → logprob: -10.276443481445312
    5. '.app' → logprob: -11.151443481445312
    6. '.add' → logprob: -12.651443481445312
    7. '.ap' → logprob: -13.151443481445312
    8. ').' → logprob: -13.276443481445312
    9. '.push' → logprob: -13.776443481445312
    10. ' ' → logprob: -14.276443481445312

Token 34: '([' (ID: 5194)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.29168200492858887
    2. '(list' → logprob: -1.5416820049285889
    3. '(' → logprob: -3.291682004928589
    4. '((' → logprob: -6.416682243347168
    5. '([' → logprob: -9.791682243347168
    6. '(int' → logprob: -10.166682243347168
    7. '(
' → logprob: -10.791682243347168
    8. ' (' → logprob: -11.541682243347168
    9. '(()' → logprob: -12.666682243347168
    10. '(input' → logprob: -13.041682243347168

Token 35: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.022228039801120758
    2. '*' → logprob: -4.147228240966797
    3. '0' → logprob: -5.772228240966797
    4. ']int' → logprob: -6.897228240966797
    5. '[int' → logprob: -7.397228240966797
    6. ' int' → logprob: -7.522228240966797
    7. 'tuple' → logprob: -7.897228240966797
    8. 'list' → logprob: -8.397228240966797
    9. '(int' → logprob: -9.272228240966797
    10. ']' → logprob: -9.522228240966797

Token 36: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.73884117603302
    2. '(' → logprob: -1.23884117603302
    3. '(input' → logprob: -1.48884117603302
    4. '()' → logprob: -5.2388410568237305
    5. '<|end|>' → logprob: -8.11384105682373
    6. '(
' → logprob: -8.23884105682373
    7. '(i' → logprob: -8.23884105682373
    8. '(s' → logprob: -8.73884105682373
    9. 'input' → logprob: -9.48884105682373
    10. '('' → logprob: -9.86384105682373

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08009637892246246
    2. '())' → logprob: -3.205096483230591
    3. '()' → logprob: -3.330096483230591
    4. ' )' → logprob: -8.580096244812012
    5. '(x' → logprob: -8.955096244812012
    6. '(' → logprob: -9.205096244812012
    7. ')])' → logprob: -9.455096244812012
    8. '(input' → logprob: -10.705096244812012
    9. '(i' → logprob: -10.955096244812012
    10. ' ()' → logprob: -11.580096244812012

Token 38: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18541832268238068
    2. '(input' → logprob: -2.0604183673858643
    3. 'for' → logprob: -4.185418128967285
    4. 'input' → logprob: -4.435418128967285
    5. ' for' → logprob: -5.560418128967285
    6. '(x' → logprob: -5.560418128967285
    7. ')' → logprob: -5.810418128967285
    8. '(),' → logprob: -7.310418128967285
    9. ',input' → logprob: -7.310418128967285
    10. ' ()' → logprob: -7.435418128967285

Token 39: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06252831220626831
    2. 'input' → logprob: -2.812528371810913
    3. ' in' → logprob: -8.062528610229492
    4. '<|end|>' → logprob: -9.687528610229492
    5. '(input' → logprob: -10.062528610229492
    6. 'in' → logprob: -10.187528610229492
    7. ' ' → logprob: -10.562528610229492
    8. '=input' → logprob: -11.062528610229492
    9. '<|end|>' → logprob: -11.312528610229492
    10. '_' → logprob: -11.562528610229492

Token 40: ' in' (ID: 306)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3242761790752411
    2. '()' → logprob: -1.4492762088775635
    3. ' in' → logprob: -4.324275970458984
    4. 'input' → logprob: -4.699275970458984
    5. '(' → logprob: -5.449275970458984
    6. '.' → logprob: -5.824275970458984
    7. '=input' → logprob: -6.074275970458984
    8. ' ()' → logprob: -6.199275970458984
    9. ' ' → logprob: -6.324275970458984
    10. 'in' → logprob: -6.574275970458984

Token 41: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519296407699585
    2. 'input' → logprob: -1.5019296407699585
    3. '(input' → logprob: -15.50192928314209
    4. ' range' → logprob: -16.126930236816406
    5. '	input' → logprob: -16.751930236816406
    6. ' ' → logprob: -16.751930236816406
    7. 'range' → logprob: -17.001930236816406
    8. '=input' → logprob: -17.251930236816406
    9. '<input' → logprob: -18.376930236816406
    10. '_input' → logprob: -18.501930236816406

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0021948604844510555
    2. '()' → logprob: -6.127194881439209
    3. '()]' → logprob: -12.12719440460205
    4. '()].' → logprob: -12.87719440460205
    5. '(' → logprob: -13.75219440460205
    6. '())' → logprob: -15.50219440460205
    7. '()>' → logprob: -16.252195358276367
    8. '().'' → logprob: -16.252195358276367
    9. ' ().' → logprob: -16.627195358276367
    10. '().__' → logprob: -16.627195358276367

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2603901015827432e-05
    2. 'strip' → logprob: -10.750022888183594
    3. 'rstrip' → logprob: -14.250022888183594
    4. ' split' → logprob: -14.750022888183594
    5. 'spl' → logprob: -17.750022888183594
    6. '(split' → logprob: -17.875022888183594
    7. 'plit' → logprob: -21.375022888183594
    8. '```' → logprob: -21.625022888183594
    9. '_split' → logprob: -22.375022888183594
    10. 's' → logprob: -22.500022888183594

Token 44: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00893386360257864
    2. '()]' → logprob: -4.758934020996094
    3. '())' → logprob: -8.133934020996094
    4. '(' → logprob: -11.008934020996094
    5. '()])
' → logprob: -12.508934020996094
    6. '])' → logprob: -13.508934020996094
    7. ')])' → logprob: -14.008934020996094
    8. '()][' → logprob: -14.383934020996094
    9. '()],' → logprob: -14.633934020996094
    10. ' ()' → logprob: -14.758934020996094

Token 45: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8710249662399292
    2. '   ' → logprob: -1.2460249662399292
    3. '    
' → logprob: -2.3710250854492188
    4. '' → logprob: -3.4960250854492188
    5. '  
' → logprob: -3.6210250854492188
    6. ' 
' → logprob: -3.6210250854492188
    7. ' ' → logprob: -3.7460250854492188
    8. '\n' → logprob: -4.121025085449219
    9. ':' → logprob: -4.246025085449219
    10. ')' → logprob: -4.496025085449219

Token 46: ' q' (ID: 2335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7668657302856445
    2. '
' → logprob: -2.2668657302856445
    3. '   ' → logprob: -2.3918657302856445
    4. ' 
' → logprob: -2.7668657302856445
    5. '\n' → logprob: -2.7668657302856445
    6. '' → logprob: -3.6418657302856445
    7. '    
' → logprob: -3.7668657302856445
    8. '\' → logprob: -3.7668657302856445
    9. '#' → logprob: -3.8918657302856445
    10. ' ' → logprob: -4.0168657302856445

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.578301727771759
    2. 'u' → logprob: -1.0783016681671143
    3. '=' → logprob: -2.7033016681671143
    4. 'ue' → logprob: -4.078301906585693
    5. 'uer' → logprob: -4.703301906585693
    6. ' ' → logprob: -6.078301906585693
    7. 'uries' → logprob: -7.203301906585693
    8. '_' → logprob: -7.328301906585693
    9. '.' → logprob: -7.828301906585693
    10. '  ' → logprob: -8.078301429748535

Token 48: ' [[]' (ID: 182908)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.35034120082855225
    2. ' int' → logprob: -1.2253412008285522
    3. '[int' → logprob: -7.100341320037842
    4. '[]' → logprob: -7.475341320037842
    5. ' []' → logprob: -7.975341320037842
    6. '(int' → logprob: -9.600340843200684
    7. ' [' → logprob: -10.350340843200684
    8. 'n' → logprob: -11.475340843200684
    9. '	int' → logprob: -11.850340843200684
    10. '[' → logprob: -12.100340843200684

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5455809235572815
    2. 'for' → logprob: -0.9205809235572815
    3. ']' → logprob: -4.045580863952637
    4. ',' → logprob: -5.920580863952637
    5. ')' → logprob: -6.295580863952637
    6. ' ]' → logprob: -9.795580863952637
    7. '	for' → logprob: -10.670580863952637
    8. ')]' → logprob: -11.045580863952637
    9. ' ' → logprob: -11.545580863952637
    10. '+' → logprob: -11.670580863952637

Token 50: ' z' (ID: 579)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007572549860924482
    2. 'range' → logprob: -5.757572650909424
    3. ' _' → logprob: -6.132572650909424
    4. ' range' → logprob: -6.757572650909424
    5. '(range' → logprob: -7.507572650909424
    6. '(' → logprob: -7.882572650909424
    7. '_range' → logprob: -9.757572174072266
    8. ' ' → logprob: -10.132572174072266
    9. ' i' → logprob: -12.257572174072266
    10. '_i' → logprob: -12.382572174072266

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11944438517093658
    2. 'in' → logprob: -2.2444443702697754
    3. 'range' → logprob: -5.619444370269775
    4. ' range' → logprob: -6.744444370269775
    5. '(range' → logprob: -6.994444370269775
    6. '(' → logprob: -8.119444847106934
    7. ' ' → logprob: -8.119444847106934
    8. '(n' → logprob: -9.494444847106934
    9. ')' → logprob: -9.619444847106934
    10. '_' → logprob: -10.119444847106934

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07895037531852722
    2. 'range' → logprob: -2.5789504051208496
    3. '(range' → logprob: -10.328949928283691
    4. ' ran' → logprob: -11.828949928283691
    5. ' ' → logprob: -12.328949928283691
    6. 'r' → logprob: -12.578949928283691
    7. ' xrange' → logprob: -12.953949928283691
    8. '	range' → logprob: -12.953949928283691
    9. 'rang' → logprob: -13.078949928283691
    10. ' rang' → logprob: -13.328949928283691

Token 53: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0031812789384275675
    2. '(' → logprob: -5.753181457519531
    3. ' (' → logprob: -13.128181457519531
    4. '(m' → logprob: -13.878181457519531
    5. '(
' → logprob: -15.628181457519531
    6. '((' → logprob: -15.628181457519531
    7. '(q' → logprob: -17.12818145751953
    8. '(s' → logprob: -17.37818145751953
    9. 'n' → logprob: -17.50318145751953
    10. ')(' → logprob: -17.62818145751953

Token 54: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00020652047533076257
    2. ' )' → logprob: -9.12520694732666
    3. '+' → logprob: -10.00020694732666
    4. ')' → logprob: -10.25020694732666
    5. ']' → logprob: -11.62520694732666
    6. ' ]' → logprob: -13.50020694732666
    7. ')])' → logprob: -13.50020694732666
    8. ')],' → logprob: -13.75020694732666
    9. ')]
' → logprob: -13.87520694732666
    10. '])]' → logprob: -14.12520694732666

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4000307321548462
    2. '<|end|>' → logprob: -2.0250306129455566
    3. '
' → logprob: -2.1500306129455566
    4. ' for' → logprob: -3.5250306129455566
    5. 'for' → logprob: -3.6500306129455566
    6. ' ' → logprob: -4.525030612945557
    7. ' 
' → logprob: -5.650030612945557
    8. '    
' → logprob: -6.025030612945557
    9. ')' → logprob: -6.025030612945557
    10. '  
' → logprob: -6.650030612945557

Token 56: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14786076545715332
    2. ' for' → logprob: -2.0228607654571533
    3. '   ' → logprob: -6.397860527038574
    4. '
' → logprob: -6.647860527038574
    5. ' 
' → logprob: -7.147860527038574
    6. '<|end|>' → logprob: -7.147860527038574
    7. ' ' → logprob: -8.022860527038574
    8. '	for' → logprob: -9.147860527038574
    9. '\n' → logprob: -10.022860527038574
    10. '  
' → logprob: -10.772860527038574

Token 57: ' line' (ID: 2543)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.17894881963729858
    2. '(u' → logprob: -3.0539488792419434
    3. ' (' → logprob: -3.3039488792419434
    4. 'u' → logprob: -3.3039488792419434
    5. ' a' → logprob: -3.8039488792419434
    6. 'a' → logprob: -5.303948879241943
    7. ' e' → logprob: -5.303948879241943
    8. ' ' → logprob: -6.053948879241943
    9. ' i' → logprob: -6.303948879241943
    10. 'e' → logprob: -7.178948879241943

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05647978186607361
    2. 'in' → logprob: -2.9314796924591064
    3. 's' → logprob: -6.8064799308776855
    4. ' ' → logprob: -7.9314799308776855
    5. ',' → logprob: -10.806479454040527
    6. '_' → logprob: -11.681479454040527
    7. '_in' → logprob: -11.931479454040527
    8. '   ' → logprob: -12.181479454040527
    9. '  ' → logprob: -12.243979454040527
    10. 'i' → logprob: -12.306479454040527

Token 59: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.1604362577199936
    2. 'edges' → logprob: -1.9104362726211548
    3. '(edges' → logprob: -8.660436630249023
    4. 'range' → logprob: -11.285436630249023
    5. ' range' → logprob: -11.660436630249023
    6. '_edges' → logprob: -12.660436630249023
    7. '.edges' → logprob: -12.785436630249023
    8. ' ' → logprob: -12.785436630249023
    9. 's' → logprob: -13.160436630249023
    10. '   ' → logprob: -13.410436630249023

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.925185440806672e-05
    2. ' :' → logprob: -9.750099182128906
    3. ':
' → logprob: -10.625099182128906
    4. '[' → logprob: -12.375099182128906
    5. '):' → logprob: -12.500099182128906
    6. '<|end|>' → logprob: -12.625099182128906
    7. '[:]' → logprob: -13.625099182128906
    8. ':**' → logprob: -14.375099182128906
    9. '[:' → logprob: -14.375099182128906
    10. ']:' → logprob: -14.750099182128906

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18215106427669525
    2. '<|end|>' → logprob: -2.4321510791778564
    3. ' 
' → logprob: -3.1821510791778564
    4. ' ' → logprob: -3.8071510791778564
    5. '    ' → logprob: -5.807150840759277
    6. ',' → logprob: -5.932150840759277
    7. '        
' → logprob: -6.057150840759277
    8. '    
' → logprob: -6.307150840759277
    9. ' q' → logprob: -7.307150840759277
    10. '   ' → logprob: -7.432150840759277

Token 62: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.7027450203895569
    2. ' u' → logprob: -1.077744960784912
    3. 'q' (adapté à ' q') → logprob: -2.702744960784912
    4. '   ' → logprob: -2.952744960784912
    5. 'u' → logprob: -3.202744960784912
    6. ' a' → logprob: -6.702744960784912
    7. 'a' → logprob: -6.702744960784912
    8. ' if' → logprob: -7.327744960784912
    9. '	q' → logprob: -7.577744960784912
    10. '	u' → logprob: -9.07774543762207

Token 63: '[line' (ID: 129099)
  Prédit: '[line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -6.73052782076411e-05
    2. '[' → logprob: -9.625067710876465
    3. '[int' → logprob: -14.625067710876465
    4. '[q' → logprob: -15.000067710876465
    5. ' [' → logprob: -15.500067710876465
    6. '[
' → logprob: -16.87506675720215
    7. '=line' → logprob: -16.87506675720215
    8. '#line' → logprob: -17.25006675720215
    9. '[i' → logprob: -17.75006675720215
    10. '[len' → logprob: -18.00006675720215

Token 64: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1994775377388578e-05
    2. '-' → logprob: -12.250012397766113
    3. '0' → logprob: -12.875012397766113
    4. '][' → logprob: -13.625012397766113
    5. ' [' → logprob: -13.750012397766113
    6. '1' → logprob: -14.000012397766113
    7. '[-' → logprob: -15.000012397766113
    8. '   ' → logprob: -15.125012397766113
    9. '[
' → logprob: -15.625012397766113
    10. ']' → logprob: -16.562511444091797

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004042068030685186
    2. '1' → logprob: -5.754042148590088
    3. ' ' → logprob: -7.379042148590088
    4. '[' → logprob: -8.50404167175293
    5. '-' → logprob: -10.87904167175293
    6. '   ' → logprob: -11.87904167175293
    7. ' -' → logprob: -12.56654167175293
    8. ' [' → logprob: -13.56654167175293
    9. '```' → logprob: -13.69154167175293
    10. '2' → logprob: -14.25404167175293

Token 66: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.9697224497795105
    2. ']' → logprob: -1.0947225093841553
    3. '-' → logprob: -1.5947225093841553
    4. ']].' → logprob: -3.2197225093841553
    5. ' -' → logprob: -3.5947225093841553
    6. '].' → logprob: -4.344722270965576
    7. ' ]' → logprob: -6.969722270965576
    8. ']][' → logprob: -7.469722270965576
    9. '][' → logprob: -7.594722270965576
    10. '   ' → logprob: -8.594722747802734

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '<|end|>' → logprob: -11.500011444091797
    3. ' ' → logprob: -13.500011444091797
    4. '>' → logprob: -16.500011444091797
    5. '<|end|>' → logprob: -16.500011444091797
    6. '```' → logprob: -17.125011444091797
    7. '`' → logprob: -17.625011444091797
    8. ')' → logprob: -17.750011444091797
    9. ']' → logprob: -18.062511444091797
    10. '[' → logprob: -18.312511444091797

Token 68: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0008741820929571986
    2. ']' → logprob: -7.500874042510986
    3. '.append' → logprob: -8.875874519348145
    4. ' ].' → logprob: -9.000874519348145
    5. '.' → logprob: -10.000874519348145
    6. '-' → logprob: -12.250874519348145
    7. ').' → logprob: -13.375874519348145
    8. ' .' → logprob: -13.875874519348145
    9. ''].' → logprob: -13.875874519348145
    10. ':].' → logprob: -14.000874519348145

Token 69: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08016174286603928
    2. '.' → logprob: -2.5801618099212646
    3. ' .' → logprob: -7.3301615715026855
    4. '[' → logprob: -8.330162048339844
    5. '].' → logprob: -9.205162048339844
    6. '.add' → logprob: -9.330162048339844
    7. ').' → logprob: -9.705162048339844
    8. '.app' → logprob: -10.330162048339844
    9. '.setdefault' → logprob: -11.080162048339844
    10. 'append' → logprob: -11.205162048339844

Token 70: ' [' (ID: 723)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.06570381671190262
    2. '[' → logprob: -3.440703868865967
    3. ' [' → logprob: -3.565703868865967
    4. '[q' → logprob: -6.065703868865967
    5. '[int' → logprob: -7.690703868865967
    6. '[str' → logprob: -9.315703392028809
    7. '[f' → logprob: -9.565703392028809
    8. '[(' → logprob: -9.815703392028809
    9. '[node' → logprob: -10.190703392028809
    10. '[l' → logprob: -10.565703392028809

Token 71: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.008030543103814125
    2. ' line' → logprob: -5.258030414581299
    3. '(line' → logprob: -5.883030414581299
    4. '[line' → logprob: -12.633030891418457
    5. ' (' → logprob: -13.133030891418457
    6. '(' → logprob: -14.383030891418457
    7. '	line' → logprob: -15.508030891418457
    8. '#line' → logprob: -15.508030891418457
    9. '1' → logprob: -15.633030891418457
    10. ' ' → logprob: -16.88302993774414

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004634392389561981
    2. '1' → logprob: -7.750463485717773
    3. '][' → logprob: -10.875463485717773
    4. ' [' → logprob: -12.000463485717773
    5. '[
' → logprob: -13.125463485717773
    6. ']' → logprob: -13.250463485717773
    7. '   ' → logprob: -14.250463485717773
    8. '```' → logprob: -14.375463485717773
    9. ' ' → logprob: -14.750463485717773
    10. '2' → logprob: -14.875463485717773

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001499060745118186
    2. ' ' → logprob: -9.250149726867676
    3. '2' → logprob: -10.000149726867676
    4. '   ' → logprob: -12.125149726867676
    5. '  ' → logprob: -14.000149726867676
    6. '[' → logprob: -14.625149726867676
    7. ']' → logprob: -14.937649726867676
    8. '-' → logprob: -15.187649726867676
    9. '    ' → logprob: -15.875149726867676
    10. '```' → logprob: -16.437650680541992

Token 74: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.022873401641845703
    2. ' -' → logprob: -4.647873401641846
    3. ']-' → logprob: -4.772873401641846
    4. ']' → logprob: -5.397873401641846
    5. ' ]' → logprob: -10.522872924804688
    6. ']]' → logprob: -11.897872924804688
    7. '<|end|>' → logprob: -12.522872924804688
    8. ' ' → logprob: -12.897872924804688
    9. '   ' → logprob: -13.522872924804688
    10. ')-' → logprob: -13.647872924804688

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -16.125003814697266
    4. '<|end|>' → logprob: -16.125003814697266
    5. ']' → logprob: -16.375003814697266
    6. '```' → logprob: -17.812503814697266
    7. '１' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.187503814697266
    9. '-' → logprob: -18.250003814697266
    10. '0' → logprob: -18.437503814697266

Token 76: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002704773796722293
    2. ' ]' → logprob: -6.002704620361328
    3. ']
' → logprob: -9.252704620361328
    4. ',' → logprob: -9.502704620361328
    5. '   ' → logprob: -10.627704620361328
    6. ')]' → logprob: -10.877704620361328
    7. '       ' → logprob: -12.877704620361328
    8. ')' → logprob: -13.002704620361328
    9. ' ' → logprob: -13.127704620361328
    10. ']

' → logprob: -13.627704620361328

Token 77: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6557315587997437
    2. '<|end|>' → logprob: -0.9057315587997437
    3. '   ' → logprob: -2.655731678009033
    4. '<|end|>' → logprob: -6.280731678009033
    5. ' ' → logprob: -6.655731678009033
    6. '```' → logprob: -7.530731678009033
    7. 'def' → logprob: -7.905731678009033
    8. '\n' → logprob: -7.905731678009033
    9. ',' → logprob: -8.155731201171875
    10. '    
' → logprob: -8.405731201171875

Token 78: ' primary' (ID: 9107)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05423220247030258
    2. '<|end|>' → logprob: -3.554232120513916
    3. '
' → logprob: -5.304232120513916
    4. ' ' → logprob: -6.054232120513916
    5. '    
' → logprob: -6.179232120513916
    6. ')' → logprob: -6.179232120513916
    7. '\n' → logprob: -6.179232120513916
    8. 'def' → logprob: -6.554232120513916
    9. ' for' → logprob: -6.679232120513916
    10. 'for' → logprob: -6.679232120513916

Token 79: ' =' (ID: 314)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.3315051794052124
    2. '_colors' → logprob: -1.5815051794052124
    3. '_' → logprob: -2.331505298614502
    4. '_nodes' → logprob: -2.831505298614502
    5. ' =' → logprob: -2.956505298614502
    6. '_queue' → logprob: -3.081505298614502
    7. 'color' → logprob: -3.081505298614502
    8. '[]' → logprob: -3.706505298614502
    9. 's' → logprob: -3.706505298614502
    10. 'Color' → logprob: -4.081505298614502

Token 80: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1694960743188858
    2. '[' → logprob: -2.4194960594177246
    3. '0' → logprob: -3.4194960594177246
    4. ' []' → logprob: -4.669496059417725
    5. ' ' → logprob: -5.044496059417725
    6. '[]' → logprob: -5.169496059417725
    7. '[n' → logprob: -5.419496059417725
    8. 'set' → logprob: -5.919496059417725
    9. ' set' → logprob: -6.044496059417725
    10. '[q' → logprob: -6.919496059417725

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6974092721939087
    2. 'False' → logprob: -0.8224092721939087
    3. 'True' → logprob: -3.447409152984619
    4. '-' → logprob: -4.197409152984619
    5. '1' → logprob: -5.322409152984619
    6. ' False' → logprob: -5.697409152984619
    7. ']' → logprob: -6.697409152984619
    8. 'float' → logprob: -6.697409152984619
    9. 'int' → logprob: -6.822409152984619
    10. ' ' → logprob: -6.822409152984619

Token 82: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013835656456649303
    2. ' for' → logprob: -4.888835430145264
    3. ']*' → logprob: -5.513835430145264
    4. ' ]' → logprob: -6.763835430145264
    5. ',' → logprob: -7.013835430145264
    6. 'for' → logprob: -10.263835906982422
    7. ']*(' → logprob: -10.513835906982422
    8. '<|end|>' → logprob: -11.388835906982422
    9. ')' → logprob: -11.513835906982422
    10. ']+' → logprob: -11.888835906982422

Token 83: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.901345038088039e-05
    2. ' n' → logprob: -10.375099182128906
    3. 'm' → logprob: -10.625099182128906
    4. '(n' → logprob: -10.750099182128906
    5. '(' → logprob: -10.875099182128906
    6. ' (' → logprob: -13.875099182128906
    7. '10' → logprob: -14.875099182128906
    8. '   ' → logprob: -15.375099182128906
    9. '20' → logprob: -15.500099182128906
    10. '100' → logprob: -15.875099182128906

Token 84: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8216625452041626
    2. '
' → logprob: -1.1966625452041626
    3. '<|end|>' → logprob: -1.4466625452041626
    4. ' ' → logprob: -5.321662425994873
    5. ' for' → logprob: -5.571662425994873
    6. ' 
' → logprob: -5.821662425994873
    7. '    
' → logprob: -6.571662425994873
    8. ' secondary' → logprob: -6.821662425994873
    9. 'def' → logprob: -7.071662425994873
    10. '[' → logprob: -7.196662425994873

Token 85: ' transit' (ID: 40320)
  Prédit: 'secondary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'secondary' → logprob: -0.37406453490257263
    2. ' secondary' → logprob: -2.9990644454956055
    3. 'visited' → logprob: -3.1240644454956055
    4. '   ' → logprob: -3.1240644454956055
    5. 'stack' → logprob: -3.2490644454956055
    6. 'dist' → logprob: -4.2490644454956055
    7. 'color' → logprob: -4.3740644454956055
    8. 'used' → logprob: -4.4990644454956055
    9. ' stack' → logprob: -5.1240644454956055
    10. 'depth' → logprob: -5.1240644454956055

Token 86: ' =' (ID: 314)
  Prédit: 'ory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ory' → logprob: -0.014047851786017418
    2. 'ary' → logprob: -4.889047622680664
    3. '[' → logprob: -6.014047622680664
    4. '=' → logprob: -6.764047622680664
    5. 'ion' → logprob: -6.764047622680664
    6. 'ive' → logprob: -7.014047622680664
    7. '```' → logprob: -8.389047622680664
    8. '[]' → logprob: -8.764047622680664
    9. '=[]' → logprob: -9.639047622680664
    10. 'ions' → logprob: -9.764047622680664

Token 87: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6332082748413086
    2. ' [' → logprob: -0.7582082748413086
    3. ' ' → logprob: -8.258208274841309
    4. '0' → logprob: -8.633208274841309
    5. '[n' → logprob: -9.883208274841309
    6. '[]' → logprob: -10.508208274841309
    7. '1' → logprob: -10.508208274841309
    8. ' []' → logprob: -10.883208274841309
    9. ' n' → logprob: -11.508208274841309
    10. 'n' → logprob: -11.758208274841309

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005101645365357399
    2. 'False' → logprob: -5.380101680755615
    3. ' ' → logprob: -8.505101203918457
    4. '1' → logprob: -9.380101203918457
    5. '-' → logprob: -10.255101203918457
    6. '[' → logprob: -10.380101203918457
    7. 'n' → logprob: -10.630101203918457
    8. ']' → logprob: -10.755101203918457
    9. '[]' → logprob: -11.005101203918457
    10. 'True' → logprob: -11.255101203918457

Token 89: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.009829283691942692
    2. ']' → logprob: -4.634829521179199
    3. ' ]' → logprob: -10.3848295211792
    4. '*n' → logprob: -10.5098295211792
    5. '*' → logprob: -11.5098295211792
    6. ']*(' → logprob: -12.8848295211792
    7. ']+' → logprob: -14.2598295211792
    8. ']int' → logprob: -14.6348295211792
    9. ' ' → logprob: -15.3848295211792
    10. ']*)' → logprob: -15.8848295211792

Token 90: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.981667537620524e-06
    2. '<|end|>' → logprob: -13.875001907348633
    3. ' n' → logprob: -14.875001907348633
    4. '(n' → logprob: -15.125001907348633
    5. 'm' → logprob: -16.500001907348633
    6. '(' → logprob: -17.000001907348633
    7. '1' → logprob: -17.500001907348633
    8. '	n' → logprob: -18.125001907348633
    9. '2' → logprob: -18.250001907348633
    10. ' ' → logprob: -18.375001907348633

Token 91: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29290398955345154
    2. '   ' → logprob: -1.667904019355774
    3. '<|end|>' → logprob: -3.9179039001464844
    4. '	for' → logprob: -4.917903900146484
    5. '' → logprob: -5.042903900146484
    6. 'def' → logprob: -5.292903900146484
    7. ' ' → logprob: -5.417903900146484
    8. '    
' → logprob: -5.417903900146484
    9. ' for' → logprob: -5.792903900146484
    10. ' 
' → logprob: -6.167903900146484

Token 92: ' ending' (ID: 22013)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.4373316168785095
    2. '   ' → logprob: -2.5623316764831543
    3. ' def' → logprob: -2.6873316764831543
    4. 'def' → logprob: -2.6873316764831543
    5. 'stack' → logprob: -2.9373316764831543
    6. ' for' → logprob: -3.6873316764831543
    7. ' order' → logprob: -5.187331676483154
    8. ' result' → logprob: -5.312331676483154
    9. ' ans' → logprob: -5.437331676483154
    10. ' res' → logprob: -5.562331676483154

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5871102213859558
    2. ' =' → logprob: -0.8371102213859558
    3. '=[]' → logprob: -4.9621100425720215
    4. '_' → logprob: -6.8371100425720215
    5. '_points' → logprob: -6.8371100425720215
    6. '_nodes' → logprob: -6.9621100425720215
    7. 's' → logprob: -8.58711051940918
    8. '=[' → logprob: -8.58711051940918
    9. 'points' → logprob: -8.96211051940918
    10. '[' → logprob: -9.58711051940918

Token 94: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5566067695617676
    2. ' [' → logprob: -0.9316067695617676
    3. '[]' → logprob: -3.8066067695617676
    4. ' []' → logprob: -4.931606769561768
    5. ' ' → logprob: -6.806606769561768
    6. '0' → logprob: -6.806606769561768
    7. '[n' → logprob: -7.056606769561768
    8. 'False' → logprob: -9.05660629272461
    9. '   ' → logprob: -9.55660629272461
    10. '[]
' → logprob: -10.30660629272461

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007471516728401184
    2. 'n' → logprob: -5.382471561431885
    3. 'False' → logprob: -6.382471561431885
    4. ']' → logprob: -8.007471084594727
    5. '[' → logprob: -8.257471084594727
    6. '[n' → logprob: -8.632471084594727
    7. '[]' → logprob: -8.757471084594727
    8. ' ' → logprob: -9.632471084594727
    9. '1' → logprob: -9.882471084594727
    10. '-' → logprob: -11.132471084594727

Token 96: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.00856114737689495
    2. ']' → logprob: -4.883561134338379
    3. '*n' → logprob: -7.008561134338379
    4. ' ]' → logprob: -10.133561134338379
    5. ']*(' → logprob: -12.633561134338379
    6. ']+' → logprob: -12.883561134338379
    7. '*' → logprob: -13.383561134338379
    8. '   ' → logprob: -14.133561134338379
    9. ']int' → logprob: -14.758561134338379
    10. '[n' → logprob: -15.133561134338379

Token 97: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.703443770878948e-06
    2. '(n' → logprob: -11.875007629394531
    3. ' n' → logprob: -15.125007629394531
    4. '(' → logprob: -16.00000762939453
    5. '1' → logprob: -16.00000762939453
    6. '[n' → logprob: -16.62500762939453
    7. 'm' → logprob: -17.37500762939453
    8. ' (' → logprob: -18.37500762939453
    9. '<|end|>' → logprob: -18.50000762939453
    10. '2' → logprob: -18.62500762939453

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15241682529449463
    2. '<|end|>' → logprob: -2.152416706085205
    3. '   ' → logprob: -4.027416706085205
    4. 'def' → logprob: -6.277416706085205
    5. '    
' → logprob: -7.027416706085205
    6. '	
' → logprob: -7.277416706085205
    7. '	for' → logprob: -7.527416706085205
    8. ' for' → logprob: -7.777416706085205
    9. '\n' → logprob: -8.027417182922363
    10. '<|end|>' → logprob: -8.152417182922363

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32569411396980286
    2. '   ' → logprob: -1.5756940841674805
    3. '<|end|>' → logprob: -2.8256940841674805
    4. ' for' → logprob: -5.9506940841674805
    5. '    
' → logprob: -5.9506940841674805
    6. 'def' → logprob: -6.2006940841674805
    7. 'for' → logprob: -7.2006940841674805
    8. ' 
' → logprob: -7.4506940841674805
    9. '	for' → logprob: -7.5756940841674805
    10. ' def' → logprob: -7.7006940841674805

Token 100: ' primary' (ID: 9107)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.920539915561676
    2. '   ' → logprob: -1.4205398559570312
    3. 'for' → logprob: -1.7955398559570312
    4. 'def' → logprob: -2.4205398559570312
    5. ' stack' → logprob: -3.0455398559570312
    6. 'stack' → logprob: -3.4205398559570312
    7. '
' → logprob: -4.920539855957031
    8. ' def' → logprob: -4.920539855957031
    9. ' ' → logprob: -6.170539855957031
    10. '	stack' → logprob: -6.170539855957031

Token 101: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031067515374161303
    2. ' ' → logprob: -9.125310897827148
    3. '(' → logprob: -9.500310897827148
    4. 'n' → logprob: -9.875310897827148
    5. '-' → logprob: -10.000310897827148
    6. '(n' → logprob: -11.625310897827148
    7. '1' → logprob: -12.000310897827148
    8. '[' → logprob: -13.500310897827148
    9. 'm' → logprob: -13.562810897827148
    10. 'q' → logprob: -13.750310897827148

Token 103: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0029159036930650473
    2. ']=' → logprob: -6.127915859222412
    3. ' ]' → logprob: -7.252915859222412
    4. ']+=' → logprob: -11.00291633605957
    5. '=' → logprob: -13.00291633605957
    6. ']==' → logprob: -13.75291633605957
    7. '],' → logprob: -14.12791633605957
    8. ' =' → logprob: -14.25291633605957
    9. ']>' → logprob: -15.12791633605957
    10. ']
' → logprob: -15.50291633605957

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010198289528489113
    2. ' ' → logprob: -7.1260199546813965
    3. 'True' → logprob: -9.126019477844238
    4. '2' → logprob: -9.876019477844238
    5. '0' → logprob: -10.876019477844238
    6. '3' → logprob: -11.251019477844238
    7. ' True' → logprob: -11.501019477844238
    8. '4' → logprob: -12.876019477844238
    9. '-' → logprob: -13.251019477844238
    10. '5' → logprob: -13.501019477844238

Token 105: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5945170521736145
    2. '<|end|>' → logprob: -1.0945169925689697
    3. '   ' → logprob: -2.7195169925689697
    4. ' 
' → logprob: -3.9695169925689697
    5. ' for' → logprob: -5.094517230987549
    6. '    
' → logprob: -5.344517230987549
    7. ' ' → logprob: -5.719517230987549
    8. '  
' → logprob: -5.844517230987549
    9. '	for' → logprob: -6.219517230987549
    10. '	
' → logprob: -6.469517230987549

Token 106: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5034972429275513
    2. '<|end|>' → logprob: -1.0034972429275513
    3. ' 
' → logprob: -4.128497123718262
    4. ' ' → logprob: -5.253497123718262
    5. '   ' → logprob: -6.378497123718262
    6. '\n' → logprob: -6.503497123718262
    7. '' → logprob: -6.878497123718262
    8. '    
' → logprob: -7.503497123718262
    9. '  
' → logprob: -7.753497123718262
    10. ')' → logprob: -7.753497123718262

Token 107: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9720470905303955
    2. 'for' → logprob: -1.0970470905303955
    3. '	for' → logprob: -2.3470470905303955
    4. '   ' → logprob: -2.4720470905303955
    5. '
' → logprob: -2.5970470905303955
    6. '<|end|>' → logprob: -3.7220470905303955
    7. '	while' → logprob: -6.222046852111816
    8. ' while' → logprob: -6.972046852111816
    9. '	stack' → logprob: -7.347046852111816
    10. 'while' → logprob: -7.347046852111816

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3170935809612274
    2. ' =' → logprob: -1.5670936107635498
    3. 'nd' → logprob: -3.56709361076355
    4. 'f' → logprob: -4.067093372344971
    5. 'n' → logprob: -4.192093372344971
    6. 'nt' → logprob: -6.567093372344971
    7. ' ' → logprob: -7.817093372344971
    8. 'for' → logprob: -8.442093849182129
    9. '+=' → logprob: -9.567093849182129
    10. 'd' → logprob: -9.942093849182129

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014038567431271076
    2. ' ' → logprob: -4.389038562774658
    3. '1' → logprob: -6.514038562774658
    4. '-' → logprob: -11.389039039611816
    5. '2' → logprob: -11.889039039611816
    6. 'n' → logprob: -12.139039039611816
    7. '[' → logprob: -12.139039039611816
    8. ' -' → logprob: -12.264039039611816
    9. ' [' → logprob: -13.139039039611816
    10. '   ' → logprob: -13.264039039611816

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005798670928925276
    2. '1' → logprob: -5.880798816680908
    3. ' ' → logprob: -5.880798816680908
    4. '-' → logprob: -9.25579833984375
    5. '2' → logprob: -10.38079833984375
    6. 'n' → logprob: -10.75579833984375
    7. '[' → logprob: -11.25579833984375
    8. ' -' → logprob: -12.00579833984375
    9. '[]' → logprob: -12.25579833984375
    10. '(' → logprob: -12.69329833984375

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4050416350364685
    2. ' while' → logprob: -1.1550416946411133
    3. '
' → logprob: -4.405041694641113
    4. '	while' → logprob: -5.905041694641113
    5. '<|end|>' → logprob: -6.655041694641113
    6. '   ' → logprob: -6.780041694641113
    7. ' 
' → logprob: -8.780041694641113
    8. '```' → logprob: -9.405041694641113
    9. '\n' → logprob: -9.530041694641113
    10. '    
' → logprob: -10.280041694641113

Token 114: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.145798921585083
    2. 'i' → logprob: -2.020798921585083
    3. ' not' → logprob: -7.270798683166504
    4. ' True' → logprob: -7.270798683166504
    5. ' primary' → logprob: -8.145798683166504
    6. '(i' → logprob: -8.270798683166504
    7. ' any' → logprob: -8.770798683166504
    8. ' ' → logprob: -8.770798683166504
    9. 'True' → logprob: -9.020798683166504
    10. ' n' → logprob: -9.145798683166504

Token 115: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05395472049713135
    2. '<' → logprob: -3.678954601287842
    3. '<n' → logprob: -3.678954601287842
    4. ' ' → logprob: -6.553954601287842
    5. '<len' → logprob: -7.803954601287842
    6. ' <=' → logprob: -9.303955078125
    7. '<=' → logprob: -10.678955078125
    8. ' n' → logprob: -10.928955078125
    9. '<m' → logprob: -11.178955078125
    10. '<size' → logprob: -11.428955078125

Token 116: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03959082067012787
    2. ' n' → logprob: -3.289590835571289
    3. 'len' → logprob: -7.039590835571289
    4. 'm' → logprob: -7.789590835571289
    5. ' len' → logprob: -8.539590835571289
    6. ' ' → logprob: -10.289590835571289
    7. ' m' → logprob: -11.289590835571289
    8. '   ' → logprob: -11.914590835571289
    9. '	n' → logprob: -12.914590835571289
    10. '  ' → logprob: -13.164590835571289

Token 117: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003401451976969838
    2. ':
' → logprob: -5.753401279449463
    3. ' and' → logprob: -8.503401756286621
    4. 'and' → logprob: -11.253401756286621
    5. ' :' → logprob: -12.128401756286621
    6. ':

' → logprob: -13.378401756286621
    7. ' :
' → logprob: -15.003401756286621
    8. ':**' → logprob: -15.878401756286621
    9. ':
' → logprob: -16.003400802612305
    10. '.' → logprob: -16.878400802612305

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. ' ' → logprob: -10.125041007995605
    3. '2' → logprob: -14.125041007995605
    4. '   ' → logprob: -16.000041961669922
    5. '```' → logprob: -16.375041961669922
    6. '-' → logprob: -16.625041961669922
    7. '...' → logprob: -16.625041961669922
    8. '  ' → logprob: -16.750041961669922
    9. '
' → logprob: -17.562541961669922
    10. '3' → logprob: -17.562541961669922

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.064424067735672
    2. ':
' → logprob: -2.8144240379333496
    3. ' and' → logprob: -6.18942403793335
    4. '   ' → logprob: -8.814424514770508
    5. 'and' → logprob: -9.189424514770508
    6. ':

' → logprob: -9.814424514770508
    7. '
' → logprob: -10.439424514770508
    8. ',' → logprob: -10.814424514770508
    9. ' :' → logprob: -11.314424514770508
    10. ' :
' → logprob: -11.689424514770508

Token 120: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6194698810577393
    2. '       ' → logprob: -1.6194698810577393
    3. '<|end|>' → logprob: -2.2444698810577393
    4. '   ' → logprob: -2.8694698810577393
    5. ' 
' → logprob: -3.7444698810577393
    6. '    ' → logprob: -3.7444698810577393
    7. ' if' → logprob: -3.8694698810577393
    8. ' ' → logprob: -4.24446964263916
    9. '    
' → logprob: -5.11946964263916
    10. ' i' → logprob: -6.24446964263916

Token 121: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4081051349639893
    2. 'i' → logprob: -1.5331051349639893
    3. ' if' → logprob: -1.5331051349639893
    4. '   ' → logprob: -1.7831051349639893
    5. ' i' → logprob: -2.5331051349639893
    6. ' for' → logprob: -2.9081051349639893
    7. 'for' → logprob: -4.15810489654541
    8. 'j' → logprob: -6.53310489654541
    9. '    ' → logprob: -7.28310489654541
    10. '
' → logprob: -7.40810489654541

Token 122: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011252141557633877
    2. 'rim' → logprob: -7.376125335693359
    3. 'ri' → logprob: -9.00112533569336
    4. '[' → logprob: -9.50112533569336
    5. ' =' → logprob: -9.75112533569336
    6. '=' → logprob: -9.87612533569336
    7. '[r' → logprob: -9.87612533569336
    8. '[i' → logprob: -10.87612533569336
    9. 'layer' → logprob: -11.12612533569336
    10. '+=' → logprob: -11.62612533569336

Token 123: ' primary' (ID: 9107)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4452992081642151
    2. 'q' → logprob: -1.6952991485595703
    3. '0' → logprob: -2.6952991485595703
    4. 'primary' → logprob: -3.8202991485595703
    5. '[]
' → logprob: -3.8202991485595703
    6. '[' → logprob: -4.07029914855957
    7. 'i' → logprob: -4.44529914855957
    8. '[i' → logprob: -4.44529914855957
    9. '[q' → logprob: -5.19529914855957
    10. 'p' → logprob: -5.69529914855957

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15626461803913116
    2. '[:]' → logprob: -2.031264543533325
    3. '.copy' → logprob: -5.156264781951904
    4. '[:' → logprob: -5.281264781951904
    5. '[' → logprob: -6.531264781951904
    6. '<|end|>' → logprob: -7.281264781951904
    7. '.index' → logprob: -8.156264305114746
    8. '[q' → logprob: -9.781264305114746
    9. '+' → logprob: -10.156264305114746
    10. '[::-' → logprob: -10.781264305114746

Token 125: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031668245792388916
    2. ']
' → logprob: -4.156668186187744
    3. ']+' → logprob: -4.281668186187744
    4. ']>' → logprob: -7.031668186187744
    5. ' ]' → logprob: -8.406668663024902
    6. ']==' → logprob: -9.031668663024902
    7. '+' → logprob: -9.281668663024902
    8. ']!=' → logprob: -9.531668663024902
    9. ']

' → logprob: -9.781668663024902
    10. '];' → logprob: -10.531668663024902

Token 126: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05241822823882103
    2. '+' → logprob: -3.6774182319641113
    3. '<|end|>' → logprob: -4.552418231964111
    4. ' for' → logprob: -5.677418231964111
    5. '   ' → logprob: -6.052418231964111
    6. ';' → logprob: -6.177418231964111
    7. 'for' → logprob: -7.052418231964111
    8. ' 
' → logprob: -7.177418231964111
    9. ' if' → logprob: -7.302418231964111
    10. '*' → logprob: -7.302418231964111

Token 127: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49862805008888245
    2. 't' → logprob: -1.24862802028656
    3. '       ' → logprob: -3.3736281394958496
    4. ' for' → logprob: -4.49862813949585
    5. 's' → logprob: -4.62362813949585
    6. 'if' (adapté à ' if') → logprob: -4.74862813949585
    7. 'j' → logprob: -4.87362813949585
    8. '   ' → logprob: -4.87362813949585
    9. 'c' → logprob: -5.74862813949585
    10. 'd' → logprob: -5.99862813949585

Token 128: ' p' (ID: 275)
  Prédit: ' transit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transit' → logprob: -0.7916792631149292
    2. ' p' → logprob: -1.2916792631149292
    3. ' not' → logprob: -2.1666793823242188
    4. 'p' → logprob: -2.1666793823242188
    5. 'trans' → logprob: -4.416679382324219
    6. ' primary' → logprob: -4.916679382324219
    7. ' q' → logprob: -4.916679382324219
    8. 'not' → logprob: -5.416679382324219
    9. ' i' → logprob: -6.291679382324219
    10. 'q' → logprob: -6.291679382324219

Token 129: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4116213619709015
    2. ' and' → logprob: -1.911621332168579
    3. '>' → logprob: -2.661621332168579
    4. ':' → logprob: -2.911621332168579
    5. ' ==' → logprob: -3.036621332168579
    6. 'and' → logprob: -4.536621570587158
    7. ' >' → logprob: -5.911621570587158
    8. '!=' → logprob: -6.161621570587158
    9. ' or' → logprob: -8.03662109375
    10. ' ' → logprob: -8.03662109375

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18395157158374786
    2. ' ' → logprob: -1.8089516162872314
    3. '1' → logprob: -5.558951377868652
    4. 'trans' → logprob: -9.058951377868652
    5. '-' → logprob: -10.058951377868652
    6. ' -' → logprob: -10.308951377868652
    7. '2' → logprob: -10.433951377868652
    8. '  ' → logprob: -10.996451377868652
    9. '[]' → logprob: -11.183951377868652
    10. '
' → logprob: -11.371451377868652

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021027985494583845
    2. ' ' → logprob: -6.252102851867676
    3. '1' → logprob: -9.377102851867676
    4. 'trans' → logprob: -10.377102851867676
    5. '-' → logprob: -11.002102851867676
    6. '   ' → logprob: -11.252102851867676
    7. '2' → logprob: -12.127102851867676
    8. '  ' → logprob: -12.127102851867676
    9. 'None' → logprob: -12.252102851867676
    10. '       ' → logprob: -12.877102851867676

Token 132: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018756741657853127
    2. ' and' → logprob: -4.268756866455078
    3. ':
' → logprob: -5.518756866455078
    4. ' :' → logprob: -7.643756866455078
    5. 'and' → logprob: -10.018756866455078
    6. ':

' → logprob: -11.018756866455078
    7. ' :
' → logprob: -11.393756866455078
    8. ' or' → logprob: -11.893756866455078
    9. ',' → logprob: -12.143756866455078
    10. ' ' → logprob: -12.643756866455078

Token 133: ' transit' (ID: 40320)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3243994414806366
    2. ' for' → logprob: -1.699399471282959
    3. '<|end|>' → logprob: -3.074399471282959
    4. '       ' → logprob: -4.199399471282959
    5. '           ' → logprob: -4.324399471282959
    6. ' 
' → logprob: -5.074399471282959
    7. ' ' → logprob: -5.699399471282959
    8. '        ' → logprob: -6.074399471282959
    9. 'for' → logprob: -6.949399471282959
    10. '
' → logprob: -7.324399471282959

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1697777956724167
    2. '[q' → logprob: -2.4197778701782227
    3. '[line' → logprob: -2.9197778701782227
    4. '[' → logprob: -5.044777870178223
    5. '[p' → logprob: -5.419777870178223
    6. '=' → logprob: -7.294777870178223
    7. ' =' → logprob: -7.419777870178223
    8. ' [' → logprob: -8.669777870178223
    9. ' +=' → logprob: -8.794777870178223
    10. 'q' → logprob: -9.169777870178223

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.125523179769516
    2. ']+=' → logprob: -2.250523090362549
    3. ']=' → logprob: -5.125523090362549
    4. ' ]' → logprob: -5.500523090362549
    5. '+' → logprob: -6.500523090362549
    6. '-' → logprob: -7.875523090362549
    7. ']+' → logprob: -8.125523567199707
    8. '+=' → logprob: -9.125523567199707
    9. ' +' → logprob: -9.750523567199707
    10. ' -' → logprob: -10.250523567199707

Token 136: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7838430404663086
    2. '=' → logprob: -0.9088430404663086
    3. ' =' → logprob: -2.6588430404663086
    4. ' +=' → logprob: -2.6588430404663086
    5. ' |=' → logprob: -8.908843040466309
    6. '|' → logprob: -10.158843040466309
    7. '=p' → logprob: -10.658843040466309
    8. '*=' → logprob: -10.658843040466309
    9. '-=' → logprob: -11.033843040466309
    10. ']+=' → logprob: -11.533843040466309

Token 137: ' transit' (ID: 40320)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3783223032951355
    2. '1' → logprob: -1.3783223628997803
    3. ' p' → logprob: -3.0033223628997803
    4. ' ' → logprob: -5.628322124481201
    5. 'q' → logprob: -5.753322124481201
    6. '0' → logprob: -6.503322124481201
    7. '2' → logprob: -7.003322124481201
    8. '(p' → logprob: -7.628322124481201
    9. 'i' → logprob: -7.753322124481201
    10. '(' → logprob: -7.878322124481201

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023649204522371292
    2. 'i' → logprob: -3.773649215698242
    3. '[' → logprob: -8.523649215698242
    4. ' i' → logprob: -8.898649215698242
    5. '+' → logprob: -11.023649215698242
    6. ' ' → logprob: -12.523649215698242
    7. '+i' → logprob: -12.648649215698242
    8. '```' → logprob: -12.773649215698242
    9. ' [' → logprob: -13.023649215698242
    10. '[p' → logprob: -13.023649215698242

Token 139: ']/' (ID: 18500)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.6343033313751221
    2. ']' → logprob: -0.7593033313751221
    3. '+' → logprob: -7.134303092956543
    4. '-' → logprob: -8.259303092956543
    5. ' ]' → logprob: -8.634303092956543
    6. '+i' → logprob: -8.759303092956543
    7. ']+=' → logprob: -9.134303092956543
    8. ']*' → logprob: -10.509303092956543
    9. ' +' → logprob: -10.634303092956543
    10. 'i' → logprob: -11.009303092956543

Token 140: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010751964524388313
    2. '2' → logprob: -5.135752201080322
    3. 'primary' → logprob: -6.135752201080322
    4. ' p' → logprob: -6.510752201080322
    5. '(' → logprob: -8.260751724243164
    6. '3' → logprob: -8.510751724243164
    7. '1' → logprob: -8.510751724243164
    8. ' ' → logprob: -8.885751724243164
    9. ' primary' → logprob: -9.385751724243164
    10. 'float' → logprob: -10.010751724243164

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02140014059841633
    2. ' 
' → logprob: -4.646399974822998
    3. '<|end|>' → logprob: -5.396399974822998
    4. '+' → logprob: -5.646399974822998
    5. '       ' → logprob: -7.146399974822998
    6. '    
' → logprob: -7.396399974822998
    7. ' ' → logprob: -7.646399974822998
    8. '   ' → logprob: -7.896399974822998
    9. '  
' → logprob: -8.521400451660156
    10. '        
' → logprob: -8.771400451660156

Token 142: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1592215299606323
    2. ' ' → logprob: -1.7842215299606323
    3. '<|end|>' → logprob: -1.9092215299606323
    4. ')' → logprob: -2.034221649169922
    5. '+' → logprob: -2.659221649169922
    6. '   ' → logprob: -3.409221649169922
    7. '*' → logprob: -3.659221649169922
    8. ' 
' → logprob: -3.659221649169922
    9. '       ' → logprob: -3.909221649169922
    10. '\n' → logprob: -4.659221649169922

Token 143: ' e' (ID: 319)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2593029737472534
    2. '
' → logprob: -1.8843029737472534
    3. '<|end|>' → logprob: -1.8843029737472534
    4. '\n' → logprob: -2.259303092956543
    5. ' ' → logprob: -2.384303092956543
    6. ')' → logprob: -2.759303092956543
    7. '*' → logprob: -3.509303092956543
    8. ' 
' → logprob: -3.884303092956543
    9. '=' → logprob: -4.009303092956543
    10. '   ' → logprob: -4.259303092956543

Token 144: ' =' (ID: 314)
  Prédit: 'lse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lse' → logprob: -0.2865753471851349
    2. 'ls' → logprob: -2.2865753173828125
    3. 'nds' → logprob: -2.4115753173828125
    4. 'd' → logprob: -4.0365753173828125
    5. 'nd' → logprob: -4.1615753173828125
    6. '[i' → logprob: -6.0365753173828125
    7. '+=' → logprob: -6.0365753173828125
    8. '[' → logprob: -6.0365753173828125
    9. '=' → logprob: -6.0365753173828125
    10. 'dge' → logprob: -6.0365753173828125

Token 145: ' transit' (ID: 40320)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -1.097906231880188
    2. ' edges' → logprob: -1.597906231880188
    3. 'q' → logprob: -2.4729061126708984
    4. '0' → logprob: -2.5979061126708984
    5. 'edges' → logprob: -2.7229061126708984
    6. ' ' → logprob: -2.9729061126708984
    7. 'len' → logprob: -2.9729061126708984
    8. 'primary' → logprob: -3.7229061126708984
    9. ' len' → logprob: -3.8479061126708984
    10. 'nd' → logprob: -4.222906112670898

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0035297556314617395
    2. '[' → logprob: -6.0035295486450195
    3. '<|end|>' → logprob: -7.3785295486450195
    4. '<|end|>' → logprob: -8.50352954864502
    5. '[q' → logprob: -10.00352954864502
    6. '[n' → logprob: -10.12852954864502
    7. '[e' → logprob: -10.12852954864502
    8. '[++' → logprob: -11.37852954864502
    9. '[I' → logprob: -11.62852954864502
    10. 'i' → logprob: -11.75352954864502

Token 147: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01874655857682228
    2. ']+' → logprob: -4.143746376037598
    3. '+' → logprob: -7.268746376037598
    4. ']*' → logprob: -7.518746376037598
    5. '[i' → logprob: -7.768746376037598
    6. ' ]' → logprob: -7.768746376037598
    7. '[' → logprob: -8.643746376037598
    8. ']
' → logprob: -9.393746376037598
    9. '][' → logprob: -10.143746376037598
    10. ']/' → logprob: -10.268746376037598

Token 148: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09762102365493774
    2. 'j' → logprob: -3.847620964050293
    3. ' for' → logprob: -3.847620964050293
    4. 'i' → logprob: -4.222620964050293
    5. 'if' → logprob: -4.222620964050293
    6. 'primary' → logprob: -5.222620964050293
    7. 'e' → logprob: -5.722620964050293
    8. '   ' → logprob: -5.972620964050293
    9. '       ' → logprob: -6.222620964050293
    10. 'p' → logprob: -6.222620964050293

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4091630280017853
    2. 'en' → logprob: -1.659162998199463
    3. ' =' → logprob: -2.409162998199463
    4. 'e' → logprob: -3.659162998199463
    5. '=len' → logprob: -4.909162998199463
    6. 'ength' → logprob: -5.659162998199463
    7. 'ine' → logprob: -5.659162998199463
    8. '+=' → logprob: -5.909162998199463
    9. '   ' → logprob: -6.409162998199463
    10. 'i' → logprob: -6.409162998199463

Token 150: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.49868836998939514
    2. 'primary' → logprob: -1.9986883401870728
    3. ' len' → logprob: -1.9986883401870728
    4. 'q' → logprob: -3.7486884593963623
    5. ' q' → logprob: -3.7486884593963623
    6. ' primary' → logprob: -4.123688220977783
    7. '0' → logprob: -4.498688220977783
    8. 'en' → logprob: -4.748688220977783
    9. '[]' → logprob: -4.998688220977783
    10. 'edges' → logprob: -5.248688220977783

Token 151: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00023917861108202487
    2. '(' → logprob: -8.375239372253418
    3. ' (' → logprob: -12.000239372253418
    4. 'q' → logprob: -13.500239372253418
    5. '(
' → logprob: -14.875239372253418
    6. '(query' → logprob: -16.5002384185791
    7. '((' → logprob: -16.6252384185791
    8. '(j' → logprob: -16.6252384185791
    9. '(queue' → logprob: -16.8752384185791
    10. '(qu' → logprob: -16.8752384185791

Token 152: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001507405104348436
    2. '[q' → logprob: -9.125150680541992
    3. '(i' → logprob: -10.750150680541992
    4. ')' → logprob: -11.750150680541992
    5. '[' → logprob: -12.250150680541992
    6. ' [' → logprob: -12.750150680541992
    7. '[e' → logprob: -13.250150680541992
    8. ')[' → logprob: -13.750150680541992
    9. '[
' → logprob: -14.500150680541992
    10. 'q' → logprob: -15.125150680541992

Token 153: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006051566451787949
    2. '[i' → logprob: -5.381051540374756
    3. ')' → logprob: -7.506051540374756
    4. '])
' → logprob: -8.256052017211914
    5. ')])' → logprob: -8.506052017211914
    6. '[' → logprob: -9.256052017211914
    7. ']);' → logprob: -9.881052017211914
    8. ']' → logprob: -9.881052017211914
    9. '])]' → logprob: -10.006052017211914
    10. ' ])' → logprob: -10.631052017211914

Token 154: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' child' (ID: 2320)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1333790421485901
    2. ' ' → logprob: -2.2583789825439453
    3. ' z' → logprob: -5.008378982543945
    4. 'j' → logprob: -5.008378982543945
    5. ' range' → logprob: -5.508378982543945
    6. ' _' → logprob: -6.758378982543945
    7. ' x' → logprob: -7.758378982543945
    8. ' (' → logprob: -8.008378982543945
    9. ' idx' → logprob: -9.133378982543945
    10. ' e' → logprob: -9.258378982543945

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001841536839492619
    2. ' ' → logprob: -6.7518415451049805
    3. 'in' → logprob: -7.3768415451049805
    4. '<|end|>' → logprob: -10.37684154510498
    5. '	in' → logprob: -13.12684154510498
    6. '<|end|>' → logprob: -13.37684154510498
    7. '  ' → logprob: -13.37684154510498
    8. '_' → logprob: -13.50184154510498
    9. 's' → logprob: -13.62684154510498
    10. ',' → logprob: -14.00184154510498

Token 158: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.024103403091430664
    2. 'q' → logprob: -3.8991034030914307
    3. ' range' → logprob: -5.774103164672852
    4. 'range' → logprob: -8.149103164672852
    5. ' ' → logprob: -9.024103164672852
    6. ' ' → logprob: -11.524103164672852
    7. '	q' → logprob: -11.524103164672852
    8. '(q' → logprob: -11.774103164672852
    9. '[q' → logprob: -12.461603164672852
    10. '   ' → logprob: -13.836603164672852

Token 159: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7848862373502925e-05
    2. ' [' → logprob: -11.125027656555176
    3. '[' → logprob: -11.875027656555176
    4. '[
' → logprob: -13.000027656555176
    5. '[I' → logprob: -13.750027656555176
    6. '[q' → logprob: -14.000027656555176
    7. '<|end|>' → logprob: -15.125027656555176
    8. ')' → logprob: -15.375027656555176
    9. '[s' → logprob: -15.500027656555176
    10. '(i' → logprob: -15.875027656555176

Token 160: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.010816357098519802
    2. '):' → logprob: -4.88581657409668
    3. ']:
' → logprob: -6.38581657409668
    4. ']):' → logprob: -7.38581657409668
    5. ':' → logprob: -7.88581657409668
    6. ']' → logprob: -8.26081657409668
    7. '):
' → logprob: -10.01081657409668
    8. '[' → logprob: -10.26081657409668
    9. '']:' → logprob: -10.63581657409668
    10. '   ' → logprob: -10.76081657409668

Token 161: '           ' (ID: 352)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.42687007784843445
    2. '       ' → logprob: -2.051870107650757
    3. '<|end|>' → logprob: -2.551870107650757
    4. '           ' → logprob: -3.426870107650757
    5. ' trans' → logprob: -3.676870107650757
    6. ' ' → logprob: -3.926870107650757
    7. '        
' → logprob: -3.926870107650757
    8. '         
' → logprob: -5.051869869232178
    9. ' 
' → logprob: -5.176869869232178
    10. '	       ' → logprob: -5.801869869232178

Token 162: ' increment' (ID: 24032)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34371858835220337
    2. '        ' → logprob: -2.5937185287475586
    3. 'trans' → logprob: -2.7187185287475586
    4. '       ' → logprob: -3.2187185287475586
    5. ' trans' → logprob: -3.3437185287475586
    6. '<|end|>' → logprob: -3.4687185287475586
    7. ' ' → logprob: -4.343718528747559
    8. '                ' → logprob: -4.968718528747559
    9. ' primary' → logprob: -5.218718528747559
    10. ' ' → logprob: -5.718718528747559

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01767396368086338
    2. '=' → logprob: -4.142673969268799
    3. 's' → logprob: -7.267673969268799
    4. ' ' → logprob: -7.892673969268799
    5. 'trans' → logprob: -8.89267349243164
    6. '_amount' → logprob: -9.51767349243164
    7. '   ' → logprob: -10.26767349243164
    8. '_index' → logprob: -10.64267349243164
    9. '=int' → logprob: -10.76767349243164
    10. '  ' → logprob: -11.14267349243164

Token 164: ' ' (ID: 220)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.4040254056453705
    2. ' p' → logprob: -1.7790254354476929
    3. ' transit' → logprob: -3.1540253162384033
    4. ' primary' → logprob: -3.2790253162384033
    5. 'e' → logprob: -3.4040253162384033
    6. 'p' → logprob: -4.154025554656982
    7. ' (' → logprob: -4.154025554656982
    8. ' ' → logprob: -5.029025554656982
    9. 'primary' → logprob: -5.654025554656982
    10. '1' → logprob: -6.404025554656982

Token 165: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10406328737735748
    2. 'p' → logprob: -3.2290632724761963
    3. ' e' → logprob: -3.7290632724761963
    4. 'trans' → logprob: -4.354063510894775
    5. 'primary' → logprob: -4.979063510894775
    6. '(' → logprob: -5.604063510894775
    7. ' p' → logprob: -5.729063510894775
    8. '(e' → logprob: -6.229063510894775
    9. ' primary' → logprob: -6.729063510894775
    10. '(p' → logprob: -6.729063510894775

Token 166: '.' (ID: 13)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6894892454147339
    2. '-' → logprob: -1.5644892454147339
    3. '+' → logprob: -2.3144893646240234
    4. '-p' → logprob: -3.0644893646240234
    5. '/' → logprob: -3.3144893646240234
    6. ' /' → logprob: -3.5644893646240234
    7. ' +' → logprob: -3.8144893646240234
    8. '-l' → logprob: -4.189489364624023
    9. 'e' → logprob: -4.689489364624023
    10. '+l' → logprob: -4.939489364624023

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09039697796106339
    2. '/' → logprob: -3.0903968811035156
    3. 'div' → logprob: -4.590396881103516
    4. '*' → logprob: -4.715396881103516
    5. 'e' → logprob: -5.465396881103516
    6. 'float' → logprob: -5.715396881103516
    7. '/p' → logprob: -6.090396881103516
    8. '000' → logprob: -6.215396881103516
    9. 'from' → logprob: -6.340396881103516
    10. 'p' → logprob: -6.465396881103516

Token 168: '*l' (ID: 176337)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.30522242188453674
    2. '/' → logprob: -1.4302223920822144
    3. ' -' → logprob: -4.930222511291504
    4. '-' → logprob: -5.305222511291504
    5. '/trans' → logprob: -5.805222511291504
    6. '/l' → logprob: -6.180222511291504
    7. '*' → logprob: -6.430222511291504
    8. '/e' → logprob: -6.555222511291504
    9. 'e' → logprob: -6.805222511291504
    10. '/p' → logprob: -7.555222511291504

Token 169: '
' (ID: 198)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4036789834499359
    2. ' /' → logprob: -1.1536790132522583
    3. '/l' → logprob: -4.528678894042969
    4. 'e' → logprob: -6.278678894042969
    5. '-' → logprob: -6.778678894042969
    6. '**' → logprob: -7.528678894042969
    7. '0' → logprob: -7.903678894042969
    8. '/(' → logprob: -8.028678894042969
    9. '/e' → logprob: -8.528678894042969
    10. '/p' → logprob: -8.778678894042969

Token 170: '           ' (ID: 352)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.615986704826355
    2. ' /' → logprob: -2.1159868240356445
    3. '/' → logprob: -2.3659868240356445
    4. '*' → logprob: -2.6159868240356445
    5. '<|end|>' → logprob: -2.7409868240356445
    6. ' **' → logprob: -3.4909868240356445
    7. ')' → logprob: -3.6159868240356445
    8. ' *' → logprob: -4.4909868240356445
    9. ' if' → logprob: -4.7409868240356445
    10. '           ' → logprob: -4.9909868240356445

Token 171: ' primary' (ID: 9107)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02364722639322281
    2. '[i' → logprob: -3.7736473083496094
    3. '[in' → logprob: -9.02364730834961
    4. '[parent' → logprob: -9.77364730834961
    5. '=' → logprob: -10.14864730834961
    6. '[p' → logprob: -10.52364730834961
    7. '[index' → logprob: -11.64864730834961
    8. ']' → logprob: -12.02364730834961
    9. '[:]' → logprob: -12.02364730834961
    10. ' +=' → logprob: -12.14864730834961

Token 173: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.00525284931063652
    2. '[' → logprob: -5.755252838134766
    3. 'i' → logprob: -6.505252838134766
    4. ' child' → logprob: -8.005252838134766
    5. '(child' → logprob: -9.255252838134766
    6. '[i' → logprob: -9.755252838134766
    7. ']' → logprob: -9.755252838134766
    8. '	child' → logprob: -11.880252838134766
    9. ' i' → logprob: -12.505252838134766
    10. '[parent' → logprob: -12.630252838134766

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1250312775373459
    2. ']+=' → logprob: -2.2500312328338623
    3. ']+' → logprob: -4.875031471252441
    4. '-' → logprob: -5.625031471252441
    5. ']-' → logprob: -8.000031471252441
    6. ' ]' → logprob: -8.375031471252441
    7. '[' → logprob: -9.250031471252441
    8. '+' → logprob: -9.250031471252441
    9. ')' → logprob: -10.125031471252441
    10. '+=' → logprob: -10.250031471252441

Token 175: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08149261772632599
    2. ' +=' → logprob: -2.5814926624298096
    3. ']+=' → logprob: -6.4564924240112305
    4. '+' → logprob: -7.3314924240112305
    5. '=' → logprob: -8.58149242401123
    6. '[' → logprob: -8.83149242401123
    7. '+=(' → logprob: -10.83149242401123
    8. '+='' → logprob: -12.08149242401123
    9. ']' → logprob: -12.33149242401123
    10. ')' → logprob: -13.33149242401123

Token 176: ' p' (ID: 275)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.159423828125
    2. 'p' → logprob: -2.784423828125
    3. 'increment' → logprob: -3.284423828125
    4. 'primary' → logprob: -3.784423828125
    5. 'trans' → logprob: -4.034423828125
    6. ' e' → logprob: -5.659423828125
    7. ' p' → logprob: -6.659423828125
    8. ' primary' → logprob: -7.284423828125
    9. '(e' → logprob: -7.534423828125
    10. '1' → logprob: -7.784423828125

Token 177: '/l' (ID: 16347)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.885539174079895
    2. '*' → logprob: -1.385539174079895
    3. ' /' → logprob: -1.635539174079895
    4. '/' → logprob: -2.0105390548706055
    5. '/trans' → logprob: -5.2605390548706055
    6. '/in' → logprob: -6.2605390548706055
    7. 'increment' → logprob: -8.010539054870605
    8. '/e' → logprob: -8.260539054870605
    9. '<|end|>' → logprob: -9.135539054870605
    10. ' ' → logprob: -9.385539054870605

Token 178: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2942459285259247
    2. 'trans' → logprob: -1.669245958328247
    3. '           ' → logprob: -3.544245958328247
    4. '<|end|>' → logprob: -3.794245958328247
    5. ' trans' → logprob: -5.169245719909668
    6. ';' → logprob: -6.419245719909668
    7. '       ' → logprob: -6.794245719909668
    8. '            
' → logprob: -6.919245719909668
    9. ' 
' → logprob: -7.044245719909668
    10. 'increment' → logprob: -7.169245719909668

Token 179: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29298990964889526
    2. 'trans' → logprob: -1.54298996925354
    3. ' trans' → logprob: -4.417989730834961
    4. '
' → logprob: -4.667989730834961
    5. ' transit' → logprob: -4.917989730834961
    6. ';' → logprob: -5.292989730834961
    7. 'increment' → logprob: -6.667989730834961
    8. '<|end|>' → logprob: -6.917989730834961
    9. '               ' → logprob: -7.167989730834961
    10. '            
' → logprob: -7.167989730834961

Token 180: ' transit' (ID: 40320)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.02714410424232483
    2. ' transit' → logprob: -3.652144193649292
    3. ' trans' → logprob: -7.527143955230713
    4. '           ' → logprob: -9.402144432067871
    5. 'primary' → logprob: -9.652144432067871
    6. 'increment' → logprob: -10.402144432067871
    7. 'e' → logprob: -11.152144432067871
    8. '       ' → logprob: -11.277144432067871
    9. '
' → logprob: -11.277144432067871
    10. '+' → logprob: -11.652144432067871

Token 181: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.2729995988775045e-06
    2. '[i' → logprob: -12.875006675720215
    3. ' [' → logprob: -13.250006675720215
    4. '	' → logprob: -15.375006675720215
    5. '   ' → logprob: -15.625006675720215
    6. '[cell' → logprob: -15.750006675720215
    7. '[parent' → logprob: -15.875006675720215
    8. 'child' → logprob: -16.0000057220459
    9. '=' → logprob: -16.5000057220459
    10. ' +=' → logprob: -16.6250057220459

Token 182: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0017205192707479
    2. '[' → logprob: -6.501720428466797
    3. 'i' → logprob: -8.626720428466797
    4. ' child' → logprob: -11.001720428466797
    5. '[i' → logprob: -11.626720428466797
    6. '(child' → logprob: -11.751720428466797
    7. 'parent' → logprob: -13.626720428466797
    8. '	child' → logprob: -13.626720428466797
    9. '[parent' → logprob: -14.251720428466797
    10. ']' → logprob: -14.251720428466797

Token 183: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.44808515906333923
    2. ']+=' → logprob: -1.6980851888656616
    3. ']' → logprob: -1.9480851888656616
    4. ' +=' → logprob: -3.573085069656372
    5. '+' → logprob: -4.948085308074951
    6. ']+' → logprob: -8.948084831237793
    7. ' ]' → logprob: -9.573084831237793
    8. '[' → logprob: -9.948084831237793
    9. ')' → logprob: -9.948084831237793
    10. '=' → logprob: -10.448084831237793

Token 184: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04875859245657921
    2. ' +=' → logprob: -3.0487585067749023
    3. '+' → logprob: -9.173758506774902
    4. '=' → logprob: -9.798758506774902
    5. ']+=' → logprob: -12.173758506774902
    6. '+='' → logprob: -12.923758506774902
    7. '+=(' → logprob: -13.048758506774902
    8. '[' → logprob: -13.798758506774902
    9. '+="' → logprob: -14.673758506774902
    10. ' =' → logprob: -15.173758506774902

Token 185: ' (' (ID: 350)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.014643970876932144
    2. 'trans' → logprob: -5.139644145965576
    3. 'increment' → logprob: -5.389644145965576
    4. ' e' → logprob: -6.139644145965576
    5. 'p' → logprob: -7.139644145965576
    6. '(e' → logprob: -7.514644145965576
    7. '(' → logprob: -8.639643669128418
    8. '1' → logprob: -9.639643669128418
    9. '(p' → logprob: -9.764643669128418
    10. 't' → logprob: -9.764643669128418

Token 186: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0658760517835617
    2. 'trans' → logprob: -2.815876007080078
    3. 'p' → logprob: -6.190876007080078
    4. '1' → logprob: -7.190876007080078
    5. 'increment' → logprob: -7.440876007080078
    6. ' e' → logprob: -8.815876007080078
    7. '(' → logprob: -9.315876007080078
    8. '(e' → logprob: -9.440876007080078
    9. '(trans' → logprob: -10.065876007080078
    10. ' transit' → logprob: -10.315876007080078

Token 187: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4668523073196411
    2. ' /' → logprob: -1.7168523073196411
    3. '/' → logprob: -1.8418523073196411
    4. ')' → logprob: -2.0918521881103516
    5. '*' → logprob: -2.4668521881103516
    6. ')/' → logprob: -2.8418521881103516
    7. ' )' → logprob: -2.8418521881103516
    8. ' *' → logprob: -3.5918521881103516
    9. '/l' → logprob: -3.7168521881103516
    10. ' +' → logprob: -3.7168521881103516

Token 188: '1' (ID: 16)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.059088531881570816
    2. '1' → logprob: -2.9340884685516357
    3. ' increment' → logprob: -5.809088706970215
    4. 'p' → logprob: -7.184088706970215
    5. 'primary' → logprob: -8.934088706970215
    6. ' p' → logprob: -9.184088706970215
    7. ' ' → logprob: -9.809088706970215
    8. '(' → logprob: -10.434088706970215
    9. 'trans' → logprob: -10.559088706970215
    10. 'increments' → logprob: -11.309088706970215

Token 189: ')*' (ID: 11043)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.1714273989200592
    2. ')' → logprob: -1.9214273691177368
    3. ' )' → logprob: -4.921427249908447
    4. '/l' → logprob: -6.046427249908447
    5. ')*' → logprob: -7.296427249908447
    6. ')/(' → logprob: -8.296427726745605
    7. '/' → logprob: -8.421427726745605
    8. '.' → logprob: -8.671427726745605
    9. ' /' → logprob: -9.796427726745605
    10. 'l' → logprob: -10.546427726745605

Token 190: 'p' (ID: 79)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.2503165900707245
    2. 'p' → logprob: -1.6253166198730469
    3. ' increment' → logprob: -4.125316619873047
    4. ' p' → logprob: -5.500316619873047
    5. '(' → logprob: -6.750316619873047
    6. 'l' → logprob: -7.000316619873047
    7. '/' → logprob: -7.250316619873047
    8. '1' → logprob: -7.250316619873047
    9. '/l' → logprob: -8.375316619873047
    10. ' (' → logprob: -8.625316619873047

Token 191: '/l' (ID: 16347)
  Prédit: '/l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/l' → logprob: -0.07242567837238312
    2. ' /' → logprob: -2.947425603866577
    3. '/' → logprob: -4.072425842285156
    4. '/n' → logprob: -8.447425842285156
    5. '           ' → logprob: -10.822425842285156
    6. '/
' → logprob: -10.822425842285156
    7. '       ' → logprob: -11.447425842285156
    8. '```' → logprob: -11.572425842285156
    9. '/(' → logprob: -11.697425842285156
    10. '
' → logprob: -11.697425842285156

Token 192: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059576865285634995
    2. '       ' → logprob: -3.4345767498016357
    3. '           ' → logprob: -4.434576988220215
    4. '<|end|>' → logprob: -4.934576988220215
    5. 'i' → logprob: -6.059576988220215
    6. 'return' → logprob: -6.934576988220215
    7. '<|end|>' → logprob: -7.184576988220215
    8. ')' → logprob: -7.684576988220215
    9. '   ' → logprob: -8.184576988220215
    10. '\n' → logprob: -8.309576988220215

Token 193: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.001614365610294044
    2. '       ' → logprob: -6.626614570617676
    3. '
' → logprob: -9.251614570617676
    4. '   ' → logprob: -9.501614570617676
    5. '           ' → logprob: -10.751614570617676
    6. '    
' → logprob: -10.876614570617676
    7. '\n' → logprob: -11.126614570617676
    8. '        
' → logprob: -11.251614570617676
    9. '<|end|>' → logprob: -11.501614570617676
    10. ' 
' → logprob: -11.876614570617676

Token 194: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.26067325472831726
    2. '
' → logprob: -2.0106732845306396
    3. '   ' → logprob: -2.5106732845306396
    4. ' i' → logprob: -4.3856730461120605
    5. '       ' → logprob: -7.0106730461120605
    6. '	i' → logprob: -7.7606730461120605
    7. '
' → logprob: -8.885673522949219
    8. '+' → logprob: -9.760673522949219
    9. ' ' → logprob: -9.885673522949219
    10. '\n' → logprob: -10.010673522949219

Token 195: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.028267454355955124
    2. '+' → logprob: -4.2782673835754395
    3. ' +=' → logprob: -4.2782673835754395
    4. '=' → logprob: -8.903267860412598
    5. '++' → logprob: -13.528267860412598
    6. ' +' → logprob: -15.403267860412598
    7. ']+=' → logprob: -15.403267860412598
    8. '+="' → logprob: -15.528267860412598
    9. '+='' → logprob: -15.778267860412598
    10. '+++' → logprob: -17.15326690673828

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -18.1250057220459
    4. '   ' → logprob: -20.2500057220459
    5. '１' → logprob: -20.6250057220459
    6. '0' → logprob: -21.1250057220459
    7. '
' → logprob: -21.5000057220459
    8. '۱' → logprob: -21.6250057220459
    9. '`' → logprob: -21.7500057220459
    10. '' → logprob: -21.9375057220459

Token 197: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5836281180381775
    2. '<|end|>' → logprob: -1.4586281776428223
    3. '[' → logprob: -2.5836281776428223
    4. ']' → logprob: -3.7086281776428223
    5. '   ' → logprob: -3.8336281776428223
    6. ' ' → logprob: -3.9586281776428223
    7. '=' → logprob: -4.333628177642822
    8. '+' → logprob: -4.833628177642822
    9. '#' → logprob: -4.958628177642822
    10. ':' → logprob: -5.083628177642822

Token 199: ' k' (ID: 372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2945851683616638
    2. '<|end|>' → logprob: -1.9195852279663086
    3. ']' → logprob: -3.1695852279663086
    4. '   ' → logprob: -3.9195852279663086
    5. '[' → logprob: -4.794585227966309
    6. ' ' → logprob: -5.044585227966309
    7. '+' → logprob: -5.669585227966309
    8. '#' → logprob: -5.669585227966309
    9. '=' → logprob: -5.669585227966309
    10. ':' → logprob: -6.044585227966309

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23713454604148865
    2. ' =' → logprob: -1.862134575843811
    3. '+' → logprob: -3.2371344566345215
    4. '+=' → logprob: -4.9871344566345215
    5. 'ey' → logprob: -5.4871344566345215
    6. ' +=' → logprob: -6.3621344566345215
    7. '<|end|>' → logprob: -7.8621344566345215
    8. ' ' → logprob: -7.9871344566345215
    9. ')' → logprob: -8.23713493347168
    10. '-' → logprob: -8.36213493347168

Token 201: ' n' (ID: 297)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9795362949371338
    2. 'primary' → logprob: -1.3545362949371338
    3. ' primary' → logprob: -2.229536294937134
    4. ' int' → logprob: -2.729536294937134
    5. 'trans' → logprob: -3.229536294937134
    6. 'float' → logprob: -3.604536294937134
    7. '0' → logprob: -3.729536294937134
    8. 'n' → logprob: -3.854536294937134
    9. ' float' → logprob: -3.979536294937134
    10. ' n' → logprob: -4.104536056518555

Token 202: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004279275599401444
    2. '<|end|>' → logprob: -8.375428199768066
    3. ' -' → logprob: -8.625428199768066
    4. '<|end|>' → logprob: -12.375428199768066
    5. '-
' → logprob: -12.625428199768066
    6. ')' → logprob: -13.500428199768066
    7. '#' → logprob: -13.625428199768066
    8. '   ' → logprob: -13.750428199768066
    9. '-n' → logprob: -13.875428199768066
    10. '```' → logprob: -13.875428199768066

Token 203: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002193563850596547
    2. '2' → logprob: -6.127193450927734
    3. '```' → logprob: -12.627193450927734
    4. '3' → logprob: -12.877193450927734
    5. ' ' → logprob: -13.252193450927734
    6. '0' → logprob: -14.877193450927734
    7. '5' → logprob: -15.377193450927734
    8. 'k' → logprob: -16.377193450927734
    9. '4' → logprob: -16.502193450927734
    10. '   ' → logprob: -16.752193450927734

Token 204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41760262846946716
    2. '<|end|>' → logprob: -1.1676026582717896
    3. '+' → logprob: -4.1676025390625
    4. 'while' → logprob: -4.7926025390625
    5. ' while' → logprob: -5.4176025390625
    6. '<|end|>' → logprob: -6.9176025390625
    7. '+
' → logprob: -8.4176025390625
    8. ';' → logprob: -9.1676025390625
    9. '   ' → logprob: -9.2926025390625
    10. '	while' → logprob: -9.4176025390625

Token 205: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07928499579429626
    2. ' while' → logprob: -2.704284906387329
    3. '   ' → logprob: -4.829285144805908
    4. '
' → logprob: -7.454285144805908
    5. '```' → logprob: -8.95428466796875
    6. 'primary' → logprob: -9.20428466796875
    7. 'for' → logprob: -9.70428466796875
    8. '	while' → logprob: -9.95428466796875
    9. 'trans' → logprob: -10.20428466796875
    10. '+' → logprob: -10.20428466796875

Token 206: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.005185493268072605
    2. ' while' → logprob: -5.380185604095459
    3. 'for' → logprob: -8.3801851272583
    4. '   ' → logprob: -9.6301851272583
    5. 'result' → logprob: -10.0051851272583
    6. 'w' → logprob: -10.3801851272583
    7. 's' → logprob: -10.6301851272583
    8. 'trans' → logprob: -10.7551851272583
    9. 'answer' → logprob: -10.8801851272583
    10. 'j' → logprob: -11.6301851272583

Token 207: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0031808018684387207
    2. ' k' → logprob: -5.753180980682373
    3. '(k' → logprob: -13.628180503845215
    4. 'True' → logprob: -14.628180503845215
    5. '0' → logprob: -14.628180503845215
    6. ' ' → logprob: -14.753180503845215
    7. '   ' → logprob: -14.878180503845215
    8. '  ' → logprob: -17.12818145751953
    9. '	k' → logprob: -17.12818145751953
    10. 'not' → logprob: -17.12818145751953

Token 208: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.400050550699234
    2. ' >=' → logprob: -1.1500505208969116
    3. '>' → logprob: -4.400050640106201
    4. ' >' → logprob: -7.150050640106201
    5. ']>=' → logprob: -11.900050163269043
    6. ' ' → logprob: -12.150050163269043
    7. ')>=' → logprob: -12.400050163269043
    8. '```' → logprob: -12.650050163269043
    9. '<' → logprob: -12.775050163269043
    10. 'k' → logprob: -13.525050163269043

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.750009536743164
    3. '1' → logprob: -13.250009536743164
    4. '   ' → logprob: -17.000009536743164
    5. '۰' → logprob: -18.937509536743164
    6. 'k' → logprob: -19.125009536743164
    7. '```' → logprob: -19.375009536743164
    8. '2' → logprob: -19.625009536743164
    9. '
' → logprob: -20.062509536743164
    10. '０' → logprob: -20.375009536743164

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12800051271915436
    2. ':
' → logprob: -2.128000497817993
    3. ' and' → logprob: -7.003000736236572
    4. '   ' → logprob: -9.128000259399414
    5. ' :' → logprob: -10.878000259399414
    6. ':

' → logprob: -11.253000259399414
    7. ' :
' → logprob: -11.753000259399414
    8. '):
' → logprob: -12.378000259399414
    9. 'and' → logprob: -12.753000259399414
    10. ',' → logprob: -13.378000259399414

Token 211: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3510650098323822
    2. '       ' → logprob: -1.2260650396347046
    3. ' for' → logprob: -7.601065158843994
    4. ' primary' → logprob: -7.976065158843994
    5. ' if' → logprob: -7.976065158843994
    6. ' trans' → logprob: -8.226064682006836
    7. ' transit' → logprob: -8.226064682006836
    8. 'trans' → logprob: -8.351064682006836
    9. ' k' → logprob: -9.101064682006836
    10. 'k' → logprob: -9.726064682006836

Token 212: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6364446878433228
    2. 'l' → logprob: -1.1364446878433228
    3. 'j' → logprob: -2.261444568634033
    4. 'if' → logprob: -4.261444568634033
    5. '   ' → logprob: -5.011444568634033
    6. 'ending' → logprob: -5.136444568634033
    7. 'child' → logprob: -5.386444568634033
    8. 'i' → logprob: -5.636444568634033
    9. ' for' → logprob: -6.011444568634033
    10. 'p' → logprob: -7.261444568634033

Token 213: '=len' (ID: 114011)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603214144706726
    2. '=' → logprob: -1.9103214740753174
    3. '=k' → logprob: -10.160321235656738
    4. '=len' → logprob: -10.660321235656738
    5. ' ' → logprob: -11.160321235656738
    6. ' +=' → logprob: -12.660321235656738
    7. '=count' → logprob: -12.660321235656738
    8. '+=' → logprob: -12.785321235656738
    9. '=q' → logprob: -13.160321235656738
    10. '   ' → logprob: -13.535321235656738

Token 214: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -3.166338137816638e-05
    2. 'q' → logprob: -10.500031471252441
    3. '(' → logprob: -13.000031471252441
    4. '[q' → logprob: -14.125031471252441
    5. '(k' → logprob: -14.875031471252441
    6. ' (' → logprob: -15.125031471252441
    7. '([' → logprob: -16.625032424926758
    8. '	q' → logprob: -17.000032424926758
    9. '(primary' → logprob: -17.250032424926758
    10. '((' → logprob: -17.250032424926758

Token 215: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.153795766294934e-06
    2. 'k' → logprob: -12.500005722045898
    3. ' [' → logprob: -14.000005722045898
    4. '[' → logprob: -14.750005722045898
    5. ')' → logprob: -14.750005722045898
    6. '(k' → logprob: -15.250005722045898
    7. '[i' → logprob: -16.1250057220459
    8. '[q' → logprob: -16.2500057220459
    9. '   ' → logprob: -16.8750057220459
    10. '[j' → logprob: -17.1250057220459

Token 216: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.10266897082328796
    2. '])' → logprob: -2.3526690006256104
    3. ')
' → logprob: -6.102668762207031
    4. ')' → logprob: -9.727668762207031
    5. ' ])
' → logprob: -10.102668762207031
    6. ']);' → logprob: -10.352668762207031
    7. '       ' → logprob: -10.727668762207031
    8. '])

' → logprob: -10.727668762207031
    9. '])
' → logprob: -11.602668762207031
    10. '   ' → logprob: -12.102668762207031

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0608528852462769
    2. '
' → logprob: -1.3108528852462769
    3. ' if' → logprob: -1.3108528852462769
    4. ' for' → logprob: -2.9358530044555664
    5. 'if' → logprob: -3.9358530044555664
    6. '+' → logprob: -4.435853004455566
    7. '   ' → logprob: -4.810853004455566
    8. 'for' → logprob: -4.935853004455566
    9. ';' → logprob: -5.685853004455566
    10. '<|end|>' → logprob: -5.935853004455566

Token 218: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3112959563732147
    2. 's' → logprob: -2.186295986175537
    3. 'for' (adapté à ' for') → logprob: -2.561295986175537
    4. 'sum' → logprob: -3.811295986175537
    5. '   ' → logprob: -4.186295986175537
    6. '       ' → logprob: -4.936295986175537
    7. 'acc' → logprob: -5.311295986175537
    8. 'total' → logprob: -5.436295986175537
    9. 'e' → logprob: -5.561295986175537
    10. 'x' → logprob: -5.686295986175537

Token 219: ' ch' (ID: 549)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.14394213259220123
    2. 'c' → logprob: -2.76894211769104
    3. 'i' → logprob: -3.39394211769104
    4. ' child' → logprob: -4.143942356109619
    5. 'j' → logprob: -4.518942356109619
    6. 'x' → logprob: -5.393942356109619
    7. ' c' → logprob: -6.393942356109619
    8. 'v' → logprob: -6.893942356109619
    9. 'ch' → logprob: -7.518942356109619
    10. ' i' → logprob: -7.768942356109619

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08132580667734146
    2. 'in' → logprob: -2.8313257694244385
    3. 'ild' → logprob: -3.9563257694244385
    4. ' ' → logprob: -10.70632553100586
    5. 'ind' → logprob: -12.70632553100586
    6. 'ld' → logprob: -12.70632553100586
    7. 'd' → logprob: -12.95632553100586
    8. '	in' → logprob: -13.33132553100586
    9. 'i' → logprob: -13.83132553100586
    10. 'ield' → logprob: -14.08132553100586

Token 221: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001041978714056313
    2. ' q' → logprob: -6.876041889190674
    3. 'range' → logprob: -12.001042366027832
    4. ' ' → logprob: -13.751042366027832
    5. '[q' → logprob: -14.001042366027832
    6. '   ' → logprob: -15.001042366027832
    7. 'k' → logprob: -15.126042366027832
    8. ' range' → logprob: -15.126042366027832
    9. '	q' → logprob: -16.376041412353516
    10. '(q' → logprob: -16.376041412353516

Token 222: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.6060808522743173e-05
    2. 'k' → logprob: -10.750025749206543
    3. '[' → logprob: -12.625025749206543
    4. ' [' → logprob: -14.625025749206543
    5. '[ch' → logprob: -15.125025749206543
    6. '(k' → logprob: -15.875025749206543
    7. '[key' → logprob: -16.00002670288086
    8. '[
' → logprob: -16.62502670288086
    9. '{k' → logprob: -16.75002670288086
    10. '```' → logprob: -16.87502670288086

Token 223: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.20154352486133575
    2. ']:
' → logprob: -1.7015435695648193
    3. ']' → logprob: -9.951543807983398
    4. ']:
' → logprob: -10.201543807983398
    5. ']:

' → logprob: -10.451543807983398
    6. ' ]' → logprob: -12.201543807983398
    7. '[' → logprob: -13.451543807983398
    8. ']>' → logprob: -13.451543807983398
    9. '][' → logprob: -13.576543807983398
    10. ']]:
' → logprob: -13.826543807983398

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013885273598134518
    2. '   ' → logprob: -4.763885498046875
    3. '       ' → logprob: -5.388885498046875
    4. 'trans' → logprob: -8.638885498046875
    5. '```' → logprob: -8.888885498046875
    6. ':
' → logprob: -9.263885498046875
    7. '               ' → logprob: -9.763885498046875
    8. '
' → logprob: -10.638885498046875
    9. ' transit' → logprob: -10.763885498046875
    10. ' ' → logprob: -10.763885498046875

Token 225: ' ending' (ID: 22013)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' (adapté à ' ending') → logprob: -0.05154917761683464
    2. 'trans' → logprob: -3.551549196243286
    3. '           ' → logprob: -4.051548957824707
    4. '       ' → logprob: -6.176548957824707
    5. 'primary' → logprob: -6.801548957824707
    6. ' ending' → logprob: -7.801548957824707
    7. '               ' → logprob: -8.176548957824707
    8. '   ' → logprob: -9.176548957824707
    9. ' transit' → logprob: -9.926548957824707
    10. 'if' → logprob: -10.176548957824707

Token 226: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00939076766371727
    2. '[ch' → logprob: -4.759390830993652
    3. '[' → logprob: -8.134390830993652
    4. '+=' → logprob: -8.634390830993652
    5. ' +=' → logprob: -8.759390830993652
    6. '[cnt' → logprob: -9.509390830993652
    7. '[c' → logprob: -10.509390830993652
    8. ' [' → logprob: -11.384390830993652
    9. ']+=' → logprob: -11.759390830993652
    10. '[i' → logprob: -12.009390830993652

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12700717151165009
    2. ']+=' → logprob: -2.127007246017456
    3. ']+' → logprob: -9.627007484436035
    4. ' ]' → logprob: -11.377007484436035
    5. '[' → logprob: -14.377007484436035
    6. '+=' → logprob: -15.002007484436035
    7. '']' → logprob: -15.377007484436035
    8. ']=' → logprob: -16.00200653076172
    9. '```' → logprob: -16.12700653076172
    10. ']]' → logprob: -16.62700653076172

Token 228: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03838341310620308
    2. ' +=' → logprob: -3.2883834838867188
    3. ']+=' → logprob: -9.038383483886719
    4. '=' → logprob: -9.163383483886719
    5. '-=' → logprob: -9.538383483886719
    6. '+=(' → logprob: -11.538383483886719
    7. ' -=' → logprob: -11.913383483886719
    8. '+' → logprob: -12.163383483886719
    9. '[' → logprob: -12.163383483886719
    10. '   ' → logprob: -12.288383483886719

Token 229: ' (' (ID: 350)
  Prédit: 'ending'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.008354286663234234
    2. '(' → logprob: -5.508354187011719
    3. 'primary' → logprob: -6.258354187011719
    4. '1' → logprob: -6.508354187011719
    5. ' ending' → logprob: -7.258354187011719
    6. 'trans' → logprob: -9.633354187011719
    7. '   ' → logprob: -11.258354187011719
    8. '((' → logprob: -11.258354187011719
    9. 'p' → logprob: -11.758354187011719
    10. ' (' → logprob: -12.008354187011719

Token 230: 'ending' (ID: 3258)
  Prédit: 'ending'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ending' → logprob: -0.027507171034812927
    2. '1' → logprob: -4.027507305145264
    3. '(' → logprob: -5.152507305145264
    4. 'primary' → logprob: -6.527507305145264
    5. 'trans' → logprob: -6.902507305145264
    6. ' ending' → logprob: -7.152507305145264
    7. '   ' → logprob: -10.152506828308105
    8. ' ' → logprob: -10.277506828308105
    9. ' (' → logprob: -10.902506828308105
    10. 'p' → logprob: -10.902506828308105

Token 231: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -1.652451464906335e-05
    2. 'ch' → logprob: -11.125016212463379
    3. '[' → logprob: -13.375016212463379
    4. ' ch' → logprob: -16.375017166137695
    5. '[k' → logprob: -17.375017166137695
    6. '(ch' → logprob: -17.625017166137695
    7. 'child' → logprob: -17.875017166137695
    8. '   ' → logprob: -18.000017166137695
    9. '	ch' → logprob: -18.125017166137695
    10. ' [' → logprob: -18.250017166137695

Token 232: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4857628047466278
    2. ']+' → logprob: -0.9857628345489502
    3. ']*' → logprob: -5.110762596130371
    4. ']/' → logprob: -5.485762596130371
    5. ' ]' → logprob: -7.235762596130371
    6. '])' → logprob: -8.110762596130371
    7. ']-' → logprob: -8.860762596130371
    8. '])/' → logprob: -8.985762596130371
    9. '])*' → logprob: -9.985762596130371
    10. ']*(' → logprob: -10.610762596130371

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034948963671922684
    2. 'trans' → logprob: -3.4099490642547607
    3. 'primary' → logprob: -7.784948825836182
    4. ' ' → logprob: -7.784948825836182
    5. ' transit' → logprob: -9.03494930267334
    6. '(trans' → logprob: -9.53494930267334
    7. '(' → logprob: -9.78494930267334
    8. '2' → logprob: -10.53494930267334
    9. '   ' → logprob: -10.65994930267334
    10. '
' → logprob: -10.78494930267334

Token 234: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.6416710019111633
    2. ')' → logprob: -1.3916709423065186
    3. ')*' → logprob: -1.5166709423065186
    4. ' )' → logprob: -5.266671180725098
    5. ')*(' → logprob: -8.641671180725098
    6. ')/(' → logprob: -9.141671180725098
    7. '   ' → logprob: -11.141671180725098
    8. ' ' → logprob: -11.391671180725098
    9. ' ' → logprob: -12.391671180725098
    10. '  ' → logprob: -12.891671180725098

Token 235: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0004988207365386188
    2. ' cnt' → logprob: -7.6254987716674805
    3. 'count' → logprob: -12.75049877166748
    4. '(cnt' → logprob: -13.00049877166748
    5. 'len' → logprob: -13.12549877166748
    6. '   ' → logprob: -13.50049877166748
    7. 'float' → logprob: -14.00049877166748
    8. ' ' → logprob: -14.50049877166748
    9. '  ' → logprob: -15.37549877166748
    10. '       ' → logprob: -15.75049877166748

Token 236: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4171364903450012
    2. '       ' → logprob: -1.6671364307403564
    3. 'return' → logprob: -2.9171364307403564
    4. '<|end|>' → logprob: -3.0421364307403564
    5. ' return' → logprob: -4.7921366691589355
    6. '        
' → logprob: -5.1671366691589355
    7. ' 
' → logprob: -5.4171366691589355
    8. '\n' → logprob: -5.6671366691589355
    9. 'def' → logprob: -5.6671366691589355
    10. '```' → logprob: -5.7921366691589355

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14560118317604065
    2. 'k' → logprob: -2.145601272583008
    3. '   ' → logprob: -4.145601272583008
    4. 'return' → logprob: -6.645601272583008
    5. ' k' → logprob: -6.770601272583008
    6. ' return' → logprob: -10.145601272583008
    7. '           ' → logprob: -10.270601272583008
    8. '```' → logprob: -10.895601272583008
    9. 'import' → logprob: -11.020601272583008
    10. '      ' → logprob: -11.145601272583008

Token 238: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0019298245897516608
    2. '   ' → logprob: -7.251929759979248
    3. 'ending' → logprob: -7.876929759979248
    4. 'primary' → logprob: -8.126930236816406
    5. ' k' → logprob: -8.376930236816406
    6. 'return' → logprob: -8.876930236816406
    7. '       ' → logprob: -9.501930236816406
    8. 'trans' → logprob: -10.251930236816406
    9. '  ' → logprob: -11.376930236816406
    10. 'print' → logprob: -11.501930236816406

Token 239: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.00081487005809322
    2. ' -=' → logprob: -7.500814914703369
    3. '-' → logprob: -8.250814437866211
    4. '=' → logprob: -14.625814437866211
    5. '+=' → logprob: -14.875814437866211
    6. '--' → logprob: -16.75081443786621
    7. '```' → logprob: -18.00081443786621
    8. '–' → logprob: -19.50081443786621
    9. ' -' → logprob: -20.12581443786621
    10. '==' → logprob: -20.25081443786621

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -20.75
    5. '１' → logprob: -21.375
    6. '<|end|>' → logprob: -21.5
    7. '۱' → logprob: -21.875
    8. '१' → logprob: -22.5625
    9. '  ' → logprob: -22.6875
    10. '0' → logprob: -22.8125

Token 241: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' from' (ID: 591)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: '_start' (ID: 10949)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5326095223426819
    2. ' collections' → logprob: -1.532609462738037
    3. 'math' → logprob: -2.032609462738037
    4. ' math' → logprob: -3.782609462738037
    5. ' fractions' → logprob: -3.782609462738037
    6. 'fra' → logprob: -4.407609462738037
    7. 'sys' → logprob: -4.907609462738037
    8. 'heap' → logprob: -8.532609939575195
    9. ' sys' → logprob: -8.657609939575195
    10. 'decimal' → logprob: -9.032609939575195

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2828282415866852
    2. '=' → logprob: -1.4078282117843628
    3. ',' → logprob: -6.657828330993652
    4. '[' → logprob: -9.282828330993652
    5. ' ' → logprob: -9.407828330993652
    6. '_' → logprob: -9.782828330993652
    7. '   ' → logprob: -10.782828330993652
    8. '  ' → logprob: -11.157828330993652
    9. 'import' → logprob: -11.157828330993652
    10. '_time' → logprob: -11.657828330993652

Token 246: ' ending' (ID: 22013)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.6486999988555908
    2. 'primary' → logprob: -1.7736999988555908
    3. ' transit' → logprob: -2.148699998855591
    4. 'ending' → logprob: -2.398699998855591
    5. ' primary' → logprob: -2.773699998855591
    6. ' ending' → logprob: -3.648699998855591
    7. '[' → logprob: -6.023699760437012
    8. 'end' → logprob: -6.148699760437012
    9. '1' → logprob: -6.523699760437012
    10. '(primary' → logprob: -6.773699760437012

Token 247: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0107260188087821
    2. '<|end|>' → logprob: -5.385725975036621
    3. '+' → logprob: -6.260725975036621
    4. '[-' → logprob: -6.885725975036621
    5. '[:]' → logprob: -7.385725975036621
    6. ' +' → logprob: -7.510725975036621
    7. ',' → logprob: -7.760725975036621
    8. '[n' → logprob: -7.760725975036621
    9. '-' → logprob: -8.635725975036621
    10. '[k' → logprob: -9.260725975036621

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.453737710718997e-05
    2. ' ' → logprob: -10.125044822692871
    3. '[' → logprob: -12.500044822692871
    4. '(' → logprob: -15.500044822692871
    5. '   ' → logprob: -15.750044822692871
    6. '  ' → logprob: -16.750043869018555
    7. '-' → logprob: -16.750043869018555
    8. '1' → logprob: -16.875043869018555
    9. '
' → logprob: -16.937543869018555
    10. '<|end|>' → logprob: -17.062543869018555

Token 249: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006237337365746498
    2. ']+' → logprob: -5.131237506866455
    3. ']-' → logprob: -9.506237030029297
    4. ' ]' → logprob: -9.631237030029297
    5. ']*' → logprob: -9.756237030029297
    6. ']>' → logprob: -10.131237030029297
    7. '])' → logprob: -11.381237030029297
    8. ']
' → logprob: -11.506237030029297
    9. '[' → logprob: -11.631237030029297
    10. '-' → logprob: -12.131237030029297

Token 250: ' answer' (ID: 6052)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9722926616668701
    2. 'return' → logprob: -1.0972926616668701
    3. 'print' → logprob: -1.8472926616668701
    4. ' print' → logprob: -2.59729266166687
    5. '   ' → logprob: -3.09729266166687
    6. 'from' → logprob: -5.097292900085449
    7. ' from' → logprob: -5.847292900085449
    8. ' for' → logprob: -8.34729290008545
    9. 'for' → logprob: -8.97229290008545
    10. 'end' → logprob: -9.34729290008545

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890201359987259
    2. '=' → logprob: -2.578902006149292
    3. ',' → logprob: -12.078902244567871
    4. ' ' → logprob: -13.328902244567871
    5. ' =[' → logprob: -13.703902244567871
    6. '=[]' → logprob: -14.203902244567871
    7. ' =)' → logprob: -14.453902244567871
    8. '<|end|>' → logprob: -15.203902244567871
    9. ':' → logprob: -15.328902244567871
    10. '.' → logprob: -15.453902244567871

Token 252: ' ending' (ID: 22013)
  Prédit: 'trans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trans' → logprob: -0.572113037109375
    2. ' transit' → logprob: -1.822113037109375
    3. 'ending' → logprob: -2.197113037109375
    4. 'primary' → logprob: -2.697113037109375
    5. ' primary' → logprob: -3.072113037109375
    6. ' ending' → logprob: -3.572113037109375
    7. '0' → logprob: -4.572113037109375
    8. 'from' → logprob: -6.197113037109375
    9. ' trans' → logprob: -6.197113037109375
    10. '1' → logprob: -6.447113037109375

Token 253: '[' (ID: 58)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.7576513886451721
    2. '[' → logprob: -1.3826513290405273
    3. '[-' → logprob: -1.7576513290405273
    4. '<|end|>' → logprob: -2.3826513290405273
    5. '[k' → logprob: -4.757651329040527
    6. '0' → logprob: -6.382651329040527
    7. '[:]' → logprob: -7.007651329040527
    8. '
' → logprob: -7.132651329040527
    9. ',' → logprob: -7.382651329040527
    10. '.copy' → logprob: -7.632651329040527

Token 254: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5142034292221069
    2. '0' → logprob: -1.014203429222107
    3. '-' → logprob: -3.2642035484313965
    4. ' n' → logprob: -7.1392035484313965
    5. ' -' → logprob: -8.639203071594238
    6. '
' → logprob: -10.264203071594238
    7. ' ' → logprob: -10.389203071594238
    8. '   ' → logprob: -10.764203071594238
    9. '-n' → logprob: -10.764203071594238
    10. '(n' → logprob: -11.514203071594238

Token 255: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007763027213513851
    2. ']
' → logprob: -5.757762908935547
    3. ']+' → logprob: -6.007762908935547
    4. ']*' → logprob: -6.757762908935547
    5. ' ]' → logprob: -8.132762908935547
    6. ']-' → logprob: -8.632762908935547
    7. '-' → logprob: -9.007762908935547
    8. '[' → logprob: -9.007762908935547
    9. '];' → logprob: -9.882762908935547
    10. ']/' → logprob: -10.132762908935547

Token 256: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' foo' (ID: 30551)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9431596994400024
    2. 'return' → logprob: -1.5681596994400024
    3. ' return' → logprob: -2.318159580230713
    4. '+' → logprob: -2.693159580230713
    5. '
' → logprob: -2.943159580230713
    6. '<|end|>' → logprob: -2.943159580230713
    7. ')' → logprob: -3.068159580230713
    8. ' if' → logprob: -3.818159580230713
    9. 'if' → logprob: -4.318159580230713
    10. '	return' → logprob: -5.068159580230713

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.368927001953125
    2. '(' → logprob: -1.868927001953125
    3. ' =' → logprob: -1.868927001953125
    4. '_' → logprob: -1.993927001953125
    5. '()' → logprob: -1.993927001953125
    6. 'r' → logprob: -2.993927001953125
    7. '[' → logprob: -2.993927001953125
    8. 'd' → logprob: -3.743927001953125
    9. ',' → logprob: -4.743927001953125
    10. 't' → logprob: -4.993927001953125

Token 259: ' []
' (ID: 8911)
  Prédit: ' primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primary' → logprob: -0.8754410147666931
    2. 'primary' → logprob: -1.625441074371338
    3. ' ' → logprob: -2.125441074371338
    4. '0' → logprob: -2.250441074371338
    5. ' n' → logprob: -3.625441074371338
    6. ' [' → logprob: -3.625441074371338
    7. '1' → logprob: -3.875441074371338
    8. 'from' → logprob: -4.500441074371338
    9. '[' → logprob: -4.875441074371338
    10. ' []' → logprob: -4.875441074371338

Token 260: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9744026064872742
    2. 'for' → logprob: -0.9744026064872742
    3. '<|end|>' → logprob: -2.224402666091919
    4. 'foo' → logprob: -2.724402666091919
    5. '   ' → logprob: -3.224402666091919
    6. '[' → logprob: -5.47440242767334
    7. ' foo' → logprob: -5.47440242767334
    8. 'def' → logprob: -5.47440242767334
    9. '(foo' → logprob: -5.59940242767334
    10. '[]' → logprob: -5.72440242767334

Token 261: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029427019879221916
    2. ' for' → logprob: -4.2794270515441895
    3. 'foo' → logprob: -4.7794270515441895
    4. 'bar' → logprob: -5.9044270515441895
    5. 'max' → logprob: -6.9044270515441895
    6. '   ' → logprob: -7.1544270515441895
    7. 'i' → logprob: -7.4044270515441895
    8. 'answer' → logprob: -8.654426574707031
    9. 'import' → logprob: -9.404426574707031
    10. 'n' → logprob: -9.529426574707031

Token 262: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6566751003265381
    2. ' i' → logprob: -0.9066751003265381
    3. 'x' → logprob: -3.656675100326538
    4. '_' → logprob: -4.281675338745117
    5. ' x' → logprob: -4.531675338745117
    6. ' _' → logprob: -5.656675338745117
    7. ' child' → logprob: -5.781675338745117
    8. 'child' → logprob: -5.781675338745117
    9. ' line' → logprob: -6.156675338745117
    10. ' idx' → logprob: -6.406675338745117

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07893022149801254
    2. 'in' → logprob: -2.578930139541626
    3. ' ' → logprob: -10.953929901123047
    4. 'n' → logprob: -12.203929901123047
    5. ',' → logprob: -12.578929901123047
    6. '	in' → logprob: -12.703929901123047
    7. 'v' → logprob: -13.078929901123047
    8. '   ' → logprob: -13.453929901123047
    9. ')' → logprob: -13.953929901123047
    10. '  ' → logprob: -13.953929901123047

Token 264: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08466565608978271
    2. ' range' → logprob: -2.5846657752990723
    3. 'q' → logprob: -5.209665775299072
    4. ' q' → logprob: -8.334665298461914
    5. 'foo' → logprob: -10.084665298461914
    6. ' ' → logprob: -12.959665298461914
    7. 'r' → logprob: -13.209665298461914
    8. ' foo' → logprob: -13.459665298461914
    9. '	range' → logprob: -13.959665298461914
    10. '(range' → logprob: -14.147165298461914

Token 265: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003932576219085604
    2. '(' → logprob: -8.00039291381836
    3. ' (' → logprob: -10.25039291381836
    4. '(len' → logprob: -11.37539291381836
    5. ' n' → logprob: -11.75039291381836
    6. 'n' → logprob: -12.87539291381836
    7. '   ' → logprob: -14.75039291381836
    8. ' ' → logprob: -16.25039291381836
    9. '1' → logprob: -17.00039291381836
    10. '	n' → logprob: -17.62539291381836

Token 266: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4742325246334076
    2. '):' → logprob: -0.97423255443573
    3. '):
' → logprob: -9.97423267364502
    4. ' ):' → logprob: -10.59923267364502
    5. ')' → logprob: -10.84923267364502
    6. '+' → logprob: -10.97423267364502
    7. ' ):
' → logprob: -10.97423267364502
    8. '   ' → logprob: -11.34923267364502
    9. '-' → logprob: -11.97423267364502
    10. ':' → logprob: -11.97423267364502

Token 267: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03216300159692764
    2. '       ' → logprob: -3.78216290473938
    3. ' if' → logprob: -4.782163143157959
    4. ' foo' → logprob: -8.5321626663208
    5. '<|end|>' → logprob: -9.5321626663208
    6. ' for' → logprob: -9.7821626663208
    7. '	if' → logprob: -10.2821626663208
    8. '   ' → logprob: -10.4071626663208
    9. ',' → logprob: -10.6571626663208
    10. '	   ' → logprob: -10.9071626663208

Token 268: ' acc' (ID: 1259)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13904570043087006
    2. '       ' → logprob: -3.2640457153320312
    3. 'if' → logprob: -3.3890457153320312
    4. '   ' → logprob: -3.6390457153320312
    5. ' for' → logprob: -3.6390457153320312
    6. 'for' → logprob: -6.639045715332031
    7. '           ' → logprob: -7.014045715332031
    8. ' foo' → logprob: -7.264045715332031
    9. ' cnt' → logprob: -7.514045715332031
    10. ' ' → logprob: -7.639045715332031

Token 269: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13000035285949707
    2. ' =' → logprob: -2.255000352859497
    3. 'um' → logprob: -4.505000114440918
    4. 'umulate' → logprob: -5.630000114440918
    5. 'umul' → logprob: -6.630000114440918
    6. 'umulator' → logprob: -7.880000114440918
    7. '+=' → logprob: -8.630000114440918
    8. 'umulative' → logprob: -8.755000114440918
    9. '   ' → logprob: -9.505000114440918
    10. '=v' → logprob: -10.005000114440918

Token 270: 'ending' (ID: 3258)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08257007598876953
    2. '(' → logprob: -3.5825700759887695
    3. 'primary' → logprob: -3.7075700759887695
    4. '1' → logprob: -4.7075700759887695
    5. 'trans' → logprob: -5.2075700759887695
    6. 'ending' → logprob: -5.2075700759887695
    7. 'v' → logprob: -6.5825700759887695
    8. 'float' → logprob: -6.9575700759887695
    9. 'from' → logprob: -7.7075700759887695
    10. ']' → logprob: -7.9575700759887695

Token 271: '[to' (ID: 139069)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0017322985222563148
    2. 'v' → logprob: -6.376732349395752
    3. '(v' → logprob: -10.876731872558594
    4. '[' → logprob: -12.251731872558594
    5. ',v' → logprob: -12.751731872558594
    6. '][' → logprob: -13.001731872558594
    7. ' v' → logprob: -14.626731872558594
    8. ']' → logprob: -15.001731872558594
    9. '	v' → logprob: -16.001731872558594
    10. ' [' → logprob: -16.376731872558594

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006266608368605375
    2. 'for' → logprob: -5.2562665939331055
    3. ']+' → logprob: -7.0062665939331055
    4. ' for' → logprob: -9.381266593933105
    5. ' ]' → logprob: -10.881266593933105
    6. ']
' → logprob: -11.756266593933105
    7. '+' → logprob: -12.881266593933105
    8. 'v' → logprob: -13.131266593933105
    9. ']]' → logprob: -13.131266593933105
    10. ' ' → logprob: -13.756266593933105

Token 273: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25698322057724
    2. 'for' → logprob: -1.5069832801818848
    3. '+' → logprob: -5.756983280181885
    4. '-' → logprob: -7.131983280181885
    5. ' ' → logprob: -8.131982803344727
    6. '	for' → logprob: -8.506982803344727
    7. ' +' → logprob: -9.131982803344727
    8. '   ' → logprob: -9.131982803344727
    9. ' -' → logprob: -9.631982803344727
    10. '          ' → logprob: -10.006982803344727

Token 274: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.018150178715586662
    2. ' to' → logprob: -4.018150329589844
    3. '(to' → logprob: -16.393150329589844
    4. ' ' → logprob: -17.018150329589844
    5. '	to' → logprob: -17.268150329589844
    6. ' ' → logprob: -17.893150329589844
    7. '[to' → logprob: -17.893150329589844
    8. ',to' → logprob: -18.268150329589844
    9. ' in' → logprob: -18.393150329589844
    10. '
' → logprob: -19.393150329589844

Token 275: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4295174181461334
    2. ' in' → logprob: -1.054517388343811
    3. 'q' → logprob: -7.3045172691345215
    4. ' q' → logprob: -8.92951774597168
    5. ' ' → logprob: -12.55451774597168
    6. 'to' → logprob: -12.55451774597168
    7. 'v' → logprob: -13.42951774597168
    8. 'on' → logprob: -14.55451774597168
    9. 'In' → logprob: -15.17951774597168
    10. 'inq' → logprob: -15.67951774597168

Token 276: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.029760675504803658
    2. ' q' → logprob: -3.5297605991363525
    3. '   ' → logprob: -12.029760360717773
    4. 'range' → logprob: -13.654760360717773
    5. ' range' → logprob: -14.154760360717773
    6. ' ' → logprob: -14.154760360717773
    7. '	q' → logprob: -14.529760360717773
    8. '  ' → logprob: -15.279760360717773
    9. '[q' → logprob: -15.529760360717773
    10. '       ' → logprob: -16.029760360717773

Token 277: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.4855663721391466e-05
    2. 'v' → logprob: -11.125015258789062
    3. ']' → logprob: -16.375015258789062
    4. '(v' → logprob: -17.875015258789062
    5. '[q' → logprob: -18.500015258789062
    6. '[' → logprob: -18.625015258789062
    7. '][' → logprob: -19.250015258789062
    8. '	v' → logprob: -19.250015258789062
    9. ' v' → logprob: -19.625015258789062
    10. '])' → logprob: -19.875015258789062

Token 278: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04397811368107796
    2. ']]' → logprob: -3.168978214263916
    3. ']]
' → logprob: -7.668978214263916
    4. ']
' → logprob: -8.543977737426758
    5. ')]' → logprob: -8.793977737426758
    6. '}]' → logprob: -10.418977737426758
    7. ' ]' → logprob: -10.668977737426758
    8. ']>' → logprob: -10.668977737426758
    9. ']+' → logprob: -10.793977737426758
    10. ']}' → logprob: -11.168977737426758

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19252166152000427
    2. '
' → logprob: -2.442521572113037
    3. '<|end|>' → logprob: -3.317521572113037
    4. ' if' → logprob: -3.442521572113037
    5. ',' → logprob: -5.192521572113037
    6. '+' → logprob: -5.317521572113037
    7. ' +' → logprob: -6.192521572113037
    8. '[' → logprob: -6.317521572113037
    9. ')' → logprob: -6.817521572113037
    10. ' ' → logprob: -6.942521572113037

Token 280: ' res' (ID: 694)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1625221073627472
    2. ' acc' → logprob: -2.787522077560425
    3. ' if' → logprob: -2.787522077560425
    4. ' for' → logprob: -5.162522315979004
    5. 'acc' → logprob: -5.537522315979004
    6. ' foo' → logprob: -5.787522315979004
    7. ' max' → logprob: -6.037522315979004
    8. '   ' → logprob: -6.037522315979004
    9. 'if' → logprob: -6.162522315979004
    10. '+' → logprob: -6.662522315979004

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.458393394947052
    2. '=' → logprob: -1.0833933353424072
    3. '=[]' → logprob: -3.9583933353424072
    4. '=[' → logprob: -4.958393573760986
    5. '=max' → logprob: -6.833393573760986
    6. '=len' → logprob: -7.333393573760986
    7. '=sum' → logprob: -7.708393573760986
    8. ' =[' → logprob: -7.708393573760986
    9. '=res' → logprob: -8.583393096923828
    10. '=[]
' → logprob: -8.958393096923828

Token 282: ' ((' (ID: 3536)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.5528068542480469
    2. 'ending' → logprob: -1.6778068542480469
    3. 'max' → logprob: -2.177806854248047
    4. '0' → logprob: -3.052806854248047
    5. ' primary' → logprob: -3.927806854248047
    6. '(' → logprob: -4.552806854248047
    7. ' max' → logprob: -4.802806854248047
    8. 'from' → logprob: -4.927806854248047
    9. 'sum' → logprob: -5.177806854248047
    10. ' ending' → logprob: -5.177806854248047

Token 283: 'trans' (ID: 2623)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.3925764262676239
    2. 'ending' → logprob: -1.8925764560699463
    3. 'max' → logprob: -2.5175764560699463
    4. 'sum' → logprob: -3.2675764560699463
    5. '1' → logprob: -3.7675764560699463
    6. 'trans' → logprob: -4.642576217651367
    7. 'answer' → logprob: -4.892576217651367
    8. 'acc' → logprob: -5.267576217651367
    9. '(' → logprob: -6.142576217651367
    10. ' primary' → logprob: -6.267576217651367

Token 284: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -6.630610641877865e-06
    2. '[it' → logprob: -12.625006675720215
    3. '[' → logprob: -13.750006675720215
    4. ' it' → logprob: -14.125006675720215
    5. 'sit' → logprob: -14.500006675720215
    6. '
' → logprob: -15.500006675720215
    7. 'it's' → logprob: -15.875006675720215
    8. 'at' → logprob: -16.0000057220459
    9. 'ит' → logprob: -16.1250057220459
    10. '[i' → logprob: -16.3750057220459

Token 285: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.15310683415737e-05
    2. ')[' → logprob: -11.875021934509277
    3. ' [' → logprob: -12.000021934509277
    4. '[' → logprob: -12.125021934509277
    5. ')' → logprob: -14.125021934509277
    6. 'v' → logprob: -15.250021934509277
    7. ')v' → logprob: -15.250021934509277
    8. '[u' → logprob: -15.375021934509277
    9. '[q' → logprob: -15.500021934509277
    10. '   ' → logprob: -16.12502098083496

Token 286: ']+' (ID: 15344)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.13469409942626953
    2. '+' → logprob: -2.2596940994262695
    3. ' +' → logprob: -5.0096940994262695
    4. '-' → logprob: -5.2596940994262695
    5. ' -' → logprob: -5.6346940994262695
    6. ')' → logprob: -6.6346940994262695
    7. ')+' → logprob: -6.6346940994262695
    8. ']+' → logprob: -7.0096940994262695
    9. '[' → logprob: -7.3846940994262695
    10. '+[' → logprob: -7.6346940994262695

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02861759066581726
    2. 'primary' → logprob: -3.6536176204681396
    3. ' ' → logprob: -7.7786173820495605
    4. 'foo' → logprob: -8.028617858886719
    5. 'p' → logprob: -8.153617858886719
    6. ' primary' → logprob: -8.403617858886719
    7. 'len' → logprob: -8.653617858886719
    8. '0' → logprob: -8.653617858886719
    9. 'answer' → logprob: -9.153617858886719
    10. 'max' → logprob: -9.278617858886719

Token 288: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22817599773406982
    2. ')-' → logprob: -2.6031761169433594
    3. ')*' → logprob: -2.8531761169433594
    4. ' -' → logprob: -3.6031761169433594
    5. '-' → logprob: -3.8531761169433594
    6. ' )' → logprob: -4.228176116943359
    7. ')+' → logprob: -5.978176116943359
    8. '+' → logprob: -6.353176116943359
    9. ')**' → logprob: -6.728176116943359
    10. ')/' → logprob: -6.853176116943359

Token 289: 'len' (ID: 3303)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.628722071647644
    2. 'primary' → logprob: -1.128722071647644
    3. ' p' → logprob: -3.1287221908569336
    4. ' primary' → logprob: -3.3787221908569336
    5. 'acc' → logprob: -4.503722190856934
    6. 'len' → logprob: -4.628722190856934
    7. 'foo' → logprob: -4.753722190856934
    8. '(' → logprob: -5.253722190856934
    9. ' -' → logprob: -5.503722190856934
    10. '-' → logprob: -5.503722190856934

Token 290: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.4308118522167206
    2. '(acc' → logprob: -1.055811882019043
    3. 'acc' → logprob: -6.930811882019043
    4. '(' → logprob: -7.805811882019043
    5. 'q' → logprob: -7.930811882019043
    6. ' (' → logprob: -8.055811882019043
    7. '(
' → logprob: -11.430811882019043
    8. ' acc' → logprob: -11.805811882019043
    9. '(ac' → logprob: -12.555811882019043
    10. ' ' → logprob: -12.555811882019043

Token 291: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.08384909480810165
    2. '[q' → logprob: -2.7088491916656494
    3. '(v' → logprob: -4.33384895324707
    4. '(q' → logprob: -7.70884895324707
    5. '[' → logprob: -9.45884895324707
    6. ')' → logprob: -9.58384895324707
    7. 'q' → logprob: -9.95884895324707
    8. ' [' → logprob: -10.70884895324707
    9. ')[' → logprob: -11.83384895324707
    10. ' (' → logprob: -12.08384895324707

Token 292: '])+' (ID: 119485)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3779054582118988
    2. ')])' → logprob: -1.8779054880142212
    3. ')' → logprob: -2.1279053688049316
    4. ']))' → logprob: -4.252905368804932
    5. ')]' → logprob: -4.627905368804932
    6. '])-' → logprob: -5.127905368804932
    7. '))' → logprob: -5.627905368804932
    8. '])+' → logprob: -6.127905368804932
    9. ']' → logprob: -6.377905368804932
    10. '[v' → logprob: -6.627905368804932

Token 293: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.38498735427856445
    2. '-' → logprob: -1.8849873542785645
    3. '-s' → logprob: -2.6349873542785645
    4. ' sum' → logprob: -3.6349873542785645
    5. 'max' → logprob: -4.1349873542785645
    6. ' -' → logprob: -4.2599873542785645
    7. 'from' → logprob: -4.6349873542785645
    8. 'answer' → logprob: -4.7599873542785645
    9. '1' → logprob: -5.3849873542785645
    10. '(-' → logprob: -6.2599873542785645

Token 294: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0001830410328693688
    2. 'acc' → logprob: -8.75018310546875
    3. '(' → logprob: -11.00018310546875
    4. ' (' → logprob: -12.87518310546875
    5. '(
' → logprob: -12.87518310546875
    6. '((' → logprob: -14.00018310546875
    7. '([' → logprob: -14.12518310546875
    8. '(ac' → logprob: -14.62518310546875
    9. ' acc' → logprob: -15.50018310546875
    10. '	acc' → logprob: -16.00018310546875

Token 295: '))*' (ID: 81502)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6317076086997986
    2. ')/' → logprob: -1.1317076683044434
    3. ' )' → logprob: -2.5067076683044434
    4. '-' → logprob: -3.7567076683044434
    5. ' -' → logprob: -4.506707668304443
    6. ')-' → logprob: -4.506707668304443
    7. ')/(' → logprob: -4.881707668304443
    8. ')**' → logprob: -5.131707668304443
    9. '))/' → logprob: -7.131707668304443
    10. ')-(' → logprob: -7.506707668304443

Token 296: 'primary' (ID: 11289)
  Prédit: 'primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.47732722759246826
    2. '(' → logprob: -1.7273272275924683
    3. '0' → logprob: -2.852327346801758
    4. '-' → logprob: -3.727327346801758
    5. ' primary' → logprob: -3.977327346801758
    6. '(-' → logprob: -4.227327346801758
    7. '(primary' → logprob: -4.227327346801758
    8. 'len' → logprob: -4.477327346801758
    9. '1' → logprob: -4.727327346801758
    10. ' ' → logprob: -4.852327346801758

Token 297: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. 'v' → logprob: -15.75
    4. '(v' → logprob: -18.375
    5. '[q' → logprob: -18.625
    6. ' [' → logprob: -18.625
    7. '[val' → logprob: -19.25
    8. '[u' → logprob: -20.625
    9. '```' → logprob: -21.0
    10. '	v' → logprob: -21.5

Token 298: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1021580696105957
    2. ' -' → logprob: -3.1021580696105957
    3. '-' → logprob: -3.8521580696105957
    4. ' )' → logprob: -4.227158069610596
    5. ')/' → logprob: -4.977158069610596
    6. ')-' → logprob: -5.227158069610596
    7. ')
' → logprob: -7.102158069610596
    8. ')/(' → logprob: -7.102158069610596
    9. ')-(' → logprob: -7.352158069610596
    10. ']' → logprob: -8.227157592773438

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06572268903255463
    2. '
' → logprob: -3.065722703933716
    3. '<|end|>' → logprob: -4.315722465515137
    4. ',' → logprob: -6.815722465515137
    5. ' if' → logprob: -7.065722465515137
    6. '+' → logprob: -7.815722465515137
    7. '        
' → logprob: -8.315722465515137
    8. ' for' → logprob: -8.690722465515137
    9. '<|end|>' → logprob: -8.690722465515137
    10. '   ' → logprob: -9.440722465515137

Token 300: ' foo' (ID: 30551)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036786485463380814
    2. '   ' → logprob: -4.4117865562438965
    3. 'foo' (adapté à ' foo') → logprob: -4.5367865562438965
    4. ' foo' → logprob: -4.9117865562438965
    5. ' if' → logprob: -5.2867865562438965
    6. 'if' → logprob: -8.036786079406738
    7. ' for' → logprob: -9.661786079406738
    8. ' answer' → logprob: -9.911786079406738
    9. ' ' → logprob: -9.911786079406738
    10. '+' → logprob: -10.036786079406738

Token 301: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0058409953489899635
    2. '=' → logprob: -5.75584077835083
    3. '.' → logprob: -6.13084077835083
    4. ' =' → logprob: -8.255841255187988
    5. '.extend' → logprob: -9.630841255187988
    6. '+=' → logprob: -9.755841255187988
    7. '=[]' → logprob: -10.880841255187988
    8. 'append' → logprob: -10.880841255187988
    9. ' .' → logprob: -11.005841255187988
    10. ' +=' → logprob: -11.505841255187988

Token 302: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.512301504611969
    2. ' [' → logprob: -1.0123014450073242
    3. '[v' → logprob: -3.762301445007324
    4. '[val' → logprob: -5.387301445007324
    5. '[value' → logprob: -6.137301445007324
    6. '[result' → logprob: -6.512301445007324
    7. '[(' → logprob: -6.637301445007324
    8. '[int' → logprob: -7.512301445007324
    9. '[f' → logprob: -7.512301445007324
    10. '[arr' → logprob: -7.762301445007324

Token 303: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11804629862308502
    2. '(res' → logprob: -2.368046283721924
    3. ' res' → logprob: -4.243046283721924
    4. ' (' → logprob: -6.368046283721924
    5. '(' → logprob: -6.993046283721924
    6. '(v' → logprob: -9.368046760559082
    7. '   ' → logprob: -9.618046760559082
    8. 'max' → logprob: -9.743046760559082
    9. 'v' → logprob: -9.868046760559082
    10. '(int' → logprob: -9.993046760559082

Token 304: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016991066513583064
    2. ' ]' → logprob: -7.251698970794678
    3. ']
' → logprob: -7.626698970794678
    4. '   ' → logprob: -8.876699447631836
    5. ')]' → logprob: -9.251699447631836
    6. '       ' → logprob: -9.376699447631836
    7. '()]' → logprob: -9.626699447631836
    8. ')' → logprob: -9.751699447631836
    9. '<|end|>' → logprob: -11.001699447631836
    10. '']' → logprob: -12.001699447631836

Token 305: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2696407735347748
    2. '<|end|>' → logprob: -1.5196408033370972
    3. '[' → logprob: -5.894640922546387
    4. ')' → logprob: -5.894640922546387
    5. '   ' → logprob: -6.144640922546387
    6. '\n' → logprob: -6.644640922546387
    7. '+' → logprob: -7.269640922546387
    8. '[
' → logprob: -7.519640922546387
    9. '<|end|>' → logprob: -7.519640922546387
    10. ' if' → logprob: -7.644640922546387

Token 306: ' for' (ID: 395)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.13000506162643433
    2. '   ' → logprob: -3.130005121231079
    3. 'max' → logprob: -3.380005121231079
    4. 'print' → logprob: -4.0050048828125
    5. ' foo' → logprob: -5.2550048828125
    6. '
' → logprob: -5.8800048828125
    7. 'import' → logprob: -6.1300048828125
    8. 'best' → logprob: -6.5050048828125
    9. ' max' → logprob: -6.5050048828125
    10. ')' → logprob: -6.7550048828125

Token 307: ' i' (ID: 575)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6399638652801514
    2. ' i' → logprob: -1.1399638652801514
    3. 'v' → logprob: -2.8899638652801514
    4. 'i' → logprob: -3.6399638652801514
    5. ' x' → logprob: -3.7649638652801514
    6. ' val' → logprob: -4.5149641036987305
    7. ' idx' → logprob: -5.0149641036987305
    8. ' res' → logprob: -5.2649641036987305
    9. 'x' → logprob: -5.7649641036987305
    10. ' ans' → logprob: -6.0149641036987305

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011380957439541817
    2. 'in' → logprob: -4.511381149291992
    3. ' ' → logprob: -8.136381149291992
    4. ',' → logprob: -10.386381149291992
    5. '  ' → logprob: -13.136381149291992
    6. ' ,' → logprob: -13.636381149291992
    7. '(' → logprob: -13.636381149291992
    8. 'n' → logprob: -13.886381149291992
    9. '   ' → logprob: -14.136381149291992
    10. '_' → logprob: -14.511381149291992

Token 309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1797981858253479
    2. ' range' → logprob: -1.8047981262207031
    3. 'foo' → logprob: -10.429798126220703
    4. ' ' → logprob: -11.429798126220703
    5. ' foo' → logprob: -11.929798126220703
    6. '  ' → logprob: -13.554798126220703
    7. 'n' → logprob: -13.679798126220703
    8. '(range' → logprob: -14.054798126220703
    9. '   ' → logprob: -14.804798126220703
    10. '(' → logprob: -15.304798126220703

Token 310: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.020084679126739502
    2. '(len' → logprob: -4.145084857940674
    3. '(' → logprob: -5.770084857940674
    4. ' (' → logprob: -7.020084857940674
    5. 'n' → logprob: -11.395084381103516
    6. 'len' → logprob: -11.520084381103516
    7. '   ' → logprob: -12.770084381103516
    8. ' n' → logprob: -13.145084381103516
    9. '1' → logprob: -13.520084381103516
    10. ' len' → logprob: -14.145084381103516

Token 311: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06313049048185349
    2. '):' → logprob: -2.8131303787231445
    3. ' ):
' → logprob: -7.1881303787231445
    4. ' ):' → logprob: -8.563130378723145
    5. '+' → logprob: -9.438130378723145
    6. '):
' → logprob: -9.688130378723145
    7. ')' → logprob: -10.313130378723145
    8. '   ' → logprob: -11.688130378723145
    9. ':' → logprob: -11.938130378723145
    10. '-' → logprob: -11.938130378723145

Token 312: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8203179836273193
    2. '       ' → logprob: -1.4453179836273193
    3. ' if' → logprob: -1.4453179836273193
    4. ' line' → logprob: -2.8203179836273193
    5. 'if' → logprob: -4.820318222045898
    6. 'line' → logprob: -5.320318222045898
    7. ' edges' → logprob: -5.445318222045898
    8. ' print' → logprob: -5.695318222045898
    9. ' ind' → logprob: -6.820318222045898
    10. ' x' → logprob: -6.945318222045898

Token 313: ' src' (ID: 4537)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.28616273403167725
    2. 'line' → logprob: -1.9111627340316772
    3. 'a' → logprob: -3.161162853240967
    4. 'print' → logprob: -3.286162853240967
    5. '   ' → logprob: -4.911162853240967
    6. 'from' → logprob: -5.786162853240967
    7. 'if' → logprob: -5.911162853240967
    8. '(u' → logprob: -6.161162853240967
    9. 'x' → logprob: -6.536162853240967
    10. 'edge' → logprob: -6.786162853240967

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030356520786881447
    2. ' =' → logprob: -3.9053564071655273
    3. '=' → logprob: -4.905356407165527
    4. ' ,' → logprob: -6.530356407165527
    5. ',line' → logprob: -8.155356407165527
    6. 'src' → logprob: -9.030356407165527
    7. '_,' → logprob: -9.280356407165527
    8. '_src' → logprob: -9.280356407165527
    9. '=line' → logprob: -10.155356407165527
    10. ']' → logprob: -10.280356407165527

Token 315: ' dst' (ID: 23480)
  Prédit: 'dst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.13085956871509552
    2. 'dest' → logprob: -2.380859613418579
    3. ' dst' → logprob: -3.630859613418579
    4. ' tgt' → logprob: -6.380859375
    5. 't' → logprob: -6.505859375
    6. ' dest' → logprob: -8.005859375
    7. ' trg' → logprob: -9.755859375
    8. 'src' → logprob: -10.880859375
    9. 'to' → logprob: -10.880859375
    10. ' =' → logprob: -11.005859375

Token 316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16049200296401978
    2. ' =' → logprob: -1.910491943359375
    3. ',' → logprob: -8.285491943359375
    4. '=line' → logprob: -11.910491943359375
    5. '   ' → logprob: -13.410491943359375
    6. '       ' → logprob: -13.410491943359375
    7. ' ' → logprob: -13.410491943359375
    8. '=
' → logprob: -13.910491943359375
    9. ' ,' → logprob: -14.410491943359375
    10. '    ' → logprob: -14.660491943359375

Token 317: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.10052323341369629
    2. ' edges' → logprob: -2.3505232334136963
    3. '(edges' → logprob: -8.100522994995117
    4. '   ' → logprob: -11.475522994995117
    5. 'edge' → logprob: -13.725522994995117
    6. '       ' → logprob: -14.100522994995117
    7. '.edges' → logprob: -14.850522994995117
    8. '[' → logprob: -15.600522994995117
    9. '    ' → logprob: -15.850522994995117
    10. '_edges' → logprob: -15.975522994995117

Token 318: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. '[s' → logprob: -12.750009536743164
    3. '[' → logprob: -13.750009536743164
    4. '][' → logprob: -13.875009536743164
    5. ' [' → logprob: -14.000009536743164
    6. '```' → logprob: -14.250009536743164
    7. '   ' → logprob: -14.625009536743164
    8. '[I' → logprob: -14.875009536743164
    9. 'i' → logprob: -15.125009536743164
    10. ')[' → logprob: -15.250009536743164

Token 319: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01325987372547388
    2. '[' → logprob: -5.1382598876953125
    3. '][' → logprob: -5.5132598876953125
    4. ']=' → logprob: -6.2632598876953125
    5. ']
' → logprob: -8.013259887695312
    6. '-' → logprob: -8.263259887695312
    7. '   ' → logprob: -8.513259887695312
    8. ']-' → logprob: -8.888259887695312
    9. '       ' → logprob: -9.013259887695312
    10. ']==' → logprob: -9.263259887695312

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5927204489707947
    2. '<|end|>' → logprob: -1.2177205085754395
    3. '
' → logprob: -2.5927205085754395
    4. ',' → logprob: -3.5927205085754395
    5. ' if' → logprob: -4.3427205085754395
    6. '+' → logprob: -4.8427205085754395
    7. '        
' → logprob: -5.0927205085754395
    8. '[' → logprob: -5.2177205085754395
    9. ' =' → logprob: -5.9677205085754395
    10. ':' → logprob: -6.2177205085754395

Token 321: ' idx' (ID: 14016)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16207951307296753
    2. '       ' → logprob: -2.9120795726776123
    3. ' res' → logprob: -3.9120795726776123
    4. 'if' → logprob: -4.162079334259033
    5. ' src' → logprob: -4.287079334259033
    6. ' primary' → logprob: -4.662079334259033
    7. ' foo' → logprob: -5.037079334259033
    8. '+' → logprob: -5.787079334259033
    9. 'src' → logprob: -5.787079334259033
    10. ' print' → logprob: -5.787079334259033

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22567729651927948
    2. '=' → logprob: -1.600677251815796
    3. ',' → logprob: -9.725677490234375
    4. ' ' → logprob: -9.975677490234375
    5. '_src' → logprob: -9.975677490234375
    6. 'src' → logprob: -10.350677490234375
    7. 's' → logprob: -10.850677490234375
    8. '   ' → logprob: -11.100677490234375
    9. '1' → logprob: -11.975677490234375
    10. '  ' → logprob: -12.475677490234375

Token 323: ' src' (ID: 4537)
  Prédit: 'src'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'src' → logprob: -0.003459540894255042
    2. ' src' → logprob: -6.253459453582764
    3. 'dst' → logprob: -6.628459453582764
    4. 'edges' → logprob: -9.003459930419922
    5. '[src' → logprob: -10.378459930419922
    6. ' dst' → logprob: -10.628459930419922
    7. ' edges' → logprob: -11.628459930419922
    8. '0' → logprob: -12.878459930419922
    9. '(src' → logprob: -12.878459930419922
    10. 'source' → logprob: -13.003459930419922

Token 324: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01836438663303852
    2. ' -' → logprob: -4.643364429473877
    3. '[' → logprob: -4.768364429473877
    4. '1' → logprob: -10.143363952636719
    5. 'def' → logprob: -11.893363952636719
    6. '```' → logprob: -12.143363952636719
    7. '=' → logprob: -12.518363952636719
    8. '<|end|>' → logprob: -12.768363952636719
    9. '       ' → logprob: -13.018363952636719
    10. ' ' → logprob: -13.143363952636719

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9054008084349334e-05
    2. ' ' → logprob: -10.250039100646973
    3. '2' → logprob: -12.875039100646973
    4. '```' → logprob: -14.250039100646973
    5. '0' → logprob: -15.562539100646973
    6. '   ' → logprob: -16.312538146972656
    7. '`' → logprob: -17.187538146972656
    8. '>' → logprob: -17.375038146972656
    9. '
' → logprob: -17.437538146972656
    10. 'src' → logprob: -17.687538146972656

Token 326: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010353496298193932
    2. ',' → logprob: -5.7603535652160645
    3. 'dst' → logprob: -6.0103535652160645
    4. ';' → logprob: -6.2603535652160645
    5. '
' → logprob: -7.6353535652160645
    6. ' if' → logprob: -7.7603535652160645
    7. ' dst' → logprob: -8.010353088378906
    8. 'if' → logprob: -8.385353088378906
    9. '   ' → logprob: -8.635353088378906
    10. '=' → logprob: -9.135353088378906

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07837562263011932
    2. '
' → logprob: -3.4533755779266357
    3. 'dst' → logprob: -4.703375816345215
    4. ';' → logprob: -4.828375816345215
    5. ' if' → logprob: -5.203375816345215
    6. '<|end|>' → logprob: -5.578375816345215
    7. ',' → logprob: -5.703375816345215
    8. '+' → logprob: -5.703375816345215
    9. ' dst' → logprob: -5.828375816345215
    10. '	dst' → logprob: -6.078375816345215

Token 328: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5356065034866333
    2. 'if' (adapté à ' if') → logprob: -1.9106065034866333
    3. ' if' → logprob: -1.9106065034866333
    4. 'old' → logprob: -4.035606384277344
    5. 'dst' → logprob: -4.535606384277344
    6. 'child' → logprob: -4.660606384277344
    7. 'foo' → logprob: -4.660606384277344
    8. 'dest' → logprob: -4.910606384277344
    9. '   ' → logprob: -5.035606384277344
    10. 'prev' → logprob: -5.535606384277344

Token 329: ' q' (ID: 2335)
  Prédit: ' primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primary' → logprob: -0.9824026226997375
    2. 'primary' → logprob: -1.1074025630950928
    3. ' q' → logprob: -2.6074025630950928
    4. 'q' → logprob: -2.8574025630950928
    5. ' transit' → logprob: -3.2324025630950928
    6. 'len' → logprob: -3.6074025630950928
    7. ' dst' → logprob: -3.6074025630950928
    8. 'dst' → logprob: -3.8574025630950928
    9. 'trans' → logprob: -4.357402801513672
    10. ' len' → logprob: -4.482402801513672

Token 330: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -9.29340603761375e-05
    2. 'idx' → logprob: -9.500092506408691
    3. '[src' → logprob: -11.750092506408691
    4. '[' → logprob: -12.000092506408691
    5. ' idx' → logprob: -13.125092506408691
    6. '[index' → logprob: -13.875092506408691
    7. '	idx' → logprob: -14.750092506408691
    8. '[q' → logprob: -16.375093460083008
    9. '(idx' → logprob: -16.375093460083008
    10. '[i' → logprob: -16.500093460083008

Token 331: ']:
' (ID: 22152)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.42422565817832947
    2. '].' → logprob: -1.6742256879806519
    3. '[' → logprob: -3.1742255687713623
    4. '][' → logprob: -3.5492255687713623
    5. ']' → logprob: -3.7992255687713623
    6. ']==' → logprob: -3.9242255687713623
    7. 'idx' → logprob: -3.9242255687713623
    8. '.count' → logprob: -4.549225807189941
    9. '==' → logprob: -6.299225807189941
    10. '[q' → logprob: -6.549225807189941

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6006685495376587
    2. ' and' → logprob: -1.7256685495376587
    3. ':' → logprob: -2.100668430328369
    4. '[' → logprob: -2.350668430328369
    5. '==' → logprob: -4.350668430328369
    6. ':
' → logprob: -4.350668430328369
    7. 'and' → logprob: -4.725668430328369
    8. '       ' → logprob: -5.225668430328369
    9. ' if' → logprob: -5.475668430328369
    10. '<|end|>' → logprob: -5.975668430328369

Token 333: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8195939660072327
    2. 'old' → logprob: -1.694593906402588
    3. '               ' → logprob: -1.944593906402588
    4. ' old' → logprob: -3.319593906402588
    5. 'val' → logprob: -3.444593906402588
    6. 'best' → logprob: -3.944593906402588
    7. '   ' → logprob: -4.444593906402588
    8. 'res' → logprob: -4.569593906402588
    9. 'max' → logprob: -4.694593906402588
    10. 'foo' → logprob: -4.819593906402588

Token 334: 'd' (ID: 67)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -1.0230828523635864
    2. 'degree' → logprob: -1.0230828523635864
    3. '[idx' → logprob: -1.8980828523635864
    4. '=' → logprob: -2.523082733154297
    5. '_degree' → logprob: -4.398082733154297
    6. '[' → logprob: -4.898082733154297
    7. ' =' → logprob: -5.148082733154297
    8. 'deg' → logprob: -5.148082733154297
    9. '   ' → logprob: -5.648082733154297
    10. 'idx' → logprob: -5.648082733154297

Token 335: '=len' (ID: 114011)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.2964065968990326
    2. 'eg' → logprob: -1.546406626701355
    3. 'egree' → logprob: -3.1714065074920654
    4. '[' → logprob: -6.7964067459106445
    5. '=' → logprob: -9.421406745910645
    6. 'gree' → logprob: -9.796406745910645
    7. 'ex' → logprob: -9.921406745910645
    8. 'idx' → logprob: -9.921406745910645
    9. '(idx' → logprob: -9.921406745910645
    10. 'gr' → logprob: -10.421406745910645

Token 336: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -3.023293538717553e-05
    2. '(' → logprob: -11.500030517578125
    3. '(idx' → logprob: -11.500030517578125
    4. 'q' → logprob: -12.000030517578125
    5. '[q' → logprob: -13.125030517578125
    6. ' (' → logprob: -13.375030517578125
    7. ' q' → logprob: -16.875030517578125
    8. '(
' → logprob: -17.000030517578125
    9. '	q' → logprob: -18.500030517578125
    10. '(x' → logprob: -18.750030517578125

Token 337: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.3557529857498594e-05
    2. '(idx' → logprob: -11.50002384185791
    3. '[q' → logprob: -11.87502384185791
    4. ')[' → logprob: -13.25002384185791
    5. ' idx' → logprob: -13.25002384185791
    6. 'idx' → logprob: -13.50002384185791
    7. '[index' → logprob: -14.87502384185791
    8. ')' → logprob: -15.00002384185791
    9. ' [' → logprob: -15.00002384185791
    10. '[' → logprob: -15.50002384185791

Token 338: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2875843048095703
    2. ')' → logprob: -1.6625843048095703
    3. '[idx' → logprob: -3.2875843048095703
    4. ')]' → logprob: -5.03758430480957
    5. '])
' → logprob: -5.16258430480957
    6. ')
' → logprob: -5.16258430480957
    7. ')])' → logprob: -5.66258430480957
    8. '[' → logprob: -7.78758430480957
    9. ')>' → logprob: -8.78758430480957
    10. '           ' → logprob: -9.28758430480957

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2448682188987732
    2. '
' → logprob: -1.869868278503418
    3. '       ' → logprob: -3.494868278503418
    4. '+' → logprob: -4.744868278503418
    5. '<|end|>' → logprob: -5.244868278503418
    6. ' if' → logprob: -5.619868278503418
    7. ',' → logprob: -5.994868278503418
    8. ' /' → logprob: -6.119868278503418
    9. ' +' → logprob: -6.244868278503418
    10. '```' → logprob: -6.744868278503418

Token 340: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6088242530822754
    2. 'val' → logprob: -1.2338242530822754
    3. 'new' → logprob: -3.7338242530822754
    4. 'temp' → logprob: -4.108824253082275
    5. 'prob' → logprob: -4.358824253082275
    6. 'change' → logprob: -4.358824253082275
    7. 'old' → logprob: -4.358824253082275
    8. 'tmp' → logprob: -4.608824253082275
    9. 'best' → logprob: -4.608824253082275
    10. 'res' → logprob: -5.233824253082275

Token 341: '(out' (ID: 20090)
  Prédit: ' out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' out' → logprob: -0.973200798034668
    2. 'out' → logprob: -1.473200798034668
    3. ' primary' → logprob: -1.848200798034668
    4. 'primary' → logprob: -2.473200798034668
    5. ' q' → logprob: -3.473200798034668
    6. ' foo' → logprob: -4.223200798034668
    7. 'q' → logprob: -4.348200798034668
    8. ' (' → logprob: -4.598200798034668
    9. '           ' → logprob: -5.098200798034668
    10. 'foo' → logprob: -5.098200798034668

Token 342: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02907368913292885
    2. 'out' → logprob: -4.029073715209961
    3. ' out' → logprob: -5.404073715209961
    4. '[out' → logprob: -5.529073715209961
    5. 'q' → logprob: -7.029073715209961
    6. '[idx' → logprob: -7.779073715209961
    7. '[' → logprob: -8.029073715209961
    8. '           ' → logprob: -8.904073715209961
    9. '_d' → logprob: -9.404073715209961
    10. ')' → logprob: -9.904073715209961

Token 343: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4790411591529846
    2. ' >' → logprob: -0.9790411591529846
    3. ')>' → logprob: -5.72904109954834
    4. ')' → logprob: -7.22904109954834
    5. '[' → logprob: -7.97904109954834
    6. '==' → logprob: -8.97904109954834
    7. '()>' → logprob: -9.35404109954834
    8. ' ==' → logprob: -9.35404109954834
    9. '[idx' → logprob: -9.60404109954834
    10. ' !=' → logprob: -9.97904109954834

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002222516923211515
    2. '0' → logprob: -9.125222206115723
    3. ' ' → logprob: -9.250222206115723
    4. '   ' → logprob: -11.500222206115723
    5. '
' → logprob: -12.750222206115723
    6. '  ' → logprob: -14.000222206115723
    7. '>' → logprob: -14.375222206115723
    8. '       ' → logprob: -15.000222206115723
    9. '     ' → logprob: -15.125222206115723
    10. '=' → logprob: -15.187722206115723

Token 345: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1784926801919937
    2. ' and' → logprob: -2.053492784500122
    3. '):' → logprob: -3.678492784500122
    4. '               ' → logprob: -5.178492546081543
    5. ')' → logprob: -5.928492546081543
    6. '           ' → logprob: -7.178492546081543
    7. ':
' → logprob: -8.428492546081543
    8. '):

' → logprob: -8.803492546081543
    9. ':' → logprob: -9.053492546081543
    10. 'and' → logprob: -9.178492546081543

Token 346: ' 
' (ID: 793)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1269819736480713
    2. '           ' → logprob: -2.2519819736480713
    3. '   ' → logprob: -6.001981735229492
    4. '
' → logprob: -6.126981735229492
    5. '       ' → logprob: -6.751981735229492
    6. ' print' → logprob: -6.751981735229492
    7. ' res' → logprob: -7.126981735229492
    8. '            ' → logprob: -7.376981735229492
    9. ' for' → logprob: -7.501981735229492
    10. ' continue' → logprob: -7.626981735229492

Token 347: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.50751131772995
    2. '           ' → logprob: -1.1325113773345947
    3. ' res' → logprob: -3.8825113773345947
    4. ' print' → logprob: -4.382511138916016
    5. ' for' → logprob: -4.757511138916016
    6. '   ' → logprob: -4.882511138916016
    7. ' continue' → logprob: -5.007511138916016
    8. ' out' → logprob: -6.132511138916016
    9. '       ' → logprob: -6.257511138916016
    10. 'continue' → logprob: -6.382511138916016

Token 348: ' answer' (ID: 6052)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4551841020584106
    2. 'old' → logprob: -1.7051841020584106
    3. 'val' → logprob: -2.080183982849121
    4. '                   ' → logprob: -2.080183982849121
    5. 'temp' → logprob: -2.455183982849121
    6. '   ' → logprob: -2.705183982849121
    7. '           ' → logprob: -2.955183982849121
    8. 'new' → logprob: -3.330183982849121
    9. 'tmp' → logprob: -4.580183982849121
    10. 'x' → logprob: -4.830183982849121

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15223510563373566
    2. '=max' → logprob: -2.1522350311279297
    3. '=' → logprob: -3.7772350311279297
    4. '+=' → logprob: -7.02723503112793
    5. 'max' → logprob: -7.40223503112793
    6. ' +=' → logprob: -7.90223503112793
    7. '   ' → logprob: -10.40223503112793
    8. ' -=' → logprob: -10.40223503112793
    9. '=min' → logprob: -10.52723503112793
    10. ' max' → logprob: -10.65223503112793

Token 350: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0017107593594118953
    2. ' max' → logprob: -6.376710891723633
    3. '(max' → logprob: -13.001710891723633
    4. 'answer' → logprob: -13.126710891723633
    5. 'min' → logprob: -13.126710891723633
    6. '   ' → logprob: -13.626710891723633
    7. 'float' → logprob: -15.126710891723633
    8. '0' → logprob: -15.751710891723633
    9. '	max' → logprob: -15.751710891723633
    10. 'res' → logprob: -16.626710891723633

Token 351: '(from' (ID: 32142)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0020076262298971415
    2. '(' → logprob: -6.252007484436035
    3. 'answer' → logprob: -9.502007484436035
    4. '(
' → logprob: -13.127007484436035
    5. '(question' → logprob: -14.502007484436035
    6. ' answer' → logprob: -14.627007484436035
    7. ' (' → logprob: -14.877007484436035
    8. '((' → logprob: -15.002007484436035
    9. '(ans' → logprob: -15.377007484436035
    10. '	answer' → logprob: -15.627007484436035

Token 352: '_start' (ID: 10949)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.021436192095279694
    2. ' answer' → logprob: -3.8964362144470215
    3. '(answer' → logprob: -7.1464362144470215
    4. '_answer' → logprob: -10.396435737609863
    5. '   ' → logprob: -11.646435737609863
    6. '           ' → logprob: -11.646435737609863
    7. ' ' → logprob: -11.771435737609863
    8. ' foo' → logprob: -11.771435737609863
    9. '	answer' → logprob: -11.771435737609863
    10. 'foo' → logprob: -11.896435737609863

Token 353: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01756913773715496
    2. ' ,' → logprob: -4.267569065093994
    3. '+' → logprob: -6.892569065093994
    4. ' +' → logprob: -7.142569065093994
    5. ' -' → logprob: -7.767569065093994
    6. ',
' → logprob: -8.017569541931152
    7. ',float' → logprob: -8.767569541931152
    8. ',(' → logprob: -8.892569541931152
    9. ',res' → logprob: -9.142569541931152
    10. '-' → logprob: -9.142569541931152

Token 354: ' foo' (ID: 30551)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.9733237028121948
    2. '(foo' → logprob: -1.5983237028121948
    3. '(trans' → logprob: -2.2233238220214844
    4. '(' → logprob: -2.3483238220214844
    5. '((' → logprob: -2.8483238220214844
    6. 'primary' → logprob: -2.9733238220214844
    7. '(primary' → logprob: -3.0983238220214844
    8. '1' → logprob: -3.7233238220214844
    9. 'trans' → logprob: -4.223323822021484
    10. ' (' → logprob: -4.973323822021484

Token 355: '[idx' (ID: 25582)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001452494296245277
    2. '[' → logprob: -7.126452445983887
    3. ' [' → logprob: -7.876452445983887
    4. '[idx' → logprob: -9.126452445983887
    5. '   ' → logprob: -10.376452445983887
    6. ' ' → logprob: -11.001452445983887
    7. 'i' → logprob: -11.501452445983887
    8. '[:' → logprob: -11.501452445983887
    9. '[q' → logprob: -11.626452445983887
    10. '           ' → logprob: -11.751452445983887

Token 356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4069773852825165
    2. ']-' → logprob: -1.2819774150848389
    3. '[i' → logprob: -3.656977415084839
    4. '][' → logprob: -3.906977415084839
    5. ']/' → logprob: -4.90697717666626
    6. 'i' → logprob: -6.65697717666626
    7. ']+' → logprob: -7.28197717666626
    8. ']*' → logprob: -7.40697717666626
    9. '[' → logprob: -8.281977653503418
    10. ' ]' → logprob: -8.781977653503418

Token 357: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07053716480731964
    2. '-' → logprob: -2.6955370903015137
    3. '-src' → logprob: -8.695537567138672
    4. ' -(' → logprob: -9.445537567138672
    5. '-(' → logprob: -9.945537567138672
    6. '-ex' → logprob: -10.195537567138672
    7. ' ' → logprob: -10.320537567138672
    8. '-out' → logprob: -10.445537567138672
    9. '-n' → logprob: -10.445537567138672
    10. '   ' → logprob: -10.695537567138672

Token 358: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9500715732574463
    2. '(out' → logprob: -0.9500715732574463
    3. ' (' → logprob: -2.0750715732574463
    4. '((' → logprob: -3.3250715732574463
    5. '(-' → logprob: -3.3250715732574463
    6. '2' → logprob: -4.575071334838867
    7. ' ' → logprob: -5.200071334838867
    8. 'out' → logprob: -6.325071334838867
    9. ' ((' → logprob: -6.575071334838867
    10. ' (-' → logprob: -6.575071334838867

Token 359: '1' (ID: 16)
  Prédit: '(out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -0.3940187990665436
    2. 'out' → logprob: -1.8940187692642212
    3. '-' → logprob: -2.2690188884735107
    4. '1' → logprob: -3.5190188884735107
    5. ' (' → logprob: -4.269018650054932
    6. '(' → logprob: -4.269018650054932
    7. ' ' → logprob: -6.144018650054932
    8. ' out' → logprob: -6.144018650054932
    9. '-out' → logprob: -6.394018650054932
    10. '2' → logprob: -6.519018650054932

Token 360: '/(' (ID: 27334)
  Prédit: '/out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/out' → logprob: -0.44621503353118896
    2. '-' → logprob: -1.821215033531189
    3. '/' → logprob: -2.0712151527404785
    4. ' -' → logprob: -3.5712151527404785
    5. ' /' → logprob: -3.5712151527404785
    6. ' ' → logprob: -5.0712151527404785
    7. '/output' → logprob: -6.1962151527404785
    8. '.' → logprob: -6.5712151527404785
    9. '/-' → logprob: -6.6962151527404785
    10. '   ' → logprob: -6.8212151527404785

Token 361: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.008016243577003479
    2. ' out' → logprob: -5.258016109466553
    3. '(out' → logprob: -6.258016109466553
    4. '           ' → logprob: -7.883016109466553
    5. '   ' → logprob: -8.133016586303711
    6. '  ' → logprob: -10.133016586303711
    7. ' ' → logprob: -10.508016586303711
    8. '               ' → logprob: -10.508016586303711
    9. '       ' → logprob: -10.758016586303711
    10. '    ' → logprob: -11.133016586303711

Token 362: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001981687266379595
    2. 'ut' → logprob: -7.001981735229492
    3. 'out' → logprob: -7.501981735229492
    4. '_d' → logprob: -8.876981735229492
    5. '-' → logprob: -9.001981735229492
    6. '[out' → logprob: -9.001981735229492
    7. '-out' → logprob: -10.876981735229492
    8. '_out' → logprob: -10.876981735229492
    9. '           ' → logprob: -11.251981735229492
    10. '-d' → logprob: -11.626981735229492

Token 363: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6817341446876526
    2. '-' → logprob: -0.8067341446876526
    3. ')' → logprob: -3.556734085083008
    4. ')-' → logprob: -4.181734085083008
    5. ' )' → logprob: -5.931734085083008
    6. ' ' → logprob: -7.681734085083008
    7. ')),' → logprob: -7.931734085083008
    8. '   ' → logprob: -8.931734085083008
    9. '),' → logprob: -9.056734085083008
    10. '))' → logprob: -9.181734085083008

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010437761375214905
    2. ' ' → logprob: -9.250103950500488
    3. '   ' → logprob: -12.375103950500488
    4. '  ' → logprob: -14.000103950500488
    5. '       ' → logprob: -14.500103950500488
    6. '           ' → logprob: -14.750103950500488
    7. '```' → logprob: -14.812603950500488
    8. '    ' → logprob: -14.937603950500488
    9. '     ' → logprob: -15.125103950500488
    10. '
' → logprob: -15.375103950500488

Token 365: ')-' (ID: 14080)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5211858749389648
    2. ')' → logprob: -1.3961858749389648
    3. ')),' → logprob: -2.771185874938965
    4. ' ),' → logprob: -3.146185874938965
    5. '))' → logprob: -3.646185874938965
    6. ' )' → logprob: -4.021185874938965
    7. ')))' → logprob: -5.521185874938965
    8. ')-' → logprob: -6.646185874938965
    9. ' ' → logprob: -7.021185874938965
    10. ' ))' → logprob: -7.396185874938965

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012071260251104832
    2. ' ' → logprob: -4.512071132659912
    3. '(' → logprob: -7.012071132659912
    4. ' (' → logprob: -9.38707160949707
    5. ')' → logprob: -11.38707160949707
    6. ' out' → logprob: -11.76207160949707
    7. '
' → logprob: -12.13707160949707
    8. '   ' → logprob: -13.26207160949707
    9. 'out' → logprob: -13.26207160949707
    10. '  ' → logprob: -13.38707160949707

Token 367: '/out' (ID: 91234)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06913600116968155
    2. ' ),' → logprob: -3.194135904312134
    3. ')' → logprob: -4.069136142730713
    4. '))' → logprob: -5.194136142730713
    5. '/' → logprob: -6.444136142730713
    6. ' )' → logprob: -7.569136142730713
    7. ')*' → logprob: -8.444135665893555
    8. ' ' → logprob: -8.569135665893555
    9. ' ))' → logprob: -8.819135665893555
    10. ')),' → logprob: -9.444135665893555

Token 368: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.688212614681106e-05
    2. 'д' → logprob: -11.500017166137695
    3. '_d' → logprob: -13.000017166137695
    4. '(d' → logprob: -13.625017166137695
    5. 'out' → logprob: -14.125017166137695
    6. ')d' → logprob: -15.000017166137695
    7. '[out' → logprob: -15.125017166137695
    8. '(out' → logprob: -15.375017166137695
    9. '```' → logprob: -15.375017166137695
    10. 'د' → logprob: -15.625017166137695

Token 369: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5898774266242981
    2. '))' → logprob: -1.0898773670196533
    3. ')' → logprob: -2.3398773670196533
    4. '))
' → logprob: -5.214877605438232
    5. ' ),' → logprob: -5.714877605438232
    6. ' )' → logprob: -6.839877605438232
    7. ' ))' → logprob: -7.214877605438232
    8. ')+' → logprob: -7.839877605438232
    9. ')))' → logprob: -7.964877605438232
    10. ')
' → logprob: -8.214877128601074

Token 370: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3088715970516205
    2. ')' → logprob: -1.4338716268539429
    3. ' ,' → logprob: -3.8088715076446533
    4. ' )' → logprob: -5.933871746063232
    5. ',)' → logprob: -6.933871746063232
    6. ')
' → logprob: -7.683871746063232
    7. '),' → logprob: -8.558871269226074
    8. ' +' → logprob: -8.933871269226074
    9. '))' → logprob: -9.308871269226074
    10. '           ' → logprob: -9.308871269226074

Token 371: ' primary' (ID: 9107)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.5240879654884338
    2. ' foo' → logprob: -2.024087905883789
    3. '(' → logprob: -2.399087905883789
    4. ' (' → logprob: -3.274087905883789
    5. '(foo' → logprob: -3.274087905883789
    6. 'primary' → logprob: -3.524087905883789
    7. '1' → logprob: -4.024087905883789
    8. ' primary' → logprob: -4.024087905883789
    9. '((' → logprob: -4.524087905883789
    10. 'trans' → logprob: -4.649087905883789

Token 372: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00578159699216485
    2. '[' → logprob: -5.880781650543213
    3. '[src' → logprob: -5.880781650543213
    4. ' [' → logprob: -9.255781173706055
    5. '[v' → logprob: -9.880781173706055
    6. '[i' → logprob: -11.630781173706055
    7. '[node' → logprob: -12.505781173706055
    8. '[index' → logprob: -13.505781173706055
    9. '[q' → logprob: -13.505781173706055
    10. 'idx' → logprob: -13.505781173706055

Token 373: ']*(' (ID: 92627)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.05394410714507103
    2. '*' → logprob: -4.428944110870361
    3. ' *' → logprob: -4.678944110870361
    4. '[src' → logprob: -4.928944110870361
    5. ')' → logprob: -5.428944110870361
    6. '[' → logprob: -5.428944110870361
    7. ' /' → logprob: -5.803944110870361
    8. '/' → logprob: -6.053944110870361
    9. '[i' → logprob: -6.303944110870361
    10. '*[' → logprob: -6.678944110870361

Token 374: 'trans' (ID: 2623)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07488688826560974
    2. '(' → logprob: -2.6998867988586426
    3. 'out' → logprob: -6.574886798858643
    4. 'trans' → logprob: -6.699886798858643
    5. '(out' → logprob: -7.574886798858643
    6. 'ending' → logprob: -8.0748872756958
    7. 'from' → logprob: -8.1998872756958
    8. ' ' → logprob: -8.3248872756958
    9. '((' → logprob: -8.3248872756958
    10. '2' → logprob: -8.6998872756958

Token 375: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0003297440707683563
    2. '[it' → logprob: -9.000329971313477
    3. '(it' → logprob: -9.625329971313477
    4. '[' → logprob: -10.000329971313477
    5. '/' → logprob: -11.375329971313477
    6. '   ' → logprob: -11.500329971313477
    7. ' it' → logprob: -11.500329971313477
    8. '[out' → logprob: -11.625329971313477
    9. '
' → logprob: -12.250329971313477
    10. '*' → logprob: -12.250329971313477

Token 376: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.0948158382670954e-05
    2. '[' → logprob: -10.875030517578125
    3. 'idx' → logprob: -11.875030517578125
    4. '[src' → logprob: -13.250030517578125
    5. ' idx' → logprob: -13.875030517578125
    6. '[i' → logprob: -14.000030517578125
    7. ')[' → logprob: -14.875030517578125
    8. '[index' → logprob: -14.875030517578125
    9. '(idx' → logprob: -15.250030517578125
    10. '```' → logprob: -16.250030517578125

Token 377: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -1.5484967231750488
    2. ')+' → logprob: -1.7984967231750488
    3. ')' → logprob: -1.9234967231750488
    4. '+' → logprob: -1.9234967231750488
    5. ']' → logprob: -2.298496723175049
    6. ')/' → logprob: -2.298496723175049
    7. ']/' → logprob: -3.048496723175049
    8. '[idx' → logprob: -3.423496723175049
    9. ' )' → logprob: -4.423496723175049
    10. ']*' → logprob: -5.298496723175049

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006596576422452927
    2. ' ' → logprob: -7.375659465789795
    3. '0' → logprob: -11.125659942626953
    4. '   ' → logprob: -11.750659942626953
    5. '
' → logprob: -12.000659942626953
    6. '  ' → logprob: -14.000659942626953
    7. ')' → logprob: -14.125659942626953
    8. '2' → logprob: -14.500659942626953
    9. '(' → logprob: -15.000659942626953
    10. '       ' → logprob: -15.250659942626953

Token 379: '+' (ID: 10)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')/' → logprob: -1.353223443031311
    2. '*out' → logprob: -1.728223443031311
    3. ')' → logprob: -1.978223443031311
    4. '*' → logprob: -2.1032233238220215
    5. ')*' → logprob: -2.4782233238220215
    6. '),' → logprob: -2.6032233238220215
    7. '/' → logprob: -3.9782233238220215
    8. ' /' → logprob: -4.1032233238220215
    9. '       ' → logprob: -4.2282233238220215
    10. ' )' → logprob: -4.2282233238220215

Token 380: 'ending' (ID: 3258)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05071031302213669
    2. '(' → logprob: -4.175710201263428
    3. ' ' → logprob: -4.425710201263428
    4. 'out' → logprob: -4.675710201263428
    5. 'sum' → logprob: -5.425710201263428
    6. '   ' → logprob: -6.425710201263428
    7. ' sum' → logprob: -6.675710201263428
    8. ' (' → logprob: -6.675710201263428
    9. 'primary' → logprob: -6.925710201263428
    10. 'foo' → logprob: -7.800710201263428

Token 381: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07892228662967682
    2. '[src' → logprob: -2.9539222717285156
    3. '[q' → logprob: -3.9539222717285156
    4. '[idx' → logprob: -5.703922271728516
    5. '[ch' → logprob: -7.703922271728516
    6. 'dst' → logprob: -7.953922271728516
    7. '[to' → logprob: -8.953922271728516
    8. ')[' → logprob: -9.828922271728516
    9. '   ' → logprob: -10.453922271728516
    10. 'src' → logprob: -10.453922271728516

Token 382: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.01136539876461029
    2. 'idx' → logprob: -5.1363654136657715
    3. 'src' → logprob: -5.7613654136657715
    4. ' dst' → logprob: -6.2613654136657715
    5. '(dst' → logprob: -9.636364936828613
    6. '[' → logprob: -9.761364936828613
    7. '   ' → logprob: -10.011364936828613
    8. '[src' → logprob: -10.261364936828613
    9. '	dst' → logprob: -10.386364936828613
    10. '
' → logprob: -10.886364936828613

Token 383: '-' (ID: 12)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001815121271647513
    2. '-' → logprob: -7.251815319061279
    3. 'dst' → logprob: -7.251815319061279
    4. '[src' → logprob: -8.876814842224121
    5. '1' → logprob: -9.501814842224121
    6. '[-' → logprob: -10.501814842224121
    7. '(dst' → logprob: -10.876814842224121
    8. ']' → logprob: -11.126814842224121
    9. '   ' → logprob: -11.126814842224121
    10. '[d' → logprob: -11.251814842224121

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6286106983898208e-05
    2. ' ' → logprob: -11.375016212463379
    3. ']' → logprob: -13.250016212463379
    4. '2' → logprob: -13.500016212463379
    5. '```' → logprob: -14.125016212463379
    6. '   ' → logprob: -15.750016212463379
    7. '[' → logprob: -15.812516212463379
    8. '])' → logprob: -16.500017166137695
    9. ')' → logprob: -16.687517166137695
    10. '0' → logprob: -17.000017166137695

Token 385: '])' (ID: 4636)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')/' → logprob: -1.1125761270523071
    2. ')' → logprob: -1.2375761270523071
    3. ' )' → logprob: -1.7375761270523071
    4. ')*' → logprob: -2.3625760078430176
    5. '))' → logprob: -2.9875760078430176
    6. ')),' → logprob: -4.612576007843018
    7. '),' → logprob: -4.612576007843018
    8. ' ' → logprob: -5.112576007843018
    9. ')/(' → logprob: -5.112576007843018
    10. ')*(' → logprob: -5.237576007843018

Token 386: '/(' (ID: 27334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11028831452131271
    2. ',' → logprob: -2.360288381576538
    3. ')
' → logprob: -5.610288143157959
    4. ' )' → logprob: -6.360288143157959
    5. ' ,' → logprob: -6.985288143157959
    6. '       ' → logprob: -7.110288143157959
    7. ',
' → logprob: -7.610288143157959
    8. '           ' → logprob: -8.235288619995117
    9. '),' → logprob: -8.235288619995117
    10. '+' → logprob: -8.235288619995117

Token 387: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.6334485411643982
    2. ' out' → logprob: -0.7584485411643982
    3. '(out' → logprob: -7.508448600769043
    4. ' ' → logprob: -9.133448600769043
    5. 'from' → logprob: -9.633448600769043
    6. ' (' → logprob: -10.508448600769043
    7. 'm' → logprob: -10.883448600769043
    8. '   ' → logprob: -11.133448600769043
    9. '    ' → logprob: -11.508448600769043
    10. ' from' → logprob: -11.508448600769043

Token 388: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.898723561083898e-05
    2. 'out' → logprob: -10.250079154968262
    3. 'idx' → logprob: -11.000079154968262
    4. '_d' → logprob: -11.500079154968262
    5. '           ' → logprob: -12.625079154968262
    6. '_out' → logprob: -13.125079154968262
    7. '[out' → logprob: -13.500079154968262
    8. '               ' → logprob: -13.750079154968262
    9. 'def' → logprob: -13.875079154968262
    10. '[idx' → logprob: -14.250079154968262

Token 389: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9085521101951599
    2. '-' → logprob: -1.0335521697998047
    3. '),' → logprob: -1.5335521697998047
    4. '))' → logprob: -4.533552169799805
    5. ' -' → logprob: -5.033552169799805
    6. ' ),' → logprob: -6.158552169799805
    7. ')),' → logprob: -6.283552169799805
    8. ' )' → logprob: -6.658552169799805
    9. '*' → logprob: -7.033552169799805
    10. ' ' → logprob: -7.533552169799805

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004135112394578755
    2. '2' → logprob: -8.50041389465332
    3. ' ' → logprob: -8.75041389465332
    4. '0' → logprob: -11.37541389465332
    5. '   ' → logprob: -11.50041389465332
    6. '
' → logprob: -12.37541389465332
    7. '           ' → logprob: -12.87541389465332
    8. '```' → logprob: -12.87541389465332
    9. ')' → logprob: -12.93791389465332
    10. '  ' → logprob: -13.31291389465332

Token 391: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18146120011806488
    2. '))' → logprob: -1.806461215019226
    3. '),' → logprob: -7.056461334228516
    4. ')
' → logprob: -8.181461334228516
    5. '+' → logprob: -8.681461334228516
    6. ')))' → logprob: -8.806461334228516
    7. ' )' → logprob: -9.556461334228516
    8. '):' → logprob: -9.806461334228516
    9. ')+' → logprob: -10.306461334228516
    10. '       ' → logprob: -10.556461334228516

Token 392: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.659248948097229
    2. ' answer' → logprob: -0.784248948097229
    3. ' from' → logprob: -4.2842488288879395
    4. 'from' → logprob: -4.4092488288879395
    5. ')' → logprob: -9.284249305725098
    6. 'foo' → logprob: -10.284249305725098
    7. ' primary' → logprob: -10.409249305725098
    8. ' foo' → logprob: -10.534249305725098
    9. 'primary' → logprob: -10.909249305725098
    10. ' ' → logprob: -10.909249305725098

Token 393: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00246745184995234
    2. ')
' → logprob: -6.377467632293701
    3. '       ' → logprob: -7.252467632293701
    4. ' )' → logprob: -10.877467155456543
    5. '<|end|>' → logprob: -10.877467155456543
    6. '   ' → logprob: -12.002467155456543
    7. '           ' → logprob: -12.627467155456543
    8. ')return' → logprob: -13.252467155456543
    9. '               ' → logprob: -13.877467155456543
    10. '
' → logprob: -14.127467155456543

Token 394: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0361233726143837
    2. '()' → logprob: -3.411123275756836
    3. '(' → logprob: -6.161123275756836
    4. '(round' → logprob: -8.911123275756836
    5. ' (' → logprob: -9.786123275756836
    6. '(int' → logprob: -10.286123275756836
    7. 'answer' → logprob: -10.286123275756836
    8. '(ans' → logprob: -10.661123275756836
    9. '(from' → logprob: -10.786123275756836
    10. '("' → logprob: -11.786123275756836

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1186566047836095e-05
    2. '()' → logprob: -11.000031471252441
    3. '())' → logprob: -11.500031471252441
    4. ' )' → logprob: -12.875031471252441
    5. ')
' → logprob: -13.875031471252441
    6. '   ' → logprob: -15.750031471252441
    7. '))' → logprob: -15.750031471252441
    8. '(' → logprob: -16.000030517578125
    9. '+' → logprob: -16.375030517578125
    10. ')`' → logprob: -16.500030517578125

Token 398: 'Go' (ID: 11976)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016778295685071498
    2. '()
' → logprob: -9.250167846679688
    3. '(' → logprob: -9.875167846679688
    4. '()]' → logprob: -12.375167846679688
    5. '()

' → logprob: -13.125167846679688
    6. '<|end|>' → logprob: -13.125167846679688
    7. '#' → logprob: -13.250167846679688
    8. '()`' → logprob: -13.625167846679688
    9. '();' → logprob: -13.625167846679688
    10. ' ()' → logprob: -13.750167846679688


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 397
Tokens correctement prédits (1ère position, stricte): 165
Tokens correctement prédits (1ère position, avec adaptation): 173
Tokens correctement prédits (top 10): 301
Précision stricte (1ère position): 41.56%
Précision adaptée (1ère position): 43.58%
Précision (top 10): 75.82%
================================================================================
