================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import atan, degrees

def main():
    a, b, x = map(int, input().split())
    y = x / a
    area_half = (a * b) / 2
    if y <= area_half:
        angle = 90 - degrees(atan(2 * y / b**2))
    else:
        angle = degrees(atan(2 * (a * b - y) / a**2))
    print(angle)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' atan' (ID: 70327)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.649153470993042
    2. 'sqrt' → logprob: -0.774153470993042
    3. ' pi' → logprob: -5.024153709411621
    4. 'pow' → logprob: -5.649153709411621
    5. 'sin' → logprob: -6.149153709411621
    6. 'pi' → logprob: -6.524153709411621
    7. ' sin' → logprob: -6.649153709411621
    8. ' ceil' → logprob: -7.649153709411621
    9. 'ceil' → logprob: -8.399153709411621
    10. ' pow' → logprob: -8.399153709411621

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01866080053150654
    2. '2' → logprob: -4.018661022186279
    3. ',' → logprob: -8.518660545349121
    4. ' (' → logprob: -8.518660545349121
    5. '```' → logprob: -10.518660545349121
    6. '\(' → logprob: -10.893660545349121
    7. '(
' → logprob: -11.018660545349121
    8. ' ' → logprob: -11.893660545349121
    9. '.' → logprob: -11.893660545349121
    10. 'a' → logprob: -12.643660545349121

Token 5: ' degrees' (ID: 18210)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.15538376569747925
    2. '2' → logprob: -3.155383825302124
    3. 'pi' → logprob: -3.405383825302124
    4. 'tan' → logprob: -3.655383825302124
    5. ' tan' → logprob: -4.280383586883545
    6. 'cos' → logprob: -5.030383586883545
    7. 't' → logprob: -5.155383586883545
    8. ' acos' → logprob: -5.780383586883545
    9. ' cos' → logprob: -6.155383586883545
    10. ' atan' → logprob: -6.155383586883545

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00032473751343786716
    2. ',' → logprob: -8.625325202941895
    3. '\(' → logprob: -9.625325202941895
    4. '(
' → logprob: -10.375325202941895
    5. ' (' → logprob: -11.125325202941895
    6. 'def' → logprob: -11.750325202941895
    7. '#' → logprob: -12.375325202941895
    8. 'a' → logprob: -13.250325202941895
    9. '.' → logprob: -13.375325202941895
    10. '2' → logprob: -13.625325202941895

Token 7: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003218766360078007
    2. ',' → logprob: -8.500322341918945
    3. 'def' → logprob: -10.000322341918945
    4. '(
' → logprob: -10.500322341918945
    5. '\(' → logprob: -11.625322341918945
    6. '#' → logprob: -12.000322341918945
    7. 'a' → logprob: -12.125322341918945
    8. ' (' → logprob: -12.250322341918945
    9. 'import' → logprob: -12.875322341918945
    10. '```' → logprob: -13.000322341918945

Token 8: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3156965970993042
    2. ' space' → logprob: -1.3156965970993042
    3. ' atan' → logprob: -1.6906965970993042
    4. ' calculate' → logprob: -2.0656967163085938
    5. ' f' → logprob: -3.5656967163085938
    6. ' my' → logprob: -3.6906967163085938
    7. ' convert' → logprob: -4.315696716308594
    8. ' angle' → logprob: -4.815696716308594
    9. ' def' → logprob: -4.815696716308594
    10. ' calc' → logprob: -5.315696716308594

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001328095211647451
    2. '():' → logprob: -7.376327991485596
    3. '```' → logprob: -8.501328468322754
    4. '(:' → logprob: -8.626328468322754
    5. ':' → logprob: -8.876328468322754
    6. '(
' → logprob: -10.126328468322754
    7. ' (' → logprob: -10.376328468322754
    8. '('' → logprob: -11.251328468322754
    9. '("("' → logprob: -11.501328468322754
    10. '):' → logprob: -11.626328468322754

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06103997677564621
    2. '(' → logprob: -3.186039924621582
    3. ' ' → logprob: -5.061039924621582
    4. 'x' → logprob: -5.311039924621582
    5. '```' → logprob: -6.686039924621582
    6. '    
' → logprob: -6.811039924621582
    7. '    ' → logprob: -6.936039924621582
    8. '  ' → logprob: -8.061039924621582
    9. 'n' → logprob: -8.061039924621582
    10. ' (' → logprob: -8.311039924621582

Token 11: ' a' (ID: 261)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.02695591375231743
    2. 'x' → logprob: -3.7769558429718018
    3. ' angle' → logprob: -6.151956081390381
    4. '   ' → logprob: -6.776956081390381
    5. 'print' → logprob: -9.276955604553223
    6. 'value' → logprob: -9.651955604553223
    7. '```' → logprob: -9.901955604553223
    8. 'n' → logprob: -10.026955604553223
    9. 'a' (adapté à ' a') → logprob: -10.526955604553223
    10. ' x' → logprob: -10.776955604553223

Token 12: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9689239859580994
    2. ' =' → logprob: -0.9689239859580994
    3. 'ng' → logprob: -2.343924045562744
    4. 't' → logprob: -2.718924045562744
    5. 'rg' → logprob: -3.468924045562744
    6. 'n' → logprob: -4.593924045562744
    7. '=' → logprob: -4.718924045562744
    8. ',' → logprob: -4.843924045562744
    9. 'rc' → logprob: -5.343924045562744
    10. ' ' → logprob: -5.968924045562744

Token 13: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16065117716789246
    2. 'b' → logprob: -1.9106512069702148
    3. ' ' → logprob: -7.785651206970215
    4. 'a' → logprob: -13.410651206970215
    5. ' t' → logprob: -13.660651206970215
    6. ' s' → logprob: -13.785651206970215
    7. ' a' → logprob: -14.160651206970215
    8. 'd' → logprob: -14.285651206970215
    9. 'space' → logprob: -14.285651206970215
    10. 't' → logprob: -14.535651206970215

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012798391282558441
    2. '=' → logprob: -4.387798309326172
    3. ',' → logprob: -8.262798309326172
    4. ' ' → logprob: -11.637798309326172
    5. ' ,' → logprob: -11.887798309326172
    6. ')' → logprob: -12.137798309326172
    7. '<|end|>' → logprob: -12.512798309326172
    8. ' =
' → logprob: -13.012798309326172
    9. '  ' → logprob: -13.387798309326172
    10. '   ' → logprob: -14.387798309326172

Token 15: ' x' (ID: 1215)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.05547238886356354
    2. 'c' → logprob: -2.9304723739624023
    3. ' ' → logprob: -8.055472373962402
    4. ' =' → logprob: -8.805472373962402
    5. '=' → logprob: -10.555472373962402
    6. ' h' → logprob: -11.055472373962402
    7. ' _' → logprob: -11.305472373962402
    8. '_' → logprob: -11.805472373962402
    9. 'h' → logprob: -12.055472373962402
    10. 'angle' → logprob: -12.117972373962402

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056419476866722
    2. '=' → logprob: -3.895564079284668
    3. ',' → logprob: -11.020564079284668
    4. ' ' → logprob: -12.895564079284668
    5. ')' → logprob: -13.645564079284668
    6. ' =
' → logprob: -14.270564079284668
    7. '<|end|>' → logprob: -15.395564079284668
    8. '  ' → logprob: -15.520564079284668
    9. '   ' → logprob: -15.770564079284668
    10. '=int' → logprob: -15.770564079284668

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5811619758605957
    2. 'map' → logprob: -0.8311619758605957
    3. '0' → logprob: -6.456161975860596
    4. ' ' → logprob: -6.956161975860596
    5. '5' → logprob: -7.706161975860596
    6. '1' → logprob: -7.706161975860596
    7. '10' → logprob: -7.956161975860596
    8. '3' → logprob: -8.456161499023438
    9. ' list' → logprob: -8.706161499023438
    10. 'list' → logprob: -8.706161499023438

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08799083530902863
    2. '(' → logprob: -3.0879907608032227
    3. '(lambda' → logprob: -3.5879907608032227
    4. '(str' → logprob: -4.837990760803223
    5. '(input' → logprob: -6.462990760803223
    6. '(float' → logprob: -7.587990760803223
    7. '<|end|>' → logprob: -8.087990760803223
    8. 'int' → logprob: -8.337990760803223
    9. '(eval' → logprob: -9.212990760803223
    10. '```' → logprob: -9.462990760803223

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08082178980112076
    2. ')' → logprob: -2.7058217525482178
    3. 'input' → logprob: -4.830821990966797
    4. '<|end|>' → logprob: -7.205821990966797
    5. '(' → logprob: -7.330821990966797
    6. ' input' → logprob: -7.705821990966797
    7. ',input' → logprob: -8.080821990966797
    8. '=input' → logprob: -9.330821990966797
    9. ')(' → logprob: -9.455821990966797
    10. ',' → logprob: -9.455821990966797

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868870735168457
    2. ' input' → logprob: -1.1368870735168457
    3. '(input' → logprob: -11.761886596679688
    4. ')' → logprob: -12.511886596679688
    5. ' ' → logprob: -13.636886596679688
    6. ',input' → logprob: -13.761886596679688
    7. '=input' → logprob: -14.261886596679688
    8. '	input' → logprob: -14.386886596679688
    9. ' )' → logprob: -15.136886596679688
    10. '```' → logprob: -15.886886596679688

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05855173245072365
    2. '())' → logprob: -3.058551788330078
    3. '()' → logprob: -5.308551788330078
    4. ')' → logprob: -5.558551788330078
    5. '(' → logprob: -7.558551788330078
    6. '());' → logprob: -8.683551788330078
    7. '()>' → logprob: -9.558551788330078
    8. '()))' → logprob: -9.683551788330078
    9. '('' → logprob: -10.058551788330078
    10. '(()' → logprob: -10.308551788330078

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.184812031686306e-05
    2. 'strip' → logprob: -9.500082015991211
    3. 'rstrip' → logprob: -12.250082015991211
    4. '(split' → logprob: -13.750082015991211
    5. ' split' → logprob: -13.875082015991211
    6. 'spl' → logprob: -17.25008201599121
    7. '```' → logprob: -18.37508201599121
    8. ' ' → logprob: -18.50008201599121
    9. 'read' → logprob: -18.62508201599121
    10. ')' → logprob: -19.00008201599121

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06338293105363846
    2. '))' → logprob: -2.813382863998413
    3. '())' → logprob: -6.688383102416992
    4. '()))' → logprob: -9.563383102416992
    5. '()' → logprob: -9.813383102416992
    6. ')))' → logprob: -11.313383102416992
    7. '),' → logprob: -11.438383102416992
    8. '(' → logprob: -11.563383102416992
    9. ')`' → logprob: -12.813383102416992
    10. ')
' → logprob: -13.563383102416992

Token 24: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11068432778120041
    2. '<|end|>' → logprob: -3.860684394836426
    3. '   ' → logprob: -4.110684394836426
    4. ':' → logprob: -4.360684394836426
    5. ' ' → logprob: -4.360684394836426
    6. '\' → logprob: -4.860684394836426
    7. '```' → logprob: -4.985684394836426
    8. '\r' → logprob: -5.110684394836426
    9. '
' → logprob: -5.610684394836426
    10. ')' → logprob: -5.610684394836426

Token 25: ' y' (ID: 342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1081243753433228
    2. 'area' → logprob: -1.3581243753433228
    3. ' if' → logprob: -1.9831243753433228
    4. 'h' → logprob: -2.733124256134033
    5. 'volume' → logprob: -2.983124256134033
    6. ' area' → logprob: -3.358124256134033
    7. ' ' → logprob: -3.608124256134033
    8. 'angle' → logprob: -3.733124256134033
    9. ' volume' → logprob: -3.983124256134033
    10. 'total' → logprob: -4.483124256134033

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018160827457904816
    2. '=' → logprob: -4.018160820007324
    3. ',' → logprob: -12.268160820007324
    4. ' +=' → logprob: -13.768160820007324
    5. ' =(' → logprob: -14.143160820007324
    6. ' ' → logprob: -14.518160820007324
    7. '＝' → logprob: -14.518160820007324
    8. '_' → logprob: -14.643160820007324
    9. ' ==' → logprob: -14.893160820007324
    10. '  ' → logprob: -14.893160820007324

Token 27: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46447721123695374
    2. ' a' → logprob: -1.5894771814346313
    3. 'x' → logprob: -2.714477300643921
    4. ' x' → logprob: -3.464477300643921
    5. ' (' → logprob: -3.714477300643921
    6. '(a' → logprob: -4.589477062225342
    7. 'b' → logprob: -4.964477062225342
    8. 'atan' → logprob: -5.089477062225342
    9. '(' → logprob: -5.214477062225342
    10. ' atan' → logprob: -5.714477062225342

Token 28: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.8381649255752563
    2. ' /' → logprob: -0.8381649255752563
    3. '*' → logprob: -2.963164806365967
    4. ' *' → logprob: -3.088164806365967
    5. '/a' → logprob: -3.838164806365967
    6. ' if' → logprob: -5.088164806365967
    7. '/(' → logprob: -5.838164806365967
    8. '   ' → logprob: -7.463164806365967
    9. '0' → logprob: -7.588164806365967
    10. '**' → logprob: -7.713164806365967

Token 29: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09129776060581207
    2. '(a' → logprob: -2.4662978649139404
    3. 'b' → logprob: -6.216297626495361
    4. '(' → logprob: -9.21629810333252
    5. '(b' → logprob: -9.21629810333252
    6. ' (' → logprob: -10.09129810333252
    7. 'float' → logprob: -10.09129810333252
    8. '2' → logprob: -10.59129810333252
    9. ' a' → logprob: -10.96629810333252
    10. '(ab' → logprob: -12.34129810333252

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028063004836440086
    2. ' 
' → logprob: -4.65306282043457
    3. '    
' → logprob: -5.65306282043457
    4. '<|end|>' → logprob: -5.65306282043457
    5. '   ' → logprob: -6.02806282043457
    6. ')' → logprob: -6.40306282043457
    7. ' ' → logprob: -6.65306282043457
    8. '  
' → logprob: -6.65306282043457
    9. '*' → logprob: -7.02806282043457
    10. '\n' → logprob: -7.15306282043457

Token 31: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6123996376991272
    2. ' if' → logprob: -1.2373995780944824
    3. ')' → logprob: -2.6123995780944824
    4. '   ' → logprob: -2.9873995780944824
    5. '    
' → logprob: -4.612399578094482
    6. 'if' → logprob: -4.862399578094482
    7. '\n' → logprob: -5.237399578094482
    8. 'atan' → logprob: -6.112399578094482
    9. ' 
' → logprob: -6.237399578094482
    10. '  
' → logprob: -6.237399578094482

Token 32: ' area' (ID: 3624)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4223645031452179
    2. 'if' → logprob: -1.2973644733428955
    3. '2' → logprob: -3.1723644733428955
    4. '**' → logprob: -4.922364711761475
    5. 'atan' → logprob: -5.297364711761475
    6. '   ' → logprob: -5.797364711761475
    7. 't' → logprob: -5.922364711761475
    8. '0' → logprob: -6.172364711761475
    9. ' ' → logprob: -6.297364711761475
    10. 'tan' → logprob: -6.422364711761475

Token 33: '_half' (ID: 105284)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043906133621931076
    2. '=' → logprob: -3.1689062118530273
    3. '_' → logprob: -7.543906211853027
    4. ' ' → logprob: -8.293906211853027
    5. '/' → logprob: -10.543906211853027
    6. ' /' → logprob: -10.793906211853027
    7. '   ' → logprob: -10.918906211853027
    8. '_area' → logprob: -11.168906211853027
    9. ',' → logprob: -12.168906211853027
    10. '  ' → logprob: -12.668906211853027

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020950332283973694
    2. '=' → logprob: -3.8959503173828125
    3. ' ' → logprob: -9.270950317382812
    4. ',' → logprob: -9.270950317382812
    5. '*' → logprob: -10.145950317382812
    6. '_' → logprob: -10.395950317382812
    7. ')' → logprob: -10.520950317382812
    8. '<|end|>' → logprob: -10.520950317382812
    9. 'area' → logprob: -11.020950317382812
    10. ' *' → logprob: -11.395950317382812

Token 35: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20380039513111115
    2. ' a' → logprob: -2.7038004398345947
    3. '(a' → logprob: -2.7038004398345947
    4. 'b' → logprob: -3.8288004398345947
    5. ' (' → logprob: -3.9538004398345947
    6. ' b' → logprob: -5.828800201416016
    7. '(b' → logprob: -5.828800201416016
    8. '(' → logprob: -6.703800201416016
    9. '0' → logprob: -6.703800201416016
    10. '   ' → logprob: -7.703800201416016

Token 36: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17121806740760803
    2. 'b' → logprob: -1.9212180376052856
    3. ' a' → logprob: -4.921217918395996
    4. ' b' → logprob: -6.171217918395996
    5. '   ' → logprob: -7.671217918395996
    6. '1' → logprob: -8.046217918395996
    7. '(a' → logprob: -8.296217918395996
    8. '2' → logprob: -9.421217918395996
    9. ' (' → logprob: -9.546217918395996
    10. ')' → logprob: -9.671217918395996

Token 37: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5246081948280334
    2. ' *' → logprob: -0.8996081948280334
    3. '*b' → logprob: -6.649608135223389
    4. ' ' → logprob: -9.274608612060547
    5. ')' → logprob: -10.774608612060547
    6. '**' → logprob: -10.899608612060547
    7. '   ' → logprob: -11.024608612060547
    8. '*y' → logprob: -11.899608612060547
    9. '+' → logprob: -12.149608612060547
    10. '  ' → logprob: -12.837108612060547

Token 38: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014390555210411549
    2. ' b' → logprob: -4.264390468597412
    3. 'y' → logprob: -8.88939094543457
    4. ' y' → logprob: -10.26439094543457
    5. 'a' → logprob: -11.38939094543457
    6. '   ' → logprob: -11.38939094543457
    7. ' ' → logprob: -11.76439094543457
    8. ' (' → logprob: -11.88939094543457
    9. '  ' → logprob: -12.51439094543457
    10. ')' → logprob: -13.01439094543457

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009853716939687729
    2. ' )' → logprob: -4.884853839874268
    3. ' /' → logprob: -7.259853839874268
    4. ' -' → logprob: -7.509853839874268
    5. ')/' → logprob: -8.00985336303711
    6. '*' → logprob: -8.00985336303711
    7. ' *' → logprob: -8.75985336303711
    8. '/' → logprob: -9.50985336303711
    9. '-' → logprob: -10.13485336303711
    10. ' ' → logprob: -10.75985336303711

Token 40: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.20277367532253265
    2. ' /' → logprob: -1.7027736902236938
    3. '*' → logprob: -7.327773571014404
    4. '0' → logprob: -8.327774047851562
    5. ' ' → logprob: -9.327774047851562
    6. '<|end|>' → logprob: -9.452774047851562
    7. ' *' → logprob: -10.077774047851562
    8. ')' → logprob: -10.327774047851562
    9. '   ' → logprob: -10.452774047851562
    10. '```' → logprob: -10.702774047851562

Token 41: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2014712244272232
    2. ' ' → logprob: -1.701471209526062
    3. '4' → logprob: -10.576471328735352
    4. '  ' → logprob: -11.201471328735352
    5. ' ' → logprob: -12.326471328735352
    6. '8' → logprob: -12.451471328735352
    7. '   ' → logprob: -12.576471328735352
    8. '6' → logprob: -14.076471328735352
    9. '```' → logprob: -14.201471328735352
    10. '    ' → logprob: -14.388971328735352

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018041854491457343
    2. ' ' → logprob: -8.6251802444458
    3. '4' → logprob: -15.1251802444458
    4. '   ' → logprob: -15.5001802444458
    5. '  ' → logprob: -16.250181198120117
    6. ' ' → logprob: -16.375181198120117
    7. '8' → logprob: -16.625181198120117
    8. '    ' → logprob: -17.125181198120117
    9. '```' → logprob: -17.375181198120117
    10. '_' → logprob: -17.375181198120117

Token 43: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32380104064941406
    2. '
' → logprob: -1.823801040649414
    3. '   ' → logprob: -2.323801040649414
    4. '    
' → logprob: -4.573801040649414
    5. '<|end|>' → logprob: -6.448801040649414
    6. '
' → logprob: -6.573801040649414
    7. '  
' → logprob: -7.198801040649414
    8. '```' → logprob: -7.573801040649414
    9. '   
' → logprob: -7.698801040649414
    10. '\' → logprob: -7.948801040649414

Token 44: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5483356714248657
    2. '\n' → logprob: -1.0483356714248657
    3. '   ' → logprob: -3.173335552215576
    4. '<|end|>' → logprob: -4.173335552215576
    5. '    
' → logprob: -5.423335552215576
    6. ' if' → logprob: -5.673335552215576
    7. '```' → logprob: -6.173335552215576
    8. '  
' → logprob: -6.423335552215576
    9. 'if' → logprob: -7.673335552215576
    10. '<|end|>' → logprob: -8.048336029052734

Token 45: ' if' (ID: 538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22946327924728394
    2. '   ' → logprob: -1.7294633388519287
    3. ' if' → logprob: -4.72946310043335
    4. '
' → logprob: -5.60446310043335
    5. '    
' → logprob: -5.85446310043335
    6. '```' → logprob: -5.85446310043335
    7. 'if' (adapté à ' if') → logprob: -5.97946310043335
    8. ' ' → logprob: -6.47946310043335
    9. '\' → logprob: -6.60446310043335
    10. ' 
' → logprob: -7.35446310043335

Token 46: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.018081223592162132
    2. 'y' → logprob: -4.643081188201904
    3. ' x' → logprob: -4.893081188201904
    4. 'x' → logprob: -7.268081188201904
    5. ' ' → logprob: -10.268081665039062
    6. ' a' → logprob: -10.518081665039062
    7. '   ' → logprob: -11.268081665039062
    8. ' b' → logprob: -12.018081665039062
    9. 'a' → logprob: -12.518081665039062
    10. ' area' → logprob: -12.768081665039062

Token 47: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5175066590309143
    2. '<' → logprob: -1.3925065994262695
    3. ' <=' → logprob: -2.2675065994262695
    4. ' <' → logprob: -3.0175065994262695
    5. '>=' → logprob: -6.6425065994262695
    6. '>' → logprob: -7.0175065994262695
    7. ' >=' → logprob: -8.51750659942627
    8. '==' → logprob: -8.51750659942627
    9. ' ' → logprob: -9.39250659942627
    10. ' >' → logprob: -9.51750659942627

Token 48: ' area' (ID: 3624)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12233243882656097
    2. ' b' → logprob: -2.6223323345184326
    3. ' area' → logprob: -3.7473323345184326
    4. 'area' → logprob: -3.9973323345184326
    5. ' ' → logprob: -8.497332572937012
    6. '   ' → logprob: -8.747332572937012
    7. '(b' → logprob: -9.747332572937012
    8. '	b' → logprob: -10.497332572937012
    9. '  ' → logprob: -10.747332572937012
    10. 'a' → logprob: -10.872332572937012

Token 49: '_half' (ID: 105284)
  Prédit: '_half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_half' → logprob: -1.8312570318812504e-05
    2. '_' → logprob: -11.125018119812012
    3. '_hal' → logprob: -12.875018119812012
    4. '_HALF' → logprob: -15.125018119812012
    5. ' _' → logprob: -15.375018119812012
    6. ' ' → logprob: -16.625019073486328
    7. '_h' → logprob: -17.125019073486328
    8. '_)' → logprob: -17.125019073486328
    9. '_he' → logprob: -17.500019073486328
    10. '_full' → logprob: -17.500019073486328

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010509284038562328
    2. ':
' → logprob: -9.250104904174805
    3. '):' → logprob: -12.500104904174805
    4. ' :' → logprob: -13.375104904174805
    5. ':return' → logprob: -14.000104904174805
    6. ':**' → logprob: -14.250104904174805
    7. ',' → logprob: -14.500104904174805
    8. '():' → logprob: -15.375104904174805
    9. ':
' → logprob: -15.375104904174805
    10. '>:' → logprob: -15.500104904174805

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1313581019639969
    2. '\n' → logprob: -2.7563581466674805
    3. ':' → logprob: -3.3813581466674805
    4. ':
' → logprob: -4.8813581466674805
    5. '   ' → logprob: -5.3813581466674805
    6. '    
' → logprob: -5.5063581466674805
    7. '
' → logprob: -5.8813581466674805
    8. '        
' → logprob: -6.1313581466674805
    9. '    ' → logprob: -6.6313581466674805
    10. '' → logprob: -7.7563581466674805

Token 52: ' angle' (ID: 16538)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06239112466573715
    2. ' 
' → logprob: -4.68739128112793
    3. '       ' → logprob: -4.81239128112793
    4. '
' → logprob: -4.81239128112793
    5. '    
' → logprob: -5.18739128112793
    6. '\' → logprob: -5.43739128112793
    7. '   ' → logprob: -5.43739128112793
    8. 'n' → logprob: -5.56239128112793
    9. ' \' → logprob: -5.68739128112793
    10. '     
' → logprob: -6.43739128112793

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006810933817178011
    2. '=' → logprob: -5.006811141967773
    3. ' ' → logprob: -10.381811141967773
    4. '_' → logprob: -10.756811141967773
    5. 's' → logprob: -10.881811141967773
    6. '_deg' → logprob: -12.131811141967773
    7. '   ' → logprob: -12.381811141967773
    8. '```' → logprob: -12.881811141967773
    9. '_de' → logprob: -13.256811141967773
    10. '_rad' → logprob: -13.256811141967773

Token 54: ' ' (ID: 220)
  Prédit: ' degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degrees' → logprob: -0.22740404307842255
    2. 'degrees' → logprob: -1.852403998374939
    3. 'atan' → logprob: -3.6024041175842285
    4. ' atan' → logprob: -4.3524041175842285
    5. '   ' → logprob: -5.4774041175842285
    6. ' ' → logprob: -6.8524041175842285
    7. '  ' → logprob: -8.85240364074707
    8. '    ' → logprob: -8.97740364074707
    9. '(de' → logprob: -9.22740364074707
    10. '(' → logprob: -9.35240364074707

Token 55: '90' (ID: 2744)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.5822462439537048
    2. 'atan' → logprob: -0.9572462439537048
    3. ' degrees' → logprob: -3.2072463035583496
    4. ' atan' → logprob: -4.58224630355835
    5. '   ' → logprob: -5.58224630355835
    6. '180' → logprob: -8.082245826721191
    7. 'de' → logprob: -8.082245826721191
    8. '90' → logprob: -8.207245826721191
    9. '(' → logprob: -8.332245826721191
    10. ' ' → logprob: -8.582245826721191

Token 56: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1436864137649536
    2. '-' → logprob: -2.018686294555664
    3. '.' → logprob: -7.643686294555664
    4. '*' → logprob: -8.893686294555664
    5. '-degree' → logprob: -9.268686294555664
    6. '0' → logprob: -9.393686294555664
    7. '<|end|>' → logprob: -10.143686294555664
    8. ' *' → logprob: -10.143686294555664
    9. '-angle' → logprob: -10.643686294555664
    10. '-ex' → logprob: -11.018686294555664

Token 57: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.18003341555595398
    2. ' degrees' → logprob: -1.8050334453582764
    3. 'de' → logprob: -9.055033683776855
    4. 'int' → logprob: -9.180033683776855
    5. ' ' → logprob: -11.180033683776855
    6. '   ' → logprob: -11.555033683776855
    7. 'degree' → logprob: -11.680033683776855
    8. ' int' → logprob: -12.055033683776855
    9. 'deg' → logprob: -12.180033683776855
    10. 'abs' → logprob: -12.430033683776855

Token 58: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.756989700486884e-05
    2. '(at' → logprob: -9.37508773803711
    3. ' (' → logprob: -13.75008773803711
    4. 'atan' → logprob: -14.62508773803711
    5. '(
' → logprob: -14.87508773803711
    6. '((' → logprob: -15.37508773803711
    7. '(math' → logprob: -15.50008773803711
    8. '(atom' → logprob: -16.25008773803711
    9. '('' → logprob: -16.37508773803711
    10. '(

' → logprob: -17.12508773803711

Token 59: 'atan' (ID: 8294)
  Prédit: 'atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.000330220878822729
    2. ' atan' → logprob: -8.250329971313477
    3. '(' → logprob: -10.625329971313477
    4. '.atan' → logprob: -10.875329971313477
    5. '   ' → logprob: -11.500329971313477
    6. ')' → logprob: -11.500329971313477
    7. 'ata' → logprob: -13.125329971313477
    8. ' ' → logprob: -14.250329971313477
    9. '  ' → logprob: -15.000329971313477
    10. 'aton' → logprob: -15.000329971313477

Token 60: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.989157497882843
    2. '((' → logprob: -0.989157497882843
    3. '(b' → logprob: -1.8641574382781982
    4. '(y' → logprob: -2.3641574382781982
    5. ' (' → logprob: -5.864157676696777
    6. ')' → logprob: -6.614157676696777
    7. '(a' → logprob: -6.614157676696777
    8. '(x' → logprob: -7.239157676696777
    9. 'b' → logprob: -8.614157676696777
    10. ' ' → logprob: -9.114157676696777

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8831774592399597
    2. 'b' → logprob: -1.6331775188446045
    3. '(' → logprob: -2.0081775188446045
    4. 'y' → logprob: -3.3831775188446045
    5. '(b' → logprob: -3.3831775188446045
    6. ' y' → logprob: -3.5081775188446045
    7. '((' → logprob: -3.6331775188446045
    8. ' (' → logprob: -3.6331775188446045
    9. '(y' → logprob: -3.6331775188446045
    10. ')' → logprob: -3.6331775188446045

Token 62: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6427723169326782
    2. '*' → logprob: -0.7677723169326782
    3. '*y' → logprob: -4.767772197723389
    4. '*b' → logprob: -6.517772197723389
    5. '*(' → logprob: -9.017772674560547
    6. '*x' → logprob: -12.017772674560547
    7. ' ' → logprob: -12.142772674560547
    8. '*a' → logprob: -12.517772674560547
    9. '*r' → logprob: -13.767772674560547
    10. '   ' → logprob: -13.767772674560547

Token 63: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.41495683789253235
    2. 'y' → logprob: -1.16495680809021
    3. ' *' → logprob: -4.789957046508789
    4. '*y' → logprob: -5.039957046508789
    5. 'b' → logprob: -5.164957046508789
    6. ' b' → logprob: -5.539957046508789
    7. ' (' → logprob: -7.414957046508789
    8. '(y' → logprob: -7.914957046508789
    9. '(' → logprob: -8.039957046508789
    10. 'x' → logprob: -8.164957046508789

Token 64: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5777352452278137
    2. ' /' → logprob: -0.8277352452278137
    3. '/a' → logprob: -7.202735424041748
    4. '/b' → logprob: -7.702735424041748
    5. '/(' → logprob: -8.32773494720459
    6. '/
' → logprob: -9.07773494720459
    7. '   ' → logprob: -9.20273494720459
    8. ' ' → logprob: -10.32773494720459
    9. ' /
' → logprob: -10.57773494720459
    10. ')' → logprob: -11.32773494720459

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04791523143649101
    2. ' b' → logprob: -3.42291522026062
    3. 'a' → logprob: -4.297915458679199
    4. ' a' → logprob: -7.797915458679199
    5. ' (' → logprob: -9.6729154586792
    6. '   ' → logprob: -10.2979154586792
    7. ')' → logprob: -10.9229154586792
    8. ')b' → logprob: -11.1729154586792
    9. '(' → logprob: -11.5479154586792
    10. '(b' → logprob: -11.6729154586792

Token 66: '**' (ID: 410)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010682986117899418
    2. ' /' → logprob: -5.135683059692383
    3. ' ))' → logprob: -6.635683059692383
    4. ')))' → logprob: -7.135683059692383
    5. '/a' → logprob: -7.135683059692383
    6. '/' → logprob: -7.260683059692383
    7. '))
' → logprob: -7.260683059692383
    8. ')' → logprob: -9.010683059692383
    9. '**' → logprob: -9.260683059692383
    10. '   ' → logprob: -9.885683059692383

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002677918178960681
    2. ' ' → logprob: -6.002677917480469
    3. '))' → logprob: -8.752677917480469
    4. ')' → logprob: -11.002677917480469
    5. ' ))' → logprob: -11.877677917480469
    6. ' /' → logprob: -12.377677917480469
    7. '1' → logprob: -12.752677917480469
    8. '²' → logprob: -13.002677917480469
    9. '/' → logprob: -13.002677917480469
    10. '**' → logprob: -13.377677917480469

Token 68: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009931033477187157
    2. '))
' → logprob: -4.7599310874938965
    3. ')))' → logprob: -7.2599310874938965
    4. ')' → logprob: -8.384930610656738
    5. ' ))' → logprob: -8.509930610656738
    6. '))
' → logprob: -9.759930610656738
    7. '   ' → logprob: -9.759930610656738
    8. ' ' → logprob: -10.634930610656738
    9. '))

' → logprob: -11.009930610656738
    10. ' ))
' → logprob: -11.509930610656738

Token 69: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1742914319038391
    2. '
' → logprob: -2.7992913722991943
    3. '\n' → logprob: -3.0492913722991943
    4. '   ' → logprob: -3.5492913722991943
    5. '<|end|>' → logprob: -4.799291610717773
    6. ')
' → logprob: -5.049291610717773
    7. ' else' → logprob: -6.549291610717773
    8. '    
' → logprob: -6.799291610717773
    9. ' )' → logprob: -6.799291610717773
    10. 'print' → logprob: -6.924291610717773

Token 70: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2929951548576355
    2. ')' → logprob: -1.7929952144622803
    3. 'else' (adapté à ' else') → logprob: -3.0429952144622803
    4. ' else' → logprob: -3.2929952144622803
    5. ' )' → logprob: -7.417994976043701
    6. '       ' → logprob: -7.917994976043701
    7. ' return' → logprob: -8.16799545288086
    8. 'print' → logprob: -8.29299545288086
    9. 'return' → logprob: -8.79299545288086
    10. ' ' → logprob: -8.91799545288086

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011971325147897005
    2. ':
' → logprob: -6.751197338104248
    3. ' :' → logprob: -10.87619686126709
    4. '       ' → logprob: -12.87619686126709
    5. '   ' → logprob: -13.00119686126709
    6. ':
' → logprob: -14.00119686126709
    7. ' :
' → logprob: -14.50119686126709
    8. ':

' → logprob: -14.62619686126709
    9. '{' → logprob: -14.75119686126709
    10. ',' → logprob: -15.25119686126709

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26452726125717163
    2. '    ' → logprob: -3.0145273208618164
    3. '   ' → logprob: -3.1395273208618164
    4. ' degrees' → logprob: -3.5145273208618164
    5. ' angle' → logprob: -3.5145273208618164
    6. 'angle' → logprob: -3.8895273208618164
    7. ' ' → logprob: -3.8895273208618164
    8. '        ' → logprob: -4.764527320861816
    9. '           ' → logprob: -4.764527320861816
    10. 'degrees' → logprob: -4.764527320861816

Token 73: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.28886061906814575
    2. ' angle' → logprob: -1.413860559463501
    3. ' degrees' → logprob: -6.41386079788208
    4. '90' → logprob: -6.41386079788208
    5. 'degrees' → logprob: -6.66386079788208
    6. ' ' → logprob: -6.78886079788208
    7. '       ' → logprob: -6.91386079788208
    8. 'area' → logprob: -8.413860321044922
    9. '           ' → logprob: -8.913860321044922
    10. ' area' → logprob: -9.038860321044922

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14267916977405548
    2. '=' → logprob: -2.017679214477539
    3. ' ' → logprob: -13.017679214477539
    4. 's' → logprob: -14.517679214477539
    5. ')' → logprob: -15.267679214477539
    6. '   ' → logprob: -15.642679214477539
    7. '＝' → logprob: -15.892679214477539
    8. ' =
' → logprob: -16.26767921447754
    9. '=

' → logprob: -16.51767921447754
    10. '```' → logprob: -16.64267921447754

Token 75: ' degrees' (ID: 18210)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.34610024094581604
    2. 'degrees' → logprob: -1.3461002111434937
    3. ' degrees' → logprob: -3.596100330352783
    4. ' ' → logprob: -5.471100330352783
    5. '   ' → logprob: -7.971100330352783
    6. 'de' → logprob: -10.096099853515625
    7. '    ' → logprob: -10.221099853515625
    8. '180' → logprob: -10.346099853515625
    9. '       ' → logprob: -10.596099853515625
    10. 'degree' → logprob: -10.596099853515625

Token 76: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6047699318733066e-05
    2. '(at' → logprob: -11.375016212463379
    3. '((' → logprob: -12.625016212463379
    4. 'atan' → logprob: -15.000016212463379
    5. '(math' → logprob: -15.250016212463379
    6. '(-' → logprob: -15.875016212463379
    7. '(lambda' → logprob: -15.875016212463379
    8. '.atan' → logprob: -15.875016212463379
    9. '(abs' → logprob: -18.000015258789062
    10. ' (' → logprob: -18.000015258789062

Token 77: 'atan' (ID: 8294)
  Prédit: 'atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.0010679395636543632
    2. ' atan' → logprob: -7.626068115234375
    3. '(' → logprob: -8.376068115234375
    4. 'b' → logprob: -9.001068115234375
    5. 'a' → logprob: -9.751068115234375
    6. '   ' → logprob: -9.751068115234375
    7. '(b' → logprob: -10.251068115234375
    8. '.atan' → logprob: -11.251068115234375
    9. '2' → logprob: -11.501068115234375
    10. 'at' → logprob: -11.751068115234375

Token 78: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4334956109523773
    2. '(' → logprob: -1.1834956407546997
    3. '(((' → logprob: -3.68349552154541
    4. '(b' → logprob: -3.93349552154541
    5. '2' → logprob: -7.43349552154541
    6. 'b' → logprob: -9.18349552154541
    7. '((((' → logprob: -10.05849552154541
    8. '(a' → logprob: -10.18349552154541
    9. ' (' → logprob: -10.55849552154541
    10. ')' → logprob: -11.43349552154541

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32819196581840515
    2. '(b' → logprob: -2.0781919956207275
    3. '(' → logprob: -2.7031919956207275
    4. 'b' → logprob: -2.8281919956207275
    5. '((' → logprob: -4.203191757202148
    6. ' (' → logprob: -5.328191757202148
    7. '   ' → logprob: -5.578191757202148
    8. '(a' → logprob: -6.203191757202148
    9. ' ' → logprob: -7.078191757202148
    10. ' b' → logprob: -7.203191757202148

Token 80: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.196760356426239
    2. '*' → logprob: -1.9467604160308838
    3. '*(' → logprob: -3.946760416030884
    4. ' (' → logprob: -4.821760177612305
    5. '(a' → logprob: -5.946760177612305
    6. '(b' → logprob: -6.196760177612305
    7. '(' → logprob: -6.821760177612305
    8. '*b' → logprob: -7.071760177612305
    9. ' *(' → logprob: -7.696760177612305
    10. 'b' → logprob: -7.946760177612305

Token 81: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.865953266620636
    2. '(a' → logprob: -0.990953266620636
    3. '(b' → logprob: -1.6159532070159912
    4. 'b' → logprob: -5.99095344543457
    5. '((' → logprob: -6.36595344543457
    6. ' b' → logprob: -6.61595344543457
    7. '(' → logprob: -6.74095344543457
    8. ' ((' → logprob: -7.61595344543457
    9. '(x' → logprob: -7.74095344543457
    10. ' ' → logprob: -7.99095344543457

Token 82: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7263757586479187
    2. 'a' → logprob: -0.9763757586479187
    3. ' (' → logprob: -2.7263758182525635
    4. 'b' → logprob: -3.6013758182525635
    5. ' a' → logprob: -4.351375579833984
    6. 'area' → logprob: -4.476375579833984
    7. '(area' → logprob: -4.976375579833984
    8. '(b' → logprob: -5.101375579833984
    9. '((' → logprob: -5.851375579833984
    10. ' area' → logprob: -6.101375579833984

Token 83: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14008532464504242
    2. ' *' → logprob: -2.640085220336914
    3. '*(' → logprob: -3.515085220336914
    4. '*b' → logprob: -3.640085220336914
    5. ' -' → logprob: -6.640085220336914
    6. 'b' → logprob: -7.140085220336914
    7. '*y' → logprob: -7.640085220336914
    8. '-' → logprob: -7.765085220336914
    9. '(b' → logprob: -9.515085220336914
    10. ')' → logprob: -9.515085220336914

Token 84: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8043250441551208
    2. 'x' → logprob: -1.3043251037597656
    3. '(x' → logprob: -1.8043251037597656
    4. '(b' → logprob: -2.4293251037597656
    5. ' (' → logprob: -3.9293251037597656
    6. '(' → logprob: -5.679325103759766
    7. ' x' → logprob: -6.054325103759766
    8. ' b' → logprob: -6.179325103759766
    9. '(a' → logprob: -7.304325103759766
    10. '(y' → logprob: -8.429325103759766

Token 85: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06212027370929718
    2. '-' → logprob: -3.437120199203491
    3. '*' → logprob: -3.937120199203491
    4. ' *' → logprob: -5.31212043762207
    5. ')' → logprob: -6.56212043762207
    6. '*y' → logprob: -6.93712043762207
    7. '**' → logprob: -7.68712043762207
    8. ' ' → logprob: -8.06212043762207
    9. '*(' → logprob: -8.81212043762207
    10. '  ' → logprob: -9.56212043762207

Token 86: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8120130896568298
    2. 'y' → logprob: -0.9370130896568298
    3. ' y' → logprob: -1.9370131492614746
    4. ' x' → logprob: -3.9370131492614746
    5. '(x' → logprob: -8.562012672424316
    6. ' (' → logprob: -9.062012672424316
    7. 'a' → logprob: -9.812012672424316
    8. '(y' → logprob: -10.062012672424316
    9. '(' → logprob: -10.437012672424316
    10. '	y' → logprob: -10.437012672424316

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005258660763502121
    2. ' )' → logprob: -5.380258560180664
    3. ')/' → logprob: -8.130258560180664
    4. ')/(' → logprob: -8.630258560180664
    5. ' /' → logprob: -9.380258560180664
    6. '/' → logprob: -10.630258560180664
    7. ' ' → logprob: -11.505258560180664
    8. '/b' → logprob: -11.505258560180664
    9. ')
' → logprob: -12.005258560180664
    10. '   ' → logprob: -12.255258560180664

Token 88: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3543188273906708
    2. ' /' → logprob: -1.2293188571929932
    3. '/b' → logprob: -5.354318618774414
    4. ')' → logprob: -7.354318618774414
    5. '/
' → logprob: -8.604318618774414
    6. '/(' → logprob: -9.229318618774414
    7. ' /
' → logprob: -9.854318618774414
    8. '/a' → logprob: -10.229318618774414
    9. ' ' → logprob: -10.354318618774414
    10. 'b' → logprob: -11.104318618774414

Token 89: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22647260129451752
    2. ' a' → logprob: -1.6014726161956787
    3. ' (' → logprob: -7.9764723777771
    4. 'b' → logprob: -8.226472854614258
    5. '(a' → logprob: -8.726472854614258
    6. '(' → logprob: -8.851472854614258
    7. ' b' → logprob: -9.226472854614258
    8. ')' → logprob: -10.976472854614258
    9. ')a' → logprob: -11.226472854614258
    10. ' ' → logprob: -12.226472854614258

Token 90: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0002905334113165736
    2. '*' → logprob: -9.250290870666504
    3. '2' → logprob: -9.250290870666504
    4. ' **' → logprob: -10.125290870666504
    5. 'b' → logprob: -10.500290870666504
    6. '*b' → logprob: -11.750290870666504
    7. ')' → logprob: -12.125290870666504
    8. ' b' → logprob: -12.250290870666504
    9. '))' → logprob: -12.875290870666504
    10. ')**' → logprob: -13.000290870666504

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004773824184667319
    2. ' ' → logprob: -7.875477313995361
    3. 'b' → logprob: -10.12547779083252
    4. '3' → logprob: -10.25047779083252
    5. '   ' → logprob: -12.12547779083252
    6. ' b' → logprob: -12.87547779083252
    7. '²' → logprob: -13.00047779083252
    8. '
' → logprob: -13.06297779083252
    9. '**' → logprob: -13.68797779083252
    10. '  ' → logprob: -13.87547779083252

Token 92: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0029744952917099
    2. ')' → logprob: -6.502974510192871
    3. ')))' → logprob: -6.752974510192871
    4. ' ))' → logprob: -8.377974510192871
    5. '))
' → logprob: -9.752974510192871
    6. ' ' → logprob: -12.127974510192871
    7. '   ' → logprob: -12.377974510192871
    8. ' )' → logprob: -12.377974510192871
    9. '))

' → logprob: -15.002974510192871
    10. '))
' → logprob: -15.127974510192871

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036510336212813854
    2. 'print' → logprob: -6.003651142120361
    3. ' print' → logprob: -7.003651142120361
    4. ')' → logprob: -8.878650665283203
    5. '    
' → logprob: -10.378650665283203
    6. '<|end|>' → logprob: -10.503650665283203
    7. '```' → logprob: -10.753650665283203
    8. '
' → logprob: -11.253650665283203
    9. '	print' → logprob: -11.503650665283203
    10. ' return' → logprob: -12.128650665283203

Token 94: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027878111228346825
    2. 'print' (adapté à ' print') → logprob: -4.152878284454346
    3. ' print' → logprob: -4.777878284454346
    4. '
' → logprob: -6.402878284454346
    5. ')' → logprob: -6.777878284454346
    6. '    
' → logprob: -8.027877807617188
    7. ')
' → logprob: -9.777877807617188
    8. ' 
' → logprob: -10.402877807617188
    9. ' ' → logprob: -10.527877807617188
    10. '```' → logprob: -10.527877807617188

Token 95: '(angle' (ID: 66047)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12009602785110474
    2. '(angle' → logprob: -2.74509596824646
    3. '(int' → logprob: -3.87009596824646
    4. '(round' → logprob: -4.245096206665039
    5. '(f' → logprob: -4.370096206665039
    6. '('' → logprob: -7.870096206665039
    7. '(abs' → logprob: -8.495096206665039
    8. '("' → logprob: -8.995096206665039
    9. ' (' → logprob: -9.120096206665039
    10. '(format' → logprob: -9.620096206665039

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '))' → logprob: -13.625001907348633
    3. ' )' → logprob: -14.000001907348633
    4. ')`' → logprob: -17.000001907348633
    5. ')
' → logprob: -17.125001907348633
    6. '()' → logprob: -17.750001907348633
    7. ')}' → logprob: -18.500001907348633
    8. '}' → logprob: -19.000001907348633
    9. ')")' → logprob: -19.125001907348633
    10. '())' → logprob: -19.250001907348633

Token 97: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7393320202827454
    2. 'if' → logprob: -1.4893319606781006
    3. '\n' → logprob: -1.6143319606781006
    4. '<|end|>' → logprob: -3.2393319606781006
    5. ')' → logprob: -4.48933219909668
    6. '()' → logprob: -4.73933219909668
    7. '(' → logprob: -4.98933219909668
    8. '\' → logprob: -5.11433219909668
    9. '```' → logprob: -5.11433219909668
    10. '(
' → logprob: -5.36433219909668

Token 98: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023255378007888794
    2. '__' → logprob: -3.7732553482055664
    3. ' ' → logprob: -11.773255348205566
    4. '_' → logprob: -13.398255348205566
    5. ' ' → logprob: -15.148255348205566
    6. '_name' → logprob: -15.773255348205566
    7. 'name' → logprob: -16.023256301879883
    8. '___' → logprob: -16.648256301879883
    9. ' name' → logprob: -17.148256301879883
    10. '/__' → logprob: -17.273256301879883

Token 99: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0029243486933410168
    2. ' __' → logprob: -6.75292444229126
    3. ' ==' → logprob: -7.12792444229126
    4. '==' → logprob: -8.127923965454102
    5. '__.__' → logprob: -8.877923965454102
    6. '_' → logprob: -9.127923965454102
    7. '.__' → logprob: -9.377923965454102
    8. '_name' → logprob: -9.627923965454102
    9. '.' → logprob: -10.252923965454102
    10. '__.' → logprob: -10.377923965454102

Token 100: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.567575034452602e-05
    2. '__.__' → logprob: -9.50009536743164
    3. '__.' → logprob: -11.87509536743164
    4. '___' → logprob: -12.50009536743164
    5. '__["' → logprob: -12.87509536743164
    6. '==' → logprob: -13.00009536743164
    7. '____' → logprob: -13.12509536743164
    8. '_' → logprob: -13.37509536743164
    9. '__[' → logprob: -14.62509536743164
    10. '__('' → logprob: -14.87509536743164

Token 101: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.46718093752861023
    2. '__' → logprob: -1.4671809673309326
    3. '==' → logprob: -1.9671809673309326
    4. '=="' → logprob: -6.2171807289123535
    5. '_' → logprob: -8.467181205749512
    6. '.' → logprob: -8.967181205749512
    7. '=' → logprob: -8.967181205749512
    8. '=='' → logprob: -9.092181205749512
    9. '.__' → logprob: -9.467181205749512
    10. '[' → logprob: -10.342181205749512

Token 102: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10022026300430298
    2. ''' → logprob: -2.350220203399658
    3. ' "__' → logprob: -11.725220680236816
    4. ' "' → logprob: -12.725220680236816
    5. '__' → logprob: -13.225220680236816
    6. ' '__' → logprob: -15.350220680236816
    7. ' '' → logprob: -15.600220680236816
    8. '"user' → logprob: -16.2252197265625
    9. '"name' → logprob: -16.6002197265625
    10. ''s' → logprob: -18.2252197265625

Token 103: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002075933152809739
    2. 'name' → logprob: -8.500207901000977
    3. ' main' → logprob: -12.625207901000977
    4. '_main' → logprob: -15.250207901000977
    5. '	main' → logprob: -16.125207901000977
    6. '"' → logprob: -16.250207901000977
    7. 'built' → logprob: -16.750207901000977
    8. '(main' → logprob: -16.875207901000977
    9. 'file' → logprob: -17.625207901000977
    10. '-main' → logprob: -17.625207901000977

Token 104: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4773351550102234
    2. '__":
' → logprob: -0.9773351550102234
    3. '__.' → logprob: -5.852334976196289
    4. '__:' → logprob: -8.727334976196289
    5. '__.__' → logprob: -9.102334976196289
    6. '__["' → logprob: -9.852334976196289
    7. '.' → logprob: -10.727334976196289
    8. '__':
' → logprob: -11.102334976196289
    9. '__("' → logprob: -12.352334976196289
    10. '_' → logprob: -12.477334976196289

Token 105: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.018496517091989517
    2. '   ' → logprob: -4.518496513366699
    3. 'main' → logprob: -5.518496513366699
    4. '	main' → logprob: -6.143496513366699
    5. ' ' → logprob: -8.0184965133667
    6. '    
' → logprob: -8.2684965133667
    7. ' ' → logprob: -8.5184965133667
    8. ' 
' → logprob: -8.6434965133667
    9. '<|end|>' → logprob: -9.3934965133667
    10. '    ' → logprob: -10.0184965133667

Token 106: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -15.0
    3. '	main' → logprob: -21.5
    4. '_main' → logprob: -25.75
    5. '.main' → logprob: -26.25
    6. '   ' → logprob: -26.75
    7. 'Main' → logprob: -27.5
    8. '(main' → logprob: -28.125
    9. 'mainwindow' → logprob: -29.375
    10. '主' → logprob: -29.625

Token 107: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4617256056226324e-05
    2. '()
' → logprob: -11.500014305114746
    3. '(' → logprob: -13.250014305114746
    4. ' ()' → logprob: -14.000014305114746
    5. '()`' → logprob: -14.375014305114746
    6. '()

' → logprob: -14.625014305114746
    7. '();' → logprob: -15.750014305114746
    8. '()\' → logprob: -16.125015258789062
    9. '()]' → logprob: -16.375015258789062
    10. '()
' → logprob: -16.500015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 41.90%
Précision (top 10): 87.62%
================================================================================
