================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import chain, tee, starmap

a, b = starmap(lambda u, v: int(u) - 1, zip(*tee(input().split(), 2)))
L = list(map(lambda _: list(map(int, input().split())), range(b + 1)))
L = list(sorted(L, key=lambda x: x[1]))

def fold(seq, init, func):
    return reduce(lambda acc, val: func(acc, val), seq, init)

def sched(acc, l):
    bridge_right, ans = acc
    c = bridge_right >= l[0] and bridge_right < l[1]
    if not c:
        return (l[1] - 1, ans + 1)
    return (bridge_right, ans)

bridge_right, ans = fold(L, (-float('inf'), 0), sched)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8743318915367126
    2. ' operator' → logprob: -1.4993319511413574
    3. ' itertools' → logprob: -1.6243319511413574
    4. ' collections' → logprob: -1.8743319511413574
    5. ' os' → logprob: -4.874331951141357
    6. 'operator' → logprob: -7.499331951141357
    7. ' typing' → logprob: -8.4993314743042
    8. ' sys' → logprob: -8.6243314743042
    9. 'collections' → logprob: -8.9993314743042
    10. 'math' → logprob: -8.9993314743042

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6127365827560425
    2. 'import' → logprob: -0.8627365827560425
    3. '.' → logprob: -3.362736701965332
    4. '.import' → logprob: -6.737736701965332
    5. ' .' → logprob: -9.362736701965332
    6. '	import' → logprob: -9.737736701965332
    7. '.im' → logprob: -10.112736701965332
    8. '_import' → logprob: -10.487736701965332
    9. ' ' → logprob: -10.487736701965332
    10. '<|end|>' → logprob: -11.487736701965332

Token 8: ' chain' (ID: 13464)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.0847846269607544
    2. 'count' → logprob: -1.0847846269607544
    3. 'acc' → logprob: -2.334784507751465
    4. 'cycle' → logprob: -2.709784507751465
    5. ' group' → logprob: -2.834784507751465
    6. 'chain' → logprob: -2.959784507751465
    7. 'com' → logprob: -4.209784507751465
    8. ' cycle' → logprob: -4.834784507751465
    9. 'product' → logprob: -5.084784507751465
    10. ' chain' → logprob: -5.334784507751465

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25375452637672424
    2. '\' → logprob: -2.6287546157836914
    3. '(
' → logprob: -3.1287546157836914
    4. '.' → logprob: -3.2537546157836914
    5. 'def' → logprob: -3.6287546157836914
    6. ',' → logprob: -3.7537546157836914
    7. '\n' → logprob: -4.378754615783691
    8. 'import' → logprob: -6.628754615783691
    9. '`' → logprob: -7.378754615783691
    10. 'for' → logprob: -7.378754615783691

Token 10: ' tee' (ID: 44157)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.2887395918369293
    2. ' is' → logprob: -2.2887396812438965
    3. 'is' → logprob: -3.1637396812438965
    4. 'count' → logprob: -3.9137396812438965
    5. ' group' → logprob: -4.0387396812438965
    6. 'group' → logprob: -4.0387396812438965
    7. 'cycle' → logprob: -4.4137396812438965
    8. 'compress' → logprob: -5.2887396812438965
    9. ' cycle' → logprob: -5.5387396812438965
    10. 'product' → logprob: -5.5387396812438965

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9588927030563354
    2. '\' → logprob: -1.7088927030563354
    3. 'def' → logprob: -1.9588927030563354
    4. '\n' → logprob: -1.9588927030563354
    5. '(' → logprob: -3.333892822265625
    6. 'import' → logprob: -3.708892822265625
    7. '
' → logprob: -3.708892822265625
    8. '```' → logprob: -3.958892822265625
    9. 'for' → logprob: -4.583892822265625
    10. '.' → logprob: -4.833892822265625

Token 12: ' st' (ID: 420)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.7419376969337463
    2. ' is' → logprob: -1.4919376373291016
    3. 'com' → logprob: -2.2419376373291016
    4. 'filter' → logprob: -2.6169376373291016
    5. 'acc' → logprob: -3.6169376373291016
    6. 'zip' → logprob: -3.7419376373291016
    7. 'group' → logprob: -3.9919376373291016
    8. 'product' → logprob: -4.241937637329102
    9. 'count' → logprob: -4.741937637329102
    10. ' group' → logprob: -5.366937637329102

Token 13: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.22594018280506134
    2. 'ar' → logprob: -1.600940227508545
    3. 'op' → logprob: -9.225939750671387
    4. 'art' → logprob: -9.725939750671387
    5. 'arb' → logprob: -9.975939750671387
    6. 'ars' → logprob: -10.100939750671387
    7. 'arms' → logprob: -10.100939750671387
    8. 'arts' → logprob: -10.225939750671387
    9. 'arp' → logprob: -10.350939750671387
    10. 'r' → logprob: -11.100939750671387

Token 14: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -9.088346359931165e-07
    2. 'apse' → logprob: -14.625000953674316
    3. 'a' → logprob: -15.375000953674316
    4. 'ethod' → logprob: -17.25
    5. '_ap' → logprob: -17.25
    6. ' ap' → logprob: -17.625
    7. 'ul' → logprob: -17.875
    8. 'ep' → logprob: -17.875
    9. '```' → logprob: -17.875
    10. 'up' → logprob: -18.125

Token 15: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21166765689849854
    2. '(
' → logprob: -2.211667537689209
    3. 'def' → logprob: -3.336667537689209
    4. ',' → logprob: -3.461667537689209
    5. '\' → logprob: -5.461667537689209
    6. '\n' → logprob: -5.461667537689209
    7. '(

' → logprob: -6.336667537689209
    8. '
' → logprob: -6.586667537689209
    9. ',
' → logprob: -7.211667537689209
    10. '```' → logprob: -7.586667537689209

Token 16: 'a' (ID: 64)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14410336315631866
    2. '(' → logprob: -2.1441032886505127
    3. 'd' → logprob: -4.644103527069092
    4. '\' → logprob: -5.894103527069092
    5. '(
' → logprob: -6.644103527069092
    6. '```' → logprob: -6.644103527069092
    7. ',' → logprob: -7.269103527069092
    8. '#' → logprob: -8.394103050231934
    9. '`' → logprob: -8.519103050231934
    10. ')' → logprob: -8.644103050231934

Token 17: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3313461542129517
    2. 'r' → logprob: -1.8313461542129517
    3. ' =' → logprob: -1.9563461542129517
    4. '=' → logprob: -2.206346035003662
    5. 'rg' → logprob: -2.956346035003662
    6. '.' → logprob: -3.206346035003662
    7. ' ' → logprob: -3.331346035003662
    8. 'p' → logprob: -3.456346035003662
    9. 'n' → logprob: -3.581346035003662
    10. ',' → logprob: -3.581346035003662

Token 18: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05592464655637741
    2. ' b' → logprob: -2.930924654006958
    3. '*b' → logprob: -7.055924415588379
    4. '*' → logprob: -9.055924415588379
    5. ' ' → logprob: -10.930924415588379
    6. ' *' → logprob: -11.055924415588379
    7. 'a' → logprob: -11.930924415588379
    8. '_b' → logprob: -12.680924415588379
    9. ' =' → logprob: -12.680924415588379
    10. 's' → logprob: -13.055924415588379

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021443314850330353
    2. '=' → logprob: -3.8964433670043945
    3. ',' → logprob: -7.0214433670043945
    4. ' ,' → logprob: -12.271443367004395
    5. ' ' → logprob: -13.646443367004395
    6. ')' → logprob: -14.021443367004395
    7. ' =
' → logprob: -15.146443367004395
    8. '  ' → logprob: -15.396443367004395
    9. 's' → logprob: -15.958943367004395
    10. ' =
' → logprob: -16.021442413330078

Token 20: ' st' (ID: 420)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.5689325928688049
    2. ' tee' → logprob: -0.9439325928688049
    3. '[]' → logprob: -4.56893253326416
    4. 'map' → logprob: -4.81893253326416
    5. '1' → logprob: -5.31893253326416
    6. ' ' → logprob: -5.56893253326416
    7. 'iter' → logprob: -5.69393253326416
    8. 'range' → logprob: -5.94393253326416
    9. ' []' → logprob: -6.06893253326416
    10. ' map' → logprob: -6.44393253326416

Token 21: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -5.6696149840718135e-05
    2. 'ar' → logprob: -10.125056266784668
    3. 'a' → logprob: -11.375056266784668
    4. 'armac' → logprob: -13.000056266784668
    5. 'art' → logprob: -14.875056266784668
    6. 'am' → logprob: -15.000056266784668
    7. 'arman' → logprob: -15.000056266784668
    8. 'r' → logprob: -15.500056266784668
    9. 'rm' → logprob: -15.500056266784668
    10. 'armat' → logprob: -15.625056266784668

Token 22: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.3856492842023727e-06
    2. 'atch' → logprob: -14.375000953674316
    3. 'a' → logprob: -15.125000953674316
    4. 'ult' → logprob: -15.625000953674316
    5. 'at' → logprob: -16.000001907348633
    6. 'ethod' → logprob: -17.250001907348633
    7. 'apping' → logprob: -17.625001907348633
    8. 'er' → logprob: -17.875001907348633
    9. 'apse' → logprob: -17.875001907348633
    10. 'apply' → logprob: -17.875001907348633

Token 23: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036713626235723495
    2. '(chain' → logprob: -3.5367136001586914
    3. '(lambda' → logprob: -5.161713600158691
    4. '(re' → logprob: -8.161713600158691
    5. '(f' → logprob: -8.661713600158691
    6. '(st' → logprob: -8.911713600158691
    7. '((' → logprob: -9.161713600158691
    8. '(ch' → logprob: -9.536713600158691
    9. '(s' → logprob: -9.661713600158691
    10. '(
' → logprob: -9.911713600158691

Token 24: ' u' (ID: 337)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0902869775891304
    2. 'x' → logprob: -2.46528697013855
    3. ' a' → logprob: -7.215287208557129
    4. 'a' → logprob: -8.215287208557129
    5. ' s' → logprob: -9.340287208557129
    6. ',' → logprob: -9.715287208557129
    7. 's' → logprob: -10.090287208557129
    8. ' lambda' → logprob: -10.340287208557129
    9. ' ,' → logprob: -10.590287208557129
    10. ' op' → logprob: -10.840287208557129

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05725706368684769
    2. ' x' → logprob: -3.5572571754455566
    3. ' ,' → logprob: -3.8072571754455566
    4. 'x' → logprob: -6.807257175445557
    5. ' u' → logprob: -6.807257175445557
    6. ' a' → logprob: -7.057257175445557
    7. ',v' → logprob: -7.682257175445557
    8. ',x' → logprob: -8.182256698608398
    9. ',u' → logprob: -8.932256698608398
    10. ' v' → logprob: -9.057256698608398

Token 26: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4746110737323761
    2. 'v' → logprob: -0.9746110439300537
    3. ' ' → logprob: -8.974611282348633
    4. 'x' → logprob: -10.099611282348633
    5. 'n' → logprob: -10.224611282348633
    6. ' t' → logprob: -10.349611282348633
    7. ' s' → logprob: -10.412111282348633
    8. ' n' → logprob: -10.599611282348633
    9. ' x' → logprob: -10.599611282348633
    10. 's' → logprob: -10.662111282348633

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034661244601011276
    2. ',' → logprob: -3.534661293029785
    3. ' :' → logprob: -5.409661293029785
    4. ',u' → logprob: -8.659661293029785
    5. ' ,' → logprob: -9.159661293029785
    6. ':u' → logprob: -10.159661293029785
    7. ',v' → logprob: -10.659661293029785
    8. ' u' → logprob: -11.159661293029785
    9. ',:' → logprob: -11.659661293029785
    10. ')' → logprob: -11.972161293029785

Token 28: ' int' (ID: 677)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.11101008951663971
    2. 'u' → logprob: -2.6110100746154785
    3. ' (' → logprob: -4.4860100746154785
    4. ' max' → logprob: -4.9860100746154785
    5. ' a' → logprob: -5.7360100746154785
    6. '(u' → logprob: -5.9860100746154785
    7. ' abs' → logprob: -6.6110100746154785
    8. ' min' → logprob: -6.6110100746154785
    9. 'a' → logprob: -6.8610100746154785
    10. ' ' → logprob: -6.9860100746154785

Token 29: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.3404076397418976
    2. '(' → logprob: -1.9654076099395752
    3. '(a' → logprob: -2.340407609939575
    4. '(v' → logprob: -4.465407848358154
    5. '(bool' → logprob: -4.590407848358154
    6. '((' → logprob: -4.590407848358154
    7. '(abs' → logprob: -4.965407848358154
    8. '(not' → logprob: -5.215407848358154
    9. ')' → logprob: -5.465407848358154
    10. '(max' → logprob: -7.215407848358154

Token 30: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4792057275772095
    2. ')' → logprob: -1.7292057275772095
    3. ' +' → logprob: -2.22920560836792
    4. '*' → logprob: -3.22920560836792
    5. '-' → logprob: -4.60420560836792
    6. '**' → logprob: -5.10420560836792
    7. ')+' → logprob: -5.10420560836792
    8. '+b' → logprob: -5.35420560836792
    9. '),' → logprob: -5.72920560836792
    10. ',' → logprob: -5.97920560836792

Token 31: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42767658829689026
    2. ' +' → logprob: -1.5526765584945679
    3. '*' → logprob: -3.1776766777038574
    4. ',' → logprob: -3.3026766777038574
    5. ')' → logprob: -4.052676677703857
    6. ' *' → logprob: -4.177676677703857
    7. '-' → logprob: -4.927676677703857
    8. '**' → logprob: -5.802676677703857
    9. '),' → logprob: -6.052676677703857
    10. '+b' → logprob: -6.302676677703857

Token 32: ' ' (ID: 220)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03499075025320053
    2. ' v' → logprob: -3.9099907875061035
    3. 'int' → logprob: -4.2849907875061035
    4. ' int' → logprob: -7.5349907875061035
    5. '1' → logprob: -11.034990310668945
    6. '	v' → logprob: -11.534990310668945
    7. ' ' → logprob: -12.534990310668945
    8. '   ' → logprob: -13.534990310668945
    9. '2' → logprob: -13.784990310668945
    10. '  ' → logprob: -13.784990310668945

Token 33: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.020716592669487
    2. 'int' → logprob: -3.895716667175293
    3. ' v' → logprob: -9.020716667175293
    4. '1' → logprob: -10.895716667175293
    5. ' int' → logprob: -10.895716667175293
    6. '   ' → logprob: -12.520716667175293
    7. '  ' → logprob: -12.645716667175293
    8. ' ' → logprob: -13.020716667175293
    9. '2' → logprob: -13.520716667175293
    10. '    ' → logprob: -14.583216667175293

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009366796351969242
    2. ')' → logprob: -5.009366989135742
    3. '),' → logprob: -6.259366989135742
    4. ' ,' → logprob: -7.634366989135742
    5. ',b' → logprob: -9.384366989135742
    6. ',a' → logprob: -11.009366989135742
    7. 'a' → logprob: -11.134366989135742
    8. 's' → logprob: -11.384366989135742
    9. ',v' → logprob: -11.384366989135742
    10. ' ' → logprob: -11.634366989135742

Token 35: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.8739171028137207
    2. ' zip' → logprob: -1.1239171028137207
    3. '[(' → logprob: -2.1239171028137207
    4. 'chain' → logprob: -2.4989171028137207
    5. ' chain' → logprob: -3.6239171028137207
    6. ' [(' → logprob: -4.873917102813721
    7. '(zip' → logprob: -5.498917102813721
    8. '((' → logprob: -5.873917102813721
    9. 'b' → logprob: -6.498917102813721
    10. 'a' → logprob: -6.498917102813721

Token 36: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3142571449279785
    2. '(a' → logprob: -1.6892571449279785
    3. '(chain' → logprob: -2.8142571449279785
    4. '(b' → logprob: -3.8142571449279785
    5. '((' → logprob: -7.3142571449279785
    6. '(s' → logprob: -7.6892571449279785
    7. '(range' → logprob: -7.6892571449279785
    8. '(
' → logprob: -8.06425666809082
    9. ')' → logprob: -8.06425666809082
    10. '([' → logprob: -8.81425666809082

Token 37: 'tee' (ID: 11140)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6000204682350159
    2. '(b' → logprob: -1.725020408630371
    3. '([' → logprob: -2.350020408630371
    4. '[a' → logprob: -2.600020408630371
    5. '[b' → logprob: -3.725020408630371
    6. 'b' → logprob: -3.850020408630371
    7. 'a' → logprob: -4.225020408630371
    8. '(' → logprob: -5.100020408630371
    9. 'chain' → logprob: -5.225020408630371
    10. '((' → logprob: -5.475020408630371

Token 38: '(input' (ID: 10054)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.3813216984272003
    2. '(a' → logprob: -1.256321668624878
    3. '((' → logprob: -4.006321907043457
    4. '(chain' → logprob: -4.756321907043457
    5. '([' → logprob: -6.256321907043457
    6. '(' → logprob: -6.381321907043457
    7. 'b' → logprob: -7.506321907043457
    8. '(s' → logprob: -8.631321907043457
    9. '(ch' → logprob: -8.756321907043457
    10. '(range' → logprob: -8.756321907043457

Token 39: '().' (ID: 1454)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.8598484992980957
    2. '())))' → logprob: -1.2348484992980957
    3. '()' → logprob: -1.8598484992980957
    4. '()))' → logprob: -2.2348484992980957
    5. '(' → logprob: -4.234848499298096
    6. '())' → logprob: -5.359848499298096
    7. '(()' → logprob: -6.984848499298096
    8. '()),' → logprob: -7.484848499298096
    9. ')))' → logprob: -7.734848499298096
    10. '().' → logprob: -7.984848499298096

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.2574325501918793
    2. 'strip' → logprob: -1.5074325799942017
    3. 'rstrip' → logprob: -5.882432460784912
    4. '().' → logprob: -6.507432460784912
    5. 'read' → logprob: -7.757432460784912
    6. '()))' → logprob: -9.25743293762207
    7. 'str' → logprob: -9.38243293762207
    8. '(strip' → logprob: -9.50743293762207
    9. ')' → logprob: -9.63243293762207
    10. 'replace' → logprob: -9.63243293762207

Token 41: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.07267135381698608
    2. '())))' → logprob: -3.447671413421631
    3. '(' → logprob: -3.822671413421631
    4. '()' → logprob: -4.697671413421631
    5. '()))' → logprob: -5.197671413421631
    6. ',' → logprob: -7.072671413421631
    7. ')))' → logprob: -8.197670936584473
    8. '()),' → logprob: -8.447670936584473
    9. '())))
' → logprob: -9.072670936584473
    10. '())' → logprob: -9.072670936584473

Token 42: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009776279330253601
    2. ' ' → logprob: -4.6347761154174805
    3. '  ' → logprob: -12.13477611541748
    4. '3' → logprob: -12.13477611541748
    5. '   ' → logprob: -13.19727611541748
    6. '```' → logprob: -13.38477611541748
    7. '1' → logprob: -13.75977611541748
    8. '(' → logprob: -13.88477611541748
    9. ')' → logprob: -14.44727611541748
    10. '    ' → logprob: -14.57227611541748

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008245145436376333
    2. ' ' → logprob: -7.125824451446533
    3. '(' → logprob: -11.875824928283691
    4. '  ' → logprob: -12.250824928283691
    5. '```' → logprob: -13.438324928283691
    6. '3' → logprob: -13.563324928283691
    7. '   ' → logprob: -13.563324928283691
    8. ')' → logprob: -14.375824928283691
    9. '    ' → logprob: -14.625824928283691
    10. '1' → logprob: -14.625824928283691

Token 44: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02868107706308365
    2. '))' → logprob: -3.9036810398101807
    3. ')' → logprob: -4.90368127822876
    4. '))))' → logprob: -7.52868127822876
    5. ')));' → logprob: -10.278680801391602
    6. '),' → logprob: -10.403680801391602
    7. ' ' → logprob: -10.653680801391602
    8. ')))
' → logprob: -10.778680801391602
    9. '))),' → logprob: -11.528680801391602
    10. ')))

' → logprob: -11.653680801391602

Token 45: 'L' (ID: 43)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46234986186027527
    2. '(' → logprob: -1.2123498916625977
    3. '[' → logprob: -3.4623498916625977
    4. ',' → logprob: -3.5873498916625977
    5. '(
' → logprob: -5.462349891662598
    6. '()' → logprob: -5.962349891662598
    7. ':' → logprob: -6.587349891662598
    8. ',)' → logprob: -7.087349891662598
    9. 'Trace' → logprob: -7.212349891662598
    10. ' ' → logprob: -7.462349891662598

Token 46: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2684326469898224
    2. 'ist' → logprob: -2.8934326171875
    3. 'en' → logprob: -3.2684326171875
    4. ',' → logprob: -3.3934326171875
    5. '=' → logprob: -3.3934326171875
    6. '.' → logprob: -4.5184326171875
    7. '(' → logprob: -5.1434326171875
    8. 'et' → logprob: -5.1434326171875
    9. 'ength' → logprob: -5.3934326171875
    10. 'e' → logprob: -5.3934326171875

Token 47: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.059464931488037
    2. ' list' → logprob: -1.434464931488037
    3. '[]' → logprob: -1.809464931488037
    4. ' []' → logprob: -2.309464931488037
    5. ' [' → logprob: -2.684464931488037
    6. '[' → logprob: -3.059464931488037
    7. '[a' → logprob: -4.934464931488037
    8. '[int' → logprob: -5.059464931488037
    9. '[list' → logprob: -5.184464931488037
    10. 'a' → logprob: -5.434464931488037

Token 48: '(map' (ID: 16946)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.05938984081149101
    2. '(' → logprob: -3.30938982963562
    3. '(a' → logprob: -4.809390068054199
    4. '(range' → logprob: -5.434390068054199
    5. '(map' → logprob: -5.559390068054199
    6. '(st' → logprob: -5.559390068054199
    7. '(zip' → logprob: -7.684390068054199
    8. '(t' → logprob: -8.8093900680542
    9. '(filter' → logprob: -9.5593900680542
    10. '(ch' → logprob: -9.8093900680542

Token 49: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.15803639590740204
    2. '(lambda' → logprob: -2.658036470413208
    3. '(' → logprob: -3.033036470413208
    4. '(str' → logprob: -3.783036470413208
    5. '(abs' → logprob: -5.658036231994629
    6. '(list' → logprob: -7.783036231994629
    7. '(eval' → logprob: -8.533036231994629
    8. '(tuple' → logprob: -8.533036231994629
    9. '(range' → logprob: -8.658036231994629
    10. '(ord' → logprob: -9.283036231994629

Token 50: ' _:' (ID: 133568)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6132340431213379
    2. 'lambda' → logprob: -1.488234043121338
    3. 'int' → logprob: -2.363234043121338
    4. ' int' → logprob: -3.113234043121338
    5. '(lambda' → logprob: -3.863234043121338
    6. 'x' → logprob: -4.238234043121338
    7. ' x' → logprob: -4.363234043121338
    8. '(int' → logprob: -4.488234043121338
    9. ')' → logprob: -5.113234043121338
    10. 'a' → logprob: -5.238234043121338

Token 51: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8700852394104004
    2. '_' → logprob: -1.8700852394104004
    3. 'a' → logprob: -2.1200852394104004
    4. ' int' → logprob: -2.4950852394104004
    5. '0' → logprob: -3.7450852394104004
    6. ' _' → logprob: -3.8700852394104004
    7. ' a' → logprob: -3.9950852394104004
    8. 'b' → logprob: -4.3700852394104
    9. 'abs' → logprob: -4.3700852394104
    10. '_[' → logprob: -4.4950852394104

Token 52: '(map' (ID: 16946)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.09255141019821167
    2. '(chain' → logprob: -2.9675514698028564
    3. '(map' → logprob: -3.4675514698028564
    4. '(' → logprob: -5.467551231384277
    5. '(input' → logprob: -7.842551231384277
    6. '(a' → logprob: -7.967551231384277
    7. '(filter' → logprob: -8.467551231384277
    8. '())' → logprob: -9.092551231384277
    9. '()' → logprob: -9.592551231384277
    10. 'range' → logprob: -9.842551231384277

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04982776194810867
    2. '(lambda' → logprob: -3.049827814102173
    3. '(' → logprob: -7.174827575683594
    4. '(abs' → logprob: -9.174827575683594
    5. '<int' → logprob: -9.549827575683594
    6. 'int' → logprob: -9.549827575683594
    7. '(ord' → logprob: -9.799827575683594
    8. '(str' → logprob: -9.924827575683594
    9. '(eval' → logprob: -10.299827575683594
    10. ')' → logprob: -10.799827575683594

Token 54: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10175126791000366
    2. ',input' → logprob: -2.7267513275146484
    3. ',' → logprob: -4.351751327514648
    4. 'input' → logprob: -4.601751327514648
    5. '(' → logprob: -5.101751327514648
    6. '(a' → logprob: -7.226751327514648
    7. ')' → logprob: -7.726751327514648
    8. 'a' → logprob: -9.351751327514648
    9. ',a' → logprob: -9.351751327514648
    10. '(L' → logprob: -9.351751327514648

Token 55: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005030590575188398
    2. ' input' → logprob: -5.880030632019043
    3. 'a' → logprob: -6.630030632019043
    4. '_' → logprob: -7.755030632019043
    5. '_.' → logprob: -9.630030632019043
    6. 'b' → logprob: -9.755030632019043
    7. 'chain' → logprob: -10.130030632019043
    8. 'L' → logprob: -10.380030632019043
    9. '_input' → logprob: -10.505030632019043
    10. '_)' → logprob: -10.505030632019043

Token 56: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000607602356467396
    2. '()' → logprob: -7.625607490539551
    3. '())))' → logprob: -9.62560749053955
    4. '()))' → logprob: -10.25060749053955
    5. '()),' → logprob: -11.37560749053955
    6. ')),' → logprob: -13.62560749053955
    7. ')))' → logprob: -13.62560749053955
    8. '())' → logprob: -14.00060749053955
    9. '()));' → logprob: -14.00060749053955
    10. '(' → logprob: -14.62560749053955

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004577174549922347
    2. 'strip' → logprob: -8.000457763671875
    3. ' split' → logprob: -9.375457763671875
    4. ' ' → logprob: -10.875457763671875
    5. '().' → logprob: -11.625457763671875
    6. 'read' → logprob: -12.375457763671875
    7. 'rstrip' → logprob: -12.625457763671875
    8. '(split' → logprob: -14.750457763671875
    9. '  ' → logprob: -14.750457763671875
    10. '   ' → logprob: -14.875457763671875

Token 58: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7381113171577454
    2. '()))' → logprob: -0.7381113171577454
    3. '())))' → logprob: -3.2381112575531006
    4. '())' → logprob: -6.11311149597168
    5. '(' → logprob: -7.48811149597168
    6. '())),
' → logprob: -7.61311149597168
    7. '()),' → logprob: -7.86311149597168
    8. ')))' → logprob: -8.23811149597168
    9. ')),' → logprob: -8.48811149597168
    10. '))' → logprob: -8.61311149597168

Token 59: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.33906289935112
    2. '()' → logprob: -2.2140629291534424
    3. '))' → logprob: -2.3390629291534424
    4. ')' → logprob: -3.5890629291534424
    5. '()))' → logprob: -3.8390629291534424
    6. '))))' → logprob: -4.339062690734863
    7. ')))' → logprob: -4.464062690734863
    8. '))),' → logprob: -5.464062690734863
    9. '())' → logprob: -6.964062690734863
    10. '),' → logprob: -7.339062690734863

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0042671505361795425
    2. ' range' → logprob: -5.50426721572876
    3. '   ' → logprob: -9.754266738891602
    4. ' ' → logprob: -10.254266738891602
    5. '[' → logprob: -10.379266738891602
    6. '  ' → logprob: -10.504266738891602
    7. '	range' → logprob: -10.879266738891602
    8. '    ' → logprob: -11.879266738891602
    9. '(range' → logprob: -12.004266738891602
    10. 'rang' → logprob: -13.754266738891602

Token 61: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.576283872127533
    2. '(a' → logprob: -0.826283872127533
    3. '(' → logprob: -8.20128345489502
    4. '(n' → logprob: -10.32628345489502
    5. '(int' → logprob: -11.45128345489502
    6. '(
' → logprob: -11.95128345489502
    7. '(*' → logprob: -11.95128345489502
    8. 'b' → logprob: -12.20128345489502
    9. 'a' → logprob: -12.57628345489502
    10. '(len' → logprob: -13.57628345489502

Token 62: ' +' (ID: 659)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.055751487612724304
    2. ')' → logprob: -2.9307515621185303
    3. '))' → logprob: -7.805751323699951
    4. ')))
' → logprob: -8.18075180053711
    5. ')));' → logprob: -9.93075180053711
    6. ' ' → logprob: -10.43075180053711
    7. '))))' → logprob: -10.68075180053711
    8. ')))

' → logprob: -10.80575180053711
    9. ' )' → logprob: -11.43075180053711
    10. '')))' → logprob: -11.55575180053711

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003106057643890381
    2. ' ' → logprob: -5.878106117248535
    3. ')' → logprob: -9.003106117248535
    4. '(' → logprob: -9.753106117248535
    5. '2' → logprob: -10.003106117248535
    6. '))' → logprob: -11.128106117248535
    7. '0' → logprob: -11.628106117248535
    8. 'a' → logprob: -12.378106117248535
    9. '  ' → logprob: -12.378106117248535
    10. '```' → logprob: -12.628106117248535

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015860318671911955
    2. ' ' → logprob: -6.501585960388184
    3. 'a' → logprob: -9.876585960388184
    4. '2' → logprob: -10.751585960388184
    5. 'b' → logprob: -12.751585960388184
    6. ' a' → logprob: -13.001585960388184
    7. '  ' → logprob: -13.001585960388184
    8. ' b' → logprob: -14.501585960388184
    9. '0' → logprob: -14.626585960388184
    10. '3' → logprob: -15.001585960388184

Token 65: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.013528411276638508
    2. ')' → logprob: -4.513528347015381
    3. '))' → logprob: -6.013528347015381
    4. '))))' → logprob: -11.388528823852539
    5. ')))
' → logprob: -11.638528823852539
    6. ')));' → logprob: -11.888528823852539
    7. '),' → logprob: -13.763528823852539
    8. ' ' → logprob: -14.263528823852539
    9. ')))

' → logprob: -14.263528823852539
    10. '')))' → logprob: -14.638528823852539

Token 66: 'L' (ID: 43)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1740429401397705
    2. '[' → logprob: -2.6740429401397705
    3. ')' → logprob: -2.7990429401397705
    4. '(' → logprob: -4.674042701721191
    5. ',
' → logprob: -4.674042701721191
    6. '.' → logprob: -5.674042701721191
    7. 'a' → logprob: -6.174042701721191
    8. ':' → logprob: -6.424042701721191
    9. ';' → logprob: -7.299042701721191
    10. ',a' → logprob: -7.799042701721191

Token 67: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12757112085819244
    2. ')' → logprob: -2.3775711059570312
    3. '(' → logprob: -3.7525711059570312
    4. ',' → logprob: -7.502571105957031
    5. '[
' → logprob: -7.502571105957031
    6. '(
' → logprob: -7.627571105957031
    7. '<|end|>' → logprob: -8.127571105957031
    8. '.' → logprob: -8.377571105957031
    9. ')[' → logprob: -8.377571105957031
    10. '[]' → logprob: -8.627571105957031

Token 68: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.15642285346984863
    2. ' [' → logprob: -2.5314228534698486
    3. ' chain' → logprob: -3.5314228534698486
    4. 'list' → logprob: -4.1564226150512695
    5. '[' → logprob: -4.5314226150512695
    6. ' L' → logprob: -6.2814226150512695
    7. ' sorted' → logprob: -6.2814226150512695
    8. 'chain' → logprob: -6.6564226150512695
    9. '[list' → logprob: -6.9064226150512695
    10. ' sum' → logprob: -7.0314226150512695

Token 69: '(sorted' (ID: 92488)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.0024751818273216486
    2. '(' → logprob: -6.127475261688232
    3. '(map' → logprob: -8.252474784851074
    4. '(it' → logprob: -12.127474784851074
    5. '(flat' → logprob: -12.377474784851074
    6. '(list' → logprob: -12.502474784851074
    7. '(filter' → logprob: -12.752474784851074
    8. '(st' → logprob: -13.252474784851074
    9. '(ch' → logprob: -13.377474784851074
    10. '(re' → logprob: -13.377474784851074

Token 70: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.02391962893307209
    2. '(' → logprob: -3.7739195823669434
    3. '(lambda' → logprob: -7.398919582366943
    4. '((' → logprob: -11.023920059204102
    5. '(
' → logprob: -11.648920059204102
    6. '(l' → logprob: -11.898920059204102
    7. '(range' → logprob: -11.898920059204102
    8. '(chain' → logprob: -12.273920059204102
    9. '(I' → logprob: -12.773920059204102
    10. '(A' → logprob: -12.898920059204102

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1749330312013626
    2. ',key' → logprob: -2.2999329566955566
    3. '))' → logprob: -2.9249329566955566
    4. '(),' → logprob: -5.799932956695557
    5. '(key' → logprob: -6.799932956695557
    6. ')' → logprob: -7.424932956695557
    7. '()))' → logprob: -7.549932956695557
    8. '(' → logprob: -8.299933433532715
    9. 'key' → logprob: -8.674933433532715
    10. ' ,' → logprob: -8.799933433532715

Token 72: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.44858628511428833
    2. ' key' → logprob: -1.0735862255096436
    3. 'lambda' → logprob: -4.198586463928223
    4. ' lambda' → logprob: -5.573586463928223
    5. 'reverse' → logprob: -7.448586463928223
    6. '=lambda' → logprob: -9.198586463928223
    7. ' reverse' → logprob: -10.198586463928223
    8. 'a' → logprob: -10.698586463928223
    9. '	key' → logprob: -10.698586463928223
    10. ')' → logprob: -11.198586463928223

Token 73: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.04699018970131874
    2. '=' → logprob: -3.296990156173706
    3. '=len' → logprob: -4.796990394592285
    4. '=L' → logprob: -7.421990394592285
    5. '=a' → logprob: -10.796990394592285
    6. '=int' → logprob: -11.296990394592285
    7. '=sum' → logprob: -11.671990394592285
    8. '=l' → logprob: -12.046990394592285
    9. '=A' → logprob: -12.796990394592285
    10. '=list' → logprob: -14.171990394592285

Token 74: ' x' (ID: 1215)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.013052694499492645
    2. '=len' → logprob: -4.888052463531494
    3. '=' → logprob: -5.263052463531494
    4. ' =' → logprob: -9.888052940368652
    5. '=L' → logprob: -9.888052940368652
    6. '<|end|>' → logprob: -10.138052940368652
    7. ':' → logprob: -10.638052940368652
    8. 'lambda' → logprob: -10.888052940368652
    9. '=list' → logprob: -11.263052940368652
    10. ' lambda' → logprob: -11.638052940368652

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3259645402431488
    2. ':x' → logprob: -1.3259645700454712
    3. '=x' → logprob: -5.325964450836182
    4. '=lambda' → logprob: -5.450964450836182
    5. ':L' → logprob: -7.075964450836182
    6. ' :' → logprob: -7.200964450836182
    7. '=' → logprob: -7.450964450836182
    8. '=len' → logprob: -7.450964450836182
    9. 'x' → logprob: -8.32596492767334
    10. ':=' → logprob: -9.07596492767334

Token 76: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13915877044200897
    2. ' x' → logprob: -2.1391587257385254
    3. 'a' → logprob: -5.514158725738525
    4. 'len' → logprob: -6.264158725738525
    5. '-' → logprob: -6.639158725738525
    6. 'sum' → logprob: -6.764158725738525
    7. ' -' → logprob: -7.139158725738525
    8. ' a' → logprob: -7.764158725738525
    9. ' sum' → logprob: -7.764158725738525
    10. '-x' → logprob: -8.139159202575684

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00395907461643219
    2. '[-' → logprob: -5.8789591789245605
    3. '[:' → logprob: -8.003958702087402
    4. ')' → logprob: -8.503958702087402
    5. '[
' → logprob: -9.003958702087402
    6. ':' → logprob: -9.253958702087402
    7. '[len' → logprob: -9.628958702087402
    8. '[::-' → logprob: -9.753958702087402
    9. ',' → logprob: -10.003958702087402
    10. '0' → logprob: -10.128958702087402

Token 78: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12495647370815277
    2. '1' → logprob: -2.7499563694000244
    3. '-' → logprob: -3.4999563694000244
    4. ' ' → logprob: -4.3749566078186035
    5. '2' → logprob: -4.8749566078186035
    6. '[' → logprob: -6.7499566078186035
    7. ' -' → logprob: -7.4999566078186035
    8. 'a' → logprob: -7.8749566078186035
    9. 'len' → logprob: -8.124956130981445
    10. '3' → logprob: -8.874956130981445

Token 79: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.18446457386016846
    2. ',' → logprob: -2.059464454650879
    3. '[' → logprob: -4.059464454650879
    4. ']))' → logprob: -4.684464454650879
    5. '),' → logprob: -4.934464454650879
    6. ')))' → logprob: -5.684464454650879
    7. ')' → logprob: -5.809464454650879
    8. '],' → logprob: -8.184464454650879
    9. ']' → logprob: -9.309464454650879
    10. '}))' → logprob: -9.434464454650879

Token 80: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7409983277320862
    2. '[' → logprob: -0.7409983277320862
    3. ',' → logprob: -4.115998268127441
    4. '#' → logprob: -4.990998268127441
    5. 'a' → logprob: -5.365998268127441
    6. 'for' → logprob: -5.490998268127441
    7. '(' → logprob: -5.990998268127441
    8. '[
' → logprob: -6.240998268127441
    9. '
' → logprob: -6.365998268127441
    10. '<|end|>' → logprob: -6.740998268127441

Token 81: ' fold' (ID: 17691)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.7091953158378601
    2. ' is' → logprob: -2.209195375442505
    3. ' find' → logprob: -2.709195375442505
    4. ' get' → logprob: -2.834195375442505
    5. ' reduce' → logprob: -2.959195375442505
    6. ' process' → logprob: -3.959195375442505
    7. ' next' → logprob: -4.334195137023926
    8. ' pair' → logprob: -4.584195137023926
    9. ' calculate' → logprob: -4.834195137023926
    10. ' merge' → logprob: -4.959195137023926

Token 82: '(seq' (ID: 78669)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34041866660118103
    2. '(' → logprob: -1.3404186964035034
    3. '(a' → logprob: -5.215418815612793
    4. '(x' → logprob: -6.090418815612793
    5. '_list' → logprob: -6.215418815612793
    6. '_(' → logprob: -6.465418815612793
    7. '(L' → logprob: -6.465418815612793
    8. '(lines' → logprob: -6.715418815612793
    9. '_a' → logprob: -6.840418815612793
    10. '(l' → logprob: -6.840418815612793

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018006093159783632
    2. '):' → logprob: -9.2501802444458
    3. ' ,' → logprob: -10.1251802444458
    4. ':' → logprob: -11.8751802444458
    5. ',n' → logprob: -12.2501802444458
    6. 's' → logprob: -12.3751802444458
    7. ')' → logprob: -12.5001802444458
    8. '[' → logprob: -13.0001802444458
    9. ',index' → logprob: -13.2501802444458
    10. ',a' → logprob: -13.3751802444458

Token 84: ' init' (ID: 6327)
  Prédit: ' func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' func' → logprob: -1.0465413331985474
    2. 'f' → logprob: -1.4215413331985474
    3. 'func' → logprob: -1.5465413331985474
    4. ' f' → logprob: -2.171541213989258
    5. ' fn' → logprob: -3.296541213989258
    6. 'fn' → logprob: -3.546541213989258
    7. ')' → logprob: -5.671541213989258
    8. ' function' → logprob: -6.171541213989258
    9. ' fold' → logprob: -6.546541213989258
    10. 'acc' → logprob: -6.796541213989258

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002138720825314522
    2. '=' → logprob: -6.252138614654541
    3. ' ,' → logprob: -9.0021390914917
    4. '):' → logprob: -10.6271390914917
    5. '=None' → logprob: -11.3771390914917
    6. '=lambda' → logprob: -11.3771390914917
    7. ',value' → logprob: -11.6271390914917
    8. ')' → logprob: -12.3771390914917
    9. '),' → logprob: -12.3771390914917
    10. ' ' → logprob: -12.6271390914917

Token 86: ' func' (ID: 4660)
  Prédit: ' func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' func' → logprob: -0.09418927878141403
    2. 'func' → logprob: -2.844189167022705
    3. ' fn' → logprob: -3.969189167022705
    4. ' f' → logprob: -5.094189167022705
    5. 'fn' → logprob: -5.469189167022705
    6. 'f' → logprob: -7.094189167022705
    7. ' function' → logprob: -7.219189167022705
    8. ' op' → logprob: -7.844189167022705
    9. ' lambda' → logprob: -8.844189643859863
    10. ' fun' → logprob: -9.219189643859863

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017786741256713867
    2. ',' → logprob: -4.142786979675293
    3. ')' → logprob: -6.642786979675293
    4. '=' → logprob: -7.892786979675293
    5. ':' → logprob: -10.517786979675293
    6. ' ):' → logprob: -10.642786979675293
    7. '):
' → logprob: -12.142786979675293
    8. ' ' → logprob: -12.892786979675293
    9. ')):' → logprob: -13.392786979675293
    10. '=None' → logprob: -13.517786979675293

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3797866404056549
    2. ':' → logprob: -1.5047866106033325
    3. ' ' → logprob: -2.629786729812622
    4. '    ' → logprob: -4.379786491394043
    5. ' :' → logprob: -6.129786491394043
    6. '  ' → logprob: -6.379786491394043
    7. ',' → logprob: -6.504786491394043
    8. ' =' → logprob: -7.379786491394043
    9. '<|end|>' → logprob: -7.379786491394043
    10. ':return' → logprob: -7.629786491394043

Token 89: ' return' (ID: 622)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -1.0078067779541016
    2. 'acc' → logprob: -1.2578067779541016
    3. 'result' → logprob: -1.7578067779541016
    4. 'res' → logprob: -2.7578067779541016
    5. ' result' → logprob: -2.8828067779541016
    6. ' res' → logprob: -4.007806777954102
    7. '   ' → logprob: -4.632806777954102
    8. ' for' → logprob: -4.757806777954102
    9. ' accumulator' → logprob: -4.882806777954102
    10. 'r' → logprob: -5.132806777954102

Token 90: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.47427406907081604
    2. ' reduce' → logprob: -0.9742740392684937
    3. ' functools' → logprob: -9.349273681640625
    4. ' ' → logprob: -10.474273681640625
    5. 're' → logprob: -10.974273681640625
    6. ' list' → logprob: -11.224273681640625
    7. '   ' → logprob: -11.599273681640625
    8. 'list' → logprob: -12.099273681640625
    9. ' ' → logprob: -12.099273681640625
    10. '  ' → logprob: -12.224273681640625

Token 91: '(lambda' (ID: 43341)
  Prédit: '(func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(func' → logprob: -0.032957106828689575
    2. '(lambda' → logprob: -3.782957077026367
    3. '(' → logprob: -4.657957077026367
    4. '(
' → logprob: -9.282957077026367
    5. '(function' → logprob: -9.657957077026367
    6. '(Func' → logprob: -11.282957077026367
    7. '(fun' → logprob: -11.907957077026367
    8. 'func' → logprob: -14.532957077026367
    9. '(f' → logprob: -14.907957077026367
    10. '(defun' → logprob: -15.032957077026367

Token 92: ' acc' (ID: 1259)
  Prédit: ' func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' func' → logprob: -0.519483745098114
    2. 'func' → logprob: -1.3944838047027588
    3. ' lambda' → logprob: -2.269483804702759
    4. 'lambda' → logprob: -3.019483804702759
    5. 'acc' → logprob: -6.76948356628418
    6. ' acc' → logprob: -7.14448356628418
    7. '	func' → logprob: -7.26948356628418
    8. ' ' → logprob: -7.51948356628418
    9. '=lambda' → logprob: -7.51948356628418
    10. '_func' → logprob: -8.14448356628418

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001858982432167977
    2. ' ,' → logprob: -9.3751859664917
    3. 'func' → logprob: -10.3751859664917
    4. 'lambda' → logprob: -10.5001859664917
    5. ',
' → logprob: -11.1251859664917
    6. '=lambda' → logprob: -11.2501859664917
    7. ',function' → logprob: -13.1251859664917
    8. '_,' → logprob: -13.5001859664917
    9. '=' → logprob: -13.5001859664917
    10. '_func' → logprob: -14.0001859664917

Token 94: ' val' (ID: 1459)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4151221513748169
    2. 'x' → logprob: -1.415122151374817
    3. ' func' → logprob: -3.1651220321655273
    4. ' lambda' → logprob: -4.790122032165527
    5. 'func' → logprob: -4.915122032165527
    6. ' val' → logprob: -5.415122032165527
    7. ' ' → logprob: -5.415122032165527
    8. ' f' → logprob: -5.790122032165527
    9. 'lambda' → logprob: -5.790122032165527
    10. 'elem' → logprob: -5.790122032165527

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007966428529471159
    2. ' :' → logprob: -7.375796794891357
    3. ',' → logprob: -9.2507963180542
    4. '=' → logprob: -10.3757963180542
    5. 'func' → logprob: -11.2507963180542
    6. ':
' → logprob: -11.3757963180542
    7. '=lambda' → logprob: -12.5007963180542
    8. 's' → logprob: -13.5007963180542
    9. '_func' → logprob: -13.5007963180542
    10. '   ' → logprob: -13.5007963180542

Token 96: ' func' (ID: 4660)
  Prédit: ' func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' func' → logprob: -0.34848877787590027
    2. 'func' → logprob: -1.2234888076782227
    3. '	func' → logprob: -10.598488807678223
    4. '(func' → logprob: -11.473488807678223
    5. ' ' → logprob: -12.723488807678223
    6. '   ' → logprob: -13.473488807678223
    7. 'fun' → logprob: -13.598488807678223
    8. '.func' → logprob: -14.473488807678223
    9. '
' → logprob: -14.785988807678223
    10. '```' → logprob: -15.223488807678223

Token 97: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.004904143046587706
    2. '(' → logprob: -6.004904270172119
    3. 'acc' → logprob: -7.004904270172119
    4. ' (' → logprob: -7.254904270172119
    5. ' acc' → logprob: -7.629904270172119
    6. ' ' → logprob: -8.754903793334961
    7. '(seq' → logprob: -9.754903793334961
    8. ')' → logprob: -10.129903793334961
    9. ',' → logprob: -10.379903793334961
    10. '[' → logprob: -11.629903793334961

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06231384351849556
    2. ',val' → logprob: -2.8123137950897217
    3. ' ,' → logprob: -8.0623140335083
    4. ',value' → logprob: -11.6873140335083
    5. ' val' → logprob: -11.8123140335083
    6. ',v' → logprob: -12.0623140335083
    7. '[val' → logprob: -12.3123140335083
    8. ' ' → logprob: -13.0623140335083
    9. 'val' → logprob: -14.1873140335083
    10. ',
' → logprob: -14.1873140335083

Token 99: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.026302620768547058
    2. 'val' → logprob: -3.6513025760650635
    3. ' ' → logprob: -14.526302337646484
    4. '	val' → logprob: -14.651302337646484
    5. 'v' → logprob: -14.776302337646484
    6. '[val' → logprob: -15.026302337646484
    7. ')' → logprob: -15.651302337646484
    8. ',val' → logprob: -15.901302337646484
    9. ' ' → logprob: -16.151302337646484
    10. '    ' → logprob: -16.401302337646484

Token 100: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.015167292207479477
    2. ')' → logprob: -4.390167236328125
    3. ',' → logprob: -6.640167236328125
    4. ' ),' → logprob: -6.640167236328125
    5. ' ' → logprob: -11.265167236328125
    6. ' ,' → logprob: -11.640167236328125
    7. ' )' → logprob: -11.890167236328125
    8. '),
' → logprob: -12.140167236328125
    9. ',),' → logprob: -13.765167236328125
    10. ')
' → logprob: -13.890167236328125

Token 101: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.023727327585220337
    2. 'seq' → logprob: -4.0237274169921875
    3. ' chain' → logprob: -5.3987274169921875
    4. ' sequence' → logprob: -7.2737274169921875
    5. 'chain' → logprob: -8.273727416992188
    6. ' list' → logprob: -11.023727416992188
    7. '(seq' → logprob: -11.023727416992188
    8. ' [' → logprob: -11.523727416992188
    9. 'sequence' → logprob: -11.523727416992188
    10. '[' → logprob: -12.148727416992188

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019197762594558299
    2. ')' → logprob: -8.625191688537598
    3. ' ,' → logprob: -11.500191688537598
    4. ',)' → logprob: -13.625191688537598
    5. '   ' → logprob: -14.625191688537598
    6. ' )' → logprob: -15.125191688537598
    7. ' ' → logprob: -16.000192642211914
    8. '),' → logprob: -16.750192642211914
    9. ',
' → logprob: -17.000192642211914
    10. '‌,' → logprob: -17.500192642211914

Token 103: ' init' (ID: 6327)
  Prédit: ' init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.023254914209246635
    2. 'init' → logprob: -3.773254871368408
    3. '_init' → logprob: -12.773255348205566
    4. '(init' → logprob: -12.898255348205566
    5. ')init' → logprob: -13.148255348205566
    6. ')' → logprob: -14.773255348205566
    7. '	init' → logprob: -15.023255348205566
    8. ' int' → logprob: -15.148255348205566
    9. ' ini' → logprob: -15.523255348205566
    10. ':init' → logprob: -15.523255348205566

Token 104: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -14.875000953674316
    4. ')

' → logprob: -17.625001907348633
    5. '))' → logprob: -18.375001907348633
    6. ' ' → logprob: -18.375001907348633
    7. ')`' → logprob: -18.500001907348633
    8. '),' → logprob: -19.125001907348633
    9. ')return' → logprob: -19.125001907348633
    10. '())' → logprob: -19.375001907348633

Token 105: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4013187885284424
    2. ')' → logprob: -1.7763187885284424
    3. '[' → logprob: -1.9013187885284424
    4. '#' → logprob: -2.6513187885284424
    5. '(' → logprob: -2.7763187885284424
    6. 'a' → logprob: -2.9013187885284424
    7. '
' → logprob: -3.4013187885284424
    8. ' ' → logprob: -3.5263187885284424
    9. 'n' → logprob: -3.6513187885284424
    10. 'r' → logprob: -3.9013187885284424

Token 106: ' sched' (ID: 27398)
  Prédit: ' fold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fold' → logprob: -0.17802917957305908
    2. ' map' → logprob: -3.0530290603637695
    3. ' _' → logprob: -4.6780290603637695
    4. ' main' → logprob: -4.8030290603637695
    5. ' flatten' → logprob: -4.9280290603637695
    6. ' reverse' → logprob: -5.0530290603637695
    7. ' convert' → logprob: -5.1780290603637695
    8. ' apply' → logprob: -5.3030290603637695
    9. ' merge' → logprob: -5.4280290603637695
    10. ' sum' → logprob: -5.5530290603637695

Token 107: '(acc' (ID: 82668)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.004284365568310022
    2. 'uler' → logprob: -5.504284381866455
    3. 'ulers' → logprob: -9.629283905029297
    4. 'uele' → logprob: -10.754283905029297
    5. 'u' → logprob: -11.004283905029297
    6. 'ul' → logprob: -11.254283905029297
    7. '```' → logprob: -11.254283905029297
    8. ' ule' → logprob: -11.254283905029297
    9. 'уле' → logprob: -11.629283905029297
    10. 'ulele' → logprob: -11.754283905029297

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001855406299000606
    2. ' ,' → logprob: -9.6251859664917
    3. ',val' → logprob: -10.3751859664917
    4. ',value' → logprob: -11.2501859664917
    5. ',
' → logprob: -11.8751859664917
    6. '):' → logprob: -11.8751859664917
    7. ',n' → logprob: -12.1251859664917
    8. ',x' → logprob: -12.3751859664917
    9. ',l' → logprob: -12.3751859664917
    10. ',v' → logprob: -12.6251859664917

Token 109: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1103719100356102
    2. 'task' → logprob: -3.6103718280792236
    3. 'val' → logprob: -3.8603718280792236
    4. 'v' → logprob: -4.985372066497803
    5. 'e' → logprob: -5.235372066497803
    6. 'event' → logprob: -5.235372066497803
    7. 'item' → logprob: -5.485372066497803
    8. ' x' → logprob: -5.735372066497803
    9. 'cur' → logprob: -5.860372066497803
    10. 'job' → logprob: -5.985372066497803

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.288362979888916
    2. '):
' → logprob: -1.413362979888916
    3. '[' → logprob: -5.538362979888916
    4. ',' → logprob: -6.788362979888916
    5. '):
' → logprob: -7.038362979888916
    6. 'ist' → logprob: -7.663362979888916
    7. '[]):' → logprob: -8.413362503051758
    8. '   ' → logprob: -9.163362503051758
    9. '):

' → logprob: -9.163362503051758
    10. ')' → logprob: -9.788362503051758

Token 111: '   ' (ID: 271)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.23479647934436798
    2. 'acc' → logprob: -1.9847965240478516
    3. ' if' → logprob: -3.9847965240478516
    4. '   ' → logprob: -4.484796524047852
    5. '[' → logprob: -4.609796524047852
    6. '[]' → logprob: -4.859796524047852
    7. 'if' → logprob: -5.609796524047852
    8. ' (' → logprob: -5.609796524047852
    9. '(acc' → logprob: -5.609796524047852
    10. ' [' → logprob: -6.234796524047852

Token 112: ' bridge' (ID: 23273)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.3031613826751709
    2. ' acc' → logprob: -1.803161382675171
    3. '(acc' → logprob: -3.428161382675171
    4. 'if' → logprob: -3.928161382675171
    5. 'max' → logprob: -4.55316162109375
    6. ' (' → logprob: -5.17816162109375
    7. '[]' → logprob: -5.30316162109375
    8. '[' → logprob: -5.80316162109375
    9. ' if' → logprob: -5.80316162109375
    10. 'a' → logprob: -6.05316162109375

Token 113: '_right' (ID: 24402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49987250566482544
    2. ' =' → logprob: -1.4998724460601807
    3. '=' → logprob: -2.6248724460601807
    4. '_end' → logprob: -3.3748724460601807
    5. '_length' → logprob: -3.8748724460601807
    6. '_time' → logprob: -3.9998724460601807
    7. '_start' → logprob: -5.12487268447876
    8. '_len' → logprob: -5.24987268447876
    9. 's' → logprob: -5.99987268447876
    10. '_' → logprob: -5.99987268447876

Token 114: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1401415914297104
    2. ' =' → logprob: -2.515141487121582
    3. ',' → logprob: -3.015141487121582
    4. ' ,' → logprob: -8.265141487121582
    5. ')' → logprob: -8.640141487121582
    6. '_end' → logprob: -9.140141487121582
    7. '_' → logprob: -10.015141487121582
    8. '_pos' → logprob: -10.952641487121582
    9. '=end' → logprob: -11.265141487121582
    10. '_,' → logprob: -11.327641487121582

Token 115: ' ans' (ID: 3345)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -2.144240140914917
    2. 'res' → logprob: -2.519240140914917
    3. 'bridge' → logprob: -2.519240140914917
    4. 'count' → logprob: -2.894240140914917
    5. ' count' → logprob: -3.019240140914917
    6. ' ans' → logprob: -3.269240140914917
    7. 'ans' → logprob: -3.269240140914917
    8. ' bridge' → logprob: -3.394240140914917
    9. ' result' → logprob: -3.519240140914917
    10. 'max' → logprob: -3.831740140914917

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31002408266067505
    2. ' =' → logprob: -1.4350240230560303
    3. ',' → logprob: -3.5600240230560303
    4. '<|end|>' → logprob: -12.56002426147461
    5. ' ,' → logprob: -12.81002426147461
    6. ')' → logprob: -12.81002426147461
    7. 's' → logprob: -13.18502426147461
    8. '[' → logprob: -14.06002426147461
    9. ' ' → logprob: -14.12252426147461
    10. '<|end|>' → logprob: -14.31002426147461

Token 117: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.1272580623626709
    2. ' acc' → logprob: -2.127258062362671
    3. '   ' → logprob: -8.12725830078125
    4. '(acc' → logprob: -11.37725830078125
    5. ' ' → logprob: -12.12725830078125
    6. '0' → logprob: -12.87725830078125
    7. '	acc' → logprob: -13.00225830078125
    8. '  ' → logprob: -13.12725830078125
    9. 'ac' → logprob: -13.25225830078125
    10. '
' → logprob: -13.50225830078125

Token 118: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27569127082824707
    2. '=' → logprob: -1.775691270828247
    3. ' =' → logprob: -2.650691270828247
    4. ' ,' → logprob: -7.275691032409668
    5. '   ' → logprob: -8.900691032409668
    6. ',
' → logprob: -11.150691032409668
    7. ')' → logprob: -11.150691032409668
    8. ';' → logprob: -11.275691032409668
    9. ',b' → logprob: -11.275691032409668
    10. '
' → logprob: -11.400691032409668

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8684502243995667
    2. ' if' → logprob: -1.1184501647949219
    3. ',' → logprob: -1.8684501647949219
    4. 'if' → logprob: -3.743450164794922
    5. ' l' → logprob: -4.118450164794922
    6. ' start' → logprob: -4.868450164794922
    7. ' idx' → logprob: -4.868450164794922
    8. 'start' → logprob: -4.993450164794922
    9. '
' → logprob: -5.243450164794922
    10. 'idx' → logprob: -5.618450164794922

Token 120: ' c' (ID: 274)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32301169633865356
    2. ' l' → logprob: -1.6980116367340088
    3. 'if' → logprob: -3.448011636734009
    4. ' if' → logprob: -4.073011875152588
    5. '0' → logprob: -4.198011875152588
    6. '   ' → logprob: -4.448011875152588
    7. '[]' → logprob: -6.198011875152588
    8. 'None' → logprob: -6.198011875152588
    9. '(l' → logprob: -6.448011875152588
    10. ' (' → logprob: -6.698011875152588

Token 121: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.788840651512146
    2. ' =' → logprob: -1.413840651512146
    3. '=' → logprob: -1.913840651512146
    4. 'urrent' → logprob: -3.6638407707214355
    5. 'ost' → logprob: -3.6638407707214355
    6. 'ont' → logprob: -3.7888407707214355
    7. 'on' → logprob: -4.5388407707214355
    8. 'om' → logprob: -4.5388407707214355
    9. 'ap' → logprob: -5.4138407707214355
    10. 'ur' → logprob: -5.5388407707214355

Token 122: ' bridge' (ID: 23273)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.20328842103481293
    2. ' l' → logprob: -1.7032884359359741
    3. 'max' → logprob: -7.453288555145264
    4. '0' → logprob: -8.203288078308105
    5. ' max' → logprob: -8.328288078308105
    6. ' ' → logprob: -8.703288078308105
    7. '1' → logprob: -9.453288078308105
    8. 'bridge' → logprob: -9.765788078308105
    9. 'True' → logprob: -9.890788078308105
    10. 'int' → logprob: -10.328288078308105

Token 123: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0003121056070085615
    2. 'right' → logprob: -8.500311851501465
    3. '_left' → logprob: -10.250311851501465
    4. '_' → logprob: -11.250311851501465
    5. '
' → logprob: -11.375311851501465
    6. 'Right' → logprob: -12.250311851501465
    7. '[' → logprob: -12.375311851501465
    8. 'r' → logprob: -12.500311851501465
    9. '_r' → logprob: -12.500311851501465
    10. '   ' → logprob: -12.750311851501465

Token 124: ' >=' (ID: 5064)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48295387625694275
    2. ' +' → logprob: -1.2329539060592651
    3. '=' → logprob: -4.232954025268555
    4. ' =' → logprob: -4.232954025268555
    5. ' <' → logprob: -4.482954025268555
    6. '<' → logprob: -4.857954025268555
    7. '>=' → logprob: -4.857954025268555
    8. ' >=' → logprob: -5.107954025268555
    9. '<=' → logprob: -5.232954025268555
    10. ',' → logprob: -5.232954025268555

Token 125: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05492741987109184
    2. ' l' → logprob: -2.929927349090576
    3. ' ' → logprob: -11.304927825927734
    4. 'L' → logprob: -11.429927825927734
    5. 'int' → logprob: -12.429927825927734
    6. '0' → logprob: -12.554927825927734
    7. '	l' → logprob: -12.929927825927734
    8. ' ' → logprob: -13.367427825927734
    9. ' L' → logprob: -13.492427825927734
    10. '
' → logprob: -14.179927825927734

Token 126: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003986144147347659
    2. '2' → logprob: -8.250398635864258
    3. '0' → logprob: -9.750398635864258
    4. ' [' → logprob: -10.375398635864258
    5. '1' → logprob: -10.625398635864258
    6. '[-' → logprob: -11.750398635864258
    7. ' ' → logprob: -12.500398635864258
    8. '```' → logprob: -12.625398635864258
    9. '[
' → logprob: -12.750398635864258
    10. '
' → logprob: -14.125398635864258

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05229287967085838
    2. '2' → logprob: -3.677292823791504
    3. '1' → logprob: -3.927292823791504
    4. ' ' → logprob: -5.177292823791504
    5. '3' → logprob: -8.427292823791504
    6. '[' → logprob: -9.927292823791504
    7. '
' → logprob: -11.802292823791504
    8. '4' → logprob: -11.989792823791504
    9. '-' → logprob: -12.489792823791504
    10. ']' → logprob: -12.614792823791504

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028667520731687546
    2. ')' → logprob: -4.028667449951172
    3. '[' → logprob: -4.778667449951172
    4. '<|end|>' → logprob: -6.778667449951172
    5. '])' → logprob: -8.278667449951172
    6. ' and' → logprob: -8.653667449951172
    7. ' ]' → logprob: -9.028667449951172
    8. ' ' → logprob: -9.903667449951172
    9. 'and' → logprob: -10.028667449951172
    10. ']
' → logprob: -10.028667449951172

Token 129: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07383383065462112
    2. 'and' → logprob: -2.69883394241333
    3. '
' → logprob: -6.69883394241333
    4. ' or' → logprob: -6.94883394241333
    5. ' if' → logprob: -7.07383394241333
    6. '   ' → logprob: -8.073833465576172
    7. 'if' → logprob: -8.323833465576172
    8. '<|end|>' → logprob: -8.948833465576172
    9. ' ' → logprob: -10.323833465576172
    10. '	and' → logprob: -10.448833465576172

Token 130: ' bridge' (ID: 23273)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.26178261637687683
    2. 'l' → logprob: -1.8867826461791992
    3. ' True' → logprob: -3.511782646179199
    4. 'True' → logprob: -4.261782646179199
    5. ' bridge' → logprob: -4.386782646179199
    6. 'bridge' → logprob: -5.261782646179199
    7. ' not' → logprob: -5.886782646179199
    8. ' False' → logprob: -5.886782646179199
    9. 'False' → logprob: -6.011782646179199
    10. ' ' → logprob: -6.386782646179199

Token 131: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.052795879542827606
    2. '[' → logprob: -3.052795886993408
    3. '_left' → logprob: -6.052795886993408
    4. 'Right' → logprob: -7.427795886993408
    5. 'right' → logprob: -8.05279541015625
    6. '   ' → logprob: -9.17779541015625
    7. '
' → logprob: -9.36529541015625
    8. '```' → logprob: -9.61529541015625
    9. '_RIGHT' → logprob: -9.92779541015625
    10. '1' → logprob: -10.11529541015625

Token 132: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5078204870223999
    2. '<=' → logprob: -1.5078204870224
    3. ' <=' → logprob: -2.5078206062316895
    4. ' <' → logprob: -2.6328206062316895
    5. '+' → logprob: -4.8828206062316895
    6. '<|end|>' → logprob: -5.2578206062316895
    7. '>=' → logprob: -5.3828206062316895
    8. ' >=' → logprob: -6.5078206062316895
    9. ' +' → logprob: -6.7578206062316895
    10. '>' → logprob: -7.1328206062316895

Token 133: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.16063657402992249
    2. 'l' → logprob: -1.9106365442276
    3. ' ' → logprob: -8.535636901855469
    4. '=l' → logprob: -10.035636901855469
    5. '<|end|>' → logprob: -10.285636901855469
    6. '=' → logprob: -10.285636901855469
    7. 'L' → logprob: -10.910636901855469
    8. '	l' → logprob: -11.035636901855469
    9. ' L' → logprob: -11.160636901855469
    10. ' ' → logprob: -11.535636901855469

Token 134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002025708556175232
    2. '1' → logprob: -6.252025604248047
    3. ' [' → logprob: -10.627025604248047
    4. '2' → logprob: -10.877025604248047
    5. '```' → logprob: -11.377025604248047
    6. '][' → logprob: -11.752025604248047
    7. '   ' → logprob: -12.252025604248047
    8. '[
' → logprob: -12.252025604248047
    9. ']' → logprob: -12.377025604248047
    10. ' ' → logprob: -12.627025604248047

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030112192034721375
    2. '2' → logprob: -5.878011226654053
    3. '[' → logprob: -9.003010749816895
    4. '-' → logprob: -10.378010749816895
    5. '0' → logprob: -11.128010749816895
    6. ' ' → logprob: -11.378010749816895
    7. ']' → logprob: -11.753010749816895
    8. '
' → logprob: -12.440510749816895
    9. '```' → logprob: -13.128010749816895
    10. '(' → logprob: -13.440510749816895

Token 136: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22857530415058136
    2. ')' → logprob: -1.603575348854065
    3. ' and' → logprob: -6.853575229644775
    4. '<|end|>' → logprob: -7.728575229644775
    5. 'and' → logprob: -8.103575706481934
    6. '])' → logprob: -8.603575706481934
    7. ')]' → logprob: -9.103575706481934
    8. '+' → logprob: -9.228575706481934
    9. '
' → logprob: -9.353575706481934
    10. ']+' → logprob: -9.353575706481934

Token 137: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7042440176010132
    2. '   ' → logprob: -1.0792440176010132
    3. ' or' → logprob: -2.5792441368103027
    4. '?' → logprob: -3.8292441368103027
    5. ')' → logprob: -4.204244136810303
    6. ',' → logprob: -4.454244136810303
    7. '<|end|>' → logprob: -4.579244136810303
    8. 'and' → logprob: -5.204244136810303
    9. ' if' → logprob: -5.329244136810303
    10. '
' → logprob: -5.579244136810303

Token 138: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9654521346092224
    2. ' if' → logprob: -0.9654521346092224
    3. '   ' → logprob: -1.9654521942138672
    4. ' ans' → logprob: -3.465452194213867
    5. 'return' → logprob: -3.715452194213867
    6. 'ans' → logprob: -4.340452194213867
    7. ' return' → logprob: -4.840452194213867
    8. ',' → logprob: -4.965452194213867
    9. ' not' → logprob: -6.090452194213867
    10. '
' → logprob: -6.215452194213867

Token 139: ' not' (ID: 625)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.19222277402877808
    2. 'c' → logprob: -2.442222833633423
    3. ' not' → logprob: -2.567222833633423
    4. 'not' → logprob: -4.567222595214844
    5. ' ' → logprob: -7.442222595214844
    6. ' ' → logprob: -9.067222595214844
    7. '   ' → logprob: -11.442222595214844
    8. ' l' → logprob: -11.942222595214844
    9. '	c' → logprob: -12.129722595214844
    10. '    ' → logprob: -12.129722595214844

Token 140: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.062035802751779556
    2. 'c' → logprob: -2.8120357990264893
    3. ' ' → logprob: -10.56203556060791
    4. ' ' → logprob: -11.37453556060791
    5. ')c' → logprob: -12.68703556060791
    6. '	c' → logprob: -12.74953556060791
    7. '(c' → logprob: -12.74953556060791
    8. '
' → logprob: -12.87453556060791
    9. ' (' → logprob: -12.93703556060791
    10. '(' → logprob: -13.18703556060791

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06616262346506119
    2. ':
' → logprob: -2.816162586212158
    3. ' or' → logprob: -6.191162586212158
    4. ':return' → logprob: -7.066162586212158
    5. ' and' → logprob: -7.441162586212158
    6. '   ' → logprob: -7.941162586212158
    7. ' :' → logprob: -8.816163063049316
    8. ',' → logprob: -9.191163063049316
    9. ' :
' → logprob: -10.816163063049316
    10. '       ' → logprob: -10.941163063049316

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0846356451511383
    2. ':' → logprob: -3.2096357345581055
    3. ' return' → logprob: -4.2096357345581055
    4. '   ' → logprob: -4.8346357345581055
    5. ':
' → logprob: -5.4596357345581055
    6. ' (' → logprob: -5.8346357345581055
    7. 'return' → logprob: -6.5846357345581055
    8. ' if' → logprob: -6.7096357345581055
    9. '[' → logprob: -6.8346357345581055
    10. ',' → logprob: -6.8346357345581055

Token 143: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6726357340812683
    2. 'return' (adapté à ' return') → logprob: -1.422635793685913
    3. '       ' → logprob: -1.547635793685913
    4. ' ans' → logprob: -3.922635793685913
    5. '           ' → logprob: -5.547635555267334
    6. '   ' → logprob: -5.797635555267334
    7. 'bridge' → logprob: -6.047635555267334
    8. 'ans' → logprob: -6.297635555267334
    9. ' bridge' → logprob: -6.297635555267334
    10. '
' → logprob: -6.922635555267334

Token 144: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.06946679204702377
    2. '([' → logprob: -3.6944668292999268
    3. 'l' → logprob: -4.069466590881348
    4. '[l' → logprob: -4.319466590881348
    5. '(' → logprob: -4.944466590881348
    6. '(True' → logprob: -6.319466590881348
    7. ' (' → logprob: -6.944466590881348
    8. '((' → logprob: -7.444466590881348
    9. '[' → logprob: -8.069466590881348
    10. '(None' → logprob: -8.569466590881348

Token 145: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.21154187619686127
    2. '(l' → logprob: -1.7115418910980225
    3. ' l' → logprob: -5.711541652679443
    4. '(' → logprob: -5.711541652679443
    5. ' (' → logprob: -6.461541652679443
    6. '(max' → logprob: -7.711541652679443
    7. ')' → logprob: -7.711541652679443
    8. 'max' → logprob: -8.086542129516602
    9. '   ' → logprob: -8.836542129516602
    10. '(
' → logprob: -9.336542129516602

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14403162896633148
    2. '1' → logprob: -2.019031524658203
    3. '0' → logprob: -7.769031524658203
    4. '2' → logprob: -7.769031524658203
    5. '][' → logprob: -9.394031524658203
    6. '[
' → logprob: -9.394031524658203
    7. ']' → logprob: -9.644031524658203
    8. ' [' → logprob: -9.894031524658203
    9. ')' → logprob: -10.144031524658203
    10. ' ' → logprob: -10.269031524658203

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07957720756530762
    2. '2' → logprob: -2.5795772075653076
    3. ' ' → logprob: -8.454577445983887
    4. '0' → logprob: -8.579577445983887
    5. '[' → logprob: -9.329577445983887
    6. '
' → logprob: -9.579577445983887
    7. ']' → logprob: -10.392077445983887
    8. '```' → logprob: -11.017077445983887
    9. '

' → logprob: -11.267077445983887
    10. '])' → logprob: -11.704577445983887

Token 148: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005354125052690506
    2. '],' → logprob: -5.755353927612305
    3. '),' → logprob: -7.005353927612305
    4. '+' → logprob: -7.380353927612305
    5. ' ,' → logprob: -7.880353927612305
    6. ' +' → logprob: -9.005353927612305
    7. ' ' → logprob: -11.005353927612305
    8. ']' → logprob: -11.130353927612305
    9. '},' → logprob: -11.255353927612305
    10. ',
' → logprob: -11.380353927612305

Token 149: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009158092550933361
    2. ' ,' → logprob: -4.759158134460449
    3. '+' → logprob: -8.63415813446045
    4. ' ans' → logprob: -9.13415813446045
    5. ',
' → logprob: -9.25915813446045
    6. ' +' → logprob: -9.63415813446045
    7. '   ' → logprob: -10.38415813446045
    8. '
' → logprob: -11.88415813446045
    9. 'ans' → logprob: -11.88415813446045
    10. '),' → logprob: -11.88415813446045

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0475788377225399
    2. 'l' → logprob: -3.172578811645508
    3. ' ' → logprob: -5.797578811645508
    4. ' l' → logprob: -7.422578811645508
    5. 'c' → logprob: -8.797578811645508
    6. 'b' → logprob: -8.922578811645508
    7. 'L' → logprob: -9.047578811645508
    8. '0' → logprob: -9.047578811645508
    9. '(' → logprob: -9.360078811645508
    10. ')' → logprob: -9.485078811645508

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14563827216625214
    2. 'l' → logprob: -2.0206382274627686
    3. '0' → logprob: -7.020638465881348
    4. ' ' → logprob: -7.395638465881348
    5. '(' → logprob: -8.145638465881348
    6. '(l' → logprob: -8.145638465881348
    7. ' l' → logprob: -8.270638465881348
    8. 'b' → logprob: -8.770638465881348
    9. 'L' → logprob: -9.020638465881348
    10. '-' → logprob: -9.395638465881348

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009501680615358055
    2. ' ,' → logprob: -7.250950336456299
    3. '),' → logprob: -9.12594985961914
    4. ',
' → logprob: -9.75094985961914
    5. ')' → logprob: -10.62594985961914
    6. '+' → logprob: -11.75094985961914
    7. ',b' → logprob: -12.37594985961914
    8. '   ' → logprob: -12.50094985961914
    9. '[' → logprob: -13.00094985961914
    10. ' ' → logprob: -13.00094985961914

Token 153: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6361332535743713
    2. ' ans' → logprob: -0.7611332535743713
    3. '   ' → logprob: -6.261133193969727
    4. '(ans' → logprob: -7.636133193969727
    5. '[' → logprob: -8.011133193969727
    6. '	ans' → logprob: -8.636133193969727
    7. '    ' → logprob: -8.761133193969727
    8. 'acc' → logprob: -8.761133193969727
    9. '  ' → logprob: -9.261133193969727
    10. ' ' → logprob: -10.011133193969727

Token 154: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5766295790672302
    2. ' +' → logprob: -0.8266295790672302
    3. ')' → logprob: -7.701629638671875
    4. ',' → logprob: -9.451629638671875
    5. '),' → logprob: -9.576629638671875
    6. ' ' → logprob: -10.451629638671875
    7. '+
' → logprob: -11.826629638671875
    8. ' if' → logprob: -12.076629638671875
    9. '   ' → logprob: -12.201629638671875
    10. ' )' → logprob: -12.326629638671875

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002806656062602997
    2. ' ' → logprob: -5.877806663513184
    3. '   ' → logprob: -14.127806663513184
    4. ')' → logprob: -14.252806663513184
    5. '  ' → logprob: -15.627806663513184
    6. '<|end|>' → logprob: -16.002805709838867
    7. '+' → logprob: -16.502805709838867
    8. '[' → logprob: -17.252805709838867
    9. '
' → logprob: -17.627805709838867
    10. '0' → logprob: -17.815305709838867

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019361276645213366
    2. ' ' → logprob: -6.251935958862305
    3. ')' → logprob: -12.251935958862305
    4. '   ' → logprob: -13.626935958862305
    5. '[' → logprob: -14.251935958862305
    6. '  ' → logprob: -14.876935958862305
    7. '<|end|>' → logprob: -16.251935958862305
    8. '```' → logprob: -16.439435958862305
    9. '
' → logprob: -16.689435958862305
    10. '2' → logprob: -16.876935958862305

Token 157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1606404334306717
    2. ')
' → logprob: -1.9106404781341553
    3. '   ' → logprob: -8.035640716552734
    4. ' )' → logprob: -10.410640716552734
    5. ' )
' → logprob: -10.535640716552734
    6. ')
' → logprob: -10.785640716552734
    7. ')

' → logprob: -11.410640716552734
    8. ',' → logprob: -14.035640716552734
    9. ' ' → logprob: -14.285640716552734
    10. '),' → logprob: -14.535640716552734

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006280870293267071
    2. 'else' → logprob: -8.000628471374512
    3. 'return' → logprob: -8.625628471374512
    4. '
' → logprob: -9.875628471374512
    5. '    
' → logprob: -10.500628471374512
    6. ' else' → logprob: -10.500628471374512
    7. ' return' → logprob: -12.750628471374512
    8. ')' → logprob: -13.750628471374512
    9. '  
' → logprob: -14.250628471374512
    10. '       ' → logprob: -14.500628471374512

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1939508020877838
    2. '   ' → logprob: -1.8189507722854614
    3. 'else' → logprob: -4.443950653076172
    4. ' return' → logprob: -6.818950653076172
    5. '    
' → logprob: -7.568950653076172
    6. '
' → logprob: -8.193950653076172
    7. '(' → logprob: -8.318950653076172
    8. ' else' → logprob: -9.693950653076172
    9. 'acc' → logprob: -10.068950653076172
    10. ' ' → logprob: -10.193950653076172

Token 160: ' (' (ID: 350)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.9538619518280029
    2. '(' → logprob: -1.203861951828003
    3. '(acc' → logprob: -1.203861951828003
    4. 'bridge' → logprob: -5.078862190246582
    5. ' acc' → logprob: -5.453862190246582
    6. ' (' → logprob: -5.703862190246582
    7. '(b' → logprob: -8.328862190246582
    8. '(br' → logprob: -8.453862190246582
    9. '(branch' → logprob: -9.453862190246582
    10. '(ac' → logprob: -9.828862190246582

Token 161: 'bridge' (ID: 21542)
  Prédit: 'bridge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bridge' → logprob: -0.6030969023704529
    2. 'acc' → logprob: -0.9780969023704529
    3. '(' → logprob: -2.8530969619750977
    4. '(acc' → logprob: -4.103096961975098
    5. ' acc' → logprob: -6.978096961975098
    6. ' bridge' → logprob: -7.478096961975098
    7. '   ' → logprob: -7.978096961975098
    8. 'brid' → logprob: -8.978096961975098
    9. 'br' → logprob: -9.103096961975098
    10. ' (' → logprob: -9.103096961975098

Token 162: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -4.978233846486546e-05
    2. 'right' → logprob: -10.000049591064453
    3. 'Right' → logprob: -13.750049591064453
    4. '_left' → logprob: -14.000049591064453
    5. '_RIGHT' → logprob: -14.250049591064453
    6. ')' → logprob: -15.500049591064453
    7. '_' → logprob: -15.500049591064453
    8. '_Right' → logprob: -15.500049591064453
    9. '```' → logprob: -15.625049591064453
    10. '[right' → logprob: -16.125049591064453

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014287306112237275
    2. ' ,' → logprob: -9.000143051147461
    3. ',
' → logprob: -11.000143051147461
    4. ',b' → logprob: -14.625143051147461
    5. ',int' → logprob: -15.000143051147461
    6. ',n' → logprob: -15.500143051147461
    7. ',s' → logprob: -15.625143051147461
    8. '   ' → logprob: -15.625143051147461
    9. '<|end|>' → logprob: -15.625143051147461
    10. '
' → logprob: -15.750143051147461

Token 164: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11283592879772186
    2. ' ans' → logprob: -2.2378358840942383
    3. '	ans' → logprob: -11.737835884094238
    4. '   ' → logprob: -13.362835884094238
    5. '(ans' → logprob: -13.737835884094238
    6. ' ' → logprob: -13.737835884094238
    7. 'answer' → logprob: -14.737835884094238
    8. '  ' → logprob: -15.237835884094238
    9. '    ' → logprob: -15.362835884094238
    10. 'acc' → logprob: -15.487835884094238

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004317420825827867
    2. '<|end|>' → logprob: -8.375432014465332
    3. ' )' → logprob: -9.375432014465332
    4. ')
' → logprob: -10.000432014465332
    5. ',' → logprob: -10.750432014465332
    6. ')return' → logprob: -11.250432014465332
    7. '+' → logprob: -11.250432014465332
    8. ',)' → logprob: -12.250432014465332
    9. ')

' → logprob: -12.625432014465332
    10. '
' → logprob: -13.000432014465332

Token 166: 'bridge' (ID: 21542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025808934587985277
    2. 'result' → logprob: -6.6275811195373535
    3. 'ans' → logprob: -7.5025811195373535
    4. 'res' → logprob: -8.627580642700195
    5. 'acc' → logprob: -8.877580642700195
    6. 'answer' → logprob: -8.877580642700195
    7. 'for' → logprob: -9.002580642700195
    8. '_,' → logprob: -10.377580642700195
    9. '_' → logprob: -11.002580642700195
    10. 'r' → logprob: -11.377580642700195

Token 167: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -9.150362166110426e-05
    2. '_' → logprob: -9.625091552734375
    3. 'right' → logprob: -11.375091552734375
    4. '_r' → logprob: -12.375091552734375
    5. '_left' → logprob: -12.625091552734375
    6. 'Right' → logprob: -13.000091552734375
    7. '_Right' → logprob: -13.750091552734375
    8. '_RIGHT' → logprob: -14.375091552734375
    9. 's' → logprob: -14.625091552734375
    10. '_rhs' → logprob: -15.000091552734375

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009433876723051071
    2. '=' → logprob: -5.009433746337891
    3. ')' → logprob: -6.509433746337891
    4. ' =' → logprob: -7.134433746337891
    5. '<|end|>' → logprob: -8.75943374633789
    6. ' ,' → logprob: -9.50943374633789
    7. '+' → logprob: -10.13443374633789
    8. ' +' → logprob: -10.63443374633789
    9. '0' → logprob: -11.44693374633789
    10. '),' → logprob: -11.57193374633789

Token 169: ' ans' (ID: 3345)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006930981762707233
    2. 'ans' → logprob: -5.631930828094482
    3. ' ' → logprob: -6.631930828094482
    4. '1' → logprob: -6.881930828094482
    5. 'b' → logprob: -7.131930828094482
    6. ' ans' → logprob: -9.38193130493164
    7. 'L' → logprob: -11.00693130493164
    8. 'len' → logprob: -11.00693130493164
    9. 'a' → logprob: -11.13193130493164
    10. 'answer' → logprob: -11.88193130493164

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1854478418827057
    2. '<|end|>' → logprob: -2.435447931289673
    3. ' =' → logprob: -2.560447931289673
    4. ')' → logprob: -5.935447692871094
    5. '<|end|>' → logprob: -7.310447692871094
    6. ',' → logprob: -7.435447692871094
    7. ' ' → logprob: -8.810447692871094
    8. '
' → logprob: -9.685447692871094
    9. '=
' → logprob: -9.810447692871094
    10. '[' → logprob: -10.060447692871094

Token 171: ' fold' (ID: 17691)
  Prédit: 'fold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fold' → logprob: -0.39729762077331543
    2. '(' → logprob: -1.1472976207733154
    3. ' fold' → logprob: -5.1472978591918945
    4. ' (' → logprob: -5.7722978591918945
    5. '0' → logprob: -6.7722978591918945
    6. '(f' → logprob: -9.522297859191895
    7. ' ' → logprob: -9.772297859191895
    8. '.fold' → logprob: -10.022297859191895
    9. '-fold' → logprob: -10.397297859191895
    10. '(-' → logprob: -11.147297859191895

Token 172: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -5.991464786347933e-05
    2. '(' → logprob: -10.000060081481934
    3. '((' → logprob: -12.250060081481934
    4. 'L' → logprob: -12.250060081481934
    5. '(
' → logprob: -13.500060081481934
    6. '(l' → logprob: -14.000060081481934
    7. ' (' → logprob: -14.625060081481934
    8. '(B' → logprob: -14.875060081481934
    9. ')(' → logprob: -15.250060081481934
    10. '```' → logprob: -15.375060081481934

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020544764993246645
    2. ' ,' → logprob: -8.750205039978027
    3. ',(' → logprob: -10.125205039978027
    4. ',
' → logprob: -12.125205039978027
    5. ')' → logprob: -14.750205039978027
    6. '   ' → logprob: -15.375205039978027
    7. '[(' → logprob: -15.750205039978027
    8. '),' → logprob: -16.125205993652344
    9. '```' → logprob: -16.125205993652344
    10. '(' → logprob: -16.250205993652344

Token 174: ' (-' (ID: 21382)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01919093355536461
    2. ' (' → logprob: -4.394190788269043
    3. '(-' → logprob: -5.019190788269043
    4. '(None' → logprob: -10.769190788269043
    5. ' (-' → logprob: -11.019190788269043
    6. '   ' → logprob: -13.019190788269043
    7. ' ' → logprob: -13.144190788269043
    8. '(b' → logprob: -13.644190788269043
    9. '((' → logprob: -13.644190788269043
    10. '(False' → logprob: -13.644190788269043

Token 175: 'float' (ID: 7829)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029685118352063
    2. '10' → logprob: -8.625296592712402
    3. 'float' → logprob: -9.750296592712402
    4. '2' → logprob: -11.125296592712402
    5. ' ' → logprob: -11.125296592712402
    6. '100' → logprob: -11.625296592712402
    7. '999' → logprob: -12.187796592712402
    8. '-' → logprob: -12.437796592712402
    9. ')' → logprob: -13.437796592712402
    10. 'inf' → logprob: -13.625296592712402

Token 176: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.028654078021645546
    2. ''' → logprob: -4.403654098510742
    3. '"' → logprob: -4.653654098510742
    4. '('' → logprob: -7.028654098510742
    5. 'inf' → logprob: -7.153654098510742
    6. ''ex' → logprob: -7.403654098510742
    7. ''ins' → logprob: -7.528654098510742
    8. ''information' → logprob: -7.778654098510742
    9. ''e' → logprob: -7.903654098510742
    10. ''import' → logprob: -8.403654098510742

Token 177: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0007222028798423707
    2. ''in' → logprob: -7.500722408294678
    3. ''' → logprob: -9.00072193145752
    4. 'in' → logprob: -10.50072193145752
    5. '"' → logprob: -12.12572193145752
    6. 'Inf' → logprob: -12.50072193145752
    7. ''s' → logprob: -13.37572193145752
    8. 'info' → logprob: -13.37572193145752
    9. '
' → logprob: -13.62572193145752
    10. '('' → logprob: -14.12572193145752

Token 178: ''),' (ID: 10047)
  Prédit: ''),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),' → logprob: -0.08996660262346268
    2. '),' → logprob: -2.4649665355682373
    3. ',' → logprob: -7.714966773986816
    4. ')'),' → logprob: -8.964966773986816
    5. '',' → logprob: -9.089966773986816
    6. ')' → logprob: -9.214966773986816
    7. '')' → logprob: -9.589966773986816
    8. ''),
' → logprob: -9.964966773986816
    9. ',),' → logprob: -11.089966773986816
    10. ','' → logprob: -11.089966773986816

Token 179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003179975086823106
    2. ' ' → logprob: -5.753180027008057
    3. '  ' → logprob: -14.253179550170898
    4. ')' → logprob: -14.503179550170898
    5. '   ' → logprob: -14.503179550170898
    6. '    ' → logprob: -16.3156795501709
    7. '-' → logprob: -16.4406795501709
    8. '۰' → logprob: -16.6281795501709
    9. '00' → logprob: -16.6906795501709
    10. '     ' → logprob: -17.1281795501709

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004905993700958788
    2. ' ' → logprob: -7.625490665435791
    3. ')' → logprob: -14.375490188598633
    4. '  ' → logprob: -15.250490188598633
    5. '-' → logprob: -15.312990188598633
    6. '   ' → logprob: -15.437990188598633
    7. '00' → logprob: -15.875490188598633
    8. '۰' → logprob: -15.937990188598633
    9. '000' → logprob: -16.000490188598633
    10. '1' → logprob: -16.125490188598633

Token 181: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005672322120517492
    2. '))' → logprob: -5.255672454833984
    3. '),' → logprob: -7.755672454833984
    4. ')
' → logprob: -12.130672454833984
    5. ' )' → logprob: -12.630672454833984
    6. ')))' → logprob: -15.130672454833984
    7. ')

' → logprob: -15.255672454833984
    8. ',' → logprob: -15.505672454833984
    9. ')`' → logprob: -15.755672454833984
    10. '))
' → logprob: -16.380672454833984

Token 182: ' sched' (ID: 27398)
  Prédit: 'sched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sched' → logprob: -0.014308293350040913
    2. ' sched' → logprob: -4.264308452606201
    3. 'sche' → logprob: -9.764307975769043
    4. 's' → logprob: -10.014307975769043
    5. 'scheduler' → logprob: -11.514307975769043
    6. '_sched' → logprob: -11.889307975769043
    7. 'sch' → logprob: -11.889307975769043
    8. ' ' → logprob: -12.014307975769043
    9. '   ' → logprob: -12.889307975769043
    10. 'lambda' → logprob: -12.889307975769043

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.625006675720215
    3. ')
' → logprob: -12.875006675720215
    4. '))' → logprob: -15.375006675720215
    5. ')`' → logprob: -15.750006675720215
    6. ')

' → logprob: -17.2500057220459
    7. ')
' → logprob: -18.0000057220459
    8. '),' → logprob: -18.0000057220459
    9. ')#' → logprob: -18.0000057220459
    10. ');' → logprob: -18.2500057220459

Token 184: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010962257510982454
    2. ')' → logprob: -10.000109672546387
    3. '
' → logprob: -10.250109672546387
    4. ')
' → logprob: -10.750109672546387
    5. ' print' → logprob: -12.250109672546387
    6. '<|end|>' → logprob: -13.375109672546387
    7. '```' → logprob: -15.375109672546387
    8. '
' → logprob: -16.00010871887207
    9. '#print' → logprob: -16.12510871887207
    10. '(print' → logprob: -16.37510871887207

Token 185: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.001503313542343676
    2. '(' → logprob: -6.5015034675598145
    3. '(answer' → logprob: -14.876502990722656
    4. ' (' → logprob: -15.501502990722656
    5. '('' → logprob: -15.626502990722656
    6. '(
' → logprob: -16.126502990722656
    7. 'ans' → logprob: -16.751502990722656
    8. '((' → logprob: -17.251502990722656
    9. '()' → logprob: -17.376502990722656
    10. '(abs' → logprob: -17.876502990722656

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. ' )' → logprob: -10.625024795532227
    3. ')
' → logprob: -14.875024795532227
    4. '+' → logprob: -15.500024795532227
    5. '))' → logprob: -16.125024795532227
    6. ')`' → logprob: -16.750024795532227
    7. '```' → logprob: -17.875024795532227
    8. '')' → logprob: -17.875024795532227
    9. ')#' → logprob: -18.000024795532227
    10. ')}' → logprob: -18.375024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 184
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 144
Précision stricte (1ère position): 41.30%
Précision adaptée (1ère position): 42.39%
Précision (top 10): 78.26%
================================================================================
