================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
first_input_char_list = list(str(input()))
second_input_char_list = list(str(input()))

are_inputs_circularly_equal = 'No'

for rotation_start_index in range(len(first_input_char_list)):
    
    rotated_first_input = (
        first_input_char_list[rotation_start_index:] +
        first_input_char_list[:rotation_start_index]
    )
    
    if rotated_first_input == second_input_char_list:
        are_inputs_circularly_equal = 'Yes'
        break

print(are_inputs_circularly_equal)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'first' (ID: 7743)
  → Token d'amorce (pas de prédiction)

Token 1: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 2: '_char' (ID: 23398)
  → Token d'amorce (pas de prédiction)

Token 3: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1723688840866089
    2. '=' → logprob: -1.2973688840866089
    3. '[' → logprob: -1.2973688840866089
    4. '.' → logprob: -3.0473690032958984
    5. '+' → logprob: -3.1723690032958984
    6. ':' → logprob: -4.172369003295898
    7. ')' → logprob: -4.297369003295898
    8. ' =' → logprob: -4.422369003295898
    9. '(' → logprob: -5.547369003295898
    10. ',' → logprob: -6.422369003295898

Token 4: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.330472856760025
    2. '_' → logprob: -1.3304728269577026
    3. '.' → logprob: -5.330472946166992
    4. '=' → logprob: -5.330472946166992
    5. ' =' → logprob: -5.455472946166992
    6. 's' → logprob: -7.205472946166992
    7. '[:]' → logprob: -7.580472946166992
    8. ':' → logprob: -7.705472946166992
    9. '(' → logprob: -8.080472946166992
    10. '```' → logprob: -8.330472946166992

Token 5: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16866056621074677
    2. '[]' → logprob: -2.7936606407165527
    3. ' [' → logprob: -2.9186606407165527
    4. ' []' → logprob: -3.5436606407165527
    5. '['' → logprob: -4.793660640716553
    6. ' ['' → logprob: -6.168660640716553
    7. ''' → logprob: -7.793660640716553
    8. '["' → logprob: -9.418660163879395
    9. ' ' → logprob: -9.918660163879395
    10. '[first' → logprob: -10.543660163879395

Token 6: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002363040344789624
    2. '(first' → logprob: -6.127363204956055
    3. '(input' → logprob: -10.002363204956055
    4. '(user' → logprob: -11.002363204956055
    5. '(
' → logprob: -11.252363204956055
    6. '((' → logprob: -11.252363204956055
    7. '(open' → logprob: -11.377363204956055
    8. '('' → logprob: -11.627363204956055
    9. '("("' → logprob: -11.877363204956055
    10. '(range' → logprob: -12.127363204956055

Token 7: '(input' (ID: 10054)
  Prédit: '(first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.326751172542572
    2. ')' → logprob: -2.076751232147217
    3. 'first' → logprob: -2.701751232147217
    4. '(' → logprob: -3.451751232147217
    5. '1' → logprob: -3.826751232147217
    6. '[first' → logprob: -4.576751232147217
    7. '(input' → logprob: -4.951751232147217
    8. '_first' → logprob: -5.451751232147217
    9. 'input' → logprob: -5.701751232147217
    10. '_' → logprob: -6.201751232147217

Token 8: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4495328962802887
    2. '(' → logprob: -1.8245328664779663
    3. ')' → logprob: -1.8245328664779663
    4. '()))' → logprob: -3.949532985687256
    5. '_' → logprob: -5.324532985687256
    6. '('' → logprob: -5.574532985687256
    7. '())' → logprob: -5.699532985687256
    8. ')_' → logprob: -5.949532985687256
    9. ')))' → logprob: -6.074532985687256
    10. '_first' → logprob: -6.824532985687256

Token 9: 'second' (ID: 13901)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.041223544627428055
    2. '.' → logprob: -3.6662235260009766
    3. ')' → logprob: -5.041223526000977
    4. '+' → logprob: -5.416223526000977
    5. '_' → logprob: -6.666223526000977
    6. '[first' → logprob: -7.291223526000977
    7. '[
' → logprob: -8.541223526000977
    8. ''' → logprob: -8.791223526000977
    9. '```' → logprob: -8.791223526000977
    10. '[:]' → logprob: -8.916223526000977

Token 10: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.035074543207883835
    2. '_' → logprob: -3.535074472427368
    3. '_char' → logprob: -6.535074710845947
    4. '_output' → logprob: -6.535074710845947
    5. '_chars' → logprob: -7.910074710845947
    6. '_second' → logprob: -8.160074234008789
    7. '_text' → logprob: -8.535074234008789
    8. '__' → logprob: -9.035074234008789
    9. '_code' → logprob: -9.160074234008789
    10. ')_' → logprob: -9.285074234008789

Token 11: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.06467865407466888
    2. '_' → logprob: -3.31467866897583
    3. '_chars' → logprob: -4.06467866897583
    4. ')_' → logprob: -6.68967866897583
    5. '_text' → logprob: -7.18967866897583
    6. '_str' → logprob: -7.18967866897583
    7. '_string' → logprob: -7.31467866897583
    8. '_character' → logprob: -7.68967866897583
    9. '_ch' → logprob: -7.81467866897583
    10. '_line' → logprob: -7.81467866897583

Token 12: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0008696523727849126
    2. 's' → logprob: -8.000869750976562
    3. '_s' → logprob: -8.000869750976562
    4. '_lst' → logprob: -9.375869750976562
    5. '_' → logprob: -9.750869750976562
    6. '_lists' → logprob: -11.750869750976562
    7. '_li' → logprob: -11.750869750976562
    8. ' _' → logprob: -11.750869750976562
    9. '_l' → logprob: -11.875869750976562
    10. ')_' → logprob: -12.750869750976562

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12002900242805481
    2. '.' → logprob: -3.6200289726257324
    3. '[:]' → logprob: -3.8700289726257324
    4. '_' → logprob: -3.9950289726257324
    5. '<|end|>' → logprob: -4.370028972625732
    6. ')' → logprob: -4.495028972625732
    7. '[]' → logprob: -4.995028972625732
    8. '+' → logprob: -5.120028972625732
    9. '```' → logprob: -5.745028972625732
    10. '=' → logprob: -6.870028972625732

Token 14: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.42877721786499023
    2. 'list' → logprob: -1.0537772178649902
    3. 'str' → logprob: -11.178777694702148
    4. ' str' → logprob: -11.303777694702148
    5. ' ' → logprob: -11.428777694702148
    6. 'input' → logprob: -11.678777694702148
    7. ' []' → logprob: -11.803777694702148
    8. '[]' → logprob: -12.053777694702148
    9. ' input' → logprob: -12.303777694702148
    10. '[list' → logprob: -12.553777694702148

Token 15: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.3488259017467499
    2. '(' → logprob: -1.2238259315490723
    3. '((' → logprob: -8.473825454711914
    4. '(s' → logprob: -9.473825454711914
    5. ' (' → logprob: -10.848825454711914
    6. '(
' → logprob: -11.348825454711914
    7. '("("' → logprob: -11.848825454711914
    8. '(eval' → logprob: -11.973825454711914
    9. '(

' → logprob: -12.473825454711914
    10. 'str' → logprob: -12.598825454711914

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0019307781476527452
    2. '(' → logprob: -6.2519307136535645
    3. 'input' → logprob: -14.751931190490723
    4. '(in' → logprob: -14.876931190490723
    5. '<input' → logprob: -15.501931190490723
    6. '(second' → logprob: -15.751931190490723
    7. '(int' → logprob: -15.751931190490723
    8. '(
' → logprob: -15.751931190490723
    9. '(output' → logprob: -16.001930236816406
    10. '(str' → logprob: -16.251930236816406

Token 17: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0065504093654453754
    2. '())' → logprob: -5.381550312042236
    3. '))' → logprob: -6.506550312042236
    4. '()' → logprob: -8.131550788879395
    5. '()));' → logprob: -10.256550788879395
    6. '(' → logprob: -10.631550788879395
    7. '()))
' → logprob: -10.756550788879395
    8. '())).' → logprob: -11.131550788879395
    9. ')' → logprob: -11.131550788879395
    10. '())))' → logprob: -11.256550788879395

Token 18: 'are' (ID: 644)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8352611660957336
    2. '.' → logprob: -1.5852611064910889
    3. '#' → logprob: -1.9602611064910889
    4. '+' → logprob: -3.210261106491089
    5. 'i' → logprob: -3.210261106491089
    6. 'if' → logprob: -3.460261106491089
    7. 'f' → logprob: -3.960261106491089
    8. ')' → logprob: -4.210261344909668
    9. 'for' → logprob: -4.210261344909668
    10. '[i' → logprob: -4.710261344909668

Token 19: '_inputs' (ID: 67304)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04962381720542908
    2. '[' → logprob: -3.799623727798462
    3. ' =' → logprob: -4.424623966217041
    4. ' ' → logprob: -5.049623966217041
    5. '.' → logprob: -6.299623966217041
    6. '=' → logprob: -6.799623966217041
    7. '_space' → logprob: -6.799623966217041
    8. '_equal' → logprob: -7.049623966217041
    9. ' _' → logprob: -7.674623966217041
    10. ' ==' → logprob: -8.049623489379883

Token 20: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0768929198384285
    2. '_equal' → logprob: -2.826892852783203
    3. '=' → logprob: -5.076892852783203
    4. ' =' → logprob: -5.576892852783203
    5. 'equal' → logprob: -6.826892852783203
    6. '_space' → logprob: -6.951892852783203
    7. '[' → logprob: -6.951892852783203
    8. '_valid' → logprob: -7.701892852783203
    9. '_equals' → logprob: -8.076892852783203
    10. ')' → logprob: -8.826892852783203

Token 21: 'ircular' (ID: 27245)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.6177030205726624
    2. '_' → logprob: -1.9927029609680176
    3. 'om' → logprob: -2.3677029609680176
    4. 'on' → logprob: -2.9927029609680176
    5. '_equal' → logprob: -3.2427029609680176
    6. 'ons' → logprob: -3.4927029609680176
    7. 'o' → logprob: -3.6177029609680176
    8. 'orrect' → logprob: -3.8677029609680176
    9. '_cont' → logprob: -4.742702960968018
    10. '[' → logprob: -5.367702960968018

Token 22: 'ly' (ID: 423)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6037079095840454
    2. '=' → logprob: -1.1037079095840454
    3. '(' → logprob: -2.478707790374756
    4. ' =' → logprob: -3.603707790374756
    5. '_=' → logprob: -5.353707790374756
    6. '_equal' → logprob: -6.478707790374756
    7. 's' → logprob: -6.603707790374756
    8. '?' → logprob: -7.603707790374756
    9. '_equals' → logprob: -7.728707790374756
    10. '(a' → logprob: -8.478708267211914

Token 23: '_equal' (ID: 27882)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03646848350763321
    2. '_equal' → logprob: -3.411468505859375
    3. '_equals' → logprob: -7.161468505859375
    4. '_same' → logprob: -8.161468505859375
    5. 'ly' → logprob: -8.161468505859375
    6. '_=' → logprob: -8.286468505859375
    7. '_under' → logprob: -8.661468505859375
    8. 's' → logprob: -9.036468505859375
    9. '(' → logprob: -9.286468505859375
    10. '_l' → logprob: -9.911468505859375

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2361661046743393
    2. ' =' → logprob: -1.6111661195755005
    3. '(' → logprob: -4.611166000366211
    4. '(first' → logprob: -8.736166000366211
    5. 's' → logprob: -9.486166000366211
    6. '?' → logprob: -9.611166000366211
    7. '=True' → logprob: -9.736166000366211
    8. ' ' → logprob: -9.986166000366211
    9. ' (' → logprob: -9.986166000366211
    10. '<|end|>' → logprob: -9.986166000366211

Token 25: ' '' (ID: 461)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.6282076835632324
    2. ' first' → logprob: -0.8782076835632324
    3. '(first' → logprob: -4.253207683563232
    4. 'second' → logprob: -4.378207683563232
    5. 'len' → logprob: -5.003207683563232
    6. ' second' → logprob: -5.378207683563232
    7. ' len' → logprob: -5.628207683563232
    8. ' (' → logprob: -6.378207683563232
    9. 'set' → logprob: -6.753207683563232
    10. ' set' → logprob: -7.003207683563232

Token 26: 'No' (ID: 3160)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04536363482475281
    2. 'False' → logprob: -3.420363664627075
    3. 'True' → logprob: -6.295363426208496
    4. ' '' → logprob: -6.420363426208496
    5. ' False' → logprob: -6.670363426208496
    6. '('' → logprob: -6.795363426208496
    7. 'Yes' → logprob: -6.795363426208496
    8. 'len' → logprob: -7.170363426208496
    9. ''.' → logprob: -7.670363426208496
    10. '''' → logprob: -7.795363426208496

Token 27: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5332478142227046e-05
    2. ''
' → logprob: -11.625015258789062
    3. '\n' → logprob: -12.875015258789062
    4. ' '' → logprob: -13.750015258789062
    5. 'if' → logprob: -13.875015258789062
    6. ''or' → logprob: -14.750015258789062
    7. ''t' → logprob: -15.375015258789062
    8. ''

' → logprob: -15.375015258789062
    9. ''
' → logprob: -15.750015258789062
    10. ''s' → logprob: -16.125015258789062

Token 28: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08409823477268219
    2. ' if' → logprob: -3.3340983390808105
    3. '
' → logprob: -3.5840983390808105
    4. 'for' → logprob: -4.9590983390808105
    5. '\n' → logprob: -5.8340983390808105
    6. '```' → logprob: -5.8340983390808105
    7. 'i' → logprob: -6.7090983390808105
    8. '#' → logprob: -7.2090983390808105
    9. ' for' → logprob: -7.3340983390808105
    10. ':' → logprob: -8.084097862243652

Token 29: ' rotation' (ID: 23769)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23406513035297394
    2. ' i' → logprob: -1.6090651750564575
    3. '  ' → logprob: -5.734065055847168
    4. ' c' → logprob: -5.734065055847168
    5. ' char' → logprob: -6.609065055847168
    6. ' token' → logprob: -8.984065055847168
    7. ' )' → logprob: -9.109065055847168
    8. ' element' → logprob: -9.234065055847168
    9. ' first' → logprob: -9.609065055847168
    10. ' item' → logprob: -9.734065055847168

Token 30: '_start' (ID: 10949)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02649419941008091
    2. 'in' → logprob: -3.776494264602661
    3. ' ' → logprob: -6.276494026184082
    4. '_' → logprob: -6.776494026184082
    5. '_in' → logprob: -8.776494026184082
    6. ' _' → logprob: -10.276494026184082
    7. 's' → logprob: -11.651494026184082
    8. '  ' → logprob: -12.151494026184082
    9. ' i' → logprob: -12.276494026184082
    10. 'space' → logprob: -12.526494026184082

Token 31: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47631698846817017
    2. 'in' → logprob: -1.2263169288635254
    3. '_in' → logprob: -2.7263169288635254
    4. '_' → logprob: -4.101316928863525
    5. '_idx' → logprob: -6.351316928863525
    6. '_index' → logprob: -6.726316928863525
    7. ' ' → logprob: -8.726317405700684
    8. '_i' → logprob: -9.101317405700684
    9. '	in' → logprob: -9.476317405700684
    10. '=' → logprob: -9.601317405700684

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005958898924291134
    2. 'in' → logprob: -5.1309590339660645
    3. ' ' → logprob: -10.505958557128906
    4. '	in' → logprob: -14.255958557128906
    5. '_in' → logprob: -14.505958557128906
    6. 'In' → logprob: -14.880958557128906
    7. '  ' → logprob: -15.630958557128906
    8. ',' → logprob: -15.630958557128906
    9. '0' → logprob: -15.880958557128906
    10. 'inthe' → logprob: -16.255958557128906

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -5.7888184528565034e-05
    2. 'range' → logprob: -9.8750581741333
    3. ' ' → logprob: -12.3750581741333
    4. '	range' → logprob: -13.1250581741333
    5. '(range' → logprob: -16.625057220458984
    6. ' xrange' → logprob: -16.750057220458984
    7. '  ' → logprob: -17.250057220458984
    8. '   ' → logprob: -18.250057220458984
    9. '_range' → logprob: -18.750057220458984
    10. '<|end|>' → logprob: -19.375057220458984

Token 34: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3868808448314667
    2. '(' → logprob: -1.136880874633789
    3. ' (' → logprob: -12.761880874633789
    4. '(
' → logprob: -13.136880874633789
    5. '(length' → logprob: -13.511880874633789
    6. '(first' → logprob: -13.886880874633789
    7. 'len' → logprob: -14.136880874633789
    8. '(strlen' → logprob: -15.011880874633789
    9. '<len' → logprob: -15.511880874633789
    10. '=len' → logprob: -15.511880874633789

Token 35: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.12771308422088623
    2. '(second' → logprob: -2.127713203430176
    3. '(' → logprob: -7.252713203430176
    4. 'first' → logprob: -10.002713203430176
    5. '(s' → logprob: -11.252713203430176
    6. 'second' → logprob: -11.502713203430176
    7. ' (' → logprob: -13.252713203430176
    8. ' first' → logprob: -13.627713203430176
    9. '(
' → logprob: -14.252713203430176
    10. '[first' → logprob: -14.252713203430176

Token 36: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.003037962829694152
    2. '_first' → logprob: -5.878037929534912
    3. '_' → logprob: -9.50303840637207
    4. ')_' → logprob: -9.62803840637207
    5. ')' → logprob: -10.87803840637207
    6. '))' → logprob: -11.00303840637207
    7. 'input' → logprob: -11.00303840637207
    8. '_second' → logprob: -11.25303840637207
    9. 'first' → logprob: -12.25303840637207
    10. '_)' → logprob: -12.75303840637207

Token 37: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -1.1472419600977446e-06
    2. 'char' → logprob: -14.875000953674316
    3. ')_' → logprob: -15.125000953674316
    4. ' _' → logprob: -16.250001907348633
    5. '_c' → logprob: -16.250001907348633
    6. '_' → logprob: -16.250001907348633
    7. '_chars' → logprob: -16.500001907348633
    8. ')' → logprob: -16.500001907348633
    9. '_CHAR' → logprob: -17.750001907348633
    10. '<char' → logprob: -17.875001907348633

Token 38: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0011726059019565582
    2. 'ist' → logprob: -6.7511725425720215
    3. 'List' → logprob: -14.25117301940918
    4. 'st' → logprob: -14.37617301940918
    5. ')_' → logprob: -15.25117301940918
    6. '_lists' → logprob: -15.25117301940918
    7. 's' → logprob: -15.87617301940918
    8. 'list' → logprob: -15.87617301940918
    9. '_' → logprob: -16.12617301940918
    10. '_lst' → logprob: -16.25117301940918

Token 39: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.029207538813352585
    2. '):' → logprob: -3.779207468032837
    3. '))' → logprob: -5.279207706451416
    4. ')):
' → logprob: -7.529207706451416
    5. ')' → logprob: -8.529207229614258
    6. ':' → logprob: -9.654207229614258
    7. ' ):' → logprob: -11.529207229614258
    8. ' ))' → logprob: -11.654207229614258
    9. ')):
' → logprob: -11.654207229614258
    10. '>):' → logprob: -12.404207229614258

Token 40: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13195791840553284
    2. ':' → logprob: -2.7569580078125
    3. ' ' → logprob: -3.1319580078125
    4. ' if' → logprob: -5.0069580078125
    5. '<|end|>' → logprob: -5.3819580078125
    6. '    ' → logprob: -6.6319580078125
    7. ' :' → logprob: -6.7569580078125
    8. '  ' → logprob: -7.2569580078125
    9. '    
' → logprob: -8.0069580078125
    10. '[' → logprob: -8.0069580078125

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01615707017481327
    2. ' if' → logprob: -5.016157150268555
    3. ' rotated' → logprob: -5.016157150268555
    4. 'if' → logprob: -6.391157150268555
    5. ' current' → logprob: -8.516157150268555
    6. 'rot' → logprob: -8.766157150268555
    7. ' shifted' → logprob: -8.766157150268555
    8. '```' → logprob: -8.891157150268555
    9. ' is' → logprob: -9.016157150268555
    10. ' for' → logprob: -9.766157150268555

Token 42: ' rotated' (ID: 93819)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.08819932490587234
    2. '   ' → logprob: -3.3381993770599365
    3. ' rotated' → logprob: -3.7131993770599365
    4. 'if' → logprob: -4.463199138641357
    5. 'shift' → logprob: -4.963199138641357
    6. 'is' → logprob: -6.213199138641357
    7. ' if' → logprob: -7.463199138641357
    8. 'second' → logprob: -7.838199138641357
    9. 'rotation' → logprob: -7.963199138641357
    10. 'current' → logprob: -8.088199615478516

Token 43: '_first' (ID: 29347)
  Prédit: '_second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_second' → logprob: -0.24940913915634155
    2. '_first' → logprob: -1.6244091987609863
    3. '_list' → logprob: -4.624409198760986
    4. '_input' → logprob: -4.624409198760986
    5. '_version' → logprob: -6.499409198760986
    6. '_' → logprob: -7.249409198760986
    7. '_char' → logprob: -7.249409198760986
    8. '_string' → logprob: -7.999409198760986
    9. ' =' → logprob: -8.499408721923828
    10. '_chars' → logprob: -8.499408721923828

Token 44: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.04578321799635887
    2. '_char' → logprob: -3.170783281326294
    3. '_' → logprob: -6.295783042907715
    4. '_first' → logprob: -7.545783042907715
    5. '_chars' → logprob: -8.545783042907715
    6. '_character' → logprob: -10.795783042907715
    7. '_list' → logprob: -10.920783042907715
    8. '```' → logprob: -11.045783042907715
    9. '_output' → logprob: -11.170783042907715
    10. '_string' → logprob: -11.295783042907715

Token 45: ' =' (ID: 314)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0019576558843255043
    2. '_list' → logprob: -7.251957893371582
    3. '_chars' → logprob: -7.501957893371582
    4. '=' → logprob: -8.376957893371582
    5. '_' → logprob: -8.376957893371582
    6. ' =' → logprob: -8.876957893371582
    7. 'char' → logprob: -9.751957893371582
    8. '```' → logprob: -11.626957893371582
    9. '=_' → logprob: -12.126957893371582
    10. '_character' → logprob: -12.251957893371582

Token 46: ' (
' (ID: 4112)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.4741518199443817
    2. 'first' → logprob: -0.9741518497467041
    3. '[first' → logprob: -9.974151611328125
    4. ' ' → logprob: -11.349151611328125
    5. '	first' → logprob: -12.349151611328125
    6. '(first' → logprob: -12.474151611328125
    7. '   ' → logprob: -12.724151611328125
    8. 'f' → logprob: -13.099151611328125
    9. '  ' → logprob: -13.349151611328125
    10. '[' → logprob: -15.349151611328125

Token 47: '       ' (ID: 309)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.25416499376296997
    2. ' first' → logprob: -1.5041649341583252
    3. '   ' → logprob: -6.129165172576904
    4. '[first' → logprob: -10.629164695739746
    5. '	first' → logprob: -11.254164695739746
    6. ' ' → logprob: -11.629164695739746
    7. '  ' → logprob: -12.504164695739746
    8. '    ' → logprob: -13.379164695739746
    9. '       ' → logprob: -13.754164695739746
    10. '(first' → logprob: -14.004164695739746

Token 48: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.004745180252939463
    2. ' first' → logprob: -5.379745006561279
    3. '   ' → logprob: -9.504745483398438
    4. '[first' → logprob: -10.004745483398438
    5. '	first' → logprob: -13.379745483398438
    6. ' ' → logprob: -13.629745483398438
    7. '  ' → logprob: -14.504745483398438
    8. '       ' → logprob: -14.504745483398438
    9. '(first' → logprob: -15.004745483398438
    10. '[' → logprob: -15.004745483398438

Token 49: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.004629007540643215
    2. '_char' → logprob: -5.379629135131836
    3. '_' → logprob: -13.254629135131836
    4. 'input' → logprob: -13.504629135131836
    5. '_first' → logprob: -13.629629135131836
    6. '_character' → logprob: -14.504629135131836
    7. '[' → logprob: -14.629629135131836
    8. ')' → logprob: -14.629629135131836
    9. '```' → logprob: -14.879629135131836
    10. '[input' → logprob: -15.004629135131836

Token 50: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -9.729906196298543e-06
    2. 'char' → logprob: -12.125009536743164
    3. '[' → logprob: -13.375009536743164
    4. '_chars' → logprob: -13.875009536743164
    5. ')' → logprob: -15.125009536743164
    6. ')_' → logprob: -15.375009536743164
    7. '_' → logprob: -15.625009536743164
    8. 'Char' → logprob: -15.750009536743164
    9. '_CHAR' → logprob: -16.000009536743164
    10. 'rotation' → logprob: -16.000009536743164

Token 51: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.696889623621246e-06
    2. 'list' → logprob: -13.25000286102295
    3. 'ist' → logprob: -14.62500286102295
    4. 'List' → logprob: -15.62500286102295
    5. '[' → logprob: -16.625001907348633
    6. 's' → logprob: -16.625001907348633
    7. '_lists' → logprob: -17.500001907348633
    8. '_lst' → logprob: -17.750001907348633
    9. '_LIST' → logprob: -18.375001907348633
    10. '```' → logprob: -18.625001907348633

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3544423381972592e-05
    2. '[-' → logprob: -11.75001335144043
    3. '   ' → logprob: -13.12501335144043
    4. 'rotation' → logprob: -13.75001335144043
    5. ' [' → logprob: -14.37501335144043
    6. '[
' → logprob: -14.50001335144043
    7. '[:' → logprob: -15.00001335144043
    8. '[len' → logprob: -15.00001335144043
    9. '[:]' → logprob: -15.37501335144043
    10. '[first' → logprob: -16.00001335144043

Token 53: 'rotation' (ID: 27920)
  Prédit: 'rotation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotation' → logprob: -4.227250610711053e-05
    2. ' rotation' → logprob: -10.125041961669922
    3. '(rotation' → logprob: -13.125041961669922
    4. '   ' → logprob: -16.375041961669922
    5. '_rotation' → logprob: -18.000041961669922
    6. '```' → logprob: -19.500041961669922
    7. '.rotation' → logprob: -20.000041961669922
    8. '
' → logprob: -20.000041961669922
    9. '`' → logprob: -21.000041961669922
    10. 'shift' → logprob: -21.000041961669922

Token 54: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.696889623621246e-06
    2. 'start' → logprob: -13.75000286102295
    3. 'Start' → logprob: -14.00000286102295
    4. '_START' → logprob: -14.87500286102295
    5. '-start' → logprob: -15.75000286102295
    6. '_Start' → logprob: -16.125001907348633
    7. '```' → logprob: -16.875001907348633
    8. '_index' → logprob: -17.125001907348633
    9. '_first' → logprob: -17.500001907348633
    10. '_' → logprob: -17.625001907348633

Token 55: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00018935515254270285
    2. 'index' → logprob: -8.625189781188965
    3. '_start' → logprob: -12.250189781188965
    4. 'nd' → logprob: -14.000189781188965
    5. 'dex' → logprob: -14.125189781188965
    6. ':]' → logprob: -14.500189781188965
    7. '+' → logprob: -14.875189781188965
    8. ']' → logprob: -15.125189781188965
    9. 'n' → logprob: -15.250189781188965
    10. '_]' → logprob: -15.375189781188965

Token 56: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0001717166742309928
    2. ' :]' → logprob: -9.375171661376953
    3. ':' → logprob: -9.500171661376953
    4. ']' → logprob: -11.750171661376953
    5. '+' → logprob: -13.000171661376953
    6. ':]
' → logprob: -14.125171661376953
    7. '+]' → logprob: -15.000171661376953
    8. '   ' → logprob: -15.750171661376953
    9. ':)' → logprob: -16.000171661376953
    10. ':],' → logprob: -16.125171661376953

Token 57: ' +
' (ID: 6119)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011232078075408936
    2. ' +' → logprob: -4.511231899261475
    3. ')' → logprob: -8.886232376098633
    4. '+
' → logprob: -10.261232376098633
    5. '+)' → logprob: -12.386232376098633
    6. ' +
' → logprob: -12.636232376098633
    7. ')+' → logprob: -13.886232376098633
    8. '   ' → logprob: -14.636232376098633
    9. '+p' → logprob: -15.011232376098633
    10. '<|end|>' → logprob: -15.136232376098633

Token 58: '       ' (ID: 309)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.06199625879526138
    2. ' first' → logprob: -2.8119962215423584
    3. '   ' → logprob: -11.186996459960938
    4. '       ' → logprob: -11.686996459960938
    5. '	first' → logprob: -12.061996459960938
    6. '[first' → logprob: -15.311996459960938
    7. ' ' → logprob: -16.311996459960938
    8. '           ' → logprob: -16.811996459960938
    9. '(first' → logprob: -17.186996459960938
    10. '  ' → logprob: -17.311996459960938

Token 59: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.023247458040714264
    2. ' first' → logprob: -3.773247480392456
    3. '       ' → logprob: -14.023247718811035
    4. '	first' → logprob: -14.523247718811035
    5. '   ' → logprob: -14.648247718811035
    6. '[first' → logprob: -16.39824676513672
    7. '(first' → logprob: -16.89824676513672
    8. ' ' → logprob: -17.89824676513672
    9. '           ' → logprob: -18.52324676513672
    10. ':first' → logprob: -18.64824676513672

Token 60: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -9.491498531133402e-06
    2. '_output' → logprob: -12.875009536743164
    3. '_user' → logprob: -13.000009536743164
    4. 'input' → logprob: -13.125009536743164
    5. '_first' → logprob: -13.750009536743164
    6. '_' → logprob: -15.000009536743164
    7. ')_' → logprob: -15.625009536743164
    8. '_second' → logprob: -16.125009536743164
    9. '_answer' → logprob: -16.125009536743164
    10. '```' → logprob: -16.125009536743164

Token 61: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -3.292907877039397e-06
    2. 'char' → logprob: -12.75000286102295
    3. '_input' → logprob: -15.75000286102295
    4. '__' → logprob: -17.250003814697266
    5. '_c' → logprob: -17.250003814697266
    6. '```' → logprob: -17.375003814697266
    7. ')_' → logprob: -18.000003814697266
    8. 'Char' → logprob: -18.125003814697266
    9. '_character' → logprob: -18.375003814697266
    10. '_CHAR' → logprob: -18.500003814697266

Token 62: '_list' (ID: 4162)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00014728360110893846
    2. 'char' → logprob: -8.875146865844727
    3. '_list' → logprob: -11.875146865844727
    4. 'Char' → logprob: -15.250146865844727
    5. '```' → logprob: -16.750146865844727
    6. '_CHAR' → logprob: -17.625146865844727
    7. '_chars' → logprob: -17.750146865844727
    8. '_c' → logprob: -18.000146865844727
    9. '-char' → logprob: -18.125146865844727
    10. '<char' → logprob: -18.375146865844727

Token 63: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -4.644463479053229e-05
    2. '[' → logprob: -10.000046730041504
    3. ':' → logprob: -14.375046730041504
    4. '[:]' → logprob: -15.625046730041504
    5. '][:' → logprob: -15.875046730041504
    6. '   ' → logprob: -17.500045776367188
    7. '[
' → logprob: -17.875045776367188
    8. '[:-' → logprob: -18.000045776367188
    9. '0' → logprob: -18.000045776367188
    10. ' [:' → logprob: -18.375045776367188

Token 64: 'rotation' (ID: 27920)
  Prédit: 'rotation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotation' → logprob: -5.88418151892256e-05
    2. ' rotation' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.625059127807617
    4. '(rotation' → logprob: -17.625059127807617
    5. '       ' → logprob: -18.375059127807617
    6. '           ' → logprob: -19.250059127807617
    7. ' ' → logprob: -20.125059127807617
    8. 'rot' → logprob: -21.500059127807617
    9. '_rotation' → logprob: -21.625059127807617
    10. '.rotation' → logprob: -21.625059127807617

Token 65: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.2200749754119897e-06
    2. '_index' → logprob: -13.375001907348633
    3. 'start' → logprob: -15.125001907348633
    4. 'Start' → logprob: -16.250001907348633
    5. '```' → logprob: -16.750001907348633
    6. '_end' → logprob: -16.875001907348633
    7. '_START' → logprob: -17.000001907348633
    8. '_' → logprob: -17.875001907348633
    9. '_rotation' → logprob: -17.875001907348633
    10. 'rotation' → logprob: -18.125001907348633

Token 66: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -8.061054359131958e-06
    2. 'index' → logprob: -11.750007629394531
    3. '_char' → logprob: -17.12500762939453
    4. 'rotation' → logprob: -17.25000762939453
    5. '_start' → logprob: -17.87500762939453
    6. '_rotation' → logprob: -17.87500762939453
    7. 'Index' → logprob: -18.37500762939453
    8. '```' → logprob: -18.75000762939453
    9. '__' → logprob: -19.00000762939453
    10. '[index' → logprob: -19.62500762939453

Token 67: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013051170855760574
    2. '])' → logprob: -4.5130510330200195
    3. ')' → logprob: -6.2630510330200195
    4. '   ' → logprob: -10.01305103302002
    5. ']
' → logprob: -10.01305103302002
    6. ']

' → logprob: -13.01305103302002
    7. ' ]' → logprob: -14.01305103302002
    8. '）' → logprob: -14.13805103302002
    9. '       ' → logprob: -14.63805103302002
    10. '']' → logprob: -14.88805103302002

Token 68: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20187821984291077
    2. '   ' → logprob: -1.7018781900405884
    3. ')
' → logprob: -8.076878547668457
    4. ')

' → logprob: -9.201878547668457
    5. ' )' → logprob: -10.451878547668457
    6. '```' → logprob: -11.576878547668457
    7. '    
' → logprob: -12.326878547668457
    8. ' ' → logprob: -12.951878547668457
    9. '   ' → logprob: -13.701878547668457
    10. '`)' → logprob: -13.951878547668457

Token 69: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01652202196419239
    2. '   ' → logprob: -4.14152193069458
    3. ')
' (adapté à ' )
') → logprob: -7.89152193069458
    4. ')

' → logprob: -9.391522407531738
    5. ' )' → logprob: -11.016522407531738
    6. '```' → logprob: -12.516522407531738
    7. ']' → logprob: -12.641522407531738
    8. '')' → logprob: -13.266522407531738
    9. '")' → logprob: -14.266522407531738
    10. '）' → logprob: -14.516522407531738

Token 70: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32899776101112366
    2. ' if' → logprob: -1.7039977312088013
    3. '    
' → logprob: -3.078997850418091
    4. '
' → logprob: -3.578997850418091
    5. '```' → logprob: -4.328997611999512
    6. 'if' → logprob: -5.328997611999512
    7. '<|end|>' → logprob: -6.703997611999512
    8. '  
' → logprob: -6.828997611999512
    9. '\n' → logprob: -6.828997611999512
    10. '[' → logprob: -7.203997611999512

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48419907689094543
    2. 'if' → logprob: -0.984199047088623
    3. ' if' → logprob: -4.609199047088623
    4. '```' → logprob: -9.359199523925781
    5. '    
' → logprob: -10.859199523925781
    6. '``' → logprob: -13.484199523925781
    7. 'for' → logprob: -14.234199523925781
    8. '[' → logprob: -14.234199523925781
    9. '       ' → logprob: -14.234199523925781
    10. 'If' → logprob: -14.484199523925781

Token 72: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.584861744660884e-05
    2. ' if' → logprob: -10.625045776367188
    3. '   ' → logprob: -10.875045776367188
    4. '```' → logprob: -12.875045776367188
    5. 'for' → logprob: -18.250045776367188
    6. '    
' → logprob: -18.250045776367188
    7. 'If' → logprob: -18.625045776367188
    8. '[' → logprob: -18.875045776367188
    9. '``' → logprob: -18.875045776367188
    10. '`' → logprob: -19.500045776367188

Token 73: ' rotated' (ID: 93819)
  Prédit: ' rotated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotated' → logprob: -4.096126576769166e-05
    2. ' second' → logprob: -10.875041007995605
    3. ' rot' → logprob: -11.500041007995605
    4. 'rot' → logprob: -11.625041007995605
    5. ' rotation' → logprob: -13.750041007995605
    6. ' rotating' → logprob: -13.875041007995605
    7. ' rotational' → logprob: -15.250041007995605
    8. ' len' → logprob: -15.500041007995605
    9. ' first' → logprob: -15.875041007995605
    10. ' ' → logprob: -16.75004005432129

Token 74: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -0.0015058133285492659
    2. '_second' → logprob: -6.5015058517456055
    3. '```' → logprob: -13.876505851745605
    4. '_' → logprob: -14.001505851745605
    5. ')_' → logprob: -14.501505851745605
    6. ''_' → logprob: -15.001505851745605
    7. 'first' → logprob: -15.251505851745605
    8. ' _' → logprob: -15.376505851745605
    9. '_f' → logprob: -16.00150489807129
    10. '"_' → logprob: -16.12650489807129

Token 75: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.50000286102295
    3. 'input' → logprob: -14.12500286102295
    4. '_in' → logprob: -16.000001907348633
    5. '_inputs' → logprob: -16.750001907348633
    6. 'Input' → logprob: -17.250001907348633
    7. '_output' → logprob: -17.375001907348633
    8. '_user' → logprob: -17.750001907348633
    9. '_rotation' → logprob: -18.000001907348633
    10. '```' → logprob: -18.000001907348633

Token 76: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3485420346260071
    2. ' ==' → logprob: -1.2235419750213623
    3. '=' → logprob: -9.848542213439941
    4. ')==' → logprob: -11.098542213439941
    5. ')' → logprob: -11.598542213439941
    6. '==
' → logprob: -12.348542213439941
    7. '<|end|>' → logprob: -12.723542213439941
    8. '[' → logprob: -12.848542213439941
    9. '```' → logprob: -12.973542213439941
    10. ']==' → logprob: -12.973542213439941

Token 77: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.018150877207517624
    2. 'second' → logprob: -4.018150806427002
    3. '	second' → logprob: -14.39315128326416
    4. '(second' → logprob: -15.26815128326416
    5. ' ' → logprob: -16.268150329589844
    6. ' first' → logprob: -16.893150329589844
    7. '_second' → logprob: -17.393150329589844
    8. '.second' → logprob: -17.643150329589844
    9. '   ' → logprob: -18.018150329589844
    10. ' ' → logprob: -18.393150329589844

Token 78: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -12.125005722045898
    3. '_output' → logprob: -17.0000057220459
    4. '_Input' → logprob: -17.2500057220459
    5. ')_' → logprob: -17.8750057220459
    6. '_INPUT' → logprob: -18.0000057220459
    7. ' _' → logprob: -18.1250057220459
    8. '_inputs' → logprob: -18.2500057220459
    9. 'input' → logprob: -18.3750057220459
    10. 'Input' → logprob: -18.3750057220459

Token 79: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -7.703443770878948e-06
    2. '_' → logprob: -12.625007629394531
    3. 'char' → logprob: -12.625007629394531
    4. '_c' → logprob: -14.750007629394531
    5. '_list' → logprob: -15.500007629394531
    6. '<char' → logprob: -16.25000762939453
    7. '_chars' → logprob: -16.37500762939453
    8. 'Char' → logprob: -16.87500762939453
    9. '_CHAR' → logprob: -17.00000762939453
    10. '```' → logprob: -17.25000762939453

Token 80: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.061054359131958e-06
    2. '_' → logprob: -12.750007629394531
    3. 'list' → logprob: -13.375007629394531
    4. '_l' → logprob: -13.625007629394531
    5. 'ist' → logprob: -14.125007629394531
    6. '_lst' → logprob: -14.375007629394531
    7. '_char' → logprob: -14.375007629394531
    8. 'List' → logprob: -15.750007629394531
    9. 'alist' → logprob: -16.00000762939453
    10. '_li' → logprob: -16.12500762939453

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00104150187689811
    2. ':
' → logprob: -6.876041412353516
    3. '   ' → logprob: -11.876041412353516
    4. ' :' → logprob: -14.626041412353516
    5. ':return' → logprob: -15.001041412353516
    6. '       ' → logprob: -15.626041412353516
    7. '):' → logprob: -15.751041412353516
    8. ':

' → logprob: -15.876041412353516
    9. ':**' → logprob: -16.126041412353516
    10. '=' → logprob: -16.876041412353516

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39886972308158875
    2. '   ' → logprob: -1.2738697528839111
    3. '
' → logprob: -3.398869752883911
    4. '    
' → logprob: -4.648869514465332
    5. '        
' → logprob: -5.648869514465332
    6. ':
' → logprob: -6.898869514465332
    7. ' 
' → logprob: -8.148869514465332
    8. ':' → logprob: -8.148869514465332
    9. '    ' → logprob: -9.023869514465332
    10. '```' → logprob: -9.398869514465332

Token 83: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045129623264074326
    2. '       ' → logprob: -3.4201295375823975
    3. '
' → logprob: -4.795129776000977
    4. '    
' → logprob: -6.295129776000977
    5. '        
' → logprob: -7.670129776000977
    6. ' 
' → logprob: -8.045129776000977
    7. '```' → logprob: -8.420129776000977
    8. '    ' → logprob: -9.295129776000977
    9. ' is' → logprob: -10.295129776000977
    10. '           ' → logprob: -10.670129776000977

Token 84: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -0.048734866082668304
    2. '_' → logprob: -3.0487349033355713
    3. '_input' → logprob: -9.423734664916992
    4. '_outputs' → logprob: -10.173734664916992
    5. '_s' → logprob: -11.048734664916992
    6. 's' → logprob: -12.423734664916992
    7. '_
' → logprob: -13.048734664916992
    8. '_answers' → logprob: -14.423734664916992
    9. '_\' → logprob: -14.548734664916992
    10. '_

' → logprob: -14.548734664916992

Token 85: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0009115827269852161
    2. '_' → logprob: -7.000911712646484
    3. '_=' → logprob: -17.875911712646484
    4. '_
' → logprob: -18.625911712646484
    5. ' _' → logprob: -18.875911712646484
    6. '_equal' → logprob: -19.125911712646484
    7. '_

' → logprob: -19.375911712646484
    8. '=' → logprob: -19.500911712646484
    9. '__' → logprob: -20.125911712646484
    10. '_]' → logprob: -20.250911712646484

Token 86: 'ircular' (ID: 27245)
  Prédit: 'ircular'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircular' → logprob: -0.0013738033594563603
    2. 'i' → logprob: -7.376373767852783
    3. 'c' → logprob: -7.751373767852783
    4. 'ir' → logprob: -9.626374244689941
    5. 'u' → logprob: -9.876374244689941
    6. 'yclic' → logprob: -10.376374244689941
    7. 'ircle' → logprob: -10.501374244689941
    8. 'irc' → logprob: -10.626374244689941
    9. 'a' → logprob: -11.001374244689941
    10. 'ular' → logprob: -11.126374244689941

Token 87: 'ly' (ID: 423)
  Prédit: 'ly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.02554514817893505
    2. '_' → logprob: -4.275545120239258
    3. 'l' → logprob: -5.150545120239258
    4. 'y' → logprob: -5.650545120239258
    5. '_y' → logprob: -7.400545120239258
    6. '_l' → logprob: -7.525545120239258
    7. '_equal' → logprob: -7.775545120239258
    8. '```' → logprob: -9.400545120239258
    9. ''_' → logprob: -9.775545120239258
    10. '__' → logprob: -9.775545120239258

Token 88: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.00016682932619005442
    2. '_' → logprob: -8.750166893005371
    3. 'equal' → logprob: -12.125166893005371
    4. '_equ' → logprob: -14.000166893005371
    5. '_e' → logprob: -14.125166893005371
    6. '_equals' → logprob: -14.875166893005371
    7. ' _' → logprob: -15.750166893005371
    8. '_EQUAL' → logprob: -15.750166893005371
    9. ''_' → logprob: -15.875166893005371
    10. '_eq' → logprob: -15.875166893005371

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017207576893270016
    2. '=' → logprob: -6.376720905303955
    3. ' ' → logprob: -11.126720428466797
    4. ' ='' → logprob: -12.876720428466797
    5. ' =
' → logprob: -14.626720428466797
    6. '<|end|>' → logprob: -14.751720428466797
    7. 'space' → logprob: -16.126720428466797
    8. '='' → logprob: -16.126720428466797
    9. '=True' → logprob: -17.126720428466797
    10. 's' → logprob: -17.126720428466797

Token 90: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02632851153612137
    2. ' '' → logprob: -3.6513285636901855
    3. '"' → logprob: -10.776328086853027
    4. ' ' → logprob: -12.276328086853027
    5. '`' → logprob: -13.901328086853027
    6. '   ' → logprob: -14.151328086853027
    7. '	' → logprob: -15.526328086853027
    8. ' "' → logprob: -15.651328086853027
    9. ' ' → logprob: -16.026329040527344
    10. '       ' → logprob: -16.151329040527344

Token 91: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.029857974499464035
    2. 'Ye' → logprob: -3.529857873916626
    3. 'Y' → logprob: -9.279857635498047
    4. 'Yo' → logprob: -12.154857635498047
    5. ''' → logprob: -12.654857635498047
    6. 'Ya' → logprob: -12.654857635498047
    7. ' Yes' → logprob: -14.029857635498047
    8. 'YES' → logprob: -14.904857635498047
    9. 'Yep' → logprob: -15.529857635498047
    10. 'ye' → logprob: -15.904857635498047

Token 92: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16332654654979706
    2. ''' → logprob: -1.9133265018463135
    3. ''
' → logprob: -6.163326740264893
    4. '<|end|>' → logprob: -8.038326263427734
    5. '```' → logprob: -8.288326263427734
    6. '
' → logprob: -8.788326263427734
    7. '           ' → logprob: -9.663326263427734
    8. '   ' → logprob: -10.038326263427734
    9. '"' → logprob: -10.413326263427734
    10. ''''' → logprob: -10.788326263427734

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005570848472416401
    2. '   ' → logprob: -5.255570888519287
    3. '<|end|>' → logprob: -8.630570411682129
    4. '    ' → logprob: -10.380570411682129
    5. '    
' → logprob: -10.380570411682129
    6. '           ' → logprob: -10.755570411682129
    7. '        ' → logprob: -11.255570411682129
    8. '        
' → logprob: -11.380570411682129
    9. '      ' → logprob: -11.380570411682129
    10. '	break' → logprob: -11.630570411682129

Token 94: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057159471325576305
    2. '   ' → logprob: -5.880715847015381
    3. '	break' → logprob: -6.130715847015381
    4. 'break' (adapté à ' break') → logprob: -7.755715847015381
    5. ' break' → logprob: -8.505716323852539
    6. '	' → logprob: -10.130716323852539
    7. '\t' → logprob: -10.255716323852539
    8. '```' → logprob: -11.755716323852539
    9. '      ' → logprob: -12.630716323852539
    10. '    ' → logprob: -13.005716323852539

Token 95: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2816300690174103
    2. '<|end|>' → logprob: -2.156630039215088
    3. '
' → logprob: -2.281630039215088
    4. '\n' → logprob: -4.031630039215088
    5. '```' → logprob: -5.156630039215088
    6. '#' → logprob: -6.531630039215088
    7. ' print' → logprob: -7.031630039215088
    8. '\' → logprob: -7.906630039215088
    9. ' 
' → logprob: -8.156630516052246
    10. '  
' → logprob: -8.406630516052246

Token 96: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07151283323764801
    2. '<|end|>' → logprob: -3.4465129375457764
    3. '
' → logprob: -4.321512699127197
    4. '#' → logprob: -4.321512699127197
    5. '\n' → logprob: -5.446512699127197
    6. '```' → logprob: -5.946512699127197
    7. ')' → logprob: -6.696512699127197
    8. 'p' → logprob: -7.571512699127197
    9. '\' → logprob: -7.696512699127197
    10. ' print' → logprob: -8.071513175964355

Token 97: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006778373382985592
    2. '('' → logprob: -5.006778240203857
    3. '("("' → logprob: -9.881778717041016
    4. '()' → logprob: -11.756778717041016
    5. '((' → logprob: -14.256778717041016
    6. '('(' → logprob: -14.381778717041016
    7. '(`' → logprob: -14.756778717041016
    8. '(
' → logprob: -14.881778717041016
    9. ''' → logprob: -15.006778717041016
    10. '(f' → logprob: -15.256778717041016

Token 98: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -8.895480277715251e-06
    2. ' are' → logprob: -11.750008583068848
    3. ')' → logprob: -15.000008583068848
    4. 'ares' → logprob: -15.125008583068848
    5. '_are' → logprob: -16.500009536743164
    6. '.are' → logprob: -16.750009536743164
    7. '   ' → logprob: -16.875009536743164
    8. '```' → logprob: -17.500009536743164
    9. 'ar' → logprob: -17.750009536743164
    10. 'areth' → logprob: -17.875009536743164

Token 99: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -0.00043698702938854694
    2. 'puts' → logprob: -9.375436782836914
    3. 'inputs' → logprob: -9.375436782836914
    4. '_input' → logprob: -9.500436782836914
    5. '_outputs' → logprob: -9.500436782836914
    6. '_' → logprob: -9.625436782836914
    7. 'put' → logprob: -10.250436782836914
    8. '_put' → logprob: -12.500436782836914
    9. 's' → logprob: -12.625436782836914
    10. '_
' → logprob: -13.125436782836914

Token 100: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07122258096933365
    2. '_)' → logprob: -3.4462225437164307
    3. '_equal' → logprob: -4.07122278213501
    4. '_' → logprob: -4.82122278213501
    5. '_char' → logprob: -5.07122278213501
    6. ')' → logprob: -5.44622278213501
    7. '_chars' → logprob: -7.07122278213501
    8. ')_' → logprob: -8.571222305297852
    9. '__)' → logprob: -10.071222305297852
    10. '_equals' → logprob: -11.321222305297852

Token 101: 'ircular' (ID: 27245)
  Prédit: 'qual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qual' → logprob: -0.32686594128608704
    2. 'ircular' → logprob: -1.8268659114837646
    3. 'har' → logprob: -2.2018659114837646
    4. 'cular' → logprob: -5.701866149902344
    5. 'qu' → logprob: -6.451866149902344
    6. 'ular' → logprob: -6.701866149902344
    7. 'ual' → logprob: -7.451866149902344
    8. 'h' → logprob: -8.826866149902344
    9. 'quality' → logprob: -9.201866149902344
    10. 'q' → logprob: -10.076866149902344

Token 102: 'ly' (ID: 423)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006143859936855733
    2. ')' → logprob: -7.875614166259766
    3. 'ly' → logprob: -8.750614166259766
    4. 'yl' → logprob: -11.000614166259766
    5. '_y' → logprob: -11.125614166259766
    6. '_' → logprob: -12.625614166259766
    7. 't' → logprob: -12.875614166259766
    8. ')y' → logprob: -12.875614166259766
    9. '```' → logprob: -13.000614166259766
    10. 'yst' → logprob: -13.000614166259766

Token 103: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.7062832117080688
    2. 'qual' → logprob: -0.8312832117080688
    3. 'equal' → logprob: -3.3312830924987793
    4. ')' → logprob: -4.081283092498779
    5. 'al' → logprob: -4.081283092498779
    6. 'quals' → logprob: -8.706283569335938
    7. 'ly' → logprob: -8.831283569335938
    8. '_' → logprob: -8.831283569335938
    9. '_al' → logprob: -9.331283569335938
    10. 'Equal' → logprob: -9.331283569335938

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.75
    3. '')' → logprob: -16.125
    4. '))' → logprob: -17.875
    5. ')`' → logprob: -17.875
    6. '`)' → logprob: -18.0
    7. ')
' → logprob: -18.375
    8. '")' → logprob: -18.75
    9. '）' → logprob: -19.625
    10. ')**' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 51.96%
Précision adaptée (1ère position): 54.90%
Précision (top 10): 81.37%
================================================================================
