================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s, w = map(int, input().split())

if s <= w:
    print('unsafe')
else:
    print('safe')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' w' (ID: 286)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09772635251283646
    2. '.' → logprob: -3.097726345062256
    3. ',' → logprob: -3.472726345062256
    4. ' =' → logprob: -4.222726345062256
    5. '[' → logprob: -6.597726345062256
    6. '+' → logprob: -7.847726345062256
    7. ')' → logprob: -9.347726821899414
    8. '.=' → logprob: -9.722726821899414
    9. '_' → logprob: -9.847726821899414
    10. ' ' → logprob: -9.972726821899414

Token 4: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0576226711273193
    2. ' ' → logprob: -2.0576226711273193
    3. ' input' → logprob: -2.0576226711273193
    4. ' s' → logprob: -2.1826226711273193
    5. '0' → logprob: -2.5576226711273193
    6. 's' → logprob: -2.6826226711273193
    7. 'map' → logprob: -3.0576226711273193
    8. ' map' → logprob: -3.9326226711273193
    9. ' []' → logprob: -4.557622909545898
    10. '1' → logprob: -4.932622909545898

Token 5: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.48115313053131104
    2. '(str' → logprob: -1.981153130531311
    3. '(' → logprob: -2.2311530113220215
    4. '(lambda' → logprob: -2.3561530113220215
    5. '[int' → logprob: -3.8561530113220215
    6. '<|end|>' → logprob: -4.8561530113220215
    7. '(s' → logprob: -6.1061530113220215
    8. '```' → logprob: -6.6061530113220215
    9. 'int' → logprob: -6.7311530113220215
    10. '<int' → logprob: -6.8561530113220215

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2604427933692932
    2. ')' → logprob: -1.7604427337646484
    3. '(' → logprob: -3.3854427337646484
    4. '(s' → logprob: -4.510442733764648
    5. '`)' → logprob: -5.635442733764648
    6. '```' → logprob: -6.135442733764648
    7. 'input' → logprob: -6.260442733764648
    8. '(user' → logprob: -7.010442733764648
    9. '`' → logprob: -7.135442733764648
    10. '(str' → logprob: -7.260442733764648

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02975917048752308
    2. ' input' → logprob: -3.529759168624878
    3. '(input' → logprob: -12.404759407043457
    4. 's' → logprob: -13.029759407043457
    5. ')' → logprob: -13.529759407043457
    6. ',input' → logprob: -15.279759407043457
    7. ' s' → logprob: -15.654759407043457
    8. '<input' → logprob: -15.779759407043457
    9. '=input' → logprob: -15.779759407043457
    10. 'str' → logprob: -16.27975845336914

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.46090537309646606
    2. '()' → logprob: -1.0859053134918213
    3. '`()' → logprob: -4.7109055519104
    4. '().' → logprob: -5.0859055519104
    5. ')' → logprob: -5.3359055519104
    6. '(' → logprob: -6.0859055519104
    7. '>>()' → logprob: -6.2109055519104
    8. '();)' → logprob: -7.0859055519104
    9. '()))' → logprob: -7.2109055519104
    10. '());' → logprob: -7.3359055519104

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004969134461134672
    2. 'strip' → logprob: -7.625496864318848
    3. ' split' → logprob: -12.500496864318848
    4. ')' → logprob: -12.875496864318848
    5. 'rstrip' → logprob: -13.375496864318848
    6. '(split' → logprob: -14.250496864318848
    7. 'read' → logprob: -15.250496864318848
    8. 'spl' → logprob: -16.750497817993164
    9. 'startswith' → logprob: -17.250497817993164
    10. '```' → logprob: -17.500497817993164

Token 10: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4081622064113617
    2. ')' → logprob: -1.158162236213684
    3. '))' → logprob: -4.6581621170043945
    4. '()' → logprob: -4.6581621170043945
    5. '()))' → logprob: -6.5331621170043945
    6. '(' → logprob: -8.033162117004395
    7. '`)' → logprob: -8.533162117004395
    8. '('' → logprob: -10.283162117004395
    9. ' ())' → logprob: -11.033162117004395
    10. '')' → logprob: -11.158162117004395

Token 11: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5928914546966553
    2. 'for' → logprob: -1.0928914546966553
    3. '#' → logprob: -3.4678914546966553
    4. 'i' → logprob: -3.7178914546966553
    5. 'n' → logprob: -3.8428914546966553
    6. 'x' → logprob: -4.592891693115234
    7. '`' → logprob: -5.217891693115234
    8. 'd' → logprob: -5.467891693115234
    9. 'a' → logprob: -5.842891693115234
    10. ':' → logprob: -6.467891693115234

Token 12: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.013164236210286617
    2. 's' → logprob: -4.513164043426514
    3. ' ' → logprob: -6.638164043426514
    4. ' w' → logprob: -7.263164043426514
    5. ' not' → logprob: -10.138164520263672
    6. ' ' → logprob: -10.388164520263672
    7. 'w' → logprob: -11.388164520263672
    8. '(s' → logprob: -12.388164520263672
    9. ' (' → logprob: -12.513164520263672
    10. ' a' → logprob: -12.638164520263672

Token 13: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08975979685783386
    2. '>' → logprob: -3.2147598266601562
    3. ' >=' → logprob: -3.9647598266601562
    4. ' ==' → logprob: -4.339759826660156
    5. ' <' → logprob: -5.089759826660156
    6. ' <=' → logprob: -5.964759826660156
    7. '==' → logprob: -6.339759826660156
    8. ' ' → logprob: -6.839759826660156
    9. '<' → logprob: -7.214759826660156
    10. '>=' → logprob: -7.339759826660156

Token 14: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08152119070291519
    2. ' w' → logprob: -2.7065212726593018
    3. '0' → logprob: -5.456521034240723
    4. ' ' → logprob: -6.206521034240723
    5. '10' → logprob: -6.706521034240723
    6. '100' → logprob: -7.331521034240723
    7. '50' → logprob: -7.706521034240723
    8. '20' → logprob: -7.706521034240723
    9. '5' → logprob: -8.081521034240723
    10. '48' → logprob: -8.956521034240723

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013846253568772227
    2. '+:' → logprob: -10.000138282775879
    3. ' :' → logprob: -10.250138282775879
    4. '':' → logprob: -10.625138282775879
    5. ':**' → logprob: -11.500138282775879
    6. '>:' → logprob: -12.250138282775879
    7. '+' → logprob: -12.375138282775879
    8. '':'' → logprob: -12.875138282775879
    9. '>' → logprob: -12.875138282775879
    10. '):' → logprob: -13.125138282775879

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15443675220012665
    2. 'print' → logprob: -2.0294368267059326
    3. ' print' → logprob: -5.6544365882873535
    4. ' :' → logprob: -5.9044365882873535
    5. ':
' → logprob: -6.0294365882873535
    6. '   ' → logprob: -6.9044365882873535
    7. '"' → logprob: -8.154437065124512
    8. '.' → logprob: -8.529437065124512
    9. ''' → logprob: -8.529437065124512
    10. ':
' → logprob: -8.654437065124512

Token 17: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.012546735815703869
    2. ' print' → logprob: -4.387546539306641
    3. '   ' → logprob: -11.51254653930664
    4. 'pr' → logprob: -12.26254653930664
    5. '```' → logprob: -12.26254653930664
    6. 'pass' → logprob: -12.76254653930664
    7. 's' → logprob: -13.01254653930664
    8. ' ' → logprob: -13.26254653930664
    9. 'p' → logprob: -13.51254653930664
    10. '`' → logprob: -13.76254653930664

Token 18: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04178974777460098
    2. '("' → logprob: -3.4167897701263428
    3. '("("' → logprob: -5.291789531707764
    4. '('' → logprob: -6.541789531707764
    5. '(s' → logprob: -6.916789531707764
    6. '"' → logprob: -8.291790008544922
    7. '(True' → logprob: -9.166790008544922
    8. '("")' → logprob: -9.791790008544922
    9. '()' → logprob: -10.041790008544922
    10. '(False' → logprob: -10.416790008544922

Token 19: 'unsafe' (ID: 66907)
  Prédit: 'unsafe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unsafe' → logprob: -0.06291816383600235
    2. 'safe' → logprob: -3.062918186187744
    3. 'Unsafe' → logprob: -5.562918186187744
    4. ' unsafe' → logprob: -5.812918186187744
    5. 'Yes' → logprob: -5.812918186187744
    6. ''' → logprob: -6.562918186187744
    7. 'danger' → logprob: -6.937918186187744
    8. 'yes' → logprob: -7.312918186187744
    9. 'Safe' → logprob: -8.437917709350586
    10. 'No' → logprob: -8.812917709350586

Token 20: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0002668192028068006
    2. ')' → logprob: -8.250267028808594
    3. ''' → logprob: -12.750267028808594
    4. '')
' → logprob: -13.250267028808594
    5. '")' → logprob: -14.125267028808594
    6. '')
' → logprob: -15.625267028808594
    7. '')

' → logprob: -17.000267028808594
    8. ' ')' → logprob: -18.000267028808594
    9. '('' → logprob: -18.125267028808594
    10. '');' → logprob: -18.125267028808594

Token 21: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.023150794208049774
    2. ' else' → logprob: -4.02315092086792
    3. '<|end|>' → logprob: -5.52315092086792
    4. '```' → logprob: -7.64815092086792
    5. ')' → logprob: -8.023150444030762
    6. 'elif' → logprob: -9.898150444030762
    7. '#else' → logprob: -10.148150444030762
    8. '<|end|>' → logprob: -10.648150444030762
    9. '\n' → logprob: -11.023150444030762
    10. '
' → logprob: -11.148150444030762

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9623810658231378e-05
    2. ':
' → logprob: -10.875020027160645
    3. ' :' → logprob: -15.375020027160645
    4. '   ' → logprob: -15.875020027160645
    5. '):' → logprob: -16.375019073486328
    6. ':return' → logprob: -17.125019073486328
    7. ':**' → logprob: -17.250019073486328
    8. '```' → logprob: -17.500019073486328
    9. ',' → logprob: -17.625019073486328
    10. ':

' → logprob: -18.250019073486328

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01328328624367714
    2. 'print' → logprob: -4.7632832527160645
    3. ' print' → logprob: -5.3882832527160645
    4. '    ' → logprob: -9.763283729553223
    5. '```' → logprob: -10.763283729553223
    6. '	print' → logprob: -13.138283729553223
    7. '``' → logprob: -13.638283729553223
    8. '   ' → logprob: -13.638283729553223
    9. ''' → logprob: -13.763283729553223
    10. '\n' → logprob: -14.138283729553223

Token 24: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008643882349133492
    2. ' print' → logprob: -4.758644104003906
    3. '   ' → logprob: -10.508644104003906
    4. '	print' → logprob: -14.508644104003906
    5. '```' → logprob: -15.383644104003906
    6. ' safe' → logprob: -15.633644104003906
    7. '.print' → logprob: -15.633644104003906
    8. ''' → logprob: -15.633644104003906
    9. '    ' → logprob: -15.758644104003906
    10. ' ' → logprob: -15.883644104003906

Token 25: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06197608634829521
    2. '(' → logprob: -2.811976194381714
    3. '("' → logprob: -12.561976432800293
    4. '()' → logprob: -12.936976432800293
    5. ''' → logprob: -14.311976432800293
    6. '(('' → logprob: -14.436976432800293
    7. '('(' → logprob: -14.561976432800293
    8. '(
' → logprob: -15.311976432800293
    9. '(True' → logprob: -15.811976432800293
    10. ''s' → logprob: -16.561975479125977

Token 26: 'safe' (ID: 46891)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.31462177634239197
    2. 'safe' → logprob: -1.3146218061447144
    3. ''' → logprob: -6.814621925354004
    4. ' safe' → logprob: -8.314621925354004
    5. '   ' → logprob: -11.564621925354004
    6. '`' → logprob: -13.939621925354004
    7. ''us' → logprob: -13.939621925354004
    8. 'unsafe' → logprob: -14.064621925354004
    9. 's' → logprob: -14.189621925354004
    10. 'Safe' → logprob: -14.439621925354004

Token 27: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00015908108616713434
    2. ')' → logprob: -8.75015926361084
    3. '')
' → logprob: -15.37515926361084
    4. ''' → logprob: -15.37515926361084
    5. '")' → logprob: -15.87515926361084
    6. '('' → logprob: -18.500158309936523
    7. '')

' → logprob: -18.500158309936523
    8. '')
' → logprob: -19.375158309936523
    9. '`)' → logprob: -19.500158309936523
    10. ' ')' → logprob: -19.625158309936523


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 25
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 22
Précision stricte (1ère position): 36.00%
Précision adaptée (1ère position): 44.00%
Précision (top 10): 88.00%
================================================================================
