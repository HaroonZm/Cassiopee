================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation de modules standards et utilitaires externes
# Ces modules fournissent des structures de données et fonctions utiles pour divers besoins.

from collections import defaultdict, deque, Counter # defaultdict, deque (file double extrémité), Counter pour compter
from heapq import heappush, heappop, heapify       # file de priorité/min-heap : ajout, extraction, transformation liste/propriété heap
import math                                        # bibliothèque mathématique, racines, puissances, etc.
import bisect                                      # insertion, recherche binaire sur listes triées
import random                                      # générateur aléatoire divers
from itertools import permutations, accumulate, combinations, product # outils itératifs : permutations, cumuls, combinaisons, produit cartésien
import sys                                         # accès stdin, stdout, et autres fonctionnalités système
import string                                      # constantes chaînes de caractères, etc.
from bisect import bisect_left, bisect_right       # fonctions bisect spécialisées (recherche position d'insertion à gauche/droite)
from math import factorial, ceil, floor            # factorielle, plafond, plancher d'un flottant
from operator import mul                           # opérateur multiplication
from functools import reduce                       # appliquer une fonction cumulativement à une séquence

# Définir la limite maximale de récursion à un très grand nombre pour éviter les erreurs de récursion profonde
sys.setrecursionlimit(2147483647)

# Déclaration d'une très grande constante pour représenter l'infini (valeur plus grande que toutes les valeurs de données typiques)
INF = 10 ** 13

# Définitions de fonctions utilitaires pour lire l'entrée rapidement et de différentes manières

# LI : Lit une ligne d'entrée standard, la découpe en parties séparées par espace, convertit chaque partie en entier et renvoie une liste d'entiers
def LI(): return list(map(int, sys.stdin.readline().split()))

# I : Lit une ligne entière, la convertit en entier et la renvoie
def I(): return int(sys.stdin.readline())

# LS : Lit une ligne (buffer) jusqu'à la nouvelle ligne, enlève le saut de ligne et la décode (utf-8), puis la découpe sur les espaces
def LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()

# S : Lit une ligne (buffer) et la renvoie comme chaîne (sans découpage)
def S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')

# IR(n) : Lit n lignes de l'entrée standard, chaque ligne convertie en entier, retourne la liste résultante
def IR(n): return [I() for i in range(n)]

# LIR(n) : Lit n lignes de l'entrée standard, chaque ligne découpée en entiers (liste d'entiers pour chaque ligne)
def LIR(n): return [LI() for i in range(n)]

# SR(n) : Lit n lignes (buffer) en chaînes décodées, chacune renvoyée sans découpage/retraitement
def SR(n): return [S() for i in range(n)]

# LSR(n) : Pour n lignes, lit chaque ligne, la décode et la découpe sur les espaces, retourne une liste de listes de chaînes
def LSR(n): return [LS() for i in range(n)]

# SRL(n) : Pour n lignes, lit chaque ligne et retourne une liste de caractères (chaîne vers liste de caractères)
def SRL(n): return [list(S()) for i in range(n)]

# MSRL(n) : Pour n lignes, lit chaque ligne, convertit chaque caractère de la ligne en entier et retourne la liste de résultats
def MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]

# mod : une grande constante première pour effectuer des opérations modulo (très utilisée dans les problèmes de combinatoire/modularité)
mod = 10 ** 9 + 7

# Lecture du nombre d'éléments à traiter depuis l'entrée (en général, cela correspondra à la taille d'une séquence ou d'une structure de données)
n = I()

# Lecture d'une liste d'entiers H venant de l'entrée. Puis on ajoute 1 à la fin de cette liste pour fonctionner sur n+1 éléments (probablement une sentinelle)
H = LI() + [1]

# Initialisation du tableau dp (programmation dynamique)
# dp : liste de n+1 éléments, chacun initialisé à 1.
# Ce tableau stocke à chaque indice l'état courant des sous-résultats dynamiques pour l'itération actuelle.
dp = [1] * (n + 1)

# Boucle principale de traitement dynamique - pour chaque position k de 0 à n-1 incluse
for k in range(n):
    # Création d'un nouveau tableau new_dp de longueur n+1, initialement rempli de zéros
    # Il servira à calculer les nouveaux états dp basés sur les états précédents.
    new_dp = [0] * (n + 1)
    # On parcourt chaque indice i de 0 à n inclus (soit n+1 au total)
    for i in range(n + 1):
        # PREMIER CAS: si la valeur H[i] est strictement supérieure à H[k]
        if H[i] > H[k]:
            # On multiplie l'état courant dp[k] par 2 et affecte le résultat à new_dp[i]
            # Cela correspond à un doublement du nombre de façons/scénarios compatibles à cet état.
            new_dp[i] = dp[k] * 2
        # DEUXIEME CAS: sinon, si la valeur précédente H[k-1] (à gauche) est inférieure ou égale à H[i]
        elif H[k - 1] <= H[i]:
            # On multiplie l'état courant dp[i] par 2, puis par 2 à la puissance (H[k] - H[i]),
            # le tout modulo la constante mod (pour éviter les débordements)
            new_dp[i] = dp[i] * 2 * pow(2, H[k] - H[i], mod)
        # TROISIEME CAS: sinon, si la valeur précédente H[k-1] est strictement supérieure à la valeur courante H[k]
        elif H[k - 1] > H[k]:
            # On soustrait dp[k] de dp[i], puis on ajoute dp[k] * 2, pour combiner/mélanger différentes transitions possibles
            new_dp[i] = dp[i] - dp[k] + dp[k] * 2
        # QUATRIEME CAS: tous les autres cas (le else attrape tout ce qui n'est pas couvert ci-dessus)
        else:
            # On soustrait dp[k-1] de dp[i], puis on ajoute dp[k-1] * 2. Le tout est multiplié par 2^(H[k] - H[k-1]) modulo mod.
            new_dp[i] = (dp[i] - dp[k - 1] + dp[k - 1] * 2) * pow(2, H[k] - H[k - 1], mod)
        # A chaque itération, on applique le modulo (reste de la division euclidienne) sur la valeur new_dp[i].
        # Cela est crucial pour éviter les dépassements d'entiers et respecter les contraintes du problème.
        new_dp[i] %= mod
    # Après avoir rempli new_dp pour tous les i, on le recopie dans dp pour la prochaine itération k.
    dp = new_dp

# Finalement, on affiche la dernière valeur du tableau dp (dp[-1]), c'est-à-dire la dernière cellule calculée.
# Cela représente typiquement le résultat final combinant toutes les possibilités/scénarios du problème traité.
print(dp[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07061714679002762
    2. 'import' → logprob: -3.695617198944092
    3. '```' → logprob: -3.820617198944092
    4. '_' → logprob: -4.195617198944092
    5. '`' → logprob: -6.570617198944092
    6. ' ' → logprob: -6.695617198944092
    7. '.' → logprob: -6.820617198944092
    8. '#' → logprob: -7.695617198944092
    9. ',' → logprob: -7.820617198944092
    10. '=' → logprob: -8.195616722106934

Token 4: ' modules' (ID: 23893)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.4329105615615845
    2. ' ' → logprob: -1.3079105615615845
    3. ' os' → logprob: -3.432910442352295
    4. ' numpy' → logprob: -3.807910442352295
    5. ' la' → logprob: -4.807910442352295
    6. ' des' → logprob: -5.182910442352295
    7. ' tensorflow' → logprob: -6.307910442352295
    8. ' flask' → logprob: -6.432910442352295
    9. ' ' → logprob: -6.557910442352295
    10. ' math' → logprob: -6.932910442352295

Token 5: ' standards' (ID: 13853)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14563250541687012
    2. '```' → logprob: -2.02063250541687
    3. '\n' → logprob: -7.020632743835449
    4. '#' → logprob: -7.520632743835449
    5. '``' → logprob: -7.645632743835449
    6. '\' → logprob: -7.770632743835449
    7. ' import' → logprob: -8.52063274383545
    8. '`' → logprob: -8.89563274383545
    9. ':' → logprob: -8.89563274383545
    10. ''import' → logprob: -9.89563274383545

Token 6: ' et' (ID: 859)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011623956263065338
    2. '```' → logprob: -4.511623859405518
    3. '\n' → logprob: -8.011624336242676
    4. '``' → logprob: -9.386624336242676
    5. '\' → logprob: -10.011624336242676
    6. '#' → logprob: -10.011624336242676
    7. ' import' → logprob: -10.136624336242676
    8. ''import' → logprob: -11.636624336242676
    9. '`' → logprob: -13.011624336242676
    10. ':' → logprob: -13.136624336242676

Token 7: ' util' (ID: 3667)
  Prédit: 'extern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extern' → logprob: -1.0814316272735596
    2. 'third' → logprob: -1.8314316272735596
    3. ' extern' → logprob: -2.4564316272735596
    4. ' third' → logprob: -2.5814316272735596
    5. '```' → logprob: -2.5814316272735596
    6. '#' → logprob: -3.0814316272735596
    7. 'bibli' → logprob: -3.0814316272735596
    8. 'de' → logprob: -3.7064316272735596
    9. 'fonction' → logprob: -3.7064316272735596
    10. 'd' → logprob: -3.8314316272735596

Token 8: 'itaires' (ID: 106145)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16242869198322296
    2. 't' → logprob: -1.9124287366867065
    3. '```' → logprob: -6.412428855895996
    4. 'itaires' → logprob: -8.537428855895996
    5. '#' → logprob: -9.412428855895996
    6. 'taire' → logprob: -9.537428855895996
    7. '\s' → logprob: -9.537428855895996
    8. 'ts' → logprob: -10.287428855895996
    9. 'tis' → logprob: -11.162428855895996
    10. 'st' → logprob: -11.412428855895996

Token 9: ' extern' (ID: 22167)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.009953700006008148
    2. '```' → logprob: -4.634953498840332
    3. ' import' → logprob: -9.634953498840332
    4. '``' → logprob: -9.759953498840332
    5. '\n' → logprob: -10.509953498840332
    6. '\' → logprob: -10.759953498840332
    7. '#' → logprob: -11.509953498840332
    8. ''import' → logprob: -12.384953498840332
    9. '
' → logprob: -12.509953498840332
    10. '-import' → logprob: -13.509953498840332

Token 10: 'es' (ID: 268)
  Prédit: 'aires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.09155374020338058
    2. 's' → logprob: -2.9665536880493164
    3. 'aire' → logprob: -3.9665536880493164
    4. '```' → logprob: -4.716553688049316
    5. 'a' → logprob: -6.091553688049316
    6. 'es' → logprob: -6.341553688049316
    7. '#' → logprob: -6.966553688049316
    8. 'import' → logprob: -7.466553688049316
    9. 'ares' → logprob: -7.466553688049316
    10. '.' → logprob: -7.966553688049316

Token 11: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.021825727075338364
    2. '```' → logprob: -3.8968257904052734
    3. '\n' → logprob: -7.396825790405273
    4. '\' → logprob: -7.521825790405273
    5. '``' → logprob: -9.521825790405273
    6. '#' → logprob: -11.021825790405273
    7. ' import' → logprob: -11.396825790405273
    8. ''import' → logprob: -11.771825790405273
    9. '`' → logprob: -12.646825790405273
    10. '' → logprob: -13.396825790405273

Token 12: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.006664573680609465
    2. '```' → logprob: -5.256664752960205
    3. '\n' → logprob: -6.756664752960205
    4. '\' → logprob: -9.256664276123047
    5. '#' → logprob: -9.631664276123047
    6. '``' → logprob: -9.881664276123047
    7. '
' → logprob: -11.006664276123047
    8. ' import' → logprob: -12.006664276123047
    9. 'from' → logprob: -12.131664276123047
    10. ''import' → logprob: -12.256664276123047

Token 13: ' Ces' (ID: 35720)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03670983016490936
    2. '#' → logprob: -4.036709785461426
    3. ' import' → logprob: -5.286709785461426
    4. '```' → logprob: -5.286709785461426
    5. '\n' → logprob: -6.036709785461426
    6. ' ' → logprob: -6.036709785461426
    7. '\' → logprob: -6.536709785461426
    8. 'from' → logprob: -7.536709785461426
    9. 'im' → logprob: -7.911709785461426
    10. ' #' → logprob: -8.036709785461426

Token 14: ' modules' (ID: 23893)
  Prédit: ' modules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modules' → logprob: -0.589846670627594
    2. ' derniers' → logprob: -1.5898466110229492
    3. ' ' → logprob: -1.9648466110229492
    4. '#' → logprob: -3.589846611022949
    5. ' #' → logprob: -3.589846611022949
    6. ' ' → logprob: -4.714846611022949
    7. ' commentaires' → logprob: -4.714846611022949
    8. ' sont' → logprob: -4.964846611022949
    9. 's' → logprob: -5.839846611022949
    10. ' espaces' → logprob: -5.839846611022949

Token 15: ' fourn' (ID: 101975)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39503365755081177
    2. ' sont' → logprob: -1.270033597946167
    3. ' Python' → logprob: -4.770033836364746
    4. ' import' → logprob: -5.145033836364746
    5. ' standard' → logprob: -5.395033836364746
    6. ' permettent' → logprob: -5.520033836364746
    7. ' ' → logprob: -5.520033836364746
    8. ' python' → logprob: -5.770033836364746
    9. 's' → logprob: -6.270033836364746
    10. ' seront' → logprob: -6.270033836364746

Token 16: 'issent' (ID: 31556)
  Prédit: 'issent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issent' → logprob: -0.02070082537829876
    2. 'iss' → logprob: -4.645700931549072
    3. '#' → logprob: -5.395700931549072
    4. ' iss' → logprob: -6.395700931549072
    5. '```' → logprob: -7.145700931549072
    6. '\' → logprob: -7.270700931549072
    7. '   ' → logprob: -8.020700454711914
    8. '##' → logprob: -8.395700454711914
    9. '**' → logprob: -8.395700454711914
    10. '-' → logprob: -8.645700454711914

Token 17: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.058006301522254944
    2. ' les' → logprob: -3.4330062866210938
    3. 'des' → logprob: -4.808006286621094
    4. ' ' → logprob: -5.308006286621094
    5. ' une' → logprob: -6.183006286621094
    6. 's' → logprob: -6.183006286621094
    7. ' l' → logprob: -6.308006286621094
    8. ' un' → logprob: -6.808006286621094
    9. ' diverses' → logprob: -6.933006286621094
    10. 'les' → logprob: -7.558006286621094

Token 18: ' structures' (ID: 21207)
  Prédit: 'fon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fon' → logprob: -0.5324788689613342
    2. ' fonctionnalités' → logprob: -1.2824788093566895
    3. 'fonction' → logprob: -2.4074788093566895
    4. ' fonctions' → logprob: -3.2824788093566895
    5. ' outils' → logprob: -6.0324788093566895
    6. ' functionalities' → logprob: -6.7824788093566895
    7. 'out' → logprob: -6.9074788093566895
    8. ' fonctionnal' → logprob: -7.1574788093566895
    9. ' fonction' → logprob: -7.4074788093566895
    10. 'f' → logprob: -8.657479286193848

Token 19: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.021320905536413193
    2. 'de' → logprob: -4.521320819854736
    3. ',' → logprob: -5.646320819854736
    4. ' data' → logprob: -6.146320819854736
    5. ' et' → logprob: -6.521320819854736
    6. 'd' → logprob: -6.896320819854736
    7. ' d' → logprob: -7.396320819854736
    8. ' ' → logprob: -7.771320819854736
    9. 'data' → logprob: -8.146321296691895
    10. 'et' → logprob: -8.771321296691895

Token 20: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4345134198665619
    2. ' données' → logprob: -1.0595134496688843
    3. 'don' → logprob: -5.434513568878174
    4. 'base' → logprob: -7.809513568878174
    5. ' base' → logprob: -8.684513092041016
    6. ' donn' → logprob: -8.934513092041016
    7. '```' → logprob: -8.934513092041016
    8. 'bases' → logprob: -9.309513092041016
    9. ' donnée' → logprob: -9.684513092041016
    10. 'data' → logprob: -9.809513092041016

Token 21: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2293323129415512
    2. ' et' → logprob: -1.9793323278427124
    3. 'import' → logprob: -3.354332208633423
    4. ' ,' → logprob: -4.604332447052002
    5. 'et' → logprob: -5.229332447052002
    6. ' standard' → logprob: -5.854332447052002
    7. ' utiles' → logprob: -5.854332447052002
    8. ' avanc' → logprob: -6.229332447052002
    9. ' ' → logprob: -6.604332447052002
    10. ' de' → logprob: -7.229332447052002

Token 22: ' fonctions' (ID: 87283)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.037114012986421585
    2. 'des' → logprob: -3.537113904953003
    3. ' fonctions' → logprob: -5.537114143371582
    4. ' d' → logprob: -6.912114143371582
    5. 'd' → logprob: -7.412114143371582
    6. '#' → logprob: -7.662114143371582
    7. 'alg' → logprob: -8.412114143371582
    8. '```' → logprob: -8.662114143371582
    9. ' fonctionnalités' → logprob: -8.787114143371582
    10. 'fonction' → logprob: -9.037114143371582

Token 23: ' utiles' (ID: 121161)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2086987942457199
    2. ' import' → logprob: -2.9586987495422363
    3. ' utiles' → logprob: -3.3336987495422363
    4. ' standard' → logprob: -3.4586987495422363
    5. ',' → logprob: -3.8336987495422363
    6. ' Python' → logprob: -4.833698749542236
    7. '```' → logprob: -4.958698749542236
    8. ' complémentaires' → logprob: -5.458698749542236
    9. ' ,' → logprob: -5.583698749542236
    10. ' ' → logprob: -5.708698749542236

Token 24: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0193463284522295
    2. '```' → logprob: -4.019346237182617
    3. '
' → logprob: -7.894346237182617
    4. '\' → logprob: -8.394346237182617
    5. 'from' → logprob: -8.769346237182617
    6. '\n' → logprob: -9.144346237182617
    7. ' import' → logprob: -9.519346237182617
    8. '``' → logprob: -9.519346237182617
    9. '

' → logprob: -9.769346237182617
    10. ',' → logprob: -10.644346237182617

Token 25: ' divers' (ID: 10474)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1240171194076538
    2. 'le' → logprob: -2.2490172386169434
    3. ' l' → logprob: -2.2490172386169434
    4. ' manip' → logprob: -2.2490172386169434
    5. ' gérer' → logprob: -2.2490172386169434
    6. ' le' → logprob: -2.4990172386169434
    7. 'la' → logprob: -2.7490172386169434
    8. 'l' → logprob: -3.1240172386169434
    9. ' faciliter' → logprob: -3.8740172386169434
    10. ' les' → logprob: -4.249017238616943

Token 26: ' besoins' (ID: 46126)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8117976188659668
    2. ' usages' → logprob: -1.5617976188659668
    3. ' types' → logprob: -2.436797618865967
    4. 'import' → logprob: -2.811797618865967
    5. ' cas' → logprob: -3.061797618865967
    6. ' besoins' → logprob: -3.186797618865967
    7. ' domaines' → logprob: -3.311797618865967
    8. ' traitements' → logprob: -4.311797618865967
    9. 'types' → logprob: -4.436797618865967
    10. ' import' → logprob: -4.686797618865967

Token 27: '.

' (ID: 364)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.006650122348219156
    2. '```' → logprob: -5.381649971008301
    3. '
' → logprob: -6.506649971008301
    4. 'from' → logprob: -8.3816499710083
    5. '

' → logprob: -8.6316499710083
    6. '\' → logprob: -10.5066499710083
    7. '\n' → logprob: -10.5066499710083
    8. '``' → logprob: -10.7566499710083
    9. ' import' → logprob: -11.3816499710083
    10. '
' → logprob: -11.5066499710083

Token 28: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0038300100713968277
    2. 'from' → logprob: -5.8788299560546875
    3. '```' → logprob: -7.2538299560546875
    4. 'im' → logprob: -8.503829956054688
    5. '
' → logprob: -9.378829956054688
    6. '#' → logprob: -12.253829956054688
    7. '``' → logprob: -12.253829956054688
    8. ' import' → logprob: -12.503829956054688
    9. '

' → logprob: -12.503829956054688
    10. '\' → logprob: -12.503829956054688

Token 29: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.02163255214691162
    2. ' ' → logprob: -3.896632671356201
    3. ' datetime' → logprob: -7.646632671356201
    4. 'collections' → logprob: -8.021632194519043
    5. ' os' → logprob: -9.271632194519043
    6. ' space' → logprob: -9.646632194519043
    7. ' itertools' → logprob: -10.896632194519043
    8. ' ' → logprob: -11.021632194519043
    9. ' math' → logprob: -11.146632194519043
    10. ' typing' → logprob: -11.146632194519043

Token 30: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08911459892988205
    2. 'import' → logprob: -2.4641146659851074
    3. ' ' → logprob: -8.71411418914795
    4. '.' → logprob: -13.58911418914795
    5. '```' → logprob: -13.58911418914795
    6. ' ```' → logprob: -13.71411418914795
    7. '	import' → logprob: -13.83911418914795
    8. 'm' → logprob: -14.21411418914795
    9. '_import' → logprob: -14.33911418914795
    10. ' importe' → logprob: -14.71411418914795

Token 31: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.06290069967508316
    2. ' deque' → logprob: -3.3129007816314697
    3. ' named' → logprob: -3.9379007816314697
    4. ' abc' → logprob: -5.687900543212891
    5. ' Counter' → logprob: -6.562900543212891
    6. ' Ordered' → logprob: -9.06290054321289
    7. ' ' → logprob: -9.31290054321289
    8. 'deque' → logprob: -10.93790054321289
    9. 'named' → logprob: -11.06290054321289
    10. ' default' → logprob: -11.43790054321289

Token 32: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3683823347091675
    2. 'import' → logprob: -2.493382453918457
    3. '<|end|>' → logprob: -2.493382453918457
    4. ',' → logprob: -2.868382453918457
    5. ' ' → logprob: -3.618382453918457
    6. '' → logprob: -4.118382453918457
    7. '

' → logprob: -4.118382453918457
    8. '\n' → logprob: -4.993382453918457
    9. ' 
' → logprob: -5.368382453918457
    10. '<|end|>' → logprob: -5.993382453918457

Token 33: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5512582659721375
    2. ' Counter' → logprob: -1.6762583255767822
    3. ' named' → logprob: -2.6762583255767822
    4. 'deque' → logprob: -2.8012583255767822
    5. ' Ordered' → logprob: -3.0512583255767822
    6. 'Counter' → logprob: -3.3012583255767822
    7. 'named' → logprob: -4.301258087158203
    8. 'Ordered' → logprob: -4.676258087158203
    9. ' ' → logprob: -10.051258087158203
    10. 'Named' → logprob: -11.051258087158203

Token 34: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02608324959874153
    2. ',' → logprob: -4.526083469390869
    3. '
' → logprob: -5.526083469390869
    4. '

' → logprob: -6.026083469390869
    5. '<|end|>' → logprob: -6.026083469390869
    6. '' → logprob: -6.151083469390869
    7. ' 
' → logprob: -6.651083469390869
    8. 'import' → logprob: -6.901083469390869
    9. '\n' → logprob: -7.901083469390869
    10. '  
' → logprob: -8.151082992553711

Token 35: ' Counter' (ID: 32251)
  Prédit: ' named'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' named' → logprob: -0.5429174900054932
    2. ' Counter' → logprob: -1.7929174900054932
    3. 'named' → logprob: -2.042917490005493
    4. 'Counter' → logprob: -2.667917490005493
    5. ' Ordered' → logprob: -3.542917490005493
    6. 'Ordered' → logprob: -3.792917490005493
    7. ' itertools' → logprob: -7.417917251586914
    8. 'Chain' → logprob: -8.167917251586914
    9. ' Chain' → logprob: -8.167917251586914
    10. ' defaultdict' → logprob: -8.417917251586914

Token 36: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22433285415172577
    2. '<|end|>' → logprob: -1.8493328094482422
    3. ',' → logprob: -3.849332809448242
    4. 'import' → logprob: -5.099332809448242
    5. '' → logprob: -5.599332809448242
    6. '

' → logprob: -5.849332809448242
    7. '\n' → logprob: -6.224332809448242
    8. '
' → logprob: -6.224332809448242
    9. ' 
' → logprob: -6.474332809448242
    10. '<|end|>' → logprob: -6.849332809448242

Token 37: ' defaultdict' (ID: 107098)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0263179540634155
    2. ' ,' → logprob: -1.6513179540634155
    3. '<|end|>' → logprob: -1.7763179540634155
    4. ' collections' → logprob: -2.151318073272705
    5. ',' → logprob: -2.526318073272705
    6. ' itertools' → logprob: -4.026318073272705
    7. 'collections' → logprob: -4.151318073272705
    8. ' Collections' → logprob: -4.651318073272705
    9. ' import' → logprob: -5.026318073272705
    10. '<|end|>' → logprob: -5.026318073272705

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0774141326546669
    2. ' ,' → logprob: -3.577414035797119
    3. '<|end|>' → logprob: -3.702414035797119
    4. '
' → logprob: -4.452414035797119
    5. ' ' → logprob: -5.327414035797119
    6. '

' → logprob: -6.577414035797119
    7. '<|end|>' → logprob: -6.952414035797119
    8. 'import' → logprob: -7.702414035797119
    9. '' → logprob: -7.952414035797119
    10. ' 

' → logprob: -8.077414512634277

Token 39: ' deque' (ID: 90347)
  Prédit: ' Ordered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ordered' → logprob: -0.06635864824056625
    2. ' named' → logprob: -3.5663585662841797
    3. 'Ordered' → logprob: -3.5663585662841797
    4. 'named' → logprob: -6.56635856628418
    5. ' ordered' → logprob: -6.69135856628418
    6. ' ' → logprob: -6.69135856628418
    7. ' deque' → logprob: -6.69135856628418
    8. ' Counter' → logprob: -7.06635856628418
    9. ' Chain' → logprob: -7.31635856628418
    10. ' defaultdict' → logprob: -7.31635856628418

Token 40: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06955965608358383
    2. '<|end|>' → logprob: -2.8195595741271973
    3. ' ,' → logprob: -5.069559574127197
    4. '<|end|>' → logprob: -7.319559574127197
    5. ' ' → logprob: -8.944560050964355
    6. 'import' → logprob: -9.194560050964355
    7. ' and' → logprob: -9.319560050964355
    8. 'from' → logprob: -9.694560050964355
    9. '#' → logprob: -9.819560050964355
    10. ')' → logprob: -10.569560050964355

Token 41: 'file' (ID: 2318)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.021411418914795
    2. '),' → logprob: -1.396411418914795
    3. ' et' → logprob: -2.396411418914795
    4. ',' → logprob: -2.896411418914795
    5. ' pour' → logprob: -3.146411418914795
    6. 'et' → logprob: -3.396411418914795
    7. ' for' → logprob: -3.896411418914795
    8. ' queues' → logprob: -4.021411418914795
    9. 'pour' → logprob: -4.021411418914795
    10. ' ),' → logprob: -4.146411418914795

Token 42: ' double' (ID: 3503)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016964437440037727
    2. 'd' → logprob: -4.891964435577393
    3. ' d' → logprob: -5.016964435577393
    4. ',' → logprob: -6.516964435577393
    5. ')' → logprob: -7.641964435577393
    6. '),' → logprob: -8.39196491241455
    7. '-' → logprob: -8.76696491241455
    8. ' s' → logprob: -9.76696491241455
    9. 't' → logprob: -10.39196491241455
    10. '-like' → logprob: -10.39196491241455

Token 43: ' extr' (ID: 15674)
  Prédit: '-ended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-ended' → logprob: -0.004547134507447481
    2. '-' → logprob: -5.879547119140625
    3. ' ended' → logprob: -7.504547119140625
    4. '-file' → logprob: -8.254547119140625
    5. 'ended' → logprob: -8.629547119140625
    6. 't' → logprob: -8.754547119140625
    7. ')' → logprob: -8.754547119140625
    8. ' file' → logprob: -8.879547119140625
    9. '-end' → logprob: -9.629547119140625
    10. 'tte' → logprob: -10.004547119140625

Token 44: 'é' (ID: 377)
  Prédit: 'ême'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ême' → logprob: -0.5401222109794617
    2. 'em' → logprob: -2.6651222705841064
    3. 'ud' → logprob: -3.2901222705841064
    4. 'êmement' → logprob: -3.2901222705841064
    5. 'uée' → logprob: -3.5401222705841064
    6. 'é' → logprob: -3.5401222705841064
    7. 'e' → logprob: -3.9151222705841064
    8. 'ém' → logprob: -3.9151222705841064
    9. 'ème' → logprob: -4.040122032165527
    10. 'a' → logprob: -4.040122032165527

Token 45: 'mit' (ID: 2765)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7619264125823975
    2. 'me' → logprob: -1.2619264125823975
    3. 'ur' → logprob: -2.1369264125823975
    4. 'm' → logprob: -3.2619264125823975
    5. 'ma' → logprob: -3.2619264125823975
    6. 'mé' → logprob: -3.6369264125823975
    7. 'mee' → logprob: -4.636926651000977
    8. 'mite' → logprob: -6.011926651000977
    9. 'ue' → logprob: -6.386926651000977
    10. 'urée' → logprob: -6.636926651000977

Token 46: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.237941175699234
    2. 're' → logprob: -3.362941265106201
    3. 'de' → logprob: -3.612941265106201
    4. 'é' → logprob: -3.737941265106201
    5. ')' → logprob: -3.737941265106201
    6. 's' → logprob: -4.112941265106201
    7. 'es' → logprob: -4.112941265106201
    8. '```' → logprob: -4.237941265106201
    9. 'd' → logprob: -4.612941265106201
    10. '),' → logprob: -5.362941265106201

Token 47: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07561872154474258
    2. '),' → logprob: -3.3256187438964844
    3. 's' → logprob: -3.8256187438964844
    4. 'e' → logprob: -4.575618743896484
    5. 'queue' → logprob: -6.700618743896484
    6. 'es' → logprob: -7.200618743896484
    7. ' queue' → logprob: -7.450618743896484
    8. ' file' → logprob: -7.450618743896484
    9. ',' → logprob: -7.950618743896484
    10. ' )' → logprob: -8.200618743896484

Token 48: ' Counter' (ID: 32251)
  Prédit: ' Ordered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Ordered' → logprob: -0.13340365886688232
    2. 'Ordered' → logprob: -2.758403778076172
    3. ' named' → logprob: -3.133403778076172
    4. ' Chain' → logprob: -4.758403778076172
    5. 'named' → logprob: -5.008403778076172
    6. 'Chain' → logprob: -6.883403778076172
    7. ' defaultdict' → logprob: -7.508403778076172
    8. ' deque' → logprob: -8.008403778076172
    9. ' ordered' → logprob: -8.133403778076172
    10. ' Counter' → logprob: -9.258403778076172

Token 49: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.2458125203847885
    2. ' le' → logprob: -1.9958125352859497
    3. ' la' → logprob: -3.74581241607666
    4. 'comp' → logprob: -3.87081241607666
    5. 'le' → logprob: -4.62081241607666
    6. ' les' → logprob: -5.37081241607666
    7. ' compt' → logprob: -5.37081241607666
    8. ' gérer' → logprob: -5.49581241607666
    9. 'la' → logprob: -5.62081241607666
    10. ' manip' → logprob: -5.87081241607666

Token 51: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.01055228617042303
    2. ' heap' → logprob: -5.135552406311035
    3. ' typing' → logprob: -6.510552406311035
    4. ' functools' → logprob: -6.885552406311035
    5. ' math' → logprob: -7.010552406311035
    6. ' os' → logprob: -7.260552406311035
    7. ' collections' → logprob: -8.385552406311035
    8. ' datetime' → logprob: -10.010552406311035
    9. ' queue' → logprob: -10.260552406311035
    10. ' threading' → logprob: -10.385552406311035

Token 54: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'queue' → logprob: -15.5
    3. 'import' → logprob: -16.75
    4. 'ql' → logprob: -18.125
    5. 'n' → logprob: -18.625
    6. 'dict' → logprob: -19.125
    7. 'que' → logprob: -19.25
    8. 'qq' → logprob: -19.5
    9. 'lib' → logprob: -20.0
    10. 'qo' → logprob: -20.5

Token 55: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.005404269322752953
    2. 'import' → logprob: -5.255404472351074
    3. ' ' → logprob: -8.755404472351074
    4. '	import' → logprob: -12.130404472351074
    5. '<|end|>' → logprob: -13.005404472351074
    6. '  ' → logprob: -13.130404472351074
    7. '_import' → logprob: -13.505404472351074
    8. ' importar' → logprob: -14.755404472351074
    9. ' imports' → logprob: -15.130404472351074
    10. ' Import' → logprob: -15.630404472351074

Token 56: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.014839082956314087
    2. 'he' → logprob: -4.264839172363281
    3. ' heap' → logprob: -7.514839172363281
    4. 'heap' → logprob: -9.639839172363281
    5. ' n' → logprob: -10.639839172363281
    6. '.he' → logprob: -10.889839172363281
    7. ' ' → logprob: -11.014839172363281
    8. 'nl' → logprob: -12.889839172363281
    9. 'n' → logprob: -14.139839172363281
    10. '  ' → logprob: -14.389839172363281

Token 57: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.03804539144039154
    2. 'ap' → logprob: -3.2880454063415527
    3. 'a' → logprob: -12.538044929504395
    4. 'ап' → logprob: -15.413044929504395
    5. 'aq' → logprob: -17.16304588317871
    6. '```' → logprob: -18.16304588317871
    7. 'aps' → logprob: -18.41304588317871
    8. '#' → logprob: -18.53804588317871
    9. 'apl' → logprob: -18.78804588317871
    10. 'q' → logprob: -18.78804588317871

Token 58: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00317783304490149
    2. 'op' → logprob: -5.753177642822266
    3. 'us' → logprob: -17.128177642822266
    4. '```' → logprob: -17.128177642822266
    5. 'push' → logprob: -18.003177642822266
    6. 'u' → logprob: -18.378177642822266
    7. 'ut' → logprob: -18.503177642822266
    8. '[' → logprob: -18.503177642822266
    9. '

' → logprob: -18.753177642822266
    10. 'USH' → logprob: -18.753177642822266

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00824847910553217
    2. ' ,' → logprob: -5.008248329162598
    3. ' ' → logprob: -7.258248329162598
    4. '<|end|>' → logprob: -7.383248329162598
    5. 'he' → logprob: -8.758248329162598
    6. ' he' → logprob: -11.008248329162598
    7. 'import' → logprob: -11.133248329162598
    8. '  ' → logprob: -13.008248329162598
    9. '<|end|>' → logprob: -13.133248329162598
    10. ',
' → logprob: -13.258248329162598

Token 60: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.4287673532962799
    2. 'he' → logprob: -1.0537673234939575
    3. 'heap' → logprob: -9.803767204284668
    4. ' heap' → logprob: -12.428767204284668
    5. '.he' → logprob: -12.678767204284668
    6. ' ' → logprob: -13.303767204284668
    7. '_he' → logprob: -14.303767204284668
    8. '```' → logprob: -15.303767204284668
    9. ' heaps' → logprob: -15.678767204284668
    10. 'hev' → logprob: -15.678767204284668

Token 61: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.8889261304575484e-06
    2. 'ap' → logprob: -12.500003814697266
    3. ' app' → logprob: -17.750003814697266
    4. 'appen' → logprob: -17.875003814697266
    5. 'APP' → logprob: -19.000003814697266
    6. 'pp' → logprob: -19.125003814697266
    7. 'a' → logprob: -19.500003814697266
    8. '_app' → logprob: -19.750003814697266
    9. '(app' → logprob: -19.875003814697266
    10. 'App' → logprob: -19.875003814697266

Token 62: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.004636841826140881
    2. 'ush' → logprob: -5.379636764526367
    3. 'o' → logprob: -12.004636764526367
    4. 'p' → logprob: -12.254636764526367
    5. '   ' → logprob: -13.254636764526367
    6. 'opp' → logprob: -14.254636764526367
    7. '```' → logprob: -14.629636764526367
    8. '

' → logprob: -14.629636764526367
    9. 'sh' → logprob: -15.129636764526367
    10. '[' → logprob: -15.504636764526367

Token 63: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.08047317713499069
    2. ' heap' → logprob: -2.8304731845855713
    3. 'he' → logprob: -4.080472946166992
    4. ' he' → logprob: -6.580472946166992
    5. '```' → logprob: -10.705472946166992
    6. '.heap' → logprob: -10.830472946166992
    7. 'nl' → logprob: -13.330472946166992
    8. '(heap' → logprob: -13.330472946166992
    9. ' ' → logprob: -14.205472946166992
    10. 'merge' → logprob: -14.330472946166992

Token 65: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0015519981971010566
    2. 'lify' → logprob: -7.251552104949951
    3. 'replace' → logprob: -7.376552104949951
    4. 'q' → logprob: -8.751551628112793
    5. 'sort' → logprob: -11.001551628112793
    6. 'if' → logprob: -11.626551628112793
    7. 'IFY' → logprob: -11.751551628112793
    8. 's' → logprob: -12.251551628112793
    9. 'size' → logprob: -12.376551628112793
    10. 'ize' → logprob: -12.751551628112793

Token 66: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' file' (ID: 1974)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02227899432182312
    2. ' heap' → logprob: -4.647278785705566
    3. 'he' → logprob: -5.397278785705566
    4. 'heap' → logprob: -5.647278785705566
    5. '  ' → logprob: -6.397278785705566
    6. ' he' → logprob: -6.522278785705566
    7. ' h' → logprob: -8.522278785705566
    8. '<|end|>' → logprob: -8.647278785705566
    9. ' space' → logprob: -9.272278785705566
    10. '  
' → logprob: -9.397278785705566

Token 69: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3131753206253052
    2. '<|end|>' → logprob: -2.4381752014160156
    3. ' d' → logprob: -2.5631752014160156
    4. ' de' → logprob: -3.0631752014160156
    5. ' ' → logprob: -4.063175201416016
    6. ' s' → logprob: -4.563175201416016
    7. '  ' → logprob: -5.063175201416016
    8. ' double' → logprob: -5.313175201416016
    9. '(s' → logprob: -5.688175201416016
    10. ' à' → logprob: -5.938175201416016

Token 70: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.06830430775880814
    2. ' priorité' → logprob: -3.1933043003082275
    3. 'priority' → logprob: -3.8183043003082275
    4. ' prior' → logprob: -6.693304538726807
    5. 'prio' → logprob: -7.318304538726807
    6. 'pri' → logprob: -7.943304538726807
    7. '```' → logprob: -8.443304061889648
    8. '_prior' → logprob: -8.818304061889648
    9. ' priority' → logprob: -9.193304061889648
    10. ' prioridades' → logprob: -10.318304061889648

Token 71: '/min' (ID: 62483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6013877391815186
    2. '<|end|>' → logprob: -0.9763877391815186
    3. '

' → logprob: -3.8513877391815186
    4. '<|end|>' → logprob: -4.226387977600098
    5. 'import' → logprob: -4.851387977600098
    6. ' 
' → logprob: -4.851387977600098
    7. ' ' → logprob: -4.976387977600098
    8. ',' → logprob: -5.226387977600098
    9. '  
' → logprob: -5.726387977600098
    10. '#' → logprob: -5.976387977600098

Token 72: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04669933393597603
    2. 'm' → logprob: -4.046699523925781
    3. '```' → logprob: -4.546699523925781
    4. 'heap' → logprob: -5.296699523925781
    5. '.' → logprob: -6.171699523925781
    6. 'imum' → logprob: -6.421699523925781
    7. 'que' → logprob: -7.046699523925781
    8. '#' → logprob: -7.046699523925781
    9. 'mum' → logprob: -7.296699523925781
    10. '_' → logprob: -7.546699523925781

Token 73: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.060210198163986206
    2. ' heap' → logprob: -3.6852102279663086
    3. '-' → logprob: -3.9352102279663086
    4. '_heap' → logprob: -5.810210227966309
    5. 'tas' → logprob: -6.310210227966309
    6. 'imum' → logprob: -6.310210227966309
    7. 't' → logprob: -6.435210227966309
    8. '```' → logprob: -6.560210227966309
    9. 'pile' → logprob: -7.310210227966309
    10. 'queue' → logprob: -7.560210227966309

Token 74: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' ajout' (ID: 64605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03520079702138901
    2. ',' → logprob: -4.660200595855713
    3. '  ' → logprob: -5.535200595855713
    4. ' ' → logprob: -6.410200595855713
    5. ' heap' → logprob: -6.410200595855713
    6. ' ,' → logprob: -6.535200595855713
    7. '<|end|>' → logprob: -6.660200595855713
    8. ' #' → logprob: -6.660200595855713
    9. '  
' → logprob: -6.910200595855713
    10. ' a' → logprob: -7.160200595855713

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5224963426589966
    2. ' ' → logprob: -1.1474963426589966
    3. ' ,' → logprob: -2.647496223449707
    4. 's' → logprob: -4.647496223449707
    5. ' et' → logprob: -5.897496223449707
    6. '<|end|>' → logprob: -5.897496223449707
    7. '  ' → logprob: -7.022496223449707
    8. ')' → logprob: -7.147496223449707
    9. ' )' → logprob: -7.522496223449707
    10. '<|end|>' → logprob: -8.397496223449707

Token 77: ' extraction' (ID: 48166)
  Prédit: ' suppression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suppression' → logprob: -0.1328011453151703
    2. 'supp' → logprob: -2.507801055908203
    3. ' retrait' → logprob: -3.632801055908203
    4. ' suppress' → logprob: -5.257801055908203
    5. ' supp' → logprob: -5.507801055908203
    6. ' supprim' → logprob: -6.007801055908203
    7. ' extraction' → logprob: -6.382801055908203
    8. ' sup' → logprob: -7.007801055908203
    9. ' pop' → logprob: -7.882801055908203
    10. ' ' → logprob: -8.257801055908203

Token 78: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' transformation' (ID: 26242)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -1.5058808326721191
    2. ' maintenance' → logprob: -1.7558808326721191
    3. ' tri' → logprob: -2.130880832672119
    4. ' ' → logprob: -2.380880832672119
    5. ',' → logprob: -3.130880832672119
    6. ' he' → logprob: -3.380880832672119
    7. ' maintien' → logprob: -3.505880832672119
    8. ' suppression' → logprob: -3.630880832672119
    9. ' n' → logprob: -4.005880832672119
    10. '<|end|>' → logprob: -4.130880832672119

Token 80: ' liste' (ID: 31719)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3274419605731964
    2. '<|end|>' → logprob: -1.952441930770874
    3. '

' → logprob: -2.452441930770874
    4. ',' → logprob: -4.702442169189453
    5. '<|end|>' → logprob: -4.702442169189453
    6. 'import' → logprob: -5.077442169189453
    7. ' 
' → logprob: -5.577442169189453
    8. ' ' → logprob: -5.577442169189453
    9. ' 

' → logprob: -5.702442169189453
    10. '


' → logprob: -5.827442169189453

Token 81: '/pro' (ID: 24083)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43639880418777466
    2. '<|end|>' → logprob: -1.8113987445831299
    3. '

' → logprob: -2.93639874458313
    4. ',' → logprob: -3.43639874458313
    5. 'import' → logprob: -3.43639874458313
    6. '#' → logprob: -3.81139874458313
    7. '<|end|>' → logprob: -4.436398983001709
    8. '  
' → logprob: -4.936398983001709
    9. '


' → logprob: -5.436398983001709
    10. ' ' → logprob: -5.561398983001709

Token 82: 'priété' (ID: 192130)
  Prédit: 'cess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cess' → logprob: -0.21626095473766327
    2. 'gram' → logprob: -3.0912609100341797
    3. '```' → logprob: -3.3412609100341797
    4. 'priété' → logprob: -4.09126091003418
    5. 'or' → logprob: -4.71626091003418
    6. 'que' → logprob: -4.84126091003418
    7. 'pri' → logprob: -5.09126091003418
    8. 'perty' → logprob: -5.21626091003418
    9. 'queue' → logprob: -5.21626091003418
    10. 'heap' → logprob: -5.46626091003418

Token 83: ' heap' (ID: 37237)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0780010223388672
    2. ',' → logprob: -1.3280010223388672
    3. 'import' → logprob: -2.078001022338867
    4. '#' → logprob: -2.828001022338867
    5. ' ' → logprob: -2.953001022338867
    6. 'from' → logprob: -3.453001022338867
    7. '

' → logprob: -3.703001022338867
    8. '<|end|>' → logprob: -3.703001022338867
    9. ' 
' → logprob: -4.703001022338867
    10. 's' → logprob: -4.703001022338867

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43280553817749023
    2. '

' → logprob: -1.9328055381774902
    3. 'import' → logprob: -2.6828055381774902
    4. ',' → logprob: -3.5578055381774902
    5. '#' → logprob: -3.6828055381774902
    6. '<|end|>' → logprob: -3.6828055381774902
    7. '


' → logprob: -4.43280553817749
    8. '\n' → logprob: -4.93280553817749
    9. ' ' → logprob: -5.05780553817749
    10. '  
' → logprob: -5.43280553817749

Token 85: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5539841055870056
    2. 'import' → logprob: -1.9289841651916504
    3. '<|end|>' → logprob: -2.1789841651916504
    4. '

' → logprob: -2.5539841651916504
    5. '#' → logprob: -2.9289841651916504
    6. ',' → logprob: -4.67898416519165
    7. ' 

' → logprob: -5.55398416519165
    8. 'from' → logprob: -5.92898416519165
    9. '


' → logprob: -5.92898416519165
    10. ' 
' → logprob: -5.92898416519165

Token 86: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.02154248207807541
    2. ' sys' → logprob: -4.896542549133301
    3. ' math' → logprob: -5.021542549133301
    4. ' itertools' → logprob: -5.396542549133301
    5. ' ' → logprob: -6.396542549133301
    6. ' re' → logprob: -7.521542549133301
    7. ' json' → logprob: -8.0215425491333
    8. ' random' → logprob: -9.6465425491333
    9. ' numpy' → logprob: -10.3965425491333
    10. ' collections' → logprob: -10.5215425491333

Token 87: '                                       ' (ID: 4754)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.894287645816803
    2. '<|end|>' → logprob: -1.0192875862121582
    3. '
' → logprob: -1.6442875862121582
    4. 'import' → logprob: -3.644287586212158
    5. ' as' → logprob: -5.894287586212158
    6. '.' → logprob: -6.019287586212158
    7. '<|end|>' → logprob: -6.644287586212158
    8. ',
' → logprob: -7.019287586212158
    9. ' ,' → logprob: -7.394287586212158
    10. '```' → logprob: -7.769287586212158

Token 89: ' bibliothèque' (ID: 154070)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.3180127739906311
    2. ' math' → logprob: -1.4430127143859863
    3. ' sys' → logprob: -3.8180127143859863
    4. ' ' → logprob: -4.943012714385986
    5. ' itertools' → logprob: -6.318012714385986
    6. 'math' → logprob: -6.568012714385986
    7. 'cmath' → logprob: -6.568012714385986
    8. 'os' → logprob: -7.068012714385986
    9. ' ' → logprob: -8.193013191223145
    10. ' random' → logprob: -8.318013191223145

Token 90: ' math' (ID: 13324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: 'ématique' (ID: 127136)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' rac' (ID: 12334)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.26799505949020386
    2. 'random' → logprob: -2.3929951190948486
    3. ' os' → logprob: -3.0179951190948486
    4. ' itertools' → logprob: -3.3929951190948486
    5. ' numpy' → logprob: -4.1429948806762695
    6. 'cmath' → logprob: -4.2679948806762695
    7. 'import' → logprob: -4.7679948806762695
    8. ' ' → logprob: -5.7679948806762695
    9. '<|end|>' → logprob: -6.0179948806762695
    10. ' import' → logprob: -6.0179948806762695

Token 94: 'ines' (ID: 2028)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -1.4566082954406738
    2. 'is' → logprob: -1.8316082954406738
    3. 'ic' → logprob: -2.206608295440674
    4. '```' → logprob: -2.456608295440674
    5. 's' → logprob: -2.581608295440674
    6. 'sqrt' → logprob: -2.706608295440674
    7. '√' → logprob: -3.206608295440674
    8. 'in' → logprob: -3.206608295440674
    9. 't' → logprob: -3.581608295440674
    10. 'ot' → logprob: -3.706608295440674

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.147553488612175
    2. 'es' → logprob: -2.1475534439086914
    3. ' ,' → logprob: -4.147553443908691
    4. 's' → logprob: -7.022553443908691
    5. ' ' → logprob: -7.522553443908691
    6. ',s' → logprob: -7.522553443908691
    7. 'e' → logprob: -7.647553443908691
    8. '```' → logprob: -7.772553443908691
    9. '_' → logprob: -8.147553443908691
    10. 'et' → logprob: -8.397553443908691

Token 96: ' puiss' (ID: 102546)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sin' → logprob: -1.3528658151626587
    2. ' sqrt' → logprob: -1.8528658151626587
    3. 'sqrt' → logprob: -2.352865695953369
    4. ' pow' → logprob: -2.352865695953369
    5. ' log' → logprob: -2.477865695953369
    6. 'log' → logprob: -2.727865695953369
    7. 'pow' → logprob: -2.852865695953369
    8. ' sin' → logprob: -2.977865695953369
    9. ' factorial' → logprob: -2.977865695953369
    10. 'cos' → logprob: -3.852865695953369

Token 97: 'ances' (ID: 3528)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3307589292526245
    2. 'e' → logprob: -1.5807589292526245
    3. 'é' → logprob: -3.205759048461914
    4. 'ance' → logprob: -4.955759048461914
    5. 'ière' → logprob: -5.330759048461914
    6. '2' → logprob: -5.705759048461914
    7. 'os' → logprob: -6.080759048461914
    8. 'ès' → logprob: -6.205759048461914
    9. 'ières' → logprob: -6.330759048461914
    10. 'èmes' → logprob: -6.705759048461914

Token 98: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9850327372550964
    2. ',' → logprob: -1.1100327968597412
    3. 'import' → logprob: -1.9850327968597412
    4. '<|end|>' → logprob: -1.9850327968597412
    5. ',
' → logprob: -4.235032558441162
    6. '  
' → logprob: -6.110032558441162
    7. ' ' → logprob: -6.860032558441162
    8. '<|end|>' → logprob: -6.985032558441162
    9. ' 
' → logprob: -7.110032558441162
    10. '
' → logprob: -7.485032558441162

Token 99: ' etc' (ID: 5178)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -1.253030776977539
    2. 'pi' → logprob: -1.628030776977539
    3. 'sin' → logprob: -2.003030776977539
    4. ' pi' → logprob: -2.378030776977539
    5. ' trig' → logprob: -2.503030776977539
    6. ' log' → logprob: -3.003030776977539
    7. 'cmath' → logprob: -3.128030776977539
    8. ' tr' → logprob: -3.378030776977539
    9. 'cos' → logprob: -3.628030776977539
    10. ' logarith' → logprob: -3.878030776977539

Token 100: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3772204518318176
    2. '<|end|>' → logprob: -1.8772203922271729
    3. 'import' → logprob: -2.127220392227173
    4. ',' → logprob: -3.752220392227173
    5. '

' → logprob: -4.627220630645752
    6. '<|end|>' → logprob: -6.127220630645752
    7. ' 
' → logprob: -6.752220630645752
    8. '
' → logprob: -6.877220630645752
    9. '  
' → logprob: -6.877220630645752
    10. ' ' → logprob: -7.002220630645752

Token 101: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2575332820415497
    2. 'import' → logprob: -2.007533311843872
    3. '

' → logprob: -3.132533311843872
    4. '<|end|>' → logprob: -3.257533311843872
    5. ' 
' → logprob: -6.382533073425293
    6. '#' → logprob: -6.382533073425293
    7. ',' → logprob: -6.632533073425293
    8. '  
' → logprob: -7.007533073425293
    9. ' 

' → logprob: -7.007533073425293
    10. '
' → logprob: -7.257533073425293

Token 102: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6197683811187744
    2. ' random' → logprob: -1.3697683811187744
    3. ' sys' → logprob: -1.8697683811187744
    4. ' itertools' → logprob: -3.1197683811187744
    5. ' re' → logprob: -5.619768142700195
    6. 'random' → logprob: -5.994768142700195
    7. ' statistics' → logprob: -6.619768142700195
    8. 'sys' → logprob: -7.244768142700195
    9. 'os' → logprob: -7.869768142700195
    10. ' functools' → logprob: -8.244768142700195

Token 103: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.2127087504486553e-05
    2. 'ec' → logprob: -11.000021934509277
    3. 'e' → logprob: -12.500021934509277
    4. 'ected' → logprob: -14.375021934509277
    5. 't' → logprob: -14.875021934509277
    6. ' ' → logprob: -15.250021934509277
    7. 'ects' → logprob: -16.125022888183594
    8. '```' → logprob: -16.250022888183594
    9. 'ectl' → logprob: -16.750022888183594
    10. 'ective' → logprob: -16.875022888183594

Token 104: '                                     ' (ID: 16198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12942562997341156
    2. '<|end|>' → logprob: -2.129425525665283
    3. '<|end|>' → logprob: -7.504425525665283
    4. ',' → logprob: -7.504425525665283
    5. '  ' → logprob: -7.754425525665283
    6. 'import' → logprob: -8.754426002502441
    7. ' ' → logprob: -8.879426002502441
    8. ' 
' → logprob: -9.129426002502441
    9. '_' → logprob: -9.629426002502441
    10. ' ,' → logprob: -9.754426002502441

Token 105: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31607604026794434
    2. '<|end|>' → logprob: -1.4410760402679443
    3. ' #' → logprob: -4.316076278686523
    4. ' 
' → logprob: -4.941076278686523
    5. '
' → logprob: -5.441076278686523
    6. ',' → logprob: -5.816076278686523
    7. '#' (adapté à ' #') → logprob: -5.941076278686523
    8. '  ' → logprob: -6.941076278686523
    9. '<|end|>' → logprob: -7.066076278686523
    10. '  
' → logprob: -7.441076278686523

Token 106: ' insertion' (ID: 68881)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.024394633248448372
    2. 'bis' → logprob: -4.274394512176514
    3. ' ins' → logprob: -4.774394512176514
    4. 'ins' → logprob: -6.649394512176514
    5. ' b' → logprob: -9.024394989013672
    6. ' binary' → logprob: -9.649394989013672
    7. 'import' → logprob: -10.149394989013672
    8. ' #' → logprob: -10.274394989013672
    9. ' ' → logprob: -10.399394989013672
    10. ' collections' → logprob: -10.524394989013672

Token 107: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' recherche' (ID: 24975)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.3945823013782501
    2. '<|end|>' → logprob: -1.3945822715759277
    3. ' search' → logprob: -3.7695822715759277
    4. 'ins' → logprob: -4.144582271575928
    5. 'search' → logprob: -4.269582271575928
    6. ' recherche' → logprob: -4.894582271575928
    7. ' searching' → logprob: -5.894582271575928
    8. 'sort' → logprob: -6.019582271575928
    9. 'collections' → logprob: -6.394582271575928
    10. ' sort' → logprob: -6.769582271575928

Token 109: ' b' (ID: 287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.5569689869880676
    2. 'inary' → logprob: -1.5569689273834229
    3. ' in' → logprob: -2.056968927383423
    4. 'in' → logprob: -2.681968927383423
    5. 'is' → logprob: -5.181969165802002
    6. 'ina' → logprob: -6.306969165802002
    7. 's' → logprob: -6.681969165802002
    8. ' ' → logprob: -7.056969165802002
    9. 'iné' → logprob: -7.056969165802002
    10. '```' → logprob: -7.306969165802002

Token 111: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' listes' (ID: 179198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7489564418792725
    2. ' une' → logprob: -1.9989564418792725
    3. ' list' → logprob: -2.2489564418792725
    4. ' listes' → logprob: -2.2489564418792725
    5. ' lists' → logprob: -2.6239564418792725
    6. 'list' → logprob: -2.7489564418792725
    7. ' liste' → logprob: -3.9989564418792725
    8. 'une' → logprob: -5.373956680297852
    9. 'liste' → logprob: -5.623956680297852
    10. 'lists' → logprob: -5.623956680297852

Token 113: ' tri' (ID: 12665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.002457106951624155
    2. 'ée' → logprob: -6.377457141876221
    3. 'é' → logprob: -7.627457141876221
    4. 'nées' → logprob: -8.627456665039062
    5. 'd' → logprob: -9.877456665039062
    6. 's' → logprob: -11.377456665039062
    7. 'és' → logprob: -12.127456665039062
    8. 'ed' → logprob: -12.252456665039062
    9. '#' → logprob: -12.752456665039062
    10. 'quées' → logprob: -13.002456665039062

Token 115: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22015231847763062
    2. '<|end|>' → logprob: -2.4701523780822754
    3. '
' → logprob: -2.8451523780822754
    4. ',' → logprob: -3.3451523780822754
    5. '#' → logprob: -5.095152378082275
    6. '<|end|>' → logprob: -5.470152378082275
    7. '

' → logprob: -5.845152378082275
    8. ' ' → logprob: -6.470152378082275
    9. ' 
' → logprob: -6.720152378082275
    10. '  
' → logprob: -6.970152378082275

Token 117: ' random' (ID: 7526)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6674197316169739
    2. ' itertools' → logprob: -1.542419672012329
    3. ' os' → logprob: -2.042419672012329
    4. ' random' → logprob: -2.167419672012329
    5. ' re' → logprob: -3.917419672012329
    6. ' functools' → logprob: -5.667419910430908
    7. ' json' → logprob: -6.917419910430908
    8. ' statistics' → logprob: -7.042419910430908
    9. 'sys' → logprob: -7.167419910430908
    10. ' operator' → logprob: -7.167419910430908

Token 118: '                                     ' (ID: 16198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' génér' (ID: 18939)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.2201399803161621
    2. 'random' → logprob: -2.220139980316162
    3. ' ' → logprob: -3.095139980316162
    4. ' os' → logprob: -3.470139980316162
    5. ' randint' → logprob: -6.095139980316162
    6. '  ' → logprob: -6.345139980316162
    7. 'space' → logprob: -6.345139980316162
    8. ' collections' → logprob: -6.470139980316162
    9. ' sys' → logprob: -6.970139980316162
    10. '<|end|>' → logprob: -7.220139980316162

Token 121: 'ateur' (ID: 12477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005846308544278145
    2. 'ateur' → logprob: -5.3808465003967285
    3. 'ating' → logprob: -8.13084602355957
    4. 'ate' → logprob: -8.38084602355957
    5. ' er' → logprob: -8.88084602355957
    6. 'al' → logprob: -8.88084602355957
    7. 'ation' → logprob: -9.00584602355957
    8. 'érer' → logprob: -9.38084602355957
    9. 'ator' → logprob: -9.88084602355957
    10. 'ération' → logprob: -10.63084602355957

Token 122: ' al' (ID: 434)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007483099587261677
    2. 'éas' → logprob: -5.257483005523682
    3. 'e' → logprob: -6.132483005523682
    4. 'ea' → logprob: -10.38248348236084
    5. 'a' → logprob: -11.25748348236084
    6. 'éan' → logprob: -11.75748348236084
    7. '&eacute' → logprob: -12.75748348236084
    8. '�' → logprob: -12.75748348236084
    9. 'éo' → logprob: -12.88248348236084
    10. '#' → logprob: -13.00748348236084

Token 124: 'atoire' (ID: 41651)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13754019141197205
    2. ' ' → logprob: -2.387540102005005
    3. '<|end|>' → logprob: -3.637540102005005
    4. 'space' → logprob: -5.762540340423584
    5. 'e' → logprob: -6.387540340423584
    6. ')' → logprob: -7.262540340423584
    7. '  ' → logprob: -7.387540340423584
    8. ' random' → logprob: -7.637540340423584
    9. 'int' → logprob: -7.887540340423584
    10. ' a' → logprob: -8.137539863586426

Token 125: ' divers' (ID: 10474)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41825833916664124
    2. '<|end|>' → logprob: -1.5432583093643188
    3. 'import' → logprob: -2.7932584285736084
    4. '

' → logprob: -2.9182584285736084
    5. '#' → logprob: -5.168258190155029
    6. '<|end|>' → logprob: -6.043258190155029
    7. ',' → logprob: -6.543258190155029
    8. '\n' → logprob: -6.918258190155029
    9. '
' → logprob: -7.793258190155029
    10. '' → logprob: -8.168258666992188

Token 128: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.21788208186626434
    2. ' typing' → logprob: -2.0928821563720703
    3. ' functools' → logprob: -3.0928821563720703
    4. ' statistics' → logprob: -4.46788215637207
    5. ' datetime' → logprob: -4.59288215637207
    6. ' operator' → logprob: -6.96788215637207
    7. ' ' → logprob: -7.09288215637207
    8. ' copy' → logprob: -7.34288215637207
    9. 'typing' → logprob: -7.46788215637207
    10. ' threading' → logprob: -7.84288215637207

Token 129: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.00861669983714819
    2. 'import' → logprob: -4.758616924285889
    3. ' ' → logprob: -13.88361644744873
    4. '	import' → logprob: -14.25861644744873
    5. '_import' → logprob: -14.63361644744873
    6. ' importar' → logprob: -17.383617401123047
    7. ' ' → logprob: -17.508617401123047
    8. ' imports' → logprob: -17.883617401123047
    9. ' im' → logprob: -18.008617401123047
    10. '<|end|>' → logprob: -18.133617401123047

Token 130: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.267362117767334
    2. ' combinations' → logprob: -2.142362117767334
    3. ' chain' → logprob: -2.642362117767334
    4. ' product' → logprob: -4.142362117767334
    5. ' accumulate' → logprob: -4.517362117767334
    6. ' cycle' → logprob: -4.767362117767334
    7. ' group' → logprob: -5.767362117767334
    8. 'com' → logprob: -6.142362117767334
    9. 'acc' → logprob: -6.892362117767334
    10. 'chain' → logprob: -7.017362117767334

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020765867084264755
    2. ' ,' → logprob: -4.395765781402588
    3. '<|end|>' → logprob: -5.020765781402588
    4. ' ' → logprob: -6.895765781402588
    5. 'import' → logprob: -7.645765781402588
    6. ',
' → logprob: -9.770766258239746
    7. ' import' → logprob: -10.145766258239746
    8. '<|end|>' → logprob: -11.895766258239746
    9. ' ,
' → logprob: -12.395766258239746
    10. ' ' → logprob: -13.020766258239746

Token 132: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.030535396188497543
    2. ' combinations' → logprob: -4.1555352210998535
    3. 'product' → logprob: -4.4055352210998535
    4. ' product' → logprob: -6.4055352210998535
    5. 'chain' → logprob: -8.280535697937012
    6. '	com' → logprob: -9.530535697937012
    7. 'cycle' → logprob: -9.905535697937012
    8. 'acc' → logprob: -10.155535697937012
    9. 'group' → logprob: -10.155535697937012
    10. ' chain' → logprob: -10.530535697937012

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015430611558258533
    2. ' ,' → logprob: -4.890430450439453
    3. '<|end|>' → logprob: -5.015430450439453
    4. ' ' → logprob: -7.015430450439453
    5. 'import' → logprob: -8.640430450439453
    6. ' import' → logprob: -10.515430450439453
    7. ' as' → logprob: -11.015430450439453
    8. '<|end|>' → logprob: -11.640430450439453
    9. ',
' → logprob: -12.015430450439453
    10. ' ' → logprob: -12.265430450439453

Token 134: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7116931676864624
    2. 'product' → logprob: -1.4616931676864624
    3. 'group' → logprob: -1.4616931676864624
    4. 'chain' → logprob: -3.711693286895752
    5. ' group' → logprob: -4.711693286895752
    6. ' product' → logprob: -4.836693286895752
    7. ' chain' → logprob: -6.211693286895752
    8. 'cycle' → logprob: -6.586693286895752
    9. ' combinations' → logprob: -7.711693286895752
    10. 'compress' → logprob: -8.711692810058594

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028126638382673264
    2. '<|end|>' → logprob: -3.6531267166137695
    3. ' ,' → logprob: -6.7781267166137695
    4. ' ' → logprob: -7.9031267166137695
    5. 'import' → logprob: -8.52812671661377
    6. ' as' → logprob: -10.27812671661377
    7. '<|end|>' → logprob: -10.90312671661377
    8. ',
' → logprob: -11.52812671661377
    9. ' ' → logprob: -11.65312671661377
    10. ' import' → logprob: -11.77812671661377

Token 136: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.34948548674583435
    2. 'group' → logprob: -2.099485397338867
    3. ' product' → logprob: -2.474485397338867
    4. ' group' → logprob: -3.474485397338867
    5. 'chain' → logprob: -3.599485397338867
    6. ' chain' → logprob: -4.099485397338867
    7. 'com' → logprob: -4.599485397338867
    8. 'cycle' → logprob: -5.849485397338867
    9. ' cycle' → logprob: -8.849485397338867
    10. 'compress' → logprob: -9.474485397338867

Token 137: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' outils' (ID: 63365)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0952869653701782
    2. 'group' → logprob: -1.4702869653701782
    3. 'chain' → logprob: -1.8452869653701782
    4. ' chain' → logprob: -1.9702869653701782
    5. ' group' → logprob: -2.3452868461608887
    6. ' combinations' → logprob: -4.345286846160889
    7. 'cycle' → logprob: -4.595286846160889
    8. 'compress' → logprob: -5.470286846160889
    9. ' permutations' → logprob: -5.720286846160889
    10. 'filter' → logprob: -5.720286846160889

Token 139: ' it' (ID: 480)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: 'ér' (ID: 2156)
  Prédit: 'ertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.030037645250558853
    2. 'er' → logprob: -3.6550376415252686
    3. 'ert' → logprob: -5.655037879943848
    4. 'tools' → logprob: -9.405037879943848
    5. 'ools' → logprob: -10.280037879943848
    6. 'erto' → logprob: -11.280037879943848
    7. 'ertes' → logprob: -11.655037879943848
    8. '#' → logprob: -11.780037879943848
    9. '```' → logprob: -11.780037879943848
    10. 'e' → logprob: -11.905037879943848

Token 141: 'atifs' (ID: 66205)
  Prédit: 'tools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tools' → logprob: -0.5172208547592163
    2. 'ertools' → logprob: -1.7672208547592163
    3. 'ools' → logprob: -2.142220973968506
    4. 'ables' → logprob: -2.267220973968506
    5. 'able' → logprob: -5.642220973968506
    6. 'r' → logprob: -6.142220973968506
    7. 'ool' → logprob: -6.892220973968506
    8. 'tool' → logprob: -7.142220973968506
    9. 'er' → logprob: -7.142220973968506
    10. 'import' → logprob: -7.517220973968506

Token 142: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: ' permutations' (ID: 174595)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.4434473514556885
    2. ' group' → logprob: -2.0684473514556885
    3. ' permutations' → logprob: -2.4434473514556885
    4. ' cycle' → logprob: -3.3184473514556885
    5. 'com' → logprob: -3.4434473514556885
    6. 'chain' → logprob: -3.5684473514556885
    7. 'group' → logprob: -4.568447113037109
    8. 'per' → logprob: -4.818447113037109
    9. ' combinations' → logprob: -5.068447113037109
    10. 'filter' → logprob: -5.193447113037109

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10204193741083145
    2. '<|end|>' → logprob: -2.3520419597625732
    3. ' ,' → logprob: -6.477041721343994
    4. ',s' → logprob: -9.477042198181152
    5. '<|end|>' → logprob: -10.227042198181152
    6. 'import' → logprob: -10.977042198181152
    7. ' ' → logprob: -10.977042198181152
    8. 'com' → logprob: -11.102042198181152
    9. '#' → logprob: -11.227042198181152
    10. ',
' → logprob: -11.352042198181152

Token 145: ' cum' (ID: 10023)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -0.37917840480804443
    2. 'com' → logprob: -2.004178524017334
    3. ' group' → logprob: -2.879178524017334
    4. 'acc' → logprob: -2.879178524017334
    5. ' combinations' → logprob: -3.629178524017334
    6. ' chain' → logprob: -4.254178524017334
    7. 'group' → logprob: -4.504178524017334
    8. 'filter' → logprob: -5.504178524017334
    9. ' accum' → logprob: -5.754178524017334
    10. 'chain' → logprob: -5.754178524017334

Token 146: 'uls' (ID: 13433)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.43204426765441895
    2. 'mul' → logprob: -1.682044267654419
    3. 'ulated' → logprob: -2.307044267654419
    4. 'sum' → logprob: -3.682044267654419
    5. 'ulative' → logprob: -4.93204402923584
    6. 'uls' → logprob: -4.93204402923584
    7. '_sum' → logprob: -5.05704402923584
    8. '#' → logprob: -6.05704402923584
    9. 'prod' → logprob: -6.05704402923584
    10. 'ulé' → logprob: -6.18204402923584

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07046061754226685
    2. '<|end|>' → logprob: -2.695460557937622
    3. ' ,' → logprob: -8.945460319519043
    4. '#' → logprob: -9.945460319519043
    5. 'import' → logprob: -10.195460319519043
    6. ',s' → logprob: -10.195460319519043
    7. '<|end|>' → logprob: -10.320460319519043
    8. ' ' → logprob: -10.445460319519043
    9. ')' → logprob: -10.570460319519043
    10. '.' → logprob: -10.570460319519043

Token 148: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0191195011138916
    2. ' group' → logprob: -1.1441195011138916
    3. ' combinations' → logprob: -1.7691195011138916
    4. 'group' → logprob: -3.0191195011138916
    5. ' chain' → logprob: -3.1441195011138916
    6. 'filter' → logprob: -4.0191192626953125
    7. ' accumulate' → logprob: -4.1441192626953125
    8. 'chain' → logprob: -5.1441192626953125
    9. ' filter' → logprob: -5.5191192626953125
    10. ' combin' → logprob: -5.8941192626953125

Token 149: 'inais' (ID: 42744)
  Prédit: 'inations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inations' → logprob: -0.11717868596315384
    2. 'inais' → logprob: -2.7421786785125732
    3. 'in' → logprob: -3.1171786785125732
    4. 'initions' → logprob: -7.117178916931152
    5. 'ina' → logprob: -7.992178916931152
    6. 'binations' → logprob: -8.617178916931152
    7. '#' → logprob: -8.742178916931152
    8. '```' → logprob: -8.867178916931152
    9. ' in' → logprob: -9.742178916931152
    10. 'In' → logprob: -10.242178916931152

Token 150: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0017709736712276936
    2. 'on' → logprob: -6.376770973205566
    3. 'sons' → logprob: -10.751770973205566
    4. 'asons' → logprob: -11.376770973205566
    5. 'onso' → logprob: -11.626770973205566
    6. 'ais' → logprob: -11.626770973205566
    7. 'son' → logprob: -12.751770973205566
    8. 'ont' → logprob: -12.876770973205566
    9. 'a' → logprob: -13.376770973205566
    10. '#' → logprob: -13.626770973205566

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014536837115883827
    2. '<|end|>' → logprob: -4.2645368576049805
    3. 'import' → logprob: -8.76453685760498
    4. ',
' → logprob: -9.88953685760498
    5. '#' → logprob: -9.88953685760498
    6. ' ,' → logprob: -10.88953685760498
    7. '<|end|>' → logprob: -11.26453685760498
    8. ',n' → logprob: -11.63953685760498
    9. 'from' → logprob: -11.88953685760498
    10. ',#' → logprob: -11.88953685760498

Token 152: ' produit' (ID: 29429)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chain' → logprob: -1.481476068496704
    2. 'com' → logprob: -1.981476068496704
    3. ' cycle' → logprob: -2.106476068496704
    4. ' group' → logprob: -2.231476068496704
    5. ' combinations' → logprob: -2.481476068496704
    6. ' cart' → logprob: -2.606476068496704
    7. 'cart' → logprob: -3.106476068496704
    8. 'chain' → logprob: -3.106476068496704
    9. 'cycle' → logprob: -3.606476068496704
    10. 'filter' → logprob: -3.856476068496704

Token 153: ' cart' (ID: 8149)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5347054600715637
    2. '<|end|>' → logprob: -0.9097054600715637
    3. 'import' → logprob: -5.659705638885498
    4. 's' → logprob: -5.659705638885498
    5. '<|end|>' → logprob: -6.909705638885498
    6. '
' → logprob: -7.409705638885498
    7. 'from' → logprob: -7.534705638885498
    8. ',
' → logprob: -7.534705638885498
    9. 'as' → logprob: -8.28470516204834
    10. '#' → logprob: -8.28470516204834

Token 154: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.013428563252091408
    2. 'es' → logprob: -4.388428688049316
    3. 'esian' → logprob: -7.388428688049316
    4. '```' → logprob: -10.388428688049316
    5. '#' → logprob: -10.513428688049316
    6. 'ÉS' → logprob: -10.638428688049316
    7. 'é' → logprob: -10.763428688049316
    8. '_' → logprob: -10.763428688049316
    9. '_product' → logprob: -10.888428688049316
    10. 'ési' → logprob: -11.138428688049316

Token 155: 'ien' (ID: 847)
  Prédit: 'ien'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ien' → logprob: -0.11907470226287842
    2. 'és' → logprob: -2.494074821472168
    3. 'es' → logprob: -4.619074821472168
    4. '_product' → logprob: -5.369074821472168
    5. 'Product' → logprob: -5.744074821472168
    6. 'product' → logprob: -5.994074821472168
    7. ' product' → logprob: -6.119074821472168
    8. '```' → logprob: -6.619074821472168
    9. 'esian' → logprob: -7.119074821472168
    10. '__' → logprob: -7.619074821472168

Token 156: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6283968091011047
    2. '<|end|>' → logprob: -0.8783968091011047
    3. '

' → logprob: -3.62839674949646
    4. 'import' → logprob: -4.378396987915039
    5. ',' → logprob: -5.878396987915039
    6. '<|end|>' → logprob: -6.503396987915039
    7. '#' → logprob: -6.628396987915039
    8. '  
' → logprob: -6.753396987915039
    9. '\n' → logprob: -6.753396987915039
    10. ' 
' → logprob: -6.878396987915039

Token 158: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.18718509376049042
    2. ' os' → logprob: -2.187185049057007
    3. 'sys' → logprob: -3.562185049057007
    4. ' re' → logprob: -4.187185287475586
    5. ' numpy' → logprob: -4.937185287475586
    6. ' functools' → logprob: -6.062185287475586
    7. 'os' → logprob: -6.437185287475586
    8. ' operator' → logprob: -6.562185287475586
    9. 're' → logprob: -6.937185287475586
    10. ' json' → logprob: -7.312185287475586

Token 159: '                                        ' (ID: 27240)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' accès' (ID: 65948)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.7783783674240112
    2. ' sys' → logprob: -1.0283783674240112
    3. 'os' → logprob: -2.278378486633301
    4. 'sys' → logprob: -2.778378486633301
    5. 'import' → logprob: -4.278378486633301
    6. ' import' → logprob: -5.903378486633301
    7. '<|end|>' → logprob: -7.153378486633301
    8. ' stdin' → logprob: -8.4033784866333
    9. 'stdin' → logprob: -8.4033784866333
    10. 'exit' → logprob: -9.2783784866333

Token 162: ' stdin' (ID: 75143)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08760421723127365
    2. '<|end|>' → logprob: -2.587604284286499
    3. '
' → logprob: -5.33760404586792
    4. ',
' → logprob: -6.21260404586792
    5. ' ,' → logprob: -7.21260404586792
    6. '<|end|>' → logprob: -7.83760404586792
    7. 'import' → logprob: -8.587604522705078
    8. '```' → logprob: -9.087604522705078
    9. '#' → logprob: -9.337604522705078
    10. ',input' → logprob: -9.462604522705078

Token 164: ' stdout' (ID: 48014)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.0027503150049597025
    2. ' stdout' → logprob: -6.002750396728516
    3. 'stderr' → logprob: -8.377750396728516
    4. 'argv' → logprob: -10.252750396728516
    5. '.stdout' → logprob: -12.002750396728516
    6. ' argv' → logprob: -13.502750396728516
    7. '_stdout' → logprob: -14.377750396728516
    8. 'stdin' → logprob: -14.752750396728516
    9. ' stderr' → logprob: -15.127750396728516
    10. 'exit' → logprob: -15.502750396728516

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41508370637893677
    2. '<|end|>' → logprob: -1.415083646774292
    3. '
' → logprob: -2.415083646774292
    4. '<|end|>' → logprob: -5.790083885192871
    5. 'import' → logprob: -6.040083885192871
    6. '#' → logprob: -7.790083885192871
    7. '\n' → logprob: -8.040083885192871
    8. ',
' → logprob: -8.040083885192871
    9. '.' → logprob: -8.290083885192871
    10. '

' → logprob: -8.665083885192871

Token 166: ' et' (ID: 859)
  Prédit: 'stderr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stderr' → logprob: -0.031977131962776184
    2. ' stderr' → logprob: -3.7819771766662598
    3. 'argv' → logprob: -5.28197717666626
    4. ' argv' → logprob: -6.28197717666626
    5. 'stdout' → logprob: -6.40697717666626
    6. 'exit' → logprob: -10.281976699829102
    7. 'stdin' → logprob: -10.781976699829102
    8. ' stdout' → logprob: -10.906976699829102
    9. ' exit' → logprob: -11.531976699829102
    10. '.stderr' → logprob: -12.156976699829102

Token 167: ' autres' (ID: 18701)
  Prédit: 'stderr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stderr' → logprob: -0.03102683462202549
    2. ' stderr' → logprob: -3.531026840209961
    3. 'argv' → logprob: -7.031026840209961
    4. ' argv' → logprob: -8.406026840209961
    5. 'exit' → logprob: -9.531026840209961
    6. '.stderr' → logprob: -9.781026840209961
    7. 'stdout' → logprob: -10.906026840209961
    8. ' exit' → logprob: -11.406026840209961
    9. 'os' → logprob: -12.656026840209961
    10. 'stdin' → logprob: -12.906026840209961

Token 168: ' fonctionnalités' (ID: 111283)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: ' système' (ID: 30034)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4849335551261902
    2. '<|end|>' → logprob: -0.9849335551261902
    3. 'import' → logprob: -5.234933376312256
    4. '<|end|>' → logprob: -5.859933376312256
    5. ',' → logprob: -7.109933376312256
    6. '

' → logprob: -7.234933376312256
    7. '\n' → logprob: -7.984933376312256
    8. '#' → logprob: -8.359933853149414
    9. '```' → logprob: -8.859933853149414
    10. '
' → logprob: -8.984933853149414

Token 170: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3450484573841095
    2. '<|end|>' → logprob: -1.345048427581787
    3. '

' → logprob: -3.595048427581787
    4. 'import' → logprob: -6.345048427581787
    5. '<|end|>' → logprob: -7.345048427581787
    6. '#' → logprob: -8.095048904418945
    7. '' → logprob: -8.470048904418945
    8. '
' → logprob: -8.595048904418945
    9. ',' → logprob: -8.970048904418945
    10. ' 
' → logprob: -9.220048904418945

Token 172: ' string' (ID: 1621)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0019460106268525124
    2. 'os' → logprob: -6.251945972442627
    3. ' time' → logprob: -12.126946449279785
    4. ' threading' → logprob: -12.126946449279785
    5. ' io' → logprob: -12.251946449279785
    6. '	os' → logprob: -14.876946449279785
    7. '"os' → logprob: -15.501946449279785
    8. ' functools' → logprob: -15.501946449279785
    9. '_os' → logprob: -15.751946449279785
    10. ' ' → logprob: -15.751946449279785

Token 173: '                                     ' (ID: 16198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: ' constantes' (ID: 125561)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.3574375510215759
    2. ' punctuation' → logprob: -2.4824376106262207
    3. 'string' → logprob: -2.8574376106262207
    4. 'import' → logprob: -3.3574376106262207
    5. ' ascii' → logprob: -3.3574376106262207
    6. 'ascii' → logprob: -3.3574376106262207
    7. ' import' → logprob: -3.9824376106262207
    8. '<|end|>' → logprob: -4.607437610626221
    9. ' #' → logprob: -4.732437610626221
    10. ' os' → logprob: -5.607437610626221

Token 176: ' chaînes' (ID: 179904)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.0005743592046201229
    2. ' caractères' → logprob: -7.625574588775635
    3. 'chars' → logprob: -9.750574111938477
    4. 'texte' → logprob: -11.625574111938477
    5. 'char' → logprob: -12.000574111938477
    6. 'import' → logprob: -12.625574111938477
    7. 'string' → logprob: -13.250574111938477
    8. 'characters' → logprob: -13.625574111938477
    9. 'c' → logprob: -13.750574111938477
    10. '```' → logprob: -13.750574111938477

Token 179: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' etc' (ID: 5178)
  Prédit: ' ascii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ascii' → logprob: -1.0179376602172852
    2. ' re' → logprob: -1.1429376602172852
    3. 'ascii' → logprob: -1.8929376602172852
    4. 're' → logprob: -2.392937660217285
    5. ' punctuation' → logprob: -3.267937660217285
    6. ' os' → logprob: -3.642937660217285
    7. 'os' → logprob: -5.017937660217285
    8. ' random' → logprob: -7.142937660217285
    9. '```' → logprob: -7.392937660217285
    10. 'random' → logprob: -7.642937660217285

Token 181: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09279980510473251
    2. '

' → logprob: -3.2177999019622803
    3. '<|end|>' → logprob: -3.3427999019622803
    4. '#' → logprob: -5.467799663543701
    5. '\n' → logprob: -5.592799663543701
    6. ' 
' → logprob: -6.217799663543701
    7. '```' → logprob: -7.092799663543701
    8. '  
' → logprob: -7.967799663543701
    9. '' → logprob: -7.967799663543701
    10. 'import' → logprob: -8.09280014038086

Token 183: ' bis' (ID: 7204)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.6041136980056763
    2. ' collections' → logprob: -1.7291136980056763
    3. ' functools' → logprob: -2.3541135787963867
    4. ' os' → logprob: -2.4791135787963867
    5. 'collections' → logprob: -3.7291135787963867
    6. ' datetime' → logprob: -4.229113578796387
    7. ' math' → logprob: -4.729113578796387
    8. 'typing' → logprob: -4.979113578796387
    9. ' pathlib' → logprob: -5.104113578796387
    10. ' urllib' → logprob: -5.229113578796387

Token 184: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.5048530030981055e-06
    2. 'ct' → logprob: -14.500001907348633
    3. 'e' → logprob: -14.625001907348633
    4. 'ec' → logprob: -15.375001907348633
    5. 'ecta' → logprob: -17.000001907348633
    6. '```' → logprob: -17.000001907348633
    7. ' ect' → logprob: -17.375001907348633
    8. 'ext' → logprob: -17.500001907348633
    9. 'ectl' → logprob: -17.500001907348633
    10. 'ected' → logprob: -17.500001907348633

Token 185: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12835371494293213
    2. 'import' → logprob: -2.1283535957336426
    3. ' ' → logprob: -6.878353595733643
    4. '_import' → logprob: -8.6283540725708
    5. '<|end|>' → logprob: -9.2533540725708
    6. '	import' → logprob: -9.6283540725708
    7. '_' → logprob: -10.6283540725708
    8. ' ' → logprob: -10.7533540725708
    9. ' Import' → logprob: -14.1283540725708
    10. '_ins' → logprob: -14.2533540725708

Token 186: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.6052697896957397
    2. ' ins' → logprob: -1.3552697896957397
    3. 'ins' → logprob: -2.1052699089050293
    4. 'bis' → logprob: -2.6052699089050293
    5. '_ins' → logprob: -7.730269908905029
    6. '.ins' → logprob: -10.355269432067871
    7. '_left' → logprob: -10.730269432067871
    8. ' ' → logprob: -12.980269432067871
    9. '_right' → logprob: -13.605269432067871
    10. '(ins' → logprob: -14.105269432067871

Token 187: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.578184497309849e-05
    2. 'sect' → logprob: -10.250085830688477
    3. 'e' → logprob: -10.375085830688477
    4. 'is' → logprob: -11.750085830688477
    5. 'ct' → logprob: -13.250085830688477
    6. 'ext' → logprob: -13.250085830688477
    7. 'ectl' → logprob: -13.625085830688477
    8. 'ects' → logprob: -14.250085830688477
    9. 'ec' → logprob: -14.375085830688477
    10. 's' → logprob: -14.625085830688477

Token 188: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.008713492192327976
    2. '_right' → logprob: -5.008713722229004
    3. '_' → logprob: -6.258713722229004
    4. 'left' → logprob: -10.258713722229004
    5. '<|end|>' → logprob: -10.258713722229004
    6. '_LEFT' → logprob: -13.008713722229004
    7. ' _' → logprob: -13.383713722229004
    8. ' ' → logprob: -13.508713722229004
    9. '_*' → logprob: -13.883713722229004
    10. ',' → logprob: -13.883713722229004

Token 189: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.6931670308113098
    2. 'bis' → logprob: -0.6931670308113098
    3. 'ins' → logprob: -11.568166732788086
    4. ' ins' → logprob: -11.818166732788086
    5. 'b' → logprob: -13.068166732788086
    6. ' ' → logprob: -14.818166732788086
    7. '	b' → logprob: -15.068166732788086
    8. '```' → logprob: -16.443166732788086
    9. 'Bis' → logprob: -18.193166732788086
    10. 'bs' → logprob: -18.630666732788086

Token 191: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.010975074023008347
    2. 'sect' → logprob: -4.635974884033203
    3. 'right' → logprob: -7.385974884033203
    4. 'is' → logprob: -8.635974884033203
    5. 'ight' → logprob: -8.885974884033203
    6. 'ght' → logprob: -9.385974884033203
    7. 'ct' → logprob: -10.010974884033203
    8. '_right' → logprob: -10.135974884033203
    9. 's' → logprob: -10.385974884033203
    10. '```' → logprob: -11.260974884033203

Token 192: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0002942287246696651
    2. 'right' → logprob: -8.25029468536377
    3. 'ight' → logprob: -10.62529468536377
    4. '_' → logprob: -12.12529468536377
    5. '_RIGHT' → logprob: -13.87529468536377
    6. 'rig' → logprob: -14.12529468536377
    7. 'Right' → logprob: -15.12529468536377
    8. '_left' → logprob: -15.25029468536377
    9. '_r' → logprob: -15.62529468536377
    10. '_Right' → logprob: -15.62529468536377

Token 193: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 194: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: ' fonctions' (ID: 87283)
  Prédit: ' ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ins' → logprob: -0.2096046805381775
    2. ' bis' → logprob: -2.3346047401428223
    3. 'ins' → logprob: -2.9596047401428223
    4. 'bis' → logprob: -3.2096047401428223
    5. ' ' → logprob: -11.834604263305664
    6. 'is' → logprob: -12.584604263305664
    7. ' is' → logprob: -12.584604263305664
    8. 'import' → logprob: -12.584604263305664
    9. '(ins' → logprob: -12.959604263305664
    10. '#' → logprob: -13.584604263305664

Token 196: ' bis' (ID: 7204)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.431602418422699
    2. 'ect' → logprob: -1.0566024780273438
    3. 't' → logprob: -6.806602478027344
    4. 'sect' → logprob: -7.056602478027344
    5. 'c' → logprob: -7.931602478027344
    6. 'n' → logprob: -9.306602478027344
    7. 'cut' → logprob: -9.806602478027344
    8. 's' → logprob: -10.056602478027344
    9. ',' → logprob: -10.181602478027344
    10. 'ects' → logprob: -10.556602478027344

Token 198: ' spécialis' (ID: 62095)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.6303465366363525
    2. '<|end|>' → logprob: -1.0053465366363525
    3. 'es' → logprob: -3.2553465366363525
    4. 'import' → logprob: -3.3803465366363525
    5. '_' → logprob: -4.755346298217773
    6. ',' → logprob: -4.755346298217773
    7. ')' → logprob: -5.255346298217773
    8. 'isées' → logprob: -7.380346298217773
    9. '<|end|>' → logprob: -7.380346298217773
    10. 'ifiées' → logprob: -7.755346298217773

Token 200: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: 're' (ID: 264)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036461607087403536
    2. ' )' → logprob: -5.628646373748779
    3. ',' → logprob: -11.003645896911621
    4. '<|end|>' → logprob: -11.628645896911621
    5. ')
' → logprob: -12.128645896911621
    6. '')' → logprob: -13.003645896911621
    7. ' ' → logprob: -13.253645896911621
    8. '")' → logprob: -13.378645896911621
    9. 'bis' → logprob: -13.628645896911621
    10. ')#' → logprob: -13.878645896911621

Token 202: 'cherche' (ID: 69094)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4553009569644928
    2. 'g' → logprob: -2.58030104637146
    3. ')' → logprob: -3.08030104637146
    4. 'quired' → logprob: -3.45530104637146
    5. 'place' → logprob: -3.58030104637146
    6. 'split' → logprob: -3.95530104637146
    7. 'served' → logprob: -3.95530104637146
    8. 'versed' → logprob: -4.205300807952881
    9. 'search' → logprob: -4.330300807952881
    10. '```' → logprob: -4.330300807952881

Token 203: ' position' (ID: 4010)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030147885903716087
    2. '_)' → logprob: -4.280148029327393
    3. ',' → logprob: -4.780148029327393
    4. '_' → logprob: -5.530148029327393
    5. '_left' → logprob: -7.155148029327393
    6. '_,' → logprob: -7.405148029327393
    7. '_right' → logprob: -7.530148029327393
    8. '_exact' → logprob: -7.655148029327393
    9. '_b' → logprob: -8.405147552490234
    10. ' )' → logprob: -9.030147552490234

Token 204: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012572570703923702
    2. ' )' → logprob: -7.126257419586182
    3. '_' → logprob: -8.376256942749023
    4. ',' → logprob: -9.001256942749023
    5. '_)' → logprob: -9.751256942749023
    6. ')_' → logprob: -11.251256942749023
    7. 's' → logprob: -11.751256942749023
    8. '(' → logprob: -12.876256942749023
    9. 'import' → logprob: -13.001256942749023
    10. ' ' → logprob: -13.001256942749023

Token 205: ''in' (ID: 17942)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5634351968765259
    2. ''' → logprob: -2.1884350776672363
    3. 'élé' → logprob: -2.5634350776672363
    4. 'in' → logprob: -2.6884350776672363
    5. ''in' → logprob: -3.0634350776672363
    6. '')' → logprob: -3.3134350776672363
    7. 'e' → logprob: -4.063435077667236
    8. ''un' → logprob: -4.063435077667236
    9. ''une' → logprob: -4.438435077667236
    10. 'ans' → logprob: -5.313435077667236

Token 206: 'sertion' (ID: 21747)
  Prédit: 'sertion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sertion' → logprob: -0.0009069374646060169
    2. 'sert' → logprob: -7.125906944274902
    3. 's' → logprob: -9.625906944274902
    4. '```' → logprob: -11.375906944274902
    5. 'dex' → logprob: -11.750906944274902
    6. 'sort' → logprob: -11.875906944274902
    7. 'ser' → logprob: -12.875906944274902
    8. 'd' → logprob: -13.500906944274902
    9. ' sert' → logprob: -14.000906944274902
    10. '' → logprob: -14.750906944274902

Token 207: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009350438485853374
    2. ' )' → logprob: -7.000935077667236
    3. ',' → logprob: -11.375934600830078
    4. '_' → logprob: -12.250934600830078
    5. ' ' → logprob: -12.750934600830078
    6. '#' → logprob: -13.625934600830078
    7. 's' → logprob: -14.625934600830078
    8. 'import' → logprob: -15.000934600830078
    9. ')#' → logprob: -15.125934600830078
    10. '(' → logprob: -15.125934600830078

Token 208: ' gauche' (ID: 58367)
  Prédit: ' droite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.8203115463256836
    2. ')' → logprob: -1.0703115463256836
    3. 'dro' → logprob: -1.9453115463256836
    4. ' gauche' → logprob: -2.9453115463256836
    5. ' )' → logprob: -5.320311546325684
    6. ',' → logprob: -5.695311546325684
    7. 'g' → logprob: -6.070311546325684
    8. ' une' → logprob: -6.195311546325684
    9. 'une' → logprob: -6.320311546325684
    10. 'liste' → logprob: -7.070311546325684

Token 209: '/d' (ID: 6662)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01035420410335064
    2. ',' → logprob: -4.760354042053223
    3. ' )' → logprob: -6.385354042053223
    4. 'import' → logprob: -11.010354042053223
    5. ')#' → logprob: -12.010354042053223
    6. ',)' → logprob: -12.135354042053223
    7. '),' → logprob: -12.135354042053223
    8. ')
' → logprob: -12.510354042053223
    9. ' ,' → logprob: -12.760354042053223
    10. '#' → logprob: -13.010354042053223

Token 210: 'ro' (ID: 298)
  Prédit: 'ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.009428560733795166
    2. 'roit' → logprob: -5.38442850112915
    3. 'dro' → logprob: -5.63442850112915
    4. ' droite' → logprob: -7.75942850112915
    5. '```' → logprob: -8.634428977966309
    6. 'roits' → logprob: -9.384428977966309
    7. '#' → logprob: -9.509428977966309
    8. '-dro' → logprob: -9.759428977966309
    9. ',' → logprob: -10.009428977966309
    10. 'e' → logprob: -10.384428977966309

Token 211: 'ite' (ID: 651)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.19677965342998505
    2. 'ite' → logprob: -2.071779727935791
    3. 'roit' → logprob: -4.196779727935791
    4. 'r' → logprob: -4.946779727935791
    5. 'tro' → logprob: -4.946779727935791
    6. 't' → logprob: -4.946779727935791
    7. 'e' → logprob: -5.571779727935791
    8. ')' → logprob: -5.696779727935791
    9. 'te' → logprob: -6.446779727935791
    10. '#' → logprob: -7.196779727935791

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012475410767365247
    2. ' )' → logprob: -9.00012493133545
    3. '#' → logprob: -14.75012493133545
    4. ',' → logprob: -14.87512493133545
    5. ')#' → logprob: -15.25012493133545
    6. 'import' → logprob: -16.625123977661133
    7. ')
' → logprob: -16.750123977661133
    8. '()' → logprob: -17.000123977661133
    9. '`)' → logprob: -17.250123977661133
    10. ')

' → logprob: -17.625123977661133

Token 213: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: ' math' (ID: 13324)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.41469594836235046
    2. ' operator' → logprob: -1.6646959781646729
    3. ' os' → logprob: -2.914695978164673
    4. 'operator' → logprob: -3.789695978164673
    5. 'os' → logprob: -4.039695739746094
    6. ' typing' → logprob: -4.289695739746094
    7. ' collections' → logprob: -5.039695739746094
    8. ' math' → logprob: -5.164695739746094
    9. 'collections' → logprob: -5.414695739746094
    10. ' heap' → logprob: -5.664695739746094

Token 215: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.17983832955360413
    2. 'import' → logprob: -1.8048382997512817
    3. '_import' → logprob: -10.304838180541992
    4. ' ' → logprob: -10.679838180541992
    5. '	import' → logprob: -11.679838180541992
    6. '_' → logprob: -11.929838180541992
    7. '<|end|>' → logprob: -12.054838180541992
    8. ' ' → logprob: -12.679838180541992
    9. 's' → logprob: -12.929838180541992
    10. ' sqrt' → logprob: -13.179838180541992

Token 216: ' factorial' (ID: 111204)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.9899425506591797
    2. ' gcd' → logprob: -1.7399425506591797
    3. ' ceil' → logprob: -2.1149425506591797
    4. ' inf' → logprob: -2.1149425506591797
    5. ' factorial' → logprob: -2.3649425506591797
    6. 'sqrt' → logprob: -2.3649425506591797
    7. 'ceil' → logprob: -3.9899425506591797
    8. 'inf' → logprob: -6.11494255065918
    9. ' comb' → logprob: -7.23994255065918
    10. '```' → logprob: -7.36494255065918

Token 217: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.6259177327156067
    2. ' gcd' → logprob: -1.625917673110962
    3. 'g' → logprob: -1.875917673110962
    4. ' sqrt' → logprob: -3.250917673110962
    5. 'ceil' → logprob: -3.500917673110962
    6. ' comb' → logprob: -4.000917911529541
    7. 'is' → logprob: -4.250917911529541
    8. ' ceil' → logprob: -5.500917911529541
    9. 'comb' → logprob: -5.500917911529541
    10. 'log' → logprob: -5.750917911529541

Token 219: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' floor' (ID: 8350)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.3167630434036255
    2. ' floor' → logprob: -1.3167630434036255
    3. 'sqrt' → logprob: -6.316762924194336
    4. 'log' → logprob: -6.941762924194336
    5. ' sqrt' → logprob: -8.191762924194336
    6. ' gcd' → logprob: -8.941762924194336
    7. 'fabs' → logprob: -9.191762924194336
    8. 'inf' → logprob: -9.441762924194336
    9. 'g' → logprob: -9.566762924194336
    10. ' inf' → logprob: -10.441762924194336

Token 221: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' factor' (ID: 12332)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.6713346242904663
    2. ' gcd' → logprob: -1.5463346242904663
    3. ' sqrt' → logprob: -1.9213346242904663
    4. 'log' → logprob: -2.671334743499756
    5. 'g' → logprob: -3.796334743499756
    6. 'inf' → logprob: -4.671334743499756
    7. 'pow' → logprob: -5.046334743499756
    8. 'fabs' → logprob: -5.421334743499756
    9. ' comb' → logprob: -5.546334743499756
    10. 'is' → logprob: -5.671334743499756

Token 224: 'ielle' (ID: 22380)
  Prédit: 'ial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.03475382179021835
    2. ',' → logprob: -3.7847537994384766
    3. 'ielle' → logprob: -5.284753799438477
    4. 'ials' → logprob: -5.659753799438477
    5. '```' → logprob: -6.534753799438477
    6. 'iel' → logprob: -7.534753799438477
    7. 'ialize' → logprob: -7.784753799438477
    8. 'math' → logprob: -8.784753799438477
    9. 'ialis' → logprob: -9.784753799438477
    10. 'iels' → logprob: -10.659753799438477

Token 225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.351616770029068
    2. '<|end|>' → logprob: -1.2266167402267456
    3. ')' → logprob: -6.226616859436035
    4. ' ' → logprob: -8.226616859436035
    5. '<|end|>' → logprob: -8.226616859436035
    6. 'import' → logprob: -8.726616859436035
    7. '()' → logprob: -8.851616859436035
    8. '(' → logprob: -9.851616859436035
    9. '.' → logprob: -9.976616859436035
    10. ' ,' → logprob: -10.101616859436035

Token 226: ' plafond' (ID: 114829)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.083577960729599
    2. 'log' → logprob: -3.083577871322632
    3. 'fabs' → logprob: -4.583578109741211
    4. 'g' → logprob: -4.833578109741211
    5. ' sqrt' → logprob: -4.958578109741211
    6. 'pow' → logprob: -5.583578109741211
    7. 'inf' → logprob: -6.333578109741211
    8. 'exp' → logprob: -6.708578109741211
    9. ' gcd' → logprob: -7.083578109741211
    10. 'is' → logprob: -7.333578109741211

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0797666609287262
    2. '<|end|>' → logprob: -2.5797667503356934
    3. '<|end|>' → logprob: -8.704766273498535
    4. ')' → logprob: -8.829766273498535
    5. '#' → logprob: -9.079766273498535
    6. 'import' → logprob: -9.204766273498535
    7. 'from' → logprob: -9.704766273498535
    8. '
' → logprob: -9.829766273498535
    9. ',
' → logprob: -10.079766273498535
    10. ' ,' → logprob: -10.204766273498535

Token 228: ' plan' (ID: 3496)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.7348619699478149
    2. 'log' → logprob: -1.234861969947815
    3. ' sqrt' → logprob: -2.6098618507385254
    4. 'fabs' → logprob: -2.9848618507385254
    5. 'tr' → logprob: -3.2348618507385254
    6. 'round' → logprob: -4.359861850738525
    7. ' log' → logprob: -4.734861850738525
    8. ' fabs' → logprob: -4.984861850738525
    9. ' trunc' → logprob: -4.984861850738525
    10. 'pow' → logprob: -5.109861850738525

Token 229: 'cher' (ID: 6665)
  Prédit: 'cher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.1657397747039795
    2. 'k' → logprob: -2.9157397747039795
    3. 'ar' → logprob: -3.9157397747039795
    4. 'e' → logprob: -3.9157397747039795
    5. 'def' → logprob: -4.290740013122559
    6. 'ck' → logprob: -4.415740013122559
    7. 't' → logprob: -4.915740013122559
    8. 'import' → logprob: -5.540740013122559
    9. 'r' → logprob: -5.915740013122559
    10. '#' → logprob: -6.040740013122559

Token 230: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: ''un' (ID: 9788)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.08259422332048416
    2. 'iv' → logprob: -3.707594156265259
    3. ''un' → logprob: -4.457594394683838
    4. 'e' → logprob: -4.582594394683838
    5. 'é' → logprob: -4.832594394683838
    6. 'ivid' → logprob: -5.082594394683838
    7. 'nombre' → logprob: -5.082594394683838
    8. ''une' → logprob: -5.207594394683838
    9. 'un' → logprob: -6.832594394683838
    10. ' nombres' → logprob: -7.082594394683838

Token 232: ' flott' (ID: 108700)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.004718245472759008
    2. ' nombre' → logprob: -6.12971830368042
    3. 'expression' → logprob: -7.00471830368042
    4. 'float' → logprob: -7.75471830368042
    5. 'argument' → logprob: -8.129717826843262
    6. 'number' → logprob: -9.004717826843262
    7. 'n' → logprob: -9.004717826843262
    8. 'x' → logprob: -9.254717826843262
    9. 'Nombre' → logprob: -9.504717826843262
    10. '#' → logprob: -9.754717826843262

Token 233: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.0440222024917603
    2. 'point' → logprob: -1.5440222024917603
    3. '-point' → logprob: -1.7940222024917603
    4. ' ' → logprob: -2.2940220832824707
    5. 'ement' → logprob: -3.2940220832824707
    6. ')' → logprob: -3.5440220832824707
    7. ',' → logprob: -4.044022083282471
    8. ' point' → logprob: -4.044022083282471
    9. 'e' → logprob: -4.294022083282471
    10. '_point' → logprob: -4.544022083282471

Token 234: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 235: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.5131689310073853
    2. 'operator' → logprob: -1.5131689310073853
    3. ' functools' → logprob: -3.0131688117980957
    4. 'fra' → logprob: -3.7631688117980957
    5. ' fractions' → logprob: -3.7631688117980957
    6. ' decimal' → logprob: -4.013168811798096
    7. 'decimal' → logprob: -4.263168811798096
    8. 'datetime' → logprob: -4.388168811798096
    9. 'os' → logprob: -4.388168811798096
    10. ' statistics' → logprob: -4.888168811798096

Token 237: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16025499999523163
    2. 'import' → logprob: -1.910254955291748
    3. '	import' → logprob: -10.910255432128906
    4. '_import' → logprob: -12.160255432128906
    5. ' ' → logprob: -12.410255432128906
    6. '<|end|>' → logprob: -13.035255432128906
    7. ' importar' → logprob: -15.410255432128906
    8. ' ' → logprob: -16.160255432128906
    9. 's' → logprob: -16.285255432128906
    10. 'Import' → logprob: -16.410255432128906

Token 238: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.01765265129506588
    2. 'item' → logprob: -4.26765251159668
    3. ' attr' → logprob: -5.89265251159668
    4. ' add' → logprob: -7.76765251159668
    5. 'attr' → logprob: -9.26765251159668
    6. ' mul' → logprob: -9.26765251159668
    7. ' ' → logprob: -10.51765251159668
    8. 'add' → logprob: -11.14265251159668
    9. '=item' → logprob: -11.39265251159668
    10. '.item' → logprob: -11.39265251159668

Token 239: '                          ' (ID: 12397)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0430559404194355
    2. '<|end|>' → logprob: -3.543056011199951
    3. ' ,' → logprob: -4.668056011199951
    4. 'import' → logprob: -6.168056011199951
    5. ' ' → logprob: -6.793056011199951
    6. ' import' → logprob: -7.793056011199951
    7. '<|end|>' → logprob: -9.168055534362793
    8. ' ' → logprob: -10.918055534362793
    9. ',
' → logprob: -11.293055534362793
    10. ' as' → logprob: -11.980555534362793

Token 240: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008775054477155209
    2. '<|end|>' → logprob: -5.758775234222412
    3. ' ,' → logprob: -5.883775234222412
    4. 'import' → logprob: -6.008775234222412
    5. ' import' → logprob: -8.258774757385254
    6. ' ' → logprob: -10.883774757385254
    7. '<|end|>' → logprob: -10.883774757385254
    8. ' as' → logprob: -11.633774757385254
    9. ',
' → logprob: -11.758774757385254
    10. 'from' → logprob: -12.758774757385254

Token 241: ' opér' (ID: 65915)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.5343136787414551
    2. 'item' → logprob: -1.409313678741455
    3. 'import' → logprob: -3.159313678741455
    4. ' import' → logprob: -3.409313678741455
    5. ' mul' → logprob: -3.659313678741455
    6. ' add' → logprob: -3.909313678741455
    7. 'add' → logprob: -4.159313678741455
    8. 'operator' → logprob: -4.659313678741455
    9. 'mul' → logprob: -4.659313678741455
    10. ' operator' → logprob: -5.159313678741455

Token 242: 'ateur' (ID: 12477)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.0002087853499688208
    2. 'a' → logprob: -8.750208854675293
    3. 'at' → logprob: -10.250208854675293
    4. 'ater' → logprob: -12.875208854675293
    5. 'ato' → logprob: -13.125208854675293
    6. 'ateur' → logprob: -13.125208854675293
    7. ' a' → logprob: -13.500208854675293
    8. 'artor' → logprob: -13.625208854675293
    9. ' ator' → logprob: -14.000208854675293
    10. 'er' → logprob: -14.375208854675293

Token 243: ' multiplication' (ID: 86340)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8932525515556335
    2. '_' → logprob: -1.2682526111602783
    3. '<|end|>' → logprob: -1.2682526111602783
    4. 'import' → logprob: -3.8932526111602783
    5. ')' → logprob: -6.143252372741699
    6. ' ,' → logprob: -6.393252372741699
    7. ' import' → logprob: -6.893252372741699
    8. ' ' → logprob: -7.018252372741699
    9. '<|end|>' → logprob: -8.2682523727417
    10. '*' → logprob: -8.2682523727417

Token 244: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3593885600566864
    2. '<|end|>' → logprob: -1.4843885898590088
    3. '
' → logprob: -3.734388589859009
    4. '.' → logprob: -4.23438835144043
    5. '_' → logprob: -4.60938835144043
    6. ',
' → logprob: -4.73438835144043
    7. '#' → logprob: -5.10938835144043
    8. 'import' → logprob: -6.10938835144043
    9. ' ' → logprob: -6.48438835144043
    10. ')' → logprob: -6.73438835144043

Token 245: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' functools' (ID: 142636)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.8073160648345947
    2. ' functools' → logprob: -0.8073160648345947
    3. 'fun' → logprob: -2.4323160648345947
    4. ' operator' → logprob: -3.9323160648345947
    5. 'os' → logprob: -8.307315826416016
    6. 'heap' → logprob: -10.182315826416016
    7. ' itertools' → logprob: -10.682315826416016
    8. 'sys' → logprob: -10.682315826416016
    9. '_' → logprob: -10.807315826416016
    10. 'copy' → logprob: -10.807315826416016

Token 247: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023304643109440804
    2. 'import' → logprob: -3.7733047008514404
    3. '_import' → logprob: -9.89830493927002
    4. ' ' → logprob: -12.52330493927002
    5. '	import' → logprob: -13.27330493927002
    6. '_' → logprob: -13.39830493927002
    7. ' ' → logprob: -14.52330493927002
    8. 'from' → logprob: -14.89830493927002
    9. ' _' → logprob: -15.39830493927002
    10. ' importar' → logprob: -15.39830493927002

Token 248: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5773645639419556
    2. ' reduce' → logprob: -1.0773645639419556
    3. ' l' → logprob: -2.577364444732666
    4. 'l' → logprob: -3.827364444732666
    5. ' partial' → logprob: -8.577364921569824
    6. 'partial' → logprob: -8.827364921569824
    7. 'cmp' → logprob: -11.577364921569824
    8. '.reduce' → logprob: -11.827364921569824
    9. 'redu' → logprob: -11.827364921569824
    10. '_reduce' → logprob: -11.827364921569824

Token 249: '                      ' (ID: 10682)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9276085495948792
    2. ' ' → logprob: -1.1776084899902344
    3. '<|end|>' → logprob: -1.5526084899902344
    4. 'import' → logprob: -3.1776084899902344
    5. ' import' → logprob: -3.5526084899902344
    6. ' ,' → logprob: -4.802608489990234
    7. '<|end|>' → logprob: -6.052608489990234
    8. '_' → logprob: -7.052608489990234
    9. 'from' → logprob: -7.552608489990234
    10. '(' → logprob: -7.802608489990234

Token 250: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7021865844726562
    2. ',' → logprob: -1.0771865844726562
    3. '<|end|>' → logprob: -2.2021865844726562
    4. 'import' → logprob: -3.5771865844726562
    5. ' import' → logprob: -4.077186584472656
    6. ' ,' → logprob: -5.077186584472656
    7. '<|end|>' → logprob: -7.452186584472656
    8. 'from' → logprob: -8.202186584472656
    9. '_' → logprob: -8.327186584472656
    10. ')' → logprob: -8.452186584472656

Token 251: ' appliquer' (ID: 172872)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.23402202129364014
    2. 'partial' → logprob: -2.2340221405029297
    3. ' reduce' → logprob: -2.6090221405029297
    4. ' partial' → logprob: -3.7340221405029297
    5. ' l' → logprob: -6.10902214050293
    6. 'l' → logprob: -7.35902214050293
    7. 'wrap' → logprob: -7.85902214050293
    8. ' wraps' → logprob: -8.48402214050293
    9. 'import' → logprob: -8.73402214050293
    10. 'redu' → logprob: -8.73402214050293

Token 252: ' une' (ID: 2463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' fonction' (ID: 17610)
  Prédit: ' function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' function' → logprob: -0.3067561089992523
    2. 'function' → logprob: -1.9317561388015747
    3. 'fonction' → logprob: -2.306756019592285
    4. ' fonction' → logprob: -3.931756019592285
    5. 'func' → logprob: -10.806756019592285
    6. 'unction' → logprob: -10.931756019592285
    7. '(function' → logprob: -11.931756019592285
    8. ' func' → logprob: -12.181756019592285
    9. ',function' → logprob: -12.306756019592285
    10. 'f' → logprob: -12.306756019592285

Token 254: ' cumul' (ID: 163119)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: 'ativement' (ID: 159073)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.40425920486450195
    2. 'ative' → logprob: -1.279259204864502
    3. 'er' → logprob: -4.154259204864502
    4. 'ation' → logprob: -4.154259204864502
    5. 'ateur' → logprob: -4.654259204864502
    6. 'ator' → logprob: -5.904259204864502
    7. 'a' → logprob: -6.529259204864502
    8. 'ativement' → logprob: -6.529259204864502
    9. 'atif' → logprob: -6.654259204864502
    10. 'at' → logprob: -6.904259204864502

Token 256: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' une' (ID: 2463)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.5030023455619812
    2. '<|end|>' → logprob: -1.253002405166626
    3. 'sequence' → logprob: -2.878002405166626
    4. ' sequence' → logprob: -4.128002166748047
    5. ' iterable' → logprob: -4.628002166748047
    6. ' a' → logprob: -5.878002166748047
    7. 'se' → logprob: -5.878002166748047
    8. 's' → logprob: -6.003002166748047
    9. 'a' → logprob: -6.128002166748047
    10. 'list' → logprob: -6.128002166748047

Token 258: ' sé' (ID: 7462)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.3895193636417389
    2. ' sequence' → logprob: -1.1395193338394165
    3. 'list' → logprob: -6.389519214630127
    4. ' iterable' → logprob: -7.764519214630127
    5. ' sequences' → logprob: -8.389519691467285
    6. ' list' → logprob: -8.639519691467285
    7. 'seq' → logprob: -9.889519691467285
    8. 'iter' → logprob: -10.514519691467285
    9. '_sequence' → logprob: -11.264519691467285
    10. 's' → logprob: -11.889519691467285

Token 259: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00027611342375166714
    2. 'rie' → logprob: -8.375276565551758
    3. 'ries' → logprob: -10.250276565551758
    4. 'quences' → logprob: -12.500276565551758
    5. 'QUENCE' → logprob: -12.750276565551758
    6. 'r' → logprob: -13.250276565551758
    7. 'qu' → logprob: -14.625276565551758
    8. 'q' → logprob: -15.125276565551758
    9. '#' → logprob: -15.250276565551758
    10. 'rence' → logprob: -15.500276565551758

Token 260: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 262: ' Dé' (ID: 27247)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4499033987522125
    2. '<|end|>' → logprob: -1.3249033689498901
    3. '
' → logprob: -3.5749034881591797
    4. 'import' → logprob: -3.6999034881591797
    5. '\n' → logprob: -4.32490348815918
    6. ' ' → logprob: -4.32490348815918
    7. '<|end|>' → logprob: -5.32490348815918
    8. 'def' → logprob: -5.57490348815918
    9. 'n' → logprob: -6.44990348815918
    10. '

' → logprob: -6.82490348815918

Token 263: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5761197209358215
    2. 'fin' → logprob: -0.8261197209358215
    3. 'veloppement' → logprob: -9.326119422912598
    4. '#' → logprob: -10.451119422912598
    5. 'fi' → logprob: -11.451119422912598
    6. 'fen' → logprob: -11.451119422912598
    7. 'claration' → logprob: -11.701119422912598
    8. 'fn' → logprob: -12.076119422912598
    9. 'scription' → logprob: -12.201119422912598
    10. 'termination' → logprob: -12.576119422912598

Token 264: 'ir' (ID: 380)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.00687521044164896
    2. 'ir' → logprob: -5.006875038146973
    3. 'inition' → logprob: -9.131875038146973
    4. '#' → logprob: -10.881875038146973
    5. 'itions' → logprob: -11.381875038146973
    6. 'tion' → logprob: -12.256875038146973
    7. 'itional' → logprob: -12.631875038146973
    8. 'e' → logprob: -12.881875038146973
    9. 'ission' → logprob: -12.881875038146973
    10. 'issement' → logprob: -13.256875038146973

Token 265: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0812615156173706
    2. 'class' → logprob: -2.83126163482666
    3. ' def' → logprob: -5.08126163482666
    4. '<|end|>' → logprob: -5.33126163482666
    5. 'import' → logprob: -6.20626163482666
    6. '#' → logprob: -6.58126163482666
    7. '_' → logprob: -6.83126163482666
    8. '__' → logprob: -6.83126163482666
    9. ' class' → logprob: -6.95626163482666
    10. ' ' → logprob: -8.58126163482666

Token 266: ' limite' (ID: 48939)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0096973180770874
    2. 'class' → logprob: -1.6346973180770874
    3. ' class' → logprob: -1.7596973180770874
    4. ' fonction' → logprob: -2.884697437286377
    5. ' classe' → logprob: -3.384697437286377
    6. 'def' → logprob: -3.509697437286377
    7. ' function' → logprob: -3.509697437286377
    8. 'fonction' → logprob: -3.634697437286377
    9. 'classe' → logprob: -3.759697437286377
    10. ' variable' → logprob: -4.384697437286377

Token 267: ' maximale' (ID: 76380)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4563273787498474
    2. 'import' → logprob: -1.7063274383544922
    3. '_sys' → logprob: -2.456327438354492
    4. '=sys' → logprob: -2.706327438354492
    5. '_rec' → logprob: -3.956327438354492
    6. 's' → logprob: -5.831327438354492
    7. '_' → logprob: -5.956327438354492
    8. '(sys' → logprob: -5.956327438354492
    9. ' sys' → logprob: -6.456327438354492
    10. 'rec' → logprob: -7.081327438354492

Token 268: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.45915573835372925
    2. '_' → logprob: -1.709155797958374
    3. '=sys' → logprob: -2.834155797958374
    4. 'import' → logprob: -2.959155797958374
    5. '_sys' → logprob: -3.459155797958374
    6. '_rec' → logprob: -3.459155797958374
    7. '(sys' → logprob: -5.584155559539795
    8. ' sys' → logprob: -6.209155559539795
    9. 'rec' → logprob: -6.334155559539795
    10. ' =' → logprob: -6.709155559539795

Token 269: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0014576163375750184
    2. 'r' → logprob: -7.626457691192627
    3. 'sys' → logprob: -8.251457214355469
    4. ' recursion' → logprob: -8.876457214355469
    5. 'recursive' → logprob: -9.126457214355469
    6. 'ré' → logprob: -9.126457214355469
    7. '_rec' → logprob: -9.251457214355469
    8. 'la' → logprob: -9.376457214355469
    9. 're' → logprob: -9.501457214355469
    10. ' réc' → logprob: -9.876457214355469

Token 270: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0024132307153195143
    2. 'urs' → logprob: -6.252413272857666
    3. 'ur' → logprob: -7.752413272857666
    4. 'usion' → logprob: -10.502412796020508
    5. 'usr' → logprob: -12.002412796020508
    6. 'ursive' → logprob: -12.377412796020508
    7. '**' → logprob: -12.502412796020508
    8. '#' → logprob: -12.752412796020508
    9. '##' → logprob: -13.002412796020508
    10. '_' → logprob: -13.377412796020508

Token 271: ' à' (ID: 1221)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0031855558045208454
    2. 'import' → logprob: -5.753185749053955
    3. ' sys' → logprob: -12.628185272216797
    4. '(sys' → logprob: -13.628185272216797
    5. '=sys' → logprob: -13.753185272216797
    6. '#' → logprob: -14.003185272216797
    7. ':' → logprob: -14.628185272216797
    8. 'set' → logprob: -14.628185272216797
    9. '```' → logprob: -16.003185272216797
    10. '_sys' → logprob: -16.003185272216797

Token 272: ' un' (ID: 537)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004690118599683046
    2. '10' → logprob: -5.754690170288086
    3. '300' → logprob: -7.004690170288086
    4. '500' → logprob: -7.629690170288086
    5. '200' → logprob: -10.004690170288086
    6. '150' → logprob: -10.504690170288086
    7. '250' → logprob: -11.129690170288086
    8. '400' → logprob: -11.504690170288086
    9. 'sys' → logprob: -11.629690170288086
    10. ' ' → logprob: -11.754690170288086

Token 273: ' très' (ID: 9412)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0695599839091301
    2. 'large' → logprob: -3.9445600509643555
    3. 'certain' → logprob: -4.3195600509643555
    4. '500' → logprob: -4.8195600509643555
    5. 'import' → logprob: -5.0695600509643555
    6. 'niveau' → logprob: -5.5695600509643555
    7. 'maximum' → logprob: -6.1945600509643555
    8. '10' → logprob: -6.1945600509643555
    9. 'int' → logprob: -6.4445600509643555
    10. '1' → logprob: -6.8195600509643555

Token 274: ' grand' (ID: 6363)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0513778924942017
    2. 'large' → logprob: -1.1763778924942017
    3. 'high' → logprob: -1.1763778924942017
    4. ' high' → logprob: -4.676377773284912
    5. 'haut' → logprob: -4.926377773284912
    6. '100' → logprob: -5.301377773284912
    7. ' large' → logprob: -5.551377773284912
    8. ' élevé' → logprob: -6.301377773284912
    9. ' haut' → logprob: -6.676377773284912
    10. 'é' → logprob: -7.301377773284912

Token 275: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.48411163687705994
    2. '_nombre' → logprob: -1.1091116666793823
    3. ' nombre' → logprob: -3.7341115474700928
    4. 'niveau' → logprob: -4.859111785888672
    5. '_' → logprob: -5.234111785888672
    6. '_n' → logprob: -5.859111785888672
    7. 'val' → logprob: -5.984111785888672
    8. 'int' → logprob: -6.109111785888672
    9. '_number' → logprob: -6.234111785888672
    10. 'number' → logprob: -6.734111785888672

Token 276: ' pour' (ID: 1930)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -8.292095299111679e-05
    2. ' sys' → logprob: -9.875082969665527
    3. '(sys' → logprob: -11.125082969665527
    4. 'import' → logprob: -11.250082969665527
    5. '=sys' → logprob: -13.250082969665527
    6. ':' → logprob: -13.875082969665527
    7. '#' → logprob: -15.125082969665527
    8. '_sys' → logprob: -15.125082969665527
    9. '100' → logprob: -16.37508201599121
    10. ')' → logprob: -16.50008201599121

Token 277: ' éviter' (ID: 64013)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1732654571533203
    2. 'sys' → logprob: -3.0482654571533203
    3. 'prevent' → logprob: -3.5482654571533203
    4. 'import' → logprob: -3.7982654571533203
    5. 'allow' → logprob: -4.04826545715332
    6. '10' → logprob: -4.29826545715332
    7. ' éviter' → logprob: -4.79826545715332
    8. ' permettre' → logprob: -5.54826545715332
    9. '500' → logprob: -6.04826545715332
    10. 'int' → logprob: -6.29826545715332

Token 278: ' les' (ID: 1341)
  Prédit: ' Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.4412881135940552
    2. 'Rec' → logprob: -1.1912881135940552
    3. ' recursion' → logprob: -3.3162879943847656
    4. ' Runtime' → logprob: -4.691287994384766
    5. ' sys' → logprob: -5.816287994384766
    6. 'Runtime' → logprob: -6.691287994384766
    7. '_rec' → logprob: -6.941287994384766
    8. 'sys' → logprob: -7.691287994384766
    9. 'rec' → logprob: -7.941287994384766
    10. ' l' → logprob: -8.316287994384766

Token 279: ' erreurs' (ID: 139891)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.23501016199588776
    2. ' Rec' → logprob: -2.1100101470947266
    3. ' Runtime' → logprob: -3.1100101470947266
    4. 'Runtime' → logprob: -3.2350101470947266
    5. 'Overflow' → logprob: -6.610010147094727
    6. ' erreurs' → logprob: -6.860010147094727
    7. ' recursion' → logprob: -7.735010147094727
    8. 'rec' → logprob: -7.735010147094727
    9. ' dépasse' → logprob: -7.860010147094727
    10. ' problèmes' → logprob: -9.110010147094727

Token 280: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00027420982951298356
    2. 'import' → logprob: -8.875274658203125
    3. ' sys' → logprob: -9.125274658203125
    4. '(sys' → logprob: -10.750274658203125
    5. '=sys' → logprob: -13.375274658203125
    6. '_sys' → logprob: -13.875274658203125
    7. ':' → logprob: -14.500274658203125
    8. 'set' → logprob: -14.750274658203125
    9. 'rec' → logprob: -15.000274658203125
    10. '_' → logprob: -16.250274658203125

Token 281: ' réc' (ID: 36254)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.5299509763717651
    2. 'rec' → logprob: -0.9049509763717651
    3. ' recursion' → logprob: -5.904951095581055
    4. ' Rec' → logprob: -6.279951095581055
    5. ' réc' → logprob: -6.904951095581055
    6. 'r' → logprob: -7.779951095581055
    7. 'depth' → logprob: -8.529951095581055
    8. 'stack' → logprob: -9.404951095581055
    9. 'Runtime' → logprob: -9.404951095581055
    10. 'd' → logprob: -9.654951095581055

Token 282: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.011432689614593983
    2. 'urs' → logprob: -5.011432647705078
    3. 'ur' → logprob: -5.386432647705078
    4. 'u' → logprob: -9.636432647705078
    5. 'usion' → logprob: -10.136432647705078
    6. 'urse' → logprob: -12.261432647705078
    7. 'ursive' → logprob: -13.136432647705078
    8. 'urrence' → logprob: -13.386432647705078
    9. 'c' → logprob: -13.636432647705078
    10. 'usr' → logprob: -13.636432647705078

Token 283: ' profonde' (ID: 82498)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002006199210882187
    2. 'import' → logprob: -6.8770060539245605
    3. ' sys' → logprob: -7.1270060539245605
    4. '(sys' → logprob: -8.877006530761719
    5. ':' → logprob: -11.502006530761719
    6. '=sys' → logprob: -11.627006530761719
    7. 'set' → logprob: -12.002006530761719
    8. '.' → logprob: -13.627006530761719
    9. '_sys' → logprob: -13.752006530761719
    10. '.sys' → logprob: -14.252006530761719

Token 284: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0078332694247365
    2. 'import' → logprob: -5.257833480834961
    3. '(sys' → logprob: -6.507833480834961
    4. ':' → logprob: -7.382833480834961
    5. ' sys' → logprob: -7.882833480834961
    6. '=sys' → logprob: -10.257833480834961
    7. '(' → logprob: -10.882833480834961
    8. ',' → logprob: -11.632833480834961
    9. '_sys' → logprob: -11.882833480834961
    10. '.' → logprob: -11.882833480834961

Token 285: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004212594940327108
    2. ' sys' → logprob: -8.250421524047852
    3. 'import' → logprob: -8.750421524047852
    4. '(sys' → logprob: -13.875421524047852
    5. '=sys' → logprob: -15.250421524047852
    6. 'set' → logprob: -16.25042152404785
    7. '_sys' → logprob: -16.50042152404785
    8. '.sys' → logprob: -17.12542152404785
    9. '
' → logprob: -17.37542152404785
    10. '	sys' → logprob: -17.62542152404785

Token 286: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.008791719563305378
    2. '.setdefault' → logprob: -5.383791923522949
    3. '.' → logprob: -5.508791923522949
    4. ' .' → logprob: -9.88379192352295
    5. '.stdin' → logprob: -10.63379192352295
    6. '.stdout' → logprob: -11.13379192352295
    7. '.argv' → logprob: -11.50879192352295
    8. '.stderr' → logprob: -12.38379192352295
    9. '.exit' → logprob: -12.88379192352295
    10. '.Set' → logprob: -13.88379192352295

Token 287: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0002514455991331488
    2. '_rec' → logprob: -8.500251770019531
    3. 'limit' → logprob: -10.750251770019531
    4. ' recursion' → logprob: -11.250251770019531
    5. 'set' → logprob: -11.625251770019531
    6. 'sys' → logprob: -13.375251770019531
    7. 'Rec' → logprob: -14.625251770019531
    8. 'ursion' → logprob: -14.750251770019531
    9. '_limit' → logprob: -14.750251770019531
    10. 're' → logprob: -14.750251770019531

Token 288: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -4.961759259458631e-06
    2. 'limit' → logprob: -12.750004768371582
    3. '_limit' → logprob: -14.000004768371582
    4. 'usion' → logprob: -14.250004768371582
    5. 'ur' → logprob: -15.625004768371582
    6. 'urs' → logprob: -16.1250057220459
    7. 'ursive' → logprob: -16.6250057220459
    8. 'ersion' → logprob: -17.7500057220459
    9. 'ision' → logprob: -17.8750057220459
    10. 'urse' → logprob: -18.1250057220459

Token 289: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -7.52919222577475e-05
    2. '_limit' → logprob: -9.500075340270996
    3. ' limit' → logprob: -15.250075340270996
    4. 'lim' → logprob: -15.750075340270996
    5. 'depth' → logprob: -19.12507438659668
    6. '-limit' → logprob: -19.75007438659668
    7. 'Limit' → logprob: -20.87507438659668
    8. '.limit' → logprob: -20.87507438659668
    9. '_LIMIT' → logprob: -21.75007438659668
    10. '(limit' → logprob: -21.75007438659668

Token 290: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. ' (' → logprob: -14.875000953674316
    3. '((' → logprob: -15.125000953674316
    4. '(
' → logprob: -15.250000953674316
    5. '(

' → logprob: -15.750000953674316
    6. '(int' → logprob: -16.000001907348633
    7. '()' → logprob: -18.000001907348633
    8. '(
' → logprob: -19.000001907348633
    9. '(sys' → logprob: -19.125001907348633
    10. '100' → logprob: -19.125001907348633

Token 291: '214' (ID: 21401)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019287518225610256
    2. '100' → logprob: -6.251928806304932
    3. '1' → logprob: -16.126928329467773
    4. 'int' → logprob: -17.251928329467773
    5. '999' → logprob: -17.501928329467773
    6. '200' → logprob: -17.876928329467773
    7. '300' → logprob: -18.001928329467773
    8. ' ' → logprob: -18.376928329467773
    9. '400' → logprob: -19.001928329467773
    10. '500' → logprob: -19.001928329467773

Token 292: '748' (ID: 39478)
  Prédit: '748'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '748' → logprob: -0.0010431708069518209
    2. '7' → logprob: -7.001043319702148
    3. '747' → logprob: -9.876043319702148
    4. '700' → logprob: -10.126043319702148
    5. '743' → logprob: -11.376043319702148
    6. '738' → logprob: -11.376043319702148
    7. '728' → logprob: -12.001043319702148
    8. '783' → logprob: -12.751043319702148
    9. '746' → logprob: -13.001043319702148
    10. '74' → logprob: -13.501043319702148

Token 293: '364' (ID: 30673)
  Prédit: '364'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '364' → logprob: -6.749814019713085e-06
    2. '363' → logprob: -12.000006675720215
    3. '360' → logprob: -15.375006675720215
    4. '362' → logprob: -15.625006675720215
    5. '3' → logprob: -16.00000762939453
    6. '36' → logprob: -16.62500762939453
    7. '264' → logprob: -18.25000762939453
    8. '300' → logprob: -18.87500762939453
    9. '    
' → logprob: -19.00000762939453
    10. '361' → logprob: -19.12500762939453

Token 294: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.1637164789135568e-05
    2. '6' → logprob: -11.375011444091797
    3. ')' → logprob: -16.375011444091797
    4. '0' → logprob: -19.375011444091797
    5. '۷' → logprob: -21.625011444091797
    6. '```' → logprob: -21.625011444091797
    7. '")' → logprob: -21.875011444091797
    8. '７' → logprob: -22.125011444091797
    9. '   ' → logprob: -22.250011444091797
    10. '৭' → logprob: -22.625011444091797

Token 295: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.375000953674316
    4. '))' → logprob: -17.75
    5. ')#' → logprob: -18.25
    6. ')
' → logprob: -18.75
    7. ')

' → logprob: -19.125
    8. ')}' → logprob: -19.25
    9. ')`' → logprob: -19.5
    10. '),' → logprob: -19.625

Token 296: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08964645862579346
    2. '

' → logprob: -2.839646339416504
    3. 'def' → logprob: -4.089646339416504
    4. 'class' → logprob: -5.839646339416504
    5. '\n' → logprob: -6.214646339416504
    6. '#' → logprob: -6.339646339416504
    7. '<|end|>' → logprob: -6.339646339416504
    8. '<|end|>' → logprob: -6.839646339416504
    9. 'import' → logprob: -8.464646339416504
    10. '  
' → logprob: -8.714646339416504

Token 297: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04816360026597977
    2. '#' → logprob: -3.173163652420044
    3. 'import' → logprob: -6.048163414001465
    4. 'input' → logprob: -6.548163414001465
    5. 'class' → logprob: -6.798163414001465
    6. 'n' → logprob: -9.548163414001465
    7. 'DEBUG' → logprob: -10.673163414001465
    8. 'DEFAULT' → logprob: -10.923163414001465
    9. ' def' → logprob: -11.173163414001465
    10. 'from' → logprob: -11.298163414001465

Token 298: 'claration' (ID: 21396)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00806282926350832
    2. 'fin' → logprob: -4.883062839508057
    3. '#' → logprob: -8.633062362670898
    4. 'fi' → logprob: -8.883062362670898
    5. '
' → logprob: -9.383062362670898
    6. '```' → logprob: -11.133062362670898
    7. '``' → logprob: -12.008062362670898
    8. '

' → logprob: -12.133062362670898
    9. 'if' → logprob: -12.383062362670898
    10. 'r' → logprob: -12.758062362670898

Token 299: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11146552860736847
    2. 'class' → logprob: -3.3614654541015625
    3. 'max' → logprob: -3.7364654541015625
    4. 'variable' → logprob: -4.7364654541015625
    5. 'd' → logprob: -4.9864654541015625
    6. '#' → logprob: -5.2364654541015625
    7. 'n' → logprob: -5.4864654541015625
    8. '_variable' → logprob: -6.1114654541015625
    9. 'de' → logprob: -6.2364654541015625
    10. '_' → logprob: -6.2364654541015625

Token 300: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.32709160447120667
    2. 'ef' → logprob: -1.8270915746688843
    3. ''une' → logprob: -2.452091693878174
    4. 'une' → logprob: -4.577091693878174
    5. 'es' → logprob: -4.702091693878174
    6. ' =' → logprob: -6.327091693878174
    7. 'éf' → logprob: -6.452091693878174
    8. '_' → logprob: -6.452091693878174
    9. ' la' → logprob: -6.577091693878174
    10. ' une' → logprob: -6.952091693878174

Token 301: ' très' (ID: 9412)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.48036977648735046
    2. 'def' → logprob: -2.105369806289673
    3. 'classe' → logprob: -2.230369806289673
    4. 'variable' → logprob: -2.605369806289673
    5. 'default' → logprob: -3.230369806289673
    6. ' constante' → logprob: -5.105369567871094
    7. 'fonction' → logprob: -5.230369567871094
    8. 'dict' → logprob: -5.355369567871094
    9. 'const' → logprob: -5.605369567871094
    10. ' variable' → logprob: -5.855369567871094

Token 302: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.12369099259376526
    2. 'large' → logprob: -2.4986910820007324
    3. 'long' → logprob: -3.7486910820007324
    4. 'grand' → logprob: -4.748691082000732
    5. 'g' → logprob: -7.123691082000732
    6. 'fort' → logprob: -7.623691082000732
    7. 'ha' → logprob: -9.123690605163574
    8. 'bonne' → logprob: -9.248690605163574
    9. '```' → logprob: -9.248690605163574
    10. 'import' → logprob: -9.373690605163574

Token 303: ' constante' (ID: 49652)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06634950637817383
    2. 'const' → logprob: -2.816349506378174
    3. ' constante' → logprob: -5.816349506378174
    4. ' valeur' → logprob: -8.441349029541016
    5. 'liste' → logprob: -8.441349029541016
    6. 'constant' → logprob: -8.566349029541016
    7. 'value' → logprob: -8.691349029541016
    8. 'nombre' → logprob: -8.941349029541016
    9. 'int' → logprob: -9.191349029541016
    10. 'variable' → logprob: -9.566349029541016

Token 304: ' pour' (ID: 1930)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.1607854813337326
    2. 'MAX' → logprob: -1.910785436630249
    3. 'MOD' → logprob: -8.035785675048828
    4. 'IN' → logprob: -8.910785675048828
    5. 'INT' → logprob: -10.410785675048828
    6. ' INF' → logprob: -11.035785675048828
    7. '_INF' → logprob: -11.660785675048828
    8. 'MY' → logprob: -11.910785675048828
    9. 'LIMIT' → logprob: -12.160785675048828
    10. 'N' → logprob: -12.285785675048828

Token 305: ' représ' (ID: 31534)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.27060943841934204
    2. 'INF' → logprob: -1.7706093788146973
    3. ' l' → logprob: -3.5206093788146973
    4. 'MOD' → logprob: -4.020609378814697
    5. 'IN' → logprob: -5.270609378814697
    6. 'la' → logprob: -5.770609378814697
    7. 'inf' → logprob: -6.020609378814697
    8. 'INT' → logprob: -6.020609378814697
    9. 'MAX' → logprob: -6.270609378814697
    10. 'int' → logprob: -7.145609378814697

Token 306: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.00045677117304876447
    2. 'anter' → logprob: -7.750456809997559
    3. 'er' → logprob: -11.375456809997559
    4. 'ent' → logprob: -11.750456809997559
    5. 'ater' → logprob: -12.250456809997559
    6. 'ENTER' → logprob: -14.500456809997559
    7. 'ant' → logprob: -14.500456809997559
    8. 'entar' → logprob: -15.875456809997559
    9. 'entation' → logprob: -15.875456809997559
    10. 'onter' → logprob: -16.000455856323242

Token 307: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06646273285150528
    2. 'float' → logprob: -3.191462755203247
    3. 'inf' → logprob: -4.066462516784668
    4. ' l' → logprob: -5.566462516784668
    5. 'INF' → logprob: -7.066462516784668
    6. 'int' → logprob: -7.691462516784668
    7. '10' → logprob: -7.691462516784668
    8. '100' → logprob: -9.066462516784668
    9. 'L' → logprob: -9.066462516784668
    10. ' float' → logprob: -9.816462516784668

Token 308: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.014590521343052387
    2. 'inf' → logprob: -4.639590740203857
    3. 'in' → logprob: -6.264590740203857
    4. 'e' → logprob: -6.639590740203857
    5. 'a' → logprob: -8.1395902633667
    6. '_inf' → logprob: -8.2645902633667
    7. '_INFINITY' → logprob: -8.5145902633667
    8. 'INF' → logprob: -8.6395902633667
    9. 'IN' → logprob: -8.7645902633667
    10. ''' → logprob: -9.2645902633667

Token 309: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0059610335156321526
    2. 'float' → logprob: -5.255960941314697
    3. 'fin' → logprob: -7.755960941314697
    4. 'finity' → logprob: -8.880961418151855
    5. 'finite' → logprob: -9.130961418151855
    6. 'fi' → logprob: -10.505961418151855
    7. 'inf' → logprob: -11.880961418151855
    8. 'fl' → logprob: -12.005961418151855
    9. 'if' → logprob: -13.005961418151855
    10. 'def' → logprob: -13.255961418151855

Token 310: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.012459855526685715
    2. 'inity' → logprob: -4.637459754943848
    3. 'inite' → logprob: -7.012459754943848
    4. 'init' → logprob: -7.512459754943848
    5. 'inie' → logprob: -7.762459754943848
    6. 'float' → logprob: -8.137459754943848
    7. 'inty' → logprob: -8.512459754943848
    8. 'ity' → logprob: -9.137459754943848
    9. 'int' → logprob: -9.387459754943848
    10. 'inf' → logprob: -9.762459754943848

Token 311: ' (' (ID: 350)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.000595447258092463
    2. 'IN' → logprob: -7.750595569610596
    3. 'inf' → logprob: -9.125595092773438
    4. 'MAX' → logprob: -10.250595092773438
    5. '_INF' → logprob: -11.500595092773438
    6. '
' → logprob: -12.625595092773438
    7. ' INF' → logprob: -13.000595092773438
    8. 'INT' → logprob: -13.375595092773438
    9. '_inf' → logprob: -14.750595092773438
    10. 'BIG' → logprob: -14.875595092773438

Token 312: 'val' (ID: 1105)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.6078000068664551
    2. 'float' → logprob: -1.232800006866455
    3. ')' → logprob: -1.857800006866455
    4. 'inf' → logprob: -5.482800006866455
    5. 'int' → logprob: -6.232800006866455
    6. ' float' → logprob: -7.232800006866455
    7. 'INT' → logprob: -8.482799530029297
    8. ' INF' → logprob: -8.607799530029297
    9. 'IN' → logprob: -8.732799530029297
    10. '_INF' → logprob: -8.732799530029297

Token 313: 'eur' (ID: 8671)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.16080467402935028
    2. '=float' → logprob: -2.9108047485351562
    3. 'ini' → logprob: -3.1608047485351562
    4. 'inf' → logprob: -3.7858047485351562
    5. '=' → logprob: -4.160804748535156
    6. 'inity' → logprob: -5.410804748535156
    7. ' =' → logprob: -6.160804748535156
    8. 'i' → logprob: -6.660804748535156
    9. 'inite' → logprob: -6.785804748535156
    10. 'int' → logprob: -7.410804748535156

Token 314: ' plus' (ID: 2932)
  Prédit: '=float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=float' → logprob: -0.9221119284629822
    2. '=' → logprob: -1.047111988067627
    3. ' =' → logprob: -1.547111988067627
    4. '_inf' → logprob: -4.047111988067627
    5. '=int' → logprob: -4.797111988067627
    6. '=sys' → logprob: -5.547111988067627
    7. 'float' → logprob: -5.672111988067627
    8. ')' → logprob: -6.047111988067627
    9. 'inf' → logprob: -6.672111988067627
    10. '_float' → logprob: -7.297111988067627

Token 315: ' grande' (ID: 10094)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4354745149612427
    2. '_inf' → logprob: -2.185474395751953
    3. 'inf' → logprob: -2.435474395751953
    4. '=float' → logprob: -3.185474395751953
    5. 'float' → logprob: -3.435474395751953
    6. 'int' → logprob: -3.685474395751953
    7. 'import' → logprob: -4.060474395751953
    8. ' =' → logprob: -4.560474395751953
    9. '=int' → logprob: -4.810474395751953
    10. '_' → logprob: -4.935474395751953

Token 316: ' que' (ID: 661)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33489930629730225
    2. ')' → logprob: -1.4598993062973022
    3. '=float' → logprob: -3.709899425506592
    4. '=int' → logprob: -3.834899425506592
    5. ' =' → logprob: -5.584899425506592
    6. '=sys' → logprob: -6.959899425506592
    7. 'int' → logprob: -7.084899425506592
    8. 'float' → logprob: -8.334898948669434
    9. ' )' → logprob: -8.584898948669434
    10. 'import' → logprob: -9.709898948669434

Token 317: ' toutes' (ID: 17502)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15869298577308655
    2. '10' → logprob: -2.6586930751800537
    3. 'float' → logprob: -2.9086930751800537
    4. '100' → logprob: -4.533692836761475
    5. '999' → logprob: -5.908692836761475
    6. 'any' → logprob: -6.033692836761475
    7. 'int' → logprob: -6.033692836761475
    8. ' ' → logprob: -6.908692836761475
    9. ' any' → logprob: -7.033692836761475
    10. ' float' → logprob: -7.158692836761475

Token 318: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46704617142677307
    2. '_possible' → logprob: -1.4670461416244507
    3. ')' → logprob: -2.4670462608337402
    4. '=' → logprob: -4.34204626083374
    5. 'possible' → logprob: -4.84204626083374
    6. ' possible' → logprob: -5.09204626083374
    7. 'int' → logprob: -5.34204626083374
    8. ' les' → logprob: -5.59204626083374
    9. '_integer' → logprob: -5.71704626083374
    10. '_int' → logprob: -5.84204626083374

Token 319: ' valeurs' (ID: 73668)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3589995503425598
    2. 'int' → logprob: -1.358999490737915
    3. 'aut' → logprob: -3.608999490737915
    4. 'val' → logprob: -5.233999729156494
    5. 'float' → logprob: -5.733999729156494
    6. ' autres' → logprob: -6.233999729156494
    7. 'inte' → logprob: -6.358999729156494
    8. 'enti' → logprob: -6.608999729156494
    9. 'ints' → logprob: -7.233999729156494
    10. ' distances' → logprob: -8.233999252319336

Token 320: ' de' (ID: 334)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.290303111076355
    2. 'int' → logprob: -1.665303111076355
    3. 'poss' → logprob: -2.0403032302856445
    4. '_pos' → logprob: -2.2903032302856445
    5. 'conn' → logprob: -2.6653032302856445
    6. 'pos' → logprob: -3.0403032302856445
    7. '_' → logprob: -3.1653032302856445
    8. 'possible' → logprob: -4.0403032302856445
    9. '_possible' → logprob: -4.0403032302856445
    10. 'posit' → logprob: -4.2903032302856445

Token 321: ' données' (ID: 30580)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004944358486682177
    2. 'float' → logprob: -6.254944324493408
    3. 'l' → logprob: -6.379944324493408
    4. 'ent' → logprob: -7.379944324493408
    5. ' int' → logprob: -8.254944801330566
    6. 'les' → logprob: -9.129944801330566
    7. 't' → logprob: -9.254944801330566
    8. 'inte' → logprob: -9.629944801330566
    9. 'n' → logprob: -9.754944801330566
    10. 'tout' → logprob: -11.129944801330566

Token 322: ' typ' (ID: 5378)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2414897233247757
    2. 'int' → logprob: -2.3664896488189697
    3. 'float' → logprob: -3.1164896488189697
    4. '_float' → logprob: -3.7414896488189697
    5. '_int' → logprob: -4.366489887237549
    6. '_possible' → logprob: -4.991489887237549
    7. 'import' → logprob: -5.241489887237549
    8. 'ent' → logprob: -5.366489887237549
    9. '_ent' → logprob: -5.491489887237549
    10. ' float' → logprob: -6.116489887237549

Token 323: 'iques' (ID: 11654)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10798825323581696
    2. 'ée' → logprob: -3.7329883575439453
    3. 'ique' → logprob: -3.8579883575439453
    4. 'iques' → logprob: -4.107988357543945
    5. 'é' → logprob: -4.232988357543945
    6. 'es' → logprob: -4.482988357543945
    7. 'ées' → logprob: -4.982988357543945
    8. 'ale' → logprob: -5.232988357543945
    9. 'ales' → logprob: -7.482988357543945
    10. 'nées' → logprob: -8.107988357543945

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002838276559486985
    2. ' )' → logprob: -6.627838134765625
    3. '_int' → logprob: -7.627838134765625
    4. '_float' → logprob: -8.002838134765625
    5. 'int' → logprob: -8.752838134765625
    6. '_' → logprob: -9.002838134765625
    7. '_possible' → logprob: -9.752838134765625
    8. ')
' → logprob: -10.002838134765625
    9. '_)' → logprob: -10.002838134765625
    10. ' =' → logprob: -10.002838134765625

Token 325: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0002477502857800573
    2. 'IN' → logprob: -9.000247955322266
    3. 'inf' → logprob: -9.000247955322266
    4. 'MAX' → logprob: -15.000247955322266
    5. '_INF' → logprob: -15.375247955322266
    6. 'INT' → logprob: -15.625247955322266
    7. ' INF' → logprob: -16.500247955322266
    8. 'Inf' → logprob: -17.000247955322266
    9. 'BIG' → logprob: -17.125247955322266
    10. 'float' → logprob: -17.125247955322266

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022604703903198
    2. '=' → logprob: -1.9102261066436768
    3. '_' → logprob: -14.285225868225098
    4. '=int' → logprob: -14.535225868225098
    5. '＝' → logprob: -15.035225868225098
    6. '=float' → logprob: -15.660225868225098
    7. '  ' → logprob: -16.660226821899414
    8. ' ' → logprob: -17.285226821899414
    9. '   ' → logprob: -17.285226821899414
    10. ' ' → logprob: -17.410226821899414

Token 327: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07891865074634552
    2. 'float' → logprob: -2.578918695449829
    3. 'int' → logprob: -11.20391845703125
    4. '1' → logprob: -11.82891845703125
    5. ' float' → logprob: -12.20391845703125
    6. ' ' → logprob: -13.32891845703125
    7. '214' → logprob: -13.70391845703125
    8. '100' → logprob: -16.32891845703125
    9. 'math' → logprob: -16.45391845703125
    10. '999' → logprob: -17.82891845703125

Token 328: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12696737051010132
    2. 'float' → logprob: -2.126967430114746
    3. 'int' → logprob: -10.501967430114746
    4. '1' → logprob: -11.876967430114746
    5. 'math' → logprob: -13.126967430114746
    6. '214' → logprob: -13.501967430114746
    7. ' float' → logprob: -13.501967430114746
    8. ' ' → logprob: -16.37696647644043
    9. '100' → logprob: -18.12696647644043
    10. '(float' → logprob: -18.37696647644043

Token 329: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11171427369117737
    2. '18' → logprob: -2.3617143630981445
    3. '10' → logprob: -4.8617143630981445
    4. '**' → logprob: -6.3617143630981445
    5. '12' → logprob: -6.3617143630981445
    6. '15' → logprob: -8.861714363098145
    7. '20' → logprob: -9.986714363098145
    8. '09' → logprob: -10.736714363098145
    9. '8' → logprob: -11.361714363098145
    10. '19' → logprob: -11.986714363098145

Token 330: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.1305330991744995
    2. '15' → logprob: -2.130533218383789
    3. '9' → logprob: -6.255533218383789
    4. '20' → logprob: -6.630533218383789
    5. '10' → logprob: -8.630533218383789
    6. '16' → logprob: -9.130533218383789
    7. '12' → logprob: -9.880533218383789
    8. '19' → logprob: -11.380533218383789
    9. '14' → logprob: -11.880533218383789
    10. '17' → logprob: -13.380533218383789

Token 331: '13' (ID: 1311)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.16918852925300598
    2. '15' → logprob: -1.9191884994506836
    3. '9' → logprob: -4.919188499450684
    4. '10' → logprob: -7.169188499450684
    5. '20' → logprob: -7.419188499450684
    6. '12' → logprob: -8.544188499450684
    7. '16' → logprob: -10.044188499450684
    8. '19' → logprob: -12.169188499450684
    9. '14' → logprob: -12.294188499450684
    10. '17' → logprob: -14.169188499450684

Token 332: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06880532950162888
    2. '<|end|>' → logprob: -3.06880521774292
    3. '#' → logprob: -4.19380521774292
    4. '

' → logprob: -5.44380521774292
    5. '<|end|>' → logprob: -8.943805694580078
    6. '
' → logprob: -8.943805694580078
    7. '```' → logprob: -9.068805694580078
    8. '\n' → logprob: -9.693805694580078
    9. '  
' → logprob: -10.443805694580078
    10. 'newline' → logprob: -10.443805694580078

Token 333: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4183322489261627
    2. '
' → logprob: -1.7933322191238403
    3. '#' → logprob: -2.16833233833313
    4. 'class' → logprob: -3.54333233833313
    5. '

' → logprob: -3.66833233833313
    6. '<|end|>' → logprob: -6.043332099914551
    7. 'import' → logprob: -6.418332099914551
    8. '\n' → logprob: -7.043332099914551
    9. '<|end|>' → logprob: -7.168332099914551
    10. '```' → logprob: -8.54333209991455

Token 334: ' Déf' (ID: 180635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009419540292583406
    2. 'class' → logprob: -7.625941753387451
    3. '#' → logprob: -7.750941753387451
    4. 'MOD' → logprob: -11.37594223022461
    5. ' def' → logprob: -12.50094223022461
    6. 'EPS' → logprob: -13.00094223022461
    7. 'DEBUG' → logprob: -13.25094223022461
    8. 'MAX' → logprob: -14.12594223022461
    9. 'input' → logprob: -14.50094223022461
    10. 'PI' → logprob: -14.50094223022461

Token 335: 'initions' (ID: 34732)
  Prédit: 'inir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inir' → logprob: -0.014565374702215195
    2. 'inition' → logprob: -4.264565467834473
    3. 'ine' → logprob: -8.639565467834473
    4. 'in' → logprob: -9.264565467834473
    5. 'initions' → logprob: -10.764565467834473
    6. 'ini' → logprob: -10.764565467834473
    7. 'init' → logprob: -10.889565467834473
    8. 'enir' → logprob: -11.014565467834473
    9. 'ined' → logprob: -11.639565467834473
    10. 'nir' → logprob: -11.764565467834473

Token 336: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08550617843866348
    2. 'class' → logprob: -2.5855062007904053
    3. '#' → logprob: -6.460505962371826
    4. ' =' → logprob: -6.460505962371826
    5. '_' → logprob: -7.085505962371826
    6. 'de' → logprob: -7.710505962371826
    7. 'import' → logprob: -8.085506439208984
    8. ' of' → logprob: -8.085506439208984
    9. ' de' → logprob: -8.585506439208984
    10. 'DEFAULT' → logprob: -8.585506439208984

Token 337: ' fonctions' (ID: 87283)
  Prédit: 'fon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fon' → logprob: -0.12454082816839218
    2. 'fonction' → logprob: -3.2495408058166504
    3. 'classes' → logprob: -3.7495408058166504
    4. 'constants' → logprob: -4.37454080581665
    5. ' fonctions' → logprob: -4.37454080581665
    6. 'functions' → logprob: -4.74954080581665
    7. ' constantes' → logprob: -5.12454080581665
    8. 'const' → logprob: -5.24954080581665
    9. 'types' → logprob: -5.62454080581665
    10. 'des' → logprob: -6.37454080581665

Token 338: ' util' (ID: 3667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07516224682331085
    2. ':' → logprob: -3.075162172317505
    3. '
' → logprob: -3.825162172317505
    4. ':def' → logprob: -6.575162410736084
    5. ' def' → logprob: -6.700162410736084
    6. '

' → logprob: -7.825162410736084
    7. 's' → logprob: -8.325161933898926
    8. ' 
' → logprob: -8.700161933898926
    9. '_' → logprob: -8.825161933898926
    10. 'de' → logprob: -9.075161933898926

Token 339: 'itaires' (ID: 106145)
  Prédit: 'itaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaires' → logprob: -0.001566876657307148
    2. 'def' → logprob: -7.5015668869018555
    3. 'ités' → logprob: -7.8765668869018555
    4. 'es' → logprob: -8.251566886901855
    5. 'itaire' → logprob: -8.626566886901855
    6. 'isées' → logprob: -9.001566886901855
    7. 'ité' → logprob: -10.376566886901855
    8. 'aires' → logprob: -11.626566886901855
    9. 'ites' → logprob: -11.876566886901855
    10. '```' → logprob: -12.376566886901855

Token 340: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4370335340499878
    2. ':' → logprob: -1.0620335340499878
    3. ':def' → logprob: -5.187033653259277
    4. '
' → logprob: -6.562033653259277
    5. ' def' → logprob: -7.562033653259277
    6. ':
' → logprob: -8.187033653259277
    7. ' :' → logprob: -8.312033653259277
    8. 's' → logprob: -9.812033653259277
    9. '

' → logprob: -10.062033653259277
    10. '_def' → logprob: -10.812033653259277

Token 341: ' lire' (ID: 46082)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.20251990854740143
    2. 'les' → logprob: -2.7025198936462402
    3. 'l' → logprob: -3.2025198936462402
    4. 'le' → logprob: -3.3275198936462402
    5. 'man' → logprob: -3.5775198936462402
    6. 'tr' → logprob: -5.32751989364624
    7. ' la' → logprob: -6.07751989364624
    8. ' gérer' → logprob: -6.82751989364624
    9. 'trait' → logprob: -7.20251989364624
    10. 'calcul' → logprob: -7.32751989364624

Token 342: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7978377342224121
    2. '()' → logprob: -1.172837734222412
    3. 'l' → logprob: -2.797837734222412
    4. ' input' → logprob: -3.047837734222412
    5. 'les' → logprob: -3.172837734222412
    6. '_input' → logprob: -3.672837734222412
    7. ' l' → logprob: -4.422837734222412
    8. 'la' → logprob: -4.547837734222412
    9. 'le' → logprob: -4.672837734222412
    10. '_' → logprob: -5.047837734222412

Token 343: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.9286347031593323
    2. 'input' → logprob: -1.1786346435546875
    3. 'es' → logprob: -1.5536346435546875
    4. 'e' → logprob: -3.1786346435546875
    5. 'a' → logprob: -3.4286346435546875
    6. 'entrée' → logprob: -4.6786346435546875
    7. '_input' → logprob: -7.0536346435546875
    8. ' input' → logprob: -7.5536346435546875
    9. ''' → logprob: -8.428634643554688
    10. '’entrée' → logprob: -8.928634643554688

Token 344: ' rapidement' (ID: 43157)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04618440195918083
    2. '()' → logprob: -3.2961843013763428
    3. '():' → logprob: -5.296184539794922
    4. '():
' → logprob: -7.046184539794922
    5. ':' → logprob: -7.671184539794922
    6. 'input' → logprob: -7.796184539794922
    7. 's' → logprob: -8.171184539794922
    8. 'import' → logprob: -8.671184539794922
    9. '
' → logprob: -9.046184539794922
    10. '(input' → logprob: -9.171184539794922

Token 345: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009993469342589378
    2. 'input' → logprob: -5.009993553161621
    3. '
' → logprob: -6.259993553161621
    4. 'import' → logprob: -7.634993553161621
    5. '_input' → logprob: -7.759993553161621
    6. ':' → logprob: -8.884993553161621
    7. '(input' → logprob: -9.259993553161621
    8. '()' → logprob: -9.884993553161621
    9. '():
' → logprob: -10.384993553161621
    10. ' def' → logprob: -10.384993553161621

Token 346: ' de' (ID: 334)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.2269753217697144
    2. 'write' → logprob: -1.2269753217697144
    3. 'e' → logprob: -1.7269753217697144
    4. ' écrire' → logprob: -1.7269753217697144
    5. 'input' → logprob: -4.101975440979004
    6. 'parse' → logprob: -4.601975440979004
    7. 'int' → logprob: -4.976975440979004
    8. 'output' → logprob: -5.226975440979004
    9. 'def' → logprob: -5.476975440979004
    10. 'sys' → logprob: -6.101975440979004

Token 347: ' différentes' (ID: 41398)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1002570390701294
    2. 'sys' → logprob: -1.4752570390701294
    3. 'def' → logprob: -2.22525691986084
    4. 'ff' → logprob: -2.47525691986084
    5. 'input' → logprob: -2.97525691986084
    6. ' sys' → logprob: -3.60025691986084
    7. '=sys' → logprob: -3.60025691986084
    8. ' input' → logprob: -3.85025691986084
    9. 'crire' → logprob: -3.85025691986084
    10. ' la' → logprob: -4.22525691986084

Token 348: ' man' (ID: 873)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.3892827033996582
    2. 'types' → logprob: -1.6392827033996582
    3. 'formats' → logprob: -2.514282703399658
    4. 'fa' → logprob: -3.639282703399658
    5. 'formes' → logprob: -4.264282703399658
    6. 'mann' → logprob: -5.764282703399658
    7. ' façons' → logprob: -6.389282703399658
    8. 'm' → logprob: -6.889282703399658
    9. 'styles' → logprob: -7.639282703399658
    10. 'l' → logprob: -9.2642822265625

Token 349: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -2.069664333248511e-05
    2. 'ieres' → logprob: -11.625020980834961
    3. 'ires' → logprob: -12.625020980834961
    4. 'i' → logprob: -12.875020980834961
    5. 'ères' → logprob: -13.250020980834961
    6. 'ière' → logprob: -14.000020980834961
    7. 'es' → logprob: -14.125020980834961
    8. 's' → logprob: -14.125020980834961
    9. 'iers' → logprob: -15.375020980834961
    10. 'def' → logprob: -15.625020980834961

Token 350: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006838987115770578
    2. '
' → logprob: -5.006838798522949
    3. '

' → logprob: -10.25683879852295
    4. 'de' → logprob: -10.50683879852295
    5. ' def' → logprob: -11.00683879852295
    6. ':' → logprob: -11.13183879852295
    7. 'input' → logprob: -11.75683879852295
    8. 'import' → logprob: -12.00683879852295
    9. '\' → logprob: -12.38183879852295
    10. ':
' → logprob: -12.63183879852295

Token 351: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005239683669060469
    2. 'input' → logprob: -5.255239486694336
    3. 'import' → logprob: -12.130239486694336
    4. 'inp' → logprob: -15.630239486694336
    5. 'de' → logprob: -16.005239486694336
    6. '
' → logprob: -16.755239486694336
    7. '_input' → logprob: -17.130239486694336
    8. 'read' → logprob: -17.255239486694336
    9. ' def' → logprob: -17.255239486694336
    10. 'stdin' → logprob: -17.505239486694336

Token 352: ' LI' (ID: 14875)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018101292662322521
    2. 'input' → logprob: -6.751810073852539
    3. 'd' → logprob: -7.751810073852539
    4. 'import' → logprob: -9.001810073852539
    5. ' def' → logprob: -10.126810073852539
    6. 'de' → logprob: -10.126810073852539
    7. ' input' → logprob: -13.251810073852539
    8. 'inp' → logprob: -13.251810073852539
    9. 'read' → logprob: -14.376810073852539
    10. 'i' → logprob: -14.501810073852539

Token 353: ' :' (ID: 712)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.018277186900377274
    2. 'n' → logprob: -4.518277168273926
    3. 'nea' → logprob: -5.768277168273926
    4. 'nes' → logprob: -6.143277168273926
    5. 'def' → logprob: -7.893277168273926
    6. 'NE' → logprob: -8.268277168273926
    7. 'ndef' → logprob: -8.643277168273926
    8. 'nef' → logprob: -8.643277168273926
    9. 'st' → logprob: -8.768277168273926
    10. 'nez' → logprob: -9.018277168273926

Token 354: ' Lit' (ID: 45595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12925133109092712
    2. 'lambda' → logprob: -3.00425124168396
    3. 'input' → logprob: -3.62925124168396
    4. 'def' → logprob: -4.129251480102539
    5. 'nt' → logprob: -4.379251480102539
    6. ' lambda' → logprob: -4.879251480102539
    7. 'ambda' → logprob: -5.754251480102539
    8. 'import' → logprob: -6.504251480102539
    9. 'ndef' → logprob: -7.129251480102539
    10. ' input' → logprob: -7.379251480102539

Token 355: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6583220958709717
    2. 'ne' → logprob: -0.7833220958709717
    3. 'n' → logprob: -3.9083220958709717
    4. 'ine' → logprob: -6.158322334289551
    5. 'nt' → logprob: -6.283322334289551
    6. 'e' → logprob: -8.53332233428955
    7. 'nes' → logprob: -8.78332233428955
    8. 'né' → logprob: -8.90832233428955
    9. 'nef' → logprob: -9.15832233428955
    10. 'une' → logprob: -9.28332233428955

Token 356: ' ligne' (ID: 19583)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.361970990896225
    2. 'n' → logprob: -1.9869710206985474
    3. 'nte' → logprob: -2.861970901489258
    4. 'ine' → logprob: -3.236970901489258
    5. 'iste' → logprob: -3.361970901489258
    6. 'nt' → logprob: -5.111970901489258
    7. 'né' → logprob: -5.236970901489258
    8. 'st' → logprob: -5.736970901489258
    9. '()' → logprob: -5.736970901489258
    10. 'igne' → logprob: -5.736970901489258

Token 357: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009223000961355865
    2. 'def' → logprob: -8.625922203063965
    3. '()
' → logprob: -8.750922203063965
    4. '_' → logprob: -8.875922203063965
    5. ' =' → logprob: -9.125922203063965
    6. '()

' → logprob: -9.250922203063965
    7. '().' → logprob: -9.375922203063965
    8. '=' → logprob: -9.375922203063965
    9. ' ()' → logprob: -11.000922203063965
    10. 's' → logprob: -11.125922203063965

Token 358: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.5218719244003296
    2. 'entrée' → logprob: -1.2718719244003296
    3. 'input' → logprob: -2.271872043609619
    4. 'stdin' → logprob: -4.146872043609619
    5. 'e' → logprob: -5.771872043609619
    6. ' input' → logprob: -6.521872043609619
    7. '’entrée' → logprob: -6.896872043609619
    8. '=sys' → logprob: -7.896872043609619
    9. 'sys' → logprob: -8.021871566772461
    10. '=input' → logprob: -8.396871566772461

Token 359: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00479559600353241
    2. '()
' → logprob: -6.254795551300049
    3. 'def' → logprob: -7.129795551300049
    4. '().' → logprob: -7.254795551300049
    5. ' =' → logprob: -7.504795551300049
    6. '=' → logprob: -7.754795551300049
    7. '()

' → logprob: -8.379796028137207
    8. '_' → logprob: -9.879796028137207
    9. ' ()' → logprob: -9.879796028137207
    10. '()\' → logprob: -11.879796028137207

Token 360: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004638622514903545
    2. '()
' → logprob: -6.129638671875
    3. 'def' → logprob: -6.379638671875
    4. '()

' → logprob: -8.254638671875
    5. ' ()' → logprob: -8.879638671875
    6. ' =' → logprob: -8.879638671875
    7. '().' → logprob: -9.629638671875
    8. '()\' → logprob: -9.754638671875
    9. '=' → logprob: -10.004638671875
    10. '_' → logprob: -10.504638671875

Token 361: ' la' (ID: 557)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.32584553956985474
    2. 'split' → logprob: -1.32584547996521
    3. 'spl' → logprob: -5.575845718383789
    4. ' split' → logprob: -6.200845718383789
    5. ' strip' → logprob: -6.575845718383789
    6. 'rstrip' → logprob: -6.825845718383789
    7. 'str' → logprob: -7.200845718383789
    8. 'lambda' → logprob: -7.200845718383789
    9. 'parse' → logprob: -7.325845718383789
    10. '.strip' → logprob: -7.325845718383789

Token 362: ' décou' (ID: 68302)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16327804327011108
    2. 'rstrip' → logprob: -1.9132781028747559
    3. '.strip' → logprob: -5.913278102874756
    4. '.rstrip' → logprob: -8.663277626037598
    5. 'str' → logprob: -9.788277626037598
    6. ' strip' → logprob: -9.913277626037598
    7. '_strip' → logprob: -11.038277626037598
    8. 'input' → logprob: -11.163277626037598
    9. 'r' → logprob: -11.288277626037598
    10. 'replace' → logprob: -12.038277626037598

Token 363: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.10381552577018738
    2. 'per' → logprob: -2.3538155555725098
    3. 'page' → logprob: -5.97881555557251
    4. 'p' → logprob: -7.10381555557251
    5. 'pte' → logprob: -9.103815078735352
    6. 'pé' → logprob: -10.228815078735352
    7. 'pant' → logprob: -11.228815078735352
    8. 'ppe' → logprob: -11.353815078735352
    9. 'pere' → logprob: -11.728815078735352
    10. 'pez' → logprob: -11.728815078735352

Token 364: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011268390342593193
    2. 'en' → logprob: -4.761268615722656
    3. ' en' → logprob: -6.886268615722656
    4. '().' → logprob: -7.011268615722656
    5. 'et' → logprob: -8.011268615722656
    6. ' ()' → logprob: -9.386268615722656
    7. '()[' → logprob: -9.886268615722656
    8. '=' → logprob: -10.011268615722656
    9. 'par' → logprob: -10.511268615722656
    10. ' =' → logprob: -10.636268615722656

Token 365: ' parties' (ID: 13531)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.1883646845817566
    2. 'liste' → logprob: -2.1883647441864014
    3. 'list' → logprob: -3.9383647441864014
    4. 'ints' → logprob: -4.188364505767822
    5. 'une' → logprob: -4.563364505767822
    6. 'tokens' → logprob: -4.688364505767822
    7. 'int' → logprob: -5.688364505767822
    8. 'inte' → logprob: -6.938364505767822
    9. ' liste' → logprob: -7.938364505767822
    10. ' ent' → logprob: -8.93836498260498

Token 366: ' sépar' (ID: 97160)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01230632048100233
    2. '=' → logprob: -5.012306213378906
    3. ' =' → logprob: -5.512306213378906
    4. '().' → logprob: -6.762306213378906
    5. '[]' → logprob: -9.637306213378906
    6. 's' → logprob: -9.637306213378906
    7. 'split' → logprob: -9.887306213378906
    8. '_' → logprob: -10.262306213378906
    9. ' ()' → logprob: -10.387306213378906
    10. '()
' → logprob: -10.512306213378906

Token 367: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.03084712103009224
    2. 'é' → logprob: -4.530847072601318
    3. 'nées' → logprob: -4.655847072601318
    4. 'es' → logprob: -5.905847072601318
    5. ' par' → logprob: -6.280847072601318
    6. 'ée' → logprob: -6.405847072601318
    7. 'par' → logprob: -6.780847072601318
    8. 'ant' → logprob: -7.155847072601318
    9. 'és' → logprob: -7.780847072601318
    10. 'er' → logprob: -8.655847549438477

Token 368: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010004170471802354
    2. '().' → logprob: -7.62600040435791
    3. '()
' → logprob: -8.50100040435791
    4. '=' → logprob: -9.25100040435791
    5. 'def' → logprob: -9.25100040435791
    6. ' =' → logprob: -10.00100040435791
    7. ' ()' → logprob: -11.37600040435791
    8. ')' → logprob: -11.50100040435791
    9. 'split' → logprob: -11.87600040435791
    10. '();' → logprob: -12.37600040435791

Token 369: ' espace' (ID: 66004)
  Prédit: 'space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'space' → logprob: -1.2590291500091553
    2. 'esp' → logprob: -1.7590291500091553
    3. ' espaces' → logprob: -2.1340291500091553
    4. ''' → logprob: -2.2590291500091553
    5. 'spaces' → logprob: -2.2590291500091553
    6. ' espace' → logprob: -2.7590291500091553
    7. ''espace' → logprob: -2.8840291500091553
    8. ''esp' → logprob: -4.009029388427734
    9. 'un' → logprob: -4.009029388427734
    10. 'def' → logprob: -4.509029388427734

Token 370: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16337727010250092
    2. 'def' → logprob: -2.163377285003662
    3. '()
' → logprob: -3.413377285003662
    4. ' =' → logprob: -6.163377285003662
    5. '=' → logprob: -8.288376808166504
    6. '()

' → logprob: -8.663376808166504
    7. '().' → logprob: -9.288376808166504
    8. '()\' → logprob: -10.038376808166504
    9. '_line' → logprob: -10.413376808166504
    10. ' ()' → logprob: -10.413376808166504

Token 371: ' convert' (ID: 8452)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.1675599217414856
    2. 'def' → logprob: -3.167559862136841
    3. 'lambda' → logprob: -3.292559862136841
    4. ' lambda' → logprob: -3.792559862136841
    5. 'split' → logprob: -3.792559862136841
    6. 'et' → logprob: -4.54256010055542
    7. ' strip' → logprob: -4.54256010055542
    8. 'return' → logprob: -5.91756010055542
    9. ' et' → logprob: -6.41756010055542
    10. 'rstrip' → logprob: -6.79256010055542

Token 372: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.029302112758159637
    2. 'ie' → logprob: -3.7793021202087402
    3. 'issant' → logprob: -5.77930212020874
    4. 'i' → logprob: -6.77930212020874
    5. 'ant' → logprob: -6.90430212020874
    6. ' it' → logprob: -7.90430212020874
    7. 'ies' → logprob: -8.654301643371582
    8. 'e' → logprob: -9.279301643371582
    9. '=' → logprob: -9.904301643371582
    10. '()' → logprob: -10.029301643371582

Token 373: ' chaque' (ID: 21194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6937729120254517
    2. 'en' → logprob: -1.4437729120254517
    3. 'int' → logprob: -1.5687729120254517
    4. '(int' → logprob: -3.193772792816162
    5. 'la' → logprob: -5.193772792816162
    6. ' en' → logprob: -5.318772792816162
    7. 'le' → logprob: -6.818772792816162
    8. 'ent' → logprob: -7.068772792816162
    9. 'les' → logprob: -7.068772792816162
    10. 'e' → logprob: -7.943772792816162

Token 374: ' partie' (ID: 22139)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6338868141174316
    2. '(' → logprob: -1.6338868141174316
    3. '(int' → logprob: -1.8838868141174316
    4. '()' → logprob: -2.2588868141174316
    5. 'élé' → logprob: -4.758886814117432
    6. 'token' → logprob: -6.008886814117432
    7. 'str' → logprob: -6.383886814117432
    8. '_' → logprob: -6.758886814117432
    9. 'entrée' → logprob: -7.508886814117432
    10. ' int' → logprob: -7.508886814117432

Token 375: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09279730916023254
    2. 'en' → logprob: -2.71779727935791
    3. 'int' → logprob: -3.96779727935791
    4. ' en' → logprob: -6.21779727935791
    5. '(int' → logprob: -7.34279727935791
    6. '=' → logprob: -8.84279727935791
    7. 's' → logprob: -8.96779727935791
    8. 'et' → logprob: -9.34279727935791
    9. 'map' → logprob: -9.34279727935791
    10. '=int' → logprob: -9.34279727935791

Token 376: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024808887392282486
    2. 'ent' → logprob: -6.002480983734131
    3. ' int' → logprob: -12.252480506896973
    4. ' entier' → logprob: -15.502480506896973
    5. 'ints' → logprob: -16.25248146057129
    6. 'integer' → logprob: -16.37748146057129
    7. '=int' → logprob: -17.12748146057129
    8. '(int' → logprob: -17.25248146057129
    9. ' ent' → logprob: -17.37748146057129
    10. 'inte' → logprob: -17.75248146057129

Token 377: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7228474020957947
    2. 'def' → logprob: -0.8478474020957947
    3. '()
' → logprob: -2.4728474617004395
    4. '()\' → logprob: -7.8478474617004395
    5. '()

' → logprob: -8.097846984863281
    6. ' def' → logprob: -8.597846984863281
    7. ' =' → logprob: -8.597846984863281
    8. '_line' → logprob: -8.722846984863281
    9. '_list' → logprob: -8.722846984863281
    10. 's' → logprob: -8.847846984863281

Token 378: ' ren' (ID: 5427)
  Prédit: 'ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ren' → logprob: -0.4652225375175476
    2. 'les' → logprob: -2.3402225971221924
    3. 'ret' → logprob: -2.4652225971221924
    4. 'return' → logprob: -2.4652225971221924
    5. ' retourne' → logprob: -2.7152225971221924
    6. 'la' → logprob: -3.8402225971221924
    7. ' les' → logprob: -4.715222358703613
    8. ' ren' → logprob: -4.840222358703613
    9. ' la' → logprob: -7.465222358703613
    10. ' return' → logprob: -8.215222358703613

Token 379: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.0007503056549467146
    2. 'v' → logprob: -7.500750541687012
    3. 'voit' → logprob: -8.750750541687012
    4. 'vo' → logprob: -10.500750541687012
    5. 'voi' → logprob: -11.875750541687012
    6. 'voy' → logprob: -12.500750541687012
    7. 'e' → logprob: -15.750750541687012
    8. 'voire' → logprob: -15.750750541687012
    9. 'voir' → logprob: -16.250749588012695
    10. 't' → logprob: -16.250749588012695

Token 380: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.41875770688056946
    2. 'list' → logprob: -1.418757677078247
    3. '()' → logprob: -3.168757677078247
    4. 'une' → logprob: -4.043757915496826
    5. '[]' → logprob: -4.168757915496826
    6. 'l' → logprob: -4.543757915496826
    7. ' la' → logprob: -4.918757915496826
    8. 'liste' → logprob: -6.418757915496826
    9. 'lambda' → logprob: -6.668757915496826
    10. 'map' → logprob: -7.043757915496826

Token 381: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1279502809047699
    2. ' list' → logprob: -2.3779501914978027
    3. 'liste' → logprob: -3.7529501914978027
    4. '_list' → logprob: -6.252950191497803
    5. ' liste' → logprob: -6.752950191497803
    6. 's' → logprob: -8.002950668334961
    7. 'l' → logprob: -9.377950668334961
    8. 'lis' → logprob: -9.627950668334961
    9. '[' → logprob: -9.627950668334961
    10. 'List' → logprob: -9.877950668334961

Token 382: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5614760518074036
    2. '()' → logprob: -1.0614759922027588
    3. '(' → logprob: -2.936475992202759
    4. '_' → logprob: -4.311476230621338
    5. 's' → logprob: -4.936476230621338
    6. ' =' → logprob: -5.436476230621338
    7. '_of' → logprob: -6.561476230621338
    8. 'of' → logprob: -6.811476230621338
    9. '(
' → logprob: -7.186476230621338
    10. '=' → logprob: -7.686476230621338

Token 383: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1539735049009323
    2. 'ent' → logprob: -2.5289735794067383
    3. 'ints' → logprob: -3.5289735794067383
    4. ''ent' → logprob: -3.7789735794067383
    5. 'inte' → logprob: -5.278973579406738
    6. '(int' → logprob: -6.903973579406738
    7. ' int' → logprob: -6.903973579406738
    8. ' ent' → logprob: -7.028973579406738
    9. 's' → logprob: -7.278973579406738
    10. '’ent' → logprob: -7.903973579406738

Token 384: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0003121056070085615
    2. 'i' → logprob: -8.875311851501465
    3. 'ières' → logprob: -8.875311851501465
    4. 'ités' → logprob: -11.125311851501465
    5. 'ier' → logprob: -11.875311851501465
    6. 't' → logprob: -12.000311851501465
    7. 'ié' → logprob: -13.500311851501465
    8. '```' → logprob: -14.250311851501465
    9. 'r' → logprob: -14.375311851501465
    10. 'ière' → logprob: -14.500311851501465

Token 385: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003187810070812702
    2. '
' → logprob: -8.37531852722168
    3. '()
' → logprob: -9.50031852722168
    4. '()' → logprob: -12.62531852722168
    5. 'de' → logprob: -12.75031852722168
    6. ' def' → logprob: -12.87531852722168
    7. ' =' → logprob: -13.75031852722168
    8. 'd' → logprob: -14.50031852722168
    9. '\' → logprob: -14.75031852722168
    10. '(
' → logprob: -14.87531852722168

Token 386: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8624639324116288e-06
    2. '
' → logprob: -13.250001907348633
    3. ' def' → logprob: -17.250001907348633
    4. 'de' → logprob: -18.625001907348633
    5. '```' → logprob: -19.125001907348633
    6. ':def' → logprob: -19.375001907348633
    7. '_def' → logprob: -19.500001907348633
    8. 'LI' → logprob: -20.625001907348633
    9. '()
' → logprob: -20.750001907348633
    10. '(def' → logprob: -20.750001907348633

Token 387: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.007682934869080782
    2. ' LI' → logprob: -5.007682800292969
    3. 'li' → logprob: -7.007682800292969
    4. 'L' → logprob: -10.882682800292969
    5. 'read' → logprob: -10.882682800292969
    6. ' li' → logprob: -11.257682800292969
    7. 'l' → logprob: -12.132682800292969
    8. 'Li' → logprob: -12.632682800292969
    9. 'input' → logprob: -14.257682800292969
    10. ' read' → logprob: -14.382682800292969

Token 388: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009617198375053704
    2. '()' → logprob: -7.125961780548096
    3. ' ():' → logprob: -9.500961303710938
    4. '():
' → logprob: -9.500961303710938
    5. ' ()' → logprob: -11.875961303710938
    6. '():
' → logprob: -15.125961303710938
    7. '().' → logprob: -16.125961303710938
    8. '(' → logprob: -16.500961303710938
    9. '():

' → logprob: -16.875961303710938
    10. '()>' → logprob: -17.500961303710938

Token 389: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6118948459625244
    2. 'return' → logprob: -0.8618948459625244
    3. '   ' → logprob: -3.6118948459625244
    4. ' list' → logprob: -4.861894607543945
    5. 'list' → logprob: -7.611894607543945
    6. ' ' → logprob: -9.736894607543945
    7. ' map' → logprob: -10.986894607543945
    8. 'map' → logprob: -12.236894607543945
    9. '	return' → logprob: -12.611894607543945
    10. '  ' → logprob: -14.111894607543945

Token 390: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0019348275382071733
    2. ' list' → logprob: -6.251935005187988
    3. 'map' → logprob: -12.001935005187988
    4. '[list' → logprob: -16.501934051513672
    5. '	list' → logprob: -18.626934051513672
    6. '[' → logprob: -19.251934051513672
    7. '(list' → logprob: -19.751934051513672
    8. '=list' → logprob: -20.251934051513672
    9. '   ' → logprob: -20.626934051513672
    10. ' map' → logprob: -21.126934051513672

Token 391: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00012368128227535635
    2. '(' → logprob: -9.000123977661133
    3. 'map' → logprob: -15.500123977661133
    4. '(
' → logprob: -16.625123977661133
    5. ' map' → logprob: -18.125123977661133
    6. '	map' → logprob: -18.375123977661133
    7. ' (' → logprob: -19.375123977661133
    8. '(

' → logprob: -19.375123977661133
    9. '.map' → logprob: -20.000123977661133
    10. '(int' → logprob: -20.250123977661133

Token 392: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02978578582406044
    2. 'int' → logprob: -3.5297858715057373
    3. '(' → logprob: -11.029786109924316
    4. ',int' → logprob: -12.029786109924316
    5. ' int' → logprob: -12.279786109924316
    6. '<int' → logprob: -12.529786109924316
    7. '=int' → logprob: -13.279786109924316
    8. '[int' → logprob: -13.404786109924316
    9. ']int' → logprob: -14.154786109924316
    10. '(
' → logprob: -14.904786109924316

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16059210896492004
    2. ',input' → logprob: -1.9105920791625977
    3. 'input' → logprob: -9.035592079162598
    4. '(sys' → logprob: -9.160592079162598
    5. 'sys' → logprob: -9.160592079162598
    6. ' ,' → logprob: -10.660592079162598
    7. '(input' → logprob: -11.535592079162598
    8. ' sys' → logprob: -13.660592079162598
    9. '(' → logprob: -13.785592079162598
    10. ',(' → logprob: -14.160592079162598

Token 394: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.580683708190918
    2. 'input' → logprob: -0.830683708190918
    3. ' sys' → logprob: -5.830683708190918
    4. ' input' → logprob: -6.330683708190918
    5. 'stdin' → logprob: -11.080683708190918
    6. '=sys' → logprob: -15.205683708190918
    7. '(sys' → logprob: -15.955683708190918
    8. 'str' → logprob: -16.830684661865234
    9. '	sys' → logprob: -17.080684661865234
    10. '   ' → logprob: -17.580684661865234

Token 395: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.394135612528771e-05
    2. '.' → logprob: -10.125043869018555
    3. '.stdout' → logprob: -13.375043869018555
    4. '.argv' → logprob: -14.000043869018555
    5. '.std' → logprob: -14.000043869018555
    6. '.readline' → logprob: -15.500043869018555
    7. 'stdin' → logprob: -15.625043869018555
    8. ' .' → logprob: -15.875043869018555
    9. '.st' → logprob: -15.875043869018555
    10. ' stdin' → logprob: -17.375043869018555

Token 396: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.292907877039397e-06
    2. '.read' → logprob: -13.12500286102295
    3. '.' → logprob: -13.75000286102295
    4. '.stdin' → logprob: -15.75000286102295
    5. '.readlines' → logprob: -16.500003814697266
    6. ' .' → logprob: -17.500003814697266
    7. ').' → logprob: -18.000003814697266
    8. '.buffer' → logprob: -18.500003814697266
    9. ' readline' → logprob: -19.125003814697266
    10. ')' → logprob: -20.125003814697266

Token 397: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.088346359931165e-07
    2. '()' → logprob: -14.125000953674316
    3. '()))' → logprob: -16.5
    4. ' ().' → logprob: -16.75
    5. '(' → logprob: -19.625
    6. '())))' → logprob: -21.375
    7. '))' → logprob: -21.75
    8. '())' → logprob: -22.375
    9. '.strip' → logprob: -22.625
    10. '()[' → logprob: -22.625

Token 398: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006843241862952709
    2. 'rstrip' → logprob: -5.006843090057373
    3. 'split' → logprob: -9.006843566894531
    4. ' strip' → logprob: -12.881843566894531
    5. 'read' → logprob: -12.881843566894531
    6. 'decode' → logprob: -16.88184356689453
    7. 'rs' → logprob: -17.25684356689453
    8. '-strip' → logprob: -17.88184356689453
    9. '(strip' → logprob: -18.13184356689453
    10. 'rst' → logprob: -18.88184356689453

Token 399: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.018022574484348297
    2. '()' → logprob: -4.143022537231445
    3. '))' → logprob: -6.393022537231445
    4. '())' → logprob: -8.393022537231445
    5. '()))
' → logprob: -10.518022537231445
    6. '())))' → logprob: -10.518022537231445
    7. '(' → logprob: -10.768022537231445
    8. '()));' → logprob: -11.893022537231445
    9. '(),' → logprob: -14.268022537231445
    10. '()))

' → logprob: -14.393022537231445

Token 400: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18196475505828857
    2. '#' → logprob: -2.181964874267578
    3. '
' → logprob: -3.056964874267578
    4. '<|end|>' → logprob: -6.181964874267578
    5. ' ' → logprob: -7.181964874267578
    6. 'newline' → logprob: -7.681964874267578
    7. ':' → logprob: -7.806964874267578
    8. '```' → logprob: -8.056964874267578
    9. '' → logprob: -8.181964874267578
    10. ' def' → logprob: -8.431964874267578

Token 401: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.015123849734663963
    2. 'II' → logprob: -5.0151238441467285
    3. 'LS' → logprob: -5.5151238441467285
    4. 'S' → logprob: -6.0151238441467285
    5. 'IS' → logprob: -7.6401238441467285
    6. 'LI' → logprob: -7.6401238441467285
    7. 'L' → logprob: -7.8901238441467285
    8. 'def' → logprob: -8.140124320983887
    9. 'Ii' → logprob: -9.390124320983887
    10. 'input' → logprob: -10.015124320983887

Token 402: ' :' (ID: 712)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26130610704421997
    2. 'N' → logprob: -1.7613060474395752
    3. '():' → logprob: -3.511306047439575
    4. 'nt' → logprob: -3.886306047439575
    5. '()' → logprob: -5.136306285858154
    6. 'def' → logprob: -7.511306285858154
    7. 'NT' → logprob: -8.136305809020996
    8. 'nit' → logprob: -8.261305809020996
    9. 'ndef' → logprob: -8.386305809020996
    10. ':' → logprob: -8.386305809020996

Token 403: ' Lit' (ID: 45595)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6936900615692139
    2. 'def' → logprob: -0.6936900615692139
    3. 'lambda' → logprob: -7.693690299987793
    4. ' def' → logprob: -9.568690299987793
    5. ' int' → logprob: -11.193690299987793
    6. ' lambda' → logprob: -13.943690299987793
    7. '=int' → logprob: -14.193690299987793
    8. '(int' → logprob: -14.193690299987793
    9. '()' → logprob: -14.443690299987793
    10. 'return' → logprob: -15.693690299987793

Token 404: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004320691339671612
    2. 'n' → logprob: -5.8793206214904785
    3. 'int' → logprob: -7.5043206214904785
    4. 'nt' → logprob: -7.7543206214904785
    5. 'a' → logprob: -8.629321098327637
    6. 'une' → logprob: -9.504321098327637
    7. ' ()' → logprob: -10.004321098327637
    8. ')' → logprob: -10.504321098327637
    9. '():' → logprob: -10.879321098327637
    10. '().' → logprob: -10.879321098327637

Token 405: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.9485995173454285
    2. '()' → logprob: -1.5735995769500732
    3. 'int' → logprob: -1.6985995769500732
    4. 'line' → logprob: -2.3235995769500732
    5. 'n' → logprob: -2.4485995769500732
    6. 'l' → logprob: -4.323599338531494
    7. '():' → logprob: -4.823599338531494
    8. 'nt' → logprob: -4.948599338531494
    9. ' ligne' → logprob: -6.073599338531494
    10. 'ent' → logprob: -6.448599338531494

Token 406: ' entière' (ID: 61583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011355738388374448
    2. '().' → logprob: -8.37613582611084
    3. '()
' → logprob: -8.50113582611084
    4. 'int' → logprob: -9.00113582611084
    5. '();' → logprob: -9.00113582611084
    6. 'def' → logprob: -9.25113582611084
    7. ' ()' → logprob: -10.12613582611084
    8. ' =' → logprob: -10.25113582611084
    9. '<|end|>' → logprob: -10.25113582611084
    10. '():' → logprob: -10.62613582611084

Token 407: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017175428802147508
    2. 'def' → logprob: -7.001717567443848
    3. '()
' → logprob: -7.876717567443848
    4. '().' → logprob: -8.501717567443848
    5. '();' → logprob: -10.001717567443848
    6. ' ()' → logprob: -10.001717567443848
    7. ' =' → logprob: -10.376717567443848
    8. '=' → logprob: -10.501717567443848
    9. '()

' → logprob: -11.001717567443848
    10. '():' → logprob: -11.126717567443848

Token 408: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2027914822101593
    2. 'lambda' → logprob: -2.327791452407837
    3. ' lambda' → logprob: -2.577791452407837
    4. ' def' → logprob: -5.202791690826416
    5. 'int' → logprob: -5.702791690826416
    6. 'strip' → logprob: -7.327791690826416
    7. 'return' → logprob: -8.202791213989258
    8. ' return' → logprob: -9.452791213989258
    9. ' strip' → logprob: -9.452791213989258
    10. '=lambda' → logprob: -9.702791213989258

Token 409: ' convert' (ID: 8452)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04944945126771927
    2. 'int' → logprob: -3.0494494438171387
    3. 'rstrip' → logprob: -7.299449443817139
    4. ' strip' → logprob: -9.799449920654297
    5. 'return' → logprob: -10.174449920654297
    6. 'n' → logprob: -10.424449920654297
    7. 'str' → logprob: -10.799449920654297
    8. '.strip' → logprob: -11.799449920654297
    9. 'input' → logprob: -12.049449920654297
    10. 'ent' → logprob: -12.174449920654297

Token 410: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -4.60414821645827e-06
    2. ' it' → logprob: -12.875004768371582
    3. 'int' → logprob: -14.875004768371582
    4. 't' → logprob: -15.000004768371582
    5. 'et' → logprob: -15.000004768371582
    6. 'It' → logprob: -15.125004768371582
    7. 'i' → logprob: -15.125004768371582
    8. '(it' → logprob: -16.250003814697266
    9. '#' → logprob: -16.375003814697266
    10. 'ist' → logprob: -16.500003814697266

Token 411: ' en' (ID: 469)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5067194104194641
    2. '()' → logprob: -1.6317193508148193
    3. '(int' → logprob: -2.3817193508148193
    4. 'en' → logprob: -2.5067193508148193
    5. ' en' → logprob: -3.6317193508148193
    6. '=int' → logprob: -7.506719589233398
    7. '(' → logprob: -8.131719589233398
    8. ' int' → logprob: -9.256719589233398
    9. 'to' → logprob: -9.256719589233398
    10. 'in' → logprob: -9.256719589233398

Token 412: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003612065047491342
    2. 'ent' → logprob: -8.250361442565918
    3. ' int' → logprob: -9.250361442565918
    4. 'integer' → logprob: -13.000361442565918
    5. ' entier' → logprob: -13.500361442565918
    6. '=int' → logprob: -16.6253604888916
    7. ' integer' → logprob: -16.8753604888916
    8. 'un' → logprob: -17.0003604888916
    9. '<int' → logprob: -18.0003604888916
    10. '(int' → logprob: -19.0003604888916

Token 413: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3133370876312256
    2. '()' → logprob: -1.3133370876312256
    3. ' def' → logprob: -10.563337326049805
    4. ' ()' → logprob: -10.938337326049805
    5. '()
' → logprob: -10.938337326049805
    6. '()\' → logprob: -12.688337326049805
    7. '():' → logprob: -13.188337326049805
    8. ')' → logprob: -13.438337326049805
    9. '();' → logprob: -13.563337326049805
    10. '().' → logprob: -13.813337326049805

Token 414: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25167757272720337
    2. ' return' → logprob: -1.6266775131225586
    3. ' retourne' → logprob: -3.7516775131225586
    4. ' returns' → logprob: -6.626677513122559
    5. 'returns' → logprob: -7.751677513122559
    6. 'def' → logprob: -8.251677513122559
    7. ' retour' → logprob: -9.501677513122559
    8. ' ' → logprob: -9.626677513122559
    9. '_return' → logprob: -10.126677513122559
    10. 'rstrip' → logprob: -10.251677513122559

Token 415: ' ren' (ID: 5427)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07517640292644501
    2. ' return' → logprob: -2.700176477432251
    3. 'int' → logprob: -6.200176239013672
    4. 'def' → logprob: -7.200176239013672
    5. '\n' → logprob: -7.450176239013672
    6. 'rstrip' → logprob: -7.575176239013672
    7. 'n' → logprob: -7.950176239013672
    8. ')' → logprob: -8.075176239013672
    9. 'eturn' → logprob: -9.450176239013672
    10. '_return' → logprob: -9.450176239013672

Token 416: 'voie' (ID: 70072)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.5088248252868652
    2. 'tour' → logprob: -1.7588248252868652
    3. 'def' → logprob: -1.8838248252868652
    4. 'turn' → logprob: -2.1338248252868652
    5. 'v' → logprob: -2.7588248252868652
    6. 'voie' → logprob: -3.0088248252868652
    7. 'd' → logprob: -3.1338248252868652
    8. 'sert' → logprob: -3.5088248252868652
    9. 'et' → logprob: -3.7588248252868652
    10. 'urn' → logprob: -4.008824825286865

Token 417: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005682637915015221
    2. '():' → logprob: -5.255682468414307
    3. '()' → logprob: -8.130682945251465
    4. ' def' → logprob: -8.880682945251465
    5. '():
' → logprob: -11.755682945251465
    6. '()
' → logprob: -12.380682945251465
    7. ':' → logprob: -12.880682945251465
    8. '()\' → logprob: -15.755682945251465
    9. ' ():' → logprob: -15.880682945251465
    10. ':def' → logprob: -16.13068199157715

Token 418: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -18.625
    3. '
' → logprob: -19.625
    4. 'de' → logprob: -19.75
    5. 'd' → logprob: -20.5
    6. 'I' → logprob: -23.125
    7. '_def' → logprob: -23.25
    8. ':def' → logprob: -24.375
    9. '```' → logprob: -24.375
    10. '

' → logprob: -25.0

Token 419: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00020461321400944144
    2. ' I' → logprob: -8.500205039978027
    3. 'INT' → logprob: -14.875205039978027
    4. 'int' → logprob: -15.000205039978027
    5. 'II' → logprob: -15.000205039978027
    6. 'IN' → logprob: -16.37520408630371
    7. 'Int' → logprob: -17.00020408630371
    8. 'input' → logprob: -17.75020408630371
    9. 'i' → logprob: -17.87520408630371
    10. 'IS' → logprob: -18.12520408630371

Token 420: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.584239938296378e-06
    2. '()' → logprob: -12.500007629394531
    3. ' ():' → logprob: -13.125007629394531
    4. '():
' → logprob: -13.250007629394531
    5. ' ()' → logprob: -19.87500762939453
    6. '():
' → logprob: -20.37500762939453
    7. '():

' → logprob: -20.87500762939453
    8. '();' → logprob: -21.75000762939453
    9. '(' → logprob: -21.75000762939453
    10. '().' → logprob: -22.37500762939453

Token 421: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.32885730266571045
    2. 'return' → logprob: -1.3288573026657104
    3. 'int' → logprob: -4.328857421875
    4. ' int' → logprob: -6.078857421875
    5. '   ' → logprob: -14.328857421875
    6. ' ' → logprob: -14.703857421875
    7. '	return' → logprob: -16.953857421875
    8. '=int' → logprob: -17.203857421875
    9. '
' → logprob: -17.328857421875
    10. ' ' → logprob: -17.703857421875

Token 422: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001170225441455841
    2. ' int' → logprob: -6.7511701583862305
    3. '	int' → logprob: -18.501171112060547
    4. '(int' → logprob: -21.001171112060547
    5. ' ' → logprob: -21.251171112060547
    6. 'in' → logprob: -21.626171112060547
    7. '[int' → logprob: -22.126171112060547
    8. '=int' → logprob: -22.501171112060547
    9. '<int' → logprob: -22.626171112060547
    10. '  ' → logprob: -22.751171112060547

Token 423: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0009131324477493763
    2. '(' → logprob: -7.000913143157959
    3. 'sys' → logprob: -13.3759126663208
    4. ' (' → logprob: -17.125913619995117
    5. '=sys' → logprob: -17.500913619995117
    6. ' sys' → logprob: -17.625913619995117
    7. '(system' → logprob: -18.000913619995117
    8. '(Sys' → logprob: -18.125913619995117
    9. '(input' → logprob: -19.125913619995117
    10. '(next' → logprob: -19.500913619995117

Token 424: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.173704271830502e-06
    2. '.stdout' → logprob: -13.37500286102295
    3. '.' → logprob: -13.87500286102295
    4. 'stdin' → logprob: -14.87500286102295
    5. '.std' → logprob: -16.250003814697266
    6. '.readline' → logprob: -16.625003814697266
    7. ' .' → logprob: -17.500003814697266
    8. '(stdin' → logprob: -17.750003814697266
    9. '.argv' → logprob: -18.875003814697266
    10. ' stdin' → logprob: -19.250003814697266

Token 425: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.05300743505358696
    2. '.stdin' → logprob: -3.0530073642730713
    3. 'stdin' → logprob: -5.42800760269165
    4. '(stdin' → logprob: -11.303007125854492
    5. '().' → logprob: -12.803007125854492
    6. '.' → logprob: -13.553007125854492
    7. '.stdout' → logprob: -13.928007125854492
    8. 'read' → logprob: -14.928007125854492
    9. '.read' → logprob: -15.428007125854492
    10. '.std' → logprob: -15.553007125854492

Token 426: '())

' (ID: 27654)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04883703589439392
    2. '())' → logprob: -3.0488369464874268
    3. '()' → logprob: -8.298836708068848
    4. '.readline' → logprob: -14.673836708068848
    5. ' ())' → logprob: -15.923836708068848
    6. '()))' → logprob: -16.673837661743164
    7. '(' → logprob: -16.798837661743164
    8. '();)' → logprob: -17.173837661743164
    9. '()]' → logprob: -17.298837661743164
    10. ' ().' → logprob: -17.423837661743164

Token 427: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.030764887109398842
    2. 'def' → logprob: -3.5307648181915283
    3. '
' → logprob: -7.405765056610107
    4. '<|end|>' → logprob: -9.03076457977295
    5. '\' → logprob: -9.15576457977295
    6. '()' → logprob: -10.03076457977295
    7. '\n' → logprob: -10.65576457977295
    8. '```' → logprob: -11.15576457977295
    9. '

' → logprob: -11.28076457977295
    10. 'newline' → logprob: -11.53076457977295

Token 428: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.36988312005996704
    2. 'LS' → logprob: -1.2448830604553223
    3. 'L' → logprob: -4.119883060455322
    4. 'IS' → logprob: -5.744883060455322
    5. 'SI' → logprob: -7.494883060455322
    6. 'Ls' → logprob: -7.494883060455322
    7. 'F' → logprob: -7.994883060455322
    8. 'MI' → logprob: -9.86988353729248
    9. 'LI' → logprob: -9.99488353729248
    10. 'def' → logprob: -10.24488353729248

Token 429: ' :' (ID: 712)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -7.350386295001954e-05
    2. '()' → logprob: -9.625073432922363
    3. 'def' → logprob: -12.125073432922363
    4. ' ():' → logprob: -13.250073432922363
    5. '():
' → logprob: -15.500073432922363
    6. ':' → logprob: -18.00007438659668
    7. '(' → logprob: -18.25007438659668
    8. ' ()' → logprob: -18.50007438659668
    9. ' def' → logprob: -18.62507438659668
    10. '();' → logprob: -19.12507438659668

Token 430: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04863278940320015
    2. 'lambda' → logprob: -3.048632860183716
    3. ' lambda' → logprob: -10.673632621765137
    4. '(lambda' → logprob: -11.298632621765137
    5. ' def' → logprob: -12.173632621765137
    6. '()' → logprob: -13.423632621765137
    7. 'sys' → logprob: -13.673632621765137
    8. '=lambda' → logprob: -14.423632621765137
    9. '():' → logprob: -14.798632621765137
    10. ')' → logprob: -15.048632621765137

Token 431: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1372065395116806
    2. '().' → logprob: -2.512206554412842
    3. 'sys' → logprob: -3.262206554412842
    4. 'a' → logprob: -5.637206554412842
    5. 'lambda' → logprob: -6.637206554412842
    6. '():' → logprob: -7.012206554412842
    7. 'une' → logprob: -7.387206554412842
    8. '=sys' → logprob: -7.512206554412842
    9. 'line' → logprob: -7.637206554412842
    10. '(sys' → logprob: -8.012206077575684

Token 432: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.006485265679657459
    2. '().' → logprob: -5.506485462188721
    3. 'ine' → logprob: -6.381485462188721
    4. '()' → logprob: -7.756485462188721
    5. 'ligne' → logprob: -8.631484985351562
    6. 'string' → logprob: -10.131484985351562
    7. ' line' → logprob: -11.131484985351562
    8. 'list' → logprob: -11.506484985351562
    9. 'strip' → logprob: -11.631484985351562
    10. '.readline' → logprob: -12.006484985351562

Token 433: ' (' (ID: 350)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004512719344347715
    2. '()' → logprob: -5.504512786865234
    3. '():' → logprob: -7.754512786865234
    4. '();' → logprob: -12.754512786865234
    5. 'def' → logprob: -13.629512786865234
    6. '()\' → logprob: -15.754512786865234
    7. ' ().' → logprob: -15.879512786865234
    8. '()
' → logprob: -15.879512786865234
    9. '()).' → logprob: -16.004512786865234
    10. '()

' → logprob: -16.379512786865234

Token 434: 'buffer' (ID: 15967)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5019931793212891
    2. '().' → logprob: -1.501993179321289
    3. ').' → logprob: -2.001993179321289
    4. '):' → logprob: -3.501993179321289
    5. '()' → logprob: -6.001993179321289
    6. 'sys' → logprob: -6.001993179321289
    7. 'string' → logprob: -7.501993179321289
    8. 'def' → logprob: -8.126993179321289
    9. 'strip' → logprob: -8.751993179321289
    10. '():' → logprob: -8.876993179321289

Token 435: ')' (ID: 8)
  Prédit: '=sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -0.8167033791542053
    2. '().' → logprob: -0.9417033791542053
    3. 'ed' → logprob: -2.4417033195495605
    4. ' =' → logprob: -3.6917033195495605
    5. '())' → logprob: -3.8167033195495605
    6. '=' → logprob: -3.9417033195495605
    7. ')' → logprob: -4.5667033195495605
    8. '()' → logprob: -6.1917033195495605
    9. '.readline' → logprob: -7.3167033195495605
    10. 'e' → logprob: -7.8167033195495605

Token 436: ' jusqu' (ID: 21961)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.09354525804519653
    2. '():' → logprob: -2.7185451984405518
    3. 'def' → logprob: -4.343545436859131
    4. '()' → logprob: -4.593545436859131
    5. '=' → logprob: -9.218544960021973
    6. ' =' → logprob: -10.218544960021973
    7. ':' → logprob: -10.218544960021973
    8. '):' → logprob: -10.968544960021973
    9. ' def' → logprob: -11.843544960021973
    10. ')' → logprob: -11.843544960021973

Token 437: ''à' (ID: 33688)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.023674584925174713
    2. '()' → logprob: -4.898674488067627
    3. 'au' → logprob: -5.398674488067627
    4. '("\' → logprob: -6.023674488067627
    5. '()\' → logprob: -6.148674488067627
    6. 'e' → logprob: -6.398674488067627
    7. ''\' → logprob: -6.898674488067627
    8. ''à' → logprob: -7.148674488067627
    9. 'a' → logprob: -7.273674488067627
    10. ''au' → logprob: -7.523674488067627

Token 438: ' la' (ID: 557)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.019356265664100647
    2. '\n' → logprob: -4.1443562507629395
    3. '"\' → logprob: -6.3943562507629395
    4. 'la' → logprob: -7.1443562507629395
    5. 'l' → logprob: -8.269356727600098
    6. '('\' → logprob: -8.894356727600098
    7. 'b' → logprob: -8.894356727600098
    8. 'newline' → logprob: -9.769356727600098
    9. ' '\' → logprob: -10.144356727600098
    10. 'le' → logprob: -10.394356727600098

Token 439: ' nouvelle' (ID: 24562)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2253214567899704
    2. ''\' → logprob: -2.2253215312957764
    3. 'newline' → logprob: -2.6003215312957764
    4. 'n' → logprob: -4.850321292877197
    5. '"\' → logprob: -5.600321292877197
    6. ' \' → logprob: -6.475321292877197
    7. '```' → logprob: -6.850321292877197
    8. 'fin' → logprob: -7.100321292877197
    9. '`\' → logprob: -7.350321292877197
    10. '('\' → logprob: -7.475321292877197

Token 440: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.016801519319415092
    2. 'line' → logprob: -4.516801357269287
    3. ' ligne' → logprob: -5.266801357269287
    4. 'l' → logprob: -7.891801357269287
    5. 'lig' → logprob: -9.516801834106445
    6. '_l' → logprob: -10.016801834106445
    7. 'L' → logprob: -10.891801834106445
    8. 'er' → logprob: -11.266801834106445
    9. '-l' → logprob: -11.391801834106445
    10. 'lin' → logprob: -12.141801834106445

Token 441: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.38537687063217163
    2. '().' → logprob: -1.7603769302368164
    3. 'def' → logprob: -2.5103769302368164
    4. '():' → logprob: -2.8853769302368164
    5. ' =' → logprob: -5.135376930236816
    6. '=' → logprob: -6.010376930236816
    7. ')' → logprob: -6.885376930236816
    8. '(),' → logprob: -8.510376930236816
    9. '()
' → logprob: -8.510376930236816
    10. '();' → logprob: -8.760376930236816

Token 442: ' enl' (ID: 116494)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018771132454276085
    2. ' def' → logprob: -4.018771171569824
    3. 'return' → logprob: -7.768771171569824
    4. ' return' → logprob: -8.893771171569824
    5. 'strip' → logprob: -10.768771171569824
    6. ' lambda' → logprob: -11.768771171569824
    7. '()' → logprob: -11.893771171569824
    8. 'rstrip' → logprob: -12.018771171569824
    9. 'lambda' → logprob: -12.143771171569824
    10. ')' → logprob: -12.768771171569824

Token 443: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.05547069385647774
    2. 'eve' → logprob: -3.0554707050323486
    3. 'e' → logprob: -5.0554704666137695
    4. 'ever' → logprob: -9.18047046661377
    5. 'ev' → logprob: -9.80547046661377
    6. 'erve' → logprob: -9.93047046661377
    7. 'ote' → logprob: -10.18047046661377
    8. 'ive' → logprob: -10.30547046661377
    9. 'èves' → logprob: -10.55547046661377
    10. 'ove' → logprob: -10.80547046661377

Token 444: ' le' (ID: 505)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12856988608837128
    2. '().' → logprob: -2.1285698413848877
    3. '()\' → logprob: -6.878570079803467
    4. '()
' → logprob: -8.753569602966309
    5. 'le' → logprob: -8.878569602966309
    6. '('\' → logprob: -9.003569602966309
    7. 'l' → logprob: -9.878569602966309
    8. '()

' → logprob: -10.878569602966309
    9. ' l' → logprob: -10.878569602966309
    10. 'rstrip' → logprob: -10.878569602966309

Token 445: ' saut' (ID: 111480)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1639237105846405
    2. ''\' → logprob: -2.163923740386963
    3. ' \' → logprob: -3.788923740386963
    4. '"\' → logprob: -5.038923740386963
    5. 's' → logprob: -6.788923740386963
    6. '\t' → logprob: -6.913923740386963
    7. 'newline' → logprob: -7.038923740386963
    8. 'rstrip' → logprob: -7.288923740386963
    9. '
' → logprob: -7.413923740386963
    10. '\s' → logprob: -7.413923740386963

Token 446: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24857191741466522
    2. 'de' → logprob: -2.6235718727111816
    3. 'line' → logprob: -3.6235718727111816
    4. '\' → logprob: -4.248571872711182
    5. '\n' → logprob: -4.373571872711182
    6. '('\' → logprob: -4.623571872711182
    7. 'ed' → logprob: -4.623571872711182
    8. 'ing' → logprob: -4.873571872711182
    9. 'eline' → logprob: -4.873571872711182
    10. '='\' → logprob: -4.998571872711182

Token 447: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0012724967673420906
    2. ' ligne' → logprob: -7.501272678375244
    3. 'line' → logprob: -7.751272678375244
    4. 'l' → logprob: -8.376272201538086
    5. 'lig' → logprob: -11.126272201538086
    6. 'li' → logprob: -11.751272201538086
    7. 'la' → logprob: -11.876272201538086
    8. '\n' → logprob: -11.876272201538086
    9. 'lia' → logprob: -12.001272201538086
    10. 'lin' → logprob: -12.626272201538086

Token 448: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.055370211601257324
    2. '().' → logprob: -3.305370330810547
    3. 'def' → logprob: -4.430370330810547
    4. ' =' → logprob: -6.305370330810547
    5. '=' → logprob: -6.805370330810547
    6. '():' → logprob: -6.930370330810547
    7. '()
' → logprob: -7.180370330810547
    8. 'rstrip' → logprob: -9.055370330810547
    9. '()\' → logprob: -9.055370330810547
    10. ')' → logprob: -9.305370330810547

Token 449: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.41923630237579346
    2. 'rstrip' → logprob: -1.6692363023757935
    3. ' return' → logprob: -2.419236183166504
    4. 'strip' → logprob: -3.044236183166504
    5. ' retourne' → logprob: -4.544236183166504
    6. '.strip' → logprob: -6.169236183166504
    7. 'r' → logprob: -6.294236183166504
    8. 'def' → logprob: -7.294236183166504
    9. '.rstrip' → logprob: -7.419236183166504
    10. 'ret' → logprob: -8.294236183166504

Token 450: ' dé' (ID: 2393)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10297626256942749
    2. 'rstrip' → logprob: -2.3529763221740723
    3. '.strip' → logprob: -5.977976322174072
    4. ' strip' → logprob: -8.852975845336914
    5. '.rstrip' → logprob: -9.977975845336914
    6. 'return' → logprob: -11.102975845336914
    7. '_strip' → logprob: -11.602975845336914
    8. 'r' → logprob: -11.852975845336914
    9. 'replace' → logprob: -12.977975845336914
    10. '(strip' → logprob: -13.727975845336914

Token 451: 'code' (ID: 3056)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0006354739889502525
    2. 'lim' → logprob: -8.375635147094727
    3. 'fin' → logprob: -9.250635147094727
    4. 'rive' → logprob: -10.000635147094727
    5. 'fine' → logprob: -10.125635147094727
    6. 'c' → logprob: -10.375635147094727
    7. 'space' → logprob: -10.625635147094727
    8. 'fault' → logprob: -11.000635147094727
    9. 'l' → logprob: -11.375635147094727
    10. 'la' → logprob: -11.375635147094727

Token 452: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.290508508682251
    2. ' =' → logprob: -2.165508508682251
    3. '().' → logprob: -2.165508508682251
    4. '():' → logprob: -4.415508270263672
    5. '=' → logprob: -5.290508270263672
    6. 'def' → logprob: -5.540508270263672
    7. '()
' → logprob: -7.290508270263672
    8. 'utf' → logprob: -8.540508270263672
    9. ' ()' → logprob: -8.915508270263672
    10. '();' → logprob: -9.540508270263672

Token 453: 'utf' (ID: 13353)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5209349393844604
    2. '().' → logprob: -1.2709349393844604
    3. '('' → logprob: -3.27093505859375
    4. '()' → logprob: -3.52093505859375
    5. '())' → logprob: -4.14593505859375
    6. 'encoding' → logprob: -4.77093505859375
    7. '(),' → logprob: -5.14593505859375
    8. 'utf' → logprob: -5.27093505859375
    9. 'sys' → logprob: -5.27093505859375
    10. ')
' → logprob: -5.64593505859375

Token 454: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014189241454005241
    2. '8' → logprob: -4.26418924331665
    3. '=' → logprob: -11.514188766479492
    4. ')' → logprob: -11.764188766479492
    5. '-)' → logprob: -13.139188766479492
    6. '')' → logprob: -13.389188766479492
    7. '_' → logprob: -14.014188766479492
    8. '```' → logprob: -14.139188766479492
    9. '‑' → logprob: -14.389188766479492
    10. ')-' → logprob: -14.639188766479492

Token 455: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: 0.0
    2. '-' → logprob: -17.0
    3. '```' → logprob: -17.625
    4. '
' → logprob: -19.5
    5. ')' → logprob: -20.375
    6. 'encoding' → logprob: -20.875
    7. '')' → logprob: -21.25
    8. '}' → logprob: -21.25
    9. '８' → logprob: -21.375
    10. '``' → logprob: -21.625

Token 456: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08383636921644211
    2. '())' → logprob: -2.833836317062378
    3. ').' → logprob: -4.458836555480957
    4. '()' → logprob: -5.458836555480957
    5. '):' → logprob: -5.708836555480957
    6. '()).' → logprob: -7.083836555480957
    7. ' )' → logprob: -8.083836555480957
    8. ')
' → logprob: -8.208836555480957
    9. '().' → logprob: -8.833836555480957
    10. '())
' → logprob: -8.833836555480957

Token 457: ' puis' (ID: 18766)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0732681080698967
    2. ' lambda' → logprob: -3.198268175125122
    3. ' def' → logprob: -4.198267936706543
    4. 'lambda' → logprob: -4.323267936706543
    5. 'decode' → logprob: -8.073267936706543
    6. ')' → logprob: -8.823267936706543
    7. 'sys' → logprob: -8.948267936706543
    8. '#' → logprob: -8.948267936706543
    9. '=lambda' → logprob: -8.948267936706543
    10. '(lambda' → logprob: -9.448267936706543

Token 458: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2576548755168915
    2. 'def' → logprob: -1.7576549053192139
    3. ' return' → logprob: -4.382654666900635
    4. 'decode' → logprob: -4.382654666900635
    5. 'strip' → logprob: -4.757654666900635
    6. 'rstrip' → logprob: -4.882654666900635
    7. 'returns' → logprob: -5.132654666900635
    8. 'sys' → logprob: -6.132654666900635
    9. ' returns' → logprob: -6.132654666900635
    10. 'encode' → logprob: -7.257654666900635

Token 459: ' décou' (ID: 68302)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2448100745677948
    2. 'return' → logprob: -1.8698101043701172
    3. 'rstrip' → logprob: -2.869810104370117
    4. 'def' → logprob: -5.744810104370117
    5. ' return' → logprob: -6.744810104370117
    6. 'decode' → logprob: -7.369810104370117
    7. ' strip' → logprob: -7.744810104370117
    8. '.strip' → logprob: -8.369810104370117
    9. 'encode' → logprob: -8.494810104370117
    10. 'str' → logprob: -8.869810104370117

Token 460: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0025511696003377438
    2. 'page' → logprob: -6.127551078796387
    3. 'p' → logprob: -8.877551078796387
    4. 'pte' → logprob: -8.877551078796387
    5. 'per' → logprob: -10.252551078796387
    6. 'ple' → logprob: -11.252551078796387
    7. 'ppe' → logprob: -11.877551078796387
    8. 'te' → logprob: -12.002551078796387
    9. 'pa' → logprob: -12.377551078796387
    10. 'paste' → logprob: -12.377551078796387

Token 461: ' sur' (ID: 1512)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7231852412223816
    2. '().' → logprob: -0.7231852412223816
    3. '=' → logprob: -4.223185062408447
    4. 'def' → logprob: -4.723185062408447
    5. ' =' → logprob: -5.348185062408447
    6. '()
' → logprob: -7.223185062408447
    7. '=lambda' → logprob: -9.098185539245605
    8. '=sys' → logprob: -9.723185539245605
    9. ')' → logprob: -9.848185539245605
    10. '()[' → logprob: -10.223185539245605

Token 462: ' les' (ID: 1341)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07957544922828674
    2. ' b' → logprob: -3.204575538635254
    3. '()' → logprob: -4.204575538635254
    4. ' l' → logprob: -4.704575538635254
    5. 'l' → logprob: -5.079575538635254
    6. 'spaces' → logprob: -6.704575538635254
    7. 'esp' → logprob: -6.829575538635254
    8. ' espaces' → logprob: -7.329575538635254
    9. 'space' → logprob: -8.204575538635254
    10. ''' → logprob: -8.204575538635254

Token 463: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.5442804098129272
    2. 'esp' → logprob: -0.9192804098129272
    3. 'b' → logprob: -4.669280529022217
    4. ' b' → logprob: -5.419280529022217
    5. 'spaces' → logprob: -6.294280529022217
    6. 'es' → logprob: -6.419280529022217
    7. ''esp' → logprob: -7.044280529022217
    8. ' espacios' → logprob: -7.669280529022217
    9. ' espace' → logprob: -7.919280529022217
    10. ''espace' → logprob: -8.169280052185059

Token 464: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003629527287557721
    2. '=' → logprob: -6.628629684448242
    3. ' =' → logprob: -6.753629684448242
    4. '():' → logprob: -7.628629684448242
    5. '()' → logprob: -8.628629684448242
    6. '()
' → logprob: -8.628629684448242
    7. ' def' → logprob: -9.253629684448242
    8. '
' → logprob: -9.378629684448242
    9. ':' → logprob: -10.628629684448242
    10. '#' → logprob: -10.628629684448242

Token 465: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.64839569455944e-05
    2. ' def' → logprob: -10.375076293945312
    3. '():' → logprob: -11.000076293945312
    4. '
' → logprob: -11.625076293945312
    5. ':' → logprob: -12.250076293945312
    6. '=' → logprob: -12.375076293945312
    7. '()' → logprob: -12.750076293945312
    8. ' =' → logprob: -12.875076293945312
    9. '()
' → logprob: -13.375076293945312
    10. '#' → logprob: -13.500076293945312

Token 466: ' LS' (ID: 60790)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.47427505254745483
    2. 'sys' → logprob: -1.3492751121520996
    3. 'lambda' → logprob: -2.2242751121520996
    4. 'def' → logprob: -4.8492751121521
    5. 'input' → logprob: -6.9742751121521
    6. 'ls' → logprob: -7.3492751121521
    7. 'LI' → logprob: -8.349274635314941
    8. ' lambda' → logprob: -9.099274635314941
    9. 'L' → logprob: -10.099274635314941
    10. 'list' → logprob: -10.224274635314941

Token 467: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0015128388768061996
    2. ' ():' → logprob: -7.5015130043029785
    3. '():
' → logprob: -7.6265130043029785
    4. '()' → logprob: -7.7515130043029785
    5. ' ()' → logprob: -10.87651252746582
    6. 'def' → logprob: -12.12651252746582
    7. '(buffer' → logprob: -12.25151252746582
    8. ' =' → logprob: -13.00151252746582
    9. '=' → logprob: -13.12651252746582
    10. '(buf' → logprob: -13.37651252746582

Token 468: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5438206791877747
    2. ' return' → logprob: -0.9188206791877747
    3. '   ' → logprob: -4.168820858001709
    4. 'def' → logprob: -6.293820858001709
    5. 'sys' → logprob: -6.418820858001709
    6. ' sys' → logprob: -7.418820858001709
    7. '():' → logprob: -7.918820858001709
    8. '()' → logprob: -8.54382038116455
    9. 'line' → logprob: -9.66882038116455
    10. ' def' → logprob: -9.79382038116455

Token 469: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0003148472751490772
    2. 'list' → logprob: -8.250314712524414
    3. ' sys' → logprob: -10.500314712524414
    4. 'input' → logprob: -11.000314712524414
    5. '(sys' → logprob: -12.000314712524414
    6. '[' → logprob: -12.875314712524414
    7. '=sys' → logprob: -16.000314712524414
    8. '	sys' → logprob: -16.625314712524414
    9. 'string' → logprob: -16.875314712524414
    10. '[]' → logprob: -17.000314712524414

Token 470: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.8961017202818766e-05
    2. '.stdout' → logprob: -9.750059127807617
    3. 'stdin' → logprob: -14.625059127807617
    4. '.' → logprob: -15.875059127807617
    5. '.argv' → logprob: -16.750059127807617
    6. '.std' → logprob: -18.125059127807617
    7. '.readline' → logprob: -18.500059127807617
    8. '.stderr' → logprob: -18.750059127807617
    9. '(stdin' → logprob: -18.875059127807617
    10. ' stdin' → logprob: -20.125059127807617

Token 471: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001933992956764996
    2. '.buffer' → logprob: -6.251934051513672
    3. 'buffer' → logprob: -12.501934051513672
    4. '.stdin' → logprob: -13.751934051513672
    5. '.read' → logprob: -14.626934051513672
    6. '.stdout' → logprob: -16.501934051513672
    7. '.' → logprob: -17.751934051513672
    8. '.readlines' → logprob: -18.001934051513672
    9. '_buffer' → logprob: -18.001934051513672
    10. ' buffer' → logprob: -18.251934051513672

Token 472: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.749814019713085e-06
    2. '.read' → logprob: -12.500006675720215
    3. '.' → logprob: -12.875006675720215
    4. '.readlines' → logprob: -15.875006675720215
    5. '.rstrip' → logprob: -16.00000762939453
    6. ' readline' → logprob: -16.12500762939453
    7. '.decode' → logprob: -18.12500762939453
    8. '.raw' → logprob: -18.62500762939453
    9. '.recv' → logprob: -19.25000762939453
    10. '.peek' → logprob: -19.50000762939453

Token 473: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.5597102396423e-05
    2. '()' → logprob: -10.250035285949707
    3. '.rstrip' → logprob: -17.125036239624023
    4. ' ().' → logprob: -17.625036239624023
    5. '(' → logprob: -18.000036239624023
    6. 'rstrip' → logprob: -18.125036239624023
    7. '().__' → logprob: -19.000036239624023
    8. '[:-' → logprob: -19.250036239624023
    9. '.strip' → logprob: -19.875036239624023
    10. '()?.' → logprob: -20.000036239624023

Token 474: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.7948486804962158
    2. 'strip' → logprob: -1.2948486804962158
    3. 'decode' → logprob: -1.2948486804962158
    4. 'split' → logprob: -7.669848442077637
    5. '.rstrip' → logprob: -13.294848442077637
    6. ' strip' → logprob: -13.294848442077637
    7. '().' → logprob: -14.419848442077637
    8. ' decode' → logprob: -14.919848442077637
    9. 'replace' → logprob: -15.294848442077637
    10. '[:-' → logprob: -15.544848442077637

Token 475: '().' (ID: 1454)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1862780600786209
    2. '().' → logprob: -1.9362781047821045
    3. '(b' → logprob: -4.061277866363525
    4. '()' → logprob: -4.811277866363525
    5. ' b' → logprob: -8.186278343200684
    6. '()\' → logprob: -10.561278343200684
    7. '.b' → logprob: -11.061278343200684
    8. '=b' → logprob: -11.686278343200684
    9. '	b' → logprob: -12.186278343200684
    10. '()
' → logprob: -12.436278343200684

Token 476: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.04859350249171257
    2. 'split' → logprob: -3.048593521118164
    3. 'rstrip' → logprob: -12.798593521118164
    4. 'raw' → logprob: -13.298593521118164
    5. '.decode' → logprob: -14.298593521118164
    6. ' decode' → logprob: -14.673593521118164
    7. 'strip' → logprob: -15.048593521118164
    8. 'dec' → logprob: -15.673593521118164
    9. 'decoded' → logprob: -16.548593521118164
    10. '_decode' → logprob: -16.673593521118164

Token 477: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014168326742947102
    2. '('' → logprob: -4.3891682624816895
    3. 'utf' → logprob: -6.8891682624816895
    4. '().' → logprob: -8.264168739318848
    5. '(' → logprob: -8.889168739318848
    6. '("' → logprob: -9.764168739318848
    7. '()[' → logprob: -10.139168739318848
    8. '();' → logprob: -10.389168739318848
    9. '()='' → logprob: -10.764168739318848
    10. 'Utf' → logprob: -11.389168739318848

Token 478: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -2.5776860184123507e-06
    2. 'ascii' → logprob: -13.25000286102295
    3. 'UTF' → logprob: -14.62500286102295
    4. ' utf' → logprob: -15.75000286102295
    5. 'Utf' → logprob: -18.000001907348633
    6. '')' → logprob: -18.125001907348633
    7. 'unicode' → logprob: -18.625001907348633
    8. '_utf' → logprob: -18.875001907348633
    9. 'sys' → logprob: -19.875001907348633
    10. 'ut' → logprob: -20.125001907348633

Token 479: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.836499985889532e-05
    2. '8' → logprob: -9.7500581741333
    3. '')' → logprob: -18.250059127807617
    4. '‑' → logprob: -18.375059127807617
    5. ''-' → logprob: -18.875059127807617
    6. '=utf' → logprob: -20.125059127807617
    7. '-)' → logprob: -20.500059127807617
    8. '-
' → logprob: -20.750059127807617
    9. '```' → logprob: -20.750059127807617
    10. '-_' → logprob: -20.875059127807617

Token 480: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.3856492842023727e-06
    2. 'utf' → logprob: -13.625000953674316
    3. '-' → logprob: -15.875000953674316
    4. '')' → logprob: -20.375001907348633
    5. '８' → logprob: -21.625001907348633
    6. ''' → logprob: -22.625001907348633
    7. '```' → logprob: -22.750001907348633
    8. 'ascii' → logprob: -23.000001907348633
    9. '
' → logprob: -24.000001907348633
    10. '۸' → logprob: -24.375001907348633

Token 481: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.08411774039268494
    2. ')' → logprob: -3.4591176509857178
    3. '').' → logprob: -3.7091176509857178
    4. '()).' → logprob: -3.8341176509857178
    5. '()' → logprob: -6.209117889404297
    6. '())' → logprob: -7.334117889404297
    7. ' ).' → logprob: -8.834117889404297
    8. '().' → logprob: -9.209117889404297
    9. '").' → logprob: -9.209117889404297
    10. '')' → logprob: -9.834117889404297

Token 482: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00033713103039190173
    2. 'strip' → logprob: -8.000337600708008
    3. 'spl' → logprob: -13.750337600708008
    4. 'rstrip' → logprob: -14.500337600708008
    5. 'decode' → logprob: -16.750337600708008
    6. ' split' → logprob: -18.500337600708008
    7. '(split' → logprob: -19.750337600708008
    8. 's' → logprob: -22.500337600708008
    9. '.split' → logprob: -22.875337600708008
    10. '_split' → logprob: -23.250337600708008

Token 483: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010536498157307506
    2. '(' → logprob: -6.876053810119629
    3. '()]' → logprob: -11.876053810119629
    4. '()[' → logprob: -12.126053810119629
    5. ' ()' → logprob: -12.501053810119629
    6. '()
' → logprob: -13.626053810119629
    7. '#' → logprob: -14.501053810119629
    8. '()\' → logprob: -14.501053810119629
    9. '()

' → logprob: -14.626053810119629
    10. '('' → logprob: -15.126053810119629

Token 484: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07009971886873245
    2. 'def' → logprob: -2.6950998306274414
    3. 'D' → logprob: -10.070099830627441
    4. 'LS' → logprob: -10.320099830627441
    5. 'L' → logprob: -10.445099830627441
    6. '#
' → logprob: -11.695099830627441
    7. 'S' → logprob: -11.945099830627441
    8. '```' → logprob: -12.070099830627441
    9. '\' → logprob: -12.445099830627441
    10. 'from' → logprob: -12.695099830627441

Token 485: ' S' (ID: 336)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6527209281921387
    2. 'S' → logprob: -0.9027209281921387
    3. 'L' → logprob: -3.4027209281921387
    4. '#' → logprob: -4.402720928192139
    5. 'LS' → logprob: -4.402720928192139
    6. 'print' → logprob: -5.402720928192139
    7. 'SS' → logprob: -5.402720928192139
    8. 'input' → logprob: -7.027720928192139
    9. 's' → logprob: -7.152720928192139
    10. 'LA' → logprob: -7.277720928192139

Token 486: ' :' (ID: 712)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00018363336857873946
    2. 'def' → logprob: -8.750184059143066
    3. '()' → logprob: -10.625184059143066
    4. ' ():' → logprob: -14.375184059143066
    5. ' def' → logprob: -16.37518310546875
    6. '():
' → logprob: -16.62518310546875
    7. '();' → logprob: -18.62518310546875
    8. ':' → logprob: -19.37518310546875
    9. '().' → logprob: -19.50018310546875
    10. '()>' → logprob: -19.75018310546875

Token 487: ' Lit' (ID: 45595)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06711605936288834
    2. 'def' → logprob: -3.0671160221099854
    3. 'lambda' → logprob: -4.0671162605285645
    4. ' sys' → logprob: -7.4421162605285645
    5. ' lambda' → logprob: -7.8171162605285645
    6. 'return' → logprob: -9.817115783691406
    7. '=sys' → logprob: -9.942115783691406
    8. 'S' → logprob: -10.192115783691406
    9. '(sys' → logprob: -10.192115783691406
    10. ' def' → logprob: -10.317115783691406

Token 488: ' une' (ID: 2463)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.292237251996994
    2. '()' → logprob: -1.4172372817993164
    3. '().' → logprob: -4.792237281799316
    4. '=sys' → logprob: -7.042237281799316
    5. 'a' → logprob: -7.292237281799316
    6. ' sys' → logprob: -7.417237281799316
    7. '(sys' → logprob: -8.792237281799316
    8. 'line' → logprob: -8.917237281799316
    9. 'def' → logprob: -8.917237281799316
    10. '():' → logprob: -10.417237281799316

Token 489: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03676924481987953
    2. '()' → logprob: -3.411769151687622
    3. '().' → logprob: -6.911769390106201
    4. 'ligne' → logprob: -6.911769390106201
    5. ' line' → logprob: -7.036769390106201
    6. 'string' → logprob: -9.536768913269043
    7. '():' → logprob: -10.536768913269043
    8. '()
' → logprob: -10.536768913269043
    9. 'tring' → logprob: -10.536768913269043
    10. '_line' → logprob: -10.786768913269043

Token 490: ' (' (ID: 350)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0022224606946110725
    2. '()' → logprob: -6.127222537994385
    3. 'def' → logprob: -10.627222061157227
    4. '().' → logprob: -11.502222061157227
    5. '():
' → logprob: -13.627222061157227
    6. ' ():' → logprob: -13.752222061157227
    7. '();' → logprob: -15.502222061157227
    8. '()>' → logprob: -15.877222061157227
    9. '()

' → logprob: -16.752222061157227
    10. '()
' → logprob: -16.877222061157227

Token 491: 'buffer' (ID: 15967)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045043591409921646
    2. 'sys' → logprob: -3.295043706893921
    3. '()' → logprob: -6.045043468475342
    4. '().' → logprob: -6.545043468475342
    5. ')return' → logprob: -7.170043468475342
    6. '())' → logprob: -7.545043468475342
    7. '=sys' → logprob: -7.545043468475342
    8. '):' → logprob: -7.670043468475342
    9. ').' → logprob: -7.795043468475342
    10. '(sys' → logprob: -8.9200439453125

Token 492: ')' (ID: 8)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6988491415977478
    2. '()' → logprob: -1.0738492012023926
    3. '):' → logprob: -2.0738492012023926
    4. ')' → logprob: -3.9488492012023926
    5. '().' → logprob: -4.698849201202393
    6. 'def' → logprob: -5.073849201202393
    7. '())' → logprob: -7.698849201202393
    8. '()
' → logprob: -9.948848724365234
    9. '());' → logprob: -9.948848724365234
    10. '()).' → logprob: -10.073848724365234

Token 493: ' et' (ID: 859)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3886967599391937
    2. 'def' → logprob: -1.1386967897415161
    3. '()' → logprob: -6.388696670532227
    4. '=' → logprob: -9.513696670532227
    5. ' def' → logprob: -9.763696670532227
    6. ' =' → logprob: -12.263696670532227
    7. ':' → logprob: -13.013696670532227
    8. '().' → logprob: -13.888696670532227
    9. '#' → logprob: -14.013696670532227
    10. '()
' → logprob: -14.263696670532227

Token 494: ' la' (ID: 557)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.003515137592330575
    2. '.rstrip' → logprob: -6.753515243530273
    3. 'return' → logprob: -7.003515243530273
    4. 'def' → logprob: -7.378515243530273
    5. 'decode' → logprob: -8.253515243530273
    6. 'd' → logprob: -8.503515243530273
    7. 'ret' → logprob: -9.128515243530273
    8. 'strip' → logprob: -9.503515243530273
    9. 'r' → logprob: -10.503515243530273
    10. 'dé' → logprob: -10.628515243530273

Token 495: ' ren' (ID: 5427)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.005573217757046223
    2. 'decode' → logprob: -5.255573272705078
    3. 'strip' → logprob: -8.005573272705078
    4. '.rstrip' → logprob: -12.130573272705078
    5. ' decode' → logprob: -15.880573272705078
    6. '.decode' → logprob: -16.255573272705078
    7. 'return' → logprob: -17.880573272705078
    8. 'read' → logprob: -18.130573272705078
    9. 'def' → logprob: -19.005573272705078
    10. 'rcode' → logprob: -19.255573272705078

Token 496: 'voie' (ID: 70072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3670142590999603
    2. 'ève' → logprob: -1.9920142889022827
    3. 'voie' → logprob: -2.492014169692993
    4. 'e' → logprob: -3.867014169692993
    5. 'v' → logprob: -3.867014169692993
    6. 'erve' → logprob: -3.992014169692993
    7. 'return' → logprob: -3.992014169692993
    8. 'sert' → logprob: -6.242014408111572
    9. 'et' → logprob: -6.367014408111572
    10. 'er' → logprob: -6.992014408111572

Token 497: ' comme' (ID: 7971)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5837557315826416
    2. '().' → logprob: -0.8337557315826416
    3. 'sys' → logprob: -5.3337554931640625
    4. 'def' → logprob: -5.9587554931640625
    5. '=sys' → logprob: -9.333755493164062
    6. '()[' → logprob: -10.583755493164062
    7. '().__' → logprob: -10.708755493164062
    8. '()
' → logprob: -10.708755493164062
    9. '(sys' → logprob: -10.708755493164062
    10. '.rstrip' → logprob: -10.708755493164062

Token 498: ' chaîne' (ID: 89288)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2654050290584564
    2. 'string' → logprob: -1.8904050588607788
    3. 'sys' → logprob: -2.8904049396514893
    4. ' string' → logprob: -4.640405178070068
    5. 'chaine' → logprob: -4.890405178070068
    6. ' str' → logprob: -5.640405178070068
    7. ' sys' → logprob: -6.640405178070068
    8. ' une' → logprob: -6.765405178070068
    9. 'rstrip' → logprob: -7.015405178070068
    10. 's' → logprob: -7.515405178070068

Token 499: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0033166229259222746
    2. 'def' → logprob: -6.378316402435303
    3. '().' → logprob: -7.628316402435303
    4. '<|end|>' → logprob: -8.128316879272461
    5. '():' → logprob: -8.628316879272461
    6. '()
' → logprob: -9.003316879272461
    7. '()]' → logprob: -9.378316879272461
    8. '()\' → logprob: -9.753316879272461
    9. '();' → logprob: -9.878316879272461
    10. '(' → logprob: -9.878316879272461

Token 500: 'sans' (ID: 106726)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007886500097811222
    2. 'str' → logprob: -5.7578864097595215
    3. 'sys' → logprob: -6.7578864097595215
    4. '())' → logprob: -6.8828864097595215
    5. '):' → logprob: -7.2578864097595215
    6. '().' → logprob: -8.00788688659668
    7. 'string' → logprob: -8.13288688659668
    8. '()' → logprob: -8.25788688659668
    9. '   ' → logprob: -8.25788688659668
    10. 'def' → logprob: -9.13288688659668

Token 501: ' décou' (ID: 68302)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.07144491374492645
    2. 'newline' → logprob: -2.9464449882507324
    3. 's' → logprob: -5.321444988250732
    4. ''\' → logprob: -5.946444988250732
    5. 'le' → logprob: -6.196444988250732
    6. 'rstrip' → logprob: -6.571444988250732
    7. 'la' → logprob: -6.821444988250732
    8. '\
' → logprob: -6.946444988250732
    9. 'l' → logprob: -7.196444988250732
    10. '\r' → logprob: -7.571444988250732

Token 502: 'page' (ID: 5342)
  Prédit: 'oupe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oupe' → logprob: -0.020317161455750465
    2. 'oup' → logprob: -4.770317077636719
    3. 'per' → logprob: -5.895317077636719
    4. 'te' → logprob: -6.270317077636719
    5. 'page' → logprob: -6.520317077636719
    6. 'p' → logprob: -7.020317077636719
    7. 'upe' → logprob: -7.270317077636719
    8. 'ou' → logprob: -7.520317077636719
    9. 'up' → logprob: -7.895317077636719
    10. 'tage' → logprob: -7.895317077636719

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006905409973114729
    2. '())' → logprob: -5.756905555725098
    3. '()' → logprob: -6.131905555725098
    4. 'def' → logprob: -6.631905555725098
    5. ').' → logprob: -9.381905555725098
    6. ')
' → logprob: -10.006905555725098
    7. ')\' → logprob: -10.881905555725098
    8. ' )' → logprob: -11.131905555725098
    9. '().' → logprob: -11.256905555725098
    10. '()
' → logprob: -11.256905555725098

Token 504: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.375000953674316
    3. 'S' → logprob: -18.625
    4. '```' → logprob: -20.0
    5. ':' → logprob: -20.125
    6. '()' → logprob: -21.625
    7. ':def' → logprob: -21.625
    8. '_' → logprob: -22.0
    9. 'return' → logprob: -23.125
    10. '	def' → logprob: -23.25

Token 505: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2958977520465851
    2. 'sys' → logprob: -1.7958977222442627
    3. 'LS' → logprob: -2.5458977222442627
    4. ' sys' → logprob: -4.545897960662842
    5. ' S' → logprob: -7.045897960662842
    6. ' LS' → logprob: -8.670897483825684
    7. 'lambda' → logprob: -10.045897483825684
    8. 'SYS' → logprob: -11.045897483825684
    9. 's' → logprob: -11.170897483825684
    10. 'Sys' → logprob: -11.545897483825684

Token 506: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.739826181321405e-05
    2. '()' → logprob: -10.12504768371582
    3. ' ():' → logprob: -11.87504768371582
    4. '():
' → logprob: -15.25004768371582
    5. ' ()' → logprob: -17.12504768371582
    6. '().' → logprob: -19.50004768371582
    7. '():

' → logprob: -20.12504768371582
    8. '()`' → logprob: -20.12504768371582
    9. '():
' → logprob: -21.00004768371582
    10. '()*' → logprob: -21.00004768371582

Token 507: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5540053248405457
    2. 'sys' → logprob: -1.5540053844451904
    3. ' return' → logprob: -1.9290053844451904
    4. ' sys' → logprob: -2.6790053844451904
    5. '   ' → logprob: -10.92900562286377
    6. '=sys' → logprob: -12.30400562286377
    7. '(sys' → logprob: -12.80400562286377
    8. ' ' → logprob: -13.17900562286377
    9. 's' → logprob: -13.80400562286377
    10. '	sys' → logprob: -13.80400562286377

Token 508: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.45848218582978e-06
    2. ' sys' → logprob: -13.00000286102295
    3. 'input' → logprob: -16.875001907348633
    4. '(sys' → logprob: -17.750001907348633
    5. '	sys' → logprob: -19.750001907348633
    6. '=sys' → logprob: -21.500001907348633
    7. 'Sys' → logprob: -22.000001907348633
    8. '.sys' → logprob: -22.000001907348633
    9. 's' → logprob: -22.125001907348633
    10. 'str' → logprob: -22.500001907348633

Token 509: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.08944896562025e-05
    2. '.stdout' → logprob: -10.125081062316895
    3. '().' → logprob: -10.750081062316895
    4. '.sys' → logprob: -11.250081062316895
    5. '.readline' → logprob: -13.000081062316895
    6. 'stdin' → logprob: -13.375081062316895
    7. '.buffer' → logprob: -13.500081062316895
    8. '(stdin' → logprob: -14.750081062316895
    9. 'sys' → logprob: -16.000080108642578
    10. '.std' → logprob: -16.250080108642578

Token 510: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011147208511829376
    2. '.buffer' → logprob: -4.5111470222473145
    3. 'buffer' → logprob: -9.261147499084473
    4. '.read' → logprob: -12.761147499084473
    5. '.' → logprob: -14.011147499084473
    6. '.stdin' → logprob: -15.386147499084473
    7. '	buffer' → logprob: -15.511147499084473
    8. '(buffer' → logprob: -16.511146545410156
    9. '().' → logprob: -16.511146545410156
    10. ' buffer' → logprob: -17.136146545410156

Token 511: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07920228689908981
    2. 'read' → logprob: -2.579202175140381
    3. ' readline' → logprob: -8.079202651977539
    4. 'rstrip' → logprob: -13.704202651977539
    5. '.read' → logprob: -14.329202651977539
    6. '_read' → logprob: -14.829202651977539
    7. 'readonly' → logprob: -15.454202651977539
    8. 'raw' → logprob: -16.95420265197754
    9. 'getline' → logprob: -17.07920265197754
    10. '.' → logprob: -17.32920265197754

Token 512: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00015169414109550416
    2. '()' → logprob: -8.875151634216309
    3. 'rstrip' → logprob: -12.250151634216309
    4. '.rstrip' → logprob: -12.375151634216309
    5. '.readline' → logprob: -13.000151634216309
    6. '().__' → logprob: -16.125152587890625
    7. ' ().' → logprob: -16.375152587890625
    8. ')' → logprob: -16.500152587890625
    9. '().'' → logprob: -17.250152587890625
    10. '(' → logprob: -17.500152587890625

Token 513: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.0005587508203461766
    2. 'decode' → logprob: -7.500558853149414
    3. 'read' → logprob: -12.250558853149414
    4. 'strip' → logprob: -14.000558853149414
    5. '.rstrip' → logprob: -16.500558853149414
    6. 'raw' → logprob: -16.875558853149414
    7. 'rst' → logprob: -19.625558853149414
    8. 'rl' → logprob: -20.000558853149414
    9. 'readonly' → logprob: -20.250558853149414
    10. 'rd' → logprob: -20.875558853149414

Token 514: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18011784553527832
    2. '().' → logprob: -1.8051178455352783
    3. '()\' → logprob: -8.4301176071167
    4. '(' → logprob: -9.8051176071167
    5. '()
' → logprob: -10.8051176071167
    6. '(),' → logprob: -11.1801176071167
    7. '())' → logprob: -11.5551176071167
    8. ' ()' → logprob: -11.5551176071167
    9. '<|end|>' → logprob: -11.9301176071167
    10. 'b' → logprob: -12.3051176071167

Token 515: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -1.981667537620524e-06
    2. 'rstrip' → logprob: -13.375001907348633
    3. '.decode' → logprob: -15.125001907348633
    4. ' decode' → logprob: -17.250001907348633
    5. 'raw' → logprob: -18.375001907348633
    6. 'strip' → logprob: -18.500001907348633
    7. '```' → logprob: -19.250001907348633
    8. 'dec' → logprob: -20.875001907348633
    9. '_decode' → logprob: -21.000001907348633
    10. 'replace' → logprob: -21.625001907348633

Token 516: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001168556627817452
    2. '('_' → logprob: -7.001168727874756
    3. '(' → logprob: -8.376168251037598
    4. '("' → logprob: -11.001168251037598
    5. '_' → logprob: -12.626168251037598
    6. '()' → logprob: -12.876168251037598
    7. '('__' → logprob: -13.626168251037598
    8. 'utf' → logprob: -13.751168251037598
    9. '(
' → logprob: -13.876168251037598
    10. '_utf' → logprob: -15.251168251037598

Token 517: 'utf' (ID: 13353)
  Prédit: 'utf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.011051236651837826
    2. ''' → logprob: -4.511051177978516
    3. ''u' → logprob: -13.136051177978516
    4. '')' → logprob: -14.386051177978516
    5. ' utf' → logprob: -15.136051177978516
    6. '_utf' → logprob: -15.636051177978516
    7. ''s' → logprob: -16.386051177978516
    8. ''t' → logprob: -16.386051177978516
    9. '=utf' → logprob: -16.511051177978516
    10. ''um' → logprob: -17.261051177978516

Token 518: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '8' → logprob: -16.0
    3. '-'' → logprob: -19.75
    4. '-_' → logprob: -19.875
    5. ''-' → logprob: -20.0
    6. '=utf' → logprob: -22.0
    7. 'utf' → logprob: -22.625
    8. '‑' → logprob: -22.875
    9. '')' → logprob: -23.0
    10. '_' → logprob: -23.125

Token 519: '8' (ID: 23)
  Prédit: 'utf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utf' → logprob: -0.12695929408073425
    2. '8' → logprob: -2.1269593238830566
    3. '-' → logprob: -10.501958847045898
    4. ''' → logprob: -13.001958847045898
    5. '')' → logprob: -14.251958847045898
    6. ' utf' → logprob: -15.001958847045898
    7. '```' → logprob: -15.126958847045898
    8. '=utf' → logprob: -16.8769588470459
    9. 'uft' → logprob: -17.1269588470459
    10. '256' → logprob: -17.2519588470459

Token 520: '')

' (ID: 9735)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5247999429702759
    2. ')' → logprob: -1.0247999429702759
    3. '()' → logprob: -3.0247998237609863
    4. '')' → logprob: -7.149799823760986
    5. ' )' → logprob: -9.399800300598145
    6. '")' → logprob: -11.524800300598145
    7. ' ())' → logprob: -12.149800300598145
    8. '(' → logprob: -14.149800300598145
    9. ' ()' → logprob: -14.274800300598145
    10. '()).' → logprob: -14.399800300598145

Token 521: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1304675042629242
    2. '\n' → logprob: -3.005467414855957
    3. 'def' → logprob: -3.380467414855957
    4. '<|end|>' → logprob: -3.755467414855957
    5. '
' → logprob: -4.755467414855957
    6. '<|end|>' → logprob: -6.005467414855957
    7. '\' → logprob: -7.130467414855957
    8. '```' → logprob: -7.130467414855957
    9. 'print' → logprob: -7.630467414855957
    10. 'n' → logprob: -7.880467414855957

Token 522: ' IR' (ID: 23712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10245305299758911
    2. '#' → logprob: -2.3524529933929443
    3. 'D' → logprob: -6.477453231811523
    4. 'T' → logprob: -8.352453231811523
    5. 'M' → logprob: -9.227453231811523
    6. 'from' → logprob: -9.852453231811523
    7. 'print' → logprob: -10.102453231811523
    8. 'DP' → logprob: -10.227453231811523
    9. 'A' → logprob: -10.352453231811523
    10. 'W' → logprob: -10.602453231811523

Token 523: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11331737041473389
    2. '()' → logprob: -2.2383174896240234
    3. 'def' → logprob: -7.738317489624023
    4. 'eturn' → logprob: -11.738317489624023
    5. ':' → logprob: -11.863317489624023
    6. '=' → logprob: -11.988317489624023
    7. '():
' → logprob: -12.113317489624023
    8. '();' → logprob: -12.488317489624023
    9. ' ():' → logprob: -12.738317489624023
    10. ' =' → logprob: -12.988317489624023

Token 524: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010098503902554512
    2. ')' → logprob: -5.760098457336426
    3. '(n' → logprob: -5.885098457336426
    4. 'def' → logprob: -6.010098457336426
    5. '()' → logprob: -6.760098457336426
    6. 'n' → logprob: -8.885098457336426
    7. ' ):' → logprob: -9.135098457336426
    8. '():' → logprob: -9.385098457336426
    9. '):
' → logprob: -9.510098457336426
    10. ',' → logprob: -10.260098457336426

Token 525: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005294119473546743
    2. '=lambda' → logprob: -6.130294322967529
    3. ':' → logprob: -6.505294322967529
    4. ' def' → logprob: -7.630294322967529
    5. ' =' → logprob: -8.005293846130371
    6. '(n' → logprob: -8.130293846130371
    7. '(lambda' → logprob: -8.505293846130371
    8. '=' → logprob: -9.130293846130371
    9. 'for' → logprob: -9.755293846130371
    10. 'lambda' → logprob: -9.755293846130371

Token 526: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02991027757525444
    2. 'lambda' → logprob: -3.9049103260040283
    3. ' def' → logprob: -4.904910087585449
    4. '(lambda' → logprob: -7.154910087585449
    5. ' lambda' → logprob: -7.404910087585449
    6. '[' → logprob: -8.02991008758545
    7. 'range' → logprob: -9.15491008758545
    8. 'for' → logprob: -10.27991008758545
    9. 'return' → logprob: -10.77991008758545
    10. '
' → logprob: -11.27991008758545

Token 527: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38582170009613037
    2. 'lambda' → logprob: -2.38582181930542
    3. '(n' → logprob: -2.51082181930542
    4. ' def' → logprob: -3.38582181930542
    5. '(lambda' → logprob: -3.38582181930542
    6. ' lambda' → logprob: -3.63582181930542
    7. 'n' → logprob: -4.13582181930542
    8. '
' → logprob: -4.63582181930542
    9. '=lambda' → logprob: -5.51082181930542
    10. 'range' → logprob: -5.63582181930542

Token 528: ' lignes' (ID: 81687)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.590738832950592
    2. '():' → logprob: -1.5907387733459473
    3. '(n' → logprob: -1.7157387733459473
    4. '():
' → logprob: -3.9657387733459473
    5. ' =' → logprob: -4.590738773345947
    6. '(lambda' → logprob: -4.965738773345947
    7. '=' → logprob: -5.965738773345947
    8. '(' → logprob: -5.965738773345947
    9. ' lines' → logprob: -6.090738773345947
    10. ' ()' → logprob: -6.090738773345947

Token 529: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007551143411546946
    2. '(n' → logprob: -5.007551193237305
    3. ' def' → logprob: -7.757551193237305
    4. '
' → logprob: -8.382551193237305
    5. '#' → logprob: -9.382551193237305
    6. '(lambda' → logprob: -10.007551193237305
    7. '(def' → logprob: -10.882551193237305
    8. ':' → logprob: -11.882551193237305
    9. '```' → logprob: -11.882551193237305
    10. 'for' → logprob: -13.257551193237305

Token 530: ' l' (ID: 305)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03441411256790161
    2. 'sys' → logprob: -4.659414291381836
    3. 'lambda' → logprob: -4.909414291381836
    4. 'list' → logprob: -5.284414291381836
    5. 'input' → logprob: -5.284414291381836
    6. 'def' → logprob: -6.409414291381836
    7. 'inte' → logprob: -6.659414291381836
    8. 'ints' → logprob: -6.909414291381836
    9. 'ent' → logprob: -7.159414291381836
    10. ' int' → logprob: -7.909414291381836

Token 531: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.2955165505409241
    2. 'entrée' → logprob: -1.7955164909362793
    3. 'n' → logprob: -2.6705164909362793
    4. 'e' → logprob: -4.670516490936279
    5. 'input' → logprob: -5.420516490936279
    6. ''ent' → logprob: -5.920516490936279
    7. 'a' → logprob: -6.795516490936279
    8. 'ent' → logprob: -7.420516490936279
    9. 'int' → logprob: -7.795516490936279
    10. 'put' → logprob: -7.795516490936279

Token 532: ' standard' (ID: 7024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47531643509864807
    2. '(n' → logprob: -0.9753164052963257
    3. ' def' → logprob: -7.475316524505615
    4. '(lambda' → logprob: -8.725316047668457
    5. '
' → logprob: -9.100316047668457
    6. '(' → logprob: -9.100316047668457
    7. ' (' → logprob: -9.475316047668457
    8. ':' → logprob: -10.350316047668457
    9. 'for' → logprob: -10.850316047668457
    10. '_' → logprob: -10.975316047668457

Token 533: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007862794445827603
    2. '(n' → logprob: -7.375786304473877
    3. ' def' → logprob: -9.375785827636719
    4. '
' → logprob: -10.000785827636719
    5. '(def' → logprob: -11.000785827636719
    6. '```' → logprob: -12.250785827636719
    7. ':' → logprob: -12.500785827636719
    8. '#' → logprob: -13.875785827636719
    9. ':def' → logprob: -13.875785827636719
    10. ' (' → logprob: -14.625785827636719

Token 534: ' chaque' (ID: 21194)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056833576411008835
    2. 'lambda' → logprob: -2.931833505630493
    3. ' def' → logprob: -6.931833744049072
    4. ' lambda' → logprob: -7.056833744049072
    5. 'LI' → logprob: -9.431833267211914
    6. '=lambda' → logprob: -11.431833267211914
    7. 'return' → logprob: -11.681833267211914
    8. '(lambda' → logprob: -12.056833267211914
    9. '
' → logprob: -13.431833267211914
    10. ' LI' → logprob: -13.431833267211914

Token 535: ' ligne' (ID: 19583)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09549015760421753
    2. ' def' → logprob: -3.2204902172088623
    3. '_' → logprob: -4.095489978790283
    4. ' =' → logprob: -4.095489978790283
    5. '=' → logprob: -5.220489978790283
    6. '=lambda' → logprob: -5.595489978790283
    7. '()' → logprob: -6.595489978790283
    8. 's' → logprob: -6.845489978790283
    9. ' _' → logprob: -7.345489978790283
    10. 'return' → logprob: -7.345489978790283

Token 536: ' convert' (ID: 8452)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08982964605093002
    2. '=lambda' → logprob: -2.839829683303833
    3. ' =' → logprob: -4.339829444885254
    4. '=' → logprob: -5.214829444885254
    5. '
' → logprob: -6.464829444885254
    6. ':' → logprob: -6.589829444885254
    7. 'for' → logprob: -7.214829444885254
    8. ' def' → logprob: -7.214829444885254
    9. 'return' → logprob: -7.339829444885254
    10. '(lambda' → logprob: -7.464829444885254

Token 537: 'ie' (ID: 396)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.35206738114356995
    2. 'issant' → logprob: -1.7270673513412476
    3. 'ies' → logprob: -2.352067470550537
    4. 'ant' → logprob: -4.477067470550537
    5. 'int' → logprob: -5.602067470550537
    6. 'i' → logprob: -5.727067470550537
    7. 'ie' → logprob: -6.352067470550537
    8. '=int' → logprob: -6.477067470550537
    9. '=' → logprob: -7.602067470550537
    10. '```' → logprob: -7.852067470550537

Token 538: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7739443778991699
    2. '=lambda' → logprob: -0.8989443778991699
    3. '=' → logprob: -2.89894437789917
    4. '(lambda' → logprob: -3.14894437789917
    5. 'lambda' → logprob: -4.39894437789917
    6. 'int' → logprob: -5.14894437789917
    7. ' =' → logprob: -5.64894437789917
    8. '=int' → logprob: -5.64894437789917
    9. '```' → logprob: -6.02394437789917
    10. 'into' → logprob: -6.14894437789917

Token 539: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038399241864681244
    2. 'ent' → logprob: -3.2883992195129395
    3. '[int' → logprob: -8.413399696350098
    4. 'liste' → logprob: -9.788399696350098
    5. ' int' → logprob: -10.288399696350098
    6. 'list' → logprob: -11.163399696350098
    7. ' entier' → logprob: -11.288399696350098
    8. '(int' → logprob: -11.663399696350098
    9. 'ints' → logprob: -13.163399696350098
    10. 'inte' → logprob: -13.163399696350098

Token 540: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010348338400945067
    2. '(n' → logprob: -7.626034736633301
    3. '
' → logprob: -7.876034736633301
    4. ' def' → logprob: -8.8760347366333
    5. '(def' → logprob: -11.0010347366333
    6. '```' → logprob: -12.7510347366333
    7. ':' → logprob: -13.0010347366333
    8. '(' → logprob: -14.0010347366333
    9. ':def' → logprob: -14.1260347366333
    10. ' (' → logprob: -14.6260347366333

Token 541: ' retourne' (ID: 178818)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009407619945704937
    2. ' def' → logprob: -7.250940799713135
    3. 'lambda' → logprob: -8.750940322875977
    4. '
' → logprob: -9.875940322875977
    5. ' lambda' → logprob: -11.250940322875977
    6. '=lambda' → logprob: -12.500940322875977
    7. 'return' → logprob: -13.000940322875977
    8. 'n' → logprob: -13.875940322875977
    9. '#' → logprob: -15.750940322875977
    10. ' =' → logprob: -15.750940322875977

Token 542: ' la' (ID: 557)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.3505346477031708
    2. '[' → logprob: -1.3505346775054932
    3. '[int' → logprob: -3.475534677505493
    4. 'list' → logprob: -5.850534439086914
    5. '[n' → logprob: -6.600534439086914
    6. '[l' → logprob: -7.975534439086914
    7. ' [' → logprob: -7.975534439086914
    8. 'def' → logprob: -8.475534439086914
    9. '[List' → logprob: -9.475534439086914
    10. '[s' → logprob: -9.600534439086914

Token 543: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6873970627784729
    2. '[list' → logprob: -1.1873970031738281
    3. '[int' → logprob: -1.6873970031738281
    4. '[n' → logprob: -5.687397003173828
    5. 'list' → logprob: -6.062397003173828
    6. '[s' → logprob: -8.062397003173828
    7. '[i' → logprob: -8.687397003173828
    8. '[l' → logprob: -8.812397003173828
    9. '[List' → logprob: -9.062397003173828
    10. '[Int' → logprob: -9.312397003173828

Token 544: ' résult' (ID: 31657)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11766766756772995
    2. '([' → logprob: -2.6176676750183105
    3. ' =' → logprob: -4.7426676750183105
    4. 'of' → logprob: -4.9926676750183105
    5. '(lambda' → logprob: -4.9926676750183105
    6. ' def' → logprob: -5.7426676750183105
    7. '(n' → logprob: -6.2426676750183105
    8. '=' → logprob: -6.8676676750183105
    9. '([(' → logprob: -6.8676676750183105
    10. '```' → logprob: -6.8676676750183105

Token 545: 'ante' (ID: 2116)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004468219820410013
    2. ' def' → logprob: -6.6294684410095215
    3. '(lambda' → logprob: -7.2544684410095215
    4. '[]' → logprob: -7.6294684410095215
    5. '[n' → logprob: -7.8794684410095215
    6. 'ef' → logprob: -8.379467964172363
    7. 'e' → logprob: -8.754467964172363
    8. '[' → logprob: -8.754467964172363
    9. '=lambda' → logprob: -8.879467964172363
    10. 'lambda' → logprob: -9.254467964172363

Token 546: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00017064384883269668
    2. ' def' → logprob: -9.375170707702637
    3. '(n' → logprob: -9.875170707702637
    4. '
' → logprob: -10.500170707702637
    5. '```' → logprob: -12.125170707702637
    6. ':' → logprob: -14.125170707702637
    7. ':def' → logprob: -15.500170707702637
    8. '(def' → logprob: -15.750170707702637
    9. '_def' → logprob: -16.62516975402832
    10. '#' → logprob: -16.87516975402832

Token 547: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -15.75
    3. '
' → logprob: -19.25
    4. '(def' → logprob: -19.75
    5. '_def' → logprob: -20.0
    6. ':def' → logprob: -20.375
    7. '(n' → logprob: -20.625
    8. '#' → logprob: -20.875
    9. 'ndef' → logprob: -20.875
    10. '```' → logprob: -21.375

Token 548: ' IR' (ID: 23712)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.005580455996096134
    2. 'def' → logprob: -5.505580425262451
    3. ' IR' → logprob: -6.505580425262451
    4. ' def' → logprob: -12.13058090209961
    5. '_IR' → logprob: -15.13058090209961
    6. 'I' → logprob: -15.50558090209961
    7. 'ir' → logprob: -18.00558090209961
    8. '(IR' → logprob: -18.13058090209961
    9. '
' → logprob: -18.50558090209961
    10. 'IRS' → logprob: -18.63058090209961

Token 549: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.023293538717553e-05
    2. ' (' → logprob: -11.000030517578125
    3. '(' → logprob: -11.500030517578125
    4. 'def' → logprob: -12.875030517578125
    5. '(N' → logprob: -14.750030517578125
    6. '(def' → logprob: -16.500030517578125
    7. '(i' → logprob: -16.625030517578125
    8. ' def' → logprob: -17.250030517578125
    9. 'n' → logprob: -17.375030517578125
    10. '(k' → logprob: -17.750030517578125

Token 550: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12754876911640167
    2. '(n' → logprob: -2.1275486946105957
    3. '):
' → logprob: -7.627548694610596
    4. 'n' → logprob: -9.877549171447754
    5. ' ):' → logprob: -10.127549171447754
    6. ')' → logprob: -10.752549171447754
    7. 'def' → logprob: -11.877549171447754
    8. ' (' → logprob: -12.377549171447754
    9. ')(' → logprob: -12.502549171447754
    10. '):(' → logprob: -13.377549171447754

Token 551: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16230039298534393
    2. 'return' → logprob: -1.9123003482818604
    3. '   ' → logprob: -6.2873005867004395
    4. 'def' → logprob: -9.037300109863281
    5. '[]' → logprob: -10.412300109863281
    6. ':return' → logprob: -10.662300109863281
    7. '[' → logprob: -11.787300109863281
    8. '	return' → logprob: -11.912300109863281
    9. ' def' → logprob: -11.912300109863281
    10. ':' → logprob: -11.912300109863281

Token 552: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.10057929903268814
    2. '[' → logprob: -2.350579261779785
    3. '[int' → logprob: -8.350579261779785
    4. '[List' → logprob: -9.600579261779785
    5. '[l' → logprob: -10.100579261779785
    6. '[line' → logprob: -11.850579261779785
    7. '[I' → logprob: -11.975579261779785
    8. 'list' → logprob: -12.100579261779785
    9. '[n' → logprob: -13.475579261779785
    10. '[input' → logprob: -13.475579261779785

Token 553: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25192946195602417
    2. 'I' → logprob: -1.501929521560669
    3. ' int' → logprob: -15.75192928314209
    4. ' I' → logprob: -16.626930236816406
    5. '(int' → logprob: -17.626930236816406
    6. '
' → logprob: -18.001930236816406
    7. '[int' → logprob: -18.251930236816406
    8. 'Int' → logprob: -18.751930236816406
    9. 'ints' → logprob: -19.376930236816406
    10. '<int' → logprob: -19.626930236816406

Token 554: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2664456789934775e-06
    2. '()]' → logprob: -14.125000953674316
    3. ' ()' → logprob: -15.375000953674316
    4. '()
' → logprob: -15.625000953674316
    5. '(' → logprob: -16.375001907348633
    6. '（）' → logprob: -18.000001907348633
    7. '()`' → logprob: -20.375001907348633
    8. ')' → logprob: -20.500001907348633
    9. '()\' → logprob: -20.500001907348633
    10. 'for' → logprob: -20.625001907348633

Token 555: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.226628895296017e-06
    2. 'for' → logprob: -12.000007629394531
    3. '(' → logprob: -14.500007629394531
    4. ' ()' → logprob: -15.250007629394531
    5. '()
' → logprob: -16.00000762939453
    6. ' for' → logprob: -16.75000762939453
    7. '()]' → logprob: -17.00000762939453
    8. '```' → logprob: -19.12500762939453
    9. '（）' → logprob: -19.12500762939453
    10. ')' → logprob: -19.25000762939453

Token 556: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -4.842555426876061e-06
    2. '_i' → logprob: -12.875004768371582
    3. ' _' → logprob: -14.375004768371582
    4. '_in' → logprob: -14.500004768371582
    5. '_range' → logprob: -14.750004768371582
    6. 'i' → logprob: -15.000004768371582
    7. ' in' → logprob: -16.0000057220459
    8. '_
' → logprob: -16.5000057220459
    9. '_n' → logprob: -17.0000057220459
    10. '_=' → logprob: -17.1250057220459

Token 557: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6794177889823914
    2. 'n' → logprob: -1.5544178485870361
    3. 'in' → logprob: -1.5544178485870361
    4. '_' → logprob: -2.679417848587036
    5. ' ' → logprob: -6.929417610168457
    6. ' n' → logprob: -8.304417610168457
    7. '(n' → logprob: -8.554417610168457
    8. '_in' → logprob: -9.054417610168457
    9. 'range' → logprob: -9.054417610168457
    10. ' _' → logprob: -9.804417610168457

Token 558: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031794982496649027
    2. ' range' → logprob: -5.753179550170898
    3. '_' → logprob: -13.503179550170898
    4. '_range' → logprob: -14.753179550170898
    5. '	range' → logprob: -17.0031795501709
    6. 'rang' → logprob: -17.1281795501709
    7. 'in' → logprob: -17.2531795501709
    8. '(range' → logprob: -17.5031795501709
    9. 'ran' → logprob: -20.0031795501709
    10. ' in' → logprob: -20.2531795501709

Token 559: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.217951886355877e-05
    2. '(' → logprob: -9.750061988830566
    3. 'n' → logprob: -12.500061988830566
    4. '(
' → logprob: -16.000062942504883
    5. ' n' → logprob: -17.125062942504883
    6. ' (' → logprob: -17.750062942504883
    7. '	n' → logprob: -19.625062942504883
    8. ')n' → logprob: -19.625062942504883
    9. '(

' → logprob: -20.625062942504883
    10. '(nt' → logprob: -21.000062942504883

Token 560: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.570319702499546e-05
    2. '(n' → logprob: -10.875025749206543
    3. ')' → logprob: -12.375025749206543
    4. 'n' → logprob: -13.875025749206543
    5. '(' → logprob: -14.875025749206543
    6. ' )' → logprob: -15.375025749206543
    7. ')],' → logprob: -15.750025749206543
    8. ')])' → logprob: -15.875025749206543
    9. '):' → logprob: -16.125024795532227
    10. ')].' → logprob: -16.500024795532227

Token 561: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00518833938986063
    2. '<|end|>' → logprob: -6.005188465118408
    3. 'def' → logprob: -6.255188465118408
    4. '
' → logprob: -8.00518798828125
    5. '```' → logprob: -9.00518798828125
    6. '<|end|>' → logprob: -9.00518798828125
    7. '\n' → logprob: -9.63018798828125
    8. '

' → logprob: -10.38018798828125
    9. '\' → logprob: -11.13018798828125
    10. '''' → logprob: -11.25518798828125

Token 562: ' L' (ID: 451)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.4999217391014099
    2. 'LR' → logprob: -1.4999217987060547
    3. 'LS' → logprob: -2.2499217987060547
    4. 'L' → logprob: -3.2499217987060547
    5. 'LI' → logprob: -4.749921798706055
    6. 'I' → logprob: -4.749921798706055
    7. 'R' → logprob: -6.749921798706055
    8. 'IS' → logprob: -6.874921798706055
    9. 'def' → logprob: -6.999921798706055
    10. 'SR' → logprob: -6.999921798706055

Token 563: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0006656142068095505
    2. '(n' → logprob: -8.625665664672852
    3. '()' → logprob: -8.875665664672852
    4. 'IST' → logprob: -9.250665664672852
    5. 'S' → logprob: -9.875665664672852
    6. 'IS' → logprob: -10.625665664672852
    7. 'R' → logprob: -10.625665664672852
    8. 'ist' → logprob: -10.625665664672852
    9. 'L' → logprob: -10.750665664672852
    10. 'IR' → logprob: -10.875665664672852

Token 564: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.886803359724581e-05
    2. 'def' → logprob: -9.500079154968262
    3. 'n' → logprob: -13.000079154968262
    4. '(' → logprob: -14.375079154968262
    5. ' (' → logprob: -15.125079154968262
    6. ' def' → logprob: -15.375079154968262
    7. '<|end|>' → logprob: -15.375079154968262
    8. '<|end|>' → logprob: -15.500079154968262
    9. '(int' → logprob: -17.625078201293945
    10. ' =' → logprob: -17.750078201293945

Token 565: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008173039183020592
    2. '(n' → logprob: -4.883172988891602
    3. ')' → logprob: -7.883172988891602
    4. 'def' → logprob: -9.133172988891602
    5. '):
' → logprob: -10.258172988891602
    6. 'n' → logprob: -10.508172988891602
    7. '):

' → logprob: -12.008172988891602
    8. ' ):' → logprob: -12.008172988891602
    9. ')(' → logprob: -13.508172988891602
    10. ')n' → logprob: -13.633172988891602

Token 566: ' :' (ID: 712)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002683688362594694
    2. 'def' → logprob: -8.25026798248291
    3. ':' → logprob: -12.25026798248291
    4. ' def' → logprob: -14.37526798248291
    5. '=lambda' → logprob: -14.37526798248291
    6. 'n' → logprob: -14.87526798248291
    7. '(lambda' → logprob: -15.00026798248291
    8. ' =' → logprob: -16.000268936157227
    9. ':def' → logprob: -16.875268936157227
    10. '(def' → logprob: -16.875268936157227

Token 567: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0063719130121171474
    2. 'lambda' → logprob: -5.631371974945068
    3. '(lambda' → logprob: -6.006371974945068
    4. ' def' → logprob: -8.25637149810791
    5. 'return' → logprob: -11.00637149810791
    6. ' lambda' → logprob: -11.25637149810791
    7. '(def' → logprob: -12.63137149810791
    8. 'list' → logprob: -12.75637149810791
    9. 'LI' → logprob: -12.75637149810791
    10. '[' → logprob: -13.25637149810791

Token 568: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007069601211696863
    2. 'n' → logprob: -5.2570695877075195
    3. 'int' → logprob: -6.5070695877075195
    4. 'def' → logprob: -8.50706958770752
    5. '[n' → logprob: -9.38206958770752
    6. 'i' → logprob: -10.63206958770752
    7. 'I' → logprob: -11.88206958770752
    8. 'list' → logprob: -12.00706958770752
    9. ' n' → logprob: -12.13206958770752
    10. 's' → logprob: -12.38206958770752

Token 569: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0022677783854305744
    2. 'def' → logprob: -6.752267837524414
    3. '(lambda' → logprob: -7.502267837524414
    4. '()' → logprob: -8.752267837524414
    5. '(' → logprob: -8.752267837524414
    6. ' (' → logprob: -9.627267837524414
    7. '_lines' → logprob: -10.252267837524414
    8. ' def' → logprob: -10.877267837524414
    9. ' lines' → logprob: -11.002267837524414
    10. '():' → logprob: -11.627267837524414

Token 570: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20287109911441803
    2. 'def' → logprob: -1.7028710842132568
    3. '(lambda' → logprob: -6.827871322631836
    4. ' def' → logprob: -8.077871322631836
    5. '(def' → logprob: -10.827871322631836
    6. '#' → logprob: -11.077871322631836
    7. ' (' → logprob: -11.452871322631836
    8. '```' → logprob: -12.327871322631836
    9. '(' → logprob: -12.827871322631836
    10. ',' → logprob: -12.952871322631836

Token 571: ' l' (ID: 305)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07931438833475113
    2. 'input' → logprob: -2.9543144702911377
    3. 'int' → logprob: -4.079314231872559
    4. 'LI' → logprob: -5.579314231872559
    5. 'li' → logprob: -6.079314231872559
    6. 'liste' → logprob: -7.954314231872559
    7. 'lists' → logprob: -7.954314231872559
    8. '_list' → logprob: -9.329314231872559
    9. 'I' → logprob: -9.704314231872559
    10. 'l' → logprob: -9.829314231872559

Token 572: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9327930808067322
    2. 'ist' → logprob: -1.182793140411377
    3. 'int' → logprob: -1.307793140411377
    4. 'inte' → logprob: -4.807793140411377
    5. 'list' → logprob: -5.557793140411377
    6. 'ent' → logprob: -5.682793140411377
    7. 'stdin' → logprob: -6.432793140411377
    8. 'n' → logprob: -6.557793140411377
    9. 'entrée' → logprob: -6.682793140411377
    10. ''entrée' → logprob: -6.682793140411377

Token 573: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1726651191711426
    2. '(n' → logprob: -1.2976651191711426
    3. '(lambda' → logprob: -1.4226651191711426
    4. 'def' → logprob: -1.7976651191711426
    5. '().' → logprob: -6.172665119171143
    6. ' def' → logprob: -6.422665119171143
    7. '()(' → logprob: -6.422665119171143
    8. '():' → logprob: -6.797665119171143
    9. '(def' → logprob: -6.922665119171143
    10. '()[' → logprob: -7.297665119171143

Token 574: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016835276037454605
    2. 'def' → logprob: -4.1418352127075195
    3. '(lambda' → logprob: -7.3918352127075195
    4. ' def' → logprob: -8.89183521270752
    5. '(' → logprob: -11.26683521270752
    6. ' (' → logprob: -11.39183521270752
    7. '(def' → logprob: -12.26683521270752
    8. ':' → logprob: -12.39183521270752
    9. ',' → logprob: -13.01683521270752
    10. '():' → logprob: -13.01683521270752

Token 575: ' chaque' (ID: 21194)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47034958004951477
    2. 'return' → logprob: -2.0953495502471924
    3. ' def' → logprob: -2.5953495502471924
    4. ' return' → logprob: -2.7203495502471924
    5. ' lambda' → logprob: -2.7203495502471924
    6. 'lambda' → logprob: -3.0953495502471924
    7. '=lambda' → logprob: -8.220349311828613
    8. '(lambda' → logprob: -8.595349311828613
    9. ' returns' → logprob: -10.095349311828613
    10. ':return' → logprob: -11.220349311828613

Token 576: ' ligne' (ID: 19583)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.574591338634491
    2. ' line' → logprob: -2.4495913982391357
    3. ' def' → logprob: -3.0745913982391357
    4. 'LI' → logprob: -3.0745913982391357
    5. '_' → logprob: -3.3245913982391357
    6. ' in' → logprob: -3.4495913982391357
    7. ' =' → logprob: -3.8245913982391357
    8. '=' → logprob: -3.8245913982391357
    9. ' list' → logprob: -3.8245913982391357
    10. '=lambda' → logprob: -4.074591159820557

Token 577: ' déc' (ID: 8498)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5019819140434265
    2. '().' → logprob: -1.7519819736480713
    3. '()' → logprob: -2.3769819736480713
    4. '():' → logprob: -2.8769819736480713
    5. '=lambda' → logprob: -3.2519819736480713
    6. '=' → logprob: -5.001981735229492
    7. ':' → logprob: -5.001981735229492
    8. '(lambda' → logprob: -5.376981735229492
    9. ' def' → logprob: -5.751981735229492
    10. '():
' → logprob: -6.126981735229492

Token 578: 'oup' (ID: 9999)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.15472090244293213
    2. 'oup' → logprob: -2.7797207832336426
    3. 'oded' → logprob: -2.9047207832336426
    4. 'ou' → logprob: -4.779720783233643
    5. 'oupe' → logprob: -5.029720783233643
    6. 'ont' → logprob: -5.654720783233643
    7. 'ode' → logprob: -5.654720783233643
    8. '=' → logprob: -7.154720783233643
    9. 'omp' → logprob: -7.404720783233643
    10. ' =' → logprob: -7.779720783233643

Token 579: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.009319908916950226
    2. 'ant' → logprob: -5.38431978225708
    3. 'é' → logprob: -6.00931978225708
    4. 'ee' → logprob: -6.50931978225708
    5. 'ed' → logprob: -7.75931978225708
    6. 'e' → logprob: -9.009320259094238
    7. '```' → logprob: -9.634320259094238
    8. 'ées' → logprob: -10.509320259094238
    9. 't' → logprob: -10.884320259094238
    10. 'rée' → logprob: -11.134320259094238

Token 580: ' en' (ID: 469)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.9684756398200989
    2. '()' → logprob: -1.093475580215454
    3. '=' → logprob: -1.968475580215454
    4. '=lambda' → logprob: -2.468475580215454
    5. '(lambda' → logprob: -3.593475580215454
    6. 'def' → logprob: -4.093475818634033
    7. '(n' → logprob: -4.843475818634033
    8. ' =' → logprob: -6.468475818634033
    9. 'lambda' → logprob: -6.468475818634033
    10. 'n' → logprob: -7.468475818634033

Token 581: ' ent' (ID: 1121)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04249720275402069
    2. 'LI' → logprob: -3.792497158050537
    3. 'liste' → logprob: -5.042497158050537
    4. 'parts' → logprob: -5.667497158050537
    5. '```' → logprob: -5.917497158050537
    6. 'int' → logprob: -6.167497158050537
    7. 'ent' → logprob: -6.667497158050537
    8. 'lists' → logprob: -7.167497158050537
    9. 'li' → logprob: -7.292497158050537
    10. ' list' → logprob: -7.792497158050537

Token 582: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.275999516248703
    2. 'ières' → logprob: -2.1509995460510254
    3. 't' → logprob: -2.2759995460510254
    4. 'ier' → logprob: -4.525999546051025
    5. 'er' → logprob: -5.775999546051025
    6. '```' → logprob: -6.525999546051025
    7. 'ière' → logprob: -6.900999546051025
    8. 'tes' → logprob: -7.400999546051025
    9. 'rée' → logprob: -7.400999546051025
    10. 'r' → logprob: -7.525999546051025

Token 583: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4352867901325226
    2. '()' → logprob: -1.8102867603302002
    3. '().' → logprob: -1.8102867603302002
    4. '()[' → logprob: -4.060286998748779
    5. '(lambda' → logprob: -5.685286998748779
    6. '(n' → logprob: -6.810286998748779
    7. 'for' → logprob: -6.810286998748779
    8. '():' → logprob: -7.185286998748779
    9. ' def' → logprob: -7.560286998748779
    10. '()(' → logprob: -8.060286521911621

Token 584: 'liste' (ID: 69656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010146182030439377
    2. 'lambda' → logprob: -5.510146141052246
    3. ')' → logprob: -5.635146141052246
    4. 'list' → logprob: -7.760146141052246
    5. '
' → logprob: -7.760146141052246
    6. '()' → logprob: -8.135146141052246
    7. 'n' → logprob: -8.260146141052246
    8. 'range' → logprob: -8.510146141052246
    9. 'return' → logprob: -8.635146141052246
    10. ' def' → logprob: -8.635146141052246

Token 585: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.8490304350852966
    2. '(map' → logprob: -1.9740304946899414
    3. '=list' → logprob: -2.3490304946899414
    4. '(int' → logprob: -2.3490304946899414
    5. ')' → logprob: -2.4740304946899414
    6. '(list' → logprob: -3.2240304946899414
    7. '=int' → logprob: -3.3490304946899414
    8. '=' → logprob: -3.9740304946899414
    9. '[list' → logprob: -4.099030494689941
    10. 'of' → logprob: -4.724030494689941

Token 586: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1505046784877777
    2. 'list' → logprob: -2.6505045890808105
    3. 'lists' → logprob: -2.9005045890808105
    4. 'ints' → logprob: -4.4005045890808105
    5. '(int' → logprob: -6.9005045890808105
    6. '[int' → logprob: -7.2755045890808105
    7. 'liste' → logprob: -9.650505065917969
    8. ')' → logprob: -11.025505065917969
    9. ']int' → logprob: -11.650505065917969
    10. 'inte' → logprob: -11.650505065917969

Token 587: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.008991175331175327
    2. 'ières' → logprob: -4.883991241455078
    3. 'ier' → logprob: -7.133991241455078
    4. 't' → logprob: -8.883991241455078
    5. 'tes' → logprob: -9.258991241455078
    6. 'i' → logprob: -9.633991241455078
    7. 'ieres' → logprob: -10.133991241455078
    8. 'etes' → logprob: -10.383991241455078
    9. 'er' → logprob: -10.383991241455078
    10. 'e' → logprob: -10.508991241455078

Token 588: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5806728601455688
    2. '(n' → logprob: -1.7056728601455688
    3. 'def' → logprob: -1.9556728601455688
    4. '()' → logprob: -1.9556728601455688
    5. '):' → logprob: -2.2056727409362793
    6. 'for' → logprob: -2.2056727409362793
    7. '())' → logprob: -3.2056727409362793
    8. '()),' → logprob: -4.205672740936279
    9. ' for' → logprob: -4.330672740936279
    10. '),' → logprob: -4.580672740936279

Token 589: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04130442067980766
    2. ' range' → logprob: -3.541304349899292
    3. '_' → logprob: -4.541304588317871
    4. ')' → logprob: -8.541304588317871
    5. 'i' → logprob: -8.791304588317871
    6. 'n' → logprob: -9.041304588317871
    7. '(range' → logprob: -9.291304588317871
    8. '_range' → logprob: -9.666304588317871
    9. 'each' → logprob: -10.166304588317871
    10. 'sys' → logprob: -10.416304588317871

Token 590: ' ligne' (ID: 19583)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1406562626361847
    2. '_' → logprob: -2.1406562328338623
    3. ')' → logprob: -5.640656471252441
    4. 'ligne' → logprob: -5.765656471252441
    5. 'line' → logprob: -6.265656471252441
    6. ' range' → logprob: -6.390656471252441
    7. 'i' → logprob: -7.015656471252441
    8. '(range' → logprob: -7.140656471252441
    9. '()' → logprob: -8.140656471252441
    10. 'n' → logprob: -8.265656471252441

Token 591: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17945346236228943
    2. '(n' → logprob: -2.8044533729553223
    3. '()' → logprob: -3.1794533729553223
    4. '())' → logprob: -3.9294533729553223
    5. 'def' → logprob: -3.9294533729553223
    6. 'for' → logprob: -5.179453372955322
    7. ')]' → logprob: -5.429453372955322
    8. '):' → logprob: -5.679453372955322
    9. '),' → logprob: -5.929453372955322
    10. '()]' → logprob: -6.429453372955322

Token 592: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00021224225929472595
    2. '(n' → logprob: -8.500212669372559
    3. '
' → logprob: -12.250212669372559
    4. ' def' → logprob: -12.625212669372559
    5. '(def' → logprob: -15.000212669372559
    6. '#' → logprob: -15.750212669372559
    7. '```' → logprob: -16.500211715698242
    8. 'ndef' → logprob: -16.625211715698242
    9. 'n' → logprob: -18.000211715698242
    10. ':def' → logprob: -18.125211715698242

Token 593: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004236885346472263
    2. ' L' → logprob: -5.504236698150635
    3. 'def' → logprob: -8.754237174987793
    4. ' def' → logprob: -15.254237174987793
    5. '
' → logprob: -16.004236221313477
    6. 'LI' → logprob: -16.379236221313477
    7. 'lambda' → logprob: -16.504236221313477
    8. 'LTR' → logprob: -16.754236221313477
    9. ' ' → logprob: -18.129236221313477
    10. '  ' → logprob: -18.379236221313477

Token 594: 'IR' (ID: 4368)
  Prédit: 'IR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -6.73052782076411e-05
    2. 'I' → logprob: -9.625067710876465
    3. ' IR' → logprob: -14.125067710876465
    4. '(IR' → logprob: -15.250067710876465
    5. '_IR' → logprob: -15.875067710876465
    6. 'R' → logprob: -16.75006675720215
    7. 'def' → logprob: -19.50006675720215
    8. '.IR' → logprob: -19.62506675720215
    9. 'ir' → logprob: -19.75006675720215
    10. '```' → logprob: -19.75006675720215

Token 595: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.751746746478602e-05
    2. ' (' → logprob: -10.62504768371582
    3. 'def' → logprob: -10.75004768371582
    4. ' def' → logprob: -13.87504768371582
    5. '(' → logprob: -14.50004768371582
    6. '```' → logprob: -15.50004768371582
    7. 'n' → logprob: -16.50004768371582
    8. '(def' → logprob: -18.00004768371582
    9. '(
' → logprob: -19.25004768371582
    10. '(size' → logprob: -19.50004768371582

Token 596: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760786533355713
    2. '(n' → logprob: -0.8260786533355713
    3. 'def' → logprob: -9.576078414916992
    4. ' ):' → logprob: -10.326078414916992
    5. ')' → logprob: -10.701078414916992
    6. '):
' → logprob: -11.951078414916992
    7. ')(' → logprob: -12.451078414916992
    8. 'n' → logprob: -13.701078414916992
    9. ' (' → logprob: -14.076078414916992
    10. ' def' → logprob: -14.701078414916992

Token 597: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26832345128059387
    2. 'def' → logprob: -1.7683234214782715
    3. ' return' → logprob: -2.7683234214782715
    4. ' def' → logprob: -6.7683234214782715
    5. '(lambda' → logprob: -7.7683234214782715
    6. 'lambda' → logprob: -8.26832389831543
    7. '   ' → logprob: -10.01832389831543
    8. ' lambda' → logprob: -10.26832389831543
    9. ':return' → logprob: -11.39332389831543
    10. '[' → logprob: -12.14332389831543

Token 598: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001991298486245796
    2. '[list' → logprob: -8.750199317932129
    3. '[L' → logprob: -10.250199317932129
    4. '[List' → logprob: -12.875199317932129
    5. '[line' → logprob: -14.000199317932129
    6. '[I' → logprob: -14.000199317932129
    7. ' [' → logprob: -14.625199317932129
    8. '[int' → logprob: -15.000199317932129
    9. '[l' → logprob: -16.250198364257812
    10. '[n' → logprob: -16.375198364257812

Token 599: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -1.5048530030981055e-06
    2. 'list' → logprob: -13.500001907348633
    3. ' LI' → logprob: -16.500001907348633
    4. 'li' → logprob: -18.250001907348633
    5. 'Li' → logprob: -19.500001907348633
    6. '   ' → logprob: -20.125001907348633
    7. 'LIST' → logprob: -21.000001907348633
    8. 'L' → logprob: -21.500001907348633
    9. 'LS' → logprob: -22.125001907348633
    10. ' ' → logprob: -22.375001907348633

Token 600: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000444850797066465
    2. '(n' → logprob: -7.7504448890686035
    3. '()]' → logprob: -11.875444412231445
    4. ' ()' → logprob: -12.375444412231445
    5. '(i' → logprob: -13.500444412231445
    6. '(' → logprob: -13.875444412231445
    7. '()
' → logprob: -15.250444412231445
    8. '())' → logprob: -16.125444412231445
    9. '().' → logprob: -16.500444412231445
    10. '()+' → logprob: -17.000444412231445

Token 601: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00683685252442956
    2. '()' → logprob: -5.006836891174316
    3. 'for' → logprob: -9.756836891174316
    4. '(' → logprob: -9.881836891174316
    5. '(i' → logprob: -11.506836891174316
    6. 'n' → logprob: -13.131836891174316
    7. ' for' → logprob: -15.381836891174316
    8. ' (' → logprob: -15.756836891174316
    9. ')' → logprob: -16.8818359375
    10. '()]' → logprob: -17.2568359375

Token 602: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12730319797992706
    2. 'i' → logprob: -2.127303123474121
    3. '_i' → logprob: -8.377303123474121
    4. ' i' → logprob: -9.127303123474121
    5. ' _' → logprob: -10.252303123474121
    6. ' in' → logprob: -15.377303123474121
    7. '_=' → logprob: -15.377303123474121
    8. 'range' → logprob: -15.877303123474121
    9. '_range' → logprob: -16.252304077148438
    10. '_]' → logprob: -16.252304077148438

Token 603: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.36587387323379517
    2. 'in' → logprob: -1.4908738136291504
    3. '(' → logprob: -2.6158738136291504
    4. '(in' → logprob: -5.86587381362915
    5. '(n' → logprob: -6.11587381362915
    6. 'range' → logprob: -6.86587381362915
    7. '(range' → logprob: -6.99087381362915
    8. '(i' → logprob: -7.24087381362915
    9. 'n' → logprob: -9.115874290466309
    10. ' range' → logprob: -9.240874290466309

Token 604: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002614550176076591
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -16.500261306762695
    4. 'ange' → logprob: -20.125261306762695
    5. '	range' → logprob: -20.500261306762695
    6. 'rang' → logprob: -20.875261306762695
    7. '_range' → logprob: -20.875261306762695
    8. '_' → logprob: -21.125261306762695
    9. 'in' → logprob: -22.625261306762695
    10. 'ra' → logprob: -23.125261306762695

Token 605: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.607391408877447e-05
    2. ' range' → logprob: -10.250036239624023
    3. '(range' → logprob: -14.250036239624023
    4. 'n' → logprob: -17.500036239624023
    5. 'in' → logprob: -17.500036239624023
    6. '(n' → logprob: -18.125036239624023
    7. '_range' → logprob: -20.375036239624023
    8. '	range' → logprob: -21.000036239624023
    9. '_' → logprob: -21.250036239624023
    10. '(' → logprob: -21.625036239624023

Token 606: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00032354547875002027
    2. '(n' → logprob: -9.125323295593262
    3. 'range' → logprob: -9.375323295593262
    4. ')' → logprob: -9.500323295593262
    5. '()]' → logprob: -10.375323295593262
    6. ']' → logprob: -11.500323295593262
    7. '):' → logprob: -12.500323295593262
    8. 'n' → logprob: -12.875323295593262
    9. '()' → logprob: -13.375323295593262
    10. ' range' → logprob: -13.750323295593262

Token 607: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07293093949556351
    2. '<|end|>' → logprob: -3.0729310512542725
    3. '
' → logprob: -4.197930812835693
    4. '<|end|>' → logprob: -5.572930812835693
    5. '\n' → logprob: -5.822930812835693
    6. '

' → logprob: -7.072930812835693
    7. 'def' → logprob: -7.322930812835693
    8. '\' → logprob: -8.322931289672852
    9. '```' → logprob: -8.947931289672852
    10. '#
' → logprob: -9.947931289672852

Token 608: ' SR' (ID: 30704)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.026377519592642784
    2. 'def' → logprob: -3.6513774394989014
    3. 'n' → logprob: -10.77637767791748
    4. '<|end|>' → logprob: -11.40137767791748
    5. 'import' → logprob: -11.77637767791748
    6. 'class' → logprob: -11.90137767791748
    7. '
' → logprob: -12.27637767791748
    8. 'from' → logprob: -12.52637767791748
    9. '#!/' → logprob: -13.02637767791748
    10. '```' → logprob: -13.40137767791748

Token 609: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016659092216286808
    2. 'def' → logprob: -8.750166893005371
    3. '(' → logprob: -11.875166893005371
    4. 'n' → logprob: -15.000166893005371
    5. 'R' → logprob: -15.250166893005371
    6. ' def' → logprob: -16.000165939331055
    7. '()' → logprob: -16.375165939331055
    8. 'S' → logprob: -16.375165939331055
    9. 's' → logprob: -16.750165939331055
    10. '(def' → logprob: -17.500165939331055

Token 610: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.051288966089487076
    2. '(n' → logprob: -3.0512890815734863
    3. ')' → logprob: -6.176289081573486
    4. 'def' → logprob: -7.676289081573486
    5. 'n' → logprob: -9.426288604736328
    6. '):
' → logprob: -10.176288604736328
    7. ')n' → logprob: -10.926288604736328
    8. '#' → logprob: -12.176288604736328
    9. ' ):' → logprob: -12.426288604736328
    10. '):

' → logprob: -12.551288604736328

Token 611: ' :' (ID: 712)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.023313844576478004
    2. 'def' → logprob: -3.7733137607574463
    3. ' def' → logprob: -9.648313522338867
    4. '(def' → logprob: -13.648313522338867
    5. ':' → logprob: -14.023313522338867
    6. ':def' → logprob: -14.273313522338867
    7. 'n' → logprob: -14.398313522338867
    8. '#' → logprob: -15.273313522338867
    9. ' (' → logprob: -15.773313522338867
    10. '(' → logprob: -16.023313522338867

Token 612: ' Lit' (ID: 45595)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00017469677550252527
    2. ' def' → logprob: -8.875174522399902
    3. 'lambda' → logprob: -11.125174522399902
    4. '[' → logprob: -11.625174522399902
    5. '(lambda' → logprob: -11.750174522399902
    6. 'SR' → logprob: -14.250174522399902
    7. 'S' → logprob: -14.500174522399902
    8. '(def' → logprob: -14.625174522399902
    9. 's' → logprob: -15.250174522399902
    10. '```' → logprob: -15.250174522399902

Token 613: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.22659407556056976
    2. 'n' → logprob: -1.976594090461731
    3. 'def' → logprob: -2.8515939712524414
    4. 's' → logprob: -5.351593971252441
    5. '[n' → logprob: -6.726593971252441
    6. 'S' → logprob: -7.976593971252441
    7. ' n' → logprob: -9.226593971252441
    8. 'sys' → logprob: -10.726593971252441
    9. '(lambda' → logprob: -11.351593971252441
    10. '(s' → logprob: -11.476593971252441

Token 614: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000133098365040496
    2. 'def' → logprob: -9.000133514404297
    3. 's' → logprob: -12.625133514404297
    4. '(' → logprob: -13.000133514404297
    5. 'n' → logprob: -14.000133514404297
    6. '(lines' → logprob: -14.250133514404297
    7. 'lines' → logprob: -14.625133514404297
    8. '()' → logprob: -14.625133514404297
    9. ' lines' → logprob: -15.000133514404297
    10. '(s' → logprob: -15.000133514404297

Token 615: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03809462487697601
    2. 'def' → logprob: -3.2880945205688477
    3. ' def' → logprob: -10.788094520568848
    4. ' (' → logprob: -11.288094520568848
    5. '(' → logprob: -11.788094520568848
    6. '#' → logprob: -13.038094520568848
    7. '(lambda' → logprob: -13.038094520568848
    8. '```' → logprob: -13.288094520568848
    9. '(def' → logprob: -13.663094520568848
    10. 's' → logprob: -14.038094520568848

Token 616: 'buffer' (ID: 15967)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3419046401977539
    2. 'n' → logprob: -2.091904640197754
    3. '(n' → logprob: -2.091904640197754
    4. 'S' → logprob: -3.966904640197754
    5. ')' → logprob: -4.091904640197754
    6. '):' → logprob: -5.591904640197754
    7. ' def' → logprob: -6.966904640197754
    8. 'lambda' → logprob: -7.091904640197754
    9. 'sys' → logprob: -7.591904640197754
    10. 's' → logprob: -7.966904640197754

Token 617: ')' (ID: 8)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.17928078770637512
    2. 'def' → logprob: -1.9292807579040527
    3. '):' → logprob: -4.679280757904053
    4. ')' → logprob: -5.054280757904053
    5. ')(' → logprob: -6.679280757904053
    6. '):
' → logprob: -7.429280757904053
    7. ' def' → logprob: -7.929280757904053
    8. '#' → logprob: -8.179281234741211
    9. '(' → logprob: -8.804281234741211
    10. 'for' → logprob: -8.929281234741211

Token 618: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06219611316919327
    2. '(n' → logprob: -2.8121960163116455
    3. ' def' → logprob: -8.687195777893066
    4. '(def' → logprob: -11.062195777893066
    5. '#' → logprob: -11.187195777893066
    6. '```' → logprob: -11.562195777893066
    7. '(S' → logprob: -11.937195777893066
    8. '(s' → logprob: -12.062195777893066
    9. '(' → logprob: -12.812195777893066
    10. 's' → logprob: -13.937195777893066

Token 619: ' chaînes' (ID: 179904)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.726879358291626
    2. 'decode' → logprob: -1.976879358291626
    3. 'utf' → logprob: -2.476879358291626
    4. 's' → logprob: -2.601879358291626
    5. 'rstrip' → logprob: -2.726879358291626
    6. 'str' → logprob: -3.476879358291626
    7. 'raw' → logprob: -3.601879358291626
    8. '```' → logprob: -4.101879119873047
    9. 'list' → logprob: -4.476879119873047
    10. 'decoded' → logprob: -4.851879119873047

Token 620: ' déc' (ID: 8498)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3883463442325592
    2. 'def' → logprob: -1.1383463144302368
    3. '(lambda' → logprob: -7.388346195220947
    4. '(' → logprob: -8.013346672058105
    5. ' def' → logprob: -8.513346672058105
    6. '#' → logprob: -9.013346672058105
    7. '```' → logprob: -9.763346672058105
    8. '(s' → logprob: -11.013346672058105
    9. ' (' → logprob: -11.013346672058105
    10. '=lambda' → logprob: -11.138346672058105

Token 621: 'od' (ID: 368)
  Prédit: 'od'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.1148906722664833
    2. 'oded' → logprob: -2.4898905754089355
    3. 'oup' → logprob: -4.7398905754089355
    4. 'om' → logprob: -5.4898905754089355
    5. 'ont' → logprob: -5.6148905754089355
    6. 'omp' → logprob: -5.7398905754089355
    7. 'ode' → logprob: -5.9898905754089355
    8. 'omm' → logprob: -7.1148905754089355
    9. 'odes' → logprob: -7.6148905754089355
    10. 'odable' → logprob: -7.8648905754089355

Token 622: 'ées' (ID: 5161)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.02348410151898861
    2. 'ode' → logprob: -3.898483991622925
    3. 'ont' → logprob: -7.273484230041504
    4. 't' → logprob: -7.523484230041504
    5. '```' → logprob: -7.898484230041504
    6. '#' → logprob: -8.148484230041504
    7. 'oded' → logprob: -8.773484230041504
    8. 'odes' → logprob: -8.898484230041504
    9. 'ut' → logprob: -9.273484230041504
    10. 'om' → logprob: -9.648484230041504

Token 623: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38705554604530334
    2. '(n' → logprob: -1.137055516242981
    3. ' def' → logprob: -9.512055397033691
    4. 'for' → logprob: -10.512055397033691
    5. '```' → logprob: -10.762055397033691
    6. '(' → logprob: -11.012055397033691
    7. '(def' → logprob: -11.012055397033691
    8. ' (' → logprob: -11.762055397033691
    9. '(S' → logprob: -12.262055397033691
    10. '
' → logprob: -12.387055397033691

Token 624: ' chacune' (ID: 127465)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025927771348506212
    2. ' def' → logprob: -6.00259256362915
    3. 'return' → logprob: -9.377593040466309
    4. 'lambda' → logprob: -11.252593040466309
    5. '
' → logprob: -11.377593040466309
    6. ' return' → logprob: -13.127593040466309
    7. ' lambda' → logprob: -13.502593040466309
    8. '[' → logprob: -13.627593040466309
    9. '#' → logprob: -13.752593040466309
    10. '```' → logprob: -14.127593040466309

Token 625: ' ren' (ID: 5427)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2379046380519867
    2. '=' → logprob: -1.737904667854309
    3. '=lambda' → logprob: -3.7379045486450195
    4. ' =' → logprob: -5.2379045486450195
    5. 'for' → logprob: -5.9879045486450195
    6. ' def' → logprob: -6.7379045486450195
    7. '=[]' → logprob: -6.8629045486450195
    8. '=[' → logprob: -7.6129045486450195
    9. 'return' → logprob: -7.9879045486450195
    10. ' for' → logprob: -8.11290454864502

Token 626: 'voy' (ID: 83465)
  Prédit: 'voy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voy' → logprob: -0.0020955416839569807
    2. 't' → logprob: -6.752095699310303
    3. 'v' → logprob: -7.877095699310303
    4. 'Voy' → logprob: -9.377095222473145
    5. 'voie' → logprob: -9.752095222473145
    6. 'omm' → logprob: -9.877095222473145
    7. 'for' → logprob: -10.127095222473145
    8. 'tr' → logprob: -10.252095222473145
    9. 'd' → logprob: -10.502095222473145
    10. 'a' → logprob: -10.502095222473145

Token 627: 'ée' (ID: 2894)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.5702390670776367
    2. 'ée' → logprob: -1.4452390670776367
    3. 'ées' → logprob: -2.6952390670776367
    4. 'v' → logprob: -2.9452390670776367
    5. 'rée' → logprob: -3.3202390670776367
    6. 'çant' → logprob: -3.5702390670776367
    7. 'cée' → logprob: -5.570239067077637
    8. 'ee' → logprob: -6.195239067077637
    9. '[' → logprob: -6.695239067077637
    10. 'vant' → logprob: -6.945239067077637

Token 628: ' sans' (ID: 9828)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0501655675470829
    2. 'def' → logprob: -3.5501656532287598
    3. 'for' → logprob: -4.55016565322876
    4. '(' → logprob: -5.42516565322876
    5. '(lambda' → logprob: -6.05016565322876
    6. ' for' → logprob: -7.05016565322876
    7. '```' → logprob: -7.67516565322876
    8. '=' → logprob: -7.80016565322876
    9. '=lambda' → logprob: -7.80016565322876
    10. ' =' → logprob: -8.800165176391602

Token 629: ' décou' (ID: 68302)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.4637312591075897
    2. 'newline' → logprob: -1.713731288909912
    3. '\n' → logprob: -2.088731288909912
    4. ''\' → logprob: -3.338731288909912
    5. 'n' → logprob: -5.213731288909912
    6. '\
' → logprob: -5.213731288909912
    7. ' newline' → logprob: -5.588731288909912
    8. 'b' → logprob: -5.713731288909912
    9. ' trailing' → logprob: -5.838731288909912
    10. 'strip' → logprob: -6.588731288909912

Token 630: 'page' (ID: 5342)
  Prédit: 'page'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'page' → logprob: -0.16676665842533112
    2. 'per' → logprob: -1.91676664352417
    3. 'pe' → logprob: -5.41676664352417
    4. 'p' → logprob: -6.29176664352417
    5. 'tage' → logprob: -9.916767120361328
    6. 'pine' → logprob: -10.541767120361328
    7. 'pte' → logprob: -10.666767120361328
    8. 'pé' → logprob: -10.791767120361328
    9. 'pas' → logprob: -11.166767120361328
    10. 'pl' → logprob: -11.416767120361328

Token 631: '/re' (ID: 18868)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003818140830844641
    2. '(n' → logprob: -8.000381469726562
    3. ' def' → logprob: -10.000381469726562
    4. '(def' → logprob: -14.125381469726562
    5. '
' → logprob: -15.750381469726562
    6. '```' → logprob: -17.250381469726562
    7. ':def' → logprob: -17.250381469726562
    8. ':' → logprob: -17.375381469726562
    9. '(' → logprob: -17.625381469726562
    10. '#' → logprob: -18.625381469726562

Token 632: 'trait' (ID: 18216)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.030826080590486526
    2. 'turn' → logprob: -3.7808260917663574
    3. 'rstrip' → logprob: -5.780826091766357
    4. 't' → logprob: -6.405826091766357
    5. 'trait' → logprob: -7.780826091766357
    6. 'tention' → logprob: -8.2808256149292
    7. 'tir' → logprob: -8.5308256149292
    8. 'split' → logprob: -8.6558256149292
    9. 'tr' → logprob: -8.6558256149292
    10. 'ss' → logprob: -8.6558256149292

Token 633: 'ement' (ID: 962)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09106782078742981
    2. '(n' → logprob: -3.0910677909851074
    3. '()' → logprob: -3.3410677909851074
    4. '():' → logprob: -6.091067790985107
    5. '=' → logprob: -6.466067790985107
    6. '(' → logprob: -7.591067790985107
    7. ' def' → logprob: -7.716067790985107
    8. '().' → logprob: -7.841067790985107
    9. '():
' → logprob: -8.466068267822266
    10. '#' → logprob: -8.716068267822266

Token 634: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025742328725755215
    2. '(n' → logprob: -6.002574443817139
    3. ' def' → logprob: -9.25257396697998
    4. '(def' → logprob: -13.00257396697998
    5. '(' → logprob: -15.87757396697998
    6. ':def' → logprob: -16.252574920654297
    7. '```' → logprob: -16.252574920654297
    8. '#' → logprob: -16.752574920654297
    9. ':' → logprob: -16.877574920654297
    10. '
' → logprob: -17.377574920654297

Token 635: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. ' def' → logprob: -14.000000953674316
    3. '#' → logprob: -17.25
    4. '(n' → logprob: -18.0
    5. '```' → logprob: -18.5
    6. '(def' → logprob: -18.875
    7. 'ndef' → logprob: -21.0
    8. 'S' → logprob: -21.375
    9. '(S' → logprob: -21.375
    10. '
' → logprob: -21.875

Token 636: ' SR' (ID: 30704)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40491020679473877
    2. 'SR' → logprob: -1.1549102067947388
    3. 'S' → logprob: -4.029910087585449
    4. ' def' → logprob: -9.90491008758545
    5. ' SR' → logprob: -10.77991008758545
    6. 'lambda' → logprob: -11.52991008758545
    7. 'SD' → logprob: -11.90491008758545
    8. '_SR' → logprob: -12.77991008758545
    9. 'Sr' → logprob: -13.27991008758545
    10. '[S' → logprob: -13.77991008758545

Token 637: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.816093228830141e-06
    2. 'def' → logprob: -13.37500286102295
    3. '(' → logprob: -14.25000286102295
    4. ' (' → logprob: -14.62500286102295
    5. ' def' → logprob: -17.375001907348633
    6. '(def' → logprob: -19.125001907348633
    7. '(lambda' → logprob: -20.125001907348633
    8. '```' → logprob: -20.125001907348633
    9. '#' → logprob: -20.375001907348633
    10. 'n' → logprob: -20.750001907348633

Token 638: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31360700726509094
    2. '(n' → logprob: -1.3136069774627686
    3. ')' → logprob: -8.813607215881348
    4. 'def' → logprob: -9.063607215881348
    5. '):
' → logprob: -9.938607215881348
    6. ')(' → logprob: -11.313607215881348
    7. ' ):' → logprob: -11.438607215881348
    8. 'n' → logprob: -12.563607215881348
    9. '):

' → logprob: -13.063607215881348
    10. '#' → logprob: -13.813607215881348

Token 639: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12826551496982574
    2. ' return' → logprob: -2.128265619277954
    3. 'def' → logprob: -6.628265380859375
    4. ' def' → logprob: -12.503265380859375
    5. '   ' → logprob: -12.753265380859375
    6. '[S' → logprob: -12.878265380859375
    7. '[' → logprob: -13.128265380859375
    8. '[s' → logprob: -13.378265380859375
    9. '
' → logprob: -14.378265380859375
    10. '	return' → logprob: -15.253265380859375

Token 640: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033951509976759553
    2. '[S' → logprob: -8.25033950805664
    3. '[s' → logprob: -9.62533950805664
    4. '[line' → logprob: -12.37533950805664
    5. '[list' → logprob: -13.00033950805664
    6. '[input' → logprob: -13.75033950805664
    7. '[str' → logprob: -14.37533950805664
    8. ' [' → logprob: -14.62533950805664
    9. '[obj' → logprob: -14.62533950805664
    10. '[String' → logprob: -15.00033950805664

Token 641: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2014162540435791
    2. 'sys' → logprob: -1.701416254043579
    3. 's' → logprob: -13.951416015625
    4. ' sys' → logprob: -14.201416015625
    5. 'Sys' → logprob: -14.826416015625
    6. 'SYS' → logprob: -14.826416015625
    7. ' S' → logprob: -14.826416015625
    8. '(sys' → logprob: -15.701416015625
    9. '```' → logprob: -17.076416015625
    10. 'system' → logprob: -17.576416015625

Token 642: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.7697225252486533e-06
    2. '()]' → logprob: -12.750003814697266
    3. ' ()' → logprob: -14.625003814697266
    4. '()
' → logprob: -15.750003814697266
    5. '().' → logprob: -16.000003814697266
    6. '(' → logprob: -17.750003814697266
    7. '()`' → logprob: -18.500003814697266
    8. '（）' → logprob: -18.625003814697266
    9. '()[' → logprob: -19.000003814697266
    10. '()]
' → logprob: -19.125003814697266

Token 643: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.774276774493046e-05
    2. 'for' → logprob: -10.375038146972656
    3. '(' → logprob: -12.375038146972656
    4. ' ()' → logprob: -13.500038146972656
    5. '()
' → logprob: -14.500038146972656
    6. '()]' → logprob: -16.000038146972656
    7. '(n' → logprob: -16.375038146972656
    8. ' for' → logprob: -16.500038146972656
    9. ')' → logprob: -17.625038146972656
    10. '（）' → logprob: -17.875038146972656

Token 644: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06308168917894363
    2. 'i' → logprob: -2.813081741333008
    3. '_i' → logprob: -6.813081741333008
    4. ' i' → logprob: -11.563081741333008
    5. ' _' → logprob: -12.563081741333008
    6. '_
' → logprob: -14.688081741333008
    7. '
' → logprob: -15.813081741333008
    8. '	i' → logprob: -15.938081741333008
    9. '_

' → logprob: -16.313081741333008
    10. '_
' → logprob: -16.563081741333008

Token 645: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47557127475738525
    2. 'in' → logprob: -0.9755712747573853
    3. 'range' → logprob: -6.975571155548096
    4. '(' → logprob: -8.350571632385254
    5. 'n' → logprob: -8.475571632385254
    6. '(n' → logprob: -10.850571632385254
    7. '_' → logprob: -10.975571632385254
    8. ' ' → logprob: -11.225571632385254
    9. ' range' → logprob: -11.350571632385254
    10. 'i' → logprob: -11.475571632385254

Token 646: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.848420551046729e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -16.250059127807617
    4. '	range' → logprob: -18.500059127807617
    5. 'in' → logprob: -21.875059127807617
    6. '_range' → logprob: -23.000059127807617
    7. 'rang' → logprob: -23.375059127807617
    8. '
' → logprob: -23.875059127807617
    9. '.range' → logprob: -24.000059127807617
    10. '   ' → logprob: -24.125059127807617

Token 647: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019348275382071733
    2. '(n' → logprob: -6.251935005187988
    3. ' n' → logprob: -12.001935005187988
    4. '	n' → logprob: -16.001934051513672
    5. ')n' → logprob: -18.751934051513672
    6. ' (' → logprob: -19.376934051513672
    7. ',n' → logprob: -19.501934051513672
    8. '<n' → logprob: -20.126934051513672
    9. '(' → logprob: -20.251934051513672
    10. '
' → logprob: -21.251934051513672

Token 648: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.007972124963998795
    2. '(n' → logprob: -4.882972240447998
    3. 'n' → logprob: -8.13297176361084
    4. ')' → logprob: -10.38297176361084
    5. '(' → logprob: -11.00797176361084
    6. '())' → logprob: -12.13297176361084
    7. '()]' → logprob: -12.25797176361084
    8. '()' → logprob: -12.75797176361084
    9. ')]
' → logprob: -13.25797176361084
    10. ')n' → logprob: -13.25797176361084

Token 649: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.045784831047058
    2. '#' → logprob: -1.170784831047058
    3. 'def' → logprob: -1.295784831047058
    4. '<|end|>' → logprob: -3.0457849502563477
    5. '\n' → logprob: -4.920784950256348
    6. ' 
' → logprob: -6.295784950256348
    7. '```' → logprob: -6.420784950256348
    8. '<|end|>' → logprob: -6.420784950256348
    9. '\' → logprob: -7.045784950256348
    10. '

' → logprob: -7.170784950256348

Token 650: ' L' (ID: 451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2652142345905304
    2. '#' → logprob: -1.640214204788208
    3. 'n' → logprob: -3.515214204788208
    4. '
' → logprob: -5.515214443206787
    5. 'import' → logprob: -5.890214443206787
    6. 'class' → logprob: -6.890214443206787
    7. '\n' → logprob: -7.640214443206787
    8. '(n' → logprob: -8.765213966369629
    9. '\' → logprob: -9.015213966369629
    10. 'from' → logprob: -9.265213966369629

Token 651: 'SR' (ID: 22892)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.06601700931787491
    2. 'SR' → logprob: -3.191016912460327
    3. 'S' → logprob: -4.691017150878906
    4. 'I' → logprob: -5.441017150878906
    5. 'R' → logprob: -5.441017150878906
    6. '=[]' → logprob: -6.941017150878906
    7. 'ISR' → logprob: -7.066017150878906
    8. 'L' → logprob: -7.066017150878906
    9. 'IST' → logprob: -7.816017150878906
    10. 'ist' → logprob: -8.441017150878906

Token 652: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0022065204102545977
    2. 'def' → logprob: -6.127206325531006
    3. ' def' → logprob: -11.377206802368164
    4. '<|end|>' → logprob: -12.877206802368164
    5. 'n' → logprob: -13.002206802368164
    6. '(' → logprob: -13.377206802368164
    7. '<|end|>' → logprob: -13.627206802368164
    8. ' (' → logprob: -13.877206802368164
    9. '#' → logprob: -14.377206802368164
    10. ' =' → logprob: -15.377206802368164

Token 653: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012925254181027412
    2. '(n' → logprob: -4.637925148010254
    3. 'def' → logprob: -5.887925148010254
    4. '#' → logprob: -8.512925148010254
    5. ')' → logprob: -9.137925148010254
    6. '):
' → logprob: -10.262925148010254
    7. 'n' → logprob: -11.012925148010254
    8. ' ):' → logprob: -11.137925148010254
    9. ']:' → logprob: -12.387925148010254
    10. ' def' → logprob: -12.887925148010254

Token 654: ' :' (ID: 712)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006736811250448227
    2. 'def' → logprob: -5.006736755371094
    3. ' def' → logprob: -11.131736755371094
    4. ':' → logprob: -12.756736755371094
    5. 'n' → logprob: -12.756736755371094
    6. '#' → logprob: -15.131736755371094
    7. '=' → logprob: -15.631736755371094
    8. ' =' → logprob: -16.006736755371094
    9. '
' → logprob: -16.506736755371094
    10. ' (' → logprob: -16.631736755371094

Token 655: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015395533409900963
    2. ' def' → logprob: -9.375153541564941
    3. '(n' → logprob: -9.875153541564941
    4. 'lambda' → logprob: -11.250153541564941
    5. 'n' → logprob: -12.875153541564941
    6. '(lambda' → logprob: -13.625153541564941
    7. 'ndef' → logprob: -14.875153541564941
    8. '#' → logprob: -16.000154495239258
    9. '(def' → logprob: -16.250154495239258
    10. '```' → logprob: -16.375154495239258

Token 656: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09286369383335114
    2. 'i' → logprob: -2.4678637981414795
    3. ' n' → logprob: -6.7178635597229
    4. '(n' → logprob: -7.0928635597229
    5. 'SR' → logprob: -7.2178635597229
    6. 'range' → logprob: -7.9678635597229
    7. 'def' → logprob: -8.217864036560059
    8. 'LS' → logprob: -8.467864036560059
    9. 'int' → logprob: -9.467864036560059
    10. 'lambda' → logprob: -9.467864036560059

Token 657: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004005622584372759
    2. 'def' → logprob: -6.254005432128906
    3. 'n' → logprob: -6.754005432128906
    4. '):' → logprob: -7.754005432128906
    5. 'lines' → logprob: -9.129005432128906
    6. ')' → logprob: -9.129005432128906
    7. '):
' → logprob: -10.129005432128906
    8. '
' → logprob: -10.379005432128906
    9. 's' → logprob: -10.379005432128906
    10. '(lines' → logprob: -10.754005432128906

Token 658: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06209675222635269
    2. 'def' → logprob: -2.8120968341827393
    3. ' def' → logprob: -9.68709659576416
    4. '#' → logprob: -10.18709659576416
    5. '
' → logprob: -11.31209659576416
    6. ' (' → logprob: -12.18709659576416
    7. '(' → logprob: -12.68709659576416
    8. 'n' → logprob: -12.81209659576416
    9. '```' → logprob: -13.43709659576416
    10. '(def' → logprob: -13.68709659576416

Token 659: ' lit' (ID: 11980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0076437825337052345
    2. 'return' → logprob: -5.007643699645996
    3. ' def' → logprob: -7.507643699645996
    4. ' return' → logprob: -8.632643699645996
    5. 'LS' → logprob: -9.007643699645996
    6. 'lambda' → logprob: -11.007643699645996
    7. ' retourne' → logprob: -11.507643699645996
    8. '#' → logprob: -11.757643699645996
    9. '
' → logprob: -12.132643699645996
    10. 'returns' → logprob: -12.632643699645996

Token 660: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18032611906528473
    2. '(n' → logprob: -1.8053261041641235
    3. 'def' → logprob: -7.680325984954834
    4. ' n' → logprob: -9.555326461791992
    5. 'int' → logprob: -11.055326461791992
    6. 'LS' → logprob: -11.555326461791992
    7. 'ls' → logprob: -11.805326461791992
    8. 's' → logprob: -12.930326461791992
    9. '[n' → logprob: -12.930326461791992
    10. '(i' → logprob: -13.430326461791992

Token 661: ' ligne' (ID: 19583)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0338020324707031
    2. 'LS' → logprob: -2.033802032470703
    3. '_' → logprob: -2.158802032470703
    4. 'lambda' → logprob: -2.408802032470703
    5. 'line' → logprob: -2.783802032470703
    6. 'range' → logprob: -2.783802032470703
    7. 'ligne' → logprob: -2.783802032470703
    8. 'n' → logprob: -2.908802032470703
    9. '(n' → logprob: -4.533802032470703
    10. ')' → logprob: -5.033802032470703

Token 662: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.22251461446285248
    2. 'def' → logprob: -1.9725146293640137
    3. '(lambda' → logprob: -3.3475146293640137
    4. '()' → logprob: -4.097514629364014
    5. '(' → logprob: -5.472514629364014
    6. '(S' → logprob: -6.597514629364014
    7. '=lambda' → logprob: -7.722514629364014
    8. 'LS' → logprob: -8.097514152526855
    9. '():' → logprob: -8.222514152526855
    10. '(ls' → logprob: -8.347514152526855

Token 663: ' la' (ID: 557)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6141262650489807
    2. 'lambda' → logprob: -1.114126205444336
    3. 'LS' → logprob: -2.739126205444336
    4. 'return' → logprob: -3.614126205444336
    5. ' lambda' → logprob: -3.739126205444336
    6. 'ls' → logprob: -5.739126205444336
    7. ' def' → logprob: -5.989126205444336
    8. 'split' → logprob: -5.989126205444336
    9. ' return' → logprob: -6.864126205444336
    10. '(lambda' → logprob: -6.864126205444336

Token 664: ' dé' (ID: 2393)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.041775114834308624
    2. 'split' → logprob: -3.2917752265930176
    3. 'strip' → logprob: -5.916775226593018
    4. 'decode' → logprob: -7.666775226593018
    5. 'd' → logprob: -7.791775226593018
    6. 's' → logprob: -10.16677474975586
    7. '.rstrip' → logprob: -10.29177474975586
    8. 'rs' → logprob: -10.54177474975586
    9. 'replace' → logprob: -10.91677474975586
    10. ' split' → logprob: -12.16677474975586

Token 665: 'code' (ID: 3056)
  Prédit: 'code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.0471009686589241
    2. 'f' → logprob: -3.2971010208129883
    3. 'c' → logprob: -5.297101020812988
    4. 'cou' → logprob: -5.922101020812988
    5. 'cod' → logprob: -7.672101020812988
    6. 'cale' → logprob: -8.422101020812988
    7. 'codec' → logprob: -9.172101020812988
    8. 'cape' → logprob: -9.547101020812988
    9. 'scode' → logprob: -10.297101020812988
    10. 'cup' → logprob: -10.547101020812988

Token 666: ' et' (ID: 859)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00920486357063055
    2. '()' → logprob: -4.759204864501953
    3. '()
' → logprob: -8.759204864501953
    4. 'def' → logprob: -9.384204864501953
    5. '(),' → logprob: -9.509204864501953
    6. '(n' → logprob: -9.634204864501953
    7. 'rstrip' → logprob: -9.884204864501953
    8. '('' → logprob: -10.009204864501953
    9. '(' → logprob: -10.509204864501953
    10. '()[' → logprob: -11.009204864501953

Token 667: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.46258994936943054
    2. 'split' → logprob: -1.462589979171753
    3. 'la' → logprob: -2.587589979171753
    4. 'les' → logprob: -3.087589979171753
    5. 'spl' → logprob: -4.587589740753174
    6. 'div' → logprob: -6.087589740753174
    7. '.split' → logprob: -7.087589740753174
    8. 'dé' → logprob: -7.212589740753174
    9. 'cou' → logprob: -7.462589740753174
    10. 'sé' → logprob: -7.462589740753174

Token 668: ' décou' (ID: 68302)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005021224729716778
    2. 'rstrip' → logprob: -5.380021095275879
    3. 'strip' → logprob: -8.505021095275879
    4. ' split' → logprob: -8.755021095275879
    5. 'ls' → logprob: -10.755021095275879
    6. 'spl' → logprob: -11.130021095275879
    7. '.split' → logprob: -13.380021095275879
    8. 'decode' → logprob: -13.505021095275879
    9. 'l' → logprob: -15.505021095275879
    10. 'plit' → logprob: -15.630021095275879

Token 669: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.8473952412605286
    2. 'upe' → logprob: -1.8473951816558838
    3. 'up' → logprob: -2.222395181655884
    4. 'per' → logprob: -2.722395181655884
    5. 'pte' → logprob: -2.722395181655884
    6. 'p' → logprob: -2.847395181655884
    7. 'te' → logprob: -3.347395181655884
    8. 'de' → logprob: -3.972395181655884
    9. 'mp' → logprob: -3.972395181655884
    10. 'page' → logprob: -4.097395420074463

Token 670: ' sur' (ID: 1512)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.05287446826696396
    2. 'def' → logprob: -3.0528745651245117
    3. 'en' → logprob: -5.677874565124512
    4. '(en' → logprob: -7.427874565124512
    5. ' en' → logprob: -9.427874565124512
    6. '(i' → logprob: -10.052874565124512
    7. '()' → logprob: -10.427874565124512
    8. 'for' → logprob: -10.427874565124512
    9. '(' → logprob: -10.927874565124512
    10. 'n' → logprob: -11.802874565124512

Token 671: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4943227171897888
    2. '('' → logprob: -0.9943227171897888
    3. 'spaces' → logprob: -4.494322776794434
    4. 'lines' → logprob: -5.744322776794434
    5. ''esp' → logprob: -5.869322776794434
    6. 'esp' → logprob: -6.869322776794434
    7. ''espace' → logprob: -7.369322776794434
    8. 'space' → logprob: -7.744322776794434
    9. '['' → logprob: -8.494322776794434
    10. ''s' → logprob: -9.494322776794434

Token 672: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.008031254634261131
    2. 'es' → logprob: -5.633031368255615
    3. ' espaces' → logprob: -5.883031368255615
    4. 'spaces' → logprob: -6.758031368255615
    5. ''esp' → logprob: -8.008030891418457
    6. '_' → logprob: -9.508030891418457
    7. 'space' → logprob: -10.758030891418457
    8. ''espace' → logprob: -11.008030891418457
    9. 'sp' → logprob: -12.008030891418457
    10. ''' → logprob: -12.133030891418457

Token 673: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009621028788387775
    2. '(n' → logprob: -4.7596211433410645
    3. 'return' → logprob: -7.6346211433410645
    4. ' def' → logprob: -8.509620666503906
    5. 'for' → logprob: -9.259620666503906
    6. '()' → logprob: -9.509620666503906
    7. ',' → logprob: -10.009620666503906
    8. '():' → logprob: -10.884620666503906
    9. ':' → logprob: -11.134620666503906
    10. '(lambda' → logprob: -11.259620666503906

Token 674: ' retourne' (ID: 178818)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016111508011817932
    2. 'return' → logprob: -6.501611232757568
    3. '#' → logprob: -9.62661075592041
    4. ' def' → logprob: -10.12661075592041
    5. ' return' → logprob: -13.25161075592041
    6. '
' → logprob: -14.00161075592041
    7. 'returns' → logprob: -16.126611709594727
    8. 'lambda' → logprob: -16.626611709594727
    9. '   ' → logprob: -17.751611709594727
    10. ' #' → logprob: -17.876611709594727

Token 675: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004190113395452499
    2. '[S' → logprob: -5.754189968109131
    3. '[n' → logprob: -7.129189968109131
    4. '[i' → logprob: -9.379190444946289
    5. '[str' → logprob: -9.754190444946289
    6. '[s' → logprob: -11.379190444946289
    7. '[String' → logprob: -11.754190444946289
    8. 'def' → logprob: -12.004190444946289
    9. '[int' → logprob: -12.004190444946289
    10. '[line' → logprob: -12.004190444946289

Token 676: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36581575870513916
    2. '[list' → logprob: -2.3658156394958496
    3. 'list' → logprob: -2.7408156394958496
    4. '[n' → logprob: -3.1158156394958496
    5. '[List' → logprob: -3.6158156394958496
    6. '[[' → logprob: -3.7408156394958496
    7. 'def' → logprob: -3.8658156394958496
    8. '[s' → logprob: -4.74081563949585
    9. '[str' → logprob: -5.11581563949585
    10. '[i' → logprob: -5.49081563949585

Token 677: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6210281252861023
    2. 'def' → logprob: -1.746028184890747
    3. '[n' → logprob: -2.121028184890747
    4. 'of' → logprob: -2.121028184890747
    5. '[' → logprob: -4.246027946472168
    6. '([' → logprob: -4.996027946472168
    7. '(lambda' → logprob: -5.246027946472168
    8. '(range' → logprob: -5.246027946472168
    9. '(' → logprob: -5.496027946472168
    10. '[int' → logprob: -5.621027946472168

Token 678: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005513584706932306
    2. 'lists' → logprob: -5.255513668060303
    3. 'LS' → logprob: -9.005513191223145
    4. 'liste' → logprob: -9.130513191223145
    5. 'n' → logprob: -10.880513191223145
    6. 'ls' → logprob: -11.255513191223145
    7. 'listas' → logprob: -12.130513191223145
    8. 'str' → logprob: -12.380513191223145
    9. 'List' → logprob: -12.755513191223145
    10. ' listes' → logprob: -13.880513191223145

Token 679: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3159193694591522
    2. '(n' → logprob: -1.3159193992614746
    3. 'for' → logprob: -7.315919399261475
    4. '[n' → logprob: -7.565919399261475
    5. '(lambda' → logprob: -7.690919399261475
    6. ' def' → logprob: -8.190918922424316
    7. '(range' → logprob: -8.690918922424316
    8. ' (' → logprob: -9.065918922424316
    9. '(def' → logprob: -9.440918922424316
    10. 'of' → logprob: -9.565918922424316

Token 680: ' chaînes' (ID: 179904)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.006035919301211834
    2. 'strings' → logprob: -5.256035804748535
    3. 'cha' → logprob: -7.756035804748535
    4. 'string' → logprob: -8.256035804748535
    5. 'chain' → logprob: -9.631035804748535
    6. ' chaînes' → logprob: -10.131035804748535
    7. 'chaine' → logprob: -12.631035804748535
    8. 'list' → logprob: -13.256035804748535
    9. '[str' → logprob: -13.381035804748535
    10. 'chains' → logprob: -13.506035804748535

Token 681: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029816221445798874
    2. '(n' → logprob: -3.529816150665283
    3. ' def' → logprob: -10.529816627502441
    4. '```' → logprob: -10.779816627502441
    5. '(lambda' → logprob: -12.154816627502441
    6. '(def' → logprob: -12.404816627502441
    7. '(' → logprob: -13.154816627502441
    8. '#' → logprob: -13.529816627502441
    9. '[n' → logprob: -13.529816627502441
    10. ' (' → logprob: -14.279816627502441

Token 682: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3782830137643032e-05
    2. '(n' → logprob: -11.37501335144043
    3. ' def' → logprob: -13.50001335144043
    4. '```' → logprob: -14.50001335144043
    5. '(def' → logprob: -15.12501335144043
    6. '#' → logprob: -16.87501335144043
    7. '(' → logprob: -18.00001335144043
    8. 'ndef' → logprob: -18.62501335144043
    9. ':def' → logprob: -18.87501335144043
    10. '
' → logprob: -19.00001335144043

Token 683: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -4.584861744660884e-05
    2. 'def' → logprob: -10.000045776367188
    3. 'L' → logprob: -14.750045776367188
    4. 'ls' → logprob: -18.625045776367188
    5. '
' → logprob: -19.750045776367188
    6. '```' → logprob: -20.000045776367188
    7. ' LS' → logprob: -20.125045776367188
    8. ' L' → logprob: -20.375045776367188
    9. 'lambda' → logprob: -20.750045776367188
    10. '#' → logprob: -20.875045776367188

Token 684: 'SR' (ID: 22892)
  Prédit: 'SR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SR' → logprob: -0.00018041854491457343
    2. 'S' → logprob: -8.6251802444458
    3. '(' → logprob: -14.6251802444458
    4. '(S' → logprob: -17.250181198120117
    5. 'def' → logprob: -17.375181198120117
    6. '```' → logprob: -17.375181198120117
    7. 'SOR' → logprob: -17.750181198120117
    8. 'Sr' → logprob: -17.750181198120117
    9. ' SR' → logprob: -18.250181198120117
    10. 'SSR' → logprob: -18.375181198120117

Token 685: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. 'def' → logprob: -16.375
    4. ' (' → logprob: -17.75
    5. '():' → logprob: -17.75
    6. 'n' → logprob: -18.125
    7. '(
' → logprob: -20.5
    8. '#' → logprob: -20.875
    9. '(N' → logprob: -21.0
    10. ':' → logprob: -21.125

Token 686: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017421995289623737
    2. '():' → logprob: -9.625174522399902
    3. '(n' → logprob: -9.750174522399902
    4. ')' → logprob: -10.875174522399902
    5. '):
' → logprob: -11.375174522399902
    6. ' ):' → logprob: -11.500174522399902
    7. '()' → logprob: -12.375174522399902
    8. 'def' → logprob: -13.000174522399902
    9. 'n' → logprob: -13.250174522399902
    10. ')(' → logprob: -15.250174522399902

Token 687: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3159843683242798
    2. ' return' → logprob: -1.3159843683242798
    3. 'def' → logprob: -5.94098424911499
    4. '   ' → logprob: -10.065984725952148
    5. ' def' → logprob: -10.065984725952148
    6. 'LS' → logprob: -13.690984725952148
    7. ' LS' → logprob: -14.065984725952148
    8. '[n' → logprob: -14.315984725952148
    9. '
' → logprob: -14.440984725952148
    10. ':return' → logprob: -15.315984725952148

Token 688: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012403888104017824
    2. '[S' → logprob: -9.000123977661133
    3. '[[' → logprob: -15.625123977661133
    4. ' [' → logprob: -15.750123977661133
    5. '[List' → logprob: -17.000123977661133
    6. '[str' → logprob: -17.000123977661133
    7. '[list' → logprob: -17.000123977661133
    8. '[String' → logprob: -17.500123977661133
    9. '[s' → logprob: -17.750123977661133
    10. '[self' → logprob: -17.875123977661133

Token 689: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -4.723352049040841e-06
    2. 'S' → logprob: -13.000004768371582
    3. 'sys' → logprob: -13.000004768371582
    4. ' LS' → logprob: -16.125003814697266
    5. 'ls' → logprob: -20.125003814697266
    6. 'L' → logprob: -21.375003814697266
    7. 'Ls' → logprob: -22.000003814697266
    8. 'SS' → logprob: -23.000003814697266
    9. 'LC' → logprob: -23.125003814697266
    10. 'SL' → logprob: -23.125003814697266

Token 690: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011830137111246586
    2. '(i' → logprob: -4.7618303298950195
    3. '()' → logprob: -5.7618303298950195
    4. '(' → logprob: -9.76183032989502
    5. '()]' → logprob: -12.63683032989502
    6. '()(' → logprob: -12.88683032989502
    7. ' (' → logprob: -14.76183032989502
    8. '((' → logprob: -15.63683032989502
    9. 'for' → logprob: -15.76183032989502
    10. '().' → logprob: -16.261829376220703

Token 691: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.046232547610998154
    2. 'for' → logprob: -3.5462324619293213
    3. '(i' → logprob: -4.2962327003479
    4. ' for' → logprob: -6.1712327003479
    5. '(' → logprob: -7.6712327003479
    6. '()' → logprob: -8.796232223510742
    7. ' (' → logprob: -11.171232223510742
    8. '(for' → logprob: -12.671232223510742
    9. 'n' → logprob: -13.296232223510742
    10. ')' → logprob: -14.671232223510742

Token 692: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.875004768371582
    3. '_i' → logprob: -13.625004768371582
    4. ' i' → logprob: -14.125004768371582
    5. 'range' → logprob: -14.250004768371582
    6. 'in' → logprob: -16.6250057220459
    7. '(i' → logprob: -18.0000057220459
    8. ' range' → logprob: -19.2500057220459
    9. ' in' → logprob: -20.3750057220459
    10. ')' → logprob: -20.3750057220459

Token 693: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0820450559258461
    2. ' in' → logprob: -2.582045078277588
    3. '(n' → logprob: -6.457045078277588
    4. 'range' → logprob: -6.832045078277588
    5. '(in' → logprob: -8.58204460144043
    6. '(' → logprob: -8.70704460144043
    7. 'n' → logprob: -9.95704460144043
    8. '(range' → logprob: -9.95704460144043
    9. '(i' → logprob: -10.95704460144043
    10. '
' → logprob: -11.83204460144043

Token 694: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.935296834039036e-06
    2. ' range' → logprob: -12.75000286102295
    3. '(range' → logprob: -20.375003814697266
    4. '	range' → logprob: -23.250003814697266
    5. 'in' → logprob: -24.125003814697266
    6. 'Range' → logprob: -24.875003814697266
    7. 'rang' → logprob: -25.250003814697266
    8. '
' → logprob: -25.375003814697266
    9. '_range' → logprob: -25.750003814697266
    10. 'count' → logprob: -27.125003814697266

Token 695: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004034467972815037
    2. 'n' → logprob: -6.004034519195557
    3. '(n' → logprob: -6.504034519195557
    4. ' range' → logprob: -9.754034042358398
    5. '(range' → logprob: -13.129034042358398
    6. 'in' → logprob: -16.5040340423584
    7. 'Range' → logprob: -18.8790340423584
    8. ' n' → logprob: -19.5040340423584
    9. '[n' → logprob: -19.6290340423584
    10. '_range' → logprob: -19.7540340423584

Token 696: ')]

' (ID: 56882)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004340391140431166
    2. ')]' → logprob: -6.004340171813965
    3. 'n' → logprob: -6.879340171813965
    4. 'range' → logprob: -7.254340171813965
    5. ' range' → logprob: -10.004340171813965
    6. '(' → logprob: -10.004340171813965
    7. '(range' → logprob: -10.879340171813965
    8. ')' → logprob: -12.004340171813965
    9. ',n' → logprob: -12.754340171813965
    10. 'in' → logprob: -12.879340171813965

Token 697: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3005102872848511
    2. '<|end|>' → logprob: -1.425510287284851
    3. '\n' → logprob: -5.175510406494141
    4. '#' → logprob: -5.550510406494141
    5. '

' → logprob: -6.050510406494141
    6. 'def' → logprob: -6.175510406494141
    7. '<|end|>' → logprob: -6.550510406494141
    8. ' ' → logprob: -7.175510406494141
    9. '' → logprob: -7.175510406494141
    10. '  
' → logprob: -7.925510406494141

Token 698: ' SR' (ID: 30704)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4327578842639923
    2. '#' → logprob: -1.05775785446167
    3. '
' → logprob: -6.93275785446167
    4. 'n' → logprob: -7.18275785446167
    5. 'import' → logprob: -7.43275785446167
    6. 'class' → logprob: -7.93275785446167
    7. '\' → logprob: -8.057758331298828
    8. ' ' → logprob: -8.557758331298828
    9. 'from' → logprob: -8.932758331298828
    10. 'a' → logprob: -9.057758331298828

Token 699: 'L' (ID: 43)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09051273763179779
    2. 'R' → logprob: -3.090512752532959
    3. '<|end|>' → logprob: -4.215512752532959
    4. '(' → logprob: -4.590512752532959
    5. 'n' → logprob: -5.215512752532959
    6. '<|end|>' → logprob: -5.465512752532959
    7. 'SR' → logprob: -6.215512752532959
    8. 'def' → logprob: -6.340512752532959
    9. 'r' → logprob: -6.715512752532959
    10. 's' → logprob: -7.840512752532959

Token 700: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09336578845977783
    2. 'def' → logprob: -2.4683656692504883
    3. ' =' → logprob: -6.093365669250488
    4. '=' → logprob: -7.218365669250488
    5. ' def' → logprob: -7.468365669250488
    6. 's' → logprob: -8.343365669250488
    7. '#' → logprob: -8.718365669250488
    8. ':' → logprob: -9.343365669250488
    9. ' (' → logprob: -9.593365669250488
    10. '(' → logprob: -9.718365669250488

Token 701: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031045904383063316
    2. ')' → logprob: -4.031045913696289
    3. '(n' → logprob: -4.406045913696289
    4. 'def' → logprob: -7.781045913696289
    5. '):
' → logprob: -9.656045913696289
    6. 'n' → logprob: -9.906045913696289
    7. '#' → logprob: -10.781045913696289
    8. ' ):' → logprob: -11.281045913696289
    9. ');' → logprob: -12.281045913696289
    10. ',n' → logprob: -12.406045913696289

Token 702: ' :' (ID: 712)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12736742198467255
    2. 'def' → logprob: -2.1273674964904785
    3. ':' → logprob: -8.50236701965332
    4. ' def' → logprob: -8.50236701965332
    5. ' =' → logprob: -11.12736701965332
    6. '#' → logprob: -12.00236701965332
    7. 'n' → logprob: -12.12736701965332
    8. '=' → logprob: -12.37736701965332
    9. ':def' → logprob: -14.12736701965332
    10. ' (' → logprob: -14.50236701965332

Token 703: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003713261801749468
    2. '#' → logprob: -5.753713130950928
    3. 'LS' → logprob: -8.753713607788086
    4. 'lambda' → logprob: -9.128713607788086
    5. '[' → logprob: -9.503713607788086
    6. 'S' → logprob: -9.628713607788086
    7. ' def' → logprob: -9.753713607788086
    8. 'SR' → logprob: -11.378713607788086
    9. 'from' → logprob: -11.378713607788086
    10. 'for' → logprob: -11.878713607788086

Token 704: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007184768561273813
    2. 'SR' → logprob: -5.757184982299805
    3. ' n' → logprob: -6.007184982299805
    4. '(n' → logprob: -6.757184982299805
    5. 'def' → logprob: -8.757184982299805
    6. 'range' → logprob: -9.632184982299805
    7. 'int' → logprob: -9.882184982299805
    8. 'S' → logprob: -10.382184982299805
    9. 'LS' → logprob: -10.757184982299805
    10. '#' → logprob: -11.007184982299805

Token 705: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.346744179725647
    2. 'SR' → logprob: -1.721744179725647
    3. 'S' → logprob: -2.7217440605163574
    4. 'def' → logprob: -3.7217440605163574
    5. 's' → logprob: -5.346744060516357
    6. '):' → logprob: -5.596744060516357
    7. '(' → logprob: -5.721744060516357
    8. '(int' → logprob: -6.596744060516357
    9. '(i' → logprob: -6.721744060516357
    10. ',' → logprob: -6.721744060516357

Token 706: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.033710479736328125
    2. 'def' → logprob: -3.408710479736328
    3. '#' → logprob: -10.408710479736328
    4. ' def' → logprob: -11.533710479736328
    5. ':' → logprob: -12.283710479736328
    6. '(s' → logprob: -12.658710479736328
    7. 'LS' → logprob: -12.908710479736328
    8. '```' → logprob: -13.408710479736328
    9. '(lambda' → logprob: -13.658710479736328
    10. 's' → logprob: -13.658710479736328

Token 707: ' lit' (ID: 11980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01647242344915867
    2. ' def' → logprob: -4.266472339630127
    3. 'SR' → logprob: -6.391472339630127
    4. 'S' → logprob: -7.891472339630127
    5. '
' → logprob: -9.766472816467285
    6. 'return' → logprob: -9.891472816467285
    7. '#' → logprob: -10.016472816467285
    8. 'LS' → logprob: -10.141472816467285
    9. ' SR' → logprob: -11.391472816467285
    10. 'import' → logprob: -11.516472816467285

Token 708: ' chaque' (ID: 21194)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25372031331062317
    2. 'S' → logprob: -2.503720283508301
    3. 'n' → logprob: -3.003720283508301
    4. 'def' → logprob: -3.753720283508301
    5. 'SR' → logprob: -3.753720283508301
    6. '[n' → logprob: -3.878720283508301
    7. 'LS' → logprob: -4.378720283508301
    8. '[' → logprob: -5.128720283508301
    9. 's' → logprob: -5.628720283508301
    10. 'L' → logprob: -6.628720283508301

Token 709: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7445870637893677
    2. 'line' → logprob: -0.9945870637893677
    3. 'S' → logprob: -2.744586944580078
    4. '_' → logprob: -3.619586944580078
    5. 's' → logprob: -3.994586944580078
    6. 'def' → logprob: -4.619586944580078
    7. 'L' → logprob: -5.494586944580078
    8. '(n' → logprob: -5.494586944580078
    9. 'range' → logprob: -5.619586944580078
    10. 'ligne' → logprob: -5.619586944580078

Token 710: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3909134566783905
    2. 'def' → logprob: -1.390913486480713
    3. '(n' → logprob: -3.765913486480713
    4. '().' → logprob: -3.890913486480713
    5. '#' → logprob: -5.515913486480713
    6. 'rstrip' → logprob: -5.515913486480713
    7. ' =' → logprob: -5.640913486480713
    8. '=' → logprob: -5.890913486480713
    9. ',' → logprob: -6.265913486480713
    10. 'for' → logprob: -6.390913486480713

Token 711: ' retourne' (ID: 178818)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.019375793635845184
    2. 'S' → logprob: -4.394375801086426
    3. 'strip' → logprob: -5.519375801086426
    4. 's' → logprob: -7.269375801086426
    5. 'split' → logprob: -7.769375801086426
    6. '.rstrip' → logprob: -7.769375801086426
    7. 'r' → logprob: -8.269375801086426
    8. 'list' → logprob: -8.394375801086426
    9. ' S' → logprob: -9.144375801086426
    10. 'return' → logprob: -9.269375801086426

Token 712: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7630363702774048
    2. '[S' → logprob: -1.0130363702774048
    3. 'S' → logprob: -2.1380362510681152
    4. 'LS' → logprob: -3.2630362510681152
    5. 'SR' → logprob: -5.638036251068115
    6. ' [' → logprob: -6.138036251068115
    7. '[s' → logprob: -6.513036251068115
    8. '[str' → logprob: -6.513036251068115
    9. '[L' → logprob: -6.513036251068115
    10. '[n' → logprob: -7.388036251068115

Token 713: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.013336347416043282
    2. 'S' → logprob: -5.763336181640625
    3. 'string' → logprob: -5.763336181640625
    4. '[str' → logprob: -6.138336181640625
    5. 'rstrip' → logprob: -6.513336181640625
    6. 'str' → logprob: -6.763336181640625
    7. 'liste' → logprob: -7.388336181640625
    8. 's' → logprob: -8.263336181640625
    9. '[string' → logprob: -8.388336181640625
    10. '[' → logprob: -8.388336181640625

Token 714: ' de' (ID: 334)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.09266354888677597
    2. 'def' → logprob: -3.342663526535034
    3. '[' → logprob: -3.592663526535034
    4. '(' → logprob: -4.592663764953613
    5. '[str' → logprob: -5.217663764953613
    6. '([' → logprob: -6.467663764953613
    7. '[S' → logprob: -6.467663764953613
    8. '(n' → logprob: -6.842663764953613
    9. 'S' → logprob: -6.967663764953613
    10. 'for' → logprob: -7.217663764953613

Token 715: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.042003531008958817
    2. 'strings' → logprob: -3.417003631591797
    3. 'list' → logprob: -4.917003631591797
    4. 'S' → logprob: -8.042003631591797
    5. '[str' → logprob: -8.042003631591797
    6. 'string' → logprob: -9.167003631591797
    7. 'lists' → logprob: -9.292003631591797
    8. 'int' → logprob: -9.667003631591797
    9. 'chaine' → logprob: -11.167003631591797
    10. ' chaînes' → logprob: -11.292003631591797

Token 716: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004192013759166002
    2. '(n' → logprob: -5.629191875457764
    3. ' def' → logprob: -7.629191875457764
    4. '(S' → logprob: -9.504192352294922
    5. '(s' → logprob: -11.754192352294922
    6. '#' → logprob: -11.879192352294922
    7. '
' → logprob: -12.629192352294922
    8. ' (' → logprob: -12.629192352294922
    9. '(def' → logprob: -12.754192352294922
    10. '```' → logprob: -13.379192352294922

Token 717: 'cha' (ID: 3836)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0470242016017437
    2. 'S' → logprob: -3.1720242500305176
    3. ' def' → logprob: -6.297024250030518
    4. 'list' → logprob: -6.922024250030518
    5. '[S' → logprob: -7.922024250030518
    6. ')' → logprob: -8.42202377319336
    7. '[]' → logprob: -8.92202377319336
    8. '[' → logprob: -9.42202377319336
    9. 'LS' → logprob: -9.54702377319336
    10. '(S' → logprob: -9.79702377319336

Token 718: 'îne' (ID: 55188)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.038026683032512665
    2. 'def' → logprob: -3.4130265712738037
    3. 'rs' → logprob: -6.038026809692383
    4. 'ar' → logprob: -6.413026809692383
    5. '#' → logprob: -8.663026809692383
    6. 'rc' → logprob: -10.413026809692383
    7. ' def' → logprob: -10.788026809692383
    8. 'rst' → logprob: -10.788026809692383
    9. '   ' → logprob: -10.913026809692383
    10. 'ra' → logprob: -11.288026809692383

Token 719: ' vers' (ID: 3640)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1147080808877945
    2. '(n' → logprob: -3.489708185195923
    3. '()' → logprob: -3.614708185195923
    4. '()[' → logprob: -4.614707946777344
    5. ' def' → logprob: -4.739707946777344
    6. '():' → logprob: -5.114707946777344
    7. '):' → logprob: -5.489707946777344
    8. ')' → logprob: -5.864707946777344
    9. ']' → logprob: -5.864707946777344
    10. '()(' → logprob: -6.114707946777344

Token 720: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.226628895296017e-06
    2. 'liste' → logprob: -12.125007629394531
    3. ' list' → logprob: -13.375007629394531
    4. 'List' → logprob: -17.50000762939453
    5. '[list' → logprob: -17.50000762939453
    6. '```' → logprob: -17.62500762939453
    7. '
' → logprob: -18.75000762939453
    8. 'lista' → logprob: -18.87500762939453
    9. '[]' → logprob: -19.50000762939453
    10. '_list' → logprob: -19.75000762939453

Token 721: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17358727753162384
    2. '(S' → logprob: -2.6735873222351074
    3. ')' → logprob: -3.0485873222351074
    4. ']' → logprob: -4.048587322235107
    5. '(list' → logprob: -4.798587322235107
    6. '()' → logprob: -5.298587322235107
    7. ' def' → logprob: -5.673587322235107
    8. '(lambda' → logprob: -5.923587322235107
    9. '()]' → logprob: -6.548587322235107
    10. ')]' → logprob: -7.173587322235107

Token 722: ' caractères' (ID: 183106)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4921427071094513
    2. 'car' → logprob: -1.242142677307129
    3. 'chars' → logprob: -2.492142677307129
    4. 'char' → logprob: -4.742142677307129
    5. 'list' → logprob: -4.867142677307129
    6. 'liste' → logprob: -8.242142677307129
    7. 'strings' → logprob: -8.617142677307129
    8. ' caractères' → logprob: -9.117142677307129
    9. 'characters' → logprob: -9.242142677307129
    10. 'chaine' → logprob: -10.117142677307129

Token 723: ')
' (ID: 446)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14583590626716614
    2. '(n' → logprob: -2.2708358764648438
    3. ' def' → logprob: -4.520835876464844
    4. ')' → logprob: -4.645835876464844
    5. ']' → logprob: -5.645835876464844
    6. '):' → logprob: -5.770835876464844
    7. ')]' → logprob: -6.770835876464844
    8. '()]' → logprob: -7.020835876464844
    9. '](' → logprob: -7.520835876464844
    10. '(s' → logprob: -7.770835876464844

Token 724: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. '#' → logprob: -15.250000953674316
    3. ' def' → logprob: -15.375000953674316
    4. '```' → logprob: -17.75
    5. '(S' → logprob: -20.375
    6. '
' → logprob: -20.375
    7. '(def' → logprob: -21.25
    8. '[' → logprob: -22.875
    9. '``' → logprob: -23.0
    10. '#define' → logprob: -23.125

Token 725: ' SR' (ID: 30704)
  Prédit: 'SR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SR' → logprob: -0.006690275855362415
    2. 'S' → logprob: -5.381690502166748
    3. 'def' → logprob: -6.256690502166748
    4. 'LS' → logprob: -9.38169002532959
    5. ' SR' → logprob: -10.00669002532959
    6. 'L' → logprob: -12.13169002532959
    7. 'SL' → logprob: -12.50669002532959
    8. 'SSR' → logprob: -12.63169002532959
    9. ' S' → logprob: -12.88169002532959
    10. ' def' → logprob: -13.00669002532959

Token 726: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -2.7610454708337784e-05
    2. '(n' → logprob: -10.750027656555176
    3. 'l' → logprob: -12.250027656555176
    4. '(' → logprob: -13.750027656555176
    5. ' L' → logprob: -16.50002670288086
    6. 'def' → logprob: -16.62502670288086
    7. ' (' → logprob: -16.75002670288086
    8. '```' → logprob: -17.37502670288086
    9. '_L' → logprob: -18.00002670288086
    10. '(L' → logprob: -18.62502670288086

Token 727: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1517960956552997e-05
    2. ' (' → logprob: -11.500011444091797
    3. '(' → logprob: -14.125011444091797
    4. 'def' → logprob: -14.875011444091797
    5. '```' → logprob: -16.500011444091797
    6. 'n' → logprob: -17.750011444091797
    7. '
' → logprob: -18.000011444091797
    8. ':' → logprob: -18.125011444091797
    9. '#' → logprob: -18.250011444091797
    10. '](' → logprob: -18.875011444091797

Token 728: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002270039403811097
    2. '()' → logprob: -6.877270221710205
    3. ')' → logprob: -7.377270221710205
    4. '():' → logprob: -7.502270221710205
    5. ' ):' → logprob: -10.877269744873047
    6. '):
' → logprob: -11.002269744873047
    7. '(n' → logprob: -11.877269744873047
    8. 'def' → logprob: -12.377269744873047
    9. ']:' → logprob: -12.502269744873047
    10. ']):' → logprob: -13.127269744873047

Token 729: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38721853494644165
    2. 'return' → logprob: -1.1372184753417969
    3. '   ' → logprob: -8.762218475341797
    4. 'def' → logprob: -9.012218475341797
    5. ' def' → logprob: -10.387218475341797
    6. '[S' → logprob: -11.512218475341797
    7. '[' → logprob: -11.762218475341797
    8. ' ' → logprob: -12.012218475341797
    9. ' lambda' → logprob: -12.637218475341797
    10. 'lambda' → logprob: -12.762218475341797

Token 730: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.7774872183799744
    2. '[list' → logprob: -0.7774872183799744
    3. '[' → logprob: -2.527487277984619
    4. 'list' → logprob: -7.527487277984619
    5. '[List' → logprob: -7.777487277984619
    6. '[s' → logprob: -10.152486801147461
    7. '[line' → logprob: -11.777486801147461
    8. '[L' → logprob: -12.277486801147461
    9. ' [' → logprob: -12.652486801147461
    10. '[string' → logprob: -12.777486801147461

Token 731: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.173704271830502e-06
    2. 'S' → logprob: -13.12500286102295
    3. ' list' → logprob: -14.37500286102295
    4. '[list' → logprob: -14.62500286102295
    5. '(list' → logprob: -16.625003814697266
    6. '[S' → logprob: -17.500003814697266
    7. 's' → logprob: -19.250003814697266
    8. 'lambda' → logprob: -19.625003814697266
    9. '```' → logprob: -20.000003814697266
    10. 'List' → logprob: -20.000003814697266

Token 732: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -5.550411151489243e-05
    2. '(' → logprob: -10.000055313110352
    3. '(s' → logprob: -11.875055313110352
    4. '()' → logprob: -13.125055313110352
    5. 'S' → logprob: -14.375055313110352
    6. 's' → logprob: -15.500055313110352
    7. '<|end|>' → logprob: -16.25005531311035
    8. '(
' → logprob: -16.37505531311035
    9. ' (' → logprob: -16.62505531311035
    10. '((' → logprob: -17.37505531311035

Token 733: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07770900428295135
    2. '(n' → logprob: -2.7027089595794678
    3. ')' → logprob: -5.702709197998047
    4. '()' → logprob: -5.952709197998047
    5. '())[' → logprob: -6.952709197998047
    6. '().' → logprob: -8.077709197998047
    7. '()(' → logprob: -8.577709197998047
    8. '(' → logprob: -8.702709197998047
    9. '()[' → logprob: -10.077709197998047
    10. '()).' → logprob: -10.577709197998047

Token 734: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014015485066920519
    2. '()' → logprob: -6.626401424407959
    3. 'for' → logprob: -10.251401901245117
    4. ' (' → logprob: -10.751401901245117
    5. '(' → logprob: -11.251401901245117
    6. '(i' → logprob: -13.126401901245117
    7. ' for' → logprob: -13.251401901245117
    8. 'n' → logprob: -14.126401901245117
    9. ')' → logprob: -14.251401901245117
    10. '())' → logprob: -14.876401901245117

Token 735: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.666993507067673e-05
    2. 'range' → logprob: -10.500036239624023
    3. ' i' → logprob: -12.625036239624023
    4. '_i' → logprob: -12.750036239624023
    5. '_' → logprob: -13.125036239624023
    6. 'in' → logprob: -14.250036239624023
    7. ' range' → logprob: -15.625036239624023
    8. 'n' → logprob: -17.375036239624023
    9. '(i' → logprob: -17.625036239624023
    10. ' in' → logprob: -17.625036239624023

Token 736: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.388375848531723
    2. ' in' → logprob: -1.1383758783340454
    3. '(n' → logprob: -7.013375759124756
    4. '(' → logprob: -8.388376235961914
    5. '(in' → logprob: -8.513376235961914
    6. 'range' → logprob: -9.138376235961914
    7. '(range' → logprob: -10.138376235961914
    8. ' (' → logprob: -11.638376235961914
    9. 'n' → logprob: -11.888376235961914
    10. '	in' → logprob: -12.763376235961914

Token 737: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. '(range' → logprob: -16.87500762939453
    4. 'in' → logprob: -22.12500762939453
    5. '	range' → logprob: -22.25000762939453
    6. '_range' → logprob: -24.62500762939453
    7. 'rang' → logprob: -25.00000762939453
    8. '
' → logprob: -25.25000762939453
    9. '.range' → logprob: -25.37500762939453
    10. 'Range' → logprob: -25.50000762939453

Token 738: '(n' (ID: 2406)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04340437054634094
    2. '(n' → logprob: -3.2934043407440186
    3. '(range' → logprob: -5.293404579162598
    4. ' range' → logprob: -8.043404579162598
    5. 'n' → logprob: -13.293404579162598
    6. '(' → logprob: -14.293404579162598
    7. '	range' → logprob: -16.16840362548828
    8. 'in' → logprob: -17.04340362548828
    9. '_range' → logprob: -17.04340362548828
    10. '.range' → logprob: -17.16840362548828

Token 739: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.286852345103398e-05
    2. ')' → logprob: -10.875042915344238
    3. '()]' → logprob: -11.500042915344238
    4. '())' → logprob: -12.125042915344238
    5. '(n' → logprob: -12.500042915344238
    6. '()' → logprob: -13.000042915344238
    7. ')]
' → logprob: -14.875042915344238
    8. 'n' → logprob: -15.000042915344238
    9. ']' → logprob: -15.250042915344238
    10. ')])' → logprob: -15.375042915344238

Token 740: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34982559084892273
    2. '<|end|>' → logprob: -1.9748256206512451
    3. '#' → logprob: -2.474825620651245
    4. '<|end|>' → logprob: -3.599825620651245
    5. '\n' → logprob: -3.724825620651245
    6. 'def' → logprob: -5.224825382232666
    7. '

' → logprob: -5.599825382232666
    8. '```' → logprob: -6.099825382232666
    9. '' → logprob: -6.474825382232666
    10. '  
' → logprob: -6.599825382232666

Token 741: ' MS' (ID: 15861)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07383991777896881
    2. 'def' → logprob: -2.6988399028778076
    3. '<|end|>' → logprob: -6.198840141296387
    4. 'import' → logprob: -6.948840141296387
    5. '
' → logprob: -8.198840141296387
    6. 'class' → logprob: -8.323840141296387
    7. 'from' → logprob: -8.573840141296387
    8. '<|end|>' → logprob: -9.948840141296387
    9. ' ' → logprob: -10.573840141296387
    10. '#!/' → logprob: -10.948840141296387

Token 742: 'RL' (ID: 40408)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.23881590366363525
    2. 'def' → logprob: -2.4888157844543457
    3. '(n' → logprob: -2.4888157844543457
    4. '()' → logprob: -3.1138157844543457
    5. ' =' → logprob: -7.613815784454346
    6. '=' → logprob: -7.863815784454346
    7. ' def' → logprob: -8.238816261291504
    8. 'S' → logprob: -8.488816261291504
    9. '():
' → logprob: -8.863816261291504
    10. '#' → logprob: -8.863816261291504

Token 743: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04874201864004135
    2. 'def' → logprob: -3.0487420558929443
    3. ' def' → logprob: -9.298742294311523
    4. '(' → logprob: -11.173742294311523
    5. '<|end|>' → logprob: -11.673742294311523
    6. '<|end|>' → logprob: -11.673742294311523
    7. ' =' → logprob: -11.798742294311523
    8. '#' → logprob: -11.923742294311523
    9. '=lambda' → logprob: -12.048742294311523
    10. '=' → logprob: -12.423742294311523

Token 744: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008785925805568695
    2. 'def' → logprob: -5.008785724639893
    3. '(n' → logprob: -6.258785724639893
    4. ')' → logprob: -8.88378620147705
    5. '#' → logprob: -12.38378620147705
    6. ' ):' → logprob: -12.75878620147705
    7. ' def' → logprob: -12.75878620147705
    8. 'n' → logprob: -13.13378620147705
    9. ']:' → logprob: -13.38378620147705
    10. '):
' → logprob: -13.50878620147705

Token 745: ' :' (ID: 712)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3869619369506836
    2. '(n' → logprob: -1.1369619369506836
    3. ' def' → logprob: -9.761961936950684
    4. '#' → logprob: -11.261961936950684
    5. '=' → logprob: -11.386961936950684
    6. ':' → logprob: -12.636961936950684
    7. ' =' → logprob: -12.761961936950684
    8. 'n' → logprob: -13.386961936950684
    9. '
' → logprob: -15.011961936950684
    10. ':def' → logprob: -15.386961936950684

Token 746: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000354769523255527
    2. '[' → logprob: -8.625354766845703
    3. ' def' → logprob: -9.375354766845703
    4. '#' → logprob: -10.750354766845703
    5. 'LS' → logprob: -11.125354766845703
    6. 'lambda' → logprob: -11.375354766845703
    7. '[S' → logprob: -11.375354766845703
    8. '[L' → logprob: -11.500354766845703
    9. 'matrix' → logprob: -12.625354766845703
    10. 'MS' → logprob: -12.750354766845703

Token 747: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034096166491508484
    2. ' n' → logprob: -3.4090962409973145
    3. '(n' → logprob: -7.7840962409973145
    4. 'range' → logprob: -11.409095764160156
    5. '[n' → logprob: -12.159095764160156
    6. ' range' → logprob: -12.409095764160156
    7. '	n' → logprob: -12.659095764160156
    8. 'm' → logprob: -12.659095764160156
    9. '_n' → logprob: -12.784095764160156
    10. 'MS' → logprob: -13.784095764160156

Token 748: ' lignes' (ID: 81687)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1306476593017578
    2. 'SR' → logprob: -2.255647659301758
    3. 'MS' → logprob: -4.755647659301758
    4. 'S' → logprob: -5.630647659301758
    5. 'n' → logprob: -5.755647659301758
    6. 'def' → logprob: -6.755647659301758
    7. 's' → logprob: -8.255647659301758
    8. '[n' → logprob: -8.505647659301758
    9. 'LS' → logprob: -8.880647659301758
    10. '<n' → logprob: -9.005647659301758

Token 749: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05794566869735718
    2. '(n' → logprob: -2.932945728302002
    3. ':' → logprob: -6.307945728302002
    4. ' def' → logprob: -6.932945728302002
    5. '(S' → logprob: -8.682945251464844
    6. '#' → logprob: -10.807945251464844
    7. 'MS' → logprob: -10.932945251464844
    8. '(def' → logprob: -11.182945251464844
    9. 'LS' → logprob: -11.807945251464844
    10. '(lambda' → logprob: -12.432945251464844

Token 750: ' lit' (ID: 11980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17072513699531555
    2. 'MS' → logprob: -2.420725107192993
    3. 'LS' → logprob: -3.045725107192993
    4. 'SR' → logprob: -4.045725345611572
    5. '[' → logprob: -7.295725345611572
    6. ' def' → logprob: -7.295725345611572
    7. 'L' → logprob: -8.045724868774414
    8. 'S' → logprob: -8.045724868774414
    9. '[S' → logprob: -8.670724868774414
    10. 'lambda' → logprob: -8.795724868774414

Token 751: ' chaque' (ID: 21194)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.3010425865650177
    2. 'n' → logprob: -1.5510425567626953
    3. '(n' → logprob: -4.051042556762695
    4. '[' → logprob: -4.176042556762695
    5. 'SR' → logprob: -5.426042556762695
    6. 'MS' → logprob: -5.426042556762695
    7. '[S' → logprob: -6.176042556762695
    8. 'S' → logprob: -6.926042556762695
    9. '[int' → logprob: -7.301042556762695
    10. '(S' → logprob: -7.926042556762695

Token 752: ' ligne' (ID: 19583)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.605713427066803
    2. 'S' → logprob: -1.4807133674621582
    3. 'SR' → logprob: -2.355713367462158
    4. 'def' → logprob: -2.480713367462158
    5. '(S' → logprob: -3.855713367462158
    6. 'range' → logprob: -5.355713367462158
    7. 'n' → logprob: -5.480713367462158
    8. '_' → logprob: -6.355713367462158
    9. '(n' → logprob: -6.355713367462158
    10. 's' → logprob: -6.605713367462158

Token 753: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012757668271660805
    2. '=' → logprob: -5.012757778167725
    3. '(n' → logprob: -6.387757778167725
    4. ':' → logprob: -6.762757778167725
    5. ' =' → logprob: -7.137757778167725
    6. ' def' → logprob: -7.512757778167725
    7. 'MS' → logprob: -7.637757778167725
    8. '(S' → logprob: -8.137757301330566
    9. '#' → logprob: -8.887757301330566
    10. 'for' → logprob: -8.887757301330566

Token 754: ' convert' (ID: 8452)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39982372522354126
    2. 'list' → logprob: -2.5248236656188965
    3. 'SR' → logprob: -2.5248236656188965
    4. 'S' → logprob: -3.0248236656188965
    5. '[list' → logprob: -3.1498236656188965
    6. 'MS' → logprob: -3.2748236656188965
    7. 'LS' → logprob: -4.6498236656188965
    8. '[' → logprob: -4.7748236656188965
    9. '[S' → logprob: -5.3998236656188965
    10. '
' → logprob: -6.0248236656188965

Token 755: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.00038384052459150553
    2. 'i' → logprob: -8.500383377075195
    3. 'is' → logprob: -9.500383377075195
    4. 'list' → logprob: -10.375383377075195
    5. 'ies' → logprob: -10.750383377075195
    6. 'issant' → logprob: -11.625383377075195
    7. 'ie' → logprob: -11.875383377075195
    8. '[it' → logprob: -11.875383377075195
    9. '(it' → logprob: -12.000383377075195
    10. 'issent' → logprob: -12.875383377075195

Token 756: ' chaque' (ID: 21194)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16228224337100983
    2. '(list' → logprob: -1.9122822284698486
    3. '[list' → logprob: -6.662282466888428
    4. '=list' → logprob: -7.912282466888428
    5. '
' → logprob: -9.78728199005127
    6. 's' → logprob: -9.91228199005127
    7. 'to' → logprob: -10.16228199005127
    8. 'S' → logprob: -10.16228199005127
    9. '[str' → logprob: -10.41228199005127
    10. 'each' → logprob: -10.41228199005127

Token 757: ' caractère' (ID: 80509)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0798959881067276
    2. 'token' → logprob: -3.3298959732055664
    3. 'car' → logprob: -4.079895973205566
    4. 'ligne' → logprob: -5.579895973205566
    5. 'line' → logprob: -5.704895973205566
    6. 's' → logprob: -6.329895973205566
    7. 'S' → logprob: -6.329895973205566
    8. 'character' → logprob: -6.329895973205566
    9. '(list' → logprob: -6.454895973205566
    10. 'char' → logprob: -6.454895973205566

Token 758: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5129189491271973
    2. '(lambda' → logprob: -2.3879189491271973
    3. 'in' → logprob: -2.5129189491271973
    4. 'into' → logprob: -2.6379189491271973
    5. 'to' → logprob: -3.2629189491271973
    6. 'lambda' → logprob: -4.137918949127197
    7. 'def' → logprob: -4.137918949127197
    8. 'for' → logprob: -4.387918949127197
    9. '(S' → logprob: -4.512918949127197
    10. 'tolist' → logprob: -4.887918949127197

Token 759: ' la' (ID: 557)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6737757325172424
    2. 'S' → logprob: -0.7987757325172424
    3. 'str' → logprob: -4.298775672912598
    4. 'la' → logprob: -4.548775672912598
    5. 'liste' → logprob: -5.298775672912598
    6. 'sys' → logprob: -5.673775672912598
    7. 'chaine' → logprob: -5.798775672912598
    8. ' S' → logprob: -6.173775672912598
    9. ' list' → logprob: -6.798775672912598
    10. 'l' → logprob: -7.173775672912598

Token 760: ' ligne' (ID: 19583)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1000322699546814
    2. 'chaine' → logprob: -2.600032329559326
    3. 'ligne' → logprob: -4.475032329559326
    4. 'sys' → logprob: -5.725032329559326
    5. 'list' → logprob: -6.350032329559326
    6. 'input' → logprob: -6.975032329559326
    7. 'string' → logprob: -7.100032329559326
    8. 'entrée' → logprob: -7.100032329559326
    9. 'liste' → logprob: -7.725032329559326
    10. 'buffer' → logprob: -8.600031852722168

Token 761: ' en' (ID: 469)
  Prédit: 'into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'into' → logprob: -1.3166120052337646
    2. '()' → logprob: -1.5666120052337646
    3. 'def' → logprob: -1.8166120052337646
    4. 'in' → logprob: -1.9416120052337646
    5. 'for' → logprob: -3.0666120052337646
    6. 'to' → logprob: -3.5666120052337646
    7. 's' → logprob: -3.8166120052337646
    8. '(lambda' → logprob: -3.8166120052337646
    9. 'lambda' → logprob: -3.9416120052337646
    10. 'int' → logprob: -4.191612243652344

Token 762: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013642003759741783
    2. 'list' → logprob: -4.513641834259033
    3. '[int' → logprob: -6.138641834259033
    4. 'ent' → logprob: -9.013642311096191
    5. 'ints' → logprob: -9.388642311096191
    6. '0' → logprob: -9.638642311096191
    7. 'inte' → logprob: -10.263642311096191
    8. 'map' → logprob: -10.388642311096191
    9. 'ord' → logprob: -10.513642311096191
    10. 'liste' → logprob: -10.888642311096191

Token 763: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004126249812543392
    2. ' def' → logprob: -6.004126071929932
    3. '(S' → logprob: -7.254126071929932
    4. '(lambda' → logprob: -8.25412654876709
    5. '()' → logprob: -8.62912654876709
    6. 'for' → logprob: -9.50412654876709
    7. '(n' → logprob: -9.62912654876709
    8. '   ' → logprob: -10.12912654876709
    9. '(' → logprob: -10.12912654876709
    10. '#' → logprob: -10.12912654876709

Token 764: ' retourne' (ID: 178818)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5636099576950073
    2. ' returns' → logprob: -2.313610076904297
    3. 'returns' → logprob: -2.438610076904297
    4. 'return' → logprob: -3.063610076904297
    5. ']' → logprob: -3.688610076904297
    6. 'S' → logprob: -3.688610076904297
    7. 'MS' → logprob: -3.813610076904297
    8. 's' → logprob: -3.813610076904297
    9. '#' → logprob: -4.188610076904297
    10. 'for' → logprob: -4.313610076904297

Token 765: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3673385977745056
    2. '[list' → logprob: -1.3673386573791504
    3. '[[' → logprob: -3.3673386573791504
    4. '[List' → logprob: -4.36733865737915
    5. '[int' → logprob: -5.49233865737915
    6. '[m' → logprob: -8.117338180541992
    7. '[line' → logprob: -8.367338180541992
    8. 'MS' → logprob: -8.867338180541992
    9. '[array' → logprob: -9.242338180541992
    10. '[L' → logprob: -9.742338180541992

Token 766: ' liste' (ID: 31719)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.3152835965156555
    2. '[list' → logprob: -1.3152835369110107
    3. '[List' → logprob: -6.94028377532959
    4. '[' → logprob: -7.19028377532959
    5. '[
' → logprob: -8.44028377532959
    6. '[int' → logprob: -10.31528377532959
    7. ' [[' → logprob: -11.19028377532959
    8. 'list' → logprob: -11.81528377532959
    9. 'MS' → logprob: -12.44028377532959
    10. ' [' → logprob: -12.44028377532959

Token 767: ' de' (ID: 334)
  Prédit: 'MS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MS' → logprob: -0.6281132698059082
    2. 'def' → logprob: -1.6281132698059082
    3. '(S' → logprob: -1.6281132698059082
    4. '(lambda' → logprob: -4.128113269805908
    5. '(' → logprob: -4.378113269805908
    6. 'SR' → logprob: -4.753113269805908
    7. '_MS' → logprob: -5.003113269805908
    8. '(M' → logprob: -5.378113269805908
    9. '[' → logprob: -5.628113269805908
    10. 's' → logprob: -5.753113269805908

Token 768: ' résultats' (ID: 48985)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5684256553649902
    2. 'lists' → logprob: -1.9434256553649902
    3. 'list' → logprob: -2.0684256553649902
    4. '[[' → logprob: -2.8184256553649902
    5. '[int' → logprob: -2.9434256553649902
    6. '[list' → logprob: -3.5684256553649902
    7. '[List' → logprob: -4.94342565536499
    8. 'MS' → logprob: -4.94342565536499
    9. '[n' → logprob: -5.44342565536499
    10. '[
' → logprob: -6.69342565536499

Token 769: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024735096842050552
    2. '(n' → logprob: -3.77473521232605
    3. ' def' → logprob: -7.524734973907471
    4. '(lambda' → logprob: -8.274735450744629
    5. '(def' → logprob: -8.524735450744629
    6. '(S' → logprob: -8.524735450744629
    7. 'MS' → logprob: -9.024735450744629
    8. '(' → logprob: -10.524735450744629
    9. 'SR' → logprob: -10.649735450744629
    10. ' (' → logprob: -10.774735450744629

Token 770: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -14.75
    3. 'd' → logprob: -18.25
    4. 'MS' → logprob: -19.625
    5. ' =' → logprob: -20.125
    6. '#' → logprob: -20.125
    7. '[' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '=' → logprob: -21.125
    10. 'return' → logprob: -21.375

Token 771: ' MS' (ID: 15861)
  Prédit: 'MS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MS' → logprob: -0.00013536323967855424
    2. 'M' → logprob: -9.00013542175293
    3. ' MS' → logprob: -11.50013542175293
    4. 'def' → logprob: -13.37513542175293
    5. 'LS' → logprob: -15.87513542175293
    6. 'MR' → logprob: -16.25013542175293
    7. 'lambda' → logprob: -17.62513542175293
    8. '_MS' → logprob: -18.12513542175293
    9. 'Ms' → logprob: -18.37513542175293
    10. '[' → logprob: -18.50013542175293

Token 772: 'RL' (ID: 40408)
  Prédit: 'RL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RL' → logprob: -4.954393079970032e-05
    2. 'R' → logprob: -10.000049591064453
    3. '(n' → logprob: -12.500049591064453
    4. 'SR' → logprob: -15.375049591064453
    5. ' RL' → logprob: -16.375049591064453
    6. '(' → logprob: -17.500049591064453
    7. 'rl' → logprob: -19.250049591064453
    8. 'SL' → logprob: -19.500049591064453
    9. 'RS' → logprob: -19.500049591064453
    10. 'Rl' → logprob: -19.750049591064453

Token 773: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -14.125001907348633
    3. '(' → logprob: -14.250001907348633
    4. 'def' → logprob: -16.625001907348633
    5. '(lambda' → logprob: -17.875001907348633
    6. '```' → logprob: -18.000001907348633
    7. '(int' → logprob: -18.250001907348633
    8. 'n' → logprob: -18.625001907348633
    9. '(i' → logprob: -18.875001907348633
    10. '((' → logprob: -19.500001907348633

Token 774: '):' (ID: 3127)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.474600225687027
    2. '):' → logprob: -0.9746001958847046
    3. '():' → logprob: -8.349599838256836
    4. ')(' → logprob: -8.849599838256836
    5. 'def' → logprob: -9.724599838256836
    6. ' ):' → logprob: -10.724599838256836
    7. ')' → logprob: -10.974599838256836
    8. ''):' → logprob: -11.224599838256836
    9. '):
' → logprob: -11.724599838256836
    10. '()' → logprob: -12.599599838256836

Token 775: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04862949252128601
    2. 'return' → logprob: -3.0486295223236084
    3. 'def' → logprob: -10.423629760742188
    4. ' def' → logprob: -12.048629760742188
    5. '   ' → logprob: -13.048629760742188
    6. ' [' → logprob: -13.673629760742188
    7. ' lambda' → logprob: -14.048629760742188
    8. '
' → logprob: -14.298629760742188
    9. '	return' → logprob: -14.298629760742188
    10. '[' → logprob: -14.923629760742188

Token 776: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12451566755771637
    2. '[L' → logprob: -2.6245157718658447
    3. '[[' → logprob: -3.3745157718658447
    4. '[list' → logprob: -4.874515533447266
    5. '[List' → logprob: -6.124515533447266
    6. '[S' → logprob: -8.124515533447266
    7. '[int' → logprob: -8.999515533447266
    8. '[np' → logprob: -10.624515533447266
    9. '[M' → logprob: -11.249515533447266
    10. '[i' → logprob: -11.374515533447266

Token 777: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. '*' → logprob: -15.75
    3. ' int' → logprob: -18.375
    4. '
' → logprob: -18.875
    5. '0' → logprob: -19.0
    6. '(int' → logprob: -19.375
    7. '[int' → logprob: -20.5
    8. 'ord' → logprob: -21.375
    9. '<int' → logprob: -21.5
    10. '1' → logprob: -21.75

Token 778: '(j' (ID: 4997)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005395257379859686
    2. '(ch' → logprob: -5.255395412445068
    3. '(x' → logprob: -9.13039493560791
    4. 'c' → logprob: -10.25539493560791
    5. '(char' → logprob: -11.13039493560791
    6. 'ch' → logprob: -13.63039493560791
    7. '(j' → logprob: -14.38039493560791
    8. '(' → logprob: -14.75539493560791
    9. '(a' → logprob: -15.75539493560791
    10. '(i' → logprob: -15.88039493560791

Token 779: ')' (ID: 8)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.11835124343633652
    2. '(ch' → logprob: -2.6183512210845947
    3. '(j' → logprob: -3.7433512210845947
    4. '(char' → logprob: -4.868351459503174
    5. 'for' → logprob: -5.993351459503174
    6. '(k' → logprob: -6.368351459503174
    7. '(' → logprob: -6.493351459503174
    8. '(i' → logprob: -7.743351459503174
    9. '()' → logprob: -7.993351459503174
    10. 'char' → logprob: -8.118350982666016

Token 780: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4708539843559265
    2. '(j' → logprob: -1.2208540439605713
    3. '(c' → logprob: -2.7208540439605713
    4. '(ch' → logprob: -4.845853805541992
    5. '(' → logprob: -6.095853805541992
    6. '(char' → logprob: -6.345853805541992
    7. ' for' → logprob: -6.595853805541992
    8. '(int' → logprob: -8.095853805541992
    9. '(x' → logprob: -8.345853805541992
    10. '(i' → logprob: -8.470853805541992

Token 781: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1517960956552997e-05
    2. ' j' → logprob: -11.375011444091797
    3. '	j' → logprob: -17.625011444091797
    4. 'jj' → logprob: -19.875011444091797
    5. '_j' → logprob: -20.375011444091797
    6. ' ' → logprob: -20.750011444091797
    7. 'i' → logprob: -21.000011444091797
    8. '$j' → logprob: -21.250011444091797
    9. '
' → logprob: -21.375011444091797
    10. 'x' → logprob: -21.500011444091797

Token 782: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01604609750211239
    2. ' in' → logprob: -4.141046047210693
    3. 'j' → logprob: -11.516046524047852
    4. ' j' → logprob: -14.766046524047852
    5. 'i' → logprob: -15.266046524047852
    6. 'for' → logprob: -15.516046524047852
    7. 's' → logprob: -15.516046524047852
    8. 'int' → logprob: -15.516046524047852
    9. ' ' → logprob: -16.01604652404785
    10. '
' → logprob: -16.39104652404785

Token 783: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20250023901462555
    2. 'S' → logprob: -1.7025002241134644
    3. ' list' → logprob: -8.452500343322754
    4. 'c' → logprob: -8.452500343322754
    5. 'i' → logprob: -8.577500343322754
    6. 'range' → logprob: -8.827500343322754
    7. 's' → logprob: -9.327500343322754
    8. 'j' → logprob: -9.452500343322754
    9. ' S' → logprob: -9.577500343322754
    10. 'l' → logprob: -10.327500343322754

Token 784: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00015908108616713434
    2. '(s' → logprob: -9.37515926361084
    3. '(line' → logprob: -10.25015926361084
    4. 'S' → logprob: -10.62515926361084
    5. '(sys' → logprob: -11.87515926361084
    6. '(' → logprob: -12.50015926361084
    7. '(row' → logprob: -13.62515926361084
    8. '(str' → logprob: -14.00015926361084
    9. '(x' → logprob: -14.12515926361084
    10. '(l' → logprob: -15.25015926361084

Token 785: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6957055330276489
    2. '())' → logprob: -0.6957055330276489
    3. '()[' → logprob: -6.195705413818359
    4. '().' → logprob: -8.19570541381836
    5. '(n' → logprob: -9.19570541381836
    6. '(' → logprob: -9.82070541381836
    7. '()]' → logprob: -10.57070541381836
    8. '()
' → logprob: -11.32070541381836
    9. '(i' → logprob: -11.69570541381836
    10. '()`' → logprob: -11.69570541381836

Token 786: ']' (ID: 60)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0006432149093598127
    2. ']' → logprob: -7.625643253326416
    3. '()' → logprob: -9.000642776489258
    4. '(n' → logprob: -10.500642776489258
    5. '()]
' → logprob: -13.000642776489258
    6. 'for' → logprob: -14.375642776489258
    7. ']()' → logprob: -14.625642776489258
    8. '())' → logprob: -14.875642776489258
    9. '(i' → logprob: -15.375642776489258
    10. ']]' → logprob: -15.500642776489258

Token 787: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07996400445699692
    2. '(n' → logprob: -3.2049639225006104
    3. ' for' → logprob: -3.9549639225006104
    4. '()' → logprob: -4.2049641609191895
    5. ']' → logprob: -6.7049641609191895
    6. '(i' → logprob: -7.3299641609191895
    7. '()]' → logprob: -8.454963684082031
    8. '   ' → logprob: -10.329963684082031
    9. 'in' → logprob: -10.704963684082031
    10. 'range' → logprob: -11.079963684082031

Token 788: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001750030554831028
    2. '_' → logprob: -6.5017499923706055
    3. ' i' → logprob: -8.376749992370605
    4. '_i' → logprob: -11.001749992370605
    5. 'range' → logprob: -14.626749992370605
    6. ' _' → logprob: -15.501749992370605
    7. ' range' → logprob: -16.376750946044922
    8. '	i' → logprob: -17.751750946044922
    9. ' ' → logprob: -18.501750946044922
    10. ' in' → logprob: -19.376750946044922

Token 789: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519499361515045
    2. ' in' → logprob: -1.5019499063491821
    3. 'range' → logprob: -11.75195026397705
    4. '(' → logprob: -12.50195026397705
    5. '(in' → logprob: -13.00195026397705
    6. 'n' → logprob: -13.12695026397705
    7. '	in' → logprob: -13.50195026397705
    8. '(n' → logprob: -14.00195026397705
    9. '_' → logprob: -14.12695026397705
    10. '_in' → logprob: -14.50195026397705

Token 790: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.088346359931165e-07
    2. ' range' → logprob: -14.000000953674316
    3. '(range' → logprob: -17.0
    4. '	range' → logprob: -23.375
    5. '
' → logprob: -24.625
    6. 'rang' → logprob: -24.75
    7. 'rank' → logprob: -25.625
    8. '.range' → logprob: -25.625
    9. '_range' → logprob: -26.25
    10. 'count' → logprob: -26.375

Token 791: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006050990778021514
    2. 'range' → logprob: -7.50060510635376
    3. '(range' → logprob: -10.000604629516602
    4. 'n' → logprob: -12.375604629516602
    5. ' range' → logprob: -13.125604629516602
    6. '(' → logprob: -14.750604629516602
    7. 'Range' → logprob: -18.7506046295166
    8. '_range' → logprob: -19.7506046295166
    9. ' (' → logprob: -20.6256046295166
    10. '.range' → logprob: -21.6256046295166

Token 792: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.014684110297821e-06
    2. ']' → logprob: -11.750008583068848
    3. ')]
' → logprob: -15.125008583068848
    4. ')' → logprob: -15.125008583068848
    5. '()]' → logprob: -15.250008583068848
    6. '])]' → logprob: -16.000009536743164
    7. ' )' → logprob: -17.250009536743164
    8. ']]' → logprob: -17.250009536743164
    9. '')]' → logprob: -17.625009536743164
    10. '()' → logprob: -17.625009536743164

Token 793: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48136261105537415
    2. 'def' → logprob: -0.9813625812530518
    3. 'class' → logprob: -5.481362819671631
    4. '<|end|>' → logprob: -6.731362819671631
    5. 'import' → logprob: -6.856362819671631
    6. 'n' → logprob: -7.981362819671631
    7. '
' → logprob: -9.481362342834473
    8. 'a' → logprob: -9.481362342834473
    9. '<|end|>' → logprob: -9.606362342834473
    10. '```' → logprob: -10.106362342834473

Token 794: ' mod' (ID: 1812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050308529287576675
    2. '#' → logprob: -3.0503084659576416
    3. 'class' → logprob: -6.675308704376221
    4. 'import' → logprob: -8.300308227539062
    5. '
' → logprob: -9.425308227539062
    6. 'from' → logprob: -9.925308227539062
    7. 'n' → logprob: -10.800308227539062
    8. '#!/' → logprob: -11.800308227539062
    9. '\' → logprob: -11.925308227539062
    10. 'if' → logprob: -11.925308227539062

Token 795: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014288671314716339
    2. '=' → logprob: -4.264288902282715
    3. ' ' → logprob: -10.264288902282715
    4. 'ULO' → logprob: -10.639288902282715
    5. '_' → logprob: -10.764288902282715
    6. ':' → logprob: -11.514288902282715
    7. 'ulus' → logprob: -11.514288902282715
    8. 'ulo' → logprob: -12.264288902282715
    9. ',' → logprob: -12.514288902282715
    10. '  ' → logprob: -13.014288902282715

Token 796: ' une' (ID: 2463)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006745471036992967
    2. '998' → logprob: -7.875674724578857
    3. 'mod' → logprob: -8.6256742477417
    4. 'MOD' → logprob: -9.5006742477417
    5. '100' → logprob: -10.6256742477417
    6. 'int' → logprob: -11.2506742477417
    7. '=' → logprob: -13.5006742477417
    8. ' ' → logprob: -14.1256742477417
    9. '1' → logprob: -14.8756742477417
    10. '
' → logprob: -15.3756742477417

Token 797: ' grande' (ID: 10094)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.548555314540863
    2. '=' → logprob: -1.6735553741455078
    3. 'mod' → logprob: -1.7985553741455078
    4. 'def' → logprob: -4.298555374145508
    5. 'ule' → logprob: -4.548555374145508
    6. ' mod' → logprob: -4.798555374145508
    7. '_' → logprob: -4.923555374145508
    8. '#' → logprob: -5.048555374145508
    9. '_mod' → logprob: -5.298555374145508
    10. 'const' → logprob: -6.423555374145508

Token 798: ' constante' (ID: 49652)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0611834526062012
    2. 'mod' → logprob: -1.1861834526062012
    3. '=' → logprob: -1.4361834526062012
    4. ' mod' → logprob: -2.311183452606201
    5. '_mod' → logprob: -5.561183452606201
    6. ' modulus' → logprob: -5.811183452606201
    7. '_' → logprob: -6.436183452606201
    8. ' ' → logprob: -6.936183452606201
    9. ')' → logprob: -7.311183452606201
    10. 'MOD' → logprob: -7.936183452606201

Token 799: ' première' (ID: 23423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2885136306285858
    2. '=' → logprob: -1.4135136604309082
    3. '_' → logprob: -5.663513660430908
    4. 'mod' → logprob: -6.038513660430908
    5. ' ' → logprob: -7.538513660430908
    6. '_mod' → logprob: -7.663513660430908
    7. ' mod' → logprob: -8.53851318359375
    8. ',' → logprob: -9.03851318359375
    9. 'MOD' → logprob: -10.16351318359375
    10. '_MOD' → logprob: -10.66351318359375

Token 800: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38052698969841003
    2. ' =' → logprob: -1.2555270195007324
    3. '_' → logprob: -4.255527019500732
    4. 'mod' → logprob: -4.630527019500732
    5. '_mod' → logprob: -5.755527019500732
    6. ' ' → logprob: -5.880527019500732
    7. ' mod' → logprob: -7.380527019500732
    8. 'MOD' → logprob: -8.005526542663574
    9. ',' → logprob: -8.380526542663574
    10. ' _' → logprob: -8.880526542663574

Token 801: ' effectuer' (ID: 98625)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6780468225479126
    2. 'mod' → logprob: -0.8030468225479126
    3. '998' → logprob: -3.803046703338623
    4. 'MOD' → logprob: -3.928046703338623
    5. '100' → logprob: -6.303046703338623
    6. '```' → logprob: -8.053047180175781
    7. '
' → logprob: -9.428047180175781
    8. 'm' → logprob: -10.428047180175781
    9. '_mod' → logprob: -10.928047180175781
    10. 'Mod' → logprob: -10.928047180175781

Token 802: ' des' (ID: 731)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.088182732462883
    2. 'mod' → logprob: -2.5881826877593994
    3. 'MOD' → logprob: -5.4631829261779785
    4. ' ' → logprob: -6.2131829261779785
    5. '998' → logprob: -6.4631829261779785
    6. ' mod' → logprob: -7.3381829261779785
    7. ' MOD' → logprob: -7.8381829261779785
    8. '100' → logprob: -8.33818244934082
    9. '```' → logprob: -10.21318244934082
    10. '_mod' → logprob: -10.83818244934082

Token 803: ' opérations' (ID: 102793)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0016755410470068455
    2. 'mod' → logprob: -7.126675605773926
    3. '998' → logprob: -7.751675605773926
    4. ' ' → logprob: -8.501675605773926
    5. '100' → logprob: -9.501675605773926
    6. '_' → logprob: -9.501675605773926
    7. '(' → logprob: -10.126675605773926
    8. '=' → logprob: -12.001675605773926
    9. '```' → logprob: -12.376675605773926
    10. 'pow' → logprob: -12.376675605773926

Token 804: ' modulo' (ID: 112372)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.0872694253921509
    2. 'mod' → logprob: -1.2122694253921509
    3. '_' → logprob: -1.8372694253921509
    4. '=' → logprob: -2.2122693061828613
    5. ' =' → logprob: -2.8372693061828613
    6. ' mod' → logprob: -3.4622693061828613
    7. '_MOD' → logprob: -6.337269306182861
    8. 'MOD' → logprob: -6.337269306182861
    9. ' modulo' → logprob: -7.212269306182861
    10. ',' → logprob: -7.587269306182861

Token 805: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6143429279327393
    2. '=' → logprob: -0.8643429279327393
    3. 'mod' → logprob: -3.4893429279327393
    4. '_mod' → logprob: -5.11434268951416
    5. '_' → logprob: -7.86434268951416
    6. ' mod' → logprob: -8.48934268951416
    7. ':' → logprob: -8.61434268951416
    8. 'MOD' → logprob: -8.73934268951416
    9. '
' → logprob: -9.61434268951416
    10. '_MOD' → logprob: -10.23934268951416

Token 806: 'tr' (ID: 371)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -6.0033853515051305e-05
    2. '998' → logprob: -10.375060081481934
    3. '100' → logprob: -10.625060081481934
    4. '=' → logprob: -13.375060081481934
    5. '1' → logprob: -14.375060081481934
    6. ')' → logprob: -14.500060081481934
    7. ' ' → logprob: -14.500060081481934
    8. 'mod' → logprob: -14.875060081481934
    9. 'MOD' → logprob: -15.375060081481934
    10. '
' → logprob: -15.500060081481934

Token 807: 'ès' (ID: 4119)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.15297964215278625
    2. '10' → logprob: -2.652979612350464
    3. '=' → logprob: -3.027979612350464
    4. ' =' → logprob: -5.527979850769043
    5. '998' → logprob: -5.527979850769043
    6. 'mod' → logprob: -5.527979850769043
    7. 'u' → logprob: -6.527979850769043
    8. 'ans' → logprob: -7.027979850769043
    9. '_mod' → logprob: -7.152979850769043
    10. '100' → logprob: -7.277979850769043

Token 808: ' utilisée' (ID: 106548)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9072901010513306
    2. ')' → logprob: -1.6572901010513306
    3. ' =' → logprob: -1.7822901010513306
    4. '10' → logprob: -1.7822901010513306
    5. 'mod' → logprob: -4.157289981842041
    6. ' ' → logprob: -4.282289981842041
    7. '_' → logprob: -4.532289981842041
    8. '100' → logprob: -5.032289981842041
    9. 'MOD' → logprob: -5.407289981842041
    10. '
' → logprob: -5.657289981842041

Token 809: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.303526908159256
    2. ' =' → logprob: -1.6785268783569336
    3. ')' → logprob: -2.6785268783569336
    4. '_' → logprob: -5.928526878356934
    5. '_mod' → logprob: -6.678526878356934
    6. ' )' → logprob: -6.928526878356934
    7. 'mod' → logprob: -7.303526878356934
    8. 'MOD' → logprob: -7.553526878356934
    9. ',' → logprob: -9.678526878356934
    10. ')
' → logprob: -9.678526878356934

Token 810: ' les' (ID: 1341)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00012761499965563416
    2. '998' → logprob: -9.000127792358398
    3. '100' → logprob: -13.250127792358398
    4. '(' → logprob: -13.250127792358398
    5. '123' → logprob: -15.750127792358398
    6. 'int' → logprob: -16.2501277923584
    7. '
' → logprob: -16.8751277923584
    8. ' ' → logprob: -16.8751277923584
    9. '```' → logprob: -17.0001277923584
    10. '`' → logprob: -17.0001277923584

Token 811: ' problèmes' (ID: 49822)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0032410474959760904
    2. '=' → logprob: -6.378241062164307
    3. '998' → logprob: -7.878241062164307
    4. 'mod' → logprob: -8.378240585327148
    5. ')' → logprob: -8.878240585327148
    6. ' ' → logprob: -9.128240585327148
    7. 'competitive' → logprob: -9.253240585327148
    8. '_' → logprob: -9.378240585327148
    9. ' =' → logprob: -9.378240585327148
    10. '#' → logprob: -9.753240585327148

Token 812: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0131038427352905
    2. ')' → logprob: -1.6381038427352905
    3. '_' → logprob: -1.7631038427352905
    4. ' =' → logprob: -1.7631038427352905
    5. '_mod' → logprob: -2.38810396194458
    6. 'mod' → logprob: -5.51310396194458
    7. 'MOD' → logprob: -6.88810396194458
    8. ' )' → logprob: -7.01310396194458
    9. ' _' → logprob: -8.013103485107422
    10. ' MOD' → logprob: -8.388103485107422

Token 813: ' combin' (ID: 25307)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004211958963423967
    2. '998' → logprob: -5.879211902618408
    3. 'mod' → logprob: -6.629211902618408
    4. 'MOD' → logprob: -10.254212379455566
    5. '100' → logprob: -11.004212379455566
    6. '```' → logprob: -11.254212379455566
    7. 'competitive' → logprob: -12.754212379455566
    8. 'code' → logprob: -13.004212379455566
    9. '109' → logprob: -13.129212379455566
    10. 'int' → logprob: -13.129212379455566

Token 814: 'atoire' (ID: 41651)
  Prédit: 'atoire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoire' → logprob: -0.02059631235897541
    2. 'atoires' → logprob: -4.770596504211426
    3. 'mod' → logprob: -5.395596504211426
    4. '#' → logprob: -6.395596504211426
    5. '_mod' → logprob: -6.395596504211426
    6. '```' → logprob: -7.145596504211426
    7. 'ais' → logprob: -7.270596504211426
    8. 'a' → logprob: -7.520596504211426
    9. 'e' → logprob: -7.645596504211426
    10. 'atorial' → logprob: -8.770596504211426

Token 815: '/mod' (ID: 104852)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07754011452198029
    2. '=' → logprob: -3.202540159225464
    3. ')
' → logprob: -3.702540159225464
    4. '_mod' → logprob: -5.702539920806885
    5. ' =' → logprob: -5.827539920806885
    6. ' )' → logprob: -6.827539920806885
    7. 'mod' → logprob: -7.077539920806885
    8. '_' → logprob: -8.327540397644043
    9. 'MOD' → logprob: -8.452540397644043
    10. ',' → logprob: -8.577540397644043

Token 816: 'ular' (ID: 1492)
  Prédit: 'ulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.40507057309150696
    2. 'ule' → logprob: -1.4050705432891846
    3. 'ulos' → logprob: -3.5300705432891846
    4. '998' → logprob: -3.7800705432891846
    5. 'ulus' → logprob: -4.405070781707764
    6. 'mod' → logprob: -5.405070781707764
    7. 'u' → logprob: -6.030070781707764
    8. '100' → logprob: -6.655070781707764
    9. 'ular' → logprob: -6.780070781707764
    10. '_mod' → logprob: -7.030070781707764

Token 817: 'ité' (ID: 3761)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10454422235488892
    2. 'mod' → logprob: -2.854544162750244
    3. ' mod' → logprob: -4.479544162750244
    4. ')' → logprob: -4.604544162750244
    5. 'MOD' → logprob: -4.979544162750244
    6. '_mod' → logprob: -5.104544162750244
    7. 'ule' → logprob: -6.479544162750244
    8. ' =' → logprob: -6.854544162750244
    9. '10' → logprob: -6.979544162750244
    10. '=' → logprob: -7.604544162750244

Token 818: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010703373700380325
    2. '_mod' → logprob: -4.8857035636901855
    3. '_' → logprob: -6.5107035636901855
    4. 'mod' → logprob: -7.7607035636901855
    5. '=' → logprob: -7.8857035636901855
    6. '_)' → logprob: -7.8857035636901855
    7. ')
' → logprob: -8.885703086853027
    8. ' )' → logprob: -9.135703086853027
    9. ' =' → logprob: -9.760703086853027
    10. ')_' → logprob: -10.135703086853027

Token 819: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2233183042553719e-05
    2. 'MOD' → logprob: -11.375012397766113
    3. '
' → logprob: -14.250012397766113
    4. ' mod' → logprob: -17.250011444091797
    5. '_mod' → logprob: -17.625011444091797
    6. 'def' → logprob: -18.125011444091797
    7. '```' → logprob: -18.500011444091797
    8. '(mod' → logprob: -18.875011444091797
    9. 'Mod' → logprob: -19.125011444091797
    10. '10' → logprob: -20.000011444091797

Token 820: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269317865371704
    2. '=' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.251932144165039
    4. ',' → logprob: -14.001932144165039
    5. ':' → logprob: -14.876932144165039
    6. '_' → logprob: -15.126932144165039
    7. ' =
' → logprob: -15.626932144165039
    8. '.' → logprob: -16.50193214416504
    9. 'mod' → logprob: -16.50193214416504
    10. ')' → logprob: -17.12693214416504

Token 821: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000919200771022588
    2. '100' → logprob: -7.250919342041016
    3. '998' → logprob: -8.500919342041016
    4. ' ' → logprob: -12.125919342041016
    5. '1' → logprob: -14.625919342041016
    6. 'int' → logprob: -16.375919342041016
    7. '(' → logprob: -17.625919342041016
    8. '   ' → logprob: -17.750919342041016
    9. '１０' → logprob: -18.375919342041016
    10. '  ' → logprob: -19.000919342041016

Token 822: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0014328587567433715
    2. '100' → logprob: -6.7514328956604
    3. '998' → logprob: -8.251432418823242
    4. 'int' → logprob: -14.001432418823242
    5. '1' → logprob: -14.876432418823242
    6. '(' → logprob: -14.876432418823242
    7. ' ' → logprob: -16.501432418823242
    8. '１０' → logprob: -16.626432418823242
    9. '=' → logprob: -18.501432418823242
    10. '
' → logprob: -18.626432418823242

Token 823: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1017957329750061
    2. '**' → logprob: -2.3517956733703613
    3. '09' → logprob: -6.976795673370361
    4. '000' → logprob: -7.976795673370361
    5. '+' → logprob: -8.47679615020752
    6. '```' → logprob: -9.47679615020752
    7. ' ' → logprob: -11.60179615020752
    8. '009' → logprob: -12.22679615020752
    9. '_' → logprob: -12.60179615020752
    10. ' **' → logprob: -12.97679615020752

Token 824: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.375
    3. '+' → logprob: -18.375
    4. '```' → logprob: -19.5
    5. ' ' → logprob: -22.875
    6. '
' → logprob: -22.875
    7. '９' → logprob: -23.125
    8. '``' → logprob: -23.375
    9. '19' → logprob: -24.125
    10. '#' → logprob: -24.5

Token 825: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -18.375
    3. '```' → logprob: -21.125
    4. '+' → logprob: -21.75
    5. '``' → logprob: -23.875
    6. '９' → logprob: -23.875
    7. '19' → logprob: -24.625
    8. '
' → logprob: -24.625
    9. '99' → logprob: -25.625
    10. '10' → logprob: -25.625

Token 826: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.123899558791891e-05
    2. ' +' → logprob: -9.62507152557373
    3. '7' → logprob: -12.25007152557373
    4. '+
' → logprob: -15.75007152557373
    5. 'plus' → logprob: -16.250070571899414
    6. '＋' → logprob: -16.625070571899414
    7. ' plus' → logprob: -18.125070571899414
    8. ' ' → logprob: -19.625070571899414
    9. '```' → logprob: -19.750070571899414
    10. '
' → logprob: -20.125070571899414

Token 827: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -22.125
    3. '+' → logprob: -22.375
    4. ' ' → logprob: -22.75
    5. '```' → logprob: -23.75
    6. '７' → logprob: -24.125
    7. '   ' → logprob: -24.5
    8. '9' → logprob: -25.875
    9. '
' → logprob: -26.0
    10. '

' → logprob: -26.25

Token 828: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -22.5
    3. '+' → logprob: -24.125
    4. '７' → logprob: -24.625
    5. '```' → logprob: -24.625
    6. ' ' → logprob: -25.0
    7. '
' → logprob: -26.125
    8. '9' → logprob: -26.5
    9. '

' → logprob: -26.5
    10. '   ' → logprob: -27.125

Token 829: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7001104354858398
    2. '<|end|>' → logprob: -0.7001104354858398
    3. '#' → logprob: -5.70011043548584
    4. '<|end|>' → logprob: -7.32511043548584
    5. '\n' → logprob: -7.45011043548584
    6. '```' → logprob: -7.82511043548584
    7. '

' → logprob: -7.82511043548584
    8. 'def' → logprob: -8.07511043548584
    9. ' 
' → logprob: -8.20011043548584
    10. ')' → logprob: -8.57511043548584

Token 830: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26335692405700684
    2. '<|end|>' → logprob: -2.263356924057007
    3. 'def' → logprob: -3.138356924057007
    4. '
' → logprob: -3.263356924057007
    5. '<|end|>' → logprob: -3.513356924057007
    6. '\n' → logprob: -5.013357162475586
    7. '```' → logprob: -5.763357162475586
    8. 'import' → logprob: -6.013357162475586
    9. ' 
' → logprob: -7.388357162475586
    10. '  
' → logprob: -7.513357162475586

Token 831: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3584100604057312
    2. 'def' → logprob: -1.233410120010376
    3. 'd' → logprob: -5.233409881591797
    4. 'import' → logprob: -6.483409881591797
    5. '
' → logprob: -7.233409881591797
    6. '(' → logprob: -7.608409881591797
    7. '```' → logprob: -8.358409881591797
    8. 'n' → logprob: -8.483409881591797
    9. 'class' → logprob: -8.483409881591797
    10. 'a' → logprob: -8.733409881591797

Token 832: ' du' (ID: 1462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24039988219738007
    2. '()' → logprob: -1.6153998374938965
    3. '(n' → logprob: -4.9903998374938965
    4. '(' → logprob: -5.4903998374938965
    5. 'N' → logprob: -5.8653998374938965
    6. 'def' → logprob: -7.9903998374938965
    7. '_n' → logprob: -8.240400314331055
    8. '(
' → logprob: -9.115400314331055
    9. '#' → logprob: -9.365400314331055
    10. '():' → logprob: -9.865400314331055

Token 833: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014753410359844565
    2. 't' → logprob: -7.5014753341674805
    3. 'input' → logprob: -7.5014753341674805
    4. 'def' → logprob: -8.87647533416748
    5. 'import' → logprob: -9.37647533416748
    6. 'N' → logprob: -9.75147533416748
    7. 'T' → logprob: -10.62647533416748
    8. '#' → logprob: -10.75147533416748
    9. ' n' → logprob: -10.75147533416748
    10. '()' → logprob: -12.37647533416748

Token 834: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020715421065688133
    2. 'n' → logprob: -4.145715236663818
    3. '=' → logprob: -6.395715236663818
    4. ' =' → logprob: -7.020715236663818
    5. '_n' → logprob: -7.270715236663818
    6. '_' → logprob: -7.520715236663818
    7. '(' → logprob: -7.895715236663818
    8. '(n' → logprob: -9.145715713500977
    9. 'def' → logprob: -9.395715713500977
    10. 'de' → logprob: -9.520715713500977

Token 835: ''' (ID: 6)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3569458723068237
    2. '()' → logprob: -1.6069458723068237
    3. '_' → logprob: -1.8569458723068237
    4. 'test' → logprob: -2.2319459915161133
    5. ' test' → logprob: -2.2319459915161133
    6. 'l' → logprob: -3.3569459915161133
    7. 'cases' → logprob: -3.6069459915161133
    8. '(' → logprob: -3.8569459915161133
    9. 'lines' → logprob: -4.731945991516113
    10. 's' → logprob: -4.731945991516113

Token 836: 'élé' (ID: 15228)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -0.4051571488380432
    2. 'l' → logprob: -1.5301570892333984
    3. 't' → logprob: -2.5301570892333984
    4. 'tests' → logprob: -4.030157089233398
    5. '_' → logprob: -5.030157089233398
    6. ' test' → logprob: -5.405157089233398
    7. 'cases' → logprob: -6.280157089233398
    8. '_test' → logprob: -6.655157089233398
    9. 's' → logprob: -7.155157089233398
    10. '_tests' → logprob: -7.280157089233398

Token 837: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.11085803806781769
    2. 'ements' → logprob: -2.7358579635620117
    3. 'éments' → logprob: -4.110857963562012
    4. 'ment' → logprob: -4.360857963562012
    5. 'ement' → logprob: -5.610857963562012
    6. 'ément' → logprob: -5.985857963562012
    7. 'm' → logprob: -6.235857963562012
    8. 't' → logprob: -7.235857963562012
    9. '#' → logprob: -7.860857963562012
    10. 'èves' → logprob: -8.110857963562012

Token 838: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009138475870713592
    2. 'N' → logprob: -7.000913619995117
    3. '=' → logprob: -14.000913619995117
    4. '()' → logprob: -14.375913619995117
    5. '(n' → logprob: -15.250913619995117
    6. '_n' → logprob: -15.375913619995117
    7. ' =' → logprob: -15.625913619995117
    8. ' n' → logprob: -15.875913619995117
    9. '_' → logprob: -16.125913619995117
    10. 'x' → logprob: -16.875913619995117

Token 839: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.2886832356452942
    2. 'l' → logprob: -1.7886831760406494
    3. 'tr' → logprob: -3.2886831760406494
    4. 'prendre' → logprob: -4.5386834144592285
    5. 'tra' → logprob: -4.6636834144592285
    6. ' traiter' → logprob: -5.4136834144592285
    7. 'int' → logprob: -5.7886834144592285
    8. 'import' → logprob: -6.1636834144592285
    9. '_trait' → logprob: -6.5386834144592285
    10. 'su' → logprob: -6.5386834144592285

Token 840: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008627340197563171
    2. 'N' → logprob: -4.758627414703369
    3. '
' → logprob: -11.883626937866211
    4. 't' → logprob: -13.383626937866211
    5. '_n' → logprob: -13.383626937866211
    6. ' =' → logprob: -14.383626937866211
    7. 'x' → logprob: -14.633626937866211
    8. '=' → logprob: -14.883626937866211
    9. '```' → logprob: -14.883626937866211
    10. ' n' → logprob: -15.508626937866211

Token 841: ' l' (ID: 305)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.21870480477809906
    2. 'n' → logprob: -1.7187048196792603
    3. 'input' → logprob: -4.218704700469971
    4. 'int' → logprob: -7.093704700469971
    5. 'N' → logprob: -7.468704700469971
    6. '1' → logprob: -7.718704700469971
    7. '()' → logprob: -8.968705177307129
    8. ' I' → logprob: -9.093705177307129
    9. 'stdin' → logprob: -9.218705177307129
    10. '0' → logprob: -9.718705177307129

Token 842: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0842951536178589
    2. 'stdin' → logprob: -1.0842951536178589
    3. '=sys' → logprob: -1.8342951536178589
    4. '=' → logprob: -2.5842952728271484
    5. 'sys' → logprob: -2.9592952728271484
    6. '_' → logprob: -4.459295272827148
    7. ' =' → logprob: -4.709295272827148
    8. '=input' → logprob: -5.834295272827148
    9. '(stdin' → logprob: -6.209295272827148
    10. '()' → logprob: -6.584295272827148

Token 843: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005277395714074373
    2. 'N' → logprob: -5.255277633666992
    3. '
' → logprob: -10.755277633666992
    4. '()' → logprob: -11.505277633666992
    5. ' =' → logprob: -12.630277633666992
    6. '=' → logprob: -12.880277633666992
    7. '_n' → logprob: -13.130277633666992
    8. '(n' → logprob: -13.880277633666992
    9. ' n' → logprob: -14.255277633666992
    10. '()
' → logprob: -14.380277633666992

Token 844: 'en' (ID: 262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2030901461839676
    2. 'n' → logprob: -1.7030901908874512
    3. ')n' → logprob: -7.078090190887451
    4. 'I' → logprob: -7.828090190887451
    5. 'N' → logprob: -8.078089714050293
    6. '()' → logprob: -9.453089714050293
    7. ' n' → logprob: -11.203089714050293
    8. ' )' → logprob: -11.328089714050293
    9. 'int' → logprob: -12.078089714050293
    10. ')=' → logprob: -13.078089714050293

Token 845: ' général' (ID: 30475)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.2016940861940384
    2. '=' → logprob: -2.4516940116882324
    3. '=int' → logprob: -3.4516940116882324
    4. ' =' → logprob: -3.7016940116882324
    5. 't' → logprob: -3.8266940116882324
    6. 'n' → logprob: -5.326694011688232
    7. 'int' → logprob: -5.576694011688232
    8. 'input' → logprob: -6.451694011688232
    9. 'range' → logprob: -6.576694011688232
    10. 'puts' → logprob: -6.951694011688232

Token 846: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.46401500701904297
    2. ')' → logprob: -1.339015007019043
    3. 'n' → logprob: -2.589015007019043
    4. ' =' → logprob: -3.589015007019043
    5. '=' → logprob: -5.714015007019043
    6. '()
' → logprob: -6.839015007019043
    7. '())' → logprob: -7.089015007019043
    8. '():' → logprob: -8.089015007019043
    9. ' )' → logprob: -8.214015007019043
    10. ' n' → logprob: -8.464015007019043

Token 847: ' cela' (ID: 17542)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1822643280029297
    2. ')' → logprob: -1.8072643280029297
    3. ' n' → logprob: -6.30726432800293
    4. 'N' → logprob: -8.43226432800293
    5. ')n' → logprob: -8.80726432800293
    6. ' )' → logprob: -9.05726432800293
    7. '()' → logprob: -10.43226432800293
    8. 't' → logprob: -10.55726432800293
    9. 'int' → logprob: -10.68226432800293
    10. ')
' → logprob: -11.05726432800293

Token 848: ' correspond' (ID: 11095)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006162228528410196
    2. ' =' → logprob: -5.131162166595459
    3. ')' → logprob: -8.506162643432617
    4. '=int' → logprob: -11.256162643432617
    5. '=
' → logprob: -11.756162643432617
    6. '=n' → logprob: -12.756162643432617
    7. ')=' → logprob: -13.381162643432617
    8. '=input' → logprob: -13.506162643432617
    9. '.' → logprob: -13.631162643432617
    10. ' )' → logprob: -14.506162643432617

Token 849: 'ra' (ID: 614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6058604121208191
    2. '()' → logprob: -1.2308604717254639
    3. 'à' → logprob: -2.230860471725464
    4. '=' → logprob: -3.355860471725464
    5. 'au' → logprob: -4.605860233306885
    6. ' à' → logprob: -5.605860233306885
    7. ' )' → logprob: -5.980860233306885
    8. ' =' → logprob: -6.480860233306885
    9. '())' → logprob: -7.480860233306885
    10. '(' → logprob: -7.480860233306885

Token 850: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15325140953063965
    2. ')' → logprob: -2.5282514095306396
    3. '())' → logprob: -2.7782514095306396
    4. '()
' → logprob: -9.903251647949219
    5. ' )' → logprob: -10.028251647949219
    6. '(' → logprob: -11.528251647949219
    7. ' ()' → logprob: -12.028251647949219
    8. 'n' → logprob: -12.278251647949219
    9. 'à' → logprob: -12.528251647949219
    10. '().' → logprob: -12.653251647949219

Token 851: ' la' (ID: 557)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0037574477028101683
    2. 'int' → logprob: -5.878757476806641
    3. ' I' → logprob: -7.378757476806641
    4. 'n' → logprob: -8.12875747680664
    5. ')' → logprob: -10.75375747680664
    6. ' int' → logprob: -12.75375747680664
    7. 'l' → logprob: -13.12875747680664
    8. 'i' → logprob: -13.62875747680664
    9. 'N' → logprob: -13.87875747680664
    10. '()' → logprob: -14.12875747680664

Token 852: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40568700432777405
    2. 'int' → logprob: -1.1556869745254517
    3. 'input' → logprob: -4.905686855316162
    4. ')' → logprob: -5.780686855316162
    5. 'nombre' → logprob: -5.905686855316162
    6. '=int' → logprob: -6.405686855316162
    7. 'N' → logprob: -7.030686855316162
    8. 'ent' → logprob: -7.530686855316162
    9. 'I' → logprob: -7.655686855316162
    10. 's' → logprob: -7.780686855316162

Token 853: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39257633686065674
    2. ' =' → logprob: -2.142576217651367
    3. '=' → logprob: -2.267576217651367
    4. 'n' → logprob: -2.892576217651367
    5. '_' → logprob: -3.892576217651367
    6. '()' → logprob: -3.892576217651367
    7. '(n' → logprob: -6.017576217651367
    8. ' )' → logprob: -7.142576217651367
    9. '_n' → logprob: -7.392576217651367
    10. '=n' → logprob: -7.767576217651367

Token 854: ''une' (ID: 13337)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2253122329711914
    2. 'la' → logprob: -2.4753122329711914
    3. '()' → logprob: -2.7253122329711914
    4. '_' → logprob: -4.225312232971191
    5. 'input' → logprob: -4.725312232971191
    6. ' la' → logprob: -5.100312232971191
    7. 'l' → logprob: -5.475312232971191
    8. 'une' → logprob: -5.850312232971191
    9. 'n' → logprob: -6.100312232971191
    10. 's' → logprob: -6.100312232971191

Token 855: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.0831560418009758
    2. 'list' → logprob: -3.833156108856201
    3. 'array' → logprob: -4.083156108856201
    4. 'table' → logprob: -4.708156108856201
    5. 'sequence' → logprob: -4.708156108856201
    6. 'chaine' → logprob: -5.333156108856201
    7. 'input' → logprob: -5.583156108856201
    8. 'data' → logprob: -6.208156108856201
    9. ')' → logprob: -6.708156108856201
    10. 'variable' → logprob: -7.208156108856201

Token 856: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0032169262412935495
    2. 'q' → logprob: -5.753216743469238
    3. 'quences' → logprob: -11.503216743469238
    4. 'rie' → logprob: -11.503216743469238
    5. 'QUENCE' → logprob: -12.503216743469238
    6. '#' → logprob: -12.628216743469238
    7. 'qu' → logprob: -12.753216743469238
    8. 'quent' → logprob: -13.253216743469238
    9. 'que' → logprob: -13.378216743469238
    10. '   ' → logprob: -13.503216743469238

Token 857: ' ou' (ID: 2031)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008038586936891079
    2. 'n' → logprob: -5.133038520812988
    3. ')' → logprob: -6.758038520812988
    4. '()
' → logprob: -7.133038520812988
    5. '(n' → logprob: -10.008038520812988
    6. '(' → logprob: -11.008038520812988
    7. ' =' → logprob: -11.258038520812988
    8. '())' → logprob: -11.258038520812988
    9. 'N' → logprob: -11.508038520812988
    10. '#' → logprob: -11.633038520812988

Token 858: ' d' (ID: 272)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5924942493438721
    2. 'n' → logprob: -2.092494249343872
    3. 'range' → logprob: -2.467494249343872
    4. 'à' → logprob: -2.842494249343872
    5. 'une' → logprob: -3.342494249343872
    6. 'le' → logprob: -3.592494249343872
    7. '#' → logprob: -4.092494010925293
    8. ' la' → logprob: -4.217494010925293
    9. 'au' → logprob: -4.592494010925293
    10. 'un' → logprob: -4.967494010925293

Token 859: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.855303168296814
    2. 'a' → logprob: -1.730303168296814
    3. 'une' → logprob: -2.2303032875061035
    4. 'la' → logprob: -2.3553032875061035
    5. 'l' → logprob: -2.7303032875061035
    6. ' la' → logprob: -3.4803032875061035
    7. ')' → logprob: -3.7303032875061035
    8. 'es' → logprob: -3.9803032875061035
    9. ''une' → logprob: -4.1053032875061035
    10. 'range' → logprob: -4.1053032875061035

Token 860: ' structure' (ID: 8866)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4755028784275055
    2. 'table' → logprob: -1.475502848625183
    3. 'chaine' → logprob: -2.6005029678344727
    4. 'list' → logprob: -4.725502967834473
    5. 'texte' → logprob: -4.725502967834473
    6. 'array' → logprob: -4.725502967834473
    7. 'dataset' → logprob: -4.850502967834473
    8. 'd' → logprob: -5.350502967834473
    9. 'suite' → logprob: -5.475502967834473
    10. 'structure' → logprob: -5.475502967834473

Token 861: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34509968757629395
    2. 'n' → logprob: -1.345099687576294
    3. ')n' → logprob: -4.470099449157715
    4. '()' → logprob: -4.595099449157715
    5. '(n' → logprob: -5.720099449157715
    6. '=' → logprob: -6.470099449157715
    7. '#' → logprob: -6.595099449157715
    8. ' =' → logprob: -7.220099449157715
    9. '_' → logprob: -7.345099449157715
    10. ' n' → logprob: -8.220099449157715

Token 862: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020187153131701052
    2. 'data' → logprob: -8.750202178955078
    3. 'don' → logprob: -11.125202178955078
    4. ' données' → logprob: -11.375202178955078
    5. 'entrée' → logprob: -12.000202178955078
    6. '```' → logprob: -12.375202178955078
    7. 'datas' → logprob: -13.250202178955078
    8. '
' → logprob: -14.125202178955078
    9. ' donnée' → logprob: -14.125202178955078
    10. '#' → logprob: -14.500202178955078

Token 863: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42369917035102844
    2. 'n' → logprob: -1.173699140548706
    3. '()' → logprob: -3.423699140548706
    4. 'N' → logprob: -6.798699378967285
    5. ')n' → logprob: -7.298699378967285
    6. '=' → logprob: -7.423699378967285
    7. ')
' → logprob: -7.798699378967285
    8. '()
' → logprob: -8.923699378967285
    9. '(n' → logprob: -8.923699378967285
    10. ' =' → logprob: -8.923699378967285

Token 864: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001929228543303907
    2. 'N' → logprob: -6.25192928314209
    3. '```' → logprob: -15.37692928314209
    4. ' n' → logprob: -16.126928329467773
    5. '_n' → logprob: -16.501928329467773
    6. '`' → logprob: -16.751928329467773
    7. 'x' → logprob: -17.251928329467773
    8. 't' → logprob: -17.501928329467773
    9. 'def' → logprob: -18.126928329467773
    10. 'a' → logprob: -18.126928329467773

Token 865: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788988247513771
    2. ' =' → logprob: -2.5788989067077637
    3. ',' → logprob: -11.703898429870605
    4. ')' → logprob: -15.578898429870605
    5. '=n' → logprob: -15.953898429870605
    6. '=int' → logprob: -16.203899383544922
    7. ' =
' → logprob: -16.703899383544922
    8. '.' → logprob: -16.828899383544922
    9. '＝' → logprob: -16.953899383544922
    10. '(' → logprob: -17.078899383544922

Token 866: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.07994671911001205
    2. 'int' → logprob: -2.579946756362915
    3. ' I' → logprob: -6.954946517944336
    4. ' int' → logprob: -9.204946517944336
    5. 'LI' → logprob: -13.579946517944336
    6. ' ' → logprob: -15.454946517944336
    7. 'INT' → logprob: -15.829946517944336
    8. '=int' → logprob: -15.954946517944336
    9. 'Int' → logprob: -16.454946517944336
    10. '  ' → logprob: -16.954946517944336

Token 867: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 868: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07538802921772003
    2. 'data' → logprob: -3.200387954711914
    3. 'arr' → logprob: -4.575387954711914
    4. '#' → logprob: -5.075387954711914
    5. 's' → logprob: -5.700387954711914
    6. 'd' → logprob: -5.950387954711914
    7. 'lst' → logprob: -5.950387954711914
    8. 'x' → logprob: -6.700387954711914
    9. 'array' → logprob: -6.950387954711914
    10. 'v' → logprob: -6.950387954711914

Token 869: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3028891384601593
    2. 'arr' → logprob: -1.552889108657837
    3. 'data' → logprob: -3.052889108657837
    4. 'A' → logprob: -6.302889347076416
    5. 'lst' → logprob: -7.552889347076416
    6. 'dp' → logprob: -10.302888870239258
    7. '#' → logprob: -10.552888870239258
    8. 'd' → logprob: -11.052888870239258
    9. 'array' → logprob: -11.802888870239258
    10. 'for' → logprob: -12.177888870239258

Token 870: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24148888885974884
    2. '=' → logprob: -3.3664889335632324
    3. '_' → logprob: -3.4914889335632324
    4. '_values' → logprob: -3.4914889335632324
    5. '_list' → logprob: -3.4914889335632324
    6. 'data' → logprob: -3.4914889335632324
    7. 's' → logprob: -4.116488933563232
    8. '_data' → logprob: -4.491488933563232
    9. ' =' → logprob: -5.116488933563232
    10. '_items' → logprob: -5.741488933563232

Token 871: ''une' (ID: 13337)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03161350265145302
    2. 'L' → logprob: -4.656613349914551
    3. 'LS' → logprob: -4.656613349914551
    4. '=' → logprob: -5.906613349914551
    5. '_' → logprob: -6.281613349914551
    6. '(' → logprob: -6.406613349914551
    7. 'n' → logprob: -6.531613349914551
    8. 's' → logprob: -7.531613349914551
    9. 'e' → logprob: -7.531613349914551
    10. '[' → logprob: -7.781613349914551

Token 872: ' liste' (ID: 31719)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7459812164306641
    2. ' =' → logprob: -0.8709812164306641
    3. 'list' → logprob: -2.870981216430664
    4. 'l' → logprob: -4.245981216430664
    5. '()' → logprob: -4.370981216430664
    6. 'lst' → logprob: -5.245981216430664
    7. '_list' → logprob: -5.620981216430664
    8. 'L' → logprob: -6.120981216430664
    9. 'li' → logprob: -6.245981216430664
    10. '_' → logprob: -6.745981216430664

Token 873: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35594189167022705
    2. '()' → logprob: -1.480941891670227
    3. 'a' → logprob: -3.3559417724609375
    4. ' =' → logprob: -3.7309417724609375
    5. 'A' → logprob: -4.7309417724609375
    6. 'lst' → logprob: -6.2309417724609375
    7. 'arr' → logprob: -7.6059417724609375
    8. 'data' → logprob: -7.7309417724609375
    9. '_' → logprob: -8.230941772460938
    10. '_a' → logprob: -8.355941772460938

Token 874: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1976551115512848
    2. 'ints' → logprob: -1.9476550817489624
    3. 'ent' → logprob: -4.072655200958252
    4. 'n' → logprob: -4.572655200958252
    5. 'inte' → logprob: -5.322655200958252
    6. 'LI' → logprob: -6.197655200958252
    7. 'ents' → logprob: -6.822655200958252
    8. '(int' → logprob: -7.697655200958252
    9. '()' → logprob: -8.072654724121094
    10. 'map' → logprob: -9.072654724121094

Token 875: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -7.946405094116926e-05
    2. 't' → logprob: -10.125079154968262
    3. 'ières' → logprob: -10.750079154968262
    4. 'ier' → logprob: -11.375079154968262
    5. 'ints' → logprob: -13.500079154968262
    6. 'i' → logprob: -13.875079154968262
    7. 'tiers' → logprob: -14.250079154968262
    8. 'ieres' → logprob: -14.375079154968262
    9. '```' → logprob: -14.875079154968262
    10. 'ière' → logprob: -15.625079154968262

Token 876: ' H' (ID: 487)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23220212757587433
    2. 'A' → logprob: -2.2322020530700684
    3. '()' → logprob: -3.2322020530700684
    4. 'arr' → logprob: -3.4822020530700684
    5. 'lst' → logprob: -4.607202053070068
    6. 'l' → logprob: -5.482202053070068
    7. 'L' → logprob: -5.482202053070068
    8. ' =' → logprob: -5.607202053070068
    9. '=' → logprob: -5.857202053070068
    10. 'li' → logprob: -6.482202053070068

Token 877: ' venant' (ID: 192699)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.526448130607605
    2. ' =' → logprob: -1.526448130607605
    3. '()' → logprob: -1.651448130607605
    4. '(' → logprob: -9.151448249816895
    5. ',' → logprob: -10.151448249816895
    6. '_' → logprob: -10.776448249816895
    7. ' ()' → logprob: -11.651448249816895
    8. 'H' → logprob: -11.901448249816895
    9. '=[]' → logprob: -12.151448249816895
    10. 's' → logprob: -12.151448249816895

Token 878: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.252081960439682
    2. '=' → logprob: -1.5020819902420044
    3. ' =' → logprob: -9.127081871032715
    4. '()
' → logprob: -10.502081871032715
    5. '().' → logprob: -12.627081871032715
    6. 'LI' → logprob: -13.002081871032715
    7. 'from' → logprob: -13.002081871032715
    8. '(' → logprob: -13.127081871032715
    9. 'de' → logprob: -13.752081871032715
    10. '();' → logprob: -14.627081871032715

Token 879: ' l' (ID: 305)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.04623391479253769
    2. '()' → logprob: -3.546233892440796
    3. 'LS' → logprob: -4.171234130859375
    4. 'L' → logprob: -7.546234130859375
    5. ' LI' → logprob: -9.671234130859375
    6. 'Li' → logprob: -9.796234130859375
    7. 'IR' → logprob: -10.046234130859375
    8. 'input' → logprob: -10.546234130859375
    9. 'LR' → logprob: -10.921234130859375
    10. 'LC' → logprob: -11.046234130859375

Token 880: ''entrée' (ID: 115820)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.23595722019672394
    2. 'input' → logprob: -2.735957145690918
    3. 'I' → logprob: -3.235957145690918
    4. 'LI' → logprob: -3.610957145690918
    5. 'stdin' → logprob: -3.735957145690918
    6. '=sys' → logprob: -3.735957145690918
    7. 'S' → logprob: -5.235957145690918
    8. 'ist' → logprob: -5.735957145690918
    9. 'i' → logprob: -5.860957145690918
    10. 'LS' → logprob: -6.110957145690918

Token 881: '.' (ID: 13)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0038250144571065903
    2. '=' → logprob: -5.8788251876831055
    3. ' =' → logprob: -7.3788251876831055
    4. '()' → logprob: -8.003825187683105
    5. '(H' → logprob: -10.753825187683105
    6. '()
' → logprob: -11.003825187683105
    7. ':' → logprob: -11.753825187683105
    8. ' H' → logprob: -12.003825187683105
    9. '#' → logprob: -12.503825187683105
    10. '
' → logprob: -13.378825187683105

Token 882: ' Puis' (ID: 87717)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.2664456789934775e-06
    2. ' =' → logprob: -14.875000953674316
    3. '()' → logprob: -15.250000953674316
    4. '#' → logprob: -15.250000953674316
    5. ' H' → logprob: -15.625000953674316
    6. '(H' → logprob: -16.375001907348633
    7. '=' → logprob: -16.500001907348633
    8. ':' → logprob: -17.375001907348633
    9. 'h' → logprob: -17.625001907348633
    10. '()
' → logprob: -18.000001907348633

Token 883: ' on' (ID: 402)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.007966093719005585
    2. '=' → logprob: -5.382966041564941
    3. ' =' → logprob: -5.882966041564941
    4. ' H' → logprob: -8.132966041564941
    5. '
' → logprob: -9.132966041564941
    6. '#' → logprob: -10.007966041564941
    7. 'for' → logprob: -10.757966041564941
    8. 'h' → logprob: -11.757966041564941
    9. 'def' → logprob: -11.882966041564941
    10. '=[]' → logprob: -11.882966041564941

Token 884: ' ajoute' (ID: 91611)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.43518269062042236
    2. '=' → logprob: -1.0601826906204224
    3. '#' → logprob: -6.060182571411133
    4. ' =' → logprob: -6.060182571411133
    5. 's' → logprob: -7.935182571411133
    6. 'def' → logprob: -8.435182571411133
    7. 'h' → logprob: -8.560182571411133
    8. 'for' → logprob: -8.685182571411133
    9. 'sort' → logprob: -8.935182571411133
    10. 'continue' → logprob: -9.310182571411133

Token 885: ' ' (ID: 220)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.1463448405265808
    2. '(' → logprob: -2.0213449001312256
    3. '([-' → logprob: -6.3963446617126465
    4. '[' → logprob: -6.8963446617126465
    5. '(H' → logprob: -7.6463446617126465
    6. '(IN' → logprob: -8.771345138549805
    7. '(-' → logprob: -9.271345138549805
    8. '0' → logprob: -9.521345138549805
    9. '([]' → logprob: -10.021345138549805
    10. 'H' → logprob: -10.271345138549805

Token 886: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36561375856399536
    2. '0' → logprob: -1.3656136989593506
    3. '(' → logprob: -4.49061393737793
    4. '[int' → logprob: -4.49061393737793
    5. '[n' → logprob: -4.61561393737793
    6. '([' → logprob: -5.24061393737793
    7. 'H' → logprob: -6.11561393737793
    8. 'INF' → logprob: -6.11561393737793
    9. '[-' → logprob: -6.24061393737793
    10. '1' → logprob: -6.61561393737793

Token 887: ' à' (ID: 1221)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.1779640167951584
    2. '(' → logprob: -2.677963972091675
    3. 'H' → logprob: -2.927963972091675
    4. ' =' → logprob: -4.177964210510254
    5. '=' → logprob: -4.552964210510254
    6. '.append' → logprob: -5.052964210510254
    7. '([' → logprob: -5.552964210510254
    8. '_H' → logprob: -6.802964210510254
    9. '_' → logprob: -7.302964210510254
    10. '.' → logprob: -7.677964210510254

Token 888: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06923222541809082
    2. 'each' → logprob: -3.069232225418091
    3. ' chaque' → logprob: -4.569231986999512
    4. '[' → logprob: -5.444231986999512
    5. 'la' → logprob: -6.194231986999512
    6. ' each' → logprob: -6.194231986999512
    7. 'ch' → logprob: -7.319231986999512
    8. ' H' → logprob: -8.319231986999512
    9. 'all' → logprob: -8.944231986999512
    10. 't' → logprob: -9.319231986999512

Token 889: ' fin' (ID: 2131)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04441891983151436
    2. '[' → logprob: -3.7944188117980957
    3. 'n' → logprob: -5.044418811798096
    4. '#' → logprob: -6.169418811798096
    5. 'each' → logprob: -6.294418811798096
    6. ' H' → logprob: -6.794418811798096
    7. '=' → logprob: -6.919418811798096
    8. 's' → logprob: -7.169418811798096
    9. 'liste' → logprob: -7.294418811798096
    10. '[i' → logprob: -7.544418811798096

Token 890: ' de' (ID: 334)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04736635833978653
    2. '(H' → logprob: -3.9223663806915283
    3. ' =' → logprob: -4.297366142272949
    4. '=' → logprob: -4.422366142272949
    5. '
' → logprob: -7.547366142272949
    6. ' H' → logprob: -9.29736614227295
    7. 'h' → logprob: -9.67236614227295
    8. '(
' → logprob: -10.29736614227295
    9. '(' → logprob: -10.79736614227295
    10. '()
' → logprob: -11.04736614227295

Token 891: ' cette' (ID: 7696)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -9.014684110297821e-06
    2. 'la' → logprob: -12.000008583068848
    3. ' H' → logprob: -13.000008583068848
    4. '(H' → logprob: -15.000008583068848
    5. 'l' → logprob: -16.000009536743164
    6. 'the' → logprob: -16.750009536743164
    7. ' la' → logprob: -17.375009536743164
    8. '```' → logprob: -17.750009536743164
    9. '#' → logprob: -18.125009536743164
    10. '`' → logprob: -18.125009536743164

Token 892: ' liste' (ID: 31719)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.22505098581314087
    2. '(H' → logprob: -1.725050926208496
    3. '(' → logprob: -4.225050926208496
    4. ' H' → logprob: -4.975050926208496
    5. '(
' → logprob: -7.225050926208496
    6. ' (' → logprob: -7.850050926208496
    7. '[' → logprob: -8.850050926208496
    8. '.' → logprob: -8.975050926208496
    9. 'space' → logprob: -9.975050926208496
    10. ' ' → logprob: -10.225050926208496

Token 893: ' pour' (ID: 1930)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01049518957734108
    2. ' =' → logprob: -4.760495185852051
    3. '
' → logprob: -6.885495185852051
    4. '=' → logprob: -7.510495185852051
    5. ':' → logprob: -9.13549518585205
    6. '(H' → logprob: -9.38549518585205
    7. 'h' → logprob: -10.38549518585205
    8. ' H' → logprob: -10.51049518585205
    9. ':
' → logprob: -11.13549518585205
    10. '_H' → logprob: -12.26049518585205

Token 894: ' fonctionner' (ID: 153485)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0002456046058796346
    2. ' H' → logprob: -8.375246047973633
    3. ' faciliter' → logprob: -12.250246047973633
    4. '#' → logprob: -13.000246047973633
    5. ')' → logprob: -13.250246047973633
    6. 'fac' → logprob: -13.875246047973633
    7. 'h' → logprob: -14.000246047973633
    8. '```' → logprob: -14.000246047973633
    9. '...' → logprob: -14.250246047973633
    10. ' permettre' → logprob: -14.750246047973633

Token 895: ' sur' (ID: 1512)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.5767797231674194
    2. 'H' → logprob: -0.8267797231674194
    3. '(' → logprob: -8.20177936553955
    4. ' =' → logprob: -8.82677936553955
    5. '(
' → logprob: -8.82677936553955
    6. '=' → logprob: -9.45177936553955
    7. ',' → logprob: -9.45177936553955
    8. '#' → logprob: -10.95177936553955
    9. '([' → logprob: -10.95177936553955
    10. ':' → logprob: -11.20177936553955

Token 896: ' n' (ID: 297)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0015617619501426816
    2. ' H' → logprob: -7.001561641693115
    3. '[' → logprob: -7.376561641693115
    4. ' [' → logprob: -11.001562118530273
    5. '[n' → logprob: -12.001562118530273
    6. 'n' → logprob: -14.626562118530273
    7. '(H' → logprob: -14.751562118530273
    8. ' ' → logprob: -15.751562118530273
    9. '[-' → logprob: -16.501562118530273
    10. '	H' → logprob: -16.876562118530273

Token 897: '+' (ID: 10)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.15576700866222382
    2. '(H' → logprob: -2.1557669639587402
    3. ' =' → logprob: -4.40576696395874
    4. '=' → logprob: -5.28076696395874
    5. '+' → logprob: -6.28076696395874
    6. '
' → logprob: -6.65576696395874
    7. '#' → logprob: -6.65576696395874
    8. '_H' → logprob: -6.78076696395874
    9. '.' → logprob: -6.90576696395874
    10. ',' → logprob: -7.28076696395874

Token 898: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000855597376357764
    2. '+' → logprob: -7.125855445861816
    3. '=' → logprob: -10.500855445861816
    4. '`' → logprob: -12.250855445861816
    5. '```' → logprob: -12.375855445861816
    6. '...' → logprob: -13.000855445861816
    7. ']' → logprob: -13.125855445861816
    8. 'H' → logprob: -13.500855445861816
    9. ')' → logprob: -13.625855445861816
    10. '(' → logprob: -13.625855445861816

Token 899: ' éléments' (ID: 57375)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.010663161054253578
    2. '(H' → logprob: -4.635663032531738
    3. '(
' → logprob: -8.010663032531738
    4. '(' → logprob: -9.135663032531738
    5. ',' → logprob: -9.135663032531738
    6. ' =' → logprob: -9.510663032531738
    7. '()
' → logprob: -10.010663032531738
    8. '()' → logprob: -10.135663032531738
    9. ' H' → logprob: -10.260663032531738
    10. '#' → logprob: -10.510663032531738

Token 900: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00011880126112373546
    2. '
' → logprob: -9.25011920928955
    3. ' =' → logprob: -12.00011920928955
    4. '(H' → logprob: -12.12511920928955
    5. ':' → logprob: -12.75011920928955
    6. ' H' → logprob: -12.87511920928955
    7. '()
' → logprob: -13.50011920928955
    8. '=' → logprob: -14.00011920928955
    9. 'h' → logprob: -14.37511920928955
    10. '#' → logprob: -14.75011920928955

Token 901: 'prob' (ID: 29823)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3384646475315094
    2. ')' → logprob: -1.338464617729187
    3. '.' → logprob: -4.088464736938477
    4. ').' → logprob: -5.713464736938477
    5. ')
' → logprob: -5.838464736938477
    6. '#' → logprob: -7.588464736938477
    7. ' H' → logprob: -8.088464736938477
    8. '(H' → logprob: -8.088464736938477
    9. ' )' → logprob: -8.463464736938477
    10. ',' → logprob: -8.838464736938477

Token 902: 'ablement' (ID: 63986)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0056066494435071945
    2. ' H' → logprob: -6.380606651306152
    3. ' =' → logprob: -6.380606651306152
    4. '=' → logprob: -6.880606651306152
    5. '[' → logprob: -7.630606651306152
    6. 's' → logprob: -8.880606651306152
    7. 'u' → logprob: -9.380606651306152
    8. 'l' → logprob: -9.630606651306152
    9. '=[]' → logprob: -10.005606651306152
    10. ']' → logprob: -10.380606651306152

Token 903: ' une' (ID: 2463)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.35657891631126404
    2. 'to' → logprob: -2.856578826904297
    3. ' H' → logprob: -2.981578826904297
    4. ')' → logprob: -3.231578826904297
    5. 'pour' → logprob: -3.481578826904297
    6. 'for' → logprob: -3.606578826904297
    7. ' pour' → logprob: -3.856578826904297
    8. ' to' → logprob: -4.231578826904297
    9. '0' → logprob: -4.731578826904297
    10. '[' → logprob: -5.231578826904297

Token 904: ' sent' (ID: 3860)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03127087652683258
    2. '[' → logprob: -3.656270980834961
    3. ')' → logprob: -5.906270980834961
    4. 'H' → logprob: -7.406270980834961
    5. ']' → logprob: -7.531270980834961
    6. ' ' → logprob: -7.656270980834961
    7. ' [' → logprob: -9.156270980834961
    8. '
' → logprob: -9.406270980834961
    9. '.append' → logprob: -9.656270980834961
    10. ' ]' → logprob: -9.906270980834961

Token 905: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08844726532697678
    2. 'inel' → logprob: -2.588447332382202
    3. 'H' → logprob: -6.463447093963623
    4. 'iel' → logprob: -6.588447093963623
    5. '```' → logprob: -6.713447093963623
    6. 'inal' → logprob: -6.838447093963623
    7. 'IN' → logprob: -7.088447093963623
    8. '#' → logprob: -7.588447093963623
    9. 'ine' → logprob: -7.713447093963623
    10. ')' → logprob: -8.213447570800781

Token 906: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.007238025311380625
    2. 'e' → logprob: -5.382237911224365
    3. 'elle' → logprob: -6.507237911224365
    4. 'ele' → logprob: -7.757237911224365
    5. 'nel' → logprob: -8.507238388061523
    6. 'al' → logprob: -9.382238388061523
    7. 'cel' → logprob: -9.757238388061523
    8. 'eel' → logprob: -9.757238388061523
    9. 'iel' → logprob: -10.132238388061523
    10. 'ce' → logprob: -10.132238388061523

Token 907: ')
' (ID: 446)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.527982771396637
    2. ')' → logprob: -1.7779827117919922
    3. 'H' → logprob: -1.7779827117919922
    4. ']' → logprob: -3.027982711791992
    5. '()' → logprob: -4.277982711791992
    6. ')
' → logprob: -5.652982711791992
    7. '(' → logprob: -6.527982711791992
    8. '(
' → logprob: -6.902982711791992
    9. '()
' → logprob: -7.277982711791992
    10. '.' → logprob: -7.277982711791992

Token 908: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -4.842555426876061e-06
    2. '
' → logprob: -12.875004768371582
    3. ' H' → logprob: -13.625004768371582
    4. ' =' → logprob: -14.625004768371582
    5. 'h' → logprob: -15.375004768371582
    6. '=' → logprob: -15.625004768371582
    7. ':' → logprob: -16.8750057220459
    8. '```' → logprob: -17.2500057220459
    9. '

' → logprob: -17.6250057220459
    10. '_H' → logprob: -17.7500057220459

Token 909: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003180921310558915
    2. ' =' → logprob: -5.753180980682373
    3. '()' → logprob: -13.128180503845215
    4. '.append' → logprob: -14.753180503845215
    5. '=[]' → logprob: -15.253180503845215
    6. '.=' → logprob: -15.378180503845215
    7. '＝' → logprob: -16.37818145751953
    8. '=list' → logprob: -16.50318145751953
    9. '.' → logprob: -16.62818145751953
    10. '(' → logprob: -17.25318145751953

Token 910: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -3.4121114822482923e-06
    2. ' LI' → logprob: -12.750003814697266
    3. 'LS' → logprob: -15.375003814697266
    4. 'L' → logprob: -15.625003814697266
    5. 'Li' → logprob: -18.125003814697266
    6. 'li' → logprob: -19.375003814697266
    7. '[' → logprob: -19.500003814697266
    8. ' ' → logprob: -20.250003814697266
    9. 'LL' → logprob: -20.375003814697266
    10. 'list' → logprob: -20.750003814697266

Token 911: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03641814738512039
    2. '()
' → logprob: -4.0364179611206055
    3. '()+' → logprob: -4.0364179611206055
    4. '()[' → logprob: -9.411417961120605
    5. '+' → logprob: -9.536417961120605
    6. '.append' → logprob: -9.536417961120605
    7. '().' → logprob: -9.911417961120605
    8. ' ()' → logprob: -10.036417961120605
    9. '();' → logprob: -10.036417961120605
    10. '(n' → logprob: -11.411417961120605

Token 912: ' +' (ID: 659)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.43261396884918213
    2. '
' → logprob: -1.4326139688491821
    3. 'H' → logprob: -2.9326138496398926
    4. '+' → logprob: -3.1826138496398926
    5. ' +' → logprob: -5.057613849639893
    6. '[' → logprob: -5.557613849639893
    7. '#' → logprob: -6.807613849639893
    8. '+
' → logprob: -6.807613849639893
    9. '+[' → logprob: -7.057613849639893
    10. '.' → logprob: -7.057613849639893

Token 913: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. ' [' → logprob: -12.250004768371582
    3. '[i' → logprob: -21.5000057220459
    4. '([' → logprob: -21.5000057220459
    5. ' ' → logprob: -22.0000057220459
    6. '[j' → logprob: -22.1250057220459
    7. '1' → logprob: -22.2500057220459
    8. '[
' → logprob: -22.2500057220459
    9. '[len' → logprob: -22.5000057220459
    10. '[n' → logprob: -22.6250057220459

Token 914: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009365935111418366
    2. '0' → logprob: -7.000936508178711
    3. 'INF' → logprob: -10.875936508178711
    4. '10' → logprob: -12.375936508178711
    5. '100' → logprob: -14.250936508178711
    6. '(' → logprob: -15.000936508178711
    7. 'float' → logprob: -15.250936508178711
    8. 'inf' → logprob: -15.500936508178711
    9. '-' → logprob: -15.625936508178711
    10. 'max' → logprob: -15.750936508178711

Token 915: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004228935576975346
    2. '0' → logprob: -5.8792290687561035
    3. ')' → logprob: -7.3792290687561035
    4. ' ]' → logprob: -7.7542290687561035
    5. '])' → logprob: -8.379228591918945
    6. '000' → logprob: -10.129228591918945
    7. '7' → logprob: -10.129228591918945
    8. ')]' → logprob: -11.129228591918945
    9. '00' → logprob: -11.879228591918945
    10. '6' → logprob: -12.254228591918945

Token 916: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05916931852698326
    2. '\n' → logprob: -3.309169292449951
    3. '#' → logprob: -4.434169292449951
    4. 'dp' → logprob: -6.559169292449951
    5. '```' → logprob: -6.934169292449951
    6. '\' → logprob: -7.309169292449951
    7. 'max' → logprob: -7.434169292449951
    8. '
' → logprob: -7.434169292449951
    9. 'd' → logprob: -7.434169292449951
    10. '<|end|>' → logprob: -7.434169292449951

Token 917: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014541896060109138
    2. 'stack' → logprob: -4.389542102813721
    3. 'ans' → logprob: -6.889542102813721
    4. 'res' → logprob: -8.389541625976562
    5. 'for' → logprob: -8.639541625976562
    6. 'd' → logprob: -8.889541625976562
    7. '#' → logprob: -9.014541625976562
    8. 'from' → logprob: -9.764541625976562
    9. 'prev' → logprob: -10.139541625976562
    10. 'DP' → logprob: -10.389541625976562

Token 918: 'isation' (ID: 6993)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49624431133270264
    2. 'z' → logprob: -1.3712443113327026
    3. 'INF' → logprob: -2.871244430541992
    4. '#' → logprob: -3.371244430541992
    5. 'stack' → logprob: -4.871244430541992
    6. 'ze' → logprob: -4.871244430541992
    7. 'n' → logprob: -4.871244430541992
    8. 'f' → logprob: -5.246244430541992
    9. 'H' → logprob: -5.496244430541992
    10. 'i' → logprob: -6.246244430541992

Token 919: ' du' (ID: 1462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012751903384923935
    2. 'stack' → logprob: -4.512752056121826
    3. 'ans' → logprob: -7.512752056121826
    4. 'd' → logprob: -8.262751579284668
    5. ' dp' → logprob: -8.887751579284668
    6. 'cnt' → logprob: -9.012751579284668
    7. 'count' → logprob: -9.387751579284668
    8. '#' → logprob: -9.887751579284668
    9. 'cost' → logprob: -10.012751579284668
    10. 'depth' → logprob: -10.137751579284668

Token 920: ' tableau' (ID: 67053)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.010227957740426064
    2. 'dp' → logprob: -4.635228157043457
    3. 'stk' → logprob: -8.135228157043457
    4. 'dq' → logprob: -9.885228157043457
    5. 'res' → logprob: -10.385228157043457
    6. 'deque' → logprob: -10.510228157043457
    7. 'ans' → logprob: -10.510228157043457
    8. 'st' → logprob: -10.635228157043457
    9. 'd' → logprob: -12.635228157043457
    10. 'lst' → logprob: -13.260228157043457

Token 921: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008700100006535649
    2. 'DP' → logprob: -7.875870227813721
    3. ' =' → logprob: -8.750869750976562
    4. '=' → logprob: -9.000869750976562
    5. 'ans' → logprob: -9.750869750976562
    6. 'stack' → logprob: -10.250869750976562
    7. 'D' → logprob: -10.875869750976562
    8. 'answer' → logprob: -11.500869750976562
    9. 'd' → logprob: -11.625869750976562
    10. ' dp' → logprob: -11.625869750976562

Token 922: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016500327736139297
    2. ' =' → logprob: -4.141500473022461
    3. 'dp' → logprob: -7.766500473022461
    4. '=[' → logprob: -10.141500473022461
    5. '0' → logprob: -13.891500473022461
    6. '_' → logprob: -15.016500473022461
    7. '_dp' → logprob: -15.266500473022461
    8. '[' → logprob: -15.391500473022461
    9. '=[]' → logprob: -15.641500473022461
    10. '_=' → logprob: -15.891500473022461

Token 923: 'programm' (ID: 85820)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -8.220573363360018e-05
    2. '[n' → logprob: -10.125082015991211
    3. '[-' → logprob: -10.625082015991211
    4. ' [' → logprob: -11.000082015991211
    5. '0' → logprob: -14.750082015991211
    6. '[I' → logprob: -15.750082015991211
    7. '[h' → logprob: -16.25008201599121
    8. ')' → logprob: -16.62508201599121
    9. 'H' → logprob: -16.62508201599121
    10. '[N' → logprob: -16.75008201599121

Token 924: 'ation' (ID: 387)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.111155390739441
    2. '[]' → logprob: -1.611155390739441
    3. ')' → logprob: -2.1111555099487305
    4. 'ation' → logprob: -2.3611555099487305
    5. ' =' → logprob: -2.8611555099487305
    6. ']' → logprob: -3.2361555099487305
    7. '=' → logprob: -3.6111555099487305
    8. '#' → logprob: -3.7361555099487305
    9. 'e' → logprob: -4.3611555099487305
    10. 'ma' → logprob: -4.7361555099487305

Token 925: ' dynamique' (ID: 98708)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5864231586456299
    2. ' =' → logprob: -0.8364231586456299
    3. '=[' → logprob: -4.836422920227051
    4. '=[]' → logprob: -6.461422920227051
    5. '[' → logprob: -7.586422920227051
    6. '[]' → logprob: -9.83642292022705
    7. '_' → logprob: -9.83642292022705
    8. ']' → logprob: -9.96142292022705
    9. '=[]
' → logprob: -10.08642292022705
    10. '[n' → logprob: -10.58642292022705

Token 926: ')
' (ID: 446)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007689916528761387
    2. '=' → logprob: -4.882689952850342
    3. '=[' → logprob: -9.757689476013184
    4. '[' → logprob: -11.882689476013184
    5. ']' → logprob: -12.507689476013184
    6. '_' → logprob: -12.757689476013184
    7. ' ' → logprob: -13.007689476013184
    8. ',' → logprob: -13.132689476013184
    9. ' =[' → logprob: -13.132689476013184
    10. ')' → logprob: -13.382689476013184

Token 927: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06197462975978851
    2. '[' → logprob: -2.81197452545166
    3. ' dp' → logprob: -12.81197452545166
    4. ' [' → logprob: -12.81197452545166
    5. '[-' → logprob: -13.93697452545166
    6. ' =' → logprob: -15.18697452545166
    7. '=[' → logprob: -15.93697452545166
    8. '0' → logprob: -16.311975479125977
    9. '_dp' → logprob: -16.436975479125977
    10. '=' → logprob: -16.811975479125977

Token 928: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -11.750007629394531
    3. ' dp' → logprob: -16.62500762939453
    4. '[-' → logprob: -19.12500762939453
    5. ' [' → logprob: -20.87500762939453
    6. 'd' → logprob: -20.87500762939453
    7. '0' → logprob: -21.25000762939453
    8. '	dp' → logprob: -21.37500762939453
    9. '#' → logprob: -21.50000762939453
    10. '_dp' → logprob: -22.37500762939453

Token 929: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869868814945221
    2. '=' → logprob: -1.1369868516921997
    3. '=[' → logprob: -9.13698673248291
    4. '=[]' → logprob: -12.51198673248291
    5. '[' → logprob: -13.63698673248291
    6. 'dp' → logprob: -14.01198673248291
    7. ' =[' → logprob: -14.13698673248291
    8. '=[[' → logprob: -14.88698673248291
    9. '＝' → logprob: -15.51198673248291
    10. ' ' → logprob: -15.76198673248291

Token 930: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0014104703441262245
    2. '[-' → logprob: -6.876410484313965
    3. ' [' → logprob: -9.001410484313965
    4. '[n' → logprob: -9.001410484313965
    5. 'dp' → logprob: -9.001410484313965
    6. '[N' → logprob: -13.626410484313965
    7. '[I' → logprob: -13.751410484313965
    8. '=[' → logprob: -14.251410484313965
    9. '[len' → logprob: -14.376410484313965
    10. '[in' → logprob: -14.626410484313965

Token 931: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011362211778759956
    2. ' =' → logprob: -4.511362075805664
    3. '=[' → logprob: -8.261362075805664
    4. 'dp' → logprob: -10.511362075805664
    5. 'de' → logprob: -11.386362075805664
    6. '[' → logprob: -11.511362075805664
    7. ' de' → logprob: -12.886362075805664
    8. '=[]' → logprob: -13.886362075805664
    9. '=[[' → logprob: -14.386362075805664
    10. 'of' → logprob: -14.761362075805664

Token 932: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.240659475326538
    2. 'int' → logprob: -1.240659475326538
    3. '[n' → logprob: -1.490659475326538
    4. '[int' → logprob: -2.115659475326538
    5. '[' → logprob: -2.865659475326538
    6. 'n' → logprob: -4.865659713745117
    7. 'size' → logprob: -5.615659713745117
    8. 'float' → logprob: -5.740659713745117
    9. 'length' → logprob: -7.115659713745117
    10. '(n' → logprob: -7.115659713745117

Token 933: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00016229959146585315
    2. ' +' → logprob: -8.750162124633789
    3. 'n' → logprob: -13.750162124633789
    4. '(n' → logprob: -14.125162124633789
    5. '[' → logprob: -14.500162124633789
    6. '[n' → logprob: -15.125162124633789
    7. '+[' → logprob: -15.500162124633789
    8. ' n' → logprob: -15.750162124633789
    9. '=' → logprob: -15.750162124633789
    10. '+
' → logprob: -16.00016212463379

Token 934: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4923273026943207
    2. '(n' → logprob: -1.617327332496643
    3. '1' → logprob: -1.867327332496643
    4. 'n' → logprob: -3.4923272132873535
    5. '+' → logprob: -5.6173272132873535
    6. '(H' → logprob: -7.9923272132873535
    7. '[n' → logprob: -8.617327690124512
    8. '(' → logprob: -8.742327690124512
    9. '3' → logprob: -8.992327690124512
    10. ' n' → logprob: -9.117327690124512

Token 935: ' éléments' (ID: 57375)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05153944343328476
    2. ' =' → logprob: -4.051539421081543
    3. '[int' → logprob: -4.926539421081543
    4. '=' → logprob: -5.176539421081543
    5. ' [' → logprob: -5.176539421081543
    6. '0' → logprob: -5.426539421081543
    7. '[-' → logprob: -5.801539421081543
    8. '=[' → logprob: -6.926539421081543
    9. '+' → logprob: -7.051539421081543
    10. 'dp' → logprob: -7.176539421081543

Token 936: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2031775265932083
    2. ' =' → logprob: -1.703177571296692
    3. 'dp' → logprob: -6.578177452087402
    4. '=[' → logprob: -8.078177452087402
    5. '[' → logprob: -9.953177452087402
    6. '_dp' → logprob: -12.703177452087402
    7. '0' → logprob: -12.828177452087402
    8. '_' → logprob: -13.078177452087402
    9. '(dp' → logprob: -13.703177452087402
    10. ',' → logprob: -13.703177452087402

Token 937: ' chacun' (ID: 52136)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39254847168922424
    2. 'dp' → logprob: -1.1425484418869019
    3. '0' → logprob: -5.892548561096191
    4. ' [' → logprob: -6.642548561096191
    5. ' dp' → logprob: -7.767548561096191
    6. 'INF' → logprob: -7.767548561096191
    7. '[-' → logprob: -8.017548561096191
    8. '=' → logprob: -8.892548561096191
    9. '[n' → logprob: -9.517548561096191
    10. ' =' → logprob: -9.642548561096191

Token 938: ' initial' (ID: 4871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008065330912359059
    2. '=[' → logprob: -8.12580680847168
    3. ' =' → logprob: -8.62580680847168
    4. '=-' → logprob: -9.50080680847168
    5. 'est' → logprob: -10.00080680847168
    6. 'à' → logprob: -10.37580680847168
    7. '[' → logprob: -10.37580680847168
    8. '0' → logprob: -10.37580680847168
    9. 'val' → logprob: -11.00080680847168
    10. '=[]' → logprob: -11.00080680847168

Token 939: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.016638802364468575
    2. 'ized' → logprob: -4.51663875579834
    3. 'isée' → logprob: -5.89163875579834
    4. 'isés' → logprob: -6.51663875579834
    5. 'iz' → logprob: -7.01663875579834
    6. 'ised' → logprob: -9.26663875579834
    7. 'isées' → logprob: -9.39163875579834
    8. 'is' → logprob: -9.39163875579834
    9. '[' → logprob: -9.76663875579834
    10. 'ement' → logprob: -10.39163875579834

Token 940: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.3507567048072815
    2. '=' → logprob: -1.6007566452026367
    3. ' à' → logprob: -2.6007566452026367
    4. '[' → logprob: -4.600756645202637
    5. ' =' → logprob: -5.850756645202637
    6. '0' → logprob: -6.100756645202637
    7. '=[' → logprob: -6.350756645202637
    8. ''à' → logprob: -6.725756645202637
    9. 'avec' → logprob: -7.350756645202637
    10. 'with' → logprob: -8.600756645202637

Token 941: ' ' (ID: 220)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.11468065530061722
    2. '0' → logprob: -2.489680767059326
    3. 'float' → logprob: -3.989680767059326
    4. 'math' → logprob: -5.989680767059326
    5. '-' → logprob: -6.489680767059326
    6. '10' → logprob: -6.989680767059326
    7. '-INF' → logprob: -7.239680767059326
    8. 'inf' → logprob: -7.489680767059326
    9. '-inf' → logprob: -8.114680290222168
    10. '[' → logprob: -8.614680290222168

Token 942: '1' (ID: 16)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.16038061678409576
    2. '0' → logprob: -2.0353806018829346
    3. 'float' → logprob: -4.660380840301514
    4. '-INF' → logprob: -5.910380840301514
    5. '-' → logprob: -6.535380840301514
    6. '-inf' → logprob: -6.785380840301514
    7. 'math' → logprob: -6.785380840301514
    8. '[' → logprob: -7.285380840301514
    9. 'inf' → logprob: -7.535380840301514
    10. '10' → logprob: -8.535380363464355

Token 943: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1210262775421143
    2. '([' → logprob: -1.7460262775421143
    3. ' =' → logprob: -1.8710262775421143
    4. '=' → logprob: -1.8710262775421143
    5. '[' → logprob: -1.8710262775421143
    6. '(dp' → logprob: -4.746026039123535
    7. '_dp' → logprob: -4.996026039123535
    8. 'for' → logprob: -5.746026039123535
    9. ' [' → logprob: -5.746026039123535
    10. '=[' → logprob: -5.871026039123535

Token 944: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.849109119386412e-06
    2. 'd' → logprob: -12.000009536743164
    3. ' dp' → logprob: -12.750009536743164
    4. '[' → logprob: -14.500009536743164
    5. '_dp' → logprob: -16.250009536743164
    6. ' =' → logprob: -16.875009536743164
    7. 'def' → logprob: -17.000009536743164
    8. '```' → logprob: -17.625009536743164
    9. '
' → logprob: -18.125009536743164
    10. 'DP' → logprob: -18.750009536743164

Token 945: ' Ce' (ID: 14228)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9361264946837764e-07
    2. ' dp' → logprob: -15.875
    3. '[' → logprob: -18.0
    4. '```' → logprob: -18.375
    5. 'd' → logprob: -19.25
    6. '
' → logprob: -20.0
    7. '_dp' → logprob: -20.375
    8. '#' → logprob: -20.875
    9. '	dp' → logprob: -20.875
    10. 'dt' → logprob: -21.25

Token 946: ' tableau' (ID: 67053)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9637756943702698
    2. ' =' → logprob: -1.213775634765625
    3. '=' → logprob: -1.963775634765625
    4. '_' → logprob: -2.463775634765625
    5. ' ' → logprob: -3.338775634765625
    6. 'n' → logprob: -3.963775634765625
    7. '.' → logprob: -5.088775634765625
    8. '#' → logprob: -5.213775634765625
    9. 's' → logprob: -5.338775634765625
    10. '+' → logprob: -5.588775634765625

Token 947: ' stock' (ID: 6546)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43462908267974854
    2. '=' → logprob: -1.0596290826797485
    3. '_' → logprob: -5.559628963470459
    4. '[' → logprob: -6.434628963470459
    5. 'dp' → logprob: -8.934629440307617
    6. '[:]' → logprob: -9.309629440307617
    7. '_dp' → logprob: -9.559629440307617
    8. '=[' → logprob: -10.059629440307617
    9. ' ' → logprob: -11.059629440307617
    10. ',' → logprob: -11.184629440307617

Token 948: 'e' (ID: 68)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7055700421333313
    2. '[' → logprob: -1.0805699825286865
    3. '=' → logprob: -1.9555699825286865
    4. '=[' → logprob: -5.080570220947266
    5. 'dp' → logprob: -5.330570220947266
    6. ' [' → logprob: -5.330570220947266
    7. 'e' → logprob: -6.455570220947266
    8. ' de' → logprob: -6.455570220947266
    9. '0' → logprob: -7.080570220947266
    10. '[:]' → logprob: -7.080570220947266

Token 949: ' à' (ID: 1221)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6105020046234131
    2. '[' → logprob: -0.9855020046234131
    3. 'dp' → logprob: -3.110502004623413
    4. '0' → logprob: -4.235502243041992
    5. ' [' → logprob: -4.735502243041992
    6. ']' → logprob: -5.610502243041992
    7. '=' → logprob: -5.860502243041992
    8. ' ' → logprob: -5.860502243041992
    9. ' =' → logprob: -6.485502243041992
    10. ')' → logprob: -6.735502243041992

Token 950: ' chaque' (ID: 21194)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3350300192832947
    2. '[' → logprob: -1.5850300788879395
    3. '[n' → logprob: -2.5850300788879395
    4. 'n' → logprob: -6.3350300788879395
    5. ' [' → logprob: -7.5850300788879395
    6. '[i' → logprob: -7.7100300788879395
    7. ' ' → logprob: -8.085029602050781
    8. '0' → logprob: -8.210029602050781
    9. '[N' → logprob: -8.960029602050781
    10. 'INF' → logprob: -9.210029602050781

Token 951: ' indice' (ID: 90848)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.567739725112915
    2. '0' → logprob: -1.942739725112915
    3. 'i' → logprob: -1.942739725112915
    4. ']' → logprob: -2.317739725112915
    5. ' i' → logprob: -3.567739725112915
    6. ')' → logprob: -5.317739486694336
    7. '[i' → logprob: -5.692739486694336
    8. ' ' → logprob: -5.942739486694336
    9. '1' → logprob: -6.192739486694336
    10. '_i' → logprob: -6.192739486694336

Token 952: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4857412278652191
    2. ' dp' → logprob: -1.6107412576675415
    3. '0' → logprob: -2.110741138458252
    4. '1' → logprob: -3.735741138458252
    5. ' =' → logprob: -3.860741138458252
    6. ' ' → logprob: -4.735741138458252
    7. '=' → logprob: -5.735741138458252
    8. ')' → logprob: -6.110741138458252
    9. '_' → logprob: -6.610741138458252
    10. '[' → logprob: -7.610741138458252

Token 953: ''état' (ID: 116357)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12244223058223724
    2. ' ' → logprob: -3.1224422454833984
    3. '=' → logprob: -3.4974422454833984
    4. '0' → logprob: -4.497442245483398
    5. '[' → logprob: -4.872442245483398
    6. 'he' → logprob: -5.372442245483398
    7. 'mp' → logprob: -5.497442245483398
    8. 'n' → logprob: -5.997442245483398
    9. ' =' → logprob: -6.497442245483398
    10. 'e' → logprob: -6.622442245483398

Token 954: ' courant' (ID: 74694)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3927295207977295
    2. '[' → logprob: -2.3927295207977295
    3. ' =' → logprob: -2.5177295207977295
    4. 'dp' → logprob: -2.5177295207977295
    5. '_dp' → logprob: -3.7677295207977295
    6. ' _' → logprob: -4.267729759216309
    7. '=' → logprob: -4.517729759216309
    8. 's' → logprob: -5.642729759216309
    9. ' dp' → logprob: -5.642729759216309
    10. '[]' → logprob: -5.892729759216309

Token 955: ' des' (ID: 731)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.043607525527477264
    2. ' =' → logprob: -3.793607473373413
    3. ' dp' → logprob: -4.543607711791992
    4. ',' → logprob: -5.668607711791992
    5. '_dp' → logprob: -6.043607711791992
    6. '=' → logprob: -6.543607711791992
    7. '_' → logprob: -7.168607711791992
    8. '.' → logprob: -8.543607711791992
    9. '[' → logprob: -8.543607711791992
    10. '#' → logprob: -8.543607711791992

Token 956: ' sous' (ID: 14487)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03584519773721695
    2. ' dp' → logprob: -3.5358452796936035
    3. '1' → logprob: -5.9108452796936035
    4. '0' → logprob: -6.0358452796936035
    5. ' ' → logprob: -8.285844802856445
    6. 'l' → logprob: -8.410844802856445
    7. ' la' → logprob: -8.660844802856445
    8. ' l' → logprob: -10.410844802856445
    9. 'la' → logprob: -10.535844802856445
    10. 'H' → logprob: -10.785844802856445

Token 957: '-r' (ID: 6335)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27343589067459106
    2. '_dp' → logprob: -1.6484358310699463
    3. '   ' → logprob: -4.773436069488525
    4. 'pro' → logprob: -5.148436069488525
    5. '_max' → logprob: -5.398436069488525
    6. 'max' → logprob: -5.398436069488525
    7. ' ' → logprob: -5.648436069488525
    8. ' dp' → logprob: -6.023436069488525
    9. 's' → logprob: -6.148436069488525
    10. '_d' → logprob: -6.148436069488525

Token 958: 'és' (ID: 1756)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6466742753982544
    2. 'ep' → logprob: -1.7716742753982544
    3. 'és' → logprob: -2.271674156188965
    4. 'éc' → logprob: -3.271674156188965
    5. 'ec' → logprob: -3.396674156188965
    6. 'ép' → logprob: -3.771674156188965
    7. 'es' → logprob: -4.021674156188965
    8. 'ange' → logprob: -4.021674156188965
    9. 'ang' → logprob: -4.646674156188965
    10. '_dp' → logprob: -4.646674156188965

Token 959: 'ult' (ID: 576)
  Prédit: 'ult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.4423404932022095
    2. 'ultat' → logprob: -1.0673404932022095
    3. 'olutions' → logprob: -5.44234037399292
    4. 'istance' → logprob: -5.81734037399292
    5. 'olution' → logprob: -6.31734037399292
    6. 'olu' → logprob: -7.06734037399292
    7. '#' → logprob: -7.56734037399292
    8. 'u' → logprob: -7.81734037399292
    9. 'umé' → logprob: -7.94234037399292
    10. 'ul' → logprob: -8.067340850830078

Token 960: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.3632534146308899
    2. 'at' → logprob: -1.4882533550262451
    3. '[' → logprob: -2.738253355026245
    4. '[i' → logprob: -5.613253593444824
    5. 'ultat' → logprob: -5.738253593444824
    6. '[]' → logprob: -5.988253593444824
    7. 'dp' → logprob: -6.488253593444824
    8. 'aux' → logprob: -7.238253593444824
    9. 'ult' → logprob: -7.738253593444824
    10. 'umé' → logprob: -8.238253593444824

Token 961: ' dyn' (ID: 44535)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13303440809249878
    2. '_dp' → logprob: -2.5080344676971436
    3. ' =' → logprob: -3.3830344676971436
    4. ' dp' → logprob: -5.7580342292785645
    5. '=' → logprob: -6.1330342292785645
    6. '
' → logprob: -6.6330342292785645
    7. ',' → logprob: -7.0080342292785645
    8. '_' → logprob: -7.2580342292785645
    9. '(dp' → logprob: -8.133034706115723
    10. '[' → logprob: -8.383034706115723

Token 962: 'amiques' (ID: 195784)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9584202766418457
    2. 'é' → logprob: -1.9584202766418457
    3. 'dp' → logprob: -2.4584202766418457
    4. 'ér' → logprob: -2.7084202766418457
    5. 'ép' → logprob: -3.7084202766418457
    6. 'pé' → logprob: -3.8334202766418457
    7. 'éré' → logprob: -4.083420276641846
    8. 'po' → logprob: -4.208420276641846
    9. 'iné' → logprob: -4.333420276641846
    10. 'ult' → logprob: -4.333420276641846

Token 963: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013755830936133862
    2. '_dp' → logprob: -5.513755798339844
    3. ' dp' → logprob: -5.638755798339844
    4. ' =' → logprob: -5.763755798339844
    5. '
' → logprob: -6.888755798339844
    6. '[' → logprob: -7.388755798339844
    7. ',' → logprob: -7.763755798339844
    8. '=' → logprob: -7.888755798339844
    9. '(dp' → logprob: -8.888755798339844
    10. ']' → logprob: -9.388755798339844

Token 964: ' l' (ID: 305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4264383614063263
    2. 'i' → logprob: -1.301438331604004
    3. 'H' → logprob: -3.551438331604004
    4. 'l' → logprob: -3.926438331604004
    5. '0' → logprob: -5.301438331604004
    6. ' i' → logprob: -5.426438331604004
    7. 'dp' → logprob: -5.426438331604004
    8. '1' → logprob: -5.551438331604004
    9. '_i' → logprob: -6.801438331604004
    10. 'range' → logprob: -6.926438331604004

Token 965: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3093169331550598
    2. 'dp' → logprob: -2.434316873550415
    3. 'range' → logprob: -3.184316873550415
    4. 'e' → logprob: -3.184316873550415
    5. 'n' → logprob: -4.309317111968994
    6. ''' → logprob: -4.934317111968994
    7. '''' → logprob: -5.059317111968994
    8. 'H' → logprob: -5.184317111968994
    9. ' range' → logprob: -5.184317111968994
    10. ''H' → logprob: -5.309317111968994

Token 966: 'it' (ID: 278)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7324514389038086
    2. '_' → logprob: -2.2324514389038086
    3. 'H' → logprob: -2.3574514389038086
    4. ')' → logprob: -2.3574514389038086
    5. ' i' → logprob: -2.9824514389038086
    6. 'range' → logprob: -3.1074514389038086
    7. 'dp' → logprob: -3.3574514389038086
    8. 'n' → logprob: -3.7324514389038086
    9. ' H' → logprob: -4.357451438903809
    10. '+' → logprob: -4.607451438903809

Token 967: 'ération' (ID: 24977)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9282365441322327
    2. 'dp' → logprob: -1.928236484527588
    3. 'ème' → logprob: -2.428236484527588
    4. 'é' → logprob: -2.553236484527588
    5. 'e' → logprob: -3.053236484527588
    6. 'p' → logprob: -3.678236484527588
    7. 'em' → logprob: -4.303236484527588
    8. '  ' → logprob: -4.303236484527588
    9. ' ' → logprob: -4.428236484527588
    10. 'ep' → logprob: -4.428236484527588

Token 968: ' actuelle' (ID: 104951)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06978490948677063
    2. ' =' → logprob: -3.1947848796844482
    3. '_dp' → logprob: -4.694785118103027
    4. '=' → logprob: -4.819785118103027
    5. ' dp' → logprob: -5.819785118103027
    6. '[' → logprob: -6.444785118103027
    7. '(dp' → logprob: -6.819785118103027
    8. '
' → logprob: -6.819785118103027
    9. ',' → logprob: -7.069785118103027
    10. '_' → logprob: -7.944785118103027

Token 969: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007086999248713255
    2. '
' → logprob: -5.757087230682373
    3. '[' → logprob: -6.382087230682373
    4. ' dp' → logprob: -6.757087230682373
    5. '_dp' → logprob: -7.632087230682373
    6. ' =' → logprob: -8.507086753845215
    7. '=' → logprob: -9.257086753845215
    8. ',' → logprob: -9.632086753845215
    9. '(dp' → logprob: -10.007086753845215
    10. 'd' → logprob: -10.757086753845215

Token 970: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0921942703134846e-05
    2. ' dp' → logprob: -12.37501049041748
    3. 'd' → logprob: -13.25001049041748
    4. '```' → logprob: -13.75001049041748
    5. ' =' → logprob: -13.87501049041748
    6. '
' → logprob: -14.00001049041748
    7. '[' → logprob: -14.00001049041748
    8. '=' → logprob: -14.62501049041748
    9. '_dp' → logprob: -15.25001049041748
    10. '`' → logprob: -16.000011444091797

Token 971: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143194496631622
    2. ' =' → logprob: -1.7014319896697998
    3. '=[' → logprob: -11.326432228088379
    4. '[' → logprob: -12.576432228088379
    5. '=[]' → logprob: -13.826432228088379
    6. '[:]' → logprob: -15.076432228088379
    7. ' =[' → logprob: -15.076432228088379
    8. '＝' → logprob: -15.201432228088379
    9. '.' → logprob: -15.326432228088379
    10. ']' → logprob: -15.326432228088379

Token 972: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. ' [' → logprob: -12.500003814697266
    3. '[n' → logprob: -16.625003814697266
    4. '([' → logprob: -20.625003814697266
    5. '   ' → logprob: -21.250003814697266
    6. '=[' → logprob: -22.000003814697266
    7. '1' → logprob: -22.125003814697266
    8. '[len' → logprob: -22.125003814697266
    9. ' ' → logprob: -22.375003814697266
    10. '[i' → logprob: -23.250003814697266

Token 973: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '0' → logprob: -17.625
    4. '   ' → logprob: -19.75
    5. '

' → logprob: -20.75
    6. ']' → logprob: -20.875
    7. '１' → logprob: -21.125
    8. '```' → logprob: -21.25
    9. '  ' → logprob: -21.3125
    10. '
' → logprob: -21.3125

Token 974: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001357136876322329
    2. ']*(' → logprob: -6.876357078552246
    3. ']*' → logprob: -8.876357078552246
    4. 'for' → logprob: -9.126357078552246
    5. ' for' → logprob: -9.626357078552246
    6. ']+' → logprob: -11.751357078552246
    7. '(n' → logprob: -14.126357078552246
    8. ' ]' → logprob: -15.001357078552246
    9. ')' → logprob: -15.126357078552246
    10. '()]' → logprob: -15.751357078552246

Token 975: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8721092939376831
    2. ']' → logprob: -0.9971092939376831
    3. 'for' → logprob: -1.622109293937683
    4. ']*(' → logprob: -4.622109413146973
    5. ']*' → logprob: -6.247109413146973
    6. ']+' → logprob: -6.497109413146973
    7. '*' → logprob: -6.622109413146973
    8. '*(' → logprob: -8.247109413146973
    9. '+' → logprob: -8.497109413146973
    10. '(n' → logprob: -9.122109413146973

Token 976: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011212585377506912
    2. '(' → logprob: -9.750112533569336
    3. ' (' → logprob: -10.375112533569336
    4. '(len' → logprob: -10.875112533569336
    5. '((' → logprob: -13.250112533569336
    6. 'n' → logprob: -14.000112533569336
    7. '(N' → logprob: -14.750112533569336
    8. '(
' → logprob: -15.750112533569336
    9. '
' → logprob: -15.875112533569336
    10. '(max' → logprob: -15.875112533569336

Token 977: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03810597583651543
    2. 'n' → logprob: -3.2881059646606445
    3. ' (' → logprob: -10.038105964660645
    4. '(len' → logprob: -11.663105964660645
    5. '(' → logprob: -12.038105964660645
    6. 'len' → logprob: -12.663105964660645
    7. ' n' → logprob: -13.038105964660645
    8. '(N' → logprob: -15.663105964660645
    9. '
' → logprob: -15.788105964660645
    10. '((' → logprob: -15.913105964660645

Token 978: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003806257154792547
    2. ' +' → logprob: -7.875380516052246
    3. '+
' → logprob: -14.875380516052246
    4. '1' → logprob: -17.250381469726562
    5. '+n' → logprob: -17.250381469726562
    6. ')' → logprob: -17.500381469726562
    7. '＋' → logprob: -17.625381469726562
    8. '()+' → logprob: -17.750381469726562
    9. ')+' → logprob: -18.500381469726562
    10. '+)' → logprob: -19.250381469726562

Token 979: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007101670489646494
    2. '2' → logprob: -7.2507100105285645
    3. ' ' → logprob: -15.500710487365723
    4. '
' → logprob: -17.500709533691406
    5. '   ' → logprob: -17.875709533691406
    6. '１' → logprob: -18.813209533691406
    7. '```' → logprob: -18.938209533691406
    8. '

' → logprob: -19.250709533691406
    9. '+' → logprob: -19.375709533691406
    10. '۱' → logprob: -19.688209533691406

Token 980: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012509774416685104
    2. '2' → logprob: -4.387509822845459
    3. ' ' → logprob: -16.512510299682617
    4. '   ' → logprob: -18.137510299682617
    5. '
' → logprob: -18.200010299682617
    6. '```' → logprob: -18.450010299682617
    7. '１' → logprob: -18.637510299682617
    8. '

' → logprob: -18.950010299682617
    9. '`' → logprob: -19.325010299682617
    10. '۱' → logprob: -19.512510299682617

Token 981: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ']' → logprob: -14.00000286102295
    3. ' )' → logprob: -14.25000286102295
    4. ')
' → logprob: -14.37500286102295
    5. ')]' → logprob: -14.62500286102295
    6. ')#' → logprob: -16.125001907348633
    7. ')`' → logprob: -17.250001907348633
    8. '),' → logprob: -17.500001907348633
    9. '#' → logprob: -17.750001907348633
    10. '))' → logprob: -17.875001907348633

Token 982: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02501417137682438
    2. '
' → logprob: -3.9000141620635986
    3. ' for' → logprob: -5.775014400482178
    4. 'i' → logprob: -7.275014400482178
    5. ' 
' → logprob: -8.90001392364502
    6. '\n' → logprob: -9.27501392364502
    7. '#' → logprob: -9.65001392364502
    8. ')' → logprob: -9.77501392364502
    9. 'dp' → logprob: -10.27501392364502
    10. '.' → logprob: -10.27501392364502

Token 983: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4736459888808895e-05
    2. 'i' → logprob: -11.500014305114746
    3. ' for' → logprob: -13.625014305114746
    4. 'f' → logprob: -14.750014305114746
    5. '
' → logprob: -14.875014305114746
    6. 'result' → logprob: -15.250014305114746
    7. '#' → logprob: -15.250014305114746
    8. 'ans' → logprob: -15.500014305114746
    9. 'stack' → logprob: -15.500014305114746
    10. '_' → logprob: -15.750014305114746

Token 984: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47450950741767883
    2. 'c' → logprob: -1.2245094776153564
    3. 'f' → logprob: -3.2245094776153564
    4. 'cle' → logprob: -3.5995094776153564
    5. 'r' → logprob: -5.0995097160339355
    6. '#' → logprob: -5.5995097160339355
    7. 'k' → logprob: -6.2245097160339355
    8. 'e' → logprob: -6.2245097160339355
    9. '
' → logprob: -7.4745097160339355
    10. 'cl' → logprob: -7.7245097160339355

Token 985: ' principale' (ID: 68926)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013319060672074556
    2. ' for' → logprob: -6.751331806182861
    3. 'i' → logprob: -9.00133228302002
    4. '
' → logprob: -10.75133228302002
    5. '_' → logprob: -11.12633228302002
    6. ' 
' → logprob: -14.87633228302002
    7. '_for' → logprob: -14.87633228302002
    8. 'f' → logprob: -15.25133228302002
    9. ':' → logprob: -15.37633228302002
    10. 'range' → logprob: -15.37633228302002

Token 986: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024169839918613434
    2. ' for' → logprob: -3.774169921875
    3. '
' → logprob: -7.024169921875
    4. 'i' → logprob: -11.399169921875
    5. ' 
' → logprob: -11.524169921875
    6. ':' → logprob: -11.649169921875
    7. ' i' → logprob: -14.399169921875
    8. '

' → logprob: -14.524169921875
    9. ',' → logprob: -14.774169921875
    10. '_' → logprob: -15.024169921875

Token 987: ' traitement' (ID: 42434)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5208954215049744
    2. 'range' → logprob: -1.2708954811096191
    3. 'i' → logprob: -2.395895481109619
    4. ' range' → logprob: -3.520895481109619
    5. ' i' → logprob: -5.895895481109619
    6. ' _' → logprob: -7.145895481109619
    7. 'n' → logprob: -7.645895481109619
    8. '_range' → logprob: -8.020895004272461
    9. 'for' → logprob: -8.895895004272461
    10. '_i' → logprob: -9.020895004272461

Token 988: ' dynamique' (ID: 98708)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.547789674485102e-05
    2. 'i' → logprob: -11.000035285949707
    3. ' for' → logprob: -11.250035285949707
    4. '
' → logprob: -12.125035285949707
    5. 'f' → logprob: -15.875035285949707
    6. '_' → logprob: -17.375036239624023
    7. '```' → logprob: -17.375036239624023
    8. ':' → logprob: -18.125036239624023
    9. '	for' → logprob: -18.375036239624023
    10. '

' → logprob: -18.875036239624023

Token 989: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022344745695590973
    2. ' for' → logprob: -4.147344589233398
    3. '
' → logprob: -5.147344589233398
    4. ':' → logprob: -7.897344589233398
    5. '\n' → logprob: -9.772344589233398
    6. '' → logprob: -11.147344589233398
    7. ' 
' → logprob: -11.772344589233398
    8. 'i' → logprob: -12.647344589233398
    9. '```' → logprob: -12.647344589233398
    10. ':
' → logprob: -12.772344589233398

Token 990: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008411920862272382
    2. ' for' → logprob: -7.12584114074707
    3. '
' → logprob: -10.25084114074707
    4. 'i' → logprob: -14.25084114074707
    5. '_' → logprob: -14.75084114074707
    6. 'range' → logprob: -16.37584114074707
    7. 'f' → logprob: -16.75084114074707
    8. ' 
' → logprob: -16.75084114074707
    9. '

' → logprob: -17.00084114074707
    10. '	for' → logprob: -17.12584114074707

Token 991: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006631647702306509
    2. ' i' → logprob: -5.131631851196289
    3. '_' → logprob: -7.881631851196289
    4. '_i' → logprob: -9.131631851196289
    5. 'j' → logprob: -9.881631851196289
    6. 'h' → logprob: -10.256631851196289
    7. 'k' → logprob: -10.506631851196289
    8. 'x' → logprob: -10.881631851196289
    9. '(i' → logprob: -11.006631851196289
    10. 'r' → logprob: -11.881631851196289

Token 992: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.113368459045887
    2. ' i' → logprob: -2.238368511199951
    3. '_i' → logprob: -8.613368034362793
    4. 'j' → logprob: -9.238368034362793
    5. 'x' → logprob: -9.863368034362793
    6. 'k' → logprob: -10.113368034362793
    7. '_' → logprob: -10.488368034362793
    8. 'h' → logprob: -10.488368034362793
    9. ' j' → logprob: -10.738368034362793
    10. ' _' → logprob: -11.238368034362793

Token 993: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38550806045532227
    2. ' i' → logprob: -1.2605080604553223
    3. '_' → logprob: -3.7605080604553223
    4. ' in' → logprob: -5.010508060455322
    5. ' _' → logprob: -5.635508060455322
    6. 'for' → logprob: -6.885508060455322
    7. ' for' → logprob: -7.260508060455322
    8. 'in' → logprob: -7.260508060455322
    9. '_i' → logprob: -8.635507583618164
    10. ',' → logprob: -9.635507583618164

Token 994: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48095324635505676
    2. 'in' → logprob: -0.9809532165527344
    3. ',' → logprob: -5.105953216552734
    4. ':' → logprob: -8.480953216552734
    5. 'for' → logprob: -8.480953216552734
    6. 'range' → logprob: -9.105953216552734
    7. ' ' → logprob: -10.105953216552734
    8. 'n' → logprob: -10.230953216552734
    9. ')' → logprob: -10.730953216552734
    10. ' :' → logprob: -10.980953216552734

Token 995: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001398929744027555
    2. ' range' → logprob: -8.875140190124512
    3. 'rang' → logprob: -18.000139236450195
    4. '   ' → logprob: -18.250139236450195
    5. 'la' → logprob: -18.250139236450195
    6. '	range' → logprob: -18.500139236450195
    7. '(range' → logprob: -19.000139236450195
    8. ' ' → logprob: -19.250139236450195
    9. '  ' → logprob: -19.250139236450195
    10. '

' → logprob: -19.625139236450195

Token 996: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -13.875001907348633
    3. ' range' → logprob: -14.000001907348633
    4. 'la' → logprob: -16.000001907348633
    5. '0' → logprob: -16.750001907348633
    6. '2' → logprob: -16.875001907348633
    7. 'H' → logprob: -17.375001907348633
    8. 'l' → logprob: -17.875001907348633
    9. '(range' → logprob: -18.625001907348633
    10. 'rang' → logprob: -18.875001907348633

Token 997: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14178700745105743
    2. ',n' → logprob: -2.766787052154541
    3. ' à' → logprob: -3.766787052154541
    4. ' in' → logprob: -4.391787052154541
    5. ':' → logprob: -5.266787052154541
    6. 'range' → logprob: -5.516787052154541
    7. ' ,' → logprob: -5.641787052154541
    8. 'to' → logprob: -5.766787052154541
    9. 'à' → logprob: -6.141787052154541
    10. ' to' → logprob: -6.141787052154541

Token 998: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031790214125066996
    2. ' n' → logprob: -5.75317907333374
    3. '1' → logprob: -14.378178596496582
    4. 'k' → logprob: -15.128178596496582
    5. '(n' → logprob: -15.378178596496582
    6. '
' → logprob: -15.878178596496582
    7. ' ' → logprob: -17.3781795501709
    8. '   ' → logprob: -17.5031795501709
    9. '	n' → logprob: -17.6281795501709
    10. ',n' → logprob: -18.0031795501709

Token 999: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5926598310470581
    2. 'for' → logprob: -0.8426598310470581
    3. ':
' → logprob: -4.592659950256348
    4. ' for' → logprob: -5.467659950256348
    5. '
' → logprob: -7.467659950256348
    6. 'in' → logprob: -7.592659950256348
    7. ',' → logprob: -7.967659950256348
    8. ' :' → logprob: -8.092659950256348
    9. ' in' → logprob: -8.842659950256348
    10. 'k' → logprob: -9.342659950256348

Token 1000: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36365288496017456
    2. 'n' → logprob: -2.3636529445648193
    3. ' :' → logprob: -2.4886529445648193
    4. '+' → logprob: -3.4886529445648193
    5. ' n' → logprob: -3.4886529445648193
    6. ')' → logprob: -4.23865270614624
    7. '):' → logprob: -4.36365270614624
    8. ':
' → logprob: -4.86365270614624
    9. '1' → logprob: -5.11365270614624
    10. ',' → logprob: -5.23865270614624

Token 1001: ' incl' (ID: 11368)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2415587306022644
    2. ':' → logprob: -1.7415587902069092
    3. ' for' → logprob: -3.866558790206909
    4. ':
' → logprob: -4.36655855178833
    5. '
' → logprob: -5.24155855178833
    6. '```' → logprob: -8.866559028625488
    7. 'k' → logprob: -9.116559028625488
    8. ',' → logprob: -9.991559028625488
    9. ' :' → logprob: -10.366559028625488
    10. '   ' → logprob: -10.741559028625488

Token 1002: 'use' (ID: 1821)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.010585665702819824
    2. 'us' → logprob: -5.385585784912109
    3. ',' → logprob: -6.010585784912109
    4. '+' → logprob: -7.510585784912109
    5. 'k' → logprob: -8.01058578491211
    6. '   ' → logprob: -8.26058578491211
    7. 'ue' → logprob: -8.38558578491211
    8. '#' → logprob: -8.38558578491211
    9. 'ude' → logprob: -8.51058578491211
    10. ' ' → logprob: -8.76058578491211

Token 1003: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7654762268066406
    2. 'for' → logprob: -0.7654762268066406
    3. ' for' → logprob: -3.0154762268066406
    4. ':
' → logprob: -4.140476226806641
    5. '
' → logprob: -5.890476226806641
    6. ' :' → logprob: -6.890476226806641
    7. ',' → logprob: -7.515476226806641
    8. 'k' → logprob: -8.89047622680664
    9. ' :
' → logprob: -8.89047622680664
    10. '   ' → logprob: -10.26547622680664

Token 1004: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.68022444692906e-05
    2. ' for' → logprob: -10.375046730041504
    3. '
' → logprob: -11.375046730041504
    4. 'k' → logprob: -13.125046730041504
    5. '```' → logprob: -13.250046730041504
    6. 'range' → logprob: -15.750046730041504
    7. '   ' → logprob: -17.00004768371582
    8. 'fo' → logprob: -17.00004768371582
    9. ' 
' → logprob: -17.50004768371582
    10. 'f' → logprob: -17.75004768371582

Token 1005: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.07893121242523193
    2. 'k' → logprob: -2.5789313316345215
    3. ' _' → logprob: -10.953930854797363
    4. '_k' → logprob: -10.953930854797363
    5. '_' → logprob: -12.578930854797363
    6. ' ' → logprob: -13.328930854797363
    7. ' ' → logprob: -14.078930854797363
    8. '	k' → logprob: -14.828930854797363
    9. ' к' → logprob: -16.95393180847168
    10. ' ' → logprob: -17.07893180847168

Token 1006: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.201456218957901
    2. 'in' → logprob: -1.7014561891555786
    3. ' ' → logprob: -11.201456069946289
    4. 'k' → logprob: -11.576456069946289
    5. ',' → logprob: -12.826456069946289
    6. 'In' → logprob: -13.201456069946289
    7. '0' → logprob: -13.326456069946289
    8. '	in' → logprob: -13.326456069946289
    9. '_' → logprob: -13.576456069946289
    10. '_in' → logprob: -13.701456069946289

Token 1007: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022473573684692
    2. ' range' → logprob: -1.9102246761322021
    3. ' ' → logprob: -15.410224914550781
    4. '	range' → logprob: -15.410224914550781
    5. ' xrange' → logprob: -16.66022491455078
    6. '(range' → logprob: -16.66022491455078
    7. ')' → logprob: -17.78522491455078
    8. '0' → logprob: -18.03522491455078
    9. '_' → logprob: -18.53522491455078
    10. '   ' → logprob: -19.16022491455078

Token 1008: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011088967323303223
    2. '(' → logprob: -4.511088848114014
    3. 'n' → logprob: -10.636089324951172
    4. '(
' → logprob: -11.386089324951172
    5. ' (' → logprob: -12.511089324951172
    6. '(k' → logprob: -13.386089324951172
    7. ' n' → logprob: -14.886089324951172
    8. '1' → logprob: -16.011089324951172
    9. '(len' → logprob: -17.511089324951172
    10. '((' → logprob: -17.761089324951172

Token 1009: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09965004771947861
    2. '+' → logprob: -2.5996501445770264
    3. '):
' → logprob: -3.9746501445770264
    4. ')' → logprob: -7.224649906158447
    5. ' +' → logprob: -7.349649906158447
    6. ' ):' → logprob: -8.474650382995605
    7. '-' → logprob: -10.349650382995605
    8. ':' → logprob: -10.724650382995605
    9. '1' → logprob: -10.849650382995605
    10. '   ' → logprob: -10.974650382995605

Token 1010: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10536239296197891
    2. ' if' → logprob: -3.3553624153137207
    3. 'dp' → logprob: -3.4803624153137207
    4. ' dp' → logprob: -3.9803624153137207
    5. ' for' → logprob: -4.855362415313721
    6. 'if' → logprob: -5.355362415313721
    7. 'for' → logprob: -5.980362415313721
    8. '	dp' → logprob: -8.980361938476562
    9. '    
' → logprob: -9.480361938476562
    10. '	if' → logprob: -9.480361938476562

Token 1011: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.29270127415657043
    2. 'for' → logprob: -1.792701244354248
    3. 'dp' → logprob: -2.667701244354248
    4. 'while' → logprob: -4.417701244354248
    5. 'j' → logprob: -5.917701244354248
    6. '   ' → logprob: -7.042701244354248
    7. 'i' → logprob: -7.542701244354248
    8. '#' (adapté à ' #') → logprob: -7.792701244354248
    9. ' if' → logprob: -8.542701721191406
    10. 'min' → logprob: -8.792701721191406

Token 1012: ' Cré' (ID: 109203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4570823609828949
    2. 'for' → logprob: -1.7070823907852173
    3. 'while' → logprob: -2.3320822715759277
    4. 'dp' → logprob: -2.5820822715759277
    5. 'h' → logprob: -5.457082271575928
    6. 'j' → logprob: -5.582082271575928
    7. 'i' → logprob: -6.957082271575928
    8. 'current' → logprob: -7.332082271575928
    9. 'cur' → logprob: -7.582082271575928
    10. 'v' → logprob: -7.832082271575928

Token 1013: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.2865391969680786
    2. '   ' → logprob: -1.5365391969680786
    3. '#' → logprob: -1.7865391969680786
    4. 'if' → logprob: -2.536539077758789
    5. 'ation' → logprob: -2.911539077758789
    6. 'for' → logprob: -3.036539077758789
    7. 'ment' → logprob: -3.286539077758789
    8. 'dp' → logprob: -3.536539077758789
    9. 'd' → logprob: -3.786539077758789
    10. 'r' → logprob: -3.911539077758789

Token 1014: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3644915819168091
    2. 'dp' → logprob: -1.364491581916809
    3. 'for' → logprob: -4.6144914627075195
    4. ' dp' → logprob: -4.7394914627075195
    5. 'heap' → logprob: -5.1144914627075195
    6. 'tmp' → logprob: -5.3644914627075195
    7. '#' → logprob: -6.2394914627075195
    8. ' =' → logprob: -6.3644914627075195
    9. 'stack' → logprob: -6.3644914627075195
    10. 'temp' → logprob: -6.4894914627075195

Token 1015: ''un' (ID: 9788)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3551042675971985
    2. '[' → logprob: -2.8551042079925537
    3. 'range' → logprob: -3.1051042079925537
    4. ' new' → logprob: -3.4801042079925537
    5. ' range' → logprob: -3.6051042079925537
    6. ' dp' → logprob: -3.9801042079925537
    7. 'a' → logprob: -3.9801042079925537
    8. 'new' → logprob: -4.230104446411133
    9. ' [' → logprob: -4.355104446411133
    10. ' la' → logprob: -4.480104446411133

Token 1016: ' nouveau' (ID: 23184)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7546477913856506
    2. 'tmp' → logprob: -1.2546477317810059
    3. 'nd' → logprob: -1.8796477317810059
    4. 'n' → logprob: -3.254647731781006
    5. 'nou' → logprob: -3.629647731781006
    6. 'temp' → logprob: -4.629647731781006
    7. 'next' → logprob: -4.879647731781006
    8. 'dp' → logprob: -5.129647731781006
    9. 'for' → logprob: -6.504647731781006
    10. '_nd' → logprob: -7.629647731781006

Token 1017: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0014972452772781253
    2. ' dp' → logprob: -7.001497268676758
    3. '_dp' → logprob: -7.501497268676758
    4. 'tmp' → logprob: -10.626497268676758
    5. 'new' → logprob: -12.876497268676758
    6. 'nd' → logprob: -12.876497268676758
    7. '	dp' → logprob: -13.876497268676758
    8. 'temp' → logprob: -14.626497268676758
    9. '[' → logprob: -14.626497268676758
    10. 'd' → logprob: -14.751497268676758

Token 1018: ' new' (ID: 620)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.84158855676651
    2. 'nd' → logprob: -1.2165884971618652
    3. ' nd' → logprob: -1.9665884971618652
    4. ' dp' → logprob: -2.4665884971618652
    5. 'new' → logprob: -4.716588497161865
    6. 'tmp' → logprob: -4.841588497161865
    7. ' new' → logprob: -5.091588497161865
    8. ' =' → logprob: -5.216588497161865
    9. ' nxt' → logprob: -5.466588497161865
    10. '   ' → logprob: -5.466588497161865

Token 1019: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.002174647059291601
    2. 'dp' → logprob: -6.2521748542785645
    3. '_' → logprob: -8.377174377441406
    4. ' =' → logprob: -11.252174377441406
    5. 'DP' → logprob: -14.127174377441406
    6. '_DP' → logprob: -14.627174377441406
    7. ' dp' → logprob: -14.877174377441406
    8. '=' → logprob: -15.002174377441406
    9. 'Dp' → logprob: -15.002174377441406
    10. '	dp' → logprob: -15.127174377441406

Token 1020: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809966519474983
    2. '=' → logprob: -3.288099765777588
    3. '=[' → logprob: -10.53809928894043
    4. '[' → logprob: -11.41309928894043
    5. 'new' → logprob: -12.16309928894043
    6. '=[]' → logprob: -12.28809928894043
    7. ' =[' → logprob: -12.91309928894043
    8. ',' → logprob: -13.53809928894043
    9. '   ' → logprob: -13.53809928894043
    10. ' =
' → logprob: -13.78809928894043

Token 1021: ' longueur' (ID: 104613)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16843676567077637
    2. '[n' → logprob: -1.9184367656707764
    3. ' [' → logprob: -5.4184370040893555
    4. '(n' → logprob: -5.6684370040893555
    5. '1' → logprob: -9.293437004089355
    6. '(' → logprob: -9.668437004089355
    7. 'n' → logprob: -9.668437004089355
    8. '[k' → logprob: -10.293437004089355
    9. ' (' → logprob: -11.418437004089355
    10. 'dp' → logprob: -11.918437004089355

Token 1022: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03309043496847153
    2. ' n' → logprob: -3.908090353012085
    3. '(n' → logprob: -4.408090591430664
    4. ' (' → logprob: -8.283090591430664
    5. 'len' → logprob: -11.908090591430664
    6. '[n' → logprob: -11.908090591430664
    7. 'dp' → logprob: -11.908090591430664
    8. '
' → logprob: -12.033090591430664
    9. '`' → logprob: -13.033090591430664
    10. ' =' → logprob: -13.158090591430664

Token 1023: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2082536369562149
    2. ' +' → logprob: -1.7082536220550537
    3. '   ' → logprob: -5.958253860473633
    4. ' =' → logprob: -6.708253860473633
    5. '(n' → logprob: -7.083253860473633
    6. '
' → logprob: -7.208253860473633
    7. '```' → logprob: -8.083253860473633
    8. 'dp' → logprob: -8.458253860473633
    9. '=' → logprob: -8.583253860473633
    10. 'n' → logprob: -8.583253860473633

Token 1024: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006679982761852443
    2. '2' → logprob: -7.375668048858643
    3. ' ' → logprob: -11.250667572021484
    4. '+' → logprob: -11.375667572021484
    5. '```' → logprob: -12.375667572021484
    6. '(' → logprob: -12.500667572021484
    7. '   ' → logprob: -13.250667572021484
    8. '
' → logprob: -13.500667572021484
    9. 'k' → logprob: -13.563167572021484
    10. '`' → logprob: -13.875667572021484

Token 1025: ',' (ID: 11)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4513084590435028
    2. '   ' → logprob: -1.5763084888458252
    3. ' new' → logprob: -2.451308488845825
    4. ' =' → logprob: -3.451308488845825
    5. '
' → logprob: -3.951308488845825
    6. '=' → logprob: -4.951308250427246
    7. '[' → logprob: -6.076308250427246
    8. '[new' → logprob: -6.076308250427246
    9. '	new' → logprob: -6.576308250427246
    10. '```' → logprob: -6.576308250427246

Token 1026: ' initial' (ID: 4871)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0462777316570282
    2. 'dp' → logprob: -3.2962777614593506
    3. ' [' → logprob: -5.1712775230407715
    4. ' dp' → logprob: -6.6712775230407715
    5. 'new' → logprob: -7.2962775230407715
    6. ' =' → logprob: -8.54627799987793
    7. '=' → logprob: -8.79627799987793
    8. ' new' → logprob: -8.92127799987793
    9. '=[' → logprob: -10.42127799987793
    10. '[new' → logprob: -10.54627799987793

Token 1027: 'ement' (ID: 962)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.10600236058235168
    2. 'isée' → logprob: -2.3560023307800293
    3. 'ized' → logprob: -5.356002330780029
    4. 'iser' → logprob: -7.981002330780029
    5. 'isés' → logprob: -8.106002807617188
    6. 'isées' → logprob: -8.856002807617188
    7. '=' → logprob: -9.231002807617188
    8. 'isez' → logprob: -10.231002807617188
    9. 'ised' → logprob: -10.231002807617188
    10. 'e' → logprob: -10.981002807617188

Token 1028: ' rempli' (ID: 192613)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09891312569379807
    2. 'dp' → logprob: -2.9739131927490234
    3. 'à' → logprob: -3.9739131927490234
    4. 'avec' → logprob: -4.973913192749023
    5. '```' → logprob: -5.598913192749023
    6. '=' → logprob: -5.598913192749023
    7. '1' → logprob: -5.848913192749023
    8. ' à' → logprob: -7.098913192749023
    9. 'filled' → logprob: -7.223913192749023
    10. '`' → logprob: -7.223913192749023

Token 1029: ' de' (ID: 334)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.8902043700218201
    2. '[' → logprob: -1.2652044296264648
    3. 'avec' → logprob: -1.6402044296264648
    4. 'de' → logprob: -3.390204429626465
    5. ' avec' → logprob: -3.515204429626465
    6. ' with' → logprob: -3.890204429626465
    7. 'dp' → logprob: -4.765204429626465
    8. ' de' → logprob: -4.890204429626465
    9. 'à' → logprob: -5.015204429626465
    10. '(' → logprob: -6.640204429626465

Token 1030: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23713275790214539
    2. 'INF' → logprob: -1.7371327877044678
    3. '1' → logprob: -3.8621327877044678
    4. 'float' → logprob: -5.612132549285889
    5. '-INF' → logprob: -5.737132549285889
    6. '-' → logprob: -5.862132549285889
    7. 'inf' → logprob: -6.237132549285889
    8. 'math' → logprob: -7.237132549285889
    9. '-inf' → logprob: -7.237132549285889
    10. '10' → logprob: -7.612132549285889

Token 1031: 'éros' (ID: 120888)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.4028133451938629
    2. 'eros' → logprob: -1.1528133153915405
    3. 'éros' → logprob: -5.15281343460083
    4. 'éro' → logprob: -5.65281343460083
    5. '[' → logprob: -5.77781343460083
    6. 'ERO' → logprob: -6.52781343460083
    7. '0' → logprob: -6.90281343460083
    8. 'e' → logprob: -7.15281343460083
    9. 'er' → logprob: -9.902812957763672
    10. '   ' → logprob: -10.777812957763672

Token 1032: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.41586920619010925
    2. '   ' → logprob: -1.1658692359924316
    3. ' new' → logprob: -3.7908692359924316
    4. '
' → logprob: -5.540869235992432
    5. ' =' → logprob: -6.665869235992432
    6. '	new' → logprob: -8.290868759155273
    7. '=' → logprob: -8.665868759155273
    8. '    
' → logprob: -9.540868759155273
    9. '=new' → logprob: -9.665868759155273
    10. '[' → logprob: -9.665868759155273

Token 1033: '   ' (ID: 271)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2540365755558014
    2. ' new' → logprob: -1.629036545753479
    3. '   ' → logprob: -3.8790366649627686
    4. '[' → logprob: -5.0040364265441895
    5. '[new' → logprob: -7.8790364265441895
    6. ' [' → logprob: -9.004036903381348
    7. '	new' → logprob: -9.629036903381348
    8. '
' → logprob: -9.754036903381348
    9. ' =' → logprob: -10.254036903381348
    10. ' ' → logprob: -10.379036903381348

Token 1034: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0013317868579179049
    2. ' new' → logprob: -6.751331806182861
    3. '[' → logprob: -8.751331329345703
    4. '   ' → logprob: -13.251331329345703
    5. ' [' → logprob: -14.251331329345703
    6. '[new' → logprob: -14.376331329345703
    7. '	new' → logprob: -16.001331329345703
    8. '0' → logprob: -17.251331329345703
    9. '_new' → logprob: -17.376331329345703
    10. '```' → logprob: -17.501331329345703

Token 1035: ' Il' (ID: 5329)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.028408121317625046
    2. ' new' → logprob: -4.153408050537109
    3. '   ' → logprob: -4.403408050537109
    4. '	new' → logprob: -9.77840805053711
    5. '
' → logprob: -13.40340805053711
    6. '```' → logprob: -14.02840805053711
    7. '   ' → logprob: -14.65340805053711
    8. ' ' → logprob: -14.65340805053711
    9. '_new' → logprob: -14.77840805053711
    10. '  ' → logprob: -15.02840805053711

Token 1036: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10053552687168121
    2. ' =' → logprob: -2.3505356311798096
    3. '=[' → logprob: -8.97553539276123
    4. '[' → logprob: -9.22553539276123
    5. '=new' → logprob: -9.47553539276123
    6. '=[]' → logprob: -11.60053539276123
    7. 's' → logprob: -12.22553539276123
    8. '.' → logprob: -13.10053539276123
    9. ' =[' → logprob: -13.35053539276123
    10. '=[]
' → logprob: -13.72553539276123

Token 1037: 'ira' (ID: 2633)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.3014984130859375
    2. 'ira' → logprob: -1.6764984130859375
    3. 'a' → logprob: -3.4264984130859375
    4. 't' → logprob: -4.0514984130859375
    5. 'it' → logprob: -4.4264984130859375
    6. 'e' → logprob: -5.0514984130859375
    7. 'ait' → logprob: -6.4264984130859375
    8. 'ent' → logprob: -6.8014984130859375
    9. 'r' → logprob: -7.1764984130859375
    10. 'ant' → logprob: -7.5514984130859375

Token 1038: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.337499737739563
    2. ' =' → logprob: -2.0874996185302734
    3. ' as' → logprob: -3.0874996185302734
    4. '=' → logprob: -3.5874996185302734
    5. '[' → logprob: -3.7124996185302734
    6. ' to' → logprob: -3.9624996185302734
    7. 'as' → logprob: -5.337499618530273
    8. ' ' → logprob: -5.337499618530273
    9. 'à' → logprob: -5.337499618530273
    10. ' pour' → logprob: -5.337499618530273

Token 1039: ' calcul' (ID: 7559)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004931025905534625
    2. ' [' → logprob: -8.125493049621582
    3. '0' → logprob: -9.500493049621582
    4. 'new' → logprob: -9.750493049621582
    5. ' ' → logprob: -10.875493049621582
    6. '[k' → logprob: -11.250493049621582
    7. 'dp' → logprob: -11.625493049621582
    8. '[new' → logprob: -12.000493049621582
    9. ' new' → logprob: -13.125493049621582
    10. 'k' → logprob: -13.125493049621582

Token 1040: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0006023610476404428
    2. 'ate' → logprob: -8.875602722167969
    3. 'ation' → logprob: -9.125602722167969
    4. '#' → logprob: -9.125602722167969
    5. 'ater' → logprob: -9.500602722167969
    6. 'ler' → logprob: -10.250602722167969
    7. '[' → logprob: -10.750602722167969
    8. 'rer' → logprob: -10.750602722167969
    9. 'lation' → logprob: -11.375602722167969
    10. 'late' → logprob: -11.625602722167969

Token 1041: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10190694779157639
    2. ' [' → logprob: -3.2269070148468018
    3. 'new' → logprob: -3.6019070148468018
    4. ' new' → logprob: -3.6019070148468018
    5. '[new' → logprob: -6.851906776428223
    6. 'dp' → logprob: -7.101906776428223
    7. '[n' → logprob: -9.351906776428223
    8. ' dp' → logprob: -9.601906776428223
    9. '```' → logprob: -9.726906776428223
    10. 'n' → logprob: -9.851906776428223

Token 1042: ' nouveaux' (ID: 43964)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -1.4894742965698242
    2. ' nouveaux' → logprob: -1.4894742965698242
    3. ' nouvelles' → logprob: -2.364474296569824
    4. 'n' → logprob: -2.364474296569824
    5. 'new' → logprob: -2.489474296569824
    6. ' next' → logprob: -2.614474296569824
    7. ' résultats' → logprob: -3.114474296569824
    8. 'next' → logprob: -3.364474296569824
    9. 'nou' → logprob: -3.364474296569824
    10. ' prochaines' → logprob: -4.489474296569824

Token 1043: ' états' (ID: 184259)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.11927247792482376
    2. '_' → logprob: -2.244272470474243
    3. 'dp' → logprob: -5.619272708892822
    4. ' _' → logprob: -6.494272708892822
    5. ' dp' → logprob: -6.869272708892822
    6. ' ' → logprob: -8.619272232055664
    7. ' new' → logprob: -11.494272232055664
    8. 'new' → logprob: -11.869272232055664
    9. '_DP' → logprob: -11.869272232055664
    10. '_
' → logprob: -11.869272232055664

Token 1044: ' dp' (ID: 21546)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2901182770729065
    2. ' new' → logprob: -1.5401182174682617
    3. ' =' → logprob: -3.9151182174682617
    4. '   ' → logprob: -4.790118217468262
    5. '=' → logprob: -5.665118217468262
    6. '
' → logprob: -6.290118217468262
    7. '[new' → logprob: -7.040118217468262
    8. '=new' → logprob: -7.165118217468262
    9. '[' → logprob: -7.165118217468262
    10. '_new' → logprob: -7.415118217468262

Token 1045: ' bas' (ID: 3222)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4626491069793701
    2. '   ' → logprob: -1.9626491069793701
    3. ' =' → logprob: -2.08764910697937
    4. ' new' → logprob: -2.83764910697937
    5. '=' → logprob: -3.96264910697937
    6. '
' → logprob: -4.212649345397949
    7. '=new' → logprob: -4.962649345397949
    8. '[new' → logprob: -6.212649345397949
    9. '	new' → logprob: -6.712649345397949
    10. '_new' → logprob: -6.962649345397949

Token 1046: 'és' (ID: 1756)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32633569836616516
    2. 'e' → logprob: -1.5763356685638428
    3. 'es' → logprob: -3.8263356685638428
    4. 'ed' → logprob: -4.451335906982422
    5. 'p' → logprob: -4.951335906982422
    6. 'eline' → logprob: -5.201335906982422
    7. '[i' → logprob: -5.826335906982422
    8. '=[' → logprob: -5.951335906982422
    9. 'dp' → logprob: -6.076335906982422
    10. 'és' → logprob: -6.451335906982422

Token 1047: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.8838803768157959
    2. 'sur' → logprob: -1.008880376815796
    3. '[' → logprob: -2.008880376815796
    4. '=' → logprob: -3.633880376815796
    5. '[:]' → logprob: -4.633880615234375
    6. '   ' → logprob: -4.758880615234375
    7. ' on' → logprob: -4.758880615234375
    8. ']' → logprob: -4.758880615234375
    9. ')' → logprob: -5.258880615234375
    10. 'on' → logprob: -5.508880615234375

Token 1048: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21606695652008057
    2. ' dp' → logprob: -1.9660669565200806
    3. '[' → logprob: -3.591066837310791
    4. '0' → logprob: -4.216066837310791
    5. ' [' → logprob: -5.091066837310791
    6. 'new' → logprob: -6.341066837310791
    7. ' ' → logprob: -6.591066837310791
    8. ' new' → logprob: -6.841066837310791
    9. 'prev' → logprob: -8.46606731414795
    10. '1' → logprob: -8.59106731414795

Token 1049: ' états' (ID: 184259)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014597570523619652
    2. ' dp' → logprob: -4.389597415924072
    3. '#' → logprob: -7.389597415924072
    4. '0' → logprob: -7.639597415924072
    5. ' anciens' → logprob: -8.51459789276123
    6. '[' → logprob: -9.38959789276123
    7. 'indices' → logprob: -10.13959789276123
    8. '...' → logprob: -10.26459789276123
    9. 'current' → logprob: -10.38959789276123
    10. ' #' → logprob: -10.38959789276123

Token 1050: ' précéd' (ID: 55435)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4289100468158722
    2. '_dp' → logprob: -1.6789100170135498
    3. 'dp' → logprob: -2.42891001701355
    4. '_prev' → logprob: -3.42891001701355
    5. '_current' → logprob: -5.428910255432129
    6. '_act' → logprob: -5.428910255432129
    7. 'preced' → logprob: -5.553910255432129
    8. ' dp' → logprob: -5.553910255432129
    9. 'prev' → logprob: -6.053910255432129
    10. '_previous' → logprob: -6.178910255432129

Token 1051: 'ents' (ID: 1094)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7583731412887573
    2. '_dp' → logprob: -0.7583731412887573
    3. '[' → logprob: -3.633373260498047
    4. 'dp' → logprob: -4.383373260498047
    5. 'e' → logprob: -4.633373260498047
    6. ' _' → logprob: -5.508373260498047
    7. '   ' → logprob: -5.508373260498047
    8. ' dp' → logprob: -6.758373260498047
    9. ')' → logprob: -7.383373260498047
    10. ' ' → logprob: -7.508373260498047

Token 1052: '.
' (ID: 558)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11236236244440079
    2. ' new' → logprob: -2.7373623847961426
    3. '   ' → logprob: -3.8623623847961426
    4. ' =' → logprob: -4.987362384796143
    5. '[' → logprob: -5.362362384796143
    6. '
' → logprob: -5.737362384796143
    7. '=' → logprob: -5.862362384796143
    8. '[new' → logprob: -6.862362384796143
    9. ',' → logprob: -7.362362384796143
    10. '_new' → logprob: -7.987362384796143

Token 1053: '   ' (ID: 271)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4500749409198761
    2. 'new' → logprob: -1.4500749111175537
    3. '   ' → logprob: -2.0750749111175537
    4. '	new' → logprob: -6.200075149536133
    5. '```' → logprob: -8.700075149536133
    6. '    
' → logprob: -10.325075149536133
    7. '[new' → logprob: -10.825075149536133
    8. ' ' → logprob: -10.825075149536133
    9. '
' → logprob: -10.950075149536133
    10. ' 
' → logprob: -12.200075149536133

Token 1054: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.00010044389637187123
    2. ' new' → logprob: -9.250100135803223
    3. '   ' → logprob: -12.375100135803223
    4. '
' → logprob: -18.12510108947754
    5. '	new' → logprob: -18.25010108947754
    6. '[new' → logprob: -19.50010108947754
    7. '[' → logprob: -20.12510108947754
    8. '```' → logprob: -20.25010108947754
    9. '_new' → logprob: -20.37510108947754
    10. 'New' → logprob: -20.87510108947754

Token 1055: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.0325924449716695e-05
    2. '_d' → logprob: -12.00001049041748
    3. '_' → logprob: -13.25001049041748
    4. '_DP' → logprob: -14.37501049041748
    5. '_df' → logprob: -14.87501049041748
    6. '_dc' → logprob: -15.25001049041748
    7. '_p' → logprob: -15.62501049041748
    8. ')_' → logprob: -15.87501049041748
    9. '_dt' → logprob: -16.000009536743164
    10. ' _' → logprob: -16.125009536743164

Token 1056: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141646265983582
    2. ' =' → logprob: -1.7014164924621582
    3. '[' → logprob: -12.951416015625
    4. '=[' → logprob: -14.701416015625
    5. '＝' → logprob: -16.326416015625
    6. ' =[' → logprob: -16.576416015625
    7. ']' → logprob: -16.826416015625
    8. ')' → logprob: -16.951416015625
    9. ' ' → logprob: -17.326416015625
    10. ',' → logprob: -17.576416015625

Token 1057: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.56102097814437e-05
    2. ' [' → logprob: -10.000045776367188
    3. '([' → logprob: -17.000045776367188
    4. '[n' → logprob: -17.750045776367188
    5. '   ' → logprob: -18.000045776367188
    6. '0' → logprob: -18.000045776367188
    7. '[k' → logprob: -19.125045776367188
    8. '{' → logprob: -20.125045776367188
    9. '[int' → logprob: -20.250045776367188
    10. '[m' → logprob: -20.375045776367188

Token 1058: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '1' → logprob: -16.375
    4. '۰' → logprob: -17.5625
    5. '00' → logprob: -18.5625
    6. '000' → logprob: -18.625
    7. '(' → logprob: -19.0625
    8. '[' → logprob: -19.875
    9. 'int' → logprob: -19.9375
    10. '০' → logprob: -20.0

Token 1059: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028425566852092743
    2. '*' → logprob: -6.377842426300049
    3. ']*' → logprob: -7.377842426300049
    4. ')' → logprob: -9.127842903137207
    5. 'for' → logprob: -9.127842903137207
    6. ' ]' → logprob: -9.377842903137207
    7. ' for' → logprob: -9.377842903137207
    8. ' *' → logprob: -9.502842903137207
    9. ']*(' → logprob: -10.002842903137207
    10. '*(' → logprob: -13.377842903137207

Token 1060: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4431942105293274
    2. ' *' → logprob: -1.0681941509246826
    3. '*(' → logprob: -4.443194389343262
    4. ')' → logprob: -6.693194389343262
    5. ']' → logprob: -7.693194389343262
    6. 'for' → logprob: -8.318194389343262
    7. ' for' → logprob: -8.568194389343262
    8. '(n' → logprob: -9.318194389343262
    9. '+' → logprob: -9.693194389343262
    10. '*k' → logprob: -9.818194389343262

Token 1061: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001035787514410913
    2. ' (' → logprob: -6.876035690307617
    3. '(' → logprob: -12.876035690307617
    4. 'n' → logprob: -15.876035690307617
    5. '((' → logprob: -16.126035690307617
    6. '   ' → logprob: -16.126035690307617
    7. '(N' → logprob: -16.876035690307617
    8. '(len' → logprob: -17.251035690307617
    9. ' ' → logprob: -18.751035690307617
    10. '(
' → logprob: -18.751035690307617

Token 1062: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02635684423148632
    2. '(n' → logprob: -3.6513569355010986
    3. ' n' → logprob: -10.02635669708252
    4. ' (' → logprob: -11.40135669708252
    5. '(' → logprob: -14.40135669708252
    6. '   ' → logprob: -15.15135669708252
    7. '
' → logprob: -15.40135669708252
    8. '	n' → logprob: -16.401357650756836
    9. '[n' → logprob: -17.276357650756836
    10. ')n' → logprob: -17.901357650756836

Token 1063: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00407923199236393
    2. ' +' → logprob: -5.504079341888428
    3. '+
' → logprob: -14.75407886505127
    4. ')+' → logprob: -16.379079818725586
    5. ')' → logprob: -16.504079818725586
    6. '+n' → logprob: -17.879079818725586
    7. '＋' → logprob: -18.004079818725586
    8. '1' → logprob: -18.004079818725586
    9. '+k' → logprob: -18.254079818725586
    10. '+)' → logprob: -18.504079818725586

Token 1064: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '2' → logprob: -15.000001907348633
    4. '
' → logprob: -15.937501907348633
    5. '   ' → logprob: -16.625001907348633
    6. '```' → logprob: -17.062501907348633
    7. '+' → logprob: -17.687501907348633
    8. '１' → logprob: -18.062501907348633
    9. '

' → logprob: -18.250001907348633
    10. '0' → logprob: -18.375001907348633

Token 1065: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.750001907348633
    3. '2' → logprob: -15.000001907348633
    4. ' ' → logprob: -15.750001907348633
    5. '+' → logprob: -16.250001907348633
    6. '
' → logprob: -17.125001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '(n' → logprob: -18.125001907348633
    9. '```' → logprob: -18.687501907348633
    10. '{' → logprob: -19.187501907348633

Token 1066: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.97024549683556e-05
    2. '   ' → logprob: -9.875080108642578
    3. ')
' → logprob: -10.875080108642578
    4. ' )' → logprob: -12.250080108642578
    5. '<|end|>' → logprob: -13.125080108642578
    6. ']' → logprob: -14.250080108642578
    7. ')]' → logprob: -14.750080108642578
    8. '')' → logprob: -15.625080108642578
    9. '),' → logprob: -15.750080108642578
    10. '[' → logprob: -15.875080108642578

Token 1067: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7218162417411804
    2. 'for' → logprob: -0.7218162417411804
    3. '   ' → logprob: -3.721816301345825
    4. '	for' → logprob: -5.596816062927246
    5. 'new' → logprob: -9.471816062927246
    6. ' new' → logprob: -9.596816062927246
    7. ' ' → logprob: -10.596816062927246
    8. '    ' → logprob: -10.846816062927246
    9. 'dp' → logprob: -10.846816062927246
    10. '[' → logprob: -10.971816062927246

Token 1068: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018693095073103905
    2. ' for' → logprob: -4.143692970275879
    3. '   ' → logprob: -6.018692970275879
    4. 'i' → logprob: -9.518692970275879
    5. '	for' → logprob: -10.143692970275879
    6. 'j' → logprob: -10.268692970275879
    7. 'if' → logprob: -11.268692970275879
    8. 'dp' → logprob: -11.643692970275879
    9. 'max' → logprob: -12.143692970275879
    10. '#' (adapté à ' #') → logprob: -12.143692970275879

Token 1069: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006758584058843553
    2. 'j' → logprob: -8.000676155090332
    3. 'i' → logprob: -8.500676155090332
    4. ' for' → logprob: -9.500676155090332
    5. 'm' → logprob: -10.750676155090332
    6. 'dp' → logprob: -12.375676155090332
    7. '   ' → logprob: -12.500676155090332
    8. 'idx' → logprob: -12.750676155090332
    9. 'new' → logprob: -13.000676155090332
    10. 'x' → logprob: -13.125676155090332

Token 1070: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11940450966358185
    2. ' for' → logprob: -2.2444045543670654
    3. '   ' → logprob: -5.869404315948486
    4. '=' → logprob: -5.994404315948486
    5. '.' → logprob: -7.494404315948486
    6. 'continue' → logprob: -9.244404792785645
    7. ' ' → logprob: -9.369404792785645
    8. '	for' → logprob: -9.494404792785645
    9. '#' → logprob: -9.619404792785645
    10. ' =' → logprob: -9.744404792785645

Token 1071: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.39924806356430054
    2. 'our' → logprob: -1.3992481231689453
    3. 'oure' → logprob: -3.3992481231689453
    4. 'ourt' → logprob: -3.5242481231689453
    5. '#' → logprob: -4.649248123168945
    6. '_' → logprob: -5.774248123168945
    7. 'c' → logprob: -6.399248123168945
    8. 'ou' → logprob: -7.649248123168945
    9. '__' → logprob: -7.649248123168945
    10. 'or' → logprob: -7.774248123168945

Token 1072: ' chaque' (ID: 21194)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04640337452292442
    2. ' range' → logprob: -3.921403408050537
    3. 'dp' → logprob: -4.421403408050537
    4. 'j' → logprob: -5.171403408050537
    5. 'for' → logprob: -5.296403408050537
    6. 'H' → logprob: -6.921403408050537
    7. 'm' → logprob: -7.296403408050537
    8. 'k' → logprob: -7.921403408050537
    9. 'new' → logprob: -8.421402931213379
    10. '_' → logprob: -8.796402931213379

Token 1073: ' indice' (ID: 90848)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15141208469867706
    2. ' j' → logprob: -2.276412010192871
    3. 'i' → logprob: -3.651412010192871
    4. 'm' → logprob: -5.151412010192871
    5. ' i' → logprob: -5.651412010192871
    6. 'l' → logprob: -7.026412010192871
    7. ' m' → logprob: -7.901412010192871
    8. 'k' → logprob: -8.151412010192871
    9. 'x' → logprob: -8.651412010192871
    10. 's' → logprob: -9.026412010192871

Token 1074: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2929050922393799
    2. 'i' → logprob: -1.5429050922393799
    3. ' j' → logprob: -3.79290509223938
    4. 'k' → logprob: -5.042904853820801
    5. ' i' → logprob: -5.167904853820801
    6. 'l' → logprob: -6.167904853820801
    7. 'm' → logprob: -6.917904853820801
    8. 'in' → logprob: -7.417904853820801
    9. ' in' → logprob: -8.2929048538208
    10. 'dp' → logprob: -8.5429048538208

Token 1075: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25409215688705444
    2. 'in' → logprob: -1.7540922164916992
    3. '   ' → logprob: -3.129092216491699
    4. ',' → logprob: -5.629092216491699
    5. ' en' → logprob: -7.004092216491699
    6. ' de' → logprob: -7.629092216491699
    7. ':' → logprob: -7.629092216491699
    8. '  ' → logprob: -8.5040922164917
    9. ' :' → logprob: -8.5040922164917
    10. '    ' → logprob: -8.5040922164917

Token 1076: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024870727211236954
    2. ' range' → logprob: -6.0024871826171875
    3. 'dp' → logprob: -11.502487182617188
    4. '(range' → logprob: -14.002487182617188
    5. '   ' → logprob: -16.127487182617188
    6. 'rang' → logprob: -16.377487182617188
    7. 'r' → logprob: -16.502487182617188
    8. 'new' → logprob: -17.127487182617188
    9. '
' → logprob: -17.627487182617188
    10. 'ran' → logprob: -17.752487182617188

Token 1077: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.511406809295295e-06
    2. ' range' → logprob: -12.125006675720215
    3. 'dp' → logprob: -13.875006675720215
    4. '(range' → logprob: -17.1250057220459
    5. 'rang' → logprob: -17.8750057220459
    6. 'new' → logprob: -18.6250057220459
    7. '   ' → logprob: -19.7500057220459
    8. 'r' → logprob: -19.8750057220459
    9. 'len' → logprob: -20.5000057220459
    10. 'ran' → logprob: -20.6250057220459

Token 1078: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.734314501285553
    2. ',' → logprob: -1.3593144416809082
    3. '(n' → logprob: -2.234314441680908
    4. 'in' → logprob: -3.484314441680908
    5. ' in' → logprob: -3.609314441680908
    6. 'à' → logprob: -4.109314441680908
    7. 'n' → logprob: -4.109314441680908
    8. ',n' → logprob: -4.484314441680908
    9. ' n' → logprob: -4.609314441680908
    10. '   ' → logprob: -4.734314441680908

Token 1079: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008372656302526593
    2. ' n' → logprob: -7.625837326049805
    3. '(n' → logprob: -8.000837326049805
    4. 'k' → logprob: -11.875837326049805
    5. ' (' → logprob: -12.000837326049805
    6. '(' → logprob: -14.500837326049805
    7. '(k' → logprob: -15.500837326049805
    8. '	n' → logprob: -16.875837326049805
    9. '   ' → logprob: -17.000837326049805
    10. '
' → logprob: -17.000837326049805

Token 1080: ' inclus' (ID: 11891)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45648565888404846
    2. '+' → logprob: -1.456485629081726
    3. ' +' → logprob: -2.7064857482910156
    4. '   ' → logprob: -2.8314857482910156
    5. ' :' → logprob: -5.706485748291016
    6. ':
' → logprob: -6.331485748291016
    7. ',' → logprob: -7.081485748291016
    8. '):' → logprob: -7.831485748291016
    9. 'for' → logprob: -8.331485748291016
    10. ' for' → logprob: -8.706485748291016

Token 1081: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3738967478275299
    2. ':' → logprob: -1.9988967180252075
    3. ' for' → logprob: -1.9988967180252075
    4. 'for' → logprob: -3.373896837234497
    5. ' :' → logprob: -6.623896598815918
    6. ':
' → logprob: -6.873896598815918
    7. '	for' → logprob: -6.998896598815918
    8. '    ' → logprob: -7.373896598815918
    9. ' ' → logprob: -7.623896598815918
    10. '  ' → logprob: -7.748896598815918

Token 1082: 'so' (ID: 786)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011295147240161896
    2. ' n' → logprob: -4.761295318603516
    3. 'i' → logprob: -7.136295318603516
    4. 'for' → logprob: -7.261295318603516
    5. '(n' → logprob: -7.636295318603516
    6. ')' → logprob: -7.886295318603516
    7. ' for' → logprob: -8.761295318603516
    8. '   ' → logprob: -9.386295318603516
    9. 'range' → logprob: -11.136295318603516
    10. ')n' → logprob: -11.136295318603516

Token 1083: 'it' (ID: 278)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.2575511336326599
    2. 'n' → logprob: -2.1325511932373047
    3. 'r' → logprob: -2.7575511932373047
    4. 'range' → logprob: -3.7575511932373047
    5. 'u' → logprob: -5.257551193237305
    6. 'i' → logprob: -5.507551193237305
    7. '   ' → logprob: -6.007551193237305
    8. ' n' → logprob: -6.007551193237305
    9. 'l' → logprob: -6.132551193237305
    10. 'ut' → logprob: -6.882551193237305

Token 1084: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005236837547272444
    2. ' n' → logprob: -5.255236625671387
    3. '   ' → logprob: -13.755236625671387
    4. ')n' → logprob: -14.130236625671387
    5. '(n' → logprob: -15.130236625671387
    6. ')' → logprob: -15.130236625671387
    7. '	n' → logprob: -15.630236625671387
    8. ' ' → logprob: -16.005237579345703
    9. 'range' → logprob: -16.130237579345703
    10. '```' → logprob: -16.255237579345703

Token 1085: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03717248886823654
    2. '):' → logprob: -3.662172555923462
    3. ' +' → logprob: -5.037172317504883
    4. ')' → logprob: -5.787172317504883
    5. '):
' → logprob: -6.912172317504883
    6. ':' → logprob: -9.037172317504883
    7. '
' → logprob: -10.412172317504883
    8. ')+' → logprob: -10.662172317504883
    9. ' ):' → logprob: -11.037172317504883
    10. '```' → logprob: -11.537172317504883

Token 1086: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -11.75001335144043
    3. '0' → logprob: -12.50001335144043
    4. 'n' → logprob: -14.75001335144043
    5. ')' → logprob: -15.25001335144043
    6. '```' → logprob: -15.25001335144043
    7. '2' → logprob: -16.25001335144043
    8. '   ' → logprob: -16.62501335144043
    9. 'k' → logprob: -16.93751335144043
    10. '...' → logprob: -17.31251335144043

Token 1087: ' au' (ID: 2791)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02439451403915882
    2. '):
' → logprob: -4.024394512176514
    3. ')' → logprob: -5.149394512176514
    4. ':' → logprob: -7.899394512176514
    5. '):

' → logprob: -10.774394989013672
    6. ' ):' → logprob: -11.399394989013672
    7. '):
' → logprob: -11.524394989013672
    8. '```' → logprob: -12.524394989013672
    9. ' ' → logprob: -14.274394989013672
    10. 'for' → logprob: -14.274394989013672

Token 1088: ' total' (ID: 3609)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8531867265701294
    2. '+' → logprob: -1.1031867265701294
    3. 'n' → logprob: -2.10318660736084
    4. '(n' → logprob: -3.35318660736084
    5. 'range' → logprob: -3.60318660736084
    6. ')' → logprob: -3.72818660736084
    7. '(' → logprob: -4.22818660736084
    8. 'for' → logprob: -5.35318660736084
    9. ' n' → logprob: -6.10318660736084
    10. ' range' → logprob: -6.10318660736084

Token 1089: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35711807012557983
    2. ':' → logprob: -1.3571181297302246
    3. '):
' → logprob: -3.9821181297302246
    4. ')' → logprob: -3.9821181297302246
    5. '   ' → logprob: -5.357118129730225
    6. ':
' → logprob: -7.857118129730225
    7. ' :' → logprob: -8.607117652893066
    8. ' ):' → logprob: -9.232117652893066
    9. '  ' → logprob: -10.232117652893066
    10. ',' → logprob: -10.232117652893066

Token 1090: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5720437169075012
    2. 'for' → logprob: -0.9470437169075012
    3. '   ' → logprob: -3.0720436573028564
    4. ':' → logprob: -7.1970438957214355
    5. '	for' → logprob: -7.9470438957214355
    6. ':
' → logprob: -9.697043418884277
    7. ' ' → logprob: -9.947043418884277
    8. '```' → logprob: -10.072043418884277
    9. '    ' → logprob: -10.572043418884277
    10. '  ' → logprob: -10.822043418884277

Token 1091: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16206379234790802
    2. ' for' → logprob: -1.9120638370513916
    3. '   ' → logprob: -6.4120635986328125
    4. '	for' → logprob: -8.537063598632812
    5. 'range' → logprob: -16.287063598632812
    6. '```' → logprob: -16.412063598632812
    7. ' ' → logprob: -16.787063598632812
    8. ' range' → logprob: -17.537063598632812
    9. '
' → logprob: -17.787063598632812
    10. '       ' → logprob: -18.037063598632812

Token 1092: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08897152543067932
    2. ' i' → logprob: -2.4639716148376465
    3. 'j' → logprob: -11.088971138000488
    4. ' ' → logprob: -12.338971138000488
    5. ' j' → logprob: -12.713971138000488
    6. '   ' → logprob: -12.838971138000488
    7. '	i' → logprob: -13.213971138000488
    8. '```' → logprob: -14.151471138000488
    9. 'k' → logprob: -14.276471138000488
    10. '_i' → logprob: -14.463971138000488

Token 1093: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891853898763657
    2. 'in' → logprob: -2.57891845703125
    3. '   ' → logprob: -12.45391845703125
    4. '	in' → logprob: -12.82891845703125
    5. 'import' → logprob: -12.95391845703125
    6. ',' → logprob: -12.95391845703125
    7. 'range' → logprob: -13.32891845703125
    8. 'In' → logprob: -13.57891845703125
    9. 'not' → logprob: -13.57891845703125
    10. ' ' → logprob: -13.82891845703125

Token 1094: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246875032782555
    2. ' range' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.898246765136719
    4. 'n' → logprob: -15.023246765136719
    5. '(range' → logprob: -15.523246765136719
    6. '   ' → logprob: -15.523246765136719
    7. 'in' → logprob: -15.898246765136719
    8. '  ' → logprob: -17.02324676513672
    9. 'rang' → logprob: -17.27324676513672
    10. '	range' → logprob: -17.27324676513672

Token 1095: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005374244065023959
    2. 'n' → logprob: -8.125537872314453
    3. '(k' → logprob: -8.875537872314453
    4. '(' → logprob: -9.875537872314453
    5. 'range' → logprob: -10.125537872314453
    6. ' (' → logprob: -12.750537872314453
    7. '(range' → logprob: -13.250537872314453
    8. ' n' → logprob: -13.375537872314453
    9. 'k' → logprob: -13.500537872314453
    10. ' range' → logprob: -13.875537872314453

Token 1096: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10038825124502182
    2. ' +' → logprob: -2.350388288497925
    3. '):
' → logprob: -9.100388526916504
    4. '):' → logprob: -10.350388526916504
    5. '   ' → logprob: -10.600388526916504
    6. ')' → logprob: -12.225388526916504
    7. ')+' → logprob: -12.600388526916504
    8. '+i' → logprob: -14.100388526916504
    9. '+
' → logprob: -14.225388526916504
    10. '-' → logprob: -14.475388526916504

Token 1097: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. '2' → logprob: -10.625041007995605
    3. ' ' → logprob: -11.125041007995605
    4. '
' → logprob: -14.312541007995605
    5. '0' → logprob: -15.250041007995605
    6. '(' → logprob: -16.25004005432129
    7. '   ' → logprob: -16.43754005432129
    8. 'k' → logprob: -16.50004005432129
    9. '１' → logprob: -16.81254005432129
    10. '

' → logprob: -17.06254005432129

Token 1098: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '2' → logprob: -12.125012397766113
    3. ' ' → logprob: -12.250012397766113
    4. '+' → logprob: -14.250012397766113
    5. '
' → logprob: -14.937512397766113
    6. 'k' → logprob: -15.062512397766113
    7. '0' → logprob: -15.812512397766113
    8. '   ' → logprob: -16.12501335144043
    9. '(' → logprob: -16.18751335144043
    10. '```' → logprob: -16.56251335144043

Token 1099: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004181209951639175
    2. '):
' → logprob: -5.504181385040283
    3. ':' → logprob: -9.754180908203125
    4. '   ' → logprob: -11.004180908203125
    5. ')' → logprob: -11.129180908203125
    6. '):
' → logprob: -11.879180908203125
    7. ' ):' → logprob: -12.879180908203125
    8. '):

' → logprob: -13.629180908203125
    9. '       ' → logprob: -14.254180908203125
    10. 'if' → logprob: -14.629180908203125

Token 1100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008552049286663532
    2. '   ' → logprob: -5.758552074432373
    3. '    ' → logprob: -6.383552074432373
    4. '<|end|>' → logprob: -7.133552074432373
    5. ' if' → logprob: -7.258552074432373
    6. '	' → logprob: -7.508552074432373
    7. ' ' → logprob: -7.508552074432373
    8. ' new' → logprob: -8.383551597595215
    9. '	   ' → logprob: -8.758551597595215
    10. ',' → logprob: -9.633551597595215

Token 1101: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25660642981529236
    2. ' if' → logprob: -1.7566064596176147
    3. 'new' → logprob: -3.131606340408325
    4. ' new' → logprob: -4.631606578826904
    5. '    ' → logprob: -9.506606101989746
    6. '       ' → logprob: -9.756606101989746
    7. '   ' → logprob: -9.756606101989746
    8. '#' (adapté à ' #') → logprob: -9.881606101989746
    9. 'for' → logprob: -10.506606101989746
    10. ' for' → logprob: -12.006606101989746

Token 1102: ' PREMI' (ID: 110283)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01684054732322693
    2. 'new' → logprob: -4.76684045791626
    3. 'for' → logprob: -5.01684045791626
    4. ' if' → logprob: -6.76684045791626
    5. 'val' → logprob: -9.016840934753418
    6. '#' → logprob: -9.266840934753418
    7. 'v' → logprob: -9.516840934753418
    8. ' new' → logprob: -10.266840934753418
    9. 'j' → logprob: -10.766840934753418
    10. '   ' → logprob: -10.891840934753418

Token 1103: 'ER' (ID: 866)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49742868542671204
    2. '       ' → logprob: -1.9974286556243896
    3. 'ère' → logprob: -2.6224286556243896
    4. 'er' → logprob: -2.7474286556243896
    5. '   ' → logprob: -3.1224286556243896
    6. 'è' → logprob: -3.3724286556243896
    7. 'èr' → logprob: -4.747428894042969
    8. 'èrement' → logprob: -5.122428894042969
    9. 'ères' → logprob: -5.497428894042969
    10. '`' → logprob: -6.372428894042969

Token 1104: ' CAS' (ID: 44953)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3262031376361847
    2. 'if' → logprob: -1.3262031078338623
    3. ':' → logprob: -4.701203346252441
    4. '   ' → logprob: -7.076203346252441
    5. 'for' → logprob: -7.076203346252441
    6. ' ' → logprob: -7.701203346252441
    7. '=' → logprob: -8.076203346252441
    8. ' :' → logprob: -8.076203346252441
    9. ' for' → logprob: -8.076203346252441
    10. ' =' → logprob: -9.076203346252441

Token 1105: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6168490648269653
    2. ' if' → logprob: -0.9918490648269653
    3. '   ' → logprob: -3.241848945617676
    4. '       ' → logprob: -3.616848945617676
    5. 'if' → logprob: -4.491848945617676
    6. ' :' → logprob: -5.491848945617676
    7. '<|end|>' → logprob: -5.991848945617676
    8. '    ' → logprob: -6.741848945617676
    9. '[' → logprob: -7.491848945617676
    10. ' ' → logprob: -7.741848945617676

Token 1106: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47541698813438416
    2. 'if' → logprob: -0.9754170179367065
    3. ' new' → logprob: -7.100417137145996
    4. 'new' → logprob: -7.725417137145996
    5. '   ' → logprob: -10.225417137145996
    6. '       ' → logprob: -10.600417137145996
    7. '#' → logprob: -12.975417137145996
    8. ' for' → logprob: -13.225417137145996
    9. '	if' → logprob: -13.350417137145996
    10. 'for' → logprob: -13.475417137145996

Token 1107: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.266490638256073
    2. 'i' → logprob: -2.2664906978607178
    3. 'k' → logprob: -2.3914906978607178
    4. ' H' → logprob: -3.6414906978607178
    5. ' i' → logprob: -4.641490459442139
    6. ' k' → logprob: -6.141490459442139
    7. 'dp' → logprob: -8.266490936279297
    8. 'new' → logprob: -8.391490936279297
    9. 'abs' → logprob: -9.266490936279297
    10. ' new' → logprob: -9.516490936279297

Token 1108: ' valeur' (ID: 41664)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.23125772178173065
    2. 'k' → logprob: -2.231257677078247
    3. 'i' → logprob: -2.356257677078247
    4. ' H' → logprob: -6.481257915496826
    5. 'abs' → logprob: -6.731257915496826
    6. ' i' → logprob: -7.231257915496826
    7. 'new' → logprob: -7.981257915496826
    8. 'dp' → logprob: -8.981257438659668
    9. ' k' → logprob: -9.106257438659668
    10. ' abs' → logprob: -10.356257438659668

Token 1109: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.010483743622899055
    2. ' H' → logprob: -5.760483741760254
    3. '[' → logprob: -5.885483741760254
    4. 'k' → logprob: -6.760483741760254
    5. '==' → logprob: -7.635483741760254
    6. 'i' → logprob: -7.635483741760254
    7. 'dp' → logprob: -7.885483741760254
    8. '(H' → logprob: -8.135483741760254
    9. 'if' → logprob: -8.260483741760254
    10. '<=' → logprob: -8.510483741760254

Token 1110: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.20212368667125702
    2. '[i' → logprob: -1.7021236419677734
    3. '[' → logprob: -7.327123641967773
    4. 'k' → logprob: -10.327123641967773
    5. 'i' → logprob: -11.577123641967773
    6. '[j' → logprob: -12.202123641967773
    7. '[
' → logprob: -13.577123641967773
    8. ']' → logprob: -14.577123641967773
    9. ' [' → logprob: -14.702123641967773
    10. '```' → logprob: -14.952123641967773

Token 1111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031623318791389465
    2. '[k' → logprob: -4.656623363494873
    3. '[' → logprob: -5.156623363494873
    4. ']>=' → logprob: -5.281623363494873
    5. ']>' → logprob: -5.781623363494873
    6. ']<=' → logprob: -6.031623363494873
    7. '[i' → logprob: -6.281623363494873
    8. ']==' → logprob: -6.406623363494873
    9. ']<' → logprob: -6.906623363494873
    10. '[j' → logprob: -8.656622886657715

Token 1112: ' est' (ID: 893)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.9656131267547607
    2. '>' → logprob: -1.3406131267547607
    3. '<=' → logprob: -1.3406131267547607
    4. ' >=' → logprob: -3.4656131267547607
    5. ' <=' → logprob: -3.5906131267547607
    6. '<' → logprob: -3.8406131267547607
    7. '[' → logprob: -5.34061336517334
    8. ' >' → logprob: -5.59061336517334
    9. ' <' → logprob: -5.84061336517334
    10. '==' → logprob: -5.96561336517334

Token 1113: ' strict' (ID: 12035)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8681849241256714
    2. '<' → logprob: -1.1181849241256714
    3. '>=' → logprob: -1.7431849241256714
    4. '>' → logprob: -2.618185043334961
    5. ' <=' → logprob: -6.493185043334961
    6. ' >=' → logprob: -7.118185043334961
    7. '==' → logprob: -7.493185043334961
    8. 'H' → logprob: -7.868185043334961
    9. 'strict' → logprob: -7.868185043334961
    10. 'greater' → logprob: -8.118185043334961

Token 1114: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.7538697719573975
    2. '<' → logprob: -1.0038697719573975
    3. 'e' → logprob: -2.3788697719573975
    4. ' <' → logprob: -3.2538697719573975
    5. '>' → logprob: -3.8788697719573975
    6. 'ly' → logprob: -4.878870010375977
    7. 'ément' → logprob: -6.253870010375977
    8. ' >' → logprob: -7.878870010375977
    9. 'lement' → logprob: -8.003870010375977
    10. '<=' → logprob: -8.378870010375977

Token 1115: ' supérieure' (ID: 106336)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03299517184495926
    2. '<' → logprob: -4.032995223999023
    3. 'greater' → logprob: -4.782995223999023
    4. ' >' → logprob: -5.532995223999023
    5. '>=' → logprob: -7.157995223999023
    6. 'sup' → logprob: -7.282995223999023
    7. ' supérieur' → logprob: -8.782995223999023
    8. ' <' → logprob: -9.032995223999023
    9. ' greater' → logprob: -9.157995223999023
    10. '<=' → logprob: -9.157995223999023

Token 1116: ' à' (ID: 1221)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5131903886795044
    2. '>' → logprob: -2.138190269470215
    3. ' à' → logprob: -2.763190269470215
    4. ' and' → logprob: -2.763190269470215
    5. ' >' → logprob: -2.763190269470215
    6. 'and' → logprob: -3.638190269470215
    7. 'to' → logprob: -3.888190269470215
    8. '   ' → logprob: -4.763190269470215
    9. ',' → logprob: -5.263190269470215
    10. '       ' → logprob: -5.763190269470215

Token 1117: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0036022020503878593
    2. ' H' → logprob: -5.628602027893066
    3. 'k' → logprob: -14.628602027893066
    4. 'new' → logprob: -14.878602027893066
    5. ' ' → logprob: -15.253602027893066
    6. ' new' → logprob: -15.628602027893066
    7. '	H' → logprob: -16.003602981567383
    8. '0' → logprob: -16.253602981567383
    9. 'h' → logprob: -16.503602981567383
    10. ' ' → logprob: -16.628602981567383

Token 1118: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00354067818261683
    2. '[' → logprob: -6.253540515899658
    3. 'k' → logprob: -6.753540515899658
    4. '[i' → logprob: -7.878540515899658
    5. ' [' → logprob: -10.128540992736816
    6. ' k' → logprob: -11.753540992736816
    7. '[
' → logprob: -12.503540992736816
    8. 'i' → logprob: -12.878540992736816
    9. ']' → logprob: -13.253540992736816
    10. 'H' → logprob: -13.253540992736816

Token 1119: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27484333515167236
    2. ']):' → logprob: -1.8998433351516724
    3. ']:' → logprob: -3.399843215942383
    4. '[k' → logprob: -3.899843215942383
    5. '])' → logprob: -3.899843215942383
    6. ']>' → logprob: -4.899843215942383
    7. '+' → logprob: -6.399843215942383
    8. '],' → logprob: -6.649843215942383
    9. '[i' → logprob: -6.774843215942383
    10. ' ]' → logprob: -6.774843215942383

Token 1120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01203321572393179
    2. ':' → logprob: -4.762032985687256
    3. ' if' → logprob: -6.637032985687256
    4. '           ' → logprob: -6.637032985687256
    5. ',' → logprob: -8.637033462524414
    6. ' :' → logprob: -8.762033462524414
    7. ' and' → logprob: -8.762033462524414
    8. '   ' → logprob: -9.137033462524414
    9. 'if' → logprob: -9.637033462524414
    10. '	' → logprob: -11.137033462524414

Token 1121: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9583907723426819
    2. ' if' → logprob: -1.083390712738037
    3. 'if' (adapté à ' if') → logprob: -1.333390712738037
    4. '           ' → logprob: -4.458390712738037
    5. ':' → logprob: -6.333390712738037
    6. '   ' → logprob: -7.333390712738037
    7. ' :' → logprob: -8.833391189575195
    8. '        ' → logprob: -9.208391189575195
    9. '	if' → logprob: -10.208391189575195
    10. '               ' → logprob: -10.458391189575195

Token 1122: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0017043406842276454
    2. ' H' → logprob: -6.376704216003418
    3. '	H' → logprob: -13.501704216003418
    4. '   ' → logprob: -14.626704216003418
    5. ' ' → logprob: -15.126704216003418
    6. ' ' → logprob: -17.376705169677734
    7. '_H' → logprob: -17.876705169677734
    8. '(H' → logprob: -18.001705169677734
    9. '#' → logprob: -18.501705169677734
    10. 'Hs' → logprob: -18.751705169677734

Token 1123: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02980024367570877
    2. '[k' → logprob: -3.5298001766204834
    3. 'i' → logprob: -10.654800415039062
    4. '[' → logprob: -10.904800415039062
    5. '```' → logprob: -13.404800415039062
    6. 'k' → logprob: -13.529800415039062
    7. ' [' → logprob: -13.904800415039062
    8. ']' → logprob: -14.404800415039062
    9. '[
' → logprob: -14.404800415039062
    10. '][' → logprob: -14.904800415039062

Token 1124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7052720189094543
    2. '>' → logprob: -1.0802719593048096
    3. ']>' → logprob: -2.3302719593048096
    4. ' >' → logprob: -2.7052719593048096
    5. ' ]' → logprob: -6.955272197723389
    6. '[' → logprob: -7.330272197723389
    7. '[k' → logprob: -7.705272197723389
    8. '[i' → logprob: -9.45527172088623
    9. ')>' → logprob: -10.08027172088623
    10. '   ' → logprob: -10.08027172088623

Token 1125: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.429090291261673
    2. '>' → logprob: -1.0540902614593506
    3. '[' → logprob: -8.80409049987793
    4. '[k' → logprob: -9.55409049987793
    5. ' <' → logprob: -9.55409049987793
    6. '[i' → logprob: -10.67909049987793
    7. '<' → logprob: -11.42909049987793
    8. ' >
' → logprob: -11.67909049987793
    9. ' >
' → logprob: -11.67909049987793
    10. '   ' → logprob: -11.80409049987793

Token 1126: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0001584850688232109
    2. ' H' → logprob: -8.750158309936523
    3. '	H' → logprob: -18.250158309936523
    4. '   ' → logprob: -19.375158309936523
    5. ' ' → logprob: -20.875158309936523
    6. ' ' → logprob: -20.875158309936523
    7. '       ' → logprob: -21.125158309936523
    8. '[' → logprob: -21.375158309936523
    9. '#' → logprob: -21.500158309936523
    10. '<H' → logprob: -21.500158309936523

Token 1127: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.011049113236367702
    2. 'k' → logprob: -4.511049270629883
    3. ' k' → logprob: -14.261049270629883
    4. '[' → logprob: -15.136049270629883
    5. ' [' → logprob: -15.761049270629883
    6. '[
' → logprob: -16.761049270629883
    7. ']' → logprob: -17.261049270629883
    8. '{k' → logprob: -17.511049270629883
    9. '	k' → logprob: -17.636049270629883
    10. ' ' → logprob: -17.886049270629883

Token 1128: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.16358670592308044
    2. ']:
' → logprob: -2.9135866165161133
    3. ']' → logprob: -3.1635866165161133
    4. '       ' → logprob: -3.2885866165161133
    5. '           ' → logprob: -4.913586616516113
    6. '):' → logprob: -5.538586616516113
    7. ':' → logprob: -5.788586616516113
    8. ']:
' → logprob: -7.038586616516113
    9. '):
' → logprob: -7.163586616516113
    10. ']):' → logprob: -8.163586616516113

Token 1129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1592521369457245
    2. '       ' → logprob: -3.034252166748047
    3. ' new' → logprob: -3.159252166748047
    4. 'new' → logprob: -3.409252166748047
    5. ':' → logprob: -4.159252166748047
    6. '               ' → logprob: -5.534252166748047
    7. '[new' → logprob: -7.159252166748047
    8. ' ' → logprob: -7.284252166748047
    9. '	       ' → logprob: -7.409252166748047
    10. '<|end|>' → logprob: -8.159252166748047

Token 1130: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04466952010989189
    2. ' new' → logprob: -3.5446696281433105
    3. '               ' → logprob: -4.7946696281433105
    4. '           ' → logprob: -5.0446696281433105
    5. ' ' → logprob: -10.919669151306152
    6. 'if' → logprob: -11.169669151306152
    7. 'continue' → logprob: -11.419669151306152
    8. 'for' → logprob: -11.669669151306152
    9. '	new' → logprob: -11.794669151306152
    10. '                   ' → logprob: -12.044669151306152

Token 1131: ' On' (ID: 2160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0001446611131541431
    2. ' new' → logprob: -9.000144958496094
    3. 'if' → logprob: -11.250144958496094
    4. 'he' → logprob: -12.875144958496094
    5. '   ' → logprob: -13.375144958496094
    6. 'for' → logprob: -13.500144958496094
    7. 'continue' → logprob: -13.625144958496094
    8. '           ' → logprob: -15.125144958496094
    9. '#' → logprob: -15.125144958496094
    10. '(new' → logprob: -16.000144958496094

Token 1132: ' multipl' (ID: 44269)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.13321639597415924
    2. ' new' → logprob: -2.383216381072998
    3. 'for' → logprob: -4.133216381072998
    4. '+=' → logprob: -5.383216381072998
    5. '[new' → logprob: -6.508216381072998
    6. 'continue' → logprob: -6.633216381072998
    7. '=' → logprob: -6.758216381072998
    8. '#' → logprob: -6.883216381072998
    9. ' for' → logprob: -6.883216381072998
    10. '.' → logprob: -7.008216381072998

Token 1133: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.07531782239675522
    2. 'ier' → logprob: -2.700317859649658
    3. 'ique' → logprob: -5.700317859649658
    4. '       ' → logprob: -7.575317859649658
    5. 'iquer' → logprob: -7.825317859649658
    6. 'iez' → logprob: -8.4503173828125
    7. 'iplier' → logprob: -8.8253173828125
    8. 'iqu' → logprob: -8.9503173828125
    9. '           ' → logprob: -9.4503173828125
    10. 'ipl' → logprob: -9.5753173828125

Token 1134: ' l' (ID: 305)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04569895192980766
    2. 'dp' → logprob: -3.295698881149292
    3. ' new' → logprob: -4.920699119567871
    4. '           ' → logprob: -8.545699119567871
    5. ' dp' → logprob: -9.420699119567871
    6. '   ' → logprob: -10.545699119567871
    7. '       ' → logprob: -10.670699119567871
    8. '               ' → logprob: -12.295699119567871
    9. '          ' → logprob: -14.545699119567871
    10. '                   ' → logprob: -14.795699119567871

Token 1135: ''état' (ID: 116357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4700298607349396
    2. 'new' → logprob: -1.5950298309326172
    3. 'dp' → logprob: -2.095029830932617
    4. ' new' → logprob: -4.095029830932617
    5. '_dp' → logprob: -4.470029830932617
    6. 'e' → logprob: -4.720029830932617
    7. ' dp' → logprob: -5.720029830932617
    8. 'p' → logprob: -6.720029830932617
    9. ''espace' → logprob: -6.970029830932617
    10. '(dp' → logprob: -7.095029830932617

Token 1136: ' courant' (ID: 74694)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0817309245467186
    2. ' new' → logprob: -2.831730842590332
    3. 'dp' → logprob: -4.331730842590332
    4. '           ' → logprob: -5.581730842590332
    5. ' dp' → logprob: -7.206730842590332
    6. '[new' → logprob: -7.706730842590332
    7. 'prev' → logprob: -8.331730842590332
    8. '#' → logprob: -8.706730842590332
    9. ' précédent' → logprob: -8.956730842590332
    10. '               ' → logprob: -9.331730842590332

Token 1137: ' dp' (ID: 21546)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.23719200491905212
    2. ' new' → logprob: -2.237191915512085
    3. '           ' → logprob: -2.362191915512085
    4. ' by' → logprob: -6.112192153930664
    5. '[new' → logprob: -6.237192153930664
    6. 'dp' → logprob: -6.237192153930664
    7. 'by' → logprob: -6.612192153930664
    8. '       ' → logprob: -7.362192153930664
    9. ':' → logprob: -7.612192153930664
    10. '               ' → logprob: -7.862192153930664

Token 1138: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004025481757707894
    2. 'new' → logprob: -9.125402450561523
    3. '[new' → logprob: -9.125402450561523
    4. '[' → logprob: -9.625402450561523
    5. ' [' → logprob: -9.625402450561523
    6. '[k' → logprob: -10.750402450561523
    7. '[j' → logprob: -11.625402450561523
    8. '][' → logprob: -12.500402450561523
    9. '```' → logprob: -12.750402450561523
    10. '   ' → logprob: -12.875402450561523

Token 1139: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.023908568546175957
    2. '[i' → logprob: -3.7739086151123047
    3. ']' → logprob: -7.523908615112305
    4. ' ][' → logprob: -10.148908615112305
    5. '])' → logprob: -10.273908615112305
    6. '[k' → logprob: -11.023908615112305
    7. '[' → logprob: -11.398908615112305
    8. 'i' → logprob: -12.148908615112305
    9. ')[' → logprob: -13.273908615112305
    10. '[j' → logprob: -13.523908615112305

Token 1140: ' par' (ID: 686)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.695820689201355
    2. ' new' → logprob: -1.695820689201355
    3. ' *' → logprob: -1.945820689201355
    4. '*' → logprob: -2.8208208084106445
    5. '[i' → logprob: -3.3208208084106445
    6. '[' → logprob: -3.6958208084106445
    7. ']' → logprob: -4.3208208084106445
    8. 'new' → logprob: -4.4458208084106445
    9. ')' → logprob: -4.5708208084106445
    10. ',' → logprob: -5.1958208084106445

Token 1141: ' ' (ID: 220)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08776168525218964
    2. 'H' → logprob: -3.212761640548706
    3. '2' → logprob: -4.212761878967285
    4. 'new' → logprob: -4.337761878967285
    5. '1' → logprob: -4.587761878967285
    6. 'k' → logprob: -6.462761878967285
    7. ' dp' → logprob: -7.087761878967285
    8. '10' → logprob: -7.337761878967285
    9. '3' → logprob: -7.462761878967285
    10. '(dp' → logprob: -8.087761878967285

Token 1142: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17481492459774017
    2. 'H' → logprob: -2.6748149394989014
    3. '1' → logprob: -3.1748149394989014
    4. '2' → logprob: -3.6748149394989014
    5. 'new' → logprob: -4.299814701080322
    6. 'i' → logprob: -5.674814701080322
    7. 'k' → logprob: -6.424814701080322
    8. '(dp' → logprob: -6.799814701080322
    9. '10' → logprob: -7.424814701080322
    10. '3' → logprob: -7.424814701080322

Token 1143: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1144: ' affect' (ID: 7902)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.44368505477905273
    2. ' new' → logprob: -1.0686850547790527
    3. '+=' → logprob: -5.318685054779053
    4. '           ' → logprob: -5.693685054779053
    5. '+' → logprob: -6.318685054779053
    6. ' +=' → logprob: -6.568685054779053
    7. 'dp' → logprob: -7.193685054779053
    8. 'add' → logprob: -7.693685054779053
    9. 'acc' → logprob: -8.193685531616211
    10. '(' → logprob: -8.193685531616211

Token 1145: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1495041847229004
    2. 'e' → logprob: -2.0245041847229004
    3. 'ons' → logprob: -5.0245041847229
    4. '=' → logprob: -9.149503707885742
    5. 'é' → logprob: -10.024503707885742
    6. 'ent' → logprob: -10.649503707885742
    7. '       ' → logprob: -11.024503707885742
    8. '```' → logprob: -11.274503707885742
    9. '           ' → logprob: -12.024503707885742
    10. '   ' → logprob: -12.649503707885742

Token 1146: ' le' (ID: 505)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6451930403709412
    2. ' new' → logprob: -0.8951930403709412
    3. ' à' → logprob: -3.520193099975586
    4. 'à' → logprob: -3.895193099975586
    5. '           ' → logprob: -5.395193099975586
    6. 'a' → logprob: -5.520193099975586
    7. '=' → logprob: -5.895193099975586
    8. '(new' → logprob: -6.395193099975586
    9. ' a' → logprob: -7.270193099975586
    10. ')' → logprob: -7.770193099975586

Token 1147: ' résultat' (ID: 62556)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.401620090007782
    2. 'result' → logprob: -1.5266201496124268
    3. 'val' → logprob: -2.9016201496124268
    4. ' new' → logprob: -3.7766201496124268
    5. 'value' → logprob: -4.401619911193848
    6. 'nou' → logprob: -5.401619911193848
    7. 'à' → logprob: -5.401619911193848
    8. 'rés' → logprob: -5.651619911193848
    9. ' résultat' → logprob: -5.901619911193848
    10. 'token' → logprob: -6.526619911193848

Token 1148: ' à' (ID: 1221)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.45028987526893616
    2. 'new' → logprob: -1.8252898454666138
    3. ' new' → logprob: -2.3252899646759033
    4. ' to' → logprob: -3.2002899646759033
    5. 'to' → logprob: -3.7002899646759033
    6. ' à' → logprob: -4.450289726257324
    7. '[i' → logprob: -5.200289726257324
    8. '[' → logprob: -5.200289726257324
    9. '           ' → logprob: -5.325289726257324
    10. '```' → logprob: -5.825289726257324

Token 1149: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.002476016292348504
    2. ' new' → logprob: -6.002476215362549
    3. '[new' → logprob: -16.75247573852539
    4. '`' → logprob: -16.87747573852539
    5. '	new' → logprob: -17.00247573852539
    6. ')new' → logprob: -17.37747573852539
    7. 'nou' → logprob: -17.62747573852539
    8. '```' → logprob: -18.00247573852539
    9. 'newline' → logprob: -18.12747573852539
    10. 'New' → logprob: -18.50247573852539

Token 1150: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -9.088346359931165e-07
    2. 'dp' → logprob: -14.875000953674316
    3. '_d' → logprob: -15.375000953674316
    4. '_dt' → logprob: -16.25
    5. '_' → logprob: -16.25
    6. '_p' → logprob: -16.75
    7. '_pd' → logprob: -17.75
    8. '_dc' → logprob: -18.375
    9. '_cp' → logprob: -19.0
    10. '_df' → logprob: -19.375

Token 1151: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.029849069193005562
    2. '[i' → logprob: -3.529849052429199
    3. '[' → logprob: -9.4048490524292
    4. '[new' → logprob: -11.6548490524292
    5. 'k' → logprob: -12.4048490524292
    6. ' [' → logprob: -13.2798490524292
    7. '[j' → logprob: -14.0298490524292
    8. 'i' → logprob: -15.1548490524292
    9. 'new' → logprob: -15.2798490524292
    10. '```' → logprob: -16.154850006103516

Token 1152: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011512011289596558
    2. '[i' → logprob: -4.51151180267334
    3. '[' → logprob: -9.01151180267334
    4. ' ]' → logprob: -9.26151180267334
    5. ']+=' → logprob: -9.88651180267334
    6. ']=' → logprob: -10.01151180267334
    7. ')' → logprob: -10.01151180267334
    8. ']+' → logprob: -10.63651180267334
    9. '[k' → logprob: -11.26151180267334
    10. '   ' → logprob: -11.26151180267334

Token 1153: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2612210214138031
    2. 'new' → logprob: -2.511220932006836
    3. '=' → logprob: -3.261220932006836
    4. '               ' → logprob: -3.511220932006836
    5. ':' → logprob: -4.386220932006836
    6. ' new' → logprob: -4.636220932006836
    7. '   ' → logprob: -4.636220932006836
    8. '       ' → logprob: -5.011220932006836
    9. ')' → logprob: -5.386220932006836
    10. '[' → logprob: -5.636220932006836

Token 1154: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5762163996696472
    2. ' new' → logprob: -0.8262163996696472
    3. '2' → logprob: -8.701216697692871
    4. '=' → logprob: -10.076216697692871
    5. ' =' → logprob: -10.701216697692871
    6. '           ' → logprob: -11.076216697692871
    7. '               ' → logprob: -11.826216697692871
    8. '   ' → logprob: -12.076216697692871
    9. '                   ' → logprob: -13.201216697692871
    10. ' ' → logprob: -13.326216697692871

Token 1155: ' Cela' (ID: 44403)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07895918935537338
    2. ' new' → logprob: -2.5789592266082764
    3. '           ' → logprob: -10.078959465026855
    4. '               ' → logprob: -11.828959465026855
    5. '	new' → logprob: -11.828959465026855
    6. '=' → logprob: -12.328959465026855
    7. ' ' → logprob: -13.078959465026855
    8. '=new' → logprob: -13.328959465026855
    9. '        ' → logprob: -14.078959465026855
    10. '                   ' → logprob: -14.203959465026855

Token 1156: ' correspond' (ID: 11095)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40408018231391907
    2. '[' → logprob: -1.5290801525115967
    3. '*=' → logprob: -2.7790801525115967
    4. '[i' → logprob: -3.1540801525115967
    5. '+=' → logprob: -5.904080390930176
    6. '[new' → logprob: -6.029080390930176
    7. ' =' → logprob: -6.654080390930176
    8. ' *=' → logprob: -7.529080390930176
    9. '*' → logprob: -7.654080390930176
    10. '[next' → logprob: -7.904080390930176

Token 1157: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7840012907981873
    2. '<|end|>' → logprob: -0.7840012907981873
    3. ' to' → logprob: -3.784001350402832
    4. '=' → logprob: -4.034001350402832
    5. 'à' → logprob: -4.159001350402832
    6. 'to' → logprob: -5.034001350402832
    7. '<|end|>' → logprob: -5.534001350402832
    8. ' ' → logprob: -5.784001350402832
    9. ' =' → logprob: -5.784001350402832
    10. '    ' → logprob: -5.909001350402832

Token 1158: ' un' (ID: 537)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3391396999359131
    2. 'new' → logprob: -1.714139699935913
    3. ' dp' → logprob: -2.839139699935913
    4. ' new' → logprob: -3.089139699935913
    5. '2' → logprob: -5.839139938354492
    6. '       ' → logprob: -8.714139938354492
    7. ' ' → logprob: -8.964139938354492
    8. '   ' → logprob: -9.464139938354492
    9. '           ' → logprob: -9.714139938354492
    10. 'dou' → logprob: -10.339139938354492

Token 1159: ' double' (ID: 3503)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6606051921844482
    2. 'new' → logprob: -1.0356051921844482
    3. 'double' → logprob: -3.6606051921844482
    4. ' double' → logprob: -4.035605430603027
    5. 'dou' → logprob: -4.410605430603027
    6. ' nouveau' → logprob: -4.910605430603027
    7. 'shift' → logprob: -5.160605430603027
    8. 'pass' → logprob: -5.285605430603027
    9. 'nou' → logprob: -5.285605430603027
    10. 'pas' → logprob: -5.285605430603027

Token 1160: 'ment' (ID: 508)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1913103312253952
    2. '_' → logprob: -1.9413102865219116
    3. ' *' → logprob: -4.816310405731201
    4. 'space' → logprob: -5.191310405731201
    5. ' ' → logprob: -5.316310405731201
    6. '_new' → logprob: -6.191310405731201
    7. '=' → logprob: -6.566310405731201
    8. 'new' → logprob: -6.941310405731201
    9. 't' → logprob: -7.316310405731201
    10. ' espace' → logprob: -7.316310405731201

Token 1161: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1162: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6329646706581116
    2. ' dp' → logprob: -0.7579646706581116
    3. '(dp' → logprob: -9.132965087890625
    4. ' new' → logprob: -9.632965087890625
    5. ' ' → logprob: -10.132965087890625
    6. 'new' → logprob: -10.257965087890625
    7. '_dp' → logprob: -10.632965087890625
    8. '	dp' → logprob: -10.882965087890625
    9. 'space' → logprob: -11.007965087890625
    10. 'd' → logprob: -11.257965087890625

Token 1163: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08723928034305573
    2. '[' → logprob: -3.7122392654418945
    3. ']' → logprob: -3.8372392654418945
    4. 'new' → logprob: -5.0872392654418945
    5. '<|end|>' → logprob: -5.3372392654418945
    6. '_new' → logprob: -5.3372392654418945
    7. '[new' → logprob: -5.3372392654418945
    8. ' of' → logprob: -6.2122392654418945
    9. '=' → logprob: -6.2122392654418945
    10. '*' → logprob: -6.3372392654418945

Token 1164: ' façons' (ID: 165958)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9283185601234436
    2. 'new' → logprob: -1.1783185005187988
    3. ' ways' → logprob: -3.178318500518799
    4. 'poss' → logprob: -3.178318500518799
    5. 's' → logprob: -3.303318500518799
    6. 'che' → logprob: -3.303318500518799
    7. 'ways' → logprob: -3.428318500518799
    8. ' sequences' → logprob: -3.553318500518799
    9. 'dp' → logprob: -4.178318500518799
    10. ' chemins' → logprob: -5.053318500518799

Token 1165: '/sc' (ID: 74111)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4234343767166138
    2. '[' → logprob: -1.4234343767166138
    3. ' ' → logprob: -2.173434257507324
    4. '<|end|>' → logprob: -2.298434257507324
    5. '*' → logprob: -2.423434257507324
    6. '_' → logprob: -2.673434257507324
    7. 'new' → logprob: -3.423434257507324
    8. '   ' → logprob: -4.173434257507324
    9. '[new' → logprob: -4.298434257507324
    10. '+' → logprob: -4.798434257507324

Token 1166: 'én' (ID: 3289)
  Prédit: 'én'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'én' → logprob: -0.8211851119995117
    2. 'r' → logprob: -1.8211851119995117
    3. 'ènes' → logprob: -2.4461851119995117
    4. 'è' → logprob: -3.0711851119995117
    5. 'enarios' → logprob: -3.0711851119995117
    6. '#' → logprob: -3.8211851119995117
    7. 'on' → logprob: -3.9461851119995117
    8. 'ré' → logprob: -4.196185111999512
    9. 'ommer' → logprob: -4.196185111999512
    10. 'èn' → logprob: -4.571185111999512

Token 1167: 'arios' (ID: 8368)
  Prédit: 'enarios'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enarios' → logprob: -0.9139562249183655
    2. 'én' → logprob: -1.7889561653137207
    3. 'aires' → logprob: -1.7889561653137207
    4. 'ario' → logprob: -2.4139561653137207
    5. 'enario' → logprob: -3.1639561653137207
    6. 'ènes' → logprob: -3.4139561653137207
    7. 'à' → logprob: -4.038956165313721
    8. 'é' → logprob: -4.163956165313721
    9. 'arios' → logprob: -4.663956165313721
    10. 'naires' → logprob: -4.663956165313721

Token 1168: ' compatibles' (ID: 168779)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5651658773422241
    2. '<|end|>' → logprob: -1.8151658773422241
    3. ')' → logprob: -2.0651659965515137
    4. '   ' → logprob: -2.4401659965515137
    5. '       ' → logprob: -2.4401659965515137
    6. 'new' → logprob: -2.8151659965515137
    7. '[new' → logprob: -2.8151659965515137
    8. ']' → logprob: -3.1901659965515137
    9. '[' → logprob: -3.5651659965515137
    10. '               ' → logprob: -3.8151659965515137

Token 1169: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1170: ' cet' (ID: 19505)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.05212508514523506
    2. 'i' → logprob: -3.4271249771118164
    3. ' new' → logprob: -5.302124977111816
    4. 'atte' → logprob: -5.927124977111816
    5. 'l' → logprob: -6.177124977111816
    6. 'prendre' → logprob: -6.927124977111816
    7. ' i' → logprob: -7.052124977111816
    8. 'tr' → logprob: -7.052124977111816
    9. 'aj' → logprob: -7.177124977111816
    10. 'former' → logprob: -7.302124977111816

Token 1171: ' état' (ID: 59181)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1028842106461525
    2. 'es' → logprob: -3.477884292602539
    3. ']' → logprob: -4.102884292602539
    4. 'indice' → logprob: -4.102884292602539
    5. '[i' → logprob: -4.602884292602539
    6. '=' → logprob: -5.102884292602539
    7. 'esp' → logprob: -5.352884292602539
    8. '[' → logprob: -6.102884292602539
    9. '+' → logprob: -6.352884292602539
    10. '```' → logprob: -6.602884292602539

Token 1172: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2622616291046143
    2. '[new' → logprob: -2.2622616291046143
    3. '               ' → logprob: -2.3872616291046143
    4. '       ' → logprob: -2.3872616291046143
    5. 'new' → logprob: -2.7622616291046143
    6. ')' → logprob: -2.8872616291046143
    7. '[' → logprob: -2.8872616291046143
    8. '   ' → logprob: -3.0122616291046143
    9. '<|end|>' → logprob: -3.1372616291046143
    10. ']' → logprob: -3.1372616291046143

Token 1173: '           ' (ID: 352)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.22191153466701508
    2. '           ' → logprob: -2.5969114303588867
    3. ' new' → logprob: -2.8469114303588867
    4. '=' → logprob: -3.4719114303588867
    5. '               ' → logprob: -4.221911430358887
    6. ':' → logprob: -4.346911430358887
    7. '       ' → logprob: -6.096911430358887
    8. ' =' → logprob: -6.471911430358887
    9. '*' → logprob: -7.221911430358887
    10. '[new' → logprob: -7.596911430358887

Token 1174: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.034289829432964325
    2. ' new' → logprob: -3.409289836883545
    3. '           ' → logprob: -7.659289836883545
    4. '               ' → logprob: -8.909289360046387
    5. '                   ' → logprob: -11.659289360046387
    6. '       ' → logprob: -11.659289360046387
    7. '	new' → logprob: -11.784289360046387
    8. '   ' → logprob: -12.534289360046387
    9. ' ' → logprob: -13.284289360046387
    10. '                       ' → logprob: -13.534289360046387

Token 1175: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -12.750004768371582
    3. '_d' → logprob: -14.250004768371582
    4. '_dt' → logprob: -15.375004768371582
    5. '_p' → logprob: -15.750004768371582
    6. '_DP' → logprob: -16.1250057220459
    7. '_dc' → logprob: -16.3750057220459
    8. '_ds' → logprob: -16.3750057220459
    9. '_de' → logprob: -16.3750057220459
    10. '_df' → logprob: -16.5000057220459

Token 1176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023250321100931615
    2. '[' → logprob: -8.375232696533203
    3. ' [' → logprob: -14.000232696533203
    4. 'i' → logprob: -15.375232696533203
    5. '[I' → logprob: -15.500232696533203
    6. '```' → logprob: -15.875232696533203
    7. '[new' → logprob: -16.375232696533203
    8. '[
' → logprob: -16.750232696533203
    9. '[s' → logprob: -17.125232696533203
    10. '=' → logprob: -17.625232696533203

Token 1177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00802664179354906
    2. ']=' → logprob: -5.133026599884033
    3. ']+=' → logprob: -6.383026599884033
    4. '=' → logprob: -7.883026599884033
    5. ' ]' → logprob: -10.633027076721191
    6. '+=' → logprob: -12.758027076721191
    7. ' =' → logprob: -14.383027076721191
    8. ']+' → logprob: -15.258027076721191
    9. '[' → logprob: -15.383027076721191
    10. '   ' → logprob: -15.508027076721191

Token 1178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015177277848124504
    2. '+=' → logprob: -4.515177249908447
    3. ' =' → logprob: -5.515177249908447
    4. ' +=' → logprob: -9.265177726745605
    5. '*=' → logprob: -14.015177726745605
    6. '.=' → logprob: -16.39017677307129
    7. ']+=' → logprob: -17.01517677307129
    8. '+' → logprob: -17.39017677307129
    9. '=

' → logprob: -17.64017677307129
    10. '＝' → logprob: -18.14017677307129

Token 1179: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013565480476245284
    2. '2' → logprob: -6.751356601715088
    3. ' dp' → logprob: -8.62635612487793
    4. '(dp' → logprob: -12.25135612487793
    5. ' ' → logprob: -14.12635612487793
    6. '   ' → logprob: -14.25135612487793
    7. '	dp' → logprob: -14.75135612487793
    8. '(' → logprob: -15.25135612487793
    9. 'd' → logprob: -16.37635612487793
    10. '_dp' → logprob: -17.12635612487793

Token 1180: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.5570885807392187e-05
    2. 'k' → logprob: -11.375015258789062
    3. '[' → logprob: -12.500015258789062
    4. '[i' → logprob: -15.625015258789062
    5. ' k' → logprob: -16.625015258789062
    6. ' [' → logprob: -17.500015258789062
    7. '(k' → logprob: -17.875015258789062
    8. '{k' → logprob: -18.125015258789062
    9. ',k' → logprob: -19.125015258789062
    10. '	k' → logprob: -19.250015258789062

Token 1181: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004170873435214162
    2. ']*' → logprob: -8.12541675567627
    3. '*' → logprob: -9.12541675567627
    4. ' *' → logprob: -11.87541675567627
    5. ' ]' → logprob: -12.75041675567627
    6. ']<<' → logprob: -13.37541675567627
    7. ']
' → logprob: -15.50041675567627
    8. ')' → logprob: -15.50041675567627
    9. '   ' → logprob: -16.000417709350586
    10. ' ' → logprob: -16.750417709350586

Token 1182: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31369447708129883
    2. ' *' → logprob: -1.3136944770812988
    3. '<<' → logprob: -8.56369400024414
    4. '<|end|>' → logprob: -9.56369400024414
    5. ' <<' → logprob: -10.31369400024414
    6. '   ' → logprob: -10.93869400024414
    7. ' <<=' → logprob: -11.06369400024414
    8. ' ' → logprob: -11.06369400024414
    9. '*(' → logprob: -11.18869400024414
    10. '       ' → logprob: -11.31369400024414

Token 1183: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '
' → logprob: -16.62504005432129
    4. '(' → logprob: -17.37504005432129
    5. '   ' → logprob: -17.75004005432129
    6. '```' → logprob: -18.87504005432129
    7. '۲' → logprob: -19.00004005432129
    8. 'mod' → logprob: -19.00004005432129
    9. '  ' → logprob: -19.06254005432129
    10. '
' → logprob: -19.68754005432129

Token 1184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.750003814697266
    4. '(' → logprob: -16.875003814697266
    5. '۲' → logprob: -18.312503814697266
    6. '  ' → logprob: -19.062503814697266
    7. '
' → logprob: -19.125003814697266
    8. '```' → logprob: -19.562503814697266
    9. '２' → logprob: -19.625003814697266
    10. '	' → logprob: -19.812503814697266

Token 1185: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1186: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1187: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1188: ' DE' (ID: 4386)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6937212944030762
    2. 'elif' → logprob: -0.6937212944030762
    3. ' else' → logprob: -7.943721294403076
    4. ' elif' → logprob: -8.693721771240234
    5. '	elif' → logprob: -10.443721771240234
    6. '	else' → logprob: -12.068721771240234
    7. 'el' → logprob: -12.318721771240234
    8. '   ' → logprob: -12.318721771240234
    9. '```' → logprob: -12.818721771240234
    10. '       ' → logprob: -13.068721771240234

Token 1189: 'UX' (ID: 22513)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.006731830071657896
    2. 'else' → logprob: -5.631731986999512
    3. 'l' → logprob: -6.381731986999512
    4. ' elif' → logprob: -6.881731986999512
    5. 'el' → logprob: -8.381731986999512
    6. 'f' → logprob: -9.256731986999512
    7. '```' → logprob: -10.381731986999512
    8. 'if' → logprob: -11.006731986999512
    9. 'lse' → logprob: -11.506731986999512
    10. ' else' → logprob: -12.131731986999512

Token 1190: 'I' (ID: 40)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6356562376022339
    2. ' elif' → logprob: -0.7606562376022339
    3. ' else' → logprob: -6.760656356811523
    4. 'else' → logprob: -6.885656356811523
    5. 'e' → logprob: -8.010656356811523
    6. 'é' → logprob: -8.760656356811523
    7. 'nd' → logprob: -9.010656356811523
    8. '	elif' → logprob: -9.760656356811523
    9. 'ème' → logprob: -9.885656356811523
    10. 'ième' → logprob: -10.635656356811523

Token 1191: 'EM' (ID: 3646)
  Prédit: 'ème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.6910565495491028
    2. 'è' → logprob: -1.191056489944458
    3. 'me' → logprob: -2.441056489944458
    4. 'EM' → logprob: -3.691056489944458
    5. '#' → logprob: -4.066056728363037
    6. 'eme' → logprob: -4.066056728363037
    7. 'e' → logprob: -4.191056728363037
    8. 'È' → logprob: -4.441056728363037
    9. 'er' → logprob: -5.691056728363037
    10. 'ME' → logprob: -6.066056728363037

Token 1192: 'E' (ID: 36)
  Prédit: 'ME'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ME' → logprob: -1.1791859865188599
    2. 'EM' → logprob: -1.6791859865188599
    3. '#' → logprob: -1.9291859865188599
    4. 'È' → logprob: -1.9291859865188599
    5. 'RE' → logprob: -2.3041858673095703
    6. 'ER' → logprob: -3.1791858673095703
    7. 'E' → logprob: -3.5541858673095703
    8. 'ème' → logprob: -3.9291858673095703
    9. 'è' → logprob: -4.80418586730957
    10. 'me' → logprob: -5.17918586730957

Token 1193: ' CAS' (ID: 44953)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.34078744053840637
    2. ' elif' → logprob: -1.340787410736084
    3. 'case' → logprob: -4.590787410736084
    4. ' case' → logprob: -4.715787410736084
    5. ':' → logprob: -5.840787410736084
    6. 'else' → logprob: -6.340787410736084
    7. ' cas' → logprob: -6.840787410736084
    8. ' else' → logprob: -7.340787410736084
    9. '_case' → logprob: -7.340787410736084
    10. ' if' → logprob: -7.965787410736084

Token 1194: ':' (ID: 25)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.9187249541282654
    2. ' elif' → logprob: -1.0437250137329102
    3. ':' → logprob: -1.4187250137329102
    4. '   ' → logprob: -6.16872501373291
    5. '	elif' → logprob: -6.54372501373291
    6. 'else' → logprob: -6.91872501373291
    7. '       ' → logprob: -7.04372501373291
    8. ' :' → logprob: -7.29372501373291
    9. ' else' → logprob: -8.04372501373291
    10. '```' → logprob: -9.16872501373291

Token 1195: ' sinon' (ID: 52915)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03380809351801872
    2. ' elif' → logprob: -3.4088079929351807
    3. 'if' → logprob: -9.283807754516602
    4. 'else' → logprob: -10.783807754516602
    5. ' H' → logprob: -11.283807754516602
    6. 'el' → logprob: -11.533807754516602
    7. ' if' → logprob: -11.533807754516602
    8. 'H' → logprob: -12.158807754516602
    9. ' new' → logprob: -12.533807754516602
    10. 'new' → logprob: -12.658807754516602

Token 1196: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18072548508644104
    2. 'elif' → logprob: -2.555725574493408
    3. '       ' → logprob: -2.805725574493408
    4. 'else' → logprob: -4.680725574493408
    5. ' elif' → logprob: -4.805725574493408
    6. ':
' → logprob: -5.930725574493408
    7. ' if' → logprob: -6.180725574493408
    8. 'if' → logprob: -6.305725574493408
    9. ' else' → logprob: -6.680725574493408
    10. '           ' → logprob: -7.305725574493408

Token 1197: ' si' (ID: 1784)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.376242756843567
    2. 'elif' → logprob: -1.626242756843567
    3. 'if' → logprob: -1.751242756843567
    4. 'new' → logprob: -2.2512426376342773
    5. '       ' → logprob: -2.2512426376342773
    6. ' new' → logprob: -2.6262426376342773
    7. '           ' → logprob: -3.1262426376342773
    8. ' if' → logprob: -3.7512426376342773
    9. ' else' → logprob: -4.001242637634277
    10. ' elif' → logprob: -5.001242637634277

Token 1198: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08561429381370544
    2. ' H' → logprob: -2.8356142044067383
    3. 'i' → logprob: -4.085614204406738
    4. ' i' → logprob: -5.210614204406738
    5. 'k' → logprob: -7.335614204406738
    6. 'new' → logprob: -8.835614204406738
    7. ' k' → logprob: -9.460614204406738
    8. 'not' → logprob: -9.585614204406738
    9. ' new' → logprob: -9.960614204406738
    10. ' not' → logprob: -10.085614204406738

Token 1199: ' valeur' (ID: 41664)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.43796032667160034
    2. 'k' → logprob: -1.6879603862762451
    3. 'i' → logprob: -1.8129603862762451
    4. ' i' → logprob: -5.937960147857666
    5. ' H' → logprob: -6.812960147857666
    6. ' k' → logprob: -7.062960147857666
    7. 'abs' → logprob: -7.437960147857666
    8. 'dp' → logprob: -7.437960147857666
    9. 'not' → logprob: -8.937960624694824
    10. 'new' → logprob: -9.437960624694824

Token 1200: ' précédente' (ID: 177319)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0339309461414814
    2. '[' → logprob: -4.033930778503418
    3. ' H' → logprob: -4.908930778503418
    4. '[i' → logprob: -4.908930778503418
    5. '[k' → logprob: -7.408930778503418
    6. 'i' → logprob: -9.533930778503418
    7. '#' → logprob: -10.408930778503418
    8. '```' → logprob: -10.408930778503418
    9. '[
' → logprob: -10.908930778503418
    10. '=' → logprob: -10.908930778503418

Token 1201: ' H' (ID: 487)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9463555216789246
    2. 'i' → logprob: -1.6963555812835693
    3. ' i' → logprob: -2.0713555812835693
    4. 'if' → logprob: -2.4463555812835693
    5. ' if' → logprob: -3.5713555812835693
    6. ' ==' → logprob: -3.6963555812835693
    7. ' !=' → logprob: -3.6963555812835693
    8. ' and' → logprob: -3.8213555812835693
    9. '==' → logprob: -3.9463555812835693
    10. '[k' → logprob: -3.9463555812835693

Token 1202: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019727790728211403
    2. '[k' → logprob: -4.01972770690918
    3. 'i' → logprob: -6.89472770690918
    4. '[' → logprob: -8.64472770690918
    5. '[j' → logprob: -9.14472770690918
    6. '```' → logprob: -9.14472770690918
    7. 'k' → logprob: -9.26972770690918
    8. '[
' → logprob: -11.14472770690918
    9. ' [' → logprob: -11.76972770690918
    10. '#' → logprob: -11.89472770690918

Token 1203: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27822762727737427
    2. '[i' → logprob: -1.6532275676727295
    3. ']>' → logprob: -3.4032275676727295
    4. 'i' → logprob: -5.153227806091309
    5. ']==' → logprob: -5.778227806091309
    6. ']>=' → logprob: -6.153227806091309
    7. '>' → logprob: -6.403227806091309
    8. '[j' → logprob: -6.903227806091309
    9. '[k' → logprob: -7.153227806091309
    10. '][' → logprob: -7.278227806091309

Token 1204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015419998671859503
    2. 'i' → logprob: -6.501542091369629
    3. ']' → logprob: -10.626542091369629
    4. 'k' → logprob: -11.751542091369629
    5. '-' → logprob: -12.626542091369629
    6. ' ' → logprob: -13.376542091369629
    7. '```' → logprob: -14.126542091369629
    8. '#' → logprob: -15.251542091369629
    9. '(i' → logprob: -15.501542091369629
    10. ' i' → logprob: -15.689042091369629

Token 1205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023020552471280098
    2. ']>' → logprob: -4.5230207443237305
    3. ']!=' → logprob: -5.8980207443237305
    4. '[i' → logprob: -6.0230207443237305
    5. '>' → logprob: -6.5230207443237305
    6. ']>=' → logprob: -6.8980207443237305
    7. '[k' → logprob: -7.0230207443237305
    8. ']==' → logprob: -7.5230207443237305
    9. ' ]' → logprob: -7.7730207443237305
    10. 'if' → logprob: -7.8980207443237305

Token 1206: ' (' (ID: 350)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1615369319915771
    2. '<=' → logprob: -1.2865369319915771
    3. '>=' → logprob: -2.036536931991577
    4. ' <' → logprob: -2.911536931991577
    5. ' <=' → logprob: -2.911536931991577
    6. '[i' → logprob: -3.411536931991577
    7. '<' → logprob: -3.661536931991577
    8. ' >=' → logprob: -3.661536931991577
    9. ' >' → logprob: -3.786536931991577
    10. '!=' → logprob: -4.161537170410156

Token 1207: 'à' (ID: 708)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.35628604888916016
    2. 'i' → logprob: -1.6062860488891602
    3. ' k' → logprob: -3.10628604888916
    4. ' i' → logprob: -3.73128604888916
    5. '>' → logprob: -4.23128604888916
    6. 'if' → logprob: -5.10628604888916
    7. '>=' → logprob: -5.98128604888916
    8. 'H' → logprob: -6.73128604888916
    9. ' >' → logprob: -6.85628604888916
    10. ' and' → logprob: -6.98128604888916

Token 1208: ' gauche' (ID: 58367)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06641677021980286
    2. 'i' → logprob: -2.8164167404174805
    3. ' k' → logprob: -5.6914167404174805
    4. ' i' → logprob: -8.31641674041748
    5. '>=' → logprob: -8.69141674041748
    6. '...' → logprob: -8.94141674041748
    7. '0' → logprob: -9.31641674041748
    8. 'l' → logprob: -9.44141674041748
    9. '(k' → logprob: -9.81641674041748
    10. '>' → logprob: -9.94141674041748

Token 1209: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.844375491142273
    2. ']' → logprob: -1.219375491142273
    3. ' >' → logprob: -1.469375491142273
    4. ' >=' → logprob: -4.7193756103515625
    5. ' !=' → logprob: -4.9693756103515625
    6. '>=' → logprob: -5.0943756103515625
    7. ')' → logprob: -5.2193756103515625
    8. ']>' → logprob: -5.5943756103515625
    9. ' <' → logprob: -5.7193756103515625
    10. '!=' → logprob: -5.8443756103515625

Token 1210: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0414835214614868
    2. ' and' → logprob: -1.6664835214614868
    3. '>' → logprob: -2.0414834022521973
    4. ' ==' → logprob: -2.7914834022521973
    5. ' if' → logprob: -2.9164834022521973
    6. 'if' → logprob: -2.9164834022521973
    7. ' !=' → logprob: -3.0414834022521973
    8. ' >' → logprob: -3.1664834022521973
    9. '==' → logprob: -4.041483402252197
    10. '!=' → logprob: -4.291483402252197

Token 1211: ' inf' (ID: 5603)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2620272636413574
    2. '<' → logprob: -2.6370272636413574
    3. ' not' → logprob: -2.6370272636413574
    4. '>=' → logprob: -3.6370272636413574
    5. ' >' → logprob: -3.8870272636413574
    6. 'not' → logprob: -4.012027263641357
    7. 'H' → logprob: -5.012027263641357
    8. ' <' → logprob: -5.512027263641357
    9. ' H' → logprob: -6.137027263641357
    10. ' >=' → logprob: -6.262027263641357

Token 1212: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.2385609894990921
    2. 'érieur' → logprob: -1.6135610342025757
    3. 'érie' → logprob: -5.238561153411865
    4. '>' → logprob: -5.363561153411865
    5. 'é' → logprob: -7.113561153411865
    6. 'éro' → logprob: -7.363561153411865
    7. 'er' → logprob: -8.113560676574707
    8. 'è' → logprob: -8.363560676574707
    9. 'érieurs' → logprob: -8.363560676574707
    10. 'éri' → logprob: -8.613560676574707

Token 1213: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3628997504711151
    2. ' and' → logprob: -2.4878997802734375
    3. ' or' → logprob: -2.6128997802734375
    4. 'à' → logprob: -3.2378997802734375
    5. 'elif' → logprob: -3.8628997802734375
    6. 'else' → logprob: -4.1128997802734375
    7. '=' → logprob: -4.3628997802734375
    8. 'and' → logprob: -4.4878997802734375
    9. ' <' → logprob: -5.2378997802734375
    10. 'if' → logprob: -5.3628997802734375

Token 1214: ' ég' (ID: 33150)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.586296796798706
    2. 'H' → logprob: -0.961296796798706
    3. ' k' → logprob: -3.711296796798706
    4. ' H' → logprob: -3.836296796798706
    5. '=' → logprob: -5.461297035217285
    6. '```' → logprob: -6.336297035217285
    7. '>' → logprob: -6.461297035217285
    8. 'strict' → logprob: -6.711297035217285
    9. '=k' → logprob: -6.836297035217285
    10. '(k' → logprob: -7.211297035217285

Token 1215: 'ale' (ID: 1167)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5863663554191589
    2. 'ale' → logprob: -0.8363663554191589
    3. 'alité' → logprob: -6.461366176605225
    4. '```' → logprob: -6.586366176605225
    5. 'à' → logprob: -6.961366176605225
    6. 'a' → logprob: -7.086366176605225
    7. 'gal' → logprob: -7.211366176605225
    8. 'ual' → logprob: -7.211366176605225
    9. 'ales' → logprob: -7.586366176605225
    10. 'als' → logprob: -8.523866653442383

Token 1216: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7074242234230042
    2. '(H' → logprob: -1.5824241638183594
    3. 'H' → logprob: -1.8324241638183594
    4. ' H' → logprob: -2.5824241638183594
    5. 'à' → logprob: -2.9574241638183594
    6. '   ' → logprob: -6.207424163818359
    7. ' ' → logprob: -6.582424163818359
    8. ':' → logprob: -6.582424163818359
    9. 'to' → logprob: -6.582424163818359
    10. ' (' → logprob: -6.707424163818359

Token 1217: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.008619066327810287
    2. ' H' → logprob: -4.7586188316345215
    3. ' ' → logprob: -13.50861930847168
    4. 'k' → logprob: -13.88361930847168
    5. '`' → logprob: -14.13361930847168
    6. ' ' → logprob: -14.88361930847168
    7. '	H' → logprob: -15.00861930847168
    8. '<H' → logprob: -15.25861930847168
    9. '0' → logprob: -16.00861930847168
    10. '_H' → logprob: -16.13361930847168

Token 1218: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.283110648393631
    2. '[i' → logprob: -1.4081106185913086
    3. '[' → logprob: -7.158110618591309
    4. 'k' → logprob: -7.408110618591309
    5. 'i' → logprob: -8.283110618591309
    6. ' [' → logprob: -8.533110618591309
    7. '```' → logprob: -10.283110618591309
    8. 'H' → logprob: -10.283110618591309
    9. '[
' → logprob: -11.533110618591309
    10. '#' → logprob: -11.908110618591309

Token 1219: ']
' (ID: 1592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9973466992378235
    2. ' and' → logprob: -1.2473466396331787
    3. ']' → logprob: -2.3723466396331787
    4. ']:' → logprob: -2.6223466396331787
    5. '):' → logprob: -2.6223466396331787
    6. 'and' → logprob: -3.4973466396331787
    7. ')' → logprob: -4.122346878051758
    8. '):
' → logprob: -4.247346878051758
    9. ']:
' → logprob: -4.372346878051758
    10. '       ' → logprob: -4.497346878051758

Token 1220: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1268153339624405
    2. '       ' → logprob: -3.1268153190612793
    3. 'elif' → logprob: -4.001815319061279
    4. 'and' → logprob: -4.126815319061279
    5. ':' → logprob: -4.251815319061279
    6. ' or' → logprob: -5.001815319061279
    7. ' elif' → logprob: -5.001815319061279
    8. '```' → logprob: -5.501815319061279
    9. '           ' → logprob: -5.876815319061279
    10. '   ' → logprob: -6.001815319061279

Token 1221: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.1606939285993576
    2. ' elif' → logprob: -1.910693883895874
    3. 'else' → logprob: -8.035694122314453
    4. ' else' → logprob: -9.910694122314453
    5. '       ' → logprob: -10.285694122314453
    6. '	elif' → logprob: -10.535694122314453
    7. 'el' → logprob: -11.035694122314453
    8. '```' → logprob: -11.785694122314453
    9. '   ' → logprob: -12.410694122314453
    10. ':' → logprob: -13.410694122314453

Token 1222: ' H' (ID: 487)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.02176034450531
    2. 'H' → logprob: -1.27176034450531
    3. ' H' → logprob: -1.64676034450531
    4. ' k' → logprob: -1.89676034450531
    5. ' i' → logprob: -4.7717604637146
    6. 'i' → logprob: -4.8967604637146
    7. ' (' → logprob: -7.7717604637146
    8. '(k' → logprob: -8.396759986877441
    9. '(' → logprob: -9.021759986877441
    10. ' ' → logprob: -9.146759986877441

Token 1223: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.22735059261322021
    2. '[k' → logprob: -1.6023505926132202
    3. 'i' → logprob: -6.72735071182251
    4. 'k' → logprob: -7.47735071182251
    5. '[' → logprob: -9.352350234985352
    6. '```' → logprob: -10.352350234985352
    7. '   ' → logprob: -11.352350234985352
    8. ' [' → logprob: -11.852350234985352
    9. '[
' → logprob: -12.227350234985352
    10. '_i' → logprob: -12.602350234985352

Token 1224: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0265355221927166
    2. ' -' → logprob: -4.026535511016846
    3. ']' → logprob: -4.901535511016846
    4. '   ' → logprob: -8.526535987854004
    5. ']-' → logprob: -9.026535987854004
    6. '[i' → logprob: -9.276535987854004
    7. 'i' → logprob: -9.401535987854004
    8. ']==' → logprob: -9.526535987854004
    9. ']>' → logprob: -10.151535987854004
    10. '][' → logprob: -10.526535987854004

Token 1225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014489953173324466
    2. ' ' → logprob: -9.000144958496094
    3. 'i' → logprob: -12.000144958496094
    4. ']' → logprob: -12.000144958496094
    5. '   ' → logprob: -13.250144958496094
    6. '```' → logprob: -13.312644958496094
    7. '...' → logprob: -14.125144958496094
    8. '
' → logprob: -14.187644958496094
    9. '2' → logprob: -14.375144958496094
    10. ' i' → logprob: -15.062644958496094

Token 1226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.0629870858974755e-05
    2. ' ' → logprob: -9.87506103515625
    3. '2' → logprob: -13.18756103515625
    4. 'i' → logprob: -13.31256103515625
    5. '```' → logprob: -13.81256103515625
    6. ']' → logprob: -13.87506103515625
    7. '0' → logprob: -13.93756103515625
    8. '   ' → logprob: -14.68756103515625
    9. '
' → logprob: -15.43756103515625
    10. '...' → logprob: -15.93756103515625

Token 1227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03728022053837776
    2. ' <=' → logprob: -4.662280082702637
    3. ']>=' → logprob: -4.662280082702637
    4. ']<=' → logprob: -4.787280082702637
    5. '<=' → logprob: -5.287280082702637
    6. ' ]' → logprob: -6.537280082702637
    7. ' >=' → logprob: -6.662280082702637
    8. '>=' → logprob: -6.787280082702637
    9. '   ' → logprob: -9.412280082702637
    10. '']' → logprob: -9.787280082702637

Token 1228: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.38604986667633057
    2. ' <=' → logprob: -1.7610498666763306
    3. '>=' → logprob: -2.136049747467041
    4. ' >=' → logprob: -3.511049747467041
    5. '>' → logprob: -9.0110502243042
    6. '!=' → logprob: -9.2610502243042
    7. '==' → logprob: -9.5110502243042
    8. ' ==' → logprob: -11.1360502243042
    9. ' !=' → logprob: -11.2610502243042
    10. ' >' → logprob: -11.5110502243042

Token 1229: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0010336418636143208
    2. ' H' → logprob: -6.876033782958984
    3. '	H' → logprob: -14.626033782958984
    4. 'i' → logprob: -15.376033782958984
    5. '   ' → logprob: -16.876033782958984
    6. ' ' → logprob: -17.251033782958984
    7. ' ' → logprob: -17.501033782958984
    8. '_H' → logprob: -18.126033782958984
    9. '```' → logprob: -18.251033782958984
    10. 'Hs' → logprob: -18.751033782958984

Token 1230: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0028683508280664682
    2. 'i' → logprob: -5.877868175506592
    3. '[' → logprob: -10.12786865234375
    4. ' [' → logprob: -11.25286865234375
    5. ' i' → logprob: -12.12786865234375
    6. '[k' → logprob: -13.00286865234375
    7. '[
' → logprob: -13.62786865234375
    8. '```' → logprob: -14.62786865234375
    9. '(i' → logprob: -15.62786865234375
    10. '	i' → logprob: -15.75286865234375

Token 1231: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3734852969646454
    2. ']:' → logprob: -1.2484853267669678
    3. ':' → logprob: -4.498485088348389
    4. ']' → logprob: -5.123485088348389
    5. '       ' → logprob: -5.748485088348389
    6. ':
' → logprob: -6.373485088348389
    7. ']:
' → logprob: -6.998485088348389
    8. '           ' → logprob: -7.248485088348389
    9. '):
' → logprob: -7.373485088348389
    10. '   ' → logprob: -9.373485565185547

Token 1232: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0563434436917305
    2. '           ' → logprob: -3.4313435554504395
    3. ':
' → logprob: -4.9313435554504395
    4. '       ' → logprob: -5.3063435554504395
    5. '               ' → logprob: -5.5563435554504395
    6. ' :' → logprob: -6.0563435554504395
    7. ' new' → logprob: -6.4313435554504395
    8. 'new' → logprob: -7.6813435554504395
    9. ' and' → logprob: -8.306343078613281
    10. ':new' → logprob: -8.681343078613281

Token 1233: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6626392006874084
    2. ' new' → logprob: -0.9126392006874084
    3. '               ' → logprob: -2.9126391410827637
    4. '           ' → logprob: -3.6626391410827637
    5. '	       ' → logprob: -6.787639141082764
    6. '	           ' → logprob: -7.912639141082764
    7. '		' → logprob: -8.037639617919922
    8. '[new' → logprob: -8.412639617919922
    9. '			' → logprob: -8.537639617919922
    10. '        ' → logprob: -9.287639617919922

Token 1234: ' On' (ID: 2160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.002886425703763962
    2. ' new' → logprob: -5.8778862953186035
    3. 'if' → logprob: -10.002886772155762
    4. '           ' → logprob: -10.752886772155762
    5. 'for' → logprob: -12.127886772155762
    6. '       ' → logprob: -12.752886772155762
    7. '               ' → logprob: -12.752886772155762
    8. ' if' → logprob: -14.127886772155762
    9. '```' → logprob: -14.377886772155762
    10. '                   ' → logprob: -14.502886772155762

Token 1235: ' multipl' (ID: 44269)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07232477515935898
    2. ' new' → logprob: -2.697324752807617
    3. 'for' → logprob: -6.322324752807617
    4. ' for' → logprob: -8.197324752807617
    5. 'continue' → logprob: -9.072324752807617
    6. '[new' → logprob: -9.322324752807617
    7. '```' → logprob: -10.447324752807617
    8. 'if' → logprob: -10.947324752807617
    9. '       ' → logprob: -11.447324752807617
    10. '           ' → logprob: -11.572324752807617

Token 1236: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -1.04149329662323
    2. 'new' → logprob: -2.0414934158325195
    3. 'dp' → logprob: -2.1664934158325195
    4. '_dp' → logprob: -2.5414934158325195
    5. 'ute' → logprob: -3.0414934158325195
    6. '+=' → logprob: -3.2914934158325195
    7. 'y' → logprob: -3.4164934158325195
    8. 'ent' → logprob: -3.7914934158325195
    9. '_new' → logprob: -3.7914934158325195
    10. '=' → logprob: -3.7914934158325195

Token 1237: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06625969707965851
    2. 'new' → logprob: -3.1912596225738525
    3. ' dp' → logprob: -3.9412596225738525
    4. ' new' → logprob: -5.691259860992432
    5. '(dp' → logprob: -8.816259384155273
    6. '	dp' → logprob: -10.691259384155273
    7. '   ' → logprob: -11.316259384155273
    8. '_dp' → logprob: -13.191259384155273
    9. '       ' → logprob: -13.691259384155273
    10. ' ' → logprob: -14.066259384155273

Token 1238: ''état' (ID: 116357)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016976037994027138
    2. 'new' → logprob: -4.6419758796691895
    3. ' dp' → logprob: -5.0169758796691895
    4. ' new' → logprob: -8.016976356506348
    5. '(dp' → logprob: -9.516976356506348
    6. '	dp' → logprob: -10.391976356506348
    7. '_dp' → logprob: -10.766976356506348
    8. 'old' → logprob: -11.016976356506348
    9. 'H' → logprob: -11.266976356506348
    10. 'd' → logprob: -11.391976356506348

Token 1239: ' courant' (ID: 74694)
  Prédit: ' courant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' courant' → logprob: -0.06969141215085983
    2. '[k' → logprob: -3.5696914196014404
    3. 'cour' → logprob: -4.194691181182861
    4. 'current' → logprob: -5.069691181182861
    5. 'dp' → logprob: -5.194691181182861
    6. ' current' → logprob: -5.819691181182861
    7. '```' → logprob: -5.819691181182861
    8. ' dp' → logprob: -6.819691181182861
    9. 'k' → logprob: -7.194691181182861
    10. ' cour' → logprob: -7.194691181182861

Token 1240: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02876261994242668
    2. ' dp' → logprob: -3.6537625789642334
    3. 'new' → logprob: -6.7787628173828125
    4. '(dp' → logprob: -6.9037628173828125
    5. ' new' → logprob: -8.653762817382812
    6. '   ' → logprob: -9.778762817382812
    7. '	dp' → logprob: -10.778762817382812
    8. '```' → logprob: -11.028762817382812
    9. '_dp' → logprob: -11.528762817382812
    10. '           ' → logprob: -12.028762817382812

Token 1241: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.01882167160511017
    2. 'k' → logprob: -4.018821716308594
    3. '[i' → logprob: -7.393821716308594
    4. '[' → logprob: -10.143821716308594
    5. '```' → logprob: -12.393821716308594
    6. 'i' → logprob: -12.518821716308594
    7. '[
' → logprob: -12.768821716308594
    8. '[j' → logprob: -13.393821716308594
    9. ' k' → logprob: -13.518821716308594
    10. '(k' → logprob: -13.768821716308594

Token 1242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006775272195227444
    2. ']*' → logprob: -7.875677585601807
    3. '[k' → logprob: -8.625677108764648
    4. '])' → logprob: -11.000677108764648
    5. '```' → logprob: -11.125677108764648
    6. ' ]' → logprob: -11.250677108764648
    7. '*' → logprob: -11.375677108764648
    8. '],' → logprob: -11.625677108764648
    9. '[' → logprob: -11.750677108764648
    10. '   ' → logprob: -12.250677108764648

Token 1243: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.257890909910202
    2. '*' → logprob: -1.5078909397125244
    3. ')' → logprob: -6.132890701293945
    4. ']' → logprob: -7.382890701293945
    5. '```' → logprob: -7.632890701293945
    6. '+' → logprob: -8.007890701293945
    7. '<|end|>' → logprob: -8.007890701293945
    8. ' ' → logprob: -8.507890701293945
    9. '           ' → logprob: -8.507890701293945
    10. ' +' → logprob: -8.507890701293945

Token 1244: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006821724819019437
    2. ' ' → logprob: -7.375682353973389
    3. '1' → logprob: -10.50068187713623
    4. '3' → logprob: -11.50068187713623
    5. '   ' → logprob: -12.37568187713623
    6. 'dp' → logprob: -12.50068187713623
    7. '(' → logprob: -12.75068187713623
    8. '
' → logprob: -13.50068187713623
    9. 'k' → logprob: -14.06318187713623
    10. 'pow' → logprob: -14.25068187713623

Token 1245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021569548698607832
    2. ' ' → logprob: -9.000215530395508
    3. '1' → logprob: -9.750215530395508
    4. '3' → logprob: -10.875215530395508
    5. '(' → logprob: -12.000215530395508
    6. 'k' → logprob: -12.750215530395508
    7. 'dp' → logprob: -14.000215530395508
    8. '
' → logprob: -14.000215530395508
    9. 'mod' → logprob: -14.125215530395508
    10. '   ' → logprob: -14.250215530395508

Token 1246: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3466525375843048
    2. '<|end|>' → logprob: -1.5966525077819824
    3. '```' → logprob: -3.4716525077819824
    4. ' new' → logprob: -4.721652507781982
    5. ':' → logprob: -4.846652507781982
    6. '<|end|>' → logprob: -4.846652507781982
    7. ')' → logprob: -5.221652507781982
    8. '               ' → logprob: -5.346652507781982
    9. '[new' → logprob: -5.721652507781982
    10. '          ' → logprob: -5.846652507781982

Token 1247: ' puis' (ID: 18766)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.47419047355651855
    2. 'new' → logprob: -1.8491904735565186
    3. '<|end|>' → logprob: -2.0991904735565186
    4. '           ' → logprob: -3.7241904735565186
    5. ')' → logprob: -3.9741904735565186
    6. ' ' → logprob: -4.474190711975098
    7. ' 
' → logprob: -4.974190711975098
    8. '[new' → logprob: -5.349190711975098
    9. '=' → logprob: -5.474190711975098
    10. ' ' → logprob: -5.474190711975098

Token 1248: ' par' (ID: 686)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.05553284287452698
    2. 'continue' → logprob: -4.305532932281494
    3. '+=' → logprob: -4.305532932281494
    4. '=' → logprob: -4.430532932281494
    5. ' new' → logprob: -4.680532932281494
    6. '*=' → logprob: -6.430532932281494
    7. '2' → logprob: -7.055532932281494
    8. '           ' → logprob: -7.555532932281494
    9. '```' → logprob: -7.680532932281494
    10. '*' → logprob: -7.680532932281494

Token 1249: ' ' (ID: 220)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6524625420570374
    2. 'dp' → logprob: -1.0274624824523926
    3. '2' → logprob: -2.2774624824523926
    4. '(H' → logprob: -4.527462482452393
    5. '(' → logprob: -6.402462482452393
    6. '(dp' → logprob: -6.527462482452393
    7. '1' → logprob: -6.652462482452393
    8. 'new' → logprob: -7.277462482452393
    9. '3' → logprob: -7.527462482452393
    10. 'mod' → logprob: -7.652462482452393

Token 1250: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5446186661720276
    2. 'H' → logprob: -1.4196186065673828
    3. '2' → logprob: -2.294618606567383
    4. 'mod' → logprob: -3.169618606567383
    5. 'k' → logprob: -5.044618606567383
    6. '(H' → logprob: -5.044618606567383
    7. '1' → logprob: -5.044618606567383
    8. '(dp' → logprob: -5.169618606567383
    9. '(' → logprob: -5.419618606567383
    10. '3' → logprob: -6.544618606567383

Token 1251: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1252: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.619589924812317
    2. 'mod' → logprob: -1.619589924812317
    3. 'k' → logprob: -1.744589924812317
    4. '(' → logprob: -2.4945898056030273
    5. ' (' → logprob: -3.1195898056030273
    6. ' k' → logprob: -3.3695898056030273
    7. '0' → logprob: -3.6195898056030273
    8. '(k' → logprob: -3.9945898056030273
    9. '
' → logprob: -4.119589805603027
    10. '[' → logprob: -4.119589805603027

Token 1253: ' puissance' (ID: 63494)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7150482535362244
    2. '2' → logprob: -2.215048313140869
    3. ' k' → logprob: -2.340048313140869
    4. '0' → logprob: -2.965048313140869
    5. '(k' → logprob: -2.965048313140869
    6. ' ' → logprob: -3.465048313140869
    7. '`' → logprob: -3.590048313140869
    8. '
' → logprob: -3.965048313140869
    9. '[k' → logprob: -3.965048313140869
    10. '1' → logprob: -4.090048313140869

Token 1254: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.4741562604904175
    2. '(' → logprob: -1.9741562604904175
    3. '(n' → logprob: -2.349156379699707
    4. '(H' → logprob: -2.849156379699707
    5. 'k' → logprob: -3.349156379699707
    6. ' (' → logprob: -3.849156379699707
    7. '2' → logprob: -4.974156379699707
    8. '(abs' → logprob: -5.099156379699707
    9. '(i' → logprob: -5.974156379699707
    10. '((' → logprob: -6.099156379699707

Token 1255: 'H' (ID: 39)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07832646369934082
    2. '(k' → logprob: -3.078326463699341
    3. 'n' → logprob: -4.453326225280762
    4. '(n' → logprob: -4.828326225280762
    5. 'H' → logprob: -5.328326225280762
    6. '(H' → logprob: -6.453326225280762
    7. ' k' → logprob: -7.328326225280762
    8. '(i' → logprob: -7.578326225280762
    9. '2' → logprob: -7.578326225280762
    10. 'i' → logprob: -7.828326225280762

Token 1256: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5794665813446045
    2. '[i' → logprob: -0.8294665813446045
    3. '[' → logprob: -6.454466819763184
    4. 'k' → logprob: -7.579466819763184
    5. 'i' → logprob: -7.704466819763184
    6. 'H' → logprob: -7.954466819763184
    7. '```' → logprob: -8.454466819763184
    8. '
' → logprob: -9.829466819763184
    9. '(k' → logprob: -10.079466819763184
    10. '`' → logprob: -10.079466819763184

Token 1257: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016324318945407867
    2. '[k' → logprob: -4.141324520111084
    3. '[' → logprob: -9.016324043273926
    4. 'i' → logprob: -9.766324043273926
    5. '```' → logprob: -10.391324043273926
    6. ']' → logprob: -11.016324043273926
    7. '[-' → logprob: -11.141324043273926
    8. '   ' → logprob: -11.766324043273926
    9. 'k' → logprob: -12.016324043273926
    10. '[j' → logprob: -12.016324043273926

Token 1258: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.48513585329055786
    2. '-' → logprob: -1.110135793685913
    3. '-H' → logprob: -3.235135793685913
    4. '[i' → logprob: -4.735136032104492
    5. '
' → logprob: -6.610136032104492
    6. '   ' → logprob: -7.110136032104492
    7. ')' → logprob: -7.235136032104492
    8. '-i' → logprob: -7.360136032104492
    9. '#' → logprob: -7.485136032104492
    10. ' ' → logprob: -7.735136032104492

Token 1259: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1462181657552719
    2. '1' → logprob: -2.1462180614471436
    3. '(H' → logprob: -4.646218299865723
    4. 'i' → logprob: -5.396218299865723
    5. '(i' → logprob: -6.021218299865723
    6. '(' → logprob: -6.896218299865723
    7. '2' → logprob: -7.146218299865723
    8. ' H' → logprob: -8.396218299865723
    9. ' ' → logprob: -9.021218299865723
    10. ' (' → logprob: -9.146218299865723

Token 1260: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16884656250476837
    2. '[i' → logprob: -2.418846607208252
    3. 'k' → logprob: -2.793846607208252
    4. '[k' → logprob: -5.418846607208252
    5. '```' → logprob: -8.543846130371094
    6. '(i' → logprob: -9.043846130371094
    7. ' i' → logprob: -9.418846130371094
    8. 'H' → logprob: -9.668846130371094
    9. '`' → logprob: -10.293846130371094
    10. '1' → logprob: -10.293846130371094

Token 1261: ']),
' (ID: 34147)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05909999459981918
    2. '-' → logprob: -3.6840999126434326
    3. ' )' → logprob: -4.184100151062012
    4. ' -' → logprob: -5.059100151062012
    5. ')**' → logprob: -6.184100151062012
    6. '**' → logprob: -6.434100151062012
    7. ')]' → logprob: -6.684100151062012
    8. '),' → logprob: -6.809100151062012
    9. '-)' → logprob: -7.184100151062012
    10. ']' → logprob: -7.309100151062012

Token 1262: '           ' (ID: 352)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13590797781944275
    2. '       ' → logprob: -3.7609078884124756
    3. ' ' → logprob: -4.010908126831055
    4. '*' → logprob: -4.135908126831055
    5. '```' → logprob: -4.385908126831055
    6. '           ' → logprob: -4.510908126831055
    7. ' 
' → logprob: -4.510908126831055
    8. '**' → logprob: -4.635908126831055
    9. '   ' → logprob: -4.760908126831055
    10. '`' → logprob: -5.760908126831055

Token 1263: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8172886967658997
    2. 'new' → logprob: -1.8172886371612549
    3. ' new' → logprob: -2.192288637161255
    4. '*' → logprob: -2.942288637161255
    5. '               ' → logprob: -3.192288637161255
    6. '                           ' → logprob: -3.317288637161255
    7. ')' → logprob: -3.817288637161255
    8. 'mod' → logprob: -3.817288637161255
    9. '                   ' → logprob: -3.942288637161255
    10. '2' → logprob: -4.192288875579834

Token 1264: ' le' (ID: 505)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49305927753448486
    2. '```' → logprob: -2.1180591583251953
    3. 'new' → logprob: -2.3680591583251953
    4. ' new' → logprob: -3.2430591583251953
    5. '
' → logprob: -3.7430591583251953
    6. 'mod' → logprob: -3.9930591583251953
    7. '                   ' → logprob: -4.493059158325195
    8. '2' → logprob: -4.618059158325195
    9. '                       ' → logprob: -4.743059158325195
    10. '               ' → logprob: -4.868059158325195

Token 1265: ' tout' (ID: 5501)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.26396968960762024
    2. '*' → logprob: -3.138969659805298
    3. 'mod' → logprob: -3.138969659805298
    4. ' **' → logprob: -3.138969659805298
    5. ' mod' → logprob: -3.888969659805298
    6. '`' → logprob: -4.138969898223877
    7. '```' → logprob: -4.263969898223877
    8. '2' → logprob: -4.388969898223877
    9. ')' → logprob: -4.513969898223877
    10. ''' → logprob: -5.138969898223877

Token 1266: ' modulo' (ID: 112372)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8029590845108032
    2. '**' → logprob: -1.4279590845108032
    3. ' *' → logprob: -1.6779590845108032
    4. ')' → logprob: -3.5529589653015137
    5. ' **' → logprob: -3.9279589653015137
    6. ',' → logprob: -4.552958965301514
    7. '%' → logprob: -4.552958965301514
    8. '=' → logprob: -4.802958965301514
    9. ' %' → logprob: -4.927958965301514
    10. '```' → logprob: -5.052958965301514

Token 1267: ' la' (ID: 557)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2023765742778778
    2. ' mod' → logprob: -1.7023766040802002
    3. '(mod' → logprob: -6.952376365661621
    4. ' (' → logprob: -12.327376365661621
    5. '	mod' → logprob: -14.327376365661621
    6. '```' → logprob: -15.077376365661621
    7. ' ' → logprob: -15.327376365661621
    8. '(' → logprob: -15.327376365661621
    9. '_mod' → logprob: -15.952376365661621
    10. ' мод' → logprob: -16.202377319335938

Token 1268: ' constante' (ID: 49652)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.009884290397167206
    2. ' mod' → logprob: -4.634884357452393
    3. '`' → logprob: -9.759883880615234
    4. 'space' → logprob: -11.259883880615234
    5. '```' → logprob: -11.384883880615234
    6. '(mod' → logprob: -11.759883880615234
    7. ''' → logprob: -12.134883880615234
    8. ' ' → logprob: -12.259883880615234
    9. '
' → logprob: -12.509883880615234
    10. '``' → logprob: -12.634883880615234

Token 1269: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.15309685468673706
    2. ' mod' → logprob: -2.028096914291382
    3. '(mod' → logprob: -4.653096675872803
    4. ' (' → logprob: -8.153097152709961
    5. '
' → logprob: -9.028097152709961
    6. '(
' → logprob: -9.403097152709961
    7. ')' → logprob: -9.528097152709961
    8. '(' → logprob: -9.778097152709961
    9. '`' → logprob: -10.278097152709961
    10. '=' → logprob: -10.278097152709961

Token 1270: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0140124559402466
    2. 'new' → logprob: -1.6390124559402466
    3. ' new' → logprob: -2.264012336730957
    4. ',' → logprob: -2.889012336730957
    5. '
' → logprob: -3.264012336730957
    6. '[new' → logprob: -3.389012336730957
    7. ' %' → logprob: -3.389012336730957
    8. '           ' → logprob: -3.514012336730957
    9. '%' → logprob: -3.639012336730957
    10. ']' → logprob: -3.889012336730957

Token 1271: 'pour' (ID: 52723)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.29054346680641174
    2. ')' → logprob: -1.5405434370040894
    3. ' mod' → logprob: -3.540543556213379
    4. ' )' → logprob: -5.290543556213379
    5. '(mod' → logprob: -6.665543556213379
    6. ')
' → logprob: -7.540543556213379
    7. ')\' → logprob: -7.790543556213379
    8. ')%' → logprob: -7.915543556213379
    9. ' (' → logprob: -8.790543556213379
    10. '(' → logprob: -8.790543556213379

Token 1272: ' éviter' (ID: 64013)
  Prédit: ' éviter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éviter' → logprob: -0.36104288697242737
    2. 'év' → logprob: -1.986042857170105
    3. 'mod' → logprob: -3.3610429763793945
    4. 'prevent' → logprob: -3.7360429763793945
    5. ' gérer' → logprob: -3.8610429763793945
    6. ')' → logprob: -3.8610429763793945
    7. 'le' → logprob: -5.1110429763793945
    8. ' garantir' → logprob: -5.1110429763793945
    9. 'maint' → logprob: -5.2360429763793945
    10. '_' → logprob: -5.2360429763793945

Token 1273: ' les' (ID: 1341)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.3185803294181824
    2. 'mod' → logprob: -1.8185803890228271
    3. ' mod' → logprob: -2.693580389022827
    4. 'overflow' → logprob: -3.318580389022827
    5. ' modulo' → logprob: -5.693580150604248
    6. '(mod' → logprob: -7.443580150604248
    7. ' over' → logprob: -7.693580150604248
    8. 'over' → logprob: -7.693580150604248
    9. ')' → logprob: -7.818580150604248
    10. ' ' → logprob: -8.318580627441406

Token 1274: ' déb' (ID: 37874)
  Prédit: ' overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overflow' → logprob: -0.9301912784576416
    2. 'mod' → logprob: -1.6801912784576416
    3. ')' → logprob: -1.9301912784576416
    4. ' mod' → logprob: -2.0551912784576416
    5. 'overflow' → logprob: -2.3051912784576416
    6. ' over' → logprob: -4.5551910400390625
    7. 'over' → logprob: -5.4301910400390625
    8. '\n' → logprob: -5.4301910400390625
    9. '*' → logprob: -5.5551910400390625
    10. '<|end|>' → logprob: -5.9301910400390625

Token 1275: 'ord' (ID: 604)
  Prédit: 'ug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ug' → logprob: -1.317269206047058
    2. '_' → logprob: -1.817269206047058
    3. ' modulo' → logprob: -2.5672693252563477
    4. 'mod' → logprob: -2.6922693252563477
    5. '_mod' → logprob: -2.6922693252563477
    6. ']' → logprob: -2.8172693252563477
    7. ')' → logprob: -3.0672693252563477
    8. '%' → logprob: -3.1922693252563477
    9. '```' → logprob: -4.067269325256348
    10. '_p' → logprob: -4.192269325256348

Token 1276: 'ements' (ID: 4507)
  Prédit: 'overflow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'overflow' → logprob: -0.7632293701171875
    2. ')' → logprob: -1.6382293701171875
    3. ' overflow' → logprob: -2.6382293701171875
    4. 'Overflow' → logprob: -3.2632293701171875
    5. 'ement' → logprob: -3.2632293701171875
    6. 'p' → logprob: -3.3882293701171875
    7. '```' → logprob: -4.1382293701171875
    8. 'f' → logprob: -4.2632293701171875
    9. 'bord' → logprob: -4.8882293701171875
    10. 'flow' → logprob: -5.0132293701171875

Token 1277: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04536842182278633
    2. '):' → logprob: -3.9203684329986572
    3. ')
' → logprob: -4.920368194580078
    4. '):
' → logprob: -5.545368194580078
    5. ' )' → logprob: -5.920368194580078
    6. ',' → logprob: -6.045368194580078
    7. 'mod' → logprob: -6.545368194580078
    8. '),' → logprob: -6.795368194580078
    9. ').' → logprob: -7.045368194580078
    10. ' mod' → logprob: -7.420368194580078

Token 1278: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0899348258972168
    2. 'new' → logprob: -1.2149348258972168
    3. ' new' → logprob: -1.9649348258972168
    4. '[new' → logprob: -2.464934825897217
    5. '```' → logprob: -3.339934825897217
    6. '%' → logprob: -4.214934825897217
    7. '**' → logprob: -4.464934825897217
    8. '*' → logprob: -4.589934825897217
    9. '[' → logprob: -4.714934825897217
    10. '(new' → logprob: -4.839934825897217

Token 1279: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.31103935837745667
    2. 'new' (adapté à ' new') → logprob: -1.4360393285751343
    3. '(new' → logprob: -5.061039447784424
    4. ' =' → logprob: -5.186039447784424
    5. ':' → logprob: -5.686039447784424
    6. '=' → logprob: -6.311039447784424
    7. '(' → logprob: -6.811039447784424
    8. '```' → logprob: -6.811039447784424
    9. '   ' → logprob: -6.936039447784424
    10. ')' → logprob: -7.061039447784424

Token 1280: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -3.292907877039397e-06
    2. '_code' → logprob: -14.12500286102295
    3. '_DP' → logprob: -15.00000286102295
    4. '_dt' → logprob: -15.12500286102295
    5. '_token' → logprob: -15.37500286102295
    6. '```' → logprob: -15.50000286102295
    7. '_mod' → logprob: -15.62500286102295
    8. '_' → logprob: -15.75000286102295
    9. '_np' → logprob: -16.125003814697266
    10. 'dp' → logprob: -16.125003814697266

Token 1281: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -12.750007629394531
    3. '=' → logprob: -13.250007629394531
    4. '```' → logprob: -13.500007629394531
    5. 'i' → logprob: -15.125007629394531
    6. ' [' → logprob: -15.250007629394531
    7. '
' → logprob: -16.00000762939453
    8. '[
' → logprob: -16.00000762939453
    9. ' =' → logprob: -16.25000762939453
    10. '[k' → logprob: -17.12500762939453

Token 1282: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4434935450553894
    2. ' =' → logprob: -1.1934936046600342
    3. ']' → logprob: -2.943493604660034
    4. ']=' → logprob: -6.818493366241455
    5. '%=' → logprob: -8.693493843078613
    6. ']+=' → logprob: -8.693493843078613
    7. '+=' → logprob: -8.943493843078613
    8. '   ' → logprob: -9.068493843078613
    9. ' +=' → logprob: -9.193493843078613
    10. ')' → logprob: -9.318493843078613

Token 1283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011088382452726364
    2. ' =' → logprob: -4.5110883712768555
    3. '=(' → logprob: -10.261088371276855
    4. '+=' → logprob: -12.511088371276855
    5. '%=' → logprob: -13.761088371276855
    6. '=((' → logprob: -15.136088371276855
    7. ' =(' → logprob: -15.261088371276855
    8. '   ' → logprob: -16.886089324951172
    9. '=
' → logprob: -16.886089324951172
    10. '＝' → logprob: -17.011089324951172

Token 1284: ' dp' (ID: 21546)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.2833153307437897
    2. 'dp' → logprob: -1.4083153009414673
    3. ' dp' → logprob: -6.283315181732178
    4. ' (' → logprob: -8.283315658569336
    5. '(' → logprob: -11.283315658569336
    6. '	dp' → logprob: -11.533315658569336
    7. '(d' → logprob: -11.783315658569336
    8. '((' → logprob: -12.908315658569336
    9. '   ' → logprob: -13.283315658569336
    10. '2' → logprob: -13.533315658569336

Token 1285: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003728774609044194
    2. '[' → logprob: -8.125372886657715
    3. 'i' → logprob: -10.125372886657715
    4. '[
' → logprob: -11.250372886657715
    5. '```' → logprob: -12.375372886657715
    6. '[k' → logprob: -13.000372886657715
    7. '[I' → logprob: -13.125372886657715
    8. ' [' → logprob: -13.500372886657715
    9. 'multip' → logprob: -13.625372886657715
    10. '(i' → logprob: -13.875372886657715

Token 1286: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.281299352645874
    2. '*' → logprob: -1.406299352645874
    3. '*(' → logprob: -9.531299591064453
    4. ')' → logprob: -10.781299591064453
    5. ']' → logprob: -11.031299591064453
    6. ' ' → logprob: -11.281299591064453
    7. '(' → logprob: -12.031299591064453
    8. ',' → logprob: -12.781299591064453
    9. '
' → logprob: -12.906299591064453
    10. '           ' → logprob: -13.031299591064453

Token 1287: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5243198871612549
    2. ' *' → logprob: -0.8993198871612549
    3. '*(' → logprob: -6.774319648742676
    4. '(' → logprob: -11.149319648742676
    5. '           ' → logprob: -11.899319648742676
    6. '       ' → logprob: -12.274319648742676
    7. ' ' → logprob: -12.649319648742676
    8. '   ' → logprob: -12.774319648742676
    9. '        ' → logprob: -13.149319648742676
    10. '          ' → logprob: -13.274319648742676

Token 1288: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.37655070424079895
    2. 'pow' → logprob: -1.7515506744384766
    3. '(' → logprob: -2.0015506744384766
    4. '(pow' → logprob: -5.376550674438477
    5. '4' → logprob: -8.501550674438477
    6. ' ' → logprob: -9.376550674438477
    7. ' pow' → logprob: -9.626550674438477
    8. ' (' → logprob: -9.751550674438477
    9. '((' → logprob: -10.126550674438477
    10. '(
' → logprob: -10.626550674438477

Token 1289: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5373766422271729
    2. 'pow' → logprob: -1.5373766422271729
    3. '(' → logprob: -1.6623766422271729
    4. '(pow' → logprob: -4.537376403808594
    5. '((' → logprob: -8.537376403808594
    6. ' pow' → logprob: -10.162376403808594
    7. ' (' → logprob: -10.412376403808594
    8. '(
' → logprob: -10.662376403808594
    9. '4' → logprob: -10.912376403808594
    10. '(m' → logprob: -11.287376403808594

Token 1290: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3546088635921478
    2. ' *' → logprob: -2.1046087741851807
    3. ' **' → logprob: -2.8546087741851807
    4. '*' → logprob: -3.3546087741851807
    5. '           ' → logprob: -3.8546087741851807
    6. ' %' → logprob: -4.22960901260376
    7. '       ' → logprob: -4.35460901260376
    8. '   ' → logprob: -5.10460901260376
    9. ')' → logprob: -5.10460901260376
    10. '%' → logprob: -5.60460901260376

Token 1291: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.990154047845863e-05
    2. '(pow' → logprob: -10.000049591064453
    3. ' pow' → logprob: -12.375049591064453
    4. '(' → logprob: -15.250049591064453
    5. '2' → logprob: -18.625049591064453
    6. 'power' → logprob: -18.750049591064453
    7. 'mod' → logprob: -19.750049591064453
    8. '((' → logprob: -20.125049591064453
    9. '   ' → logprob: -20.500049591064453
    10. '```' → logprob: -20.875049591064453

Token 1292: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.055156905204057693
    2. 'mod' → logprob: -3.055156946182251
    3. '2' → logprob: -5.680156707763672
    4. '(mod' → logprob: -5.805156707763672
    5. '(
' → logprob: -9.555156707763672
    6. ' (' → logprob: -10.930156707763672
    7. '10' → logprob: -11.555156707763672
    8. '_mod' → logprob: -11.555156707763672
    9. ',' → logprob: -12.305156707763672
    10. '```' → logprob: -12.805156707763672

Token 1293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.302704761968926e-05
    2. 'mod' → logprob: -9.750073432922363
    3. '(' → logprob: -11.375073432922363
    4. '10' → logprob: -13.500073432922363
    5. ' ' → logprob: -13.750073432922363
    6. ',' → logprob: -15.000073432922363
    7. '```' → logprob: -15.250073432922363
    8. '(mod' → logprob: -16.750072479248047
    9. '
' → logprob: -16.875072479248047
    10. ')' → logprob: -17.375072479248047

Token 1294: ',' (ID: 11)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.042048223316669464
    2. ' (' → logprob: -3.917048215866089
    3. ',' → logprob: -4.667048454284668
    4. '(' → logprob: -5.167048454284668
    5. '((' → logprob: -5.292048454284668
    6. '(
' → logprob: -8.167048454284668
    7. 'H' → logprob: -8.167048454284668
    8. ')' → logprob: -8.917048454284668
    9. '<|end|>' → logprob: -9.167048454284668
    10. ',H' → logprob: -9.417048454284668

Token 1295: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3869224488735199
    2. '(H' → logprob: -1.1369224786758423
    3. ' H' → logprob: -10.261922836303711
    4. ' (' → logprob: -11.386922836303711
    5. '(' → logprob: -13.261922836303711
    6. '((' → logprob: -13.636922836303711
    7. '	H' → logprob: -14.011922836303711
    8. ''H' → logprob: -15.761922836303711
    9. '```' → logprob: -15.761922836303711
    10. '`' → logprob: -15.886922836303711

Token 1296: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0010967610869556665
    2. '[i' → logprob: -6.876096725463867
    3. '[' → logprob: -10.126096725463867
    4. 'k' → logprob: -11.001096725463867
    5. '(k' → logprob: -12.751096725463867
    6. '[
' → logprob: -13.626096725463867
    7. '{k' → logprob: -14.501096725463867
    8. ' k' → logprob: -14.626096725463867
    9. ',k' → logprob: -14.751096725463867
    10. '```' → logprob: -15.001096725463867

Token 1297: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.2827114462852478
    2. '[i' → logprob: -1.4077115058898926
    3. '[' → logprob: -6.657711505889893
    4. ']' → logprob: -9.282711029052734
    5. '-k' → logprob: -9.907711029052734
    6. 'k' → logprob: -10.407711029052734
    7. 'i' → logprob: -10.532711029052734
    8. '[
' → logprob: -10.657711029052734
    9. '-' → logprob: -11.532711029052734
    10. '][' → logprob: -11.657711029052734

Token 1298: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06653299182653427
    2. '-' → logprob: -3.191533088684082
    3. '[' → logprob: -4.441533088684082
    4. ' -' → logprob: -4.566533088684082
    5. '[-' → logprob: -7.816533088684082
    6. '[
' → logprob: -7.941533088684082
    7. ' ' → logprob: -9.191533088684082
    8. ' [' → logprob: -9.191533088684082
    9. '```' → logprob: -10.066533088684082
    10. '-i' → logprob: -10.816533088684082

Token 1299: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.080963092041202e-06
    2. 'i' → logprob: -12.875004768371582
    3. ' H' → logprob: -13.125004768371582
    4. '[i' → logprob: -14.625004768371582
    5. '   ' → logprob: -16.5000057220459
    6. '[' → logprob: -17.8750057220459
    7. '```' → logprob: -19.0000057220459
    8. '	H' → logprob: -19.1250057220459
    9. '       ' → logprob: -20.1250057220459
    10. '(i' → logprob: -20.2500057220459

Token 1300: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1432751715183258
    2. 'i' → logprob: -2.018275260925293
    3. '[
' → logprob: -7.893275260925293
    4. '```' → logprob: -9.143275260925293
    5. '[' → logprob: -10.268275260925293
    6. '[k' → logprob: -10.518275260925293
    7. ']' → logprob: -11.518275260925293
    8. '][' → logprob: -11.768275260925293
    9. 'k' → logprob: -11.768275260925293
    10. ' i' → logprob: -12.018275260925293

Token 1301: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39697566628456116
    2. '],' → logprob: -1.5219756364822388
    3. '])' → logprob: -2.3969757556915283
    4. ')' → logprob: -4.396975517272949
    5. '),' → logprob: -6.021975517272949
    6. ']' → logprob: -7.021975517272949
    7. '[i' → logprob: -7.146975517272949
    8. '-' → logprob: -7.521975517272949
    9. ' ,' → logprob: -7.521975517272949
    10. ',k' → logprob: -8.52197551727295

Token 1302: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00017970333283301443
    2. ' mod' → logprob: -8.625179290771484
    3. '	mod' → logprob: -17.375179290771484
    4. '(mod' → logprob: -18.625179290771484
    5. '```' → logprob: -18.750179290771484
    6. '
' → logprob: -19.250179290771484
    7. ')' → logprob: -19.375179290771484
    8. '   ' → logprob: -19.625179290771484
    9. '           ' → logprob: -20.000179290771484
    10. 'MOD' → logprob: -20.250179290771484

Token 1303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0489724725484848
    2. ',' → logprob: -3.0489723682403564
    3. ')%' → logprob: -8.798972129821777
    4. ')
' → logprob: -8.923972129821777
    5. ' )' → logprob: -10.048972129821777
    6. ',
' → logprob: -11.048972129821777
    7. '   ' → logprob: -11.548972129821777
    8. '),' → logprob: -11.923972129821777
    9. ' ,' → logprob: -12.173972129821777
    10. '%' → logprob: -12.298972129821777

Token 1304: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.35679861903190613
    2. ' %' → logprob: -1.2317986488342285
    3. ')' → logprob: -4.9817986488342285
    4. ')%' → logprob: -7.1067986488342285
    5. '<|end|>' → logprob: -9.10679817199707
    6. '       ' → logprob: -9.35679817199707
    7. '%n' → logprob: -9.35679817199707
    8. '   ' → logprob: -9.48179817199707
    9. '[new' → logprob: -10.10679817199707
    10. ' %=' → logprob: -10.23179817199707

Token 1305: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03699764981865883
    2. '       ' → logprob: -3.7869975566864014
    3. ' %' → logprob: -4.6619977951049805
    4. 'else' → logprob: -6.1619977951049805
    5. ')' → logprob: -7.1619977951049805
    6. '<|end|>' → logprob: -8.16199779510498
    7. ' else' → logprob: -8.28699779510498
    8. '   ' → logprob: -8.41199779510498
    9. ']' → logprob: -9.03699779510498
    10. '[' → logprob: -9.53699779510498

Token 1306: ' TRO' (ID: 172552)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.015493527986109257
    2. ' else' → logprob: -4.515493392944336
    3. 'elif' → logprob: -6.265493392944336
    4. '       ' → logprob: -6.390493392944336
    5. 'continue' → logprob: -7.640493392944336
    6. 'new' → logprob: -8.640493392944336
    7. '   ' → logprob: -9.890493392944336
    8. 'mod' → logprob: -10.140493392944336
    9. '           ' → logprob: -10.640493392944336
    10. '```' → logprob: -11.015493392944336

Token 1307: 'ISI' (ID: 116367)
  Prédit: 'ISI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ISI' → logprob: -0.005200912710279226
    2. 'isi' → logprob: -5.7552008628845215
    3. 'isième' → logprob: -6.3802008628845215
    4. 'IS' → logprob: -8.25520133972168
    5. 'I' → logprob: -10.88020133972168
    6. 'Isi' → logprob: -11.50520133972168
    7. '#' → logprob: -11.63020133972168
    8. 'S' → logprob: -12.13020133972168
    9. '}' → logprob: -12.75520133972168
    10. '```' → logprob: -12.88020133972168

Token 1308: 'EM' (ID: 3646)
  Prédit: 'È'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'È' → logprob: -0.7420213222503662
    2. 'ème' → logprob: -0.8670213222503662
    3. 'è' → logprob: -2.992021322250366
    4. 'EM' → logprob: -3.367021322250366
    5. 'èm' → logprob: -4.492021560668945
    6. 'eme' → logprob: -4.992021560668945
    7. 'me' → logprob: -9.117021560668945
    8. 'e' → logprob: -9.242021560668945
    9. 'ER' → logprob: -9.367021560668945
    10. '#' → logprob: -9.367021560668945

Token 1309: 'E' (ID: 36)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1805593967437744
    2. '#' → logprob: -1.8055593967437744
    3. 'ème' → logprob: -1.8055593967437744
    4. 'E' → logprob: -2.3055593967437744
    5. 'è' → logprob: -2.4305593967437744
    6. 'È' → logprob: -3.0555593967437744
    7. 'ère' → logprob: -3.1805593967437744
    8. 'er' → logprob: -4.180559158325195
    9. 'me' → logprob: -4.305559158325195
    10. 'eme' → logprob: -4.430559158325195

Token 1310: ' CAS' (ID: 44953)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.27287665009498596
    2. ' elif' → logprob: -2.022876739501953
    3. 'else' → logprob: -2.772876739501953
    4. ' else' → logprob: -3.397876739501953
    5. 'case' → logprob: -5.772876739501953
    6. ' case' → logprob: -5.772876739501953
    7. ':' → logprob: -5.772876739501953
    8. ' cas' → logprob: -7.647876739501953
    9. '```' → logprob: -8.647876739501953
    10. '_case' → logprob: -9.022876739501953

Token 1311: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6219481229782104
    2. ':' → logprob: -1.3719481229782104
    3. 'elif' → logprob: -1.9969481229782104
    4. ' elif' → logprob: -2.7469482421875
    5. 'else' → logprob: -5.3719482421875
    6. ' else' → logprob: -6.3719482421875
    7. ' :' → logprob: -6.4969482421875
    8. '   ' → logprob: -7.1219482421875
    9. '	elif' → logprob: -7.7469482421875
    10. ' =' → logprob: -9.2469482421875

Token 1312: ' sinon' (ID: 52915)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.009949684143066406
    2. 'elif' → logprob: -4.884949684143066
    3. '       ' → logprob: -6.759949684143066
    4. ' else' → logprob: -6.759949684143066
    5. '   ' → logprob: -11.509949684143066
    6. ' elif' → logprob: -12.009949684143066
    7. '```' → logprob: -12.759949684143066
    8. '	else' → logprob: -13.384949684143066
    9. 'new' → logprob: -14.134949684143066
    10. '           ' → logprob: -15.509949684143066

Token 1313: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21762973070144653
    2. '       ' → logprob: -2.7176296710968018
    3. ':
' → logprob: -3.0926296710968018
    4. 'else' → logprob: -3.3426296710968018
    5. '           ' → logprob: -3.5926296710968018
    6. 'new' → logprob: -4.467629909515381
    7. 'elif' → logprob: -6.092629909515381
    8. '[new' → logprob: -6.592629909515381
    9. 'if' → logprob: -6.717629909515381
    10. ' new' → logprob: -6.842629909515381

Token 1314: ' si' (ID: 1784)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11402323842048645
    2. ' new' → logprob: -3.239023208618164
    3. '           ' → logprob: -3.364023208618164
    4. 'else' → logprob: -3.989023208618164
    5. '       ' → logprob: -4.239023208618164
    6. 'if' → logprob: -8.114023208618164
    7. ' else' → logprob: -8.489023208618164
    8. 'elif' → logprob: -8.739023208618164
    9. '               ' → logprob: -9.239023208618164
    10. '```' → logprob: -9.614023208618164

Token 1315: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.18332666158676147
    2. 'k' → logprob: -2.0583267211914062
    3. ' H' → logprob: -3.8083267211914062
    4. 'i' → logprob: -4.683326721191406
    5. ' k' → logprob: -5.433326721191406
    6. 'new' → logprob: -6.308326721191406
    7. ' i' → logprob: -6.683326721191406
    8. 'not' → logprob: -8.183326721191406
    9. ' new' → logprob: -8.433326721191406
    10. 'False' → logprob: -8.808326721191406

Token 1316: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6104042530059814
    2. 'H' → logprob: -1.3604042530059814
    3. 'i' → logprob: -1.7354042530059814
    4. 'new' → logprob: -4.860404014587402
    5. ' k' → logprob: -5.360404014587402
    6. ' H' → logprob: -5.735404014587402
    7. ' i' → logprob: -5.985404014587402
    8. 'dp' → logprob: -6.610404014587402
    9. '[k' → logprob: -6.735404014587402
    10. 'else' → logprob: -7.110404014587402

Token 1317: ' précédente' (ID: 177319)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.023308487609028816
    2. '[k' → logprob: -4.148308277130127
    3. 'k' → logprob: -5.898308277130127
    4. '[' → logprob: -6.398308277130127
    5. '[i' → logprob: -6.773308277130127
    6. ' H' → logprob: -7.398308277130127
    7. 'elif' → logprob: -7.773308277130127
    8. '   ' → logprob: -8.273308753967285
    9. 'else' → logprob: -9.148308753967285
    10. '#' → logprob: -9.148308753967285

Token 1318: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6127653121948242
    2. '[k' → logprob: -1.1127653121948242
    3. 'k' → logprob: -2.362765312194824
    4. ' H' → logprob: -3.987765312194824
    5. 'elif' → logprob: -5.112765312194824
    6. '[i' → logprob: -5.237765312194824
    7. 'else' → logprob: -6.112765312194824
    8. '   ' → logprob: -7.112765312194824
    9. ' k' → logprob: -7.487765312194824
    10. '!=' → logprob: -8.112765312194824

Token 1319: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.28276869654655457
    2. '[i' → logprob: -1.407768726348877
    3. 'k' → logprob: -7.782768726348877
    4. '[' → logprob: -8.157768249511719
    5. 'i' → logprob: -8.407768249511719
    6. ']' → logprob: -8.532768249511719
    7. '[-' → logprob: -8.657768249511719
    8. '[j' → logprob: -9.907768249511719
    9. '```' → logprob: -10.157768249511719
    10. '   ' → logprob: -10.282768249511719

Token 1320: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02548913285136223
    2. '[i' → logprob: -4.400489330291748
    3. ']' → logprob: -5.275489330291748
    4. '[-' → logprob: -5.650489330291748
    5. ' -' → logprob: -5.650489330291748
    6. '[k' → logprob: -7.525489330291748
    7. '[' → logprob: -9.27548885345459
    8. '```' → logprob: -9.90048885345459
    9. '   ' → logprob: -10.52548885345459
    10. '[j' → logprob: -12.02548885345459

Token 1321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007068329723551869
    2. '-' → logprob: -8.000706672668457
    3. ' ' → logprob: -8.000706672668457
    4. '```' → logprob: -11.000706672668457
    5. ' -' → logprob: -12.250706672668457
    6. ']' → logprob: -12.375706672668457
    7. '#' → logprob: -13.563206672668457
    8. '2' → logprob: -13.625706672668457
    9. '   ' → logprob: -13.813206672668457
    10. 'k' → logprob: -13.813206672668457

Token 1322: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013086906401440501
    2. '[i' → logprob: -8.00130844116211
    3. '[k' → logprob: -8.00130844116211
    4. ']!=' → logprob: -8.25130844116211
    5. ']>' → logprob: -9.37630844116211
    6. ']<' → logprob: -9.87630844116211
    7. '-' → logprob: -9.87630844116211
    8. '   ' → logprob: -10.25130844116211
    9. ' ]' → logprob: -10.37630844116211
    10. '][' → logprob: -10.62630844116211

Token 1323: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5752221345901489
    2. ' !=' → logprob: -1.575222134590149
    3. ']' → logprob: -2.4502220153808594
    4. '!=' → logprob: -2.8252220153808594
    5. ':' → logprob: -3.0752220153808594
    6. '```' → logprob: -4.200222015380859
    7. '   ' → logprob: -5.325222015380859
    8. ' ==' → logprob: -5.450222015380859
    9. '==' → logprob: -6.450222015380859
    10. '>' → logprob: -6.575222015380859

Token 1324: ' strict' (ID: 12035)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1927446573972702
    2. 'H' → logprob: -2.442744731903076
    3. '<' → logprob: -3.442744731903076
    4. ' >' → logprob: -3.817744731903076
    5. ' H' → logprob: -3.817744731903076
    6. '<H' → logprob: -5.442744731903076
    7. '>=' → logprob: -6.567744731903076
    8. ' <' → logprob: -6.692744731903076
    9. 'greater' → logprob: -6.817744731903076
    10. '[' → logprob: -7.192744731903076

Token 1325: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.03720613569021225
    2. 'ly' → logprob: -4.287206172943115
    3. '<=' → logprob: -4.287206172943115
    4. 'ément' → logprob: -5.787206172943115
    5. '>' → logprob: -6.287206172943115
    6. 'é' → logprob: -7.287206172943115
    7. 'e' → logprob: -7.412206172943115
    8. '<' → logprob: -7.662206172943115
    9. 'strict' → logprob: -7.662206172943115
    10. 'érieure' → logprob: -7.787206172943115

Token 1326: ' supérieure' (ID: 106336)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2826381325721741
    2. 'greater' → logprob: -1.5326380729675293
    3. 'sup' → logprob: -4.157638072967529
    4. '<' → logprob: -4.907638072967529
    5. ' >' → logprob: -6.032638072967529
    6. ' greater' → logprob: -6.282638072967529
    7. ' supérieur' → logprob: -6.907638072967529
    8. ' supérieure' → logprob: -7.282638072967529
    9. ' inférieur' → logprob: -8.407638549804688
    10. 'inf' → logprob: -8.782638549804688

Token 1327: ' à' (ID: 1221)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.6486737728118896
    2. '(H' → logprob: -2.2736737728118896
    3. '(k' → logprob: -2.5236737728118896
    4. ' à' → logprob: -3.0236737728118896
    5. ' H' → logprob: -3.1486737728118896
    6. 'elif' → logprob: -3.1486737728118896
    7. '   ' → logprob: -3.2736737728118896
    8. 'H' → logprob: -3.5236737728118896
    9. '```' → logprob: -3.8986737728118896
    10. 'if' → logprob: -3.8986737728118896

Token 1328: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0017037445213645697
    2. ' H' → logprob: -6.37670373916626
    3. '(H' → logprob: -14.251704216003418
    4. '```' → logprob: -14.751704216003418
    5. '	H' → logprob: -15.751704216003418
    6. ' ' → logprob: -16.5017032623291
    7. '<H' → logprob: -16.7517032623291
    8. '_H' → logprob: -16.7517032623291
    9. '`' → logprob: -17.2517032623291
    10. ' ' → logprob: -17.2517032623291

Token 1329: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44315505027770996
    2. 'H' → logprob: -1.56815505027771
    3. '[i' → logprob: -2.06815505027771
    4. 'k' → logprob: -4.818155288696289
    5. ' H' → logprob: -5.068155288696289
    6. '[k' → logprob: -6.193155288696289
    7. '```' → logprob: -6.443155288696289
    8. ' i' → logprob: -6.693155288696289
    9. '>' → logprob: -6.818155288696289
    10. ']' → logprob: -7.318155288696289

Token 1330: ' cour' (ID: 2871)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3007456660270691
    2. '[i' → logprob: -2.050745725631714
    3. 'i' → logprob: -2.175745725631714
    4. 'k' → logprob: -4.675745487213135
    5. '[k' → logprob: -4.925745487213135
    6. '```' → logprob: -7.675745487213135
    7. ' H' → logprob: -8.050745964050293
    8. '[' → logprob: -9.800745964050293
    9. ' i' → logprob: -10.550745964050293
    10. '   ' → logprob: -10.550745964050293

Token 1331: 'ante' (ID: 2116)
  Prédit: 'ente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.042214393615722656
    2. 'ante' → logprob: -3.6672143936157227
    3. 'ent' → logprob: -4.917214393615723
    4. '[k' → logprob: -5.417214393615723
    5. '[i' → logprob: -6.292214393615723
    6. '#' → logprob: -7.542214393615723
    7. 'H' → logprob: -7.542214393615723
    8. 'e' → logprob: -8.042214393615723
    9. '```' → logprob: -8.542214393615723
    10. ']' → logprob: -8.917214393615723

Token 1332: ' H' (ID: 487)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.10568312555551529
    2. '[i' → logprob: -2.4806830883026123
    3. 'H' → logprob: -4.855683326721191
    4. 'k' → logprob: -5.230683326721191
    5. ':' → logprob: -7.355683326721191
    6. '[' → logprob: -7.355683326721191
    7. 'i' → logprob: -7.480683326721191
    8. ' H' → logprob: -8.105683326721191
    9. '```' → logprob: -8.105683326721191
    10. 'if' → logprob: -8.230683326721191

Token 1333: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2874998152256012
    2. '[k' → logprob: -1.4124997854232788
    3. 'i' → logprob: -5.537499904632568
    4. 'k' → logprob: -6.287499904632568
    5. '```' → logprob: -8.53749942779541
    6. '[' → logprob: -8.91249942779541
    7. '   ' → logprob: -10.41249942779541
    8. '#' → logprob: -10.66249942779541
    9. '``' → logprob: -10.66249942779541
    10. '[j' → logprob: -10.66249942779541

Token 1334: ']
' (ID: 1592)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.6894437670707703
    2. '[i' → logprob: -1.189443826675415
    3. ']' → logprob: -1.689443826675415
    4. ')' → logprob: -5.564443588256836
    5. ']:
' → logprob: -6.689443588256836
    6. ']:' → logprob: -7.189443588256836
    7. '):
' → logprob: -7.314443588256836
    8. '])' → logprob: -7.314443588256836
    9. '   ' → logprob: -7.689443588256836
    10. '```' → logprob: -7.939443588256836

Token 1335: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0841250866651535
    2. '       ' → logprob: -3.83412504196167
    3. '```' → logprob: -3.95912504196167
    4. '           ' → logprob: -4.45912504196167
    5. ':
' → logprob: -4.95912504196167
    6. ' and' → logprob: -5.33412504196167
    7. 'if' → logprob: -5.45912504196167
    8. '   ' → logprob: -5.45912504196167
    9. ' if' → logprob: -6.33412504196167
    10. 'and' → logprob: -6.33412504196167

Token 1336: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.435217946767807
    2. ' elif' → logprob: -1.6852179765701294
    3. 'else' → logprob: -2.31021785736084
    4. ':' → logprob: -3.56021785736084
    5. ' else' → logprob: -3.56021785736084
    6. '       ' → logprob: -5.18521785736084
    7. '   ' → logprob: -5.81021785736084
    8. '```' → logprob: -6.81021785736084
    9. ' :' → logprob: -7.81021785736084
    10. ':
' → logprob: -7.81021785736084

Token 1337: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06996945291757584
    2. ' H' → logprob: -2.694969415664673
    3. '(H' → logprob: -11.194969177246094
    4. '   ' → logprob: -11.944969177246094
    5. 'k' → logprob: -12.569969177246094
    6. ' ' → logprob: -12.569969177246094
    7. '	H' → logprob: -13.194969177246094
    8. '  ' → logprob: -14.319969177246094
    9. ' ' → logprob: -14.319969177246094
    10. ' k' → logprob: -14.569969177246094

Token 1338: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00022308611369226128
    2. 'k' → logprob: -8.750223159790039
    3. '```' → logprob: -10.250223159790039
    4. '[' → logprob: -11.250223159790039
    5. '[i' → logprob: -12.250223159790039
    6. '(k' → logprob: -12.750223159790039
    7. ',k' → logprob: -13.375223159790039
    8. ' [' → logprob: -14.125223159790039
    9. '`' → logprob: -14.250223159790039
    10. ' k' → logprob: -14.250223159790039

Token 1339: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04352512210607529
    2. ' -' → logprob: -3.168525218963623
    3. ']' → logprob: -7.668525218963623
    4. '   ' → logprob: -10.918524742126465
    5. '[-' → logprob: -11.168524742126465
    6. '[i' → logprob: -11.793524742126465
    7. '][' → logprob: -12.668524742126465
    8. '```' → logprob: -13.043524742126465
    9. ']==' → logprob: -13.043524742126465
    10. '[' → logprob: -13.418524742126465

Token 1340: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038348292582668364
    2. ' ' → logprob: -7.875383377075195
    3. '0' → logprob: -13.750383377075195
    4. '```' → logprob: -14.500383377075195
    5. '2' → logprob: -14.937883377075195
    6. ']' → logprob: -15.000383377075195
    7. '   ' → logprob: -15.187883377075195
    8. '#' → logprob: -16.187883377075195
    9. '-' → logprob: -16.250383377075195
    10. '...' → logprob: -16.500383377075195

Token 1341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.12127808178775e-05
    2. '0' → logprob: -10.625051498413086
    3. ' ' → logprob: -10.625051498413086
    4. '2' → logprob: -13.875051498413086
    5. '```' → logprob: -14.250051498413086
    6. '   ' → logprob: -15.750051498413086
    7. '-' → logprob: -15.812551498413086
    8. '#' → logprob: -16.062551498413086
    9. '
' → logprob: -16.062551498413086
    10. 'k' → logprob: -16.875051498413086

Token 1342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0720617026090622
    2. ' >' → logprob: -3.322061777114868
    3. ']>' → logprob: -4.072061538696289
    4. '>' → logprob: -4.447061538696289
    5. ' ]' → logprob: -5.822061538696289
    6. '   ' → logprob: -7.322061538696289
    7. '[i' → logprob: -8.322061538696289
    8. ' <' → logprob: -8.322061538696289
    9. '[' → logprob: -9.072061538696289
    10. '>]' → logprob: -9.572061538696289

Token 1343: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22569270431995392
    2. ' >' → logprob: -1.6006927490234375
    3. '[k' → logprob: -9.850692749023438
    4. '[' → logprob: -9.975692749023438
    5. '[i' → logprob: -10.100692749023438
    6. ']' → logprob: -10.475692749023438
    7. ' ' → logprob: -10.600692749023438
    8. '<' → logprob: -10.725692749023438
    9. '   ' → logprob: -11.100692749023438
    10. ' <' → logprob: -11.100692749023438

Token 1344: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.018153687939047813
    2. ' H' → logprob: -4.018153667449951
    3. 'k' → logprob: -13.39315414428711
    4. '[' → logprob: -14.51815414428711
    5. ')' → logprob: -14.89315414428711
    6. '>' → logprob: -15.39315414428711
    7. '	H' → logprob: -15.76815414428711
    8. '(H' → logprob: -15.89315414428711
    9. ' k' → logprob: -16.01815414428711
    10. ' ' → logprob: -16.14315414428711

Token 1345: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.002302270382642746
    2. 'k' → logprob: -6.377302169799805
    3. '[' → logprob: -7.752302169799805
    4. 'H' → logprob: -10.127302169799805
    5. '```' → logprob: -10.502302169799805
    6. ']' → logprob: -10.627302169799805
    7. ' [' → logprob: -10.752302169799805
    8. '(k' → logprob: -11.002302169799805
    9. ' k' → logprob: -11.877302169799805
    10. '][' → logprob: -12.002302169799805

Token 1346: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.06685060262680054
    2. ']' → logprob: -2.9418506622314453
    3. ']:' → logprob: -4.691850662231445
    4. '[i' → logprob: -6.316850662231445
    5. '):
' → logprob: -8.691850662231445
    6. '-' → logprob: -8.941850662231445
    7. '       ' → logprob: -9.566850662231445
    8. '][' → logprob: -9.691850662231445
    9. '']:
' → logprob: -9.816850662231445
    10. '   ' → logprob: -9.941850662231445

Token 1347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11601957678794861
    2. 'new' → logprob: -2.8660194873809814
    3. ' new' → logprob: -3.4910194873809814
    4. '               ' → logprob: -4.3660197257995605
    5. '       ' → logprob: -5.6160197257995605
    6. '[new' → logprob: -6.4910197257995605
    7. '```' → logprob: -6.6160197257995605
    8. '[' → logprob: -7.1160197257995605
    9. '   ' → logprob: -7.8660197257995605
    10. ' for' → logprob: -8.366019248962402

Token 1348: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1527603715658188
    2. ' new' → logprob: -2.4027602672576904
    3. '           ' → logprob: -3.1527602672576904
    4. '               ' → logprob: -4.9027605056762695
    5. 'for' → logprob: -8.77776050567627
    6. '```' → logprob: -8.77776050567627
    7. '[new' → logprob: -9.02776050567627
    8. 'continue' → logprob: -9.15276050567627
    9. 'if' → logprob: -9.52776050567627
    10. ' for' → logprob: -9.90276050567627

Token 1349: ' On' (ID: 2160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.001039479160681367
    2. ' new' → logprob: -7.001039505004883
    3. '           ' → logprob: -9.501039505004883
    4. '```' → logprob: -10.876039505004883
    5. 'if' → logprob: -11.376039505004883
    6. 'continue' → logprob: -11.501039505004883
    7. '       ' → logprob: -12.126039505004883
    8. 'for' → logprob: -12.251039505004883
    9. '               ' → logprob: -14.001039505004883
    10. 'pass' → logprob: -15.251039505004883

Token 1350: ' sou' (ID: 4069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00597074581310153
    2. ' new' → logprob: -5.5059709548950195
    3. 'dp' → logprob: -7.2559709548950195
    4. 'for' → logprob: -7.7559709548950195
    5. '```' → logprob: -8.25597095489502
    6. '[new' → logprob: -8.88097095489502
    7. '
' → logprob: -9.25597095489502
    8. '_new' → logprob: -10.25597095489502
    9. 'elif' → logprob: -10.38097095489502
    10. '+=' → logprob: -10.38097095489502

Token 1351: 'stra' (ID: 14867)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0714610144495964
    2. '_new' → logprob: -2.9464609622955322
    3. 'b' → logprob: -5.696461200714111
    4. 'stract' → logprob: -6.196461200714111
    5. 'stra' → logprob: -6.196461200714111
    6. '   ' → logprob: -6.321461200714111
    7. '=' → logprob: -7.321461200714111
    8. '#' → logprob: -7.321461200714111
    9. '[new' → logprob: -7.321461200714111
    10. 't' → logprob: -7.446461200714111

Token 1352: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.4345022439956665
    2. 'it' → logprob: -1.4345022439956665
    3. 'new' → logprob: -2.934502124786377
    4. '   ' → logprob: -4.059502124786377
    5. '=' → logprob: -4.434502124786377
    6. 'is' → logprob: -5.184502124786377
    7. 't' → logprob: -5.809502124786377
    8. '       ' → logprob: -6.059502124786377
    9. '1' → logprob: -6.559502124786377
    10. '#' → logprob: -6.559502124786377

Token 1353: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6581945419311523
    2. 'new' → logprob: -0.7831945419311523
    3. '1' → logprob: -4.533194541931152
    4. ' new' → logprob: -5.533194541931152
    5. 'mod' → logprob: -5.533194541931152
    6. '(dp' → logprob: -6.158194541931152
    7. '(new' → logprob: -6.533194541931152
    8. '(' → logprob: -6.658194541931152
    9. ' dp' → logprob: -6.908194541931152
    10. ' (' → logprob: -8.533194541931152

Token 1354: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.032387495040893555
    2. '[k' → logprob: -3.5323874950408936
    3. 'i' → logprob: -6.032387733459473
    4. 'k' → logprob: -8.907387733459473
    5. '[' → logprob: -9.907387733459473
    6. 'new' → logprob: -10.782387733459473
    7. '[new' → logprob: -11.907387733459473
    8. '   ' → logprob: -12.657387733459473
    9. '```' → logprob: -12.782387733459473
    10. '[
' → logprob: -12.782387733459473

Token 1355: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01209504995495081
    2. ']' → logprob: -5.137094974517822
    3. '[k' → logprob: -5.262094974517822
    4. '][' → logprob: -7.012094974517822
    5. '[' → logprob: -10.13709545135498
    6. 'i' → logprob: -12.01209545135498
    7. ']-' → logprob: -12.38709545135498
    8. '[j' → logprob: -12.76209545135498
    9. ']*' → logprob: -13.01209545135498
    10. 'k' → logprob: -13.88709545135498

Token 1356: ' de' (ID: 334)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5023657083511353
    2. ' -' → logprob: -1.6273657083511353
    3. '[i' → logprob: -1.8773657083511353
    4. 'new' → logprob: -4.502365589141846
    5. '[new' → logprob: -4.627365589141846
    6. '*' → logprob: -4.752365589141846
    7. '[k' → logprob: -5.377365589141846
    8. '[' → logprob: -5.627365589141846
    9. 'from' → logprob: -6.252365589141846
    10. ' *' → logprob: -6.502365589141846

Token 1357: ' dp' (ID: 21546)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1432085484266281
    2. 'dp' → logprob: -2.0182085037231445
    3. ' new' → logprob: -7.8932085037231445
    4. 'mod' → logprob: -9.143208503723145
    5. ' dp' → logprob: -10.893208503723145
    6. '(new' → logprob: -11.018208503723145
    7. '0' → logprob: -12.268208503723145
    8. '(dp' → logprob: -12.268208503723145
    9. '2' → logprob: -13.393208503723145
    10. '(' → logprob: -13.393208503723145

Token 1358: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03945651650428772
    2. 'i' → logprob: -3.289456605911255
    3. '[k' → logprob: -6.789456367492676
    4. 'k' → logprob: -8.289456367492676
    5. 'new' → logprob: -11.414456367492676
    6. '```' → logprob: -11.539456367492676
    7. '           ' → logprob: -12.164456367492676
    8. '       ' → logprob: -13.039456367492676
    9. '[new' → logprob: -13.164456367492676
    10. ' i' → logprob: -13.414456367492676

Token 1359: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05897469446063042
    2. ']' → logprob: -2.9339747428894043
    3. ']*' → logprob: -6.683974742889404
    4. '           ' → logprob: -7.308974742889404
    5. '][' → logprob: -7.433974742889404
    6. ']:' → logprob: -7.933974742889404
    7. ']:
' → logprob: -8.558974266052246
    8. ':' → logprob: -8.558974266052246
    9. '*' → logprob: -8.808974266052246
    10. '       ' → logprob: -8.933974266052246

Token 1360: ' puis' (ID: 18766)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.4742916822433472
    2. ' new' → logprob: -1.8492916822433472
    3. 'new' → logprob: -2.0992918014526367
    4. 'dp' → logprob: -2.2242918014526367
    5. '%' → logprob: -2.3492918014526367
    6. '           ' → logprob: -2.4742918014526367
    7. ')' → logprob: -2.5992918014526367
    8. ' dp' → logprob: -2.5992918014526367
    9. ' %' → logprob: -4.724291801452637
    10. 'mod' → logprob: -4.849291801452637

Token 1361: ' on' (ID: 402)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07484119385480881
    2. 'dp' → logprob: -3.324841260910034
    3. ' new' → logprob: -4.199841022491455
    4. 'mod' → logprob: -4.949841022491455
    5. '+=' → logprob: -5.199841022491455
    6. '%=' → logprob: -5.699841022491455
    7. ' +=' → logprob: -6.199841022491455
    8. ' %=' → logprob: -7.574841022491455
    9. ' dp' → logprob: -7.699841022491455
    10. '=' → logprob: -7.824841022491455

Token 1362: ' ajoute' (ID: 91611)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8454726934432983
    2. 'mod' → logprob: -1.0954726934432983
    3. 'mul' → logprob: -2.970472812652588
    4. 'mult' → logprob: -3.345472812652588
    5. '%=' → logprob: -3.345472812652588
    6. 'pow' → logprob: -3.470472812652588
    7. 'multiply' → logprob: -3.970472812652588
    8. ' new' → logprob: -4.095472812652588
    9. '%' → logprob: -4.220472812652588
    10. 'dp' → logprob: -4.345472812652588

Token 1363: ' dp' (ID: 21546)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0003317705122753978
    2. 'dp' → logprob: -8.75033187866211
    3. 'new' → logprob: -9.12533187866211
    4. ' mod' → logprob: -9.87533187866211
    5. '(mod' → logprob: -12.50033187866211
    6. '0' → logprob: -12.62533187866211
    7. '1' → logprob: -12.75033187866211
    8. '2' → logprob: -13.75033187866211
    9. 'pow' → logprob: -14.87533187866211
    10. '
' → logprob: -15.12533187866211

Token 1364: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008455947041511536
    2. '[k' → logprob: -4.883455753326416
    3. 'i' → logprob: -7.133455753326416
    4. 'k' → logprob: -10.258456230163574
    5. '[' → logprob: -12.508456230163574
    6. 'new' → logprob: -13.008456230163574
    7. '[I' → logprob: -13.383456230163574
    8. '```' → logprob: -13.508456230163574
    9. '[n' → logprob: -13.758456230163574
    10. '[j' → logprob: -13.758456230163574

Token 1365: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04472583532333374
    2. ']' → logprob: -3.1697258949279785
    3. '[k' → logprob: -6.9197258949279785
    4. '][' → logprob: -7.6697258949279785
    5. '])' → logprob: -9.41972541809082
    6. '[' → logprob: -9.91972541809082
    7. '[
' → logprob: -10.16972541809082
    8. ')' → logprob: -10.66972541809082
    9. 'i' → logprob: -10.91972541809082
    10. '```' → logprob: -11.29472541809082

Token 1366: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.74964439868927
    2. ' *' → logprob: -1.62464439868927
    3. '           ' → logprob: -2.1246442794799805
    4. 'new' → logprob: -2.6246442794799805
    5. ')' → logprob: -3.4996442794799805
    6. ' new' → logprob: -3.8746442794799805
    7. ' -' → logprob: -3.8746442794799805
    8. '       ' → logprob: -4.1246442794799805
    9. ',' → logprob: -4.4996442794799805
    10. '[i' → logprob: -4.9996442794799805

Token 1367: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.61434406042099
    2. 'pow' → logprob: -0.86434406042099
    3. '(' → logprob: -3.6143441200256348
    4. '(pow' → logprob: -5.364344120025635
    5. '4' → logprob: -6.114344120025635
    6. '(H' → logprob: -6.864344120025635
    7. '3' → logprob: -6.989344120025635
    8. ' pow' → logprob: -8.114343643188477
    9. 'mod' → logprob: -8.364343643188477
    10. '((' → logprob: -8.614343643188477

Token 1368: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3408953547477722
    2. '2' → logprob: -1.590895414352417
    3. '(' → logprob: -3.090895414352417
    4. '(H' → logprob: -4.340895175933838
    5. '(pow' → logprob: -4.590895175933838
    6. 'mod' → logprob: -5.465895175933838
    7. '3' → logprob: -5.590895175933838
    8. 'H' → logprob: -5.590895175933838
    9. '4' → logprob: -6.590895175933838
    10. '(mod' → logprob: -7.340895175933838

Token 1369: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9612020254135132
    2. '**' → logprob: -1.0862020254135132
    3. '*' → logprob: -1.8362020254135132
    4. '[k' → logprob: -3.4612021446228027
    5. ' **' → logprob: -4.086202144622803
    6. ' ' → logprob: -4.086202144622803
    7. ',' → logprob: -4.586202144622803
    8. '[i' → logprob: -4.836202144622803
    9. '```' → logprob: -4.961202144622803
    10. '*k' → logprob: -5.586202144622803

Token 1370: ' pour' (ID: 1930)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9573621153831482
    2. 'new' → logprob: -1.832362174987793
    3. 'dp' → logprob: -2.207362174987793
    4. ' new' → logprob: -2.332362174987793
    5. ' dp' → logprob: -2.457362174987793
    6. ' *' → logprob: -3.207362174987793
    7. '       ' → logprob: -3.207362174987793
    8. ')' → logprob: -3.707362174987793
    9. 'mod' → logprob: -4.082362174987793
    10. '           ' → logprob: -4.457362174987793

Token 1371: ' comb' (ID: 4134)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06567714363336563
    2. ' new' → logprob: -2.9406771659851074
    3. 'i' → logprob: -4.815677165985107
    4. 'mod' → logprob: -7.065677165985107
    5. ' i' → logprob: -7.815677165985107
    6. '#' → logprob: -7.940677165985107
    7. '[i' → logprob: -8.81567668914795
    8. '   ' → logprob: -9.44067668914795
    9. '           ' → logprob: -9.44067668914795
    10. '       ' → logprob: -9.44067668914795

Token 1372: 'iner' (ID: 6010)
  Prédit: 'ler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ler' → logprob: -0.4151954650878906
    2. 'iner' → logprob: -1.2901954650878906
    3. 'le' → logprob: -3.7901954650878906
    4. 'let' → logprob: -4.040195465087891
    5. 'new' → logprob: -4.790195465087891
    6. '```' → logprob: -5.415195465087891
    7. 'p' → logprob: -5.790195465087891
    8. 'pler' → logprob: -6.540195465087891
    9. '_new' → logprob: -6.665195465087891
    10. 'l' → logprob: -6.665195465087891

Token 1373: '/m' (ID: 5712)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3948920965194702
    2. ' new' → logprob: -1.8948920965194702
    3. 'dp' → logprob: -2.0198922157287598
    4. 'new' → logprob: -4.01989221572876
    5. '1' → logprob: -4.39489221572876
    6. '2' → logprob: -5.76989221572876
    7. '(dp' → logprob: -5.76989221572876
    8. ' ' → logprob: -6.26989221572876
    9. ' (' → logprob: -6.76989221572876
    10. ' i' → logprob: -7.26989221572876

Token 1374: 'él' (ID: 6778)
  Prédit: 'ultiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ultiply' → logprob: -0.7587588429450989
    2. 'ult' → logprob: -1.383758783340454
    3. 'od' → logprob: -1.508758783340454
    4. 'ultip' → logprob: -4.258759021759033
    5. '=' → logprob: -4.883759021759033
    6. 'dp' → logprob: -4.883759021759033
    7. 'ax' → logprob: -5.008759021759033
    8. ']' → logprob: -5.383759021759033
    9. '*' → logprob: -5.758759021759033
    10. 'ul' → logprob: -6.008759021759033

Token 1375: 'anger' (ID: 5249)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3796747624874115
    2. 'dp' → logprob: -1.7546747922897339
    3. '[new' → logprob: -2.5046746730804443
    4. 'iner' → logprob: -3.5046746730804443
    5. 'uler' → logprob: -5.379674911499023
    6. '_dp' → logprob: -5.379674911499023
    7. '[' → logprob: -5.754674911499023
    8. 'elif' → logprob: -5.879674911499023
    9. ']' → logprob: -6.629674911499023
    10. 'ule' → logprob: -6.629674911499023

Token 1376: ' différentes' (ID: 41398)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5859699845314026
    2. ' new' → logprob: -1.3359699249267578
    3. 'dp' → logprob: -1.9609699249267578
    4. 'new' → logprob: -3.710969924926758
    5. '(dp' → logprob: -4.585969924926758
    6. ' (' → logprob: -6.085969924926758
    7. '(' → logprob: -7.085969924926758
    8. '1' → logprob: -7.710969924926758
    9. '(new' → logprob: -8.210969924926758
    10. '`' → logprob: -8.460969924926758

Token 1377: ' transitions' (ID: 59824)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7457470297813416
    2. '_dp' → logprob: -1.7457470893859863
    3. 'new' → logprob: -2.2457470893859863
    4. ' new' → logprob: -2.9957470893859863
    5. ' dp' → logprob: -3.1207470893859863
    6. '[i' → logprob: -3.7457470893859863
    7. '_new' → logprob: -3.9957470893859863
    8. '`' → logprob: -3.9957470893859863
    9. '(dp' → logprob: -4.120747089385986
    10. ')' → logprob: -4.745747089385986

Token 1378: ' possibles' (ID: 97753)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.038619253784418106
    2. '[new' → logprob: -4.163619041442871
    3. '           ' → logprob: -5.038619041442871
    4. '[' → logprob: -5.663619041442871
    5. '       ' → logprob: -5.663619041442871
    6. '```' → logprob: -5.913619041442871
    7. ' new' → logprob: -6.538619041442871
    8. 'new' → logprob: -6.913619041442871
    9. '               ' → logprob: -6.913619041442871
    10. '   ' → logprob: -7.538619041442871

Token 1379: '
' (ID: 198)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8991196155548096
    2. '[new' → logprob: -1.5241196155548096
    3. 'new' → logprob: -2.0241196155548096
    4. '           ' → logprob: -2.1491196155548096
    5. '[i' → logprob: -3.0241196155548096
    6. '       ' → logprob: -3.8991196155548096
    7. '   ' → logprob: -4.6491193771362305
    8. '               ' → logprob: -4.7741193771362305
    9. '[' → logprob: -4.8991193771362305
    10. ')' → logprob: -5.2741193771362305

Token 1380: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.16673295199871063
    2. 'new' → logprob: -3.1667330265045166
    3. '[new' → logprob: -3.2917330265045166
    4. '   ' → logprob: -3.6667330265045166
    5. ')' → logprob: -3.7917330265045166
    6. ')new' → logprob: -4.7917327880859375
    7. '(new' → logprob: -6.0417327880859375
    8. '```' → logprob: -6.1667327880859375
    9. ' =' → logprob: -6.2917327880859375
    10. '[' → logprob: -6.2917327880859375

Token 1381: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.07361812144517899
    2. 'new' (adapté à ' new') → logprob: -2.948618173599243
    3. '=' → logprob: -4.823617935180664
    4. ' =' → logprob: -5.448617935180664
    5. '[new' → logprob: -5.948617935180664
    6. '[' → logprob: -7.573617935180664
    7. ':' → logprob: -7.573617935180664
    8. '   ' → logprob: -7.948617935180664
    9. '           ' → logprob: -8.073617935180664
    10. ')' → logprob: -8.448617935180664

Token 1382: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.127333340875339e-06
    2. '_dt' → logprob: -14.250003814697266
    3. '_' → logprob: -14.375003814697266
    4. '_df' → logprob: -15.000003814697266
    5. '_dc' → logprob: -15.000003814697266
    6. '_d' → logprob: -15.250003814697266
    7. '_ds' → logprob: -15.625003814697266
    8. '_lp' → logprob: -15.625003814697266
    9. '_s' → logprob: -15.875003814697266
    10. '_db' → logprob: -16.000003814697266

Token 1383: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.500003814697266
    3. ' [' → logprob: -13.875003814697266
    4. '[I' → logprob: -15.125003814697266
    5. '```' → logprob: -15.500003814697266
    6. '=' → logprob: -15.625003814697266
    7. '
' → logprob: -15.875003814697266
    8. '[j' → logprob: -16.250003814697266
    9. ' =' → logprob: -16.375003814697266
    10. 'i' → logprob: -16.750003814697266

Token 1384: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9139550924301147
    2. ']' → logprob: -1.0389550924301147
    3. '[i' → logprob: -1.9139550924301147
    4. ' =' → logprob: -2.6639552116394043
    5. ']=' → logprob: -3.7889552116394043
    6. '[' → logprob: -6.413955211639404
    7. ']+=' → logprob: -6.788955211639404
    8. ' +=' → logprob: -7.788955211639404
    9. '+=' → logprob: -7.913955211639404
    10. '][' → logprob: -8.038954734802246

Token 1385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763418674468994
    2. ' =' → logprob: -0.8263418674468994
    3. ' +=' → logprob: -8.45134162902832
    4. '+=' → logprob: -8.57634162902832
    5. ' ' → logprob: -16.45134162902832
    6. '=i' → logprob: -16.70134162902832
    7. '   ' → logprob: -17.07634162902832
    8. '＝' → logprob: -17.45134162902832
    9. '	' → logprob: -17.82634162902832
    10. '.=' → logprob: -18.20134162902832

Token 1386: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0056852418929338455
    2. ' dp' → logprob: -5.255685329437256
    3. '(dp' → logprob: -7.755685329437256
    4. ' (' → logprob: -10.755684852600098
    5. '(' → logprob: -13.880684852600098
    6. '	dp' → logprob: -14.755684852600098
    7. '(d' → logprob: -16.630685806274414
    8. ' ' → logprob: -16.755685806274414
    9. '   ' → logprob: -16.880685806274414
    10. ' ' → logprob: -17.005685806274414

Token 1387: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5244249105453491
    2. '[k' → logprob: -0.8994249105453491
    3. 'i' → logprob: -7.524425029754639
    4. 'k' → logprob: -7.899425029754639
    5. '[' → logprob: -8.02442455291748
    6. ' [' → logprob: -10.64942455291748
    7. '[
' → logprob: -11.89942455291748
    8. '[s' → logprob: -12.64942455291748
    9. '(k' → logprob: -12.89942455291748
    10. ' k' → logprob: -13.02442455291748

Token 1388: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04117915406823158
    2. '-' → logprob: -3.5411791801452637
    3. ' +' → logprob: -4.916179180145264
    4. '+' → logprob: -5.791179180145264
    5. ')' → logprob: -7.916179180145264
    6. '[i' → logprob: -8.541178703308105
    7. '<|end|>' → logprob: -9.291178703308105
    8. ' ' → logprob: -9.416178703308105
    9. ']' → logprob: -9.541178703308105
    10. '[' → logprob: -10.416178703308105

Token 1389: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014064425602555275
    2. '-' → logprob: -4.639064311981201
    3. ' *' → logprob: -6.389064311981201
    4. '*' → logprob: -6.514064311981201
    5. ' +' → logprob: -7.014064311981201
    6. '+' → logprob: -8.51406478881836
    7. '        ' → logprob: -12.01406478881836
    8. ' ' → logprob: -12.26406478881836
    9. ' ' → logprob: -12.26406478881836
    10. '           ' → logprob: -12.38906478881836

Token 1390: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00012689977302215993
    2. ' dp' → logprob: -9.000126838684082
    3. '(dp' → logprob: -12.625126838684082
    4. '	dp' → logprob: -16.0001277923584
    5. '_dp' → logprob: -17.2501277923584
    6. '(' → logprob: -17.8751277923584
    7. 'new' → logprob: -18.7501277923584
    8. ' (' → logprob: -18.8751277923584
    9. 'dt' → logprob: -19.1251277923584
    10. 'd' → logprob: -20.0001277923584

Token 1391: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0001593195047462359
    2. 'k' → logprob: -8.75015926361084
    3. '(k' → logprob: -15.25015926361084
    4. ' k' → logprob: -15.37515926361084
    5. '{k' → logprob: -15.87515926361084
    6. '[' → logprob: -16.250160217285156
    7. '[
' → logprob: -16.750160217285156
    8. '	k' → logprob: -17.875160217285156
    9. '_k' → logprob: -18.750160217285156
    10. '[i' → logprob: -19.250160217285156

Token 1392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000283265660982579
    2. ']*' → logprob: -8.250283241271973
    3. '[k' → logprob: -11.625283241271973
    4. ']+' → logprob: -12.625283241271973
    5. '][' → logprob: -13.375283241271973
    6. '*' → logprob: -13.375283241271973
    7. '[i' → logprob: -13.625283241271973
    8. ' ]' → logprob: -13.625283241271973
    9. ']
' → logprob: -13.875283241271973
    10. '   ' → logprob: -13.875283241271973

Token 1393: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1394: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018238209187984467
    2. ' dp' → logprob: -4.018238067626953
    3. '(dp' → logprob: -9.393238067626953
    4. '2' → logprob: -13.018238067626953
    5. '(' → logprob: -13.643238067626953
    6. ' (' → logprob: -13.893238067626953
    7. '	dp' → logprob: -15.018238067626953
    8. '_dp' → logprob: -15.393238067626953
    9. ' ' → logprob: -16.393238067626953
    10. '   ' → logprob: -17.393238067626953

Token 1395: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.5597102396423e-05
    2. 'k' → logprob: -11.125035285949707
    3. '[i' → logprob: -11.125035285949707
    4. 'new' → logprob: -12.875035285949707
    5. '(k' → logprob: -13.750035285949707
    6. '[' → logprob: -14.250035285949707
    7. '```' → logprob: -14.500035285949707
    8. '_k' → logprob: -15.250035285949707
    9. '[
' → logprob: -15.625035285949707
    10. '{k' → logprob: -16.125036239624023

Token 1396: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5835480690002441
    2. '*' → logprob: -0.8335480690002441
    3. ' *' → logprob: -5.083548069000244
    4. ']*' → logprob: -6.708548069000244
    5. ')' → logprob: -10.083547592163086
    6. '[i' → logprob: -10.208547592163086
    7. '[' → logprob: -10.833547592163086
    8. '[k' → logprob: -11.208547592163086
    9. '[]' → logprob: -11.708547592163086
    10. ' ' → logprob: -11.708547592163086

Token 1397: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.038048259913921356
    2. '*' → logprob: -3.288048267364502
    3. '**' → logprob: -13.788047790527344
    4. ' ' → logprob: -13.913047790527344
    5. '*object' → logprob: -14.163047790527344
    6. ' ' → logprob: -14.288047790527344
    7. '   ' → logprob: -14.413047790527344
    8. '```' → logprob: -14.788047790527344
    9. '2' → logprob: -15.163047790527344
    10. ')' → logprob: -15.163047790527344

Token 1398: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۲' → logprob: -20.500001907348633
    4. '```' → logprob: -20.750001907348633
    5. '(' → logprob: -21.125001907348633
    6. 'multip' → logprob: -21.875001907348633
    7. '   ' → logprob: -22.125001907348633
    8. '
' → logprob: -22.250001907348633
    9. '<|end|>' → logprob: -22.250001907348633
    10. 'mul' → logprob: -22.500001907348633

Token 1399: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'mul' → logprob: -18.125
    4. 'pow' → logprob: -18.5
    5. '```' → logprob: -18.5
    6. 'multip' → logprob: -19.125
    7. '   ' → logprob: -20.625
    8. '(' → logprob: -21.25
    9. '۲' → logprob: -21.5
    10. 'two' → logprob: -21.5

Token 1400: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1401: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1944275051355362
    2. ' %' → logprob: -1.819427490234375
    3. ')' → logprob: -5.194427490234375
    4. '       ' → logprob: -5.444427490234375
    5. '<|end|>' → logprob: -6.444427490234375
    6. ')%' → logprob: -7.319427490234375
    7. '```' → logprob: -7.444427490234375
    8. '   ' → logprob: -7.694427490234375
    9. '           ' → logprob: -7.819427490234375
    10. '[' → logprob: -8.069427490234375

Token 1402: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12822358310222626
    2. ' %' → logprob: -2.3782236576080322
    3. '<|end|>' → logprob: -4.753223419189453
    4. '[' → logprob: -5.503223419189453
    5. ')' → logprob: -5.503223419189453
    6. '
' → logprob: -5.753223419189453
    7. '       ' → logprob: -6.128223419189453
    8. '[new' → logprob: -7.003223419189453
    9. ' ' → logprob: -7.253223419189453
    10. ']' → logprob: -7.378223419189453

Token 1403: ' QU' (ID: 33070)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2681889832019806
    2. 'else' → logprob: -2.143188953399658
    3. '       ' → logprob: -2.518188953399658
    4. ' new' → logprob: -4.018188953399658
    5. ' else' → logprob: -4.643188953399658
    6. '   ' → logprob: -5.393188953399658
    7. '           ' → logprob: -6.393188953399658
    8. 'continue' → logprob: -6.893188953399658
    9. 'mod' → logprob: -6.893188953399658
    10. 'if' → logprob: -7.768188953399658

Token 1404: 'AT' (ID: 1228)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3186091184616089
    2. 'elif' → logprob: -2.1936092376708984
    3. 'el' → logprob: -2.6936092376708984
    4. 'e' → logprob: -2.9436092376708984
    5. 'and' → logprob: -4.318609237670898
    6. '```' → logprob: -5.318609237670898
    7. 'estion' → logprob: -5.568609237670898
    8. 'oi' → logprob: -5.568609237670898
    9. 'al' → logprob: -5.568609237670898
    10. 'alité' → logprob: -6.693609237670898

Token 1405: 'RI' (ID: 18164)
  Prédit: 'ième'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ième' → logprob: -0.6597708463668823
    2. 'ri' → logprob: -1.2847708463668823
    3. 'r' → logprob: -2.284770965576172
    4. 'atrième' → logprob: -3.409770965576172
    5. 'RI' → logprob: -3.909770965576172
    6. 'i' → logprob: -4.409770965576172
    7. '
' → logprob: -4.909770965576172
    8. '#' → logprob: -5.034770965576172
    9. 'rière' → logprob: -5.034770965576172
    10. '=' → logprob: -6.284770965576172

Token 1406: 'EM' (ID: 3646)
  Prédit: 'ème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.05455385148525238
    2. 'ième' → logprob: -3.179553747177124
    3. 'è' → logprob: -5.429553985595703
    4. 'eme' → logprob: -5.679553985595703
    5. 'e' → logprob: -5.929553985595703
    6. 'th' → logprob: -8.054553985595703
    7. 'È' → logprob: -8.304553985595703
    8. 'ieme' → logprob: -8.929553985595703
    9. 'me' → logprob: -9.679553985595703
    10. '`' → logprob: -10.054553985595703

Token 1407: 'E' (ID: 36)
  Prédit: 'ème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.46642544865608215
    2. 'eme' → logprob: -1.4664254188537598
    3. 'ième' → logprob: -2.5914254188537598
    4. 'e' → logprob: -3.0914254188537598
    5. 'ieme' → logprob: -4.46642541885376
    6. 'E' → logprob: -6.09142541885376
    7. 'emme' → logprob: -6.09142541885376
    8. 'è' → logprob: -6.96642541885376
    9. 'ême' → logprob: -7.21642541885376
    10. 'me' → logprob: -7.21642541885376

Token 1408: ' CAS' (ID: 44953)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8599675297737122
    2. 'else' → logprob: -1.2349674701690674
    3. ' else' → logprob: -1.8599674701690674
    4. ' elif' → logprob: -2.3599674701690674
    5. '[i' → logprob: -4.4849677085876465
    6. 'case' → logprob: -5.3599677085876465
    7. '_case' → logprob: -5.6099677085876465
    8. '```' → logprob: -5.6099677085876465
    9. ' cas' → logprob: -5.7349677085876465
    10. ' case' → logprob: -5.7349677085876465

Token 1409: ':' (ID: 25)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.15353496372699738
    2. ' else' → logprob: -2.9035348892211914
    3. ':' → logprob: -3.1535348892211914
    4. 'elif' → logprob: -3.4035348892211914
    5. ' elif' → logprob: -4.778534889221191
    6. '   ' → logprob: -6.403534889221191
    7. ':
' → logprob: -7.653534889221191
    8. '[i' → logprob: -8.403534889221191
    9. '```' → logprob: -8.778534889221191
    10. ' =' → logprob: -9.028534889221191

Token 1410: ' tous' (ID: 10688)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.021028775721788406
    2. '       ' → logprob: -4.521028995513916
    3. ' else' → logprob: -4.646028995513916
    4. 'elif' → logprob: -8.146028518676758
    5. '   ' → logprob: -10.896028518676758
    6. '```' → logprob: -11.771028518676758
    7. ':' → logprob: -12.271028518676758
    8. '	else' → logprob: -12.521028518676758
    9. ' elif' → logprob: -13.146028518676758
    10. '           ' → logprob: -13.271028518676758

Token 1411: ' les' (ID: 1341)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1871194690465927
    2. ' else' → logprob: -2.187119483947754
    3. ':' → logprob: -3.562119483947754
    4. '[i' → logprob: -4.187119483947754
    5. '[:]' → logprob: -4.937119483947754
    6. '   ' → logprob: -5.562119483947754
    7. ' :' → logprob: -6.687119483947754
    8. '_else' → logprob: -7.562119483947754
    9. 'elif' → logprob: -7.812119483947754
    10. ' ' → logprob: -8.062119483947754

Token 1412: ' autres' (ID: 18701)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27434295415878296
    2. ' i' → logprob: -3.0243430137634277
    3. 'else' → logprob: -3.2743430137634277
    4. ' droits' → logprob: -3.3993430137634277
    5. 'dro' → logprob: -3.5243430137634277
    6. 'esp' → logprob: -4.274343013763428
    7. 'cas' → logprob: -4.399343013763428
    8. '#' → logprob: -4.774343013763428
    9. '```' → logprob: -4.774343013763428
    10. '_' → logprob: -4.899343013763428

Token 1413: ' cas' (ID: 2108)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07651831209659576
    2. 'else' → logprob: -2.8265182971954346
    3. ' else' → logprob: -4.576518535614014
    4. '[i' → logprob: -6.701518535614014
    5. 'elif' → logprob: -7.326518535614014
    6. ' :' → logprob: -7.451518535614014
    7. 'new' → logprob: -8.451518058776855
    8. ' =' → logprob: -8.576518058776855
    9. ' cases' → logprob: -8.576518058776855
    10. '_' → logprob: -8.826518058776855

Token 1414: ' (' (ID: 350)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1390657275915146
    2. ':' → logprob: -2.139065742492676
    3. ' else' → logprob: -4.514065742492676
    4. ':
' → logprob: -7.264065742492676
    5. '   ' → logprob: -8.514065742492676
    6. '       ' → logprob: -9.389065742492676
    7. '```' → logprob: -9.764065742492676
    8. '_else' → logprob: -10.389065742492676
    9. '	else' → logprob: -10.764065742492676
    10. '[' → logprob: -12.389065742492676

Token 1415: 'le' (ID: 282)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13079336285591125
    2. ' else' → logprob: -2.130793333053589
    3. 'new' → logprob: -6.505793571472168
    4. ' new' → logprob: -7.255793571472168
    5. '0' → logprob: -7.880793571472168
    6. '   ' → logprob: -8.005793571472168
    7. ':' → logprob: -8.255793571472168
    8. '       ' → logprob: -8.755793571472168
    9. '           ' → logprob: -9.130793571472168
    10. ':
' → logprob: -9.130793571472168

Token 1416: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6537420153617859
    2. '=' → logprob: -1.9037420749664307
    3. '[i' → logprob: -2.1537420749664307
    4. '_' → logprob: -2.5287420749664307
    5. ' else' → logprob: -3.0287420749664307
    6. 'i' → logprob: -3.7787420749664307
    7. ' =' → logprob: -4.028741836547852
    8. '[' → logprob: -4.278741836547852
    9. 'e' → logprob: -4.653741836547852
    10. ']' → logprob: -5.278741836547852

Token 1417: ' attr' (ID: 12642)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018156850710511208
    2. ':
' → logprob: -4.018157005310059
    3. ' :' → logprob: -12.518157005310059
    4. 'else' → logprob: -14.018157005310059
    5. '):
' → logprob: -14.518157005310059
    6. ':

' → logprob: -14.893157005310059
    7. ' :
' → logprob: -15.018157005310059
    8. ':
' → logprob: -15.143157005310059
    9. '):' → logprob: -15.268157005310059
    10. '```' → logprob: -15.268157005310059

Token 1418: 'ape' (ID: 2480)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009114379063248634
    2. '=' → logprob: -5.3841142654418945
    3. ' :' → logprob: -6.7591142654418945
    4. ' =' → logprob: -7.6341142654418945
    5. '```' → logprob: -7.6341142654418945
    6. '):' → logprob: -7.8841142654418945
    7. 'e' → logprob: -7.8841142654418945
    8. '[:' → logprob: -8.134114265441895
    9. '[:]' → logprob: -8.259114265441895
    10. 'i' → logprob: -9.009114265441895

Token 1419: ' tout' (ID: 5501)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011439299210906029
    2. 'i' → logprob: -4.886439323425293
    3. ' :' → logprob: -7.011439323425293
    4. '```' → logprob: -7.386439323425293
    5. ':i' → logprob: -7.636439323425293
    6. '   ' → logprob: -7.636439323425293
    7. '[i' → logprob: -7.761439323425293
    8. ' i' → logprob: -8.636439323425293
    9. '0' → logprob: -8.886439323425293
    10. ' ' → logprob: -9.011439323425293

Token 1420: ' ce' (ID: 2357)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13096435368061066
    2. ':
' → logprob: -2.5059642791748047
    3. 'else' → logprob: -3.6309642791748047
    4. '```' → logprob: -4.380964279174805
    5. ' else' → logprob: -6.630964279174805
    6. '       ' → logprob: -7.755964279174805
    7. '):
' → logprob: -8.380964279174805
    8. '   ' → logprob: -9.755964279174805
    9. ' :' → logprob: -10.380964279174805
    10. '           ' → logprob: -10.505964279174805

Token 1421: ' qui' (ID: 2780)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5005767941474915
    2. ' else' → logprob: -1.2505767345428467
    3. ')' → logprob: -3.3755767345428467
    4. '_else' → logprob: -3.5005767345428467
    5. '_' → logprob: -4.125576972961426
    6. ' )' → logprob: -5.250576972961426
    7. ' qui' → logprob: -5.625576972961426
    8. '```' → logprob: -5.875576972961426
    9. ' ' → logprob: -6.000576972961426
    10. '   ' → logprob: -6.500576972961426

Token 1422: ' n' (ID: 297)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08666118234395981
    2. ' else' → logprob: -3.2116611003875732
    3. 'n' → logprob: -3.9616611003875732
    4. ' n' → logprob: -4.836661338806152
    5. '```' → logprob: -4.836661338806152
    6. 'reste' → logprob: -5.961661338806152
    7. '_else' → logprob: -5.961661338806152
    8. ' reste' → logprob: -6.461661338806152
    9. 'rest' → logprob: -7.836661338806152
    10. '#' → logprob: -8.211661338806152

Token 1423: ''est' (ID: 6616)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.061655256897211075
    2. ' else' → logprob: -3.811655282974243
    3. '```' → logprob: -4.311655044555664
    4. 'n' → logprob: -4.936655044555664
    5. ''est' → logprob: -4.936655044555664
    6. 'e' → logprob: -5.811655044555664
    7. 'elif' → logprob: -6.561655044555664
    8. '_else' → logprob: -6.561655044555664
    9. ' n' → logprob: -6.686655044555664
    10. 'est' → logprob: -7.436655044555664

Token 1424: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.05150231346487999
    2. 'else' → logprob: -3.176502227783203
    3. ' pas' → logprob: -5.426502227783203
    4. ' else' → logprob: -5.676502227783203
    5. '_pas' → logprob: -8.051502227783203
    6. '```' → logprob: -8.176502227783203
    7. 'not' → logprob: -12.051502227783203
    8. 'pass' → logprob: -12.051502227783203
    9. 'elif' → logprob: -12.176502227783203
    10. '_else' → logprob: -12.176502227783203

Token 1425: ' couvert' (ID: 140806)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8486476540565491
    2. 'explicit' → logprob: -1.5986475944519043
    3. '```' → logprob: -1.7236475944519043
    4. 'covered' → logprob: -2.3486475944519043
    5. 'pris' → logprob: -3.8486475944519043
    6. 'pas' → logprob: -4.348647594451904
    7. 'ex' → logprob: -4.598647594451904
    8. 'None' → logprob: -5.098647594451904
    9. 'elif' → logprob: -5.348647594451904
    10. 'new' → logprob: -5.598647594451904

Token 1426: ' ci' (ID: 7405)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004584396257996559
    2. 'else' → logprob: -5.754584312438965
    3. '```' → logprob: -7.504584312438965
    4. 'par' → logprob: -8.504584312438965
    5. '   ' → logprob: -8.504584312438965
    6. ' par' → logprob: -8.754584312438965
    7. '       ' → logprob: -9.004584312438965
    8. ':
' → logprob: -10.379584312438965
    9. 'by' → logprob: -10.754584312438965
    10. 'e' → logprob: -10.754584312438965

Token 1427: '-dessus' (ID: 74812)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02108643762767315
    2. '```' → logprob: -4.2710862159729
    3. 'n' → logprob: -5.6460862159729
    4. ' else' → logprob: -7.3960862159729
    5. '``' → logprob: -7.5210862159729
    6. 'pas' → logprob: -7.7710862159729
    7. 'elif' → logprob: -8.146086692810059
    8. '_else' → logprob: -8.271086692810059
    9. 'lse' → logprob: -8.396086692810059
    10. '_' → logprob: -8.646086692810059

Token 1428: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08170203864574432
    2. ':
' → logprob: -2.5817019939422607
    3. '```' → logprob: -6.70670223236084
    4. '       ' → logprob: -7.20670223236084
    5. 'else' → logprob: -7.70670223236084
    6. ' else' → logprob: -8.95670223236084
    7. '           ' → logprob: -9.20670223236084
    8. '   ' → logprob: -9.83170223236084
    9. '):
' → logprob: -10.33170223236084
    10. ' :' → logprob: -10.70670223236084

Token 1429: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.301219642162323
    2. ':' → logprob: -1.6762197017669678
    3. ':
' → logprob: -3.4262197017669678
    4. '       ' → logprob: -3.9262197017669678
    5. '           ' → logprob: -4.926219463348389
    6. ' else' → logprob: -4.926219463348389
    7. '=' → logprob: -5.926219463348389
    8. '```' → logprob: -6.176219463348389
    9. '[' → logprob: -7.176219463348389
    10. ' =' → logprob: -8.051219940185547

Token 1430: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5749266147613525
    2. '       ' → logprob: -1.0749266147613525
    3. ' else' → logprob: -2.8249266147613525
    4. ':' → logprob: -3.4499266147613525
    5. '           ' → logprob: -6.199926376342773
    6. ':
' → logprob: -6.699926376342773
    7. '   ' → logprob: -7.574926376342773
    8. '```' → logprob: -7.699926376342773
    9. ' :' → logprob: -7.824926376342773
    10. '	else' → logprob: -9.949926376342773

Token 1431: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08957257866859436
    2. ':
' → logprob: -2.4645726680755615
    3. '           ' → logprob: -7.964572429656982
    4. '[' → logprob: -9.58957290649414
    5. '       ' → logprob: -10.21457290649414
    6. '[i' → logprob: -10.33957290649414
    7. ':
' → logprob: -10.71457290649414
    8. ' :' → logprob: -10.71457290649414
    9. '[new' → logprob: -10.83957290649414
    10. 'new' → logprob: -10.96457290649414

Token 1432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6105911731719971
    2. ' new' → logprob: -1.360591173171997
    3. 'new' → logprob: -1.610591173171997
    4. '```' → logprob: -7.735590934753418
    5. '               ' → logprob: -9.860590934753418
    6. 'continue' → logprob: -10.360590934753418
    7. '        ' → logprob: -10.360590934753418
    8. ' ' → logprob: -10.360590934753418
    9. '[new' → logprob: -10.485590934753418
    10. ' continue' → logprob: -11.235590934753418

Token 1433: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3870401382446289
    2. ' new' → logprob: -1.137040138244629
    3. '           ' → logprob: -8.887040138244629
    4. 'dp' → logprob: -11.512040138244629
    5. '```' → logprob: -11.887040138244629
    6. 'continue' → logprob: -12.387040138244629
    7. '               ' → logprob: -13.137040138244629
    8. ' continue' → logprob: -13.387040138244629
    9. ' dp' → logprob: -13.512040138244629
    10. '``' → logprob: -13.887040138244629

Token 1434: ' On' (ID: 2160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.001619003596715629
    2. ' new' → logprob: -6.6266188621521
    3. 'pass' → logprob: -8.751619338989258
    4. 'continue' → logprob: -9.251619338989258
    5. '           ' → logprob: -10.501619338989258
    6. '   ' → logprob: -12.126619338989258
    7. '       ' → logprob: -12.876619338989258
    8. '               ' → logprob: -14.251619338989258
    9. '```' → logprob: -14.376619338989258
    10. ' pass' → logprob: -14.501619338989258

Token 1435: ' sou' (ID: 4069)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11367259919643402
    2. 'new' → logprob: -2.7386724948883057
    3. '[new' → logprob: -3.2386724948883057
    4. '=' → logprob: -6.488672733306885
    5. 'continue' → logprob: -7.488672733306885
    6. ' new' → logprob: -7.613672733306885
    7. 'i' → logprob: -8.113672256469727
    8. '[' → logprob: -8.488672256469727
    9. '+=' → logprob: -8.863672256469727
    10. '[k' → logprob: -9.363672256469727

Token 1436: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -1.1381323337554932
    2. 'stract' → logprob: -1.2631323337554932
    3. '_new' → logprob: -2.013132333755493
    4. '   ' → logprob: -2.013132333755493
    5. 'new' → logprob: -2.888132333755493
    6. 'tra' → logprob: -3.388132333755493
    7. 'tr' → logprob: -4.638132095336914
    8. 'tract' → logprob: -5.138132095336914
    9. '=' → logprob: -5.388132095336914
    10. '+=' → logprob: -5.638132095336914

Token 1437: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1693975925445557
    2. 'new' → logprob: -1.5443975925445557
    3. 'tr' → logprob: -1.9193975925445557
    4. 'dp' → logprob: -2.1693975925445557
    5. 'tract' → logprob: -2.4193975925445557
    6. 'tre' → logprob: -3.4193975925445557
    7. '   ' → logprob: -3.5443975925445557
    8. 'trer' → logprob: -4.169397354125977
    9. 'tra' → logprob: -4.919397354125977
    10. '_new' → logprob: -5.294397354125977

Token 1438: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006792932283133268
    2. ' dp' → logprob: -5.006793022155762
    3. 'new' → logprob: -10.256793022155762
    4. '(dp' → logprob: -10.381793022155762
    5. ' new' → logprob: -12.631793022155762
    6. '	dp' → logprob: -12.881793022155762
    7. '```' → logprob: -13.006793022155762
    8. '1' → logprob: -13.756793022155762
    9. '_dp' → logprob: -14.131793022155762
    10. '   ' → logprob: -14.881793022155762

Token 1439: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0013720262795686722
    2. 'i' → logprob: -7.25137186050415
    3. '[k' → logprob: -7.37637186050415
    4. '[' → logprob: -10.751372337341309
    5. 'k' → logprob: -11.751372337341309
    6. ' [' → logprob: -13.501372337341309
    7. '```' → logprob: -13.501372337341309
    8. ' i' → logprob: -13.751372337341309
    9. '[j' → logprob: -14.626372337341309
    10. '   ' → logprob: -14.626372337341309

Token 1440: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00572185916826129
    2. '][' → logprob: -5.7557220458984375
    3. ']' → logprob: -6.0057220458984375
    4. '[' → logprob: -10.505722045898438
    5. 'i' → logprob: -10.630722045898438
    6. '   ' → logprob: -12.880722045898438
    7. '(i' → logprob: -13.005722045898438
    8. '])' → logprob: -13.255722045898438
    9. ' [' → logprob: -13.380722045898438
    10. '```' → logprob: -13.380722045898438

Token 1441: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15441562235355377
    2. ']' → logprob: -2.2794156074523926
    3. '[i' → logprob: -3.2794156074523926
    4. '1' → logprob: -6.154415607452393
    5. '```' → logprob: -8.40441608428955
    6. ' i' → logprob: -8.77941608428955
    7. ')' → logprob: -9.15441608428955
    8. '])' → logprob: -9.52941608428955
    9. ']>' → logprob: -9.65441608428955
    10. ')i' → logprob: -9.77941608428955

Token 1442: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019407248124480247
    2. '[i' → logprob: -4.019407272338867
    3. '][' → logprob: -6.769407272338867
    4. 'i' → logprob: -9.644407272338867
    5. '(i' → logprob: -11.644407272338867
    6. ']+' → logprob: -12.144407272338867
    7. 'from' → logprob: -12.144407272338867
    8. '```' → logprob: -12.144407272338867
    9. ']*' → logprob: -12.269407272338867
    10. ']
' → logprob: -12.769407272338867

Token 1443: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012849947670474648
    2. '```' → logprob: -8.1262845993042
    3. '[k' → logprob: -8.2512845993042
    4. 'new' → logprob: -8.3762845993042
    5. 'from' → logprob: -8.6262845993042
    6. 'i' → logprob: -9.6262845993042
    7. '[' → logprob: -9.7512845993042
    8. ']' → logprob: -9.8762845993042
    9. '[new' → logprob: -10.1262845993042
    10. '[j' → logprob: -10.6262845993042

Token 1444: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018226973712444305
    2. 'new' → logprob: -4.0182271003723145
    3. ' dp' → logprob: -9.643226623535156
    4. ' new' → logprob: -11.393226623535156
    5. '```' → logprob: -14.893226623535156
    6. '	dp' → logprob: -15.393226623535156
    7. '_dp' → logprob: -16.518226623535156
    8. '(dp' → logprob: -17.018226623535156
    9. 'd' → logprob: -17.143226623535156
    10. '
' → logprob: -17.393226623535156

Token 1445: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012018970446661115
    2. '[k' → logprob: -7.00120210647583
    3. 'i' → logprob: -8.376201629638672
    4. ']' → logprob: -10.626201629638672
    5. '[' → logprob: -11.126201629638672
    6. '```' → logprob: -11.376201629638672
    7. '][' → logprob: -13.376201629638672
    8. 'k' → logprob: -13.501201629638672
    9. '[j' → logprob: -13.876201629638672
    10. 'new' → logprob: -13.876201629638672

Token 1446: '],' (ID: 2155)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7034562826156616
    2. '[i' → logprob: -1.3284562826156616
    3. ']' → logprob: -1.5784562826156616
    4. '-' → logprob: -3.953456401824951
    5. '               ' → logprob: -5.578456401824951
    6. ' -' → logprob: -5.953456401824951
    7. '       ' → logprob: -6.328456401824951
    8. '   ' → logprob: -6.578456401824951
    9. ',' → logprob: -6.828456401824951
    10. ']+' → logprob: -7.078456401824951

Token 1447: ' puis' (ID: 18766)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5817726850509644
    2. 'new' → logprob: -1.4567726850509644
    3. '```' → logprob: -2.081772804260254
    4. '           ' → logprob: -3.831772804260254
    5. 'dp' → logprob: -3.831772804260254
    6. ' dp' → logprob: -4.331772804260254
    7. ')' → logprob: -4.831772804260254
    8. '[new' → logprob: -4.956772804260254
    9. '``' → logprob: -6.081772804260254
    10. '[' → logprob: -6.581772804260254

Token 1448: ' on' (ID: 402)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8181336522102356
    2. 'dp' → logprob: -0.9431336522102356
    3. ' new' → logprob: -2.318133592605591
    4. ' dp' → logprob: -3.568133592605591
    5. '+=' → logprob: -3.818133592605591
    6. '=' → logprob: -4.19313383102417
    7. '+' → logprob: -6.31813383102417
    8. '```' → logprob: -6.44313383102417
    9. ' +=' → logprob: -7.31813383102417
    10. '           ' → logprob: -7.94313383102417

Token 1449: ' ajoute' (ID: 91611)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3464365005493164
    2. 'dp' → logprob: -1.9714365005493164
    3. '+=' → logprob: -2.3464365005493164
    4. ' new' → logprob: -3.5964365005493164
    5. 'mul' → logprob: -4.971436500549316
    6. 'add' → logprob: -5.471436500549316
    7. '```' → logprob: -5.596436500549316
    8. 'pow' → logprob: -5.721436500549316
    9. 'k' → logprob: -5.971436500549316
    10. ' dp' → logprob: -6.221436500549316

Token 1450: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011082245968282223
    2. ' dp' → logprob: -4.511082172393799
    3. 'new' → logprob: -10.511082649230957
    4. ' new' → logprob: -12.636082649230957
    5. '   ' → logprob: -13.511082649230957
    6. '	dp' → logprob: -14.011082649230957
    7. '(dp' → logprob: -14.136082649230957
    8. '2' → logprob: -15.636082649230957
    9. '_dp' → logprob: -15.636082649230957
    10. '```' → logprob: -15.761082649230957

Token 1451: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.062382057309150696
    2. '[i' → logprob: -2.8123819828033447
    3. 'k' → logprob: -8.187381744384766
    4. 'i' → logprob: -10.062381744384766
    5. '[' → logprob: -10.312381744384766
    6. '[
' → logprob: -11.062381744384766
    7. '```' → logprob: -11.437381744384766
    8. ' [' → logprob: -11.812381744384766
    9. '[j' → logprob: -11.937381744384766
    10. '
' → logprob: -12.187381744384766

Token 1452: '-' (ID: 12)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.06652931869029999
    2. '[i' → logprob: -2.9415292739868164
    3. '-' → logprob: -4.691529273986816
    4. '[' → logprob: -7.316529273986816
    5. ']' → logprob: -7.441529273986816
    6. '[-' → logprob: -8.066529273986816
    7. 'k' → logprob: -8.066529273986816
    8. '][' → logprob: -8.816529273986816
    9. '```' → logprob: -9.566529273986816
    10. '
' → logprob: -10.191529273986816

Token 1453: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3149263262748718
    2. '1' → logprob: -1.8149263858795166
    3. '-' → logprob: -2.8149263858795166
    4. 'i' → logprob: -3.4399263858795166
    5. ']' → logprob: -4.4399261474609375
    6. '[i' → logprob: -6.6899261474609375
    7. '[k' → logprob: -6.8149261474609375
    8. '```' → logprob: -8.439926147460938
    9. ' -' → logprob: -8.814926147460938
    10. '   ' → logprob: -8.939926147460938

Token 1454: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00881617795675993
    2. ']*' → logprob: -4.758816242218018
    3. '[i' → logprob: -9.50881576538086
    4. '*' → logprob: -9.75881576538086
    5. '```' → logprob: -10.75881576538086
    6. '],' → logprob: -10.75881576538086
    7. ']:
' → logprob: -12.00881576538086
    8. ']
' → logprob: -12.88381576538086
    9. ']+' → logprob: -12.88381576538086
    10. '   ' → logprob: -13.00881576538086

Token 1455: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5254082679748535
    2. '*' → logprob: -0.9004082679748535
    3. '   ' → logprob: -7.6504082679748535
    4. '[i' → logprob: -7.7754082679748535
    5. '```' → logprob: -7.7754082679748535
    6. '[k' → logprob: -7.9004082679748535
    7. '*k' → logprob: -8.775407791137695
    8. '           ' → logprob: -9.150407791137695
    9. '[new' → logprob: -9.650407791137695
    10. 'new' → logprob: -9.900407791137695

Token 1456: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025336870457977057
    2. ' ' → logprob: -6.002533912658691
    3. '3' → logprob: -11.002533912658691
    4. '(' → logprob: -11.002533912658691
    5. '1' → logprob: -11.502533912658691
    6. '4' → logprob: -12.252533912658691
    7. 'pow' → logprob: -12.502533912658691
    8. '```' → logprob: -13.627533912658691
    9. ' (' → logprob: -14.377533912658691
    10. 'mul' → logprob: -14.502533912658691

Token 1457: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.889424836728722e-05
    2. '3' → logprob: -9.750099182128906
    3. '1' → logprob: -11.375099182128906
    4. '(' → logprob: -11.375099182128906
    5. '4' → logprob: -12.000099182128906
    6. ' ' → logprob: -12.250099182128906
    7. 'pow' → logprob: -13.875099182128906
    8. '0' → logprob: -14.000099182128906
    9. '10' → logprob: -14.437599182128906
    10. 'k' → logprob: -14.500099182128906

Token 1458: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0756444931030273
    2. '[i' → logprob: -1.2006444931030273
    3. 'new' → logprob: -2.4506444931030273
    4. '   ' → logprob: -2.7006444931030273
    5. '```' → logprob: -3.0756444931030273
    6. '[new' → logprob: -3.2006444931030273
    7. '[k' → logprob: -3.3256444931030273
    8. '=' → logprob: -3.8256444931030273
    9. ' new' → logprob: -3.9506444931030273
    10. ':' → logprob: -4.075644493103027

Token 1459: ' Le' (ID: 2018)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7755172252655029
    2. 'new' → logprob: -1.150517225265503
    3. ' new' → logprob: -1.525517225265503
    4. '```' → logprob: -5.900517463684082
    5. '[new' → logprob: -7.025517463684082
    6. '               ' → logprob: -7.275517463684082
    7. '   ' → logprob: -7.650517463684082
    8. ':' → logprob: -9.025517463684082
    9. ' =' → logprob: -9.150517463684082
    10. ':
' → logprob: -9.150517463684082

Token 1460: ' tout' (ID: 5501)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.038550615310669
    2. '=' → logprob: -1.538550615310669
    3. '[i' → logprob: -1.913550615310669
    4. 'i' → logprob: -2.288550615310669
    5. ' new' → logprob: -2.538550615310669
    6. '[new' → logprob: -4.03855037689209
    7. '```' → logprob: -4.16355037689209
    8. '[k' → logprob: -4.41355037689209
    9. '_' → logprob: -4.78855037689209
    10. 'k' → logprob: -4.91355037689209

Token 1461: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.29130443930625916
    2. ' %=' → logprob: -1.7913044691085815
    3. ')' → logprob: -3.291304349899292
    4. ' %' → logprob: -3.916304349899292
    5. '%=' → logprob: -3.916304349899292
    6. '=' → logprob: -6.291304588317871
    7. ')%' → logprob: -6.791304588317871
    8. '```' → logprob: -7.041304588317871
    9. '%i' → logprob: -7.291304588317871
    10. '[i' → logprob: -7.416304588317871

Token 1462: ' multip' (ID: 17524)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.13613584637641907
    2. ' %' → logprob: -2.1361358165740967
    3. 'mod' → logprob: -5.386136054992676
    4. ')' → logprob: -5.886136054992676
    5. 'new' → logprob: -7.511136054992676
    6. ' mod' → logprob: -7.886136054992676
    7. '%d' → logprob: -8.636136054992676
    8. ')%' → logprob: -8.761136054992676
    9. ' new' → logprob: -8.886136054992676
    10. '%n' → logprob: -9.136136054992676

Token 1463: 'lié' (ID: 102412)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13819460570812225
    2. 'ip' → logprob: -2.8881945610046387
    3. 'ipl' → logprob: -3.0131945610046387
    4. 'lié' → logprob: -4.763194561004639
    5. 'par' → logprob: -5.888194561004639
    6. 'é' → logprob: -6.513194561004639
    7. 'ié' → logprob: -6.638194561004639
    8. 'u' → logprob: -6.763194561004639
    9. 'p' → logprob: -7.013194561004639
    10. '#' → logprob: -7.138194561004639

Token 1464: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2157390117645264
    2. '(mod' → logprob: -1.9657390117645264
    3. '(i' → logprob: -2.2157390117645264
    4. '```' → logprob: -2.3407390117645264
    5. 'mod' → logprob: -2.4657390117645264
    6. '(dp' → logprob: -2.5907390117645264
    7. 'by' → logprob: -2.8407390117645264
    8. 'new' → logprob: -3.3407390117645264
    9. '(new' → logprob: -3.7157390117645264
    10. '*' → logprob: -4.0907392501831055

Token 1465: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5660316348075867
    2. 'pow' → logprob: -1.5660316944122314
    3. 'mod' → logprob: -1.9410316944122314
    4. 'dp' → logprob: -3.3160316944122314
    5. '(' → logprob: -4.316031455993652
    6. '0' → logprob: -5.441031455993652
    7. '1' → logprob: -5.441031455993652
    8. '(H' → logprob: -5.691031455993652
    9. '(mod' → logprob: -5.816031455993652
    10. '```' → logprob: -6.191031455993652

Token 1466: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3665575087070465
    2. 'pow' → logprob: -1.9915574789047241
    3. 'mod' → logprob: -1.9915574789047241
    4. '1' → logprob: -4.866557598114014
    5. 'dp' → logprob: -5.366557598114014
    6. '(' → logprob: -5.491557598114014
    7. '-' → logprob: -5.616557598114014
    8. '0' → logprob: -6.366557598114014
    9. '```' → logprob: -6.366557598114014
    10. 'mul' → logprob: -6.491557598114014

Token 1467: '^(' (ID: 32612)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.15975959599018097
    2. '```' → logprob: -2.784759521484375
    3. '           ' → logprob: -3.034759521484375
    4. '   ' → logprob: -4.034759521484375
    5. '       ' → logprob: -5.534759521484375
    6. '``' → logprob: -6.034759521484375
    7. '*' → logprob: -6.409759521484375
    8. ' *' → logprob: -6.534759521484375
    9. '[k' → logprob: -6.534759521484375
    10. '
' → logprob: -6.909759521484375

Token 1468: 'H' (ID: 39)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.8555827140808105
    2. 'H' → logprob: -1.3555827140808105
    3. '(H' → logprob: -1.7305827140808105
    4. ' (' → logprob: -2.1055827140808105
    5. ' ' → logprob: -5.4805827140808105
    6. '(' → logprob: -5.6055827140808105
    7. '2' → logprob: -5.7305827140808105
    8. '1' → logprob: -5.9805827140808105
    9. ')' → logprob: -7.2305827140808105
    10. ' )' → logprob: -7.3555827140808105

Token 1469: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.15188001096248627
    2. '[i' → logprob: -2.0268800258636475
    3. 'k' → logprob: -5.276879787445068
    4. 'i' → logprob: -6.026879787445068
    5. '```' → logprob: -7.401879787445068
    6. '[' → logprob: -8.151880264282227
    7. '(k' → logprob: -8.651880264282227
    8. '
' → logprob: -8.776880264282227
    9. ']' → logprob: -9.776880264282227
    10. '``' → logprob: -9.901880264282227

Token 1470: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.45272237062454224
    2. '-' → logprob: -1.3277223110198975
    3. ']' → logprob: -2.9527223110198975
    4. '-i' → logprob: -3.7027223110198975
    5. ' -' → logprob: -4.202722549438477
    6. 'i' → logprob: -5.702722549438477
    7. ']-' → logprob: -6.452722549438477
    8. '   ' → logprob: -7.452722549438477
    9. '[-' → logprob: -7.702722549438477
    10. '[' → logprob: -7.952722549438477

Token 1471: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7097978591918945
    2. ' -' → logprob: -0.7097978591918945
    3. '[i' → logprob: -4.3347978591918945
    4. '   ' → logprob: -6.8347978591918945
    5. '[-' → logprob: -7.3347978591918945
    6. '-i' → logprob: -7.4597978591918945
    7. '```' → logprob: -8.459797859191895
    8. '[' → logprob: -8.459797859191895
    9. ' ' → logprob: -8.709797859191895
    10. ')' → logprob: -9.334797859191895

Token 1472: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03885434940457344
    2. 'i' → logprob: -3.2888543605804443
    3. ' H' → logprob: -7.413854122161865
    4. ' i' → logprob: -9.663854598999023
    5. '(H' → logprob: -9.788854598999023
    6. '(i' → logprob: -10.163854598999023
    7. '```' → logprob: -10.788854598999023
    8. '   ' → logprob: -11.663854598999023
    9. '[i' → logprob: -11.788854598999023
    10. 'k' → logprob: -12.413854598999023

Token 1473: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3137586712837219
    2. 'i' → logprob: -1.3137586116790771
    3. '[k' → logprob: -8.938758850097656
    4. '```' → logprob: -9.188758850097656
    5. '   ' → logprob: -9.813758850097656
    6. ']' → logprob: -9.813758850097656
    7. '[' → logprob: -10.188758850097656
    8. ' i' → logprob: -10.313758850097656
    9. 'k' → logprob: -10.438758850097656
    10. '	i' → logprob: -11.438758850097656

Token 1474: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6503207683563232
    2. ']' → logprob: -0.7753207683563232
    3. '[i' → logprob: -4.150321006774902
    4. 'i' → logprob: -7.775321006774902
    5. '-i' → logprob: -7.900321006774902
    6. '])' → logprob: -7.900321006774902
    7. ']-' → logprob: -8.400321006774902
    8. ' -' → logprob: -9.150321006774902
    9. '   ' → logprob: -9.275321006774902
    10. '[-' → logprob: -9.650321006774902

Token 1475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016277639952022582
    2. 'i' → logprob: -8.875163078308105
    3. '```' → logprob: -11.500163078308105
    4. '])' → logprob: -12.375163078308105
    5. ']' → logprob: -13.125163078308105
    6. '-' → logprob: -13.375163078308105
    7. ' ' → logprob: -13.500163078308105
    8. '   ' → logprob: -13.750163078308105
    9. '[i' → logprob: -14.000163078308105
    10. '2' → logprob: -14.750163078308105

Token 1476: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.42994481325149536
    2. ']' → logprob: -1.6799447536468506
    3. ')' → logprob: -2.1799447536468506
    4. '])
' → logprob: -3.4299447536468506
    5. ')])' → logprob: -5.30494499206543
    6. ')]' → logprob: -5.42994499206543
    7. ']))' → logprob: -5.92994499206543
    8. ')
' → logprob: -6.80494499206543
    9. ']),' → logprob: -7.30494499206543
    10. ']))
' → logprob: -7.55494499206543

Token 1477: ' modulo' (ID: 112372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16513197124004364
    2. 'new' → logprob: -2.9151320457458496
    3. '[i' → logprob: -3.7901320457458496
    4. '```' → logprob: -3.9151320457458496
    5. '[new' → logprob: -4.41513204574585
    6. ' new' → logprob: -4.41513204574585
    7. '       ' → logprob: -4.54013204574585
    8. '   ' → logprob: -4.91513204574585
    9. ' *' → logprob: -5.29013204574585
    10. '*' → logprob: -6.66513204574585

Token 1478: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.08447100222110748
    2. '(mod' → logprob: -2.5844709873199463
    3. ' mod' → logprob: -5.334471225738525
    4. ' (' → logprob: -7.584471225738525
    5. '(' → logprob: -8.709470748901367
    6. '```' → logprob: -10.459470748901367
    7. '`' → logprob: -11.584470748901367
    8. 'pow' → logprob: -11.959470748901367
    9. '2' → logprob: -11.959470748901367
    10. '	mod' → logprob: -12.334470748901367

Token 1479: '.
' (ID: 558)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.0364375114440918
    2. '=' → logprob: -1.4114375114440918
    3. '           ' → logprob: -1.4114375114440918
    4. ' =' → logprob: -3.036437511444092
    5. ' new' → logprob: -3.786437511444092
    6. ')' → logprob: -3.911437511444092
    7. '   ' → logprob: -3.911437511444092
    8. '       ' → logprob: -4.411437511444092
    9. '```' → logprob: -4.411437511444092
    10. '[i' → logprob: -4.786437511444092

Token 1480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4511544704437256
    2. '```' → logprob: -1.4511544704437256
    3. ' new' → logprob: -1.8261544704437256
    4. 'new' → logprob: -1.8261544704437256
    5. '(new' → logprob: -3.0761544704437256
    6. '*' → logprob: -3.4511544704437256
    7. ' *' → logprob: -3.4511544704437256
    8. '   ' → logprob: -3.4511544704437256
    9. '[new' → logprob: -4.076154708862305
    10. '[' → logprob: -4.451154708862305

Token 1481: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.4439195394515991
    2. ' new' → logprob: -1.0689195394515991
    3. '           ' → logprob: -5.193919658660889
    4. '```' → logprob: -5.443919658660889
    5. '   ' → logprob: -5.943919658660889
    6. '       ' → logprob: -7.318919658660889
    7. '(new' → logprob: -7.443919658660889
    8. '(' → logprob: -7.943919658660889
    9. '``' → logprob: -7.943919658660889
    10. ' (' → logprob: -9.06891918182373

Token 1482: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -6.704273118884885e-07
    2. 'dp' → logprob: -15.625000953674316
    3. '_dt' → logprob: -16.0
    4. '_dc' → logprob: -16.75
    5. '\' → logprob: -17.375
    6. '_np' → logprob: -17.625
    7. '```' → logprob: -17.625
    8. '_new' → logprob: -18.0
    9. 'new' → logprob: -18.0
    10. '_d' → logprob: -18.0

Token 1483: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015157493180595338
    2. '=' → logprob: -9.125151634216309
    3. '[' → logprob: -10.625151634216309
    4. ' [' → logprob: -12.000151634216309
    5. ' =' → logprob: -12.500151634216309
    6. '```' → logprob: -12.625151634216309
    7. 'i' → logprob: -13.625151634216309
    8. '=[' → logprob: -13.750151634216309
    9. '\[' → logprob: -14.250151634216309
    10. '   ' → logprob: -15.000151634216309

Token 1484: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08923061192035675
    2. '=' → logprob: -2.589230537414551
    3. ']=' → logprob: -4.839230537414551
    4. ' =' → logprob: -6.089230537414551
    5. ')' → logprob: -10.46423053741455
    6. ' ]' → logprob: -10.58923053741455
    7. '   ' → logprob: -10.96423053741455
    8. '[i' → logprob: -11.21423053741455
    9. '       ' → logprob: -11.96423053741455
    10. '[' → logprob: -12.21423053741455

Token 1485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029752805829048157
    2. ' =' → logprob: -3.529752731323242
    3. '=(' → logprob: -14.029752731323242
    4. '   ' → logprob: -14.279752731323242
    5. '+=' → logprob: -15.529752731323242
    6. ' =(' → logprob: -15.654752731323242
    7. '*=' → logprob: -15.779752731323242
    8. '=((' → logprob: -15.904752731323242
    9. '```' → logprob: -16.904752731323242
    10. '＝' → logprob: -17.404752731323242

Token 1486: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0007185076246969402
    2. ' (' → logprob: -7.375718593597412
    3. '((' → logprob: -10.000718116760254
    4. 'dp' → logprob: -11.000718116760254
    5. '   ' → logprob: -11.375718116760254
    6. '(' → logprob: -11.625718116760254
    7. '(dx' → logprob: -13.500718116760254
    8. '(pow' → logprob: -13.500718116760254
    9. '(pd' → logprob: -13.625718116760254
    10. '(d' → logprob: -14.125718116760254

Token 1487: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.029963722452521324
    2. 'dp' → logprob: -3.529963731765747
    3. ' (' → logprob: -8.654963493347168
    4. '(' → logprob: -11.404963493347168
    5. '((' → logprob: -11.904963493347168
    6. '   ' → logprob: -12.029963493347168
    7. ' dp' → logprob: -12.154963493347168
    8. '	dp' → logprob: -13.279963493347168
    9. '(d' → logprob: -13.779963493347168
    10. '(
' → logprob: -14.404963493347168

Token 1488: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00032926726271398365
    2. 'i' → logprob: -8.75032901763916
    3. '[k' → logprob: -9.50032901763916
    4. '[' → logprob: -9.62532901763916
    5. '```' → logprob: -11.75032901763916
    6. '   ' → logprob: -12.25032901763916
    7. '[
' → logprob: -13.00032901763916
    8. ' [' → logprob: -13.50032901763916
    9. '(i' → logprob: -13.75032901763916
    10. '
' → logprob: -14.12532901763916

Token 1489: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1801786869764328
    2. '-' → logprob: -1.8051786422729492
    3. '[i' → logprob: -8.05517864227295
    4. '   ' → logprob: -10.68017864227295
    5. ' ' → logprob: -10.80517864227295
    6. '           ' → logprob: -11.30517864227295
    7. ')' → logprob: -11.43017864227295
    8. '[' → logprob: -11.80517864227295
    9. '```' → logprob: -11.93017864227295
    10. '*' → logprob: -12.05517864227295

Token 1490: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868768811225891
    2. '-' → logprob: -1.1368768215179443
    3. ' ' → logprob: -13.511877059936523
    4. '-
' → logprob: -14.136877059936523
    5. '   ' → logprob: -14.386877059936523
    6. '
' → logprob: -14.386877059936523
    7. ' ' → logprob: -14.386877059936523
    8. ' -
' → logprob: -15.261877059936523
    9. '          ' → logprob: -15.386877059936523
    10. '    ' → logprob: -15.636877059936523

Token 1491: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -5.836499985889532e-05
    2. ' dp' → logprob: -9.7500581741333
    3. '	dp' → logprob: -16.875059127807617
    4. '(dp' → logprob: -18.000059127807617
    5. '_dp' → logprob: -19.125059127807617
    6. '   ' → logprob: -19.875059127807617
    7. 'def' → logprob: -20.750059127807617
    8. 'dt' → logprob: -21.625059127807617
    9. 'd' → logprob: -22.125059127807617
    10. '```' → logprob: -22.125059127807617

Token 1492: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0013867855304852128
    2. 'k' → logprob: -6.626386642456055
    3. '(k' → logprob: -9.751386642456055
    4. '[
' → logprob: -14.376386642456055
    5. '{k' → logprob: -14.376386642456055
    6. '[' → logprob: -14.751386642456055
    7. ' k' → logprob: -15.376386642456055
    8. '	k' → logprob: -15.876386642456055
    9. ' [' → logprob: -16.126386642456055
    10. '```' → logprob: -16.376386642456055

Token 1493: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06449861824512482
    2. '[k' → logprob: -2.8144986629486084
    3. '[-' → logprob: -6.689498424530029
    4. ' -' → logprob: -7.064498424530029
    5. ']' → logprob: -8.564498901367188
    6. '[' → logprob: -9.314498901367188
    7. 'k' → logprob: -9.314498901367188
    8. '-k' → logprob: -11.189498901367188
    9. '   ' → logprob: -11.564498901367188
    10. '(k' → logprob: -12.064498901367188

Token 1494: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.250000953674316
    3. '```' → logprob: -15.250000953674316
    4. '   ' → logprob: -16.125
    5. ']' → logprob: -16.625
    6. '
' → logprob: -17.6875
    7. '[' → logprob: -18.0625
    8. '`' → logprob: -18.3125
    9. '-' → logprob: -18.625
    10. '#' → logprob: -18.8125

Token 1495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -14.250001907348633
    3. '```' → logprob: -14.875001907348633
    4. '   ' → logprob: -15.250001907348633
    5. ']' → logprob: -15.562501907348633
    6. '
' → logprob: -17.312501907348633
    7. '`' → logprob: -17.437501907348633
    8. 'new' → logprob: -18.125001907348633
    9. '۱' → logprob: -18.187501907348633
    10. '       ' → logprob: -18.250001907348633

Token 1496: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11606055498123169
    2. ' +' → logprob: -2.741060495376587
    3. ')' → logprob: -3.491060495376587
    4. ']' → logprob: -4.241060733795166
    5. '   ' → logprob: -9.116060256958008
    6. '```' → logprob: -9.991060256958008
    7. ' ' → logprob: -11.491060256958008
    8. ']+' → logprob: -11.741060256958008
    9. ')*' → logprob: -12.366060256958008
    10. '    ' → logprob: -12.366060256958008

Token 1497: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012365076690912247
    2. ' +' → logprob: -4.512364864349365
    3. ')' → logprob: -6.637364864349365
    4. '   ' → logprob: -13.012365341186523
    5. '```' → logprob: -13.887365341186523
    6. '*' → logprob: -14.262365341186523
    7. '+
' → logprob: -14.637365341186523
    8. ']' → logprob: -14.762365341186523
    9. ' ' → logprob: -15.012365341186523
    10. ')*' → logprob: -15.512365341186523

Token 1498: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03923967853188515
    2. ' dp' → logprob: -3.5392396450042725
    3. '(dp' → logprob: -4.664239883422852
    4. '(' → logprob: -12.039239883422852
    5. ' (' → logprob: -12.039239883422852
    6. '	dp' → logprob: -12.414239883422852
    7. '_dp' → logprob: -13.789239883422852
    8. 'pow' → logprob: -15.914239883422852
    9. '```' → logprob: -15.914239883422852
    10. '(d' → logprob: -16.16423988342285

Token 1499: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.3954463510308415e-05
    2. 'k' → logprob: -10.375054359436035
    3. '(k' → logprob: -11.125054359436035
    4. '```' → logprob: -12.250054359436035
    5. ' [' → logprob: -13.625054359436035
    6. '[' → logprob: -14.000054359436035
    7. '[(' → logprob: -15.250054359436035
    8. ' k' → logprob: -15.500054359436035
    9. '[
' → logprob: -15.500054359436035
    10. '`' → logprob: -15.625054359436035

Token 1500: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05497977137565613
    2. ' -' → logprob: -2.9299798011779785
    3. 'k' → logprob: -10.42997932434082
    4. '[k' → logprob: -10.55497932434082
    5. '```' → logprob: -11.05497932434082
    6. ']' → logprob: -11.67997932434082
    7. '[-' → logprob: -11.80497932434082
    8. '-k' → logprob: -12.42997932434082
    9. '   ' → logprob: -13.17997932434082
    10. ' ' → logprob: -14.30497932434082

Token 1501: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.625004768371582
    3. '```' → logprob: -14.125004768371582
    4. '   ' → logprob: -14.375004768371582
    5. '
' → logprob: -16.3750057220459
    6. '１' → logprob: -17.3125057220459
    7. '	' → logprob: -17.3750057220459
    8. '#' → logprob: -17.5000057220459
    9. '           ' → logprob: -17.5625057220459
    10. '       ' → logprob: -17.6875057220459

Token 1502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.125003814697266
    3. '   ' → logprob: -15.125003814697266
    4. '```' → logprob: -15.125003814697266
    5. 'new' → logprob: -15.437503814697266
    6. '<|end|>' → logprob: -15.750003814697266
    7. '<|end|>' → logprob: -15.937503814697266
    8. '...' → logprob: -16.562503814697266
    9. '' → logprob: -17.062503814697266
    10. 'def' → logprob: -17.062503814697266

Token 1503: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5219340920448303
    2. ' *' → logprob: -1.3969340324401855
    3. ']' → logprob: -1.8969340324401855
    4. ')' → logprob: -4.8969340324401855
    5. ']*' → logprob: -7.1469340324401855
    6. '```' → logprob: -8.021934509277344
    7. '`' → logprob: -8.521934509277344
    8. '   ' → logprob: -10.146934509277344
    9. '           ' → logprob: -10.271934509277344
    10. ')*' → logprob: -10.271934509277344

Token 1504: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28144872188568115
    2. ' *' → logprob: -1.4064487218856812
    3. ')' → logprob: -8.281448364257812
    4. ']' → logprob: -10.656448364257812
    5. '**' → logprob: -12.281448364257812
    6. ' ' → logprob: -12.531448364257812
    7. '```' → logprob: -12.906448364257812
    8. ')*' → logprob: -13.281448364257812
    9. ' ' → logprob: -13.406448364257812
    10. '[' → logprob: -13.406448364257812

Token 1505: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -15.6251802444458
    4. '<|end|>' → logprob: -17.375179290771484
    5. '(' → logprob: -17.875179290771484
    6. '۲' → logprob: -18.250179290771484
    7. '   ' → logprob: -19.125179290771484
    8. 'mul' → logprob: -19.625179290771484
    9. '`' → logprob: -19.750179290771484
    10. '  ' → logprob: -19.750179290771484

Token 1506: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -17.125
    4. 'mul' → logprob: -18.875
    5. 'multip' → logprob: -19.375
    6. '۲' → logprob: -19.375
    7. '
' → logprob: -20.625
    8. 'pow' → logprob: -20.625
    9. '*' → logprob: -20.875
    10. '<|end|>' → logprob: -21.125

Token 1507: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014553552027791739
    2. '   ' → logprob: -7.126455307006836
    3. '```' → logprob: -8.251455307006836
    4. ' *' → logprob: -8.626455307006836
    5. ' )' → logprob: -10.001455307006836
    6. '*' → logprob: -10.126455307006836
    7. '       ' → logprob: -10.376455307006836
    8. ']' → logprob: -10.626455307006836
    9. '           ' → logprob: -10.751455307006836
    10. '**' → logprob: -11.376455307006836

Token 1508: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.046262145042419434
    2. '%' → logprob: -3.671262264251709
    3. ' *' → logprob: -4.171262264251709
    4. '   ' → logprob: -6.171262264251709
    5. '```' → logprob: -6.546262264251709
    6. '*' → logprob: -8.29626178741455
    7. ')' → logprob: -8.42126178741455
    8. '**' → logprob: -8.79626178741455
    9. ' ' → logprob: -10.17126178741455
    10. ' ' → logprob: -10.67126178741455

Token 1509: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0011706985533237457
    2. ' pow' → logprob: -6.751170635223389
    3. '(pow' → logprob: -14.501171112060547
    4. '_pow' → logprob: -18.501171112060547
    5. '2' → logprob: -19.251171112060547
    6. '.pow' → logprob: -19.376171112060547
    7. '   ' → logprob: -20.001171112060547
    8. 'Pow' → logprob: -20.126171112060547
    9. '```' → logprob: -20.126171112060547
    10. 'power' → logprob: -20.376171112060547

Token 1510: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.641841820150148e-05
    2. '(
' → logprob: -11.37502670288086
    3. '2' → logprob: -11.75002670288086
    4. ' (' → logprob: -11.87502670288086
    5. '```' → logprob: -16.50002670288086
    6. ' ' → logprob: -17.75002670288086
    7. '(

' → logprob: -18.62502670288086
    8. '(
' → logprob: -19.25002670288086
    9. ' (
' → logprob: -19.37502670288086
    10. '(pow' → logprob: -19.37502670288086

Token 1511: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001446611131541431
    2. '(' → logprob: -8.875144958496094
    3. ' ' → logprob: -12.375144958496094
    4. '```' → logprob: -14.625144958496094
    5. '   ' → logprob: -16.750144958496094
    6. '(
' → logprob: -17.125144958496094
    7. ' (' → logprob: -17.750144958496094
    8. '  ' → logprob: -17.750144958496094
    9. '[' → logprob: -18.750144958496094
    10. ')' → logprob: -19.250144958496094

Token 1512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3525083363056183
    2. '(' → logprob: -1.227508306503296
    3. ' (' → logprob: -6.477508544921875
    4. '(H' → logprob: -7.102508544921875
    5. '2' → logprob: -7.227508544921875
    6. ' ,' → logprob: -7.602508544921875
    7. ',H' → logprob: -8.477508544921875
    8. '((' → logprob: -9.852508544921875
    9. ' ' → logprob: -10.102508544921875
    10. ',(' → logprob: -10.227508544921875

Token 1513: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06234554946422577
    2. '(H' → logprob: -2.812345504760742
    3. ' H' → logprob: -7.937345504760742
    4. ' (' → logprob: -10.812345504760742
    5. '(' → logprob: -14.812345504760742
    6. '	H' → logprob: -15.687345504760742
    7. ''H' → logprob: -17.437345504760742
    8. '-H' → logprob: -17.687345504760742
    9. ' ' → logprob: -18.437345504760742
    10. ' ' → logprob: -18.437345504760742

Token 1514: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.6047699318733066e-05
    2. 'k' → logprob: -11.125016212463379
    3. '```' → logprob: -14.750016212463379
    4. '[' → logprob: -15.000016212463379
    5. '(k' → logprob: -15.125016212463379
    6. '{k' → logprob: -16.375015258789062
    7. '[
' → logprob: -16.500015258789062
    8. ' [' → logprob: -17.125015258789062
    9. ' k' → logprob: -17.750015258789062
    10. '   ' → logprob: -18.000015258789062

Token 1515: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6018075942993164
    2. '-' → logprob: -0.8518075942993164
    3. '[k' → logprob: -4.226807594299316
    4. '[' → logprob: -5.351807594299316
    5. ' -' → logprob: -5.351807594299316
    6. ' ' → logprob: -7.726807594299316
    7. '[-' → logprob: -8.101807594299316
    8. ']-' → logprob: -8.851807594299316
    9. '][' → logprob: -8.976807594299316
    10. '```' → logprob: -9.101807594299316

Token 1516: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07342129945755005
    2. '[k' → logprob: -3.1984212398529053
    3. ' -' → logprob: -4.448421478271484
    4. '[' → logprob: -4.698421478271484
    5. '[i' → logprob: -5.198421478271484
    6. '[-' → logprob: -6.198421478271484
    7. '```' → logprob: -6.698421478271484
    8. '[
' → logprob: -9.198421478271484
    9. ']' → logprob: -9.948421478271484
    10. '-
' → logprob: -10.198421478271484

Token 1517: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08122502267360687
    2. 'k' → logprob: -2.5812249183654785
    3. '[k' → logprob: -6.0812249183654785
    4. ' H' → logprob: -10.331225395202637
    5. '(k' → logprob: -12.206225395202637
    6. 'i' → logprob: -12.831225395202637
    7. '```' → logprob: -13.206225395202637
    8. '   ' → logprob: -13.331225395202637
    9. '[i' → logprob: -13.956225395202637
    10. ' k' → logprob: -14.581225395202637

Token 1518: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.32839062809944153
    2. 'k' → logprob: -1.4533905982971191
    3. '[i' → logprob: -3.328390598297119
    4. 'i' → logprob: -4.703390598297119
    5. '   ' → logprob: -8.203391075134277
    6. '```' → logprob: -8.203391075134277
    7. '-' → logprob: -8.953391075134277
    8. '[' → logprob: -8.953391075134277
    9. ' [' → logprob: -9.453391075134277
    10. '[
' → logprob: -9.578391075134277

Token 1519: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008788274135440588
    2. ' -' → logprob: -7.375878810882568
    3. ']' → logprob: -8.750879287719727
    4. '[i' → logprob: -10.375879287719727
    5. 'i' → logprob: -10.500879287719727
    6. '   ' → logprob: -11.125879287719727
    7. '[' → logprob: -11.625879287719727
    8. '-i' → logprob: -12.875879287719727
    9. ' ' → logprob: -13.500879287719727
    10. '−' → logprob: -13.750879287719727

Token 1520: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.895480277715251e-06
    2. '```' → logprob: -12.625008583068848
    3. 'i' → logprob: -13.125008583068848
    4. ' ' → logprob: -14.000008583068848
    5. '   ' → logprob: -14.250008583068848
    6. '
' → logprob: -14.375008583068848
    7. '-' → logprob: -14.875008583068848
    8. 'k' → logprob: -15.375008583068848
    9. '[' → logprob: -15.937508583068848
    10. ']' → logprob: -16.125009536743164

Token 1521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. 'i' → logprob: -12.750006675720215
    3. '```' → logprob: -13.250006675720215
    4. '   ' → logprob: -14.250006675720215
    5. '-' → logprob: -14.500006675720215
    6. 'k' → logprob: -15.250006675720215
    7. ' ' → logprob: -15.250006675720215
    8. '１' → logprob: -15.500006675720215
    9. '
' → logprob: -16.43750762939453
    10. ']' → logprob: -16.87500762939453

Token 1522: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25206583738327026
    2. '],' → logprob: -1.502065896987915
    3. ' ,' → logprob: -9.877065658569336
    4. '),' → logprob: -10.627065658569336
    5. ']' → logprob: -10.877065658569336
    6. '},' → logprob: -11.377065658569336
    7. '   ' → logprob: -12.127065658569336
    8. ',k' → logprob: -12.252065658569336
    9. '       ' → logprob: -12.627065658569336
    10. ' ],' → logprob: -13.002065658569336

Token 1523: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00020354038861114532
    2. ' mod' → logprob: -8.500203132629395
    3. '(mod' → logprob: -18.62520408630371
    4. '	mod' → logprob: -18.62520408630371
    5. 'MOD' → logprob: -20.37520408630371
    6. '_mod' → logprob: -20.50020408630371
    7. ' мод' → logprob: -21.25020408630371
    8. 'moder' → logprob: -21.37520408630371
    9. 'Mod' → logprob: -21.87520408630371
    10. 'mods' → logprob: -22.25020408630371

Token 1524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009142052149400115
    2. ')%' → logprob: -7.375914096832275
    3. ' )' → logprob: -9.125914573669434
    4. '%' → logprob: -9.125914573669434
    5. ',' → logprob: -10.625914573669434
    6. ')
' → logprob: -11.250914573669434
    7. ' %' → logprob: -11.500914573669434
    8. '       ' → logprob: -12.000914573669434
    9. '   ' → logprob: -12.500914573669434
    10. ']' → logprob: -12.625914573669434

Token 1525: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2105105072259903
    2. '%' → logprob: -1.710510492324829
    3. '       ' → logprob: -5.210510730743408
    4. ')' → logprob: -6.085510730743408
    5. '   ' → logprob: -7.710510730743408
    6. '           ' → logprob: -7.960510730743408
    7. '```' → logprob: -8.58551025390625
    8. ')%' → logprob: -9.33551025390625
    9. '[' → logprob: -9.83551025390625
    10. '%n' → logprob: -9.96051025390625

Token 1526: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3625129759311676
    2. ' %' → logprob: -1.7375129461288452
    3. '   ' → logprob: -2.3625130653381348
    4. '       ' → logprob: -4.362513065338135
    5. ' new' → logprob: -4.737513065338135
    6. 'new' → logprob: -4.987513065338135
    7. '[new' → logprob: -6.737513065338135
    8. ')' → logprob: -6.862513065338135
    9. ' %=' → logprob: -7.112513065338135
    10. '<|end|>' → logprob: -7.362513065338135

Token 1527: ' A' (ID: 355)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16293291747570038
    2. ' new' → logprob: -1.9129328727722168
    3. '   ' → logprob: -6.912932872772217
    4. '       ' → logprob: -7.037932872772217
    5. 'for' → logprob: -8.287933349609375
    6. 'if' → logprob: -9.037933349609375
    7. ' for' → logprob: -9.412933349609375
    8. '```' → logprob: -9.412933349609375
    9. '	new' → logprob: -9.537933349609375
    10. '#' → logprob: -10.037933349609375

Token 1528: ' chaque' (ID: 21194)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.003773835487663746
    2. '   ' → logprob: -6.2537736892700195
    3. '#' → logprob: -7.6287736892700195
    4. '       ' → logprob: -7.8787736892700195
    5. ' new' → logprob: -7.8787736892700195
    6. '[new' → logprob: -8.87877368927002
    7. 'ns' → logprob: -9.12877368927002
    8. 'ss' → logprob: -9.62877368927002
    9. 'cc' → logprob: -9.75377368927002
    10. '           ' → logprob: -10.37877368927002

Token 1529: ' it' (ID: 480)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3180755078792572
    2. 'new' → logprob: -1.4430755376815796
    3. '_new' → logprob: -3.69307541847229
    4. '_' → logprob: -5.693075656890869
    5. '[new' → logprob: -6.068075656890869
    6. ' i' → logprob: -6.443075656890869
    7. 'i' → logprob: -6.943075656890869
    8. '[i' → logprob: -7.193075656890869
    9. '   ' → logprob: -7.693075656890869
    10. 'newline' → logprob: -7.943075656890869

Token 1530: 'ération' (ID: 24977)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4425368309020996
    2. 'er' → logprob: -1.9425368309020996
    3. 'ération' → logprob: -2.3175368309020996
    4. '[i' → logprob: -2.6925368309020996
    5. '=' → logprob: -2.8175368309020996
    6. '_' → logprob: -2.9425368309020996
    7. '[' → logprob: -2.9425368309020996
    8. 'new' → logprob: -2.9425368309020996
    9. 'al' → logprob: -3.4425368309020996
    10. '   ' → logprob: -3.8175368309020996

Token 1531: ',' (ID: 11)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.2841646373271942
    2. '[i' → logprob: -2.1591646671295166
    3. 'new' → logprob: -2.4091646671295166
    4. ' new' → logprob: -4.2841644287109375
    5. '%' → logprob: -4.4091644287109375
    6. '[' → logprob: -4.9091644287109375
    7. '   ' → logprob: -5.9091644287109375
    8. '[
' → logprob: -6.9091644287109375
    9. '       ' → logprob: -7.0341644287109375
    10. '
' → logprob: -7.1591644287109375

Token 1532: ' on' (ID: 402)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0620461031794548
    2. ' new' → logprob: -2.8120460510253906
    3. '       ' → logprob: -9.81204605102539
    4. '   ' → logprob: -10.81204605102539
    5. '           ' → logprob: -13.68704605102539
    6. '	new' → logprob: -14.31204605102539
    7. 'for' → logprob: -14.56204605102539
    8. '```' → logprob: -14.68704605102539
    9. '[new' → logprob: -15.18704605102539
    10. ')new' → logprob: -16.31204605102539

Token 1533: ' applique' (ID: 180579)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04534837603569031
    2. ' new' → logprob: -3.1703484058380127
    3. '[i' → logprob: -7.045348167419434
    4. 'for' → logprob: -7.420348167419434
    5. '[new' → logprob: -8.420348167419434
    6. 'i' → logprob: -8.545348167419434
    7. '   ' → logprob: -8.545348167419434
    8. '       ' → logprob: -9.295348167419434
    9. ' for' → logprob: -9.420348167419434
    10. '#' → logprob: -10.045348167419434

Token 1534: ' le' (ID: 505)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07117351144552231
    2. 'new' → logprob: -2.9461734294891357
    3. ' new' → logprob: -5.071173667907715
    4. ' %' → logprob: -5.571173667907715
    5. ' %=' → logprob: -5.571173667907715
    6. '%=' → logprob: -6.946173667907715
    7. 'mod' → logprob: -7.071173667907715
    8. '[new' → logprob: -8.821173667907715
    9. '`' → logprob: -9.696173667907715
    10. '%n' → logprob: -9.696173667907715

Token 1535: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.121471643447876
    2. '[i' → logprob: -1.496471643447876
    3. 'new' → logprob: -1.871471643447876
    4. ' %' → logprob: -2.496471643447876
    5. 'mod' → logprob: -2.496471643447876
    6. ' new' → logprob: -2.871471643447876
    7. '[new' → logprob: -2.871471643447876
    8. '[' → logprob: -5.121471405029297
    9. '%i' → logprob: -5.746471405029297
    10. ' mod' → logprob: -6.121471405029297

Token 1536: ' (' (ID: 350)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4515804350376129
    2. 'new' → logprob: -1.4515804052352905
    3. '(mod' → logprob: -3.57658052444458
    4. '(new' → logprob: -3.82658052444458
    5. '[new' → logprob: -3.82658052444458
    6. 'mod' → logprob: -4.32658052444458
    7. ' (' → logprob: -4.95158052444458
    8. '   ' → logprob: -4.95158052444458
    9. ' mod' → logprob: -5.07658052444458
    10. '[' → logprob: -5.20158052444458

Token 1537: 'reste' (ID: 84661)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.959394097328186
    2. 'mod' → logprob: -0.959394097328186
    3. 'new' → logprob: -1.584394097328186
    4. ' mod' → logprob: -3.8343939781188965
    5. ' %=' → logprob: -6.5843939781188965
    6. ' %' → logprob: -6.8343939781188965
    7. ')' → logprob: -6.8343939781188965
    8. '%' → logprob: -6.9593939781188965
    9. '10' → logprob: -7.4593939781188965
    10. '           ' → logprob: -7.5843939781188965

Token 1538: ' de' (ID: 334)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.8000508546829224
    2. '=' → logprob: -0.9250508546829224
    3. '%=' → logprob: -3.050050735473633
    4. 'mod' → logprob: -3.800050735473633
    5. ' =' → logprob: -4.050050735473633
    6. '%' → logprob: -4.050050735473633
    7. ')' → logprob: -4.175050735473633
    8. 'new' → logprob: -4.425050735473633
    9. '_mod' → logprob: -5.175050735473633
    10. ' mod' → logprob: -5.800050735473633

Token 1539: ' la' (ID: 557)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011296318843960762
    2. ' mod' → logprob: -4.511296272277832
    3. 'new' → logprob: -9.011296272277832
    4. ' new' → logprob: -9.761296272277832
    5. ')' → logprob: -10.261296272277832
    6. '(mod' → logprob: -10.636296272277832
    7. '	mod' → logprob: -12.761296272277832
    8. '10' → logprob: -13.011296272277832
    9. '100' → logprob: -13.261296272277832
    10. ' ' → logprob: -14.261296272277832

Token 1540: ' division' (ID: 21629)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.012292184866964817
    2. ' mod' → logprob: -4.512292385101318
    3. 'new' → logprob: -7.137292385101318
    4. ' new' → logprob: -8.26229190826416
    5. '100' → logprob: -9.76229190826416
    6. '10' → logprob: -10.13729190826416
    7. ')' → logprob: -10.76229190826416
    8. '[' → logprob: -11.38729190826416
    9. '[i' → logprob: -11.51229190826416
    10. ' ' → logprob: -11.51229190826416

Token 1541: ' eu' (ID: 5658)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.13637416064739227
    2. ' mod' → logprob: -3.3863742351531982
    3. '(mod' → logprob: -3.5113742351531982
    4. ')' → logprob: -3.7613742351531982
    5. 'new' → logprob: -4.636373996734619
    6. '%' → logprob: -4.886373996734619
    7. '=' → logprob: -4.886373996734619
    8. '[new' → logprob: -5.636373996734619
    9. '_mod' → logprob: -6.136373996734619
    10. '[' → logprob: -6.136373996734619

Token 1542: 'clid' (ID: 156121)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0054659843444824
    2. 'mod' → logprob: -1.3804659843444824
    3. ' mod' → logprob: -2.2554659843444824
    4. '%
' → logprob: -3.1304659843444824
    5. ']' → logprob: -3.3804659843444824
    6. '%' → logprob: -3.3804659843444824
    7. ' %
' → logprob: -3.6304659843444824
    8. '   ' → logprob: -3.7554659843444824
    9. ')
' → logprob: -3.8804659843444824
    10. ' %' → logprob: -4.380465984344482

Token 1543: 'ienne' (ID: 18387)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.197309970855713
    2. 'mod' → logprob: -1.197309970855713
    3. 'e' → logprob: -1.947309970855713
    4. 'é' → logprob: -3.197309970855713
    5. ')%' → logprob: -3.447309970855713
    6. 'aire' → logprob: -3.572309970855713
    7. 'ar' → logprob: -3.822309970855713
    8. 'div' → logprob: -3.947309970855713
    9. 'ide' → logprob: -4.572309970855713
    10. ' mod' → logprob: -4.697309970855713

Token 1544: ')' (ID: 8)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7066771388053894
    2. 'new' → logprob: -1.3316771984100342
    3. '[new' → logprob: -2.206677198410034
    4. '(new' → logprob: -2.831677198410034
    5. ')' → logprob: -3.581677198410034
    6. '       ' → logprob: -4.831676959991455
    7. '=' → logprob: -5.331676959991455
    8. '%' → logprob: -5.456676959991455
    9. '           ' → logprob: -5.706676959991455
    10. ' %' → logprob: -5.831676959991455

Token 1545: ' sur' (ID: 1512)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.2128584384918213
    2. 'new' → logprob: -2.2128584384918213
    3. ' new' → logprob: -2.7128584384918213
    4. '[i' → logprob: -4.587858200073242
    5. '[' → logprob: -6.962858200073242
    6. '=' → logprob: -7.337858200073242
    7. '   ' → logprob: -7.462858200073242
    8. '```' → logprob: -7.837858200073242
    9. '[
' → logprob: -8.087858200073242
    10. '%' → logprob: -8.087858200073242

Token 1546: ' la' (ID: 557)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.16025297343730927
    2. ' new' → logprob: -1.9102529287338257
    3. ' ' → logprob: -12.160252571105957
    4. ')new' → logprob: -12.285252571105957
    5. '10' → logprob: -12.660252571105957
    6. '(new' → logprob: -12.785252571105957
    7. ')' → logprob: -12.910252571105957
    8. '   ' → logprob: -13.160252571105957
    9. '[new' → logprob: -13.410252571105957
    10. ' (' → logprob: -13.535252571105957

Token 1547: ' valeur' (ID: 41664)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0004386558721307665
    2. ' new' → logprob: -7.750438690185547
    3. '[new' → logprob: -13.000438690185547
    4. '[i' → logprob: -13.250438690185547
    5. 'next' → logprob: -13.375438690185547
    6. '_new' → logprob: -14.125438690185547
    7. '	new' → logprob: -15.000438690185547
    8. 'i' → logprob: -15.125438690185547
    9. 'newline' → logprob: -15.625438690185547
    10. 'user' → logprob: -15.750438690185547

Token 1548: ' new' (ID: 620)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.33680668473243713
    2. '[new' → logprob: -1.4618066549301147
    3. 'new' → logprob: -2.9618067741394043
    4. '(new' → logprob: -7.336806774139404
    5. ' new' → logprob: -7.336806774139404
    6. '[' → logprob: -8.086806297302246
    7. '```' → logprob: -8.211806297302246
    8. 'i' → logprob: -8.461806297302246
    9. '`' → logprob: -8.961806297302246
    10. '(i' → logprob: -9.961806297302246

Token 1549: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.2664456789934775e-06
    2. '_dt' → logprob: -14.625000953674316
    3. '_' → logprob: -14.750000953674316
    4. '_new' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '\' → logprob: -17.250001907348633
    7. '_d' → logprob: -17.500001907348633
    8. '_df' → logprob: -17.625001907348633
    9. '_ds' → logprob: -17.750001907348633
    10. 'dp' → logprob: -18.250001907348633

Token 1550: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.860340752406046e-05
    2. '[' → logprob: -10.2500581741333
    3. '[new' → logprob: -11.3750581741333
    4. 'new' → logprob: -12.1250581741333
    5. ' [' → logprob: -13.0000581741333
    6. '```' → logprob: -13.6250581741333
    7. 'i' → logprob: -14.0000581741333
    8. '   ' → logprob: -14.2500581741333
    9. '
' → logprob: -15.1250581741333
    10. '[I' → logprob: -15.7500581741333

Token 1551: '].
' (ID: 49887)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07751044631004333
    2. ']' → logprob: -2.827510356903076
    3. ')' → logprob: -4.702510356903076
    4. '[new' → logprob: -6.327510356903076
    5. '       ' → logprob: -6.577510356903076
    6. '%' → logprob: -7.202510356903076
    7. '%i' → logprob: -7.327510356903076
    8. ')%' → logprob: -7.577510356903076
    9. ']%' → logprob: -7.827510356903076
    10. '[' → logprob: -8.452510833740234

Token 1552: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6458760499954224
    2. '%=' → logprob: -2.020875930786133
    3. ' %=' → logprob: -2.145875930786133
    4. ' new' → logprob: -2.520875930786133
    5. ' =' → logprob: -2.770875930786133
    6. 'new' → logprob: -3.020875930786133
    7. '```' → logprob: -4.145875930786133
    8. '%' → logprob: -5.395875930786133
    9. ' %' → logprob: -5.520875930786133
    10. '[new' → logprob: -5.895875930786133

Token 1553: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.580235481262207
    2. ' new' → logprob: -0.830235481262207
    3. '[new' → logprob: -5.830235481262207
    4. '=' → logprob: -7.955235481262207
    5. '[i' → logprob: -8.455235481262207
    6. ' =' → logprob: -8.455235481262207
    7. '```' → logprob: -8.455235481262207
    8. '`' → logprob: -9.455235481262207
    9. '
' → logprob: -10.080235481262207
    10. '   ' → logprob: -10.205235481262207

Token 1554: ' Cela' (ID: 44403)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1269376575946808
    2. ' new' → logprob: -2.1269376277923584
    3. '       ' → logprob: -12.376937866210938
    4. '   ' → logprob: -12.876937866210938
    5. '
' → logprob: -14.126937866210938
    6. '           ' → logprob: -14.501937866210938
    7. '```' → logprob: -14.751937866210938
    8. '[new' → logprob: -15.001937866210938
    9. '	new' → logprob: -15.751937866210938
    10. '=' → logprob: -16.251937866210938

Token 1555: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2072267532348633
    2. '%=' → logprob: -1.2072267532348633
    3. ' %=' → logprob: -1.7072267532348633
    4. ')' → logprob: -1.9572267532348633
    5. '%' → logprob: -3.5822267532348633
    6. '%i' → logprob: -4.332226753234863
    7. ']' → logprob: -4.457226753234863
    8. '[new' → logprob: -4.582226753234863
    9. ')%' → logprob: -5.082226753234863
    10. 'new' → logprob: -5.207226753234863

Token 1556: ' crucial' (ID: 19008)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9520511031150818
    2. '%' → logprob: -1.5770511627197266
    3. ' %=' → logprob: -2.3270511627197266
    4. '%=' → logprob: -2.5770511627197266
    5. ' %' → logprob: -2.8270511627197266
    6. '[new' → logprob: -2.9520511627197266
    7. ' new' → logprob: -3.0770511627197266
    8. 'new' → logprob: -3.2020511627197266
    9. '=' → logprob: -4.202051162719727
    10. '%i' → logprob: -4.702051162719727

Token 1557: ' pour' (ID: 1930)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.25152260065078735
    2. 'new' → logprob: -1.8765225410461426
    3. ' new' → logprob: -3.2515225410461426
    4. '[i' → logprob: -4.626522541046143
    5. '%' → logprob: -4.751522541046143
    6. '[' → logprob: -5.626522541046143
    7. '   ' → logprob: -6.126522541046143
    8. '%=' → logprob: -6.751522541046143
    9. '       ' → logprob: -7.126522541046143
    10. '<|end|>' → logprob: -7.251522541046143

Token 1558: ' éviter' (ID: 64013)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3262110650539398
    2. 'new' → logprob: -1.3262110948562622
    3. ' %=' → logprob: -5.451210975646973
    4. 'mod' → logprob: -5.701210975646973
    5. '=' → logprob: -6.201210975646973
    6. ' mod' → logprob: -6.951210975646973
    7. '%' → logprob: -7.201210975646973
    8. '%=' → logprob: -7.326210975646973
    9. '[new' → logprob: -7.451210975646973
    10. '```' → logprob: -9.701210975646973

Token 1559: ' les' (ID: 1341)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8768996000289917
    2. ' mod' → logprob: -1.2518996000289917
    3. 'mod' → logprob: -1.3768996000289917
    4. 'new' → logprob: -3.5018997192382812
    5. '=' → logprob: -5.501899719238281
    6. '(mod' → logprob: -5.751899719238281
    7. '1' → logprob: -6.376899719238281
    8. ')' → logprob: -6.751899719238281
    9. ' %=' → logprob: -6.751899719238281
    10. ' =' → logprob: -7.126899719238281

Token 1560: ' dépasse' (ID: 165701)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7638169527053833
    2. 'mod' → logprob: -1.0138169527053833
    3. '%' → logprob: -2.6388168334960938
    4. ' %' → logprob: -3.2638168334960938
    5. ' new' → logprob: -3.5138168334960938
    6. ' modulo' → logprob: -4.138816833496094
    7. ')' → logprob: -4.888816833496094
    8. ' %=' → logprob: -5.513816833496094
    9. 'new' → logprob: -6.138816833496094
    10. '```' → logprob: -8.138816833496094

Token 1561: 'ments' (ID: 1626)
  Prédit: '_new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.31255972385406494
    2. ')' → logprob: -2.3125596046447754
    3. 'new' → logprob: -2.8125596046447754
    4. '_' → logprob: -3.0625596046447754
    5. '=' → logprob: -3.8125596046447754
    6. ' new' → logprob: -3.9375596046447754
    7. '_mod' → logprob: -4.812559604644775
    8. 'mod' → logprob: -5.687559604644775
    9. ' =' → logprob: -6.562559604644775
    10. ']' → logprob: -6.937559604644775

Token 1562: ' d' (ID: 272)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9560014009475708
    2. '[new' → logprob: -0.9560014009475708
    3. ' new' → logprob: -1.5810014009475708
    4. '%' → logprob: -4.581001281738281
    5. '_new' → logprob: -5.831001281738281
    6. '(new' → logprob: -6.331001281738281
    7. '   ' → logprob: -6.331001281738281
    8. '[' → logprob: -6.456001281738281
    9. ' %' → logprob: -6.706001281738281
    10. '           ' → logprob: -6.956001281738281

Token 1563: ''ent' (ID: 53422)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07470326125621796
    2. ' mod' → logprob: -2.8247032165527344
    3. '=' → logprob: -5.074703216552734
    4. ')' → logprob: -5.824703216552734
    5. '1' → logprob: -6.699703216552734
    6. '100' → logprob: -7.324703216552734
    7. ' ' → logprob: -7.324703216552734
    8. '2' → logprob: -8.574703216552734
    9. '_mod' → logprob: -9.324703216552734
    10. '```' → logprob: -9.324703216552734

Token 1564: 'iers' (ID: 11012)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.07913598418235779
    2. 'iers' → logprob: -2.7041358947753906
    3. 'ière' → logprob: -6.204135894775391
    4. 'erm' → logprob: -6.329135894775391
    5. 'new' → logprob: -6.704135894775391
    6. 'mod' → logprob: -6.704135894775391
    7. 'ières' → logprob: -6.704135894775391
    8. 'er' → logprob: -7.204135894775391
    9. '_mod' → logprob: -8.82913589477539
    10. 'iere' → logprob: -9.32913589477539

Token 1565: ' et' (ID: 859)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3074754476547241
    2. '[new' → logprob: -1.8074754476547241
    3. ' %' → logprob: -2.6824755668640137
    4. 'new' → logprob: -4.557475566864014
    5. ' new' → logprob: -4.682475566864014
    6. '[i' → logprob: -5.807475566864014
    7. ')' → logprob: -6.057475566864014
    8. '%i' → logprob: -6.057475566864014
    9. '%n' → logprob: -7.182475566864014
    10. '       ' → logprob: -7.182475566864014

Token 1566: ' respecter' (ID: 107203)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.31968632340431213
    2. 'new' → logprob: -1.3196862936019897
    3. ' %=' → logprob: -6.319686412811279
    4. '=' → logprob: -7.194686412811279
    5. '```' → logprob: -7.194686412811279
    6. ' mod' → logprob: -7.819686412811279
    7. '\n' → logprob: -7.819686412811279
    8. ')' → logprob: -8.069685935974121
    9. ' garantir' → logprob: -8.194685935974121
    10. 'mod' → logprob: -8.319685935974121

Token 1567: ' les' (ID: 1341)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16025550663471222
    2. ' mod' → logprob: -1.9102555513381958
    3. '(mod' → logprob: -10.660255432128906
    4. '	mod' → logprob: -12.785255432128906
    5. ' modulo' → logprob: -13.285255432128906
    6. ' ' → logprob: -13.535255432128906
    7. '_mod' → logprob: -14.535255432128906
    8. '.mod' → logprob: -15.035255432128906
    9. '   ' → logprob: -15.160255432128906
    10. '```' → logprob: -15.160255432128906

Token 1568: ' contraintes' (ID: 167366)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16024667024612427
    2. ' mod' → logprob: -1.9102466106414795
    3. '(mod' → logprob: -12.035246849060059
    4. '```' → logprob: -12.285246849060059
    5. ' modulo' → logprob: -12.535246849060059
    6. ' ' → logprob: -13.035246849060059
    7. '
' → logprob: -13.660246849060059
    8. '	mod' → logprob: -13.785246849060059
    9. '_mod' → logprob: -14.035246849060059
    10. ')' → logprob: -14.410246849060059

Token 1569: ' du' (ID: 1462)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -0.026143301278352737
    2. '[i' → logprob: -4.5261430740356445
    3. 'new' → logprob: -4.9011430740356445
    4. '%' → logprob: -5.2761430740356445
    5. ' new' → logprob: -7.2761430740356445
    6. '[' → logprob: -7.2761430740356445
    7. '       ' → logprob: -8.276143074035645
    8. '(new' → logprob: -8.526143074035645
    9. ' %' → logprob: -8.651143074035645
    10. '   ' → logprob: -9.276143074035645

Token 1570: ' problème' (ID: 35630)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5760030746459961
    2. ' mod' → logprob: -0.8260030746459961
    3. ' modulo' → logprob: -9.826003074645996
    4. '	mod' → logprob: -12.826003074645996
    5. '_mod' → logprob: -13.326003074645996
    6. '```' → logprob: -13.701003074645996
    7. ' modulus' → logprob: -13.951003074645996
    8. '(mod' → logprob: -14.076003074645996
    9. ' modul' → logprob: -14.451003074645996
    10. ' ' → logprob: -14.576003074645996

Token 1571: '.
' (ID: 558)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.34348928928375244
    2. '[new' → logprob: -1.9684892892837524
    3. ' %' → logprob: -2.468489170074463
    4. ' new' → logprob: -4.093489170074463
    5. 'new' → logprob: -4.343489170074463
    6. ')' → logprob: -4.468489170074463
    7. ' %=' → logprob: -4.843489170074463
    8. '%=' → logprob: -4.968489170074463
    9. ')%' → logprob: -5.718489170074463
    10. '%i' → logprob: -6.218489170074463

Token 1572: '       ' (ID: 309)
  Prédit: '[new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[new' → logprob: -1.2316442728042603
    2. '%=' → logprob: -1.4816442728042603
    3. ' %=' → logprob: -1.6066442728042603
    4. 'new' → logprob: -2.2316441535949707
    5. '[i' → logprob: -2.9816441535949707
    6. ' new' → logprob: -3.3566441535949707
    7. '%' → logprob: -3.4816441535949707
    8. '```' → logprob: -3.7316441535949707
    9. ' %' → logprob: -4.106644153594971
    10. '   ' → logprob: -5.481644153594971

Token 1573: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5905327796936035
    2. 'new' (adapté à ' new') → logprob: -0.8405327796936035
    3. '[new' → logprob: -4.5905327796936035
    4. '[i' → logprob: -5.5905327796936035
    5. '[' → logprob: -8.840532302856445
    6. '```' → logprob: -9.090532302856445
    7. ' =' → logprob: -9.215532302856445
    8. '=' → logprob: -9.715532302856445
    9. '       ' → logprob: -9.965532302856445
    10. '=new' → logprob: -10.715532302856445

Token 1574: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.320199877838604e-07
    2. 'dp' → logprob: -15.125
    3. '_dt' → logprob: -16.75
    4. '	dp' → logprob: -19.0
    5. '_d' → logprob: -19.375
    6. '_df' → logprob: -20.375
    7. '_dc' → logprob: -20.5
    8. '_db' → logprob: -21.75
    9. '_ds' → logprob: -22.0
    10. '_cp' → logprob: -22.0

Token 1575: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.141186450899113e-05
    2. '[new' → logprob: -10.875020980834961
    3. '[' → logprob: -13.125020980834961
    4. '```' → logprob: -15.500020980834961
    5. 'new' → logprob: -15.750020980834961
    6. '\[' → logprob: -17.25002098083496
    7. '[j' → logprob: -17.37502098083496
    8. '[I' → logprob: -17.75002098083496
    9. '
' → logprob: -18.12502098083496
    10. '=' → logprob: -18.37502098083496

Token 1576: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03827901557087898
    2. '[i' → logprob: -3.2882790565490723
    3. ']%' → logprob: -9.538278579711914
    4. ')' → logprob: -9.913278579711914
    5. ']=' → logprob: -10.538278579711914
    6. '%i' → logprob: -10.788278579711914
    7. '%=' → logprob: -10.913278579711914
    8. '%' → logprob: -11.163278579711914
    9. '[' → logprob: -11.413278579711914
    10. '[j' → logprob: -12.288278579711914

Token 1577: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0034563334193080664
    2. '=' → logprob: -6.378456115722656
    3. ' %=' → logprob: -6.378456115722656
    4. '%' → logprob: -9.878456115722656
    5. 'new' → logprob: -13.503456115722656
    6. ')' → logprob: -13.503456115722656
    7. ' =' → logprob: -15.128456115722656
    8. ')%' → logprob: -15.253456115722656
    9. ']' → logprob: -15.378456115722656
    10. '```' → logprob: -17.003456115722656

Token 1578: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -19.5
    3. '(mod' → logprob: -22.0
    4. 'MOD' → logprob: -23.875
    5. '	mod' → logprob: -24.25
    6. '_mod' → logprob: -25.625
    7. 'Mod' → logprob: -26.375
    8. 'moder' → logprob: -26.375
    9. 'mods' → logprob: -27.0
    10. ' мод' → logprob: -27.5

Token 1579: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5161376595497131
    2. 'dp' → logprob: -1.0161375999450684
    3. '<|end|>' → logprob: -3.3911375999450684
    4. ')' → logprob: -6.016137599945068
    5. ' dp' → logprob: -6.266137599945068
    6. ']' → logprob: -7.641137599945068
    7. '```' → logprob: -7.891137599945068
    8. '	dp' → logprob: -8.016138076782227
    9. '...' → logprob: -8.141138076782227
    10. '.' → logprob: -8.141138076782227

Token 1581: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020918693393468857
    2. '   ' → logprob: -4.020918846130371
    3. ' dp' → logprob: -5.895918846130371
    4. '	dp' → logprob: -11.645918846130371
    5. '(dp' → logprob: -13.145918846130371
    6. '```' → logprob: -13.270918846130371
    7. '_dp' → logprob: -14.270918846130371
    8. 'for' → logprob: -15.020918846130371
    9. ' ' → logprob: -15.020918846130371
    10. '.dp' → logprob: -15.895918846130371

Token 1582: ' Après' (ID: 47562)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.088346359931165e-07
    2. ' dp' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.0
    4. '	dp' → logprob: -21.375
    5. '(dp' → logprob: -22.875
    6. ' ' → logprob: -23.5
    7. '    
' → logprob: -23.625
    8. '_dp' → logprob: -23.75
    9. 'dc' → logprob: -24.625
    10. '
' → logprob: -24.875

Token 1583: ' avoir' (ID: 16595)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0015461683506146073
    2. '   ' → logprob: -7.001546382904053
    3. ' dp' → logprob: -7.501546382904053
    4. 'new' → logprob: -9.501545906066895
    5. '	dp' → logprob: -13.126545906066895
    6. ' new' → logprob: -13.251545906066895
    7. '#' → logprob: -14.001545906066895
    8. '_dp' → logprob: -14.126545906066895
    9. 'for' → logprob: -14.376545906066895
    10. '(dp' → logprob: -14.876545906066895

Token 1584: ' rempli' (ID: 192613)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0001105762057704851
    2. ' dp' → logprob: -9.125110626220703
    3. 'completed' → logprob: -13.750110626220703
    4. '_dp' → logprob: -15.750110626220703
    5. 'finished' → logprob: -15.875110626220703
    6. '	dp' → logprob: -16.125110626220703
    7. '(dp' → logprob: -17.250110626220703
    8. 'new' → logprob: -17.750110626220703
    9. 'final' → logprob: -17.875110626220703
    10. 'updated' → logprob: -17.875110626220703

Token 1585: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0011587966000661254
    2. ' new' → logprob: -7.126158714294434
    3. 'dp' → logprob: -8.376158714294434
    4. '   ' → logprob: -9.001158714294434
    5. ' dp' → logprob: -14.876158714294434
    6. '	new' → logprob: -16.00115966796875
    7. ' ' → logprob: -16.12615966796875
    8. '  ' → logprob: -16.50115966796875
    9. '[new' → logprob: -17.37615966796875
    10. 'the' → logprob: -17.50115966796875

Token 1586: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -4.320199877838604e-07
    2. '_dt' → logprob: -15.75
    3. '_pd' → logprob: -17.25
    4. '_d' → logprob: -17.375
    5. '_' → logprob: -17.5
    6. 'dp' → logprob: -18.0
    7. '_p' → logprob: -18.125
    8. '_df' → logprob: -18.125
    9. '_py' → logprob: -18.625
    10. '_dl' → logprob: -18.75

Token 1587: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12773889303207397
    2. '=' → logprob: -2.3777389526367188
    3. ' =' → logprob: -4.377738952636719
    4. '[:]' → logprob: -5.127738952636719
    5. 'dp' → logprob: -5.377738952636719
    6. '
' → logprob: -6.377738952636719
    7. ',' → logprob: -6.502738952636719
    8. '    
' → logprob: -8.127738952636719
    9. ' dp' → logprob: -8.502738952636719
    10. '_dp' → logprob: -8.877738952636719

Token 1588: ' tous' (ID: 10688)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003915495239198208
    2. 'range' → logprob: -6.253915309906006
    3. ' k' → logprob: -6.878915309906006
    4. 'i' → logprob: -7.128915309906006
    5. 'new' → logprob: -10.003915786743164
    6. 'l' → logprob: -10.878915786743164
    7. 'la' → logprob: -11.003915786743164
    8. '[k' → logprob: -11.128915786743164
    9. 'the' → logprob: -11.503915786743164
    10. ' range' → logprob: -11.628915786743164

Token 1589: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007148159202188253
    2. ' i' → logprob: -7.2507147789001465
    3. 'indices' → logprob: -12.625715255737305
    4. 'l' → logprob: -13.875715255737305
    5. '(i' → logprob: -15.125715255737305
    6. ' indices' → logprob: -16.500715255737305
    7. '   ' → logprob: -16.750715255737305
    8. 'les' → logprob: -16.875715255737305
    9. '[i' → logprob: -17.000715255737305
    10. '```' → logprob: -17.000715255737305

Token 1590: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.619311974034645e-05
    2. 'indices' → logprob: -10.250036239624023
    3. ' i' → logprob: -14.500036239624023
    4. 'k' → logprob: -16.125036239624023
    5. 'indice' → logprob: -16.500036239624023
    6. '
' → logprob: -17.250036239624023
    7. 'index' → logprob: -17.375036239624023
    8. '```' → logprob: -17.750036239624023
    9. ' indices' → logprob: -17.875036239624023
    10. '[i' → logprob: -18.750036239624023

Token 1591: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01525722723454237
    2. 'dp' → logprob: -4.390257358551025
    3. ' dp' → logprob: -6.640257358551025
    4. ',' → logprob: -6.640257358551025
    5. '	dp' → logprob: -9.640256881713867
    6. '(dp' → logprob: -10.890256881713867
    7. '_dp' → logprob: -10.890256881713867
    8. '    
' → logprob: -11.015256881713867
    9. '
' → logprob: -12.390256881713867
    10. '.dp' → logprob: -13.140256881713867

Token 1592: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000476190383778885
    2. ' dp' → logprob: -7.750476360321045
    3. '   ' → logprob: -10.000475883483887
    4. '	dp' → logprob: -16.250476837158203
    5. '_dp' → logprob: -19.500476837158203
    6. '(dp' → logprob: -20.375476837158203
    7. 'dc' → logprob: -20.500476837158203
    8. ' ' → logprob: -20.500476837158203
    9. '  ' → logprob: -20.625476837158203
    10. 'dpi' → logprob: -20.625476837158203

Token 1593: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002613358374219388
    2. ' dp' → logprob: -8.250261306762695
    3. '_dp' → logprob: -16.500261306762695
    4. '	dp' → logprob: -18.125261306762695
    5. '(dp' → logprob: -20.000261306762695
    6. '   ' → logprob: -20.375261306762695
    7. '.dp' → logprob: -22.500261306762695
    8. '=' → logprob: -22.750261306762695
    9. 'dj' → logprob: -23.125261306762695
    10. 'dc' → logprob: -23.375261306762695

Token 1594: ' rec' (ID: 1369)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764309167861938
    2. 'dp' → logprob: -0.8264309167861938
    3. ' dp' → logprob: -7.951430797576904
    4. '=
' → logprob: -9.701431274414062
    5. '_dp' → logprob: -10.201431274414062
    6. ' =' → logprob: -10.826431274414062
    7. '_=' → logprob: -11.701431274414062
    8. '	dp' → logprob: -12.201431274414062
    9. '(dp' → logprob: -12.951431274414062
    10. 's' → logprob: -13.701431274414062

Token 1595: 'opie' (ID: 118895)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.6070309281349182
    2. 'new' → logprob: -0.8570309281349182
    3. 'dp' → logprob: -3.7320308685302734
    4. 'up' → logprob: -5.732030868530273
    5. 'placed' → logprob: -7.357030868530273
    6. '[new' → logprob: -7.482030868530273
    7. 'over' → logprob: -8.357030868530273
    8. 'plac' → logprob: -8.357030868530273
    9. '=' → logprob: -8.357030868530273
    10. 'pl' → logprob: -8.357030868530273

Token 1596: ' dans' (ID: 2671)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.947715832618997e-05
    2. ' dp' → logprob: -9.375089645385742
    3. '   ' → logprob: -13.250089645385742
    4. 'dans' → logprob: -14.000089645385742
    5. '_dp' → logprob: -14.500089645385742
    6. '	dp' → logprob: -14.625089645385742
    7. 'into' → logprob: -14.750089645385742
    8. '(dp' → logprob: -15.250089645385742
    9. 'à' → logprob: -15.750089645385742
    10. '=' → logprob: -15.750089645385742

Token 1597: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.7697225252486533e-06
    2. ' dp' → logprob: -12.500003814697266
    3. '	dp' → logprob: -18.875003814697266
    4. '
' → logprob: -20.750003814697266
    5. '_dp' → logprob: -21.500003814697266
    6. '`' → logprob: -21.750003814697266
    7. '```' → logprob: -22.000003814697266
    8. '(dp' → logprob: -22.625003814697266
    9. 'new' → logprob: -23.625003814697266
    10. '   ' → logprob: -23.750003814697266

Token 1598: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021980607882142067
    2. ' =' → logprob: -4.0219807624816895
    3. 'dp' → logprob: -5.8969807624816895
    4. '   ' → logprob: -6.8969807624816895
    5. ' dp' → logprob: -9.896980285644531
    6. '[:]' → logprob: -12.521980285644531
    7. '	dp' → logprob: -12.521980285644531
    8. '_dp' → logprob: -12.896980285644531
    9. '[' → logprob: -13.646980285644531
    10. '=
' → logprob: -14.021980285644531

Token 1599: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07907837629318237
    2. 'next' → logprob: -3.579078435897827
    3. ' dp' → logprob: -3.704078435897827
    4. 'new' → logprob: -4.329078197479248
    5. 'k' → logprob: -5.079078197479248
    6. ' next' → logprob: -6.454078197479248
    7. ' k' → logprob: -6.579078197479248
    8. ' new' → logprob: -7.204078197479248
    9. 'la' → logprob: -9.329078674316406
    10. 'su' → logprob: -9.954078674316406

Token 1600: ' prochaine' (ID: 78876)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0013573751784861088
    2. ' dp' → logprob: -6.751357555389404
    3. 'next' → logprob: -8.626357078552246
    4. ' next' → logprob: -12.126357078552246
    5. 'new' → logprob: -13.876357078552246
    6. '	dp' → logprob: -14.876357078552246
    7. '   ' → logprob: -15.376357078552246
    8. '#' → logprob: -15.501357078552246
    9. '```' → logprob: -15.751357078552246
    10. '_dp' → logprob: -15.751357078552246

Token 1601: ' it' (ID: 480)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.6339395046234131
    2. ' 
' → logprob: -2.133939504623413
    3. '
' → logprob: -2.383939504623413
    4. 'range' → logprob: -2.508939504623413
    5. 'k' → logprob: -3.758939504623413
    6. '  
' → logprob: -3.883939504623413
    7. 'line' → logprob: -3.883939504623413
    8. ' ligne' → logprob: -4.008939743041992
    9. 'for' → logprob: -4.008939743041992
    10. 'iteration' → logprob: -4.258939743041992

Token 1602: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.20624005794525146
    2. 'er' → logprob: -1.7062400579452515
    3. 'ration' → logprob: -6.581240177154541
    4. 'éra' → logprob: -7.831240177154541
    5. 'ré' → logprob: -7.831240177154541
    6. 'ér' → logprob: -7.831240177154541
    7. 'ère' → logprob: -8.081239700317383
    8. '   ' → logprob: -8.456239700317383
    9. 'éré' → logprob: -8.456239700317383
    10. 'r' → logprob: -8.456239700317383

Token 1603: ' k' (ID: 372)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3156612515449524
    2. '   ' → logprob: -1.3156611919403076
    3. ' dp' → logprob: -6.065661430358887
    4. '	dp' → logprob: -10.190661430358887
    5. '(dp' → logprob: -10.315661430358887
    6. '_dp' → logprob: -12.815661430358887
    7. '.dp' → logprob: -14.065661430358887
    8. '```' → logprob: -14.815661430358887
    9. '=' → logprob: -15.065661430358887
    10. '    
' → logprob: -15.565661430358887

Token 1604: '.
' (ID: 558)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20871807634830475
    2. '   ' → logprob: -1.7087180614471436
    3. ' dp' → logprob: -4.958718299865723
    4. '(dp' → logprob: -8.958718299865723
    5. '_dp' → logprob: -9.708718299865723
    6. '	dp' → logprob: -10.083718299865723
    7. '.dp' → logprob: -11.708718299865723
    8. '=' → logprob: -11.833718299865723
    9. '    
' → logprob: -12.583718299865723
    10. '.' → logprob: -13.083718299865723

Token 1605: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06047999486327171
    2. '   ' → logprob: -3.3104798793792725
    3. ' dp' → logprob: -3.8104798793792725
    4. '	dp' → logprob: -10.060480117797852
    5. '```' → logprob: -12.560480117797852
    6. '(dp' → logprob: -13.310480117797852
    7. '_dp' → logprob: -13.560480117797852
    8. ' ' → logprob: -14.810480117797852
    9. ' new' → logprob: -15.060480117797852
    10. 'new' → logprob: -15.060480117797852

Token 1606: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -2.15310683415737e-05
    2. ' dp' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.62502098083496
    4. 'new' → logprob: -20.37502098083496
    5. '_dp' → logprob: -21.00002098083496
    6. '	dp' → logprob: -21.12502098083496
    7. '```' → logprob: -23.12502098083496
    8. '(dp' → logprob: -23.37502098083496
    9. 'dpi' → logprob: -23.62502098083496
    10. 'dc' → logprob: -23.87502098083496

Token 1607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0042228782549500465
    2. ' =' → logprob: -5.504222869873047
    3. '[:]' → logprob: -8.879222869873047
    4. '[' → logprob: -12.629222869873047
    5. ',' → logprob: -14.379222869873047
    6. '[k' → logprob: -14.879222869873047
    7. '=new' → logprob: -15.379222869873047
    8. '[:' → logprob: -15.504222869873047
    9. '=
' → logprob: -15.629222869873047
    10. '[i' → logprob: -16.129222869873047

Token 1608: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.676292231422849e-05
    2. ' new' → logprob: -11.000017166137695
    3. '   ' → logprob: -20.625017166137695
    4. '[new' → logprob: -21.000017166137695
    5. 'New' → logprob: -21.375017166137695
    6. '_new' → logprob: -21.625017166137695
    7. '新' → logprob: -22.375017166137695
    8. '(new' → logprob: -22.500017166137695
    9. '
' → logprob: -22.875017166137695
    10. '	new' → logprob: -23.000017166137695

Token 1609: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -7.517272024415433e-05
    2. 'dp' → logprob: -9.500075340270996
    3. 'new' → logprob: -15.875075340270996
    4. '_dt' → logprob: -17.37507438659668
    5. 'DP' → logprob: -18.75007438659668
    6. '	dp' → logprob: -18.87507438659668
    7. '_dc' → logprob: -19.12507438659668
    8. '[_' → logprob: -19.50007438659668
    9. '[new' → logprob: -19.75007438659668
    10. ' dp' → logprob: -19.75007438659668

Token 1610: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1611: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03839695081114769
    2. 'result' → logprob: -3.2883968353271484
    3. 'answer' → logprob: -8.288396835327148
    4. 'continue' → logprob: -10.288396835327148
    5. 'res' → logprob: -10.913396835327148
    6. '#' → logprob: -11.663396835327148
    7. 'ans' → logprob: -11.913396835327148
    8. 'r' → logprob: -11.913396835327148
    9. 'total' → logprob: -12.163396835327148
    10. 'pass' → logprob: -12.288396835327148

Token 1612: ' Final' (ID: 12625)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007257753168232739
    2. 'result' → logprob: -7.250725746154785
    3. 'answer' → logprob: -11.375725746154785
    4. 'ans' → logprob: -13.250725746154785
    5. 'res' → logprob: -13.500725746154785
    6. '#' → logprob: -14.500725746154785
    7. 'r' → logprob: -15.000725746154785
    8. 'rés' → logprob: -15.250725746154785
    9. '```' → logprob: -16.7507266998291
    10. '#print' → logprob: -17.0007266998291

Token 1613: 'ement' (ID: 962)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.20452263951301575
    2. 'result' → logprob: -1.9545226097106934
    3. 'print' → logprob: -3.9545226097106934
    4. 'e' → logprob: -5.329522609710693
    5. '_output' → logprob: -5.579522609710693
    6. '_answer' → logprob: -5.579522609710693
    7. '_sum' → logprob: -5.579522609710693
    8. 'ement' → logprob: -5.829522609710693
    9. '#' → logprob: -6.954522609710693
    10. '_value' → logprob: -7.204522609710693

Token 1614: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.182190554682165e-05
    2. 'result' → logprob: -9.750061988830566
    3. 'answer' → logprob: -13.750061988830566
    4. '#' → logprob: -13.875061988830566
    5. 'res' → logprob: -14.375061988830566
    6. 'ans' → logprob: -14.625061988830566
    7. '
' → logprob: -15.750061988830566
    8. 'r' → logprob: -16.50006103515625
    9. ' print' → logprob: -16.62506103515625
    10. 'prin' → logprob: -16.87506103515625

Token 1615: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2007883671903983e-05
    2. 'result' → logprob: -10.750021934509277
    3. 'answer' → logprob: -14.625021934509277
    4. 'ans' → logprob: -16.250022888183594
    5. 'res' → logprob: -17.125022888183594
    6. 'rés' → logprob: -17.750022888183594
    7. ' print' → logprob: -18.375022888183594
    8. '#' → logprob: -18.375022888183594
    9. 'r' → logprob: -18.750022888183594
    10. 'prin' → logprob: -18.875022888183594

Token 1616: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.6312321753939614e-05
    2. '
' → logprob: -11.625036239624023
    3. 'answer' → logprob: -11.750036239624023
    4. '#' → logprob: -11.750036239624023
    5. ' print' → logprob: -12.625036239624023
    6. 'result' → logprob: -12.625036239624023
    7. '#print' → logprob: -13.250036239624023
    8. '```' → logprob: -13.875036239624023
    9. 'ans' → logprob: -15.000036239624023
    10. 'pr' → logprob: -15.000036239624023

Token 1617: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2295270711183548
    2. 'dp' → logprob: -1.9795271158218384
    3. '(dp' → logprob: -2.729526996612549
    4. 'sum' → logprob: -6.604526996612549
    5. '(print' → logprob: -8.729527473449707
    6. '(sum' → logprob: -8.729527473449707
    7. 'max' → logprob: -11.479527473449707
    8. '(max' → logprob: -11.729527473449707
    9. ' dp' → logprob: -12.604527473449707
    10. '(' → logprob: -13.104527473449707

Token 1618: ' dernière' (ID: 39497)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14093534648418427
    2. 'sum' → logprob: -2.7659354209899902
    3. 'dp' → logprob: -3.0159354209899902
    4. 'max' → logprob: -4.14093542098999
    5. '(dp' → logprob: -6.39093542098999
    6. 'result' → logprob: -6.89093542098999
    7. '(sum' → logprob: -7.89093542098999
    8. 'min' → logprob: -8.265934944152832
    9. '(max' → logprob: -8.640934944152832
    10. ' print' → logprob: -11.265934944152832

Token 1619: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06991108506917953
    2. 'dp' → logprob: -2.944911003112793
    3. 'result' → logprob: -5.319911003112793
    4. 'value' → logprob: -5.819911003112793
    5. '(dp' → logprob: -5.944911003112793
    6. 'sum' → logprob: -6.944911003112793
    7. '_dp' → logprob: -7.194911003112793
    8. 'val' → logprob: -7.194911003112793
    9. '(' → logprob: -7.819911003112793
    10. ')' → logprob: -8.194911003112793

Token 1620: ' du' (ID: 1462)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.06639446318149567
    2. 'print' → logprob: -2.816394567489624
    3. '(print' → logprob: -6.066394329071045
    4. 'dp' → logprob: -6.191394329071045
    5. '(' → logprob: -10.941394805908203
    6. '```' → logprob: -10.941394805908203
    7. '(
' → logprob: -11.691394805908203
    8. ' print' → logprob: -13.816394805908203
    9. '()' → logprob: -14.191394805908203
    10. ' dp' → logprob: -14.566394805908203

Token 1621: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014229794032871723
    2. 'print' → logprob: -4.264229774475098
    3. ' dp' → logprob: -9.889229774475098
    4. '(dp' → logprob: -11.264229774475098
    5. ' print' → logprob: -13.764229774475098
    6. 'd' → logprob: -14.389229774475098
    7. 'result' → logprob: -15.014229774475098
    8. '	dp' → logprob: -16.389230728149414
    9. '```' → logprob: -16.389230728149414
    10. '`' → logprob: -16.514230728149414

Token 1622: ' dp' (ID: 21546)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5812428593635559
    2. 'dp' → logprob: -0.8312428593635559
    3. '(dp' → logprob: -5.58124303817749
    4. '[' → logprob: -7.45624303817749
    5. '`' → logprob: -7.83124303817749
    6. '```' → logprob: -8.081242561340332
    7. ' dp' → logprob: -8.956242561340332
    8. '``' → logprob: -10.706242561340332
    9. ' print' → logprob: -10.706242561340332
    10. '(print' → logprob: -11.456242561340332

Token 1623: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014454723568633199
    2. '[' → logprob: -7.001445293426514
    3. '[-' → logprob: -7.876445293426514
    4. '```' → logprob: -8.876445770263672
    5. '[n' → logprob: -12.376445770263672
    6. '``' → logprob: -12.626445770263672
    7. '[
' → logprob: -13.001445770263672
    8. ' print' → logprob: -13.376445770263672
    9. 'dp' → logprob: -13.751445770263672
    10. '`' → logprob: -14.626445770263672

Token 1624: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0003096023283433169
    2. 'print' → logprob: -8.250309944152832
    3. ' dp' → logprob: -10.250309944152832
    4. '(dp' → logprob: -12.000309944152832
    5. '[-' → logprob: -12.500309944152832
    6. '0' → logprob: -13.125309944152832
    7. '[n' → logprob: -15.250309944152832
    8. '-' → logprob: -15.375309944152832
    9. '[' → logprob: -15.375309944152832
    10. 'n' → logprob: -15.750309944152832

Token 1625: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.38710612058639526
    2. '[-' → logprob: -1.13710618019104
    3. '[' → logprob: -8.512105941772461
    4. 'n' → logprob: -10.762105941772461
    5. '[
' → logprob: -12.387105941772461
    6. '[k' → logprob: -12.762105941772461
    7. '[len' → logprob: -13.637105941772461
    8. '```' → logprob: -13.637105941772461
    9. '[i' → logprob: -13.762105941772461
    10. '
' → logprob: -14.387105941772461

Token 1626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '])' → logprob: -16.625
    3. ' ' → logprob: -17.0
    4. '
' → logprob: -17.875
    5. ']' → logprob: -17.875
    6. '```' → logprob: -18.0
    7. '   ' → logprob: -19.0
    8. '１' → logprob: -19.625
    9. '#' → logprob: -19.875
    10. '``' → logprob: -20.125

Token 1627: ']),' (ID: 19560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005806732806377113
    2. ']' → logprob: -8.000580787658691
    3. ')' → logprob: -8.625580787658691
    4. ']%' → logprob: -10.750580787658691
    5. '])
' → logprob: -10.875580787658691
    6. ' ])' → logprob: -11.125580787658691
    7. '%' → logprob: -12.375580787658691
    8. ')])' → logprob: -13.250580787658691
    9. ']))' → logprob: -13.375580787658691
    10. ')%' → logprob: -14.375580787658691

Token 1628: ' c' (ID: 274)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.040422458201646805
    2. 'end' → logprob: -3.4154224395751953
    3. ')' → logprob: -5.415422439575195
    4. ' dp' → logprob: -6.540422439575195
    5. 'print' → logprob: -7.665422439575195
    6. 'flush' → logprob: -9.290422439575195
    7. ' end' → logprob: -9.790422439575195
    8. '0' → logprob: -10.040422439575195
    9. '1' → logprob: -10.290422439575195
    10. '(dp' → logprob: -10.540422439575195

Token 1629: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.0974019765853882
    2. '%' → logprob: -1.7224019765853882
    3. 'ode' → logprob: -1.7224019765853882
    4. '```' → logprob: -2.4724020957946777
    5. '#' → logprob: -2.5974020957946777
    6. 'om' → logprob: -2.9724020957946777
    7. 'print' → logprob: -3.5974020957946777
    8. '#print' → logprob: -4.597402095794678
    9. 'a' → logprob: -4.847402095794678
    10. 'omme' → logprob: -5.222402095794678

Token 1630: '-à' (ID: 56297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4531579911708832
    2. '(dp' → logprob: -1.5781580209732056
    3. '()' → logprob: -2.578157901763916
    4. 'print' → logprob: -2.828157901763916
    5. ')' → logprob: -4.703157901763916
    6. '```' → logprob: -5.078157901763916
    7. '_dp' → logprob: -6.203157901763916
    8. '()
' → logprob: -6.703157901763916
    9. '(' → logprob: -7.203157901763916
    10. 'end' → logprob: -7.578157901763916

Token 1631: '-dire' (ID: 76064)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21615491807460785
    2. ']' → logprob: -3.2161548137664795
    3. 'la' → logprob: -3.5911548137664795
    4. '1' → logprob: -3.5911548137664795
    5. 'l' → logprob: -4.591155052185059
    6. '#' → logprob: -4.841155052185059
    7. '```' → logprob: -4.841155052185059
    8. '0' → logprob: -4.966155052185059
    9. ')' → logprob: -4.966155052185059
    10. 'n' → logprob: -5.091155052185059

Token 1632: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.727905979962088e-05
    2. ' dp' → logprob: -10.00004768371582
    3. 'print' → logprob: -13.75004768371582
    4. '(dp' → logprob: -14.12504768371582
    5. 'new' → logprob: -17.50004768371582
    6. '0' → logprob: -18.00004768371582
    7. '	dp' → logprob: -18.75004768371582
    8. 'result' → logprob: -20.37504768371582
    9. '```' → logprob: -20.37504768371582
    10. '   ' → logprob: -20.37504768371582

Token 1633: ' dernière' (ID: 39497)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3514575660228729
    2. 'print' → logprob: -1.3514575958251953
    3. 'result' → logprob: -3.3514575958251953
    4. 'sum' → logprob: -6.976457595825195
    5. 'value' → logprob: -7.726457595825195
    6. 'new' → logprob: -7.976457595825195
    7. ' dp' → logprob: -7.976457595825195
    8. 'val' → logprob: -9.476457595825195
    9. 'final' → logprob: -9.601457595825195
    10. ' result' → logprob: -9.726457595825195

Token 1634: ' cellule' (ID: 169440)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3368472754955292
    2. 'token' → logprob: -1.7118473052978516
    3. 'print' → logprob: -2.3368473052978516
    4. ' token' → logprob: -5.836847305297852
    5. '()' → logprob: -6.461847305297852
    6. ')
' → logprob: -7.586847305297852
    7. 'dp' → logprob: -7.586847305297852
    8. '_token' → logprob: -7.961847305297852
    9. ']' → logprob: -8.086847305297852
    10. '`' → logprob: -8.086847305297852

Token 1635: ' calcul' (ID: 7559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08489981293678284
    2. 'print' → logprob: -2.58489990234375
    3. '%' → logprob: -6.08489990234375
    4. '```' → logprob: -6.58489990234375
    5. ')
' → logprob: -7.33489990234375
    6. ']' → logprob: -7.58489990234375
    7. '[' → logprob: -9.08489990234375
    8. ' )' → logprob: -9.20989990234375
    9. '.' → logprob: -9.33489990234375
    10. '   ' → logprob: -9.45989990234375

Token 1636: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.316145122051239
    2. ']' → logprob: -1.6911451816558838
    3. '[' → logprob: -3.316145181655884
    4. 'ated' → logprob: -3.816145181655884
    5. 'e' → logprob: -5.316144943237305
    6. '[]' → logprob: -5.316144943237305
    7. 'ation' → logprob: -5.691144943237305
    8. 'ateur' → logprob: -5.941144943237305
    9. 'ee' → logprob: -6.316144943237305
    10. 'ate' → logprob: -6.441144943237305

Token 1637: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5243200063705444
    2. 'print' → logprob: -1.5243200063705444
    3. '```' → logprob: -1.8993200063705444
    4. '<|end|>' → logprob: -3.774320125579834
    5. '
' → logprob: -5.149320125579834
    6. '%' → logprob: -5.149320125579834
    7. '()' → logprob: -6.899320125579834
    8. ')
' → logprob: -6.899320125579834
    9. '`' → logprob: -7.024320125579834
    10. ']' → logprob: -7.399320125579834

Token 1638: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -13.125001907348633
    3. ' print' → logprob: -17.500001907348633
    4. '``' → logprob: -17.875001907348633
    5. '
' → logprob: -18.625001907348633
    6. '`' → logprob: -18.625001907348633
    7. '(print' → logprob: -20.750001907348633
    8. 'return' → logprob: -20.875001907348633
    9. '`
' → logprob: -21.625001907348633
    10. '#print' → logprob: -21.625001907348633

Token 1639: ' Cela' (ID: 44403)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -14.75
    3. ' print' → logprob: -19.375
    4. 'pr' → logprob: -20.0
    5. '``' → logprob: -20.75
    6. '
' → logprob: -21.25
    7. 'return' → logprob: -23.25
    8. '#print' → logprob: -23.375
    9. 'prin' → logprob: -23.625
    10. '`' → logprob: -23.625

Token 1640: ' représente' (ID: 88912)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5586012005805969
    2. ')' → logprob: -1.8086011409759521
    3. '=' → logprob: -1.9336011409759521
    4. '%' → logprob: -2.808601140975952
    5. '#' → logprob: -3.433601140975952
    6. '.' → logprob: -4.683601379394531
    7. '#print' → logprob: -5.808601379394531
    8. '
' → logprob: -5.808601379394531
    9. '[' → logprob: -6.183601379394531
    10. '%=' → logprob: -6.183601379394531

Token 1641: ' typ' (ID: 5378)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000340111117111519
    2. ' dp' → logprob: -8.000340461730957
    3. 'print' → logprob: -13.000340461730957
    4. '(dp' → logprob: -13.000340461730957
    5. '	dp' → logprob: -16.12533950805664
    6. '```' → logprob: -17.37533950805664
    7. '   ' → logprob: -17.50033950805664
    8. 'sum' → logprob: -17.62533950805664
    9. 'result' → logprob: -18.62533950805664
    10. ' ' → logprob: -18.62533950805664

Token 1642: 'iquement' (ID: 83934)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.007531151175498962
    2. 'al' → logprob: -5.50753116607666
    3. 'e' → logprob: -6.50753116607666
    4. 'ime' → logprob: -8.38253116607666
    5. 'ur' → logprob: -8.75753116607666
    6. '#' → logprob: -8.88253116607666
    7. 'é' → logprob: -8.88253116607666
    8. 'u' → logprob: -8.88253116607666
    9. 'imal' → logprob: -8.88253116607666
    10. 'rale' → logprob: -9.13253116607666

Token 1643: ' le' (ID: 505)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00029947367147542536
    2. ' dp' → logprob: -8.500299453735352
    3. 'print' → logprob: -9.500299453735352
    4. '(dp' → logprob: -10.875299453735352
    5. 'sum' → logprob: -13.500299453735352
    6. 'la' → logprob: -14.750299453735352
    7. 'result' → logprob: -15.875299453735352
    8. '	dp' → logprob: -16.37529945373535
    9. 'ans' → logprob: -16.50029945373535
    10. 'the' → logprob: -16.75029945373535

Token 1644: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21326929330825806
    2. 'result' → logprob: -1.7132692337036133
    3. 'rés' → logprob: -4.463269233703613
    4. 'dp' → logprob: -9.338269233703613
    5. 'res' → logprob: -9.463269233703613
    6. ' résultat' → logprob: -10.088269233703613
    7. 'ré' → logprob: -11.338269233703613
    8. ' print' → logprob: -11.588269233703613
    9. 'r' → logprob: -11.588269233703613
    10. 'answer' → logprob: -11.963269233703613

Token 1645: ' final' (ID: 1721)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4280145466327667
    2. ')' → logprob: -1.6780145168304443
    3. '=' → logprob: -3.0530145168304443
    4. '```' → logprob: -3.6780145168304443
    5. 'dp' → logprob: -4.428014755249023
    6. ']' → logprob: -4.553014755249023
    7. ' %' → logprob: -4.678014755249023
    8. '[-' → logprob: -4.678014755249023
    9. '(dp' → logprob: -4.803014755249023
    10. '.' → logprob: -5.428014755249023

Token 1646: ' combin' (ID: 25307)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0027648175600916147
    2. ')' → logprob: -6.877764701843262
    3. '
' → logprob: -7.127764701843262
    4. '```' → logprob: -7.627764701843262
    5. ' print' → logprob: -9.127764701843262
    6. '%' → logprob: -9.252764701843262
    7. '(print' → logprob: -10.127764701843262
    8. ')
' → logprob: -10.127764701843262
    9. ',' → logprob: -10.752764701843262
    10. '.print' → logprob: -10.752764701843262

Token 1647: 'ant' (ID: 493)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.4238230288028717
    2. 'e' → logprob: -1.4238229990005493
    3. ')' → logprob: -3.548823118209839
    4. ']' → logprob: -4.29882287979126
    5. 'ée' → logprob: -4.67382287979126
    6. 'print' → logprob: -5.04882287979126
    7. 'dp' → logprob: -5.04882287979126
    8. '_' → logprob: -5.17382287979126
    9. '```' → logprob: -5.17382287979126
    10. 'atoire' → logprob: -5.29882287979126

Token 1648: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.21360912919044495
    2. 'les' → logprob: -2.463609218597412
    3. 'l' → logprob: -3.088609218597412
    4. 'la' → logprob: -3.713609218597412
    5. 't' → logprob: -3.963609218597412
    6. 'tout' → logprob: -4.838609218597412
    7. 'le' → logprob: -5.088609218597412
    8. ' dp' → logprob: -6.963609218597412
    9. '```' → logprob: -7.588609218597412
    10. 'une' → logprob: -7.713609218597412

Token 1649: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.22308231890201569
    2. 'dp' → logprob: -2.7230823040008545
    3. ')' → logprob: -3.3480823040008545
    4. ' les' → logprob: -3.3480823040008545
    5. '()' → logprob: -3.5980823040008545
    6. '(dp' → logprob: -4.223082542419434
    7. '(
' → logprob: -5.723082542419434
    8. ']' → logprob: -5.723082542419434
    9. '(' → logprob: -5.848082542419434
    10. '```' → logprob: -6.598082542419434

Token 1650: ' possibilités' (ID: 119756)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.4969981908798218
    2. ' façons' → logprob: -2.7469983100891113
    3. '#' → logprob: -2.8719983100891113
    4. 'poss' → logprob: -3.1219983100891113
    5. 'man' → logprob: -3.1219983100891113
    6. 'comb' → logprob: -3.4969983100891113
    7. 'config' → logprob: -3.7469983100891113
    8. 'élé' → logprob: -4.121998310089111
    9. 'import' → logprob: -4.496998310089111
    10. 'fa' → logprob: -4.746998310089111

Token 1651: '/sc' (ID: 74111)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08910229057073593
    2. '
' → logprob: -2.964102268218994
    3. '%' → logprob: -3.839102268218994
    4. ')' → logprob: -4.839102268218994
    5. '```' → logprob: -6.839102268218994
    6. '<|end|>' → logprob: -6.964102268218994
    7. 'dp' → logprob: -7.839102268218994
    8. '[' → logprob: -8.089102745056152
    9. ')
' → logprob: -8.339102745056152
    10. '#' → logprob: -8.339102745056152

Token 1652: 'én' (ID: 3289)
  Prédit: 'ènes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ènes' → logprob: -1.323197841644287
    2. '#' → logprob: -1.948197841644287
    3. 'én' → logprob: -1.948197841644287
    4. 'ène' → logprob: -1.948197841644287
    5. 'r' → logprob: -2.323197841644287
    6. '_' → logprob: -3.573197841644287
    7. ']' → logprob: -4.073197841644287
    8. 'èn' → logprob: -4.323197841644287
    9. 'enarios' → logprob: -4.323197841644287
    10. 'om' → logprob: -4.698197841644287

Token 1653: 'arios' (ID: 8368)
  Prédit: 'érations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érations' → logprob: -0.7293385863304138
    2. 'ations' → logprob: -2.3543386459350586
    3. 'ières' → logprob: -2.7293386459350586
    4. 'é' → logprob: -3.2293386459350586
    5. 'er' → logprob: -3.2293386459350586
    6. 'rée' → logprob: -3.8543386459350586
    7. 'aires' → logprob: -3.8543386459350586
    8. '```' → logprob: -3.9793386459350586
    9. 'r' → logprob: -4.104338645935059
    10. 'ées' → logprob: -4.229338645935059

Token 1654: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002202120842412114
    2. '```' → logprob: -6.627202033996582
    3. '
' → logprob: -7.502202033996582
    4. ')' → logprob: -8.752202033996582
    5. ' print' → logprob: -9.877202033996582
    6. '%' → logprob: -10.502202033996582
    7. '(print' → logprob: -11.252202033996582
    8. '.print' → logprob: -11.752202033996582
    9. '.' → logprob: -11.752202033996582
    10. '#print' → logprob: -11.877202033996582

Token 1655: ' problème' (ID: 35630)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.2142530381679535
    2. 'code' → logprob: -2.5892529487609863
    3. 'pro' → logprob: -2.7142529487609863
    4. 'calcul' → logprob: -3.0892529487609863
    5. 'program' → logprob: -5.839252948760986
    6. 'proble' → logprob: -6.839252948760986
    7. 'problem' → logprob: -7.464252948760986
    8. ' programme' → logprob: -8.339253425598145
    9. '```' → logprob: -8.464253425598145
    10. ' problème' → logprob: -8.589253425598145

Token 1656: ' traité' (ID: 160836)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011760591296479106
    2. '```' → logprob: -7.376175880432129
    3. ')' → logprob: -8.501175880432129
    4. '()
' → logprob: -9.126175880432129
    5. '()' → logprob: -9.501175880432129
    6. '(print' → logprob: -10.001175880432129
    7. ')
' → logprob: -10.376175880432129
    8. '[' → logprob: -11.001175880432129
    9. '
' → logprob: -11.126175880432129
    10. '``' → logprob: -11.376175880432129

Token 1657: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.4034345187828876e-05
    2. '```' → logprob: -10.87502384185791
    3. '
' → logprob: -12.75002384185791
    4. '(print' → logprob: -14.12502384185791
    5. ' print' → logprob: -14.62502384185791
    6. ')' → logprob: -14.87502384185791
    7. '``' → logprob: -15.75002384185791
    8. ')
' → logprob: -15.87502384185791
    9. '`' → logprob: -16.375024795532227
    10. '#print' → logprob: -16.625024795532227

Token 1658: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.941850526549388e-06
    2. '```' → logprob: -11.750007629394531
    3. '``' → logprob: -17.75000762939453
    4. ' print' → logprob: -19.37500762939453
    5. '
' → logprob: -21.50000762939453
    6. '`' → logprob: -23.25000762939453
    7. '#print' → logprob: -26.00000762939453
    8. '(print' → logprob: -26.12500762939453
    9. '	print' → logprob: -26.87500762939453
    10. '`
' → logprob: -27.00000762939453

Token 1659: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.4140441635390744e-05
    2. 'dp' → logprob: -11.375014305114746
    3. '(' → logprob: -13.000014305114746
    4. ' (' → logprob: -15.625014305114746
    5. ' dp' → logprob: -17.25001335144043
    6. '(sum' → logprob: -17.25001335144043
    7. '(
' → logprob: -17.50001335144043
    8. '(df' → logprob: -17.87501335144043
    9. '((' → logprob: -18.00001335144043
    10. '	dp' → logprob: -18.37501335144043

Token 1660: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.531315314830863e-06
    2. ')' → logprob: -13.375003814697266
    3. '][-' → logprob: -13.500003814697266
    4. '[' → logprob: -15.625003814697266
    5. '-' → logprob: -15.625003814697266
    6. ' [-' → logprob: -16.250003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '(-' → logprob: -17.375003814697266
    9. '[:-' → logprob: -17.500003814697266
    10. '```' → logprob: -18.250003814697266

Token 1661: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '
' → logprob: -18.875
    4. '```' → logprob: -19.125
    5. '])' → logprob: -19.875
    6. '0' → logprob: -19.875
    7. '   ' → logprob: -20.25
    8. '１' → logprob: -20.5
    9. ')' → logprob: -21.375
    10. '`' → logprob: -21.75

Token 1662: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. '])' → logprob: -13.37500286102295
    3. '})' → logprob: -14.25000286102295
    4. ' )' → logprob: -15.50000286102295
    5. '())' → logprob: -15.62500286102295
    6. '`)' → logprob: -15.75000286102295
    7. '))' → logprob: -15.75000286102295
    8. ')`' → logprob: -16.875003814697266
    9. '）' → logprob: -17.000003814697266
    10. ')
' → logprob: -17.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1660
Tokens correctement prédits (1ère position, stricte): 360
Tokens correctement prédits (1ère position, avec adaptation): 368
Tokens correctement prédits (top 10): 833
Précision stricte (1ère position): 21.69%
Précision adaptée (1ère position): 22.17%
Précision (top 10): 50.18%
================================================================================
