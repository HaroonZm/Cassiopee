================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import partial
from collections import defaultdict

input = sys.stdin.readline
I = lambda: int(input())
MI = lambda: map(int, input().split())
LI = lambda: list(map(int, input().split()))

class UnionFind:
    __slots__ = ('n', 'parents')
    def __init__(self, n: int):
        self.n = n
        self.parents = [-1] * n

    def find(self, x: int) -> int:
        px = self.parents
        while px[x] >= 0:
            if px[px[x]] >= 0:
                px[x] = px[px[x]]
            x = px[x]
        return x

    def union(self, x: int, y: int) -> bool:
        px = self.parents
        x = self.find(x)
        y = self.find(y)
        if x == y: return False
        if px[x] > px[y]:
            x, y = y, x
        px[x] += px[y]
        px[y] = x
        return True

    def size(self, x: int) -> int:
        return -self.parents[self.find(x)]

    def same(self, x: int, y: int) -> bool:
        return self.find(x) == self.find(y)

    def roots(self):
        return [i for i, p in enumerate(self.parents) if p < 0]

    def group_count(self) -> int:
        return sum(1 for p in self.parents if p < 0)

def main():
    N = I()
    M = 10**5
    XY = [0] * (2 * M)
    uf = UnionFind(2 * M)
    for _ in range(N):
        x, y = MI()
        x -= 1
        y = y - 1 + M
        XY[x] += 1
        XY[y] += 1
        uf.union(x, y)
    ddx = defaultdict(int)
    ddy = defaultdict(int)
    dde = defaultdict(int)
    for i, e in enumerate(XY):
        root = uf.find(i)
        if i < M:
            ddx[root] += 1
        else:
            ddy[root] += 1
        dde[root] += e
    ans = sum(ddx[k] * ddy[k] - v // 2 for k, v in dde.items())
    print(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.01821877807378769
    2. 'os' → logprob: -4.143218994140625
    3. ' Py' → logprob: -7.768218994140625
    4. ' pathlib' → logprob: -7.768218994140625
    5. ' collections' → logprob: -7.893218994140625
    6. ' math' → logprob: -8.768218994140625
    7. 'collections' → logprob: -9.018218994140625
    8. ' ' → logprob: -9.143218994140625
    9. ' typing' → logprob: -9.643218994140625
    10. ' datetime' → logprob: -9.768218994140625

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11331354081630707
    2. 'import' → logprob: -2.2383134365081787
    3. '_import' → logprob: -8.113313674926758
    4. ' ' → logprob: -8.988313674926758
    5. '_' → logprob: -10.363313674926758
    6. '	import' → logprob: -10.988313674926758
    7. '.' → logprob: -12.488313674926758
    8. ' _' → logprob: -12.613313674926758
    9. ' ' → logprob: -12.738313674926758
    10. '```' → logprob: -13.238313674926758

Token 6: ' partial' (ID: 13664)
  Prédit: ' wraps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wraps' → logprob: -1.0255804061889648
    2. 'wrap' → logprob: -1.2755804061889648
    3. 'partial' → logprob: -1.9005804061889648
    4. ' l' → logprob: -2.525580406188965
    5. ' partial' → logprob: -2.525580406188965
    6. 'l' → logprob: -3.525580406188965
    7. 'reduce' → logprob: -4.025580406188965
    8. ' reduce' → logprob: -5.525580406188965
    9. 'cmp' → logprob: -7.900580406188965
    10. 'cache' → logprob: -8.025580406188965

Token 7: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.658944308757782
    2. '\' → logprob: -1.9089443683624268
    3. '.' → logprob: -2.0339443683624268
    4. '(' → logprob: -2.6589443683624268
    5. '\n' → logprob: -3.2839443683624268
    6. ',' → logprob: -4.033944129943848
    7. '```' → logprob: -4.283944129943848
    8. '' → logprob: -4.533944129943848
    9. ' ' → logprob: -4.783944129943848
    10. '<|end|>' → logprob: -4.783944129943848

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11209992319345474
    2. '\' → logprob: -3.6120998859405518
    3. ',' → logprob: -3.8620998859405518
    4. '```' → logprob: -4.362100124359131
    5. ' 

' → logprob: -4.737100124359131
    6. '.' → logprob: -5.112100124359131
    7. ' ' → logprob: -5.237100124359131
    8. 'def' → logprob: -5.237100124359131
    9. '' → logprob: -5.487100124359131
    10. '\n' → logprob: -5.862100124359131

Token 9: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.3659002780914307
    2. ' typing' → logprob: -1.3659002780914307
    3. ' os' → logprob: -1.7409002780914307
    4. ' pathlib' → logprob: -2.4909002780914307
    5. ' itertools' → logprob: -2.9909002780914307
    6. ' ' → logprob: -3.1159002780914307
    7. ' math' → logprob: -3.1159002780914307
    8. ' operator' → logprob: -3.9909002780914307
    9. ' threading' → logprob: -4.490900039672852
    10. ' tkinter' → logprob: -4.615900039672852

Token 10: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8136968612670898
    2. '.' → logprob: -1.0636968612670898
    3. ' import' → logprob: -1.5636968612670898
    4. 'abc' → logprob: -7.18869686126709
    5. '<|end|>' → logprob: -7.81369686126709
    6. '.import' → logprob: -8.18869686126709
    7. '```' → logprob: -8.31369686126709
    8. '.Counter' → logprob: -8.43869686126709
    9. ' .' → logprob: -9.81369686126709
    10. ' ' → logprob: -9.93869686126709

Token 11: ' defaultdict' (ID: 107098)
  Prédit: ' abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abc' → logprob: -0.18868684768676758
    2. ' defaultdict' → logprob: -2.1886868476867676
    3. 'abc' → logprob: -2.9386868476867676
    4. ' deque' → logprob: -5.938686847686768
    5. 'deque' → logprob: -6.188686847686768
    6. ' named' → logprob: -6.563686847686768
    7. 'named' → logprob: -8.06368637084961
    8. ' Ordered' → logprob: -9.31368637084961
    9. ' import' → logprob: -9.56368637084961
    10. ' Counter' → logprob: -9.68868637084961

Token 12: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.44735750555992126
    2. 'import' → logprob: -1.8223575353622437
    3. '
' → logprob: -2.447357416152954
    4. '```' → logprob: -2.947357416152954
    5. '\n' → logprob: -3.322357416152954
    6. '\' → logprob: -4.697357654571533
    7. ' 

' → logprob: -5.447357654571533
    8. '<|end|>' → logprob: -5.947357654571533
    9. '' → logprob: -6.447357654571533
    10. ',' → logprob: -6.697357654571533

Token 13: 'input' (ID: 2586)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1779891699552536
    2. 'def' → logprob: -2.1779892444610596
    3. '```' → logprob: -3.4279892444610596
    4. '\' → logprob: -5.6779890060424805
    5. 'from' → logprob: -5.8029890060424805
    6. 'class' → logprob: -6.0529890060424805
    7. '`' → logprob: -6.3029890060424805
    8. ',' → logprob: -6.4279890060424805
    9. '\n' → logprob: -6.9279890060424805
    10. 'd' → logprob: -7.1779890060424805

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018808096647262573
    2. '=' → logprob: -5.018807888031006
    3. '.' → logprob: -5.143807888031006
    4. '_' → logprob: -6.268807888031006
    5. ' =' → logprob: -6.393807888031006
    6. '()' → logprob: -7.518807888031006
    7. '_data' → logprob: -8.018808364868164
    8. '```' → logprob: -8.018808364868164
    9. ' (' → logprob: -8.268808364868164
    10. ')' → logprob: -9.018808364868164

Token 15: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2815650403499603
    2. ' sys' → logprob: -1.5315650701522827
    3. 'input' → logprob: -3.781564950942993
    4. 'lambda' → logprob: -6.156565189361572
    5. ' input' → logprob: -6.281565189361572
    6. 'partial' → logprob: -6.656565189361572
    7. ' partial' → logprob: -7.531565189361572
    8. ' lambda' → logprob: -7.656565189361572
    9. '=sys' → logprob: -10.156564712524414
    10. '	sys' → logprob: -10.281564712524414

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01194569282233715
    2. ' .' → logprob: -4.511945724487305
    3. '.stdin' → logprob: -7.386945724487305
    4. '.readline' → logprob: -9.636945724487305
    5. '.
' → logprob: -9.886945724487305
    6. '.input' → logprob: -10.011945724487305
    7. '.import' → logprob: -10.261945724487305
    8. '.argv' → logprob: -10.886945724487305
    9. '```' → logprob: -11.011945724487305
    10. '.`' → logprob: -11.761945724487305

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.216371551156044
    2. '.' → logprob: -1.7163715362548828
    3. '.read' → logprob: -4.216371536254883
    4. '.readlines' → logprob: -10.091371536254883
    5. 'read' → logprob: -10.591371536254883
    6. '.Read' → logprob: -12.341371536254883
    7. '.write' → logprob: -12.341371536254883
    8. '.buffer' → logprob: -12.466371536254883
    9. '.

' → logprob: -13.216371536254883
    10. ' .' → logprob: -13.341371536254883

Token 18: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12013515084981918
    2. '
' → logprob: -2.8701350688934326
    3. '(
' → logprob: -3.9951350688934326
    4. '()' → logprob: -4.120135307312012
    5. '

' → logprob: -4.495135307312012
    6. '(

' → logprob: -5.495135307312012
    7. 'def' → logprob: -6.120135307312012
    8. '\n' → logprob: -6.495135307312012
    9. ')' → logprob: -7.370135307312012
    10. '()

' → logprob: -8.120135307312012

Token 19: 'I' (ID: 40)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05123176798224449
    2. '
' → logprob: -4.301231861114502
    3. '

' → logprob: -4.551231861114502
    4. '()' → logprob: -4.801231861114502
    5. 'n' → logprob: -5.301231861114502
    6. '(' → logprob: -5.301231861114502
    7. 'd' → logprob: -6.676231861114502
    8. '' → logprob: -7.301231861114502
    9. '()

' → logprob: -7.301231861114502
    10. 'data' → logprob: -7.551231861114502

Token 20: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001562715508043766
    2. 'nit' → logprob: -7.251562595367432
    3. 'np' → logprob: -7.751562595367432
    4. 'm' → logprob: -8.75156307220459
    5. 'ndef' → logprob: -9.37656307220459
    6. 'nt' → logprob: -9.62656307220459
    7. 'mp' → logprob: -10.25156307220459
    8. 'N' → logprob: -11.37656307220459
    9. ' =' → logprob: -11.50156307220459
    10. 'nd' → logprob: -11.50156307220459

Token 21: ' lambda' (ID: 27871)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6598890423774719
    2. 'input' → logprob: -1.1598889827728271
    3. 'nt' → logprob: -1.9098889827728271
    4. 'int' → logprob: -4.159889221191406
    5. ' input' → logprob: -5.784889221191406
    6. 'partial' → logprob: -7.284889221191406
    7. 'np' → logprob: -7.409889221191406
    8. ' n' → logprob: -7.909889221191406
    9. 'put' → logprob: -8.409889221191406
    10. ' nt' → logprob: -8.409889221191406

Token 22: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6484657526016235
    2. ' x' → logprob: -0.7734657526016235
    3. 'int' → logprob: -5.273465633392334
    4. 's' → logprob: -6.148465633392334
    5. ' s' → logprob: -6.398465633392334
    6. ' n' → logprob: -6.398465633392334
    7. 'n' → logprob: -6.398465633392334
    8. ' int' → logprob: -7.023465633392334
    9. '_' → logprob: -7.648465633392334
    10. ':' → logprob: -7.648465633392334

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4741046130657196
    2. ' int' → logprob: -0.974104642868042
    3. ' ' → logprob: -11.474104881286621
    4. ' map' → logprob: -11.474104881286621
    5. 'input' → logprob: -13.099104881286621
    6. 'map' → logprob: -13.474104881286621
    7. ' input' → logprob: -13.849104881286621
    8. '  ' → logprob: -14.099104881286621
    9. '(int' → logprob: -15.099104881286621
    10. '	int' → logprob: -15.349104881286621

Token 24: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932534575462341
    2. '(input' → logprob: -0.6932534575462341
    3. '()' → logprob: -10.193253517150879
    4. 'input' → logprob: -10.818253517150879
    5. '(
' → logprob: -11.068253517150879
    6. ' (' → logprob: -11.443253517150879
    7. '(sys' → logprob: -11.568253517150879
    8. '((' → logprob: -12.068253517150879
    9. '(in' → logprob: -13.193253517150879
    10. '(I' → logprob: -13.193253517150879

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015256908955052495
    2. '()' → logprob: -6.50152587890625
    3. ' ())' → logprob: -11.75152587890625
    4. '().' → logprob: -12.00152587890625
    5. ')' → logprob: -12.62652587890625
    6. '())
' → logprob: -12.75152587890625
    7. '()))' → logprob: -13.37652587890625
    8. '(' → logprob: -14.37652587890625
    9. '()
' → logprob: -15.00152587890625
    10. '())

' → logprob: -15.75152587890625

Token 26: 'MI' (ID: 15470)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9191470146179199
    2. ')' → logprob: -1.79414701461792
    3. ' ' → logprob: -2.04414701461792
    4. '(' → logprob: -2.29414701461792
    5. 'n' → logprob: -2.79414701461792
    6. '()' → logprob: -3.16914701461792
    7. '\n' → logprob: -3.91914701461792
    8. '
' → logprob: -4.04414701461792
    9. '<|end|>' → logprob: -4.79414701461792
    10. 'D' → logprob: -4.91914701461792

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4424026608467102
    2. '=' → logprob: -1.0674026012420654
    3. '=lambda' → logprob: -4.6924028396606445
    4. 'N' → logprob: -6.1924028396606445
    5. 'M' → logprob: -6.9424028396606445
    6. '()' → logprob: -7.9424028396606445
    7. 'I' → logprob: -8.567402839660645
    8. 'lambda' → logprob: -8.942402839660645
    9. '=int' → logprob: -9.192402839660645
    10. 'P' → logprob: -9.192402839660645

Token 28: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.10168009251356125
    2. 'lambda' → logprob: -2.351680040359497
    3. '(lambda' → logprob: -6.601680278778076
    4. ' lamb' → logprob: -10.101679801940918
    5. ' map' → logprob: -10.226679801940918
    6. '=lambda' → logprob: -10.851679801940918
    7. 'map' → logprob: -11.726679801940918
    8. ' list' → logprob: -13.101679801940918
    9. ' la' → logprob: -13.351679801940918
    10. 'list' → logprob: -13.726679801940918

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033663686364889145
    2. ' :' → logprob: -3.533663749694824
    3. ':list' → logprob: -6.408663749694824
    4. '():' → logprob: -7.283663749694824
    5. ' lambda' → logprob: -7.783663749694824
    6. ':int' → logprob: -7.783663749694824
    7. ' list' → logprob: -8.033663749694824
    8. 'lambda' → logprob: -8.908663749694824
    9. 'list' → logprob: -9.533663749694824
    10. ' n' → logprob: -10.033663749694824

Token 30: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1285189390182495
    2. ' map' → logprob: -2.128519058227539
    3. 'list' → logprob: -6.503519058227539
    4. ' list' → logprob: -9.378519058227539
    5. '	map' → logprob: -12.628519058227539
    6. '[' → logprob: -13.128519058227539
    7. '(map' → logprob: -14.378519058227539
    8. ' ' → logprob: -14.878519058227539
    9. 'm' → logprob: -15.378519058227539
    10. '.map' → logprob: -15.753519058227539

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00043615259346552193
    2. '(' → logprob: -7.750436305999756
    3. 'int' → logprob: -13.250435829162598
    4. '<int' → logprob: -13.375435829162598
    5. '=int' → logprob: -13.750435829162598
    6. ' (' → logprob: -14.750435829162598
    7. '[int' → logprob: -15.375435829162598
    8. ' int' → logprob: -15.875435829162598
    9. '(
' → logprob: -15.875435829162598
    10. ']int' → logprob: -16.750436782836914

Token 32: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004741853103041649
    2. ' (' → logprob: -5.504741668701172
    3. '(' → logprob: -7.379741668701172
    4. ',input' → logprob: -11.004741668701172
    5. ')' → logprob: -11.629741668701172
    6. ' input' → logprob: -12.004741668701172
    7. 'input' → logprob: -12.754741668701172
    8. '=input' → logprob: -13.004741668701172
    9. ',' → logprob: -13.504741668701172
    10. '(output' → logprob: -15.254741668701172

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.003600901924073696
    2. ' input' → logprob: -5.62860107421875
    3. '(input' → logprob: -14.62860107421875
    4. ' ' → logprob: -15.75360107421875
    5. ')' → logprob: -16.25360107421875
    6. '	input' → logprob: -17.00360107421875
    7. '=input' → logprob: -17.37860107421875
    8. '<input' → logprob: -17.62860107421875
    9. ',input' → logprob: -18.00360107421875
    10. '_input' → logprob: -18.50360107421875

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008415495976805687
    2. '())' → logprob: -7.2508416175842285
    3. '()' → logprob: -9.00084114074707
    4. ')' → logprob: -12.37584114074707
    5. ' ().' → logprob: -12.75084114074707
    6. ' ())' → logprob: -14.62584114074707
    7. '(' → logprob: -15.12584114074707
    8. ' ()' → logprob: -15.75084114074707
    9. '()
' → logprob: -16.12584114074707
    10. '()))' → logprob: -16.25084114074707

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004100485239177942
    2. 'strip' → logprob: -5.504100322723389
    3. 'rstrip' → logprob: -11.004100799560547
    4. ')' → logprob: -12.504100799560547
    5. ' split' → logprob: -13.754100799560547
    6. '(split' → logprob: -15.129100799560547
    7. 'plit' → logprob: -15.504100799560547
    8. 's' → logprob: -16.629100799560547
    9. 'spl' → logprob: -17.379100799560547
    10. 'read' → logprob: -18.129100799560547

Token 36: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.016982372850179672
    2. ')' → logprob: -4.266982555389404
    3. '()' → logprob: -5.891982555389404
    4. '())
' → logprob: -10.141982078552246
    5. '()))' → logprob: -12.141982078552246
    6. ' ())' → logprob: -13.016982078552246
    7. '))' → logprob: -13.141982078552246
    8. '();)' → logprob: -13.891982078552246
    9. '()
' → logprob: -14.016982078552246
    10. '(' → logprob: -14.141982078552246

Token 37: 'LI' (ID: 14313)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7615020275115967
    2. 'n' → logprob: -1.5115020275115967
    3. 'N' → logprob: -1.8865020275115967
    4. 'S' → logprob: -3.2615020275115967
    5. 'def' → logprob: -3.3865020275115967
    6. 'd' → logprob: -3.6365020275115967
    7. 'A' → logprob: -4.136502265930176
    8. 'DP' → logprob: -4.386502265930176
    9. '_' → logprob: -5.011502265930176
    10. 'T' → logprob: -5.386502265930176

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9308117032051086
    2. ' =' → logprob: -0.9308117032051086
    3. 'ambda' → logprob: -2.055811643600464
    4. '=lambda' → logprob: -2.555811643600464
    5. 'mb' → logprob: -5.680811882019043
    6. '(lambda' → logprob: -7.555811882019043
    7. 'amba' → logprob: -7.930811882019043
    8. 'lambda' → logprob: -8.180811882019043
    9. 'b' → logprob: -8.305811882019043
    10. 'am' → logprob: -8.430811882019043

Token 39: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3925032317638397
    2. ' lambda' → logprob: -1.142503261566162
    3. 'list' → logprob: -5.267503261566162
    4. ' list' → logprob: -7.767503261566162
    5. '(lambda' → logprob: -10.642502784729004
    6. 'ambda' → logprob: -12.142502784729004
    7. '=lambda' → logprob: -12.767502784729004
    8. 'lam' → logprob: -13.142502784729004
    9. ' lamb' → logprob: -13.392502784729004
    10. 'li' → logprob: -15.517502784729004

Token 40: ':' (ID: 25)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7510800957679749
    2. ' list' → logprob: -1.25108003616333
    3. ':' → logprob: -1.50108003616333
    4. ':list' → logprob: -4.00108003616333
    5. 'lambda' → logprob: -7.37608003616333
    6. ' lambda' → logprob: -9.876080513000488
    7. 'int' → logprob: -11.001080513000488
    8. ' :' → logprob: -11.376080513000488
    9. '[]' → logprob: -11.501080513000488
    10. '=list' → logprob: -11.751080513000488

Token 41: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1269317865371704
    2. ' list' → logprob: -2.126931667327881
    3. '[list' → logprob: -12.876932144165039
    4. '[' → logprob: -14.626932144165039
    5. ' [' → logprob: -15.376932144165039
    6. '	list' → logprob: -15.626932144165039
    7. '=list' → logprob: -16.12693214416504
    8. '_list' → logprob: -16.75193214416504
    9. 'li' → logprob: -16.87693214416504
    10. 'lst' → logprob: -16.87693214416504

Token 42: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0071795606054365635
    2. '(int' → logprob: -5.2571797370910645
    3. '(' → logprob: -6.2571797370910645
    4. '(input' → logprob: -11.007179260253906
    5. 'map' → logprob: -12.132179260253906
    6. ' map' → logprob: -13.132179260253906
    7. '()' → logprob: -14.007179260253906
    8. ' (' → logprob: -14.382179260253906
    9. '<int' → logprob: -14.507179260253906
    10. '_map' → logprob: -15.007179260253906

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.386147626675665e-05
    2. 'int' → logprob: -10.000073432922363
    3. '<int' → logprob: -11.250073432922363
    4. '(' → logprob: -12.250073432922363
    5. '=int' → logprob: -12.375073432922363
    6. '[int' → logprob: -13.000073432922363
    7. ',int' → logprob: -13.250073432922363
    8. ']int' → logprob: -13.875073432922363
    9. '<|end|>' → logprob: -14.500073432922363
    10. ' int' → logprob: -15.500073432922363

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07548774033784866
    2. ',input' → logprob: -2.8254878520965576
    3. '(input' → logprob: -4.3254876136779785
    4. '(' → logprob: -9.325488090515137
    5. ' ,' → logprob: -9.325488090515137
    6. ')' → logprob: -11.825488090515137
    7. 'input' → logprob: -12.325488090515137
    8. ' input' → logprob: -12.325488090515137
    9. ' (' → logprob: -12.700488090515137
    10. '=input' → logprob: -13.325488090515137

Token 45: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193241238594055
    2. ' input' → logprob: -1.5019323825836182
    3. '(input' → logprob: -13.501932144165039
    4. ',input' → logprob: -14.376932144165039
    5. '	input' → logprob: -14.751932144165039
    6. ')' → logprob: -14.876932144165039
    7. '_input' → logprob: -15.251932144165039
    8. '<input' → logprob: -16.00193214416504
    9. '=input' → logprob: -16.12693214416504
    10. ' ' → logprob: -16.37693214416504

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006654949975199997
    2. '()' → logprob: -7.375665664672852
    3. '())' → logprob: -10.500665664672852
    4. '()))' → logprob: -11.875665664672852
    5. ')' → logprob: -13.000665664672852
    6. '))' → logprob: -14.625665664672852
    7. '()[' → logprob: -15.125665664672852
    8. ' ().' → logprob: -15.375665664672852
    9. '.' → logprob: -15.625665664672852
    10. '().__' → logprob: -15.875665664672852

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.65707261255011e-06
    2. ')' → logprob: -12.625008583068848
    3. 'strip' → logprob: -12.625008583068848
    4. ' split' → logprob: -14.250008583068848
    5. 'spl' → logprob: -14.500008583068848
    6. 'rstrip' → logprob: -14.625008583068848
    7. '))' → logprob: -15.625008583068848
    8. '(split' → logprob: -16.500009536743164
    9. 'plit' → logprob: -16.875009536743164
    10. '.split' → logprob: -17.625009536743164

Token 48: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6992272138595581
    2. '()))' → logprob: -0.6992272138595581
    3. '())' → logprob: -5.574227333068848
    4. '()' → logprob: -6.574227333068848
    5. ')' → logprob: -7.074227333068848
    6. '()))
' → logprob: -11.074227333068848
    7. '(' → logprob: -13.074227333068848
    8. ')))' → logprob: -13.199227333068848
    9. '()));' → logprob: -13.824227333068848
    10. '))
' → logprob: -14.074227333068848

Token 49: 'class' (ID: 1444)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2643127739429474
    2. 'N' → logprob: -1.889312744140625
    3. 'def' → logprob: -2.764312744140625
    4. 'class' → logprob: -4.264312744140625
    5. 't' → logprob: -6.764312744140625
    6. 'T' → logprob: -7.139312744140625
    7. 'd' → logprob: -7.264312744140625
    8. 'D' → logprob: -7.889312744140625
    9. '#' → logprob: -8.639312744140625
    10. 'H' → logprob: -8.764312744140625

Token 50: ' Union' (ID: 14746)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.22416546940803528
    2. ' Solver' → logprob: -2.974165439605713
    3. ' My' → logprob: -3.099165439605713
    4. ' Counter' → logprob: -3.349165439605713
    5. ' Trie' → logprob: -3.599165439605713
    6. ' Graph' → logprob: -4.474165439605713
    7. ' defaultdict' → logprob: -4.599165439605713
    8. ' Segment' → logprob: -4.724165439605713
    9. ' Seg' → logprob: -6.099165439605713
    10. ' ' → logprob: -6.724165439605713

Token 51: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.0004450892156455666
    2. '-F' → logprob: -7.7504448890686035
    3. '[int' → logprob: -11.375445365905762
    4. '[' → logprob: -13.750445365905762
    5. '-' → logprob: -14.375445365905762
    6. 'F' → logprob: -14.875445365905762
    7. ' Find' → logprob: -15.000445365905762
    8. '_Find' → logprob: -15.250445365905762
    9. '[str' → logprob: -16.500444412231445
    10. '-find' → logprob: -16.875444412231445

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016778295685071498
    2. '():' → logprob: -9.125167846679688
    3. ' :' → logprob: -10.625167846679688
    4. '(object' → logprob: -10.750167846679688
    5. '):' → logprob: -12.375167846679688
    6. ':
' → logprob: -12.750167846679688
    7. '>:' → logprob: -13.000167846679688
    8. ':**' → logprob: -13.000167846679688
    9. '(' → logprob: -14.625167846679688
    10. '：' → logprob: -15.250167846679688

Token 53: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1084936261177063
    2. '   ' → logprob: -2.4834935665130615
    3. ':
' → logprob: -4.483493804931641
    4. 'def' → logprob: -6.108493804931641
    5. ' def' → logprob: -6.358493804931641
    6. '    
' → logprob: -7.108493804931641
    7. ' ' → logprob: -7.733493804931641
    8. ':def' → logprob: -7.858493804931641
    9. '<|end|>' → logprob: -7.983493804931641
    10. '   
' → logprob: -7.983493804931641

Token 54: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3142353892326355
    2. 'def' → logprob: -1.3142354488372803
    3. '   ' → logprob: -6.939235210418701
    4. '	def' → logprob: -12.93923568725586
    5. ' 
' → logprob: -14.43923568725586
    6. '    
' → logprob: -14.43923568725586
    7. '    ' → logprob: -15.43923568725586
    8. ' __' → logprob: -15.56423568725586
    9. ' ' → logprob: -16.56423568725586
    10. '__' (adapté à ' __') → logprob: -16.68923568725586

Token 55: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.008622966706752777
    2. 'slots' → logprob: -4.758623123168945
    3. 'def' → logprob: -12.258623123168945
    4. ' init' → logprob: -13.133623123168945
    5. '_init' → logprob: -14.633623123168945
    6. 'in' → logprob: -14.883623123168945
    7. 'i' → logprob: -15.633623123168945
    8. ' slots' → logprob: -15.633623123168945
    9. 'inite' → logprob: -15.883623123168945
    10. 'slot' → logprob: -16.008623123168945

Token 56: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.055638834834098816
    2. '=' → logprob: -2.9306387901306152
    3. '=['' → logprob: -7.805638790130615
    4. ' =' → logprob: -8.055639266967773
    5. '___' → logprob: -11.305639266967773
    6. '_=' → logprob: -12.055639266967773
    7. '__('' → logprob: -12.680639266967773
    8. '_' → logprob: -13.055639266967773
    9. '__[' → logprob: -13.180639266967773
    10. '__["' → logprob: -13.555639266967773

Token 57: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003573919821064919
    2. '=' → logprob: -8.125357627868652
    3. ' =' → logprob: -10.125357627868652
    4. '=['' → logprob: -11.250357627868652
    5. '___' → logprob: -12.375357627868652
    6. '=('' → logprob: -13.625357627868652
    7. '__('' → logprob: -13.875357627868652
    8. '__[' → logprob: -14.625357627868652
    9. '_' → logprob: -15.125357627868652
    10. '____' → logprob: -15.250357627868652

Token 58: ' ('' (ID: 9906)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.21727484464645386
    2. '['_' → logprob: -2.5922749042510986
    3. ''' → logprob: -2.9672749042510986
    4. '["' → logprob: -3.4672749042510986
    5. '('_' → logprob: -4.5922746658325195
    6. ''_' → logprob: -4.9672746658325195
    7. '["_' → logprob: -5.0922746658325195
    8. ''s' → logprob: -5.0922746658325195
    9. '[' → logprob: -6.0922746658325195
    10. '('__' → logprob: -6.2172746658325195

Token 59: 'n' (ID: 77)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.045266684144735336
    2. '_parent' → logprob: -3.545266628265381
    3. 'par' → logprob: -5.045266628265381
    4. 'parents' → logprob: -5.045266628265381
    5. '_par' → logprob: -6.045266628265381
    6. 'n' → logprob: -9.045267105102539
    7. 'root' → logprob: -11.170267105102539
    8. ' parent' → logprob: -12.545267105102539
    9. 'data' → logprob: -13.045267105102539
    10. 'pa' → logprob: -13.295267105102539

Token 60: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.20406199991703033
    2. ',' → logprob: -1.7040619850158691
    3. '')' → logprob: -6.829061985015869
    4. '','' → logprob: -6.954061985015869
    5. ','' → logprob: -8.579062461853027
    6. ' ,' → logprob: -9.079062461853027
    7. 'um' → logprob: -9.079062461853027
    8. 'umber' → logprob: -10.204062461853027
    9. ''' → logprob: -10.329062461853027
    10. 'ame' → logprob: -10.329062461853027

Token 61: ' '' (ID: 461)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.31839078664779663
    2. 'par' → logprob: -1.5683908462524414
    3. ' parent' → logprob: -3.0683908462524414
    4. '_parent' → logprob: -4.943390846252441
    5. '_par' → logprob: -5.318390846252441
    6. 'parents' → logprob: -5.693390846252441
    7. ' par' → logprob: -6.568390846252441
    8. ' parents' → logprob: -7.943390846252441
    9. '   ' → logprob: -8.068390846252441
    10. 'root' → logprob: -9.818390846252441

Token 62: 'parents' (ID: 40404)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.3030439019203186
    2. 'par' → logprob: -1.9280438423156738
    3. 'parents' → logprob: -2.178043842315674
    4. '_parent' → logprob: -6.803043842315674
    5. '_par' → logprob: -7.053043842315674
    6. 'root' → logprob: -8.178044319152832
    7. 'data' → logprob: -8.428044319152832
    8. 'pa' → logprob: -9.303044319152832
    9. 'paren' → logprob: -9.928044319152832
    10. 'pare' → logprob: -10.178044319152832

Token 63: '')
' (ID: 2515)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.16024748980998993
    2. '')' → logprob: -1.9102474451065063
    3. ',' → logprob: -12.035247802734375
    4. '','' → logprob: -12.035247802734375
    5. ''' → logprob: -12.410247802734375
    6. ')' → logprob: -12.410247802734375
    7. '')
' → logprob: -14.035247802734375
    8. '')

' → logprob: -14.410247802734375
    9. '_' → logprob: -15.160247802734375
    10. ','' → logprob: -15.285247802734375

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.060594551265239716
    2. '   ' → logprob: -3.4355945587158203
    3. '    
' → logprob: -4.18559455871582
    4. 'def' → logprob: -5.56059455871582
    5. ':' → logprob: -6.43559455871582
    6. '

' → logprob: -6.43559455871582
    7. ',' → logprob: -6.56059455871582
    8. ')' → logprob: -6.93559455871582
    9. '  
' → logprob: -7.93559455871582
    10. '=' → logprob: -8.06059455871582

Token 65: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012672214768826962
    2. 'def' (adapté à ' def') → logprob: -5.262672424316406
    3. '   ' → logprob: -6.012672424316406
    4. ':' → logprob: -6.262672424316406
    5. ' def' → logprob: -6.512672424316406
    6. '    
' → logprob: -7.012672424316406
    7. ':
' → logprob: -9.012672424316406
    8. '=' → logprob: -9.012672424316406
    9. '  
' → logprob: -9.387672424316406
    10. '\n' → logprob: -9.512672424316406

Token 66: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.2774180173873901
    2. ' init' → logprob: -1.5274180173873901
    3. ' __' → logprob: -1.7774180173873901
    4. ' ' → logprob: -2.2774181365966797
    5. ' def' → logprob: -2.2774181365966797
    6. ' _' → logprob: -3.0274181365966797
    7. '_init' → logprob: -3.5274181365966797
    8. '  ' → logprob: -4.02741813659668
    9. 'nit' → logprob: -4.90241813659668
    10. '   ' → logprob: -5.15241813659668

Token 67: 'init' (ID: 3287)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.10023665428161621
    2. 'init' → logprob: -2.350236654281616
    3. 'slot' → logprob: -11.100236892700195
    4. '_slots' → logprob: -12.225236892700195
    5. ' slots' → logprob: -12.725236892700195
    6. '   ' → logprob: -13.350236892700195
    7. '__' → logprob: -13.725236892700195
    8. 'sl' → logprob: -13.975236892700195
    9. 'new' → logprob: -14.100236892700195
    10. '_init' → logprob: -14.600236892700195

Token 68: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.013273878023028374
    2. '__' → logprob: -5.1382737159729
    3. '(' → logprob: -5.6382737159729
    4. '(self' → logprob: -5.7632737159729
    5. '__(
' → logprob: -8.138274192810059
    6. '<|end|>' → logprob: -9.513274192810059
    7. ' (' → logprob: -9.888274192810059
    8. '__((' → logprob: -10.013274192810059
    9. '__(*' → logprob: -10.013274192810059
    10. '_(' → logprob: -10.263274192810059

Token 69: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9981420336989686e-05
    2. ' self' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.750020027160645
    4. '(self' → logprob: -14.750020027160645
    5. 's' → logprob: -16.750019073486328
    6. '	self' → logprob: -17.375019073486328
    7. 'n' → logprob: -17.500019073486328
    8. ' ' → logprob: -18.125019073486328
    9. '
' → logprob: -18.250019073486328
    10. '       ' → logprob: -18.375019073486328

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0411180704832077
    2. ' ,' → logprob: -4.041118144989014
    3. '(self' → logprob: -4.291118144989014
    4. 'self' → logprob: -4.916118144989014
    5. ',self' → logprob: -7.416118144989014
    6. '(' → logprob: -7.791118144989014
    7. ')(' → logprob: -7.916118144989014
    8. ' (' → logprob: -9.416117668151855
    9. ')' → logprob: -9.666117668151855
    10. ' self' → logprob: -9.791117668151855

Token 71: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3175713121891022
    2. 'n' → logprob: -1.6925712823867798
    3. ' self' → logprob: -2.8175714015960693
    4. ' n' → logprob: -3.5675714015960693
    5. '   ' → logprob: -9.942571640014648
    6. ' ' → logprob: -11.567571640014648
    7. '  ' → logprob: -13.317571640014648
    8. '	self' → logprob: -13.567571640014648
    9. '	n' → logprob: -14.067571640014648
    10. '    ' → logprob: -14.442571640014648

Token 72: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005127601907588542
    2. ')' → logprob: -8.625513076782227
    3. ':' → logprob: -8.750513076782227
    4. ' ):' → logprob: -8.750513076782227
    5. ',' → logprob: -11.750513076782227
    6. '):
' → logprob: -11.875513076782227
    7. '   ' → logprob: -14.375513076782227
    8. ' :' → logprob: -15.750513076782227
    9. ' )' → logprob: -15.875513076782227
    10. '=' → logprob: -15.875513076782227

Token 73: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07890840619802475
    2. ' int' → logprob: -2.5789084434509277
    3. ')' → logprob: -11.82890796661377
    4. ' ' → logprob: -12.32890796661377
    5. '   ' → logprob: -12.70390796661377
    6. ' )' → logprob: -14.20390796661377
    7. '  ' → logprob: -14.20390796661377
    8. '=int' → logprob: -14.20390796661377
    9. '[int' → logprob: -15.20390796661377
    10. '    ' → logprob: -15.32890796661377

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12698301672935486
    2. ')' → logprob: -2.1269829273223877
    3. ' ):' → logprob: -10.251982688903809
    4. '):
' → logprob: -11.501982688903809
    5. ':' → logprob: -12.126982688903809
    6. ' )' → logprob: -13.251982688903809
    7. ')->' → logprob: -13.751982688903809
    8. ')：' → logprob: -15.126982688903809
    9. ',' → logprob: -15.501982688903809
    10. '):
' → logprob: -15.751982688903809

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027218335890211165
    2. 'self' → logprob: -8.500271797180176
    3. ' self' → logprob: -10.125271797180176
    4. '        ' → logprob: -12.000271797180176
    5. 'n' → logprob: -12.125271797180176
    6. '   ' → logprob: -12.875271797180176
    7. '	       ' → logprob: -12.875271797180176
    8. '	' → logprob: -13.250271797180176
    9. '<|end|>' → logprob: -13.500271797180176
    10. '      ' → logprob: -13.500271797180176

Token 76: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006283425260335207
    2. '       ' → logprob: -5.506283283233643
    3. ' self' → logprob: -6.131283283233643
    4. '   ' → logprob: -10.6312837600708
    5. '	self' → logprob: -12.5062837600708
    6. ' ' → logprob: -15.3812837600708
    7. '(self' → logprob: -15.7562837600708
    8. 's' → logprob: -16.006282806396484
    9. 'super' → logprob: -16.131282806396484
    10. '=self' → logprob: -16.756282806396484

Token 77: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.16604043543338776
    2. '.' → logprob: -1.9160404205322266
    3. ' .' → logprob: -5.166040420532227
    4. ' =' → logprob: -10.916040420532227
    5. 'n' → logprob: -11.041040420532227
    6. '=n' → logprob: -11.416040420532227
    7. ':' → logprob: -11.791040420532227
    8. ' ' → logprob: -11.916040420532227
    9. '   ' → logprob: -12.541040420532227
    10. ' n' → logprob: -12.791040420532227

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741102457046509
    2. ' =' → logprob: -0.9741102457046509
    3. ' ' → logprob: -11.34911060333252
    4. ')' → logprob: -11.59911060333252
    5. '=n' → logprob: -11.97411060333252
    6. ',' → logprob: -13.09911060333252
    7. '=int' → logprob: -13.22411060333252
    8. '   ' → logprob: -13.97411060333252
    9. ')=' → logprob: -15.34911060333252
    10. '  ' → logprob: -15.72411060333252

Token 79: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759434103965759
    2. ' n' → logprob: -0.8259434103965759
    3. '	n' → logprob: -12.575942993164062
    4. ' ' → logprob: -15.325942993164062
    5. '   ' → logprob: -16.325942993164062
    6. ' [' → logprob: -16.700942993164062
    7. '[' → logprob: -16.950942993164062
    8. '    ' → logprob: -17.200942993164062
    9. '[n' → logprob: -17.200942993164062
    10. '_n' → logprob: -17.325942993164062

Token 80: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002669384120963514
    2. 'self' → logprob: -8.875267028808594
    3. '
' → logprob: -9.625267028808594
    4. '<|end|>' → logprob: -10.250267028808594
    5. ',' → logprob: -11.625267028808594
    6. '<|end|>' → logprob: -12.125267028808594
    7. '   ' → logprob: -13.000267028808594
    8. ' self' → logprob: -13.125267028808594
    9. ')' → logprob: -13.500267028808594
    10. ';' → logprob: -14.000267028808594

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013408389640972018
    2. 'self' → logprob: -6.626340866088867
    3. ' self' → logprob: -11.501340866088867
    4. '   ' → logprob: -12.751340866088867
    5. ',' → logprob: -13.876340866088867
    6. '	self' → logprob: -14.626340866088867
    7. '           ' → logprob: -15.626340866088867
    8. ',self' → logprob: -15.751340866088867
    9. '```' → logprob: -16.376340866088867
    10. '	' → logprob: -16.751340866088867

Token 82: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002385280095040798
    2. ' self' → logprob: -6.252385139465332
    3. '       ' → logprob: -7.752385139465332
    4. '   ' → logprob: -10.627385139465332
    5. '
' → logprob: -13.877385139465332
    6. '	self' → logprob: -14.627385139465332
    7. '        
' → logprob: -15.252385139465332
    8. ' ' → logprob: -15.377385139465332
    9. 's' → logprob: -15.877385139465332
    10. '           ' → logprob: -16.00238609313965

Token 83: '.parents' (ID: 168761)
  Prédit: '.parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parents' → logprob: -5.5027299822540954e-05
    2. '.' → logprob: -10.625055313110352
    3. '.parent' → logprob: -10.750055313110352
    4. 'parents' → logprob: -12.000055313110352
    5. '.par' → logprob: -13.750055313110352
    6. ' .' → logprob: -14.000055313110352
    7. '.p' → logprob: -14.625055313110352
    8. '.players' → logprob: -16.00005531311035
    9. '.children' → logprob: -16.37505531311035
    10. '.pr' → logprob: -16.75005531311035

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0485965758562088
    2. '=' → logprob: -3.0485966205596924
    3. '[:]' → logprob: -12.298596382141113
    4. '[' → logprob: -13.298596382141113
    5. ' ' → logprob: -13.923596382141113
    6. ' =[' → logprob: -14.298596382141113
    7. ')' → logprob: -15.298596382141113
    8. '   ' → logprob: -15.923596382141113
    9. '=[' → logprob: -15.923596382141113
    10. '	' → logprob: -16.04859733581543

Token 85: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.004876619670540094
    2. ' [-' → logprob: -5.504876613616943
    3. 'list' → logprob: -7.629876613616943
    4. '[' → logprob: -8.379877090454102
    5. ' list' → logprob: -9.879877090454102
    6. ' [' → logprob: -11.004877090454102
    7. '[list' → logprob: -11.254877090454102
    8. '[n' → logprob: -14.379877090454102
    9. '[:]' → logprob: -14.379877090454102
    10. ' ' → logprob: -15.879877090454102

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '１' → logprob: -17.000001907348633
    4. 's' → logprob: -18.625001907348633
    5. '

' → logprob: -18.812501907348633
    6. 'ones' → logprob: -19.312501907348633
    7. '   ' → logprob: -19.562501907348633
    8. '-' → logprob: -19.687501907348633
    9. '```' → logprob: -19.687501907348633
    10. '  ' → logprob: -19.812501907348633

Token 87: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01789764314889908
    2. ' for' → logprob: -4.392897605895996
    3. ']*' → logprob: -5.642897605895996
    4. ' ]' → logprob: -6.392897605895996
    5. 'for' → logprob: -9.017897605895996
    6. ']*(' → logprob: -11.142897605895996
    7. ' ' → logprob: -11.267897605895996
    8. ')' → logprob: -12.267897605895996
    9. ',' → logprob: -13.517897605895996
    10. '	for' → logprob: -14.142897605895996

Token 88: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2941341698169708
    2. ' *' → logprob: -1.5441341400146484
    3. ' for' → logprob: -4.044134140014648
    4. ']' → logprob: -4.794134140014648
    5. '[:]' → logprob: -5.294134140014648
    6. '[' → logprob: -5.419134140014648
    7. ' ' → logprob: -6.169134140014648
    8. '*n' → logprob: -6.294134140014648
    9. ')' → logprob: -6.919134140014648
    10. ']*' → logprob: -7.669134140014648

Token 89: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011049000546336174
    2. ' n' → logprob: -4.511048793792725
    3. '	n' → logprob: -14.136049270629883
    4. '(n' → logprob: -15.011049270629883
    5. 'self' → logprob: -16.511049270629883
    6. ')n' → logprob: -17.886049270629883
    7. '   ' → logprob: -18.511049270629883
    8. ' self' → logprob: -19.011049270629883
    9. ' (' → logprob: -19.511049270629883
    10. '(' → logprob: -19.511049270629883

Token 90: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020306650549173355
    2. '<|end|>' → logprob: -4.020306587219238
    3. '   ' → logprob: -6.645306587219238
    4. '<|end|>' → logprob: -7.770306587219238
    5. '    
' → logprob: -8.645306587219238
    6. '

' → logprob: -8.895306587219238
    7. '```' → logprob: -10.520306587219238
    8. '
' → logprob: -10.895306587219238
    9. '  
' → logprob: -11.020306587219238
    10. ' 
' → logprob: -11.520306587219238

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06469898670911789
    2. '   ' → logprob: -2.9396989345550537
    3. '<|end|>' → logprob: -4.814699172973633
    4. '    
' → logprob: -7.064699172973633
    5. '<|end|>' → logprob: -7.814699172973633
    6. 'def' → logprob: -8.564699172973633
    7. '

' → logprob: -9.564699172973633
    8. '```' → logprob: -10.314699172973633
    9. '
' → logprob: -11.314699172973633
    10. ' def' → logprob: -11.314699172973633

Token 92: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.041119564324617386
    2. '   ' → logprob: -3.2911195755004883
    3. ' def' → logprob: -5.791119575500488
    4. '	def' → logprob: -11.291119575500488
    5. ' ' → logprob: -12.291119575500488
    6. '
' → logprob: -14.666119575500488
    7. '  ' → logprob: -14.666119575500488
    8. '    
' → logprob: -15.166119575500488
    9. '    ' → logprob: -15.291119575500488
    10. '       ' → logprob: -15.666119575500488

Token 93: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.02986919693648815
    2. 'find' → logprob: -3.5298690795898438
    3. ' root' → logprob: -9.779869079589844
    4. ' ' → logprob: -10.779869079589844
    5. ' fin' → logprob: -11.279869079589844
    6. 'f' → logprob: -11.654869079589844
    7. '_find' → logprob: -12.154869079589844
    8. 'root' → logprob: -12.529869079589844
    9. 'fin' → logprob: -12.779869079589844
    10. '	find' → logprob: -12.904869079589844

Token 94: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.34871917963027954
    2. '(' → logprob: -1.2237191200256348
    3. '(s' → logprob: -9.098719596862793
    4. 'self' → logprob: -9.348719596862793
    5. ' (' → logprob: -9.973719596862793
    6. '(
' → logprob: -12.223719596862793
    7. '_self' → logprob: -12.473719596862793
    8. '(sel' → logprob: -12.598719596862793
    9. '(x' → logprob: -12.973719596862793
    10. '_' → logprob: -12.973719596862793

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00534736318513751
    2. 'self' → logprob: -5.88034725189209
    3. '(self' → logprob: -6.38034725189209
    4. ' ,' → logprob: -7.88034725189209
    5. ')' → logprob: -8.88034725189209
    6. '_,' → logprob: -9.00534725189209
    7. '(' → logprob: -9.75534725189209
    8. ',self' → logprob: -10.13034725189209
    9. '_self' → logprob: -10.63034725189209
    10. ' self' → logprob: -11.50534725189209

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.249780638725497e-05
    2. 'a' → logprob: -10.625032424926758
    3. ' x' → logprob: -11.750032424926758
    4. '   ' → logprob: -16.000032424926758
    5. 'self' → logprob: -17.125032424926758
    6. '```' → logprob: -18.750032424926758
    7. '	x' → logprob: -19.750032424926758
    8. ')x' → logprob: -20.125032424926758
    9. 'k' → logprob: -20.375032424926758
    10. 'y' → logprob: -20.375032424926758

Token 97: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03930694982409477
    2. ')' → logprob: -3.289306879043579
    3. ' ):' → logprob: -6.789307117462158
    4. ' )' → logprob: -9.414306640625
    5. ':' → logprob: -10.164306640625
    6. '):
' → logprob: -10.914306640625
    7. ' ' → logprob: -15.789306640625
    8. ' :' → logprob: -16.164306640625
    9. ')：' → logprob: -16.539306640625
    10. '):

' → logprob: -16.789306640625

Token 98: ' int' (ID: 677)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09133061021566391
    2. ' x' → logprob: -2.5913305282592773
    3. ')' → logprob: -4.466330528259277
    4. '):' → logprob: -8.216330528259277
    5. ')x' → logprob: -8.466330528259277
    6. ' )' → logprob: -8.591330528259277
    7. '):
' → logprob: -9.341330528259277
    8. '   ' → logprob: -9.591330528259277
    9. 'int' → logprob: -10.716330528259277
    10. ' ):' → logprob: -11.591330528259277

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5764864683151245
    2. '):' → logprob: -0.8264864683151245
    3. ' ):' → logprob: -8.326486587524414
    4. ' )' → logprob: -8.826486587524414
    5. '):
' → logprob: -8.826486587524414
    6. ')->' → logprob: -11.826486587524414
    7. '):
' → logprob: -13.326486587524414
    8. '   ' → logprob: -13.826486587524414
    9. ':' → logprob: -14.826486587524414
    10. ' ' → logprob: -15.576486587524414

Token 100: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004151887726038694
    2. '):' → logprob: -5.504151821136475
    3. ')' → logprob: -10.504152297973633
    4. ' :' → logprob: -11.004152297973633
    5. ':
' → logprob: -11.004152297973633
    6. ':return' → logprob: -12.379152297973633
    7. '():' → logprob: -12.629152297973633
    8. '):
' → logprob: -13.379152297973633
    9. ':def' → logprob: -14.129152297973633
    10. '}:' → logprob: -14.629152297973633

Token 101: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006715728435665369
    2. ' int' → logprob: -5.006715774536133
    3. '	int' → logprob: -16.381715774536133
    4. '[int' → logprob: -16.381715774536133
    5. ' ' → logprob: -16.881715774536133
    6. '(int' → logprob: -17.256715774536133
    7. '   ' → logprob: -17.756715774536133
    8. ':int' → logprob: -17.756715774536133
    9. '<int' → logprob: -18.881715774536133
    10. '  ' → logprob: -19.131715774536133

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006152869667857885
    2. ':
' → logprob: -5.131153106689453
    3. '):' → logprob: -8.631153106689453
    4. '):
' → logprob: -10.631153106689453
    5. '       ' → logprob: -11.756153106689453
    6. ' :' → logprob: -12.631153106689453
    7. ')' → logprob: -12.756153106689453
    8. '   ' → logprob: -13.506153106689453
    9. ':return' → logprob: -13.506153106689453
    10. ':def' → logprob: -13.756153106689453

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010152560658752918
    2. '
' → logprob: -4.635152339935303
    3. ' 
' → logprob: -8.760152816772461
    4. '   ' → logprob: -9.510152816772461
    5. '        
' → logprob: -10.010152816772461
    6. '    
' → logprob: -10.635152816772461
    7. '  
' → logprob: -10.635152816772461
    8. ' while' → logprob: -11.010152816772461
    9. '<|end|>' → logprob: -11.510152816772461
    10. ' if' → logprob: -11.510152816772461

Token 104: ' px' (ID: 27003)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03411644697189331
    2. '       ' → logprob: -3.784116506576538
    3. ' if' → logprob: -4.534116268157959
    4. 'while' → logprob: -9.784116744995117
    5. '   ' → logprob: -11.409116744995117
    6. ' while' → logprob: -12.534116744995117
    7. '	if' → logprob: -12.659116744995117
    8. '
' → logprob: -14.784116744995117
    9. 'self' → logprob: -15.034116744995117
    10. ' ' → logprob: -15.409116744995117

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048640843480825424
    2. '=' → logprob: -3.048640727996826
    3. '=x' → logprob: -11.548641204833984
    4. ' ' → logprob: -11.923641204833984
    5. ' ==' → logprob: -11.923641204833984
    6. ',' → logprob: -11.923641204833984
    7. 'x' → logprob: -12.423641204833984
    8. '=self' → logprob: -12.423641204833984
    9. '   ' → logprob: -12.673641204833984
    10. 'if' → logprob: -13.298641204833984

Token 106: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16290900111198425
    2. ' self' → logprob: -1.9129090309143066
    3. 'x' → logprob: -6.037909030914307
    4. ' x' → logprob: -8.162908554077148
    5. '       ' → logprob: -12.537908554077148
    6. '(self' → logprob: -13.037908554077148
    7. ' ' → logprob: -13.412908554077148
    8. '   ' → logprob: -13.537908554077148
    9. '	self' → logprob: -14.912908554077148
    10. '    ' → logprob: -15.912908554077148

Token 107: '.parents' (ID: 168761)
  Prédit: '.parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parents' → logprob: -7.76759916334413e-05
    2. '.find' → logprob: -10.250077247619629
    3. 'parents' → logprob: -11.375077247619629
    4. '.' → logprob: -11.375077247619629
    5. '.parent' → logprob: -11.500077247619629
    6. '.par' → logprob: -12.250077247619629
    7. ' .' → logprob: -13.500077247619629
    8. '.p' → logprob: -14.000077247619629
    9. '.x' → logprob: -14.250077247619629
    10. 'Parents' → logprob: -15.375077247619629

Token 108: '
' (ID: 198)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -12.500004768371582
    3. 'x' → logprob: -14.625004768371582
    4. '```' → logprob: -17.375003814697266
    5. '   ' → logprob: -17.625003814697266
    6. ' [' → logprob: -17.875003814697266
    7. '       ' → logprob: -17.875003814697266
    8. ' x' → logprob: -17.875003814697266
    9. '(x' → logprob: -18.125003814697266
    10. '[self' → logprob: -18.500003814697266

Token 109: '       ' (ID: 309)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.016909239813685417
    2. '       ' → logprob: -4.766909122467041
    3. '
' → logprob: -5.141909122467041
    4. '[' → logprob: -7.141909122467041
    5. 'x' → logprob: -7.516909122467041
    6. ' if' → logprob: -8.0169095993042
    7. 'if' → logprob: -8.5169095993042
    8. ',' → logprob: -9.0169095993042
    9. '        
' → logprob: -9.1419095993042
    10. 'def' → logprob: -9.7669095993042

Token 110: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15910311043262482
    2. 'while' (adapté à ' while') → logprob: -2.1591031551361084
    3. ' if' → logprob: -4.034102916717529
    4. '       ' → logprob: -4.909102916717529
    5. ' while' → logprob: -5.034102916717529
    6. '   ' → logprob: -10.034103393554688
    7. '
' → logprob: -11.534103393554688
    8. '	while' → logprob: -12.409103393554688
    9. '        
' → logprob: -12.784103393554688
    10. '	if' → logprob: -12.909103393554688

Token 111: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.004951951093971729
    2. ' px' → logprob: -5.6299519538879395
    3. 'x' → logprob: -6.6299519538879395
    4. '(px' → logprob: -11.004951477050781
    5. ' x' → logprob: -11.629951477050781
    6. 'p' → logprob: -13.629951477050781
    7. 'py' → logprob: -13.754951477050781
    8. '   ' → logprob: -14.004951477050781
    9. ' ' → logprob: -14.379951477050781
    10. ':px' → logprob: -14.879951477050781

Token 112: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00018792471382766962
    2. '[' → logprob: -8.625187873840332
    3. 'x' → logprob: -12.125187873840332
    4. ' [' → logprob: -14.125187873840332
    5. '[p' → logprob: -14.125187873840332
    6. '[
' → logprob: -14.625187873840332
    7. '   ' → logprob: -15.375187873840332
    8. '[self' → logprob: -15.875187873840332
    9. '[int' → logprob: -16.12518882751465
    10. '(x' → logprob: -16.25018882751465

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13650156557559967
    2. ']<' → logprob: -2.6365015506744385
    3. '<' → logprob: -2.8865015506744385
    4. ' <' → logprob: -9.26150131225586
    5. ']>=' → logprob: -9.38650131225586
    6. '[' → logprob: -11.38650131225586
    7. ']!=' → logprob: -11.76150131225586
    8. 'x' → logprob: -12.51150131225586
    9. ')' → logprob: -13.01150131225586
    10. '0' → logprob: -13.01150131225586

Token 114: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.022879108786582947
    2. ' <' → logprob: -3.897879123687744
    3. '>=' → logprob: -6.147879123687744
    4. '[' → logprob: -9.522878646850586
    5. '0' → logprob: -10.022878646850586
    6. ' >=' → logprob: -10.647878646850586
    7. '>' → logprob: -11.022878646850586
    8. 'x' → logprob: -11.897878646850586
    9. '	' → logprob: -12.272878646850586
    10. ' ' → logprob: -12.522878646850586

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '  ' → logprob: -15.750296592712402
    4. '   ' → logprob: -15.875296592712402
    5. '۰' → logprob: -19.000295639038086
    6. '０' → logprob: -19.250295639038086
    7. ' ' → logprob: -19.375295639038086
    8. '00' → logprob: -19.875295639038086
    9. '    ' → logprob: -20.375295639038086
    10. '```' → logprob: -20.500295639038086

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '  ' → logprob: -21.00000762939453
    4. '   ' → logprob: -21.12500762939453
    5. '00' → logprob: -21.62500762939453
    6. '۰' → logprob: -21.75000762939453
    7. '000' → logprob: -21.87500762939453
    8. '1' → logprob: -21.87500762939453
    9. '```' → logprob: -22.37500762939453
    10. ' ' → logprob: -22.50000762939453

Token 117: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14355598390102386
    2. ':' → logprob: -2.0185558795928955
    3. '           ' → logprob: -8.143555641174316
    4. ' and' → logprob: -8.268555641174316
    5. '       ' → logprob: -9.143555641174316
    6. ':x' → logprob: -9.768555641174316
    7. ' x' → logprob: -9.893555641174316
    8. 'x' → logprob: -10.018555641174316
    9. ' :
' → logprob: -10.643555641174316
    10. 'and' → logprob: -11.518555641174316

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30080682039260864
    2. ' x' → logprob: -1.9258067607879639
    3. 'x' → logprob: -2.175806760787964
    4. '   ' → logprob: -8.425806999206543
    5. '       ' → logprob: -8.425806999206543
    6. '
' → logprob: -10.050806999206543
    7. '	x' → logprob: -12.300806999206543
    8. '               ' → logprob: -12.550806999206543
    9. '            
' → logprob: -12.800806999206543
    10. '	       ' → logprob: -12.800806999206543

Token 119: ' if' (ID: 538)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07900524139404297
    2. ' x' → logprob: -2.579005241394043
    3. '           ' → logprob: -9.954005241394043
    4. '   ' → logprob: -9.954005241394043
    5. '	x' → logprob: -11.454005241394043
    6. '       ' → logprob: -12.079005241394043
    7. '
' → logprob: -12.954005241394043
    8. ' ' → logprob: -14.079005241394043
    9. '  ' → logprob: -15.329005241394043
    10. '               ' → logprob: -15.829005241394043

Token 120: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.003693539882078767
    2. ' px' → logprob: -6.128693580627441
    3. '(px' → logprob: -7.378693580627441
    4. 'x' → logprob: -7.628693580627441
    5. '           ' → logprob: -8.253693580627441
    6. '   ' → logprob: -10.378693580627441
    7. '       ' → logprob: -10.628693580627441
    8. '  ' → logprob: -10.878693580627441
    9. '               ' → logprob: -11.503693580627441
    10. '                   ' → logprob: -12.253693580627441

Token 121: '[' (ID: 58)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.030559567734599113
    2. 'x' → logprob: -3.780559539794922
    3. '[' → logprob: -5.030559539794922
    4. '   ' → logprob: -8.655559539794922
    5. '[p' → logprob: -9.030559539794922
    6. 'px' → logprob: -9.405559539794922
    7. '[parent' → logprob: -9.780559539794922
    8. ' [' → logprob: -9.905559539794922
    9. '           ' → logprob: -10.155559539794922
    10. '[self' → logprob: -10.155559539794922

Token 122: 'px' (ID: 3207)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07503187656402588
    2. 'px' → logprob: -2.7000317573547363
    3. ' x' → logprob: -6.825031757354736
    4. '(px' → logprob: -6.825031757354736
    5. ' px' → logprob: -7.325031757354736
    6. ']' → logprob: -7.825031757354736
    7. '   ' → logprob: -7.825031757354736
    8. '(x' → logprob: -8.075032234191895
    9. '[' → logprob: -8.575032234191895
    10. '[x' → logprob: -8.950032234191895

Token 123: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.3137715756893158
    2. 'x' → logprob: -1.3137716054916382
    3. '[' → logprob: -8.18877124786377
    4. ' x' → logprob: -9.06377124786377
    5. ']' → logprob: -10.56377124786377
    6. ')x' → logprob: -10.68877124786377
    7. '   ' → logprob: -11.43877124786377
    8. '][' → logprob: -11.93877124786377
    9. '[
' → logprob: -11.93877124786377
    10. '(x' → logprob: -12.06377124786377

Token 124: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038609972689300776
    2. '[x' → logprob: -6.378860950469971
    3. ']<' → logprob: -6.753860950469971
    4. 'x' → logprob: -7.753860950469971
    5. ']>=' → logprob: -7.878860950469971
    6. ']==' → logprob: -9.253861427307129
    7. '[' → logprob: -9.878861427307129
    8. '(x' → logprob: -11.753861427307129
    9. ' ]' → logprob: -12.128861427307129
    10. ']!=' → logprob: -12.378861427307129

Token 125: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.005689037963747978
    2. '>=' → logprob: -5.3806891441345215
    3. ' <' → logprob: -6.8806891441345215
    4. '<x' → logprob: -10.630688667297363
    5. ' >=' → logprob: -11.505688667297363
    6. 'x' → logprob: -12.630688667297363
    7. '>' → logprob: -13.880688667297363
    8. '==' → logprob: -15.005688667297363
    9. '[' → logprob: -15.255688667297363
    10. '!=' → logprob: -15.630688667297363

Token 126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0336492694914341
    2. ' ' → logprob: -3.408649206161499
    3. '<|end|>' → logprob: -13.033649444580078
    4. '   ' → logprob: -14.658649444580078
    5. ' ' → logprob: -15.158649444580078
    6. '  ' → logprob: -15.283649444580078
    7. '<|end|>' → logprob: -16.158649444580078
    8. '۰' → logprob: -16.596149444580078
    9. '=' → logprob: -16.721149444580078
    10. '```' → logprob: -16.846149444580078

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000912774819880724
    2. ' ' → logprob: -7.000912666320801
    3. '<|end|>' → logprob: -14.0009126663208
    4. '۰' → logprob: -16.000913619995117
    5. '０' → logprob: -16.750913619995117
    6. '  ' → logprob: -17.063413619995117
    7. '00' → logprob: -17.125913619995117
    8. '
' → logprob: -17.625913619995117
    9. ')' → logprob: -17.625913619995117
    10. '<|end|>' → logprob: -17.688413619995117

Token 128: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38726502656936646
    2. ':
' → logprob: -1.2622649669647217
    3. ':' → logprob: -4.137265205383301
    4. ' x' → logprob: -4.137265205383301
    5. 'x' → logprob: -5.387265205383301
    6. ':x' → logprob: -7.637265205383301
    7. ' and' → logprob: -8.6372652053833
    8. '):
' → logprob: -8.7622652053833
    9. ',x' → logprob: -9.0122652053833
    10. ',' → logprob: -9.1372652053833

Token 129: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04650762304663658
    2. ' x' → logprob: -3.6715075969696045
    3. 'x' → logprob: -3.9215075969696045
    4. '           ' → logprob: -8.921507835388184
    5. ' px' → logprob: -11.671507835388184
    6. '	x' → logprob: -11.796507835388184
    7. '
' → logprob: -12.046507835388184
    8. '              ' → logprob: -12.171507835388184
    9. '   ' → logprob: -12.296507835388184
    10. '                   ' → logprob: -12.421507835388184

Token 130: ' px' (ID: 27003)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10869831591844559
    2. 'px' (adapté à ' px') → logprob: -2.3586983680725098
    3. ' px' → logprob: -5.48369836807251
    4. '               ' → logprob: -5.85869836807251
    5. ' x' → logprob: -6.60869836807251
    6. '           ' → logprob: -9.858697891235352
    7. '                   ' → logprob: -10.483697891235352
    8. '(px' → logprob: -11.858697891235352
    9. '   ' → logprob: -12.608697891235352
    10. ':px' → logprob: -13.108697891235352

Token 131: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.829823102336377e-05
    2. 'x' → logprob: -9.62509822845459
    3. '[' → logprob: -10.50009822845459
    4. ',x' → logprob: -13.75009822845459
    5. ' =' → logprob: -14.12509822845459
    6. ' x' → logprob: -14.50009822845459
    7. '=x' → logprob: -14.50009822845459
    8. '=' → logprob: -14.75009822845459
    9. ']' → logprob: -15.50009822845459
    10. '               ' → logprob: -15.50009822845459

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49034857749938965
    2. '=' → logprob: -0.9903485774993896
    3. ' =' → logprob: -4.240348815917969
    4. ']=' → logprob: -6.365348815917969
    5. ' ]' → logprob: -11.865348815917969
    6. '],' → logprob: -12.490348815917969
    7. ',' → logprob: -12.740348815917969
    8. 'x' → logprob: -13.240348815917969
    9. '=x' → logprob: -14.115348815917969
    10. '[' → logprob: -15.240348815917969

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804229199886322
    2. ' =' → logprob: -3.2880423069000244
    3. ',' → logprob: -14.413042068481445
    4. ']=' → logprob: -16.038042068481445
    5. '=x' → logprob: -16.663042068481445
    6. ']' → logprob: -16.788042068481445
    7. '=

' → logprob: -17.413042068481445
    8. '=
' → logprob: -17.538042068481445
    9. '＝' → logprob: -17.788042068481445
    10. '.=' → logprob: -18.163042068481445

Token 134: ' px' (ID: 27003)
  Prédit: ' px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.16025489568710327
    2. 'px' → logprob: -1.910254955291748
    3. '(px' → logprob: -10.66025447845459
    4. ' py' → logprob: -12.66025447845459
    5. ':px' → logprob: -13.16025447845459
    6. 'py' → logprob: -14.03525447845459
    7. '_px' → logprob: -15.16025447845459
    8. ' ' → logprob: -15.41025447845459
    9. '    ' → logprob: -15.53525447845459
    10. ' ' → logprob: -16.160255432128906

Token 135: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.978233846486546e-05
    2. 'px' → logprob: -10.125049591064453
    3. '[x' → logprob: -11.750049591064453
    4. '(px' → logprob: -14.125049591064453
    5. 'x' → logprob: -14.250049591064453
    6. ':px' → logprob: -15.125049591064453
    7. '[p' → logprob: -16.625049591064453
    8. '[parent' → logprob: -17.000049591064453
    9. ' [' → logprob: -17.125049591064453
    10. '_px' → logprob: -17.250049591064453

Token 136: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.14155876636505127
    2. '[' → logprob: -2.1415586471557617
    3. 'x' → logprob: -4.266558647155762
    4. '[x' → logprob: -7.891558647155762
    5. '(px' → logprob: -9.516558647155762
    6. ' px' → logprob: -11.266558647155762
    7. ':px' → logprob: -11.766558647155762
    8. 'xx' → logprob: -12.016558647155762
    9. '(x' → logprob: -12.141558647155762
    10. ' [' → logprob: -12.766558647155762

Token 137: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0005767432739958167
    2. 'x' → logprob: -7.625576972961426
    3. '[' → logprob: -9.375576972961426
    4. ' x' → logprob: -13.500576972961426
    5. '	x' → logprob: -14.250576972961426
    6. '[
' → logprob: -14.625576972961426
    7. '(x' → logprob: -15.000576972961426
    8. ']' → logprob: -15.125576972961426
    9. ' [' → logprob: -15.375576972961426
    10. '{x' → logprob: -15.375576972961426

Token 138: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009331249631941319
    2. '[x' → logprob: -4.884331226348877
    3. 'x' → logprob: -6.384331226348877
    4. '])' → logprob: -11.509331703186035
    5. ' ]' → logprob: -11.509331703186035
    6. ']]' → logprob: -12.134331703186035
    7. '(x' → logprob: -12.759331703186035
    8. ']
' → logprob: -13.134331703186035
    9. '[' → logprob: -13.134331703186035
    10. '       ' → logprob: -14.009331703186035

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025108797126449645
    2. '               ' → logprob: -8.875250816345215
    3. ' x' → logprob: -9.500250816345215
    4. 'x' → logprob: -10.500250816345215
    5. '       ' → logprob: -13.000250816345215
    6. '   ' → logprob: -13.125250816345215
    7. '            
' → logprob: -13.500250816345215
    8. '
' → logprob: -14.250250816345215
    9. '          ' → logprob: -14.375250816345215
    10. '                   ' → logprob: -14.500250816345215

Token 140: ' x' (ID: 1215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4821617603302002
    2. 'x' (adapté à ' x') → logprob: -1.2321617603302002
    3. '       ' → logprob: -3.1071617603302
    4. ' x' → logprob: -3.2321617603302
    5. '   ' → logprob: -5.107161521911621
    6. '               ' → logprob: -7.482161521911621
    7. '	x' → logprob: -10.482161521911621
    8. '
' → logprob: -11.607161521911621
    9. ' ' → logprob: -12.107161521911621
    10. 's' → logprob: -12.607161521911621

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740811586380005
    2. '=' → logprob: -0.9740811586380005
    3. ',' → logprob: -12.724081039428711
    4. ' ' → logprob: -14.474081039428711
    5. ')' → logprob: -15.099081039428711
    6. ' =)' → logprob: -16.34908103942871
    7. '=x' → logprob: -17.09908103942871
    8. '.=' → logprob: -17.34908103942871
    9. '＝' → logprob: -17.47408103942871
    10. '	' → logprob: -17.47408103942871

Token 142: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.3869680166244507
    2. ' px' → logprob: -1.1369680166244507
    3. '(px' → logprob: -10.386967658996582
    4. '_px' → logprob: -10.636967658996582
    5. 'py' → logprob: -10.761967658996582
    6. ' py' → logprob: -11.636967658996582
    7. 'x' → logprob: -12.136967658996582
    8. ':px' → logprob: -12.886967658996582
    9. ' ' → logprob: -13.136967658996582
    10. '   ' → logprob: -14.761967658996582

Token 143: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.578184497309849e-05
    2. 'x' → logprob: -9.500085830688477
    3. '[' → logprob: -11.500085830688477
    4. '(x' → logprob: -14.875085830688477
    5. '[
' → logprob: -16.125085830688477
    6. '```' → logprob: -16.250085830688477
    7. ' [' → logprob: -16.500085830688477
    8. ' x' → logprob: -17.125085830688477
    9. '	x' → logprob: -18.625085830688477
    10. ']' → logprob: -18.875085830688477

Token 144: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47576966881752014
    2. ')' → logprob: -0.9757696390151978
    3. ')
' → logprob: -6.975769519805908
    4. ']
' → logprob: -7.475769519805908
    5. '       ' → logprob: -9.850769996643066
    6. '}' → logprob: -10.100769996643066
    7. 'return' → logprob: -10.600769996643066
    8. '）' → logprob: -11.350769996643066
    9. ')return' → logprob: -11.350769996643066
    10. '[' → logprob: -11.600769996643066

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009593431022949517
    2. ' return' → logprob: -7.625959396362305
    3. 'return' → logprob: -8.000959396362305
    4. '
' → logprob: -9.375959396362305
    5. '<|end|>' → logprob: -11.375959396362305
    6. '   ' → logprob: -11.625959396362305
    7. '	' → logprob: -11.750959396362305
    8. ',' → logprob: -12.375959396362305
    9. '	return' → logprob: -12.375959396362305
    10. '        
' → logprob: -12.875959396362305

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28179609775543213
    2. '       ' → logprob: -1.5317960977554321
    3. ' return' → logprob: -3.5317959785461426
    4. '   ' → logprob: -8.9067964553833
    5. '	return' → logprob: -10.4067964553833
    6. ':return' → logprob: -13.0317964553833
    7. 'eturn' → logprob: -13.5317964553833
    8. '{return' → logprob: -13.7817964553833
    9. ' ' → logprob: -14.1567964553833
    10. '	' → logprob: -14.9067964553833

Token 147: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4740775227546692
    2. 'x' → logprob: -0.9740775227546692
    3. ' ' → logprob: -15.349077224731445
    4. '	x' → logprob: -15.599077224731445
    5. ' ' → logprob: -16.724077224731445
    6. '(x' → logprob: -17.349077224731445
    7. '0' → logprob: -17.724077224731445
    8. ')x' → logprob: -18.536577224731445
    9. '_x' → logprob: -19.786577224731445
    10. '{x' → logprob: -19.786577224731445

Token 148: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14567330479621887
    2. '<|end|>' → logprob: -2.3956732749938965
    3. ')' → logprob: -3.6456732749938965
    4. ' def' → logprob: -5.0206732749938965
    5. 'def' (adapté à ' def') → logprob: -5.3956732749938965
    6. ' ' → logprob: -6.1456732749938965
    7. '
' → logprob: -7.0206732749938965
    8. ' 
' → logprob: -7.6456732749938965
    9. '  ' → logprob: -7.7706732749938965
    10. '    
' → logprob: -7.7706732749938965

Token 151: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.08448184281587601
    2. ' union' → logprob: -2.584481954574585
    3. ' unite' → logprob: -5.834481716156006
    4. 'un' → logprob: -5.959481716156006
    5. 'merge' → logprob: -10.709482192993164
    6. 'size' → logprob: -11.584482192993164
    7. '_union' → logprob: -11.709482192993164
    8. ' unify' → logprob: -11.959482192993164
    9. 'unit' → logprob: -12.084482192993164
    10. 'uni' → logprob: -12.834482192993164

Token 152: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002969703928101808
    2. '(' → logprob: -8.125296592712402
    3. ' (' → logprob: -14.250296592712402
    4. 'self' → logprob: -16.00029754638672
    5. '(
' → logprob: -16.00029754638672
    6. ',' → logprob: -17.12529754638672
    7. '(s' → logprob: -17.62529754638672
    8. ')' → logprob: -17.62529754638672
    9. ')(' → logprob: -18.00029754638672
    10. ',self' → logprob: -18.12529754638672

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021214008331298828
    2. 'self' → logprob: -4.521214008331299
    3. '(self' → logprob: -4.646214008331299
    4. ')' → logprob: -8.27121353149414
    5. ' ,' → logprob: -9.02121353149414
    6. ' self' → logprob: -9.77121353149414
    7. ',self' → logprob: -10.52121353149414
    8. 's' → logprob: -11.14621353149414
    9. ' (' → logprob: -11.27121353149414
    10. '(' → logprob: -11.77121353149414

Token 154: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023320479318499565
    2. ' x' → logprob: -4.02332067489624
    3. 'a' → logprob: -5.27332067489624
    4. ' a' → logprob: -10.523320198059082
    5. 'self' → logprob: -13.148320198059082
    6. '   ' → logprob: -14.273320198059082
    7. ')x' → logprob: -14.648320198059082
    8. '	x' → logprob: -14.898320198059082
    9. ' ' → logprob: -15.523320198059082
    10. 'u' → logprob: -16.7733211517334

Token 155: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006297559011727571
    2. ' ,' → logprob: -7.375629901885986
    3. ':' → logprob: -13.250629425048828
    4. ',x' → logprob: -14.125629425048828
    5. '   ' → logprob: -15.750629425048828
    6. ',int' → logprob: -16.250629425048828
    7. ',y' → logprob: -16.250629425048828
    8. ' ' → logprob: -16.625629425048828
    9. '‌,' → logprob: -16.875629425048828
    10. '1' → logprob: -17.125629425048828

Token 156: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4290239214897156
    2. ' int' → logprob: -1.0540239810943604
    3. ' y' → logprob: -9.054023742675781
    4. ':int' → logprob: -9.554023742675781
    5. ',int' → logprob: -9.929023742675781
    6. 'y' → logprob: -10.429023742675781
    7. '=int' → logprob: -11.429023742675781
    8. '(int' → logprob: -11.554023742675781
    9. ' ' → logprob: -11.554023742675781
    10. '[int' → logprob: -12.054023742675781

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7848862373502925e-05
    2. ' ,' → logprob: -10.500027656555176
    3. ',int' → logprob: -15.875027656555176
    4. '   ' → logprob: -16.500028610229492
    5. '‌,' → logprob: -17.625028610229492
    6. ')' → logprob: -18.125028610229492
    7. ',
' → logprob: -19.125028610229492
    8. '`,' → logprob: -19.375028610229492
    9. '_,' → logprob: -20.250028610229492
    10. ' ' → logprob: -20.500028610229492

Token 158: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132627606391907
    2. 'y' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.438262939453125
    4. '	y' → logprob: -14.813262939453125
    5. '   ' → logprob: -16.188262939453125
    6. ' ' → logprob: -16.688262939453125
    7. '  ' → logprob: -17.938262939453125
    8. '    ' → logprob: -18.813262939453125
    9. ')' → logprob: -19.188262939453125
    10. 'x' → logprob: -19.313262939453125

Token 159: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3878289759159088
    2. ')' → logprob: -1.3878289461135864
    3. ':' → logprob: -2.637829065322876
    4. ' ):' → logprob: -8.387828826904297
    5. '):
' → logprob: -9.512828826904297
    6. ' )' → logprob: -10.762828826904297
    7. '   ' → logprob: -11.762828826904297
    8. ':int' → logprob: -13.512828826904297
    9. ' ' → logprob: -13.887828826904297
    10. ' :' → logprob: -14.012828826904297

Token 160: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014172564260661602
    2. ' int' → logprob: -4.264172554016113
    3. ')' → logprob: -11.889172554016113
    4. ':int' → logprob: -13.889172554016113
    5. '[int' → logprob: -15.014172554016113
    6. '(int' → logprob: -15.514172554016113
    7. 'x' → logprob: -15.514172554016113
    8. ' ' → logprob: -15.889172554016113
    9. '   ' → logprob: -15.889172554016113
    10. ' )' → logprob: -16.26417350769043

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.881560041918419e-05
    2. '):' → logprob: -10.625039100646973
    3. ' )' → logprob: -11.875039100646973
    4. '):
' → logprob: -11.875039100646973
    5. ')->' → logprob: -15.750039100646973
    6. '）' → logprob: -16.625038146972656
    7. '`)' → logprob: -16.875038146972656
    8. '):
' → logprob: -17.000038146972656
    9. ')
' → logprob: -17.000038146972656
    10. '   ' → logprob: -17.500038146972656

Token 162: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06488078087568283
    2. ')' → logprob: -2.814880847930908
    3. '):' → logprob: -6.439880847930908
    4. ' ->' → logprob: -7.189880847930908
    5. '->' → logprob: -7.689880847930908
    6. '   ' → logprob: -9.93988037109375
    7. ' :' → logprob: -10.43988037109375
    8. ')->' → logprob: -11.43988037109375
    9. ':
' → logprob: -13.18988037109375
    10. ':int' → logprob: -13.31488037109375

Token 163: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.31399184465408325
    2. ' bool' → logprob: -1.3139917850494385
    3. 'int' → logprob: -7.438992023468018
    4. ' int' → logprob: -9.31399154663086
    5. ' ' → logprob: -10.81399154663086
    6. '   ' → logprob: -11.68899154663086
    7. 'None' → logprob: -11.93899154663086
    8. ' None' → logprob: -12.18899154663086
    9. '	bool' → logprob: -12.68899154663086
    10. '  ' → logprob: -12.68899154663086

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013408389640972018
    2. ':
' → logprob: -6.626340866088867
    3. '):' → logprob: -11.751340866088867
    4. ' :' → logprob: -12.876340866088867
    5. ',' → logprob: -13.501340866088867
    6. '):
' → logprob: -13.751340866088867
    7. '       ' → logprob: -14.626340866088867
    8. '   ' → logprob: -14.751340866088867
    9. ':

' → logprob: -15.376340866088867
    10. ':
' → logprob: -15.751340866088867

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06910239905118942
    2. '<|end|>' → logprob: -3.5691022872924805
    3. ' x' → logprob: -4.3191022872924805
    4. ' ' → logprob: -4.8191022872924805
    5. '        ' → logprob: -5.0691022872924805
    6. '    ' → logprob: -5.8191022872924805
    7. 'x' → logprob: -5.8191022872924805
    8. ')' → logprob: -6.9441022872924805
    9. '   ' → logprob: -7.0691022872924805
    10. ',' → logprob: -7.5691022872924805

Token 166: ' px' (ID: 27003)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002493256703019142
    2. ' x' → logprob: -6.002493381500244
    3. '       ' → logprob: -11.127492904663086
    4. '   ' → logprob: -13.502492904663086
    5. 'px' (adapté à ' px') → logprob: -14.627492904663086
    6. 'rx' → logprob: -14.627492904663086
    7. 'root' → logprob: -15.127492904663086
    8. '	x' → logprob: -15.877492904663086
    9. '        
' → logprob: -16.002492904663086
    10. ''x' → logprob: -17.127492904663086

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5786947011947632
    2. '=' → logprob: -1.0786947011947632
    3. 'x' → logprob: -2.3286948204040527
    4. '_x' → logprob: -7.078694820404053
    5. ',' → logprob: -7.453694820404053
    6. '[x' → logprob: -8.078694343566895
    7. '=x' → logprob: -9.328694343566895
    8. ' ' → logprob: -10.953694343566895
    9. '   ' → logprob: -11.203694343566895
    10. '[' → logprob: -11.203694343566895

Token 168: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.505351095460355e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -16.25007438659668
    4. '[self' → logprob: -17.37507438659668
    5. '       ' → logprob: -18.00007438659668
    6. '   ' → logprob: -18.12507438659668
    7. '=self' → logprob: -18.12507438659668
    8. '	self' → logprob: -19.37507438659668
    9. ' ' → logprob: -20.12507438659668
    10. 's' → logprob: -20.25007438659668

Token 169: '.parents' (ID: 168761)
  Prédit: '.parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parents' → logprob: -0.0001805377542041242
    2. 'parents' → logprob: -8.6251802444458
    3. ' parents' → logprob: -14.3751802444458
    4. '.parent' → logprob: -15.0001802444458
    5. 'Parents' → logprob: -16.500181198120117
    6. ' .' → logprob: -16.750181198120117
    7. '.p' → logprob: -18.000181198120117
    8. '.' → logprob: -18.375181198120117
    9. '.par' → logprob: -18.750181198120117
    10. '.find' → logprob: -18.750181198120117

Token 170: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10997651517391205
    2. 'x' → logprob: -2.8599765300750732
    3. ' =' → logprob: -3.7349765300750732
    4. ' x' → logprob: -4.859976291656494
    5. '=' → logprob: -5.359976291656494
    6. '
' → logprob: -5.359976291656494
    7. '[x' → logprob: -6.234976291656494
    8. ',' → logprob: -6.484976291656494
    9. '[' → logprob: -7.609976291656494
    10. '        
' → logprob: -8.109976768493652

Token 171: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4932701885700226
    2. '       ' → logprob: -0.9932701587677002
    3. ' x' → logprob: -3.9932701587677
    4. '   ' → logprob: -8.368269920349121
    5. '	x' → logprob: -9.243269920349121
    6. 'root' → logprob: -9.368269920349121
    7. 'rx' → logprob: -9.743269920349121
    8. 'px' → logprob: -10.243269920349121
    9. '        
' → logprob: -11.868269920349121
    10. '        ' → logprob: -11.993269920349121

Token 172: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -6.73052782076411e-05
    2. '       ' → logprob: -9.750067710876465
    3. ' x' → logprob: -11.875067710876465
    4. 'rx' → logprob: -14.125067710876465
    5. 'root' → logprob: -15.000067710876465
    6. '   ' → logprob: -15.000067710876465
    7. '        
' → logprob: -15.500067710876465
    8. 'sx' → logprob: -16.12506675720215
    9. 's' → logprob: -16.37506675720215
    10. '	x' → logprob: -17.12506675720215

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38690683245658875
    2. '=' → logprob: -1.1369068622589111
    3. '=find' → logprob: -10.636906623840332
    4. '=self' → logprob: -11.761906623840332
    5. ',' → logprob: -13.261906623840332
    6. '=root' → logprob: -14.011906623840332
    7. 'root' → logprob: -14.511906623840332
    8. ' ' → logprob: -15.386906623840332
    9. '_root' → logprob: -15.761906623840332
    10. '＝' → logprob: -16.38690757751465

Token 174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04860350117087364
    2. ' self' → logprob: -3.0486035346984863
    3. '       ' → logprob: -12.048603057861328
    4. 'px' → logprob: -12.173603057861328
    5. '   ' → logprob: -13.423603057861328
    6. ' px' → logprob: -13.423603057861328
    7. '	self' → logprob: -14.048603057861328
    8. '(self' → logprob: -14.173603057861328
    9. '[self' → logprob: -16.298603057861328
    10. '
' → logprob: -16.548603057861328

Token 175: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0001242772996192798
    2. 'find' → logprob: -9.000123977661133
    3. '.' → logprob: -14.625123977661133
    4. '.union' → logprob: -15.375123977661133
    5. ' .' → logprob: -17.000123977661133
    6. 'union' → logprob: -17.625123977661133
    7. '=find' → logprob: -17.750123977661133
    8. ' find' → logprob: -18.250123977661133
    9. '.findall' → logprob: -19.250123977661133
    10. '	find' → logprob: -19.375123977661133

Token 176: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00016098834748845547
    2. '(' → logprob: -8.750161170959473
    3. 'x' → logprob: -13.000161170959473
    4. '(
' → logprob: -15.875161170959473
    5. ')' → logprob: -17.750160217285156
    6. ' (' → logprob: -19.250160217285156
    7. '()' → logprob: -19.500160217285156
    8. ' x' → logprob: -20.375160217285156
    9. '(y' → logprob: -20.375160217285156
    10. ')x' → logprob: -20.500160217285156

Token 177: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02981807105243206
    2. ')' → logprob: -3.529818058013916
    3. ' )
' → logprob: -9.779818534851074
    4. ')y' → logprob: -11.779818534851074
    5. ')
' → logprob: -13.029818534851074
    6. ' )' → logprob: -14.529818534851074
    7. ')

' → logprob: -15.529818534851074
    8. ' y' → logprob: -15.904818534851074
    9. 'y' → logprob: -16.154817581176758
    10. '       ' → logprob: -16.154817581176758

Token 178: '       ' (ID: 309)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12727223336696625
    2. '       ' → logprob: -2.127272129058838
    3. ' y' → logprob: -8.002272605895996
    4. '   ' → logprob: -11.752272605895996
    5. '	y' → logprob: -13.877272605895996
    6. ' ' → logprob: -15.002272605895996
    7. '	' → logprob: -16.12727165222168
    8. ',y' → logprob: -16.50227165222168
    9. '      ' → logprob: -17.12727165222168
    10. '	   ' → logprob: -18.50227165222168

Token 179: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38696032762527466
    2. 'y' (adapté à ' y') → logprob: -1.1369602680206299
    3. '       ' → logprob: -9.76196002960205
    4. '	y' → logprob: -10.38696002960205
    5. '   ' → logprob: -15.13696002960205
    6. '        ' → logprob: -15.63696002960205
    7. '    ' → logprob: -15.88696002960205
    8. ',y' → logprob: -16.511960983276367
    9. ' ' → logprob: -16.636960983276367
    10. '	' → logprob: -16.761960983276367

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06794027984142303
    2. '=' → logprob: -2.8179402351379395
    3. ')' → logprob: -5.6929402351379395
    4. '<|end|>' → logprob: -6.0679402351379395
    5. ' ' → logprob: -9.692940711975098
    6. '<|end|>' → logprob: -10.192940711975098
    7. ',' → logprob: -10.442940711975098
    8. ' ==' → logprob: -10.567940711975098
    9. ':' → logprob: -10.817940711975098
    10. ' )' → logprob: -10.942940711975098

Token 181: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38694578409194946
    2. ' self' → logprob: -1.1369457244873047
    3. '(self' → logprob: -10.011945724487305
    4. '[self' → logprob: -11.136945724487305
    5. 'y' → logprob: -12.386945724487305
    6. '=self' → logprob: -12.761945724487305
    7. '<|end|>' → logprob: -12.886945724487305
    8. '	self' → logprob: -13.011945724487305
    9. 'x' → logprob: -13.761945724487305
    10. ' y' → logprob: -14.511945724487305

Token 182: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -2.236549335066229e-05
    2. '.' → logprob: -11.000021934509277
    3. 'find' → logprob: -12.250021934509277
    4. ' .' → logprob: -14.500021934509277
    5. ').' → logprob: -15.625021934509277
    6. '.findall' → logprob: -17.250022888183594
    7. ')' → logprob: -17.625022888183594
    8. '(find' → logprob: -18.375022888183594
    9. '=find' → logprob: -18.625022888183594
    10. '(x' → logprob: -18.750022888183594

Token 183: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -13.125004768371582
    3. 'y' → logprob: -13.125004768371582
    4. ')' → logprob: -14.625004768371582
    5. '(x' → logprob: -15.500004768371582
    6. '(
' → logprob: -16.2500057220459
    7. ' (' → logprob: -16.3750057220459
    8. ')(' → logprob: -17.0000057220459
    9. '   ' → logprob: -17.3750057220459
    10. '```' → logprob: -17.7500057220459

Token 184: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759968757629395
    2. ')' → logprob: -0.8259968757629395
    3. '       ' → logprob: -10.325996398925781
    4. ')
' → logprob: -12.200996398925781
    5. ')x' → logprob: -12.200996398925781
    6. ' )
' → logprob: -12.825996398925781
    7. '   ' → logprob: -13.325996398925781
    8. ' )' → logprob: -13.325996398925781
    9. 'x' → logprob: -13.450996398925781
    10. 'if' → logprob: -13.450996398925781

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34701794385910034
    2. '
' → logprob: -1.4720180034637451
    3. ' if' → logprob: -3.722018003463745
    4. '<|end|>' → logprob: -3.972018003463745
    5. 'x' → logprob: -5.347017765045166
    6. '        ' → logprob: -5.597017765045166
    7. '        
' → logprob: -5.972017765045166
    8. 'if' → logprob: -6.347017765045166
    9. ' ' → logprob: -6.847017765045166
    10. ')' → logprob: -6.847017765045166

Token 186: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00038086410495452583
    2. ' if' → logprob: -8.000380516052246
    3. '       ' → logprob: -10.000380516052246
    4. '   ' → logprob: -16.750381469726562
    5. '	if' → logprob: -18.375381469726562
    6. 'If' → logprob: -19.125381469726562
    7. '
' → logprob: -20.750381469726562
    8. ' ' → logprob: -21.625381469726562
    9. '    ' → logprob: -21.625381469726562
    10. '```' → logprob: -22.125381469726562

Token 187: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2519305646419525
    2. ' x' → logprob: -1.501930594444275
    3. '	x' → logprob: -13.501930236816406
    4. '   ' → logprob: -16.876930236816406
    5. ')x' → logprob: -18.251930236816406
    6. ' ' → logprob: -18.626930236816406
    7. '(x' → logprob: -18.876930236816406
    8. '"x' → logprob: -19.376930236816406
    9. '```' → logprob: -19.501930236816406
    10. '_x' → logprob: -20.751930236816406

Token 188: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4287843704223633
    2. ' ==' → logprob: -1.0537843704223633
    3. '=' → logprob: -10.178784370422363
    4. '!=' → logprob: -10.553784370422363
    5. ' !=' → logprob: -11.303784370422363
    6. ' ' → logprob: -12.803784370422363
    7. '==
' → logprob: -14.178784370422363
    8. '[' → logprob: -14.428784370422363
    9. ']==' → logprob: -14.678784370422363
    10. ' ' → logprob: -14.803784370422363

Token 189: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023245712742209435
    2. ' y' → logprob: -3.7732458114624023
    3. '	y' → logprob: -15.898245811462402
    4. ''y' → logprob: -17.898244857788086
    5. '   ' → logprob: -18.523244857788086
    6. ' ' → logprob: -19.023244857788086
    7. ')y' → logprob: -19.273244857788086
    8. '‘y' → logprob: -19.648244857788086
    9. 'y's' → logprob: -20.148244857788086
    10. '    ' → logprob: -20.273244857788086

Token 190: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021724513499066234
    2. ':return' → logprob: -8.87521743774414
    3. ':
' → logprob: -9.50021743774414
    4. ' :' → logprob: -12.87521743774414
    5. '):' → logprob: -16.87521743774414
    6. '=' → logprob: -17.75021743774414
    7. ')' → logprob: -18.37521743774414
    8. 'return' → logprob: -18.87521743774414
    9. ':

' → logprob: -19.25021743774414
    10. ':**' → logprob: -19.75021743774414

Token 191: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030880063772201538
    2. '       ' → logprob: -4.030879974365234
    3. ' False' → logprob: -5.030879974365234
    4. ' return' → logprob: -5.530879974365234
    5. 'False' → logprob: -6.405879974365234
    6. 'return' → logprob: -7.905879974365234
    7. '   ' → logprob: -9.280879974365234
    8. '
' → logprob: -10.780879974365234
    9. '	return' → logprob: -11.905879974365234
    10. ' false' → logprob: -12.780879974365234

Token 192: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0380416102707386
    2. ' False' → logprob: -3.288041591644287
    3. '(False' → logprob: -16.538042068481445
    4. 'True' → logprob: -18.913042068481445
    5. '=False' → logprob: -19.663042068481445
    6. '.False' → logprob: -20.788042068481445
    7. '_false' → logprob: -21.163042068481445
    8. ' True' → logprob: -21.413042068481445
    9. 'F' → logprob: -21.538042068481445
    10. 'Falsy' → logprob: -22.288042068481445

Token 193: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0016904157819226384
    2. '       ' → logprob: -6.87669038772583
    3. '<|end|>' → logprob: -8.251690864562988
    4. '
' → logprob: -8.626690864562988
    5. '        
' → logprob: -9.251690864562988
    6. ' 
' → logprob: -9.876690864562988
    7. '  
' → logprob: -10.501690864562988
    8. '    
' → logprob: -11.501690864562988
    9. '		
' → logprob: -12.501690864562988
    10. '' → logprob: -12.501690864562988

Token 194: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014820865355432034
    2. '       ' → logprob: -4.3898210525512695
    3. '<|end|>' → logprob: -6.6398210525512695
    4. '
' → logprob: -7.7648210525512695
    5. ' 
' → logprob: -8.38982105255127
    6. '        
' → logprob: -8.63982105255127
    7. '   ' → logprob: -10.26482105255127
    8. '  
' → logprob: -10.26482105255127
    9. '    
' → logprob: -10.76482105255127
    10. '	' → logprob: -11.13982105255127

Token 195: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5861937999725342
    2. ' if' → logprob: -0.8361937999725342
    3. '       ' → logprob: -4.586194038391113
    4. '        
' → logprob: -12.211194038391113
    5. '   ' → logprob: -13.336194038391113
    6. '	if' → logprob: -13.336194038391113
    7. 'If' → logprob: -14.211194038391113
    8. 'size' → logprob: -15.086194038391113
    9. ' size' → logprob: -15.711194038391113
    10. 'px' → logprob: -16.086193084716797

Token 196: ' px' (ID: 27003)
  Prédit: ' px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.020795049145817757
    2. 'px' → logprob: -3.8957951068878174
    3. '(px' → logprob: -9.020794868469238
    4. ' -' → logprob: -10.270794868469238
    5. '-' → logprob: -10.395794868469238
    6. '-p' → logprob: -10.895794868469238
    7. '   ' → logprob: -10.895794868469238
    8. ':px' → logprob: -11.520794868469238
    9. '_px' → logprob: -11.770794868469238
    10. ' py' → logprob: -12.145794868469238

Token 197: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.774276774493046e-05
    2. '[' → logprob: -11.000038146972656
    3. 'x' → logprob: -11.250038146972656
    4. '[y' → logprob: -11.750038146972656
    5. ' x' → logprob: -17.000038146972656
    6. '[
' → logprob: -17.250038146972656
    7. ' [' → logprob: -17.375038146972656
    8. '(x' → logprob: -17.500038146972656
    9. '```' → logprob: -18.250038146972656
    10. '<x' → logprob: -18.500038146972656

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32227271795272827
    2. '>' → logprob: -1.572272777557373
    3. ']>' → logprob: -2.697272777557373
    4. ' >' → logprob: -7.572272777557373
    5. '[' → logprob: -11.947272300720215
    6. ' ]' → logprob: -11.947272300720215
    7. '>x' → logprob: -13.322272300720215
    8. ']>=' → logprob: -13.322272300720215
    9. '">' → logprob: -13.947272300720215
    10. 'x' → logprob: -13.947272300720215

Token 199: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00011117222311440855
    2. ' >' → logprob: -9.12511157989502
    3. '<' → logprob: -13.50011157989502
    4. '>x' → logprob: -14.37511157989502
    5. '>=' → logprob: -16.500110626220703
    6. '()>' → logprob: -16.500110626220703
    7. ']>' → logprob: -17.375110626220703
    8. '[' → logprob: -17.750110626220703
    9. 'y' → logprob: -18.000110626220703
    10. ')>' → logprob: -18.625110626220703

Token 200: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.062066275626420975
    2. ' px' → logprob: -2.8120663166046143
    3. '(px' → logprob: -10.062066078186035
    4. '_px' → logprob: -10.937066078186035
    5. ':px' → logprob: -11.437066078186035
    6. 'x' → logprob: -11.562066078186035
    7. 'p' → logprob: -12.187066078186035
    8. '  ' → logprob: -12.187066078186035
    9. 'py' → logprob: -12.562066078186035
    10. '   ' → logprob: -14.062066078186035

Token 201: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.014219566248357296
    2. 'y' → logprob: -4.264219760894775
    3. ' y' → logprob: -10.389219284057617
    4. '[x' → logprob: -11.139219284057617
    5. '[' → logprob: -11.889219284057617
    6. '	y' → logprob: -13.764219284057617
    7. ',y' → logprob: -14.014219284057617
    8. '   ' → logprob: -14.514219284057617
    9. '(y' → logprob: -15.264219284057617
    10. '       ' → logprob: -15.514219284057617

Token 202: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00026073982007801533
    2. ']:
' → logprob: -8.500260353088379
    3. ']' → logprob: -10.125260353088379
    4. ':' → logprob: -11.500260353088379
    5. '):' → logprob: -12.750260353088379
    6. ']:
' → logprob: -13.125260353088379
    7. ']:

' → logprob: -14.125260353088379
    8. '>:' → logprob: -14.375260353088379
    9. '}:' → logprob: -14.625260353088379
    10. ']:


' → logprob: -16.750261306762695

Token 203: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7070704102516174
    2. ' x' → logprob: -0.9570704102516174
    3. ',x' → logprob: -2.7070703506469727
    4. 'x' → logprob: -2.9570703506469727
    5. ' ,' → logprob: -6.207070350646973
    6. '       ' → logprob: -7.082070350646973
    7. '[x' → logprob: -7.707070350646973
    8. '(x' → logprob: -8.707070350646973
    9. '           ' → logprob: -8.957070350646973
    10. '[' → logprob: -9.082070350646973

Token 204: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.030369704589247704
    2. 'x' (adapté à ' x') → logprob: -3.530369758605957
    3. ' y' → logprob: -7.530369758605957
    4. '(x' → logprob: -10.405369758605957
    5. ',' → logprob: -10.780369758605957
    6. 'y' → logprob: -11.155369758605957
    7. ',x' → logprob: -12.155369758605957
    8. '           ' → logprob: -12.655369758605957
    9. '[x' → logprob: -13.030369758605957
    10. ' ,' → logprob: -13.030369758605957

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011094745248556137
    2. ',y' → logprob: -4.511094570159912
    3. ' ,' → logprob: -10.13609504699707
    4. 'y' → logprob: -12.13609504699707
    5. ',x' → logprob: -13.76109504699707
    6. ',
' → logprob: -15.13609504699707
    7. ' y' → logprob: -15.38609504699707
    8. '[y' → logprob: -16.01109504699707
    9. ' ' → logprob: -16.76109504699707
    10. '<|end|>' → logprob: -17.01109504699707

Token 206: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011049585416913033
    2. ' y' → logprob: -4.511049747467041
    3. '<|end|>' → logprob: -13.386049270629883
    4. '	y' → logprob: -15.886049270629883
    5. ''y' → logprob: -17.636049270629883
    6. 'x' → logprob: -17.761049270629883
    7. ')y' → logprob: -17.761049270629883
    8. ' ' → logprob: -18.386049270629883
    9. '    ' → logprob: -18.636049270629883
    10. '   ' → logprob: -18.761049270629883

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024494171142578
    2. '=' → logprob: -1.9102449417114258
    3. '<|end|>' → logprob: -11.410244941711426
    4. ',' → logprob: -11.910244941711426
    5. ' ' → logprob: -13.660244941711426
    6. ')' → logprob: -14.660244941711426
    7. ' =)' → logprob: -14.785244941711426
    8. '=y' → logprob: -15.660244941711426
    9. ' =
' → logprob: -15.660244941711426
    10. '=x' → logprob: -15.910244941711426

Token 208: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.014163747429847717
    2. 'y' → logprob: -4.264163970947266
    3. '	y' → logprob: -15.639163970947266
    4. ' ' → logprob: -16.389163970947266
    5. ' ' → logprob: -17.014163970947266
    6. '    ' → logprob: -18.014163970947266
    7. ' x' → logprob: -19.389163970947266
    8. '(y' → logprob: -19.639163970947266
    9. ',y' → logprob: -19.639163970947266
    10. ')y' → logprob: -19.639163970947266

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014990295749157667
    2. ',x' → logprob: -6.626499176025391
    3. ' ,' → logprob: -9.25149917602539
    4. ' x' → logprob: -9.62649917602539
    5. 'x' → logprob: -11.62649917602539
    6. ',
' → logprob: -13.75149917602539
    7. ',y' → logprob: -14.62649917602539
    8. ' ' → logprob: -14.87649917602539
    9. '<|end|>' → logprob: -15.62649917602539
    10. '(x' → logprob: -16.75149917602539

Token 210: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868710398674011
    2. ' x' → logprob: -1.136871099472046
    3. '	x' → logprob: -18.011871337890625
    4. ' ' → logprob: -19.136871337890625
    5. '(x' → logprob: -20.386871337890625
    6. ')x' → logprob: -20.511871337890625
    7. '<|end|>' → logprob: -21.136871337890625
    8. ',x' → logprob: -21.886871337890625
    9. '[x' → logprob: -22.886871337890625
    10. '$x' → logprob: -23.011871337890625

Token 211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01770453155040741
    2. '
' → logprob: -4.392704486846924
    3. 'px' → logprob: -5.642704486846924
    4. '        
' → logprob: -7.142704486846924
    5. '   ' → logprob: -7.892704486846924
    6. ' px' → logprob: -9.142704963684082
    7. '    
' → logprob: -9.642704963684082
    8. '(px' → logprob: -9.767704963684082
    9. '	' → logprob: -10.142704963684082
    10. '[' → logprob: -10.142704963684082

Token 212: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5323463678359985
    2. '       ' → logprob: -0.9073463678359985
    3. '        
' → logprob: -5.907346248626709
    4. '<|end|>' → logprob: -6.157346248626709
    5. ' 
' → logprob: -7.282346248626709
    6. '
' → logprob: -7.282346248626709
    7. '  
' → logprob: -7.407346248626709
    8. '   ' → logprob: -7.782346248626709
    9. ',' → logprob: -7.782346248626709
    10. '[' → logprob: -8.407346725463867

Token 213: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' (adapté à ' px') → logprob: -0.005680499132722616
    2. ' px' → logprob: -5.255680561065674
    3. '       ' → logprob: -8.255680084228516
    4. '
' → logprob: -9.005680084228516
    5. '(px' → logprob: -10.380680084228516
    6. '   ' → logprob: -10.630680084228516
    7. '_px' → logprob: -12.755680084228516
    8. ':px' → logprob: -13.130680084228516
    9. '        
' → logprob: -13.255680084228516
    10. 'py' → logprob: -14.630680084228516

Token 214: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.935296834039036e-06
    2. 'x' → logprob: -12.87500286102295
    3. '[' → logprob: -15.00000286102295
    4. '```' → logprob: -17.125003814697266
    5. ' x' → logprob: -18.750003814697266
    6. '	x' → logprob: -18.875003814697266
    7. '[
' → logprob: -19.250003814697266
    8. ',x' → logprob: -20.375003814697266
    9. '(x' → logprob: -20.500003814697266
    10. '][' → logprob: -21.000003814697266

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011722482740879059
    2. ']+=' → logprob: -6.751172065734863
    3. ']+' → logprob: -13.501172065734863
    4. '[' → logprob: -15.001172065734863
    5. ']
' → logprob: -15.751172065734863
    6. '```' → logprob: -17.50117301940918
    7. '}' → logprob: -17.87617301940918
    8. ')' → logprob: -18.00117301940918
    9. ']]' → logprob: -18.12617301940918
    10. '"]' → logprob: -18.50117301940918

Token 216: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.056648530066013336
    2. ']+=' → logprob: -2.9316484928131104
    3. '+' → logprob: -7.0566487312316895
    4. ' +=' → logprob: -8.056648254394531
    5. '[' → logprob: -8.181648254394531
    6. '```' → logprob: -9.181648254394531
    7. ']' → logprob: -9.431648254394531
    8. ']+' → logprob: -9.806648254394531
    9. '	' → logprob: -11.056648254394531
    10. '   ' → logprob: -11.806648254394531

Token 217: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.01109545398503542
    2. ' px' → logprob: -4.5110955238342285
    3. '(px' → logprob: -10.51109504699707
    4. 'py' → logprob: -11.13609504699707
    5. ':px' → logprob: -12.76109504699707
    6. '_px' → logprob: -13.26109504699707
    7. 'pz' → logprob: -14.51109504699707
    8. ' py' → logprob: -15.38609504699707
    9. '}px' → logprob: -16.01109504699707
    10. 'python' → logprob: -17.01109504699707

Token 218: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0004901225329376757
    2. 'y' → logprob: -7.625490188598633
    3. '[' → logprob: -13.250490188598633
    4. '[x' → logprob: -15.625490188598633
    5. ' y' → logprob: -17.000490188598633
    6. '[p' → logprob: -17.125490188598633
    7. '	y' → logprob: -17.125490188598633
    8. '(y' → logprob: -17.375490188598633
    9. '```' → logprob: -17.750490188598633
    10. ',y' → logprob: -18.625490188598633

Token 219: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0776921510696411
    2. '
' → logprob: -1.4526921510696411
    3. ']
' → logprob: -1.7026921510696411
    4. '[y' → logprob: -1.8276921510696411
    5. '[x' → logprob: -3.0776920318603516
    6. '<|end|>' → logprob: -3.7026920318603516
    7. '       ' → logprob: -4.952692031860352
    8. ')
' → logprob: -7.077692031860352
    9. ')' → logprob: -7.077692031860352
    10. ' y' → logprob: -7.452692031860352

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08898843824863434
    2. 'px' → logprob: -2.5889885425567627
    3. 'y' → logprob: -5.463988304138184
    4. ' px' → logprob: -5.713988304138184
    5. 'py' → logprob: -6.588988304138184
    6. ' y' → logprob: -7.713988304138184
    7. ',' → logprob: -8.463988304138184
    8. 'x' → logprob: -8.838988304138184
    9. ',y' → logprob: -9.838988304138184
    10. ' py' → logprob: -9.963988304138184

Token 221: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' (adapté à ' px') → logprob: -0.003645568387582898
    2. 'py' → logprob: -5.753645420074463
    3. ' px' → logprob: -7.878645420074463
    4. 'x' → logprob: -10.253645896911621
    5. '_px' → logprob: -11.253645896911621
    6. 'y' → logprob: -11.378645896911621
    7. '       ' → logprob: -11.628645896911621
    8. '(px' → logprob: -11.753645896911621
    9. 'pj' → logprob: -12.878645896911621
    10. 'pty' → logprob: -13.253645896911621

Token 222: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.56102097814437e-05
    2. '[' → logprob: -10.125045776367188
    3. '][' → logprob: -13.000045776367188
    4. '```' → logprob: -13.500045776367188
    5. ']' → logprob: -14.000045776367188
    6. 'y' → logprob: -14.375045776367188
    7. ' [' → logprob: -16.000045776367188
    8. ')[' → logprob: -16.375045776367188
    9. '<|end|>' → logprob: -16.375045776367188
    10. '[x' → logprob: -16.875045776367188

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013840360566973686
    2. '=' → logprob: -4.763840198516846
    3. ' =' → logprob: -5.513840198516846
    4. ']=' → logprob: -6.763840198516846
    5. ')' → logprob: -11.513840675354004
    6. ' ]' → logprob: -11.888840675354004
    7. '[' → logprob: -12.013840675354004
    8. 'x' → logprob: -14.138840675354004
    9. '[x' → logprob: -14.263840675354004
    10. '=x' → logprob: -14.388840675354004

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0789082944393158
    2. ' =' → logprob: -2.5789082050323486
    3. '=x' → logprob: -10.95390796661377
    4. 'x' → logprob: -14.82890796661377
    5. ')' → logprob: -15.45390796661377
    6. '＝' → logprob: -16.203908920288086
    7. ' ' → logprob: -16.703908920288086
    8. '[' → logprob: -16.703908920288086
    9. ']' → logprob: -16.828908920288086
    10. ']=' → logprob: -16.828908920288086

Token 225: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019287518225610256
    2. ' x' → logprob: -6.251928806304932
    3. '	x' → logprob: -17.626928329467773
    4. '$x' → logprob: -17.876928329467773
    5. '"x' → logprob: -17.876928329467773
    6. ')x' → logprob: -18.251928329467773
    7. '<|end|>' → logprob: -18.501928329467773
    8. ''x' → logprob: -19.251928329467773
    9. '%x' → logprob: -19.251928329467773
    10. '[x' → logprob: -19.376928329467773

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004969512578099966
    2. '	return' → logprob: -6.504969596862793
    3. ' return' → logprob: -6.754969596862793
    4. '	' → logprob: -7.004969596862793
    5. '<|end|>' → logprob: -7.629969596862793
    6. '   ' → logprob: -7.754969596862793
    7. 'return' → logprob: -8.754969596862793
    8. ' True' → logprob: -9.004969596862793
    9. '
' → logprob: -9.379969596862793
    10. 'True' → logprob: -10.754969596862793

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020187153131701052
    2. '	' → logprob: -9.125202178955078
    3. 'return' → logprob: -9.625202178955078
    4. '   ' → logprob: -11.500202178955078
    5. ' return' → logprob: -11.750202178955078
    6. '	return' → logprob: -12.250202178955078
    7. '<|end|>' → logprob: -13.875202178955078
    8. 'True' → logprob: -14.000202178955078
    9. 'true' → logprob: -14.750202178955078
    10. '	   ' → logprob: -14.875202178955078

Token 228: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17218755185604095
    2. '       ' → logprob: -1.9221875667572021
    3. ' return' → logprob: -4.922187328338623
    4. 'True' → logprob: -5.422187328338623
    5. ' True' → logprob: -8.672187805175781
    6. 'true' → logprob: -11.672187805175781
    7. '   ' → logprob: -12.047187805175781
    8. '	return' → logprob: -12.922187805175781
    9. 'Return' → logprob: -14.297187805175781
    10. '
' → logprob: -14.547187805175781

Token 229: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -20.501502990722656
    4. '=True' → logprob: -21.376502990722656
    5. 'False' → logprob: -22.251502990722656
    6. 'true' → logprob: -22.626502990722656
    7. 'Tr' → logprob: -23.126502990722656
    8. ' ' → logprob: -23.626502990722656
    9. '_true' → logprob: -24.126502990722656
    10. '.True' → logprob: -24.501502990722656

Token 230: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2833878993988037
    2. 'def' → logprob: -1.4083878993988037
    3. ' def' → logprob: -6.783388137817383
    4. '<|end|>' → logprob: -7.658388137817383
    5. '	def' → logprob: -8.408388137817383
    6. '```' → logprob: -8.533388137817383
    7. '<|end|>' → logprob: -10.033388137817383
    8. '    
' → logprob: -10.783388137817383
    9. 'from' → logprob: -10.908388137817383
    10. '#' → logprob: -11.033388137817383

Token 232: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009238460334017873
    2. '   ' → logprob: -7.1259236335754395
    3. ' def' → logprob: -9.125924110412598
    4. '	def' → logprob: -11.750924110412598
    5. 'd' → logprob: -14.125924110412598
    6. '  ' → logprob: -14.750924110412598
    7. 'ndef' → logprob: -15.500924110412598
    8. '    
' → logprob: -15.625924110412598
    9. '@property' → logprob: -15.750924110412598
    10. '#' → logprob: -15.750924110412598

Token 233: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.12698984146118164
    2. 'size' → logprob: -2.1269898414611816
    3. ' same' → logprob: -10.501989364624023
    4. 'same' → logprob: -11.126989364624023
    5. '_size' → logprob: -12.001989364624023
    6. '   ' → logprob: -12.376989364624023
    7. '	size' → logprob: -13.001989364624023
    8. 'get' → logprob: -13.876989364624023
    9. ' get' → logprob: -14.001989364624023
    10. ' siz' → logprob: -14.126989364624023

Token 234: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014181245118379593
    2. '(' → logprob: -4.264181137084961
    3. '(
' → logprob: -11.139181137084961
    4. '(s' → logprob: -13.014181137084961
    5. 'self' → logprob: -14.764181137084961
    6. 'def' → logprob: -16.26418113708496
    7. '(this' → logprob: -16.51418113708496
    8. 's' → logprob: -16.51418113708496
    9. '(sel' → logprob: -16.51418113708496
    10. '(Self' → logprob: -16.51418113708496

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ' ,' → logprob: -10.250041961669922
    3. 'self' → logprob: -12.500041961669922
    4. ')' → logprob: -14.000041961669922
    5. ',x' → logprob: -14.125041961669922
    6. ',
' → logprob: -14.750041961669922
    7. '(' → logprob: -15.250041961669922
    8. ',self' → logprob: -15.625041961669922
    9. '(self' → logprob: -16.375041961669922
    10. ',int' → logprob: -16.875041961669922

Token 236: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012299923691898584
    2. ' x' → logprob: -6.751229763031006
    3. 'self' → logprob: -9.751230239868164
    4. ' self' → logprob: -13.876230239868164
    5. ' ' → logprob: -15.126230239868164
    6. ')x' → logprob: -15.626230239868164
    7. '   ' → logprob: -16.251230239868164
    8. 'a' → logprob: -16.501230239868164
    9. ')' → logprob: -16.751230239868164
    10. '	x' → logprob: -18.501230239868164

Token 237: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6681148409843445
    2. ')' → logprob: -1.2931149005889893
    3. 'self' → logprob: -2.6681149005889893
    4. ',' → logprob: -2.7931149005889893
    5. ':' → logprob: -2.7931149005889893
    6. '(self' → logprob: -4.04311466217041
    7. '):
' → logprob: -5.79311466217041
    8. '   ' → logprob: -8.41811466217041
    9. ' self' → logprob: -9.41811466217041
    10. '(' → logprob: -10.16811466217041

Token 238: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0019287518225610256
    2. ' int' → logprob: -6.251928806304932
    3. '[int' → logprob: -16.876928329467773
    4. ':int' → logprob: -17.001928329467773
    5. ')' → logprob: -17.626928329467773
    6. '   ' → logprob: -17.751928329467773
    7. '(int' → logprob: -17.751928329467773
    8. 'x' → logprob: -19.001928329467773
    9. 'self' → logprob: -19.001928329467773
    10. '	int' → logprob: -19.501928329467773

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2842308680992573e-05
    2. '):' → logprob: -10.750022888183594
    3. ' )' → logprob: -13.625022888183594
    4. '):
' → logprob: -16.500022888183594
    5. ')->' → logprob: -18.500022888183594
    6. '   ' → logprob: -19.125022888183594
    7. '）' → logprob: -19.875022888183594
    8. ')
' → logprob: -20.000022888183594
    9. '`)' → logprob: -20.125022888183594
    10. ',)' → logprob: -20.125022888183594

Token 240: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017792247235774994
    2. ':' → logprob: -4.142792224884033
    3. '):' → logprob: -6.392792224884033
    4. '   ' → logprob: -10.017792701721191
    5. ')->' → logprob: -11.392792701721191
    6. ' ->' → logprob: -11.517792701721191
    7. '       ' → logprob: -12.392792701721191
    8. ' )' → logprob: -12.642792701721191
    9. '->' → logprob: -12.767792701721191
    10. '):
' → logprob: -12.767792701721191

Token 241: ' int' (ID: 677)
  Prédit: '-return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-return' → logprob: -0.9809364080429077
    2. ' -' → logprob: -1.1059364080429077
    3. '-' → logprob: -1.3559364080429077
    4. '-int' → logprob: -4.605936527252197
    5. '-self' → logprob: -4.605936527252197
    6. '-get' → logprob: -5.355936527252197
    7. '-parent' → logprob: -5.980936527252197
    8. 'int' → logprob: -6.480936527252197
    9. 'return' → logprob: -7.480936527252197
    10. '-def' → logprob: -7.855936527252197

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03810552507638931
    2. ':
' → logprob: -3.2881054878234863
    3. '       ' → logprob: -10.788105964660645
    4. ':return' → logprob: -10.788105964660645
    5. ' :' → logprob: -11.663105964660645
    6. '   ' → logprob: -12.413105964660645
    7. ':
' → logprob: -12.913105964660645
    8. ' :
' → logprob: -12.913105964660645
    9. '):
' → logprob: -13.163105964660645
    10. '):' → logprob: -13.663105964660645

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47486671805381775
    2. 'return' → logprob: -1.2248667478561401
    3. ' return' → logprob: -2.4748666286468506
    4. '   ' → logprob: -10.47486686706543
    5. 'px' → logprob: -10.97486686706543
    6. '	return' → logprob: -11.47486686706543
    7. ' px' → logprob: -13.47486686706543
    8. 'n' → logprob: -13.97486686706543
    9. '```' → logprob: -14.47486686706543
    10. 'x' → logprob: -14.59986686706543

Token 244: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007396010681986809
    2. 'px' → logprob: -5.382396221160889
    3. '       ' → logprob: -6.507396221160889
    4. ' return' → logprob: -7.007396221160889
    5. 'p' → logprob: -8.13239574432373
    6. 'x' → logprob: -10.25739574432373
    7. 's' → logprob: -11.25739574432373
    8. ' px' → logprob: -11.25739574432373
    9. 'ps' → logprob: -11.75739574432373
    10. 'r' → logprob: -12.38239574432373

Token 245: ' -' (ID: 533)
  Prédit: '-self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-self' → logprob: -0.4300870895385742
    2. '-' → logprob: -1.6800870895385742
    3. ' -' → logprob: -2.930087089538574
    4. '-n' → logprob: -3.555087089538574
    5. '-info' → logprob: -4.180087089538574
    6. '-parent' → logprob: -4.930087089538574
    7. '-node' → logprob: -4.930087089538574
    8. '-inf' → logprob: -5.055087089538574
    9. '-int' → logprob: -5.680087089538574
    10. '-name' → logprob: -5.930087089538574

Token 246: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.511406809295295e-06
    2. ' self' → logprob: -12.000006675720215
    3. '(self' → logprob: -16.0000057220459
    4. '   ' → logprob: -16.7500057220459
    5. '[self' → logprob: -18.2500057220459
    6. '       ' → logprob: -18.5000057220459
    7. '```' → logprob: -18.6250057220459
    8. '1' → logprob: -18.7500057220459
    9. '
' → logprob: -19.1250057220459
    10. '`' → logprob: -19.5000057220459

Token 247: '.parents' (ID: 168761)
  Prédit: '.parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parents' → logprob: -0.0001307142956648022
    2. 'parents' → logprob: -9.000130653381348
    3. '.par' → logprob: -12.875130653381348
    4. '.parent' → logprob: -14.000130653381348
    5. ' .' → logprob: -14.125130653381348
    6. 'self' → logprob: -14.500130653381348
    7. '.' → logprob: -14.500130653381348
    8. '.p' → logprob: -14.625130653381348
    9. '.parts' → logprob: -15.125130653381348
    10. 'Parents' → logprob: -15.125130653381348

Token 248: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0004023097571916878
    2. '[x' → logprob: -7.875402450561523
    3. '[' → logprob: -11.375402450561523
    4. 'self' → logprob: -11.500402450561523
    5. 'x' → logprob: -16.125402450561523
    6. '(self' → logprob: -16.250402450561523
    7. '[
' → logprob: -16.375402450561523
    8. '```' → logprob: -16.750402450561523
    9. '[this' → logprob: -17.000402450561523
    10. '   ' → logprob: -17.750402450561523

Token 249: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0004523606039583683
    2. 'find' → logprob: -7.750452518463135
    3. '.' → logprob: -10.750452041625977
    4. ' .' → logprob: -15.750452041625977
    5. ' find' → logprob: -17.250452041625977
    6. '=find' → logprob: -18.000452041625977
    7. '.findall' → logprob: -18.625452041625977
    8. '	find' → logprob: -18.625452041625977
    9. '(find' → logprob: -18.875452041625977
    10. '.fin' → logprob: -19.000452041625977

Token 250: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -17.5000057220459
    4. 'x' → logprob: -18.3750057220459
    5. '(
' → logprob: -19.6250057220459
    6. '](' → logprob: -20.1250057220459
    7. ',x' → logprob: -20.6250057220459
    8. ']' → logprob: -20.7500057220459
    9. ')x' → logprob: -21.1250057220459
    10. ' x' → logprob: -21.5000057220459

Token 251: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004218605346977711
    2. '(x' → logprob: -5.504218578338623
    3. '(' → logprob: -9.504219055175781
    4. 'x' → logprob: -10.379219055175781
    5. ' )' → logprob: -11.379219055175781
    6. ')' → logprob: -11.629219055175781
    7. '())' → logprob: -12.379219055175781
    8. ')]
' → logprob: -13.004219055175781
    9. ']' → logprob: -13.129219055175781
    10. ')])' → logprob: -13.129219055175781

Token 252: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31865936517715454
    2. '   ' → logprob: -1.6936593055725098
    3. '<|end|>' → logprob: -2.4436593055725098
    4. ' def' → logprob: -6.56865930557251
    5. ')' → logprob: -8.568659782409668
    6. '	def' → logprob: -8.818659782409668
    7. '    
' → logprob: -9.068659782409668
    8. '<|end|>' → logprob: -9.443659782409668
    9. '```' → logprob: -9.568659782409668
    10. '  ' → logprob: -10.443659782409668

Token 253: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007925291545689106
    2. '   ' → logprob: -5.382925510406494
    3. '<|end|>' → logprob: -6.132925510406494
    4. '#' → logprob: -8.257925033569336
    5. ' def' → logprob: -8.382925033569336
    6. ')' → logprob: -9.382925033569336
    7. ' ' → logprob: -9.382925033569336
    8. 'uf' → logprob: -9.632925033569336
    9. '	def' → logprob: -9.632925033569336
    10. '<|end|>' → logprob: -9.757925033569336

Token 254: ' same' (ID: 2684)
  Prédit: ' same'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' same' → logprob: -0.7182533740997314
    2. 'same' → logprob: -0.7182533740997314
    3. ' groups' → logprob: -5.468253135681152
    4. 'groups' → logprob: -5.718253135681152
    5. 'all' → logprob: -5.843253135681152
    6. 'members' → logprob: -6.093253135681152
    7. ' is' → logprob: -6.218253135681152
    8. ' roots' → logprob: -6.343253135681152
    9. ' members' → logprob: -6.343253135681152
    10. 'is' → logprob: -6.843253135681152

Token 255: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09486053138971329
    2. '(self' → logprob: -2.469860553741455
    3. '(x' → logprob: -5.594860553741455
    4. '<|end|>' → logprob: -6.844860553741455
    5. ' (' → logprob: -7.969860553741455
    6. ')' → logprob: -8.844860076904297
    7. '(int' → logprob: -9.219860076904297
    8. '   ' → logprob: -9.594860076904297
    9. '(a' → logprob: -9.594860076904297
    10. '('' → logprob: -9.844860076904297

Token 256: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33816710114479065
    2. ')' → logprob: -2.088167190551758
    3. '(x' → logprob: -2.088167190551758
    4. '(self' → logprob: -3.588167190551758
    5. ' (' → logprob: -5.213167190551758
    6. ',' → logprob: -5.963167190551758
    7. ')(' → logprob: -6.088167190551758
    8. '(int' → logprob: -8.088167190551758
    9. '<|end|>' → logprob: -8.463167190551758
    10. '   ' → logprob: -9.838167190551758

Token 257: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067167943343520164
    2. ' x' → logprob: -5.006716728210449
    3. 'a' → logprob: -13.88171672821045
    4. '   ' → logprob: -15.63171672821045
    5. '	x' → logprob: -16.256717681884766
    6. ')x' → logprob: -16.256717681884766
    7. ' ' → logprob: -16.631717681884766
    8. ')' → logprob: -17.506717681884766
    9. ' a' → logprob: -18.381717681884766
    10. '```' → logprob: -18.881717681884766

Token 258: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031162876985035837
    2. ' ,' → logprob: -8.125311851501465
    3. ',x' → logprob: -11.750311851501465
    4. ',y' → logprob: -12.000311851501465
    5. ':' → logprob: -14.000311851501465
    6. ',int' → logprob: -14.500311851501465
    7. ')' → logprob: -16.12531089782715
    8. '   ' → logprob: -17.37531089782715
    9. ':int' → logprob: -17.37531089782715
    10. ',b' → logprob: -18.37531089782715

Token 259: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023311514407396317
    2. ' int' → logprob: -3.7733116149902344
    3. 'y' → logprob: -10.023311614990234
    4. ' y' → logprob: -11.398311614990234
    5. ':int' → logprob: -12.148311614990234
    6. '(int' → logprob: -13.648311614990234
    7. ' ' → logprob: -13.898311614990234
    8. '   ' → logprob: -14.023311614990234
    9. ',int' → logprob: -14.148311614990234
    10. ',' → logprob: -14.648311614990234

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.517272024415433e-05
    2. ' ,' → logprob: -9.500075340270996
    3. ',y' → logprob: -16.37507438659668
    4. ',int' → logprob: -16.75007438659668
    5. ',x' → logprob: -17.37507438659668
    6. '   ' → logprob: -18.00007438659668
    7. ')' → logprob: -19.00007438659668
    8. ',
' → logprob: -19.00007438659668
    9. ' ' → logprob: -19.87507438659668
    10. ',b' → logprob: -20.62507438659668

Token 261: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889000326395035
    2. ' y' → logprob: -2.578890085220337
    3. ' ' → logprob: -16.578889846801758
    4. '	y' → logprob: -16.703889846801758
    5. '   ' → logprob: -17.078889846801758
    6. 'int' → logprob: -17.578889846801758
    7. '<|end|>' → logprob: -18.703889846801758
    8. '  ' → logprob: -19.203889846801758
    9. 'x' → logprob: -19.328889846801758
    10. 'b' → logprob: -19.828889846801758

Token 262: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002198676229454577
    2. '):' → logprob: -8.50022029876709
    3. ':' → logprob: -11.25022029876709
    4. ' )' → logprob: -13.12522029876709
    5. '):
' → logprob: -13.75022029876709
    6. '   ' → logprob: -17.000219345092773
    7. '`)' → logprob: -17.125219345092773
    8. '')' → logprob: -17.625219345092773
    9. '）' → logprob: -17.625219345092773
    10. ')
' → logprob: -17.875219345092773

Token 263: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04111452028155327
    2. ' int' → logprob: -3.291114568710327
    3. ')' → logprob: -5.791114330291748
    4. '[int' → logprob: -11.916114807128906
    5. ':int' → logprob: -13.166114807128906
    6. '=int' → logprob: -13.791114807128906
    7. '(int' → logprob: -13.791114807128906
    8. ' )' → logprob: -14.166114807128906
    9. '   ' → logprob: -14.541114807128906
    10. '):' → logprob: -14.666114807128906

Token 264: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. '):' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.750017166137695
    4. '):
' → logprob: -13.625017166137695
    5. '')' → logprob: -14.500017166137695
    6. '`)' → logprob: -15.250017166137695
    7. ')
' → logprob: -15.500017166137695
    8. '）' → logprob: -16.500017166137695
    9. '   ' → logprob: -17.125017166137695
    10. '))' → logprob: -17.250017166137695

Token 265: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0062118698842823505
    2. ':' → logprob: -5.131211757659912
    3. '->' → logprob: -9.00621223449707
    4. ' ->' → logprob: -9.38121223449707
    5. ')->' → logprob: -9.88121223449707
    6. '):' → logprob: -10.88121223449707
    7. ' )' → logprob: -13.00621223449707
    8. '   ' → logprob: -13.13121223449707
    9. '>' → logprob: -13.75621223449707
    10. '()' → logprob: -14.88121223449707

Token 266: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.020835449919104576
    2. ' bool' → logprob: -4.2708353996276855
    3. 'int' → logprob: -5.0208353996276855
    4. ' int' → logprob: -10.895835876464844
    5. 'True' → logprob: -10.895835876464844
    6. 'Bool' → logprob: -12.270835876464844
    7. ')' → logprob: -12.895835876464844
    8. 'self' → logprob: -13.020835876464844
    9. '(bool' → logprob: -13.770835876464844
    10. ':' → logprob: -14.020835876464844

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043555660522542894
    2. ':
' → logprob: -7.8754353523254395
    3. '(' → logprob: -11.125435829162598
    4. '):' → logprob: -11.750435829162598
    5. ':return' → logprob: -11.750435829162598
    6. '(self' → logprob: -12.000435829162598
    7. ' :' → logprob: -12.125435829162598
    8. '   ' → logprob: -12.500435829162598
    9. ')' → logprob: -12.750435829162598
    10. '       ' → logprob: -13.000435829162598

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4377972185611725
    2. ' return' → logprob: -1.06279718875885
    3. ' 
' → logprob: -5.6877970695495605
    4. 'return' → logprob: -6.0627970695495605
    5. '
' → logprob: -6.4377970695495605
    6. '   ' → logprob: -7.4377970695495605
    7. '<|end|>' → logprob: -8.062797546386719
    8. ' ' → logprob: -8.562797546386719
    9. ' ' → logprob: -9.437797546386719
    10. '    ' → logprob: -9.562797546386719

Token 269: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005657267291098833
    2. ' return' → logprob: -5.255657196044922
    3. '
' → logprob: -8.255657196044922
    4. '       ' → logprob: -8.755657196044922
    5. '	return' → logprob: -12.630657196044922
    6. '   ' → logprob: -13.505657196044922
    7. '{return' → logprob: -14.755657196044922
    8. '```' → logprob: -14.755657196044922
    9. ':return' → logprob: -15.130657196044922
    10. '        
' → logprob: -15.880657196044922

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.547789674485102e-05
    2. ' self' → logprob: -10.250035285949707
    3. '(self' → logprob: -19.875036239624023
    4. '[self' → logprob: -20.625036239624023
    5. '	self' → logprob: -21.750036239624023
    6. '
' → logprob: -22.875036239624023
    7. '   ' → logprob: -23.375036239624023
    8. '```' → logprob: -23.500036239624023
    9. '=self' → logprob: -24.125036239624023
    10. ' ' → logprob: -24.750036239624023

Token 271: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -2.47495681833243e-05
    2. '.' → logprob: -10.750024795532227
    3. 'find' → logprob: -12.750024795532227
    4. '.findall' → logprob: -15.125024795532227
    5. '.Find' → logprob: -18.250024795532227
    6. '.get' → logprob: -19.000024795532227
    7. ').' → logprob: -19.000024795532227
    8. ')find' → logprob: -19.125024795532227
    9. ' .' → logprob: -19.250024795532227
    10. '=find' → logprob: -19.375024795532227

Token 272: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.008614808320999146
    2. '(' → logprob: -4.758615016937256
    3. '(
' → logprob: -15.758614540100098
    4. '(y' → logprob: -16.633615493774414
    5. '()' → logprob: -18.008615493774414
    6. '((' → logprob: -18.383615493774414
    7. ')' → logprob: -18.758615493774414
    8. ' (' → logprob: -19.258615493774414
    9. 'x' → logprob: -19.758615493774414
    10. '(

' → logprob: -20.258615493774414

Token 273: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02388773299753666
    2. '(x' → logprob: -3.7738876342773438
    3. '(' → logprob: -7.773887634277344
    4. ')==' → logprob: -8.648887634277344
    5. '(y' → logprob: -10.523887634277344
    6. ' )' → logprob: -11.273887634277344
    7. ',' → logprob: -13.023887634277344
    8. '==' → logprob: -13.148887634277344
    9. 'x' → logprob: -13.898887634277344
    10. ']' → logprob: -14.523887634277344

Token 274: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011174201034009457
    2. ' ==' → logprob: -4.761174201965332
    3. '()==' → logprob: -6.136174201965332
    4. '()' → logprob: -8.386174201965332
    5. '=' → logprob: -9.386174201965332
    6. ')==' → logprob: -10.261174201965332
    7. ']==' → logprob: -10.636174201965332
    8. ')' → logprob: -11.886174201965332
    9. '(x' → logprob: -12.011174201965332
    10. '(' → logprob: -12.511174201965332

Token 275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011098873801529408
    2. ' self' → logprob: -4.511098861694336
    3. 'y' → logprob: -10.261098861694336
    4. '   ' → logprob: -11.386098861694336
    5. '(self' → logprob: -13.386098861694336
    6. '	self' → logprob: -14.011098861694336
    7. ' y' → logprob: -14.011098861694336
    8. '       ' → logprob: -14.011098861694336
    9. '    ' → logprob: -15.386098861694336
    10. '=self' → logprob: -15.886098861694336

Token 276: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0006402421277016401
    2. 'find' → logprob: -7.625640392303467
    3. '.' → logprob: -9.000639915466309
    4. '.findall' → logprob: -10.750639915466309
    5. '(find' → logprob: -13.000639915466309
    6. ' .' → logprob: -13.125639915466309
    7. '().' → logprob: -13.875639915466309
    8. ').' → logprob: -13.875639915466309
    9. '	find' → logprob: -14.875639915466309
    10. ')find' → logprob: -15.625639915466309

Token 277: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0005572011577896774
    2. 'y' → logprob: -7.5005574226379395
    3. '(' → logprob: -12.500556945800781
    4. 'find' → logprob: -15.500556945800781
    5. ' y' → logprob: -16.50055694580078
    6. '(find' → logprob: -16.62555694580078
    7. '(self' → logprob: -16.75055694580078
    8. '(x' → logprob: -17.62555694580078
    9. '	y' → logprob: -17.62555694580078
    10. '   ' → logprob: -17.87555694580078

Token 278: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -15.750005722045898
    4. '<|end|>' → logprob: -17.5000057220459
    5. '))' → logprob: -17.6250057220459
    6. ')return' → logprob: -17.7500057220459
    7. '}' → logprob: -18.5000057220459
    8. ')

' → logprob: -18.8750057220459
    9. '),' → logprob: -19.2500057220459
    10. '）' → logprob: -19.3750057220459

Token 279: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016920845955610275
    2. '<|end|>' → logprob: -7.501692295074463
    3. '   ' → logprob: -7.626692295074463
    4. 'from' → logprob: -8.251691818237305
    5. '#' → logprob: -8.626691818237305
    6. '<|end|>' → logprob: -9.376691818237305
    7. '```' → logprob: -10.376691818237305
    8. ' def' → logprob: -10.626691818237305
    9. 'class' → logprob: -11.501691818237305
    10. ')' → logprob: -11.751691818237305

Token 280: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.872261317563243e-05
    2. '   ' → logprob: -11.125059127807617
    3. '#' → logprob: -11.250059127807617
    4. 'from' → logprob: -11.750059127807617
    5. 'if' → logprob: -12.125059127807617
    6. ' def' → logprob: -12.250059127807617
    7. 'class' → logprob: -12.750059127807617
    8. 'n' → logprob: -12.875059127807617
    9. 'q' → logprob: -13.500059127807617
    10. 'd' → logprob: -13.750059127807617

Token 281: ' roots' (ID: 29895)
  Prédit: 'members'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'members' → logprob: -0.37843596935272217
    2. 'roots' → logprob: -2.0034360885620117
    3. ' members' → logprob: -2.8784360885620117
    4. 'groups' → logprob: -3.1284360885620117
    5. 'group' → logprob: -3.8784360885620117
    6. 'all' → logprob: -4.003436088562012
    7. 'leader' → logprob: -4.378436088562012
    8. ' roots' → logprob: -5.253436088562012
    9. 'count' → logprob: -5.503436088562012
    10. ' group' → logprob: -5.628436088562012

Token 282: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7120533811976202e-05
    2. '(' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. 'self' → logprob: -16.250017166137695
    5. ' (' → logprob: -16.875017166137695
    6. ' ' → logprob: -18.000017166137695
    7. '()' → logprob: -18.125017166137695
    8. '(
' → logprob: -18.250017166137695
    9. '```' → logprob: -18.250017166137695
    10. '       ' → logprob: -18.500017166137695

Token 283: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.39487117528915405
    2. ')' → logprob: -1.1448712348937988
    3. 'self' → logprob: -5.269871234893799
    4. ')(' → logprob: -6.019871234893799
    5. '):' → logprob: -8.64487075805664
    6. '):
' → logprob: -9.89487075805664
    7. '   ' → logprob: -10.01987075805664
    8. ',' → logprob: -10.64487075805664
    9. ' ' → logprob: -10.89487075805664
    10. ' self' → logprob: -11.01987075805664

Token 284: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30445244908332825
    2. '       ' → logprob: -1.6794524192810059
    3. '(self' → logprob: -3.179452419281006
    4. 'self' → logprob: -3.929452419281006
    5. 'return' → logprob: -4.554452419281006
    6. 'def' → logprob: -6.804452419281006
    7. ' return' → logprob: -6.929452419281006
    8. ' self' → logprob: -7.304452419281006
    9. 'for' → logprob: -8.054452896118164
    10. '
' → logprob: -8.429452896118164

Token 285: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01894753985106945
    2. ' return' → logprob: -4.018947601318359
    3. '   ' → logprob: -7.893947601318359
    4. 'for' → logprob: -8.14394760131836
    5. '       ' → logprob: -9.26894760131836
    6. ' for' → logprob: -11.39394760131836
    7. 'yield' → logprob: -11.39394760131836
    8. '    ' → logprob: -12.01894760131836
    9. ' ' → logprob: -12.14394760131836
    10. '  ' → logprob: -13.01894760131836

Token 286: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03911495581269264
    2. '[x' → logprob: -3.2891149520874023
    3. '[' → logprob: -7.164114952087402
    4. '(i' → logprob: -9.164114952087402
    5. '[idx' → logprob: -9.164114952087402
    6. ' [' → logprob: -10.414114952087402
    7. '(x' → logprob: -11.039114952087402
    8. '[k' → logprob: -11.539114952087402
    9. '[index' → logprob: -11.789114952087402
    10. 'i' → logprob: -12.289114952087402

Token 287: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1875571544806007e-05
    2. 'x' → logprob: -12.250011444091797
    3. ' i' → logprob: -12.375011444091797
    4. 'idx' → logprob: -13.875011444091797
    5. '(i' → logprob: -14.375011444091797
    6. 'r' → logprob: -14.375011444091797
    7. '[i' → logprob: -14.875011444091797
    8. '	i' → logprob: -15.875011444091797
    9. '   ' → logprob: -16.375011444091797
    10. 'ix' → logprob: -16.375011444091797

Token 288: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.575949490070343
    2. ' for' → logprob: -0.825949490070343
    3. '
' → logprob: -12.575949668884277
    4. ' ' → logprob: -12.825949668884277
    5. 'x' → logprob: -13.575949668884277
    6. ' in' → logprob: -14.575949668884277
    7. '    ' → logprob: -14.700949668884277
    8. 'i' → logprob: -14.950949668884277
    9. '   ' → logprob: -15.075949668884277
    10. '1' → logprob: -15.200949668884277

Token 289: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06234532222151756
    2. ',' → logprob: -2.812345266342163
    3. ',i' → logprob: -8.187345504760742
    4. ' i' → logprob: -9.437345504760742
    5. 'in' → logprob: -11.312345504760742
    6. ' in' → logprob: -11.937345504760742
    7. ' ,' → logprob: -14.812345504760742
    8. ',x' → logprob: -15.562345504760742
    9. '	i' → logprob: -15.812345504760742
    10. ',n' → logprob: -16.437345504760742

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4747593104839325
    2. 'in' → logprob: -0.9747593402862549
    3. ' in' → logprob: -8.099759101867676
    4. 'range' → logprob: -8.474759101867676
    5. ',in' → logprob: -9.474759101867676
    6. ',x' → logprob: -10.224759101867676
    7. ',n' → logprob: -10.599759101867676
    8. ',p' → logprob: -11.349759101867676
    9. ',i' → logprob: -11.849759101867676
    10. ',s' → logprob: -12.599759101867676

Token 291: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29104000329971313
    2. 'x' → logprob: -1.5410399436950684
    3. 'v' → logprob: -3.2910399436950684
    4. 'e' → logprob: -7.416039943695068
    5. 'px' → logprob: -7.666039943695068
    6. ' p' → logprob: -10.666040420532227
    7. 'parent' → logprob: -11.291040420532227
    8. 'j' → logprob: -11.541040420532227
    9. ' ' → logprob: -12.166040420532227
    10. '   ' → logprob: -12.291040420532227

Token 292: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023335857316851616
    2. ' in' → logprob: -3.7733359336853027
    3. 'n' → logprob: -9.398335456848145
    4. 'enumer' → logprob: -13.273335456848145
    5. ' ' → logprob: -13.648335456848145
    6. 'i' → logprob: -14.523335456848145
    7. ',' → logprob: -14.648335456848145
    8. 's' → logprob: -14.898335456848145
    9. 'inthe' → logprob: -15.148335456848145
    10. '	in' → logprob: -15.148335456848145

Token 293: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.01416398212313652
    2. ' enumerate' → logprob: -4.264163970947266
    3. 'in' → logprob: -15.264163970947266
    4. 'enum' → logprob: -15.514163970947266
    5. 'Enumer' → logprob: -18.514163970947266
    6. ' enumer' → logprob: -19.139163970947266
    7. '.enumer' → logprob: -19.764163970947266
    8. 'en' → logprob: -19.889163970947266
    9. ' in' → logprob: -20.014163970947266
    10. 'index' → logprob: -20.264163970947266

Token 294: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018159886822104454
    2. 'self' → logprob: -4.018159866333008
    3. ' self' → logprob: -11.643159866333008
    4. '(' → logprob: -14.518159866333008
    5. ' (' → logprob: -14.643159866333008
    6. ',self' → logprob: -16.393159866333008
    7. ')' → logprob: -17.018159866333008
    8. '	self' → logprob: -17.393159866333008
    9. '=self' → logprob: -17.393159866333008
    10. ',' → logprob: -17.643159866333008

Token 295: '.parents' (ID: 168761)
  Prédit: '.parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parents' → logprob: -1.3856492842023727e-06
    2. 'parents' → logprob: -14.125000953674316
    3. '.p' → logprob: -15.750000953674316
    4. ' .' → logprob: -16.375001907348633
    5. '.par' → logprob: -16.500001907348633
    6. '.' → logprob: -16.500001907348633
    7. '.parent' → logprob: -16.625001907348633
    8. '.children' → logprob: -18.625001907348633
    9. ' parents' → logprob: -19.375001907348633
    10. 'Parents' → logprob: -19.500001907348633

Token 296: ')' (ID: 8)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.680810272693634
    2. ' if' → logprob: -1.4308102130889893
    3. ')' → logprob: -1.9308102130889893
    4. 'in' → logprob: -2.3058102130889893
    5. ' in' → logprob: -4.930810451507568
    6. 'enumer' → logprob: -6.180810451507568
    7. '()' → logprob: -7.555810451507568
    8. '   ' → logprob: -10.18080997467041
    9. ' ' → logprob: -10.18080997467041
    10. ' )' → logprob: -11.05580997467041

Token 297: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22727128863334656
    2. 'if' → logprob: -1.602271318435669
    3. ')' → logprob: -6.85227108001709
    4. 'in' → logprob: -8.35227108001709
    5. '   ' → logprob: -8.72727108001709
    6. '()' → logprob: -9.35227108001709
    7. 'p' → logprob: -9.47727108001709
    8. ' in' → logprob: -9.47727108001709
    9. 'enumer' → logprob: -10.35227108001709
    10. ' ' → logprob: -10.72727108001709

Token 298: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0003357006062287837
    2. ' p' → logprob: -8.000335693359375
    3. '<p' → logprob: -16.625335693359375
    4. '   ' → logprob: -17.375335693359375
    5. ' ' → logprob: -17.875335693359375
    6. '  ' → logprob: -18.125335693359375
    7. '(p' → logprob: -18.375335693359375
    8. '	p' → logprob: -18.625335693359375
    9. '    ' → logprob: -18.875335693359375
    10. '           ' → logprob: -19.125335693359375

Token 299: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00010950337309623137
    2. ' <' → logprob: -9.125109672546387
    3. '()<' → logprob: -15.625109672546387
    4. '&lt' → logprob: -16.25010871887207
    5. '0' → logprob: -16.50010871887207
    6. ')<' → logprob: -16.75010871887207
    7. ']<' → logprob: -16.75010871887207
    8. '[' → logprob: -17.25010871887207
    9. ' ' → logprob: -17.75010871887207
    10. '＜' → logprob: -17.87510871887207

Token 300: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '=' → logprob: -14.87515926361084
    4. '   ' → logprob: -17.500158309936523
    5. '  ' → logprob: -18.125158309936523
    6. ')' → logprob: -18.250158309936523
    7. '
' → logprob: -18.375158309936523
    8. '۰' → logprob: -19.000158309936523
    9. ' ' → logprob: -19.250158309936523
    10. '(' → logprob: -19.312658309936523

Token 301: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.87500762939453
    4. '۰' → logprob: -19.12500762939453
    5. '=' → logprob: -19.25000762939453
    6. '-' → logprob: -19.50000762939453
    7. '00' → logprob: -20.18750762939453
    8. '  ' → logprob: -20.50000762939453
    9. ')' → logprob: -20.50000762939453
    10. '０' → logprob: -20.68750762939453

Token 302: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.925185440806672e-05
    2. ' ]' → logprob: -9.375099182128906
    3. ')]' → logprob: -11.875099182128906
    4. ']
' → logprob: -12.000099182128906
    5. '()]' → logprob: -14.000099182128906
    6. '   ' → logprob: -15.875099182128906
    7. ']

' → logprob: -16.000099182128906
    8. '       ' → logprob: -16.750099182128906
    9. ')' → logprob: -17.375099182128906
    10. '])' → logprob: -17.500099182128906

Token 303: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19485554099082947
    2. '   ' → logprob: -1.9448555707931519
    3. '<|end|>' → logprob: -3.6948554515838623
    4. '#' → logprob: -5.319855690002441
    5. '```' → logprob: -6.819855690002441
    6. ' def' → logprob: -7.194855690002441
    7. ')' → logprob: -7.694855690002441
    8. '<|end|>' → logprob: -7.694855690002441
    9. '...' → logprob: -8.194855690002441
    10. 'from' → logprob: -8.194855690002441

Token 304: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00011880126112373546
    2. ' def' → logprob: -9.62511920928955
    3. '   ' → logprob: -9.87511920928955
    4. '	def' → logprob: -14.75011920928955
    5. 'count' → logprob: -15.25011920928955
    6. '#' → logprob: -15.37511920928955
    7. 'from' → logprob: -16.750118255615234
    8. 'depth' → logprob: -16.875118255615234
    9. 'root' → logprob: -17.125118255615234
    10. 'class' → logprob: -17.250118255615234

Token 305: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.6855564117431641
    2. 'count' → logprob: -0.8105564117431641
    3. 'all' → logprob: -3.810556411743164
    4. 'members' → logprob: -4.435556411743164
    5. 'groups' → logprob: -4.560556411743164
    6. '__' → logprob: -6.185556411743164
    7. 'leaf' → logprob: -6.685556411743164
    8. 'member' → logprob: -6.935556411743164
    9. 'counts' → logprob: -7.060556411743164
    10. 'get' → logprob: -7.185556411743164

Token 306: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019552340731024742
    2. '_count' → logprob: -4.144552230834961
    3. 'count' → logprob: -6.644552230834961
    4. '_size' → logprob: -6.894552230834961
    5. 'size' → logprob: -7.644552230834961
    6. 'ing' → logprob: -8.144552230834961
    7. '_sizes' → logprob: -8.394552230834961
    8. 'sizes' → logprob: -9.394552230834961
    9. 'es' → logprob: -10.144552230834961
    10. 'ed' → logprob: -11.269552230834961

Token 307: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2233183042553719e-05
    2. '(' → logprob: -11.625012397766113
    3. '(s' → logprob: -13.250012397766113
    4. '   ' → logprob: -14.000012397766113
    5. 'self' → logprob: -15.250012397766113
    6. ' (' → logprob: -15.750012397766113
    7. 's' → logprob: -15.875012397766113
    8. '(
' → logprob: -16.875011444091797
    9. ' ' → logprob: -17.875011444091797
    10. ' self' → logprob: -17.875011444091797

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49318379163742065
    2. '):' → logprob: -0.9931837916374207
    3. 'self' → logprob: -4.243183612823486
    4. '):
' → logprob: -5.993183612823486
    5. '(self' → logprob: -6.243183612823486
    6. '   ' → logprob: -10.118184089660645
    7. ')->' → logprob: -10.868184089660645
    8. ' self' → logprob: -11.243184089660645
    9. ')(' → logprob: -11.618184089660645
    10. ' ):' → logprob: -11.868184089660645

Token 309: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06299930810928345
    2. '   ' → logprob: -3.5629992485046387
    3. ':' → logprob: -4.187999248504639
    4. 'self' → logprob: -5.187999248504639
    5. ' ->' → logprob: -5.687999248504639
    6. '(' → logprob: -5.937999248504639
    7. ' self' → logprob: -6.437999248504639
    8. '       ' → logprob: -6.687999248504639
    9. '->' → logprob: -6.812999248504639
    10. '=' → logprob: -7.312999248504639

Token 310: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.759734732331708e-05
    2. ' int' → logprob: -11.125017166137695
    3. '(int' → logprob: -13.000017166137695
    4. '[int' → logprob: -15.000017166137695
    5. '   ' → logprob: -16.500017166137695
    6. '
' → logprob: -16.625017166137695
    7. ':int' → logprob: -17.250017166137695
    8. '  ' → logprob: -17.875017166137695
    9. '<int' → logprob: -18.125017166137695
    10. 'def' → logprob: -18.250017166137695

Token 311: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006109290407039225
    2. '(' → logprob: -8.625611305236816
    3. '   ' → logprob: -8.625611305236816
    4. '       ' → logprob: -8.625611305236816
    5. 'self' → logprob: -10.000611305236816
    6. ':
' → logprob: -11.625611305236816
    7. ':' → logprob: -11.625611305236816
    8. ' self' → logprob: -12.625611305236816
    9. '(
' → logprob: -12.875611305236816
    10. ' (' → logprob: -13.375611305236816

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01305434200912714
    2. 'return' → logprob: -4.513054370880127
    3. ' return' → logprob: -6.263054370880127
    4. '   ' → logprob: -9.263053894042969
    5. '	return' → logprob: -13.013053894042969
    6. ' ' → logprob: -14.513053894042969
    7. '      ' → logprob: -14.888053894042969
    8. '	' → logprob: -15.138053894042969
    9. '	   ' → logprob: -15.138053894042969
    10. '    ' → logprob: -15.638053894042969

Token 313: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.176947600673884e-05
    2. ' return' → logprob: -10.750021934509277
    3. '       ' → logprob: -15.375021934509277
    4. '   ' → logprob: -17.37502098083496
    5. 'len' → logprob: -19.87502098083496
    6. '	return' → logprob: -20.87502098083496
    7. '
' → logprob: -21.37502098083496
    8. 'ret' → logprob: -21.37502098083496
    9. 'eturn' → logprob: -21.62502098083496
    10. ' ' → logprob: -21.62502098083496

Token 314: ' sum' (ID: 4215)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00874493271112442
    2. ' len' → logprob: -4.758744716644287
    3. 'sum' → logprob: -9.008745193481445
    4. 'self' → logprob: -12.883745193481445
    5. ' sum' → logprob: -13.258745193481445
    6. '(len' → logprob: -13.758745193481445
    7. '-' → logprob: -13.883745193481445
    8. ' -' → logprob: -14.008745193481445
    9. '	len' → logprob: -14.758745193481445
    10. ' ' → logprob: -15.758745193481445

Token 315: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47953182458877563
    2. '(p' → logprob: -0.9795318245887756
    3. '([' → logprob: -5.229531764984131
    4. '((' → logprob: -10.104532241821289
    5. '(x' → logprob: -10.479532241821289
    6. 'p' → logprob: -11.729532241821289
    7. '(px' → logprob: -13.479532241821289
    8. '(map' → logprob: -14.104532241821289
    9. '([(' → logprob: -14.229532241821289
    10. '(i' → logprob: -14.229532241821289

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3916778862476349
    2. 'p' → logprob: -1.1416778564453125
    3. '[' → logprob: -5.8916778564453125
    4. '[p' → logprob: -6.7666778564453125
    5. '(' → logprob: -7.2666778564453125
    6. '(p' → logprob: -8.766677856445312
    7. '{' → logprob: -12.266677856445312
    8. 'px' → logprob: -12.391677856445312
    9. ' p' → logprob: -12.391677856445312
    10. '[x' → logprob: -13.141677856445312

Token 317: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2922443747520447
    2. ' for' → logprob: -1.5422444343566895
    3. 'p' → logprob: -3.4172444343566895
    4. '1' → logprob: -5.0422444343566895
    5. ' p' → logprob: -9.292243957519531
    6. '   ' → logprob: -10.042243957519531
    7. ',' → logprob: -10.292243957519531
    8. 'if' → logprob: -10.667243957519531
    9. '[p' → logprob: -11.292243957519531
    10. ' ' → logprob: -11.417243957519531

Token 318: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015048631466925144
    2. ' p' → logprob: -6.501504898071289
    3. 'x' → logprob: -13.876504898071289
    4. 'i' → logprob: -14.126504898071289
    5. '   ' → logprob: -14.751504898071289
    6. 'v' → logprob: -15.751504898071289
    7. ' ' → logprob: -15.751504898071289
    8. '_p' → logprob: -17.00150489807129
    9. 'parent' → logprob: -17.50150489807129
    10. 'e' → logprob: -17.62650489807129

Token 319: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132924735546112
    2. ' in' → logprob: -1.3132925033569336
    3. 'p' → logprob: -10.813292503356934
    4. ' ' → logprob: -12.313292503356934
    5. ' p' → logprob: -13.188292503356934
    6. 'n' → logprob: -13.188292503356934
    7. 'import' → logprob: -14.063292503356934
    8. 'In' → logprob: -14.938292503356934
    9. 'inp' → logprob: -15.313292503356934
    10. '	in' → logprob: -15.563292503356934

Token 320: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025128775741904974
    2. ' self' → logprob: -6.0025129318237305
    3. '(self' → logprob: -12.00251293182373
    4. ' ' → logprob: -12.12751293182373
    5. 'parent' → logprob: -12.25251293182373
    6. '   ' → logprob: -12.62751293182373
    7. ')' → logprob: -12.75251293182373
    8. 'parents' → logprob: -13.00251293182373
    9. 'sys' → logprob: -13.50251293182373
    10. '	self' → logprob: -13.87751293182373

Token 321: '.parents' (ID: 168761)
  Prédit: '.parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parents' → logprob: -5.9153885558771435e-06
    2. 'parents' → logprob: -12.125005722045898
    3. '.parent' → logprob: -15.500005722045898
    4. '.p' → logprob: -16.2500057220459
    5. '.par' → logprob: -16.5000057220459
    6. ' parents' → logprob: -16.7500057220459
    7. ' .' → logprob: -17.3750057220459
    8. ' if' → logprob: -17.7500057220459
    9. 'if' → logprob: -18.1250057220459
    10. 'Parents' → logprob: -18.6250057220459

Token 322: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4741041660308838
    2. 'if' → logprob: -0.9741041660308838
    3. '   ' → logprob: -11.474103927612305
    4. '       ' → logprob: -11.974103927612305
    5. ' ' → logprob: -12.849103927612305
    6. 'p' → logprob: -13.099103927612305
    7. '           ' → logprob: -13.099103927612305
    8. '        ' → logprob: -14.224103927612305
    9. ' p' → logprob: -14.474103927612305
    10. ' <' → logprob: -14.724103927612305

Token 323: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004306692280806601
    2. ' p' → logprob: -7.750430583953857
    3. '0' → logprob: -18.875431060791016
    4. '<p' → logprob: -19.125431060791016
    5. '<' → logprob: -19.625431060791016
    6. '   ' → logprob: -21.250431060791016
    7. '	p' → logprob: -21.250431060791016
    8. '(p' → logprob: -21.500431060791016
    9. ' ' → logprob: -21.500431060791016
    10. '  ' → logprob: -22.500431060791016

Token 324: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0010328111238777637
    2. ' <' → logprob: -6.876032829284668
    3. ' ' → logprob: -17.00103187561035
    4. '[' → logprob: -17.50103187561035
    5. '<p' → logprob: -17.62603187561035
    6. '()<' → logprob: -18.37603187561035
    7. '0' → logprob: -18.75103187561035
    8. '(<' → logprob: -18.75103187561035
    9. '＜' → logprob: -18.87603187561035
    10. '{' → logprob: -19.12603187561035

Token 325: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013271415373310447
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -13.876327514648438
    4. '  ' → logprob: -16.251327514648438
    5. '=' → logprob: -16.876327514648438
    6. '1' → logprob: -17.063827514648438
    7. '```' → logprob: -17.376327514648438
    8. ' ' → logprob: -18.251327514648438
    9. '`' → logprob: -18.501327514648438
    10. '2' → logprob: -18.501327514648438

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '=' → logprob: -15.75001335144043
    4. '   ' → logprob: -16.87501335144043
    5. '۰' → logprob: -18.43751335144043
    6. '  ' → logprob: -18.62501335144043
    7. '1' → logprob: -18.75001335144043
    8. '<|end|>' → logprob: -18.81251335144043
    9. ')' → logprob: -19.00001335144043
    10. '```' → logprob: -19.00001335144043

Token 327: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. ')
' → logprob: -11.000018119812012
    3. ' )' → logprob: -13.625018119812012
    4. '       ' → logprob: -16.625019073486328
    5. '   ' → logprob: -16.625019073486328
    6. ')}' → logprob: -16.875019073486328
    7. ')

' → logprob: -17.125019073486328
    8. '))' → logprob: -17.625019073486328
    9. ')return' → logprob: -18.000019073486328
    10. '())' → logprob: -18.500019073486328

Token 328: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.338466093642637e-05
    2. '#' → logprob: -10.625073432922363
    3. '   ' → logprob: -11.000073432922363
    4. '<|end|>' → logprob: -11.375073432922363
    5. ' def' → logprob: -11.875073432922363
    6. 'if' → logprob: -12.750073432922363
    7. 'n' → logprob: -12.875073432922363
    8. '<|end|>' → logprob: -13.250073432922363
    9. '```' → logprob: -13.375073432922363
    10. ')' → logprob: -13.750073432922363

Token 329: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0029109083116054535
    2. ' solve' → logprob: -5.87791109085083
    3. 'main' → logprob: -9.627910614013672
    4. '	main' → logprob: -10.877910614013672
    5. ' ma' → logprob: -12.252910614013672
    6. '_main' → logprob: -12.502910614013672
    7. '_' → logprob: -13.002910614013672
    8. ' ' → logprob: -13.127910614013672
    9. 'solve' → logprob: -13.252910614013672
    10. ' resolve' → logprob: -13.502910614013672

Token 330: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0921942703134846e-05
    2. ' ():' → logprob: -11.87501049041748
    3. '()' → logprob: -13.00001049041748
    4. '():
' → logprob: -13.37501049041748
    5. '().' → logprob: -18.625011444091797
    6. '(' → logprob: -18.625011444091797
    7. '()>' → logprob: -20.000011444091797
    8. '_' → logprob: -20.250011444091797
    9. '():
' → logprob: -20.500011444091797
    10. '()->' → logprob: -20.500011444091797

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15114031732082367
    2. 'n' → logprob: -2.1511402130126953
    3. ' n' → logprob: -3.7761402130126953
    4. 'N' → logprob: -8.026140213012695
    5. ' N' → logprob: -8.526140213012695
    6. '    ' → logprob: -8.526140213012695
    7. '	n' → logprob: -8.651140213012695
    8. '  ' → logprob: -10.151140213012695
    9. ' ' → logprob: -10.526140213012695
    10. '(n' → logprob: -11.526140213012695

Token 332: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.642946720123291
    2. 'n' → logprob: -0.767946720123291
    3. '   ' → logprob: -5.267946720123291
    4. ' n' → logprob: -5.892946720123291
    5. ' N' → logprob: -6.142946720123291
    6. 'Q' → logprob: -9.767946243286133
    7. 'H' → logprob: -10.517946243286133
    8. ' ' → logprob: -10.642946243286133
    9. 'h' → logprob: -10.892946243286133
    10. '#' → logprob: -11.017946243286133

Token 333: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000639765290543437
    2. ',K' → logprob: -8.500639915466309
    3. ',M' → logprob: -8.625639915466309
    4. ' ,' → logprob: -8.750639915466309
    5. ' =' → logprob: -9.375639915466309
    6. '=' → logprob: -12.250639915466309
    7. ' M' → logprob: -13.125639915466309
    8. ',k' → logprob: -13.375639915466309
    9. ' K' → logprob: -13.375639915466309
    10. ',Q' → logprob: -13.750639915466309

Token 334: ' I' (ID: 357)
  Prédit: ' I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' I' → logprob: -0.35365933179855347
    2. 'I' → logprob: -1.2286593914031982
    3. ' int' → logprob: -5.853659152984619
    4. 'int' → logprob: -6.353659152984619
    5. 'LI' → logprob: -7.728659152984619
    6. ' ' → logprob: -9.853659629821777
    7. ' LI' → logprob: -9.853659629821777
    8. ' MI' → logprob: -10.478659629821777
    9. 'MI' → logprob: -11.353659629821777
    10. 'INT' → logprob: -13.853659629821777

Token 335: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000636308453977108
    2. '()
' → logprob: -7.375636100769043
    3. ')' → logprob: -11.875636100769043
    4. ' ()' → logprob: -13.375636100769043
    5. '())' → logprob: -14.625636100769043
    6. '()
' → logprob: -14.750636100769043
    7. '(' → logprob: -15.750636100769043
    8. '()\' → logprob: -17.00063705444336
    9. '()

' → logprob: -17.25063705444336
    10. '#' → logprob: -17.62563705444336

Token 336: '   ' (ID: 271)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.0854665040969849
    2. 'M' → logprob: -1.2104665040969849
    3. '   ' → logprob: -2.2104663848876953
    4. 'K' → logprob: -2.7104663848876953
    5. ' edges' → logprob: -3.0854663848876953
    6. 'Q' → logprob: -3.3354663848876953
    7. ' K' → logprob: -3.7104663848876953
    8. 'E' → logprob: -4.210466384887695
    9. 'edges' → logprob: -4.335466384887695
    10. ' Q' → logprob: -4.585466384887695

Token 337: ' M' (ID: 391)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.5857458114624023
    2. 'edges' → logprob: -1.2107458114624023
    3. 'M' (adapté à ' M') → logprob: -3.2107458114624023
    4. 'A' → logprob: -3.2107458114624023
    5. 'Q' → logprob: -3.4607458114624023
    6. 'K' → logprob: -4.960745811462402
    7. 'E' → logprob: -5.210745811462402
    8. 'UF' → logprob: -6.460745811462402
    9. 'pairs' → logprob: -6.460745811462402
    10. 'arr' → logprob: -6.710745811462402

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12139815092086792
    2. ',' → logprob: -2.7463982105255127
    3. '=' → logprob: -2.9963982105255127
    4. ' ' → logprob: -9.621397972106934
    5. ' ,' → logprob: -9.746397972106934
    6. '   ' → logprob: -10.371397972106934
    7. '    ' → logprob: -11.496397972106934
    8. ',N' → logprob: -12.121397972106934
    9. ',M' → logprob: -12.246397972106934
    10. '  ' → logprob: -12.496397972106934

Token 339: ' ' (ID: 220)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.6338499188423157
    2. ' I' → logprob: -0.7588499188423157
    3. 'MI' → logprob: -7.38385009765625
    4. ' MI' → logprob: -7.50885009765625
    5. ' ' → logprob: -9.63385009765625
    6. 'LI' → logprob: -12.00885009765625
    7. ' M' → logprob: -13.25885009765625
    8. '	I' → logprob: -13.63385009765625
    9. '  ' → logprob: -13.88385009765625
    10. ' LI' → logprob: -14.13385009765625

Token 340: '10' (ID: 702)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.002638676203787327
    2. ' I' → logprob: -6.377638816833496
    3. 'MI' → logprob: -7.002638816833496
    4. ' ' → logprob: -11.627638816833496
    5. ' MI' → logprob: -11.627638816833496
    6. 'LI' → logprob: -12.377638816833496
    7. 'int' → logprob: -13.877638816833496
    8. 'M' → logprob: -14.377638816833496
    9. '  ' → logprob: -14.502638816833496
    10. '   ' → logprob: -14.627638816833496

Token 341: '**' (ID: 410)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.30611610412597656
    2. '0' → logprob: -2.0561161041259766
    3. '   ' → logprob: -2.6811161041259766
    4. '000' → logprob: -3.3061161041259766
    5. '00' → logprob: -4.306116104125977
    6. 'MI' → logprob: -4.556116104125977
    7. '**' → logprob: -6.056116104125977
    8. ' I' → logprob: -6.556116104125977
    9. 'M' → logprob: -6.931116104125977
    10. 'int' → logprob: -8.181116104125977

Token 342: '5' (ID: 20)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0016785101033747196
    2. '6' → logprob: -6.626678466796875
    3. '5' → logprob: -9.001678466796875
    4. '18' → logprob: -9.001678466796875
    5. '7' → logprob: -9.751678466796875
    6. '8' → logprob: -10.876678466796875
    7. '10' → logprob: -11.251678466796875
    8. '12' → logprob: -11.251678466796875
    9. '15' → logprob: -13.251678466796875
    10. '4' → logprob: -14.876678466796875

Token 343: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8052544593811035
    2. '<|end|>' → logprob: -1.3052544593811035
    3. '   ' → logprob: -2.5552544593811035
    4. ')' → logprob: -3.3052544593811035
    5. ',' → logprob: -3.5552544593811035
    6. '0' → logprob: -3.8052544593811035
    7. ' ' → logprob: -4.0552544593811035
    8. '
' → logprob: -4.1802544593811035
    9. ' +' → logprob: -4.1802544593811035
    10. 'I' → logprob: -4.3052544593811035

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7404674887657166
    2. 'uf' → logprob: -1.3654675483703613
    3. 'K' → logprob: -1.9904675483703613
    4. 'edges' → logprob: -3.6154675483703613
    5. ' uf' → logprob: -4.615467548370361
    6. 'UF' → logprob: -4.615467548370361
    7. 'Q' → logprob: -4.615467548370361
    8. 'A' → logprob: -5.115467548370361
    9. 'G' → logprob: -5.365467548370361
    10. 'u' → logprob: -5.365467548370361

Token 345: ' XY' (ID: 71987)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.027085399255156517
    2. 'Q' → logprob: -5.152085304260254
    3. 'edges' → logprob: -5.402085304260254
    4. 'UF' → logprob: -5.777085304260254
    5. 'K' → logprob: -6.402085304260254
    6. ' uf' → logprob: -6.777085304260254
    7. 'A' → logprob: -6.777085304260254
    8. 'for' → logprob: -6.902085304260254
    9. 'ans' → logprob: -7.277085304260254
    10. 'd' → logprob: -7.402085304260254

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474109947681427
    2. '=' → logprob: -0.974109947681427
    3. ',' → logprob: -10.974109649658203
    4. 's' → logprob: -12.224109649658203
    5. '_' → logprob: -12.599109649658203
    6. ' ' → logprob: -13.349109649658203
    7. '=[]' → logprob: -13.474109649658203
    8. '[]' → logprob: -13.724109649658203
    9. '   ' → logprob: -13.849109649658203
    10. ')' → logprob: -14.974109649658203

Token 347: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01599307172000408
    2. ' [' → logprob: -4.640993118286133
    3. '[L' → logprob: -5.390993118286133
    4. '[List' → logprob: -7.265993118286133
    5. '[list' → logprob: -7.515993118286133
    6. '[I' → logprob: -8.265993118286133
    7. 'LI' → logprob: -10.515993118286133
    8. '[line' → logprob: -11.265993118286133
    9. '[input' → logprob: -11.265993118286133
    10. '[array' → logprob: -11.765993118286133

Token 348: '0' (ID: 15)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.6372537016868591
    2. 'tuple' → logprob: -1.012253761291504
    3. 'MI' → logprob: -2.512253761291504
    4. 'list' → logprob: -4.137253761291504
    5. 'I' → logprob: -5.637253761291504
    6. ']' → logprob: -5.637253761291504
    7. ' tuple' → logprob: -6.762253761291504
    8. 'None' → logprob: -7.262253761291504
    9. '*' → logprob: -7.887253761291504
    10. '0' → logprob: -8.387253761291504

Token 349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14616049826145172
    2. ']*' → logprob: -2.39616060256958
    3. ']*(' → logprob: -3.64616060256958
    4. '()]' → logprob: -4.64616060256958
    5. ',' → logprob: -5.39616060256958
    6. 'for' → logprob: -6.14616060256958
    7. ' for' → logprob: -6.52116060256958
    8. '0' → logprob: -7.64616060256958
    9. '()' → logprob: -8.396160125732422
    10. '(' → logprob: -8.896160125732422

Token 350: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4460158944129944
    2. ']*' → logprob: -1.9460158348083496
    3. ' *' → logprob: -2.8210158348083496
    4. '*(' → logprob: -3.5710158348083496
    5. '*N' → logprob: -3.6960158348083496
    6. ',' → logprob: -3.8210158348083496
    7. ']' → logprob: -3.8210158348083496
    8. 'for' → logprob: -4.19601583480835
    9. '0' → logprob: -4.69601583480835
    10. ']*(' → logprob: -4.69601583480835

Token 351: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4785827696323395
    2. '(N' → logprob: -1.228582739830017
    3. '(' → logprob: -2.4785828590393066
    4. '(M' → logprob: -6.353582859039307
    5. 'M' → logprob: -6.603582859039307
    6. ' (' → logprob: -7.978582859039307
    7. ' N' → logprob: -9.103582382202148
    8. '   ' → logprob: -9.478582382202148
    9. '2' → logprob: -9.478582382202148
    10. ' ' → logprob: -11.478582382202148

Token 352: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3422532081604004
    2. '2' → logprob: -1.3422532081604004
    3. 'M' → logprob: -3.8422532081604004
    4. '(' → logprob: -5.8422532081604
    5. '   ' → logprob: -6.4672532081604
    6. '(N' → logprob: -6.8422532081604
    7. ' ' → logprob: -7.4672532081604
    8. ' N' → logprob: -7.8422532081604
    9. '(M' → logprob: -7.8422532081604
    10. ' M' → logprob: -10.217252731323242

Token 353: ' *' (ID: 425)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*N' → logprob: -0.18338848650455475
    2. ' *' → logprob: -2.4333884716033936
    3. '*' → logprob: -2.6833884716033936
    4. '*M' → logprob: -4.558388710021973
    5. 'N' → logprob: -7.058388710021973
    6. '   ' → logprob: -9.058388710021973
    7. 'M' → logprob: -11.183388710021973
    8. ' ' → logprob: -12.183388710021973
    9. ')' → logprob: -12.933388710021973
    10. ' N' → logprob: -13.058388710021973

Token 354: ' M' (ID: 391)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.020948579534888268
    2. 'M' → logprob: -3.895948648452759
    3. ' N' → logprob: -8.14594841003418
    4. '   ' → logprob: -9.52094841003418
    5. ' M' → logprob: -10.52094841003418
    6. ' ' → logprob: -12.27094841003418
    7. '10' → logprob: -12.39594841003418
    8. '(N' → logprob: -13.27094841003418
    9. 'I' → logprob: -13.64594841003418
    10. '  ' → logprob: -14.27094841003418

Token 355: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028657352086156607
    2. ')
' → logprob: -6.002865791320801
    3. ' )' → logprob: -7.877865791320801
    4. ' )
' → logprob: -12.5028657913208
    5. ')]' → logprob: -13.1278657913208
    6. ')

' → logprob: -13.2528657913208
    7. ']' → logprob: -13.5028657913208
    8. '   ' → logprob: -15.0028657913208
    9. ')
' → logprob: -15.1278657913208
    10. '))' → logprob: -15.3778657913208

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023879479616880417
    2. '<|end|>' → logprob: -3.8988795280456543
    3. '    
' → logprob: -6.773879528045654
    4. '
' → logprob: -7.273879528045654
    5. ')' → logprob: -7.523879528045654
    6. ' for' → logprob: -8.148879051208496
    7. ' ' → logprob: -8.773879051208496
    8. 'for' → logprob: -9.273879051208496
    9. '<|end|>' → logprob: -9.398879051208496
    10. '    ' → logprob: -9.523879051208496

Token 357: ' uf' (ID: 35772)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5890443325042725
    2. ' for' → logprob: -0.8390443325042725
    3. '   ' → logprob: -5.589044570922852
    4. 'idx' → logprob: -5.714044570922852
    5. '#' → logprob: -7.214044570922852
    6. ' ' → logprob: -7.589044570922852
    7. ' idx' → logprob: -7.589044570922852
    8. 'index' → logprob: -7.714044570922852
    9. '<|end|>' → logprob: -7.714044570922852
    10. 'X' → logprob: -7.964044570922852

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02057458832859993
    2. '=' → logprob: -3.8955745697021484
    3. '.' → logprob: -11.020574569702148
    4. '.union' → logprob: -11.895574569702148
    5. ' ' → logprob: -12.270574569702148
    6. '   ' → logprob: -14.020574569702148
    7. 'union' → logprob: -14.145574569702148
    8. '(' → logprob: -14.270574569702148
    9. ')' → logprob: -14.520574569702148
    10. ' =
' → logprob: -14.645574569702148

Token 359: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.12693114578723907
    2. ' Union' → logprob: -2.1269311904907227
    3. '   ' → logprob: -13.626931190490723
    4. ' union' → logprob: -15.126931190490723
    5. 'Uni' → logprob: -15.251931190490723
    6. 'Unity' → logprob: -15.251931190490723
    7. 'union' → logprob: -15.376931190490723
    8. '_union' → logprob: -15.376931190490723
    9. ''Union' → logprob: -15.501931190490723
    10. ' ' → logprob: -15.501931190490723

Token 360: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -2.935296834039036e-06
    2. '   ' → logprob: -13.75000286102295
    3. 'F' → logprob: -14.37500286102295
    4. 'Fill' → logprob: -15.12500286102295
    5. '[' → logprob: -15.25000286102295
    6. ' Find' → logprob: -15.87500286102295
    7. 'Fi' → logprob: -16.250003814697266
    8. '(F' → logprob: -16.375003814697266
    9. ')' → logprob: -16.625003814697266
    10. '(' → logprob: -17.000003814697266

Token 361: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.012547093443572521
    2. '(' → logprob: -4.637547016143799
    3. '(M' → logprob: -5.887547016143799
    4. '(
' → logprob: -12.762547492980957
    5. '(X' → logprob: -13.012547492980957
    6. '((' → logprob: -13.137547492980957
    7. ' (' → logprob: -13.387547492980957
    8. 'N' → logprob: -13.512547492980957
    9. '(I' → logprob: -14.387547492980957
    10. '(n' → logprob: -14.387547492980957

Token 362: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08815053850412369
    2. 'M' → logprob: -2.8381505012512207
    3. '2' → logprob: -3.7131505012512207
    4. '10' → logprob: -6.838150501251221
    5. '100' → logprob: -9.088150978088379
    6. '   ' → logprob: -9.338150978088379
    7. '200' → logprob: -10.088150978088379
    8. ' N' → logprob: -10.338150978088379
    9. '(' → logprob: -10.463150978088379
    10. '3' → logprob: -11.088150978088379

Token 363: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3342413008213043
    2. '*' → logprob: -1.334241271018982
    3. '*M' → logprob: -3.9592413902282715
    4. '*N' → logprob: -6.4592413902282715
    5. 'M' → logprob: -9.209240913391113
    6. 'N' → logprob: -11.709240913391113
    7. '000' → logprob: -13.334240913391113
    8. '
' → logprob: -13.584240913391113
    9. '*m' → logprob: -13.584240913391113
    10. ' M' → logprob: -13.709240913391113

Token 364: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.002050574403256178
    2. ' M' → logprob: -6.377050399780273
    3. 'N' → logprob: -8.252050399780273
    4. '10' → logprob: -9.377050399780273
    5. ' ' → logprob: -14.002050399780273
    6. '   ' → logprob: -14.127050399780273
    7. '*M' → logprob: -14.252050399780273
    8. ' N' → logprob: -15.502050399780273
    9. '           ' → logprob: -16.002050399780273
    10. '*' → logprob: -16.252050399780273

Token 365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012035090912831947
    2. ')
' → logprob: -9.125120162963867
    3. ' )' → logprob: -11.500120162963867
    4. ')

' → logprob: -14.750120162963867
    5. '))' → logprob: -15.000120162963867
    6. '   ' → logprob: -15.750120162963867
    7. ')
' → logprob: -15.750120162963867
    8. ')`' → logprob: -16.125120162963867
    9. '),' → logprob: -17.500120162963867
    10. ')#' → logprob: -18.125120162963867

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03398233279585838
    2. '<|end|>' → logprob: -4.408982276916504
    3. 'for' → logprob: -4.658982276916504
    4. '
' → logprob: -5.033982276916504
    5. '    
' → logprob: -5.658982276916504
    6. ' for' → logprob: -6.533982276916504
    7. '	for' → logprob: -9.033982276916504
    8. ')' → logprob: -10.033982276916504
    9. '```' → logprob: -10.158982276916504
    10. '<|end|>' → logprob: -10.408982276916504

Token 367: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05793723091483116
    2. ' for' → logprob: -3.0579371452331543
    3. '   ' → logprob: -4.682937145233154
    4. '	for' → logprob: -11.432937622070312
    5. '    
' → logprob: -11.682937622070312
    6. '    ' → logprob: -11.932937622070312
    7. ')' → logprob: -12.432937622070312
    8. 'idx' → logprob: -12.682937622070312
    9. '  ' → logprob: -12.932937622070312
    10. ' ' → logprob: -13.057937622070312

Token 368: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4753817617893219
    2. ' _' → logprob: -0.9753817319869995
    3. ' i' → logprob: -7.350381851196289
    4. '_i' → logprob: -7.350381851196289
    5. 'i' → logprob: -11.100381851196289
    6. ' ' → logprob: -13.100381851196289
    7. '_=' → logprob: -13.850381851196289
    8. ' ' → logprob: -16.10038185119629
    9. '_-' → logprob: -16.22538185119629
    10. '＿' → logprob: -16.22538185119629

Token 369: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015827087918296456
    2. 'in' → logprob: -6.501582622528076
    3. ' ' → logprob: -9.626583099365234
    4. 'range' → logprob: -12.126583099365234
    5. 'i' → logprob: -12.376583099365234
    6. '  ' → logprob: -14.001583099365234
    7. '(' → logprob: -14.251583099365234
    8. ' (' → logprob: -14.626583099365234
    9. '()' → logprob: -14.751583099365234
    10. 'import' → logprob: -15.001583099365234

Token 370: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001443035143893212
    2. ' range' → logprob: -8.875144004821777
    3. 'r' → logprob: -13.875144004821777
    4. 'I' → logprob: -14.125144004821777
    5. 'rang' → logprob: -14.125144004821777
    6. 'ran' → logprob: -14.625144004821777
    7. 'ra' → logprob: -14.625144004821777
    8. '   ' → logprob: -15.375144004821777
    9. '(range' → logprob: -15.875144004821777
    10. 'in' → logprob: -16.000144958496094

Token 371: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.546478935983032e-05
    2. '(M' → logprob: -11.375025749206543
    3. '(' → logprob: -11.500025749206543
    4. 'N' → logprob: -13.375025749206543
    5. ' (' → logprob: -13.375025749206543
    6. ' N' → logprob: -14.625025749206543
    7. '(I' → logprob: -16.125024795532227
    8. '   ' → logprob: -16.250024795532227
    9. '(
' → logprob: -17.000024795532227
    10. ' ' → logprob: -17.750024795532227

Token 372: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5775837302207947
    2. '):
' → logprob: -0.8275837302207947
    3. ':' → logprob: -6.9525837898254395
    4. '   ' → logprob: -7.9525837898254395
    5. ')' → logprob: -8.827583312988281
    6. ' ):' → logprob: -9.702583312988281
    7. ' ):
' → logprob: -10.077583312988281
    8. '):
' → logprob: -10.327583312988281
    9. ':
' → logprob: -10.452583312988281
    10. ',' → logprob: -11.827583312988281

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006251203827559948
    2. 'x' → logprob: -5.131251335144043
    3. ' x' → logprob: -8.131251335144043
    4. '   ' → logprob: -11.631251335144043
    5. 'X' → logprob: -12.256251335144043
    6. '    ' → logprob: -12.631251335144043
    7. '      ' → logprob: -13.006251335144043
    8. ',' → logprob: -13.381251335144043
    9. '     ' → logprob: -13.506251335144043
    10. '	' → logprob: -14.006251335144043

Token 374: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0007916436879895627
    2. 'X' → logprob: -7.750791549682617
    3. 'a' → logprob: -8.125791549682617
    4. '   ' → logprob: -9.875791549682617
    5. ' x' → logprob: -11.625791549682617
    6. 'A' → logprob: -13.125791549682617
    7. 'u' → logprob: -13.750791549682617
    8. '       ' → logprob: -15.000791549682617
    9. '    
' → logprob: -15.125791549682617
    10. '	x' → logprob: -15.625791549682617

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002078528515994549
    2. ',y' → logprob: -6.252078533172607
    3. ' ,' → logprob: -9.00207805633545
    4. 'y' → logprob: -10.62707805633545
    5. ',Y' → logprob: -14.12707805633545
    6. '_,' → logprob: -14.37707805633545
    7. ' y' → logprob: -15.25207805633545
    8. ',
' → logprob: -15.37707805633545
    9. '1' → logprob: -16.127079010009766
    10. '=' → logprob: -16.252079010009766

Token 376: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02975071594119072
    2. ' y' → logprob: -3.5297508239746094
    3. '	y' → logprob: -15.40475082397461
    4. ' ' → logprob: -16.90475082397461
    5. 'Y' → logprob: -17.52975082397461
    6. '_y' → logprob: -17.90475082397461
    7. '<|end|>' → logprob: -17.90475082397461
    8. 'yj' → logprob: -18.15475082397461
    9. ',y' → logprob: -18.27975082397461
    10. '*y' → logprob: -18.40475082397461

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474087119102478
    2. '=' → logprob: -0.974087119102478
    3. ',' → logprob: -11.59908676147461
    4. ')' → logprob: -15.72408676147461
    5. 'x' → logprob: -15.97408676147461
    6. '=line' → logprob: -16.22408676147461
    7. '=x' → logprob: -16.47408676147461
    8. '=input' → logprob: -16.47408676147461
    9. ' ' → logprob: -16.72408676147461
    10. '＝' → logprob: -16.84908676147461

Token 378: ' MI' (ID: 32682)
  Prédit: 'MI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.05778342857956886
    2. ' MI' → logprob: -2.932783365249634
    3. 'LI' → logprob: -6.932783603668213
    4. 'map' → logprob: -7.057783603668213
    5. ' map' → logprob: -7.182783603668213
    6. 'I' → logprob: -8.307783126831055
    7. ' LI' → logprob: -11.057783126831055
    8. ' I' → logprob: -11.807783126831055
    9. ' ' → logprob: -11.932783126831055
    10. '_MI' → logprob: -12.057783126831055

Token 379: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01429925300180912
    2. '()
' → logprob: -4.389299392700195
    3. ')' → logprob: -6.389299392700195
    4. '       ' → logprob: -9.764299392700195
    5. '();' → logprob: -11.139299392700195
    6. '()
' → logprob: -11.889299392700195
    7. '(' → logprob: -11.889299392700195
    8. '())' → logprob: -11.889299392700195
    9. '<|end|>' → logprob: -12.764299392700195
    10. '()`' → logprob: -12.889299392700195

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3012353479862213
    2. '
' → logprob: -1.426235318183899
    3. '        
' → logprob: -4.551235198974609
    4. '   ' → logprob: -6.051235198974609
    5. ',' → logprob: -6.426235198974609
    6. ' 
' → logprob: -6.551235198974609
    7. '  
' → logprob: -6.926235198974609
    8. '    
' → logprob: -7.301235198974609
    9. ' ' → logprob: -8.05123519897461
    10. 'uf' → logprob: -8.05123519897461

Token 381: ' x' (ID: 1215)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.24704639613628387
    2. 'x' (adapté à ' x') → logprob: -2.24704647064209
    3. 'xy' → logprob: -3.37204647064209
    4. 'if' → logprob: -3.49704647064209
    5. ' uf' → logprob: -3.62204647064209
    6. 'ux' → logprob: -5.12204647064209
    7. '   ' → logprob: -5.62204647064209
    8. ' x' → logprob: -5.74704647064209
    9. 'u' → logprob: -6.24704647064209
    10. ' if' → logprob: -6.62204647064209

Token 382: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.49212342500686646
    2. '-=' → logprob: -1.1171233654022217
    3. '+=' → logprob: -3.7421233654022217
    4. ' +=' → logprob: -3.7421233654022217
    5. ' =' → logprob: -4.992123603820801
    6. '=' → logprob: -5.367123603820801
    7. '-' → logprob: -6.492123603820801
    8. '*=' → logprob: -7.617123603820801
    9. 'x' → logprob: -8.1171236038208
    10. ' *=' → logprob: -9.6171236038208

Token 383: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008127244072966278
    2. ' ' → logprob: -7.125812530517578
    3. '   ' → logprob: -12.125812530517578
    4. '100' → logprob: -14.000812530517578
    5. '10' → logprob: -14.625812530517578
    6. '0' → logprob: -15.000812530517578
    7. '-' → logprob: -15.000812530517578
    8. 'y' → logprob: -15.625812530517578
    9. '900' → logprob: -15.750812530517578
    10. '2' → logprob: -16.125812530517578

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.875027656555176
    3. '   ' → logprob: -12.625027656555176
    4. '0' → logprob: -13.625027656555176
    5. '-' → logprob: -13.625027656555176
    6. '100' → logprob: -13.875027656555176
    7. '10' → logprob: -14.375027656555176
    8. 'y' → logprob: -14.625027656555176
    9. 'x' → logprob: -15.750027656555176
    10. '2' → logprob: -15.875027656555176

Token 385: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2165902554988861
    2. 'y' → logprob: -2.341590166091919
    3. '       ' → logprob: -2.341590166091919
    4. ' y' → logprob: -7.341590404510498
    5. '<|end|>' → logprob: -7.716590404510498
    6. 'x' → logprob: -7.841590404510498
    7. '   ' → logprob: -8.71658992767334
    8. ' 
' → logprob: -8.71658992767334
    9. '        
' → logprob: -8.84158992767334
    10. '#' → logprob: -9.71658992767334

Token 386: '       ' (ID: 309)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.028027649968862534
    2. '
' → logprob: -4.278027534484863
    3. '   ' → logprob: -4.903027534484863
    4. '       ' → logprob: -5.903027534484863
    5. '<|end|>' → logprob: -6.653027534484863
    6. ' y' → logprob: -7.403027534484863
    7. '	y' → logprob: -7.403027534484863
    8. 'x' → logprob: -8.028027534484863
    9. ' ' → logprob: -8.403027534484863
    10. '    
' → logprob: -8.903027534484863

Token 387: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.0013203580165281892
    2. 'M' → logprob: -6.7513203620910645
    3. '       ' → logprob: -9.626319885253906
    4. '   ' → logprob: -10.501319885253906
    5. ' y' → logprob: -11.376319885253906
    6. 'yf' → logprob: -11.501319885253906
    7. 'Y' → logprob: -11.626319885253906
    8. '(y' → logprob: -11.876319885253906
    9. '           ' → logprob: -12.626319885253906
    10. '(M' → logprob: -13.126319885253906

Token 388: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -1.1291496753692627
    2. ' -=' → logprob: -1.2541496753692627
    3. '=' → logprob: -1.5041496753692627
    4. '+=' → logprob: -2.6291496753692627
    5. ' =' → logprob: -3.0041496753692627
    6. ' +=' → logprob: -3.1291496753692627
    7. '-' → logprob: -5.754149436950684
    8. ' ' → logprob: -8.754149436950684
    9. '   ' → logprob: -8.754149436950684
    10. '=M' → logprob: -11.004149436950684

Token 389: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07940765470266342
    2. 'M' → logprob: -2.7044076919555664
    3. '10' → logprob: -5.454407691955566
    4. ' y' → logprob: -6.454407691955566
    5. '(y' → logprob: -6.704407691955566
    6. '100' → logprob: -6.829407691955566
    7. '(M' → logprob: -7.829407691955566
    8. ' M' → logprob: -8.329407691955566
    9. '(' → logprob: -8.579407691955566
    10. 'x' → logprob: -8.829407691955566

Token 390: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10362774133682251
    2. '+' → logprob: -2.6036276817321777
    3. ' -' → logprob: -4.603627681732178
    4. '+=' → logprob: -4.853627681732178
    5. ' +' → logprob: -6.103627681732178
    6. '-=' → logprob: -6.228627681732178
    7. '       ' → logprob: -6.603627681732178
    8. '   ' → logprob: -8.728628158569336
    9. ' ' → logprob: -9.103628158569336
    10. ' -=' → logprob: -9.103628158569336

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014799882774241269
    2. ' ' → logprob: -8.875147819519043
    3. '   ' → logprob: -12.250147819519043
    4. '100' → logprob: -13.500147819519043
    5. '       ' → logprob: -14.875147819519043
    6. '10' → logprob: -15.250147819519043
    7. 'x' → logprob: -15.625147819519043
    8. '  ' → logprob: -15.875147819519043
    9. '           ' → logprob: -16.00014877319336
    10. '-' → logprob: -16.12514877319336

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3226136767771095e-05
    2. ' ' → logprob: -10.250042915344238
    3. '100' → logprob: -12.625042915344238
    4. '10' → logprob: -13.375042915344238
    5. '   ' → logprob: -13.500042915344238
    6. '(' → logprob: -14.500042915344238
    7. '900' → logprob: -15.375042915344238
    8. 'M' → logprob: -15.500042915344238
    9. 'N' → logprob: -15.875042915344238
    10. '500' → logprob: -16.125043869018555

Token 393: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032797686755657196
    2. '
' → logprob: -3.6577975749969482
    3. '        
' → logprob: -6.157797813415527
    4. '   ' → logprob: -6.907797813415527
    5. 'uf' → logprob: -7.282797813415527
    6. '<|end|>' → logprob: -7.657797813415527
    7. ',' → logprob: -7.907797813415527
    8. ')' → logprob: -8.032797813415527
    9. '  
' → logprob: -8.532797813415527
    10. ' 
' → logprob: -8.657797813415527

Token 394: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.001011611195281148
    2. '10' → logprob: -7.001011848449707
    3. '100' → logprob: -9.376011848449707
    4. ' M' → logprob: -11.376011848449707
    5. '1' → logprob: -13.001011848449707
    6. '   ' → logprob: -13.751011848449707
    7. ' ' → logprob: -14.876011848449707
    8. 'N' → logprob: -15.126011848449707
    9. 'm' → logprob: -17.12601089477539
    10. 'x' → logprob: -18.12601089477539

Token 395: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19556064903736115
    2. 'uf' → logprob: -2.3205606937408447
    3. '   ' → logprob: -2.5705606937408447
    4. '        
' → logprob: -6.945560455322266
    5. '
' → logprob: -7.695560455322266
    6. 'if' → logprob: -7.945560455322266
    7. ')' → logprob: -8.195560455322266
    8. ' uf' → logprob: -8.570560455322266
    9. '    
' → logprob: -8.820560455322266
    10. ',' → logprob: -9.320560455322266

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10269124060869217
    2. 'uf' → logprob: -2.352691173553467
    3. ' uf' → logprob: -6.852691173553467
    4. 'if' → logprob: -7.102691173553467
    5. '   ' → logprob: -7.977691173553467
    6. ' if' → logprob: -8.977691650390625
    7. '        
' → logprob: -9.477691650390625
    8. 'ufi' → logprob: -11.727691650390625
    9. 'ufs' → logprob: -12.477691650390625
    10. '
' → logprob: -12.477691650390625

Token 397: ' XY' (ID: 71987)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0006376196397468448
    2. 'if' → logprob: -7.625637531280518
    3. ' uf' → logprob: -9.500638008117676
    4. '   ' → logprob: -9.750638008117676
    5. '       ' → logprob: -11.375638008117676
    6. 'ufs' → logprob: -14.000638008117676
    7. 'union' → logprob: -14.500638008117676
    8. 'ufi' → logprob: -14.875638008117676
    9. ' if' → logprob: -15.125638008117676
    10. 'ug' → logprob: -15.125638008117676

Token 398: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5752015709877014
    2. '[_' → logprob: -1.2002015113830566
    3. '[' → logprob: -2.0752015113830566
    4. '.append' → logprob: -5.700201511383057
    5. '[X' → logprob: -6.325201511383057
    6. 'x' → logprob: -7.200201511383057
    7. ' =' → logprob: -7.700201511383057
    8. '_index' → logprob: -7.825201511383057
    9. '[i' → logprob: -7.825201511383057
    10. '=' → logprob: -8.075201988220215

Token 399: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021008584648370743
    2. '=' → logprob: -4.646008491516113
    3. ']=' → logprob: -4.646008491516113
    4. ' =' → logprob: -6.896008491516113
    5. ' ]' → logprob: -8.021008491516113
    6. ']+=' → logprob: -8.646008491516113
    7. ')' → logprob: -10.396008491516113
    8. ',' → logprob: -11.271008491516113
    9. '],' → logprob: -11.396008491516113
    10. '+=' → logprob: -12.271008491516113

Token 400: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055694084614515305
    2. ' =' → logprob: -2.930694103240967
    3. '+=' → logprob: -8.180693626403809
    4. ',' → logprob: -8.555693626403809
    5. '|' → logprob: -8.555693626403809
    6. ' |=' → logprob: -9.680693626403809
    7. ' +=' → logprob: -10.305693626403809
    8. ' ' → logprob: -10.805693626403809
    9. ' ^=' → logprob: -11.430693626403809
    10. ')' → logprob: -11.930693626403809

Token 401: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020580526324920356
    2. ' ' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.625205993652344
    4. '-' → logprob: -14.875205993652344
    5. 'y' → logprob: -16.187705993652344
    6. '[' → logprob: -16.250205993652344
    7. '  ' → logprob: -16.437705993652344
    8. '2' → logprob: -16.625205993652344
    9. 'x' → logprob: -16.687705993652344
    10. '
' → logprob: -17.000205993652344

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3213025744771585e-05
    2. ' ' → logprob: -10.375033378601074
    3. '-' → logprob: -13.625033378601074
    4. '2' → logprob: -15.500033378601074
    5. '   ' → logprob: -15.625033378601074
    6. 'y' → logprob: -16.250032424926758
    7. 'x' → logprob: -16.625032424926758
    8. 'uf' → logprob: -16.937532424926758
    9. ' -' → logprob: -17.312532424926758
    10. '0' → logprob: -17.625032424926758

Token 403: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4737963378429413
    2. '       ' → logprob: -1.2237963676452637
    3. 'uf' → logprob: -3.3487963676452637
    4. '   ' → logprob: -4.098796367645264
    5. '<|end|>' → logprob: -4.973796367645264
    6. ' 
' → logprob: -5.098796367645264
    7. '        
' → logprob: -5.473796367645264
    8. '  
' → logprob: -5.723796367645264
    9. '    
' → logprob: -6.223796367645264
    10. 'xy' → logprob: -6.348796367645264

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3479454517364502
    2. 'uf' → logprob: -1.5979454517364502
    3. 'xy' → logprob: -2.72294545173645
    4. '   ' → logprob: -4.472945213317871
    5. 'XY' → logprob: -5.597945213317871
    6. 'y' → logprob: -5.847945213317871
    7. '
' → logprob: -6.472945213317871
    8. ' uf' → logprob: -7.097945213317871
    9. '<|end|>' → logprob: -7.097945213317871
    10. ' ' → logprob: -7.472945213317871

Token 405: ' XY' (ID: 71987)
  Prédit: 'XY'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XY' (adapté à ' XY') → logprob: -0.001244516926817596
    2. 'uf' → logprob: -7.37624454498291
    3. '       ' → logprob: -7.87624454498291
    4. 'xy' → logprob: -9.25124454498291
    5. '   ' → logprob: -9.50124454498291
    6. 'UF' → logprob: -10.37624454498291
    7. ' XY' → logprob: -11.37624454498291
    8. '           ' → logprob: -11.75124454498291
    9. 'UY' → logprob: -11.87624454498291
    10. 'Y' → logprob: -12.50124454498291

Token 406: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -8.983476436696947e-05
    2. '[' → logprob: -9.625089645385742
    3. 'y' → logprob: -11.000089645385742
    4. '[x' → logprob: -12.875089645385742
    5. '   ' → logprob: -13.875089645385742
    6. ' [' → logprob: -14.250089645385742
    7. '[
' → logprob: -14.375089645385742
    8. ' y' → logprob: -14.875089645385742
    9. '	y' → logprob: -15.375089645385742
    10. '       ' → logprob: -15.500089645385742

Token 407: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5929890275001526
    2. '+=' → logprob: -1.0929889678955078
    3. ']' → logprob: -2.717988967895508
    4. ']+=' → logprob: -3.092988967895508
    5. ')' → logprob: -8.217988967895508
    6. '+' → logprob: -8.592988967895508
    7. ' ]' → logprob: -8.967988967895508
    8. '   ' → logprob: -9.342988967895508
    9. '=' → logprob: -10.717988967895508
    10. '[' → logprob: -11.342988967895508

Token 408: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009383779251947999
    2. ' +=' → logprob: -7.000938415527344
    3. '+' → logprob: -10.875938415527344
    4. '=' → logprob: -12.125938415527344
    5. ']+=' → logprob: -13.000938415527344
    6. '-=' → logprob: -16.375938415527344
    7. '[' → logprob: -16.625938415527344
    8. '   ' → logprob: -16.750938415527344
    9. '+='' → logprob: -17.625938415527344
    10. '>' → logprob: -17.875938415527344

Token 409: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.752185821533203
    4. '  ' → logprob: -17.502185821533203
    5. '-' → logprob: -17.627185821533203
    6. ' ' → logprob: -18.689685821533203
    7. '１' → logprob: -18.877185821533203
    8. '```' → logprob: -19.064685821533203
    9. '    ' → logprob: -19.252185821533203
    10. '       ' → logprob: -19.377185821533203

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -17.625030517578125
    4. '  ' → logprob: -18.750030517578125
    5. '-' → logprob: -19.000030517578125
    6. '１' → logprob: -19.312530517578125
    7. '2' → logprob: -19.625030517578125
    8. '<|end|>' → logprob: -19.687530517578125
    9. '۱' → logprob: -19.937530517578125
    10. '```' → logprob: -20.125030517578125

Token 411: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03190924599766731
    2. '   ' → logprob: -3.781909227371216
    3. 'uf' → logprob: -5.406909465789795
    4. '
' → logprob: -5.781909465789795
    5. '        
' → logprob: -8.281908988952637
    6. ' uf' → logprob: -8.406908988952637
    7. ',' → logprob: -8.781908988952637
    8. '    
' → logprob: -9.531908988952637
    9. '	' → logprob: -10.031908988952637
    10. 'if' → logprob: -10.156908988952637

Token 412: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05700182169675827
    2. 'uf' → logprob: -3.182001829147339
    3. '   ' → logprob: -5.05700159072876
    4. ' uf' → logprob: -5.80700159072876
    5. 'if' → logprob: -6.05700159072876
    6. ' if' → logprob: -6.43200159072876
    7. '        
' → logprob: -9.182002067565918
    8. '
' → logprob: -9.807002067565918
    9. 'ufi' → logprob: -10.057002067565918
    10. '```' → logprob: -10.057002067565918

Token 413: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.00012368128227535635
    2. ' uf' → logprob: -9.875123977661133
    3. 'if' → logprob: -10.125123977661133
    4. '   ' → logprob: -10.500123977661133
    5. '       ' → logprob: -12.875123977661133
    6. 'ufs' → logprob: -14.875123977661133
    7. 'union' → logprob: -15.125123977661133
    8. 'assert' → logprob: -15.375123977661133
    9. 'ug' → logprob: -15.625123977661133
    10. 'uff' → logprob: -15.875123977661133

Token 414: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.0002146226615877822
    2. '.' → logprob: -8.500214576721191
    3. ' .' → logprob: -11.500214576721191
    4. 'union' → logprob: -14.875214576721191
    5. '.uniform' → logprob: -15.875214576721191
    6. '.un' → logprob: -15.875214576721191
    7. '	union' → logprob: -16.375215530395508
    8. '.merge' → logprob: -16.375215530395508
    9. '.u' → logprob: -16.750215530395508
    10. '.unit' → logprob: -16.750215530395508

Token 415: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00038455575122497976
    2. '(' → logprob: -7.875384330749512
    3. '(
' → logprob: -12.625384330749512
    4. 'x' → logprob: -14.375384330749512
    5. ' (' → logprob: -15.125384330749512
    6. '<|end|>' → logprob: -15.375384330749512
    7. '(xs' → logprob: -17.750385284423828
    8. '(X' → logprob: -17.875385284423828
    9. '((' → logprob: -17.875385284423828
    10. ')' → logprob: -18.625385284423828

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013396469876170158
    2. ',y' → logprob: -7.251339435577393
    3. ' ,' → logprob: -7.376339435577393
    4. 'y' → logprob: -13.87633991241455
    5. ',x' → logprob: -14.00133991241455
    6. ',
' → logprob: -14.37633991241455
    7. ')' → logprob: -14.62633991241455
    8. '<|end|>' → logprob: -14.75133991241455
    9. ' y' → logprob: -15.87633991241455
    10. '[y' → logprob: -16.251338958740234

Token 417: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0024764856789261103
    2. ' y' → logprob: -6.002476692199707
    3. ')y' → logprob: -14.877476692199707
    4. '	y' → logprob: -16.12747573852539
    5. ')' → logprob: -16.12747573852539
    6. 'x' → logprob: -16.75247573852539
    7. '<|end|>' → logprob: -16.87747573852539
    8. '
' → logprob: -17.62747573852539
    9. '       ' → logprob: -17.87747573852539
    10. '   ' → logprob: -18.12747573852539

Token 418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.792751032160595e-05
    2. ')
' → logprob: -9.37508773803711
    3. ' )' → logprob: -13.75008773803711
    4. '       ' → logprob: -14.00008773803711
    5. ')return' → logprob: -14.37508773803711
    6. '<|end|>' → logprob: -15.12508773803711
    7. '   ' → logprob: -16.12508773803711
    8. '))' → logprob: -17.12508773803711
    9. ')

' → logprob: -17.12508773803711
    10. '),' → logprob: -17.50008773803711

Token 419: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: ' dd' (ID: 18636)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3567175269126892
    2. 'for' → logprob: -1.481717586517334
    3. ' for' → logprob: -2.856717586517334
    4. '
' → logprob: -5.606717586517334
    5. '    
' → logprob: -6.231717586517334
    6. 'print' → logprob: -6.606717586517334
    7. 'count' → logprob: -6.981717586517334
    8. '```' → logprob: -7.356717586517334
    9. 'counts' → logprob: -7.356717586517334
    10. '<|end|>' → logprob: -7.606717586517334

Token 421: 'x' (ID: 87)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6957611441612244
    2. ' =' → logprob: -0.6957611441612244
    3. 'f' → logprob: -6.320761203765869
    4. 'ef' → logprob: -7.320761203765869
    5. 'd' → logprob: -9.445760726928711
    6. ' ' → logprob: -10.820760726928711
    7. ':' → logprob: -12.070760726928711
    8. 'eft' → logprob: -12.195760726928711
    9. '   ' → logprob: -12.445760726928711
    10. 'from' → logprob: -12.695760726928711

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.636258065700531
    2. '=' → logprob: -0.761258065700531
    3. 'f' → logprob: -5.636258125305176
    4. 'x' → logprob: -10.136258125305176
    5. ' ' → logprob: -11.511258125305176
    6. 'ef' → logprob: -11.636258125305176
    7. ',' → logprob: -12.386258125305176
    8. '   ' → logprob: -12.386258125305176
    9. '[' → logprob: -13.136258125305176
    10. 'd' → logprob: -13.261258125305176

Token 423: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -6.754368223482743e-05
    2. ' defaultdict' → logprob: -9.625067710876465
    3. '(default' → logprob: -14.625067710876465
    4. '[' → logprob: -15.125067710876465
    5. ' default' → logprob: -15.375067710876465
    6. '"default' → logprob: -15.750067710876465
    7. '.default' → logprob: -16.50006675720215
    8. '   ' → logprob: -16.75006675720215
    9. ' ' → logprob: -17.00006675720215
    10. '0' → logprob: -17.12506675720215

Token 424: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12855614721775055
    2. 'int' → logprob: -2.128556251525879
    3. '(list' → logprob: -7.128556251525879
    4. 'list' → logprob: -8.503556251525879
    5. '(lambda' → logprob: -8.628556251525879
    6. '<int' → logprob: -8.753556251525879
    7. '[int' → logprob: -9.628556251525879
    8. ':int' → logprob: -10.003556251525879
    9. ',int' → logprob: -10.128556251525879
    10. '```' → logprob: -10.128556251525879

Token 425: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932259202003479
    2. ')
' → logprob: -0.6932259202003479
    3. ',' → logprob: -10.443225860595703
    4. '   ' → logprob: -10.943225860595703
    5. ')
' → logprob: -10.943225860595703
    6. ')

' → logprob: -11.693225860595703
    7. '()' → logprob: -13.568225860595703
    8. '())
' → logprob: -13.693225860595703
    9. ')`
' → logprob: -13.943225860595703
    10. ' )
' → logprob: -15.068225860595703

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05907639116048813
    2. 'for' → logprob: -2.9340763092041016
    3. ' for' → logprob: -6.309076309204102
    4. 'ddy' → logprob: -6.684076309204102
    5. 'd' → logprob: -7.059076309204102
    6. 'dd' → logprob: -8.809076309204102
    7. 'dy' → logprob: -10.559076309204102
    8. '    
' → logprob: -11.184076309204102
    9. ' ddy' → logprob: -11.559076309204102
    10. '  ' → logprob: -11.684076309204102

Token 427: ' ddy' (ID: 121407)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24805708229541779
    2. 'ddy' (adapté à ' ddy') → logprob: -1.6230571269989014
    3. 'd' → logprob: -3.9980571269989014
    4. 'dd' → logprob: -6.623056888580322
    5. 'root' → logprob: -6.748056888580322
    6. ' for' → logprob: -8.49805736541748
    7. '   ' → logprob: -8.62305736541748
    8. 'roots' → logprob: -8.87305736541748
    9. 'tdy' → logprob: -9.24805736541748
    10. 'count' → logprob: -9.49805736541748

Token 428: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145057141780853
    2. ' =' → logprob: -1.7014505863189697
    3. '[' → logprob: -10.32645034790039
    4. '   ' → logprob: -13.32645034790039
    5. ' ' → logprob: -13.95145034790039
    6. ' defaultdict' → logprob: -14.57645034790039
    7. ']' → logprob: -14.70145034790039
    8. 'def' → logprob: -15.32645034790039
    9. ')' → logprob: -15.45145034790039
    10. '  ' → logprob: -16.70145034790039

Token 429: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -2.8325677703833207e-05
    2. '(default' → logprob: -11.000028610229492
    3. ' defaultdict' → logprob: -12.000028610229492
    4. 'def' → logprob: -12.250028610229492
    5. '"default' → logprob: -15.625028610229492
    6. ''default' → logprob: -16.000028610229492
    7. '.default' → logprob: -16.375028610229492
    8. 'lambda' → logprob: -16.750028610229492
    9. '
' → logprob: -16.875028610229492
    10. ' default' → logprob: -16.875028610229492

Token 430: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00027813989436253905
    2. 'int' → logprob: -8.37527847290039
    3. '(lambda' → logprob: -10.25027847290039
    4. '=int' → logprob: -12.37527847290039
    5. '[int' → logprob: -12.62527847290039
    6. '<int' → logprob: -13.75027847290039
    7. ',int' → logprob: -14.25027847290039
    8. 'lambda' → logprob: -14.62527847290039
    9. '(bool' → logprob: -14.75027847290039
    10. 'def' → logprob: -14.75027847290039

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038142599165439606
    2. ')
' → logprob: -3.288142681121826
    3. '   ' → logprob: -9.538142204284668
    4. ')

' → logprob: -12.663142204284668
    5. ',' → logprob: -12.788142204284668
    6. '()' → logprob: -12.788142204284668
    7. '())' → logprob: -12.788142204284668
    8. ' )' → logprob: -12.913142204284668
    9. ')
' → logprob: -13.163142204284668
    10. '(int' → logprob: -13.288142204284668

Token 432: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017217209562659264
    2. 'for' → logprob: -4.14221715927124
    3. ' for' → logprob: -6.76721715927124
    4. '    
' → logprob: -11.392217636108398
    5. '
' → logprob: -11.892217636108398
    6. '<|end|>' → logprob: -11.892217636108398
    7. '```' → logprob: -13.767217636108398
    8. '	for' → logprob: -14.017217636108398
    9. ')' → logprob: -14.392217636108398
    10. '  ' → logprob: -14.517217636108398

Token 433: ' dde' (ID: 105259)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003841755911707878
    2. '   ' → logprob: -5.628841876983643
    3. ' for' → logprob: -8.878841400146484
    4. 'roots' → logprob: -9.253841400146484
    5. 'root' → logprob: -12.628841400146484
    6. 'groups' → logprob: -14.753841400146484
    7. 'uf' → logprob: -14.878841400146484
    8. 'r' → logprob: -15.128841400146484
    9. '
' → logprob: -15.128841400146484
    10. '	for' → logprob: -15.253841400146484

Token 434: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15340183675289154
    2. 'f' → logprob: -2.1534018516540527
    3. 'l' → logprob: -4.903401851654053
    4. 'd' → logprob: -5.403401851654053
    5. 'dx' → logprob: -5.403401851654053
    6. 'q' → logprob: -6.028401851654053
    7. 'fault' → logprob: -6.278401851654053
    8. '=' → logprob: -6.778401851654053
    9. 'p' → logprob: -7.028401851654053
    10. 'y' → logprob: -7.528401851654053

Token 435: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.21379722654819489
    2. 'fault' → logprob: -1.9637972116470337
    3. ' defaultdict' → logprob: -2.9637973308563232
    4. 'ault' → logprob: -8.588797569274902
    5. '(default' → logprob: -9.213797569274902
    6. 'ef' → logprob: -9.713797569274902
    7. ' default' → logprob: -9.713797569274902
    8. 'f' → logprob: -10.213797569274902
    9. 'd' → logprob: -11.088797569274902
    10. 'ult' → logprob: -11.213797569274902

Token 436: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005608303938060999
    2. '(bool' → logprob: -5.630608081817627
    3. '(lambda' → logprob: -7.130608081817627
    4. 'int' → logprob: -7.255608081817627
    5. '(list' → logprob: -8.005608558654785
    6. '(set' → logprob: -9.380608558654785
    7. '(' → logprob: -10.755608558654785
    8. 'list' → logprob: -11.380608558654785
    9. '(tuple' → logprob: -11.380608558654785
    10. 'bool' → logprob: -11.755608558654785

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1006089448928833
    2. ')
' → logprob: -2.3506088256835938
    3. '   ' → logprob: -7.850608825683594
    4. ')

' → logprob: -12.100608825683594
    5. ')
' → logprob: -12.225608825683594
    6. '()' → logprob: -14.350608825683594
    7. '
' → logprob: -14.975608825683594
    8. ' ' → logprob: -15.100608825683594
    9. ' )' → logprob: -15.100608825683594
    10. ')`
' → logprob: -15.725608825683594

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010332842357456684
    2. 'for' → logprob: -7.001033306121826
    3. ' for' → logprob: -9.626032829284668
    4. '
' → logprob: -10.251032829284668
    5. '    
' → logprob: -11.001032829284668
    6. '	for' → logprob: -13.251032829284668
    7. '<|end|>' → logprob: -13.751032829284668
    8. '```' → logprob: -14.626032829284668
    9. '  
' → logprob: -16.251033782958984
    10. '   ' → logprob: -16.376033782958984

Token 439: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8693676590919495
    2. '   ' → logprob: -1.1193675994873047
    3. ' for' → logprob: -1.3693675994873047
    4. '	for' → logprob: -11.119367599487305
    5. '```' → logprob: -11.994367599487305
    6. '    
' → logprob: -12.619367599487305
    7. '
' → logprob: -12.994367599487305
    8. '  ' → logprob: -13.869367599487305
    9. ' ' → logprob: -14.494367599487305
    10. ' roots' → logprob: -15.244367599487305

Token 440: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.46846458315849304
    2. 'x' → logprob: -1.5934646129608154
    3. 'r' → logprob: -1.8434646129608154
    4. 'v' → logprob: -4.968464374542236
    5. 'u' → logprob: -6.218464374542236
    6. 'k' → logprob: -6.843464374542236
    7. 'root' → logprob: -6.843464374542236
    8. ' i' → logprob: -7.343464374542236
    9. 'p' → logprob: -8.593464851379395
    10. 'a' → logprob: -9.218464851379395

Token 441: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14736658334732056
    2. 'in' → logprob: -2.022366523742676
    3. ',' → logprob: -5.397366523742676
    4. ' ' → logprob: -9.272366523742676
    5. 'range' → logprob: -11.147366523742676
    6. ' ,' → logprob: -11.272366523742676
    7. ' i' → logprob: -11.897366523742676
    8. '   ' → logprob: -12.272366523742676
    9. 'i' → logprob: -13.397366523742676
    10. ')' → logprob: -13.397366523742676

Token 442: ' e' (ID: 319)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17679496109485626
    2. 'v' → logprob: -1.9267950057983398
    3. 'x' → logprob: -4.55179500579834
    4. 'c' → logprob: -6.30179500579834
    5. 'count' → logprob: -7.05179500579834
    6. 'cnt' → logprob: -7.17679500579834
    7. 'val' → logprob: -7.55179500579834
    8. 'e' → logprob: -7.67679500579834
    9. 'a' → logprob: -7.67679500579834
    10. ' p' → logprob: -8.17679500579834

Token 443: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22800375521183014
    2. 'in' → logprob: -1.603003740310669
    3. ',' → logprob: -5.978003978729248
    4. 's' → logprob: -11.60300350189209
    5. 'd' → logprob: -11.72800350189209
    6. ' ' → logprob: -12.10300350189209
    7. 'n' → logprob: -12.60300350189209
    8. 'is' → logprob: -12.72800350189209
    9. 'count' → logprob: -12.85300350189209
    10. 'v' → logprob: -13.10300350189209

Token 444: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.5759415626525879
    2. 'enumer' → logprob: -0.8259415626525879
    3. 'en' → logprob: -14.20094108581543
    4. 'enum' → logprob: -14.45094108581543
    5. '```' → logprob: -14.57594108581543
    6. '`' → logprob: -15.82594108581543
    7. ' ' → logprob: -16.20094108581543
    8. '   ' → logprob: -16.82594108581543
    9. '(en' → logprob: -16.82594108581543
    10. 'uf' → logprob: -17.57594108581543

Token 445: '(X' (ID: 17061)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0027063232846558094
    2. '(' → logprob: -6.627706527709961
    3. 'XY' → logprob: -7.002706527709961
    4. ' uf' → logprob: -8.252706527709961
    5. '(X' → logprob: -9.502706527709961
    6. 'xy' → logprob: -9.627706527709961
    7. 'UF' → logprob: -10.502706527709961
    8. 'range' → logprob: -10.627706527709961
    9. 'enumer' → logprob: -12.252706527709961
    10. '(x' → logprob: -12.877706527709961

Token 446: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -14.250005722045898
    3. '
' → logprob: -14.250005722045898
    4. '

' → logprob: -14.500005722045898
    5. '`' → logprob: -14.500005722045898
    6. ' Y' → logprob: -15.000005722045898
    7. ')' → logprob: -15.000005722045898
    8. 'y' → logprob: -15.000005722045898
    9. '...' → logprob: -15.500005722045898
    10. '```' → logprob: -15.500005722045898

Token 447: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06203501671552658
    2. '):' → logprob: -2.812035083770752
    3. '):
' → logprob: -9.687034606933594
    4. ' ):
' → logprob: -13.437034606933594
    5. ')' → logprob: -13.562034606933594
    6. '   ' → logprob: -14.062034606933594
    7. ':
' → logprob: -14.312034606933594
    8. ':' → logprob: -14.437034606933594
    9. ' ):' → logprob: -15.562034606933594
    10. '):

' → logprob: -15.562034606933594

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001915191882289946
    2. '   ' → logprob: -7.126914978027344
    3. ':' → logprob: -7.626914978027344
    4. ' if' → logprob: -8.001914978027344
    5. 'if' → logprob: -8.501914978027344
    6. '):
' → logprob: -10.501914978027344
    7. ':
' → logprob: -10.501914978027344
    8. ',' → logprob: -11.376914978027344
    9. '):' → logprob: -11.876914978027344
    10. '<|end|>' → logprob: -13.126914978027344

Token 449: ' root' (ID: 6577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.111454539000988
    2. ' if' → logprob: -3.111454486846924
    3. '   ' → logprob: -3.236454486846924
    4. '       ' → logprob: -3.861454486846924
    5. 'dd' → logprob: -7.611454486846924
    6. ' ' → logprob: -10.736454963684082
    7. 'd' → logprob: -11.111454963684082
    8. '	if' → logprob: -11.111454963684082
    9. ' dd' → logprob: -11.361454963684082
    10. '    ' → logprob: -11.611454963684082

Token 450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740810692310333
    2. '=' → logprob: -0.9740810394287109
    3. ' ' → logprob: -13.974081039428711
    4. 'e' → logprob: -14.224081039428711
    5. 'root' → logprob: -14.724081039428711
    6. 's' → logprob: -14.849081039428711
    7. ')' → logprob: -15.099081039428711
    8. '=root' → logprob: -15.224081039428711
    9. 'x' → logprob: -15.474081039428711
    10. '=i' → logprob: -15.724081039428711

Token 451: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0013315484393388033
    2. ' uf' → logprob: -6.626331329345703
    3. 'ufs' → logprob: -13.501331329345703
    4. '   ' → logprob: -14.251331329345703
    5. 'uff' → logprob: -14.251331329345703
    6. 'ufi' → logprob: -14.376331329345703
    7. 'ufe' → logprob: -15.251331329345703
    8. 'ug' → logprob: -15.251331329345703
    9. 'u' → logprob: -15.626331329345703
    10. '0' → logprob: -15.751331329345703

Token 452: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -7.465036105713807e-06
    2. 'find' → logprob: -12.750007629394531
    3. '.' → logprob: -13.125007629394531
    4. '.findall' → logprob: -13.125007629394531
    5. '().' → logprob: -14.875007629394531
    6. ' .' → logprob: -16.12500762939453
    7. '=find' → logprob: -17.50000762939453
    8. ').' → logprob: -17.75000762939453
    9. ' find' → logprob: -19.12500762939453
    10. '	find' → logprob: -19.37500762939453

Token 453: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0031793788075447083
    2. '(e' → logprob: -5.753179550170898
    3. '(' → logprob: -13.378179550170898
    4. 'e' → logprob: -17.2531795501709
    5. 'i' → logprob: -17.5031795501709
    6. '(
' → logprob: -17.8781795501709
    7. ' (' → logprob: -17.8781795501709
    8. '(root' → logprob: -18.3781795501709
    9. '(x' → logprob: -19.2531795501709
    10. '((' → logprob: -19.5031795501709

Token 454: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693257749080658
    2. ')
' → logprob: -0.693257749080658
    3. '       ' → logprob: -9.818257331848145
    4. ')
' → logprob: -9.818257331848145
    5. ' )
' → logprob: -14.693257331848145
    6. ')

' → logprob: -14.693257331848145
    7. '   ' → logprob: -14.943257331848145
    8. ')`
' → logprob: -15.693257331848145
    9. ' )' → logprob: -16.31825828552246
    10. ')e' → logprob: -16.94325828552246

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022481828927993774
    2. 'if' → logprob: -4.272481918334961
    3. '   ' → logprob: -5.147481918334961
    4. ' if' → logprob: -6.022481918334961
    5. 'd' → logprob: -11.522481918334961
    6. 'dd' → logprob: -12.147481918334961
    7. '```' → logprob: -12.147481918334961
    8. '        
' → logprob: -12.272481918334961
    9. ' ' → logprob: -12.397481918334961
    10. ')' → logprob: -13.022481918334961

Token 456: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02619091607630253
    2. 'dd' → logprob: -4.276190757751465
    3. 'dde' → logprob: -5.026190757751465
    4. '       ' → logprob: -5.526190757751465
    5. '   ' → logprob: -7.026190757751465
    6. '           ' → logprob: -8.151190757751465
    7. ' if' → logprob: -10.151190757751465
    8. 'ddy' → logprob: -10.651190757751465
    9. 'dre' → logprob: -10.901190757751465
    10. 'ddi' → logprob: -11.276190757751465

Token 457: ' i' (ID: 575)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04317251220345497
    2. ' e' → logprob: -3.168172597885132
    3. 'XY' → logprob: -9.168172836303711
    4. ' XY' → logprob: -10.918172836303711
    5. ' ' → logprob: -11.543172836303711
    6. 'i' → logprob: -11.543172836303711
    7. '   ' → logprob: -11.918172836303711
    8. 'X' → logprob: -12.043172836303711
    9. '	e' → logprob: -12.168172836303711
    10. ' i' → logprob: -12.543172836303711

Token 458: ' <' (ID: 464)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.4004411697387695
    2. ')' → logprob: -1.5254411697387695
    3. ' not' → logprob: -2.4004411697387695
    4. ' ==' → logprob: -2.4004411697387695
    5. ' !=' → logprob: -2.6504411697387695
    6. '>=' → logprob: -2.7754411697387695
    7. '==' → logprob: -2.9004411697387695
    8. ' >=' → logprob: -3.0254411697387695
    9. '!=' → logprob: -3.6504411697387695
    10. 'in' → logprob: -3.9004411697387695

Token 459: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0028091557323932648
    2. ' M' → logprob: -5.877809047698975
    3. '10' → logprob: -12.877809524536133
    4. ' ' → logprob: -14.002809524536133
    5. '   ' → logprob: -14.877809524536133
    6. '0' → logprob: -15.377809524536133
    7. '100' → logprob: -15.502809524536133
    8. '2' → logprob: -17.377809524536133
    9. 'm' → logprob: -18.377809524536133
    10. '  ' → logprob: -18.502809524536133

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6343588829040527
    2. ':
' → logprob: -0.7593588829040527
    3. '       ' → logprob: -6.884358882904053
    4. ' and' → logprob: -7.759358882904053
    5. '):
' → logprob: -8.884359359741211
    6. 'and' → logprob: -10.259359359741211
    7. '):' → logprob: -10.384359359741211
    8. ' :' → logprob: -10.634359359741211
    9. ' :
' → logprob: -10.759359359741211
    10. ',' → logprob: -11.384359359741211

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07477207481861115
    2. 'dd' → logprob: -2.6997721195220947
    3. '       ' → logprob: -6.074771881103516
    4. ' dd' → logprob: -6.699771881103516
    5. '   ' → logprob: -7.449771881103516
    6. ':
' → logprob: -8.699771881103516
    7. ':' → logprob: -8.949771881103516
    8. '          ' → logprob: -9.824771881103516
    9. '
' → logprob: -9.949771881103516
    10. ' and' → logprob: -10.324771881103516

Token 462: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' (adapté à ' dd') → logprob: -0.00716417795047164
    2. '           ' → logprob: -5.132164001464844
    3. ' dd' → logprob: -7.257164001464844
    4. '   ' → logprob: -8.132164001464844
    5. '       ' → logprob: -9.007164001464844
    6. '               ' → logprob: -10.507164001464844
    7. ' ' → logprob: -11.132164001464844
    8. 'ddy' → logprob: -11.632164001464844
    9. 'ddd' → logprob: -11.882164001464844
    10. '(dd' → logprob: -11.882164001464844

Token 463: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. 'dx' → logprob: -15.5
    3. 'xdd' → logprob: -16.875
    4. 'd' → logprob: -17.0
    5. '
' → logprob: -18.1875
    6. '(x' → logprob: -18.25
    7. '```' → logprob: -18.25
    8. '   ' → logprob: -18.5625
    9. '[x' → logprob: -18.75
    10. '`' → logprob: -19.0

Token 464: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.0007020648336037993
    2. '[' → logprob: -7.375701904296875
    3. '[i' → logprob: -10.250701904296875
    4. 'root' → logprob: -11.125701904296875
    5. '[e' → logprob: -11.250701904296875
    6. ' [' → logprob: -12.500701904296875
    7. '[r' → logprob: -13.375701904296875
    8. '[parent' → logprob: -13.500701904296875
    9. '[x' → logprob: -14.250701904296875
    10. '[row' → logprob: -14.375701904296875

Token 465: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06197709962725639
    2. ']+=' → logprob: -2.8119771480560303
    3. ' ]' → logprob: -12.06197738647461
    4. '+=' → logprob: -13.56197738647461
    5. ']+' → logprob: -14.43697738647461
    6. ']=' → logprob: -14.56197738647461
    7. '       ' → logprob: -15.56197738647461
    8. '        ' → logprob: -15.68697738647461
    9. '[' → logprob: -15.68697738647461
    10. '           ' → logprob: -15.81197738647461

Token 466: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16029663383960724
    2. ' +=' → logprob: -1.9102966785430908
    3. ']+=' → logprob: -9.910296440124512
    4. '=' → logprob: -11.160296440124512
    5. '    ' → logprob: -12.785296440124512
    6. ' ' → logprob: -13.410296440124512
    7. '+' → logprob: -13.535296440124512
    8. '   ' → logprob: -14.035296440124512
    9. ' =' → logprob: -14.035296440124512
    10. ',' → logprob: -15.285296440124512

Token 467: ' ' (ID: 220)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002509687910787761
    2. 'XY' → logprob: -9.125250816345215
    3. '1' → logprob: -9.500250816345215
    4. ' e' → logprob: -9.625250816345215
    5. '	e' → logprob: -14.625250816345215
    6. 'xy' → logprob: -15.125250816345215
    7. ' XY' → logprob: -15.500250816345215
    8. 'X' → logprob: -17.12525177001953
    9. ' ' → logprob: -17.50025177001953
    10. 'i' → logprob: -17.62525177001953

Token 468: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00046296243090182543
    2. 'XY' → logprob: -8.250462532043457
    3. ' e' → logprob: -8.750462532043457
    4. '1' → logprob: -10.125462532043457
    5. '	e' → logprob: -13.750462532043457
    6. ' XY' → logprob: -13.750462532043457
    7. 'X' → logprob: -14.500462532043457
    8. 'xy' → logprob: -16.000463485717773
    9. ' ' → logprob: -16.000463485717773
    10. 'i' → logprob: -16.375463485717773

Token 469: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.323382705450058
    2. 'else' → logprob: -1.3233827352523804
    3. ' else' → logprob: -4.69838285446167
    4. '<|end|>' → logprob: -7.82338285446167
    5. 'elif' → logprob: -7.94838285446167
    6. ')' → logprob: -9.573382377624512
    7. ',' → logprob: -10.573382377624512
    8. '```' → logprob: -10.573382377624512
    9. '
' → logprob: -11.448382377624512
    10. '	else' → logprob: -11.448382377624512

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18433718383312225
    2. 'else' → logprob: -1.8093371391296387
    3. ' else' → logprob: -5.434337139129639
    4. '<|end|>' → logprob: -9.559337615966797
    5. 'elif' → logprob: -9.809337615966797
    6. '```' → logprob: -10.559337615966797
    7. '   ' → logprob: -10.809337615966797
    8. ')' → logprob: -10.809337615966797
    9. ',' → logprob: -11.809337615966797
    10. ']' → logprob: -12.934337615966797

Token 471: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0372171625494957
    2. '       ' → logprob: -3.412217140197754
    3. ' else' → logprob: -5.787217140197754
    4. '   ' → logprob: -8.162217140197754
    5. 'elif' → logprob: -8.537217140197754
    6. '	else' → logprob: -12.537217140197754
    7. '```' → logprob: -12.662217140197754
    8. ' ' → logprob: -13.787217140197754
    9. 'e' → logprob: -14.037217140197754
    10. 'd' → logprob: -14.037217140197754

Token 472: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15492942929267883
    2. 'ddy' → logprob: -2.0299293994903564
    3. ' ddy' → logprob: -5.5299296379089355
    4. '       ' → logprob: -5.5299296379089355
    5. ':' → logprob: -6.0299296379089355
    6. ':
' → logprob: -7.6549296379089355
    7. '   ' → logprob: -8.029929161071777
    8. '	       ' → logprob: -8.529929161071777
    9. ' ' → logprob: -8.779929161071777
    10. '          ' → logprob: -8.779929161071777

Token 473: '           ' (ID: 352)
  Prédit: 'ddy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ddy' → logprob: -0.1142633780837059
    2. '       ' → logprob: -2.7392632961273193
    3. '           ' → logprob: -3.2392632961273193
    4. '   ' → logprob: -6.114263534545898
    5. ' ddy' → logprob: -6.614263534545898
    6. 'dd' → logprob: -8.239263534545898
    7. 'dde' → logprob: -9.239263534545898
    8. '          ' → logprob: -10.114263534545898
    9. ' ' → logprob: -10.489263534545898
    10. '        ' → logprob: -10.739263534545898

Token 474: ' ddy' (ID: 121407)
  Prédit: 'ddy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ddy' (adapté à ' ddy') → logprob: -0.00026300468016415834
    2. ' ddy' → logprob: -8.500263214111328
    3. 'dde' → logprob: -9.875263214111328
    4. 'dd' → logprob: -12.375263214111328
    5. '   ' → logprob: -13.250263214111328
    6. '  ' → logprob: -14.250263214111328
    7. ' ' → logprob: -14.875263214111328
    8. 'd' → logprob: -15.125263214111328
    9. ' ' → logprob: -16.000263214111328
    10. 'eddy' → logprob: -16.125263214111328

Token 475: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.625000953674316
    3. '[r' → logprob: -19.5
    4. ' [' → logprob: -19.75
    5. '```' → logprob: -19.875
    6. 'root' → logprob: -20.125
    7. '[parent' → logprob: -20.75
    8. '
' → logprob: -20.75
    9. '(root' → logprob: -21.625
    10. '[
' → logprob: -21.75

Token 476: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42757001519203186
    2. ']+=' → logprob: -1.4275699853897095
    3. '+=' → logprob: -2.427570104598999
    4. ' +=' → logprob: -3.927570104598999
    5. ' ]' → logprob: -9.802570343017578
    6. '[' → logprob: -12.177570343017578
    7. '>' → logprob: -12.552570343017578
    8. '   ' → logprob: -12.802570343017578
    9. '    ' → logprob: -13.302570343017578
    10. '+' → logprob: -13.677570343017578

Token 477: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011068098247051239
    2. ' +=' → logprob: -4.511067867279053
    3. ']+=' → logprob: -10.886068344116211
    4. '   ' → logprob: -14.636068344116211
    5. '+' → logprob: -14.886068344116211
    6. '[' → logprob: -15.511068344116211
    7. '       ' → logprob: -15.761068344116211
    8. '=' → logprob: -16.26106834411621
    9. '    ' → logprob: -16.51106834411621
    10. ' ' → logprob: -16.76106834411621

Token 478: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.875431060791016
    4. ' ' → logprob: -16.500431060791016
    5. '  ' → logprob: -16.750431060791016
    6. '0' → logprob: -16.875431060791016
    7. 'e' → logprob: -17.500431060791016
    8. '
' → logprob: -17.750431060791016
    9. '```' → logprob: -18.375431060791016
    10. '-' → logprob: -18.375431060791016

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.125109672546387
    3. 'e' → logprob: -14.625109672546387
    4. '0' → logprob: -16.500110626220703
    5. '
' → logprob: -16.750110626220703
    6. '   ' → logprob: -16.875110626220703
    7. '-' → logprob: -17.062610626220703
    8. '  ' → logprob: -17.062610626220703
    9. '2' → logprob: -17.625110626220703
    10. '```' → logprob: -18.000110626220703

Token 480: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005848561879247427
    2. '   ' → logprob: -5.755848407745361
    3. 'd' → logprob: -6.630848407745361
    4. 'dde' → logprob: -7.005848407745361
    5. '           ' → logprob: -8.13084888458252
    6. 'else' → logprob: -10.13084888458252
    7. '      ' → logprob: -11.13084888458252
    8. ' ' → logprob: -11.25584888458252
    9. ' dde' → logprob: -11.50584888458252
    10. '<|end|>' → logprob: -11.63084888458252

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013822725974023342
    2. 'd' → logprob: -5.013822555541992
    3. 'dde' → logprob: -5.638822555541992
    4. '   ' → logprob: -5.763822555541992
    5. '           ' → logprob: -8.888822555541992
    6. '```' → logprob: -9.888822555541992
    7. 'dje' → logprob: -10.638822555541992
    8. '<|end|>' → logprob: -10.638822555541992
    9. 'deque' → logprob: -11.138822555541992
    10. 'else' → logprob: -11.263822555541992

Token 482: ' dde' (ID: 105259)
  Prédit: 'dde'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dde' (adapté à ' dde') → logprob: -0.0027046618051826954
    2. '       ' → logprob: -6.002704620361328
    3. ' dde' → logprob: -8.877704620361328
    4. 'd' → logprob: -10.002704620361328
    5. 'deque' → logprob: -11.502704620361328
    6. 'dre' → logprob: -11.752704620361328
    7. 'dje' → logprob: -12.127704620361328
    8. '   ' → logprob: -12.127704620361328
    9. '           ' → logprob: -12.752704620361328
    10. 'dd' → logprob: -13.002704620361328

Token 483: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -2.5822400857578032e-05
    2. '[' → logprob: -10.625025749206543
    3. '[r' → logprob: -14.375025749206543
    4. '```' → logprob: -15.125025749206543
    5. 'root' → logprob: -15.375025749206543
    6. ' [' → logprob: -15.750025749206543
    7. '=root' → logprob: -16.87502670288086
    8. '[parent' → logprob: -17.25002670288086
    9. '[row' → logprob: -17.37502670288086
    10. '[result' → logprob: -17.50002670288086

Token 484: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023278091102838516
    2. ']+=' → logprob: -3.773277997970581
    3. ' ]' → logprob: -11.27327823638916
    4. '+=' → logprob: -11.39827823638916
    5. ']+' → logprob: -12.14827823638916
    6. ')' → logprob: -14.02327823638916
    7. '[' → logprob: -14.27327823638916
    8. ']=' → logprob: -14.77327823638916
    9. ' +=' → logprob: -15.02327823638916
    10. ']
' → logprob: -15.39827823638916

Token 485: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0025887389201670885
    2. ' +=' → logprob: -6.002588748931885
    3. '=' → logprob: -9.252588272094727
    4. ']+=' → logprob: -11.627588272094727
    5. '[' → logprob: -12.502588272094727
    6. '[e' → logprob: -13.127588272094727
    7. '+' → logprob: -13.377588272094727
    8. 'e' → logprob: -15.502588272094727
    9. '+=(' → logprob: -15.877588272094727
    10. '```' → logprob: -15.877588272094727

Token 486: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.009858437813818455
    2. '1' → logprob: -5.00985860824585
    3. ' e' → logprob: -5.88485860824585
    4. 'XY' → logprob: -8.009858131408691
    5. ' ' → logprob: -11.509858131408691
    6. ' XY' → logprob: -11.759858131408691
    7. 'xy' → logprob: -13.259858131408691
    8. 'X' → logprob: -13.509858131408691
    9. '	e' → logprob: -13.759858131408691
    10. 'x' → logprob: -14.134858131408691

Token 487: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4109845459461212
    2. '
' → logprob: -1.7859845161437988
    3. '<|end|>' → logprob: -2.035984516143799
    4. 'for' → logprob: -4.410984516143799
    5. '    
' → logprob: -4.535984516143799
    6. ' for' → logprob: -5.160984516143799
    7. ')' → logprob: -5.535984516143799
    8. '  
' → logprob: -6.035984516143799
    9. '```' → logprob: -7.535984516143799
    10. ' ' → logprob: -7.535984516143799

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10343416035175323
    2. 'for' → logprob: -2.6034340858459473
    3. '
' → logprob: -4.603434085845947
    4. '<|end|>' → logprob: -4.978434085845947
    5. ' for' → logprob: -5.228434085845947
    6. '    
' → logprob: -6.603434085845947
    7. 'def' → logprob: -8.853434562683105
    8. '```' → logprob: -9.353434562683105
    9. 'if' → logprob: -9.853434562683105
    10. '  
' → logprob: -9.978434562683105

Token 489: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.683205783367157
    2. 'res' → logprob: -1.5582058429718018
    3. 'for' → logprob: -1.6832058429718018
    4. 'answer' → logprob: -2.8082058429718018
    5. '   ' → logprob: -4.308205604553223
    6. 'result' → logprob: -4.433205604553223
    7. 'r' → logprob: -5.683205604553223
    8. 'ret' → logprob: -5.683205604553223
    9. 'total' → logprob: -6.183205604553223
    10. 's' → logprob: -6.808205604553223

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020549481734633446
    2. '=' → logprob: -3.8955495357513428
    3. ' ' → logprob: -12.020549774169922
    4. ',' → logprob: -13.895549774169922
    5. 's' → logprob: -16.270549774169922
    6. '_' → logprob: -16.270549774169922
    7. ':' → logprob: -16.270549774169922
    8. ' =
' → logprob: -16.270549774169922
    9. ' ,' → logprob: -16.770549774169922
    10. ')' → logprob: -16.770549774169922

Token 491: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009831881150603294
    2. ' ' → logprob: -4.63483190536499
    3. 'sum' → logprob: -9.634831428527832
    4. ' sum' → logprob: -12.259831428527832
    5. '   ' → logprob: -13.509831428527832
    6. '1' → logprob: -13.509831428527832
    7. '[]' → logprob: -13.634831428527832
    8. 'len' → logprob: -14.884831428527832
    9. 'set' → logprob: -14.884831428527832
    10. '=' → logprob: -15.384831428527832

Token 492: '(dd' (ID: 131879)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.762966513633728
    2. '((' → logprob: -0.887966513633728
    3. '(' → logprob: -2.7629666328430176
    4. '(max' → logprob: -3.0129666328430176
    5. '(d' → logprob: -5.637966632843018
    6. '(dd' → logprob: -6.137966632843018
    7. '(len' → logprob: -6.387966632843018
    8. '(((' → logprob: -6.887966632843018
    9. '(
' → logprob: -7.137966632843018
    10. '((-' → logprob: -9.01296615600586

Token 493: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10221350938081741
    2. 'e' → logprob: -2.3522136211395264
    3. '[e' → logprob: -6.852213382720947
    4. '[root' → logprob: -7.852213382720947
    5. '[x' → logprob: -8.727213859558105
    6. 'd' → logprob: -9.227213859558105
    7. '[' → logprob: -9.477213859558105
    8. '[r' → logprob: -9.852213859558105
    9. '[d' → logprob: -10.352213859558105
    10. 'r' → logprob: -10.852213859558105

Token 494: '[k' (ID: 14298)
  Prédit: '[root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.09300381690263748
    2. '.values' → logprob: -2.468003749847412
    3. '[r' → logprob: -5.718003749847412
    4. '[i' → logprob: -7.843003749847412
    5. '[key' → logprob: -8.71800422668457
    6. '[' → logprob: -9.09300422668457
    7. '[k' → logprob: -9.96800422668457
    8. ')' → logprob: -10.71800422668457
    9. '[v' → logprob: -11.59300422668457
    10. '.get' → logprob: -12.34300422668457

Token 495: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012794032227247953
    2. ']+' → logprob: -7.251279354095459
    3. ']*' → logprob: -7.501279354095459
    4. ']*(' → logprob: -11.501279830932617
    5. ' ]' → logprob: -13.251279830932617
    6. ']
' → logprob: -13.501279830932617
    7. '])' → logprob: -13.626279830932617
    8. ']-' → logprob: -14.251279830932617
    9. ')' → logprob: -15.251279830932617
    10. ']]' → logprob: -15.501279830932617

Token 496: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.051582932472229
    2. ' *' → logprob: -1.301582932472229
    3. ' +' → logprob: -1.551582932472229
    4. '+' → logprob: -1.801582932472229
    5. '*(' → logprob: -7.4265828132629395
    6. ' ' → logprob: -8.051583290100098
    7. '+d' → logprob: -8.551583290100098
    8. '*d' → logprob: -8.676583290100098
    9. ')' → logprob: -9.301583290100098
    10. ' ' → logprob: -10.739083290100098

Token 497: ' ddy' (ID: 121407)
  Prédit: 'ddy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ddy' → logprob: -0.006800390779972076
    2. ' ddy' → logprob: -5.006800174713135
    3. '(' → logprob: -9.756800651550293
    4. ' ' → logprob: -11.881800651550293
    5. ' (' → logprob: -12.131800651550293
    6. 'dde' → logprob: -12.131800651550293
    7. 'dd' → logprob: -12.506800651550293
    8. '   ' → logprob: -13.631800651550293
    9. '+' → logprob: -13.756800651550293
    10. '  ' → logprob: -14.881800651550293

Token 498: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.062031541019678116
    2. 'k' → logprob: -2.8120315074920654
    3. 'for' → logprob: -10.937031745910645
    4. ' for' → logprob: -10.937031745910645
    5. '[' → logprob: -11.312031745910645
    6. ']' → logprob: -12.312031745910645
    7. ' k' → logprob: -12.562031745910645
    8. '.get' → logprob: -12.937031745910645
    9. '```' → logprob: -13.687031745910645
    10. '[key' → logprob: -13.937031745910645

Token 499: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.2947646677494049
    2. ']' → logprob: -2.169764757156372
    3. ' for' → logprob: -2.794764757156372
    4. 'for' → logprob: -2.919764757156372
    5. 'k' → logprob: -3.919764757156372
    6. ' -' → logprob: -5.794764518737793
    7. '-' → logprob: -6.294764518737793
    8. ' ' → logprob: -7.544764518737793
    9. ' k' → logprob: -8.419764518737793
    10. '-k' → logprob: -8.794764518737793

Token 500: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19080020487308502
    2. ' for' → logprob: -2.315800189971924
    3. '-' → logprob: -2.690800189971924
    4. 'for' → logprob: -5.190800189971924
    5. '-k' → logprob: -7.065800189971924
    6. ' ' → logprob: -7.940800189971924
    7. '-d' → logprob: -9.440800666809082
    8. '-dd' → logprob: -9.440800666809082
    9. '[k' → logprob: -10.190800666809082
    10. ')' → logprob: -10.315800666809082

Token 501: ' v' (ID: 323)
  Prédit: 'dde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dde' → logprob: -0.0009334942442364991
    2. ' dde' → logprob: -7.375933647155762
    3. 'dd' → logprob: -8.125933647155762
    4. 'd' → logprob: -13.250933647155762
    5. 'dre' → logprob: -13.625933647155762
    6. 'ddy' → logprob: -13.625933647155762
    7. '   ' → logprob: -13.750933647155762
    8. 'ddi' → logprob: -13.750933647155762
    9. 'ddd' → logprob: -14.125933647155762
    10. 'de' → logprob: -14.500933647155762

Token 502: ' //' (ID: 602)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18174344301223755
    2. '[k' → logprob: -1.8067433834075928
    3. 'for' → logprob: -6.306743621826172
    4. ')' → logprob: -9.556743621826172
    5. 'k' → logprob: -9.931743621826172
    6. '[' → logprob: -11.306743621826172
    7. '[v' → logprob: -11.556743621826172
    8. ' ' → logprob: -11.931743621826172
    9. ']' → logprob: -12.056743621826172
    10. '[r' → logprob: -12.431743621826172

Token 503: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007492328295484185
    2. ' ' → logprob: -7.250749111175537
    3. '   ' → logprob: -10.625749588012695
    4. '  ' → logprob: -12.250749588012695
    5. '3' → logprob: -12.750749588012695
    6. '1' → logprob: -13.250749588012695
    7. '=' → logprob: -13.250749588012695
    8. '           ' → logprob: -13.875749588012695
    9. '```' → logprob: -14.125749588012695
    10. '       ' → logprob: -14.500749588012695

Token 504: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '=' → logprob: -16.000097274780273
    4. '   ' → logprob: -16.625097274780273
    5. '1' → logprob: -16.875097274780273
    6. '3' → logprob: -17.500097274780273
    7. '  ' → logprob: -17.625097274780273
    8. '4' → logprob: -17.875097274780273
    9. '12' → logprob: -18.375097274780273
    10. '
' → logprob: -18.500097274780273

Token 505: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47409316897392273
    2. 'for' → logprob: -0.9740931987762451
    3. ' ' → logprob: -11.599093437194824
    4. '   ' → logprob: -12.849093437194824
    5. '
' → logprob: -13.599093437194824
    6. '	for' → logprob: -13.849093437194824
    7. 'k' → logprob: -14.224093437194824
    8. '  ' → logprob: -14.724093437194824
    9. '[k' → logprob: -14.849093437194824
    10. ')' → logprob: -15.099093437194824

Token 506: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.47495681833243e-05
    2. ' k' → logprob: -10.625024795532227
    3. '	k' → logprob: -15.125024795532227
    4. ',k' → logprob: -16.500024795532227
    5. '(k' → logprob: -16.875024795532227
    6. '   ' → logprob: -17.500024795532227
    7. ',' → logprob: -17.625024795532227
    8. '_k' → logprob: -18.250024795532227
    9. '_,' → logprob: -18.250024795532227
    10. ' ' → logprob: -18.500024795532227

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0070047322660684586
    2. ',v' → logprob: -5.132004737854004
    3. ' in' → logprob: -7.132004737854004
    4. 'in' → logprob: -8.382004737854004
    5. ' ,' → logprob: -10.507004737854004
    6. ',k' → logprob: -10.882004737854004
    7. 'v' → logprob: -14.632004737854004
    8. ',in' → logprob: -14.882004737854004
    9. ',d' → logprob: -15.632004737854004
    10. ',value' → logprob: -16.507003784179688

Token 508: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00033581978641450405
    2. ' v' → logprob: -8.000335693359375
    3. '	v' → logprob: -15.000335693359375
    4. ',v' → logprob: -21.375335693359375
    5. '$v' → logprob: -21.875335693359375
    6. '(v' → logprob: -22.125335693359375
    7. '
' → logprob: -22.250335693359375
    8. ')v' → logprob: -22.375335693359375
    9. '_v' → logprob: -22.625335693359375
    10. '
' → logprob: -23.125335693359375

Token 509: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22548037767410278
    2. 'in' → logprob: -1.600480318069458
    3. ')' → logprob: -9.725480079650879
    4. ',' → logprob: -12.475480079650879
    5. 'd' → logprob: -14.475480079650879
    6. '=' → logprob: -14.850480079650879
    7. 'ind' → logprob: -15.225480079650879
    8. '	in' → logprob: -15.225480079650879
    9. 'In' → logprob: -15.350480079650879
    10. 'ine' → logprob: -15.350480079650879

Token 510: ' dde' (ID: 105259)
  Prédit: 'dde'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dde' → logprob: -0.00027254095766693354
    2. ' dde' → logprob: -8.250272750854492
    3. 'de' → logprob: -12.500272750854492
    4. 'in' → logprob: -12.750272750854492
    5. ' in' → logprob: -12.750272750854492
    6. 'd' → logprob: -14.125272750854492
    7. 'dje' → logprob: -15.125272750854492
    8. 'idde' → logprob: -15.375272750854492
    9. 'adde' → logprob: -15.500272750854492
    10. 'xde' → logprob: -16.875272750854492

Token 511: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.004138599149882793
    2. 'items' → logprob: -5.504138469696045
    3. ')' → logprob: -10.629138946533203
    4. '.iteritems' → logprob: -11.004138946533203
    5. 'in' → logprob: -12.004138946533203
    6. ' in' → logprob: -12.254138946533203
    7. '.values' → logprob: -12.879138946533203
    8. '_items' → logprob: -13.504138946533203
    9. '.Items' → logprob: -13.629138946533203
    10. '.' → logprob: -13.629138946533203

Token 512: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.048696376383304596
    2. '()' → logprob: -3.048696279525757
    3. ')' → logprob: -9.298696517944336
    4. ' ())' → logprob: -11.798696517944336
    5. '(' → logprob: -12.923696517944336
    6. '())
' → logprob: -13.048696517944336
    7. '();)' → logprob: -13.423696517944336
    8. '():' → logprob: -14.423696517944336
    9. '()]' → logprob: -14.548696517944336
    10. '());' → logprob: -14.548696517944336

Token 513: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4089778959751129
    2. 'print' → logprob: -1.2839778661727905
    3. '   ' → logprob: -2.90897798538208
    4. '<|end|>' → logprob: -5.78397798538208
    5. ' print' → logprob: -7.40897798538208
    6. 'return' → logprob: -8.408977508544922
    7. '    
' → logprob: -9.783977508544922
    8. '```' → logprob: -10.158977508544922
    9. ')' → logprob: -10.283977508544922
    10. '	print' → logprob: -10.658977508544922

Token 514: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.19676749408245087
    2. '   ' → logprob: -1.8217674493789673
    3. '
' → logprob: -4.196767330169678
    4. ' print' → logprob: -7.196767330169678
    5. 'return' → logprob: -7.196767330169678
    6. '    
' → logprob: -9.571767807006836
    7. ')' → logprob: -9.696767807006836
    8. '```' → logprob: -9.696767807006836
    9. '<|end|>' → logprob: -9.821767807006836
    10. ' return' → logprob: -10.696767807006836

Token 515: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -11.750008583068848
    3. '(
' → logprob: -14.750008583068848
    4. 'ans' → logprob: -15.250008583068848
    5. '(answer' → logprob: -17.000009536743164
    6. '(abs' → logprob: -17.000009536743164
    7. ' (' → logprob: -17.250009536743164
    8. '()' → logprob: -17.625009536743164
    9. '(an' → logprob: -17.750009536743164
    10. '(a' → logprob: -18.500009536743164

Token 516: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.750000953674316
    3. ')`' → logprob: -15.000000953674316
    4. '()' → logprob: -15.250000953674316
    5. '())' → logprob: -15.500000953674316
    6. ')
' → logprob: -15.750000953674316
    7. '`)' → logprob: -17.375001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '(' → logprob: -18.625001907348633
    10. '))' → logprob: -18.875001907348633

Token 517: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 516
Tokens correctement prédits (1ère position, stricte): 199
Tokens correctement prédits (1ère position, avec adaptation): 231
Tokens correctement prédits (top 10): 471
Précision stricte (1ère position): 38.57%
Précision adaptée (1ère position): 44.77%
Précision (top 10): 91.28%
================================================================================
