================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = map(int, input().split())
a = list(map(int, input().split()))
s = 0
for x in a:
    s += x
r = n - s
if r >= 0:
    print(r)
else:
    print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3142223060131073
    2. ' =' → logprob: -1.5642223358154297
    3. ',' → logprob: -2.8142223358154297
    4. ')' → logprob: -8.68922233581543
    5. ' ' → logprob: -9.56422233581543
    6. ' ,' → logprob: -9.68922233581543
    7. '```' → logprob: -10.06422233581543
    8. '_' → logprob: -11.06422233581543
    9. '#' → logprob: -11.56422233581543
    10. '.' → logprob: -11.68922233581543

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5809993743896484
    2. ' map' → logprob: -1.0809993743896484
    3. ' input' → logprob: -3.0809993743896484
    4. 'map' → logprob: -3.5809993743896484
    5. 'input' → logprob: -4.580999374389648
    6. '0' → logprob: -5.080999374389648
    7. ' n' → logprob: -5.205999374389648
    8. ' int' → logprob: -6.080999374389648
    9. '10' → logprob: -6.205999374389648
    10. '1' → logprob: -7.955999374389648

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08954467624425888
    2. '(lambda' → logprob: -3.3395447731018066
    3. '```' → logprob: -3.9645447731018066
    4. '(int' → logprob: -4.839544773101807
    5. '(str' → logprob: -5.214544773101807
    6. '<|end|>' → logprob: -5.714544773101807
    7. ')' → logprob: -6.464544773101807
    8. '[' → logprob: -6.464544773101807
    9. '_' → logprob: -6.839544773101807
    10. '(n' → logprob: -6.839544773101807

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25761184096336365
    2. '(' → logprob: -2.0076117515563965
    3. ')' → logprob: -2.5076117515563965
    4. '(user' → logprob: -6.3826117515563965
    5. 'input' → logprob: -6.6326117515563965
    6. '(int' → logprob: -6.6326117515563965
    7. '```' → logprob: -6.7576117515563965
    8. '(str' → logprob: -6.8826117515563965
    9. '`)' → logprob: -6.8826117515563965
    10. '`' → logprob: -7.7576117515563965

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10024970024824142
    2. ' input' → logprob: -2.350249767303467
    3. '(input' → logprob: -10.100249290466309
    4. ')' → logprob: -13.475249290466309
    5. ',input' → logprob: -15.225249290466309
    6. '=input' → logprob: -15.850249290466309
    7. '<input' → logprob: -16.850250244140625
    8. '```' → logprob: -17.350250244140625
    9. '	input' → logprob: -17.725250244140625
    10. '[input' → logprob: -17.725250244140625

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9561960101127625
    2. '()' → logprob: -1.0811960697174072
    3. ')' → logprob: -2.3311960697174072
    4. '(' → logprob: -2.4561960697174072
    5. '('' → logprob: -3.0811960697174072
    6. '().' → logprob: -3.5811960697174072
    7. '(""))' → logprob: -5.331195831298828
    8. '`()' → logprob: -5.331195831298828
    9. '("")' → logprob: -7.081195831298828
    10. '`)' → logprob: -7.206195831298828

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001966343028470874
    2. 'strip' → logprob: -6.25196647644043
    3. 'rstrip' → logprob: -10.62696647644043
    4. ')' → logprob: -12.00196647644043
    5. ' split' → logprob: -12.37696647644043
    6. 'read' → logprob: -12.87696647644043
    7. '(split' → logprob: -14.87696647644043
    8. '_split' → logprob: -16.62696647644043
    9. 'spl' → logprob: -16.75196647644043
    10. 'startswith' → logprob: -16.87696647644043

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03183026984333992
    2. '))' → logprob: -3.906830310821533
    3. '())' → logprob: -4.531830310821533
    4. '()' → logprob: -8.656829833984375
    5. '`)' → logprob: -8.781829833984375
    6. '(' → logprob: -10.281829833984375
    7. ')`' → logprob: -10.281829833984375
    8. '()))' → logprob: -10.531829833984375
    9. ')))' → logprob: -11.906829833984375
    10. ' )' → logprob: -12.281829833984375

Token 11: 'a' (ID: 64)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.15986321866512299
    2. 'a' → logprob: -3.159863233566284
    3. 'for' → logprob: -3.784863233566284
    4. '
' → logprob: -4.159862995147705
    5. 'x' → logprob: -4.409862995147705
    6. '\' → logprob: -4.534862995147705
    7. '```' → logprob: -4.534862995147705
    8. '`' → logprob: -4.909862995147705
    9. 'if' → logprob: -5.159862995147705
    10. '#' → logprob: -5.659862995147705

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013488073600456119
    2. '[a' → logprob: -7.876348972320557
    3. '[n' → logprob: -8.001348495483398
    4. '[i' → logprob: -8.751348495483398
    5. '.' → logprob: -8.876348495483398
    6. '+' → logprob: -9.626348495483398
    7. '\[' → logprob: -9.876348495483398
    8. 'a' → logprob: -10.001348495483398
    9. '[p' → logprob: -10.751348495483398
    10. '[m' → logprob: -11.126348495483398

Token 13: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.260939121246338
    2. '[]' → logprob: -1.635939121246338
    3. ' list' → logprob: -1.760939121246338
    4. '[' → logprob: -2.010939121246338
    5. 'list' → logprob: -2.260939121246338
    6. ' []' → logprob: -2.260939121246338
    7. '[a' → logprob: -6.135939121246338
    8. '[list' → logprob: -6.385939121246338
    9. 'a' → logprob: -6.635939121246338
    10. '[int' → logprob: -6.885939121246338

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015423574950546026
    2. '(range' → logprob: -7.001542568206787
    3. '(a' → logprob: -7.626542568206787
    4. '(input' → logprob: -10.876542091369629
    5. '(
' → logprob: -11.001542091369629
    6. '(open' → logprob: -11.376542091369629
    7. '()' → logprob: -11.501542091369629
    8. '(int' → logprob: -11.501542091369629
    9. '```' → logprob: -11.751542091369629
    10. '(

' → logprob: -11.876542091369629

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.013188347220420837
    2. '(' → logprob: -4.388188362121582
    3. '(str' → logprob: -7.638188362121582
    4. '<int' → logprob: -9.638188362121582
    5. '[int' → logprob: -10.388188362121582
    6. 'int' → logprob: -10.513188362121582
    7. '(lambda' → logprob: -11.013188362121582
    8. '=int' → logprob: -11.138188362121582
    9. '(input' → logprob: -12.013188362121582
    10. '```' → logprob: -12.013188362121582

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6996735334396362
    2. '(input' → logprob: -1.3246735334396362
    3. ',input' → logprob: -1.4496735334396362
    4. '(' → logprob: -6.074673652648926
    5. ' ,' → logprob: -8.324673652648926
    6. '=input' → logprob: -10.074673652648926
    7. 'input' → logprob: -10.324673652648926
    8. '<input' → logprob: -10.699673652648926
    9. '(),' → logprob: -11.074673652648926
    10. '```' → logprob: -11.324673652648926

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2014186978340149
    2. ' input' → logprob: -1.7014186382293701
    3. '(input' → logprob: -12.70141887664795
    4. ',input' → logprob: -13.82641887664795
    5. ')' → logprob: -14.20141887664795
    6. '=input' → logprob: -14.82641887664795
    7. '	input' → logprob: -15.95141887664795
    8. '<input' → logprob: -16.201417922973633
    9. 'list' → logprob: -17.076417922973633
    10. '_input' → logprob: -17.201417922973633

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008294018916785717
    2. '()' → logprob: -7.125829219818115
    3. '()))' → logprob: -11.500829696655273
    4. '(' → logprob: -12.625829696655273
    5. '())' → logprob: -12.750829696655273
    6. ' ().' → logprob: -13.125829696655273
    7. '()));' → logprob: -13.250829696655273
    8. '.' → logprob: -14.375829696655273
    9. '().__' → logprob: -14.500829696655273
    10. '().'' → logprob: -14.625829696655273

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. 'strip' → logprob: -13.250001907348633
    3. ' split' → logprob: -16.125001907348633
    4. '(split' → logprob: -16.750001907348633
    5. 'spl' → logprob: -17.625001907348633
    6. 'rstrip' → logprob: -17.625001907348633
    7. ')' → logprob: -19.375001907348633
    8. '.split' → logprob: -20.875001907348633
    9. 'sp' → logprob: -21.125001907348633
    10. 'plit' → logprob: -21.250001907348633

Token 20: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11754748225212097
    2. ')' → logprob: -2.2425475120544434
    3. '(' → logprob: -5.867547512054443
    4. '()))' → logprob: -6.367547512054443
    5. ')))' → logprob: -9.492547035217285
    6. '())' → logprob: -9.617547035217285
    7. '()' → logprob: -11.867547035217285
    8. ''))' → logprob: -12.617547035217285
    9. ' ))' → logprob: -13.117547035217285
    10. '),' → logprob: -13.117547035217285

Token 21: 's' (ID: 82)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4419031143188477
    2. '#' → logprob: -1.6919031143188477
    3. 'for' → logprob: -1.6919031143188477
    4. 'a' → logprob: -2.5669031143188477
    5. '.' → logprob: -2.8169031143188477
    6. 'i' → logprob: -3.4419031143188477
    7. '=' → logprob: -3.4419031143188477
    8. '\' → logprob: -3.6919031143188477
    9. ')' → logprob: -3.6919031143188477
    10. 'b' → logprob: -3.9419031143188477

Token 22: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0565056800842285
    2. '.' → logprob: -1.1815056800842285
    3. 'um' → logprob: -1.1815056800842285
    4. '=' → logprob: -3.6815056800842285
    5. ' =' → logprob: -5.1815056800842285
    6. 'o' → logprob: -5.8065056800842285
    7. '[' → logprob: -6.3065056800842285
    8. '[u' → logprob: -7.0565056800842285
    9. '.=' → logprob: -7.9315056800842285
    10. 'e' → logprob: -8.43150520324707

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8695555329322815
    2. ' ' → logprob: -1.6195554733276367
    3. 'sum' → logprob: -2.4945554733276367
    4. '"' → logprob: -2.7445554733276367
    5. '""' → logprob: -2.8695554733276367
    6. ' []' → logprob: -2.9945554733276367
    7. '[]' → logprob: -3.6195554733276367
    8. ''' → logprob: -3.6195554733276367
    9. 'set' → logprob: -3.8695554733276367
    10. '''' → logprob: -4.494555473327637

Token 24: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38287264108657837
    2. '0' → logprob: -2.3828725814819336
    3. '[]' → logprob: -2.6328725814819336
    4. 'set' → logprob: -2.7578725814819336
    5. 'sum' → logprob: -3.1328725814819336
    6. '""' → logprob: -3.5078725814819336
    7. '[input' → logprob: -5.507872581481934
    8. 'list' → logprob: -5.632872581481934
    9. '[' → logprob: -6.132872581481934
    10. '''' → logprob: -6.382872581481934

Token 25: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.036216624081134796
    2. '
' → logprob: -4.411216735839844
    3. ' for' → logprob: -4.911216735839844
    4. '<|end|>' → logprob: -4.911216735839844
    5. ' ' → logprob: -6.036216735839844
    6. '' → logprob: -6.161216735839844
    7. '\n' → logprob: -6.161216735839844
    8. '+' → logprob: -7.036216735839844
    9. '\' → logprob: -8.286216735839844
    10. '```' → logprob: -8.661216735839844

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03129259869456291
    2. 'f' → logprob: -3.531292676925659
    3. 'i' → logprob: -6.90629243850708
    4. '=' → logprob: -8.656292915344238
    5. '+' → logprob: -9.406292915344238
    6. ' for' → logprob: -9.656292915344238
    7. '
' → logprob: -9.781292915344238
    8. '-' → logprob: -10.281292915344238
    9. '\n' → logprob: -10.531292915344238
    10. '```' → logprob: -10.656292915344238

Token 27: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3522123098373413
    2. ' i' → logprob: -1.2272123098373413
    3. '  ' → logprob: -6.227212429046631
    4. 'i' → logprob: -6.852212429046631
    5. '_' → logprob: -7.727212429046631
    6. ' _' → logprob: -8.477211952209473
    7. ' ‌' → logprob: -9.852211952209473
    8. '  ' → logprob: -12.352211952209473
    9. ' ' → logprob: -12.352211952209473
    10. ' x' → logprob: -12.852211952209473

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03018037974834442
    2. 'in' → logprob: -3.5301804542541504
    3. ' ' → logprob: -8.030179977416992
    4. '  ' → logprob: -10.155179977416992
    5. 's' → logprob: -10.655179977416992
    6. ')' → logprob: -12.155179977416992
    7. ',' → logprob: -12.155179977416992
    8. '<|end|>' → logprob: -12.405179977416992
    9. '	in' → logprob: -12.655179977416992
    10. ' :' → logprob: -12.780179977416992

Token 29: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5781266093254089
    2. 'a' → logprob: -0.8281266093254089
    3. ' range' → logprob: -6.328126430511475
    4. 'range' → logprob: -7.953126430511475
    5. ' ' → logprob: -10.203126907348633
    6. '	a' → logprob: -11.828126907348633
    7. ' xrange' → logprob: -13.578126907348633
    8. '  ' → logprob: -15.203126907348633
    9. 's' → logprob: -15.328126907348633
    10. '(a' → logprob: -15.703126907348633

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029387109680101275
    2. ' :' → logprob: -8.250293731689453
    3. ':
' → logprob: -11.375293731689453
    4. ':**' → logprob: -12.125293731689453
    5. '):' → logprob: -12.375293731689453
    6. '   ' → logprob: -13.125293731689453
    7. ',' → logprob: -13.125293731689453
    8. ' ' → logprob: -14.125293731689453
    9. '+:' → logprob: -14.125293731689453
    10. ')' → logprob: -14.250293731689453

Token 31: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0490988492965698
    2. '   ' → logprob: -1.2990988492965698
    3. ' ' → logprob: -1.4240988492965698
    4. ' s' → logprob: -2.4240989685058594
    5. '+' → logprob: -4.299098968505859
    6. '    ' → logprob: -4.424098968505859
    7. ' if' → logprob: -4.674098968505859
    8. 'if' → logprob: -6.049098968505859
    9. '  ' → logprob: -6.424098968505859
    10. ' 
' → logprob: -6.674098968505859

Token 32: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.027347920462489128
    2. ' s' → logprob: -3.6523478031158447
    3. 'if' → logprob: -7.652348041534424
    4. ' ' → logprob: -8.527347564697266
    5. ' if' → logprob: -8.527347564697266
    6. '   ' → logprob: -8.902347564697266
    7. '    ' → logprob: -11.277347564697266
    8. 'x' → logprob: -11.527347564697266
    9. ' )' → logprob: -12.652347564697266
    10. '  ' → logprob: -13.027347564697266

Token 33: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6072037220001221
    2. '+=' → logprob: -0.8572037220001221
    3. '+' → logprob: -3.482203722000122
    4. '+="' → logprob: -11.482203483581543
    5. '+='' → logprob: -11.482203483581543
    6. ' ' → logprob: -11.982203483581543
    7. '+=(' → logprob: -12.232203483581543
    8. '=' → logprob: -12.482203483581543
    9. ' +' → logprob: -12.607203483581543
    10. '<|end|>' → logprob: -13.982203483581543

Token 34: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036012595519423485
    2. ' x' → logprob: -5.62860107421875
    3. ' ' → logprob: -14.62860107421875
    4. '1' → logprob: -14.62860107421875
    5. '(x' → logprob: -15.75360107421875
    6. 's' → logprob: -17.25360107421875
    7. 'int' → logprob: -18.25360107421875
    8. '   ' → logprob: -18.25360107421875
    9. '	x' → logprob: -18.37860107421875
    10. '(' → logprob: -18.62860107421875

Token 35: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9341375827789307
    2. '
' → logprob: -1.3091375827789307
    3. ' ' → logprob: -2.1841375827789307
    4. '<|end|>' → logprob: -2.4341375827789307
    5. '+' → logprob: -3.6841375827789307
    6. 'if' → logprob: -3.8091375827789307
    7. '/' → logprob: -4.434137344360352
    8. '\n' → logprob: -4.559137344360352
    9. '>' → logprob: -4.684137344360352
    10. ' 
' → logprob: -4.934137344360352

Token 36: 'r' (ID: 81)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6321367621421814
    2. 'if' → logprob: -1.2571368217468262
    3. '\n' → logprob: -3.507136821746826
    4. 'i' → logprob: -3.757136821746826
    5. 's' → logprob: -3.757136821746826
    6. ' if' → logprob: -3.757136821746826
    7. ' 
' → logprob: -4.382136821746826
    8. 'print' → logprob: -4.507136821746826
    9. ' ' → logprob: -4.757136821746826
    10. 'n' → logprob: -4.882136821746826

Token 37: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.798343300819397
    2. '%' → logprob: -1.673343300819397
    3. ' =' → logprob: -1.923343300819397
    4. '=' → logprob: -2.5483431816101074
    5. ' ' → logprob: -3.0483431816101074
    6. '/' → logprob: -3.7983431816101074
    7. 'a' → logprob: -3.7983431816101074
    8. ' %' → logprob: -4.548343181610107
    9. ' /' → logprob: -4.923343181610107
    10. 'eturn' → logprob: -5.173343181610107

Token 38: ' n' (ID: 297)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12800922989845276
    2. 's' → logprob: -2.87800931930542
    3. ' ' → logprob: -3.75300931930542
    4. ' m' → logprob: -4.37800931930542
    5. ' max' → logprob: -4.75300931930542
    6. ' min' → logprob: -5.50300931930542
    7. '0' → logprob: -6.12800931930542
    8. ' n' → logprob: -6.37800931930542
    9. 'm' → logprob: -6.50300931930542
    10. ' (' → logprob: -6.50300931930542

Token 39: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.653301477432251
    2. '+' → logprob: -1.028301477432251
    3. ' ' → logprob: -3.278301477432251
    4. ' -' → logprob: -3.528301477432251
    5. '<|end|>' → logprob: -3.903301477432251
    6. ' +' → logprob: -4.153301239013672
    7. '%' → logprob: -5.903301239013672
    8. '```' → logprob: -6.028301239013672
    9. '*' → logprob: -6.153301239013672
    10. '0' → logprob: -6.278301239013672

Token 40: ' s' (ID: 265)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2044185847043991
    2. 's' → logprob: -2.079418659210205
    3. ' m' → logprob: -3.329418659210205
    4. '1' → logprob: -4.204418659210205
    5. ' s' → logprob: -4.829418659210205
    6. ' ' → logprob: -7.329418659210205
    7. 'len' → logprob: -8.454418182373047
    8. 'r' → logprob: -9.954418182373047
    9. 'sum' → logprob: -9.954418182373047
    10. ' len' → logprob: -9.954418182373047

Token 41: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9084574580192566
    2. '
' → logprob: -2.1584575176239014
    3. '<|end|>' → logprob: -2.1584575176239014
    4. '%' → logprob: -2.2834575176239014
    5. '>' → logprob: -2.4084575176239014
    6. '\n' → logprob: -2.7834575176239014
    7. ' ' → logprob: -3.5334575176239014
    8. '-' → logprob: -4.158457279205322
    9. ')' → logprob: -4.283457279205322
    10. '*' → logprob: -4.283457279205322

Token 42: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39365431666374207
    2. '
' → logprob: -1.6436543464660645
    3. '\n' → logprob: -2.5186543464660645
    4. ' if' → logprob: -4.0186543464660645
    5. 'for' → logprob: -4.5186543464660645
    6. ' 
' → logprob: -4.7686543464660645
    7. 'i' → logprob: -5.5186543464660645
    8. '\' → logprob: -6.3936543464660645
    9. '' → logprob: -6.6436543464660645
    10. '```' → logprob: -6.6436543464660645

Token 43: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.029649117961525917
    2. ' ' → logprob: -4.029649257659912
    3. 'r' → logprob: -4.529649257659912
    4. ' s' → logprob: -8.279648780822754
    5. ' m' → logprob: -8.404648780822754
    6. ' n' → logprob: -9.904648780822754
    7. ' ' → logprob: -10.404648780822754
    8. '  ' → logprob: -11.154648780822754
    9. 's' → logprob: -11.529648780822754
    10. ' not' → logprob: -11.654648780822754

Token 44: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04138161987066269
    2. '>' → logprob: -3.541381597518921
    3. ' ==' → logprob: -5.6663818359375
    4. ' <' → logprob: -5.7913818359375
    5. ' >=' → logprob: -6.0413818359375
    6. ' <=' → logprob: -6.2913818359375
    7. ' ' → logprob: -7.7913818359375
    8. '==' → logprob: -8.7913818359375
    9. '<' → logprob: -9.5413818359375
    10. '>=' → logprob: -9.9163818359375

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3436703085899353
    2. 'm' → logprob: -1.46867036819458
    3. ' m' → logprob: -3.34367036819458
    4. ' ' → logprob: -3.71867036819458
    5. '1' → logprob: -7.09367036819458
    6. 'n' → logprob: -10.093669891357422
    7. 'r' → logprob: -10.218669891357422
    8. 'a' → logprob: -10.843669891357422
    9. '2' → logprob: -11.093669891357422
    10. ' n' → logprob: -11.093669891357422

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28483250737190247
    2. 'm' → logprob: -1.40983247756958
    3. ' ' → logprob: -6.28483247756958
    4. ' m' → logprob: -6.78483247756958
    5. '1' → logprob: -7.53483247756958
    6. 'r' → logprob: -10.034832954406738
    7. 'n' → logprob: -10.659832954406738
    8. '2' → logprob: -11.409832954406738
    9. 's' → logprob: -11.659832954406738
    10. '-' → logprob: -11.659832954406738

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005893715424463153
    2. ' :' → logprob: -8.000589370727539
    3. ' and' → logprob: -8.875589370727539
    4. ':
' → logprob: -9.125589370727539
    5. 'and' → logprob: -12.875589370727539
    6. '.' → logprob: -14.125589370727539
    7. ',' → logprob: -14.500589370727539
    8. ' :
' → logprob: -14.625589370727539
    9. '   ' → logprob: -15.125589370727539
    10. ':

' → logprob: -15.875589370727539

Token 48: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4030897617340088
    2. ':' → logprob: -1.7780897617340088
    3. 'print' → logprob: -2.153089761734009
    4. '    ' → logprob: -3.903089761734009
    5. '   ' → logprob: -4.77808952331543
    6. ' :' → logprob: -5.52808952331543
    7. ' and' → logprob: -5.65308952331543
    8. ' ' → logprob: -6.02808952331543
    9. ' r' → logprob: -6.77808952331543
    10. ',' → logprob: -7.02808952331543

Token 49: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5273729562759399
    2. 'print' (adapté à ' print') → logprob: -0.9023729562759399
    3. 'r' → logprob: -6.52737283706665
    4. ' r' → logprob: -6.65237283706665
    5. 'a' → logprob: -7.90237283706665
    6. ' a' → logprob: -8.027373313903809
    7. ' ' → logprob: -8.527373313903809
    8. '   ' → logprob: -9.402373313903809
    9. ''' → logprob: -9.902373313903809
    10. 'pr' → logprob: -9.902373313903809

Token 50: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4364124536514282
    2. '(r' → logprob: -1.0614124536514282
    3. '("' → logprob: -5.436412334442139
    4. '('' → logprob: -6.061412334442139
    5. '(s' → logprob: -7.561412334442139
    6. ' (' → logprob: -9.061412811279297
    7. '((' → logprob: -9.561412811279297
    8. '"' → logprob: -9.811412811279297
    9. 'r' → logprob: -9.936412811279297
    10. '(n' → logprob: -10.186412811279297

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7372048862162046e-05
    2. ' )' → logprob: -11.250027656555176
    3. ')
' → logprob: -11.500027656555176
    4. '))' → logprob: -13.250027656555176
    5. 'else' → logprob: -14.750027656555176
    6. ')#' → logprob: -15.375027656555176
    7. '')' → logprob: -15.500027656555176
    8. '}' → logprob: -15.875027656555176
    9. ')`' → logprob: -16.00002670288086
    10. ',)' → logprob: -16.12502670288086

Token 52: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0015878198901191354
    2. ' else' → logprob: -6.626587867736816
    3. 'elif' → logprob: -8.501587867736816
    4. '<|end|>' → logprob: -9.876587867736816
    5. '```' → logprob: -13.501587867736816
    6. '.' → logprob: -13.751587867736816
    7. 'el' → logprob: -14.251587867736816
    8. ')' → logprob: -14.251587867736816
    9. '
' → logprob: -14.501587867736816
    10. 'e' → logprob: -14.626587867736816

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002293352037668228
    2. ' :' → logprob: -6.127293586730957
    3. ':
' → logprob: -9.377293586730957
    4. '   ' → logprob: -11.002293586730957
    5. ' :
' → logprob: -12.502293586730957
    6. '    ' → logprob: -13.127293586730957
    7. '  ' → logprob: -15.627293586730957
    8. '):' → logprob: -15.752293586730957
    9. ':
' → logprob: -16.12729263305664
    10. ' print' → logprob: -16.37729263305664

Token 54: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.88859623670578
    2. ' ' → logprob: -2.138596296310425
    3. ' r' → logprob: -2.263596296310425
    4. '0' → logprob: -2.638596296310425
    5. 'r' → logprob: -3.013596296310425
    6. ' abs' → logprob: -3.013596296310425
    7. 'abs' → logprob: -3.013596296310425
    8. '   ' → logprob: -3.513596296310425
    9. 's' → logprob: -3.763596296310425
    10. 'print' → logprob: -3.763596296310425

Token 55: ' print' (ID: 2123)
  Prédit: '-print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-print' → logprob: -1.0692273378372192
    2. '-' → logprob: -1.4442273378372192
    3. 'print' (adapté à ' print') → logprob: -1.8192273378372192
    4. '-pr' → logprob: -2.0692272186279297
    5. 'abs' → logprob: -3.0692272186279297
    6. '-r' → logprob: -3.5692272186279297
    7. '0' → logprob: -3.8192272186279297
    8. '-p' → logprob: -4.06922721862793
    9. ' -' → logprob: -4.44422721862793
    10. '-s' → logprob: -6.19422721862793

Token 56: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11545799672603607
    2. '(abs' → logprob: -2.3654580116271973
    3. '(-' → logprob: -4.990458011627197
    4. 'abs' → logprob: -5.115458011627197
    5. '(s' → logprob: -6.865458011627197
    6. '(r' → logprob: -7.615458011627197
    7. '()' → logprob: -7.990458011627197
    8. '0' → logprob: -9.115457534790039
    9. ' (' → logprob: -9.490457534790039
    10. '('' → logprob: -9.740457534790039

Token 57: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1756367712223437e-05
    2. '1' → logprob: -11.375011444091797
    3. '(' → logprob: -16.125011444091797
    4. ' r' → logprob: -16.500011444091797
    5. ')' → logprob: -17.250011444091797
    6. '(r' → logprob: -17.250011444091797
    7. '-' → logprob: -17.625011444091797
    8. '2' → logprob: -18.125011444091797
    9. '_r' → logprob: -18.875011444091797
    10. 's' → logprob: -19.000011444091797

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. ')
' → logprob: -16.0
    4. '))' → logprob: -17.125
    5. '`)' → logprob: -18.75
    6. '')' → logprob: -19.625
    7. ')`' → logprob: -19.875
    8. '）' → logprob: -20.0
    9. '```' → logprob: -20.875
    10. ')#' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 56
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 26.79%
Précision adaptée (1ère position): 28.57%
Précision (top 10): 87.50%
================================================================================
