================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = next((x for x in reversed(range(N//500+1)) if x*500 <= N), 0)
B = next((y for y in reversed(range((N-A*500)//5+1)) if y*5 <= N-A*500), 0)
from functools import reduce
print(reduce(lambda acc, v: acc + v[0]*v[1], zip([A,B],[1000,5]), 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029494395130313933
    2. ''' → logprob: -8.75029468536377
    3. '`' → logprob: -10.00029468536377
    4. '```' → logprob: -10.62529468536377
    5. '(
' → logprob: -10.75029468536377
    6. '(N' → logprob: -11.00029468536377
    7. ')' → logprob: -12.12529468536377
    8. '\(' → logprob: -12.25029468536377
    9. '"' → logprob: -12.62529468536377
    10. '("("' → logprob: -12.87529468536377

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26427075266838074
    2. ')' → logprob: -1.5142707824707031
    3. '()' → logprob: -4.764270782470703
    4. '())' → logprob: -6.139270782470703
    5. '('' → logprob: -8.014270782470703
    6. '(
' → logprob: -8.514270782470703
    7. '```' → logprob: -8.889270782470703
    8. '("("' → logprob: -9.389270782470703
    9. '`' → logprob: -9.639270782470703
    10. '))' → logprob: -9.639270782470703

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4936116933822632
    2. 'if' → logprob: -1.1186116933822632
    3. 'x' → logprob: -4.368611812591553
    4. 's' → logprob: -4.493611812591553
    5. 'i' → logprob: -4.618611812591553
    6. 'a' → logprob: -5.618611812591553
    7. '`' → logprob: -6.118611812591553
    8. 'f' → logprob: -6.243611812591553
    9. 'print' → logprob: -6.243611812591553
    10. 'sum' → logprob: -6.243611812591553

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006254645413719118
    2. '\[' → logprob: -8.250625610351562
    3. '[]' → logprob: -9.125625610351562
    4. '[A' → logprob: -9.375625610351562
    5. '.' → logprob: -10.000625610351562
    6. '[:]' → logprob: -10.375625610351562
    7. '[i' → logprob: -10.500625610351562
    8. '+' → logprob: -11.750625610351562
    9. '[...]' → logprob: -11.750625610351562
    10. '[a' → logprob: -12.000625610351562

Token 7: ' next' (ID: 2613)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.45769938826560974
    2. 'list' → logprob: -1.7076994180679321
    3. ' []' → logprob: -1.9576994180679321
    4. '[]' → logprob: -3.4576992988586426
    5. ' [' → logprob: -4.582699298858643
    6. '[' → logprob: -6.957699298858643
    7. '[input' → logprob: -7.332699298858643
    8. '[int' → logprob: -7.707699298858643
    9. 'input' → logprob: -7.832699298858643
    10. ' input' → logprob: -7.832699298858643

Token 8: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015300899744033813
    2. '(input' → logprob: -4.765300750732422
    3. '(iter' → logprob: -5.765300750732422
    4. '(A' → logprob: -6.265300750732422
    5. '()' → logprob: -7.265300750732422
    6. '(token' → logprob: -7.640300750732422
    7. '(int' → logprob: -8.890300750732422
    8. '(iterator' → logprob: -10.015300750732422
    9. '((' → logprob: -10.765300750732422
    10. '(range' → logprob: -10.890300750732422

Token 9: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03545683994889259
    2. 'i' → logprob: -3.535456895828247
    3. 'a' → logprob: -5.410456657409668
    4. 'int' → logprob: -7.160456657409668
    5. '(x' → logprob: -8.910456657409668
    6. 'num' → logprob: -9.035456657409668
    7. ' x' → logprob: -9.410456657409668
    8. '(i' → logprob: -10.910456657409668
    9. 'A' → logprob: -10.910456657409668
    10. ' ' → logprob: -11.035456657409668

Token 10: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.002486715093255043
    2. 'for' → logprob: -6.002486705780029
    3. ' ' → logprob: -12.127487182617188
    4. '	for' → logprob: -13.252487182617188
    5. ')' → logprob: -14.377487182617188
    6. '```' → logprob: -14.752487182617188
    7. '_' → logprob: -15.002487182617188
    8. 'i' → logprob: -15.002487182617188
    9. ' i' → logprob: -15.127487182617188
    10. '
' → logprob: -15.377487182617188

Token 11: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.33034777641296387
    2. 'x' → logprob: -1.9553477764129639
    3. ' range' → logprob: -2.080347776412964
    4. 'range' → logprob: -4.955348014831543
    5. ' in' → logprob: -5.455348014831543
    6. '_' → logprob: -6.205348014831543
    7. ' A' → logprob: -7.080348014831543
    8. 'A' → logprob: -8.580348014831543
    9. ')' → logprob: -8.580348014831543
    10. ' ' → logprob: -9.205348014831543

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0049324966967105865
    2. 'in' → logprob: -5.379932403564453
    3. ' range' → logprob: -8.879932403564453
    4. 'range' → logprob: -10.004932403564453
    5. ' ' → logprob: -10.254932403564453
    6. ' A' → logprob: -10.379932403564453
    7. 'A' → logprob: -11.129932403564453
    8. ' input' → logprob: -11.379932403564453
    9. 'input' → logprob: -11.754932403564453
    10. ',' → logprob: -12.254932403564453

Token 13: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5120244026184082
    2. ' range' → logprob: -1.0120244026184082
    3. 'input' → logprob: -4.262024402618408
    4. ' A' → logprob: -5.262024402618408
    5. 'map' → logprob: -5.387024402618408
    6. 'A' → logprob: -5.512024402618408
    7. ' input' → logprob: -5.512024402618408
    8. ' map' → logprob: -6.012024402618408
    9. '[' → logprob: -6.262024402618408
    10. 'x' → logprob: -8.51202392578125

Token 14: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.14965826272964478
    2. '(A' → logprob: -2.149658203125
    3. '(' → logprob: -4.024658203125
    4. 'range' → logprob: -5.649658203125
    5. '(N' → logprob: -8.399658203125
    6. '([' → logprob: -8.649658203125
    7. '(array' → logprob: -9.149658203125
    8. 'A' → logprob: -9.149658203125
    9. '(s' → logprob: -9.274658203125
    10. '(list' → logprob: -9.274658203125

Token 15: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01619132049381733
    2. '(' → logprob: -4.141191482543945
    3. '(A' → logprob: -9.016191482543945
    4. '(n' → logprob: -10.766191482543945
    5. '(len' → logprob: -12.141191482543945
    6. '((' → logprob: -13.266191482543945
    7. ')' → logprob: -13.516191482543945
    8. '(
' → logprob: -13.766191482543945
    9. '(M' → logprob: -13.766191482543945
    10. '(-' → logprob: -14.266191482543945

Token 16: '//' (ID: 393)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00352701754309237
    2. ')))' → logprob: -6.6285271644592285
    3. '()))' → logprob: -7.3785271644592285
    4. ',' → logprob: -7.6285271644592285
    5. '-' → logprob: -8.00352668762207
    6. '(' → logprob: -8.37852668762207
    7. ')' → logprob: -8.87852668762207
    8. ' ))' → logprob: -9.37852668762207
    9. '+' → logprob: -9.50352668762207
    10. '(N' → logprob: -10.12852668762207

Token 17: '500' (ID: 3234)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005433809128589928
    2. '1' → logprob: -7.875543594360352
    3. '3' → logprob: -9.125543594360352
    4. ' ' → logprob: -10.125543594360352
    5. '4' → logprob: -12.625543594360352
    6. ')' → logprob: -13.125543594360352
    7. '10' → logprob: -13.375543594360352
    8. '```' → logprob: -13.375543594360352
    9. '+' → logprob: -13.500543594360352
    10. '5' → logprob: -13.875543594360352

Token 18: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12072696536779404
    2. '0' → logprob: -2.495727062225342
    3. '+' → logprob: -4.120727062225342
    4. '))' → logprob: -4.995727062225342
    5. '*' → logprob: -5.995727062225342
    6. ')))' → logprob: -6.745727062225342
    7. ' ,' → logprob: -6.745727062225342
    8. '00' → logprob: -6.870727062225342
    9. ' +' → logprob: -7.495727062225342
    10. '000' → logprob: -8.245726585388184

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014254005625844002
    2. '2' → logprob: -4.764254093170166
    3. '(' → logprob: -6.264254093170166
    4. ' ' → logprob: -7.014254093170166
    5. '501' → logprob: -7.389254093170166
    6. '100' → logprob: -7.639254093170166
    7. '11' → logprob: -8.139253616333008
    8. '10' → logprob: -8.139253616333008
    9. '5' → logprob: -8.639253616333008
    10. '21' → logprob: -8.764253616333008

Token 20: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2531123161315918
    2. '))' → logprob: -1.5031123161315918
    3. ',' → logprob: -8.12811279296875
    4. '())' → logprob: -8.37811279296875
    5. ' )' → logprob: -8.87811279296875
    6. ')))' → logprob: -9.25311279296875
    7. ' ' → logprob: -9.50311279296875
    8. '*' → logprob: -9.50311279296875
    9. ' if' → logprob: -9.87811279296875
    10. '0' → logprob: -10.00311279296875

Token 21: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007972952909767628
    2. 'if' → logprob: -5.382972717285156
    3. '*' → logprob: -6.257972717285156
    4. ' *' → logprob: -6.757972717285156
    5. ' ' → logprob: -9.132972717285156
    6. '```' → logprob: -9.757972717285156
    7. ')' → logprob: -10.007972717285156
    8. '0' → logprob: -11.632972717285156
    9. '(' → logprob: -11.882972717285156
    10. '500' → logprob: -12.132972717285156

Token 22: ' x' (ID: 1215)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.7468798756599426
    2. ' ' → logprob: -0.8718798756599426
    3. ' x' → logprob: -2.996879816055298
    4. 'x' → logprob: -3.371879816055298
    5. ' N' → logprob: -4.746880054473877
    6. '5' → logprob: -5.121880054473877
    7. 'N' → logprob: -5.871880054473877
    8. ' (' → logprob: -6.121880054473877
    9. '(' → logprob: -6.871880054473877
    10. '(x' → logprob: -7.246880054473877

Token 23: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04932475462555885
    2. ' *' → logprob: -3.0493247509002686
    3. ')' → logprob: -7.299324989318848
    4. '>' → logprob: -10.799324989318848
    5. ' ' → logprob: -11.174324989318848
    6. ')*' → logprob: -12.174324989318848
    7. ' >' → logprob: -12.424324989318848
    8. ' )' → logprob: -12.424324989318848
    9. '))' → logprob: -13.174324989318848
    10. '*>' → logprob: -13.424324989318848

Token 24: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.04863959923386574
    2. ' ' → logprob: -3.0486395359039307
    3. '501' → logprob: -10.798639297485352
    4. '  ' → logprob: -11.798639297485352
    5. '```' → logprob: -12.048639297485352
    6. '   ' → logprob: -12.798639297485352
    7. '5' → logprob: -13.173639297485352
    8. '50' → logprob: -13.361139297485352
    9. '100' → logprob: -13.423639297485352
    10. '499' → logprob: -13.548639297485352

Token 25: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5254932045936584
    2. '<=' → logprob: -0.9004932045936584
    3. ' ' → logprob: -7.025493144989014
    4. '+' → logprob: -7.650493144989014
    5. ')<=' → logprob: -7.900493144989014
    6. ')' → logprob: -8.400493621826172
    7. '*' → logprob: -8.900493621826172
    8. ' +' → logprob: -9.900493621826172
    9. '<|end|>' → logprob: -10.275493621826172
    10. '<' → logprob: -10.275493621826172

Token 26: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003222749102860689
    2. ' N' → logprob: -5.753222942352295
    3. '100' → logprob: -10.628222465515137
    4. ' ' → logprob: -11.128222465515137
    5. '   ' → logprob: -12.753222465515137
    6. '  ' → logprob: -14.128222465515137
    7. '250' → logprob: -14.878222465515137
    8. '	N' → logprob: -15.128222465515137
    9. '700' → logprob: -15.378222465515137
    10. '999' → logprob: -15.378222465515137

Token 27: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8136807680130005
    2. '),' → logprob: -0.9386807680130005
    3. ')),' → logprob: -2.438680648803711
    4. ' and' → logprob: -2.813680648803711
    5. ')' → logprob: -4.313680648803711
    6. ')))' → logprob: -6.438680648803711
    7. ' ),' → logprob: -6.563680648803711
    8. 'and' → logprob: -6.688680648803711
    9. ' ))' → logprob: -8.313680648803711
    10. ' )' → logprob: -9.438680648803711

Token 28: ' ' (ID: 220)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.6091876029968262
    2. '0' → logprob: -1.6091876029968262
    3. 'N' → logprob: -1.6091876029968262
    4. ')' → logprob: -3.984187602996826
    5. ' ' → logprob: -4.234187602996826
    6. 'x' → logprob: -5.234187602996826
    7. ' lambda' → logprob: -5.484187602996826
    8. ' x' → logprob: -5.734187602996826
    9. '500' → logprob: -5.734187602996826
    10. 'lambda' → logprob: -5.984187602996826

Token 29: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7433573603630066
    2. 'N' → logprob: -0.7433573603630066
    3. 'True' → logprob: -4.368357181549072
    4. '0' → logprob: -4.493357181549072
    5. ')' → logprob: -4.743357181549072
    6. 'x' → logprob: -5.243357181549072
    7. ' N' → logprob: -5.243357181549072
    8. 'lambda' → logprob: -6.618357181549072
    9. 'None' → logprob: -6.868357181549072
    10. '500' → logprob: -7.243357181549072

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.889424836728722e-05
    2. '))' → logprob: -9.375099182128906
    3. ')
' → logprob: -12.500099182128906
    4. ' )' → logprob: -12.625099182128906
    5. ')))' → logprob: -12.875099182128906
    6. '*' → logprob: -13.625099182128906
    7. ')*' → logprob: -14.375099182128906
    8. ')x' → logprob: -14.375099182128906
    9. '**' → logprob: -14.625099182128906
    10. '),' → logprob: -14.875099182128906

Token 31: 'B' (ID: 33)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21598444879055023
    2. '+' → logprob: -1.9659844636917114
    3. '<|end|>' → logprob: -4.590984344482422
    4. '*
' → logprob: -4.840984344482422
    5. ')' → logprob: -5.340984344482422
    6. ' 
' → logprob: -5.465984344482422
    7. '+
' → logprob: -5.465984344482422
    8. '#' → logprob: -5.465984344482422
    9. 'x' → logprob: -5.715984344482422
    10. '\n' → logprob: -5.840984344482422

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011090735904872417
    2. '=' → logprob: -4.5110907554626465
    3. ' ' → logprob: -10.136090278625488
    4. ')' → logprob: -14.511090278625488
    5. ' ' → logprob: -14.511090278625488
    6. '_' → logprob: -14.636090278625488
    7. ' =(' → logprob: -14.761090278625488
    8. 'space' → logprob: -15.511090278625488
    9. '=int' → logprob: -15.886090278625488
    10. '_space' → logprob: -16.386091232299805

Token 33: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.029680365696549416
    2. 'next' → logprob: -3.7796802520751953
    3. ' N' → logprob: -5.154680252075195
    4. 'N' → logprob: -7.779680252075195
    5. ' (' → logprob: -9.279680252075195
    6. '(next' → logprob: -9.279680252075195
    7. '0' → logprob: -11.279680252075195
    8. ' ' → logprob: -11.404680252075195
    9. '(N' → logprob: -12.029680252075195
    10. '_next' → logprob: -13.779680252075195

Token 34: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0020669952500611544
    2. '(' → logprob: -6.3770670890808105
    3. '(x' → logprob: -8.752066612243652
    4. ' (' → logprob: -9.252066612243652
    5. ' ((' → logprob: -9.627066612243652
    6. '(lambda' → logprob: -10.877066612243652
    7. '(((' → logprob: -11.877066612243652
    8. ' ' → logprob: -12.127066612243652
    9. '(space' → logprob: -12.627066612243652
    10. '(('' → logprob: -13.752066612243652

Token 35: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.576810359954834
    2. '(x' → logprob: -0.826810359954834
    3. ' x' → logprob: -7.576810359954834
    4. 'y' → logprob: -9.201810836791992
    5. ' (' → logprob: -9.201810836791992
    6. '(y' → logprob: -9.201810836791992
    7. '(' → logprob: -10.701810836791992
    8. ' ' → logprob: -10.951810836791992
    9. '   ' → logprob: -12.076810836791992
    10. '  ' → logprob: -13.076810836791992

Token 36: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02647063508629799
    2. 'for' → logprob: -3.77647066116333
    3. ' (' → logprob: -5.90147066116333
    4. '(x' → logprob: -7.90147066116333
    5. ' ' → logprob: -9.901470184326172
    6. '((' → logprob: -10.526470184326172
    7. '(for' → logprob: -11.401470184326172
    8. '(range' → logprob: -11.901470184326172
    9. '(' → logprob: -12.401470184326172
    10. ' in' → logprob: -12.776470184326172

Token 37: ' y' (ID: 342)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8956223130226135
    2. ' range' → logprob: -1.2706222534179688
    3. ' reversed' → logprob: -2.3956222534179688
    4. ' y' → logprob: -2.6456222534179688
    5. 'range' → logprob: -2.6456222534179688
    6. ' (' → logprob: -4.020622253417969
    7. '(re' → logprob: -4.145622253417969
    8. '(range' → logprob: -4.145622253417969
    9. 'x' → logprob: -4.395622253417969
    10. ' x' → logprob: -4.770622253417969

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005251899361610413
    2. 'in' → logprob: -5.255251884460449
    3. ' ' → logprob: -11.25525188446045
    4. ' y' → logprob: -12.88025188446045
    5. ' ' → logprob: -14.38025188446045
    6. '  ' → logprob: -15.00525188446045
    7. '   ' → logprob: -15.00525188446045
    8. '    ' → logprob: -15.50525188446045
    9. '500' → logprob: -15.88025188446045
    10. '```' → logprob: -16.130252838134766

Token 39: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.3205733001232147
    2. ' range' → logprob: -1.820573329925537
    3. ' reversed' → logprob: -2.445573329925537
    4. 'range' → logprob: -3.695573329925537
    5. '(re' → logprob: -7.320573329925537
    6. '(range' → logprob: -9.320572853088379
    7. ' ' → logprob: -10.320572853088379
    8. ' (' → logprob: -11.945572853088379
    9. '   ' → logprob: -12.195572853088379
    10. '	re' → logprob: -12.445572853088379

Token 40: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -7.588793960167095e-05
    2. ' (' → logprob: -10.500076293945312
    3. '((' → logprob: -10.625076293945312
    4. 'range' → logprob: -11.125076293945312
    5. '(' → logprob: -12.125076293945312
    6. ' range' → logprob: -12.500076293945312
    7. '(((' → logprob: -16.750076293945312
    8. '(x' → logprob: -16.875076293945312
    9. ' ((' → logprob: -17.375076293945312
    10. '	range' → logprob: -17.500076293945312

Token 41: '((' (ID: 2054)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.09023883938789368
    2. '(' → logprob: -2.7152388095855713
    3. '((' → logprob: -4.09023904800415
    4. ' (' → logprob: -5.71523904800415
    5. ' ' → logprob: -10.715238571166992
    6. ' ((' → logprob: -11.090238571166992
    7. '(((' → logprob: -11.840238571166992
    8. '(A' → logprob: -12.090238571166992
    9. '500' → logprob: -12.840238571166992
    10. '(M' → logprob: -13.215238571166992

Token 42: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06474614888429642
    2. '(' → logprob: -3.689746141433716
    3. 'N' → logprob: -4.439746379852295
    4. '100' → logprob: -4.564746379852295
    5. '((' → logprob: -5.064746379852295
    6. '101' → logprob: -5.939746379852295
    7. ' (' → logprob: -6.314746379852295
    8. '250' → logprob: -6.689746379852295
    9. '500' → logprob: -7.814746379852295
    10. '501' → logprob: -7.814746379852295

Token 43: '-A' (ID: 9406)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0015187880489975214
    2. ' //' → logprob: -6.876518726348877
    3. '/' → logprob: -8.376519203186035
    4. ' ' → logprob: -9.876519203186035
    5. '500' → logprob: -10.126519203186035
    6. '#' → logprob: -10.251519203186035
    7. '400' → logprob: -10.376519203186035
    8. '```' → logprob: -10.876519203186035
    9. '100' → logprob: -11.001519203186035
    10. '250' → logprob: -12.251519203186035

Token 44: '*' (ID: 9)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0038570782635360956
    2. ' //' → logprob: -5.878857135772705
    3. '500' → logprob: -7.878857135772705
    4. '#' → logprob: -8.128856658935547
    5. ' ' → logprob: -8.628856658935547
    6. '400' → logprob: -9.253856658935547
    7. '/' → logprob: -10.878856658935547
    8. '*' → logprob: -11.128856658935547
    9. '```' → logprob: -11.378856658935547
    10. '100' → logprob: -11.816356658935547

Token 45: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.010840763337910175
    2. '5' → logprob: -5.135840892791748
    3. '50' → logprob: -5.510840892791748
    4. '200' → logprob: -7.260840892791748
    5. '250' → logprob: -10.26084041595459
    6. '(' → logprob: -10.76084041595459
    7. '10' → logprob: -11.01084041595459
    8. '500' → logprob: -11.26084041595459
    9. '   ' → logprob: -11.51084041595459
    10. '20' → logprob: -11.51084041595459

Token 46: ')//' (ID: 60375)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.007151984144002199
    2. ')//' → logprob: -5.257152080535889
    3. ' //' → logprob: -6.507152080535889
    4. ')' → logprob: -8.75715160369873
    5. ' ' → logprob: -10.13215160369873
    6. '/' → logprob: -10.25715160369873
    7. '```' → logprob: -10.50715160369873
    8. '   ' → logprob: -10.63215160369873
    9. '#' → logprob: -10.63215160369873
    10. '100' → logprob: -10.75715160369873

Token 47: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007332110311836004
    2. ' ' → logprob: -5.3823323249816895
    3. '5' → logprob: -6.2573323249816895
    4. '   ' → logprob: -7.8823323249816895
    5. '50' → logprob: -9.132331848144531
    6. '  ' → logprob: -9.257331848144531
    7. '(' → logprob: -9.507331848144531
    8. '

' → logprob: -10.632331848144531
    9. '    ' → logprob: -10.757331848144531
    10. '200' → logprob: -11.007331848144531

Token 48: '+' (ID: 10)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.7055434584617615
    2. '001' → logprob: -1.2055435180664062
    3. '00' → logprob: -2.4555435180664062
    4. '000' → logprob: -2.9555435180664062
    5. '1' → logprob: -2.9555435180664062
    6. '+' → logprob: -4.830543518066406
    7. '0' → logprob: -4.955543518066406
    8. '(' → logprob: -8.518043518066406
    9. '501' → logprob: -8.518043518066406
    10. '101' → logprob: -8.705543518066406

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007931088097393513
    2. '100' → logprob: -5.882931232452393
    3. '501' → logprob: -6.132931232452393
    4. '101' → logprob: -7.757931232452393
    5. '5' → logprob: -7.882931232452393
    6. '6' → logprob: -8.132930755615234
    7. '(' → logprob: -8.132930755615234
    8. '001' → logprob: -8.320430755615234
    9. '0' → logprob: -8.632930755615234
    10. '51' → logprob: -9.070430755615234

Token 50: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006363854743540287
    2. '+' → logprob: -5.381363868713379
    3. '()' → logprob: -7.756363868713379
    4. ')' → logprob: -8.131363868713379
    5. '()))' → logprob: -8.131363868713379
    6. '1' → logprob: -8.381363868713379
    7. ' ))' → logprob: -8.506363868713379
    8. ')))' → logprob: -9.256363868713379
    9. '0' → logprob: -9.881363868713379
    10. ' +' → logprob: -10.631363868713379

Token 51: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013484661467373371
    2. ')' → logprob: -4.763484477996826
    3. 'if' → logprob: -5.388484477996826
    4. '(' → logprob: -9.263484954833984
    5. ' y' → logprob: -9.763484954833984
    6. ' (' → logprob: -10.263484954833984
    7. ' ' → logprob: -10.263484954833984
    8. ' )' → logprob: -10.513484954833984
    9. '(y' → logprob: -11.888484954833984
    10. '),' → logprob: -12.138484954833984

Token 52: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.05496634915471077
    2. 'y' → logprob: -2.929966449737549
    3. '5' → logprob: -10.05496597290039
    4. ' ' → logprob: -10.67996597290039
    5. '(y' → logprob: -11.80496597290039
    6. ' (' → logprob: -13.05496597290039
    7. ')' → logprob: -13.80496597290039
    8. ''y' → logprob: -13.80496597290039
    9. ')y' → logprob: -13.80496597290039
    10. '<|end|>' → logprob: -14.05496597290039

Token 53: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.002817835658788681
    2. ' *' → logprob: -5.877817630767822
    3. '5' → logprob: -12.00281810760498
    4. '<|end|>' → logprob: -13.25281810760498
    5. '```' → logprob: -13.87781810760498
    6. ' ' → logprob: -14.12781810760498
    7. '**' → logprob: -14.12781810760498
    8. '`' → logprob: -14.62781810760498
    9. ')*' → logprob: -14.62781810760498
    10. '*>' → logprob: -15.12781810760498

Token 54: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.864272967912257e-05
    2. ' ' → logprob: -9.375088691711426
    3. '<|end|>' → logprob: -13.375088691711426
    4. '   ' → logprob: -14.625088691711426
    5. '```' → logprob: -14.750088691711426
    6. '  ' → logprob: -14.750088691711426
    7. '
' → logprob: -15.937588691711426
    8. '<|end|>' → logprob: -15.937588691711426
    9. '1' → logprob: -16.00008773803711
    10. '50' → logprob: -16.81258773803711

Token 55: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.14299996197223663
    2. '<=' → logprob: -2.0179998874664307
    3. '*' → logprob: -9.267999649047852
    4. ')<=' → logprob: -9.392999649047852
    5. ' ' → logprob: -10.267999649047852
    6. ')' → logprob: -10.267999649047852
    7. '<|end|>' → logprob: -10.517999649047852
    8. '+' → logprob: -11.017999649047852
    9. '==' → logprob: -12.267999649047852
    10. ']<=' → logprob: -12.642999649047852

Token 56: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.544562816619873
    2. ' N' → logprob: -0.919562816619873
    3. ' (' → logprob: -4.419562816619873
    4. '(N' → logprob: -4.794562816619873
    5. ' ' → logprob: -7.419562816619873
    6. '(' → logprob: -8.919563293457031
    7. '  ' → logprob: -10.169563293457031
    8. '   ' → logprob: -10.544563293457031
    9. '<N' → logprob: -11.107063293457031
    10. ' ' → logprob: -11.419563293457031

Token 57: '-A' (ID: 9406)
  Prédit: '-B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-B' → logprob: -0.47310686111450195
    2. '-' → logprob: -1.348106861114502
    3. ' -' → logprob: -2.223106861114502
    4. '-A' → logprob: -5.723106861114502
    5. ')' → logprob: -6.098106861114502
    6. 'B' → logprob: -7.223106861114502
    7. ' B' → logprob: -7.223106861114502
    8. '   ' → logprob: -7.348106861114502
    9. ' ' → logprob: -7.973106861114502
    10. '),' → logprob: -8.223106384277344

Token 58: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47185471653938293
    2. '500' → logprob: -1.3468546867370605
    3. '*A' → logprob: -2.4718546867370605
    4. '-A' → logprob: -4.8468546867370605
    5. 'A' → logprob: -4.9718546867370605
    6. '-' → logprob: -4.9718546867370605
    7. ' ' → logprob: -5.8468546867370605
    8. '*(' → logprob: -6.2218546867370605
    9. '(A' → logprob: -6.9718546867370605
    10. '-B' → logprob: -7.2218546867370605

Token 59: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.6450144052505493
    2. '5' → logprob: -0.7700144052505493
    3. '(' → logprob: -4.64501428604126
    4. ' ' → logprob: -6.02001428604126
    5. ' (' → logprob: -9.270014762878418
    6. '50' → logprob: -9.645014762878418
    7. '   ' → logprob: -9.645014762878418
    8. '    ' → logprob: -10.770014762878418
    9. '(B' → logprob: -11.645014762878418
    10. '  ' → logprob: -11.645014762878418

Token 60: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.008805779740214348
    2. ' ),' → logprob: -4.758805751800537
    3. ')),' → logprob: -8.883806228637695
    4. ')' → logprob: -10.633806228637695
    5. '0' → logprob: -12.258806228637695
    6. '))' → logprob: -12.508806228637695
    7. ',' → logprob: -12.758806228637695
    8. '   ' → logprob: -12.883806228637695
    9. '-' → logprob: -13.008806228637695
    10. ' ' → logprob: -13.508806228637695

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5412468910217285
    2. ' ' → logprob: -0.9162468910217285
    3. ' N' → logprob: -4.7912468910217285
    4. ' (' → logprob: -5.0412468910217285
    5. ' y' → logprob: -6.5412468910217285
    6. 'N' → logprob: -7.2912468910217285
    7. ' next' → logprob: -8.41624641418457
    8. '(N' → logprob: -8.54124641418457
    9. 'y' → logprob: -8.91624641418457
    10. ')' → logprob: -9.04124641418457

Token 62: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2965945601463318
    2. '(N' → logprob: -1.5465946197509766
    3. 'y' → logprob: -4.046594619750977
    4. '0' → logprob: -4.421594619750977
    5. ' (' → logprob: -5.296594619750977
    6. ' N' → logprob: -5.296594619750977
    7. 'B' → logprob: -5.921594619750977
    8. '   ' → logprob: -7.796594619750977
    9. ' ' → logprob: -8.171594619750977
    10. ' y' → logprob: -8.421594619750977

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010020548506872728
    2. ')
' → logprob: -9.500100135803223
    3. ' )' → logprob: -11.250100135803223
    4. '),' → logprob: -12.375100135803223
    5. '))' → logprob: -13.375100135803223
    6. ')y' → logprob: -13.375100135803223
    7. '   ' → logprob: -14.250100135803223
    8. ')b' → logprob: -14.500100135803223
    9. ')

' → logprob: -14.875100135803223
    10. '0' → logprob: -15.000100135803223

Token 64: 'from' (ID: 2845)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09189710766077042
    2. 'C' → logprob: -2.4668970108032227
    3. '\n' → logprob: -6.591897010803223
    4. ' print' → logprob: -6.841897010803223
    5. '
' → logprob: -8.841897010803223
    6. '```' → logprob: -9.091897010803223
    7. '\' → logprob: -9.966897010803223
    8. ' C' → logprob: -10.341897010803223
    9. '0' → logprob: -10.466897010803223
    10. '`
' → logprob: -10.841897010803223

Token 65: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.08160271495580673
    2. ' math' → logprob: -2.8316028118133545
    3. ' itertools' → logprob: -4.081602573394775
    4. ' sys' → logprob: -6.456602573394775
    5. 'collections' → logprob: -6.956602573394775
    6. ' collection' → logprob: -11.456603050231934
    7. ' functools' → logprob: -11.456603050231934
    8. 'math' → logprob: -11.581603050231934
    9. ' fractions' → logprob: -13.206603050231934
    10. ' ' → logprob: -13.456603050231934

Token 66: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9731317162513733
    2. ' import' → logprob: -1.2231316566467285
    3. '_import' → logprob: -1.5981316566467285
    4. '_' → logprob: -2.0981316566467285
    5. ' _' → logprob: -6.2231316566467285
    6. '	import' → logprob: -7.9731316566467285
    7. ' ' → logprob: -8.723132133483887
    8. '_cache' → logprob: -10.348132133483887
    9. '_reduce' → logprob: -10.973132133483887
    10. '_c' → logprob: -11.098132133483887

Token 67: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5875255465507507
    2. 'l' → logprob: -0.9625255465507507
    3. ' l' → logprob: -3.2125256061553955
    4. 'cache' → logprob: -4.087525367736816
    5. ' reduce' → logprob: -5.837525367736816
    6. 'cached' → logprob: -6.462525367736816
    7. 'partial' → logprob: -7.837525367736816
    8. 'wrap' → logprob: -8.837525367736816
    9. ' cache' → logprob: -9.212525367736816
    10. 'redu' → logprob: -9.337525367736816

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5574242472648621
    2. ',' → logprob: -2.057424306869507
    3. '<|end|>' → logprob: -2.557424306869507
    4. '_' → logprob: -3.182424306869507
    5. ' ' → logprob: -3.432424306869507
    6. 'print' → logprob: -3.682424306869507
    7. ')' → logprob: -3.932424306869507
    8. ' 
' → logprob: -3.932424306869507
    9. 'result' → logprob: -4.182424068450928
    10. 'def' → logprob: -4.307424068450928

Token 69: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3256900906562805
    2. 'C' → logprob: -1.9506900310516357
    3. 'result' → logprob: -3.7006900310516357
    4. 'import' → logprob: -4.200690269470215
    5. '_' → logprob: -4.325690269470215
    6. 'def' → logprob: -4.825690269470215
    7. 'total' → logprob: -4.825690269470215
    8. ',' → logprob: -4.950690269470215
    9. ' print' → logprob: -5.200690269470215
    10. 'dp' → logprob: -5.325690269470215

Token 70: '(re' (ID: 8178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0910181924700737
    2. '(re' → logprob: -2.8410181999206543
    3. '(lambda' → logprob: -4.216018199920654
    4. '(sum' → logprob: -4.466018199920654
    5. '(A' → logprob: -6.716018199920654
    6. '((' → logprob: -7.091018199920654
    7. '(max' → logprob: -8.966017723083496
    8. '(
' → logprob: -9.966017723083496
    9. '('' → logprob: -10.341017723083496
    10. 'reduce' → logprob: -10.591017723083496

Token 71: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -0.0015234333695843816
    2. 'd' → logprob: -6.626523494720459
    3. 'duced' → logprob: -8.7515230178833
    4. 'du' → logprob: -10.7515230178833
    5. 'ducer' → logprob: -12.2515230178833
    6. 'duc' → logprob: -12.2515230178833
    7. 'dux' → logprob: -12.7515230178833
    8. 'verse' → logprob: -13.0015230178833
    9. 'dc' → logprob: -14.5015230178833
    10. 'duct' → logprob: -14.5015230178833

Token 72: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.04331430420279503
    2. '(' → logprob: -3.168314218521118
    3. '(operator' → logprob: -8.793313980102539
    4. '(int' → logprob: -10.293313980102539
    5. 'lambda' → logprob: -10.293313980102539
    6. ')' → logprob: -10.293313980102539
    7. ' (' → logprob: -11.168313980102539
    8. '```' → logprob: -11.293313980102539
    9. '(max' → logprob: -11.668313980102539
    10. '((' → logprob: -11.793313980102539

Token 73: ' acc' (ID: 1259)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.39945876598358154
    2. ' lambda' → logprob: -1.1494587659835815
    3. ' a' → logprob: -4.649458885192871
    4. 'lambda' → logprob: -7.149458885192871
    5. 'x' → logprob: -7.399458885192871
    6. '(lambda' → logprob: -7.899458885192871
    7. ' c' → logprob: -8.274458885192871
    8. ',' → logprob: -8.274458885192871
    9. 'a' → logprob: -8.399458885192871
    10. ' acc' → logprob: -8.649458885192871

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002709892112761736
    2. ' ,' → logprob: -6.002709865570068
    3. 'lambda' → logprob: -9.502710342407227
    4. ' lambda' → logprob: -9.877710342407227
    5. ',x' → logprob: -10.877710342407227
    6. '=lambda' → logprob: -10.877710342407227
    7. ' x' → logprob: -11.127710342407227
    8. ':' → logprob: -11.502710342407227
    9. '+,' → logprob: -11.752710342407227
    10. '+' → logprob: -11.752710342407227

Token 75: ' v' (ID: 323)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2263118475675583
    2. 'x' → logprob: -2.6013119220733643
    3. ' c' → logprob: -3.4763119220733643
    4. ' a' → logprob: -3.8513119220733643
    5. ' y' → logprob: -3.9763119220733643
    6. ' b' → logprob: -4.101311683654785
    7. ' ' → logprob: -4.601311683654785
    8. ' acc' → logprob: -5.101311683654785
    9. 'a' → logprob: -5.351311683654785
    10. ' z' → logprob: -5.476311683654785

Token 76: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003984127659350634
    2. ' :' → logprob: -6.003983974456787
    3. ',' → logprob: -6.628983974456787
    4. ':v' → logprob: -9.503984451293945
    5. ',v' → logprob: -10.128984451293945
    6. '+:' → logprob: -11.128984451293945
    7. 'acc' → logprob: -11.253984451293945
    8. ':A' → logprob: -12.003984451293945
    9. ',:' → logprob: -12.253984451293945
    10. '+' → logprob: -12.253984451293945

Token 77: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.31450557708740234
    2. 'acc' → logprob: -1.3145055770874023
    3. '(acc' → logprob: -7.189505577087402
    4. ' (' → logprob: -8.689505577087402
    5. ' ' → logprob: -9.064505577087402
    6. '(' → logprob: -10.189505577087402
    7. 'v' → logprob: -10.189505577087402
    8. ' v' → logprob: -10.689505577087402
    9. ' max' → logprob: -11.127005577087402
    10. '	acc' → logprob: -11.377005577087402

Token 78: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23525439202785492
    2. ' +' → logprob: -1.6102544069290161
    3. '*' → logprob: -4.985254287719727
    4. ' *' → logprob: -6.860254287719727
    5. '-' → logprob: -7.985254287719727
    6. '+x' → logprob: -8.110254287719727
    7. '*v' → logprob: -8.610254287719727
    8. '|' → logprob: -8.735254287719727
    9. ':' → logprob: -8.860254287719727
    10. ' -' → logprob: -9.610254287719727

Token 79: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6869444847106934
    2. ' v' → logprob: -0.8119444847106934
    3. ' str' → logprob: -4.186944484710693
    4. ' (' → logprob: -4.811944484710693
    5. '1' → logprob: -5.311944484710693
    6. 'str' → logprob: -5.311944484710693
    7. ' ' → logprob: -5.561944484710693
    8. '(v' → logprob: -5.561944484710693
    9. '(' → logprob: -6.436944484710693
    10. ' int' → logprob: -6.936944484710693

Token 80: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01600128412246704
    2. ' ,' → logprob: -5.266001224517822
    3. ',v' → logprob: -5.391001224517822
    4. ' *' → logprob: -7.016001224517822
    5. ' +' → logprob: -7.016001224517822
    6. ',A' → logprob: -7.141001224517822
    7. '*' → logprob: -7.891001224517822
    8. '+' → logprob: -8.14100170135498
    9. '[' → logprob: -8.14100170135498
    10. '[v' → logprob: -8.26600170135498

Token 81: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09692404419183731
    2. '[' → logprob: -2.846924066543579
    3. ',' → logprob: -4.221923828125
    4. '0' → logprob: -5.221923828125
    5. ' ' → logprob: -5.721923828125
    6. '),' → logprob: -6.221923828125
    7. ')' → logprob: -6.346923828125
    8. '2' → logprob: -6.971923828125
    9. ']))' → logprob: -6.971923828125
    10. '],' → logprob: -7.221923828125

Token 82: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6679031252861023
    2. '*v' → logprob: -0.7929031252861023
    3. ' *' → logprob: -3.417903184890747
    4. '*A' → logprob: -7.292902946472168
    5. '*y' → logprob: -8.542902946472168
    6. '*(' → logprob: -8.792902946472168
    7. '**' → logprob: -8.792902946472168
    8. ',' → logprob: -9.167902946472168
    9. '*N' → logprob: -9.292902946472168
    10. '*[' → logprob: -9.292902946472168

Token 83: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004005503375083208
    2. '500' → logprob: -6.379005432128906
    3. '10' → logprob: -7.004005432128906
    4. ' v' → logprob: -7.754005432128906
    5. '100' → logprob: -7.879005432128906
    6. '5' → logprob: -8.129005432128906
    7. ' ' → logprob: -9.379005432128906
    8. '50' → logprob: -10.379005432128906
    9. '   ' → logprob: -10.504005432128906
    10. '(' → logprob: -10.629005432128906

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006384541047737002
    2. '1' → logprob: -7.750638484954834
    3. ')' → logprob: -9.750638008117676
    4. '[v' → logprob: -9.750638008117676
    5. '),' → logprob: -10.500638008117676
    6. ',' → logprob: -10.625638008117676
    7. '*v' → logprob: -11.375638008117676
    8. ',v' → logprob: -12.125638008117676
    9. 'v' → logprob: -12.500638008117676
    10. '*' → logprob: -12.750638008117676

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. '0' → logprob: -11.250027656555176
    3. '2' → logprob: -12.125027656555176
    4. ']' → logprob: -12.250027656555176
    5. '```' → logprob: -13.625027656555176
    6. ' ' → logprob: -14.062527656555176
    7. '])' → logprob: -14.500027656555176
    8. '-' → logprob: -14.625027656555176
    9. '][' → logprob: -15.562527656555176
    10. ']+' → logprob: -15.937527656555176

Token 86: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008448873413726687
    2. ' ,' → logprob: -7.625844955444336
    3. '),' → logprob: -8.250844955444336
    4. ',A' → logprob: -10.875844955444336
    5. '],' → logprob: -11.250844955444336
    6. ',v' → logprob: -11.250844955444336
    7. '',' → logprob: -11.375844955444336
    8. ')' → logprob: -11.500844955444336
    9. '[' → logprob: -12.000844955444336
    10. '`,' → logprob: -12.625844955444336

Token 87: ' zip' (ID: 16216)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3946177363395691
    2. ' [(' → logprob: -1.3946177959442139
    3. ' zip' → logprob: -3.019617795944214
    4. 'zip' → logprob: -3.894617795944214
    5. '[((' → logprob: -5.519617557525635
    6. '[[' → logprob: -6.519617557525635
    7. 'enumer' → logprob: -6.644617557525635
    8. ' enumerate' → logprob: -6.894617557525635
    9. ' [[' → logprob: -8.269618034362793
    10. '([(' → logprob: -8.394618034362793

Token 88: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.022662833333015442
    2. '((' → logprob: -3.897662878036499
    3. '(range' → logprob: -7.02266263961792
    4. '(' → logprob: -7.52266263961792
    5. '(([' → logprob: -8.147663116455078
    6. '(A' → logprob: -8.522663116455078
    7. '<|end|>' → logprob: -9.647663116455078
    8. '(B' → logprob: -9.772663116455078
    9. '(
' → logprob: -10.147663116455078
    10. '([(' → logprob: -11.647663116455078

Token 89: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07820222526788712
    2. '[A' → logprob: -2.703202247619629
    3. '500' → logprob: -5.328202247619629
    4. '[' → logprob: -6.453202247619629
    5. ' A' → logprob: -7.828202247619629
    6. '(A' → logprob: -7.953202247619629
    7. ' [' → logprob: -7.953202247619629
    8. '   ' → logprob: -8.078202247619629
    9. ' ' → logprob: -9.078202247619629
    10. '5' → logprob: -9.453202247619629

Token 90: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19747929275035858
    2. ',B' → logprob: -1.822479248046875
    3. ' ,' → logprob: -4.072479248046875
    4. 'B' → logprob: -7.947479248046875
    5. ' B' → logprob: -8.822479248046875
    6. ' ' → logprob: -10.822479248046875
    7. '<|end|>' → logprob: -12.197479248046875
    8. '[' → logprob: -12.947479248046875
    9. ',[' → logprob: -13.197479248046875
    10. ',b' → logprob: -13.322479248046875

Token 91: '],[' (ID: 32964)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.06255988776683807
    2. '],[' → logprob: -3.4375598430633545
    3. ',' → logprob: -3.8125598430633545
    4. ' ],' → logprob: -5.812560081481934
    5. ',N' → logprob: -6.687560081481934
    6. ',A' → logprob: -6.937560081481934
    7. ' ,' → logprob: -7.562560081481934
    8. ',C' → logprob: -8.062560081481934
    9. ']' → logprob: -8.937560081481934
    10. ',[' → logprob: -9.562560081481934

Token 92: '100' (ID: 1353)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.014026699587702751
    2. '[' → logprob: -4.389026641845703
    3. '5' → logprob: -6.889026641845703
    4. ' ' → logprob: -8.014026641845703
    5. '50' → logprob: -9.639026641845703
    6. '100' → logprob: -10.639026641845703
    7. ' [' → logprob: -10.639026641845703
    8. '(' → logprob: -11.639026641845703
    9. '   ' → logprob: -11.764026641845703
    10. '  ' → logprob: -12.014026641845703

Token 93: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.1165265217423439
    2. '500' → logprob: -2.2415266036987305
    3. ' ' → logprob: -6.2415266036987305
    4. ',' → logprob: -6.6165266036987305
    5. '0' → logprob: -8.74152660369873
    6. '50' → logprob: -9.99152660369873
    7. '[' → logprob: -9.99152660369873
    8. '+' → logprob: -10.05402660369873
    9. '   ' → logprob: -11.49152660369873
    10. '-' → logprob: -11.67902660369873

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030299274250864983
    2. ' ,' → logprob: -3.780299186706543
    3. ' ' → logprob: -5.030299186706543
    4. ',
' → logprob: -9.280299186706543
    5. '<|end|>' → logprob: -9.280299186706543
    6. '500' → logprob: -9.655299186706543
    7. ' 
' → logprob: -9.655299186706543
    8. '100' → logprob: -9.655299186706543
    9. ',

' → logprob: -10.530299186706543
    10. '0' → logprob: -10.905299186706543

Token 95: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.17726534605026245
    2. '1' → logprob: -1.9272654056549072
    3. ' ' → logprob: -4.427265167236328
    4. '100' → logprob: -6.552265167236328
    5. '10' → logprob: -6.677265167236328
    6. '500' → logprob: -6.677265167236328
    7. '50' → logprob: -7.802265167236328
    8. '0' → logprob: -8.177265167236328
    9. '2' → logprob: -9.427265167236328
    10. '  ' → logprob: -10.489765167236328

Token 96: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.0038054264150559902
    2. ' ]' → logprob: -6.503805637359619
    3. ']' → logprob: -6.878805637359619
    4. '])))' → logprob: -7.628805637359619
    5. '])' → logprob: -8.003805160522461
    6. ']))' → logprob: -8.253805160522461
    7. '])),' → logprob: -9.378805160522461
    8. '0' → logprob: -10.628805160522461
    9. ',' → logprob: -10.753805160522461
    10. '],' → logprob: -11.878805160522461

Token 97: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009767776355147362
    2. ' ' → logprob: -4.634768009185791
    3. '100' → logprob: -12.259767532348633
    4. '1' → logprob: -13.947267532348633
    5. ')' → logprob: -13.947267532348633
    6. '   ' → logprob: -14.072267532348633
    7. '00' → logprob: -14.259767532348633
    8. '  ' → logprob: -14.322267532348633
    9. '10' → logprob: -14.509767532348633
    10. 'N' → logprob: -14.822267532348633

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005938159301877022
    2. ' ' → logprob: -5.1309380531311035
    3. '   ' → logprob: -13.255938529968262
    4. '100' → logprob: -13.255938529968262
    5. '  ' → logprob: -13.755938529968262
    6. ')' → logprob: -14.255938529968262
    7. '-' → logprob: -14.818438529968262
    8. '00' → logprob: -14.943438529968262
    9. ' -' → logprob: -15.005938529968262
    10. '1' → logprob: -15.005938529968262

Token 99: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07892702519893646
    2. ')' → logprob: -2.5789270401000977
    3. ' ))' → logprob: -11.453927040100098
    4. ')
' → logprob: -11.828927040100098
    5. ')))' → logprob: -12.078927040100098
    6. '))
' → logprob: -12.203927040100098
    7. ' )' → logprob: -12.578927040100098
    8. '+' → logprob: -13.328927040100098
    9. '),' → logprob: -13.578927040100098
    10. '0' → logprob: -14.203927040100098


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 84
Précision stricte (1ère position): 45.36%
Précision adaptée (1ère position): 45.36%
Précision (top 10): 86.60%
================================================================================
