================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
def f(n): return sum([1 if len(str(x)) & 1 else 0 for x in range(1, n + 1)])
result = 0
if N>0:
    for number in range(1,N+1):
        if (lambda y: True if len(str(y))%2 else False)(number):
            result+=1
print(f(N) if N%2==0 else result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00036953974631614983
    2. ''' → logprob: -8.75036907196045
    3. '(N' → logprob: -9.75036907196045
    4. '```' → logprob: -10.00036907196045
    5. '`' → logprob: -10.37536907196045
    6. '(
' → logprob: -10.50036907196045
    7. ')' → logprob: -11.25036907196045
    8. '("("' → logprob: -12.00036907196045
    9. '('' → logprob: -12.25036907196045
    10. 'N' → logprob: -12.37536907196045

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7973122596740723
    2. 'if' → logprob: -1.7973122596740723
    3. '\n' → logprob: -2.1723122596740723
    4. '`' → logprob: -3.1723122596740723
    5. 'x' → logprob: -3.6723122596740723
    6. '```' → logprob: -3.6723122596740723
    7. 's' → logprob: -3.7973122596740723
    8. 'a' → logprob: -3.9223122596740723
    9. '\' → logprob: -4.047312259674072
    10. ')' → logprob: -4.297312259674072

Token 6: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10732757300138474
    2. ' factorial' → logprob: -2.607327461242676
    3. ' f' → logprob: -5.357327461242676
    4. ' space' → logprob: -5.482327461242676
    5. ' main' → logprob: -5.857327461242676
    6. ' solution' → logprob: -5.982327461242676
    7. ' function' → logprob: -6.232327461242676
    8. ' func' → logprob: -6.607327461242676
    9. ' factor' → logprob: -6.732327461242676
    10. ' my' → logprob: -6.732327461242676

Token 7: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005511255003511906
    2. 'u' → logprob: -9.125551223754883
    3. '(u' → logprob: -9.375551223754883
    4. '(x' → logprob: -9.625551223754883
    5. 'unction' → logprob: -9.750551223754883
    6. '(a' → logprob: -9.875551223754883
    7. '_' → logprob: -10.000551223754883
    8. ')' → logprob: -10.625551223754883
    9. '(n' → logprob: -10.875551223754883
    10. '('' → logprob: -11.375551223754883

Token 8: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062279343605041504
    2. '):' → logprob: -2.812279224395752
    3. '(' → logprob: -9.18727970123291
    4. '(n' → logprob: -9.31227970123291
    5. ')n' → logprob: -9.81227970123291
    6. ',' → logprob: -10.81227970123291
    7. ' )' → logprob: -11.81227970123291
    8. ':' → logprob: -12.06227970123291
    9. 'n' → logprob: -12.68727970123291
    10. '[' → logprob: -13.18727970123291

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3828764855861664
    2. '\n' → logprob: -1.3828765153884888
    3. '
' → logprob: -3.632876396179199
    4. '\' → logprob: -4.257876396179199
    5. '    
' → logprob: -5.007876396179199
    6. ' 
' → logprob: -5.132876396179199
    7. '    ' → logprob: -5.632876396179199
    8. ' ' → logprob: -6.132876396179199
    9. '\r' → logprob: -6.507876396179199
    10. '  
' → logprob: -6.632876396179199

Token 10: ' sum' (ID: 4215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1803000271320343
    2. 'n' → logprob: -2.055299997329712
    3. ' ' → logprob: -3.430299997329712
    4. '1' → logprob: -5.930300235748291
    5. '0' → logprob: -7.805300235748291
    6. ''' → logprob: -8.180299758911133
    7. ' f' → logprob: -8.305299758911133
    8. '(n' → logprob: -8.305299758911133
    9. '"' → logprob: -8.555299758911133
    10. ' ' → logprob: -9.180299758911133

Token 11: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004005622584372759
    2. '(n' → logprob: -5.754005432128906
    3. ' (' → logprob: -7.629005432128906
    4. '(range' → logprob: -9.379005432128906
    5. '(sum' → logprob: -9.504005432128906
    6. '((' → logprob: -10.004005432128906
    7. '(
' → logprob: -10.504005432128906
    8. '(f' → logprob: -10.504005432128906
    9. '(s' → logprob: -11.379005432128906
    10. '([' → logprob: -11.754005432128906

Token 12: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9585908055305481
    2. 'i' → logprob: -1.2085907459259033
    3. ' n' → logprob: -1.5835907459259033
    4. ' i' → logprob: -2.4585907459259033
    5. 'int' → logprob: -4.458590984344482
    6. '1' → logprob: -5.458590984344482
    7. 'x' → logprob: -5.583590984344482
    8. 'abs' → logprob: -6.333590984344482
    9. ' x' → logprob: -6.458590984344482
    10. ' int' → logprob: -7.208590984344482

Token 13: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01026866864413023
    2. 'for' → logprob: -4.760268688201904
    3. ' if' → logprob: -7.260268688201904
    4. ' i' → logprob: -8.135268211364746
    5. ' ' → logprob: -8.385268211364746
    6. '/i' → logprob: -9.010268211364746
    7. 'i' → logprob: -9.885268211364746
    8. ',' → logprob: -10.135268211364746
    9. '/' → logprob: -10.385268211364746
    10. '/n' → logprob: -10.510268211364746

Token 14: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3670186400413513
    2. 'n' → logprob: -2.117018699645996
    3. ' i' → logprob: -2.492018699645996
    4. ' x' → logprob: -3.117018699645996
    5. 'i' → logprob: -3.367018699645996
    6. 'x' → logprob: -3.992018699645996
    7. ' (' → logprob: -5.742018699645996
    8. '(n' → logprob: -7.367018699645996
    9. ' ' → logprob: -7.617018699645996
    10. ' not' → logprob: -7.867018699645996

Token 15: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.012990922667086124
    2. '(' → logprob: -4.637990951538086
    3. '(x' → logprob: -6.887990951538086
    4. '(word' → logprob: -7.012990951538086
    5. '(s' → logprob: -7.387990951538086
    6. '(i' → logprob: -8.512990951538086
    7. '(set' → logprob: -8.512990951538086
    8. '(token' → logprob: -9.762990951538086
    9. '(n' → logprob: -9.887990951538086
    10. '(list' → logprob: -9.887990951538086

Token 16: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03333005681633949
    2. '(i' → logprob: -3.908329963684082
    3. '(' → logprob: -4.783329963684082
    4. '(x' → logprob: -5.533329963684082
    5. '(k' → logprob: -9.033329963684082
    6. '(a' → logprob: -9.658329963684082
    7. '(s' → logprob: -9.908329963684082
    8. '(abs' → logprob: -10.158329963684082
    9. '(num' → logprob: -10.658329963684082
    10. '(j' → logprob: -11.408329963684082

Token 17: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06959712505340576
    2. '**' → logprob: -2.8195972442626953
    3. '%' → logprob: -5.319597244262695
    4. ' ))' → logprob: -6.819597244262695
    5. ')' → logprob: -7.694597244262695
    6. '+' → logprob: -8.444597244262695
    7. ' ' → logprob: -8.694597244262695
    8. '*' → logprob: -8.819597244262695
    9. '()))' → logprob: -9.319597244262695
    10. ')))' → logprob: -9.694597244262695

Token 18: ' &' (ID: 827)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10801917314529419
    2. ' ==' → logprob: -2.7330191135406494
    3. '%' → logprob: -3.4830191135406494
    4. ')' → logprob: -6.1080193519592285
    5. ')==' → logprob: -6.1080193519592285
    6. '<=' → logprob: -6.8580193519592285
    7. ' %' → logprob: -7.7330193519592285
    8. '()==' → logprob: -8.48301887512207
    9. ' ' → logprob: -9.10801887512207
    10. '=' → logprob: -9.23301887512207

Token 19: ' ' (ID: 220)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4041028618812561
    2. '&' → logprob: -1.7791028022766113
    3. ' ==' → logprob: -3.0291028022766113
    4. ' ' → logprob: -3.2791028022766113
    5. '%' → logprob: -3.4041028022766113
    6. '<=' → logprob: -4.279102802276611
    7. ' &' → logprob: -4.654102802276611
    8. '=' → logprob: -4.779102802276611
    9. 'x' → logprob: -5.779102802276611
    10. '>=' → logprob: -6.279102802276611

Token 20: '1' (ID: 16)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.4194856882095337
    2. '==' → logprob: -1.4194856882095337
    3. '%' → logprob: -3.294485569000244
    4. '=' → logprob: -3.794485569000244
    5. 'x' → logprob: -4.169485569000244
    6. '<=' → logprob: -4.544485569000244
    7. '|' → logprob: -5.919485569000244
    8. ' ' → logprob: -5.919485569000244
    9. 'and' → logprob: -6.794485569000244
    10. '>' → logprob: -6.794485569000244

Token 21: ' else' (ID: 1203)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.027198513969779015
    2. 'else' → logprob: -4.527198314666748
    3. ' else' → logprob: -5.152198314666748
    4. '%' → logprob: -5.277198314666748
    5. ' ==' → logprob: -5.902198314666748
    6. ')' → logprob: -7.152198314666748
    7. '=' → logprob: -7.652198314666748
    8. ' ' → logprob: -7.777198314666748
    9. '0' → logprob: -8.777198791503906
    10. '&' → logprob: -9.277198791503906

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0109596261754632
    2. '1' → logprob: -5.135959625244141
    3. ' ' → logprob: -6.260959625244141
    4. 'x' → logprob: -6.385959625244141
    5. '-' → logprob: -6.760959625244141
    6. '(x' → logprob: -9.88595962524414
    7. '(' → logprob: -10.13595962524414
    8. ' x' → logprob: -10.38595962524414
    9. 'len' → logprob: -10.51095962524414
    10. ' -' → logprob: -10.63595962524414

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00041935223271138966
    2. ' ' → logprob: -8.500419616699219
    3. '1' → logprob: -9.250419616699219
    4. 'x' → logprob: -9.375419616699219
    5. '-' → logprob: -10.875419616699219
    6. '(' → logprob: -12.500419616699219
    7. 'len' → logprob: -13.250419616699219
    8. '(x' → logprob: -13.250419616699219
    9. ' x' → logprob: -13.500419616699219
    10. 'int' → logprob: -13.750419616699219

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03841392695903778
    2. 'for' → logprob: -3.2884140014648438
    3. ' x' → logprob: -8.663414001464844
    4. ')' → logprob: -9.163414001464844
    5. ' ' → logprob: -9.788414001464844
    6. 'x' → logprob: -11.413414001464844
    7. ' in' → logprob: -11.538414001464844
    8. ' else' → logprob: -11.913414001464844
    9. ' f' → logprob: -13.288414001464844
    10. 'in' → logprob: -13.413414001464844

Token 25: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8288187384605408
    2. ' x' → logprob: -1.0788187980651855
    3. ' range' → logprob: -1.5788187980651855
    4. 'range' → logprob: -4.0788187980651855
    5. ' ' → logprob: -8.828818321228027
    6. ' str' → logprob: -9.828818321228027
    7. ' xrange' → logprob: -10.203818321228027
    8. 'str' → logprob: -11.203818321228027
    9. '(range' → logprob: -11.578818321228027
    10. '	range' → logprob: -12.203818321228027

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012690810486674309
    2. 'in' → logprob: -4.387691020965576
    3. 'range' → logprob: -9.637690544128418
    4. ' ' → logprob: -10.137690544128418
    5. ')' → logprob: -10.137690544128418
    6. 'n' → logprob: -12.262690544128418
    7. ' range' → logprob: -12.325190544128418
    8. ',' → logprob: -12.700190544128418
    9. '(n' → logprob: -12.700190544128418
    10. ' )' → logprob: -13.075190544128418

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07892349362373352
    2. ' range' → logprob: -2.578923463821411
    3. 'str' → logprob: -10.703923225402832
    4. 'n' → logprob: -12.828923225402832
    5. ' ' → logprob: -12.828923225402832
    6. ' str' → logprob: -13.078923225402832
    7. '	range' → logprob: -13.453923225402832
    8. '(range' → logprob: -13.703923225402832
    9. '   ' → logprob: -15.203923225402832
    10. ')' → logprob: -15.578923225402832

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0486474335193634
    2. '(n' → logprob: -3.048647403717041
    3. '(N' → logprob: -9.7986478805542
    4. '1' → logprob: -13.0486478805542
    5. ' (' → logprob: -13.4236478805542
    6. '((' → logprob: -16.048646926879883
    7. '(
' → logprob: -16.298646926879883
    8. 'n' → logprob: -16.423646926879883
    9. '```' → logprob: -16.548646926879883
    10. '(x' → logprob: -16.923646926879883

Token 29: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12777215242385864
    2. '1' → logprob: -2.127772092819214
    3. '(n' → logprob: -7.252772331237793
    4. '(' → logprob: -9.377772331237793
    5. ' n' → logprob: -11.002772331237793
    6. 'N' → logprob: -11.752772331237793
    7. ')n' → logprob: -11.752772331237793
    8. '0' → logprob: -12.127772331237793
    9. '10' → logprob: -12.502772331237793
    10. '	n' → logprob: -12.877772331237793

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008709711022675037
    2. '(' → logprob: -5.133709907531738
    3. ',n' → logprob: -6.508709907531738
    4. '(n' → logprob: -6.758709907531738
    5. '1' → logprob: -9.758709907531738
    6. ' ,' → logprob: -9.758709907531738
    7. 'n' → logprob: -12.133709907531738
    8. ',N' → logprob: -13.508709907531738
    9. '(N' → logprob: -13.758709907531738
    10. ',
' → logprob: -14.883709907531738

Token 31: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018446780450176448
    2. ' n' → logprob: -8.625184059143066
    3. '(n' → logprob: -12.750184059143066
    4. '	n' → logprob: -13.625184059143066
    5. 'N' → logprob: -14.250184059143066
    6. ')n' → logprob: -15.625184059143066
    7. '1' → logprob: -17.375185012817383
    8. ',n' → logprob: -18.000185012817383
    9. '_n' → logprob: -18.000185012817383
    10. '   ' → logprob: -18.000185012817383

Token 32: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009196776081807911
    2. ' +' → logprob: -7.000919818878174
    3. ')+' → logprob: -12.875919342041016
    4. '))' → logprob: -13.250919342041016
    5. ')' → logprob: -13.250919342041016
    6. '+)' → logprob: -14.625919342041016
    7. '+
' → logprob: -14.625919342041016
    8. ')))' → logprob: -14.750919342041016
    9. '+n' → logprob: -15.125919342041016
    10. ')])' → logprob: -16.375919342041016

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001239196863025427
    2. ' ' → logprob: -9.000123977661133
    3. '2' → logprob: -15.375123977661133
    4. '

' → logprob: -16.687623977661133
    5. '```' → logprob: -16.812623977661133
    6. '   ' → logprob: -16.875123977661133
    7. ')' → logprob: -17.437623977661133
    8. '  ' → logprob: -17.625123977661133
    9. '
' → logprob: -17.937623977661133
    10. 'N' → logprob: -18.125123977661133

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '2' → logprob: -15.875001907348633
    4. 'N' → logprob: -18.000001907348633
    5. '```' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.562501907348633
    7. '))' → logprob: -18.812501907348633
    8. ')' → logprob: -18.937501907348633
    9. '(' → logprob: -19.500001907348633
    10. '

' → logprob: -19.625001907348633

Token 35: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.008149031549692154
    2. ')' → logprob: -5.133149147033691
    3. ')]' → logprob: -6.133149147033691
    4. '])' → logprob: -10.383149147033691
    5. '))' → logprob: -12.508149147033691
    6. ' )' → logprob: -12.883149147033691
    7. ']))' → logprob: -13.258149147033691
    8. ')])
' → logprob: -13.383149147033691
    9. ')])

' → logprob: -13.383149147033691
    10. ')],' → logprob: -13.508149147033691

Token 36: 'result' (ID: 2521)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26630666851997375
    2. ')' → logprob: -1.7663066387176514
    3. '>' → logprob: -3.3913066387176514
    4. '+' → logprob: -3.8913066387176514
    5. '%' → logprob: -5.6413068771362305
    6. '[' → logprob: -6.7663068771362305
    7. '(n' → logprob: -7.2663068771362305
    8. ' ' → logprob: -7.3913068771362305
    9. '=' → logprob: -7.5163068771362305
    10. '0' → logprob: -8.14130687713623

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04591015726327896
    2. ' =' → logprob: -3.545910120010376
    3. '(' → logprob: -4.295910358428955
    4. '_' → logprob: -6.420910358428955
    5. ')' → logprob: -7.795910358428955
    6. 's' → logprob: -9.170909881591797
    7. '()' → logprob: -10.045909881591797
    8. '.' → logprob: -10.045909881591797
    9. ' ' → logprob: -10.420909881591797
    10. '<|end|>' → logprob: -10.420909881591797

Token 38: ' ' (ID: 220)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06196846812963486
    2. ' f' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.811968803405762
    4. '0' → logprob: -15.936968803405762
    5. 'str' → logprob: -16.061967849731445
    6. '1' → logprob: -16.811967849731445
    7. '```' → logprob: -17.186967849731445
    8. ' ' → logprob: -17.311967849731445
    9. '	f' → logprob: -17.436967849731445
    10. '   ' → logprob: -17.436967849731445

Token 39: '0' (ID: 15)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -8.895480277715251e-06
    2. ' f' → logprob: -11.750008583068848
    3. 'N' → logprob: -14.000008583068848
    4. '0' → logprob: -17.875009536743164
    5. '1' → logprob: -17.875009536743164
    6. ' ' → logprob: -18.250009536743164
    7. 'str' → logprob: -18.375009536743164
    8. '   ' → logprob: -18.375009536743164
    9. '```' → logprob: -18.375009536743164
    10. '10' → logprob: -18.625009536743164

Token 40: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5143771767616272
    2. ' for' → logprob: -1.0143771171569824
    3. '\n' → logprob: -4.389377117156982
    4. ' ' → logprob: -4.514377117156982
    5. '
' → logprob: -5.014377117156982
    6. ' 
' → logprob: -6.014377117156982
    7. '<|end|>' → logprob: -6.139377117156982
    8. '+' → logprob: -6.389377117156982
    9. '' → logprob: -7.014377117156982
    10. '\' → logprob: -7.764377117156982

Token 41: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19931374490261078
    2. ' for' → logprob: -1.949313759803772
    3. ' ' → logprob: -3.6993136405944824
    4. '+' → logprob: -5.324313640594482
    5. '<|end|>' → logprob: -5.449313640594482
    6. '\n' → logprob: -6.574313640594482
    7. '=' → logprob: -7.574313640594482
    8. ')' → logprob: -7.824313640594482
    9. ' 
' → logprob: -8.32431411743164
    10. '\' → logprob: -8.44931411743164

Token 42: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.13323798775672913
    2. 'N' → logprob: -2.1332380771636963
    3. ' n' → logprob: -5.758237838745117
    4. ' ' → logprob: -6.008237838745117
    5. ' f' → logprob: -8.133237838745117
    6. 'n' → logprob: -8.383237838745117
    7. '  ' → logprob: -9.508237838745117
    8. 'f' → logprob: -10.508237838745117
    9. ' len' → logprob: -11.008237838745117
    10. ' ' → logprob: -11.508237838745117

Token 43: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.478967547416687
    2. ' <=' → logprob: -1.853967547416687
    3. '>' → logprob: -2.3539676666259766
    4. ' >=' → logprob: -2.9789676666259766
    5. '%' → logprob: -3.6039676666259766
    6. '<=' → logprob: -4.103967666625977
    7. ' %' → logprob: -4.603967666625977
    8. ' <' → logprob: -4.853967666625977
    9. '>=' → logprob: -5.103967666625977
    10. ' ==' → logprob: -5.603967666625977

Token 44: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35843268036842346
    2. '0' → logprob: -1.733432650566101
    3. ' ' → logprob: -2.1084327697753906
    4. '9' → logprob: -6.108432769775391
    5. '1' → logprob: -8.10843276977539
    6. '100' → logprob: -8.35843276977539
    7. '10' → logprob: -8.73343276977539
    8. '99' → logprob: -9.48343276977539
    9. ' =' → logprob: -9.98343276977539
    10. '999' → logprob: -10.73343276977539

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017755765293259174
    2. ':
' → logprob: -9.000177383422852
    3. ' :' → logprob: -9.875177383422852
    4. '):' → logprob: -14.250177383422852
    5. ' and' → logprob: -14.500177383422852
    6. '   ' → logprob: -14.625177383422852
    7. ':

' → logprob: -14.875177383422852
    8. ',' → logprob: -15.875177383422852
    9. ':n' → logprob: -16.25017738342285
    10. ':return' → logprob: -16.25017738342285

Token 46: '   ' (ID: 271)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.34800225496292114
    2. 'result' → logprob: -1.3480021953582764
    3. '   ' → logprob: -3.9730021953582764
    4. ' 
' → logprob: -4.9730024337768555
    5. '	result' → logprob: -5.5980024337768555
    6. '    
' → logprob: -6.0980024337768555
    7. '
' → logprob: -7.3480024337768555
    8. '<|end|>' → logprob: -7.4730024337768555
    9. '```' → logprob: -8.348002433776855
    10. '[result' → logprob: -8.473002433776855

Token 47: ' for' (ID: 395)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20869717001914978
    2. ' result' → logprob: -1.9586971998214722
    3. ' for' → logprob: -4.083697319030762
    4. 'for' (adapté à ' for') → logprob: -4.333697319030762
    5. ' f' → logprob: -4.708697319030762
    6. 'f' → logprob: -4.958697319030762
    7. '   ' → logprob: -6.958697319030762
    8. 'range' → logprob: -8.833697319030762
    9. '    ' → logprob: -9.958697319030762
    10. '```' → logprob: -10.458697319030762

Token 48: ' number' (ID: 2086)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19457413256168365
    2. 'i' → logprob: -1.9445741176605225
    3. ' x' → logprob: -4.069574356079102
    4. 'x' → logprob: -4.569574356079102
    5. 'n' → logprob: -5.694574356079102
    6. ' n' → logprob: -6.069574356079102
    7. ' ' → logprob: -7.444574356079102
    8. ' num' → logprob: -10.569574356079102
    9. 'num' → logprob: -11.569574356079102
    10. ' number' → logprob: -11.694574356079102

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018363449722528458
    2. 'in' → logprob: -4.0183634757995605
    3. ' ' → logprob: -9.143362998962402
    4. 's' → logprob: -9.393362998962402
    5. '	in' → logprob: -12.643362998962402
    6. '   ' → logprob: -12.643362998962402
    7. '_in' → logprob: -13.018362998962402
    8. '  ' → logprob: -13.018362998962402
    9. '<|end|>' → logprob: -13.518362998962402
    10. '    ' → logprob: -13.643362998962402

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519504129886627
    2. 'range' → logprob: -1.5019503831863403
    3. '	range' → logprob: -11.37695026397705
    4. '(range' → logprob: -12.00195026397705
    5. ' ' → logprob: -12.87695026397705
    6. '   ' → logprob: -14.75195026397705
    7. '  ' → logprob: -15.50195026397705
    8. '[' → logprob: -15.62695026397705
    9. ' xrange' → logprob: -16.501951217651367
    10. '.range' → logprob: -16.626951217651367

Token 51: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9981420336989686e-05
    2. '(N' → logprob: -10.875020027160645
    3. ' (' → logprob: -14.250020027160645
    4. '1' → logprob: -16.000019073486328
    5. '(
' → logprob: -16.125019073486328
    6. '```' → logprob: -17.750019073486328
    7. '(n' → logprob: -18.125019073486328
    8. '((' → logprob: -18.375019073486328
    9. '(len' → logprob: -19.000019073486328
    10. '(-' → logprob: -19.375019073486328

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012642672285437584
    2. 'N' → logprob: -4.387642860412598
    3. '   ' → logprob: -9.137642860412598
    4. ' ' → logprob: -11.637642860412598
    5. '0' → logprob: -12.262642860412598
    6. ' N' → logprob: -12.637642860412598
    7. '(' → logprob: -12.887642860412598
    8. ')' → logprob: -13.887642860412598
    9. '2' → logprob: -13.887642860412598
    10. ',' → logprob: -14.012642860412598

Token 53: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039385363925248384
    2. ',N' → logprob: -8.125393867492676
    3. ' ,' → logprob: -9.250393867492676
    4. 'N' → logprob: -13.875393867492676
    5. '```' → logprob: -15.500393867492676
    6. ',
' → logprob: -15.500393867492676
    7. ',n' → logprob: -15.750393867492676
    8. ' N' → logprob: -16.87539291381836
    9. '(N' → logprob: -16.87539291381836
    10. '，' → logprob: -17.00039291381836

Token 54: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759534239768982
    2. '+' → logprob: -0.8259534239768982
    3. ' ' → logprob: -11.700953483581543
    4. ' ' → logprob: -13.825953483581543
    5. '1' → logprob: -13.950953483581543
    6. ')+' → logprob: -14.075953483581543
    7. ')' → logprob: -14.325953483581543
    8. ' +
' → logprob: -14.575953483581543
    9. '   ' → logprob: -14.700953483581543
    10. ',' → logprob: -14.950953483581543

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.778209353797138e-05
    2. ' ' → logprob: -9.625067710876465
    3. '```' → logprob: -14.500067710876465
    4. ')' → logprob: -14.750067710876465
    5. '2' → logprob: -14.875067710876465
    6. '-' → logprob: -16.31256866455078
    7. '   ' → logprob: -16.43756866455078
    8. '+' → logprob: -16.93756866455078
    9. '  ' → logprob: -17.18756866455078
    10. '۱' → logprob: -17.75006866455078

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028548052068799734
    2. ':' → logprob: -6.127854824066162
    3. ')' → logprob: -7.627854824066162
    4. '):
' → logprob: -9.002854347229004
    5. '   ' → logprob: -10.377854347229004
    6. ' ):' → logprob: -10.752854347229004
    7. '       ' → logprob: -13.502854347229004
    8. ',' → logprob: -13.627854347229004
    9. ' ' → logprob: -14.377854347229004
    10. ':)' → logprob: -14.377854347229004

Token 57: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6050118803977966
    2. '       ' → logprob: -0.9800118803977966
    3. ' 
' → logprob: -3.9800119400024414
    4. '<|end|>' → logprob: -3.9800119400024414
    5. '        
' → logprob: -4.355011940002441
    6. '        ' → logprob: -4.355011940002441
    7. '    ' → logprob: -5.105011940002441
    8. '   ' → logprob: -6.355011940002441
    9. ' if' → logprob: -6.605011940002441
    10. '         
' → logprob: -7.105011940002441

Token 58: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6507270336151123
    2. 'result' → logprob: -1.5257270336151123
    3. ' ' → logprob: -2.6507270336151123
    4. ' result' → logprob: -2.7757270336151123
    5. '            ' → logprob: -2.9007270336151123
    6. 'if' (adapté à ' if') → logprob: -3.9007270336151123
    7. '           ' → logprob: -4.150727272033691
    8. ' 
' → logprob: -4.400727272033691
    9. '        ' → logprob: -4.775727272033691
    10. ' ' → logprob: -5.900727272033691

Token 59: ' (' (ID: 350)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20346516370773315
    2. ' len' → logprob: -1.703465223312378
    3. '(len' → logprob: -7.328464984893799
    4. 'number' → logprob: -7.703464984893799
    5. 'f' → logprob: -8.453465461730957
    6. '   ' → logprob: -8.828465461730957
    7. '       ' → logprob: -8.953465461730957
    8. ' number' → logprob: -9.203465461730957
    9. ' f' → logprob: -9.203465461730957
    10. ' ' → logprob: -9.578465461730957

Token 60: 'lambda' (ID: 35280)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.15271863341331482
    2. ' len' → logprob: -2.0277185440063477
    3. 'number' → logprob: -4.902718544006348
    4. ' number' → logprob: -6.402718544006348
    5. '(len' → logprob: -7.652718544006348
    6. '           ' → logprob: -8.652718544006348
    7. '       ' → logprob: -10.027718544006348
    8. '   ' → logprob: -10.027718544006348
    9. 'f' → logprob: -10.152718544006348
    10. ')' → logprob: -10.777718544006348

Token 61: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.594114363193512
    2. 'x' → logprob: -0.969114363193512
    3. ' n' → logprob: -3.719114303588867
    4. 'n' → logprob: -3.844114303588867
    5. 'number' → logprob: -4.469114303588867
    6. ' number' → logprob: -4.719114303588867
    7. 'num' → logprob: -7.469114303588867
    8. 'len' → logprob: -7.969114303588867
    9. ' len' → logprob: -8.094114303588867
    10. ' num' → logprob: -8.719114303588867

Token 62: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02766929566860199
    2. ' :' → logprob: -4.277669429779053
    3. ':y' → logprob: -4.527669429779053
    4. ' y' → logprob: -6.902669429779053
    5. ':number' → logprob: -7.527669429779053
    6. 'y' → logprob: -7.652669429779053
    7. ':str' → logprob: -8.402668952941895
    8. ':n' → logprob: -9.527668952941895
    9. ':x' → logprob: -9.652668952941895
    10. ':num' → logprob: -10.027668952941895

Token 63: ' True' (ID: 6432)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.313806414604187
    2. ' len' → logprob: -1.438806414604187
    3. ' y' → logprob: -3.6888065338134766
    4. 'y' → logprob: -5.688806533813477
    5. '(len' → logprob: -6.313806533813477
    6. 'sum' → logprob: -8.438806533813477
    7. ' (' → logprob: -8.688806533813477
    8. '1' → logprob: -8.813806533813477
    9. ' ' → logprob: -8.938806533813477
    10. ' sum' → logprob: -9.063806533813477

Token 64: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012793216854333878
    2. 'if' → logprob: -5.012793064117432
    3. ' y' → logprob: -5.512793064117432
    4. ' ' → logprob: -7.137793064117432
    5. ')' → logprob: -7.637793064117432
    6. '(y' → logprob: -8.76279354095459
    7. 'y' → logprob: -9.26279354095459
    8. '   ' → logprob: -9.38779354095459
    9. ' and' → logprob: -9.38779354095459
    10. ':' → logprob: -9.51279354095459

Token 65: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.49158215522766113
    2. ' len' → logprob: -0.9915821552276611
    3. ' y' → logprob: -4.366581916809082
    4. '(len' → logprob: -6.116581916809082
    5. 'y' → logprob: -6.491581916809082
    6. ' (' → logprob: -8.491581916809082
    7. '   ' → logprob: -8.741581916809082
    8. '  ' → logprob: -9.116581916809082
    9. ' ' → logprob: -9.241581916809082
    10. 'f' → logprob: -9.991581916809082

Token 66: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.004647284280508757
    2. '(' → logprob: -5.379647254943848
    3. ' (' → logprob: -11.254647254943848
    4. '(y' → logprob: -11.629647254943848
    5. '(s' → logprob: -13.129647254943848
    6. 'str' → logprob: -13.629647254943848
    7. '(
' → logprob: -14.879647254943848
    8. '=str' → logprob: -15.129647254943848
    9. '('' → logprob: -15.379647254943848
    10. '(string' → logprob: -15.629647254943848

Token 67: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.016234243288636208
    2. '(number' → logprob: -4.766234397888184
    3. '(' → logprob: -4.891234397888184
    4. '(x' → logprob: -10.391234397888184
    5. ')' → logprob: -11.141234397888184
    6. 'y' → logprob: -11.391234397888184
    7. ' (' → logprob: -12.141234397888184
    8. '((' → logprob: -12.891234397888184
    9. ')y' → logprob: -12.891234397888184
    10. ' y' → logprob: -12.891234397888184

Token 68: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002094826428219676
    2. ' ))' → logprob: -7.502094745635986
    3. '(y' → logprob: -8.127095222473145
    4. ')' → logprob: -8.252095222473145
    5. ' ' → logprob: -8.377095222473145
    6. '%' → logprob: -8.502095222473145
    7. '(number' → logprob: -9.127095222473145
    8. '   ' → logprob: -9.502095222473145
    9. 'y' → logprob: -9.877095222473145
    10. 'number' → logprob: -10.002095222473145

Token 69: '%' (ID: 4)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01607624813914299
    2. ')%' → logprob: -4.64107608795166
    3. ')&' → logprob: -5.76607608795166
    4. ' )' → logprob: -6.14107608795166
    5. '%' → logprob: -7.26607608795166
    6. '&' → logprob: -9.01607608795166
    7. ' &' → logprob: -9.39107608795166
    8. ' %' → logprob: -11.01607608795166
    9. ' ' → logprob: -11.14107608795166
    10. '%)' → logprob: -11.51607608795166

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00600629486143589
    2. ' ' → logprob: -5.131006240844727
    3. '1' → logprob: -10.131006240844727
    4. '<|end|>' → logprob: -10.756006240844727
    5. '==' → logprob: -12.006006240844727
    6. ')' → logprob: -12.006006240844727
    7. '```' → logprob: -13.631006240844727
    8. '>' → logprob: -14.881006240844727
    9. '<|end|>' → logprob: -14.943506240844727
    10. ' ==' → logprob: -15.068506240844727

Token 71: ' else' (ID: 1203)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.046660423278808594
    2. ' ==' → logprob: -4.171660423278809
    3. ')' → logprob: -4.546660423278809
    4. '!=' → logprob: -5.046660423278809
    5. '1' → logprob: -5.171660423278809
    6. ')==' → logprob: -5.546660423278809
    7. '<|end|>' → logprob: -5.921660423278809
    8. ' !=' → logprob: -8.296660423278809
    9. ']==' → logprob: -9.421660423278809
    10. '()==' → logprob: -9.421660423278809

Token 72: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.07970039546489716
    2. 'False' → logprob: -2.579700469970703
    3. ' ' → logprob: -7.704700469970703
    4. ' True' → logprob: -8.454700469970703
    5. ' not' → logprob: -9.454700469970703
    6. '0' → logprob: -11.204700469970703
    7. 'True' → logprob: -11.329700469970703
    8. ' F' → logprob: -11.579700469970703
    9. 'F' → logprob: -12.204700469970703
    10. ' ' → logprob: -12.204700469970703

Token 73: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.0009830316994339228
    2. ')' → logprob: -7.500983238220215
    3. ' )(' → logprob: -8.750983238220215
    4. '(number' → logprob: -9.125983238220215
    5. '   ' → logprob: -9.625983238220215
    6. '):' → logprob: -10.875983238220215
    7. '))(' → logprob: -11.125983238220215
    8. '(y' → logprob: -11.375983238220215
    9. ' ' → logprob: -11.875983238220215
    10. ')y' → logprob: -11.875983238220215

Token 74: 'number' (ID: 8096)
  Prédit: 'number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.006728279870003462
    2. ' number' → logprob: -5.006728172302246
    3. ')' → logprob: -12.506728172302246
    4. '   ' → logprob: -12.631728172302246
    5. '	number' → logprob: -13.756728172302246
    6. ' ' → logprob: -14.006728172302246
    7. '[number' → logprob: -14.006728172302246
    8. 'num' → logprob: -14.131728172302246
    9. 'n' → logprob: -14.631728172302246
    10. '(number' → logprob: -14.631728172302246

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2820771038532257
    2. ')' → logprob: -1.4070770740509033
    3. ' ):' → logprob: -7.532077312469482
    4. ':' → logprob: -8.532076835632324
    5. ' )' → logprob: -9.157076835632324
    6. '):
' → logprob: -10.032076835632324
    7. ')==' → logprob: -11.407076835632324
    8. ' ' → logprob: -11.907076835632324
    9. ')):' → logprob: -12.282076835632324
    10. '   ' → logprob: -12.407076835632324

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10774606466293335
    2. '       ' → logprob: -3.357746124267578
    3. ' result' → logprob: -3.732746124267578
    4. 'result' → logprob: -3.732746124267578
    5. '
' → logprob: -4.357746124267578
    6. '	       ' → logprob: -6.107746124267578
    7. '<|end|>' → logprob: -6.232746124267578
    8. '               ' → logprob: -7.232746124267578
    9. '```' → logprob: -7.857746124267578
    10. '<|end|>' → logprob: -8.357746124267578

Token 77: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6614199280738831
    2. 'result' (adapté à ' result') → logprob: -0.7864199280738831
    3. '       ' → logprob: -3.6614198684692383
    4. '               ' → logprob: -6.286419868469238
    5. '           ' → logprob: -7.286419868469238
    6. '   ' → logprob: -9.286419868469238
    7. '	result' → logprob: -10.536419868469238
    8. ' ' → logprob: -10.661419868469238
    9. '```' → logprob: -12.411419868469238
    10. ' ' → logprob: -12.786419868469238

Token 78: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07894377410411835
    2. '+=' → logprob: -2.5789437294006348
    3. '+' → logprob: -10.078944206237793
    4. ']+=' → logprob: -12.953944206237793
    5. ' =' → logprob: -13.328944206237793
    6. '<|end|>' → logprob: -13.453944206237793
    7. '+='' → logprob: -13.453944206237793
    8. '=' → logprob: -13.578944206237793
    9. '    ' → logprob: -13.703944206237793
    10. '+="' → logprob: -14.328944206237793

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023257825523614883
    2. 'number' → logprob: -3.7732577323913574
    3. ' number' → logprob: -12.148258209228516
    4. ' ' → logprob: -12.148258209228516
    5. '   ' → logprob: -14.523258209228516
    6. '```' → logprob: -15.398258209228516
    7. '[number' → logprob: -15.773258209228516
    8. 'num' → logprob: -16.398258209228516
    9. '(number' → logprob: -16.460758209228516
    10. '0' → logprob: -16.835758209228516

Token 80: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022255489602684975
    2. '
' → logprob: -6.377225399017334
    3. '<|end|>' → logprob: -8.127225875854492
    4. ' print' → logprob: -8.627225875854492
    5. '```' → logprob: -11.127225875854492
    6. '   ' → logprob: -11.627225875854492
    7. '\n' → logprob: -11.877225875854492
    8. ')' → logprob: -12.002225875854492
    9. '(print' → logprob: -12.752225875854492
    10. '<|end|>' → logprob: -13.502225875854492

Token 81: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006620417116209865
    2. ' print' → logprob: -8.000661849975586
    3. '
' → logprob: -8.500661849975586
    4. '<|end|>' → logprob: -9.375661849975586
    5. ')' → logprob: -10.625661849975586
    6. '```' → logprob: -12.000661849975586
    7. '   ' → logprob: -13.000661849975586
    8. '\n' → logprob: -13.750661849975586
    9. '(print' → logprob: -13.875661849975586
    10. ' 
' → logprob: -14.125661849975586

Token 82: '(f' (ID: 1526)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.20143817365169525
    2. '(' → logprob: -1.7014381885528564
    3. '('' → logprob: -11.076437950134277
    4. 'result' → logprob: -12.701437950134277
    5. ' (' → logprob: -13.326437950134277
    6. '("("' → logprob: -13.576437950134277
    7. '(f' → logprob: -14.076437950134277
    8. '(results' → logprob: -14.326437950134277
    9. '(res' → logprob: -14.451437950134277
    10. '((' → logprob: -14.576437950134277

Token 83: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009242075495421886
    2. '(' → logprob: -4.759242057800293
    3. ')' → logprob: -7.884242057800293
    4. 'N' → logprob: -8.634242057800293
    5. '(number' → logprob: -10.384242057800293
    6. ')(' → logprob: -11.509242057800293
    7. 'result' → logprob: -11.634242057800293
    8. '(result' → logprob: -11.759242057800293
    9. '(Number' → logprob: -12.259242057800293
    10. '(n' → logprob: -12.384242057800293

Token 84: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20142152905464172
    2. ')' → logprob: -1.7014214992523193
    3. ')))' → logprob: -12.951421737670898
    4. '))
' → logprob: -13.076421737670898
    5. ')
' → logprob: -13.576421737670898
    6. ' )' → logprob: -14.326421737670898
    7. '),' → logprob: -14.326421737670898
    8. ' ))' → logprob: -14.701421737670898
    9. ')>' → logprob: -15.701421737670898
    10. ')}' → logprob: -16.0764217376709

Token 85: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. '))' → logprob: -12.000011444091797
    3. ' )' → logprob: -12.500011444091797
    4. ')
' → logprob: -14.500011444091797
    5. '`)' → logprob: -14.750011444091797
    6. ')`' → logprob: -15.125011444091797
    7. '')' → logprob: -15.250011444091797
    8. '```' → logprob: -16.875011444091797
    9. '),' → logprob: -17.000011444091797
    10. '")' → logprob: -17.000011444091797

Token 86: ' N' (ID: 478)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.121218241751194
    2. ' N' → logprob: -2.496218204498291
    3. 'result' → logprob: -3.746218204498291
    4. 'N' → logprob: -5.871218204498291
    5. ' ' → logprob: -5.996218204498291
    6. ' not' → logprob: -6.121218204498291
    7. ' True' → logprob: -8.37121868133545
    8. '  ' → logprob: -8.74621868133545
    9. ' len' → logprob: -9.87121868133545
    10. '(result' → logprob: -10.62121868133545

Token 87: '%' (ID: 4)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.76833176612854
    2. '>=' → logprob: -1.76833176612854
    3. ' >' → logprob: -2.26833176612854
    4. ' >=' → logprob: -2.39333176612854
    5. ')' → logprob: -2.64333176612854
    6. '==' → logprob: -3.39333176612854
    7. '%' → logprob: -4.393331527709961
    8. ' ' → logprob: -4.393331527709961
    9. '<|end|>' → logprob: -4.518331527709961
    10. ' else' → logprob: -4.893331527709961

Token 88: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01671476848423481
    2. ' ' → logprob: -4.141714572906494
    3. '10' → logprob: -7.641714572906494
    4. '1' → logprob: -9.891715049743652
    5. ')' → logprob: -10.141715049743652
    6. '!' → logprob: -11.266715049743652
    7. '!=' → logprob: -11.266715049743652
    8. '3' → logprob: -11.516715049743652
    9. '```' → logprob: -11.641715049743652
    10. '>' → logprob: -11.641715049743652

Token 89: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3629682958126068
    2. ' else' → logprob: -1.8629683256149292
    3. ' ==' → logprob: -2.8629682064056396
    4. '!=' → logprob: -3.1129682064056396
    5. ')' → logprob: -3.9879682064056396
    6. 'else' → logprob: -4.237968444824219
    7. ' !=' → logprob: -4.362968444824219
    8. ' )' → logprob: -6.612968444824219
    9. ' ' → logprob: -8.112968444824219
    10. '>' → logprob: -9.362968444824219

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11977913975715637
    2. '1' → logprob: -2.494779109954834
    3. ' ' → logprob: -3.494779109954834
    4. 'else' → logprob: -13.244779586791992
    5. ' N' → logprob: -13.369779586791992
    6. ' else' → logprob: -13.557279586791992
    7. '```' → logprob: -13.807279586791992
    8. 'N' → logprob: -14.057279586791992
    9. '01' → logprob: -14.307279586791992
    10. 'result' → logprob: -14.494779586791992

Token 91: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20142309367656708
    2. 'else' → logprob: -1.7014230489730835
    3. ' ' → logprob: -12.576422691345215
    4. ')' → logprob: -13.076422691345215
    5. '```' → logprob: -13.701422691345215
    6. ' ' → logprob: -13.826422691345215
    7. '	else' → logprob: -13.826422691345215
    8. ' )' → logprob: -14.701422691345215
    9. '   ' → logprob: -15.451422691345215
    10. '    ' → logprob: -16.07642364501953

Token 92: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6436333060264587
    2. 'result' → logprob: -0.7686333060264587
    3. ' f' → logprob: -4.8936333656311035
    4. 'f' → logprob: -5.7686333656311035
    5. ' ' → logprob: -9.268632888793945
    6. '(result' → logprob: -10.018632888793945
    7. '0' → logprob: -10.143632888793945
    8. ' N' → logprob: -10.143632888793945
    9. ')' → logprob: -10.643632888793945
    10. ' ' → logprob: -11.018632888793945

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.250006675720215
    3. '))' → logprob: -14.125006675720215
    4. ')
' → logprob: -14.125006675720215
    5. ')`' → logprob: -16.3750057220459
    6. '`)' → logprob: -16.7500057220459
    7. '）' → logprob: -17.7500057220459
    8. '')' → logprob: -18.0000057220459
    9. ')

' → logprob: -18.1250057220459
    10. '```' → logprob: -18.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 91
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 38.46%
Précision adaptée (1ère position): 38.46%
Précision (top 10): 82.42%
================================================================================
