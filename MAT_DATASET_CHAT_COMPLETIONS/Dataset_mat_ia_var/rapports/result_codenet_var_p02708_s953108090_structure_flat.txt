================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
mod = 10**9 + 7
N_K = input().split()
N = int(N_K[0])
K = int(N_K[1])
ans = 0
i = K
while i <= N+1:
    max_value = (N * i - 2 * (((i-1)*i)//2)) % mod
    ans += max_value + 1
    i += 1
print(ans % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'mod' (ID: 4847)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7673812508583069
    2. 'math' → logprob: -1.892381191253662
    3. ' ' → logprob: -2.767381191253662
    4. '__' → logprob: -2.892381191253662
    5. '1' → logprob: -3.017381191253662
    6. '100' → logprob: -3.392381191253662
    7. '42' → logprob: -3.517381191253662
    8. '123' → logprob: -3.767381191253662
    9. 'pow' → logprob: -4.517381191253662
    10. 'torch' → logprob: -4.517381191253662

Token 4: '**' (ID: 410)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08230014145374298
    2. '%' → logprob: -3.3323001861572266
    3. '**' → logprob: -3.8323001861572266
    4. '+' → logprob: -4.832300186157227
    5. '\' → logprob: -5.207300186157227
    6. '```' → logprob: -5.707300186157227
    7. '\n' → logprob: -6.332300186157227
    8. '#' → logprob: -7.082300186157227
    9. '=' → logprob: -7.207300186157227
    10. '`' → logprob: -7.707300186157227

Token 5: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.7432603272027336e-06
    2. '```' → logprob: -14.000001907348633
    3. '09' → logprob: -14.250001907348633
    4. ' ' → logprob: -15.125001907348633
    5. '``' → logprob: -17.250001907348633
    6. '6' → logprob: -17.875001907348633
    7. '**' → logprob: -18.875001907348633
    8. '`' → logprob: -19.750001907348633
    9. '8' → logprob: -20.000001907348633
    10. '^' → logprob: -20.375001907348633

Token 6: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00014060820103622973
    2. ' +' → logprob: -8.875140190124512
    3. '```' → logprob: -15.000140190124512
    4. '+
' → logprob: -15.875140190124512
    5. '7' → logprob: -16.250141143798828
    6. '+

' → logprob: -16.625141143798828
    7. '＋' → logprob: -17.500141143798828
    8. '6' → logprob: -18.500141143798828
    9. '`' → logprob: -18.625141143798828
    10. '+</' → logprob: -18.875141143798828

Token 7: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.375003814697266
    4. '1' → logprob: -19.500003814697266
    5. '+' → logprob: -19.625003814697266
    6. '9' → logprob: -19.875003814697266
    7. '``' → logprob: -20.250003814697266
    8. ' ' → logprob: -20.500003814697266
    9. '   ' → logprob: -20.750003814697266
    10. '  ' → logprob: -21.000003814697266

Token 8: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '+' → logprob: -17.625
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -20.875
    6. '``' → logprob: -21.0
    7. '  ' → logprob: -21.5
    8. '07' → logprob: -21.5
    9. '9' → logprob: -21.75
    10. '37' → logprob: -21.875

Token 9: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0859532356262207
    2. '#' → logprob: -1.5859532356262207
    3. ',' → logprob: -1.9609532356262207
    4. ')' → logprob: -2.8359532356262207
    5. '\n' → logprob: -2.8359532356262207
    6. '
' → logprob: -3.0859532356262207
    7. '\' → logprob: -3.3359532356262207
    8. '**' → logprob: -3.7109532356262207
    9. '```' → logprob: -4.085953235626221
    10. '=' → logprob: -4.085953235626221

Token 10: 'N' (ID: 45)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4692954123020172
    2. '\' → logprob: -2.0942955017089844
    3. '*' → logprob: -2.5942955017089844
    4. '
' → logprob: -2.7192955017089844
    5. '```' → logprob: -3.3442955017089844
    6. '#' → logprob: -3.5942955017089844
    7. '**' → logprob: -4.594295501708984
    8. '`' → logprob: -5.344295501708984
    9. ',' → logprob: -5.469295501708984
    10. '

' → logprob: -5.594295501708984

Token 11: '_K' (ID: 20555)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5156347751617432
    2. ' ' → logprob: -1.7656347751617432
    3. '_' → logprob: -1.7656347751617432
    4. '[' → logprob: -2.015634775161743
    5. '**' → logprob: -2.515634775161743
    6. ')' → logprob: -2.765634775161743
    7. '*' → logprob: -3.015634775161743
    8. '=' → logprob: -3.765634775161743
    9. '+' → logprob: -4.265634536743164
    10. '<|end|>' → logprob: -4.265634536743164

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4331150949001312
    2. '[' → logprob: -1.1831151247024536
    3. ' =' → logprob: -3.558115005493164
    4. '_' → logprob: -5.183115005493164
    5. ',' → logprob: -6.058115005493164
    6. '[]' → logprob: -6.558115005493164
    7. '```' → logprob: -6.808115005493164
    8. '[
' → logprob: -6.933115005493164
    9. '`' → logprob: -7.308115005493164
    10. ''' → logprob: -7.683115005493164

Token 13: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7385609745979309
    2. '10' → logprob: -1.7385609149932861
    3. 'input' → logprob: -1.9885609149932861
    4. 'int' → logprob: -3.488560914993286
    5. ' (' → logprob: -3.488560914993286
    6. 'list' → logprob: -3.863560914993286
    7. 'map' → logprob: -3.863560914993286
    8. ' input' → logprob: -3.988560914993286
    9. ' list' → logprob: -4.488561153411865
    10. '0' → logprob: -4.738561153411865

Token 14: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005409730598330498
    2. '[' → logprob: -6.3804097175598145
    3. ''' → logprob: -6.6304097175598145
    4. '('' → logprob: -6.6304097175598145
    5. '("("' → logprob: -8.130410194396973
    6. '(
' → logprob: -8.630410194396973
    7. '"' → logprob: -9.005410194396973
    8. '()' → logprob: -9.130410194396973
    9. '```' → logprob: -9.130410194396973
    10. ')' → logprob: -9.255410194396973

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.228561349213123e-05
    2. 'strip' → logprob: -10.000052452087402
    3. 'rstrip' → logprob: -12.125052452087402
    4. ' split' → logprob: -14.250052452087402
    5. 'spl' → logprob: -14.500052452087402
    6. 'rs' → logprob: -15.625052452087402
    7. '(split' → logprob: -18.375051498413086
    8. 's' → logprob: -19.125051498413086
    9. 'sp' → logprob: -19.625051498413086
    10. '```' → logprob: -19.875051498413086

Token 16: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07001779228448868
    2. '('' → logprob: -2.8200178146362305
    3. '()' → logprob: -5.3200178146362305
    4. '("("' → logprob: -6.0700178146362305
    5. ''' → logprob: -7.6950178146362305
    6. '`' → logprob: -8.94501781463623
    7. '(`' → logprob: -9.82001781463623
    8. '```' → logprob: -9.94501781463623
    9. '(
' → logprob: -10.69501781463623
    10. '`()' → logprob: -10.94501781463623

Token 17: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5014622211456299
    2. 'n' → logprob: -1.0014622211456299
    3. 'a' → logprob: -3.87646222114563
    4. 'A' → logprob: -6.001461982727051
    5. ' N' → logprob: -6.876461982727051
    6. 'i' → logprob: -6.876461982727051
    7. ' n' → logprob: -7.251461982727051
    8. 'num' → logprob: -8.00146198272705
    9. '```' → logprob: -8.62646198272705
    10. '`' → logprob: -8.87646198272705

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3085843622684479
    2. '[' → logprob: -1.4335843324661255
    3. '_K' → logprob: -3.683584451675415
    4. '[K' → logprob: -7.683584213256836
    5. '[_' → logprob: -8.308584213256836
    6. '_k' → logprob: -8.683584213256836
    7. '[]' → logprob: -8.808584213256836
    8. 'K' → logprob: -9.058584213256836
    9. '```' → logprob: -9.058584213256836
    10. '_N' → logprob: -9.433584213256836

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04858816787600517
    2. ' int' → logprob: -3.048588275909424
    3. '[int' → logprob: -15.048587799072266
    4. 'N' → logprob: -16.173587799072266
    5. ' N' → logprob: -16.173587799072266
    6. '(int' → logprob: -16.298587799072266
    7. '=int' → logprob: -16.798587799072266
    8. ' ' → logprob: -16.923587799072266
    9. '```' → logprob: -17.298587799072266
    10. '10' → logprob: -18.173587799072266

Token 20: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006827848497778177
    2. '(N' → logprob: -5.0068278312683105
    3. '('' → logprob: -10.006828308105469
    4. ' (' → logprob: -11.006828308105469
    5. '()' → logprob: -11.756828308105469
    6. '(
' → logprob: -11.756828308105469
    7. '<|end|>' → logprob: -11.881828308105469
    8. ')' → logprob: -12.756828308105469
    9. ''' → logprob: -12.756828308105469
    10. 'user' → logprob: -12.881828308105469

Token 21: '_K' (ID: 20555)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5935635566711426
    2. '_K' → logprob: -0.9685635566711426
    3. ')' → logprob: -2.7185635566711426
    4. '[K' → logprob: -7.718563556671143
    5. 'K' → logprob: -7.843563556671143
    6. '[_' → logprob: -7.968563556671143
    7. '[
' → logprob: -8.218563079833984
    8. ')[' → logprob: -9.593563079833984
    9. '```' → logprob: -9.593563079833984
    10. ' )' → logprob: -9.593563079833984

Token 22: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ')' → logprob: -13.625001907348633
    3. ' [' → logprob: -14.250001907348633
    4. '[
' → logprob: -16.125001907348633
    5. '[N' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '```' → logprob: -18.250001907348633
    8. ')[' → logprob: -18.500001907348633
    9. ' )' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.750001907348633

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '1' → logprob: -15.375001907348633
    4. ')' → logprob: -16.625001907348633
    5. '[' → logprob: -17.625001907348633
    6. ']' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. '   ' → logprob: -18.187501907348633
    9. '`' → logprob: -18.625001907348633
    10. '۰' → logprob: -18.750001907348633

Token 24: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007613136898726225
    2. '])' → logprob: -5.007613182067871
    3. ']' → logprob: -7.257613182067871
    4. ')]' → logprob: -10.132613182067871
    5. ')])' → logprob: -10.132613182067871
    6. ')
' → logprob: -10.257613182067871
    7. ' )' → logprob: -10.257613182067871
    8. '）' → logprob: -11.382613182067871
    9. '`)' → logprob: -12.132613182067871
    10. ''])' → logprob: -12.507613182067871

Token 25: 'K' (ID: 42)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09628753364086151
    2. ' K' → logprob: -2.721287488937378
    3. '<|end|>' → logprob: -4.471287727355957
    4. 'K' → logprob: -4.971287727355957
    5. ' 
' → logprob: -6.221287727355957
    6. ' N' → logprob: -6.221287727355957
    7. ')' → logprob: -6.346287727355957
    8. ' )' → logprob: -7.596287727355957
    9. 'N' → logprob: -7.971287727355957
    10. '  
' → logprob: -8.721287727355957

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08979324996471405
    2. '=' → logprob: -2.4647932052612305
    3. ')' → logprob: -7.5897932052612305
    4. ' ' → logprob: -8.46479320526123
    5. '[' → logprob: -9.96479320526123
    6. '  ' → logprob: -10.58979320526123
    7. ',' → logprob: -10.96479320526123
    8. '<|end|>' → logprob: -11.83979320526123
    9. '.' → logprob: -11.96479320526123
    10. ' ==' → logprob: -12.33979320526123

Token 27: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3868735730648041
    2. ' int' → logprob: -1.1368736028671265
    3. ' ' → logprob: -13.511873245239258
    4. '0' → logprob: -14.636873245239258
    5. '(int' → logprob: -15.636873245239258
    6. '=int' → logprob: -15.636873245239258
    7. ' N' → logprob: -15.886873245239258
    8. '1' → logprob: -16.511873245239258
    9. '[int' → logprob: -16.886873245239258
    10. '	int' → logprob: -17.011873245239258

Token 28: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2619151771068573
    2. '(N' → logprob: -1.5119152069091797
    3. '(K' → logprob: -4.63691520690918
    4. '('' → logprob: -10.01191520690918
    5. ''' → logprob: -10.26191520690918
    6. '("("' → logprob: -10.26191520690918
    7. '`' → logprob: -10.76191520690918
    8. ' (' → logprob: -10.88691520690918
    9. '((' → logprob: -11.01191520690918
    10. '()' → logprob: -11.26191520690918

Token 29: '_K' (ID: 20555)
  Prédit: '_K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_K' → logprob: -0.04824255406856537
    2. '[' → logprob: -3.1732425689697266
    3. ')' → logprob: -5.423242568969727
    4. '1' → logprob: -8.423242568969727
    5. '-' → logprob: -9.048242568969727
    6. '_' → logprob: -9.423242568969727
    7. ')[' → logprob: -9.423242568969727
    8. ' ' → logprob: -9.923242568969727
    9. '[_' → logprob: -9.923242568969727
    10. '+' → logprob: -10.173242568969727

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.05499910004437e-05
    2. '1' → logprob: -9.875090599060059
    3. ' [' → logprob: -11.250090599060059
    4. ')' → logprob: -11.750090599060059
    5. '])' → logprob: -12.125090599060059
    6. '-' → logprob: -12.250090599060059
    7. ')[' → logprob: -13.000090599060059
    8. '```' → logprob: -13.625090599060059
    9. '[
' → logprob: -13.750090599060059
    10. '][' → logprob: -14.250090599060059

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. '0' → logprob: -11.875016212463379
    3. ' ' → logprob: -12.250016212463379
    4. '])' → logprob: -12.500016212463379
    5. ']' → logprob: -15.500016212463379
    6. '   ' → logprob: -16.000015258789062
    7. '```' → logprob: -16.125015258789062
    8. '2' → logprob: -17.000015258789062
    9. '-' → logprob: -17.062515258789062
    10. ')' → logprob: -17.187515258789062

Token 32: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7133641196996905e-05
    2. '])' → logprob: -11.50002670288086
    3. '))' → logprob: -11.87502670288086
    4. '）' → logprob: -12.37502670288086
    5. '`)' → logprob: -13.00002670288086
    6. '')' → logprob: -14.37502670288086
    7. ')
' → logprob: -14.50002670288086
    8. ''])' → logprob: -15.00002670288086
    9. '})' → logprob: -15.00002670288086
    10. ' )' → logprob: -15.00002670288086

Token 33: 'ans' (ID: 616)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21376429498195648
    2. '\n' → logprob: -2.963764190673828
    3. 'result' → logprob: -3.463764190673828
    4. 'dp' → logprob: -3.713764190673828
    5. 'a' → logprob: -4.088764190673828
    6. '' → logprob: -4.213764190673828
    7. '\' → logprob: -4.463764190673828
    8. '
' → logprob: -5.088764190673828
    9. 'd' → logprob: -5.463764190673828
    10. ' 
' → logprob: -5.463764190673828

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234190225601196
    2. '=' → logprob: -0.8984190225601196
    3. '_' → logprob: -9.523419380187988
    4. ' ' → logprob: -9.898419380187988
    5. ' +=' → logprob: -10.023419380187988
    6. '%' → logprob: -10.648419380187988
    7. '[' → logprob: -10.898419380187988
    8. '*' → logprob: -11.148419380187988
    9. ' *=' → logprob: -11.148419380187988
    10. ')' → logprob: -11.523419380187988

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4940526485443115
    2. '0' → logprob: -1.6190526485443115
    3. ' ' → logprob: -1.7440526485443115
    4. 'pow' → logprob: -4.244052886962891
    5. ' pow' → logprob: -6.869052886962891
    6. ' N' → logprob: -7.869052886962891
    7. ' (' → logprob: -7.994052886962891
    8. '(' → logprob: -8.24405288696289
    9. 'N' → logprob: -8.99405288696289
    10. ' K' → logprob: -9.11905288696289

Token 36: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7152606844902039
    2. '0' → logprob: -1.2152607440948486
    3. 'pow' → logprob: -1.5902607440948486
    4. 'N' → logprob: -5.0902605056762695
    5. 'K' → logprob: -6.8402605056762695
    6. '(' → logprob: -7.4652605056762695
    7. 'max' → logprob: -7.8402605056762695
    8. 'mod' → logprob: -7.8402605056762695
    9. '(pow' → logprob: -7.8402605056762695
    10. 'sum' → logprob: -7.8402605056762695

Token 37: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7306508421897888
    2. '\' → logprob: -1.9806509017944336
    3. ' ' → logprob: -1.9806509017944336
    4. 'for' → logprob: -2.4806509017944336
    5. ' 
' → logprob: -2.6056509017944336
    6. '
' → logprob: -2.9806509017944336
    7. ' for' → logprob: -4.355650901794434
    8. '' → logprob: -4.980650901794434
    9. '#' → logprob: -5.605650901794434
    10. 'i' → logprob: -6.105650901794434

Token 38: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6705653071403503
    2. ' 
' → logprob: -2.295565366744995
    3. '\n' → logprob: -2.420565366744995
    4. ' ' → logprob: -2.420565366744995
    5. '
' → logprob: -2.670565366744995
    6. '\' → logprob: -3.170565366744995
    7. ' for' → logprob: -3.795565366744995
    8. 'i' → logprob: -3.795565366744995
    9. 'f' → logprob: -4.420565128326416
    10. '' → logprob: -4.795565128326416

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4088718295097351
    2. '=' → logprob: -1.2838718891143799
    3. 'n' → logprob: -3.03387188911438
    4. ' ' → logprob: -5.033871650695801
    5. ' +=' → logprob: -6.408871650695801
    6. '+' → logprob: -6.908871650695801
    7. ' n' → logprob: -7.408871650695801
    8. 's' → logprob: -8.2838716506958
    9. 'f' → logprob: -8.6588716506958
    10. 'nt' → logprob: -9.7838716506958

Token 40: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19382068514823914
    2. '1' → logprob: -1.9438207149505615
    3. '0' → logprob: -3.4438207149505615
    4. ' K' → logprob: -7.068820476531982
    5. 'K' → logprob: -8.56882095336914
    6. '2' → logprob: -10.56882095336914
    7. ' N' → logprob: -11.31882095336914
    8. 'N' → logprob: -12.44382095336914
    9. '10' → logprob: -13.06882095336914
    10. '3' → logprob: -14.00632095336914

Token 41: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20857369899749756
    2. '-' → logprob: -2.583573818206787
    3. ' ' → logprob: -2.833573818206787
    4. ' +' → logprob: -4.458573818206787
    5. ':' → logprob: -4.458573818206787
    6. ')' → logprob: -4.708573818206787
    7. ' -' → logprob: -5.833573818206787
    8. '*' → logprob: -5.833573818206787
    9. '**' → logprob: -6.083573818206787
    10. '#' → logprob: -6.458573818206787

Token 42: 'while' (ID: 7032)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0763513445854187
    2. '-' → logprob: -3.7013514041900635
    3. ' +' → logprob: -3.7013514041900635
    4. ' while' → logprob: -4.576351165771484
    5. 'while' → logprob: -4.951351165771484
    6. ' ' → logprob: -5.701351165771484
    7. ' -' → logprob: -6.576351165771484
    8. '*' → logprob: -8.076351165771484
    9. '+
' → logprob: -8.076351165771484
    10. '
' → logprob: -8.201351165771484

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16772787272930145
    2. ' ' → logprob: -1.9177278280258179
    3. 'i' → logprob: -5.167727947235107
    4. ' <=' → logprob: -6.667727947235107
    5. '  ' → logprob: -8.79272747039795
    6. ' K' → logprob: -9.04272747039795
    7. ' <' → logprob: -9.16772747039795
    8. ' N' → logprob: -10.04272747039795
    9. ' ' → logprob: -11.41772747039795
    10. ' (' → logprob: -11.66772747039795

Token 44: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014333550818264484
    2. ' >=' → logprob: -5.014333724975586
    3. '<=' → logprob: -5.139333724975586
    4. ' <' → logprob: -6.514333724975586
    5. ' >' → logprob: -9.014333724975586
    6. '>=' → logprob: -9.514333724975586
    7. '<' → logprob: -10.639333724975586
    8. '>' → logprob: -11.514333724975586
    9. ' ' → logprob: -12.764333724975586
    10. ' ≤' → logprob: -12.889333724975586

Token 45: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14274097979068756
    2. ' N' → logprob: -2.0177409648895264
    3. ' ' → logprob: -9.767741203308105
    4. '10' → logprob: -12.892741203308105
    5. '2' → logprob: -13.892741203308105
    6. '100' → logprob: -14.392741203308105
    7. '9' → logprob: -14.705241203308105
    8. '(' → logprob: -14.892741203308105
    9. ' (' → logprob: -15.330241203308105
    10. '6' → logprob: -15.330241203308105

Token 46: '+' (ID: 10)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021807955636177212
    2. ':
' → logprob: -8.750218391418457
    3. ' :' → logprob: -10.250218391418457
    4. '+:' → logprob: -12.000218391418457
    5. ':**' → logprob: -12.000218391418457
    6. '**' → logprob: -13.125218391418457
    7. '*' → logprob: -13.250218391418457
    8. '*:' → logprob: -13.375218391418457
    9. '):' → logprob: -13.500218391418457
    10. '+' → logprob: -13.750218391418457

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018500378355383873
    2. '0' → logprob: -4.768500328063965
    3. 'K' → logprob: -4.768500328063965
    4. 'i' → logprob: -7.393500328063965
    5. ' ' → logprob: -8.018500328063965
    6. '2' → logprob: -9.518500328063965
    7. '10' → logprob: -9.518500328063965
    8. ' K' → logprob: -9.643500328063965
    9. '5' → logprob: -10.393500328063965
    10. ' i' → logprob: -10.643500328063965

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009785055881366134
    2. ':
' → logprob: -7.125978469848633
    3. ' :' → logprob: -8.750978469848633
    4. '):' → logprob: -12.750978469848633
    5. ':**' → logprob: -13.125978469848633
    6. ' :
' → logprob: -13.125978469848633
    7. ':
' → logprob: -13.750978469848633
    8. '**' → logprob: -13.875978469848633
    9. '```' → logprob: -13.875978469848633
    10. ':

' → logprob: -14.125978469848633

Token 49: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009514996781945229
    2. ':
' → logprob: -5.384514808654785
    3. ' :' → logprob: -6.634514808654785
    4. '   ' → logprob: -6.884514808654785
    5. ' ans' → logprob: -7.009514808654785
    6. ' ' → logprob: -7.884514808654785
    7. '):' → logprob: -8.009514808654785
    8. '	ans' → logprob: -8.509514808654785
    9. 'ans' → logprob: -9.134514808654785
    10. ' :
' → logprob: -9.259514808654785

Token 50: ' max' (ID: 2999)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.04617984592914581
    2. 'ans' → logprob: -3.79617977142334
    3. '   ' → logprob: -4.42117977142334
    4. ' i' → logprob: -5.54617977142334
    5. '    
' → logprob: -6.29617977142334
    6. '(ans' → logprob: -6.79617977142334
    7. ' 
' → logprob: -6.79617977142334
    8. '	ans' → logprob: -6.92117977142334
    9. '    ' → logprob: -8.17117977142334
    10. '```' → logprob: -8.17117977142334

Token 51: '_value' (ID: 6734)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.4388847053050995
    2. '_value' → logprob: -2.188884735107422
    3. '_' → logprob: -2.563884735107422
    4. '_i' → logprob: -3.063884735107422
    5. '_div' → logprob: -3.813884735107422
    6. '_j' → logprob: -4.313884735107422
    7. '_m' → logprob: -4.313884735107422
    8. '_num' → logprob: -4.688884735107422
    9. 'i' → logprob: -5.188884735107422
    10. '_a' → logprob: -5.438884735107422

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146167278289795
    2. '=' → logprob: -1.701461672782898
    3. '   ' → logprob: -11.326461791992188
    4. ' ' → logprob: -11.701461791992188
    5. '=i' → logprob: -12.451461791992188
    6. '-' → logprob: -12.576461791992188
    7. ' ' → logprob: -12.826461791992188
    8. '=int' → logprob: -12.951461791992188
    9. '_' → logprob: -13.201461791992188
    10. '	' → logprob: -13.201461791992188

Token 53: ' (' (ID: 350)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.47061076760292053
    2. 'N' → logprob: -1.5956107378005981
    3. ' (' → logprob: -2.0956108570098877
    4. ' ' → logprob: -4.095610618591309
    5. 'pow' → logprob: -4.220610618591309
    6. ' pow' → logprob: -5.595610618591309
    7. '(N' → logprob: -5.595610618591309
    8. '(' → logprob: -5.720610618591309
    9. ' i' → logprob: -6.220610618591309
    10. 'i' → logprob: -6.220610618591309

Token 54: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.17003850638866425
    2. ' N' → logprob: -2.5450384616851807
    3. ' (' → logprob: -3.7950384616851807
    4. 'pow' → logprob: -3.9200384616851807
    5. '(N' → logprob: -4.29503870010376
    6. 'i' → logprob: -4.92003870010376
    7. '(i' → logprob: -5.79503870010376
    8. '(' → logprob: -6.17003870010376
    9. ' ' → logprob: -6.29503870010376
    10. 'K' → logprob: -6.54503870010376

Token 55: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7258589267730713
    2. '-' → logprob: -1.9758589267730713
    3. ' //' → logprob: -1.9758589267730713
    4. ' -' → logprob: -2.2258589267730713
    5. '//' → logprob: -2.6008589267730713
    6. ' +' → logprob: -3.2258589267730713
    7. '-i' → logprob: -4.475858688354492
    8. ')' → logprob: -5.975858688354492
    9. ' ' → logprob: -7.163358688354492
    10. '+i' → logprob: -7.725858688354492

Token 56: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7501261234283447
    2. ' (' → logprob: -1.6251261234283447
    3. ' i' → logprob: -2.1251261234283447
    4. '2' → logprob: -2.7501261234283447
    5. '(i' → logprob: -2.8751261234283447
    6. '//' → logprob: -4.250125885009766
    7. ' ' → logprob: -4.375125885009766
    8. '(N' → logprob: -4.500125885009766
    9. 'pow' → logprob: -4.875125885009766
    10. 'N' → logprob: -4.875125885009766

Token 57: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16589611768722534
    2. ' -' → logprob: -3.29089617729187
    3. ')//' → logprob: -3.29089617729187
    4. ' )' → logprob: -3.66589617729187
    5. '-' → logprob: -4.040895938873291
    6. '//' → logprob: -4.165895938873291
    7. ' //' → logprob: -4.665895938873291
    8. '+' → logprob: -5.415895938873291
    9. ' +' → logprob: -6.040895938873291
    10. '-i' → logprob: -6.165895938873291

Token 58: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5909259915351868
    2. 'K' → logprob: -1.840925931930542
    3. ' i' → logprob: -1.965925931930542
    4. '(i' → logprob: -2.965925931930542
    5. ' K' → logprob: -2.965925931930542
    6. ' (' → logprob: -3.715925931930542
    7. '(K' → logprob: -4.965926170349121
    8. '((' → logprob: -5.715926170349121
    9. '(' → logprob: -5.840926170349121
    10. '1' → logprob: -6.090926170349121

Token 59: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.4777502715587616
    2. 'i' → logprob: -1.102750301361084
    3. '(i' → logprob: -3.977750301361084
    4. ' K' → logprob: -4.602750301361084
    5. '(K' → logprob: -4.977750301361084
    6. ' i' → logprob: -5.102750301361084
    7. '1' → logprob: -5.977750301361084
    8. ' (' → logprob: -6.727750301361084
    9. '((' → logprob: -6.852750301361084
    10. '(' → logprob: -7.227750301361084

Token 60: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.4385522603988647
    2. '*K' → logprob: -1.4385522603988647
    3. '*' → logprob: -1.8135522603988647
    4. ')' → logprob: -1.8135522603988647
    5. '*i' → logprob: -1.9385522603988647
    6. '*(' → logprob: -3.9385523796081543
    7. ' +' → logprob: -4.438552379608154
    8. 'K' → logprob: -5.313552379608154
    9. ' )' → logprob: -5.438552379608154
    10. '+' → logprob: -5.438552379608154

Token 61: ' (((' (ID: 25584)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.22876405715942383
    2. 'i' → logprob: -2.103764057159424
    3. '(i' → logprob: -3.353764057159424
    4. ')' → logprob: -4.103764057159424
    5. '(K' → logprob: -4.103764057159424
    6. '*K' → logprob: -5.728764057159424
    7. 'N' → logprob: -5.853764057159424
    8. '*' → logprob: -6.353764057159424
    9. 'ans' → logprob: -6.603764057159424
    10. '*(' → logprob: -7.103764057159424

Token 62: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.031879570335149765
    2. ' i' → logprob: -3.7818796634674072
    3. 'N' → logprob: -5.031879425048828
    4. '(i' → logprob: -7.156879425048828
    5. ' N' → logprob: -7.781879425048828
    6. ' (' → logprob: -7.906879425048828
    7. '((' → logprob: -9.156879425048828
    8. '(N' → logprob: -9.156879425048828
    9. '(' → logprob: -10.281879425048828
    10. 'K' → logprob: -10.406879425048828

Token 63: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42272451519966125
    2. ' -' → logprob: -1.2977244853973389
    3. ' *' → logprob: -3.672724485397339
    4. '*(' → logprob: -3.922724485397339
    5. ')' → logprob: -4.297724723815918
    6. '*' → logprob: -4.797724723815918
    7. ')*(' → logprob: -6.297724723815918
    8. ' ' → logprob: -6.672724723815918
    9. '+' → logprob: -8.047724723815918
    10. ')*' → logprob: -8.422724723815918

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012001411989331245
    2. 'K' → logprob: -4.5120015144348145
    3. ' ' → logprob: -7.7620015144348145
    4. 'i' → logprob: -8.762001037597656
    5. '2' → logprob: -8.762001037597656
    6. ' K' → logprob: -9.637001037597656
    7. '(K' → logprob: -10.324501037597656
    8. 'N' → logprob: -10.762001037597656
    9. '-' → logprob: -11.074501037597656
    10. ')' → logprob: -11.324501037597656

Token 65: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18897965550422668
    2. '*' → logprob: -3.0639796257019043
    3. ')*(' → logprob: -3.3139796257019043
    4. ' )' → logprob: -3.4389796257019043
    5. ' *' → logprob: -3.6889796257019043
    6. ')*' → logprob: -4.063979625701904
    7. '*(' → logprob: -5.688979625701904
    8. '+' → logprob: -5.938979625701904
    9. ' -' → logprob: -6.188979625701904
    10. ' ' → logprob: -6.688979625701904

Token 66: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2293880432844162
    2. ' i' → logprob: -1.6043879985809326
    3. ' (' → logprob: -6.354388236999512
    4. ')i' → logprob: -7.354388236999512
    5. '(i' → logprob: -7.479388236999512
    6. ' ' → logprob: -7.604388236999512
    7. '(' → logprob: -9.104388236999512
    8. ')' → logprob: -9.354388236999512
    9. '((' → logprob: -9.729388236999512
    10. '  ' → logprob: -9.729388236999512

Token 67: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6397079825401306
    2. ')//' → logprob: -0.7647079825401306
    3. ' )' → logprob: -5.139708042144775
    4. '//' → logprob: -7.014708042144775
    5. ')>>' → logprob: -9.389707565307617
    6. ' //' → logprob: -9.764707565307617
    7. ' ' → logprob: -9.889707565307617
    8. '   ' → logprob: -10.139707565307617
    9. '`)' → logprob: -11.014707565307617
    10. '  ' → logprob: -11.639707565307617

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.114600834436715e-05
    2. ' ' → logprob: -9.375091552734375
    3. '6' → logprob: -13.625091552734375
    4. ')' → logprob: -14.125091552734375
    5. '4' → logprob: -14.125091552734375
    6. '   ' → logprob: -14.250091552734375
    7. '3' → logprob: -14.375091552734375
    8. '  ' → logprob: -14.500091552734375
    9. '```' → logprob: -14.750091552734375
    10. '1' → logprob: -15.000091552734375

Token 69: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047354646027088165
    2. '))' → logprob: -3.2973546981811523
    3. ' )' → logprob: -5.297354698181152
    4. ')%' → logprob: -5.922354698181152
    5. ')))' → logprob: -7.797354698181152
    6. '+' → logprob: -8.172354698181152
    7. ' ))' → logprob: -8.297354698181152
    8. ' ' → logprob: -8.672354698181152
    9. ')*' → logprob: -8.797354698181152
    10. ' +' → logprob: -9.547354698181152

Token 70: ' %' (ID: 1851)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0892702341079712
    2. '<|end|>' → logprob: -1.3392702341079712
    3. ' +' → logprob: -2.3392701148986816
    4. '%' → logprob: -2.3392701148986816
    5. ' ' → logprob: -2.7142701148986816
    6. '   ' → logprob: -2.9642701148986816
    7. ')' → logprob: -3.7142701148986816
    8. '
' → logprob: -3.8392701148986816
    9. ' %' → logprob: -3.8392701148986816
    10. '<|end|>' → logprob: -4.464270114898682

Token 71: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5765978097915649
    2. ' mod' → logprob: -0.8265978097915649
    3. '(mod' → logprob: -7.326597690582275
    4. ' (' → logprob: -16.076597213745117
    5. '	mod' → logprob: -16.076597213745117
    6. ' ' → logprob: -16.451597213745117
    7. '10' → logprob: -16.951597213745117
    8. '(' → logprob: -17.576597213745117
    9. '100' → logprob: -18.451597213745117
    10. ' мод' → logprob: -18.451597213745117

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2553861439228058
    2. '
' → logprob: -1.8803861141204834
    3. '<|end|>' → logprob: -3.6303861141204834
    4. 'ans' → logprob: -5.0053863525390625
    5. '    
' → logprob: -5.1303863525390625
    6. ')' → logprob: -5.1303863525390625
    7. ' ' → logprob: -5.6303863525390625
    8. '*' → logprob: -5.6303863525390625
    9. '*i' → logprob: -6.0053863525390625
    10. '+' → logprob: -6.1303863525390625

Token 74: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0026802949141710997
    2. ' ans' → logprob: -6.75268030166626
    3. '   ' → logprob: -7.00268030166626
    4. '(ans' → logprob: -8.127679824829102
    5. 'if' → logprob: -9.127679824829102
    6. '	ans' → logprob: -9.377679824829102
    7. 'i' → logprob: -10.002679824829102
    8. 'print' → logprob: -11.377679824829102
    9. '    
' → logprob: -11.377679824829102
    10. '
' → logprob: -11.627679824829102

Token 75: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.032025858759880066
    2. '+=' → logprob: -3.5320258140563965
    3. ' =' → logprob: -6.1570258140563965
    4. '=' → logprob: -9.532026290893555
    5. ' ^=' → logprob: -9.907026290893555
    6. '+' → logprob: -11.407026290893555
    7. ' ' → logprob: -11.782026290893555
    8. ' -=' → logprob: -12.532026290893555
    9. '+=(' → logprob: -13.157026290893555
    10. ' |=' → logprob: -13.282026290893555

Token 76: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14317962527275085
    2. ' max' → logprob: -2.0181796550750732
    3. '(max' → logprob: -7.643179416656494
    4. ' (' → logprob: -11.518179893493652
    5. 'mod' → logprob: -12.143179893493652
    6. ' ' → logprob: -12.893179893493652
    7. ' i' → logprob: -13.393179893493652
    8. '(' → logprob: -13.643179893493652
    9. 'i' → logprob: -13.643179893493652
    10. '(i' → logprob: -14.518179893493652

Token 77: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -13.000003814697266
    3. ' _' → logprob: -13.375003814697266
    4. '_val' → logprob: -16.125003814697266
    5. 'value' → logprob: -16.375003814697266
    6. '_Value' → logprob: -17.375003814697266
    7. '_VALUE' → logprob: -17.625003814697266
    8. '_values' → logprob: -18.125003814697266
    9. '_answer' → logprob: -18.125003814697266
    10. '```' → logprob: -19.250003814697266

Token 78: ' +' (ID: 659)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.2911670207977295
    2. ' %' → logprob: -1.4161670207977295
    3. '
' → logprob: -1.5411670207977295
    4. '<|end|>' → logprob: -2.0411670207977295
    5. '   ' → logprob: -3.0411670207977295
    6. ' 
' → logprob: -3.4161670207977295
    7. ' ' → logprob: -4.291167259216309
    8. '  
' → logprob: -4.666167259216309
    9. ' *' → logprob: -4.791167259216309
    10. '    
' → logprob: -4.791167259216309

Token 79: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23619379103183746
    2. ' ' → logprob: -2.611193895339966
    3. ' (' → logprob: -2.736193895339966
    4. '(' → logprob: -4.486193656921387
    5. 'mod' → logprob: -4.486193656921387
    6. 'max' → logprob: -4.611193656921387
    7. '(max' → logprob: -4.736193656921387
    8. ' max' → logprob: -5.236193656921387
    9. '((' → logprob: -5.486193656921387
    10. ' mod' → logprob: -5.861193656921387

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09698992967605591
    2. '(' → logprob: -4.34699010848999
    3. 'mod' → logprob: -4.34699010848999
    4. '(max' → logprob: -4.34699010848999
    5. '(K' → logprob: -4.59699010848999
    6. '((' → logprob: -4.84699010848999
    7. '(i' → logprob: -4.84699010848999
    8. 'max' → logprob: -5.22199010848999
    9. '(mod' → logprob: -5.22199010848999
    10. 'i' → logprob: -5.47199010848999

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2272597998380661
    2. '\n' → logprob: -2.602259874343872
    3. '   ' → logprob: -3.102259874343872
    4. ' 
' → logprob: -3.852259874343872
    5. '  
' → logprob: -4.102259635925293
    6. '    
' → logprob: -4.227259635925293
    7. ' i' → logprob: -4.852259635925293
    8. '\' → logprob: -5.227259635925293
    9. '*i' → logprob: -5.227259635925293
    10. '<|end|>' → logprob: -5.227259635925293

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062019553035497665
    2. '
' → logprob: -3.6870195865631104
    3. ' i' → logprob: -4.437019348144531
    4. '\n' → logprob: -4.687019348144531
    5. '    
' → logprob: -5.562019348144531
    6. '\' → logprob: -5.812019348144531
    7. ' 
' → logprob: -6.562019348144531
    8. '*i' → logprob: -7.062019348144531
    9. '  
' → logprob: -7.187019348144531
    10. 'i' → logprob: -7.187019348144531

Token 83: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.46553099155426025
    2. 'i' (adapté à ' i') → logprob: -1.4655309915542603
    3. '   ' → logprob: -1.9655309915542603
    4. '	i' → logprob: -8.465531349182129
    5. '\' → logprob: -8.590531349182129
    6. 'ans' → logprob: -8.715531349182129
    7. ' ans' → logprob: -8.715531349182129
    8. '```' → logprob: -9.465531349182129
    9. ' ' → logprob: -9.590531349182129
    10. '\n' → logprob: -10.215531349182129

Token 84: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.22587473690509796
    2. ' +=' → logprob: -1.6008747816085815
    3. '+' → logprob: -7.850874900817871
    4. '=' → logprob: -10.975874900817871
    5. '```' → logprob: -10.975874900817871
    6. ' ' → logprob: -11.350874900817871
    7. '++' → logprob: -11.350874900817871
    8. '<|end|>' → logprob: -12.225874900817871
    9. '+="' → logprob: -12.600874900817871
    10. '+='' → logprob: -13.100874900817871

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -15.000036239624023
    4. '   ' → logprob: -17.062536239624023
    5. '3' → logprob: -17.687536239624023
    6. '6' → logprob: -17.687536239624023
    7. '```' → logprob: -17.812536239624023
    8. '+' → logprob: -17.937536239624023
    9. '7' → logprob: -18.125036239624023
    10. '１' → logprob: -18.187536239624023

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '2' → logprob: -15.125005722045898
    4. '```' → logprob: -17.5000057220459
    5. '   ' → logprob: -17.6250057220459
    6. '3' → logprob: -17.6250057220459
    7. '１' → logprob: -17.8750057220459
    8. '6' → logprob: -18.2500057220459
    9. '+' → logprob: -18.2500057220459
    10. '7' → logprob: -18.4375057220459

Token 87: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024139003828167915
    2. '%' → logprob: -4.899138927459717
    3. '<|end|>' → logprob: -4.899138927459717
    4. '```' → logprob: -6.274138927459717
    5. '\n' → logprob: -6.524138927459717
    6. '   ' → logprob: -6.899138927459717
    7. 'print' → logprob: -7.024138927459717
    8. ')' → logprob: -7.024138927459717
    9. ' ans' → logprob: -7.649138927459717
    10. ' 
' → logprob: -7.774138927459717

Token 88: 'print' (ID: 1598)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4382011294364929
    2. '
' → logprob: -1.9382011890411377
    3. '%' → logprob: -2.6882011890411377
    4. 'print' → logprob: -2.8132011890411377
    5. ' ans' → logprob: -2.9382011890411377
    6. '<|end|>' → logprob: -4.813200950622559
    7. '```' → logprob: -5.063200950622559
    8. '	ans' → logprob: -5.813200950622559
    9. ' 
' → logprob: -6.188200950622559
    10. '(ans' → logprob: -6.188200950622559

Token 89: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.20143185555934906
    2. '(' → logprob: -1.7014318704605103
    3. ' (' → logprob: -11.951432228088379
    4. '()' → logprob: -12.201432228088379
    5. 'ans' → logprob: -13.201432228088379
    6. '('' → logprob: -13.451432228088379
    7. '(answer' → logprob: -13.451432228088379
    8. '(
' → logprob: -14.201432228088379
    9. '("("' → logprob: -15.201432228088379
    10. '((' → logprob: -15.326432228088379

Token 90: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0044226436875760555
    2. '%' → logprob: -5.629422664642334
    3. ' %' → logprob: -7.504422664642334
    4. ' )' → logprob: -8.504422187805176
    5. ')%' → logprob: -9.629422187805176
    6. ')`' → logprob: -13.754422187805176
    7. '%)' → logprob: -14.379422187805176
    8. '+' → logprob: -15.379422187805176
    9. '))' → logprob: -15.379422187805176
    10. ')
' → logprob: -15.504422187805176

Token 91: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.25197523832321167
    2. ' mod' → logprob: -1.5019752979278564
    3. '(mod' → logprob: -10.001975059509277
    4. '10' → logprob: -14.126975059509277
    5. '	mod' → logprob: -16.126976013183594
    6. ' ' → logprob: -17.626976013183594
    7. ')' → logprob: -18.251976013183594
    8. ' мод' → logprob: -18.876976013183594
    9. '```' → logprob: -19.251976013183594
    10. '100' → logprob: -19.251976013183594

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -14.87500286102295
    4. ')
' → logprob: -15.87500286102295
    5. ')`' → logprob: -16.000001907348633
    6. '`)' → logprob: -17.500001907348633
    7. '）' → logprob: -18.250001907348633
    8. '')' → logprob: -18.375001907348633
    9. ')**' → logprob: -18.625001907348633
    10. '```' → logprob: -18.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 74
Précision stricte (1ère position): 38.89%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 82.22%
================================================================================
