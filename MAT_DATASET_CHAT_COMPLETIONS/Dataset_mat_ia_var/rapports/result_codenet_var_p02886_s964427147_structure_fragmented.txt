================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def lire_entier():
    return int(input())

def lire_liste():
    return list(map(int, input().split()))

def produit_deux_elements(x, y):
    return x * y

def somme_produits_de_deux_listes_parties(liste, i):
    return somme_individuelle(liste, i, i+1)

def somme_individuelle(liste, i, debut_j):
    s = 0
    for j in range(debut_j, len(liste)):
        s += produit_deux_elements(liste[i], liste[j])
    return s

def somme_totale(liste):
    total = 0
    for i in range(len(liste)):
        total += somme_produits_de_deux_listes_parties(liste, i)
    return total

def afficher_resultat(resultat):
    print(resultat)

def main():
    N = lire_entier()
    d = lire_liste()
    a = somme_totale(d)
    afficher_resultat(a)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' lire' (ID: 46082)
  → Token d'amorce (pas de prédiction)

Token 2: '_ent' (ID: 66249)
  → Token d'amorce (pas de prédiction)

Token 3: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0035555274225771427
    2. '_' → logprob: -5.8785552978515625
    3. '(' → logprob: -8.628555297851562
    4. 'iers' → logprob: -8.878555297851562
    5. '()' → logprob: -9.378555297851562
    6. 'ree' → logprob: -9.378555297851562
    7. 'er' → logprob: -9.878555297851562
    8. 'r' → logprob: -9.878555297851562
    9. 'iere' → logprob: -9.878555297851562
    10. 'e' → logprob: -10.878555297851562

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023383046500384808
    2. '_' → logprob: -6.252338409423828
    3. '```' → logprob: -8.627338409423828
    4. '():' → logprob: -8.877338409423828
    5. ' (' → logprob: -10.502338409423828
    6. ':' → logprob: -11.377338409423828
    7. '(_' → logprob: -12.127338409423828
    8. '("("' → logprob: -12.127338409423828
    9. '[' → logprob: -12.377338409423828
    10. '()' → logprob: -12.502338409423828

Token 5: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7052956223487854
    2. '(' → logprob: -1.2052955627441406
    3. '():' → logprob: -3.0802955627441406
    4. '   ' → logprob: -3.4552955627441406
    5. ':' → logprob: -3.4552955627441406
    6. ''' → logprob: -3.8302955627441406
    7. '\' → logprob: -4.080295562744141
    8. '``' → logprob: -4.705295562744141
    9. '    
' → logprob: -5.205295562744141
    10. '()' → logprob: -5.205295562744141

Token 6: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9950383901596069
    2. 'return' (adapté à ' return') → logprob: -0.9950383901596069
    3. 'n' → logprob: -2.4950385093688965
    4. ' ' → logprob: -2.8700385093688965
    5. 'try' → logprob: -3.3700385093688965
    6. 'x' → logprob: -4.1200385093688965
    7. 'r' → logprob: -4.4950385093688965
    8. ' return' → logprob: -4.4950385093688965
    9. '```' → logprob: -4.4950385093688965
    10. 'i' → logprob: -4.6200385093688965

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09161575883626938
    2. ' ' → logprob: -2.716615676879883
    3. 'int' → logprob: -4.341615676879883
    4. ' input' → logprob: -5.466615676879883
    5. 'input' → logprob: -6.716615676879883
    6. '0' → logprob: -6.966615676879883
    7. ' ' → logprob: -7.341615676879883
    8. '  ' → logprob: -7.841615676879883
    9. '(int' → logprob: -8.091615676879883
    10. ' randint' → logprob: -9.091615676879883

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007200572872534394
    2. '(input' → logprob: -7.875720024108887
    3. '('' → logprob: -8.875720024108887
    4. ' (' → logprob: -9.875720024108887
    5. '()' → logprob: -10.500720024108887
    6. ''' → logprob: -10.625720024108887
    7. '```' → logprob: -10.875720024108887
    8. '("("' → logprob: -11.250720024108887
    9. ' ' → logprob: -11.625720024108887
    10. 'input' → logprob: -11.750720024108887

Token 9: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022113965824246407
    2. ')' → logprob: -7.127211570739746
    3. '('' → logprob: -7.377211570739746
    4. '("("' → logprob: -7.627211570739746
    5. '(""))' → logprob: -9.377211570739746
    6. '(
' → logprob: -10.127211570739746
    7. ' (' → logprob: -10.502211570739746
    8. ''' → logprob: -10.502211570739746
    9. '()' → logprob: -10.877211570739746
    10. '())' → logprob: -11.002211570739746

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18112100660800934
    2. '(
' → logprob: -2.9311211109161377
    3. '()' → logprob: -3.9311211109161377
    4. '\n' → logprob: -3.9311211109161377
    5. '
' → logprob: -4.056120872497559
    6. ':' → logprob: -4.681120872497559
    7. ')' → logprob: -4.806120872497559
    8. '<|end|>' → logprob: -4.931120872497559
    9. '#' → logprob: -5.056120872497559
    10. '```' → logprob: -5.681120872497559

Token 11: ' lire' (ID: 46082)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.9437305927276611
    2. ' saisir' → logprob: -1.9437305927276611
    3. ' lire' → logprob: -2.068730592727661
    4. ' somme' → logprob: -2.568730592727661
    5. 's' → logprob: -3.068730592727661
    6. ' ajouter' → logprob: -3.318730592727661
    7. ' calcul' → logprob: -3.443730592727661
    8. ' ' → logprob: -3.943730592727661
    9. '_' → logprob: -4.068730354309082
    10. ' ' → logprob: -4.193730354309082

Token 12: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009894612012431026
    2. '(' → logprob: -7.6259894371032715
    3. '_ent' → logprob: -8.87598991394043
    4. '_s' → logprob: -9.12598991394043
    5. '_sat' → logprob: -10.62598991394043
    6. '_a' → logprob: -11.00098991394043
    7. '_l' → logprob: -11.00098991394043
    8. ' _' → logprob: -11.75098991394043
    9. '_b' → logprob: -11.87598991394043
    10. '()' → logprob: -11.87598991394043

Token 13: 'iste' (ID: 4872)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.17634303867816925
    2. 'ine' → logprob: -2.8013429641723633
    3. 'ire' → logprob: -3.5513429641723633
    4. '_ent' → logprob: -4.051342964172363
    5. 'ent' → logprob: -4.426342964172363
    6. 'ong' → logprob: -5.051342964172363
    7. '_' → logprob: -5.051342964172363
    8. 'iste' → logprob: -5.176342964172363
    9. 'e' → logprob: -5.801342964172363
    10. 'ist' → logprob: -6.051342964172363

Token 14: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39458680152893066
    2. '_' → logprob: -1.1445868015289307
    3. '('_' → logprob: -6.019586563110352
    4. '("_' → logprob: -6.894586563110352
    5. '_(' → logprob: -7.269586563110352
    6. '()' → logprob: -7.894586563110352
    7. '```' → logprob: -8.019586563110352
    8. '(_)' → logprob: -8.269586563110352
    9. 'def' → logprob: -8.519586563110352
    10. 's' → logprob: -8.769586563110352

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5062705278396606
    2. '[]' → logprob: -1.0062705278396606
    3. ' []' → logprob: -4.631270408630371
    4. '[' → logprob: -4.631270408630371
    5. '    ' → logprob: -5.131270408630371
    6. ' return' → logprob: -6.256270408630371
    7. '(' → logprob: -6.506270408630371
    8. '()' → logprob: -6.881270408630371
    9. ' ' → logprob: -7.256270408630371
    10. 'return' → logprob: -7.506270408630371

Token 16: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.187913179397583
    2. 'return' (adapté à ' return') → logprob: -1.312913179397583
    3. ' return' → logprob: -1.312913179397583
    4. '[]' → logprob: -2.937913179397583
    5. ' []' → logprob: -3.437913179397583
    6. '[' → logprob: -4.187912940979004
    7. ' ' → logprob: -4.187912940979004
    8. 'l' → logprob: -4.187912940979004
    9. '    ' → logprob: -5.437912940979004
    10. ' l' → logprob: -5.562912940979004

Token 17: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.08445040881633759
    2. ' [' → logprob: -3.2094504833221436
    3. 'list' → logprob: -3.4594504833221436
    4. '[list' → logprob: -5.2094502449035645
    5. '[' → logprob: -6.0844502449035645
    6. ' []' → logprob: -6.8344502449035645
    7. '[]' → logprob: -8.459450721740723
    8. '[int' → logprob: -9.584450721740723
    9. '[input' → logprob: -10.959450721740723
    10. ' ' → logprob: -11.334450721740723

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3184031844139099
    2. '(map' → logprob: -1.3184032440185547
    3. '(int' → logprob: -5.318403244018555
    4. '(input' → logprob: -9.568403244018555
    5. '()' → logprob: -9.943403244018555
    6. '(range' → logprob: -10.068403244018555
    7. '(eval' → logprob: -10.443403244018555
    8. '(s' → logprob: -11.068403244018555
    9. '(filter' → logprob: -12.443403244018555
    10. '(
' → logprob: -12.693403244018555

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.017426809296011925
    2. '(' → logprob: -4.14242696762085
    3. 'int' → logprob: -6.64242696762085
    4. '(
' → logprob: -10.142426490783691
    5. '=int' → logprob: -11.267426490783691
    6. '<int' → logprob: -11.392426490783691
    7. '   ' → logprob: -12.142426490783691
    8. ')' → logprob: -12.642426490783691
    9. ',int' → logprob: -12.642426490783691
    10. ' int' → logprob: -12.767426490783691

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09261878579854965
    2. ',input' → logprob: -2.842618703842163
    3. ',' → logprob: -4.092618942260742
    4. '(' → logprob: -4.592618942260742
    5. 'input' → logprob: -5.842618942260742
    6. ' input' → logprob: -9.092618942260742
    7. ' (' → logprob: -9.592618942260742
    8. ' ,' → logprob: -9.592618942260742
    9. '))' → logprob: -9.717618942260742
    10. '=input' → logprob: -10.092618942260742

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47430628538131714
    2. 'input' → logprob: -0.9743062853813171
    3. '(input' → logprob: -8.599306106567383
    4. '=input' → logprob: -10.849306106567383
    5. ',input' → logprob: -11.349306106567383
    6. '	input' → logprob: -12.599306106567383
    7. ' ' → logprob: -12.724306106567383
    8. '<input' → logprob: -13.099306106567383
    9. '[input' → logprob: -13.974306106567383
    10. '_input' → logprob: -13.974306106567383

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005272653419524431
    2. '()' → logprob: -6.00527286529541
    3. '()))' → logprob: -6.38027286529541
    4. '())' → logprob: -6.88027286529541
    5. '())))' → logprob: -10.38027286529541
    6. '()));' → logprob: -11.88027286529541
    7. '()
' → logprob: -12.38027286529541
    8. '(' → logprob: -12.50527286529541
    9. ' ()' → logprob: -12.63027286529541
    10. ' ().' → logprob: -12.63027286529541

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002483626827597618
    2. 'strip' → logprob: -6.00248384475708
    3. 'rstrip' → logprob: -12.127483367919922
    4. ' split' → logprob: -13.002483367919922
    5. '(split' → logprob: -15.377483367919922
    6. 'spl' → logprob: -16.002483367919922
    7. ' strip' → logprob: -18.377483367919922
    8. '.split' → logprob: -18.627483367919922
    9. ' ' → logprob: -18.752483367919922
    10. ')' → logprob: -19.252483367919922

Token 24: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04400115832686424
    2. '))' → logprob: -3.5440011024475098
    3. '()' → logprob: -4.79400110244751
    4. '())' → logprob: -5.41900110244751
    5. '())))' → logprob: -7.41900110244751
    6. '(' → logprob: -7.79400110244751
    7. ')))' → logprob: -8.169001579284668
    8. ')' → logprob: -9.169001579284668
    9. '()))
' → logprob: -11.294001579284668
    10. '()));' → logprob: -12.044001579284668

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01859106309711933
    2. '
' → logprob: -5.018590927124023
    3. '#' → logprob: -5.893590927124023
    4. 'n' → logprob: -6.018590927124023
    5. '\' → logprob: -6.268590927124023
    6. 'a' → logprob: -7.268590927124023
    7. '```' → logprob: -7.268590927124023
    8. 'd' → logprob: -7.518590927124023
    9. '

' → logprob: -7.643590927124023
    10. 'for' → logprob: -7.893590927124023

Token 26: ' produit' (ID: 29429)
  Prédit: ' somme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' somme' → logprob: -1.1195865869522095
    2. ' ' → logprob: -2.11958646774292
    3. ' calcul' → logprob: -2.11958646774292
    4. ' lire' → logprob: -2.24458646774292
    5. '_' → logprob: -2.74458646774292
    6. ' saisir' → logprob: -2.99458646774292
    7. ' factor' → logprob: -3.11958646774292
    8. ' espace' → logprob: -3.86958646774292
    9. ' afficher' → logprob: -4.11958646774292
    10. ' ajouter' → logprob: -4.24458646774292

Token 27: '_de' (ID: 5047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02186957746744156
    2. '_des' → logprob: -4.396869659423828
    3. '(' → logprob: -5.146869659423828
    4. '_l' → logprob: -7.396869659423828
    5. '_s' → logprob: -8.521869659423828
    6. '_m' → logprob: -8.646869659423828
    7. '_du' → logprob: -8.646869659423828
    8. '_mult' → logprob: -8.646869659423828
    9. '(_)' → logprob: -8.646869659423828
    10. '_de' → logprob: -8.771869659423828

Token 28: 'ux' (ID: 1778)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.2567445933818817
    2. '_la' → logprob: -2.631744623184204
    3. 'la' → logprob: -3.631744623184204
    4. 's' → logprob: -3.631744623184204
    5. 'ux' → logprob: -3.631744623184204
    6. '_' → logprob: -3.881744623184204
    7. 'liste' → logprob: -4.006744384765625
    8. 'l' → logprob: -4.506744384765625
    9. '_list' → logprob: -4.881744384765625
    10. '()' → logprob: -5.756744384765625

Token 29: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03965039923787117
    2. '_m' → logprob: -3.2896504402160645
    3. '_n' → logprob: -6.7896504402160645
    4. ' _' → logprob: -9.539649963378906
    5. '_ent' → logprob: -9.539649963378906
    6. '(_)' → logprob: -10.039649963378906
    7. '(_' → logprob: -10.539649963378906
    8. '_des' → logprob: -10.664649963378906
    9. '_p' → logprob: -11.289649963378906
    10. '(' → logprob: -11.289649963378906

Token 30: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5286034345626831
    2. '_' → logprob: -0.9036034345626831
    3. ' (' → logprob: -7.153603553771973
    4. 's' → logprob: -7.403603553771973
    5. '(_' → logprob: -7.528603553771973
    6. '_de' → logprob: -7.653603553771973
    7. '_s' → logprob: -7.903603553771973
    8. '_des' → logprob: -7.903603553771973
    9. '(_)' → logprob: -8.028603553771973
    10. '('_' → logprob: -8.278603553771973

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00539561128243804
    2. ' ,' → logprob: -5.505395412445068
    3. '1' → logprob: -7.505395412445068
    4. ')' → logprob: -7.880395412445068
    5. '[' → logprob: -8.505395889282227
    6. ',y' → logprob: -10.130395889282227
    7. ',)' → logprob: -10.130395889282227
    8. ' ' → logprob: -10.380395889282227
    9. 's' → logprob: -10.630395889282227
    10. '_' → logprob: -11.505395889282227

Token 32: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.11287479847669601
    2. ' y' → logprob: -2.237874746322632
    3. ' ' → logprob: -10.362874984741211
    4. '  ' → logprob: -12.487874984741211
    5. ' ,' → logprob: -12.612874984741211
    6. 'x' → logprob: -12.612874984741211
    7. ')' → logprob: -12.737874984741211
    8. '    ' → logprob: -13.237874984741211
    9. ',' → logprob: -13.612874984741211
    10. ' )' → logprob: -13.987874984741211

Token 33: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6330152153968811
    2. '):' → logprob: -0.7580152153968811
    3. ' )' → logprob: -9.258015632629395
    4. ',' → logprob: -9.508015632629395
    5. ' ):' → logprob: -9.508015632629395
    6. '*' → logprob: -10.383015632629395
    7. ':' → logprob: -10.383015632629395
    8. '**' → logprob: -10.883015632629395
    9. '=' → logprob: -11.008015632629395
    10. ' ' → logprob: -11.133015632629395

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0065712458454072475
    2. '   ' → logprob: -6.381571292877197
    3. ' :' → logprob: -6.381571292877197
    4. '*' → logprob: -6.506571292877197
    5. '):' → logprob: -6.881571292877197
    6. ':**' → logprob: -9.381570816040039
    7. '**' → logprob: -9.506570816040039
    8. ')' → logprob: -9.756570816040039
    9. 'return' → logprob: -10.131570816040039
    10. 'x' → logprob: -10.131570816040039

Token 35: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.528334379196167
    2. '   ' → logprob: -1.278334379196167
    3. 'return' (adapté à ' return') → logprob: -2.028334379196167
    4. '    ' → logprob: -8.528334617614746
    5. ' ' → logprob: -9.653334617614746
    6. '  ' → logprob: -10.903334617614746
    7. 'x' → logprob: -11.028334617614746
    8. ' x' → logprob: -11.153334617614746
    9. '	return' → logprob: -11.278334617614746
    10. ' ' → logprob: -11.903334617614746

Token 36: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25195521116256714
    2. 'x' → logprob: -1.501955270767212
    3. ' ' → logprob: -10.626955032348633
    4. ' ' → logprob: -14.376955032348633
    5. '	x' → logprob: -14.751955032348633
    6. '(x' → logprob: -15.751955032348633
    7. '`' → logprob: -16.376955032348633
    8. '  ' → logprob: -16.376955032348633
    9. '(' → logprob: -16.751955032348633
    10. '   ' → logprob: -17.126955032348633

Token 37: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06197631359100342
    2. ' *' → logprob: -2.811976432800293
    3. '*y' → logprob: -11.936976432800293
    4. '**' → logprob: -14.061976432800293
    5. ' ' → logprob: -14.061976432800293
    6. ' ' → logprob: -16.061975479125977
    7. ' **' → logprob: -16.686975479125977
    8. '`' → logprob: -17.311975479125977
    9. '```' → logprob: -17.936975479125977
    10. '*object' → logprob: -18.186975479125977

Token 38: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889044284820557
    2. ' y' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.453890800476074
    4. '	y' → logprob: -16.203889846801758
    5. ' ' → logprob: -18.578889846801758
    6. '<|end|>' → logprob: -18.953889846801758
    7. ''y' → logprob: -19.578889846801758
    8. '*y' → logprob: -19.578889846801758
    9. '_y' → logprob: -19.953889846801758
    10. '‘y' → logprob: -19.953889846801758

Token 39: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1460015773773193
    2. '\n' → logprob: -1.2710015773773193
    3. 'def' → logprob: -1.6460015773773193
    4. '<|end|>' → logprob: -2.3960015773773193
    5. '\' → logprob: -2.8960015773773193
    6. '(' → logprob: -3.8960015773773193
    7. '

' → logprob: -4.271001815795898
    8. '*' → logprob: -4.521001815795898
    9. 'newline' → logprob: -5.646001815795898
    10. '<|end|>' → logprob: -6.146001815795898

Token 40: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015259294304996729
    2. '#' → logprob: -7.37652587890625
    3. '\' → logprob: -8.37652587890625
    4. '*' → logprob: -8.75152587890625
    5. 'x' → logprob: -9.12652587890625
    6. 'print' → logprob: -9.25152587890625
    7. '[' → logprob: -9.75152587890625
    8. '
' → logprob: -10.12652587890625
    9. '<|end|>' → logprob: -10.25152587890625
    10. 'n' → logprob: -10.37652587890625

Token 41: ' somme' (ID: 64484)
  Prédit: ' produit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.22076623141765594
    2. ' somme' → logprob: -2.345766305923462
    3. ' ' → logprob: -3.220766305923462
    4. ' multiplication' → logprob: -4.095766067504883
    5. ' calcul' → logprob: -4.220766067504883
    6. ' main' → logprob: -5.470766067504883
    7. ' addition' → logprob: -5.845766067504883
    8. ' prod' → logprob: -5.970766067504883
    9. ' multip' → logprob: -6.220766067504883
    10. ' carre' → logprob: -6.345766067504883

Token 42: '_pro' (ID: 4617)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.41313436627388
    2. '(' → logprob: -2.0381343364715576
    3. '_' → logprob: -2.2881343364715576
    4. '_des' → logprob: -3.1631343364715576
    5. '(a' → logprob: -3.7881343364715576
    6. '_two' → logprob: -4.038134574890137
    7. '(x' → logprob: -4.163134574890137
    8. '_(' → logprob: -5.538134574890137
    9. '_elements' → logprob: -7.038134574890137
    10. '_total' → logprob: -7.913134574890137

Token 43: 'du' (ID: 698)
  Prédit: 'duit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duit' → logprob: -0.20607183873653412
    2. 'du' → logprob: -1.7060718536376953
    3. 'duct' → logprob: -6.206071853637695
    4. 'd' → logprob: -6.581071853637695
    5. 'duction' → logprob: -8.081071853637695
    6. 'gram' → logprob: -8.081071853637695
    7. 'vis' → logprob: -9.331071853637695
    8. 'pre' → logprob: -9.706071853637695
    9. 'chain' → logprob: -9.831071853637695
    10. 'jet' → logprob: -10.706071853637695

Token 44: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.31411829590797424
    2. 'it' → logprob: -1.3141182661056519
    3. '```' → logprob: -8.189118385314941
    4. '   ' → logprob: -9.064118385314941
    5. '**' → logprob: -10.064118385314941
    6. ' it' → logprob: -10.189118385314941
    7. 'ct' → logprob: -10.189118385314941
    8. '_' → logprob: -10.564118385314941
    9. '

' → logprob: -10.564118385314941
    10. '(it' → logprob: -10.814118385314941

Token 45: '_de' (ID: 5047)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.9992511868476868
    2. '_de' → logprob: -1.624251127243042
    3. '_' → logprob: -1.999251127243042
    4. '(x' → logprob: -2.249251127243042
    5. '(' → logprob: -2.499251127243042
    6. '(lst' → logprob: -3.749251127243042
    7. '(a' → logprob: -4.124251365661621
    8. '_l' → logprob: -4.499251365661621
    9. 'des' → logprob: -4.874251365661621
    10. '(_' → logprob: -4.874251365661621

Token 46: '_de' (ID: 5047)
  Prédit: 'ux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.44545501470565796
    2. '_de' → logprob: -1.6954550743103027
    3. 'de' → logprob: -2.5704550743103027
    4. '_p' → logprob: -3.8204550743103027
    5. 'eux' → logprob: -4.445455074310303
    6. '_pairs' → logprob: -4.570455074310303
    7. '_t' → logprob: -4.820455074310303
    8. '_elements' → logprob: -4.945455074310303
    9. 'p' → logprob: -5.070455074310303
    10. 's' → logprob: -5.445455074310303

Token 47: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.0009782671695575118
    2. 'eux' → logprob: -7.125978469848633
    3. 'u' → logprob: -9.125978469848633
    4. '```' → logprob: -10.750978469848633
    5. 'us' → logprob: -11.375978469848633
    6. 'uz' → logprob: -11.875978469848633
    7. 'x' → logprob: -12.500978469848633
    8. '``' → logprob: -12.500978469848633
    9. '   ' → logprob: -12.875978469848633
    10. '`' → logprob: -13.250978469848633

Token 48: '_list' (ID: 4162)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0031569264829158783
    2. '_' → logprob: -6.128157138824463
    3. 'elements' → logprob: -7.503157138824463
    4. 'élé' → logprob: -9.003156661987305
    5. '_ele' → logprob: -10.128156661987305
    6. 's' → logprob: -10.378156661987305
    7. '```' → logprob: -10.378156661987305
    8. '_ent' → logprob: -10.503156661987305
    9. '(_' → logprob: -10.503156661987305
    10. '(x' → logprob: -11.003156661987305

Token 49: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -5.9153885558771435e-06
    2. 'e' → logprob: -12.250005722045898
    3. '(es' → logprob: -14.875005722045898
    4. 'esp' → logprob: -16.1250057220459
    5. '_es' → logprob: -16.5000057220459
    6. 'ess' → logprob: -16.6250057220459
    7. '(e' → logprob: -16.6250057220459
    8. 's' → logprob: -16.6250057220459
    9. '```' → logprob: -16.6250057220459
    10. 'esi' → logprob: -17.6250057220459

Token 50: '_part' (ID: 24053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1750396192073822
    2. '(x' → logprob: -2.550039529800415
    3. '(l' → logprob: -2.675039529800415
    4. '(a' → logprob: -4.675039768218994
    5. '(lst' → logprob: -6.425039768218994
    6. ' (' → logprob: -7.175039768218994
    7. '(s' → logprob: -7.425039768218994
    8. '(ll' → logprob: -8.175039291381836
    9. '(ls' → logprob: -8.425039291381836
    10. '(n' → logprob: -8.800039291381836

Token 51: 'ies' (ID: 566)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7902288436889648
    2. 'ielle' → logprob: -1.4152288436889648
    3. 'iel' → logprob: -1.6652288436889648
    4. 'ie' → logprob: -2.665228843688965
    5. 'e' → logprob: -4.790228843688965
    6. 'ial' → logprob: -4.915228843688965
    7. '_' → logprob: -4.915228843688965
    8. 'ies' → logprob: -5.415228843688965
    9. '```' → logprob: -5.415228843688965
    10. '2' → logprob: -6.290228843688965

Token 52: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7838786244392395
    2. '_g' → logprob: -1.1588785648345947
    3. '_' → logprob: -1.9088785648345947
    4. '(g' → logprob: -3.5338785648345947
    5. 'g' → logprob: -3.9088785648345947
    6. '(a' → logprob: -4.658878803253174
    7. '_de' → logprob: -5.033878803253174
    8. '_a' → logprob: -5.533878803253174
    9. '_d' → logprob: -6.283878803253174
    10. '1' → logprob: -7.158878803253174

Token 53: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.21504536271095276
    2. 'ist' → logprob: -2.21504545211792
    3. '1' → logprob: -2.84004545211792
    4. 'istes' → logprob: -4.96504545211792
    5. 'a' → logprob: -5.71504545211792
    6. 'e' → logprob: -5.84004545211792
    7. '(a' → logprob: -6.21504545211792
    8. 'ists' → logprob: -6.84004545211792
    9. '(' → logprob: -6.96504545211792
    10. '```' → logprob: -7.09004545211792

Token 54: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019106490537524223
    2. '_' → logprob: -4.894106388092041
    3. '_g' → logprob: -5.519106388092041
    4. '):' → logprob: -5.644106388092041
    5. ',' → logprob: -6.519106388092041
    6. ')' → logprob: -7.019106388092041
    7. 'g' → logprob: -7.644106388092041
    8. '_a' → logprob: -8.0191068649292
    9. 'A' → logprob: -8.6441068649292
    10. 'a' → logprob: -9.1441068649292

Token 55: ' i' (ID: 575)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.9878060221672058
    2. ' n' → logprob: -1.6128060817718506
    3. 'liste' → logprob: -2.6128060817718506
    4. ' lst' → logprob: -2.9878060817718506
    5. ' parts' → logprob: -3.3628060817718506
    6. ' l' → logprob: -3.3628060817718506
    7. ' indices' → logprob: -3.6128060817718506
    8. ' list' → logprob: -3.7378060817718506
    9. 'part' → logprob: -4.1128058433532715
    10. 'n' → logprob: -4.2378058433532715

Token 56: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14539998769760132
    2. '+' → logprob: -2.895400047302246
    3. '1' → logprob: -3.020400047302246
    4. ' ,' → logprob: -3.895400047302246
    5. ')' → logprob: -5.270400047302246
    6. '):' → logprob: -6.145400047302246
    7. ' ' → logprob: -7.270400047302246
    8. 's' → logprob: -7.520400047302246
    9. '-' → logprob: -7.645400047302246
    10. ' +' → logprob: -7.895400047302246

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027266032993793488
    2. ' return' → logprob: -4.652266025543213
    3. '=' → logprob: -5.402266025543213
    4. ':' → logprob: -5.777266025543213
    5. ' =' → logprob: -6.402266025543213
    6. '(' → logprob: -6.527266025543213
    7. ',' → logprob: -6.777266025543213
    8. '    ' → logprob: -6.902266025543213
    9. 's' → logprob: -7.277266025543213
    10. '[' → logprob: -7.652266025543213

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3550676703453064
    2. ' somme' → logprob: -2.355067729949951
    3. '   ' → logprob: -2.605067729949951
    4. ' sum' → logprob: -3.480067729949951
    5. 'sum' → logprob: -3.980067729949951
    6. ' liste' → logprob: -4.105067729949951
    7. ' (' → logprob: -4.230067729949951
    8. '(' → logprob: -4.355067729949951
    9. 'return' (adapté à ' return') → logprob: -4.605067729949951
    10. 's' → logprob: -4.730067729949951

Token 59: ' somme' (ID: 64484)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.3136351406574249
    2. ' liste' → logprob: -1.8136351108551025
    3. 'produ' → logprob: -3.1886351108551025
    4. ' produit' → logprob: -3.5636351108551025
    5. '(pro' → logprob: -4.188635349273682
    6. '   ' → logprob: -4.813635349273682
    7. 'prod' → logprob: -5.688635349273682
    8. ' ' → logprob: -6.438635349273682
    9. 'sum' → logprob: -6.563635349273682
    10. ' somme' → logprob: -6.688635349273682

Token 60: '_ind' (ID: 20261)
  Prédit: '_pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pro' → logprob: -0.10390084236860275
    2. '_' → logprob: -3.103900909423828
    3. '_de' → logprob: -3.228900909423828
    4. '(' → logprob: -4.603900909423828
    5. 's' → logprob: -6.728900909423828
    6. '(pro' → logprob: -7.103900909423828
    7. '(l' → logprob: -7.603900909423828
    8. '_part' → logprob: -7.978900909423828
    9. '(s' → logprob: -8.103900909423828
    10. '_(' → logprob: -8.603900909423828

Token 61: 'ivid' (ID: 17188)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0028650204185396433
    2. 'ice' → logprob: -6.627864837646484
    3. 'ices' → logprob: -7.252864837646484
    4. '(i' → logprob: -8.877864837646484
    5. 'e' → logprob: -9.002864837646484
    6. '(ex' → logprob: -9.377864837646484
    7. '[i' → logprob: -9.877864837646484
    8. '(' → logprob: -9.877864837646484
    9. '[' → logprob: -10.002864837646484
    10. '_pro' → logprob: -10.252864837646484

Token 62: 'uelle' (ID: 18079)
  Prédit: 'uel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.7724925875663757
    2. 'uelle' → logprob: -1.5224926471710205
    3. 'u' → logprob: -2.1474926471710205
    4. 'uelles' → logprob: -2.3974926471710205
    5. 'uels' → logprob: -3.5224926471710205
    6. 'us' → logprob: -3.7724926471710205
    7. 'ue' → logprob: -3.7724926471710205
    8. 'ual' → logprob: -4.522492408752441
    9. 'ues' → logprob: -4.897492408752441
    10. '_' → logprob: -6.147492408752441

Token 63: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32231149077415466
    2. '(l' → logprob: -2.0723114013671875
    3. '[' → logprob: -2.3223114013671875
    4. '([' → logprob: -4.1973114013671875
    5. '_' → logprob: -5.0723114013671875
    6. '[l' → logprob: -5.3223114013671875
    7. 's' → logprob: -5.4473114013671875
    8. '[i' → logprob: -5.4473114013671875
    9. '[:]' → logprob: -6.3223114013671875
    10. ' +' → logprob: -6.3223114013671875

Token 64: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0060776337049901485
    2. 'ist' → logprob: -5.631077766418457
    3. '(' → logprob: -6.881077766418457
    4. 'ite' → logprob: -8.256077766418457
    5. '[' → logprob: -8.506077766418457
    6. 'ste' → logprob: -8.756077766418457
    7. '   ' → logprob: -8.881077766418457
    8. 'ise' → logprob: -9.756077766418457
    9. ')' → logprob: -9.881077766418457
    10. '```' → logprob: -10.006077766418457

Token 65: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.042395055294036865
    2. '[' → logprob: -3.2923951148986816
    3. ',' → logprob: -5.667395114898682
    4. '[:' → logprob: -7.917395114898682
    5. ',i' → logprob: -8.542394638061523
    6. '[
' → logprob: -8.792394638061523
    7. ' ' → logprob: -9.667394638061523
    8. ' ,' → logprob: -10.292394638061523
    9. ' [' → logprob: -10.542394638061523
    10. '[j' → logprob: -12.042394638061523

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34937605261802673
    2. 'i' → logprob: -1.2243760824203491
    3. '[i' → logprob: -8.09937572479248
    4. ' ' → logprob: -8.47437572479248
    5. '   ' → logprob: -9.22437572479248
    6. ' [' → logprob: -9.47437572479248
    7. '2' → logprob: -9.47437572479248
    8. '[' → logprob: -9.97437572479248
    9. '0' → logprob: -10.22437572479248
    10. ')' → logprob: -11.22437572479248

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09205770492553711
    2. ')' → logprob: -3.092057704925537
    3. '   ' → logprob: -3.467057704925537
    4. ' ,' → logprob: -5.217057704925537
    5. '+' → logprob: -5.967057704925537
    6. '-' → logprob: -6.842057704925537
    7. ' )' → logprob: -7.092057704925537
    8. ' ' → logprob: -7.342057704925537
    9. '[i' → logprob: -8.967058181762695
    10. '  ' → logprob: -8.967058181762695

Token 68: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18301083147525787
    2. ' i' → logprob: -1.8080108165740967
    3. '2' → logprob: -6.433011054992676
    4. ' ' → logprob: -7.058011054992676
    5. '   ' → logprob: -8.183011054992676
    6. 'len' → logprob: -8.808011054992676
    7. '  ' → logprob: -9.308011054992676
    8. ' len' → logprob: -9.683011054992676
    9. '	i' → logprob: -9.808011054992676
    10. ')' → logprob: -10.058011054992676

Token 69: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07901393622159958
    2. ' +' → logprob: -2.5790138244628906
    3. ')' → logprob: -9.57901382446289
    4. '+)' → logprob: -11.32901382446289
    5. ' ' → logprob: -11.45401382446289
    6. '   ' → logprob: -11.95401382446289
    7. '+
' → logprob: -12.20401382446289
    8. '+,' → logprob: -12.32901382446289
    9. ' ,' → logprob: -12.57901382446289
    10. ' )' → logprob: -12.82901382446289

Token 70: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004237835761159658
    2. ' ' → logprob: -6.004237651824951
    3. '1' → logprob: -6.504237651824951
    4. '3' → logprob: -8.37923812866211
    5. '4' → logprob: -10.75423812866211
    6. '   ' → logprob: -12.75423812866211
    7. '5' → logprob: -13.00423812866211
    8. ')' → logprob: -13.19173812866211
    9. '6' → logprob: -13.81673812866211
    10. '  ' → logprob: -13.87923812866211

Token 71: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024386722594499588
    2. '+' → logprob: -3.7743866443634033
    3. ' +' → logprob: -7.649386882781982
    4. ' )' → logprob: -7.899386882781982
    5. ',' → logprob: -8.524386405944824
    6. '   ' → logprob: -10.649386405944824
    7. ')+' → logprob: -10.899386405944824
    8. '+)' → logprob: -11.149386405944824
    9. ' ' → logprob: -11.774386405944824
    10. '))' → logprob: -11.899386405944824

Token 72: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9897308945655823
    2. '<|end|>' → logprob: -1.1147308349609375
    3. 'def' → logprob: -1.6147308349609375
    4. '+' → logprob: -2.6147308349609375
    5. '(' → logprob: -4.7397308349609375
    6. ' ' → logprob: -5.4897308349609375
    7. ' +' → logprob: -5.6147308349609375
    8. '```' → logprob: -5.9897308349609375
    9. '()' → logprob: -6.1147308349609375
    10. '<|end|>' → logprob: -6.2397308349609375

Token 73: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.5357286334037781
    2. '_' → logprob: -1.2857286930084229
    3. 's' → logprob: -2.160728693008423
    4. ' ' → logprob: -4.910728454589844
    5. ' _' → logprob: -4.910728454589844
    6. '_s' → logprob: -5.035728454589844
    7. ' sum' → logprob: -7.910728454589844
    8. ' ' → logprob: -7.910728454589844
    9. ' def' → logprob: -9.035728454589844
    10. '  ' → logprob: -9.285728454589844

Token 74: '_ind' (ID: 20261)
  Prédit: '_ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.1057378277182579
    2. '_' → logprob: -3.1057379245758057
    3. '_pro' → logprob: -3.4807379245758057
    4. '_de' → logprob: -3.8557379245758057
    5. '_part' → logprob: -6.355737686157227
    6. '_des' → logprob: -6.605737686157227
    7. 's' → logprob: -9.855737686157227
    8. 'ind' → logprob: -10.105737686157227
    9. '(_' → logprob: -10.355737686157227
    10. 'de' → logprob: -10.480737686157227

Token 75: 'ivid' (ID: 17188)
  Prédit: 'ivid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivid' → logprob: -0.0008713211864233017
    2. 'ividu' → logprob: -7.750871181488037
    3. 'iv' → logprob: -8.500871658325195
    4. 'ividual' → logprob: -8.625871658325195
    5. '_' → logprob: -9.875871658325195
    6. '__' → logprob: -14.250871658325195
    7. '   ' → logprob: -14.375871658325195
    8. 'ex' → logprob: -14.625871658325195
    9. '_ex' → logprob: -14.625871658325195
    10. '_part' → logprob: -14.625871658325195

Token 76: 'uelle' (ID: 18079)
  Prédit: 'uelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uelle' → logprob: -0.0011312862625345588
    2. 'uelles' → logprob: -8.376131057739258
    3. 'u' → logprob: -8.751131057739258
    4. 'iv' → logprob: -8.876131057739258
    5. 'ual' → logprob: -9.126131057739258
    6. 'ivid' → logprob: -9.251131057739258
    7. 'uel' → logprob: -9.501131057739258
    8. 'ue' → logprob: -9.876131057739258
    9. 'uer' → logprob: -10.376131057739258
    10. 'uels' → logprob: -10.376131057739258

Token 77: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0024813658092170954
    2. '(' → logprob: -6.002481460571289
    3. ' (' → logprob: -13.002481460571289
    4. '(s' → logprob: -13.627481460571289
    5. '(lst' → logprob: -14.002481460571289
    6. '(n' → logprob: -15.627481460571289
    7. 'def' → logprob: -15.752481460571289
    8. '(lista' → logprob: -15.877481460571289
    9. '(list' → logprob: -16.25248146057129
    10. '(L' → logprob: -16.25248146057129

Token 78: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.01347818598151207
    2. 'ist' → logprob: -4.6384782791137695
    3. 'ste' → logprob: -6.5134782791137695
    4. '_' → logprob: -6.8884782791137695
    5. ')' → logprob: -8.01347827911377
    6. 'e' → logprob: -8.76347827911377
    7. '```' → logprob: -8.76347827911377
    8. '(' → logprob: -9.38847827911377
    9. 'istes' → logprob: -9.38847827911377
    10. 's' → logprob: -10.13847827911377

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013393278641160578
    2. ' ,' → logprob: -9.625133514404297
    3. ',l' → logprob: -9.750133514404297
    4. ',i' → logprob: -12.750133514404297
    5. ')' → logprob: -13.250133514404297
    6. '[' → logprob: -13.375133514404297
    7. '[i' → logprob: -14.375133514404297
    8. 's' → logprob: -15.000133514404297
    9. '   ' → logprob: -15.125133514404297
    10. ',n' → logprob: -15.125133514404297

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08189722895622253
    2. 'i' → logprob: -2.706897258758545
    3. ' start' → logprob: -5.456897258758545
    4. ' j' → logprob: -5.831897258758545
    5. 'start' → logprob: -6.706897258758545
    6. ' a' → logprob: -7.206897258758545
    7. ' ' → logprob: -7.456897258758545
    8. 'j' → logprob: -7.706897258758545
    9. ' index' → logprob: -8.081896781921387
    10. 'a' → logprob: -8.269396781921387

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035072024911642075
    2. ' ,' → logprob: -8.250350952148438
    3. '):' → logprob: -10.625350952148438
    4. '   ' → logprob: -10.875350952148438
    5. ',i' → logprob: -11.000350952148438
    6. '+' → logprob: -11.125350952148438
    7. '+,' → logprob: -12.375350952148438
    8. ')' → logprob: -13.250350952148438
    9. ',int' → logprob: -13.500350952148438
    10. ' ' → logprob: -13.500350952148438

Token 82: ' debut' (ID: 21347)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6396445035934448
    2. ' j' → logprob: -1.5146445035934448
    3. 'i' → logprob: -2.0146446228027344
    4. ' i' → logprob: -2.1396446228027344
    5. ')' → logprob: -7.764644622802734
    6. '+' → logprob: -7.764644622802734
    7. '   ' → logprob: -8.264644622802734
    8. '  ' → logprob: -9.264644622802734
    9. '2' → logprob: -10.014644622802734
    10. '    ' → logprob: -10.014644622802734

Token 83: '_j' (ID: 12021)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49665385484695435
    2. ',' → logprob: -1.3716537952423096
    3. ')' → logprob: -2.4966537952423096
    4. '+' → logprob: -3.1216537952423096
    5. '=' → logprob: -5.371654033660889
    6. ' ,' → logprob: -5.996654033660889
    7. ' ):' → logprob: -6.371654033660889
    8. ' ' → logprob: -7.371654033660889
    9. ',i' → logprob: -8.37165355682373
    10. '-' → logprob: -8.49665355682373

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.046453334391117096
    2. ')' → logprob: -3.2964532375335693
    3. ',' → logprob: -5.046453475952148
    4. '=' → logprob: -6.921453475952148
    5. '):
' → logprob: -7.546453475952148
    6. '+' → logprob: -8.546453475952148
    7. ':' → logprob: -9.546453475952148
    8. 's' → logprob: -10.046453475952148
    9. ' ):' → logprob: -11.171453475952148
    10. '_' → logprob: -11.546453475952148

Token 85: '   ' (ID: 271)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.2418913841247559
    2. ':' → logprob: -1.3668913841247559
    3. '   ' → logprob: -1.8668913841247559
    4. ' ' → logprob: -2.491891384124756
    5. '+' → logprob: -2.616891384124756
    6. '):' → logprob: -2.741891384124756
    7. ')' → logprob: -3.741891384124756
    8. ' +' → logprob: -4.491891384124756
    9. '  ' → logprob: -4.616891384124756
    10. ' ):' → logprob: -4.741891384124756

Token 86: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4490998983383179
    2. ' somme' → logprob: -1.5740998983383179
    3. '   ' → logprob: -2.3241000175476074
    4. 's' (adapté à ' s') → logprob: -2.4491000175476074
    5. ' for' → logprob: -2.4491000175476074
    6. ')' → logprob: -2.9491000175476074
    7. 'sum' → logprob: -3.3241000175476074
    8. ' ' → logprob: -3.4491000175476074
    9. ' return' → logprob: -3.6991000175476074
    10. 'if' → logprob: -3.8241000175476074

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.389834463596344
    2. '=' → logprob: -1.1398344039916992
    3. ' ' → logprob: -6.764834403991699
    4. 'um' → logprob: -7.139834403991699
    5. 'u' → logprob: -8.3898344039917
    6. ' +=' → logprob: -8.7648344039917
    7. ',' → logprob: -9.0148344039917
    8. '_' → logprob: -9.2648344039917
    9. '+=' → logprob: -9.2648344039917
    10. '   ' → logprob: -9.5148344039917

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12809501588344574
    2. '0' → logprob: -2.1280949115753174
    3. ' liste' → logprob: -7.0030951499938965
    4. 'liste' → logprob: -9.128094673156738
    5. ' somme' → logprob: -10.003094673156738
    6. ' ' → logprob: -10.628094673156738
    7. 's' → logprob: -10.753094673156738
    8. ' list' → logprob: -11.503094673156738
    9. ' lst' → logprob: -11.690594673156738
    10. ' s' → logprob: -11.940594673156738

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016206118743866682
    2. 'liste' → logprob: -9.125162124633789
    3. ' ' → logprob: -10.125162124633789
    4. 'sum' → logprob: -12.125162124633789
    5. 's' → logprob: -13.625162124633789
    6. 'list' → logprob: -14.187662124633789
    7. '```' → logprob: -14.250162124633789
    8. 'l' → logprob: -14.562662124633789
    9. '1' → logprob: -14.687662124633789
    10. 'lst' → logprob: -15.125162124633789

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5764080286026001
    2. 'for' (adapté à ' for') → logprob: -0.8264080286026001
    3. '	for' → logprob: -8.701408386230469
    4. 'j' → logprob: -8.951408386230469
    5. 'n' → logprob: -9.451408386230469
    6. '   ' → logprob: -10.201408386230469
    7. ' j' → logprob: -10.826408386230469
    8. ' ' → logprob: -11.576408386230469
    9. 'i' → logprob: -11.826408386230469
    10. '<|end|>' → logprob: -11.951408386230469

Token 93: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.003624427132308483
    2. 'j' → logprob: -6.003624439239502
    3. ' ' → logprob: -7.003624439239502
    4. ' _' → logprob: -9.503623962402344
    5. ' ' → logprob: -10.253623962402344
    6. ' range' → logprob: -10.378623962402344
    7. ' i' → logprob: -10.753623962402344
    8. '	j' → logprob: -10.753623962402344
    9. ' x' → logprob: -11.128623962402344
    10. '  ' → logprob: -11.753623962402344

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00797165185213089
    2. 'in' → logprob: -5.38297176361084
    3. ' ' → logprob: -6.13297176361084
    4. '<|end|>' → logprob: -7.25797176361084
    5. 'range' → logprob: -8.25797176361084
    6. ' range' → logprob: -10.13297176361084
    7. '    ' → logprob: -10.50797176361084
    8. '	in' → logprob: -10.88297176361084
    9. '<|end|>' → logprob: -10.88297176361084
    10. ',' → logprob: -11.75797176361084

Token 95: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00989066157490015
    2. 'range' → logprob: -4.634890556335449
    3. '<|end|>' → logprob: -9.38489055633545
    4. '	range' → logprob: -10.75989055633545
    5. ' xrange' → logprob: -10.88489055633545
    6. '(range' → logprob: -12.13489055633545
    7. ' ' → logprob: -12.88489055633545
    8. '<|end|>' → logprob: -14.13489055633545
    9. ' rang' → logprob: -14.38489055633545
    10. ' rango' → logprob: -14.63489055633545

Token 96: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.010027342475950718
    2. '(' → logprob: -4.6350274085998535
    3. ' (' → logprob: -9.010026931762695
    4. '	de' → logprob: -10.010026931762695
    5. 'de' → logprob: -10.135026931762695
    6. '(len' → logprob: -10.760026931762695
    7. '(j' → logprob: -11.510026931762695
    8. '<|end|>' → logprob: -11.635026931762695
    9. '(d' → logprob: -12.260026931762695
    10. '   ' → logprob: -12.885026931762695

Token 97: 'but' (ID: 8293)
  Prédit: 'but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'but' → logprob: -0.0007841374608688056
    2. 'b' → logprob: -7.375783920288086
    3. '```' → logprob: -10.250783920288086
    4. 'bat' → logprob: -10.375783920288086
    5. 'ebut' → logprob: -10.875783920288086
    6. 'bu' → logprob: -11.125783920288086
    7. 'ut' → logprob: -11.500783920288086
    8. 'j' → logprob: -11.500783920288086
    9. ' but' → logprob: -11.875783920288086
    10. 'cut' → logprob: -12.500783920288086

Token 98: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0001637300301808864
    2. '_' → logprob: -8.750164031982422
    3. '_i' → logprob: -12.750164031982422
    4. '_,' → logprob: -14.500164031982422
    5. '_)' → logprob: -14.875164031982422
    6. 'j' → logprob: -15.000164031982422
    7. '```' → logprob: -15.875164031982422
    8. ')' → logprob: -16.000164031982422
    9. '_n' → logprob: -16.250164031982422
    10. '_l' → logprob: -16.375164031982422

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14671291410923004
    2. ',len' → logprob: -2.0217130184173584
    3. ' ,' → logprob: -5.646712779998779
    4. ')' → logprob: -8.396713256835938
    5. '<|end|>' → logprob: -9.271713256835938
    6. 'len' → logprob: -10.146713256835938
    7. ',n' → logprob: -11.021713256835938
    8. ',l' → logprob: -11.021713256835938
    9. '(len' → logprob: -11.146713256835938
    10. '=len' → logprob: -11.396713256835938

Token 100: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0161442793905735
    2. ' len' → logprob: -4.141144275665283
    3. '   ' → logprob: -9.641144752502441
    4. '(len' → logprob: -10.516144752502441
    5. '	len' → logprob: -11.766144752502441
    6. ',len' → logprob: -13.016144752502441
    7. '<len' → logprob: -13.016144752502441
    8. '=len' → logprob: -13.266144752502441
    9. '[len' → logprob: -13.641144752502441
    10. '<|end|>' → logprob: -13.891144752502441

Token 101: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3133120536804199
    2. '(' → logprob: -1.31331205368042
    3. '(
' → logprob: -10.063312530517578
    4. '	l' → logprob: -13.063312530517578
    5. '(s' → logprob: -13.188312530517578
    6. '(

' → logprob: -13.563312530517578
    7. '(lst' → logprob: -14.688312530517578
    8. ')' → logprob: -14.688312530517578
    9. ' (' → logprob: -15.188312530517578
    10. '(lista' → logprob: -15.188312530517578

Token 102: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0024925414472818375
    2. 'ste' → logprob: -6.377492427825928
    3. 'ist' → logprob: -7.252492427825928
    4. ')' → logprob: -10.627492904663086
    5. 'ite' → logprob: -10.877492904663086
    6. 'site' → logprob: -11.502492904663086
    7. '```' → logprob: -12.252492904663086
    8. '[' → logprob: -12.377492904663086
    9. '(' → logprob: -12.502492904663086
    10. 'liste' → logprob: -12.752492904663086

Token 103: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028519127517938614
    2. ')):' → logprob: -3.7785191535949707
    3. ')' → logprob: -5.903519153594971
    4. '):
' → logprob: -6.528519153594971
    5. '))' → logprob: -7.528519153594971
    6. ' ):' → logprob: -8.278518676757812
    7. ')):
' → logprob: -8.778518676757812
    8. '():' → logprob: -10.153518676757812
    9. '   ' → logprob: -10.278518676757812
    10. ':' → logprob: -10.903518676757812

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33735936880111694
    2. ':' → logprob: -1.7123594284057617
    3. ' s' → logprob: -3.7123594284057617
    4. 's' → logprob: -3.7123594284057617
    5. ' :' → logprob: -4.087359428405762
    6. ' ' → logprob: -4.087359428405762
    7. '<|end|>' → logprob: -4.587359428405762
    8. '   ' → logprob: -5.212359428405762
    9. '):' → logprob: -6.462359428405762
    10. ')' → logprob: -6.587359428405762

Token 105: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.156584233045578
    2. ' s' → logprob: -2.2815842628479004
    3. ' ' → logprob: -3.2815842628479004
    4. '        ' → logprob: -6.1565842628479
    5. '       ' → logprob: -6.5315842628479
    6. ' if' → logprob: -8.156583786010742
    7. '<|end|>' → logprob: -8.156583786010742
    8. '    ' → logprob: -8.406583786010742
    9. ' ' → logprob: -8.531583786010742
    10. 'if' → logprob: -8.781583786010742

Token 106: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07464563101530075
    2. '+=' → logprob: -2.949645519256592
    3. '+' → logprob: -3.949645519256592
    4. ' +' → logprob: -8.57464599609375
    5. '<|end|>' → logprob: -9.94964599609375
    6. ' ' → logprob: -11.19964599609375
    7. ' ' → logprob: -11.57464599609375
    8. '+='' → logprob: -11.82464599609375
    9. '    ' → logprob: -11.94964599609375
    10. '   ' → logprob: -12.32464599609375

Token 107: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.48801982402801514
    2. ' liste' → logprob: -1.2380198240280151
    3. 'produ' → logprob: -2.8630199432373047
    4. 'liste' → logprob: -3.3630199432373047
    5. '   ' → logprob: -6.113019943237305
    6. '(pro' → logprob: -7.738019943237305
    7. ' ' → logprob: -7.863019943237305
    8. 'prod' → logprob: -8.363019943237305
    9. ' list' → logprob: -8.863019943237305
    10. 'list' → logprob: -8.863019943237305

Token 108: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -2.641841820150148e-05
    2. '_' → logprob: -11.25002670288086
    3. 's' → logprob: -12.12502670288086
    4. 'de' → logprob: -12.37502670288086
    5. '(s' → logprob: -14.25002670288086
    6. '_des' → logprob: -14.50002670288086
    7. '(' → logprob: -14.62502670288086
    8. '```' → logprob: -14.62502670288086
    9. 'De' → logprob: -15.75002670288086
    10. '_du' → logprob: -16.00002670288086

Token 109: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.06872887164354324
    2. 'eux' → logprob: -2.8187289237976074
    3. 'x' → logprob: -5.068728923797607
    4. '```' → logprob: -8.69372844696045
    5. 'de' → logprob: -8.81872844696045
    6. 'u' → logprob: -9.81872844696045
    7. 'aux' → logprob: -10.81872844696045
    8. 'l' → logprob: -11.69372844696045
    9. '\x' → logprob: -11.94372844696045
    10. '_de' → logprob: -11.94372844696045

Token 110: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0006197464535944164
    2. '_' → logprob: -7.750619888305664
    3. 'élé' → logprob: -9.500619888305664
    4. 'elements' → logprob: -9.750619888305664
    5. '_ele' → logprob: -11.625619888305664
    6. 's' → logprob: -11.750619888305664
    7. '_l' → logprob: -12.000619888305664
    8. '_element' → logprob: -12.000619888305664
    9. '```' → logprob: -12.500619888305664
    10. '(' → logprob: -12.500619888305664

Token 111: '(l' (ID: 4179)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47417163848876953
    2. '(l' → logprob: -0.9741716384887695
    3. '(
' → logprob: -9.59917163848877
    4. '(

' → logprob: -11.72417163848877
    5. '(s' → logprob: -12.09917163848877
    6. '(lst' → logprob: -13.09917163848877
    7. '(list' → logprob: -13.34917163848877
    8. '((' → logprob: -13.59917163848877
    9. '(n' → logprob: -13.59917163848877
    10. '(i' → logprob: -13.59917163848877

Token 112: 'iste' (ID: 4872)
  Prédit: 'ste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ste' → logprob: -0.3137226998806
    2. 'iste' → logprob: -1.3137227296829224
    3. 'site' → logprob: -8.438722610473633
    4. 'ist' → logprob: -9.313722610473633
    5. 'st' → logprob: -10.438722610473633
    6. '[' → logprob: -10.563722610473633
    7. 'te' → logprob: -10.688722610473633
    8. 'e' → logprob: -11.313722610473633
    9. 'liste' → logprob: -11.688722610473633
    10. 's' → logprob: -12.063722610473633

Token 113: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05156797543168068
    2. '[' → logprob: -3.176568031311035
    3. '[j' → logprob: -4.801568031311035
    4. '[
' → logprob: -8.926568031311035
    5. '[s' → logprob: -9.301568031311035
    6. ',' → logprob: -11.301568031311035
    7. ' [' → logprob: -11.551568031311035
    8. '[I' → logprob: -11.551568031311035
    9. '[int' → logprob: -11.676568031311035
    10. ' ' → logprob: -11.801568031311035

Token 114: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031136609613895416
    2. '],' → logprob: -7.128113746643066
    3. ',j' → logprob: -7.628113746643066
    4. '][' → logprob: -7.628113746643066
    5. '[j' → logprob: -7.753113746643066
    6. '[' → logprob: -8.253113746643066
    7. ' ,' → logprob: -8.378113746643066
    8. ']' → logprob: -9.128113746643066
    9. '   ' → logprob: -9.753113746643066
    10. '],[' → logprob: -9.878113746643066

Token 115: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.14280878007411957
    2. ' liste' → logprob: -2.017808675765991
    3. ' ' → logprob: -9.89280891418457
    4. ' ' → logprob: -10.76780891418457
    5. '   ' → logprob: -10.76780891418457
    6. '    ' → logprob: -11.26780891418457
    7. '	l' → logprob: -11.76780891418457
    8. 'l' → logprob: -12.26780891418457
    9. 'list' → logprob: -12.89280891418457
    10. 'lst' → logprob: -13.26780891418457

Token 116: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005625653429888189
    2. '[' → logprob: -7.50056266784668
    3. '][' → logprob: -12.62556266784668
    4. ']' → logprob: -13.50056266784668
    5. 'j' → logprob: -13.87556266784668
    6. '[i' → logprob: -13.87556266784668
    7. '[
' → logprob: -14.12556266784668
    8. '```' → logprob: -14.75056266784668
    9. '[js' → logprob: -15.12556266784668
    10. ' [' → logprob: -15.12556266784668

Token 117: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03574846312403679
    2. '])' → logprob: -3.4107484817504883
    3. '))' → logprob: -6.285748481750488
    4. ')
' → logprob: -9.285748481750488
    5. '})' → logprob: -10.035748481750488
    6. ')])' → logprob: -10.410748481750488
    7. ' )' → logprob: -11.160748481750488
    8. ']' → logprob: -11.535748481750488
    9. ''])' → logprob: -11.910748481750488
    10. '   ' → logprob: -11.910748481750488

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046818096190690994
    2. ' return' → logprob: -3.7968180179595947
    3. '
' → logprob: -4.296818256378174
    4. 'return' → logprob: -5.296818256378174
    5. '    
' → logprob: -6.296818256378174
    6. ' ' → logprob: -7.421818256378174
    7. '	return' → logprob: -7.546818256378174
    8. '       ' → logprob: -7.921818256378174
    9. '  
' → logprob: -8.046817779541016
    10. '+
' → logprob: -8.046817779541016

Token 119: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16210810840129852
    2. 'return' (adapté à ' return') → logprob: -2.5371081829071045
    3. ' return' → logprob: -2.9121081829071045
    4. ' ' → logprob: -4.912107944488525
    5. '       ' → logprob: -5.912107944488525
    6. '    
' → logprob: -6.162107944488525
    7. '	return' → logprob: -6.787107944488525
    8. '\n' → logprob: -7.537107944488525
    9. '  ' → logprob: -7.787107944488525
    10. '    ' → logprob: -7.787107944488525

Token 120: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12693378329277039
    2. ' s' → logprob: -2.1269338130950928
    3. ' ' → logprob: -12.376934051513672
    4. ' ' → logprob: -14.126934051513672
    5. '(s' → logprob: -15.501934051513672
    6. '	s' → logprob: -15.626934051513672
    7. '```' → logprob: -15.876934051513672
    8. '   ' → logprob: -17.126934051513672
    9. '​' → logprob: -17.126934051513672
    10. '<s' → logprob: -17.126934051513672

Token 121: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7975857853889465
    2. 'def' → logprob: -1.0475857257843018
    3. '(' → logprob: -3.0475857257843018
    4. ' ' → logprob: -3.7975857257843018
    5. '<|end|>' → logprob: -3.7975857257843018
    6. '\n' → logprob: -4.047585964202881
    7. '#' → logprob: -4.297585964202881
    8. 'i' → logprob: -4.422585964202881
    9. ')' → logprob: -4.672585964202881
    10. '\' → logprob: -4.797585964202881

Token 123: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.049808137118816376
    2. ' main' → logprob: -3.9248080253601074
    3. ' produit' → logprob: -4.799808025360107
    4. 's' → logprob: -4.924808025360107
    5. ' calcul' → logprob: -5.299808025360107
    6. ' multiplication' → logprob: -6.424808025360107
    7. ' test' → logprob: -7.174808025360107
    8. ' ' → logprob: -7.424808025360107
    9. ' sum' → logprob: -7.549808025360107
    10. ' liste' → logprob: -7.674808025360107

Token 124: '_tot' (ID: 87201)
  Prédit: '_des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_des' → logprob: -0.8411858677864075
    2. '_de' → logprob: -1.0911858081817627
    3. '_' → logprob: -2.4661858081817627
    4. '_ind' → logprob: -2.5911858081817627
    5. '_pro' → logprob: -3.2161858081817627
    6. '_part' → logprob: -4.466186046600342
    7. '_l' → logprob: -5.341186046600342
    8. '_tot' → logprob: -5.716186046600342
    9. '_total' → logprob: -5.841186046600342
    10. 'de' → logprob: -6.216186046600342

Token 125: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -4.370294846012257e-05
    2. 'al' → logprob: -11.125043869018555
    3. '   ' → logprob: -11.625043869018555
    4. '_' → logprob: -12.625043869018555
    5. 'alle' → logprob: -12.875043869018555
    6. '```' → logprob: -12.875043869018555
    7. 'iale' → logprob: -13.375043869018555
    8. ' ale' → logprob: -13.625043869018555
    9. 'a' → logprob: -13.750043869018555
    10. 'ales' → logprob: -14.000043869018555

Token 126: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0705319494009018
    2. '(' → logprob: -2.6955318450927734
    3. '(s' → logprob: -7.820531845092773
    4. '(lst' → logprob: -9.820531845092773
    5. '_' → logprob: -9.945531845092773
    6. '()' → logprob: -10.570531845092773
    7. ' (' → logprob: -11.445531845092773
    8. '(lista' → logprob: -11.695531845092773
    9. '(_' → logprob: -12.195531845092773
    10. 's' → logprob: -12.320531845092773

Token 127: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.0019841869361698627
    2. 'ist' → logprob: -6.251984119415283
    3. '(' → logprob: -10.876984596252441
    4. '(l' → logprob: -12.251984596252441
    5. 'istes' → logprob: -12.376984596252441
    6. 'ste' → logprob: -12.751984596252441
    7. 'is' → logprob: -12.751984596252441
    8. '(a' → logprob: -12.876984596252441
    9. 'ista' → logprob: -12.876984596252441
    10. 'a' → logprob: -13.376984596252441

Token 128: '):
' (ID: 1883)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.24189825356006622
    2. '):' → logprob: -1.6168982982635498
    3. ')' → logprob: -4.366898059844971
    4. '(' → logprob: -6.491898059844971
    5. '):
' → logprob: -6.866898059844971
    6. ',l' → logprob: -8.241898536682129
    7. '(lst' → logprob: -8.491898536682129
    8. ' ):' → logprob: -8.991898536682129
    9. '   ' → logprob: -9.116898536682129
    10. '()' → logprob: -9.366898536682129

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8039988875389099
    2. ' s' → logprob: -1.1789989471435547
    3. 's' → logprob: -1.4289989471435547
    4. ' return' → logprob: -6.303998947143555
    5. ' ' → logprob: -7.053998947143555
    6. '(s' → logprob: -7.428998947143555
    7. '0' → logprob: -7.553998947143555
    8. ' sum' → logprob: -7.803998947143555
    9. 'sum' → logprob: -8.178998947143555
    10. '
' → logprob: -8.803998947143555

Token 130: ' total' (ID: 3609)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2275022268295288
    2. ' s' → logprob: -1.6025022268295288
    3. '   ' → logprob: -7.227502346038818
    4. 'sum' → logprob: -7.477502346038818
    5. ' sum' → logprob: -8.47750186920166
    6. '0' → logprob: -8.60250186920166
    7. ' return' → logprob: -9.22750186920166
    8. 'result' → logprob: -9.72750186920166
    9. 'return' → logprob: -9.72750186920166
    10. 'total' (adapté à ' total') → logprob: -9.85250186920166

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269536167383194
    2. '=' → logprob: -2.126953601837158
    3. '_' → logprob: -11.001954078674316
    4. 's' → logprob: -12.626954078674316
    5. '_=' → logprob: -13.001954078674316
    6. '  ' → logprob: -13.876954078674316
    7. ' +=' → logprob: -14.126954078674316
    8. '   ' → logprob: -14.501954078674316
    9. ' ' → logprob: -14.626954078674316
    10. ' ' → logprob: -15.001954078674316

Token 132: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06200330704450607
    2. ' ' → logprob: -2.8120033740997314
    3. ' sum' → logprob: -11.312003135681152
    4. '   ' → logprob: -11.562003135681152
    5. 'sum' → logprob: -12.062003135681152
    6. '  ' → logprob: -12.437003135681152
    7. ' ' → logprob: -13.312003135681152
    8. 's' → logprob: -13.312003135681152
    9. ' s' → logprob: -14.937003135681152
    10. 'len' → logprob: -15.687003135681152

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004903609515167773
    2. ' ' → logprob: -7.625490188598633
    3. 'sum' → logprob: -13.375490188598633
    4. 's' → logprob: -15.000490188598633
    5. '   ' → logprob: -15.625490188598633
    6. '  ' → logprob: -16.250490188598633
    7. 'len' → logprob: -16.750490188598633
    8. ' sum' → logprob: -16.750490188598633
    9. ' ' → logprob: -17.562990188598633
    10. '1' → logprob: -17.937990188598633

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002230905694887042
    2. '
' → logprob: -6.377231121063232
    3. ' for' → logprob: -7.877231121063232
    4. 'for' → logprob: -9.127230644226074
    5. '    
' → logprob: -11.127230644226074
    6. '	for' → logprob: -11.252230644226074
    7. '<|end|>' → logprob: -11.627230644226074
    8. '       ' → logprob: -14.252230644226074
    9. '  ' → logprob: -14.627230644226074
    10. '    ' → logprob: -14.752230644226074

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007817182689905167
    2. 'for' → logprob: -5.382817268371582
    3. ' for' → logprob: -5.757817268371582
    4. '
' → logprob: -10.882817268371582
    5. '	for' → logprob: -11.382817268371582
    6. '    
' → logprob: -13.382817268371582
    7. ' ' → logprob: -14.007817268371582
    8. '  ' → logprob: -14.632817268371582
    9. '<|end|>' → logprob: -14.632817268371582
    10. '   ' → logprob: -15.882817268371582

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00022034443099983037
    2. ' for' → logprob: -8.50022029876709
    3. 'n' → logprob: -11.62522029876709
    4. '   ' → logprob: -11.75022029876709
    5. ' ' → logprob: -17.125221252441406
    6. '  ' → logprob: -17.250221252441406
    7. '	for' → logprob: -18.750221252441406
    8. 'i' → logprob: -19.125221252441406
    9. '
' → logprob: -19.375221252441406
    10. '```' → logprob: -19.750221252441406

Token 137: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16026566922664642
    2. 'i' → logprob: -1.9102656841278076
    3. ' range' → logprob: -11.410265922546387
    4. '	i' → logprob: -11.910265922546387
    5. 'range' → logprob: -11.910265922546387
    6. ' ' → logprob: -12.285265922546387
    7. '   ' → logprob: -12.910265922546387
    8. ' ' → logprob: -13.160265922546387
    9. '  ' → logprob: -13.410265922546387
    10. ' in' → logprob: -13.535265922546387

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00395551323890686
    2. ' ' → logprob: -6.128955364227295
    3. 'in' → logprob: -6.378955364227295
    4. '  ' → logprob: -10.628955841064453
    5. 'range' → logprob: -10.753955841064453
    6. ' range' → logprob: -11.503955841064453
    7. ',' → logprob: -12.753955841064453
    8. ')' → logprob: -13.378955841064453
    9. '```' → logprob: -13.628955841064453
    10. '<|end|>' → logprob: -13.628955841064453

Token 139: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02975199744105339
    2. 'range' → logprob: -3.529752016067505
    3. '	range' → logprob: -14.029751777648926
    4. '(range' → logprob: -14.529751777648926
    5. ' ' → logprob: -16.529752731323242
    6. ' xrange' → logprob: -17.404752731323242
    7. ' ' → logprob: -17.529752731323242
    8. '   ' → logprob: -17.779752731323242
    9. ')' → logprob: -18.154752731323242
    10. '  ' → logprob: -18.529752731323242

Token 140: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. 'len' → logprob: -15.625027656555176
    4. '(
' → logprob: -16.750028610229492
    5. ' len' → logprob: -16.750028610229492
    6. '<len' → logprob: -17.500028610229492
    7. '	len' → logprob: -18.875028610229492
    8. ' (' → logprob: -19.250028610229492
    9. '(l' → logprob: -19.500028610229492
    10. ',len' → logprob: -19.625028610229492

Token 141: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0008058178937062621
    2. '(' → logprob: -7.125805854797363
    3. '(s' → logprob: -14.500805854797363
    4. '(
' → logprob: -14.750805854797363
    5. '(n' → logprob: -16.500804901123047
    6. '(m' → logprob: -16.625804901123047
    7. ' (' → logprob: -16.875804901123047
    8. '(lst' → logprob: -17.000804901123047
    9. '(

' → logprob: -17.500804901123047
    10. '(list' → logprob: -17.500804901123047

Token 142: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.00041113083716481924
    2. 'liste' → logprob: -8.750411033630371
    3. 'ste' → logprob: -9.500411033630371
    4. 'ist' → logprob: -9.750411033630371
    5. ')' → logprob: -10.000411033630371
    6. '(' → logprob: -10.625411033630371
    7. '(l' → logprob: -11.375411033630371
    8. ' iste' → logprob: -12.250411033630371
    9. '   ' → logprob: -12.875411033630371
    10. 'aste' → logprob: -13.000411033630371

Token 143: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.09861882030963898
    2. '):' → logprob: -3.223618745803833
    3. '))' → logprob: -3.598618745803833
    4. ')):
' → logprob: -4.848618984222412
    5. '()))' → logprob: -4.973618984222412
    6. ')' → logprob: -5.348618984222412
    7. '   ' → logprob: -6.098618984222412
    8. '()' → logprob: -6.223618984222412
    9. ' ))' → logprob: -7.098618984222412
    10. ' ):' → logprob: -7.473618984222412

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18271060287952423
    2. 'total' → logprob: -2.432710647583008
    3. ' total' → logprob: -2.682710647583008
    4. '   ' → logprob: -5.182710647583008
    5. ' ' → logprob: -6.557710647583008
    6. '<|end|>' → logprob: -6.807710647583008
    7. ' for' → logprob: -7.307710647583008
    8. '
' → logprob: -7.432710647583008
    9. '(total' → logprob: -7.682710647583008
    10. '        
' → logprob: -8.682710647583008

Token 145: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.05684034898877144
    2. ' total' → logprob: -3.431840419769287
    3. '   ' → logprob: -4.056840419769287
    4. 'for' → logprob: -5.306840419769287
    5. ' for' → logprob: -7.931840419769287
    6. '       ' → logprob: -8.431839942932129
    7. '	total' → logprob: -10.181839942932129
    8. ' ' → logprob: -10.681839942932129
    9. '  ' → logprob: -11.181839942932129
    10. '    ' → logprob: -12.056839942932129

Token 146: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6943919062614441
    2. '+=' → logprob: -0.6943919062614441
    3. '+' → logprob: -6.81939172744751
    4. '=' → logprob: -9.819392204284668
    5. ')' → logprob: -10.194392204284668
    6. ']+=' → logprob: -10.194392204284668
    7. '   ' → logprob: -12.569392204284668
    8. ' ' → logprob: -12.944392204284668
    9. '++' → logprob: -13.069392204284668
    10. '```' → logprob: -13.194392204284668

Token 147: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.034007683396339417
    2. ' somme' → logprob: -3.4090077877044678
    3. '   ' → logprob: -8.659008026123047
    4. 'sum' → logprob: -8.909008026123047
    5. ' ' → logprob: -10.659008026123047
    6. '  ' → logprob: -11.659008026123047
    7. 'som' → logprob: -11.909008026123047
    8. ' s' → logprob: -12.284008026123047
    9. '(s' → logprob: -13.034008026123047
    10. '	s' → logprob: -13.534008026123047

Token 148: '_pro' (ID: 4617)
  Prédit: '_ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ind' → logprob: -0.11413299292325974
    2. '_pro' → logprob: -2.239132881164551
    3. '_part' → logprob: -6.989132881164551
    4. 'ind' → logprob: -8.36413288116455
    5. '_' → logprob: -9.61413288116455
    6. '_de' → logprob: -9.86413288116455
    7. '_s' → logprob: -11.36413288116455
    8. 'pro' → logprob: -11.73913288116455
    9. 'part' → logprob: -12.98913288116455
    10. '_prof' → logprob: -13.23913288116455

Token 149: 'du' (ID: 698)
  Prédit: 'du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.00749991275370121
    2. 'dus' → logprob: -5.007499694824219
    3. 'd' → logprob: -7.257499694824219
    4. 'duct' → logprob: -10.882499694824219
    5. 'duit' → logprob: -11.632499694824219
    6. '_du' → logprob: -11.757499694824219
    7. 'its' → logprob: -11.757499694824219
    8. '```' → logprob: -11.882499694824219
    9. 'ds' → logprob: -12.507499694824219
    10. '   ' → logprob: -13.132499694824219

Token 150: 'its' (ID: 1348)
  Prédit: 'its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.0013432084815576673
    2. 'cts' → logprob: -7.001343250274658
    3. '```' → logprob: -9.2513427734375
    4. '
' → logprob: -9.5013427734375
    5. '   ' → logprob: -10.0013427734375
    6. '**' → logprob: -10.2513427734375
    7. '`' → logprob: -10.5013427734375
    8. '

' → logprob: -10.6263427734375
    9. '(' → logprob: -11.0013427734375
    10. '...' → logprob: -11.2513427734375

Token 151: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -4.0484450437361374e-05
    2. 'de' → logprob: -10.500040054321289
    3. '_' → logprob: -12.000040054321289
    4. '_des' → logprob: -12.750040054321289
    5. 'def' → logprob: -14.375040054321289
    6. '_DE' → logprob: -14.750040054321289
    7. '_part' → logprob: -15.125040054321289
    8. '   ' → logprob: -15.250040054321289
    9. ' _' → logprob: -15.375040054321289
    10. ' de' → logprob: -15.375040054321289

Token 152: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0008347623515874147
    2. 'de' → logprob: -7.125834941864014
    3. 'ux' → logprob: -10.750834465026855
    4. '_' → logprob: -13.375834465026855
    5. 'eux' → logprob: -13.625834465026855
    6. '_two' → logprob: -13.750834465026855
    7. 'u' → logprob: -14.250834465026855
    8. '_d' → logprob: -14.500834465026855
    9. '_part' → logprob: -14.750834465026855
    10. '_due' → logprob: -15.000834465026855

Token 153: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.00016301481809932739
    2. 'eux' → logprob: -9.750163078308105
    3. 'u' → logprob: -10.125163078308105
    4. '```' → logprob: -10.500163078308105
    5. 'x' → logprob: -11.875163078308105
    6. '``' → logprob: -12.000163078308105
    7. '   ' → logprob: -12.625163078308105
    8. '_de' → logprob: -13.000163078308105
    9. 'us' → logprob: -13.125163078308105
    10. 'aux' → logprob: -13.125163078308105

Token 154: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.013516293838620186
    2. 'list' → logprob: -4.513516426086426
    3. '_l' → logprob: -6.638516426086426
    4. '_part' → logprob: -7.763516426086426
    5. '_lists' → logprob: -8.138516426086426
    6. '_elements' → logprob: -8.263516426086426
    7. 'elements' → logprob: -10.013516426086426
    8. 'part' → logprob: -10.388516426086426
    9. '_' → logprob: -10.513516426086426
    10. 'liste' → logprob: -10.763516426086426

Token 155: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.01817663200199604
    2. 'tes' → logprob: -4.518176555633545
    3. 'istes' → logprob: -5.018176555633545
    4. 's' → logprob: -9.018177032470703
    5. '(es' → logprob: -9.018177032470703
    6. 'ist' → logprob: -10.268177032470703
    7. 'list' → logprob: -10.643177032470703
    8. '(' → logprob: -10.768177032470703
    9. 'ses' → logprob: -10.893177032470703
    10. '(i' → logprob: -11.018177032470703

Token 156: '_part' (ID: 24053)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.47511887550354004
    2. '_part' → logprob: -0.97511887550354
    3. '(' → logprob: -7.475118637084961
    4. '_' → logprob: -8.475118637084961
    5. '(i' → logprob: -9.100118637084961
    6. 'part' → logprob: -9.975118637084961
    7. '_(' → logprob: -10.225118637084961
    8. '(_' → logprob: -10.725118637084961
    9. '_parts' → logprob: -10.975118637084961
    10. 'Part' → logprob: -12.100118637084961

Token 157: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.003229052061215043
    2. 'es' → logprob: -5.753229141235352
    3. 'ie' → logprob: -10.378229141235352
    4. '```' → logprob: -11.753229141235352
    5. 'i' → logprob: -12.378229141235352
    6. ' ies' → logprob: -12.753229141235352
    7. '   ' → logprob: -13.378229141235352
    8. 'ues' → logprob: -14.003229141235352
    9. 'IES' → logprob: -14.753229141235352
    10. '(' → logprob: -14.878229141235352

Token 158: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0001097417771234177
    2. '(' → logprob: -9.125109672546387
    3. ' (' → logprob: -14.250109672546387
    4. '(
' → logprob: -17.250110626220703
    5. '(n' → logprob: -18.875110626220703
    6. '(lst' → logprob: -19.000110626220703
    7. '(list' → logprob: -19.250110626220703
    8. '(li' → logprob: -19.250110626220703
    9. '(lista' → logprob: -19.625110626220703
    10. '(m' → logprob: -20.250110626220703

Token 159: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -2.558399319241289e-05
    2. 'liste' → logprob: -11.500025749206543
    3. '(' → logprob: -12.250025749206543
    4. '(l' → logprob: -12.625025749206543
    5. 'ist' → logprob: -12.750025749206543
    6. 'ste' → logprob: -13.250025749206543
    7. ')' → logprob: -14.375025749206543
    8. ' iste' → logprob: -15.000025749206543
    9. 'site' → logprob: -15.250025749206543
    10. '[' → logprob: -15.625025749206543

Token 160: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.06762078404426575
    2. ',' → logprob: -3.5676207542419434
    3. '(' → logprob: -4.067620754241943
    4. ',l' → logprob: -4.067620754241943
    5. ')' → logprob: -6.567620754241943
    6. '(i' → logprob: -6.692620754241943
    7. ' ,' → logprob: -9.442621231079102
    8. ' ' → logprob: -9.567621231079102
    9. ' (' → logprob: -10.192621231079102
    10. '(lst' → logprob: -11.317621231079102

Token 161: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.696077227592468e-05
    2. ' i' → logprob: -9.500077247619629
    3. '   ' → logprob: -14.000077247619629
    4. ')i' → logprob: -14.250077247619629
    5. ')' → logprob: -14.500077247619629
    6. '(i' → logprob: -15.625077247619629
    7. '```' → logprob: -17.375076293945312
    8. '	i' → logprob: -18.375076293945312
    9. '[i' → logprob: -18.375076293945312
    10. '
' → logprob: -18.875076293945312

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008617766201496124
    2. ')
' → logprob: -4.758617877960205
    3. ')return' → logprob: -14.008617401123047
    4. ')
' → logprob: -14.133617401123047
    5. ' )' → logprob: -14.383617401123047
    6. '))' → logprob: -14.508617401123047
    7. ')

' → logprob: -15.258617401123047
    8. 'return' → logprob: -15.758617401123047
    9. '   ' → logprob: -16.008617401123047
    10. ' )
' → logprob: -17.133617401123047

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013432443141937256
    2. 'return' → logprob: -4.763432502746582
    3. '
' → logprob: -5.888432502746582
    4. ' return' → logprob: -6.638432502746582
    5. '    
' → logprob: -7.763432502746582
    6. '	return' → logprob: -8.888432502746582
    7. '+' → logprob: -9.263432502746582
    8. '+
' → logprob: -10.513432502746582
    9. '  
' → logprob: -11.888432502746582
    10. ')' → logprob: -11.888432502746582

Token 164: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25241246819496155
    2. 'return' (adapté à ' return') → logprob: -1.5024124383926392
    3. ' return' → logprob: -8.002412796020508
    4. '	return' → logprob: -9.002412796020508
    5. '    
' → logprob: -11.377412796020508
    6. '
' → logprob: -12.377412796020508
    7. '+' → logprob: -12.752412796020508
    8. '```' → logprob: -13.377412796020508
    9. ':return' → logprob: -13.502412796020508
    10. '       ' → logprob: -14.002412796020508

Token 165: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.005235887598246336
    2. 'total' → logprob: -5.25523567199707
    3. ' ' → logprob: -13.88023567199707
    4. ' tot' → logprob: -14.25523567199707
    5. ' totale' → logprob: -16.00523567199707
    6. ' tota' → logprob: -16.13023567199707
    7. '(total' → logprob: -16.25523567199707
    8. 't' → logprob: -17.38023567199707
    9. '_total' → logprob: -17.38023567199707
    10. '	total' → logprob: -17.50523567199707

Token 166: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10486038029193878
    2. '<|end|>' → logprob: -3.479860305786133
    3. 'def' → logprob: -3.604860305786133
    4. 'n' → logprob: -4.104860305786133
    5. 'print' → logprob: -4.479860305786133
    6. '```' → logprob: -5.479860305786133
    7. '
' → logprob: -6.479860305786133
    8. 'a' → logprob: -6.604860305786133
    9. '.' → logprob: -6.979860305786133
    10. '<|end|>' → logprob: -7.229860305786133

Token 168: ' afficher' (ID: 146524)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06922466307878494
    2. ' somme' → logprob: -3.9442245960235596
    3. ' test' → logprob: -4.319224834442139
    4. 'main' → logprob: -4.444224834442139
    5. ' produit' → logprob: -5.444224834442139
    6. ' calcul' → logprob: -6.069224834442139
    7. ' lire' → logprob: -6.194224834442139
    8. ' multiplication' → logprob: -6.194224834442139
    9. 's' → logprob: -6.569224834442139
    10. '__' → logprob: -6.819224834442139

Token 169: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7283870577812195
    2. '_' → logprob: -0.7283870577812195
    3. '()' → logprob: -3.6033871173858643
    4. '_l' → logprob: -5.978386878967285
    5. '_s' → logprob: -6.228386878967285
    6. '_(' → logprob: -7.603386878967285
    7. '("_' → logprob: -7.978386878967285
    8. '("")' → logprob: -7.978386878967285
    9. '("' → logprob: -8.103386878967285
    10. '(_)' → logprob: -8.728386878967285

Token 170: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00024620062322355807
    2. 'é' → logprob: -9.000246047973633
    3. 'e' → logprob: -9.625246047973633
    4. '()' → logprob: -10.125246047973633
    5. '(at' → logprob: -11.750246047973633
    6. 'ат' → logprob: -12.875246047973633
    7. 'a' → logprob: -13.375246047973633
    8. '('' → logprob: -14.250246047973633
    9. '```' → logprob: -14.375246047973633
    10. ' at' → logprob: -14.375246047973633

Token 171: '(result' (ID: 8111)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004610388074070215
    2. '(' → logprob: -5.879610538482666
    3. '(l' → logprob: -7.379610538482666
    4. '()' → logprob: -7.379610538482666
    5. '(s' → logprob: -8.379610061645508
    6. ' ():' → logprob: -9.129610061645508
    7. '():
' → logprob: -9.254610061645508
    8. '(result' → logprob: -9.629610061645508
    9. '(message' → logprob: -11.754610061645508
    10. '(lst' → logprob: -11.879610061645508

Token 172: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0008728709071874619
    2. ')' → logprob: -7.37587308883667
    3. '())' → logprob: -9.500872611999512
    4. '()' → logprob: -9.875872611999512
    5. 'ats' → logprob: -9.875872611999512
    6. '):' → logprob: -10.625872611999512
    7. '(at' → logprob: -10.750872611999512
    8. 'ат' → logprob: -12.000872611999512
    9. '(result' → logprob: -12.750872611999512
    10. '():' → logprob: -12.875872611999512

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001021736185066402
    2. ')' → logprob: -7.001021862030029
    3. '):
' → logprob: -9.251021385192871
    4. '():' → logprob: -11.751021385192871
    5. ' ):' → logprob: -13.126021385192871
    6. '(' → logprob: -13.376021385192871
    7. ':' → logprob: -14.251021385192871
    8. '()' → logprob: -14.501021385192871
    9. ' ' → logprob: -14.751021385192871
    10. '(result' → logprob: -15.251021385192871

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03838662430644035
    2. ' print' → logprob: -3.913386583328247
    3. 'print' → logprob: -4.038386821746826
    4. '    
' → logprob: -11.413386344909668
    5. '(' → logprob: -11.538386344909668
    6. '    ' → logprob: -11.663386344909668
    7. '	print' → logprob: -11.663386344909668
    8. '(print' → logprob: -11.663386344909668
    9. '```' → logprob: -12.413386344909668
    10. ' ' → logprob: -13.163386344909668

Token 175: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.15228711068630219
    2. 'print' (adapté à ' print') → logprob: -2.027287006378174
    3. '   ' → logprob: -4.652287006378174
    4. '```' → logprob: -11.402287483215332
    5. '    
' → logprob: -12.027287483215332
    6. '    ' → logprob: -12.652287483215332
    7. ' 
' → logprob: -13.652287483215332
    8. '	print' → logprob: -13.902287483215332
    9. '.print' → logprob: -14.402287483215332
    10. ' prin' → logprob: -14.652287483215332

Token 176: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4745121896266937
    2. '(result' → logprob: -0.9745122194290161
    3. '(f' → logprob: -8.224512100219727
    4. '()' → logprob: -9.599512100219727
    5. '(resultado' → logprob: -9.599512100219727
    6. '('' → logprob: -11.599512100219727
    7. '(res' → logprob: -11.849512100219727
    8. '("("' → logprob: -12.224512100219727
    9. '(
' → logprob: -13.349512100219727
    10. '("")' → logprob: -13.474512100219727

Token 177: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.130576806142926e-05
    2. ')' → logprob: -11.250031471252441
    3. '_at' → logprob: -12.000031471252441
    4. 'a' → logprob: -12.750031471252441
    5. 't' → logprob: -12.875031471252441
    6. ' at' → logprob: -13.125031471252441
    7. 'al' → logprob: -13.625031471252441
    8. '(at' → logprob: -14.500031471252441
    9. ''at' → logprob: -14.625031471252441
    10. 'ation' → logprob: -15.000031471252441

Token 178: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '()' → logprob: -15.750000953674316
    5. ')
' → logprob: -16.250001907348633
    6. ')`' → logprob: -16.375001907348633
    7. '')' → logprob: -17.000001907348633
    8. '())' → logprob: -17.875001907348633
    9. '`)' → logprob: -18.625001907348633
    10. '(' → logprob: -18.875001907348633

Token 179: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10067404806613922
    2. 'if' → logprob: -2.7256741523742676
    3. 'n' → logprob: -3.6006741523742676
    4. 'liste' → logprob: -6.100674152374268
    5. '#' → logprob: -7.850674152374268
    6. '```' → logprob: -8.47567367553711
    7. 'i' → logprob: -10.72567367553711
    8. 'for' → logprob: -11.22567367553711
    9. '  
' → logprob: -11.35067367553711
    10. 'l' → logprob: -11.47567367553711

Token 180: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005146674811840057
    2. ' main' → logprob: -7.625514507293701
    3. 'principal' → logprob: -11.37551498413086
    4. 'def' → logprob: -12.00051498413086
    5. '__' → logprob: -12.62551498413086
    6. 'calcul' → logprob: -12.75051498413086
    7. 'fonction' → logprob: -14.62551498413086
    8. 'solution' → logprob: -14.75051498413086
    9. '_main' → logprob: -15.12551498413086
    10. 'run' → logprob: -15.25051498413086

Token 181: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006502442411147058
    2. '()' → logprob: -7.375650405883789
    3. '():
' → logprob: -11.125650405883789
    4. '(' → logprob: -12.250650405883789
    5. ' ():' → logprob: -12.625650405883789
    6. '()>' → logprob: -14.375650405883789
    7. '():
' → logprob: -16.50065040588379
    8. '()">' → logprob: -16.50065040588379
    9. ' ()' → logprob: -17.50065040588379
    10. '_' → logprob: -17.75065040588379

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04476196691393852
    2. ' liste' → logprob: -3.419761896133423
    3. 'liste' → logprob: -4.544762134552002
    4. '    
' → logprob: -8.669761657714844
    5. '  ' → logprob: -10.169761657714844
    6. ' ' → logprob: -10.169761657714844
    7. ' lst' → logprob: -10.419761657714844
    8. 'l' → logprob: -10.544761657714844
    9. '    ' → logprob: -10.544761657714844
    10. '	l' → logprob: -10.544761657714844

Token 183: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43071112036705017
    2. 'liste' → logprob: -1.5557111501693726
    3. '   ' → logprob: -2.305711030960083
    4. ' n' → logprob: -3.680711030960083
    5. 'lst' → logprob: -4.930711269378662
    6. ' liste' → logprob: -5.555711269378662
    7. ' ' → logprob: -7.055711269378662
    8. 'l' → logprob: -7.430711269378662
    9. ' lst' → logprob: -7.805711269378662
    10. '    
' → logprob: -8.305710792541504

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011079183779656887
    2. '=' → logprob: -4.51107931137085
    3. '_' → logprob: -11.636078834533691
    4. '=int' → logprob: -11.761078834533691
    5. ',' → logprob: -12.011078834533691
    6. ' ' → logprob: -13.136078834533691
    7. ')' → logprob: -13.761078834533691
    8. 's' → logprob: -14.011078834533691
    9. 'space' → logprob: -14.011078834533691
    10. '()' → logprob: -14.011078834533691

Token 185: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.22800356149673462
    2. 'l' → logprob: -1.6030035018920898
    3. ' l' → logprob: -6.85300350189209
    4. ' int' → logprob: -7.22800350189209
    5. 'int' → logprob: -7.60300350189209
    6. ' ' → logprob: -8.60300350189209
    7. '  ' → logprob: -9.97800350189209
    8. '   ' → logprob: -10.85300350189209
    9. 'Lire' → logprob: -10.97800350189209
    10. '	l' → logprob: -11.47800350189209

Token 186: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -12.87500286102295
    3. 'ent' → logprob: -15.62500286102295
    4. '	ent' → logprob: -16.375003814697266
    5. '_int' → logprob: -16.500003814697266
    6. '_en' → logprob: -16.500003814697266
    7. '_ENT' → logprob: -17.125003814697266
    8. ' _' → logprob: -17.250003814697266
    9. '_l' → logprob: -17.250003814697266
    10. '(ent' → logprob: -17.250003814697266

Token 187: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -5.676981345459353e-06
    2. 'er' → logprob: -12.875005722045898
    3. 'iert' → logprob: -13.500005722045898
    4. 't' → logprob: -14.750005722045898
    5. '   ' → logprob: -15.250005722045898
    6. 'ent' → logprob: -15.375005722045898
    7. '```' → logprob: -16.0000057220459
    8. '1' → logprob: -16.1250057220459
    9. 'ter' → logprob: -16.2500057220459
    10. 'et' → logprob: -16.2500057220459

Token 188: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.558399319241289e-05
    2. '()
' → logprob: -10.625025749206543
    3. '()

' → logprob: -14.375025749206543
    4. '()<' → logprob: -15.750025749206543
    5. '()`' → logprob: -16.125024795532227
    6. ' ()' → logprob: -16.125024795532227
    7. '()\' → logprob: -16.500024795532227
    8. '();' → logprob: -16.875024795532227
    9. '(' → logprob: -17.125024795532227
    10. '())' → logprob: -17.375024795532227

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5633535385131836
    2. 'liste' → logprob: -0.9383535385131836
    3. 'l' → logprob: -4.188353538513184
    4. '    
' → logprob: -4.813353538513184
    5. 'lst' → logprob: -5.188353538513184
    6. ' liste' → logprob: -5.938353538513184
    7. '	l' → logprob: -6.563353538513184
    8. 'n' → logprob: -6.813353538513184
    9. 'list' → logprob: -6.813353538513184
    10. 'Liste' → logprob: -7.313353538513184

Token 190: ' d' (ID: 272)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.04098580777645111
    2. 'lst' → logprob: -3.5409858226776123
    3. 'l' → logprob: -5.915985584259033
    4. 'ma' → logprob: -5.915985584259033
    5. 'for' → logprob: -6.290985584259033
    6. 'L' → logprob: -7.165985584259033
    7. '   ' → logprob: -7.290985584259033
    8. 'A' → logprob: -7.540985584259033
    9. 'val' → logprob: -7.665985584259033
    10. 'a' → logprob: -7.915985584259033

Token 191: ' =' (ID: 314)
  Prédit: 'onne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onne' → logprob: -0.5907972455024719
    2. 'e' → logprob: -1.7157971858978271
    3. 'ata' → logprob: -2.715797185897827
    4. 'ef' → logprob: -2.715797185897827
    5. ' =' → logprob: -2.965797185897827
    6. 'onnées' → logprob: -3.965797185897827
    7. 'on' → logprob: -4.465797424316406
    8. 'ate' → logprob: -4.965797424316406
    9. '=' → logprob: -5.090797424316406
    10. 'liste' → logprob: -5.090797424316406

Token 192: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.09416096657514572
    2. 'l' → logprob: -2.469161033630371
    3. '[]' → logprob: -6.094161033630371
    4. ' []' → logprob: -6.594161033630371
    5. ' l' → logprob: -7.344161033630371
    6. ' ' → logprob: -8.719161033630371
    7. ' liste' → logprob: -8.844161033630371
    8. 'Lire' → logprob: -8.969161033630371
    9. 'liste' → logprob: -9.219161033630371
    10. '[l' → logprob: -9.719161033630371

Token 193: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.2603901015827432e-05
    2. '_' → logprob: -10.750022888183594
    3. '_ent' → logprob: -14.500022888183594
    4. 'liste' → logprob: -15.250022888183594
    5. '_list' → logprob: -16.125022888183594
    6. '_n' → logprob: -16.375022888183594
    7. ' _' → logprob: -16.750022888183594
    8. 'l' → logprob: -17.500022888183594
    9. '_s' → logprob: -17.625022888183594
    10. 'Liste' → logprob: -18.250022888183594

Token 194: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.00023727134976070374
    2. 'liste' → logprob: -8.750237464904785
    3. 'ist' → logprob: -10.875237464904785
    4. 'ste' → logprob: -11.000237464904785
    5. 'site' → logprob: -12.250237464904785
    6. '#' → logprob: -12.625237464904785
    7. 'istes' → logprob: -12.625237464904785
    8. '_' → logprob: -12.750237464904785
    9. '   ' → logprob: -13.125237464904785
    10. '
' → logprob: -13.125237464904785

Token 195: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043472214019857347
    2. '()
' → logprob: -7.750434875488281
    3. '()

' → logprob: -13.500434875488281
    4. '()
' → logprob: -13.500434875488281
    5. ' ()' → logprob: -14.375434875488281
    6. '(' → logprob: -15.250434875488281
    7. '()\' → logprob: -16.00043487548828
    8. 'def' → logprob: -16.62543487548828
    9. '()`' → logprob: -17.00043487548828
    10. '())' → logprob: -17.00043487548828

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009495720732957125
    2. 'result' → logprob: -7.750949382781982
    3. '    
' → logprob: -8.37594985961914
    4. '
' → logprob: -8.50094985961914
    5. '<|end|>' → logprob: -9.50094985961914
    6. ' result' → logprob: -13.00094985961914
    7. '  
' → logprob: -13.50094985961914
    8. '```' → logprob: -13.75094985961914
    9. '	result' → logprob: -14.00094985961914
    10. '<|end|>' → logprob: -14.12594985961914

Token 197: ' a' (ID: 261)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18716108798980713
    2. 'r' → logprob: -2.1871609687805176
    3. '   ' → logprob: -3.0621609687805176
    4. 'res' → logprob: -4.937160968780518
    5. 'print' → logprob: -6.062160968780518
    6. ' result' → logprob: -6.937160968780518
    7. ' r' → logprob: -7.937160968780518
    8. 'rés' → logprob: -8.437161445617676
    9. 'aff' → logprob: -8.812161445617676
    10. '    
' → logprob: -9.062161445617676

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20899289846420288
    2. '=' → logprob: -1.7089929580688477
    3. '   ' → logprob: -6.833992958068848
    4. 'rg' → logprob: -7.083992958068848
    5. '_result' → logprob: -7.083992958068848
    6. '_' → logprob: -7.333992958068848
    7. 'cc' → logprob: -7.333992958068848
    8. 'ns' → logprob: -7.458992958068848
    9. ' ' → logprob: -7.833992958068848
    10. 'rray' → logprob: -8.208992958068848

Token 199: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.7377271056175232
    2. 's' → logprob: -0.9877271056175232
    3. '[s' → logprob: -3.237727165222168
    4. '[]' → logprob: -3.737727165222168
    5. 'sum' → logprob: -3.987727165222168
    6. '0' → logprob: -4.237727165222168
    7. ' [' → logprob: -4.362727165222168
    8. '[' → logprob: -4.362727165222168
    9. ' ' → logprob: -5.237727165222168
    10. ' sum' → logprob: -5.487727165222168

Token 200: '_tot' (ID: 87201)
  Prédit: '_tot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tot' → logprob: -6.511406809295295e-06
    2. 'tot' → logprob: -12.125006675720215
    3. '_total' → logprob: -14.250006675720215
    4. '_' → logprob: -15.250006675720215
    5. 'Tot' → logprob: -18.8750057220459
    6. '_de' → logprob: -19.1250057220459
    7. '_t' → logprob: -19.3750057220459
    8. '_to' → logprob: -20.0000057220459
    9. ' _' → logprob: -20.1250057220459
    10. '_pro' → logprob: -20.5000057220459

Token 201: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -2.1008713702030946e-06
    2. 'ate' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.500001907348633
    4. ' ale' → logprob: -15.125001907348633
    5. 'al' → logprob: -15.750001907348633
    6. 'a' → logprob: -16.125001907348633
    7. 'ales' → logprob: -16.750001907348633
    8. 'але' → logprob: -17.375001907348633
    9. 'nale' → logprob: -18.125001907348633
    10. 't' → logprob: -18.250001907348633

Token 202: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0011936791706830263
    2. '(' → logprob: -6.751193523406982
    3. '(l' → logprob: -11.00119400024414
    4. ' (' → logprob: -12.37619400024414
    5. '(de' → logprob: -13.50119400024414
    6. '(s' → logprob: -14.50119400024414
    7. '(a' → logprob: -15.37619400024414
    8. '((' → logprob: -15.50119400024414
    9. '(f' → logprob: -16.50119400024414
    10. '(
' → logprob: -16.62619400024414

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011061146855354309
    2. ')
' → logprob: -4.511061191558838
    3. ')
' → logprob: -11.51106071472168
    4. ' )' → logprob: -14.01106071472168
    5. ')d' → logprob: -14.01106071472168
    6. ')

' → logprob: -14.13606071472168
    7. '))' → logprob: -14.51106071472168
    8. 'd' → logprob: -16.51106071472168
    9. '   ' → logprob: -16.88606071472168
    10. ')a' → logprob: -17.13606071472168

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004002832865808159
    2. 'aff' → logprob: -8.25040054321289
    3. ' afficher' → logprob: -10.00040054321289
    4. '    
' → logprob: -10.00040054321289
    5. '
' → logprob: -11.12540054321289
    6. '   ' → logprob: -11.75040054321289
    7. '_aff' → logprob: -11.87540054321289
    8. 'Afficher' → logprob: -11.87540054321289
    9. '```' → logprob: -12.37540054321289
    10. '<|end|>' → logprob: -14.00040054321289

Token 205: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.023380812257528305
    2. '   ' → logprob: -3.773380756378174
    3. ' afficher' → logprob: -9.523381233215332
    4. 'af' → logprob: -10.648381233215332
    5. '  ' → logprob: -11.148381233215332
    6. 'Afficher' → logprob: -11.148381233215332
    7. ' ' → logprob: -12.773381233215332
    8. '    
' → logprob: -12.898381233215332
    9. '_aff' → logprob: -13.398381233215332
    10. 'a' → logprob: -13.648381233215332

Token 206: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.375005722045898
    3. '_r' → logprob: -14.500005722045898
    4. 'result' → logprob: -14.750005722045898
    5. ' _' → logprob: -16.0000057220459
    6. '_res' → logprob: -16.1250057220459
    7. '_RESULT' → logprob: -16.1250057220459
    8. '_Result' → logprob: -17.0000057220459
    9. ' resultat' → logprob: -17.8750057220459
    10. '(result' → logprob: -18.2500057220459

Token 207: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.2378600735682994e-05
    2. 'a' → logprob: -11.000032424926758
    3. '_result' → logprob: -12.375032424926758
    4. 't' → logprob: -12.625032424926758
    5. '_at' → logprob: -12.625032424926758
    6. 'er' → logprob: -13.625032424926758
    7. 'e' → logprob: -13.875032424926758
    8. 'ation' → logprob: -14.750032424926758
    9. 'result' → logprob: -14.875032424926758
    10. '_' → logprob: -15.250032424926758

Token 208: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.005234952084720135
    2. '(' → logprob: -5.255234718322754
    3. ' (' → logprob: -13.880234718322754
    4. '(
' → logprob: -16.38023567199707
    5. 'a' → logprob: -17.38023567199707
    6. '(s' → logprob: -18.00523567199707
    7. '(

' → logprob: -18.13023567199707
    8. '(A' → logprob: -18.38023567199707
    9. '('' → logprob: -18.63023567199707
    10. '(result' → logprob: -18.75523567199707

Token 209: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -13.000003814697266
    3. '()' → logprob: -14.500003814697266
    4. '())' → logprob: -14.875003814697266
    5. ' )' → logprob: -15.000003814697266
    6. '))' → logprob: -16.625003814697266
    7. ')`' → logprob: -17.125003814697266
    8. '(' → logprob: -17.625003814697266
    9. ')

' → logprob: -17.625003814697266
    10. '`)' → logprob: -19.125003814697266

Token 210: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012786625884473324
    2. '
' → logprob: -4.387786388397217
    3. ' if' → logprob: -9.137786865234375
    4. 'main' → logprob: -9.887786865234375
    5. '

' → logprob: -10.637786865234375
    6. '\n' → logprob: -10.637786865234375
    7. '<|end|>' → logprob: -10.637786865234375
    8. '```' → logprob: -11.387786865234375
    9. '  
' → logprob: -11.762786865234375
    10. '_' → logprob: -12.137786865234375

Token 211: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008666796493344009
    2. '(' → logprob: -7.375866889953613
    3. '()
' → logprob: -8.375866889953613
    4. '(
' → logprob: -13.125866889953613
    5. '()

' → logprob: -13.625866889953613
    6. ' ()' → logprob: -13.750866889953613
    7. '()\' → logprob: -13.750866889953613
    8. '#' → logprob: -13.875866889953613
    9. '```' → logprob: -14.000866889953613
    10. '
' → logprob: -14.750866889953613


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 209
Tokens correctement prédits (1ère position, stricte): 108
Tokens correctement prédits (1ère position, avec adaptation): 111
Tokens correctement prédits (top 10): 178
Précision stricte (1ère position): 51.67%
Précision adaptée (1ère position): 53.11%
Précision (top 10): 85.17%
================================================================================
