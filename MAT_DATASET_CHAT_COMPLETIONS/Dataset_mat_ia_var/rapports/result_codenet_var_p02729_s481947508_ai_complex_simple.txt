================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul
from collections import deque

N, M = map(lambda x: int(''.join(deque(x))), input().split())

f = lambda x: reduce(mul, range(x, x-2, -1), 1) // 2 if x > 1 else 0

result = sum(map(f, (N, M)))
print((lambda x: x)(result))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.534712553024292
    2. 'partial' → logprob: -1.034712553024292
    3. 'reduce' → logprob: -3.034712553024292
    4. ' wraps' → logprob: -5.284712791442871
    5. 'l' → logprob: -5.659712791442871
    6. 'cached' → logprob: -6.909712791442871
    7. 'cache' → logprob: -7.659712791442871
    8. ' partial' → logprob: -8.534712791442871
    9. 'cmp' → logprob: -8.659712791442871
    10. '```' → logprob: -8.784712791442871

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02724074013531208
    2. 'def' → logprob: -4.652240753173828
    3. ' ' → logprob: -5.402240753173828
    4. ',' → logprob: -5.777240753173828
    5. '\' → logprob: -6.152240753173828
    6. 'a' → logprob: -6.527240753173828
    7. '(lambda' → logprob: -6.527240753173828
    8. ' (' → logprob: -6.902240753173828
    9. '_' → logprob: -7.277240753173828
    10. '(
' → logprob: -7.902240753173828

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007980996742844582
    2. '\' → logprob: -5.757980823516846
    3. 'def' → logprob: -7.007980823516846
    4. '```' → logprob: -7.132980823516846
    5. '\(' → logprob: -7.382980823516846
    6. ' ' → logprob: -7.882980823516846
    7. '(
' → logprob: -7.882980823516846
    8. ',' → logprob: -8.507981300354004
    9. ' (' → logprob: -8.507981300354004
    10. '(lambda' → logprob: -8.632981300354004

Token 6: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8273108005523682
    2. ' operator' → logprob: -1.4523108005523682
    3. ' collections' → logprob: -1.8273108005523682
    4. ' itertools' → logprob: -1.8273108005523682
    5. ' os' → logprob: -5.202310562133789
    6. 'operator' → logprob: -7.452310562133789
    7. ' typing' → logprob: -8.452310562133789
    8. ' sys' → logprob: -8.577310562133789
    9. 'math' → logprob: -8.827310562133789
    10. 'collections' → logprob: -8.952310562133789

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0367564894258976
    2. 'import' → logprob: -3.4117565155029297
    3. ' ' → logprob: -6.28675651550293
    4. '.' → logprob: -6.78675651550293
    5. ' .' → logprob: -10.16175651550293
    6. '.import' → logprob: -10.16175651550293
    7. '	import' → logprob: -11.41175651550293
    8. '_import' → logprob: -11.91175651550293
    9. '<|end|>' → logprob: -12.53675651550293
    10. ',' → logprob: -12.91175651550293

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1486223042011261
    2. ' import' → logprob: -2.5236222743988037
    3. ' mul' → logprob: -3.2736222743988037
    4. 'add' → logprob: -4.398622512817383
    5. ' ' → logprob: -5.523622512817383
    6. 'import' → logprob: -6.773622512817383
    7. 'mul' → logprob: -6.773622512817383
    8. ' item' → logprob: -6.898622512817383
    9. ' icon' → logprob: -9.148622512817383
    10. 'item' → logprob: -9.898622512817383

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15050828456878662
    2. '(
' → logprob: -3.275508403778076
    3. '*' → logprob: -3.400508403778076
    4. '\' → logprob: -3.525508403778076
    5. ',' → logprob: -4.400508403778076
    6. '\n' → logprob: -4.775508403778076
    7. '#' → logprob: -4.900508403778076
    8. '`' → logprob: -6.150508403778076
    9. 'def' → logprob: -6.400508403778076
    10. '\(' → logprob: -6.775508403778076

Token 10: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29982367157936096
    2. 'def' → logprob: -1.9248236417770386
    3. '(
' → logprob: -3.424823760986328
    4. '#' → logprob: -4.049823760986328
    5. ',' → logprob: -4.424823760986328
    6. '\' → logprob: -4.424823760986328
    7. 'a' → logprob: -4.799823760986328
    8. 'd' → logprob: -5.174823760986328
    9. '*' → logprob: -5.799823760986328
    10. '`' → logprob: -5.924823760986328

Token 11: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.13093142211437225
    2. 'math' → logprob: -2.3809313774108887
    3. ' itertools' → logprob: -3.5059313774108887
    4. ' functools' → logprob: -8.880931854248047
    5. ' numpy' → logprob: -10.630931854248047
    6. ' ' → logprob: -11.255931854248047
    7. 'it' → logprob: -11.380931854248047
    8. ' typing' → logprob: -11.630931854248047
    9. ' operator' → logprob: -12.005931854248047
    10. 'operator' → logprob: -12.005931854248047

Token 12: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5948418378829956
    2. ' import' → logprob: -0.8448418378829956
    3. '.' → logprob: -4.094841957092285
    4. '.import' → logprob: -6.969841957092285
    5. '```' → logprob: -7.469841957092285
    6. '.Counter' → logprob: -8.219841957092285
    7. '	import' → logprob: -9.094841957092285
    8. '_import' → logprob: -9.844841957092285
    9. ' ' → logprob: -10.594841957092285
    10. '_' → logprob: -11.219841957092285

Token 13: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.8731313347816467
    2. 'deque' → logprob: -1.748131275177002
    3. 'abc' → logprob: -1.873131275177002
    4. ' abc' → logprob: -1.998131275177002
    5. ' deque' → logprob: -3.123131275177002
    6. ' Counter' → logprob: -3.123131275177002
    7. 'Counter' → logprob: -4.498131275177002
    8. ' named' → logprob: -5.248131275177002
    9. 'default' → logprob: -5.248131275177002
    10. 'named' → logprob: -5.498131275177002

Token 14: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13423505425453186
    2. '\' → logprob: -3.384235143661499
    3. '
' → logprob: -3.884235143661499
    4. 'd' → logprob: -4.00923490524292
    5. '```' → logprob: -4.13423490524292
    6. '#' → logprob: -4.88423490524292
    7. '\n' → logprob: -5.00923490524292
    8. 'n' → logprob: -5.50923490524292
    9. '

' → logprob: -6.13423490524292
    10. 'import' → logprob: -6.13423490524292

Token 15: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04510888829827309
    2. 'n' → logprob: -3.9201087951660156
    3. 'd' → logprob: -5.045108795166016
    4. 'a' → logprob: -5.295108795166016
    5. '\' → logprob: -5.795108795166016
    6. '#' → logprob: -6.045108795166016
    7. '```' → logprob: -6.670108795166016
    8. 'result' → logprob: -7.170108795166016
    9. 'numbers' → logprob: -7.420108795166016
    10. '
' → logprob: -7.420108795166016

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2288975566625595
    2. '=' → logprob: -1.8538975715637207
    3. ' ' → logprob: -3.2288975715637207
    4. ',' → logprob: -5.228897571563721
    5. '_' → logprob: -7.103897571563721
    6. ' ,' → logprob: -7.228897571563721
    7. '  ' → logprob: -7.353897571563721
    8. 'u' → logprob: -8.603897094726562
    9. ')' → logprob: -9.228897094726562
    10. '.' → logprob: -9.228897094726562

Token 17: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.0998932346701622
    2. ' ' → logprob: -3.22489333152771
    3. 'K' → logprob: -3.34989333152771
    4. 'input' → logprob: -5.099893093109131
    5. ' M' → logprob: -5.349893093109131
    6. '  ' → logprob: -6.349893093109131
    7. '=' → logprob: -6.599893093109131
    8. ' =' → logprob: -6.724893093109131
    9. ' k' → logprob: -7.099893093109131
    10. 'M' → logprob: -7.724893093109131

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07901283353567123
    2. '=' → logprob: -2.579012870788574
    3. ',' → logprob: -9.079012870788574
    4. ' ,' → logprob: -13.079012870788574
    5. ' =
' → logprob: -13.329012870788574
    6. '<|end|>' → logprob: -13.454012870788574
    7. ' ' → logprob: -13.954012870788574
    8. ')' → logprob: -14.079012870788574
    9. '=input' → logprob: -14.329012870788574
    10. ' =)' → logprob: -14.704012870788574

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.028609247878193855
    2. 'map' → logprob: -3.653609275817871
    3. ' ' → logprob: -6.278609275817871
    4. ' input' → logprob: -8.528609275817871
    5. '10' → logprob: -9.528609275817871
    6. '0' → logprob: -9.528609275817871
    7. 'input' → logprob: -9.903609275817871
    8. ' int' → logprob: -11.403609275817871
    9. '5' → logprob: -11.903609275817871
    10. ' list' → logprob: -12.153609275817871

Token 20: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07410383969545364
    2. '(' → logprob: -2.699103832244873
    3. '(str' → logprob: -5.949103832244873
    4. '(input' → logprob: -7.074103832244873
    5. '(lambda' → logprob: -7.949103832244873
    6. 'int' → logprob: -8.324104309082031
    7. 'input' → logprob: -10.574104309082031
    8. '<int' → logprob: -11.074104309082031
    9. '[int' → logprob: -11.449104309082031
    10. '```' → logprob: -11.574104309082031

Token 21: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3868998885154724
    2. 'x' → logprob: -1.1368999481201172
    3. ' s' → logprob: -11.136899948120117
    4. 'int' → logprob: -12.261899948120117
    5. ' int' → logprob: -12.761899948120117
    6. 's' → logprob: -12.886899948120117
    7. ':' → logprob: -13.261899948120117
    8. ' input' → logprob: -14.761899948120117
    9. ' a' → logprob: -14.886899948120117
    10. 'a' → logprob: -15.011899948120117

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005148008465766907
    2. ':int' → logprob: -5.505147933959961
    3. ' :' → logprob: -6.880147933959961
    4. ':x' → logprob: -10.255147933959961
    5. 'int' → logprob: -12.880147933959961
    6. ':str' → logprob: -14.755147933959961
    7. ':
' → logprob: -15.005147933959961
    8. '=int' → logprob: -15.005147933959961
    9. 'x' → logprob: -15.005147933959961
    10. ' x' → logprob: -15.255147933959961

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1898680180311203
    2. ' int' → logprob: -1.8148679733276367
    3. 'x' → logprob: -5.314867973327637
    4. ' x' → logprob: -5.314867973327637
    5. 'input' → logprob: -9.689867973327637
    6. '(int' → logprob: -9.814867973327637
    7. ' input' → logprob: -10.814867973327637
    8. 'str' → logprob: -11.439867973327637
    9. 'N' → logprob: -11.564867973327637
    10. ':int' → logprob: -11.689867973327637

Token 24: '('' (ID: 706)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005474337958730757
    2. '(' → logprob: -7.750547409057617
    3. ',' → logprob: -10.000547409057617
    4. 'x' → logprob: -10.375547409057617
    5. ')' → logprob: -10.750547409057617
    6. ',x' → logprob: -11.125547409057617
    7. '),' → logprob: -13.625547409057617
    8. ' (' → logprob: -13.750547409057617
    9. ')x' → logprob: -14.625547409057617
    10. ')(' → logprob: -15.750547409057617

Token 25: ''.' (ID: 6120)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06222860887646675
    2. '(x' → logprob: -3.0622286796569824
    3. '0' → logprob: -4.937228679656982
    4. ''x' → logprob: -5.812228679656982
    5. ' x' → logprob: -6.937228679656982
    6. ''+' → logprob: -6.937228679656982
    7. ''' → logprob: -7.187228679656982
    8. '1' → logprob: -8.687228202819824
    9. '{x' → logprob: -9.062228202819824
    10. ''.' → logprob: -9.437228202819824

Token 26: 'join' (ID: 10891)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.397739976644516
    2. 'join' → logprob: -1.1477400064468384
    3. 'z' → logprob: -6.022739887237549
    4. 'r' → logprob: -6.147739887237549
    5. 'l' → logprob: -6.272739887237549
    6. 'split' → logprob: -6.647739887237549
    7. 'isdigit' → logprob: -6.772739887237549
    8. 'x' → logprob: -6.897739887237549
    9. 'rstrip' → logprob: -7.897739887237549
    10. 'format' → logprob: -8.272740364074707

Token 27: '(de' (ID: 20586)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011487611569464207
    2. '(x' → logprob: -5.0114874839782715
    3. '[x' → logprob: -6.0114874839782715
    4. 'filter' → logprob: -6.1364874839782715
    5. '(filter' → logprob: -10.01148796081543
    6. 'list' → logprob: -10.26148796081543
    7. 'deque' → logprob: -10.51148796081543
    8. ' x' → logprob: -12.01148796081543
    9. '['' → logprob: -12.13648796081543
    10. ')' → logprob: -12.38648796081543

Token 28: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.25760936737060547
    2. 'q' → logprob: -2.0076093673706055
    3. 'c' → logprob: -3.2576093673706055
    4. 'f' → logprob: -4.0076093673706055
    5. 'x' → logprob: -4.3826093673706055
    6. 'v' → logprob: -4.7576093673706055
    7. 'ques' → logprob: -5.0076093673706055
    8. 'l' → logprob: -6.1326093673706055
    9. 'list' → logprob: -6.8826093673706055
    10. '[' → logprob: -6.8826093673706055

Token 29: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2855928838253021
    2. '([' → logprob: -1.6605929136276245
    3. '(re' → logprob: -4.160593032836914
    4. '(max' → logprob: -4.660593032836914
    5. '(list' → logprob: -4.785593032836914
    6. '(['' → logprob: -4.785593032836914
    7. '((' → logprob: -5.035593032836914
    8. '(str' → logprob: -6.410593032836914
    9. '(sorted' → logprob: -6.410593032836914
    10. '(chr' → logprob: -6.410593032836914

Token 30: '))),' (ID: 85891)
  Prédit: ')),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.2378237247467041
    2. ',' → logprob: -2.487823724746704
    3. '[::-' → logprob: -3.487823724746704
    4. ')' → logprob: -3.862823724746704
    5. '(re' → logprob: -3.987823724746704
    6. ').' → logprob: -4.237823486328125
    7. ')))' → logprob: -4.362823486328125
    8. ',re' → logprob: -4.987823486328125
    9. '))),' → logprob: -5.112823486328125
    10. '))' → logprob: -5.612823486328125

Token 31: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3133864998817444
    2. ' input' → logprob: -1.3133864402770996
    3. '(input' → logprob: -9.563386917114258
    4. ' ' → logprob: -10.438386917114258
    5. 'str' → logprob: -11.938386917114258
    6. ')' → logprob: -12.563386917114258
    7. 'range' → logprob: -13.063386917114258
    8. '[input' → logprob: -13.188386917114258
    9. ' (' → logprob: -13.688386917114258
    10. 'open' → logprob: -13.688386917114258

Token 32: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023487014696002007
    2. ')' → logprob: -4.148487091064453
    3. '()' → logprob: -5.273487091064453
    4. '()))' → logprob: -6.523487091064453
    5. '().' → logprob: -7.648487091064453
    6. '))' → logprob: -8.148487091064453
    7. '());' → logprob: -10.773487091064453
    8. '(' → logprob: -11.523487091064453
    9. '();)' → logprob: -11.773487091064453
    10. '())
' → logprob: -12.148487091064453

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16068561375141144
    2. 'strip' → logprob: -1.910685658454895
    3. 'rstrip' → logprob: -8.160685539245605
    4. 'read' → logprob: -8.785685539245605
    5. ')' → logprob: -11.535685539245605
    6. ' split' → logprob: -11.910685539245605
    7. 'replace' → logprob: -12.660685539245605
    8. ' strip' → logprob: -13.660685539245605
    9. '```' → logprob: -14.410685539245605
    10. 'rs' → logprob: -14.785685539245605

Token 34: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6938090324401855
    2. '))' → logprob: -0.6938090324401855
    3. '())' → logprob: -7.8188090324401855
    4. '()))' → logprob: -9.318809509277344
    5. ')))' → logprob: -9.318809509277344
    6. '),' → logprob: -10.193809509277344
    7. '(' → logprob: -11.068809509277344
    8. '()' → logprob: -11.943809509277344
    9. '`)' → logprob: -12.693809509277344
    10. ')`' → logprob: -12.943809509277344

Token 35: 'f' (ID: 69)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18224675953388214
    2. ':' → logprob: -3.557246685028076
    3. '
' → logprob: -3.682246685028076
    4. '()' → logprob: -3.807246685028076
    5. 'for' → logprob: -4.557246685028076
    6. '#' → logprob: -4.682246685028076
    7. '(' → logprob: -4.932246685028076
    8. '()
' → logprob: -4.932246685028076
    9. 'if' → logprob: -5.182246685028076
    10. '[' → logprob: -5.182246685028076

Token 36: ' =' (ID: 314)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.8506220579147339
    2. 'r' → logprob: -1.8506220579147339
    3. 'rom' → logprob: -1.8506220579147339
    4. 'u' → logprob: -2.3506221771240234
    5. 'actor' → logprob: -3.4756221771240234
    6. 'or' → logprob: -3.4756221771240234
    7. 'o' → logprob: -3.9756221771240234
    8. 'unc' → logprob: -4.225622177124023
    9. 'act' → logprob: -4.600622177124023
    10. 'n' → logprob: -4.850622177124023

Token 37: ' lambda' (ID: 27871)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.2543652653694153
    2. 'lambda' → logprob: -1.5043652057647705
    3. '(lambda' → logprob: -6.50436544418335
    4. ' lambda' → logprob: -7.87936544418335
    5. 'factor' → logprob: -8.504364967346191
    6. ' reduce' → logprob: -9.129364967346191
    7. '[' → logprob: -10.004364967346191
    8. '1' → logprob: -10.004364967346191
    9. 'partial' → logprob: -10.129364967346191
    10. '[]' → logprob: -10.754364967346191

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05773303285241127
    2. 'lambda' → logprob: -3.6827330589294434
    3. 'n' → logprob: -4.182733058929443
    4. ' x' → logprob: -5.182733058929443
    5. 'reduce' → logprob: -5.182733058929443
    6. ' lambda' → logprob: -6.057733058929443
    7. 'mul' → logprob: -7.432733058929443
    8. 'a' → logprob: -7.932733058929443
    9. 'i' → logprob: -7.932733058929443
    10. ' n' → logprob: -8.932732582092285

Token 39: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002061522798612714
    2. ':x' → logprob: -7.252061367034912
    3. ' :' → logprob: -7.377061367034912
    4. ',' → logprob: -8.50206184387207
    5. ':f' → logprob: -8.50206184387207
    6. ',:' → logprob: -9.00206184387207
    7. ':n' → logprob: -9.50206184387207
    8. ',x' → logprob: -11.12706184387207
    9. ':max' → logprob: -11.25206184387207
    10. ':m' → logprob: -11.62706184387207

Token 40: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.007220515049993992
    2. '1' → logprob: -5.88222074508667
    3. ' reduce' → logprob: -5.88222074508667
    4. 'x' → logprob: -6.63222074508667
    5. 'mul' → logprob: -9.507220268249512
    6. '0' → logprob: -9.632220268249512
    7. 'factor' → logprob: -10.382220268249512
    8. ' ' → logprob: -10.507220268249512
    9. '(' → logprob: -11.007220268249512
    10. 'f' → logprob: -11.257220268249512

Token 41: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.14598189294338226
    2. '(' → logprob: -2.020981788635254
    3. '(lambda' → logprob: -5.770981788635254
    4. '(operator' → logprob: -9.145981788635254
    5. '(mu' → logprob: -9.895981788635254
    6. '(mult' → logprob: -11.395981788635254
    7. 'mul' → logprob: -12.270981788635254
    8. '_mul' → logprob: -12.270981788635254
    9. '(
' → logprob: -13.395981788635254
    10. '	m' → logprob: -14.020981788635254

Token 42: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.8624639324116288e-06
    2. '<ul' → logprob: -13.875001907348633
    3. ' ul' → logprob: -15.000001907348633
    4. 'mul' → logprob: -15.125001907348633
    5. 'u' → logprob: -16.375001907348633
    6. 'ult' → logprob: -16.500001907348633
    7. ' mul' → logprob: -16.875001907348633
    8. '.ul' → logprob: -17.125001907348633
    9. 'ул' → logprob: -17.375001907348633
    10. 'ultiply' → logprob: -18.000001907348633

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018790162866935134
    2. ',[' → logprob: -6.3768792152404785
    3. ',x' → logprob: -9.37687873840332
    4. 'range' → logprob: -9.75187873840332
    5. ' ,' → logprob: -11.50187873840332
    6. '(range' → logprob: -11.50187873840332
    7. ' range' → logprob: -13.00187873840332
    8. ',list' → logprob: -13.50187873840332
    9. ',['' → logprob: -13.50187873840332
    10. ',map' → logprob: -13.50187873840332

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0878489017486572
    2. ' range' → logprob: -1.2128489017486572
    3. 'x' → logprob: -2.0878489017486572
    4. '(range' → logprob: -2.2128489017486572
    5. '[' → logprob: -3.2128489017486572
    6. ' x' → logprob: -3.3378489017486572
    7. '[x' → logprob: -3.7128489017486572
    8. ' [' → logprob: -4.212848663330078
    9. '(x' → logprob: -4.837848663330078
    10. ')' → logprob: -5.962848663330078

Token 45: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.3954463510308415e-05
    2. '(x' → logprob: -9.875054359436035
    3. '1' → logprob: -13.125054359436035
    4. ' (' → logprob: -15.250054359436035
    5. ',' → logprob: -16.87505340576172
    6. '(n' → logprob: -17.25005340576172
    7. '(f' → logprob: -17.62505340576172
    8. 'f' → logprob: -17.62505340576172
    9. '((' → logprob: -17.62505340576172
    10. '(N' → logprob: -17.62505340576172

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13570190966129303
    2. '1' → logprob: -2.135701894760132
    3. ' ,' → logprob: -5.260702133178711
    4. '+' → logprob: -6.260702133178711
    5. ' ' → logprob: -6.760702133178711
    6. '(' → logprob: -8.510702133178711
    7. ' +' → logprob: -8.760702133178711
    8. '+,' → logprob: -10.760702133178711
    9. '2' → logprob: -11.010702133178711
    10. '),' → logprob: -11.323202133178711

Token 47: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09345005452632904
    2. '1' → logprob: -2.4684500694274902
    3. ' x' → logprob: -6.09345006942749
    4. '0' → logprob: -6.84345006942749
    5. '2' → logprob: -7.09345006942749
    6. ' ' → logprob: -8.843449592590332
    7. 'N' → logprob: -8.843449592590332
    8. '(x' → logprob: -10.968449592590332
    9. ',' → logprob: -12.218449592590332
    10. '```' → logprob: -12.343449592590332

Token 48: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22362974286079407
    2. '-' → logprob: -2.5986297130584717
    3. ',' → logprob: -2.7236297130584717
    4. '-N' → logprob: -3.8486297130584717
    5. ' -' → logprob: -4.348629951477051
    6. '-M' → logprob: -4.348629951477051
    7. ' +' → logprob: -4.473629951477051
    8. 'x' → logprob: -7.848629951477051
    9. 'N' → logprob: -8.34862995147705
    10. '1' → logprob: -8.72362995147705

Token 49: '2' (ID: 17)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.30981072783470154
    2. '5' → logprob: -2.5598106384277344
    3. '3' → logprob: -2.6848106384277344
    4. 'N' → logprob: -2.9348106384277344
    5. '4' → logprob: -3.3098106384277344
    6. '7' → logprob: -5.184810638427734
    7. '1' → logprob: -5.184810638427734
    8. '6' → logprob: -5.309810638427734
    9. '-M' → logprob: -5.934810638427734
    10. '10' → logprob: -6.059810638427734

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1982179433107376
    2. '+' → logprob: -2.0732178688049316
    3. ',-' → logprob: -3.8232178688049316
    4. ' +' → logprob: -4.448217868804932
    5. '1' → logprob: -5.073217868804932
    6. '-' → logprob: -5.323217868804932
    7. '0' → logprob: -5.823217868804932
    8. 'x' → logprob: -6.073217868804932
    9. ' -' → logprob: -6.448217868804932
    10. ' ,' → logprob: -7.073217868804932

Token 51: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0974150896072388
    2. ' -' → logprob: -1.0974150896072388
    3. ' ' → logprob: -1.7224150896072388
    4. '0' → logprob: -1.9724150896072388
    5. '1' → logprob: -4.222414970397949
    6. '```' → logprob: -9.97241497039795
    7. '2' → logprob: -10.34741497039795
    8. '+' → logprob: -11.22241497039795
    9. 'None' → logprob: -12.22241497039795
    10. ')' → logprob: -12.65991497039795

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014991489006206393
    2. ' ' → logprob: -6.626499176025391
    3. '2' → logprob: -9.12649917602539
    4. '0' → logprob: -10.81399917602539
    5. '<|end|>' → logprob: -11.56399917602539
    6. '3' → logprob: -11.93899917602539
    7. '<|end|>' → logprob: -12.18899917602539
    8. ' -' → logprob: -12.31399917602539
    9. '```' → logprob: -12.87649917602539
    10. '  ' → logprob: -13.25149917602539

Token 53: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.062429092824459076
    2. '))' → logprob: -3.062429189682007
    3. ')' → logprob: -4.312428951263428
    4. ',' → logprob: -8.437429428100586
    5. '+' → logprob: -10.062429428100586
    6. ' ),' → logprob: -10.312429428100586
    7. ')))' → logprob: -11.687429428100586
    8. '1' → logprob: -11.687429428100586
    9. '2' → logprob: -12.062429428100586
    10. '3' → logprob: -12.562429428100586

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01604105532169342
    2. ' ' → logprob: -4.141041278839111
    3. '2' → logprob: -12.516040802001953
    4. ')' → logprob: -13.766040802001953
    5. '  ' → logprob: -14.703540802001953
    6. '   ' → logprob: -14.766040802001953
    7. ' ' → logprob: -15.703540802001953
    8. '3' → logprob: -15.891040802001953
    9. '	' → logprob: -16.328540802001953
    10. 'M' → logprob: -16.391040802001953

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.875021934509277
    3. '2' → logprob: -14.000021934509277
    4. ')' → logprob: -14.000021934509277
    5. '   ' → logprob: -14.875021934509277
    6. '  ' → logprob: -15.562521934509277
    7. '3' → logprob: -16.81252098083496
    8. 'N' → logprob: -17.12502098083496
    9. '	' → logprob: -17.31252098083496
    10. 'M' → logprob: -17.50002098083496

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ' )' → logprob: -12.125009536743164
    3. ')
' → logprob: -13.125009536743164
    4. '*' → logprob: -15.125009536743164
    5. '**' → logprob: -15.500009536743164
    6. ')

' → logprob: -15.750009536743164
    7. ')`' → logprob: -15.875009536743164
    8. '))' → logprob: -16.250009536743164
    9. ')**' → logprob: -16.250009536743164
    10. '),' → logprob: -16.250009536743164

Token 57: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05846526473760605
    2. '(' → logprob: -3.1834652423858643
    3. '*' → logprob: -4.558465480804443
    4. ' ' → logprob: -5.933465480804443
    5. '+' → logprob: -7.683465480804443
    6. '<|end|>' → logprob: -7.808465480804443
    7. '[' → logprob: -7.933465480804443
    8. '**' → logprob: -8.683465003967285
    9. '2' → logprob: -9.308465003967285
    10. '
' → logprob: -9.558465003967285

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7874521613121033
    2. 'reduce' → logprob: -0.7874521613121033
    3. '3' → logprob: -3.537452220916748
    4. 'f' → logprob: -3.787452220916748
    5. '6' → logprob: -4.537452220916748
    6. '1' → logprob: -4.787452220916748
    7. 'factor' → logprob: -5.162452220916748
    8. '(f' → logprob: -5.537452220916748
    9. '(' → logprob: -5.662452220916748
    10. '4' → logprob: -6.037452220916748

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4271394610404968
    2. 'reduce' → logprob: -1.1771395206451416
    3. '3' → logprob: -3.9271395206451416
    4. 'f' → logprob: -4.6771392822265625
    5. '1' → logprob: -5.5521392822265625
    6. '(' → logprob: -6.4271392822265625
    7. 'factor' → logprob: -6.5521392822265625
    8. '6' → logprob: -6.6771392822265625
    9. '(f' → logprob: -7.0521392822265625
    10. 're' → logprob: -7.6771392822265625

Token 60: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1295539289712906
    2. '*' → logprob: -2.629554033279419
    3. '<|end|>' → logprob: -4.12955379486084
    4. '(' → logprob: -4.25455379486084
    5. '+' → logprob: -4.75455379486084
    6. ' ' → logprob: -5.62955379486084
    7. '[' → logprob: -6.37955379486084
    8. '
' → logprob: -6.50455379486084
    9. '**' → logprob: -7.37955379486084
    10. '```' → logprob: -7.75455379486084

Token 61: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47412508726119995
    2. ' x' → logprob: -0.9741250872612
    3. 'N' → logprob: -10.849124908447266
    4. ' ' → logprob: -11.474124908447266
    5. 'M' → logprob: -12.349124908447266
    6. ' N' → logprob: -12.599124908447266
    7. ' M' → logprob: -12.974124908447266
    8. '(x' → logprob: -13.099124908447266
    9. '0' → logprob: -13.599124908447266
    10. '2' → logprob: -13.974124908447266

Token 62: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6249788999557495
    2. '>=' → logprob: -0.8749788999557495
    3. '>' → logprob: -3.624979019165039
    4. ' >' → logprob: -3.874979019165039
    5. ' ' → logprob: -8.499979019165039
    6. '[' → logprob: -9.874979019165039
    7. '  ' → logprob: -10.499979019165039
    8. '==' → logprob: -10.624979019165039
    9. '   ' → logprob: -11.187479019165039
    10. '≥' → logprob: -11.624979019165039

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005129269324243069
    2. ' ' → logprob: -5.630129337310791
    3. '2' → logprob: -6.755129337310791
    4. '=' → logprob: -8.255128860473633
    5. '0' → logprob: -9.380128860473633
    6. '>' → logprob: -12.255128860473633
    7. '3' → logprob: -12.630128860473633
    8. '4' → logprob: -12.755128860473633
    9. '<|end|>' → logprob: -13.505128860473633
    10. '  ' → logprob: -13.880128860473633

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039010290056467056
    2. '2' → logprob: -3.2890102863311768
    3. ' ' → logprob: -7.539010524749756
    4. '3' → logprob: -8.039010047912598
    5. '4' → logprob: -9.914010047912598
    6. '0' → logprob: -10.414010047912598
    7. '<|end|>' → logprob: -11.914010047912598
    8. '```' → logprob: -12.914010047912598
    9. '...' → logprob: -12.976510047912598
    10. '>' → logprob: -12.976510047912598

Token 65: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.04897213354706764
    2. 'else' → logprob: -3.0489721298217773
    3. '+' → logprob: -8.673972129821777
    4. '-' → logprob: -8.923972129821777
    5. ' ' → logprob: -10.298972129821777
    6. ':' → logprob: -11.423972129821777
    7. '	else' → logprob: -12.298972129821777
    8. '0' → logprob: -12.673972129821777
    9. '```' → logprob: -12.673972129821777
    10. ' ' → logprob: -12.923972129821777

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10568001121282578
    2. ' ' → logprob: -2.480679988861084
    3. '1' → logprob: -4.105679988861084
    4. 'x' → logprob: -9.355680465698242
    5. ' x' → logprob: -10.855680465698242
    6. '   ' → logprob: -12.293180465698242
    7. '  ' → logprob: -12.855680465698242
    8. '    ' → logprob: -13.730680465698242
    9. ' ' → logprob: -13.980680465698242
    10. 'N' → logprob: -14.418180465698242

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016922133043408394
    2. '1' → logprob: -4.1419219970703125
    3. ' ' → logprob: -7.2669219970703125
    4. 'x' → logprob: -8.641921997070312
    5. ' x' → logprob: -12.891921997070312
    6. 'N' → logprob: -13.391921997070312
    7. 'int' → logprob: -13.454421997070312
    8. 'f' → logprob: -14.329421997070312
    9. '   ' → logprob: -14.516921997070312
    10. '2' → logprob: -14.516921997070312

Token 68: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.741376519203186
    2. '<|end|>' → logprob: -0.866376519203186
    3. ' ' → logprob: -3.2413763999938965
    4. '(' → logprob: -3.6163763999938965
    5. '\n' → logprob: -4.4913763999938965
    6. '
' → logprob: -4.6163763999938965
    7. '\' → logprob: -5.3663763999938965
    8. ' 
' → logprob: -6.4913763999938965
    9. '[' → logprob: -6.8663763999938965
    10. '*' → logprob: -6.8663763999938965

Token 69: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6342396140098572
    2. 'a' → logprob: -2.259239673614502
    3. 'result' → logprob: -2.259239673614502
    4. 'for' → logprob: -2.259239673614502
    5. 'n' → logprob: -3.009239673614502
    6. 'answer' → logprob: -4.009239673614502
    7. 'x' → logprob: -4.259239673614502
    8. 'p' → logprob: -4.509239673614502
    9. 'r' → logprob: -4.884239673614502
    10. 'C' → logprob: -5.134239673614502

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09163358062505722
    2. '=' → logprob: -2.5916335582733154
    3. '(' → logprob: -4.4666337966918945
    4. ' +=' → logprob: -8.216633796691895
    5. '_' → logprob: -8.341633796691895
    6. '[' → logprob: -8.341633796691895
    7. 's' → logprob: -8.716633796691895
    8. ')' → logprob: -9.591633796691895
    9. ' ' → logprob: -9.591633796691895
    10. ' (' → logprob: -10.591633796691895

Token 71: ' sum' (ID: 4215)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.47724491357803345
    2. 'f' → logprob: -1.2272448539733887
    3. '0' → logprob: -3.7272448539733887
    4. ' sum' → logprob: -3.9772448539733887
    5. 'sum' → logprob: -3.9772448539733887
    6. ' N' → logprob: -4.727244853973389
    7. ' ' → logprob: -4.727244853973389
    8. 'N' → logprob: -5.352244853973389
    9. ' max' → logprob: -7.227244853973389
    10. ' M' → logprob: -7.602244853973389

Token 72: '(map' (ID: 16946)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.005710608791559935
    2. '(' → logprob: -5.380710601806641
    3. '([' → logprob: -7.130710601806641
    4. '((' → logprob: -9.13071060180664
    5. '(map' → logprob: -9.75571060180664
    6. '(range' → logprob: -9.75571060180664
    7. 'f' → logprob: -11.00571060180664
    8. '(lambda' → logprob: -11.25571060180664
    9. '(m' → logprob: -11.75571060180664
    10. '(x' → logprob: -12.50571060180664

Token 73: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.003214665222913027
    2. '(lambda' → logprob: -5.7532148361206055
    3. 'f' → logprob: -10.378214836120605
    4. '(' → logprob: -12.128214836120605
    5. 'lambda' → logprob: -16.00321388244629
    6. '(int' → logprob: -16.50321388244629
    7. '(
' → logprob: -17.37821388244629
    8. ')' → logprob: -17.50321388244629
    9. '(fun' → logprob: -17.50321388244629
    10. '	f' → logprob: -17.87821388244629

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.309382373117842e-05
    2. 'range' → logprob: -10.750033378601074
    3. ' ,' → logprob: -11.875033378601074
    4. '(range' → logprob: -12.750033378601074
    5. ',int' → logprob: -14.125033378601074
    6. ',[' → logprob: -15.500033378601074
    7. ',M' → logprob: -15.500033378601074
    8. ' range' → logprob: -16.625032424926758
    9. '```' → logprob: -16.625032424926758
    10. ',map' → logprob: -16.625032424926758

Token 75: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03433532267808914
    2. '(range' → logprob: -4.159335136413574
    3. ' range' → logprob: -4.284335136413574
    4. '[' → logprob: -6.034335136413574
    5. '[N' → logprob: -7.659335136413574
    6. '[M' → logprob: -7.784335136413574
    7. ' [' → logprob: -8.034335136413574
    8. '[r' → logprob: -9.534335136413574
    9. '[m' → logprob: -9.659335136413574
    10. '[n' → logprob: -9.784335136413574

Token 76: 'N' (ID: 45)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3721446394920349
    2. 'M' → logprob: -1.8721446990966797
    3. 'deque' → logprob: -3.3721446990966797
    4. '[M' → logprob: -3.4971446990966797
    5. 'N' → logprob: -4.12214469909668
    6. '(range' → logprob: -4.37214469909668
    7. 'map' → logprob: -4.49714469909668
    8. ' range' → logprob: -4.74714469909668
    9. '[int' → logprob: -4.99714469909668
    10. '[i' → logprob: -5.12214469909668

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9011455178260803
    2. '-' → logprob: -1.5261454582214355
    3. ' -' → logprob: -1.6511454582214355
    4. '-i' → logprob: -2.5261454582214355
    5. '+' → logprob: -3.0261454582214355
    6. '+i' → logprob: -3.7761454582214355
    7. '-M' → logprob: -4.1511454582214355
    8. ' +' → logprob: -4.5261454582214355
    9. '-k' → logprob: -6.4011454582214355
    10. ' ,' → logprob: -6.9011454582214355

Token 78: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.34857451915740967
    2. 'M' → logprob: -1.2235745191574097
    3. ' ' → logprob: -9.7235746383667
    4. ' N' → logprob: -10.7235746383667
    5. 'N' → logprob: -10.8485746383667
    6. ' ' → logprob: -11.2235746383667
    7. ')' → logprob: -12.4110746383667
    8. '   ' → logprob: -13.2860746383667
    9. '  ' → logprob: -13.4735746383667
    10. ',' → logprob: -13.5985746383667

Token 79: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.20221281051635742
    2. '))' → logprob: -1.7022128105163574
    3. ',' → logprob: -7.952212810516357
    4. ')' → logprob: -8.077213287353516
    5. ')))
' → logprob: -9.702213287353516
    6. ')))

' → logprob: -10.452213287353516
    7. '))
' → logprob: -11.577213287353516
    8. '))))' → logprob: -11.827213287353516
    9. ' ))' → logprob: -11.952213287353516
    10. ')));' → logprob: -11.952213287353516

Token 80: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1912018209695816
    2. ')' → logprob: -1.8162018060684204
    3. '
' → logprob: -5.441201686859131
    4. ' print' → logprob: -6.316201686859131
    5. '<|end|>' → logprob: -6.316201686859131
    6. '%' → logprob: -6.691201686859131
    7. '+' → logprob: -6.941201686859131
    8. '*' → logprob: -7.691201686859131
    9. '#' → logprob: -8.441202163696289
    10. '```' → logprob: -9.191202163696289

Token 81: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011755209416151047
    2. '(result' → logprob: -4.511754989624023
    3. '("("' → logprob: -8.136754989624023
    4. '('' → logprob: -8.636754989624023
    5. '(f' → logprob: -9.386754989624023
    6. '()' → logprob: -10.386754989624023
    7. '(.' → logprob: -10.636754989624023
    8. '((' → logprob: -10.636754989624023
    9. '(print' → logprob: -11.011754989624023
    10. '(end' → logprob: -11.636754989624023

Token 82: 'lambda' (ID: 35280)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.215493306517601
    2. ' result' → logprob: -1.9654933214187622
    3. 'N' → logprob: -3.4654932022094727
    4. ' N' → logprob: -3.9654932022094727
    5. ' ' → logprob: -7.340493202209473
    6. ' (' → logprob: -7.840493202209473
    7. 'abs' → logprob: -8.215493202209473
    8. 'max' → logprob: -8.340493202209473
    9. ''N' → logprob: -8.590493202209473
    10. ' max' → logprob: -8.590493202209473

Token 83: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9798593521118164
    2. ' result' → logprob: -0.9798593521118164
    3. 'result' → logprob: -2.6048593521118164
    4. ' lambda' → logprob: -2.6048593521118164
    5. 'x' → logprob: -3.1048593521118164
    6. 'lambda' → logprob: -4.229859352111816
    7. ' n' → logprob: -4.729859352111816
    8. ' max' → logprob: -4.854859352111816
    9. ' N' → logprob: -4.979859352111816
    10. ' abs' → logprob: -5.729859352111816

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008266913704574108
    2. ',' → logprob: -5.508266925811768
    3. ' :' → logprob: -5.883266925811768
    4. ':x' → logprob: -6.883266925811768
    5. 'x' → logprob: -9.00826644897461
    6. ' x' → logprob: -10.13326644897461
    7. ':N' → logprob: -10.38326644897461
    8. 'N' → logprob: -10.63326644897461
    9. '=' → logprob: -11.00826644897461
    10. ':int' → logprob: -11.00826644897461

Token 85: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6390508413314819
    2. 'x' → logprob: -1.139050841331482
    3. ''' → logprob: -3.8890509605407715
    4. ' f' → logprob: -4.1390509605407715
    5. ' N' → logprob: -4.3890509605407715
    6. 'f' → logprob: -4.5140509605407715
    7. ' ' → logprob: -4.6390509605407715
    8. ' (' → logprob: -4.7640509605407715
    9. 'str' → logprob: -4.8890509605407715
    10. '"' → logprob: -4.8890509605407715

Token 86: ')(' (ID: 4898)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8549554944038391
    2. ' if' → logprob: -2.1049554347991943
    3. '*(' → logprob: -2.2299554347991943
    4. '*' → logprob: -2.4799554347991943
    5. ' -' → logprob: -2.6049554347991943
    6. '+' → logprob: -2.7299554347991943
    7. ' *' → logprob: -2.9799554347991943
    8. ' +' → logprob: -3.9799554347991943
    9. 'if' → logprob: -4.854955673217773
    10. '>' → logprob: -5.229955673217773

Token 87: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14275339245796204
    2. ' result' → logprob: -2.0177533626556396
    3. '(result' → logprob: -9.892753601074219
    4. ' ' → logprob: -11.267753601074219
    5. ')' → logprob: -12.767753601074219
    6. 'N' → logprob: -13.642753601074219
    7. '   ' → logprob: -13.767753601074219
    8. ' N' → logprob: -13.767753601074219
    9. ' (' → logprob: -13.892753601074219
    10. 'Result' → logprob: -13.955253601074219

Token 88: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759944915771484
    2. ')' → logprob: -0.8259944915771484
    3. ')))' → logprob: -10.075994491577148
    4. ' )' → logprob: -12.450994491577148
    5. ')
' → logprob: -12.450994491577148
    6. '))
' → logprob: -13.450994491577148
    7. ' ))' → logprob: -13.825994491577148
    8. '+' → logprob: -14.450994491577148
    9. '),' → logprob: -14.950994491577148
    10. ')`' → logprob: -15.200994491577148


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 38.37%
Précision adaptée (1ère position): 38.37%
Précision (top 10): 76.74%
================================================================================
