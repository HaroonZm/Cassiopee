================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10000000)
from collections import deque
import itertools
import heapq

def input_(): return sys.stdin.readline().strip()

class Solution(object):
    def solve(self):
        N = int(input_())
        H = list(map(int,input_().split()))
        idx = N-1
        offset = 0
        f = True
        while idx > 0:
            if (H[idx] - offset) >= H[idx-1]:
                offset = 0
            elif (H[idx] - offset + 1) == H[idx-1]:
                offset = 1
            else:
                print("No")
                return
            idx -= 1
        print("Yes")

def S():
    sol = Solution()
    sol.solve()

if __name__ == "__main__":
    (lambda: S())()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3205606937408447
    2. '.' → logprob: -1.4455606937408447
    3. 'import' → logprob: -4.570560455322266
    4. '\' → logprob: -4.570560455322266
    5. 'newline' → logprob: -5.195560455322266
    6. '<|end|>' → logprob: -5.320560455322266
    7. '
' → logprob: -6.570560455322266
    8. '```' → logprob: -7.070560455322266
    9. '<|end|>' → logprob: -7.195560455322266
    10. '\r' → logprob: -7.195560455322266

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4140441635390744e-05
    2. '(
' → logprob: -11.875014305114746
    3. ' (' → logprob: -12.375014305114746
    4. '(

' → logprob: -13.375014305114746
    5. '("("' → logprob: -15.250014305114746
    6. '((' → logprob: -15.375014305114746
    7. '('' → logprob: -15.500014305114746
    8. '(
' → logprob: -15.750014305114746
    9. '```' → logprob: -16.12501335144043
    10. '(.' → logprob: -16.50001335144043

Token 9: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16023612022399902
    2. '100' → logprob: -1.910236120223999
    3. ' ' → logprob: -12.660236358642578
    4. '500' → logprob: -12.785236358642578
    5. '300' → logprob: -13.285236358642578
    6. '999' → logprob: -13.660236358642578
    7. '1' → logprob: -13.910236358642578
    8. '150' → logprob: -14.285236358642578
    9. '200' → logprob: -14.785236358642578
    10. '(' → logprob: -15.160236358642578

Token 10: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5762532353401184
    2. '00' → logprob: -0.8262532353401184
    3. '000' → logprob: -8.076252937316895
    4. ')' → logprob: -13.201252937316895
    5. '))' → logprob: -14.326252937316895
    6. '1' → logprob: -15.076252937316895
    7. '01' → logprob: -16.95125389099121
    8. '```' → logprob: -17.82625389099121
    9. '50' → logprob: -18.95125389099121
    10. ')))' → logprob: -19.20125389099121

Token 11: '00' (ID: 504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.182190554682165e-05
    2. ')
' → logprob: -10.125061988830566
    3. '0' → logprob: -11.000061988830566
    4. ' )' → logprob: -12.625061988830566
    5. '```' → logprob: -15.125061988830566
    6. ')
' → logprob: -15.250061988830566
    7. '))' → logprob: -15.250061988830566
    8. ')

' → logprob: -15.375061988830566
    9. '`)' → logprob: -15.750061988830566
    10. ')`' → logprob: -16.25006103515625

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. '))' → logprob: -12.750004768371582
    3. ' )' → logprob: -14.250004768371582
    4. ')
' → logprob: -14.375004768371582
    5. '`)' → logprob: -14.750004768371582
    6. '```' → logprob: -15.875004768371582
    7. '(' → logprob: -16.2500057220459
    8. ')`' → logprob: -16.3750057220459
    9. '')' → logprob: -16.5000057220459
    10. '()' → logprob: -17.3750057220459

Token 13: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5097714066505432
    2. '\n' → logprob: -1.7597713470458984
    3. '\' → logprob: -2.1347713470458984
    4. '' → logprob: -3.1347713470458984
    5. '```' → logprob: -3.7597713470458984
    6. ')' → logprob: -4.759771347045898
    7. '#' → logprob: -4.759771347045898
    8. '
' → logprob: -4.884771347045898
    9. '(' → logprob: -5.634771347045898
    10. '  
' → logprob: -6.259771347045898

Token 14: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.3633716106414795
    2. ' math' → logprob: -1.4883716106414795
    3. ' functools' → logprob: -3.1133716106414795
    4. 'collections' → logprob: -4.488371849060059
    5. ' itertools' → logprob: -4.863371849060059
    6. ' ' → logprob: -4.988371849060059
    7. ' threading' → logprob: -6.363371849060059
    8. ' random' → logprob: -6.488371849060059
    9. ' os' → logprob: -6.613371849060059
    10. ' numpy' → logprob: -7.363371849060059

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04956823214888573
    2. 'import' → logprob: -3.0495681762695312
    3. '.' → logprob: -7.424568176269531
    4. ' ' → logprob: -8.299568176269531
    5. '```' → logprob: -9.924568176269531
    6. '.Counter' → logprob: -10.299568176269531
    7. ' .' → logprob: -11.174568176269531
    8. '.import' → logprob: -11.549568176269531
    9. '	import' → logprob: -11.549568176269531
    10. ' defaultdict' → logprob: -12.424568176269531

Token 16: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.10044367611408234
    2. 'deque' → logprob: -2.6004436016082764
    3. ' defaultdict' → logprob: -3.8504436016082764
    4. ' abc' → logprob: -10.225443840026855
    5. 'abc' → logprob: -11.975443840026855
    6. 'de' → logprob: -12.725443840026855
    7. ' Counter' → logprob: -12.975443840026855
    8. 'default' → logprob: -12.975443840026855
    9. 'Counter' → logprob: -13.850443840026855
    10. '```' → logprob: -14.725443840026855

Token 17: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5039689540863037
    2. '

' → logprob: -2.0039689540863037
    3. '\' → logprob: -3.0039689540863037
    4. 'deque' → logprob: -3.0039689540863037
    5. 'def' → logprob: -3.2539689540863037
    6. 'newline' → logprob: -3.3789689540863037
    7. 'import' → logprob: -3.7539689540863037
    8. '\n' → logprob: -4.128969192504883
    9. 'd' → logprob: -4.253969192504883
    10. '' → logprob: -4.503969192504883

Token 18: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0254489183425903
    2. 'def' → logprob: -1.2754489183425903
    3. '

' → logprob: -2.275448799133301
    4. 'import' → logprob: -2.525448799133301
    5. '```' → logprob: -2.525448799133301
    6. 'd' → logprob: -3.525448799133301
    7. 'deque' → logprob: -3.775448799133301
    8. '\' → logprob: -4.150448799133301
    9. '' → logprob: -4.900448799133301
    10. '\n' → logprob: -5.275448799133301

Token 19: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9662331342697144
    2. ' os' → logprob: -1.0912331342697144
    3. ' itertools' → logprob: -1.7162331342697144
    4. ' sys' → logprob: -2.841233253479004
    5. ' heap' → logprob: -3.966233253479004
    6. ' threading' → logprob: -4.091233253479004
    7. ' random' → logprob: -5.966233253479004
    8. ' re' → logprob: -6.091233253479004
    9. ' numpy' → logprob: -6.591233253479004
    10. ' collections' → logprob: -6.716233253479004

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47884756326675415
    2. '\' → logprob: -1.8538475036621094
    3. '

' → logprob: -2.2288475036621094
    4. '\n' → logprob: -2.9788475036621094
    5. '' → logprob: -4.353847503662109
    6. 'import' → logprob: -4.603847503662109
    7. 'def' → logprob: -4.728847503662109
    8. 'newline' → logprob: -4.728847503662109
    9. '```' → logprob: -5.228847503662109
    10. '
' → logprob: -5.478847503662109

Token 21: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42831915616989136
    2. '

' → logprob: -1.4283192157745361
    3. 'import' → logprob: -3.178319215774536
    4. 'def' → logprob: -3.678319215774536
    5. 'n' → logprob: -4.928318977355957
    6. '\n' → logprob: -5.053318977355957
    7. ' 

' → logprob: -5.428318977355957
    8. 'd' → logprob: -5.678318977355957
    9. '\' → logprob: -5.803318977355957
    10. ' 
' → logprob: -5.928318977355957

Token 22: ' heap' (ID: 37237)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.005971573293209076
    2. ' heap' → logprob: -6.005971431732178
    3. ' sys' → logprob: -6.755971431732178
    4. 'math' → logprob: -7.130971431732178
    5. ' functools' → logprob: -7.630971431732178
    6. ' operator' → logprob: -7.630971431732178
    7. ' bis' → logprob: -8.630971908569336
    8. ' re' → logprob: -8.880971908569336
    9. ' copy' → logprob: -9.380971908569336
    10. ' os' → logprob: -10.005971908569336

Token 23: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.5048530030981055e-06
    2. 'queue' → logprob: -14.250001907348633
    3. 't' → logprob: -14.750001907348633
    4. 'p' → logprob: -15.250001907348633
    5. 'f' → logprob: -16.375001907348633
    6. ' queue' → logprob: -18.125001907348633
    7. 'que' → logprob: -18.625001907348633
    8. 's' → logprob: -18.750001907348633
    9. '_queue' → logprob: -19.000001907348633
    10. 'u' → logprob: -19.125001907348633

Token 24: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5960761904716492
    2. '

' → logprob: -0.9710761904716492
    3. 'def' → logprob: -3.596076250076294
    4. 'import' → logprob: -4.346076011657715
    5. '\n' → logprob: -4.846076011657715
    6. '```' → logprob: -5.346076011657715
    7. '\' → logprob: -5.596076011657715
    8. '' → logprob: -5.596076011657715
    9. ' 

' → logprob: -5.971076011657715
    10. '
' → logprob: -6.721076011657715

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07436027377843857
    2. 'd' → logprob: -3.4493603706359863
    3. 'class' → logprob: -4.074360370635986
    4. '
' → logprob: -4.699360370635986
    5. '\' → logprob: -5.449360370635986
    6. '```' → logprob: -5.699360370635986
    7. 'n' → logprob: -5.824360370635986
    8. 'import' → logprob: -7.324360370635986
    9. '\n' → logprob: -7.574360370635986
    10. '#' → logprob: -7.824360370635986

Token 26: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7778889536857605
    2. ' bfs' → logprob: -0.9028889536857605
    3. ' dfs' → logprob: -2.2778890132904053
    4. ' solve' → logprob: -4.152888774871826
    5. ' main' → logprob: -4.402888774871826
    6. ' BFS' → logprob: -6.402888774871826
    7. ' shortest' → logprob: -7.027888774871826
    8. ' solution' → logprob: -7.527888774871826
    9. ' _' → logprob: -8.652889251708984
    10. ' solver' → logprob: -8.777889251708984

Token 27: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17694997787475586
    2. '()' → logprob: -2.051949977874756
    3. '():' → logprob: -3.426949977874756
    4. '("")' → logprob: -8.051950454711914
    5. '("("' → logprob: -8.301950454711914
    6. '().' → logprob: -9.051950454711914
    7. '('' → logprob: -9.176950454711914
    8. '(`' → logprob: -9.301950454711914
    9. '("' → logprob: -9.301950454711914
    10. '(
' → logprob: -10.176950454711914

Token 28: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16386258602142334
    2. '()' → logprob: -1.9138625860214233
    3. '()>' → logprob: -6.663862705230713
    4. '():
' → logprob: -6.788862705230713
    5. '().' → logprob: -7.913862705230713
    6. 'read' → logprob: -8.038862228393555
    7. 'data' → logprob: -8.788862228393555
    8. '()<' → logprob: -9.538862228393555
    9. '):' → logprob: -10.038862228393555
    10. '(' → logprob: -10.163862228393555

Token 29: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07964898645877838
    2. ' input' → logprob: -3.579648971557617
    3. 'input' → logprob: -4.079648971557617
    4. '()' → logprob: -4.329648971557617
    5. ' ()' → logprob: -5.204648971557617
    6. ' 
' → logprob: -5.329648971557617
    7. '    ' → logprob: -6.329648971557617
    8. ' return' → logprob: -6.329648971557617
    9. '<|end|>' → logprob: -6.704648971557617
    10. '   ' → logprob: -7.329648971557617

Token 30: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06843657046556473
    2. 'input' → logprob: -2.818436622619629
    3. ' sys' → logprob: -5.068436622619629
    4. 'sys' → logprob: -9.318436622619629
    5. ' int' → logprob: -10.193436622619629
    6. ' ' → logprob: -11.068436622619629
    7. 'int' → logprob: -11.443436622619629
    8. ' next' → logprob: -14.693436622619629
    9. ' in' → logprob: -14.818436622619629
    10. ' list' → logprob: -15.318436622619629

Token 31: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.093505099765025e-05
    2. '.stdout' → logprob: -10.875020980834961
    3. '.readline' → logprob: -13.625020980834961
    4. 'stdin' → logprob: -15.375020980834961
    5. '.' → logprob: -15.625020980834961
    6. '.std' → logprob: -15.750020980834961
    7. '.argv' → logprob: -16.25002098083496
    8. '.max' → logprob: -17.12502098083496
    9. '.stderr' → logprob: -17.37502098083496
    10. ' stdin' → logprob: -18.00002098083496

Token 32: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.111979357432574e-05
    2. 'read' → logprob: -10.12507152557373
    3. '.read' → logprob: -11.00007152557373
    4. '.' → logprob: -11.25007152557373
    5. ' readline' → logprob: -14.37507152557373
    6. '.readlines' → logprob: -14.62507152557373
    7. 'buffer' → logprob: -16.000070571899414
    8. '.buffer' → logprob: -16.375070571899414
    9. '<|end|>' → logprob: -17.250070571899414
    10. '_read' → logprob: -18.750070571899414

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3135106563568115
    2. '()' → logprob: -1.3135106563568115
    3. '()\' → logprob: -8.43851089477539
    4. '()
' → logprob: -11.06351089477539
    5. '(' → logprob: -11.56351089477539
    6. '()

' → logprob: -12.68851089477539
    7. '()<' → logprob: -14.06351089477539
    8. ' ()' → logprob: -15.06351089477539
    9. 'rstrip' → logprob: -15.06351089477539
    10. '().__' → logprob: -15.18851089477539

Token 34: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07889331132173538
    2. 'rstrip' → logprob: -2.5788934230804443
    3. ' strip' → logprob: -12.578893661499023
    4. 'r' → logprob: -16.828893661499023
    5. 'rst' → logprob: -16.828893661499023
    6. '_strip' → logprob: -18.453893661499023
    7. '(strip' → logprob: -18.453893661499023
    8. '-strip' → logprob: -18.953893661499023
    9. 'replace' → logprob: -18.953893661499023
    10. '.rstrip' → logprob: -19.078893661499023

Token 35: '()

' (ID: 5874)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7979653477668762
    2. '
' → logprob: -0.9229653477668762
    3. '\' → logprob: -2.6729652881622314
    4. '\n' → logprob: -3.2979652881622314
    5. '<|end|>' → logprob: -4.6729655265808105
    6. '<|end|>' → logprob: -4.9229655265808105
    7. '#' → logprob: -5.0479655265808105
    8. '```' → logprob: -5.2979655265808105
    9. '()' → logprob: -5.4229655265808105
    10. '
' → logprob: -5.9229655265808105

Token 36: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011942753568291664
    2. 'n' → logprob: -4.6369428634643555
    3. 'class' → logprob: -6.8869428634643555
    4. '
' → logprob: -7.6369428634643555
    5. 'd' → logprob: -8.261942863464355
    6. '\' → logprob: -8.636942863464355
    7. 'N' → logprob: -9.386942863464355
    8. '```' → logprob: -10.511942863464355
    9. 'ndef' → logprob: -10.636942863464355
    10. '#' → logprob: -10.761942863464355

Token 37: ' Solution' (ID: 20858)
  Prédit: ' Solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.6385131478309631
    2. ' Graph' → logprob: -1.7635130882263184
    3. ' Node' → logprob: -2.1385130882263184
    4. ' Solver' → logprob: -2.3885130882263184
    5. ' Segment' → logprob: -3.3885130882263184
    6. ' Priority' → logprob: -4.013513088226318
    7. ' Trie' → logprob: -4.388513088226318
    8. ' ' → logprob: -4.638513088226318
    9. ' My' → logprob: -5.388513088226318
    10. ' Tree' → logprob: -5.888513088226318

Token 38: '(object' (ID: 9750)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -3.392824874026701e-05
    2. '():' → logprob: -10.75003433227539
    3. ':**' → logprob: -12.12503433227539
    4. ' :' → logprob: -13.25003433227539
    5. ':
' → logprob: -13.25003433227539
    6. '(' → logprob: -13.25003433227539
    7. '):' → logprob: -14.75003433227539
    8. '>:' → logprob: -15.25003433227539
    9. ':def' → logprob: -15.25003433227539
    10. '<|end|>' → logprob: -15.50003433227539

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021831797494087368
    2. ':' → logprob: -8.500218391418457
    3. ')' → logprob: -11.375218391418457
    4. '):
' → logprob: -12.750218391418457
    5. ' ):' → logprob: -16.12521743774414
    6. '():' → logprob: -16.25021743774414
    7. '):

' → logprob: -16.50021743774414
    8. '>:' → logprob: -17.00021743774414
    9. '}:' → logprob: -17.12521743774414
    10. ':)' → logprob: -17.25021743774414

Token 40: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6438174843788147
    2. '   ' → logprob: -1.76881742477417
    3. 'def' → logprob: -2.14381742477417
    4. ':' → logprob: -3.01881742477417
    5. '
' → logprob: -3.01881742477417
    6. '<|end|>' → logprob: -3.76881742477417
    7. '    
' → logprob: -3.89381742477417
    8. '    ' → logprob: -4.01881742477417
    9. '	def' → logprob: -5.14381742477417
    10. ' 
' → logprob: -5.14381742477417

Token 41: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3868838846683502
    2. 'def' (adapté à ' def') → logprob: -1.1368838548660278
    3. '   ' → logprob: -12.136883735656738
    4. 'de' → logprob: -12.261883735656738
    5. ' ' → logprob: -14.261883735656738
    6. ' de' → logprob: -14.261883735656738
    7. 'class' → logprob: -14.511883735656738
    8. ' pass' → logprob: -15.136883735656738
    9. '    ' → logprob: -15.761883735656738
    10. 'd' → logprob: -16.136884689331055

Token 42: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.13156065344810486
    2. ' max' → logprob: -2.6315605640411377
    3. ' two' → logprob: -4.756560802459717
    4. ' ' → logprob: -5.131560802459717
    5. ' add' → logprob: -5.506560802459717
    6. ' __' → logprob: -5.506560802459717
    7. ' longest' → logprob: -5.506560802459717
    8. ' find' → logprob: -6.006560802459717
    9. 'solve' → logprob: -6.131560802459717
    10. ' three' → logprob: -6.381560802459717

Token 43: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01438315212726593
    2. '(' → logprob: -4.264383316040039
    3. '(s' → logprob: -8.889383316040039
    4. ' (' → logprob: -10.014383316040039
    5. 'self' → logprob: -10.639383316040039
    6. 's' → logprob: -13.014383316040039
    7. '(
' → logprob: -13.639383316040039
    8. '(sel' → logprob: -13.639383316040039
    9. ')(' → logprob: -13.764383316040039
    10. ' ' → logprob: -13.889383316040039

Token 44: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004423825070261955
    2. ' ,' → logprob: -5.50442361831665
    3. 'self' → logprob: -8.504424095153809
    4. '):' → logprob: -9.004424095153809
    5. '_,' → logprob: -12.504424095153809
    6. ',self' → logprob: -12.504424095153809
    7. 's' → logprob: -12.879424095153809
    8. '   ' → logprob: -13.379424095153809
    9. ',s' → logprob: -13.379424095153809
    10. ')' → logprob: -13.754424095153809

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007489019073545933
    2. '        ' → logprob: -5.757489204406738
    3. '\' → logprob: -7.007489204406738
    4. '\n' → logprob: -7.132489204406738
    5. '<|end|>' → logprob: -7.132489204406738
    6. '        
' → logprob: -8.382489204406738
    7. '    ' → logprob: -8.382489204406738
    8. '[]' → logprob: -8.632489204406738
    9. 'self' → logprob: -9.132489204406738
    10. '()' → logprob: -9.132489204406738

Token 46: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5082040429115295
    2. ' self' → logprob: -2.0082039833068848
    3. ' n' → logprob: -2.1332039833068848
    4. 'n' → logprob: -2.5082039833068848
    5. 'self' → logprob: -3.2582039833068848
    6. '        ' → logprob: -3.8832039833068848
    7. ' ' → logprob: -6.758203983306885
    8. ' pass' → logprob: -7.008203983306885
    9. '   ' → logprob: -7.758203983306885
    10. '(self' → logprob: -7.883203983306885

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07022696733474731
    2. ',' → logprob: -2.9452269077301025
    3. '=' → logprob: -4.320227146148682
    4. '=int' → logprob: -6.445227146148682
    5. ' ,' → logprob: -8.320226669311523
    6. ' ' → logprob: -9.820226669311523
    7. '   ' → logprob: -11.195226669311523
    8. ',int' → logprob: -11.945226669311523
    9. '=input' → logprob: -12.070226669311523
    10. '    ' → logprob: -12.820226669311523

Token 48: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014422386884689331
    2. 'int' → logprob: -4.264422416687012
    3. ' self' → logprob: -9.264422416687012
    4. ' ' → logprob: -9.389422416687012
    5. ' input' → logprob: -10.514422416687012
    6. ' map' → logprob: -10.889422416687012
    7. ' len' → logprob: -11.389422416687012
    8. '=int' → logprob: -12.264422416687012
    9. '10' → logprob: -12.389422416687012
    10. 'self' → logprob: -12.764422416687012

Token 49: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05007622390985489
    2. '(' → logprob: -3.0500762462615967
    3. '(self' → logprob: -6.675076007843018
    4. 'input' → logprob: -8.425076484680176
    5. 'self' → logprob: -13.550076484680176
    6. ' (' → logprob: -13.675076484680176
    7. '(
' → logprob: -13.675076484680176
    8. ' input' → logprob: -13.925076484680176
    9. '(in' → logprob: -14.675076484680176
    10. '(sys' → logprob: -14.800076484680176

Token 50: '_' (ID: 62)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6818293929100037
    2. '()' → logprob: -1.0568294525146484
    3. '_' → logprob: -1.9318294525146484
    4. '()))' → logprob: -6.681829452514648
    5. ')' → logprob: -8.306829452514648
    6. '().' → logprob: -9.181829452514648
    7. '(' → logprob: -9.931829452514648
    8. '()>' → logprob: -10.306829452514648
    9. '();)' → logprob: -10.306829452514648
    10. '`()' → logprob: -10.806829452514648

Token 51: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0625738874077797
    2. '()' → logprob: -2.8125739097595215
    3. '()))' → logprob: -7.5625739097595215
    4. ')' → logprob: -9.937573432922363
    5. '())
' → logprob: -11.187573432922363
    6. '(' → logprob: -12.062573432922363
    7. ' ())' → logprob: -12.437573432922363
    8. '());' → logprob: -12.937573432922363
    9. '().' → logprob: -12.937573432922363
    10. '()`' → logprob: -13.187573432922363

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04726516827940941
    2. '        ' → logprob: -4.29726505279541
    3. '<|end|>' → logprob: -4.67226505279541
    4. '
' → logprob: -4.79726505279541
    5. '        
' → logprob: -4.79726505279541
    6. ')' → logprob: -5.54726505279541
    7. '```' → logprob: -7.42226505279541
    8. '\' → logprob: -7.67226505279541
    9. '<|end|>' → logprob: -8.67226505279541
    10. '   ' → logprob: -8.79726505279541

Token 53: ' H' (ID: 487)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.829784095287323
    2. 'A' → logprob: -2.3297841548919678
    3. ' graph' → logprob: -2.3297841548919678
    4. 'graph' → logprob: -2.7047841548919678
    5. 'arr' → logprob: -3.3297841548919678
    6. 'a' → logprob: -3.4547841548919678
    7. 'dist' → logprob: -3.8297841548919678
    8. ' A' → logprob: -3.9547841548919678
    9. ' numbers' → logprob: -4.079783916473389
    10. 'G' → logprob: -4.079783916473389

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013100341893732548
    2. '=' → logprob: -4.5131001472473145
    3. '   ' → logprob: -7.1381001472473145
    4. ',' → logprob: -8.388100624084473
    5. '    ' → logprob: -8.388100624084473
    6. '       ' → logprob: -8.638100624084473
    7. ' ' → logprob: -9.013100624084473
    8. '[' → logprob: -9.138100624084473
    9. '        ' → logprob: -9.138100624084473
    10. '[]' → logprob: -9.763100624084473

Token 55: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.10141871124505997
    2. 'list' → logprob: -2.4764187335968018
    3. ' [' → logprob: -4.476418495178223
    4. '[list' → logprob: -7.476418495178223
    5. '[' → logprob: -7.976418495178223
    6. ' []' → logprob: -9.726418495178223
    7. '[]' → logprob: -10.351418495178223
    8. '[int' → logprob: -11.851418495178223
    9. ' ' → logprob: -12.226418495178223
    10. '=list' → logprob: -12.601418495178223

Token 56: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005687602679245174
    2. '(' → logprob: -7.500568866729736
    3. '(int' → logprob: -11.375568389892578
    4. '(input' → logprob: -12.750568389892578
    5. '(range' → logprob: -14.375568389892578
    6. 'map' → logprob: -15.000568389892578
    7. '()' → logprob: -15.375568389892578
    8. ' map' → logprob: -16.000568389892578
    9. '(eval' → logprob: -16.375568389892578
    10. '	map' → logprob: -16.750568389892578

Token 57: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00040242893737740815
    2. '(' → logprob: -8.000402450561523
    3. '[int' → logprob: -10.875402450561523
    4. 'int' → logprob: -11.000402450561523
    5. '<int' → logprob: -11.500402450561523
    6. '(str' → logprob: -11.625402450561523
    7. ',int' → logprob: -12.875402450561523
    8. ']int' → logprob: -13.125402450561523
    9. ')' → logprob: -13.375402450561523
    10. ')(' → logprob: -13.625402450561523

Token 58: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08635670691728592
    2. ',input' → logprob: -2.7113566398620605
    3. '(' → logprob: -4.8363566398620605
    4. 'input' → logprob: -5.0863566398620605
    5. ',' → logprob: -6.2113566398620605
    6. ')' → logprob: -10.086357116699219
    7. '(
' → logprob: -10.211357116699219
    8. ' input' → logprob: -10.836357116699219
    9. '=input' → logprob: -11.461357116699219
    10. ' ,' → logprob: -11.461357116699219

Token 59: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3156827390193939
    2. '().' → logprob: -1.3156827688217163
    3. '()' → logprob: -6.065682888031006
    4. '_.' → logprob: -9.565682411193848
    5. '()))' → logprob: -11.565682411193848
    6. ')' → logprob: -12.065682411193848
    7. '().__' → logprob: -12.440682411193848
    8. '__' → logprob: -13.190682411193848
    9. '())' → logprob: -13.815682411193848
    10. '.' → logprob: -13.815682411193848

Token 60: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.580929347255733e-05
    2. '()' → logprob: -11.250016212463379
    3. '_' → logprob: -12.875016212463379
    4. '(' → logprob: -16.625015258789062
    5. '.split' → logprob: -16.625015258789062
    6. 'split' → logprob: -17.250015258789062
    7. ' ().' → logprob: -18.250015258789062
    8. '()))' → logprob: -18.625015258789062
    9. '()
' → logprob: -18.750015258789062
    10. '().__' → logprob: -18.875015258789062

Token 61: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.676292231422849e-05
    2. 'strip' → logprob: -11.250017166137695
    3. ' split' → logprob: -12.875017166137695
    4. 'rstrip' → logprob: -14.000017166137695
    5. '(split' → logprob: -15.250017166137695
    6. '.split' → logprob: -17.125017166137695
    7. 'spl' → logprob: -18.750017166137695
    8. 's' → logprob: -18.875017166137695
    9. ')' → logprob: -19.000017166137695
    10. ' ' → logprob: -19.250017166137695

Token 62: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02389076165854931
    2. '))' → logprob: -4.023890972137451
    3. '()' → logprob: -5.273890972137451
    4. '())' → logprob: -7.773890972137451
    5. '(' → logprob: -8.898890495300293
    6. '()))
' → logprob: -11.023890495300293
    7. '()));' → logprob: -11.398890495300293
    8. ')' → logprob: -11.898890495300293
    9. '())))' → logprob: -12.898890495300293
    10. '().' → logprob: -13.398890495300293

Token 63: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9450312256813049
    2. '       ' → logprob: -1.3200311660766602
    3. '
' → logprob: -1.3200311660766602
    4. '<|end|>' → logprob: -3.44503116607666
    5. '        
' → logprob: -3.69503116607666
    6. '[' → logprob: -5.32003116607666
    7. '[]' → logprob: -6.19503116607666
    8. ')
' → logprob: -6.44503116607666
    9. 'def' → logprob: -6.82003116607666
    10. '#' → logprob: -6.82003116607666

Token 64: ' idx' (ID: 14016)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.028117824345827103
    2. '       ' → logprob: -4.153117656707764
    3. 'dist' → logprob: -4.903117656707764
    4. ' dp' → logprob: -6.153117656707764
    5. 'd' → logprob: -7.028117656707764
    6. 'DP' → logprob: -8.278118133544922
    7. 'stack' → logprob: -8.403118133544922
    8. 'ans' → logprob: -9.278118133544922
    9. 'cost' → logprob: -9.278118133544922
    10. 'q' → logprob: -9.778118133544922

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23369207978248596
    2. '=' → logprob: -1.6086920499801636
    3. 's' → logprob: -5.108692169189453
    4. ',' → logprob: -7.108692169189453
    5. '_stack' → logprob: -7.983692169189453
    6. '_' → logprob: -8.608692169189453
    7. '_queue' → logprob: -8.608692169189453
    8. 'x' → logprob: -8.858692169189453
    9. 'max' → logprob: -9.483692169189453
    10. ')' → logprob: -9.858692169189453

Token 66: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02316279523074627
    2. ' ' → logprob: -4.648162841796875
    3. '[' → logprob: -5.023162841796875
    4. '[]' → logprob: -6.523162841796875
    5. 'deque' → logprob: -6.523162841796875
    6. 'H' → logprob: -7.023162841796875
    7. ' [' → logprob: -7.148162841796875
    8. 'N' → logprob: -8.023162841796875
    9. ' H' → logprob: -8.523162841796875
    10. '-' → logprob: -8.648162841796875

Token 67: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22706307470798492
    2. ' -' → logprob: -1.6020630598068237
    3. '<|end|>' → logprob: -6.727063179016113
    4. ' ' → logprob: -7.977063179016113
    5. '<|end|>' → logprob: -9.852063179016113
    6. '
' → logprob: -11.477063179016113
    7. '```' → logprob: -11.727063179016113
    8. '1' → logprob: -12.414563179016113
    9. '  ' → logprob: -12.664563179016113
    10. '   ' → logprob: -12.727063179016113

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06210380420088768
    2. '2' → logprob: -2.812103748321533
    3. ' ' → logprob: -9.062104225158691
    4. '3' → logprob: -11.062104225158691
    5. '-' → logprob: -13.874604225158691
    6. '   ' → logprob: -14.187104225158691
    7. '4' → logprob: -14.749604225158691
    8. '```' → logprob: -14.999604225158691
    9. '10' → logprob: -15.499604225158691
    10. '5' → logprob: -15.749604225158691

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4088449776172638
    2. '<|end|>' → logprob: -1.6588449478149414
    3. 'while' → logprob: -2.9088449478149414
    4. '<|end|>' → logprob: -4.033844947814941
    5. ' while' → logprob: -4.158844947814941
    6. '-' → logprob: -4.283844947814941
    7. '       ' → logprob: -4.658844947814941
    8. ' 
' → logprob: -4.908844947814941
    9. '+' → logprob: -5.408844947814941
    10. '        
' → logprob: -5.533844947814941

Token 70: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9140874743461609
    2. '
' → logprob: -1.1640875339508057
    3. 'while' → logprob: -2.2890875339508057
    4. ' 
' → logprob: -2.6640875339508057
    5. '<|end|>' → logprob: -2.6640875339508057
    6. '        
' → logprob: -4.789087295532227
    7. ' ' → logprob: -4.789087295532227
    8. '       ' → logprob: -5.039087295532227
    9. '-' → logprob: -5.539087295532227
    10. '  
' → logprob: -5.914087295532227

Token 71: ' offset' (ID: 8985)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7049642205238342
    2. 'while' → logprob: -1.0799641609191895
    3. ' while' → logprob: -2.0799641609191895
    4. '        
' → logprob: -4.3299641609191895
    5. ' 
' → logprob: -4.4549641609191895
    6. '-' → logprob: -5.4549641609191895
    7. ' ' → logprob: -6.7049641609191895
    8. '<|end|>' → logprob: -6.7049641609191895
    9. '  
' → logprob: -6.8299641609191895
    10. 'for' → logprob: -6.8299641609191895

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029792843386530876
    2. '=' → logprob: -3.5297927856445312
    3. 's' → logprob: -10.779792785644531
    4. ',' → logprob: -11.029792785644531
    5. ' ' → logprob: -12.529792785644531
    6. ' ,' → logprob: -15.279792785644531
    7. ')' → logprob: -15.779792785644531
    8. '[' → logprob: -15.904792785644531
    9. ' =[' → logprob: -16.02979278564453
    10. '=-' → logprob: -16.15479278564453

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25940898060798645
    2. ' ' → logprob: -1.509408950805664
    3. '1' → logprob: -5.759408950805664
    4. ' N' → logprob: -6.759408950805664
    5. ' -' → logprob: -7.009408950805664
    6. 'N' → logprob: -7.634408950805664
    7. '10' → logprob: -7.884408950805664
    8. '-' → logprob: -8.134408950805664
    9. '100' → logprob: -8.134408950805664
    10. '[' → logprob: -9.009408950805664

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04104895517230034
    2. '1' → logprob: -3.916049003601074
    3. 'N' → logprob: -5.166049003601074
    4. 'H' → logprob: -5.291049003601074
    5. '-' → logprob: -5.666049003601074
    6. ' ' → logprob: -6.541049003601074
    7. '10' → logprob: -6.666049003601074
    8. '100' → logprob: -6.916049003601074
    9. 'idx' → logprob: -8.041049003601074
    10. '[' → logprob: -8.166049003601074

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06164572760462761
    2. '<|end|>' → logprob: -2.936645746231079
    3. '       ' → logprob: -5.6866455078125
    4. '<|end|>' → logprob: -6.4366455078125
    5. '
' → logprob: -7.8116455078125
    6. '        
' → logprob: -7.9366455078125
    7. 'while' → logprob: -8.3116455078125
    8. ' while' → logprob: -8.3116455078125
    9. '		
' → logprob: -9.3116455078125
    10. '\n' → logprob: -9.6866455078125

Token 76: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03539677709341049
    2. '<|end|>' → logprob: -3.4103968143463135
    3. '<|end|>' → logprob: -7.410396575927734
    4. '       ' → logprob: -7.660396575927734
    5. '        
' → logprob: -8.660396575927734
    6. ' while' → logprob: -9.160396575927734
    7. '
' → logprob: -9.160396575927734
    8. 'while' → logprob: -9.785396575927734
    9. '#' → logprob: -10.035396575927734
    10. ' 
' → logprob: -10.410396575927734

Token 77: ' f' (ID: 285)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49184998869895935
    2. 'while' → logprob: -1.7418500185012817
    3. ' while' → logprob: -1.7418500185012817
    4. '       ' → logprob: -3.866849899291992
    5. '        
' → logprob: -5.116849899291992
    6. ' 
' → logprob: -6.116849899291992
    7. 'result' → logprob: -6.866849899291992
    8. 'offset' → logprob: -7.366849899291992
    9. ' for' → logprob: -7.616849899291992
    10. 'for' → logprob: -7.741849899291992

Token 78: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.05244402214884758
    2. 'req' → logprob: -3.1774439811706543
    3. 'rom' → logprob: -5.302443981170654
    4. ' =' → logprob: -6.302443981170654
    5. 'lag' → logprob: -7.927443981170654
    6. 'irst' → logprob: -8.052444458007812
    7. 'requency' → logprob: -8.177444458007812
    8. 'r' → logprob: -8.677444458007812
    9. 'en' → logprob: -9.177444458007812
    10. 'max' → logprob: -9.427444458007812

Token 79: ' True' (ID: 6432)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5114047527313232
    2. ' [' → logprob: -1.2614047527313232
    3. '[N' → logprob: -2.5114047527313232
    4. '[-' → logprob: -4.511404991149902
    5. '[int' → logprob: -5.136404991149902
    6. '[len' → logprob: -5.386404991149902
    7. ' [-' → logprob: -5.511404991149902
    8. '[]' → logprob: -6.261404991149902
    9. '[offset' → logprob: -6.636404991149902
    10. ' ' → logprob: -6.761404991149902

Token 80: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5549734234809875
    2. '<|end|>' → logprob: -0.9299734234809875
    3. '       ' → logprob: -4.179973602294922
    4. '<|end|>' → logprob: -5.054973602294922
    5. ':' → logprob: -6.304973602294922
    6. '	' → logprob: -6.804973602294922
    7. 'while' → logprob: -7.179973602294922
    8. ' while' → logprob: -7.179973602294922
    9. ',' → logprob: -7.179973602294922
    10. ')' → logprob: -7.429973602294922

Token 81: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3033808171749115
    2. '<|end|>' → logprob: -1.5533808469772339
    3. '       ' → logprob: -3.1783807277679443
    4. ' while' → logprob: -5.803380966186523
    5. '<|end|>' → logprob: -6.553380966186523
    6. 'while' → logprob: -6.928380966186523
    7. '	while' → logprob: -7.303380966186523
    8. '	' → logprob: -7.428380966186523
    9. ' 
' → logprob: -8.178380966186523
    10. ')' → logprob: -8.553380966186523

Token 82: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.878609299659729
    2. '       ' → logprob: -1.503609299659729
    3. 'while' (adapté à ' while') → logprob: -1.628609299659729
    4. '
' → logprob: -1.878609299659729
    5. '	while' → logprob: -5.0036091804504395
    6. '<|end|>' → logprob: -6.3786091804504395
    7. '\n' → logprob: -7.2536091804504395
    8. '   ' → logprob: -7.3786091804504395
    9. '        
' → logprob: -7.5036091804504395
    10. ' 
' → logprob: -7.6286091804504395

Token 83: ' idx' (ID: 14016)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.5269444584846497
    2. ' idx' → logprob: -1.2769443988800049
    3. 'f' → logprob: -2.401944398880005
    4. ' offset' → logprob: -3.776944398880005
    5. 'idx' → logprob: -4.901944637298584
    6. ' True' → logprob: -5.776944637298584
    7. '(idx' → logprob: -5.901944637298584
    8. ' not' → logprob: -6.276944637298584
    9. 'offset' → logprob: -7.151944637298584
    10. 'True' → logprob: -7.901944637298584

Token 84: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2873036563396454
    2. ' >' → logprob: -2.0373036861419678
    3. '>=' → logprob: -2.2873036861419678
    4. '>' → logprob: -4.037303447723389
    5. ' ' → logprob: -9.287303924560547
    6. '0' → logprob: -10.787303924560547
    7. ')>=' → logprob: -12.412303924560547
    8. ' and' → logprob: -12.662303924560547
    9. '>-' → logprob: -12.662303924560547
    10. '[' → logprob: -12.787303924560547

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010335799306631088
    2. ' ' → logprob: -4.760335922241211
    3. '=' → logprob: -6.635335922241211
    4. '   ' → logprob: -8.885335922241211
    5. '1' → logprob: -9.385335922241211
    6. ' -' → logprob: -9.760335922241211
    7. '-' → logprob: -10.260335922241211
    8. '>' → logprob: -10.760335922241211
    9. 'offset' → logprob: -10.760335922241211
    10. '>=' → logprob: -12.197835922241211

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027419927064329386
    2. ' ' → logprob: -6.127741813659668
    3. '-' → logprob: -8.252741813659668
    4. '=' → logprob: -9.002741813659668
    5. '1' → logprob: -9.252741813659668
    6. ' -' → logprob: -10.377741813659668
    7. '   ' → logprob: -10.752741813659668
    8. 'offset' → logprob: -11.627741813659668
    9. '2' → logprob: -12.877741813659668
    10. '  ' → logprob: -13.065241813659668

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5935896039009094
    2. ' and' → logprob: -0.8435896039009094
    3. ':
' → logprob: -4.093589782714844
    4. 'and' → logprob: -7.593589782714844
    5. '           ' → logprob: -9.093589782714844
    6. ' :' → logprob: -9.468589782714844
    7. '       ' → logprob: -10.218589782714844
    8. ',' → logprob: -10.593589782714844
    9. ' ' → logprob: -11.343589782714844
    10. '   ' → logprob: -11.593589782714844

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1619124561548233
    2. ' if' → logprob: -2.786912441253662
    3. '<|end|>' → logprob: -3.536912441253662
    4. ' ' → logprob: -3.911912441253662
    5. '   ' → logprob: -3.911912441253662
    6. '<|end|>' → logprob: -5.286912441253662
    7. '       ' → logprob: -5.786912441253662
    8. '
' → logprob: -6.036912441253662
    9. '    ' → logprob: -6.036912441253662
    10. 'if' → logprob: -6.411912441253662

Token 89: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04884248971939087
    2. '           ' → logprob: -3.798842430114746
    3. 'if' (adapté à ' if') → logprob: -4.298842430114746
    4. ' ' → logprob: -5.548842430114746
    5. '    ' → logprob: -6.923842430114746
    6. '               ' → logprob: -6.923842430114746
    7. '       ' → logprob: -7.048842430114746
    8. '        ' → logprob: -7.173842430114746
    9. '<|end|>' → logprob: -7.173842430114746
    10. '            ' → logprob: -7.298842430114746

Token 90: ' (' (ID: 350)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.34898245334625244
    2. ' H' → logprob: -1.2239824533462524
    3. ' ' → logprob: -9.098982810974121
    4. 'abs' → logprob: -9.598982810974121
    5. '(H' → logprob: -9.598982810974121
    6. '   ' → logprob: -10.098982810974121
    7. ' abs' → logprob: -10.473982810974121
    8. 'offset' → logprob: -10.473982810974121
    9. 'idx' → logprob: -10.473982810974121
    10. 'f' → logprob: -10.473982810974121

Token 91: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07027773559093475
    2. ' H' → logprob: -2.695277690887451
    3. '(H' → logprob: -9.19527816772461
    4. 'abs' → logprob: -9.57027816772461
    5. ')' → logprob: -10.32027816772461
    6. ' (' → logprob: -10.44527816772461
    7. ' ' → logprob: -10.82027816772461
    8. 'offset' → logprob: -10.94527816772461
    9. ' abs' → logprob: -11.07027816772461
    10. '   ' → logprob: -11.19527816772461

Token 92: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0017797837499529123
    2. '[offset' → logprob: -6.376779556274414
    3. ')[' → logprob: -10.251779556274414
    4. '[' → logprob: -11.001779556274414
    5. ')' → logprob: -11.126779556274414
    6. 'idx' → logprob: -12.251779556274414
    7. '```' → logprob: -13.501779556274414
    8. ' idx' → logprob: -13.751779556274414
    9. ' [' → logprob: -14.251779556274414
    10. '   ' → logprob: -14.501779556274414

Token 93: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0381252765655518
    2. '-' → logprob: -1.5381252765655518
    3. ' <' → logprob: -1.7881252765655518
    4. '<' → logprob: -3.1631252765655518
    5. '>' → logprob: -3.1631252765655518
    6. ' >' → logprob: -3.1631252765655518
    7. '+' → logprob: -3.2881252765655518
    8. ' +' → logprob: -3.4131252765655518
    9. ' >=' → logprob: -4.288125038146973
    10. ' ' → logprob: -4.413125038146973

Token 94: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.822377324104309
    2. '-' → logprob: -1.947377324104309
    3. ' <' → logprob: -2.0723772048950195
    4. '+' → logprob: -2.1973772048950195
    5. '<' → logprob: -2.1973772048950195
    6. ' +' → logprob: -2.1973772048950195
    7. '>=' → logprob: -2.6973772048950195
    8. ' >=' → logprob: -3.0723772048950195
    9. '>' → logprob: -3.1973772048950195
    10. ' >' → logprob: -3.6973772048950195

Token 95: ' offset' (ID: 8985)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.016754860058426857
    2. ' H' → logprob: -4.391754627227783
    3. '1' → logprob: -6.391754627227783
    4. 'offset' → logprob: -6.516754627227783
    5. '(H' → logprob: -7.516754627227783
    6. ')' → logprob: -8.391755104064941
    7. ' offset' → logprob: -9.391755104064941
    8. '   ' → logprob: -10.016755104064941
    9. ' ' → logprob: -10.016755104064941
    10. '2' → logprob: -10.391755104064941

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04592723026871681
    2. '>' → logprob: -4.045927047729492
    3. '>=' → logprob: -4.920927047729492
    4. ' >' → logprob: -5.170927047729492
    5. ' )' → logprob: -5.920927047729492
    6. ' >=' → logprob: -6.170927047729492
    7. ')>' → logprob: -6.170927047729492
    8. '<=' → logprob: -6.420927047729492
    9. ')>=' → logprob: -6.420927047729492
    10. ' <=' → logprob: -6.795927047729492

Token 97: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.5092613697052002
    2. ' >' → logprob: -1.5092613697052002
    3. ' <' → logprob: -2.1342613697052
    4. '>=' → logprob: -2.1342613697052
    5. ' >=' → logprob: -2.2592613697052
    6. ' <=' → logprob: -2.5092613697052
    7. '<' → logprob: -2.7592613697052
    8. '<=' → logprob: -3.2592613697052
    9. '==' → logprob: -4.259261131286621
    10. ' ==' → logprob: -4.259261131286621

Token 98: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.1507381796836853
    2. 'H' → logprob: -2.65073823928833
    3. '0' → logprob: -3.27573823928833
    4. ' (' → logprob: -4.27573823928833
    5. '1' → logprob: -4.65073823928833
    6. ' H' → logprob: -6.27573823928833
    7. '(' → logprob: -6.40073823928833
    8. '2' → logprob: -6.40073823928833
    9. '100' → logprob: -6.77573823928833
    10. ' ' → logprob: -7.15073823928833

Token 99: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.292907877039397e-06
    2. 'idx' → logprob: -13.12500286102295
    3. '[' → logprob: -13.75000286102295
    4. ' idx' → logprob: -17.250003814697266
    5. '```' → logprob: -17.375003814697266
    6. '(idx' → logprob: -17.875003814697266
    7. '	idx' → logprob: -18.000003814697266
    8. ' [' → logprob: -18.125003814697266
    9. ' ' → logprob: -18.750003814697266
    10. '   ' → logprob: -18.875003814697266

Token 100: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006201331038028002
    2. ' -' → logprob: -5.131201267242432
    3. '[' → logprob: -9.13120174407959
    4. '1' → logprob: -9.75620174407959
    5. ' ' → logprob: -9.75620174407959
    6. '[idx' → logprob: -10.88120174407959
    7. ']' → logprob: -11.75620174407959
    8. ')' → logprob: -11.88120174407959
    9. '   ' → logprob: -12.25620174407959
    10. ']-' → logprob: -13.75620174407959

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010509284038562328
    2. ' ' → logprob: -9.250104904174805
    3. '```' → logprob: -13.375104904174805
    4. '   ' → logprob: -13.500104904174805
    5. '<|end|>' → logprob: -14.062604904174805
    6. ')' → logprob: -14.125104904174805
    7. '           ' → logprob: -14.500104904174805
    8. '<|end|>' → logprob: -14.750104904174805
    9. 'idx' → logprob: -14.812604904174805
    10. ']' → logprob: -14.812604904174805

Token 102: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9295000433921814
    2. '):
' → logprob: -1.4295001029968262
    3. '):' → logprob: -1.6795001029968262
    4. ':
' → logprob: -1.8045001029968262
    5. '+' → logprob: -5.804500102996826
    6. ' and' → logprob: -5.929500102996826
    7. '           ' → logprob: -5.929500102996826
    8. ')' → logprob: -6.179500102996826
    9. ' :
' → logprob: -7.054500102996826
    10. '               ' → logprob: -7.304500102996826

Token 103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00698081823065877
    2. ':' → logprob: -5.506980895996094
    3. '           ' → logprob: -6.506980895996094
    4. ':
' → logprob: -7.381980895996094
    5. '):
' → logprob: -8.756980895996094
    6. '):' → logprob: -9.256980895996094
    7. '                ' → logprob: -9.506980895996094
    8. ' and' → logprob: -9.506980895996094
    9. ')' → logprob: -9.631980895996094
    10. '            ' → logprob: -9.756980895996094

Token 104: ' offset' (ID: 8985)
  Prédit: ' offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' offset' → logprob: -0.1434478759765625
    2. 'offset' (adapté à ' offset') → logprob: -2.6434478759765625
    3. '               ' → logprob: -3.5184478759765625
    4. '           ' → logprob: -4.1434478759765625
    5. '   ' → logprob: -4.2684478759765625
    6. ' f' → logprob: -7.2684478759765625
    7. ' break' → logprob: -7.7684478759765625
    8. ' idx' → logprob: -7.8934478759765625
    9. '	offset' → logprob: -8.268447875976562
    10. '                   ' → logprob: -8.393447875976562

Token 105: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7879794836044312
    2. '+=' → logprob: -1.0379794836044312
    3. '=' → logprob: -2.2879796028137207
    4. ' =' → logprob: -2.4129796028137207
    5. ']+=' → logprob: -11.412979125976562
    6. '+=(' → logprob: -11.912979125976562
    7. '   ' → logprob: -12.162979125976562
    8. '*=' → logprob: -12.287979125976562
    9. ' -=' → logprob: -12.412979125976562
    10. '-=' → logprob: -13.037979125976562

Token 106: ' ' (ID: 220)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.02902204357087612
    2. ' H' → logprob: -4.154022216796875
    3. '(H' → logprob: -5.029022216796875
    4. '0' → logprob: -5.404022216796875
    5. 'offset' → logprob: -7.279022216796875
    6. 'max' → logprob: -7.404022216796875
    7. ' (' → logprob: -8.529022216796875
    8. ' max' → logprob: -9.779022216796875
    9. '               ' → logprob: -10.029022216796875
    10. ' offset' → logprob: -10.279022216796875

Token 107: '0' (ID: 15)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014303469099104404
    2. '(H' → logprob: -4.514303684234619
    3. ' H' → logprob: -6.764303684234619
    4. 'max' → logprob: -6.889303684234619
    5. 'offset' → logprob: -7.639303684234619
    6. '0' → logprob: -8.264303207397461
    7. '               ' → logprob: -8.764303207397461
    8. ' (' → logprob: -10.139303207397461
    9. '(max' → logprob: -10.264303207397461
    10. '                   ' → logprob: -10.389303207397461

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02050195261836052
    2. '               ' → logprob: -4.020502090454102
    3. '           ' → logprob: -6.520502090454102
    4. '                
' → logprob: -7.895502090454102
    5. '            
' → logprob: -8.645502090454102
    6. '
' → logprob: -9.020502090454102
    7. '<|end|>' → logprob: -9.770502090454102
    8. '  
' → logprob: -10.520502090454102
    9. '    
' → logprob: -10.520502090454102
    10. '\n' → logprob: -11.020502090454102

Token 109: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1452702283859253
    2. '           ' → logprob: -2.020270347595215
    3. 'idx' → logprob: -6.145270347595215
    4. '
' → logprob: -8.520270347595215
    5. 'else' → logprob: -9.270270347595215
    6. '       ' → logprob: -9.645270347595215
    7. '                
' → logprob: -10.770270347595215
    8. ' idx' → logprob: -10.895270347595215
    9. 'elif' → logprob: -11.270270347595215
    10. '            
' → logprob: -11.770270347595215

Token 110: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8379012942314148
    2. '           ' → logprob: -0.9629012942314148
    3. ' else' → logprob: -1.7129013538360596
    4. '       ' → logprob: -5.3379011154174805
    5. 'elif' (adapté à ' elif') → logprob: -8.08790111541748
    6. '               ' → logprob: -10.21290111541748
    7. ' elif' → logprob: -10.33790111541748
    8. '	else' → logprob: -11.08790111541748
    9. '   ' → logprob: -11.83790111541748
    10. '          ' → logprob: -11.96290111541748

Token 111: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.19579246640205383
    2. '(H' → logprob: -1.9457924365997314
    3. ' H' → logprob: -4.0707926750183105
    4. ' offset' → logprob: -4.8207926750183105
    5. 'offset' → logprob: -5.5707926750183105
    6. 'H' → logprob: -5.6957926750183105
    7. ' idx' → logprob: -7.3207926750183105
    8. ' ' → logprob: -7.3207926750183105
    9. '(offset' → logprob: -8.070792198181152
    10. 'idx' → logprob: -8.695792198181152

Token 112: 'H' (ID: 39)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.12586568295955658
    2. 'H' → logprob: -2.2508656978607178
    3. ' (' → logprob: -4.500865459442139
    4. ' H' → logprob: -6.750865459442139
    5. 'offset' → logprob: -8.875865936279297
    6. 'idx' → logprob: -8.875865936279297
    7. ' ' → logprob: -9.938365936279297
    8. '(' → logprob: -9.938365936279297
    9. '1' → logprob: -10.063365936279297
    10. '   ' → logprob: -10.125865936279297

Token 113: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.5954712075181305e-05
    2. 'idx' → logprob: -10.875036239624023
    3. '[' → logprob: -11.375036239624023
    4. ')' → logprob: -13.500036239624023
    5. '(idx' → logprob: -14.000036239624023
    6. '   ' → logprob: -14.125036239624023
    7. ' idx' → logprob: -14.125036239624023
    8. '	idx' → logprob: -14.750036239624023
    9. '[id' → logprob: -15.125036239624023
    10. ')[' → logprob: -15.375036239624023

Token 114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10813291370868683
    2. '-' → logprob: -2.483132839202881
    3. ')' → logprob: -4.483132839202881
    4. '[' → logprob: -5.858132839202881
    5. ' -' → logprob: -5.858132839202881
    6. ']-' → logprob: -6.608132839202881
    7. '[idx' → logprob: -7.733132839202881
    8. ')-' → logprob: -10.358133316040039
    9. '][' → logprob: -10.358133316040039
    10. ']+' → logprob: -10.983133316040039

Token 115: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05501170456409454
    2. '-' → logprob: -2.930011749267578
    3. ' ' → logprob: -9.930011749267578
    4. ')' → logprob: -10.180011749267578
    5. '[' → logprob: -11.180011749267578
    6. '<|end|>' → logprob: -11.680011749267578
    7. '<|end|>' → logprob: -12.430011749267578
    8. ')-' → logprob: -13.055011749267578
    9. '...' → logprob: -13.055011749267578
    10. '   ' → logprob: -13.180011749267578

Token 116: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' → logprob: -0.6939458250999451
    2. ' offset' → logprob: -0.6939458250999451
    3. '1' → logprob: -7.31894588470459
    4. ' ' → logprob: -9.69394588470459
    5. '(offset' → logprob: -10.44394588470459
    6. '	offset' → logprob: -11.31894588470459
    7. '[offset' → logprob: -11.94394588470459
    8. '.offset' → logprob: -12.44394588470459
    9. ' (' → logprob: -12.81894588470459
    10. '_offset' → logprob: -12.94394588470459

Token 117: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028610413894057274
    2. '-' → logprob: -4.4036102294921875
    3. ' -' → logprob: -5.2786102294921875
    4. '>' → logprob: -6.2786102294921875
    5. '==' → logprob: -6.4036102294921875
    6. ')+' → logprob: -6.4036102294921875
    7. ')==' → logprob: -6.5286102294921875
    8. '+' → logprob: -6.6536102294921875
    9. ')-' → logprob: -7.4036102294921875
    10. ')>' → logprob: -7.5286102294921875

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012336840154603124
    2. ' ' → logprob: -6.7512335777282715
    3. '   ' → logprob: -10.75123405456543
    4. ')' → logprob: -11.12623405456543
    5. '-' → logprob: -11.37623405456543
    6. ' -' → logprob: -12.25123405456543
    7. '0' → logprob: -13.50123405456543
    8. '
' → logprob: -13.56373405456543
    9. 'offset' → logprob: -13.56373405456543
    10. '```' → logprob: -13.68873405456543

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017328945687040687
    2. ' ' → logprob: -6.37673282623291
    3. '-' → logprob: -11.25173282623291
    4. ' -' → logprob: -12.25173282623291
    5. '   ' → logprob: -12.37673282623291
    6. 'offset' → logprob: -12.87673282623291
    7. ')' → logprob: -13.12673282623291
    8. '0' → logprob: -13.68923282623291
    9. '  ' → logprob: -14.62673282623291
    10. ' offset' → logprob: -14.87673282623291

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015076645649969578
    2. ')>=' → logprob: -4.640076637268066
    3. '>=' → logprob: -5.390076637268066
    4. ' >=' → logprob: -8.390076637268066
    5. ')==' → logprob: -8.640076637268066
    6. ' )' → logprob: -8.765076637268066
    7. '==' → logprob: -9.140076637268066
    8. '   ' → logprob: -11.015076637268066
    9. ')>' → logprob: -11.390076637268066
    10. '>' → logprob: -11.640076637268066

Token 121: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.14421162009239197
    2. '>=' → logprob: -2.019211530685425
    3. '>' → logprob: -7.769211769104004
    4. ' <=' → logprob: -8.019211769104004
    5. ' ==' → logprob: -8.519211769104004
    6. ' >' → logprob: -8.519211769104004
    7. ' ' → logprob: -9.269211769104004
    8. '==' → logprob: -9.269211769104004
    9. ' <' → logprob: -9.769211769104004
    10. '<=' → logprob: -10.144211769104004

Token 122: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.40523242950439453
    2. ' H' → logprob: -1.1552324295043945
    3. '(H' → logprob: -4.4052324295043945
    4. ' (' → logprob: -5.1552324295043945
    5. '(' → logprob: -9.530232429504395
    6. ' ' → logprob: -9.655232429504395
    7. '   ' → logprob: -10.405232429504395
    8. '	H' → logprob: -10.530232429504395
    9. '  ' → logprob: -12.405232429504395
    10. '    ' → logprob: -12.905232429504395

Token 123: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.4121114822482923e-06
    2. 'idx' → logprob: -12.625003814697266
    3. ' idx' → logprob: -17.625003814697266
    4. '	idx' → logprob: -18.000003814697266
    5. '(idx' → logprob: -18.125003814697266
    6. '[' → logprob: -19.750003814697266
    7. '```' → logprob: -20.250003814697266
    8. '_idx' → logprob: -21.375003814697266
    9. '[
' → logprob: -21.375003814697266
    10. ' [' → logprob: -21.625003814697266

Token 124: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0020186901092529297
    2. '[idx' → logprob: -6.627018928527832
    3. '[' → logprob: -7.877018928527832
    4. '[-' → logprob: -8.877018928527832
    5. ' -' → logprob: -9.127018928527832
    6. 'idx' → logprob: -10.127018928527832
    7. '           ' → logprob: -12.627018928527832
    8. '1' → logprob: -12.627018928527832
    9. '   ' → logprob: -12.877018928527832
    10. ']' → logprob: -13.002018928527832

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.250016212463379
    3. 'idx' → logprob: -13.750016212463379
    4. '-' → logprob: -14.500016212463379
    5. '   ' → logprob: -14.875016212463379
    6. '```' → logprob: -15.500016212463379
    7. 'import' → logprob: -15.562516212463379
    8. 'from' → logprob: -16.062517166137695
    9. 'user' → logprob: -16.062517166137695
    10. 'index' → logprob: -16.250017166137695

Token 126: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7655777335166931
    2. ':
' → logprob: -0.7655777335166931
    3. '               ' → logprob: -2.765577793121338
    4. '):
' → logprob: -5.390577793121338
    5. ' and' → logprob: -7.390577793121338
    6. '           ' → logprob: -7.640577793121338
    7. '):' → logprob: -7.640577793121338
    8. ')' → logprob: -7.765577793121338
    9. ' :
' → logprob: -9.26557731628418
    10. '<|end|>' → logprob: -10.51557731628418

Token 127: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007524870336055756
    2. 'offset' → logprob: -5.3825249671936035
    3. ' offset' → logprob: -5.8825249671936035
    4. '           ' → logprob: -9.757524490356445
    5. '[offset' → logprob: -11.632524490356445
    6. ',' → logprob: -11.757524490356445
    7. '   ' → logprob: -11.882524490356445
    8. '                   ' → logprob: -12.132524490356445
    9. '	offset' → logprob: -12.257524490356445
    10. ':
' → logprob: -12.257524490356445

Token 128: ' offset' (ID: 8985)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'offset' (adapté à ' offset') → logprob: -0.16576683521270752
    2. ' offset' → logprob: -1.9157668352127075
    3. '               ' → logprob: -5.290766716003418
    4. '           ' → logprob: -8.040766716003418
    5. 'idx' → logprob: -9.540766716003418
    6. '   ' → logprob: -9.915766716003418
    7. '	offset' → logprob: -10.540766716003418
    8. ' idx' → logprob: -11.790766716003418
    9. '
' → logprob: -13.165766716003418
    10. ' ' → logprob: -13.290766716003418

Token 129: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5869044065475464
    2. ' =' → logprob: -1.0869044065475464
    3. '=' → logprob: -2.711904525756836
    4. '+=' → logprob: -3.211904525756836
    5. ' ' → logprob: -13.211904525756836
    6. '    ' → logprob: -14.336904525756836
    7. '   ' → logprob: -14.336904525756836
    8. '           ' → logprob: -14.711904525756836
    9. '            ' → logprob: -14.961904525756836
    10. ' =
' → logprob: -15.461904525756836

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001709805685095489
    2. ' ' → logprob: -6.376709938049316
    3. 'offset' → logprob: -12.751709938049316
    4. '   ' → logprob: -13.001709938049316
    5. '                   ' → logprob: -14.001709938049316
    6. '               ' → logprob: -14.126709938049316
    7. ' offset' → logprob: -15.251709938049316
    8. '0' → logprob: -15.751709938049316
    9. '
' → logprob: -16.126708984375
    10. ' ' → logprob: -16.689208984375

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.684157026233152e-05
    2. ' ' → logprob: -9.500077247619629
    3. '   ' → logprob: -14.000077247619629
    4. 'offset' → logprob: -14.750077247619629
    5. '0' → logprob: -15.625077247619629
    6. 'H' → logprob: -15.750077247619629
    7. '(H' → logprob: -16.000076293945312
    8. '                   ' → logprob: -16.625076293945312
    9. '               ' → logprob: -16.750076293945312
    10. '
' → logprob: -16.750076293945312

Token 132: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038717821007594466
    2. 'else' → logprob: -8.125387191772461
    3. '               ' → logprob: -9.500387191772461
    4. '       ' → logprob: -12.250387191772461
    5. ' else' → logprob: -12.500387191772461
    6. 'elif' → logprob: -12.875387191772461
    7. '```' → logprob: -13.000387191772461
    8. ',' → logprob: -14.750387191772461
    9. '
' → logprob: -14.875387191772461
    10. '            
' → logprob: -15.250387191772461

Token 133: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002964935847558081
    2. 'else' → logprob: -8.875296592712402
    3. '               ' → logprob: -9.000296592712402
    4. ' else' → logprob: -11.500296592712402
    5. '```' → logprob: -11.625296592712402
    6. '       ' → logprob: -12.125296592712402
    7. ',' → logprob: -13.125296592712402
    8. '            
' → logprob: -13.750296592712402
    9. 'elif' → logprob: -13.750296592712402
    10. 'idx' → logprob: -14.125296592712402

Token 134: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13280093669891357
    2. '           ' → logprob: -2.382801055908203
    3. ' else' → logprob: -3.632801055908203
    4. '       ' → logprob: -5.257801055908203
    5. 'elif' → logprob: -7.882801055908203
    6. '   ' → logprob: -11.007801055908203
    7. '
' → logprob: -11.882801055908203
    8. '               ' → logprob: -12.132801055908203
    9. '```' → logprob: -12.257801055908203
    10. ' elif' → logprob: -12.632801055908203

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4080221652984619
    2. '               ' → logprob: -1.408022165298462
    3. ':
' → logprob: -2.408022165298462
    4. '           ' → logprob: -8.408021926879883
    5. ':return' → logprob: -9.658021926879883
    6. '():
' → logprob: -10.908021926879883
    7. '```' → logprob: -11.158021926879883
    8. '):
' → logprob: -11.283021926879883
    9. '                   ' → logprob: -11.408021926879883
    10. ' :
' → logprob: -11.408021926879883

Token 136: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019769940990954638
    2. 'return' → logprob: -8.750197410583496
    3. ' return' → logprob: -10.750197410583496
    4. '           ' → logprob: -11.500197410583496
    5. 'break' → logprob: -12.375197410583496
    6. '                   ' → logprob: -12.875197410583496
    7. '   ' → logprob: -15.250197410583496
    8. ' break' → logprob: -15.500197410583496
    9. '                ' → logprob: -16.125198364257812
    10. '              ' → logprob: -16.500198364257812

Token 137: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07378832250833511
    2. 'print' (adapté à ' print') → logprob: -3.4487884044647217
    3. 'f' → logprob: -4.323788166046143
    4. '           ' → logprob: -4.573788166046143
    5. 'break' → logprob: -4.823788166046143
    6. ' f' → logprob: -5.573788166046143
    7. ' print' → logprob: -6.573788166046143
    8. ' break' → logprob: -6.698788166046143
    9. 'return' → logprob: -7.198788166046143
    10. '   ' → logprob: -8.0737886428833

Token 138: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0124436030164361
    2. '(-' → logprob: -5.137443542480469
    3. '('' → logprob: -5.762443542480469
    4. '(' → logprob: -5.762443542480469
    5. '(False' → logprob: -8.762443542480469
    6. '("-' → logprob: -10.762443542480469
    7. '(
' → logprob: -10.887443542480469
    8. '(NO' → logprob: -12.637443542480469
    9. ' ("' → logprob: -13.262443542480469
    10. '(false' → logprob: -14.262443542480469

Token 139: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.007885080762207508
    2. '"No' → logprob: -6.007884979248047
    3. 'Impossible' → logprob: -6.257884979248047
    4. 'NO' → logprob: -6.632884979248047
    5. '-' → logprob: -7.007884979248047
    6. '"' → logprob: -7.007884979248047
    7. ' No' → logprob: -8.757884979248047
    8. '-No' → logprob: -9.632884979248047
    9. 'IMP' → logprob: -10.007884979248047
    10. ' ' → logprob: -11.257884979248047

Token 140: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.062269482761621475
    2. '")' → logprob: -2.812269449234009
    3. '")
' → logprob: -8.93726921081543
    4. '               ' → logprob: -9.81226921081543
    5. ')
' → logprob: -9.93726921081543
    6. '");' → logprob: -10.93726921081543
    7. '           ' → logprob: -11.06226921081543
    8. '       ' → logprob: -11.68726921081543
    9. '"' → logprob: -11.93726921081543
    10. ')' → logprob: -11.93726921081543

Token 141: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001146291324403137
    2. '           ' → logprob: -10.000114440917969
    3. '                
' → logprob: -10.375114440917969
    4. '<|end|>' → logprob: -11.500114440917969
    5. '
' → logprob: -11.625114440917969
    6. '                   ' → logprob: -11.750114440917969
    7. 'return' → logprob: -12.500114440917969
    8. ' return' → logprob: -13.875114440917969
    9. '              ' → logprob: -13.875114440917969
    10. '            
' → logprob: -14.250114440917969

Token 142: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0039159688167274
    2. ' return' → logprob: -5.753915786743164
    3. '               ' → logprob: -7.253915786743164
    4. '
' → logprob: -10.503915786743164
    5. '	return' → logprob: -13.503915786743164
    6. '           ' → logprob: -14.003915786743164
    7. '                   ' → logprob: -14.628915786743164
    8. '```' → logprob: -15.628915786743164
    9. '                       ' → logprob: -16.003915786743164
    10. '{return' → logprob: -16.753915786743164

Token 143: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005287242121994495
    2. '            
' → logprob: -6.130287170410156
    3. '        
' → logprob: -7.005287170410156
    4. '
' → logprob: -7.005287170410156
    5. '       ' → logprob: -7.255287170410156
    6. 'idx' → logprob: -8.505287170410156
    7. '\n' → logprob: -9.630287170410156
    8. ' idx' → logprob: -10.130287170410156
    9. '    
' → logprob: -10.255287170410156
    10. '<|end|>' → logprob: -10.380287170410156

Token 144: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000846671755425632
    2. '       ' → logprob: -8.250846862792969
    3. '            
' → logprob: -8.500846862792969
    4. 'idx' → logprob: -9.250846862792969
    5. '<|end|>' → logprob: -9.875846862792969
    6. '```' → logprob: -10.250846862792969
    7. '        
' → logprob: -10.625846862792969
    8. '[idx' → logprob: -10.750846862792969
    9. ' idx' → logprob: -10.875846862792969
    10. '		' → logprob: -11.000846862792969

Token 145: ' idx' (ID: 14016)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8143341541290283
    2. 'idx' (adapté à ' idx') → logprob: -1.0643341541290283
    3. '       ' → logprob: -2.1893341541290283
    4. ' idx' → logprob: -2.3143341541290283
    5. '   ' → logprob: -7.689333915710449
    6. '	idx' → logprob: -7.689333915710449
    7. '[idx' → logprob: -9.06433391571045
    8. '            
' → logprob: -10.18933391571045
    9. '        
' → logprob: -10.18933391571045
    10. '```' → logprob: -10.56433391571045

Token 146: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9586146473884583
    2. '-=' → logprob: -0.9586146473884583
    3. ' -=' → logprob: -1.4586145877838135
    4. '=' → logprob: -7.958614826202393
    5. ' -' → logprob: -8.458614349365234
    6. '   ' → logprob: -11.833614349365234
    7. '```' → logprob: -11.833614349365234
    8. '<|end|>' → logprob: -12.458614349365234
    9. ' ' → logprob: -12.833614349365234
    10. '--' → logprob: -12.833614349365234

Token 147: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -18.500017166137695
    4. '   ' → logprob: -19.250017166137695
    5. '<|end|>' → logprob: -20.000017166137695
    6. '
' → logprob: -20.250017166137695
    7. '0' → logprob: -21.250017166137695
    8. '۱' → logprob: -21.687517166137695
    9. '１' → logprob: -21.750017166137695
    10. '2' → logprob: -22.000017166137695

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '2' → logprob: -19.625
    4. '```' → logprob: -19.75
    5. '１' → logprob: -20.0
    6. '۱' → logprob: -21.4375
    7. '   ' → logprob: -21.5625
    8. '
' → logprob: -21.9375
    9. '१' → logprob: -22.4375
    10. '0' → logprob: -22.5625

Token 149: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001979378139367327
    2. '        
' → logprob: -9.250198364257812
    3. '```' → logprob: -10.250198364257812
    4. 'print' → logprob: -10.625198364257812
    5. '<|end|>' → logprob: -11.000198364257812
    6. '
' → logprob: -11.625198364257812
    7. '   ' → logprob: -12.000198364257812
    8. '  
' → logprob: -13.125198364257812
    9. '           ' → logprob: -13.250198364257812
    10. '    
' → logprob: -13.750198364257812

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24304704368114471
    2. '        
' → logprob: -2.243046998977661
    3. '```' → logprob: -2.368046998977661
    4. '
' → logprob: -5.24304723739624
    5. '<|end|>' → logprob: -5.61804723739624
    6. '  
' → logprob: -6.11804723739624
    7. '    
' → logprob: -6.24304723739624
    8. ' 
' → logprob: -7.36804723739624
    9. '``' → logprob: -7.49304723739624
    10. '   ' → logprob: -7.86804723739624

Token 151: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0799802839756012
    2. '       ' → logprob: -2.5799803733825684
    3. ' print' → logprob: -6.829980373382568
    4. '   ' → logprob: -12.45497989654541
    5. '	print' → logprob: -12.82997989654541
    6. '```' → logprob: -13.70497989654541
    7. 'No' → logprob: -15.07997989654541
    8. '        
' → logprob: -15.20497989654541
    9. '           ' → logprob: -15.32997989654541
    10. '
' → logprob: -16.079980850219727

Token 152: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005246568005532026
    2. '(' → logprob: -5.255246639251709
    3. '("("' → logprob: -11.38024616241455
    4. '(
' → logprob: -14.50524616241455
    5. '('' → logprob: -14.75524616241455
    6. ' ("' → logprob: -15.25524616241455
    7. '(("' → logprob: -16.130247116088867
    8. '("""' → logprob: -17.255247116088867
    9. '(""' → logprob: -17.505247116088867
    10. '"' → logprob: -17.630247116088867

Token 153: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0007432799902744591
    2. '"' → logprob: -7.250743389129639
    3. '("' → logprob: -10.37574291229248
    4. '“Yes' → logprob: -13.75074291229248
    5. 'YES' → logprob: -15.12574291229248
    6. ' Yes' → logprob: -15.25074291229248
    7. '(' → logprob: -15.50074291229248
    8. ''' → logprob: -15.62574291229248
    9. '('' → logprob: -17.000743865966797
    10. 'Ok' → logprob: -17.500743865966797

Token 154: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00012154294381616637
    2. ')")' → logprob: -9.500121116638184
    3. ')' → logprob: -10.000121116638184
    4. '")
' → logprob: -13.625121116638184
    5. '}")' → logprob: -16.7501220703125
    6. '')' → logprob: -17.5001220703125
    7. '()' → logprob: -17.7501220703125
    8. '”)' → logprob: -17.8751220703125
    9. '\")' → logprob: -18.0001220703125
    10. '```' → logprob: -18.0001220703125

Token 155: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' S' (ID: 336)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18871498107910156
    2. '__' → logprob: -2.3137149810791016
    3. ' main' → logprob: -2.8137149810791016
    4. ' ' → logprob: -4.938714981079102
    5. ' sys' → logprob: -6.313714981079102
    6. '_' → logprob: -6.438714981079102
    7. ' solve' → logprob: -7.563714981079102
    8. ' solution' → logprob: -7.813714981079102
    9. 'main' → logprob: -7.938714981079102
    10. ' ' → logprob: -8.438714981079102

Token 157: '():
' (ID: 8595)
  Prédit: 'olution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'olution' → logprob: -0.018281981348991394
    2. 'olve' → logprob: -4.018281936645508
    3. 'OLUTION' → logprob: -9.393281936645508
    4. 'olver' → logprob: -10.893281936645508
    5. 't' → logprob: -11.643281936645508
    6. 'if' → logprob: -12.393281936645508
    7. 'ol' → logprob: -12.643281936645508
    8. 'olutions' → logprob: -12.893281936645508
    9. 'OLVE' → logprob: -13.268281936645508
    10. '```' → logprob: -13.768281936645508

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022148462012410164
    2. ' return' → logprob: -6.3772149085998535
    3. ' Solution' → logprob: -8.002214431762695
    4. 'Solution' → logprob: -10.127214431762695
    5. 'return' → logprob: -10.252214431762695
    6. ' solution' → logprob: -10.252214431762695
    7. ' ' → logprob: -10.627214431762695
    8. '    ' → logprob: -11.502214431762695
    9. '    
' → logprob: -11.502214431762695
    10. '   ' → logprob: -11.877214431762695

Token 159: ' sol' (ID: 1887)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.9726573824882507
    2. 'solution' → logprob: -1.5976574420928955
    3. 's' → logprob: -1.8476574420928955
    4. ' solution' → logprob: -2.0976574420928955
    5. '   ' → logprob: -3.0976574420928955
    6. 'sol' (adapté à ' sol') → logprob: -3.3476574420928955
    7. 'return' → logprob: -4.097657203674316
    8. ' s' → logprob: -4.222657203674316
    9. ' sol' → logprob: -4.847657203674316
    10. ' Solution' → logprob: -5.097657203674316

Token 160: ' =' (ID: 314)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8560506701469421
    2. '.solve' → logprob: -0.8560506701469421
    3. ' =' → logprob: -2.231050729751587
    4. '=' → logprob: -3.481050729751587
    5. 've' → logprob: -5.231050491333008
    6. '()' → logprob: -5.356050491333008
    7. '.' → logprob: -6.606050491333008
    8. 'olve' → logprob: -8.356050491333008
    9. ')' → logprob: -9.231050491333008
    10. 'ove' → logprob: -9.481050491333008

Token 161: ' Solution' (ID: 20858)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.01416350994259119
    2. ' Solution' → logprob: -4.264163494110107
    3. 'Solver' → logprob: -18.514163970947266
    4. 'S' → logprob: -19.889163970947266
    5. 'Sol' → logprob: -20.639163970947266
    6. ' ' → logprob: -21.014163970947266
    7. ' solution' → logprob: -21.139163970947266
    8. '_solution' → logprob: -21.139163970947266
    9. '   ' → logprob: -21.389163970947266
    10. 'Answer' → logprob: -22.139163970947266

Token 162: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3878065347671509
    2. '()' → logprob: -1.1378065347671509
    3. '().' → logprob: -7.012806415557861
    4. '()

' → logprob: -11.13780689239502
    5. '()
' → logprob: -11.51280689239502
    6. '().
' → logprob: -12.13780689239502
    7. '()\' → logprob: -12.63780689239502
    8. '();' → logprob: -14.38780689239502
    9. '   ' → logprob: -15.63780689239502
    10. '(' → logprob: -16.012805938720703

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02042567729949951
    2. 'sol' → logprob: -4.020425796508789
    3. ' sol' → logprob: -6.520425796508789
    4. '
' → logprob: -8.145425796508789
    5. '(sol' → logprob: -8.395425796508789
    6. '.sol' → logprob: -9.145425796508789
    7. '    
' → logprob: -9.895425796508789
    8. '<|end|>' → logprob: -10.520425796508789
    9. '_sol' → logprob: -10.770425796508789
    10. 'solver' → logprob: -11.145425796508789

Token 164: ' sol' (ID: 1887)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' (adapté à ' sol') → logprob: -7.584239938296378e-06
    2. ' sol' → logprob: -12.125007629394531
    3. 'solute' → logprob: -14.375007629394531
    4. 'solve' → logprob: -14.375007629394531
    5. 'solver' → logprob: -15.125007629394531
    6. '   ' → logprob: -15.375007629394531
    7. 'return' → logprob: -15.750007629394531
    8. 'solution' → logprob: -16.12500762939453
    9. '_sol' → logprob: -16.75000762939453
    10. 's' → logprob: -16.75000762939453

Token 165: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -3.91732100979425e-05
    2. '.' → logprob: -10.250039100646973
    3. 'solve' → logprob: -13.125039100646973
    4. '.run' → logprob: -14.250039100646973
    5. ' .' → logprob: -14.500039100646973
    6. '.save' → logprob: -15.000039100646973
    7. '().' → logprob: -15.750039100646973
    8. '.sol' → logprob: -16.37504005432129
    9. '.s' → logprob: -16.62504005432129
    10. '   ' → logprob: -17.37504005432129

Token 166: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.080963092041202e-06
    2. '()
' → logprob: -13.125004768371582
    3. '(' → logprob: -13.250004768371582
    4. '()

' → logprob: -15.125004768371582
    5. ' ()' → logprob: -15.375004768371582
    6. '()]' → logprob: -15.875004768371582
    7. '())' → logprob: -16.0000057220459
    8. '()`' → logprob: -16.0000057220459
    9. '();' → logprob: -16.5000057220459
    10. '().' → logprob: -16.6250057220459

Token 167: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38789018988609314
    2. 'S' → logprob: -1.1378902196884155
    3. 'i' → logprob: -7.637890338897705
    4. ' if' → logprob: -8.262889862060547
    5. '\' → logprob: -9.512889862060547
    6. '#' → logprob: -9.637889862060547
    7. '\n' → logprob: -10.137889862060547
    8. '<|end|>' → logprob: -10.762889862060547
    9. 'If' → logprob: -10.887889862060547
    10. 'I' → logprob: -11.262889862060547

Token 168: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0024783893022686243
    2. '__' → logprob: -6.00247859954834
    3. ' ' → logprob: -13.62747859954834
    4. 'name' → logprob: -13.87747859954834
    5. ' ' → logprob: -15.37747859954834
    6. '_name' → logprob: -16.127477645874023
    7. '  ' → logprob: -16.627477645874023
    8. '___' → logprob: -17.752477645874023
    9. '/__' → logprob: -17.877477645874023
    10. 'Name' → logprob: -18.002477645874023

Token 169: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7830513119697571
    2. ' ==' → logprob: -1.0330512523651123
    3. 'name' → logprob: -1.7830512523651123
    4. '==' → logprob: -4.408051490783691
    5. ' __' → logprob: -5.033051490783691
    6. '=="' → logprob: -9.158051490783691
    7. ' name' → logprob: -10.658051490783691
    8. '_name' → logprob: -10.908051490783691
    9. ' ' → logprob: -11.033051490783691
    10. 'main' → logprob: -11.408051490783691

Token 170: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '__.__' → logprob: -14.625000953674316
    3. '==' → logprob: -15.500000953674316
    4. '____' → logprob: -17.0
    5. '__.' → logprob: -17.125
    6. '___' → logprob: -17.5
    7. ' ==' → logprob: -17.875
    8. '=="' → logprob: -18.375
    9. '__["' → logprob: -18.375
    10. 'name' → logprob: -18.375

Token 171: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14672526717185974
    2. ' ==' → logprob: -2.3967251777648926
    3. '==' → logprob: -3.1467251777648926
    4. '=="' → logprob: -6.021725177764893
    5. '=='' → logprob: -10.89672565460205
    6. ' =="' → logprob: -12.14672565460205
    7. '__.__' → logprob: -12.64672565460205
    8. '_' → logprob: -13.27172565460205
    9. '___' → logprob: -13.77172565460205
    10. '==
' → logprob: -14.02172565460205

Token 172: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014226034283638
    2. ''' → logprob: -4.264225959777832
    3. '__' → logprob: -10.389225959777832
    4. ' "__' → logprob: -10.389225959777832
    5. ' '__' → logprob: -14.639225959777832
    6. '   ' → logprob: -15.389225959777832
    7. ' "' → logprob: -16.51422691345215
    8. '"name' → logprob: -16.76422691345215
    9. '"\' → logprob: -16.76422691345215
    10. '"_' → logprob: -17.13922691345215

Token 173: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.292095299111679e-05
    2. '__' → logprob: -9.750082969665527
    3. 'name' → logprob: -11.250082969665527
    4. '"' → logprob: -11.500082969665527
    5. ' main' → logprob: -13.875082969665527
    6. ''' → logprob: -15.250082969665527
    7. '_main' → logprob: -15.375082969665527
    8. ' "__' → logprob: -17.37508201599121
    9. '	main' → logprob: -18.25008201599121
    10. 'Main' → logprob: -18.37508201599121

Token 174: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018479544669389725
    2. '__' → logprob: -4.018479347229004
    3. '__':
' → logprob: -8.018479347229004
    4. '__:' → logprob: -16.01848030090332
    5. '__
' → logprob: -16.89348030090332
    6. '__["' → logprob: -17.14348030090332
    7. '__.' → logprob: -17.14348030090332
    8. '__.__' → logprob: -18.26848030090332
    9. '_' → logprob: -19.01848030090332
    10. '__",' → logprob: -19.39348030090332

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002720110584050417
    2. '	S' → logprob: -6.002719879150391
    3. ' S' → logprob: -9.25271987915039
    4. 'S' → logprob: -9.75271987915039
    5. '   ' → logprob: -10.00271987915039
    6. '    
' → logprob: -10.37771987915039
    7. '_S' → logprob: -12.87771987915039
    8. ' ' → logprob: -13.12771987915039
    9. '>S' → logprob: -13.50271987915039
    10. '<|end|>' → logprob: -13.50271987915039

Token 176: ' (' (ID: 350)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.7835754988482222e-05
    2. ' S' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.125018119812012
    4. 'import' → logprob: -14.875018119812012
    5. 's' → logprob: -18.750017166137695
    6. '	S' → logprob: -18.750017166137695
    7. ' ' → logprob: -20.125017166137695
    8. 'main' → logprob: -20.375017166137695
    9. '  ' → logprob: -20.875017166137695
    10. '```' → logprob: -21.625017166137695

Token 177: 'lambda' (ID: 35280)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.013676696456968784
    2. ' S' → logprob: -4.638676643371582
    3. '__' → logprob: -6.263676643371582
    4. ')' → logprob: -6.263676643371582
    5. '   ' → logprob: -10.263676643371582
    6. 's' → logprob: -11.138676643371582
    7. ' ' → logprob: -11.263676643371582
    8. ')__' → logprob: -11.263676643371582
    9. 'sys' → logprob: -11.638676643371582
    10. '"S' → logprob: -12.638676643371582

Token 178: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.43825581669807434
    2. ':' → logprob: -1.063255786895752
    3. ' ):' → logprob: -5.313255786895752
    4. ':S' → logprob: -6.063255786895752
    5. '():' → logprob: -6.938255786895752
    6. ' ' → logprob: -7.938255786895752
    7. '):' → logprob: -8.18825626373291
    8. ' )' → logprob: -9.06325626373291
    9. ':s' → logprob: -9.31325626373291
    10. '  ' → logprob: -9.56325626373291

Token 179: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.483571320772171
    2. 'S' → logprob: -0.9835712909698486
    3. '   ' → logprob: -4.733571529388428
    4. ' ' → logprob: -8.35857105255127
    5. ')' → logprob: -8.48357105255127
    6. '    ' → logprob: -9.23357105255127
    7. '       ' → logprob: -9.98357105255127
    8. '  ' → logprob: -10.10857105255127
    9. '	S' → logprob: -11.85857105255127
    10. 's' → logprob: -12.48357105255127

Token 180: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3898351490497589
    2. '())' → logprob: -1.1398351192474365
    3. '()' → logprob: -5.889835357666016
    4. ' )' → logprob: -9.389835357666016
    5. '   ' → logprob: -9.764835357666016
    6. ' ' → logprob: -11.139835357666016
    7. '();)' → logprob: -11.139835357666016
    8. '()))' → logprob: -11.764835357666016
    9. ' ())' → logprob: -11.889835357666016
    10. '()
' → logprob: -13.139835357666016

Token 181: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9146995327901095e-05
    2. '()<' → logprob: -11.750019073486328
    3. ' ()' → logprob: -12.375019073486328
    4. '())' → logprob: -13.250019073486328
    5. '()
' → logprob: -13.500019073486328
    6. '()">' → logprob: -14.000019073486328
    7. '(' → logprob: -14.250019073486328
    8. '();' → logprob: -14.875019073486328
    9. '()>' → logprob: -15.000019073486328
    10. '()`' → logprob: -15.500019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 179
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 91
Tokens correctement prédits (top 10): 150
Précision stricte (1ère position): 48.04%
Précision adaptée (1ère position): 50.84%
Précision (top 10): 83.80%
================================================================================
