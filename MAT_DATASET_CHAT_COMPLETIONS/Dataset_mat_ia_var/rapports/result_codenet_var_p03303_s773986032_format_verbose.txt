================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_string = input()

stride_length = int(input())

current_index = 0

resulting_substring = ""

while current_index < len(input_string):
    resulting_substring += input_string[current_index]
    current_index += stride_length

print(resulting_substring)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_string' (ID: 8609)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.024985339492559433
    2. ''' → logprob: -3.8999853134155273
    3. ' ' → logprob: -6.149985313415527
    4. ' "' → logprob: -6.399985313415527
    5. '""' → logprob: -8.399985313415527
    6. '"""' → logprob: -8.774985313415527
    7. '"user' → logprob: -9.524985313415527
    8. ' '' → logprob: -9.899985313415527
    9. 'input' → logprob: -10.274985313415527
    10. '```' → logprob: -10.774985313415527

Token 4: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005510857328772545
    2. ''' → logprob: -5.5055108070373535
    3. '"' → logprob: -8.130511283874512
    4. '('' → logprob: -8.130511283874512
    5. '```' → logprob: -8.130511283874512
    6. '`' → logprob: -8.755511283874512
    7. '(
' → logprob: -8.880511283874512
    8. ')' → logprob: -9.630511283874512
    9. '()' → logprob: -10.255511283874512
    10. '[' → logprob: -10.630511283874512

Token 5: 'stride' (ID: 118302)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008437863551080227
    2. '.strip' → logprob: -4.883437633514404
    3. '.lower' → logprob: -7.758437633514404
    4. '.split' → logprob: -9.133438110351562
    5. 'if' → logprob: -9.883438110351562
    6. 'print' → logprob: -10.008438110351562
    7. '=' → logprob: -10.133438110351562
    8. '```' → logprob: -10.633438110351562
    9. ':' → logprob: -10.883438110351562
    10. 'strip' → logprob: -11.008438110351562

Token 6: '_length' (ID: 11514)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8003473877906799
    2. '[' → logprob: -1.5503473281860352
    3. '_' → logprob: -1.8003473281860352
    4. '(' → logprob: -1.9253473281860352
    5. ' =' → logprob: -4.425347328186035
    6. ')' → logprob: -4.925347328186035
    7. '.' → logprob: -5.925347328186035
    8. 's' → logprob: -6.800347328186035
    9. ':' → logprob: -6.925347328186035
    10. ',' → logprob: -7.300347328186035

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6383873224258423
    2. '_' → logprob: -1.6383873224258423
    3. ')' → logprob: -1.7633873224258423
    4. ' =' → logprob: -2.7633872032165527
    5. ' ' → logprob: -3.8883872032165527
    6. '.' → logprob: -4.513387203216553
    7. '+' → logprob: -5.763387203216553
    8. '[' → logprob: -6.263387203216553
    9. ',' → logprob: -7.013387203216553
    10. '(' → logprob: -7.013387203216553

Token 8: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15602171421051025
    2. ' len' → logprob: -2.5310215950012207
    3. '1' → logprob: -3.4060215950012207
    4. ' int' → logprob: -4.281021595001221
    5. ' input' → logprob: -5.406021595001221
    6. '0' → logprob: -5.531021595001221
    7. 'len' → logprob: -5.906021595001221
    8. 'int' → logprob: -6.281021595001221
    9. '4' → logprob: -6.656021595001221
    10. 'input' → logprob: -6.781021595001221

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14367103576660156
    2. '(input' → logprob: -2.0186710357666016
    3. '(str' → logprob: -7.393671035766602
    4. '(user' → logprob: -8.768671035766602
    5. '('' → logprob: -9.393671035766602
    6. ' (' → logprob: -9.768671035766602
    7. 'input' → logprob: -10.518671035766602
    8. '()' → logprob: -11.393671035766602
    9. ' ' → logprob: -11.893671035766602
    10. '(`' → logprob: -12.393671035766602

Token 10: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5639654397964478
    2. '()' → logprob: -1.0639654397964478
    3. '(' → logprob: -2.563965320587158
    4. ')' → logprob: -5.188965320587158
    5. '('' → logprob: -6.063965320587158
    6. ' ())' → logprob: -8.438965797424316
    7. '("' → logprob: -8.938965797424316
    8. ' ' → logprob: -9.188965797424316
    9. '().' → logprob: -9.313965797424316
    10. '(

' → logprob: -9.438965797424316

Token 11: 'current' (ID: 5804)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.37252119183540344
    2. 'for' → logprob: -1.997521162033081
    3. 'output' → logprob: -3.122521162033081
    4. 'distance' → logprob: -3.247521162033081
    5. 'total' → logprob: -3.872521162033081
    6. 'step' → logprob: -4.12252140045166
    7. 'steps' → logprob: -4.62252140045166
    8. 'n' → logprob: -4.87252140045166
    9. 'count' → logprob: -5.49752140045166
    10. 'new' → logprob: -5.74752140045166

Token 12: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01978938840329647
    2. '_position' → logprob: -4.144789218902588
    3. '_space' → logprob: -6.519789218902588
    4. ' _' → logprob: -7.019789218902588
    5. '_pos' → logprob: -7.394789218902588
    6. '_str' → logprob: -8.519789695739746
    7. '_token' → logprob: -9.144789695739746
    8. '_stride' → logprob: -9.144789695739746
    9. '_line' → logprob: -9.519789695739746
    10. '_user' → logprob: -10.644789695739746

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5619319081306458
    2. '=' → logprob: -1.311931848526001
    3. ' +=' → logprob: -2.686931848526001
    4. '+' → logprob: -2.936931848526001
    5. ' ' → logprob: -4.06193208694458
    6. '_' → logprob: -4.43693208694458
    7. '+=' → logprob: -5.43693208694458
    8. '<|end|>' → logprob: -5.56193208694458
    9. ' +' → logprob: -7.06193208694458
    10. ')' → logprob: -7.56193208694458

Token 14: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06999501585960388
    2. ' ' → logprob: -2.6949949264526367
    3. ' current' → logprob: -10.319994926452637
    4. 'current' → logprob: -10.819994926452637
    5. '1' → logprob: -13.069994926452637
    6. ' ' → logprob: -14.069994926452637
    7. ' stride' → logprob: -14.132494926452637
    8. 'stride' → logprob: -14.819994926452637
    9. '`' → logprob: -15.507494926452637
    10. '```' → logprob: -15.569994926452637

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012451570364646614
    2. 'current' → logprob: -9.25012493133545
    3. ' ' → logprob: -10.75012493133545
    4. 'stride' → logprob: -12.25012493133545
    5. '```' → logprob: -14.75012493133545
    6. ' current' → logprob: -14.75012493133545
    7. 'input' → logprob: -15.00012493133545
    8. 'len' → logprob: -15.75012493133545
    9. ' stride' → logprob: -15.87512493133545
    10. '1' → logprob: -16.000123977661133

Token 16: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.1052324771881104
    2. '
' → logprob: -1.4802324771881104
    3. '+' → logprob: -1.6052324771881104
    4. ' while' → logprob: -2.4802324771881104
    5. 'w' → logprob: -3.3552324771881104
    6. '<|end|>' → logprob: -4.105232238769531
    7. '#' → logprob: -4.230232238769531
    8. '*' → logprob: -4.480232238769531
    9. ' ' → logprob: -4.730232238769531
    10. '```' → logprob: -4.855232238769531

Token 17: 'result' (ID: 2521)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.001264163525775075
    2. ' while' → logprob: -8.001264572143555
    3. 'output' → logprob: -8.001264572143555
    4. 'result' → logprob: -8.126264572143555
    5. 'current' → logprob: -9.876264572143555
    6. 'next' → logprob: -9.876264572143555
    7. 'token' → logprob: -10.251264572143555
    8. 'if' → logprob: -10.501264572143555
    9. 'wh' → logprob: -10.876264572143555
    10. '```' → logprob: -10.876264572143555

Token 18: 'ing' (ID: 289)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05001170560717583
    2. '[]' → logprob: -3.92501163482666
    3. '=' → logprob: -4.92501163482666
    4. ' =' → logprob: -5.17501163482666
    5. '_' → logprob: -5.30001163482666
    6. ' ' → logprob: -6.05001163482666
    7. '.' → logprob: -6.05001163482666
    8. '[:]' → logprob: -6.55001163482666
    9. 's' → logprob: -6.67501163482666
    10. ' +=' → logprob: -6.80001163482666

Token 19: '_sub' (ID: 11572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.180527463555336
    2. '_string' → logprob: -1.8055274486541748
    3. '_str' → logprob: -8.055527687072754
    4. '_text' → logprob: -8.930527687072754
    5. '_output' → logprob: -9.430527687072754
    6. 'string' → logprob: -10.305527687072754
    7. '_index' → logprob: -10.555527687072754
    8. '_s' → logprob: -10.555527687072754
    9. '_word' → logprob: -10.555527687072754
    10. '_token' → logprob: -10.930527687072754

Token 20: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -2.081584716506768e-05
    2. '_string' → logprob: -11.625020980834961
    3. 'str' → logprob: -12.000020980834961
    4. 'sequence' → logprob: -12.500020980834961
    5. 'tring' → logprob: -13.875020980834961
    6. 'stri' → logprob: -15.125020980834961
    7. '_' → logprob: -15.875020980834961
    8. '_str' → logprob: -15.875020980834961
    9. 's' → logprob: -16.00002098083496
    10. 'strings' → logprob: -16.25002098083496

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4294614791870117
    2. '=' → logprob: -1.6794614791870117
    3. ' +=' → logprob: -2.4294614791870117
    4. '[' → logprob: -2.9294614791870117
    5. '+=' → logprob: -5.304461479187012
    6. '[]' → logprob: -5.679461479187012
    7. ' ' → logprob: -5.804461479187012
    8. '_' → logprob: -5.929461479187012
    9. '+' → logprob: -5.929461479187012
    10. '[:]' → logprob: -6.804461479187012

Token 22: ' ""

' (ID: 86057)
  Prédit: ' ""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ""' → logprob: -0.5304000973701477
    2. '""' → logprob: -1.405400037765503
    3. '"' → logprob: -2.280400037765503
    4. ' ''' → logprob: -3.405400037765503
    5. '''' → logprob: -3.905400037765503
    6. ''' → logprob: -4.905400276184082
    7. ' "' → logprob: -6.280400276184082
    8. ' ' → logprob: -6.655400276184082
    9. ' []' → logprob: -9.155400276184082
    10. ' '' → logprob: -9.780400276184082

Token 23: 'while' (ID: 7032)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07923576235771179
    2. 'while' → logprob: -2.579235792160034
    3. ' while' → logprob: -9.079236030578613
    4. '```' → logprob: -9.579236030578613
    5. '\n' → logprob: -10.579236030578613
    6. '.' → logprob: -10.829236030578613
    7. '\' → logprob: -10.829236030578613
    8. 'i' → logprob: -10.954236030578613
    9. '#' → logprob: -10.954236030578613
    10. 'wh' → logprob: -11.329236030578613

Token 24: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.0016320940339937806
    2. 'current' → logprob: -6.501632213592529
    3. ' ' → logprob: -9.001631736755371
    4. '_current' → logprob: -13.626631736755371
    5. '(current' → logprob: -13.876631736755371
    6. '	current' → logprob: -14.001631736755371
    7. '  ' → logprob: -14.126631736755371
    8. ' input' → logprob: -14.126631736755371
    9. ' ' → logprob: -14.251631736755371
    10. 'Current' → logprob: -14.626631736755371

Token 25: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009136240929365158
    2. '_index' → logprob: -4.759136199951172
    3. ' _' → logprob: -8.259136199951172
    4. '_<' → logprob: -9.634136199951172
    5. '_token' → logprob: -10.134136199951172
    6. '_length' → logprob: -10.384136199951172
    7. '_s' → logprob: -11.009136199951172
    8. '<' → logprob: -11.134136199951172
    9. '_indexes' → logprob: -11.259136199951172
    10. '_current' → logprob: -11.759136199951172

Token 26: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0018233354203402996
    2. '<' → logprob: -6.501823425292969
    3. ' ' → logprob: -8.251823425292969
    4. ' <=' → logprob: -10.626823425292969
    5. '<len' → logprob: -11.251823425292969
    6. '+' → logprob: -11.876823425292969
    7. ' +' → logprob: -12.626823425292969
    8. '<|end|>' → logprob: -13.001823425292969
    9. '<size' → logprob: -13.126823425292969
    10. ' >=' → logprob: -13.501823425292969

Token 27: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.011048289015889168
    2. 'len' → logprob: -4.511048316955566
    3. '(len' → logprob: -15.011048316955566
    4. '=len' → logprob: -16.38604736328125
    5. '	len' → logprob: -17.88604736328125
    6. ' input' → logprob: -17.88604736328125
    7. '<len' → logprob: -18.01104736328125
    8. '[len' → logprob: -18.51104736328125
    9. ' ' → logprob: -18.51104736328125
    10. ',len' → logprob: -19.38604736328125

Token 28: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25202739238739014
    2. '(' → logprob: -1.5020273923873901
    3. ' (' → logprob: -9.87702751159668
    4. '(
' → logprob: -10.37702751159668
    5. '(

' → logprob: -11.62702751159668
    6. '(output' → logprob: -12.87702751159668
    7. '(current' → logprob: -13.75202751159668
    8. '(result' → logprob: -14.12702751159668
    9. '(in' → logprob: -14.50202751159668
    10. '(user' → logprob: -15.50202751159668

Token 29: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00011844364780699834
    2. '(_' → logprob: -9.750118255615234
    3. '(' → logprob: -11.000118255615234
    4. '_' → logprob: -11.375118255615234
    5. '_input' → logprob: -11.750118255615234
    6. ')' → logprob: -12.375118255615234
    7. '_str' → logprob: -12.500118255615234
    8. '(input' → logprob: -12.750118255615234
    9. '_)' → logprob: -13.000118255615234
    10. 'string' → logprob: -13.000118255615234

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14393988251686096
    2. ')' → logprob: -2.018939971923828
    3. ':' → logprob: -7.143939971923828
    4. '+' → logprob: -8.018939971923828
    5. ')+' → logprob: -10.393939971923828
    6. ']' → logprob: -10.768939971923828
    7. ']:' → logprob: -10.893939971923828
    8. '):
' → logprob: -11.143939971923828
    9. ' and' → logprob: -11.518939971923828
    10. '   ' → logprob: -11.518939971923828

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013213411904871464
    2. 'result' → logprob: -4.638213634490967
    3. '    
' → logprob: -6.388213634490967
    4. ' result' → logprob: -6.638213634490967
    5. '```' → logprob: -8.263213157653809
    6. '	result' → logprob: -9.513213157653809
    7. '
' → logprob: -10.888213157653809
    8. ' resulting' → logprob: -10.888213157653809
    9. '[result' → logprob: -11.138213157653809
    10. ' current' → logprob: -11.513213157653809

Token 32: ' resulting' (ID: 20547)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7168334722518921
    2. '   ' → logprob: -0.9668334722518921
    3. ' result' → logprob: -2.0918335914611816
    4. ' resulting' → logprob: -4.966833591461182
    5. '    
' → logprob: -7.716833591461182
    6. ' current' → logprob: -8.466833114624023
    7. '```' → logprob: -9.341833114624023
    8. '	result' → logprob: -9.966833114624023
    9. '    ' → logprob: -9.966833114624023
    10. 'r' → logprob: -10.341833114624023

Token 33: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.001435589394532144
    2. '_' → logprob: -6.62643575668335
    3. '_string' → logprob: -9.251435279846191
    4. '_result' → logprob: -12.126435279846191
    5. '_s' → logprob: -12.251435279846191
    6. '_str' → logprob: -13.751435279846191
    7. '_text' → logprob: -14.876435279846191
    8. ' _' → logprob: -15.126435279846191
    9. 'substring' → logprob: -15.751435279846191
    10. '_sn' → logprob: -15.751435279846191

Token 34: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.2346835732460022
    2. 's' → logprob: -1.6096835136413574
    3. 'str' → logprob: -5.484683513641357
    4. 'tring' → logprob: -6.359683513641357
    5. '_string' → logprob: -6.609683513641357
    6. 'r' → logprob: -6.609683513641357
    7. 'stri' → logprob: -8.109683990478516
    8. 't' → logprob: -9.609683990478516
    9. 'ring' → logprob: -10.109683990478516
    10. '_' → logprob: -10.109683990478516

Token 35: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19946922361850739
    2. ' +=' → logprob: -1.8244692087173462
    3. '+=' → logprob: -4.324469089508057
    4. ' +' → logprob: -5.199469089508057
    5. '+='' → logprob: -7.949469089508057
    6. '+="' → logprob: -8.574469566345215
    7. ' ' → logprob: -9.199469566345215
    8. '[' → logprob: -9.324469566345215
    9. '.append' → logprob: -11.074469566345215
    10. '<|end|>' → logprob: -11.699469566345215

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269298940896988
    2. ' input' → logprob: -2.126929998397827
    3. '(input' → logprob: -14.001930236816406
    4. '[input' → logprob: -15.001930236816406
    5. ' ' → logprob: -15.251930236816406
    6. '	input' → logprob: -16.001930236816406
    7. '<input' → logprob: -16.251930236816406
    8. '=input' → logprob: -16.501930236816406
    9. 'in' → logprob: -17.126930236816406
    10. ',input' → logprob: -17.126930236816406

Token 37: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.0004705914470832795
    2. '_' → logprob: -7.7504706382751465
    3. '_str' → logprob: -11.125470161437988
    4. '_s' → logprob: -11.375470161437988
    5. '_sn' → logprob: -12.875470161437988
    6. ' _' → logprob: -13.250470161437988
    7. '_token' → logprob: -13.375470161437988
    8. '```' → logprob: -13.625470161437988
    9. '__' → logprob: -13.750470161437988
    10. '_user' → logprob: -13.875470161437988

Token 38: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.04869500920176506
    2. '[' → logprob: -3.0486950874328613
    3. '[str' → logprob: -10.548694610595703
    4. '```' → logprob: -10.673694610595703
    5. '[input' → logprob: -11.173694610595703
    6. '   ' → logprob: -11.548694610595703
    7. '[
' → logprob: -11.798694610595703
    8. '\[' → logprob: -12.048694610595703
    9. '[start' → logprob: -12.548694610595703
    10. '[result' → logprob: -12.798694610595703

Token 39: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -15.125000953674316
    3. ' _' → logprob: -15.250000953674316
    4. '_i' → logprob: -16.5
    5. 'index' → logprob: -17.5
    6. '_idx' → logprob: -17.5
    7. '_INDEX' → logprob: -18.0
    8. 'Index' → logprob: -18.5
    9. ']_' → logprob: -18.5
    10. ']' → logprob: -18.625

Token 40: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019769940990954638
    2. '+' → logprob: -8.750197410583496
    3. ' ]' → logprob: -10.250197410583496
    4. ']
' → logprob: -13.625197410583496
    5. '+]' → logprob: -14.125197410583496
    6. ']

' → logprob: -14.625197410583496
    7. '[' → logprob: -15.000197410583496
    8. ')' → logprob: -15.500197410583496
    9. ':]' → logprob: -15.750197410583496
    10. ' ' → logprob: -15.750197410583496

Token 41: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7145386338233948
    2. '    
' → logprob: -1.71453857421875
    3. '\n' → logprob: -2.46453857421875
    4. ' 
' → logprob: -2.46453857421875
    5. '
' → logprob: -3.08953857421875
    6. '   
' → logprob: -3.33953857421875
    7. ' current' → logprob: -3.58953857421875
    8. '  
' → logprob: -4.08953857421875
    9. '```' → logprob: -4.83953857421875
    10. '   ' → logprob: -4.96453857421875

Token 42: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.06302919238805771
    2. '\n' → logprob: -3.8130292892456055
    3. ' current' → logprob: -4.4380292892456055
    4. '    
' → logprob: -4.5630292892456055
    5. ' 
' → logprob: -4.8130292892456055
    6. ' 

' → logprob: -5.9380292892456055
    7. '   
' → logprob: -6.5630292892456055
    8. '  
' → logprob: -6.6880292892456055
    9. '\' → logprob: -7.5630292892456055
    10. '    

' → logprob: -8.063029289245605

Token 43: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0010392407421022654
    2. '_' → logprob: -7.001039028167725
    3. '_idx' → logprob: -9.751039505004883
    4. '__' → logprob: -10.626039505004883
    5. '_i' → logprob: -11.751039505004883
    6. ' _' → logprob: -11.751039505004883
    7. '_line' → logprob: -12.626039505004883
    8. '_indices' → logprob: -12.876039505004883
    9. '_Index' → logprob: -13.001039505004883
    10. '_x' → logprob: -13.126039505004883

Token 44: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26573070883750916
    2. ' +=' → logprob: -1.6407307386398315
    3. ' +' → logprob: -3.265730619430542
    4. ' ' → logprob: -6.765730857849121
    5. '+=' → logprob: -8.640730857849121
    6. '[' → logprob: -12.890730857849121
    7. '+='' → logprob: -12.890730857849121
    8. ' ﻿' → logprob: -13.265730857849121
    9. '<|end|>' → logprob: -13.515730857849121
    10. ' ' → logprob: -14.140730857849121

Token 45: ' stride' (ID: 41335)
  Prédit: 'stride'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stride' → logprob: -0.006718571297824383
    2. ' stride' → logprob: -5.006718635559082
    3. 'str' → logprob: -12.756718635559082
    4. '1' → logprob: -15.506718635559082
    5. '_stride' → logprob: -16.131717681884766
    6. 'strike' → logprob: -16.756717681884766
    7. ' ' → logprob: -17.006717681884766
    8. 'stra' → logprob: -18.131717681884766
    9. 'strate' → logprob: -18.506717681884766
    10. 'Stride' → logprob: -18.631717681884766

Token 46: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.06261184066534042
    2. '_' → logprob: -2.8126118183135986
    3. '_l' → logprob: -7.687612056732178
    4. '_len' → logprob: -9.93761157989502
    5. ' _' → logprob: -10.56261157989502
    6. '__' → logprob: -10.56261157989502
    7. '_size' → logprob: -10.81261157989502
    8. '_L' → logprob: -10.93761157989502
    9. '_le' → logprob: -11.56261157989502
    10. '_
' → logprob: -12.18761157989502

Token 47: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29209110140800476
    2. '
' → logprob: -1.4170911312103271
    3. '<|end|>' → logprob: -5.542090892791748
    4. '\n' → logprob: -6.042090892791748
    5. '```' → logprob: -7.292090892791748
    6. '    
' → logprob: -7.417090892791748
    7. ' 
' → logprob: -7.542090892791748
    8. ')' → logprob: -7.667090892791748
    9. '#' → logprob: -7.667090892791748
    10. '  
' → logprob: -7.792090892791748

Token 48: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00576513446867466
    2. '#' → logprob: -6.130764961242676
    3. 'p' → logprob: -6.880764961242676
    4. 'result' → logprob: -7.005764961242676
    5. '
' → logprob: -7.130764961242676
    6. '<|end|>' → logprob: -8.630764961242676
    7. '```' → logprob: -9.130764961242676
    8. 'r' → logprob: -9.255764961242676
    9. ')' → logprob: -9.755764961242676
    10. '#print' → logprob: -9.755764961242676

Token 49: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023283136542886496
    2. '(result' → logprob: -6.752328395843506
    3. '("("' → logprob: -6.877328395843506
    4. '('' → logprob: -9.377327919006348
    5. '(input' → logprob: -11.002327919006348
    6. '("""' → logprob: -12.502327919006348
    7. '((' → logprob: -12.752327919006348
    8. '()' → logprob: -13.002327919006348
    9. '(output' → logprob: -13.252327919006348
    10. ' (' → logprob: -13.377327919006348

Token 50: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.9862216504407115e-05
    2. '_ing' → logprob: -11.250020027160645
    3. 'g' → logprob: -12.875020027160645
    4. '_' → logprob: -13.125020027160645
    5. 'ed' → logprob: -13.750020027160645
    6. ')' → logprob: -15.000020027160645
    7. 'ng' → logprob: -15.125020027160645
    8. ')_' → logprob: -15.625020027160645
    9. '_sub' → logprob: -15.750020027160645
    10. 'i' → logprob: -16.625019073486328

Token 51: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0016609008889645338
    2. '_' → logprob: -6.7516608238220215
    3. '_string' → logprob: -8.37666130065918
    4. '_s' → logprob: -8.50166130065918
    5. 'g' → logprob: -10.75166130065918
    6. 'substring' → logprob: -11.25166130065918
    7. 's' → logprob: -11.87666130065918
    8. '_str' → logprob: -12.37666130065918
    9. 'ing' → logprob: -12.75166130065918
    10. '_sn' → logprob: -13.00166130065918

Token 52: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.0002644351334311068
    2. 'ring' → logprob: -8.750264167785645
    3. 'tring' → logprob: -9.250264167785645
    4. 'str' → logprob: -12.125264167785645
    5. '_string' → logprob: -13.000264167785645
    6. 'r' → logprob: -13.500264167785645
    7. 'ing' → logprob: -14.250264167785645
    8. 'sting' → logprob: -17.00026512145996
    9. 's' → logprob: -17.37526512145996
    10. 'String' → logprob: -18.12526512145996

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.375000953674316
    3. '))' → logprob: -16.875
    4. ')`' → logprob: -18.375
    5. '')' → logprob: -18.75
    6. '`)' → logprob: -18.875
    7. ')
' → logprob: -19.625
    8. '")' → logprob: -20.375
    9. '）' → logprob: -20.5
    10. ']' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 43.14%
Précision adaptée (1ère position): 45.10%
Précision (top 10): 76.47%
================================================================================
