================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
k = int(input())

AnS = [x for x in range(1,10)]
def sumdig(z): return sum(map(int,str(z)))
for X in range(1,15):
    b = [None]*100000
    n,d=pow(10,X),eval("'9'"*X)
    I=0
    while I<10000:
        nu = I*n+d
        s = ''.join(str(nu))
        s_ = 0
        j=0
        while j<len(s):
            s_ = s_ + int(s[j])
            j=j+1
        res = nu/s_
        b[I]=res
        if I:
            if res<b[I-1]:
                try:
                    AnS.pop()
                except:
                    pass
                break
            else:
                if nu not in AnS:
                    AnS.append(nu)
        else:
            if nu not in AnS:
                AnS.append(nu)
        I+=1

for i in range(k):
    print(AnS[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'k' (ID: 74)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006164593622088432
    2. '(k' → logprob: -5.13116455078125
    3. ''' → logprob: -9.88116455078125
    4. '```' → logprob: -9.88116455078125
    5. 'k' → logprob: -10.38116455078125
    6. '('' → logprob: -10.50616455078125
    7. '("("' → logprob: -11.00616455078125
    8. '()' → logprob: -11.50616455078125
    9. '[' → logprob: -11.50616455078125
    10. ')' → logprob: -11.75616455078125

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10969176143407822
    2. ')' → logprob: -2.359691858291626
    3. '()' → logprob: -5.109691619873047
    4. '(k' → logprob: -6.859691619873047
    5. '(
' → logprob: -6.984691619873047
    6. '())' → logprob: -7.984691619873047
    7. '('' → logprob: -8.234691619873047
    8. '```' → logprob: -8.734691619873047
    9. '(

' → logprob: -9.109691619873047
    10. ''' → logprob: -9.609691619873047

Token 5: 'An' (ID: 2223)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.661497175693512
    2. '*' → logprob: -2.036497116088867
    3. 'i' → logprob: -2.161497116088867
    4. '+' → logprob: -2.411497116088867
    5. 'for' → logprob: -2.786497116088867
    6. ' ' → logprob: -3.911497116088867
    7. ' if' → logprob: -4.786497116088867
    8. 's' → logprob: -4.911497116088867
    9. ')' → logprob: -4.911497116088867
    10. '\n' → logprob: -5.161497116088867

Token 6: 'S' (ID: 50)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2508343458175659
    2. 's' → logprob: -1.625834345817566
    3. 'a' → logprob: -4.8758344650268555
    4. '=' → logprob: -5.0008344650268555
    5. 'swer' → logprob: -5.6258344650268555
    6. ' =' → logprob: -5.8758344650268555
    7. '```' → logprob: -6.1258344650268555
    8. 'd' → logprob: -7.0008344650268555
    9. '#' → logprob: -8.000834465026855
    10. '+' → logprob: -8.625834465026855

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3330288827419281
    2. 'wer' → logprob: -1.4580289125442505
    3. '=' → logprob: -3.958028793334961
    4. '[' → logprob: -4.583028793334961
    5. ' +=' → logprob: -4.958028793334961
    6. 'wers' → logprob: -5.208028793334961
    7. 'w' → logprob: -5.208028793334961
    8. 'swer' → logprob: -6.583028793334961
    9. '+' → logprob: -7.208028793334961
    10. ' ' → logprob: -8.208028793334961

Token 8: ' [' (ID: 723)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5020783543586731
    2. 'k' → logprob: -1.6270782947540283
    3. ' []' → logprob: -2.0020782947540283
    4. '0' → logprob: -3.7520782947540283
    5. '[]' → logprob: -4.252078533172607
    6. ' ' → logprob: -4.752078533172607
    7. '"' → logprob: -5.002078533172607
    8. '"k' → logprob: -5.877078533172607
    9. ' "' → logprob: -6.002078533172607
    10. ''' → logprob: -6.877078533172607

Token 9: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17072223126888275
    2. 'k' → logprob: -2.295722246170044
    3. ']' → logprob: -3.045722246170044
    4. 'int' → logprob: -5.170722007751465
    5. '1' → logprob: -6.670722007751465
    6. '[]' → logprob: -7.795722007751465
    7. ')' → logprob: -8.295722007751465
    8. 'i' → logprob: -8.545722007751465
    9. '(' → logprob: -8.795722007751465
    10. 'input' → logprob: -8.920722007751465

Token 10: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04379112645983696
    2. 'for' → logprob: -3.1687910556793213
    3. ' ' → logprob: -7.7937912940979
    4. '**' → logprob: -8.543790817260742
    5. '+' → logprob: -9.293790817260742
    6. '*' → logprob: -10.293790817260742
    7. ',' → logprob: -11.418790817260742
    8. ')' → logprob: -11.668790817260742
    9. '	for' → logprob: -11.918790817260742
    10. ' in' → logprob: -12.043790817260742

Token 11: ' x' (ID: 1215)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2886787950992584
    2. ' x' → logprob: -1.663678765296936
    3. ' in' → logprob: -3.5386788845062256
    4. 'range' → logprob: -3.7886788845062256
    5. ' ' → logprob: -5.2886786460876465
    6. 'x' → logprob: -5.5386786460876465
    7. '_' → logprob: -8.788679122924805
    8. ' xrange' → logprob: -8.788679122924805
    9. ' _' → logprob: -8.913679122924805
    10. ' i' → logprob: -9.038679122924805

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026767442002892494
    2. 'in' → logprob: -3.6517674922943115
    3. 'n' → logprob: -8.15176773071289
    4. ' ' → logprob: -9.02676773071289
    5. '	in' → logprob: -11.15176773071289
    6. ' n' → logprob: -12.15176773071289
    7. 's' → logprob: -12.15176773071289
    8. ' ' → logprob: -12.27676773071289
    9. 'import' → logprob: -12.40176773071289
    10. 'x' → logprob: -12.52676773071289

Token 13: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.22545135021209717
    2. 'range' → logprob: -1.6004513502120972
    3. ' ' → logprob: -11.475451469421387
    4. '(range' → logprob: -11.975451469421387
    5. ' input' → logprob: -12.100451469421387
    6. '	range' → logprob: -12.100451469421387
    7. 'input' → logprob: -12.850451469421387
    8. '[' → logprob: -13.600451469421387
    9. ' ran' → logprob: -14.162951469421387
    10. '  ' → logprob: -14.162951469421387

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31326648592948914
    2. '(k' → logprob: -1.3132665157318115
    3. '(n' → logprob: -12.81326675415039
    4. '(len' → logprob: -14.43826675415039
    5. '((' → logprob: -14.81326675415039
    6. '(
' → logprob: -15.68826675415039
    7. ' (' → logprob: -15.68826675415039
    8. '(-' → logprob: -15.93826675415039
    9. '(i' → logprob: -16.06326675415039
    10. '(

' → logprob: -16.31326675415039

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6358104944229126
    2. 'k' → logprob: -0.7608104944229126
    3. '10' → logprob: -7.010810375213623
    4. '100' → logprob: -7.260810375213623
    5. '0' → logprob: -7.510810375213623
    6. '(k' → logprob: -7.635810375213623
    7. '(' → logprob: -8.260810852050781
    8. '2' → logprob: -9.760810852050781
    9. '101' → logprob: -9.760810852050781
    10. '11' → logprob: -10.635810852050781

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007286088075488806
    2. ',k' → logprob: -5.132286071777344
    3. ' ,' → logprob: -6.632286071777344
    4. '(k' → logprob: -10.507286071777344
    5. '(' → logprob: -11.507286071777344
    6. 'k' → logprob: -14.132286071777344
    7. ',n' → logprob: -14.382286071777344
    8. ',(' → logprob: -15.382286071777344
    9. ',int' → logprob: -16.132286071777344
    10. '，' → logprob: -16.632286071777344

Token 17: '10' (ID: 702)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20202210545539856
    2. ' k' → logprob: -1.7020220756530762
    3. ' ' → logprob: -8.577022552490234
    4. '11' → logprob: -8.577022552490234
    5. '10' → logprob: -8.702022552490234
    6. '100' → logprob: -10.077022552490234
    7. '101' → logprob: -12.077022552490234
    8. '51' → logprob: -12.577022552490234
    9. '20' → logprob: -12.827022552490234
    10. '1' → logprob: -13.077022552490234

Token 18: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2503148019313812
    2. ')' → logprob: -1.7503148317337036
    3. '+' → logprob: -3.750314712524414
    4. ')])' → logprob: -3.750314712524414
    5. ' +' → logprob: -8.250314712524414
    6. '1' → logprob: -8.750314712524414
    7. '**' → logprob: -9.125314712524414
    8. '+k' → logprob: -9.875314712524414
    9. ' ' → logprob: -10.875314712524414
    10. ' )' → logprob: -11.000314712524414

Token 19: 'def' (ID: 1314)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3135227560997009
    2. '[' → logprob: -1.9385228157043457
    3. ':' → logprob: -2.8135228157043457
    4. '*' → logprob: -3.1885228157043457
    5. '[:]' → logprob: -4.563522815704346
    6. '[k' → logprob: -5.813522815704346
    7. '[:' → logprob: -5.938522815704346
    8. ' **' → logprob: -6.063522815704346
    9. '(' → logprob: -6.938522815704346
    10. '+' → logprob: -7.063522815704346

Token 20: ' sum' (ID: 4215)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.5347108840942383
    2. ' ' → logprob: -1.7847108840942383
    3. ' factor' → logprob: -2.7847108840942383
    4. ' f' → logprob: -2.7847108840942383
    5. ' solve' → logprob: -3.2847108840942383
    6. ' main' → logprob: -4.284710884094238
    7. ' add' → logprob: -4.534710884094238
    8. ' solution' → logprob: -4.534710884094238
    9. ' space' → logprob: -4.784710884094238
    10. ' calculate' → logprob: -5.034710884094238

Token 21: 'dig' (ID: 33529)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2284424901008606
    2. '(' → logprob: -1.6034424304962158
    3. '_numbers' → logprob: -7.228442668914795
    4. '_of' → logprob: -8.103442192077637
    5. '_(' → logprob: -8.228442192077637
    6. '(a' → logprob: -8.353442192077637
    7. '_s' → logprob: -8.478442192077637
    8. ' (' → logprob: -9.103442192077637
    9. '_sum' → logprob: -9.353442192077637
    10. ')' → logprob: -9.353442192077637

Token 22: '(z' (ID: 27674)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.6139671206474304
    2. '(' → logprob: -1.2389671802520752
    3. 'its' → logprob: -1.8639671802520752
    4. '(it' → logprob: -5.363966941833496
    5. '(x' → logprob: -5.988966941833496
    6. '(i' → logprob: -6.738966941833496
    7. 't' → logprob: -6.863966941833496
    8. 'i' → logprob: -6.988966941833496
    9. '```' → logprob: -6.988966941833496
    10. '(n' → logprob: -7.738966941833496

Token 23: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008672838099300861
    2. ')' → logprob: -4.883672714233398
    3. '(z' → logprob: -7.508672714233398
    4. '(' → logprob: -8.758672714233398
    5. ',' → logprob: -8.758672714233398
    6. 'z' → logprob: -9.633672714233398
    7. ' ):' → logprob: -10.258672714233398
    8. '(x' → logprob: -10.758672714233398
    9. ')):' → logprob: -10.883672714233398
    10. '):
' → logprob: -11.258672714233398

Token 24: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.389436274766922
    2. '   ' → logprob: -1.5144362449645996
    3. ':' → logprob: -3.2644362449645996
    4. ' ' → logprob: -4.1394362449646
    5. ' (' → logprob: -4.6394362449646
    6. '(x' → logprob: -4.6394362449646
    7. 's' → logprob: -5.0144362449646
    8. '(z' → logprob: -5.5144362449646
    9. ' return' → logprob: -5.8894362449646
    10. '(n' → logprob: -6.3894362449646

Token 25: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3321869969367981
    2. 'z' → logprob: -2.0821869373321533
    3. ' sum' → logprob: -2.3321869373321533
    4. ' z' → logprob: -2.8321869373321533
    5. '(sum' → logprob: -6.332187175750732
    6. 'int' → logprob: -9.832186698913574
    7. 'x' → logprob: -9.957186698913574
    8. ' ' → logprob: -10.207186698913574
    9. ' (' → logprob: -10.707186698913574
    10. ' x' → logprob: -10.832186698913574

Token 26: '(map' (ID: 16946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.21947649121284485
    2. '(' → logprob: -2.5944764614105225
    3. '(abs' → logprob: -2.8444764614105225
    4. 'int' → logprob: -3.2194764614105225
    5. '(x' → logprob: -5.344476699829102
    6. '(z' → logprob: -5.469476699829102
    7. 'abs' → logprob: -5.469476699829102
    8. '(str' → logprob: -5.969476699829102
    9. '[int' → logprob: -6.219476699829102
    10. '(map' → logprob: -6.594476699829102

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0018328495789319277
    2. '(lambda' → logprob: -6.626832962036133
    3. '(str' → logprob: -8.501832962036133
    4. 'int' → logprob: -8.751832962036133
    5. '(ord' → logprob: -9.001832962036133
    6. '(' → logprob: -11.126832962036133
    7. 'str' → logprob: -12.626832962036133
    8. 'lambda' → logprob: -12.876832962036133
    9. '[int' → logprob: -14.251832962036133
    10. '<int' → logprob: -14.501832962036133

Token 28: ',str' (ID: 95110)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.005848561879247427
    2. 'str' → logprob: -5.880848407745361
    3. ',str' → logprob: -6.005848407745361
    4. '(' → logprob: -8.13084888458252
    5. ',' → logprob: -8.63084888458252
    6. ' str' → logprob: -9.75584888458252
    7. 'list' → logprob: -11.13084888458252
    8. ')' → logprob: -11.50584888458252
    9. '[str' → logprob: -12.00584888458252
    10. '(list' → logprob: -12.25584888458252

Token 29: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -6.24179228907451e-05
    2. '(' → logprob: -9.750061988830566
    3. 'z' → logprob: -12.500061988830566
    4. '(x' → logprob: -15.750061988830566
    5. '(abs' → logprob: -16.125062942504883
    6. '(k' → logprob: -17.250062942504883
    7. ' (' → logprob: -17.500062942504883
    8. ')' → logprob: -17.625062942504883
    9. ')(' → logprob: -18.375062942504883
    10. '	z' → logprob: -18.750062942504883

Token 30: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.47616520524024963
    2. '))))' → logprob: -0.9761651754379272
    3. ')' → logprob: -6.226165294647217
    4. '))' → logprob: -10.226164817810059
    5. '))))
' → logprob: -11.226164817810059
    6. '[' → logprob: -11.351164817810059
    7. '])))' → logprob: -11.476164817810059
    8. '))))

' → logprob: -11.601164817810059
    9. '')))' → logprob: -11.851164817810059
    10. ')));' → logprob: -11.976164817810059

Token 31: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34288743138313293
    2. '
' → logprob: -2.3428874015808105
    3. '(
' → logprob: -2.5928874015808105
    4. '\n' → logprob: -3.8428874015808105
    5. '(k' → logprob: -4.0928874015808105
    6. '[' → logprob: -4.4678874015808105
    7. ' 
' → logprob: -4.5928874015808105
    8. 'if' → logprob: -4.8428874015808105
    9. ':' → logprob: -4.8428874015808105
    10. '\' → logprob: -5.0928874015808105

Token 32: ' X' (ID: 2127)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6003477573394775
    2. ' ' → logprob: -1.2253477573394775
    3. ' x' → logprob: -2.2253477573394775
    4. ' _' → logprob: -3.2253477573394775
    5. '_' → logprob: -4.850347518920898
    6. 'x' → logprob: -7.725347518920898
    7. ' n' → logprob: -8.100347518920898
    8. ' a' → logprob: -8.225347518920898
    9. 'i' → logprob: -8.225347518920898
    10. ' k' → logprob: -8.350347518920898

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08901035040616989
    2. 'in' → logprob: -2.464010238647461
    3. ' ' → logprob: -10.214010238647461
    4. '	in' → logprob: -11.839010238647461
    5. 'n' → logprob: -12.339010238647461
    6. 'In' → logprob: -12.714010238647461
    7. '  ' → logprob: -12.964010238647461
    8. 's' → logprob: -13.089010238647461
    9. '_' → logprob: -13.089010238647461
    10. '_in' → logprob: -13.714010238647461

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.32890504598617554
    2. 'range' → logprob: -1.5789051055908203
    3. ' An' → logprob: -2.8289051055908203
    4. 'An' → logprob: -4.20390510559082
    5. '(range' → logprob: -10.20390510559082
    6. ' ' → logprob: -11.07890510559082
    7. '(' → logprob: -12.82890510559082
    8. 'Range' → logprob: -13.20390510559082
    9. '	range' → logprob: -13.20390510559082
    10. ' xrange' → logprob: -13.20390510559082

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005234832875430584
    2. '(k' → logprob: -5.255234718322754
    3. '((' → logprob: -14.755234718322754
    4. '(n' → logprob: -15.880234718322754
    5. '(len' → logprob: -16.38023567199707
    6. '(-' → logprob: -16.38023567199707
    7. ' (' → logprob: -16.75523567199707
    8. '(
' → logprob: -16.88023567199707
    9. '(i' → logprob: -17.00523567199707
    10. '(X' → logprob: -17.63023567199707

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04017914459109306
    2. 'k' → logprob: -3.9151792526245117
    3. '10' → logprob: -5.040179252624512
    4. '(' → logprob: -5.165179252624512
    5. '100' → logprob: -5.290179252624512
    6. '(k' → logprob: -7.915179252624512
    7. '999' → logprob: -8.040179252624512
    8. '9' → logprob: -8.290179252624512
    9. '0' → logprob: -8.415179252624512
    10. '11' → logprob: -8.415179252624512

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3307526707649231
    2. ',k' → logprob: -1.5807526111602783
    3. ' ,' → logprob: -2.5807526111602783
    4. '0' → logprob: -10.5807523727417
    5. ',(' → logprob: -11.3307523727417
    6. '10' → logprob: -11.3307523727417
    7. '1' → logprob: -11.7057523727417
    8. ',n' → logprob: -12.3307523727417
    9. ' ' → logprob: -13.2057523727417
    10. '9' → logprob: -13.3307523727417

Token 38: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6605545878410339
    2. 'k' → logprob: -1.2855546474456787
    3. '100' → logprob: -1.6605546474456787
    4. ' ' → logprob: -4.6605544090271
    5. '101' → logprob: -6.0355544090271
    6. '1' → logprob: -6.1605544090271
    7. ' k' → logprob: -7.5355544090271
    8. '9' → logprob: -8.035554885864258
    9. '46' → logprob: -8.035554885864258
    10. '99' → logprob: -8.535554885864258

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043010495603084564
    2. '+' → logprob: -3.5430104732513428
    3. ' ):' → logprob: -5.918010711669922
    4. '0' → logprob: -6.043010711669922
    5. '):
' → logprob: -6.043010711669922
    6. ' +' → logprob: -6.543010711669922
    7. '**' → logprob: -6.668010711669922
    8. ')' → logprob: -7.168010711669922
    9. '):
' → logprob: -7.418010711669922
    10. '1' → logprob: -8.043010711669922

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10800719261169434
    2. ' for' → logprob: -3.1080071926116943
    3. '   ' → logprob: -3.9830071926116943
    4. ' :' → logprob: -4.108007431030273
    5. ' ' → logprob: -4.358007431030273
    6. ':
' → logprob: -4.983007431030273
    7. ' :
' → logprob: -6.733007431030273
    8. 'for' → logprob: -8.233007431030273
    9. '    ' → logprob: -8.483007431030273
    10. '[' → logprob: -8.858007431030273

Token 41: ' b' (ID: 287)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6394975781440735
    2. ' ' → logprob: -0.8894975781440735
    3. 'for' → logprob: -3.3894975185394287
    4. '    ' → logprob: -3.8894975185394287
    5. '   ' → logprob: -6.139497756958008
    6. '     
' → logprob: -6.139497756958008
    7. ' 
' → logprob: -6.889497756958008
    8. '[' → logprob: -8.514497756958008
    9. '    
' → logprob: -8.764497756958008
    10. '```' → logprob: -8.889497756958008

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7236826419830322
    2. ' =' → logprob: -0.9736826419830322
    3. 'est' → logprob: -2.7236826419830322
    4. 'ase' → logprob: -3.8486826419830322
    5. 'reak' → logprob: -4.973682403564453
    6. 'r' → logprob: -4.973682403564453
    7. 'e' → logprob: -5.223682403564453
    8. 'y' → logprob: -5.473682403564453
    9. '**' → logprob: -5.598682403564453
    10. 'ig' → logprob: -6.223682403564453

Token 43: ' [' (ID: 723)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -1.7142698764801025
    2. ' ' → logprob: -1.7142698764801025
    3. 'k' → logprob: -1.7142698764801025
    4. '10' → logprob: -2.0892698764801025
    5. 'X' → logprob: -2.4642698764801025
    6. '1' → logprob: -3.0892698764801025
    7. ' k' → logprob: -3.3392698764801025
    8. ' (' → logprob: -3.4642698764801025
    9. ' X' → logprob: -3.4642698764801025
    10. '(' → logprob: -4.089269638061523

Token 44: 'None' (ID: 8505)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18840241432189941
    2. 'k' → logprob: -3.0634024143218994
    3. 'sum' → logprob: -3.0634024143218994
    4. 'i' → logprob: -3.4384024143218994
    5. 'X' → logprob: -4.93840217590332
    6. 'y' → logprob: -5.31340217590332
    7. 'int' → logprob: -5.31340217590332
    8. '10' → logprob: -5.43840217590332
    9. 'str' → logprob: -5.68840217590332
    10. '(x' → logprob: -5.81340217590332

Token 45: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9258735775947571
    2. ' for' → logprob: -1.4258735179901123
    3. ' if' → logprob: -1.5508735179901123
    4. ']*(' → logprob: -3.0508735179901123
    5. 'for' → logprob: -3.6758735179901123
    6. ']+' → logprob: -3.9258735179901123
    7. ',' → logprob: -4.050873756408691
    8. 'if' → logprob: -4.300873756408691
    9. ' ]' → logprob: -5.175873756408691
    10. ']*' → logprob: -5.300873756408691

Token 46: '100' (ID: 1353)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.040246844291687
    2. '(' → logprob: -1.415246844291687
    3. 'k' → logprob: -2.1652469635009766
    4. '15' → logprob: -2.4152469635009766
    5. '100' → logprob: -3.1652469635009766
    6. '10' → logprob: -3.2902469635009766
    7. '9' → logprob: -3.7902469635009766
    8. '(X' → logprob: -3.7902469635009766
    9. '20' → logprob: -4.165246963500977
    10. '50' → logprob: -4.790246963500977

Token 47: '000' (ID: 1302)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7932117581367493
    2. '<|end|>' → logprob: -0.9182117581367493
    3. '   ' → logprob: -3.2932116985321045
    4. ' ' → logprob: -3.5432116985321045
    5. '    
' → logprob: -3.7932116985321045
    6. '0' → logprob: -4.293211936950684
    7. ' 
' → logprob: -4.293211936950684
    8. '[' → logprob: -5.043211936950684
    9. '    ' → logprob: -5.543211936950684
    10. 'for' → logprob: -5.543211936950684

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15763132274150848
    2. '<|end|>' → logprob: -3.0326313972473145
    3. ' 
' → logprob: -3.2826313972473145
    4. 'for' → logprob: -3.6576313972473145
    5. '    
' → logprob: -5.1576313972473145
    6. ' for' → logprob: -5.2826313972473145
    7. ' ' → logprob: -5.2826313972473145
    8. '  
' → logprob: -5.7826313972473145
    9. '[' → logprob: -6.0326313972473145
    10. '   ' → logprob: -6.2826313972473145

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3272157907485962
    2. 'for' → logprob: -1.5772157907485962
    3. ' ' → logprob: -3.0772156715393066
    4. ' b' → logprob: -4.702215671539307
    5. 'b' → logprob: -5.202215671539307
    6. '<|end|>' → logprob: -5.452215671539307
    7. '   ' → logprob: -6.327215671539307
    8. ' 
' → logprob: -6.577215671539307
    9. '    ' → logprob: -6.952215671539307
    10. '[' → logprob: -7.077215671539307

Token 51: ',d' (ID: 26159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2254885584115982
    2. ' =' → logprob: -1.600488543510437
    3. 'w' → logprob: -11.100488662719727
    4. 'x' → logprob: -11.350488662719727
    5. 's' → logprob: -11.850488662719727
    6. 'ext' → logprob: -12.225488662719727
    7. ' ' → logprob: -12.350488662719727
    8. ',' → logprob: -12.725488662719727
    9. '=int' → logprob: -12.725488662719727
    10. 'ow' → logprob: -12.850488662719727

Token 52: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6333437561988831
    2. ' =' → logprob: -0.7583437561988831
    3. ',' → logprob: -7.258343696594238
    4. ' ' → logprob: -11.883343696594238
    5. '=int' → logprob: -12.008343696594238
    6. ',k' → logprob: -12.258343696594238
    7. '=[]' → logprob: -12.883343696594238
    8. ' ,' → logprob: -13.008343696594238
    9. ',n' → logprob: -13.258343696594238
    10. '  ' → logprob: -13.258343696594238

Token 53: 'pow' (ID: 30304)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8404105305671692
    2. 'X' → logprob: -1.7154104709625244
    3. ' ' → logprob: -1.8404104709625244
    4. ' X' → logprob: -1.9654104709625244
    5. '0' → logprob: -3.0904104709625244
    6. 'k' → logprob: -4.0904107093811035
    7. ' k' → logprob: -4.9654107093811035
    8. '2' → logprob: -5.0904107093811035
    9. 'div' → logprob: -5.3404107093811035
    10. ' div' → logprob: -5.9654107093811035

Token 54: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10341201722621918
    2. '(k' → logprob: -2.853411912918091
    3. '(X' → logprob: -3.228411912918091
    4. '(x' → logprob: -7.22841215133667
    5. '((' → logprob: -8.978411674499512
    6. '10' → logprob: -10.103411674499512
    7. '(s' → logprob: -10.978411674499512
    8. '(pow' → logprob: -11.728411674499512
    9. '(n' → logprob: -11.853411674499512
    10. '2' → logprob: -11.853411674499512

Token 55: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3032580316066742
    2. '(' → logprob: -2.053257942199707
    3. 'k' → logprob: -2.553257942199707
    4. '(k' → logprob: -3.553257942199707
    5. '2' → logprob: -4.303257942199707
    6. '9' → logprob: -5.053257942199707
    7. 'X' → logprob: -5.678257942199707
    8. '(X' → logprob: -6.928257942199707
    9. '5' → logprob: -7.053257942199707
    10. ')' → logprob: -8.053257942199707

Token 56: ',X' (ID: 83943)
  Prédit: ',X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',X' → logprob: -0.22763687372207642
    2. ',' → logprob: -1.6026368141174316
    3. ',k' → logprob: -6.352636814117432
    4. 'X' → logprob: -8.22763729095459
    5. ',x' → logprob: -9.35263729095459
    6. '(X' → logprob: -10.85263729095459
    7. ',(' → logprob: -10.85263729095459
    8. '   ' → logprob: -11.10263729095459
    9. ',n' → logprob: -11.35263729095459
    10. '(' → logprob: -11.47763729095459

Token 57: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6891336441040039
    2. ',' → logprob: -1.314133644104004
    3. '-' → logprob: -1.689133644104004
    4. ',-' → logprob: -4.064133644104004
    5. ')' → logprob: -4.939133644104004
    6. '),(' → logprob: -5.439133644104004
    7. ' ,' → logprob: -5.564133644104004
    8. ' ),' → logprob: -5.689133644104004
    9. ' -' → logprob: -6.064133644104004
    10. '1' → logprob: -6.689133644104004

Token 58: 'eval' (ID: 37679)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6548255085945129
    2. '1' → logprob: -1.0298254489898682
    3. '10' → logprob: -3.029825448989868
    4. 'pow' → logprob: -4.029825687408447
    5. '9' → logprob: -4.154825687408447
    6. ' k' → logprob: -4.404825687408447
    7. '0' → logprob: -4.404825687408447
    8. ' ' → logprob: -4.654825687408447
    9. '[' → logprob: -6.404825687408447
    10. '2' → logprob: -6.529825687408447

Token 59: '("'' (ID: 100044)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0185891389846802
    2. '('' → logprob: -1.0185891389846802
    3. '(input' → logprob: -1.7685891389846802
    4. '("("' → logprob: -3.2685890197753906
    5. '('(' → logprob: -3.6435890197753906
    6. '(f' → logprob: -4.018589019775391
    7. '("(' → logprob: -4.768589019775391
    8. '(str' → logprob: -5.143589019775391
    9. '(('' → logprob: -5.643589019775391
    10. '("' → logprob: -6.143589019775391

Token 60: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8271657824516296
    2. ''' → logprob: -0.9521657824516296
    3. ''*' → logprob: -2.7021658420562744
    4. '9' → logprob: -3.7021658420562744
    5. '"' → logprob: -3.9521658420562744
    6. '1' → logprob: -4.327165603637695
    7. 'str' → logprob: -4.702165603637695
    8. 'pow' → logprob: -5.827165603637695
    9. 'k' → logprob: -6.077165603637695
    10. '"*' → logprob: -6.327165603637695

Token 61: ''"' (ID: 27386)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.13344214856624603
    2. '"*' → logprob: -2.6334421634674072
    3. ''"' → logprob: -3.7584421634674072
    4. ''' → logprob: -4.008441925048828
    5. '"' → logprob: -5.133441925048828
    6. '*' → logprob: -5.758441925048828
    7. '*"' → logprob: -6.008441925048828
    8. '"'' → logprob: -10.258441925048828
    9. ''+' → logprob: -11.508441925048828
    10. '"+' → logprob: -11.633441925048828

Token 62: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1576513946056366
    2. ''*' → logprob: -2.032651424407959
    3. '*d' → logprob: -5.907651424407959
    4. '"*' → logprob: -5.907651424407959
    5. '*f' → logprob: -6.282651424407959
    6. '`' → logprob: -6.407651424407959
    7. '*k' → logprob: -6.782651424407959
    8. '*n' → logprob: -6.907651424407959
    9. '+' → logprob: -7.657651424407959
    10. '**' → logprob: -7.782651424407959

Token 63: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0015493794344365597
    2. 'k' → logprob: -7.001549243927002
    3. '(X' → logprob: -7.876549243927002
    4. ' X' → logprob: -8.75154972076416
    5. '(' → logprob: -9.25154972076416
    6. ' (' → logprob: -13.75154972076416
    7. '{' → logprob: -13.87654972076416
    8. ')' → logprob: -14.62654972076416
    9. ' ' → logprob: -14.75154972076416
    10. '(k' → logprob: -14.87654972076416

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0077375853434205055
    2. '')' → logprob: -5.132737636566162
    3. '")' → logprob: -7.382737636566162
    4. '))' → logprob: -7.882737636566162
    5. ' )' → logprob: -8.882737159729004
    6. '+')' → logprob: -8.882737159729004
    7. ')
' → logprob: -9.382737159729004
    8. '+' → logprob: -9.382737159729004
    9. '+)' → logprob: -9.757737159729004
    10. '`)' → logprob: -9.757737159729004

Token 65: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20272870361804962
    2. '+' → logprob: -2.577728748321533
    3. '<|end|>' → logprob: -2.952728748321533
    4. ')' → logprob: -3.577728748321533
    5. ')
' → logprob: -4.327728748321533
    6. '   ' → logprob: -5.827728748321533
    7. '-' → logprob: -6.827728748321533
    8. '    
' → logprob: -7.077728748321533
    9. '+
' → logprob: -7.327728748321533
    10. '#' → logprob: -7.327728748321533

Token 66: ' I' (ID: 357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0629323720932007
    2. ' for' → logprob: -1.5629323720932007
    3. '   ' → logprob: -1.8129323720932007
    4. ')' → logprob: -1.9379323720932007
    5. 'b' → logprob: -3.5629324913024902
    6. '
' → logprob: -3.5629324913024902
    7. '+' → logprob: -3.5629324913024902
    8. 'n' → logprob: -4.68793249130249
    9. ',' → logprob: -5.18793249130249
    10. ' ' → logprob: -5.56293249130249

Token 67: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32137176394462585
    2. 'n' → logprob: -1.6963717937469482
    3. ' =' → logprob: -2.5713717937469482
    4. 'f' → logprob: -5.071371555328369
    5. 'nd' → logprob: -6.321371555328369
    6. 'nt' → logprob: -6.696371555328369
    7. 'dx' → logprob: -7.196371555328369
    8. 'nit' → logprob: -7.321371555328369
    9. 'd' → logprob: -7.571371555328369
    10. 't' → logprob: -7.821371555328369

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3215588331222534
    2. '1' → logprob: -1.5715588331222534
    3. ' ' → logprob: -2.821558952331543
    4. 'n' → logprob: -5.946558952331543
    5. 'k' → logprob: -6.696558952331543
    6. '10' → logprob: -7.196558952331543
    7. ' n' → logprob: -7.321558952331543
    8. '[' → logprob: -7.696558952331543
    9. ' k' → logprob: -7.821558952331543
    10. ' [' → logprob: -8.321558952331543

Token 69: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11319219321012497
    2. ' 
' → logprob: -2.988192081451416
    3. '<|end|>' → logprob: -3.988192081451416
    4. ' ' → logprob: -5.238192081451416
    5. ',' → logprob: -5.363192081451416
    6. '  
' → logprob: -5.488192081451416
    7. '    
' → logprob: -5.738192081451416
    8. '   ' → logprob: -5.863192081451416
    9. '   
' → logprob: -5.863192081451416
    10. 'for' → logprob: -5.988192081451416

Token 70: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0490293502807617
    2. ' for' → logprob: -1.5490293502807617
    3. 'for' → logprob: -1.9240293502807617
    4. ' 
' → logprob: -2.2990293502807617
    5. '<|end|>' → logprob: -3.0490293502807617
    6. ' while' → logprob: -3.1740293502807617
    7. 'n' → logprob: -3.9240293502807617
    8. '   ' → logprob: -4.299029350280762
    9. 'while' (adapté à ' while') → logprob: -4.299029350280762
    10. '
' → logprob: -4.549029350280762

Token 72: ' I' (ID: 357)
  Prédit: ' I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' I' → logprob: -0.20456141233444214
    2. 'I' → logprob: -1.954561471939087
    3. ' n' → logprob: -3.454561471939087
    4. 'n' → logprob: -5.329561233520508
    5. ' i' → logprob: -6.079561233520508
    6. ' True' → logprob: -6.079561233520508
    7. ' ' → logprob: -7.204561233520508
    8. ' b' → logprob: -7.454561233520508
    9. 'True' → logprob: -8.579561233520508
    10. 'b' → logprob: -8.579561233520508

Token 73: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6223741173744202
    2. '<n' → logprob: -1.1223740577697754
    3. '<' → logprob: -2.1223740577697754
    4. ' <=' → logprob: -4.372374057769775
    5. '<=' → logprob: -5.497374057769775
    6. ' n' → logprob: -7.247374057769775
    7. ' ' → logprob: -7.622374057769775
    8. '<len' → logprob: -9.622374534606934
    9. '+' → logprob: -9.997374534606934
    10. 'n' → logprob: -10.747374534606934

Token 74: '100' (ID: 1353)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07218293845653534
    2. ' n' → logprob: -2.8221828937530518
    3. 'd' → logprob: -5.322183132171631
    4. '10' → logprob: -6.447183132171631
    5. '100' → logprob: -6.822183132171631
    6. 'b' → logprob: -7.697183132171631
    7. ' ' → logprob: -7.697183132171631
    8. ' d' → logprob: -7.947183132171631
    9. 'len' → logprob: -7.947183132171631
    10. 'k' → logprob: -8.072182655334473

Token 75: '00' (ID: 504)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -2.4272752852994017e-05
    2. '00' → logprob: -11.12502384185791
    3. '0' → logprob: -11.75002384185791
    4. '_' → logprob: -13.75002384185791
    5. ':' → logprob: -15.12502384185791
    6. ' ' → logprob: -15.62502384185791
    7. '   ' → logprob: -17.125024795532227
    8. '001' → logprob: -17.375024795532227
    9. 'k' → logprob: -17.625024795532227
    10. '{' → logprob: -19.125024795532227

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09309765696525574
    2. ' and' → logprob: -2.593097686767578
    3. ' :' → logprob: -4.843097686767578
    4. 'and' → logprob: -5.218097686767578
    5. ':
' → logprob: -7.343097686767578
    6. ' ' → logprob: -9.843097686767578
    7. '   ' → logprob: -10.218097686767578
    8. ' :
' → logprob: -10.468097686767578
    9. ':n' → logprob: -11.843097686767578
    10. '):' → logprob: -12.218097686767578

Token 77: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40120232105255127
    2. ' ' → logprob: -2.2762022018432617
    3. ' :' → logprob: -2.5262022018432617
    4. '    ' → logprob: -3.4012022018432617
    5. ',' → logprob: -3.4012022018432617
    6. '       ' → logprob: -3.6512022018432617
    7. '   ' → logprob: -3.7762022018432617
    8. ' and' → logprob: -5.526202201843262
    9. '<|end|>' → logprob: -5.526202201843262
    10. ' ,' → logprob: -5.776202201843262

Token 78: ' nu' (ID: 4120)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7460752129554749
    2. ' 
' → logprob: -1.87107515335083
    3. '    ' → logprob: -2.37107515335083
    4. ' s' → logprob: -3.24607515335083
    5. ' n' → logprob: -3.49607515335083
    6. 'n' → logprob: -3.62107515335083
    7. '     
' → logprob: -3.62107515335083
    8. '   ' → logprob: -3.74607515335083
    9. '       ' → logprob: -3.99607515335083
    10. ' if' → logprob: -4.12107515335083

Token 79: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006623593159019947
    2. '=' → logprob: -5.8816237449646
    3. 'mb' → logprob: -5.8816237449646
    4. ' =' → logprob: -8.006623268127441
    5. '=m' → logprob: -8.006623268127441
    6. '=n' → logprob: -9.381623268127441
    7. '+=' → logprob: -9.506623268127441
    8. '=int' → logprob: -10.006623268127441
    9. 'ms' → logprob: -10.631623268127441
    10. '   ' → logprob: -11.006623268127441

Token 80: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.3593732118606567
    2. ' n' → logprob: -1.3593732118606567
    3. 'n' → logprob: -1.4843732118606567
    4. ' I' → logprob: -2.484373092651367
    5. ' b' → logprob: -3.859373092651367
    6. ' (' → logprob: -4.109373092651367
    7. 'b' → logprob: -4.234373092651367
    8. '(' → logprob: -4.234373092651367
    9. 'd' → logprob: -4.234373092651367
    10. ' d' → logprob: -4.484373092651367

Token 81: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.4185253381729126
    2. '*' → logprob: -1.6685253381729126
    3. '**' → logprob: -2.793525218963623
    4. '+' → logprob: -2.918525218963623
    5. '*k' → logprob: -4.168525218963623
    6. '*d' → logprob: -4.418525218963623
    7. ' *' → logprob: -5.918525218963623
    8. '+n' → logprob: -6.168525218963623
    9. '*p' → logprob: -6.668525218963623
    10. '*(' → logprob: -6.668525218963623

Token 82: '+d' (ID: 127807)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.046898066997528076
    2. ' +' → logprob: -3.671898126602173
    3. '+k' → logprob: -4.421897888183594
    4. '+i' → logprob: -5.796897888183594
    5. '+x' → logprob: -6.421897888183594
    6. '+b' → logprob: -6.796897888183594
    7. '+n' → logprob: -7.046897888183594
    8. '+d' → logprob: -8.046897888183594
    9. '+p' → logprob: -8.296897888183594
    10. '+(' → logprob: -8.296897888183594

Token 83: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0693218782544136
    2. '-' → logprob: -3.444321870803833
    3. ' +' → logprob: -3.819321870803833
    4. '-n' → logprob: -5.944322109222412
    5. ' -' → logprob: -6.319322109222412
    6. '+b' → logprob: -6.444322109222412
    7. '+k' → logprob: -6.569322109222412
    8. '+i' → logprob: -6.694322109222412
    9. '*' → logprob: -6.819322109222412
    10. '+n' → logprob: -7.194322109222412

Token 84: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2755936086177826
    2. ' if' → logprob: -2.2755935192108154
    3. 'if' → logprob: -2.9005935192108154
    4. ' ' → logprob: -3.4005935192108154
    5. ' +' → logprob: -4.0255937576293945
    6. '
' → logprob: -4.7755937576293945
    7. ' 
' → logprob: -5.9005937576293945
    8. '%' → logprob: -5.9005937576293945
    9. '       ' → logprob: -5.9005937576293945
    10. '<|end|>' → logprob: -6.2755937576293945

Token 85: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07382763177156448
    2. 'if' → logprob: -2.8238277435302734
    3. '+' → logprob: -4.823827743530273
    4. ' +' → logprob: -6.948827743530273
    5. '       ' → logprob: -7.698827743530273
    6. ' ' → logprob: -7.948827743530273
    7. '
' → logprob: -7.948827743530273
    8. ')' → logprob: -8.448827743530273
    9. '        
' → logprob: -8.448827743530273
    10. ' 
' → logprob: -8.698827743530273

Token 86: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1899125576019287
    2. '=' → logprob: -1.3149125576019287
    3. ' =' → logprob: -1.3149125576019287
    4. 'um' → logprob: -2.1899125576019287
    5. 'd' → logprob: -3.3149125576019287
    6. '=sum' → logprob: -6.314912796020508
    7. '=u' → logprob: -6.439912796020508
    8. '_' → logprob: -6.814912796020508
    9. ' ' → logprob: -6.939912796020508
    10. 's' → logprob: -7.439912796020508

Token 87: ' ''.' (ID: 105941)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5761027336120605
    2. 'sum' → logprob: -0.8261027336120605
    3. 'um' → logprob: -9.576103210449219
    4. '(sum' → logprob: -9.951103210449219
    5. ' ' → logprob: -11.076103210449219
    6. '	sum' → logprob: -11.451103210449219
    7. '=sum' → logprob: -11.576103210449219
    8. 's' → logprob: -13.076103210449219
    9. ',sum' → logprob: -13.451103210449219
    10. '.sum' → logprob: -14.013603210449219

Token 88: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0003993296413682401
    2. 'count' → logprob: -8.000399589538574
    3. 'replace' → logprob: -11.000399589538574
    4. 'split' → logprob: -11.250399589538574
    5. 'strip' → logprob: -11.375399589538574
    6. 'format' → logprob: -11.750399589538574
    7. 'concat' → logprob: -12.375399589538574
    8. 'startswith' → logprob: -12.375399589538574
    9. 'find' → logprob: -13.500399589538574
    10. 'sum' → logprob: -13.625399589538574

Token 89: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.5908628106117249
    2. '(map' → logprob: -1.09086275100708
    3. '([' → logprob: -2.46586275100708
    4. '(sorted' → logprob: -4.59086275100708
    5. '(' → logprob: -4.84086275100708
    6. '(chr' → logprob: -5.71586275100708
    7. '(list' → logprob: -6.21586275100708
    8. '[str' → logprob: -7.34086275100708
    9. '(['' → logprob: -8.215863227844238
    10. '(re' → logprob: -8.340863227844238

Token 90: '(n' (ID: 2406)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.2721368372440338
    2. '(x' → logprob: -1.8971368074417114
    3. '(i' → logprob: -3.022136926651001
    4. '(n' → logprob: -4.147136688232422
    5. '(' → logprob: -5.397136688232422
    6. '(s' → logprob: -5.647136688232422
    7. '(num' → logprob: -5.772136688232422
    8. '(b' → logprob: -6.397136688232422
    9. '((' → logprob: -6.522136688232422
    10. '(e' → logprob: -6.647136688232422

Token 91: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.001924352254718542
    2. ')' → logprob: -7.751924514770508
    3. 'i' → logprob: -7.751924514770508
    4. 'ud' → logprob: -8.876924514770508
    5. 's' → logprob: -9.126924514770508
    6. 'd' → logprob: -9.189424514770508
    7. 'x' → logprob: -9.501924514770508
    8. 'n' → logprob: -9.814424514770508
    9. 'um' → logprob: -9.876924514770508
    10. 'o' → logprob: -9.939424514770508

Token 92: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004746248945593834
    2. ')' → logprob: -5.754746437072754
    3. ')[' → logprob: -7.254746437072754
    4. ').' → logprob: -8.129746437072754
    5. ')))' → logprob: -9.004746437072754
    6. '))+' → logprob: -9.129746437072754
    7. ' ))' → logprob: -9.629746437072754
    8. ')+' → logprob: -10.254746437072754
    9. '[i' → logprob: -10.254746437072754
    10. '[' → logprob: -10.254746437072754

Token 93: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11301567405462265
    2. '[' → logprob: -3.613015651702881
    3. '<|end|>' → logprob: -3.613015651702881
    4. 'if' → logprob: -4.488015651702881
    5. '.split' → logprob: -4.988015651702881
    6. ' if' → logprob: -5.113015651702881
    7. '[i' → logprob: -5.363015651702881
    8. '[::-' → logprob: -5.988015651702881
    9. '   ' → logprob: -6.113015651702881
    10. ')
' → logprob: -6.238015651702881

Token 94: ' s' (ID: 265)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.188090443611145
    2. ' ' → logprob: -1.438090443611145
    3. ' if' → logprob: -1.688090443611145
    4. '[' → logprob: -2.5630903244018555
    5. 'if' → logprob: -3.1880903244018555
    6. '+' → logprob: -3.8130903244018555
    7. ' +' → logprob: -4.1880903244018555
    8. '[::-' → logprob: -4.4380903244018555
    9. '.' → logprob: -4.5630903244018555
    10. 's' (adapté à ' s') → logprob: -4.9380903244018555

Token 95: '_' (ID: 62)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26594939827919006
    2. '+' → logprob: -2.2659494876861572
    3. '.' → logprob: -2.8909494876861572
    4. ' =' → logprob: -4.265949249267578
    5. '=' → logprob: -4.515949249267578
    6. '[::-' → logprob: -5.265949249267578
    7. '.count' → logprob: -5.390949249267578
    8. '[-' → logprob: -5.390949249267578
    9. ' +' → logprob: -5.640949249267578
    10. ' ==' → logprob: -5.765949249267578

Token 96: ' =' (ID: 314)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.21937896311283112
    2. 'ig' → logprob: -2.34437894821167
    3. '[' → logprob: -3.59437894821167
    4. 'um' → logprob: -4.34437894821167
    5. '=' → logprob: -4.71937894821167
    6. 'igits' → logprob: -4.71937894821167
    7. 'dig' → logprob: -5.21937894821167
    8. '[i' → logprob: -5.59437894821167
    9. 'in' → logprob: -5.84437894821167
    10. 'm' → logprob: -5.96937894821167

Token 97: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8781695365905762
    2. 'str' → logprob: -2.003169536590576
    3. ' sum' → logprob: -2.503169536590576
    4. 's' → logprob: -2.878169536590576
    5. ' str' → logprob: -2.878169536590576
    6. ' [' → logprob: -3.253169536590576
    7. '[s' → logprob: -3.378169536590576
    8. ' s' → logprob: -3.628169536590576
    9. '[' → logprob: -3.628169536590576
    10. '''.' → logprob: -3.628169536590576

Token 98: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7654862403869629
    2. 'str' → logprob: -0.8904862403869629
    3. 's' → logprob: -3.515486240386963
    4. '''.' → logprob: -3.640486240386963
    5. '[str' → logprob: -4.140486240386963
    6. '[s' → logprob: -4.390486240386963
    7. 'list' → logprob: -4.640486240386963
    8. 'sorted' → logprob: -5.015486240386963
    9. '[' → logprob: -5.265486240386963
    10. '[int' → logprob: -5.515486240386963

Token 99: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5949387550354004
    2. '+' → logprob: -1.5949387550354004
    3. '=' → logprob: -1.8449387550354004
    4. '+=' → logprob: -3.2199387550354004
    5. ' for' → logprob: -3.9699387550354004
    6. '<|end|>' → logprob: -4.0949387550354
    7. ' ' → logprob: -5.8449387550354
    8. 's' → logprob: -6.0949387550354
    9. ' =' → logprob: -6.7199387550354
    10. 'x' → logprob: -6.9699387550354

Token 100: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30741503834724426
    2. 'for' → logprob: -2.182415008544922
    3. '<|end|>' → logprob: -2.307415008544922
    4. ' ' → logprob: -4.557415008544922
    5. ' for' → logprob: -4.932415008544922
    6. ')' → logprob: -5.307415008544922
    7. 's' → logprob: -5.557415008544922
    8. '   ' → logprob: -5.557415008544922
    9. ' +' → logprob: -5.682415008544922
    10. '+=' → logprob: -6.182415008544922

Token 101: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023295558989048004
    2. ' for' → logprob: -3.7732956409454346
    3. ' ' → logprob: -10.023295402526855
    4. 's' → logprob: -13.648295402526855
    5. '	for' → logprob: -13.648295402526855
    6. 'or' → logprob: -13.773295402526855
    7. 'r' → logprob: -14.148295402526855
    8. '
' → logprob: -15.023295402526855
    9. 'j' (adapté à ' j') → logprob: -15.273295402526855
    10. '   ' → logprob: -15.398295402526855

Token 102: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8081732392311096
    2. '=' → logprob: -1.3081731796264648
    3. ' +=' → logprob: -1.6831731796264648
    4. '+=' → logprob: -3.183173179626465
    5. ' ' → logprob: -3.808173179626465
    6. '+' → logprob: -4.183173179626465
    7. '<|end|>' → logprob: -4.308173179626465
    8. ' in' → logprob: -6.058173179626465
    9. ' +' → logprob: -6.933173179626465
    10. '<|end|>' → logprob: -7.308173179626465

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06221303343772888
    2. ' ' → logprob: -2.8122129440307617
    3. '1' → logprob: -8.437212944030762
    4. 'len' → logprob: -11.812212944030762
    5. 's' → logprob: -12.062212944030762
    6. ' len' → logprob: -12.687212944030762
    7. ' s' → logprob: -13.062212944030762
    8. '<|end|>' → logprob: -13.562212944030762
    9. '   ' → logprob: -13.812212944030762
    10. 'k' → logprob: -13.937212944030762

Token 104: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.09134258329868317
    2. ' while' → logprob: -2.4663426876068115
    3. 'for' → logprob: -6.966342449188232
    4. 'j' → logprob: -7.591342449188232
    5. '<|end|>' → logprob: -8.09134292602539
    6. 's' → logprob: -8.71634292602539
    7. ' j' → logprob: -8.96634292602539
    8. ' for' → logprob: -8.96634292602539
    9. '	while' → logprob: -9.21634292602539
    10. ' ' → logprob: -9.71634292602539

Token 107: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.42882826924324036
    2. 'j' → logprob: -1.053828239440918
    3. ' ' → logprob: -9.678828239440918
    4. ' s' → logprob: -10.428828239440918
    5. 's' → logprob: -11.053828239440918
    6. ' True' → logprob: -12.303828239440918
    7. 'len' → logprob: -12.303828239440918
    8. 'True' → logprob: -12.803828239440918
    9. ' len' → logprob: -12.928828239440918
    10. '	j' → logprob: -13.178828239440918

Token 108: '<len' (ID: 141365)
  Prédit: '<len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.2327258437871933
    2. '<' → logprob: -1.7327258586883545
    3. ' <' → logprob: -3.4827258586883545
    4. '<size' → logprob: -9.982726097106934
    5. '<s' → logprob: -10.732726097106934
    6. '<n' → logprob: -11.107726097106934
    7. '<=' → logprob: -11.982726097106934
    8. 'len' → logprob: -12.607726097106934
    9. ' len' → logprob: -13.232726097106934
    10. ' ' → logprob: -13.607726097106934

Token 109: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006477446295320988
    2. 's' → logprob: -7.37564754486084
    3. '(' → logprob: -11.62564754486084
    4. '(str' → logprob: -12.12564754486084
    5. ' (' → logprob: -13.12564754486084
    6. ' s' → logprob: -13.87564754486084
    7. '(n' → logprob: -14.00064754486084
    8. '(k' → logprob: -14.00064754486084
    9. '(b' → logprob: -14.50064754486084
    10. '(S' → logprob: -15.75064754486084

Token 110: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.46084704995155334
    2. '):' → logprob: -1.335847020149231
    3. ')' → logprob: -2.3358471393585205
    4. ' and' → logprob: -5.210846900939941
    5. 'and' → logprob: -5.710846900939941
    6. '):
' → logprob: -8.335846900939941
    7. '):

' → logprob: -8.960846900939941
    8. ' ):
' → logprob: -9.210846900939941
    9. ':' → logprob: -9.710846900939941
    10. ' ):' → logprob: -9.835846900939941

Token 111: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22584259510040283
    2. '           ' → logprob: -2.3508424758911133
    3. ':' → logprob: -3.3508424758911133
    4. ' and' → logprob: -3.6008424758911133
    5. ' +' → logprob: -4.600842475891113
    6. ' s' → logprob: -4.850842475891113
    7. ' ' → logprob: -5.100842475891113
    8. 's' → logprob: -5.100842475891113
    9. '<|end|>' → logprob: -5.600842475891113
    10. ':
' → logprob: -5.850842475891113

Token 112: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.31824347376823425
    2. ' s' → logprob: -1.5682435035705566
    3. '+' → logprob: -3.3182435035705566
    4. ' if' → logprob: -4.068243503570557
    5. 'if' → logprob: -5.568243503570557
    6. ' ' → logprob: -5.568243503570557
    7. '       ' → logprob: -7.193243503570557
    8. '           ' → logprob: -7.193243503570557
    9. ' and' → logprob: -7.568243503570557
    10. '<|end|>' → logprob: -7.568243503570557

Token 113: '_' (ID: 62)
  Prédit: '_['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.19858020544052124
    2. '_' → logprob: -1.948580265045166
    3. '[j' → logprob: -3.323580265045166
    4. 's' → logprob: -7.698580265045166
    5. '__[' → logprob: -8.073579788208008
    6. '[' → logprob: -8.323579788208008
    7. '[s' → logprob: -9.073579788208008
    8. '_=' → logprob: -9.198579788208008
    9. '[_' → logprob: -9.448579788208008
    10. '_]' → logprob: -9.448579788208008

Token 114: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018240783363580704
    2. ' +=' → logprob: -4.018240928649902
    3. '=' → logprob: -9.768240928649902
    4. '+=(' → logprob: -10.518240928649902
    5. '+' → logprob: -12.893240928649902
    6. ']+=' → logprob: -13.018240928649902
    7. '+='' → logprob: -14.018240928649902
    8. ' =' → logprob: -15.143240928649902
    9. '+="' → logprob: -15.268240928649902
    10. ' ' → logprob: -15.643240928649902

Token 115: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14393790066242218
    2. ' s' → logprob: -2.018937826156616
    3. 'sum' → logprob: -7.018938064575195
    4. 'int' → logprob: -8.893938064575195
    5. '10' → logprob: -9.518938064575195
    6. ' ' → logprob: -10.143938064575195
    7. ' sum' → logprob: -10.143938064575195
    8. '(s' → logprob: -10.268938064575195
    9. ' int' → logprob: -11.143938064575195
    10. ' (' → logprob: -11.268938064575195

Token 116: '_' (ID: 62)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34458038210868835
    2. ' +' → logprob: -1.7195804119110107
    3. '_' → logprob: -2.2195804119110107
    4. 's' → logprob: -6.469580173492432
    5. '+s' → logprob: -6.469580173492432
    6. ' s' → logprob: -8.71958065032959
    7. ' ' → logprob: -8.96958065032959
    8. '+j' → logprob: -9.21958065032959
    9. '*' → logprob: -10.09458065032959
    10. '+d' → logprob: -10.09458065032959

Token 117: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011138362810015678
    2. ' +' → logprob: -4.761138439178467
    3. '*' → logprob: -6.011138439178467
    4. '+s' → logprob: -10.511137962341309
    5. '+k' → logprob: -10.886137962341309
    6. '+j' → logprob: -11.261137962341309
    7. '+x' → logprob: -12.886137962341309
    8. ' *' → logprob: -13.386137962341309
    9. '+d' → logprob: -13.886137962341309
    10. ' ' → logprob: -13.886137962341309

Token 118: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015990376472473145
    2. 'sum' → logprob: -4.265990257263184
    3. ' int' → logprob: -6.765990257263184
    4. 'pow' → logprob: -7.890990257263184
    5. 'ord' → logprob: -8.640990257263184
    6. '(int' → logprob: -10.140990257263184
    7. '1' → logprob: -10.515990257263184
    8. ' sum' → logprob: -11.390990257263184
    9. ' ' → logprob: -11.640990257263184
    10. '(' → logprob: -12.015990257263184

Token 119: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00011033779446734115
    2. '(' → logprob: -9.500110626220703
    3. 's' → logprob: -10.250110626220703
    4. '(
' → logprob: -16.500110626220703
    5. '(str' → logprob: -17.875110626220703
    6. '(n' → logprob: -18.000110626220703
    7. ' (' → logprob: -18.250110626220703
    8. ' s' → logprob: -19.500110626220703
    9. '(S' → logprob: -19.625110626220703
    10. ' ' → logprob: -19.625110626220703

Token 120: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005848454311490059
    2. '[s' → logprob: -7.500585079193115
    3. '[' → logprob: -11.000584602355957
    4. '(j' → logprob: -11.625584602355957
    5. '(s' → logprob: -12.500584602355957
    6. 's' → logprob: -13.500584602355957
    7. '()[' → logprob: -15.625584602355957
    8. ' s' → logprob: -15.750584602355957
    9. ' [' → logprob: -15.750584602355957
    10. '[
' → logprob: -16.000585556030273

Token 121: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010622250847518444
    2. '])
' → logprob: -6.876062393188477
    3. '])+' → logprob: -12.001062393188477
    4. ')' → logprob: -12.126062393188477
    5. ' ])' → logprob: -12.501062393188477
    6. '[j' → logprob: -13.001062393188477
    7. ']' → logprob: -13.126062393188477
    8. ']))' → logprob: -13.501062393188477
    9. ''])' → logprob: -13.626062393188477
    10. ')])' → logprob: -13.751062393188477

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09415543079376221
    2. '
' → logprob: -2.9691553115844727
    3. 'j' → logprob: -3.9691553115844727
    4. '       ' → logprob: -4.594155311584473
    5. '<|end|>' → logprob: -6.344155311584473
    6. '   ' → logprob: -6.969155311584473
    7. ' j' → logprob: -6.969155311584473
    8. '               ' → logprob: -7.344155311584473
    9. '            
' → logprob: -7.469155311584473
    10. '[j' → logprob: -7.469155311584473

Token 123: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.5247789025306702
    2. ' j' → logprob: -1.6497788429260254
    3. '
' → logprob: -1.8997788429260254
    4. '+' → logprob: -3.1497788429260254
    5. '+j' → logprob: -4.774778842926025
    6. ' ' → logprob: -5.024778842926025
    7. ' 
' → logprob: -6.149778842926025
    8. '           ' → logprob: -6.774778842926025
    9. '	j' → logprob: -7.024778842926025
    10. '<|end|>' → logprob: -7.149778842926025

Token 124: '=j' (ID: 104163)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0029594001825898886
    2. '+=' → logprob: -6.002959251403809
    3. ' +' → logprob: -8.002959251403809
    4. ' +=' → logprob: -9.002959251403809
    5. '<|end|>' → logprob: -11.627959251403809
    6. '++' → logprob: -12.127959251403809
    7. '=' → logprob: -12.252959251403809
    8. ')' → logprob: -13.752959251403809
    9. '+
' → logprob: -13.752959251403809
    10. ' ' → logprob: -13.877959251403809

Token 125: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013393278641160578
    2. '1' → logprob: -9.500133514404297
    3. ' +' → logprob: -9.750133514404297
    4. '+j' → logprob: -14.375133514404297
    5. '+
' → logprob: -17.000133514404297
    6. ' ' → logprob: -17.250133514404297
    7. ' plus' → logprob: -18.250133514404297
    8. '()+' → logprob: -18.500133514404297
    9. '+k' → logprob: -20.125133514404297
    10. '+=' → logprob: -20.375133514404297

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.250015258789062
    4. '2' → logprob: -18.000015258789062
    5. '  ' → logprob: -18.250015258789062
    6. '```' → logprob: -18.250015258789062
    7. '7' → logprob: -18.375015258789062
    8. '
' → logprob: -18.562515258789062
    9. '4' → logprob: -19.562515258789062
    10. '3' → logprob: -19.687515258789062

Token 127: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06617166101932526
    2. '       ' → logprob: -3.566171646118164
    3. '<|end|>' → logprob: -3.566171646118164
    4. '+' → logprob: -5.691171646118164
    5. '<|end|>' → logprob: -6.566171646118164
    6. '
' → logprob: -6.566171646118164
    7. '        
' → logprob: -8.441171646118164
    8. '#' → logprob: -8.941171646118164
    9. '```' → logprob: -9.066171646118164
    10. ' 
' → logprob: -9.191171646118164

Token 128: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5509636998176575
    2. '       ' → logprob: -0.9259636998176575
    3. '<|end|>' → logprob: -3.8009636402130127
    4. ',' → logprob: -7.050963878631592
    5. '
' → logprob: -7.300963878631592
    6. '+' → logprob: -7.300963878631592
    7. '<|end|>' → logprob: -7.675963878631592
    8. ' if' → logprob: -7.800963878631592
    9. ' ' → logprob: -8.175963401794434
    10. ' 
' → logprob: -8.175963401794434

Token 129: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20613150298595428
    2. '
' → logprob: -2.4561314582824707
    3. '       ' → logprob: -2.7061314582824707
    4. 'if' → logprob: -3.7061314582824707
    5. '+' → logprob: -5.706131458282471
    6. ' ' → logprob: -6.956131458282471
    7. '<|end|>' → logprob: -7.081131458282471
    8. ' s' → logprob: -7.581131458282471
    9. '        
' → logprob: -7.706131458282471
    10. '
' → logprob: -7.956131458282471

Token 130: ' =' (ID: 314)
  Prédit: 'ults'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ults' → logprob: -1.0388820171356201
    2. ' =' → logprob: -1.1638820171356201
    3. 'ult' → logprob: -1.6638820171356201
    4. 's' → logprob: -2.41388201713562
    5. '=' → logprob: -3.66388201713562
    6. 'u' → logprob: -3.78888201713562
    7. 't' → logprob: -5.913882255554199
    8. '.append' → logprob: -6.913882255554199
    9. 'uts' → logprob: -7.288882255554199
    10. 'uls' → logprob: -7.913882255554199

Token 131: ' nu' (ID: 4120)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9383383393287659
    2. 'nu' → logprob: -1.063338279724121
    3. ' sum' → logprob: -2.188338279724121
    4. ' nu' → logprob: -2.563338279724121
    5. 's' → logprob: -3.938338279724121
    6. ' s' → logprob: -4.438338279724121
    7. '(sum' → logprob: -4.813338279724121
    8. ' (' → logprob: -5.188338279724121
    9. '(' → logprob: -5.438338279724121
    10. '[' → logprob: -5.813338279724121

Token 132: '/s' (ID: 5031)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018848467618227005
    2. ' +' → logprob: -4.143848419189453
    3. '+s' → logprob: -6.143848419189453
    4. '-' → logprob: -7.893848419189453
    5. '+k' → logprob: -8.893848419189453
    6. '-s' → logprob: -9.768848419189453
    7. ' -' → logprob: -11.018848419189453
    8. '+b' → logprob: -11.268848419189453
    9. '+n' → logprob: -11.643848419189453
    10. '*' → logprob: -11.893848419189453

Token 133: '_
' (ID: 27437)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.06790564209222794
    2. 'm' → logprob: -3.0679056644439697
    3. 'ums' → logprob: -4.692905426025391
    4. ')' → logprob: -5.942905426025391
    5. '_' → logprob: -6.067905426025391
    6. '>' → logprob: -6.817905426025391
    7. 'ms' → logprob: -7.317905426025391
    8. 's' → logprob: -7.692905426025391
    9. 'qrt' → logprob: -8.06790542602539
    10. 'sum' → logprob: -8.19290542602539

Token 134: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' b' (ID: 287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16996166110038757
    2. ' if' → logprob: -2.16996169090271
    3. '
' → logprob: -3.54496169090271
    4. '<|end|>' → logprob: -5.169961452484131
    5. ' 
' → logprob: -6.419961452484131
    6. '+' → logprob: -6.669961452484131
    7. ')' → logprob: -7.544961452484131
    8. ';if' → logprob: -7.794961452484131
    9. '    
' → logprob: -7.919961452484131
    10. 'int' → logprob: -8.044961929321289

Token 136: '[I' (ID: 120516)
  Prédit: '[I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[I' → logprob: -0.016925768926739693
    2. '[' → logprob: -4.141925811767578
    3. '[b' → logprob: -7.141925811767578
    4. '[int' → logprob: -9.891925811767578
    5. '[i' → logprob: -10.766925811767578
    6. '[B' → logprob: -11.141925811767578
    7. 'b' → logprob: -12.266925811767578
    8. ' [' → logprob: -12.516925811767578
    9. '.append' → logprob: -13.766925811767578
    10. '[X' → logprob: -15.016925811767578

Token 137: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004697953350841999
    2. ']==' → logprob: -5.504697799682617
    3. ']=' → logprob: -8.129697799682617
    4. ' ]' → logprob: -8.879697799682617
    5. ']!=' → logprob: -10.254697799682617
    6. '-' → logprob: -10.379697799682617
    7. '==' → logprob: -10.629697799682617
    8. ']>=' → logprob: -10.879697799682617
    9. ']+=' → logprob: -11.129697799682617
    10. ']>' → logprob: -11.129697799682617

Token 138: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.027759965509176254
    2. 'int' → logprob: -3.6527600288391113
    3. 'abs' → logprob: -7.652760028839111
    4. 'round' → logprob: -7.777760028839111
    5. ' res' → logprob: -8.652759552001953
    6. '(res' → logprob: -9.152759552001953
    7. 'float' → logprob: -9.652759552001953
    8. 'nu' → logprob: -9.777759552001953
    9. '(int' → logprob: -10.402759552001953
    10. 'b' → logprob: -10.777759552001953

Token 139: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3585667014122009
    2. '   ' → logprob: -2.3585667610168457
    3. '       ' → logprob: -2.7335667610168457
    4. '<|end|>' → logprob: -2.9835667610168457
    5. '+' → logprob: -3.3585667610168457
    6. '[I' → logprob: -3.7335667610168457
    7. '[' → logprob: -4.733566761016846
    8. ' if' → logprob: -5.358566761016846
    9. '<|end|>' → logprob: -5.608566761016846
    10. '    
' → logprob: -6.108566761016846

Token 140: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' if' (ID: 538)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0013658313546329737
    2. ' I' → logprob: -6.751365661621094
    3. '   ' → logprob: -8.626365661621094
    4. '	I' → logprob: -11.626365661621094
    5. '[I' → logprob: -13.501365661621094
    6. '```' → logprob: -13.626365661621094
    7. '       ' → logprob: -13.626365661621094
    8. '    ' → logprob: -14.001365661621094
    9. ' ' → logprob: -14.626365661621094
    10. ')' → logprob: -14.751365661621094

Token 142: ' I' (ID: 357)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.49073317646980286
    2. ' res' → logprob: -1.1157331466674805
    3. 'b' → logprob: -3.3657331466674805
    4. 'res' → logprob: -4.1157331466674805
    5. ' int' → logprob: -5.2407331466674805
    6. ' ' → logprob: -6.6157331466674805
    7. 'int' → logprob: -7.4907331466674805
    8. ' abs' → logprob: -7.7407331466674805
    9. ' k' → logprob: -7.8657331466674805
    10. ' s' → logprob: -8.49073314666748

Token 143: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7756104469299316
    2. ' ==' → logprob: -1.2756104469299316
    3. '+' → logprob: -1.9006104469299316
    4. '<' → logprob: -2.5256104469299316
    5. ' <' → logprob: -4.150610446929932
    6. '<=' → logprob: -5.525610446929932
    7. ' ' → logprob: -5.775610446929932
    8. '*' → logprob: -6.025610446929932
    9. ' <=' → logprob: -6.525610446929932
    10. '%' → logprob: -7.150610446929932

Token 144: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23445963859558105
    2. ' if' → logprob: -1.984459638595581
    3. ' ==' → logprob: -4.10945987701416
    4. '           ' → logprob: -4.73445987701416
    5. '==' → logprob: -4.85945987701416
    6. '       ' → logprob: -4.85945987701416
    7. 'if' → logprob: -4.98445987701416
    8. '>' → logprob: -5.23445987701416
    9. '        ' → logprob: -5.73445987701416
    10. ' b' → logprob: -6.23445987701416

Token 145: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3016367554664612
    2. 'if' (adapté à ' if') → logprob: -1.4266366958618164
    3. 'b' → logprob: -4.551636695861816
    4. ' b' → logprob: -5.551636695861816
    5. '           ' → logprob: -6.176636695861816
    6. '   ' → logprob: -6.551636695861816
    7. ' for' → logprob: -7.676636695861816
    8. ' ' → logprob: -7.926636695861816
    9. ' while' → logprob: -8.551636695861816
    10. '       ' → logprob: -8.551636695861816

Token 146: ' res' (ID: 694)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1422979235649109
    2. 'b' → logprob: -2.2672979831695557
    3. ' abs' → logprob: -3.7672979831695557
    4. ' res' → logprob: -5.517297744750977
    5. 'abs' → logprob: -6.892297744750977
    6. 'res' → logprob: -7.767297744750977
    7. ' ' → logprob: -8.642297744750977
    8. '   ' → logprob: -9.142297744750977
    9. ' (' → logprob: -9.642297744750977
    10. '(b' → logprob: -10.767297744750977

Token 147: '<b' (ID: 81814)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -1.133373498916626
    2. '>' → logprob: -1.383373498916626
    3. ' <' → logprob: -1.383373498916626
    4. ' >' → logprob: -1.758373498916626
    5. '>b' → logprob: -6.508373260498047
    6. '<=' → logprob: -7.383373260498047
    7. ' <=' → logprob: -7.508373260498047
    8. ' ' → logprob: -8.133373260498047
    9. '>=' → logprob: -8.258373260498047
    10. '<b' → logprob: -8.383373260498047

Token 148: '[I' (ID: 120516)
  Prédit: '[I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[I' → logprob: -9.090760431718081e-05
    2. '[' → logprob: -10.375090599060059
    3. '[i' → logprob: -10.375090599060059
    4. '[-' → logprob: -11.250090599060059
    5. 'b' → logprob: -11.750090599060059
    6. '[b' → logprob: -13.000090599060059
    7. ' [' → logprob: -14.250090599060059
    8. '   ' → logprob: -14.500090599060059
    9. '[int' → logprob: -14.625090599060059
    10. '[X' → logprob: -14.750090599060059

Token 149: '-' (ID: 12)
  Prédit: '[I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[I' → logprob: -0.2444983273744583
    2. '-' → logprob: -1.619498372077942
    3. 'I' → logprob: -3.9944982528686523
    4. '-I' → logprob: -8.244498252868652
    5. ' -' → logprob: -9.619498252868652
    6. '   ' → logprob: -9.619498252868652
    7. '(I' → logprob: -10.619498252868652
    8. ' I' → logprob: -10.744498252868652
    9. '[' → logprob: -11.494498252868652
    10. '[i' → logprob: -11.869498252868652

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002217748697148636
    2. ']' → logprob: -8.750222206115723
    3. 'I' → logprob: -9.875222206115723
    4. ' ' → logprob: -12.250222206115723
    5. ']>' → logprob: -13.250222206115723
    6. '<|end|>' → logprob: -13.500222206115723
    7. '   ' → logprob: -14.375222206115723
    8. '[' → logprob: -14.500222206115723
    9. ']+' → logprob: -14.750222206115723
    10. '0' → logprob: -15.000222206115723

Token 151: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08100122213363647
    2. ' and' → logprob: -3.0810012817382812
    3. ':
' → logprob: -4.206001281738281
    4. 'and' → logprob: -5.206001281738281
    5. ']:' → logprob: -5.206001281738281
    6. ' or' → logprob: -5.456001281738281
    7. '):' → logprob: -7.706001281738281
    8. ' :' → logprob: -8.081001281738281
    9. ']' → logprob: -8.706001281738281
    10. ':return' → logprob: -8.706001281738281

Token 152: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013469367288053036
    2. '           ' → logprob: -5.138469219207764
    3. 'break' → logprob: -5.638469219207764
    4. ' break' → logprob: -5.888469219207764
    5. ':' → logprob: -7.638469219207764
    6. ':
' → logprob: -7.888469219207764
    7. ' and' → logprob: -9.638469696044922
    8. '       ' → logprob: -9.638469696044922
    9. ' or' → logprob: -9.888469696044922
    10. '              ' → logprob: -11.138469696044922

Token 153: ' try' (ID: 2075)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0848143920302391
    2. 'break' → logprob: -2.5848143100738525
    3. '   ' → logprob: -5.834814548492432
    4. '               ' → logprob: -6.709814548492432
    5. '           ' → logprob: -6.834814548492432
    6. '       ' → logprob: -8.459814071655273
    7. ' print' → logprob: -8.584814071655273
    8. 'print' → logprob: -9.084814071655273
    9. '	break' → logprob: -10.084814071655273
    10. 'b' → logprob: -10.459814071655273

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38637614250183105
    2. ':
' → logprob: -1.636376142501831
    3. '                   ' → logprob: -2.261376142501831
    4. '   ' → logprob: -4.38637638092041
    5. '               ' → logprob: -6.01137638092041
    6. ':return' → logprob: -6.51137638092041
    7. '           ' → logprob: -6.63637638092041
    8. ' ' → logprob: -6.63637638092041
    9. 'break' → logprob: -8.01137638092041
    10. '       ' → logprob: -8.01137638092041

Token 155: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06902230530977249
    2. '   ' → logprob: -3.3190224170684814
    3. ' break' → logprob: -3.8190224170684814
    4. 'break' → logprob: -6.069022178649902
    5. ':' → logprob: -6.319022178649902
    6. '               ' → logprob: -6.444022178649902
    7. ':
' → logprob: -7.694022178649902
    8. ' print' → logprob: -7.694022178649902
    9. 'except' → logprob: -7.819022178649902
    10. 'b' → logprob: -8.194022178649902

Token 156: ' An' (ID: 1689)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.28271397948265076
    2. 'break' → logprob: -1.9077140092849731
    3. '                   ' → logprob: -3.4077138900756836
    4. 'b' → logprob: -3.5327138900756836
    5. ' b' → logprob: -4.032713890075684
    6. '   ' → logprob: -5.032713890075684
    7. '                       ' → logprob: -5.032713890075684
    8. 'print' → logprob: -6.657713890075684
    9. ' print' → logprob: -6.782713890075684
    10. '               ' → logprob: -7.532713890075684

Token 157: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00408884696662426
    2. 's' → logprob: -5.504088878631592
    3. '[' → logprob: -12.754088401794434
    4. '_s' → logprob: -13.129088401794434
    5. 'SError' → logprob: -13.754088401794434
    6. '_S' → logprob: -14.379088401794434
    7. '[S' → logprob: -14.629088401794434
    8. ' S' → logprob: -14.879088401794434
    9. '```' → logprob: -14.879088401794434
    10. ' s' → logprob: -15.129088401794434

Token 158: '.pop' (ID: 15746)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.31078237295150757
    2. '.append' → logprob: -1.9357824325561523
    3. '.' → logprob: -2.1857824325561523
    4. '.index' → logprob: -5.060782432556152
    5. '.pop' → logprob: -5.685782432556152
    6. ' .' → logprob: -8.060782432556152
    7. '.extend' → logprob: -8.185782432556152
    8. '[' → logprob: -10.435782432556152
    9. '                   ' → logprob: -11.060782432556152
    10. '   ' → logprob: -11.935782432556152

Token 159: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009671807289123535
    2. '(-' → logprob: -4.759671688079834
    3. '()-' → logprob: -6.884671688079834
    4. '(' → logprob: -10.884672164916992
    5. '()
' → logprob: -11.884672164916992
    6. '()]' → logprob: -13.009672164916992
    7. '()>' → logprob: -13.509672164916992
    8. '()%' → logprob: -14.259672164916992
    9. '())' → logprob: -14.384672164916992
    10. '()}' → logprob: -14.634672164916992

Token 160: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15573252737522125
    2. ' except' → logprob: -2.6557326316833496
    3. ')' → logprob: -3.2807326316833496
    4. 'except' → logprob: -3.6557326316833496
    5. '                   ' → logprob: -4.78073263168335
    6. '<|end|>' → logprob: -8.030732154846191
    7. 'Except' → logprob: -8.780732154846191
    8. '                    
' → logprob: -8.905732154846191
    9. '),' → logprob: -8.905732154846191
    10. '                ' → logprob: -8.905732154846191

Token 161: ' except' (ID: 6384)
  Prédit: ' except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.47666022181510925
    2. 'except' (adapté à ' except') → logprob: -1.3516602516174316
    3. '               ' → logprob: -2.2266602516174316
    4. ':
' → logprob: -5.976660251617432
    5. '                   ' → logprob: -6.101660251617432
    6. ':' → logprob: -6.351660251617432
    7. '           ' → logprob: -6.476660251617432
    8. '
' → logprob: -6.851660251617432
    9. ')' → logprob: -6.851660251617432
    10. '	except' → logprob: -7.851660251617432

Token 162: ':
' (ID: 734)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.18393857777118683
    2. ':' → logprob: -2.058938503265381
    3. '(Index' → logprob: -3.808938503265381
    4. ' Index' → logprob: -4.058938503265381
    5. '[Index' → logprob: -7.308938503265381
    6. 'Exception' → logprob: -9.183938980102539
    7. '(Exception' → logprob: -9.933938980102539
    8. ':
' → logprob: -10.183938980102539
    9. '_index' → logprob: -10.683938980102539
    10. '_Index' → logprob: -10.933938980102539

Token 163: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6889204978942871
    2. ' pass' → logprob: -0.8139204978942871
    3. ' Index' → logprob: -4.063920497894287
    4. ':' → logprob: -4.188920497894287
    5. '                    ' → logprob: -4.813920497894287
    6. '                       ' → logprob: -5.063920497894287
    7. 'Index' → logprob: -5.563920497894287
    8. 'pass' → logprob: -7.313920497894287
    9. '                ' → logprob: -7.438920497894287
    10. ':
' → logprob: -7.813920497894287

Token 164: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.028538811951875687
    2. 'pass' (adapté à ' pass') → logprob: -4.278538703918457
    3. ' break' → logprob: -4.278538703918457
    4. 'break' → logprob: -7.903538703918457
    5. 'None' → logprob: -11.278538703918457
    6. ' None' → logprob: -11.278538703918457
    7. ' continue' → logprob: -12.653538703918457
    8. '	pass' → logprob: -13.028538703918457
    9. '   ' → logprob: -13.278538703918457
    10. '0' → logprob: -13.403538703918457

Token 165: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09787076711654663
    2. '           ' → logprob: -3.2228708267211914
    3. '<|end|>' → logprob: -4.222870826721191
    4. '       ' → logprob: -4.847870826721191
    5. ' else' → logprob: -5.097870826721191
    6. ')' → logprob: -5.097870826721191
    7. ' I' → logprob: -5.972870826721191
    8. '                ' → logprob: -6.097870826721191
    9. '                
' → logprob: -6.097870826721191
    10. 'I' → logprob: -6.097870826721191

Token 166: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025856057181954384
    2. '           ' → logprob: -4.400856018066406
    3. '<|end|>' → logprob: -5.650856018066406
    4. ')' → logprob: -6.025856018066406
    5. '       ' → logprob: -6.150856018066406
    6. '                ' → logprob: -7.275856018066406
    7. '                
' → logprob: -7.525856018066406
    8. ' else' → logprob: -7.525856018066406
    9. 'An' → logprob: -8.150856018066406
    10. '                   ' → logprob: -8.275856018066406

Token 167: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1919744610786438
    2. 'break' (adapté à ' break') → logprob: -2.441974401473999
    3. '           ' → logprob: -2.691974401473999
    4. ' break' → logprob: -4.316974639892578
    5. 'An' → logprob: -5.441974639892578
    6. '       ' → logprob: -7.566974639892578
    7. ' An' → logprob: -7.566974639892578
    8. '                   ' → logprob: -8.191974639892578
    9. '   ' → logprob: -8.566974639892578
    10. 'b' → logprob: -8.816974639892578

Token 168: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010902122594416142
    2. '           ' → logprob: -7.376090049743652
    3. '   ' → logprob: -8.501090049743652
    4. '<|end|>' → logprob: -9.001090049743652
    5. 'I' → logprob: -10.001090049743652
    6. '
' → logprob: -10.376090049743652
    7. ' I' → logprob: -11.751090049743652
    8. '        
' → logprob: -12.001090049743652
    9. '            
' → logprob: -12.126090049743652
    10. '<|end|>' → logprob: -12.126090049743652

Token 169: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007058793562464416
    2. '           ' → logprob: -8.25070571899414
    3. '   ' → logprob: -8.75070571899414
    4. '<|end|>' → logprob: -8.75070571899414
    5. 'I' → logprob: -10.00070571899414
    6. ' I' → logprob: -10.25070571899414
    7. '<|end|>' → logprob: -12.00070571899414
    8. '        
' → logprob: -12.00070571899414
    9. '      ' → logprob: -12.12570571899414
    10. '            
' → logprob: -12.50070571899414

Token 170: ' else' (ID: 1203)
  Prédit: 'An'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' → logprob: -0.5296579003334045
    2. 'I' → logprob: -1.0296578407287598
    3. '   ' → logprob: -3.6546578407287598
    4. ' An' → logprob: -4.77965784072876
    5. ' I' → logprob: -5.40465784072876
    6. ')' → logprob: -5.77965784072876
    7. '       ' → logprob: -5.90465784072876
    8. 'b' → logprob: -6.02965784072876
    9. '           ' → logprob: -6.02965784072876
    10. 'else' (adapté à ' else') → logprob: -6.77965784072876

Token 171: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0742519348859787
    2. ':' → logprob: -3.199251890182495
    3. ':
' → logprob: -3.699251890182495
    4. '           ' → logprob: -5.324252128601074
    5. ' :
' → logprob: -8.574252128601074
    6. '              ' → logprob: -9.074252128601074
    7. '   ' → logprob: -9.074252128601074
    8. '       ' → logprob: -9.199252128601074
    9. '                   ' → logprob: -9.324252128601074
    10. ' if' → logprob: -9.324252128601074

Token 172: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12243212014436722
    2. ' An' → logprob: -2.872432231903076
    3. '           ' → logprob: -3.247432231903076
    4. 'An' → logprob: -4.497432231903076
    5. '   ' → logprob: -5.497432231903076
    6. '       ' → logprob: -5.747432231903076
    7. '                   ' → logprob: -7.122432231903076
    8. '              ' → logprob: -8.872431755065918
    9. '             ' → logprob: -9.372431755065918
    10. ' if' → logprob: -9.872431755065918

Token 173: ' if' (ID: 538)
  Prédit: 'An'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' → logprob: -0.0009393315413035452
    2. 'if' (adapté à ' if') → logprob: -7.50093936920166
    3. '   ' → logprob: -8.62593936920166
    4. 'pass' → logprob: -9.12593936920166
    5. 'I' → logprob: -10.62593936920166
    6. ' An' → logprob: -10.62593936920166
    7. 'try' → logprob: -11.12593936920166
    8. 'for' → logprob: -12.12593936920166
    9. 'continue' → logprob: -12.50093936920166
    10. 'while' → logprob: -12.62593936920166

Token 174: ' nu' (ID: 4120)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5663223266601562
    2. 'res' → logprob: -1.0663223266601562
    3. ' b' → logprob: -3.3163223266601562
    4. 'b' → logprob: -3.6913223266601562
    5. ' int' → logprob: -5.191322326660156
    6. ' s' → logprob: -5.566322326660156
    7. 'int' → logprob: -5.941322326660156
    8. 'len' → logprob: -5.941322326660156
    9. ' len' → logprob: -6.191322326660156
    10. 'round' → logprob: -6.816322326660156

Token 175: ' not' (ID: 625)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29977351427078247
    2. '%' → logprob: -2.1747734546661377
    3. ' ==' → logprob: -2.6747734546661377
    4. ' %' → logprob: -3.7997734546661377
    5. '<=' → logprob: -4.549773693084717
    6. '>=' → logprob: -4.549773693084717
    7. '/k' → logprob: -4.799773693084717
    8. '>' → logprob: -5.674773693084717
    9. '*k' → logprob: -5.674773693084717
    10. '//' → logprob: -6.299773693084717

Token 176: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12704308331012726
    2. 'in' → logprob: -2.1270430088043213
    3. ' ' → logprob: -9.877042770385742
    4. '<|end|>' → logprob: -10.377042770385742
    5. ')' → logprob: -11.877042770385742
    6. ' An' → logprob: -12.627042770385742
    7. '  ' → logprob: -12.877042770385742
    8. 'an' → logprob: -12.877042770385742
    9. 'An' → logprob: -13.127042770385742
    10. '<|end|>' → logprob: -13.127042770385742

Token 177: ' An' (ID: 1689)
  Prédit: 'An'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' → logprob: -0.004082078114151955
    2. ' An' → logprob: -5.504082202911377
    3. '   ' → logprob: -13.504081726074219
    4. ' ' → logprob: -13.629081726074219
    5. 'Ans' → logprob: -14.504081726074219
    6. 'Answer' → logprob: -15.254081726074219
    7. '  ' → logprob: -16.37908172607422
    8. '[' → logprob: -16.50408172607422
    9. '       ' → logprob: -17.50408172607422
    10. '>An' → logprob: -17.62908172607422

Token 178: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00012558852904476225
    2. 's' → logprob: -9.000125885009766
    3. '[' → logprob: -14.000125885009766
    4. '_S' → logprob: -14.375125885009766
    5. '_s' → logprob: -14.875125885009766
    6. '```' → logprob: -16.250125885009766
    7. '[S' → logprob: -16.875125885009766
    8. 'Ans' → logprob: -17.125125885009766
    9. ' S' → logprob: -17.250125885009766
    10. 'С' → logprob: -17.875125885009766

Token 179: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2508050501346588
    2. ':' → logprob: -1.7508050203323364
    3. ' and' → logprob: -3.375805139541626
    4. '                   ' → logprob: -4.500804901123047
    5. '):
' → logprob: -6.375804901123047
    6. ' :
' → logprob: -8.125804901123047
    7. '               ' → logprob: -8.750804901123047
    8. '                       ' → logprob: -8.875804901123047
    9. '):' → logprob: -9.250804901123047
    10. 'and' → logprob: -9.250804901123047

Token 180: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009240299463272095
    2. 'An' → logprob: -5.38424015045166
    3. ' An' → logprob: -5.63424015045166
    4. ':
' → logprob: -7.50924015045166
    5. '                       ' → logprob: -9.13424015045166
    6. '                  ' → logprob: -9.38424015045166
    7. ':' → logprob: -9.75924015045166
    8. ',' → logprob: -10.13424015045166
    9. ' and' → logprob: -10.75924015045166
    10. ' an' → logprob: -11.00924015045166

Token 181: ' An' (ID: 1689)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3290431499481201
    2. ' An' → logprob: -1.4540431499481201
    3. '                   ' → logprob: -3.45404314994812
    4. 'An' (adapté à ' An') → logprob: -4.204043388366699
    5. '       ' → logprob: -10.5790433883667
    6. '                    ' → logprob: -10.5790433883667
    7. '               ' → logprob: -10.7040433883667
    8. '                           ' → logprob: -10.8290433883667
    9. '                     ' → logprob: -10.9540433883667
    10. '                      ' → logprob: -10.9540433883667

Token 182: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -2.045823566731997e-05
    2. '                   ' → logprob: -11.625020027160645
    3. '               ' → logprob: -12.250020027160645
    4. '                       ' → logprob: -13.000020027160645
    5. ' S' → logprob: -13.875020027160645
    6. '           ' → logprob: -14.250020027160645
    7. '              ' → logprob: -15.125020027160645
    8. '```' → logprob: -15.375020027160645
    9. '.append' → logprob: -15.500020027160645
    10. '[' → logprob: -15.625020027160645

Token 183: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -11.87501049041748
    3. '.extend' → logprob: -13.00001049041748
    4. '.app' → logprob: -14.37501049041748
    5. '.add' → logprob: -15.00001049041748
    6. ' .' → logprob: -15.37501049041748
    7. '.ap' → logprob: -16.375011444091797
    8. '.push' → logprob: -16.750011444091797
    9. '.Append' → logprob: -16.875011444091797
    10. '.insert' → logprob: -17.625011444091797

Token 184: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00014168102643452585
    2. '(' → logprob: -8.875142097473145
    3. '(res' → logprob: -14.625142097473145
    4. '((' → logprob: -14.750142097473145
    5. ' (' → logprob: -14.875142097473145
    6. '(int' → logprob: -15.000142097473145
    7. '(
' → logprob: -15.125142097473145
    8. 'n' → logprob: -18.000141143798828
    9. '(num' → logprob: -18.000141143798828
    10. '(s' → logprob: -18.625141143798828

Token 185: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.584861744660884e-05
    2. 'nu' → logprob: -10.625045776367188
    3. 'у' → logprob: -12.875045776367188
    4. '```' → logprob: -12.875045776367188
    5. '[u' → logprob: -13.250045776367188
    6. '(u' → logprob: -13.250045776367188
    7. 'o' → logprob: -13.375045776367188
    8. ')' → logprob: -13.500045776367188
    9. '[' → logprob: -13.500045776367188
    10. ' u' → logprob: -13.750045776367188

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.860340752406046e-05
    2. ')
' → logprob: -9.8750581741333
    3. '               ' → logprob: -13.3750581741333
    4. ' )' → logprob: -13.5000581741333
    5. '       ' → logprob: -14.0000581741333
    6. '))' → logprob: -14.2500581741333
    7. ')return' → logprob: -14.3750581741333
    8. '                   ' → logprob: -14.7500581741333
    9. ')}}' → logprob: -15.1250581741333
    10. '           ' → logprob: -15.2500581741333

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012990460963919759
    2. '
' → logprob: -7.501298904418945
    3. '<|end|>' → logprob: -8.501298904418945
    4. 'I' → logprob: -8.626298904418945
    5. '   ' → logprob: -9.251298904418945
    6. '               ' → logprob: -9.626298904418945
    7. '        
' → logprob: -10.251298904418945
    8. '           ' → logprob: -10.251298904418945
    9. '<|end|>' → logprob: -10.626298904418945
    10. '#' → logprob: -10.876298904418945

Token 188: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2310686856508255
    2. 'I' → logprob: -1.981068730354309
    3. '   ' → logprob: -2.7310686111450195
    4. '
' → logprob: -6.6060686111450195
    5. '           ' → logprob: -7.1060686111450195
    6. ' I' → logprob: -7.9810686111450195
    7. '               ' → logprob: -8.35606861114502
    8. '        
' → logprob: -8.98106861114502
    9. '  ' → logprob: -9.60606861114502
    10. '     ' → logprob: -10.23106861114502

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06528311222791672
    2. ':
' → logprob: -3.4402830600738525
    3. '           ' → logprob: -3.5652830600738525
    4. '   ' → logprob: -6.690283298492432
    5. ' :' → logprob: -7.315283298492432
    6. '       ' → logprob: -7.690283298492432
    7. ' I' → logprob: -8.315282821655273
    8. ' :
' → logprob: -9.815282821655273
    9. '        ' → logprob: -10.190282821655273
    10. '               ' → logprob: -10.315282821655273

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12533830106258392
    2. 'b' → logprob: -2.500338315963745
    3. ' b' → logprob: -4.000338077545166
    4. '       ' → logprob: -4.625338077545166
    5. '   ' → logprob: -6.125338077545166
    6. ' pass' → logprob: -6.250338077545166
    7. 'pass' → logprob: -6.625338077545166
    8. 'I' → logprob: -7.500338077545166
    9. ' I' → logprob: -7.750338077545166
    10. '               ' → logprob: -8.125338554382324

Token 191: ' if' (ID: 538)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.035859573632478714
    2. 'pass' → logprob: -4.03585958480835
    3. 'An' → logprob: -5.03585958480835
    4. 'if' (adapté à ' if') → logprob: -5.28585958480835
    5. ' b' → logprob: -6.16085958480835
    6. '           ' → logprob: -6.91085958480835
    7. '   ' → logprob: -7.16085958480835
    8. ' pass' → logprob: -7.28585958480835
    9. 'continue' → logprob: -7.91085958480835
    10. 'res' → logprob: -8.660859107971191

Token 192: ' nu' (ID: 4120)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.094172477722168
    2. 'nu' → logprob: -1.219172477722168
    3. ' nu' → logprob: -1.844172477722168
    4. ' res' → logprob: -1.844172477722168
    5. 'b' → logprob: -3.969172477722168
    6. ' b' → logprob: -4.844172477722168
    7. 'I' → logprob: -5.094172477722168
    8. 'n' → logprob: -5.969172477722168
    9. 's' → logprob: -6.094172477722168
    10. ' ' → logprob: -6.344172477722168

Token 193: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08466697484254837
    2. 'not' → logprob: -2.7096669673919678
    3. '<' → logprob: -4.584667205810547
    4. '>' → logprob: -6.459667205810547
    5. '==' → logprob: -6.584667205810547
    6. '<=' → logprob: -7.709667205810547
    7. ' <' → logprob: -8.459667205810547
    8. '<n' → logprob: -8.459667205810547
    9. '!=' → logprob: -9.084667205810547
    10. '/' → logprob: -9.334667205810547

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03826421499252319
    2. 'in' → logprob: -3.288264274597168
    3. '<|end|>' → logprob: -8.538264274597168
    4. ' ' → logprob: -11.288264274597168
    5. 'In' → logprob: -11.663264274597168
    6. ' An' → logprob: -12.663264274597168
    7. '<|end|>' → logprob: -14.288264274597168
    8. 'An' → logprob: -14.413264274597168
    9. 'to' → logprob: -15.288264274597168
    10. '  ' → logprob: -15.663264274597168

Token 195: ' An' (ID: 1689)
  Prédit: 'An'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' → logprob: -0.12693724036216736
    2. ' An' → logprob: -2.1269371509552
    3. 'Ans' → logprob: -12.501936912536621
    4. '>An' → logprob: -13.251936912536621
    5. ' ' → logprob: -14.251936912536621
    6. 'an' → logprob: -14.376936912536621
    7. ' an' → logprob: -14.751936912536621
    8. 'As' → logprob: -15.251936912536621
    9. 'Ansi' → logprob: -15.251936912536621
    10. 'Answer' → logprob: -15.626936912536621

Token 196: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.00032640635618008673
    2. 's' → logprob: -8.125326156616211
    3. 'An' → logprob: -11.125326156616211
    4. 'Ans' → logprob: -11.750326156616211
    5. '[' → logprob: -12.625326156616211
    6. 'Ss' → logprob: -13.375326156616211
    7. '_s' → logprob: -14.125326156616211
    8. 'ans' → logprob: -14.500326156616211
    9. '_S' → logprob: -14.500326156616211
    10. 'Sc' → logprob: -15.250326156616211

Token 197: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10250985622406006
    2. ':' → logprob: -2.4775099754333496
    3. '):
' → logprob: -4.35250997543335
    4. '):' → logprob: -8.102509498596191
    5. '           ' → logprob: -8.602509498596191
    6. '():
' → logprob: -10.852509498596191
    7. ':
' → logprob: -11.102509498596191
    8. '.append' → logprob: -11.102509498596191
    9. '               ' → logprob: -11.477509498596191
    10. ' and' → logprob: -11.602509498596191

Token 198: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06597281992435455
    2. 'An' → logprob: -3.0659728050231934
    3. '               ' → logprob: -4.315972805023193
    4. ' An' → logprob: -5.940972805023193
    5. '   ' → logprob: -6.815972805023193
    6. '                   ' → logprob: -9.815973281860352
    7. '       ' → logprob: -10.065973281860352
    8. '          ' → logprob: -10.940973281860352
    9. '  ' → logprob: -11.690973281860352
    10. ' ' → logprob: -11.940973281860352

Token 199: ' An' (ID: 1689)
  Prédit: 'An'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' (adapté à ' An') → logprob: -0.001519503304734826
    2. ' An' → logprob: -6.501519680023193
    3. '                   ' → logprob: -11.751519203186035
    4. '           ' → logprob: -12.876519203186035
    5. '               ' → logprob: -13.251519203186035
    6. 'an' → logprob: -13.251519203186035
    7. '   ' → logprob: -13.376519203186035
    8. 'Ans' → logprob: -13.751519203186035
    9. '>An' → logprob: -16.00152015686035
    10. ' an' → logprob: -16.62652015686035

Token 200: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.3856492842023727e-06
    2. 's' → logprob: -14.000000953674316
    3. 'Ans' → logprob: -15.875000953674316
    4. 'An' → logprob: -16.375001907348633
    5. ' S' → logprob: -16.875001907348633
    6. '_S' → logprob: -16.875001907348633
    7. 'Sc' → logprob: -17.625001907348633
    8. 'ans' → logprob: -17.750001907348633
    9. 'Sl' → logprob: -18.000001907348633
    10. 'Ss' → logprob: -18.125001907348633

Token 201: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000431861262768507
    2. '.' → logprob: -7.750432014465332
    3. '.extend' → logprob: -13.750432014465332
    4. 'append' → logprob: -16.000431060791016
    5. ' .' → logprob: -17.750431060791016
    6. '.app' → logprob: -18.125431060791016
    7. '.insert' → logprob: -19.625431060791016
    8. '.add' → logprob: -19.750431060791016
    9. 'Append' → logprob: -19.875431060791016
    10. '.push' → logprob: -19.875431060791016

Token 202: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.931863051955588e-05
    2. '(' → logprob: -9.750059127807617
    3. ' (' → logprob: -14.500059127807617
    4. '('' → logprob: -15.625059127807617
    5. '((' → logprob: -15.625059127807617
    6. '(
' → logprob: -16.750059127807617
    7. '("("' → logprob: -17.125059127807617
    8. 'n' → logprob: -17.750059127807617
    9. '(int' → logprob: -18.125059127807617
    10. '(s' → logprob: -18.250059127807617

Token 203: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01115333754569292
    2. 'nu' → logprob: -4.511153221130371
    3. ')' → logprob: -10.136153221130371
    4. '(n' → logprob: -11.011153221130371
    5. ' nu' → logprob: -11.511153221130371
    6. '(u' → logprob: -11.761153221130371
    7. '```' → logprob: -12.511153221130371
    8. 'o' → logprob: -12.761153221130371
    9. 'z' → logprob: -13.011153221130371
    10. '(' → logprob: -13.136153221130371

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.2020991056924686e-05
    2. ')
' → logprob: -10.375032424926758
    3. ')n' → logprob: -14.875032424926758
    4. '))' → logprob: -15.875032424926758
    5. ')

' → logprob: -16.000032424926758
    6. ')return' → logprob: -16.750032424926758
    7. ')#' → logprob: -17.250032424926758
    8. ')`' → logprob: -17.375032424926758
    9. '   ' → logprob: -17.625032424926758
    10. '       ' → logprob: -17.875032424926758

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015170073602348566
    2. '   ' → logprob: -6.626516819000244
    3. 'I' → logprob: -9.501517295837402
    4. '           ' → logprob: -10.376517295837402
    5. ' I' → logprob: -10.626517295837402
    6. '<|end|>' → logprob: -10.626517295837402
    7. '               ' → logprob: -11.751517295837402
    8. '
' → logprob: -12.126517295837402
    9. '<|end|>' → logprob: -12.626517295837402
    10. '#' → logprob: -13.126517295837402

Token 206: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' (adapté à ' I') → logprob: -0.010314569808542728
    2. '       ' → logprob: -4.760314464569092
    3. '   ' → logprob: -6.885314464569092
    4. ' I' → logprob: -7.510314464569092
    5. '
' → logprob: -9.13531494140625
    6. '	I' → logprob: -11.38531494140625
    7. '  ' → logprob: -12.88531494140625
    8. '           ' → logprob: -13.01031494140625
    9. '        
' → logprob: -14.13531494140625
    10. '               ' → logprob: -14.26031494140625

Token 207: '+=' (ID: 18287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008624029345810413
    2. '+=' → logprob: -4.758624076843262
    3. ' +=' → logprob: -12.133624076843262
    4. ' =' → logprob: -12.758624076843262
    5. '+' → logprob: -14.133624076843262
    6. 'I' → logprob: -14.508624076843262
    7. '+="' → logprob: -17.758623123168945
    8. '+='' → logprob: -17.758623123168945
    9. ' I' → logprob: -18.383623123168945
    10. '=k' → logprob: -18.758623123168945

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.125008583068848
    3. '100' → logprob: -13.125008583068848
    4. '10' → logprob: -15.437508583068848
    5. '   ' → logprob: -15.875008583068848
    6. '```' → logprob: -16.62500762939453
    7. '+' → logprob: -17.00000762939453
    8. '2' → logprob: -17.56250762939453
    9. '0' → logprob: -17.62500762939453
    10. '999' → logprob: -17.87500762939453

Token 209: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008010566234588623
    2. 'if' → logprob: -5.133010387420654
    3. 'for' → logprob: -6.633010387420654
    4. 'An' → logprob: -7.883010387420654
    5. '   ' → logprob: -9.633010864257812
    6. '
' → logprob: -9.633010864257812
    7. '#print' → logprob: -9.758010864257812
    8. '#' → logprob: -10.133010864257812
    9. 'try' → logprob: -10.633010864257812
    10. '    
' → logprob: -11.008010864257812

Token 210: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04903581738471985
    2. 'if' → logprob: -3.2990357875823975
    3. 'An' → logprob: -5.049036026000977
    4. 'for' → logprob: -5.799036026000977
    5. '#' → logprob: -7.799036026000977
    6. 'k' → logprob: -7.924036026000977
    7. 'I' → logprob: -9.299036026000977
    8. '#print' → logprob: -9.549036026000977
    9. 'pr' → logprob: -9.674036026000977
    10. ' if' → logprob: -9.924036026000977

Token 211: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8245999217033386
    2. ' i' → logprob: -1.6995999813079834
    3. 'x' → logprob: -1.9495999813079834
    4. ' k' → logprob: -2.8245999813079834
    5. ' a' → logprob: -3.0745999813079834
    6. 'i' → logprob: -3.6995999813079834
    7. 'k' → logprob: -3.9495999813079834
    8. 'a' → logprob: -4.074599742889404
    9. ' num' → logprob: -4.074599742889404
    10. ' val' → logprob: -4.449599742889404

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5232271552085876
    2. 'in' → logprob: -0.8982271552085876
    3. ' ' → logprob: -9.398226737976074
    4. 'range' → logprob: -11.648226737976074
    5. '  ' → logprob: -12.398226737976074
    6. 'i' → logprob: -13.523226737976074
    7. '	in' → logprob: -13.773226737976074
    8. 'n' → logprob: -13.898226737976074
    9. ' i' → logprob: -14.023226737976074
    10. 'In' → logprob: -14.148226737976074

Token 213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.046504661440849304
    2. 'An' → logprob: -3.6715047359466553
    3. ' range' → logprob: -3.9215047359466553
    4. ' An' → logprob: -9.171504974365234
    5. 'sorted' → logprob: -9.921504974365234
    6. 'Ans' → logprob: -11.421504974365234
    7. 'ans' → logprob: -11.671504974365234
    8. 're' → logprob: -12.421504974365234
    9. 'Range' → logprob: -12.796504974365234
    10. 'an' → logprob: -12.921504974365234

Token 214: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.05132146552205086
    2. '(' → logprob: -3.051321506500244
    3. '(len' → logprob: -5.926321506500244
    4. '(min' → logprob: -9.926321029663086
    5. '((' → logprob: -12.176321029663086
    6. 'k' → logprob: -12.551321029663086
    7. '(K' → logprob: -12.801321029663086
    8. '(int' → logprob: -15.176321029663086
    9. ' (' → logprob: -15.176321029663086
    10. '(n' → logprob: -15.801321029663086

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.514650183613412e-05
    2. '):
' → logprob: -9.875055313110352
    3. ' ):' → logprob: -12.750055313110352
    4. '):
' → logprob: -15.625055313110352
    5. '+' → logprob: -16.00005531311035
    6. '}:' → logprob: -16.25005531311035
    7. ':' → logprob: -16.62505531311035
    8. ',' → logprob: -16.62505531311035
    9. '():' → logprob: -16.75005531311035
    10. ']:' → logprob: -16.75005531311035

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.956533670425415
    2. ' print' → logprob: -0.956533670425415
    3. ' n' → logprob: -1.581533670425415
    4. ' x' → logprob: -4.081533432006836
    5. ' s' → logprob: -5.956533432006836
    6. 'n' → logprob: -6.331533432006836
    7. 'print' → logprob: -6.706533432006836
    8. ' ind' → logprob: -7.331533432006836
    9. ' val' → logprob: -7.581533432006836
    10. ' a' → logprob: -7.706533432006836

Token 217: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03764789178967476
    2. ' print' → logprob: -3.7876479625701904
    3. 'n' → logprob: -4.662647724151611
    4. 'x' → logprob: -6.287647724151611
    5. '   ' → logprob: -6.787647724151611
    6. 't' → logprob: -7.662647724151611
    7. 'm' → logprob: -7.787647724151611
    8. ' n' → logprob: -8.28764820098877
    9. 'a' → logprob: -8.41264820098877
    10. 'v' → logprob: -9.03764820098877

Token 218: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.6550729419104755e-05
    2. '(int' → logprob: -10.625036239624023
    3. '(ans' → logprob: -11.875036239624023
    4. '(*' → logprob: -13.500036239624023
    5. 'An' → logprob: -13.500036239624023
    6. '(an' → logprob: -14.000036239624023
    7. '()' → logprob: -14.125036239624023
    8. '((' → logprob: -15.875036239624023
    9. '(min' → logprob: -16.125036239624023
    10. '(sorted' → logprob: -16.250036239624023

Token 219: 'An' (ID: 2223)
  Prédit: 'An'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'An' → logprob: -0.00010008628305513412
    2. ' An' → logprob: -9.250100135803223
    3. 'Ans' → logprob: -13.000100135803223
    4. 'ans' → logprob: -13.500100135803223
    5. 'sorted' → logprob: -16.000099182128906
    6. 'int' → logprob: -16.250099182128906
    7. '   ' → logprob: -16.625099182128906
    8. ' ' → logprob: -18.250099182128906
    9. 'str' → logprob: -18.625099182128906
    10. 'Answer' → logprob: -19.000099182128906

Token 220: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.0280383548888494e-06
    2. 's' → logprob: -13.875000953674316
    3. ' S' → logprob: -17.250001907348633
    4. '[' → logprob: -17.875001907348633
    5. 'Ans' → logprob: -19.000001907348633
    6. 'ans' → logprob: -19.000001907348633
    7. '[i' → logprob: -20.125001907348633
    8. '```' → logprob: -20.250001907348633
    9. ')' → logprob: -20.687501907348633
    10. 'An' → logprob: -20.875001907348633

Token 221: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.572941179503687e-05
    2. '[' → logprob: -10.000045776367188
    3. '[k' → logprob: -16.750045776367188
    4. ')[' → logprob: -17.125045776367188
    5. '[-' → logprob: -17.125045776367188
    6. '[int' → logprob: -17.375045776367188
    7. '[I' → logprob: -17.375045776367188
    8. ')' → logprob: -17.750045776367188
    9. ' [' → logprob: -18.000045776367188
    10. '[
' → logprob: -18.375045776367188

Token 222: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4742298424243927
    2. '])' → logprob: -0.9742298126220703
    3. '))' → logprob: -9.34922981262207
    4. ')])' → logprob: -10.09922981262207
    5. '})' → logprob: -11.47422981262207
    6. ')]' → logprob: -12.09922981262207
    7. ']' → logprob: -12.34922981262207
    8. ' )' → logprob: -13.47422981262207
    9. ' ])' → logprob: -13.84922981262207
    10. ')
' → logprob: -15.22422981262207


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 220
Tokens correctement prédits (1ère position, stricte): 84
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 161
Précision stricte (1ère position): 38.18%
Précision adaptée (1ère position): 40.91%
Précision (top 10): 73.18%
================================================================================
