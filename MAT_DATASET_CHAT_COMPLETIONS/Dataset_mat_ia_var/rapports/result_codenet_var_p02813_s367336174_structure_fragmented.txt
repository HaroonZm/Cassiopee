================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def read_input():
    n = int(input())
    p = list(map(int, input().split()))
    q = list(map(int, input().split()))
    return n, p, q

def precompute_factorials(n):
    facts = [1] * (n+1)
    for i in range(1, n+1):
        facts[i] = facts[i-1] * i
    return facts

def decrement_n_for_lessers(seq, cur_val, up_to_index):
    count = 0
    for j in range(up_to_index):
        if seq[j] < cur_val:
            count += 1
    return count

def term_for_position(val, lessers, remaining, facts):
    return (val - 1 - lessers) * facts[remaining]

def sequence_order(n, seq, facts):
    total = 0
    for i in range(n):
        val = seq[i]
        lessers = decrement_n_for_lessers(seq, val, i)
        remaining = n - (i + 1)
        total += term_for_position(val, lessers, remaining, facts)
    return total

def compute_difference(n, p, q):
    facts = precompute_factorials(n)
    ord_p = sequence_order(n, p, facts)
    ord_q = sequence_order(n, q, facts)
    return abs(ord_p - ord_q)

def main():
    n, p, q = read_input()
    diff = compute_difference(n, p, q)
    print(diff)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00013834332639817148
    2. 'import' → logprob: -10.250138282775879
    3. '```' → logprob: -10.250138282775879
    4. '\' → logprob: -11.125138282775879
    5. '.pi' → logprob: -11.875138282775879
    6. '\n' → logprob: -12.125138282775879
    7. '.e' → logprob: -12.250138282775879
    8. '.import' → logprob: -12.500138282775879
    9. '.
' → logprob: -12.625138282775879
    10. '<|end|>' → logprob: -12.750138282775879

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.044894974678754807
    2. ' math' → logprob: -3.5448949337005615
    3. ' factorial' → logprob: -5.419895172119141
    4. '_' → logprob: -6.044895172119141
    5. ' calculate' → logprob: -6.044895172119141
    6. ' sqrt' → logprob: -6.294895172119141
    7. ' ' → logprob: -6.919895172119141
    8. ' space' → logprob: -7.544895172119141
    9. ' f' → logprob: -7.794895172119141
    10. '_math' → logprob: -8.66989517211914

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5268174409866333
    2. '_' → logprob: -0.9018174409866333
    3. '_line' → logprob: -7.151817321777344
    4. '_:' → logprob: -7.276817321777344
    5. ' (' → logprob: -7.401817321777344
    6. '```' → logprob: -8.401817321777344
    7. '():' → logprob: -8.901817321777344
    8. '_input' → logprob: -9.151817321777344
    9. '_space' → logprob: -9.151817321777344
    10. '_data' → logprob: -9.276817321777344

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0059853242710232735
    2. '_' → logprob: -5.255985260009766
    3. '():' → logprob: -8.255985260009766
    4. ' (' → logprob: -9.255985260009766
    5. '(:' → logprob: -9.755985260009766
    6. '(_:' → logprob: -9.755985260009766
    7. ':' → logprob: -10.005985260009766
    8. '_:' → logprob: -10.130985260009766
    9. '(_' → logprob: -10.380985260009766
    10. '```' → logprob: -10.380985260009766

Token 7: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7309749126434326
    2. '   ' → logprob: -0.8559749126434326
    3. ':' → logprob: -2.8559749126434326
    4. '(' → logprob: -3.7309749126434326
    5. '```' → logprob: -6.105975151062012
    6. ' ' → logprob: -6.355975151062012
    7. ' ():' → logprob: -6.355975151062012
    8. '()' → logprob: -6.480975151062012
    9. ' return' → logprob: -7.480975151062012
    10. 'return' → logprob: -7.605975151062012

Token 8: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5358962416648865
    2. 'return' → logprob: -1.1608963012695312
    3. 'data' → logprob: -3.2858963012695312
    4. 'input' → logprob: -3.6608963012695312
    5. 'user' → logprob: -4.285896301269531
    6. 'value' → logprob: -5.035896301269531
    7. 'line' → logprob: -5.410896301269531
    8. 'n' (adapté à ' n') → logprob: -5.785896301269531
    9. ' return' → logprob: -5.910896301269531
    10. ' ' → logprob: -6.160896301269531

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12553422152996063
    2. '=' → logprob: -2.2505342960357666
    3. '_' → logprob: -5.3755340576171875
    4. ',' → logprob: -6.0005340576171875
    5. 'umber' → logprob: -6.3755340576171875
    6. ' ' → logprob: -6.3755340576171875
    7. 'u' → logprob: -6.7505340576171875
    8. 'um' → logprob: -8.375534057617188
    9. '  ' → logprob: -8.875534057617188
    10. ')' → logprob: -9.000534057617188

Token 10: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.023267723619937897
    2. 'int' → logprob: -3.7732677459716797
    3. ' ' → logprob: -11.27326774597168
    4. ' input' → logprob: -11.77326774597168
    5. 'input' → logprob: -14.39826774597168
    6. ' ' → logprob: -15.14826774597168
    7. '=int' → logprob: -15.14826774597168
    8. ' float' → logprob: -15.52326774597168
    9. '  ' → logprob: -15.89826774597168
    10. '	int' → logprob: -16.02326774597168

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05504860728979111
    2. '(input' → logprob: -2.930048704147339
    3. 'input' → logprob: -9.680048942565918
    4. '('' → logprob: -9.930048942565918
    5. '()' → logprob: -10.680048942565918
    6. ' (' → logprob: -10.930048942565918
    7. ''' → logprob: -12.305048942565918
    8. '(
' → logprob: -13.055048942565918
    9. '("' → logprob: -13.305048942565918
    10. ' input' → logprob: -13.805048942565918

Token 12: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21169188618659973
    2. '())' → logprob: -1.9616918563842773
    3. ')' → logprob: -3.5866918563842773
    4. '(' → logprob: -3.8366918563842773
    5. '('' → logprob: -7.586691856384277
    6. '")' → logprob: -9.461691856384277
    7. '(
' → logprob: -9.586691856384277
    8. '()))' → logprob: -9.961691856384277
    9. '')' → logprob: -10.836691856384277
    10. '))' → logprob: -10.836691856384277

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12764132022857666
    2. '    
' → logprob: -2.877641201019287
    3. '\n' → logprob: -4.127641201019287
    4. 'return' → logprob: -4.127641201019287
    5. '
' → logprob: -4.627641201019287
    6. '\' → logprob: -4.752641201019287
    7. '  
' → logprob: -6.252641201019287
    8. '   
' → logprob: -6.502641201019287
    9. '```' → logprob: -6.502641201019287
    10. ' ' → logprob: -6.627641201019287

Token 14: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9840165972709656
    2. 'data' → logprob: -1.4840166568756104
    3. 'numbers' → logprob: -2.3590166568756104
    4. 'return' → logprob: -2.6090166568756104
    5. ' numbers' → logprob: -2.9840166568756104
    6. 'num' → logprob: -3.4840166568756104
    7. '    
' → logprob: -3.7340166568756104
    8. 'nums' → logprob: -3.8590166568756104
    9. ')' → logprob: -4.359016418457031
    10. 'x' → logprob: -4.609016418457031

Token 15: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3023870587348938
    2. ' =' → logprob: -1.677386999130249
    3. '=' → logprob: -3.677386999130249
    4. 'i' → logprob: -4.302387237548828
    5. 'e' → logprob: -5.427387237548828
    6. 'a' → logprob: -5.427387237548828
    7. 'ar' → logprob: -6.177387237548828
    8. 'oints' → logprob: -6.302387237548828
    9. ' ' → logprob: -6.427387237548828
    10. ',' → logprob: -6.552387237548828

Token 16: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.21138237416744232
    2. ' list' → logprob: -2.5863823890686035
    3. '[]' → logprob: -3.0863823890686035
    4. '[' → logprob: -3.4613823890686035
    5. '[list' → logprob: -4.2113823890686035
    6. '[int' → logprob: -4.9613823890686035
    7. ' [' → logprob: -5.0863823890686035
    8. ' []' → logprob: -5.7113823890686035
    9. '[input' → logprob: -5.7113823890686035
    10. 'input' → logprob: -6.7113823890686035

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08153943717479706
    2. '(map' → logprob: -2.7065393924713135
    3. '(input' → logprob: -4.581539630889893
    4. '(range' → logprob: -6.956539630889893
    5. '(int' → logprob: -8.581539154052734
    6. '()' → logprob: -9.706539154052734
    7. '(eval' → logprob: -10.581539154052734
    8. '(
' → logprob: -11.206539154052734
    9. '(filter' → logprob: -11.456539154052734
    10. '(

' → logprob: -11.956539154052734

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010553817264735699
    2. '(' → logprob: -4.63555383682251
    3. '(lambda' → logprob: -7.76055383682251
    4. 'int' → logprob: -9.135553359985352
    5. '(input' → logprob: -9.260553359985352
    6. ' (' → logprob: -9.760553359985352
    7. '=int' → logprob: -10.385553359985352
    8. '<int' → logprob: -10.885553359985352
    9. ')' → logprob: -11.385553359985352
    10. '(str' → logprob: -11.510553359985352

Token 19: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.37611448764801025
    2. ',' → logprob: -1.2511144876480103
    3. '(input' → logprob: -3.6261143684387207
    4. ' ,' → logprob: -8.001114845275879
    5. '(' → logprob: -9.001114845275879
    6. 'input' → logprob: -9.376114845275879
    7. ' (' → logprob: -9.751114845275879
    8. '=input' → logprob: -10.626114845275879
    9. ' input' → logprob: -10.876114845275879
    10. '<input' → logprob: -12.126114845275879

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132919371128082
    2. ' input' → logprob: -1.3132919073104858
    3. '(input' → logprob: -10.688291549682617
    4. ')' → logprob: -12.938291549682617
    5. ',input' → logprob: -13.063291549682617
    6. '=input' → logprob: -13.313291549682617
    7. '	input' → logprob: -14.563291549682617
    8. '<input' → logprob: -15.563291549682617
    9. '_input' → logprob: -15.938291549682617
    10. ' ' → logprob: -15.938291549682617

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00028266964363865554
    2. '()' → logprob: -8.375282287597656
    3. '()))' → logprob: -10.000282287597656
    4. '())' → logprob: -12.875282287597656
    5. ' ().' → logprob: -13.500282287597656
    6. '())))' → logprob: -14.375282287597656
    7. '()
' → logprob: -14.625282287597656
    8. '(' → logprob: -14.625282287597656
    9. '()));' → logprob: -14.750282287597656
    10. ')' → logprob: -15.125282287597656

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009175319573841989
    2. 'strip' → logprob: -7.000917434692383
    3. 'rstrip' → logprob: -12.750917434692383
    4. ' split' → logprob: -12.875917434692383
    5. '(split' → logprob: -14.750917434692383
    6. 'spl' → logprob: -16.500917434692383
    7. ')' → logprob: -17.125917434692383
    8. 'read' → logprob: -17.250917434692383
    9. ' strip' → logprob: -17.875917434692383
    10. '().' → logprob: -19.500917434692383

Token 23: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06045496463775635
    2. '))' → logprob: -3.185454845428467
    3. '())' → logprob: -4.560454845428467
    4. '()' → logprob: -5.310454845428467
    5. '(' → logprob: -7.435454845428467
    6. ')' → logprob: -7.810454845428467
    7. '()))
' → logprob: -7.935454845428467
    8. '('' → logprob: -8.810455322265625
    9. '())))' → logprob: -8.810455322265625
    10. ''))' → logprob: -9.810455322265625

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023243871983140707
    2. '    
' → logprob: -7.37732458114624
    3. '
' → logprob: -7.62732458114624
    4. '```' → logprob: -7.62732458114624
    5. '<|end|>' → logprob: -8.252324104309082
    6. ')' → logprob: -8.502324104309082
    7. 'return' → logprob: -9.002324104309082
    8. ' ' → logprob: -10.627324104309082
    9. '  
' → logprob: -10.877324104309082
    10. ' return' → logprob: -11.002324104309082

Token 25: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24125683307647705
    2. ')' → logprob: -1.741256833076477
    3. 'return' → logprob: -3.6162567138671875
    4. ' ' → logprob: -5.3662567138671875
    5. '
' → logprob: -6.3662567138671875
    6. ' return' → logprob: -6.4912567138671875
    7. 'r' → logprob: -7.2412567138671875
    8. 'n' → logprob: -7.3662567138671875
    9. '    
' → logprob: -7.4912567138671875
    10. '```' → logprob: -7.7412567138671875

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269473135471344
    2. '=' → logprob: -2.1269474029541016
    3. ')' → logprob: -12.751947402954102
    4. ',' → logprob: -12.876947402954102
    5. '[' → logprob: -13.126947402954102
    6. '_' → logprob: -13.126947402954102
    7. '[:]' → logprob: -13.251947402954102
    8. ' ' → logprob: -13.376947402954102
    9. '  ' → logprob: -13.626947402954102
    10. '.' → logprob: -13.751947402954102

Token 27: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6326790452003479
    2. ' list' → logprob: -0.7576790452003479
    3. '(list' → logprob: -11.007678985595703
    4. ' p' → logprob: -11.132678985595703
    5. '[' → logprob: -11.507678985595703
    6. 'int' → logprob: -11.632678985595703
    7. '[list' → logprob: -11.632678985595703
    8. '[]' → logprob: -12.382678985595703
    9. ' [' → logprob: -12.632678985595703
    10. 'p' → logprob: -12.882678985595703

Token 28: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0013047605752944946
    2. '(' → logprob: -7.126304626464844
    3. '(int' → logprob: -7.626304626464844
    4. 'map' → logprob: -11.751304626464844
    5. ' (' → logprob: -12.751304626464844
    6. '(
' → logprob: -14.251304626464844
    7. '(lambda' → logprob: -15.001304626464844
    8. '(math' → logprob: -15.501304626464844
    9. ' map' → logprob: -15.626304626464844
    10. '	map' → logprob: -16.001304626464844

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001238004770129919
    2. '<int' → logprob: -9.625123977661133
    3. '=int' → logprob: -10.500123977661133
    4. '(' → logprob: -10.750123977661133
    5. '[int' → logprob: -12.375123977661133
    6. 'int' → logprob: -13.000123977661133
    7. ' (' → logprob: -14.000123977661133
    8. ',int' → logprob: -14.375123977661133
    9. ']int' → logprob: -15.250123977661133
    10. ' int' → logprob: -16.250123977661133

Token 30: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003787012305110693
    2. ',int' → logprob: -6.628787040710449
    3. '(input' → logprob: -6.753787040710449
    4. ',' → logprob: -7.628787040710449
    5. 'int' → logprob: -7.628787040710449
    6. '(' → logprob: -8.62878704071045
    7. '=int' → logprob: -9.87878704071045
    8. '<int' → logprob: -10.87878704071045
    9. ' (' → logprob: -11.12878704071045
    10. ')' → logprob: -11.50378704071045

Token 31: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.027819447219371796
    2. 'input' → logprob: -4.152819633483887
    3. ' int' → logprob: -4.527819633483887
    4. ' input' → logprob: -7.027819633483887
    5. '(int' → logprob: -10.902819633483887
    6. ' ' → logprob: -12.902819633483887
    7. 'str' → logprob: -14.027819633483887
    8. '<int' → logprob: -14.152819633483887
    9. '[int' → logprob: -14.277819633483887
    10. '   ' → logprob: -14.527819633483887

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -15.000004768371582
    4. '(' → logprob: -15.500004768371582
    5. '()-' → logprob: -16.6250057220459
    6. '.' → logprob: -18.6250057220459
    7. '()))' → logprob: -18.6250057220459
    8. '(.' → logprob: -18.7500057220459
    9. '()
' → logprob: -19.0000057220459
    10. '())' → logprob: -19.1250057220459

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5690089639974758e-05
    2. 'strip' → logprob: -11.250015258789062
    3. '(split' → logprob: -14.125015258789062
    4. ')' → logprob: -14.625015258789062
    5. ' split' → logprob: -14.625015258789062
    6. '.split' → logprob: -14.750015258789062
    7. 'plit' → logprob: -15.875015258789062
    8. '().' → logprob: -15.875015258789062
    9. 'rstrip' → logprob: -16.375015258789062
    10. '())' → logprob: -16.375015258789062

Token 34: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.033086054027080536
    2. '())' → logprob: -4.158085823059082
    3. '))' → logprob: -4.283085823059082
    4. '()' → logprob: -5.908085823059082
    5. '()))
' → logprob: -8.658085823059082
    6. ')' → logprob: -8.658085823059082
    7. '(' → logprob: -11.283085823059082
    8. '()))

' → logprob: -11.533085823059082
    9. '   ' → logprob: -11.783085823059082
    10. '()));' → logprob: -13.033085823059082

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022499379701912403
    2. '    
' → logprob: -6.752249717712402
    3. '
' → logprob: -7.752249717712402
    4. 'return' → logprob: -8.252249717712402
    5. '```' → logprob: -9.002249717712402
    6. 'def' → logprob: -9.252249717712402
    7. ' return' → logprob: -10.002249717712402
    8. ')' → logprob: -10.127249717712402
    9. '<|end|>' → logprob: -10.627249717712402
    10. 'n' → logprob: -11.252249717712402

Token 36: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006387310568243265
    2. ')' → logprob: -5.881387233734131
    3. 'return' (adapté à ' return') → logprob: -6.506387233734131
    4. 'n' → logprob: -7.256387233734131
    5. '```' → logprob: -7.881387233734131
    6. ' return' → logprob: -8.631387710571289
    7. ' ' → logprob: -8.631387710571289
    8. 'r' → logprob: -8.881387710571289
    9. '
' → logprob: -9.131387710571289
    10. '    ' → logprob: -9.506387710571289

Token 37: ' n' (ID: 297)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4405554533004761
    2. 'p' → logprob: -1.315555453300476
    3. ' n' → logprob: -2.6905555725097656
    4. 'n' → logprob: -3.9405555725097656
    5. '(p' → logprob: -7.815555572509766
    6. ' (' → logprob: -8.690555572509766
    7. '(n' → logprob: -9.065555572509766
    8. ' ' → logprob: -11.190555572509766
    9. '   ' → logprob: -11.940555572509766
    10. '(' → logprob: -12.690555572509766

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026542600244283676
    2. ',n' → logprob: -4.026542663574219
    3. ',p' → logprob: -4.901542663574219
    4. ' ,' → logprob: -7.276542663574219
    5. '(n' → logprob: -9.901542663574219
    6. 'n' → logprob: -9.901542663574219
    7. '(p' → logprob: -10.776542663574219
    8. '<|end|>' → logprob: -10.776542663574219
    9. ')' → logprob: -11.026542663574219
    10. '(' → logprob: -11.151542663574219

Token 39: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.17974749207496643
    2. 'p' → logprob: -1.804747462272644
    3. ' ' → logprob: -14.054747581481934
    4. ' ' → logprob: -14.304747581481934
    5. 'space' → logprob: -14.804747581481934
    6. '(p' → logprob: -15.679747581481934
    7. '	p' → logprob: -16.179746627807617
    8. ''' → logprob: -16.179746627807617
    9. 's' → logprob: -16.617246627807617
    10. ' ,' → logprob: -16.679746627807617

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03839121386408806
    2. ',q' → logprob: -3.28839111328125
    3. ' ,' → logprob: -8.28839111328125
    4. ' q' → logprob: -10.16339111328125
    5. 'q' → logprob: -10.16339111328125
    6. '   ' → logprob: -11.53839111328125
    7. ',p' → logprob: -12.66339111328125
    8. '`,' → logprob: -12.91339111328125
    9. ',
' → logprob: -13.53839111328125
    10. ',n' → logprob: -13.78839111328125

Token 41: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.014248599298298359
    2. 'q' → logprob: -4.264248371124268
    3. ' ' → logprob: -9.639248847961426
    4. ' ' → logprob: -11.139248847961426
    5. ',q' → logprob: -13.264248847961426
    6. '	q' → logprob: -13.764248847961426
    7. ',' → logprob: -14.389248847961426
    8. '(q' → logprob: -15.639248847961426
    9. ' ​' → logprob: -15.639248847961426
    10. ' ,' → logprob: -15.764248847961426

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7687443494796753
    2. 'def' → logprob: -1.0187443494796753
    3. '

' → logprob: -1.7687443494796753
    4. '```' → logprob: -6.393744468688965
    5. '
' → logprob: -6.643744468688965
    6. '\n' → logprob: -7.268744468688965
    7. '\' → logprob: -8.018744468688965
    8. 'n' → logprob: -8.518744468688965
    9. '<|end|>' → logprob: -9.268744468688965
    10. 'import' → logprob: -9.393744468688965

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.685467764735222e-05
    2. '```' → logprob: -10.000086784362793
    3. '
' → logprob: -10.750086784362793
    4. '

' → logprob: -11.750086784362793
    5. '<|end|>' → logprob: -12.500086784362793
    6. ' def' → logprob: -13.250086784362793
    7. 'import' → logprob: -13.625086784362793
    8. '\' → logprob: -13.750086784362793
    9. '    
' → logprob: -13.750086784362793
    10. '<|end|>' → logprob: -14.375086784362793

Token 44: ' pre' (ID: 876)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5861037969589233
    2. ' factorial' → logprob: -1.8361037969589233
    3. ' math' → logprob: -2.086103916168213
    4. ' calculate' → logprob: -3.461103916168213
    5. ' solve' → logprob: -3.461103916168213
    6. ' is' → logprob: -3.961103916168213
    7. ' permutations' → logprob: -4.211103916168213
    8. ' perm' → logprob: -4.211103916168213
    9. ' factor' → logprob: -4.961103916168213
    10. ' permutation' → logprob: -4.961103916168213

Token 45: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.41765737533569336
    2. 'dict' → logprob: -1.2926573753356934
    3. 'd' → logprob: -3.2926573753356934
    4. 'pare' → logprob: -4.542657375335693
    5. 'process' → logprob: -4.667657375335693
    6. 'fix' → logprob: -5.292657375335693
    7. 'dic' → logprob: -6.917657375335693
    8. 'serve' → logprob: -7.167657375335693
    9. 'sum' → logprob: -7.292657375335693
    10. 'calculate' → logprob: -7.792657375335693

Token 46: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.02826165407896042
    2. '_' → logprob: -4.528261661529541
    3. '_f' → logprob: -4.528261661529541
    4. '(' → logprob: -5.778261661529541
    5. 'factor' → logprob: -6.778261661529541
    6. '_div' → logprob: -7.528261661529541
    7. '_s' → logprob: -7.528261661529541
    8. '_fact' → logprob: -9.153261184692383
    9. '_dist' → logprob: -9.528261184692383
    10. '(_' → logprob: -9.653261184692383

Token 47: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.048667192459106445
    2. 'ial' → logprob: -3.0486671924591064
    3. '```' → logprob: -9.673666954040527
    4. 's' → logprob: -11.173666954040527
    5. '``' → logprob: -14.298666954040527
    6. 'ialize' → logprob: -14.423666954040527
    7. '!' → logprob: -14.673666954040527
    8. 't' → logprob: -16.048667907714844
    9. 'al' → logprob: -16.173667907714844
    10. 'i' → logprob: -16.173667907714844

Token 48: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3880983591079712
    2. '(' → logprob: -1.1380983591079712
    3. ' (' → logprob: -6.888098239898682
    4. '(num' → logprob: -9.13809871673584
    5. '():' → logprob: -9.88809871673584
    6. '(max' → logprob: -10.76309871673584
    7. '(size' → logprob: -12.38809871673584
    8. '   ' → logprob: -12.51309871673584
    9. '(N' → logprob: -12.63809871673584
    10. '```' → logprob: -13.26309871673584

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006386925233528018
    2. '):
' → logprob: -8.250638961791992
    3. '+' → logprob: -8.500638961791992
    4. ')' → logprob: -8.875638961791992
    5. ' ):' → logprob: -11.125638961791992
    6. '):
' → logprob: -11.500638961791992
    7. ':' → logprob: -13.000638961791992
    8. '   ' → logprob: -13.750638961791992
    9. '(n' → logprob: -14.000638961791992
    10. '=' → logprob: -14.000638961791992

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001323691918514669
    2. ' factorial' → logprob: -7.001323699951172
    3. ' fact' → logprob: -8.876323699951172
    4. 'fact' → logprob: -9.126323699951172
    5. '    
' → logprob: -9.751323699951172
    6. 'factor' → logprob: -10.126323699951172
    7. '```' → logprob: -10.876323699951172
    8. ':' → logprob: -11.001323699951172
    9. '_factor' → logprob: -12.126323699951172
    10. '    ' → logprob: -12.376323699951172

Token 51: ' facts' (ID: 19719)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40316829085350037
    2. ' factorial' → logprob: -1.1531683206558228
    3. ' fact' → logprob: -4.403168201446533
    4. 'factor' → logprob: -6.153168201446533
    5. 'fact' → logprob: -6.903168201446533
    6. ' f' → logprob: -8.028168678283691
    7. ' factor' → logprob: -8.528168678283691
    8. ' fac' → logprob: -9.653168678283691
    9. '    ' → logprob: -10.153168678283691
    10. '    
' → logprob: -10.278168678283691

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4778348505496979
    2. '=' → logprob: -0.9778348207473755
    3. 'or' → logprob: -6.102834701538086
    4. 'al' → logprob: -7.352834701538086
    5. '   ' → logprob: -8.477834701538086
    6. ' ' → logprob: -8.602834701538086
    7. '[' → logprob: -9.602834701538086
    8. '_' → logprob: -9.852834701538086
    9. '_factor' → logprob: -9.977834701538086
    10. 'orial' → logprob: -10.227834701538086

Token 53: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5759420394897461
    2. '[' → logprob: -0.8259420394897461
    3. ' ' → logprob: -13.825942039489746
    4. '[n' → logprob: -14.575942039489746
    5. '   ' → logprob: -15.075942039489746
    6. '{' → logprob: -15.575942039489746
    7. '1' → logprob: -16.325942993164062
    8. '[i' → logprob: -16.700942993164062
    9. '[m' → logprob: -16.950942993164062
    10. ' ' → logprob: -16.950942993164062

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. 'math' → logprob: -17.375
    4. '   ' → logprob: -18.5
    5. '  ' → logprob: -20.25
    6. '```' → logprob: -20.375
    7. ']' → logprob: -20.5
    8. ')' → logprob: -20.625
    9. ' math' → logprob: -20.875
    10. '[' → logprob: -21.375

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024406595912296325
    2. ']
' → logprob: -8.750244140625
    3. ']*(' → logprob: -10.500244140625
    4. ']*' → logprob: -10.750244140625
    5. ' ]' → logprob: -11.125244140625
    6. ',' → logprob: -11.125244140625
    7. ' for' → logprob: -12.625244140625
    8. ']
' → logprob: -13.625244140625
    9. ']

' → logprob: -14.375244140625
    10. ')' → logprob: -14.500244140625

Token 56: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05916740745306015
    2. ' for' → logprob: -4.184167385101318
    3. '
' → logprob: -4.309167385101318
    4. 'for' → logprob: -4.559167385101318
    5. ',' → logprob: -5.684167385101318
    6. '*' → logprob: -5.934167385101318
    7. ']*' → logprob: -6.059167385101318
    8. ']*(' → logprob: -6.059167385101318
    9. ')' → logprob: -6.809167385101318
    10. '' → logprob: -6.809167385101318

Token 57: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005741207860410213
    2. ' (' → logprob: -7.500574111938477
    3. '(' → logprob: -11.500574111938477
    4. '(max' → logprob: -11.625574111938477
    5. '(len' → logprob: -14.375574111938477
    6. ' ' → logprob: -15.000574111938477
    7. 'n' → logprob: -15.125574111938477
    8. '   ' → logprob: -15.875574111938477
    9. '(num' → logprob: -16.000574111938477
    10. '(nn' → logprob: -16.000574111938477

Token 58: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003418991982471198
    2. ' n' → logprob: -8.00034236907959
    3. '(n' → logprob: -12.00034236907959
    4. '   ' → logprob: -15.12534236907959
    5. '	n' → logprob: -17.625341415405273
    6. ')n' → logprob: -17.875341415405273
    7. ' (' → logprob: -18.250341415405273
    8. ' ' → logprob: -18.375341415405273
    9. '(' → logprob: -18.500341415405273
    10. '
' → logprob: -19.875341415405273

Token 59: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004621780011802912
    2. ' +' → logprob: -5.379621982574463
    3. '+
' → logprob: -13.754621505737305
    4. ' ' → logprob: -15.004621505737305
    5. '＋' → logprob: -16.879621505737305
    6. ' +
' → logprob: -17.004621505737305
    7. '2' → logprob: -17.254621505737305
    8. '1' → logprob: -17.379621505737305
    9. '+

' → logprob: -17.504621505737305
    10. ' plus' → logprob: -17.879621505737305

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021105022460687906
    2. ' ' → logprob: -8.750210762023926
    3. '2' → logprob: -9.875210762023926
    4. '   ' → logprob: -15.312710762023926
    5. '```' → logprob: -15.375210762023926
    6. '  ' → logprob: -16.000211715698242
    7. '+' → logprob: -16.562711715698242
    8. '
' → logprob: -16.562711715698242
    9. '10' → logprob: -17.000211715698242
    10. '`' → logprob: -17.062711715698242

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38785019516944885
    2. ')
' → logprob: -1.1378501653671265
    3. ')
' → logprob: -7.012850284576416
    4. ')

' → logprob: -9.762849807739258
    5. ' )
' → logprob: -11.762849807739258
    6. '   ' → logprob: -12.262849807739258
    7. ' )' → logprob: -12.762849807739258
    8. ' ' → logprob: -13.262849807739258
    9. ')

' → logprob: -13.512849807739258
    10. '```' → logprob: -15.012849807739258

Token 62: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49444469809532166
    2. '   ' → logprob: -1.494444727897644
    3. 'for' → logprob: -1.869444727897644
    4. '
' → logprob: -4.619444847106934
    5. '	for' → logprob: -6.619444847106934
    6. '    
' → logprob: -8.494444847106934
    7. ' ' → logprob: -9.869444847106934
    8. ' 
' → logprob: -11.119444847106934
    9. '  ' → logprob: -11.869444847106934
    10. '   
' → logprob: -11.994444847106934

Token 63: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38803228735923767
    2. 'for' (adapté à ' for') → logprob: -1.13803231716156
    3. '   ' → logprob: -6.76303243637085
    4. ' ' → logprob: -13.263031959533691
    5. '
' → logprob: -13.763031959533691
    6. '	for' → logprob: -14.013031959533691
    7. '    
' → logprob: -14.638031959533691
    8. '    ' → logprob: -15.263031959533691
    9. ' ' → logprob: -15.513031959533691
    10. ' 
' → logprob: -15.888031959533691

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006748766638338566
    2. 'i' → logprob: -5.006748676300049
    3. ' ' → logprob: -10.381749153137207
    4. '	i' → logprob: -13.006749153137207
    5. ' ' → logprob: -16.50674819946289
    6. '  ' → logprob: -17.63174819946289
    7. '_' → logprob: -18.00674819946289
    8. ' _' → logprob: -18.13174819946289
    9. ' ‌' → logprob: -18.38174819946289
    10. '   ' → logprob: -19.00674819946289

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008869222365319729
    2. 'in' → logprob: -7.125886917114258
    3. ' ' → logprob: -9.500886917114258
    4. '	in' → logprob: -12.375886917114258
    5. '<|end|>' → logprob: -13.875886917114258
    6. '  ' → logprob: -14.500886917114258
    7. ' i' → logprob: -14.500886917114258
    8. '    ' → logprob: -14.875886917114258
    9. '   ' → logprob: -15.500886917114258
    10. '```' → logprob: -15.500886917114258

Token 66: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06196858361363411
    2. 'range' → logprob: -2.8119685649871826
    3. '	range' → logprob: -14.936968803405762
    4. ' ' → logprob: -15.061968803405762
    5. '(range' → logprob: -15.436968803405762
    6. ' xrange' → logprob: -17.436967849731445
    7. '   ' → logprob: -17.811967849731445
    8. '  ' → logprob: -17.936967849731445
    9. '1' → logprob: -19.061967849731445
    10. '.range' → logprob: -19.311967849731445

Token 67: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002681304467841983
    2. '1' → logprob: -8.75026798248291
    3. ' (' → logprob: -9.75026798248291
    4. ' ' → logprob: -10.25026798248291
    5. '   ' → logprob: -11.62526798248291
    6. '2' → logprob: -11.87526798248291
    7. ' in' → logprob: -16.625268936157227
    8. '  ' → logprob: -17.750268936157227
    9. 'def' → logprob: -18.000268936157227
    10. ',' → logprob: -18.375268936157227

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05583479255437851
    2. '2' → logprob: -3.0558347702026367
    3. ' ' → logprob: -4.930834770202637
    4. '   ' → logprob: -14.805834770202637
    5. '```' → logprob: -15.930834770202637
    6. ')' → logprob: -16.805835723876953
    7. '(' → logprob: -16.805835723876953
    8. '  ' → logprob: -16.930835723876953
    9. 'n' → logprob: -17.055835723876953
    10. '`' → logprob: -18.055835723876953

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4315481185913086
    2. ' ,' → logprob: -1.0565481185913086
    3. ',n' → logprob: -6.431548118591309
    4. ' ' → logprob: -7.431548118591309
    5. ' )' → logprob: -8.306548118591309
    6. '   ' → logprob: -9.181548118591309
    7. ')' → logprob: -9.431548118591309
    8. ' ),' → logprob: -9.681548118591309
    9. ' n' → logprob: -10.806548118591309
    10. ' to' → logprob: -10.806548118591309

Token 70: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014163863845169544
    2. 'n' → logprob: -4.264163970947266
    3. '	n' → logprob: -15.389163970947266
    4. ' ' → logprob: -16.389163970947266
    5. ' ' → logprob: -17.389163970947266
    6. ')n' → logprob: -17.514163970947266
    7. '_n' → logprob: -18.139163970947266
    8. '```' → logprob: -18.514163970947266
    9. '(n' → logprob: -19.014163970947266
    10. '<|end|>' → logprob: -19.639163970947266

Token 71: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815006136894226
    2. ' +' → logprob: -4.0181498527526855
    3. '+
' → logprob: -16.768150329589844
    4. ' +
' → logprob: -17.518150329589844
    5. '+n' → logprob: -18.518150329589844
    6. '1' → logprob: -18.643150329589844
    7. ' ' → logprob: -18.768150329589844
    8. ')+' → logprob: -18.768150329589844
    9. '   ' → logprob: -19.393150329589844
    10. '):
' → logprob: -19.643150329589844

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007375618442893028
    2. '+' → logprob: -7.50073766708374
    3. ' ' → logprob: -8.625737190246582
    4. '2' → logprob: -12.250737190246582
    5. '   ' → logprob: -15.875737190246582
    6. ' +' → logprob: -16.0007381439209
    7. '```' → logprob: -16.1257381439209
    8. ')' → logprob: -16.7507381439209
    9. '  ' → logprob: -17.8757381439209
    10. '-' → logprob: -19.0007381439209

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004956224001944065
    2. '):
' → logprob: -5.754956245422363
    3. ' ):' → logprob: -6.754956245422363
    4. ':' → logprob: -7.629956245422363
    5. ')' → logprob: -9.129956245422363
    6. ' ):
' → logprob: -11.254956245422363
    7. '):
' → logprob: -13.254956245422363
    8. ' )' → logprob: -14.129956245422363
    9. ' :' → logprob: -14.504956245422363
    10. ' ' → logprob: -14.879956245422363

Token 74: '       ' (ID: 309)
  Prédit: ' facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facts' → logprob: -0.5198357701301575
    2. 'facts' → logprob: -1.1448357105255127
    3. '   ' → logprob: -2.8948357105255127
    4. ' factorial' → logprob: -4.769835948944092
    5. '    ' → logprob: -5.269835948944092
    6. '```' → logprob: -5.644835948944092
    7. ' math' → logprob: -5.894835948944092
    8. '`' → logprob: -6.144835948944092
    9. '       ' → logprob: -6.519835948944092
    10. ' ' → logprob: -6.519835948944092

Token 75: ' facts' (ID: 19719)
  Prédit: ' facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facts' → logprob: -0.5759847164154053
    2. 'facts' (adapté à ' facts') → logprob: -0.8259847164154053
    3. '   ' → logprob: -11.700984954833984
    4. 'fact' → logprob: -12.075984954833984
    5. '    ' → logprob: -12.075984954833984
    6. 'f' → logprob: -12.200984954833984
    7. ' ' → logprob: -12.325984954833984
    8. ' fact' → logprob: -12.450984954833984
    9. 'Facts' → logprob: -12.575984954833984
    10. '```' → logprob: -12.950984954833984

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023256894201040268
    2. '[' → logprob: -3.773256778717041
    3. ' [' → logprob: -11.6482572555542
    4. '[I' → logprob: -13.6482572555542
    5. '   ' → logprob: -14.7732572555542
    6. '```' → logprob: -15.3982572555542
    7. ' ' → logprob: -15.8982572555542
    8. '[j' → logprob: -16.023256301879883
    9. '\[' → logprob: -16.273256301879883
    10. '[*' → logprob: -16.398256301879883

Token 77: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7535774111747742
    2. '=' → logprob: -1.003577470779419
    3. ' =' → logprob: -1.878577470779419
    4. ')' → logprob: -4.87857723236084
    5. ' ]' → logprob: -6.87857723236084
    6. ']=' → logprob: -7.25357723236084
    7. '*' → logprob: -8.37857723236084
    8. ' ' → logprob: -9.00357723236084
    9. ' *=' → logprob: -9.12857723236084
    10. ')=' → logprob: -10.12857723236084

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014065833762288094
    2. ' =' → logprob: -4.514065742492676
    3. '*=' → logprob: -6.014065742492676
    4. ' *=' → logprob: -7.639065742492676
    5. '*' → logprob: -9.389065742492676
    6. ' ' → logprob: -13.514065742492676
    7. '=*' → logprob: -13.639065742492676
    8. '	' → logprob: -14.639065742492676
    9. '=

' → logprob: -15.639065742492676
    10. '=*/' → logprob: -15.764065742492676

Token 79: ' facts' (ID: 19719)
  Prédit: ' facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facts' → logprob: -0.026823734864592552
    2. 'facts' → logprob: -3.6518237590789795
    3. ' math' → logprob: -8.401823997497559
    4. ' fact' → logprob: -8.526823997497559
    5. ' i' → logprob: -10.026823997497559
    6. 'fact' → logprob: -10.401823997497559
    7. ' factorial' → logprob: -11.276823997497559
    8. ' ' → logprob: -11.901823997497559
    9. 'math' → logprob: -12.901823997497559
    10. 'i' → logprob: -13.151823997497559

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02975917048752308
    2. '[' → logprob: -3.529759168624878
    3. ' [' → logprob: -12.529759407043457
    4. '[
' → logprob: -13.279759407043457
    5. '[I' → logprob: -13.904759407043457
    6. '[*' → logprob: -14.154759407043457
    7. '*' → logprob: -14.904759407043457
    8. '```' → logprob: -14.904759407043457
    9. ' ' → logprob: -15.529759407043457
    10. '`' → logprob: -15.654759407043457

Token 81: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20683927834033966
    2. '[i' → logprob: -1.8318393230438232
    3. '*' → logprob: -4.206839084625244
    4. '[' → logprob: -4.706839084625244
    5. ' -' → logprob: -6.956839084625244
    6. '[-' → logprob: -7.581839084625244
    7. ']' → logprob: -7.956839084625244
    8. '`' → logprob: -8.456839561462402
    9. ' ' → logprob: -8.456839561462402
    10. ' *' → logprob: -8.456839561462402

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14671394228935242
    2. ']' → logprob: -2.021713972091675
    3. 'i' → logprob: -5.646713733673096
    4. ']*' → logprob: -8.646714210510254
    5. ' ]' → logprob: -8.771714210510254
    6. ' ' → logprob: -8.896714210510254
    7. '```' → logprob: -11.896714210510254
    8. ')' → logprob: -12.396714210510254
    9. '*' → logprob: -12.646714210510254
    10. '*i' → logprob: -12.771714210510254

Token 83: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07007437199354172
    2. ' *' → logprob: -2.6950743198394775
    3. '*i' → logprob: -9.070074081420898
    4. '**' → logprob: -11.820074081420898
    5. ' ' → logprob: -12.070074081420898
    6. ' ' → logprob: -12.070074081420898
    7. '`' → logprob: -13.070074081420898
    8. ')' → logprob: -15.070074081420898
    9. ' **' → logprob: -15.445074081420898
    10. '*object' → logprob: -15.570074081420898

Token 84: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0029068700969219208
    2. ' *' → logprob: -6.002906799316406
    3. '*i' → logprob: -7.752906799316406
    4. '**' → logprob: -14.252906799316406
    5. '*object' → logprob: -14.627906799316406
    6. ' ' → logprob: -16.127906799316406
    7. ' ' → logprob: -16.252906799316406
    8. '*j' → logprob: -16.502906799316406
    9. '`' → logprob: -16.502906799316406
    10. '*pi' → logprob: -17.502906799316406

Token 85: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007099286303855479
    2. ' i' → logprob: -7.2507100105285645
    3. '	i' → logprob: -18.625709533691406
    4. ' ' → logprob: -18.750709533691406
    5. ' math' → logprob: -21.375709533691406
    6. '   ' → logprob: -21.875709533691406
    7. '  ' → logprob: -22.750709533691406
    8. ' ' → logprob: -23.250709533691406
    9. '`' → logprob: -23.750709533691406
    10. 'math' → logprob: -24.250709533691406

Token 86: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20776371657848358
    2. '
' → logprob: -2.207763671875
    3. '<|end|>' → logprob: -3.207763671875
    4. ' 
' → logprob: -4.457763671875
    5. '\' → logprob: -4.582763671875
    6. '   ' → logprob: -5.582763671875
    7. '\r' → logprob: -5.832763671875
    8. '  
' → logprob: -6.332763671875
    9. ' ' → logprob: -6.582763671875
    10. '' → logprob: -6.832763671875

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43621036410331726
    2. '\n' → logprob: -1.1862103939056396
    3. '    
' → logprob: -4.9362101554870605
    4. ' return' → logprob: -4.9362101554870605
    5. ' 
' → logprob: -5.1862101554870605
    6. '
' → logprob: -5.1862101554870605
    7. ' ' → logprob: -5.4362101554870605
    8. '\' → logprob: -5.4362101554870605
    9. '<|end|>' → logprob: -5.6862101554870605
    10. 'return' → logprob: -5.9362101554870605

Token 88: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9136238694190979
    2. '   ' → logprob: -1.0386238098144531
    3. '\n' → logprob: -2.163623809814453
    4. ' 
' → logprob: -2.788623809814453
    5. ' return' → logprob: -3.538623809814453
    6. '\' → logprob: -5.038623809814453
    7. '	return' → logprob: -5.413623809814453
    8. '
' → logprob: -5.413623809814453
    9. '  
' → logprob: -5.538623809814453
    10. '    
' → logprob: -5.788623809814453

Token 89: ' facts' (ID: 19719)
  Prédit: 'facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'facts' → logprob: -0.25194114446640015
    2. ' facts' → logprob: -1.501941204071045
    3. 'fact' → logprob: -11.626940727233887
    4. 'Facts' → logprob: -13.251940727233887
    5. ' fact' → logprob: -13.751940727233887
    6. 'f' → logprob: -15.251940727233887
    7. 'fac' → logprob: -19.251941680908203
    8. 's' → logprob: -19.376941680908203
    9. '(f' → logprob: -20.251941680908203
    10. '事实' → logprob: -20.376941680908203

Token 90: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45611926913261414
    2. '
' → logprob: -1.0811192989349365
    3. '

' → logprob: -3.9561192989349365
    4. ' def' → logprob: -5.831119060516357
    5. '' → logprob: -6.831119060516357
    6. '\' → logprob: -7.081119060516357
    7. '```' → logprob: -7.206119060516357
    8. '
' → logprob: -7.331119060516357
    9. '\n' → logprob: -7.456119060516357
    10. ' 
' → logprob: -7.956119060516357

Token 91: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035173986107110977
    2. '
' → logprob: -6.3785176277160645
    3. 'd' → logprob: -6.5035176277160645
    4. '

' → logprob: -8.753517150878906
    5. '\' → logprob: -9.503517150878906
    6. '```' → logprob: -9.503517150878906
    7. ' def' → logprob: -13.003517150878906
    8. 'de' → logprob: -13.753517150878906
    9. '#' → logprob: -13.878517150878906
    10. '\n' → logprob: -14.378517150878906

Token 92: ' decrement' (ID: 121877)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.3291956186294556
    2. ' factorial' → logprob: -1.4541956186294556
    3. 'per' → logprob: -1.7041956186294556
    4. 'factor' → logprob: -2.704195499420166
    5. ' permutation' → logprob: -2.704195499420166
    6. ' perm' → logprob: -3.454195499420166
    7. 'rank' → logprob: -3.829195499420166
    8. 'perm' → logprob: -3.829195499420166
    9. 'get' → logprob: -4.079195499420166
    10. ' rank' → logprob: -4.454195499420166

Token 93: '_n' (ID: 2170)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.7409720420837402
    2. '_' → logprob: -1.9909720420837402
    3. '_counter' → logprob: -2.4909720420837402
    4. '_list' → logprob: -2.9909720420837402
    5. '(' → logprob: -2.9909720420837402
    6. '_factor' → logprob: -3.7409720420837402
    7. '_array' → logprob: -3.8659720420837402
    8. '_position' → logprob: -3.8659720420837402
    9. '_sequence' → logprob: -3.9909720420837402
    10. '_perm' → logprob: -4.11597204208374

Token 94: '_for' (ID: 11903)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6863792538642883
    2. 'ext' → logprob: -1.5613791942596436
    3. '(n' → logprob: -1.6863791942596436
    4. 'um' → logprob: -3.3113791942596436
    5. '(a' → logprob: -3.8113791942596436
    6. '_' → logprob: -4.436379432678223
    7. '()' → logprob: -4.936379432678223
    8. 'umber' → logprob: -5.186379432678223
    9. 'a' → logprob: -5.311379432678223
    10. 'ame' → logprob: -6.311379432678223

Token 95: '_less' (ID: 154196)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.9901376366615295
    2. '_per' → logprob: -1.6151375770568848
    3. '_' → logprob: -2.1151375770568848
    4. '_one' → logprob: -3.4901375770568848
    5. ' factorial' → logprob: -3.7401375770568848
    6. '_perm' → logprob: -4.115137577056885
    7. 'factor' → logprob: -4.365137577056885
    8. '_index' → logprob: -4.490137577056885
    9. '_p' → logprob: -4.490137577056885
    10. '_sequence' → logprob: -4.615137577056885

Token 96: 'ers' (ID: 409)
  Prédit: '_than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_than' → logprob: -0.6999804973602295
    2. '(n' → logprob: -2.1999804973602295
    3. '_one' → logprob: -2.3249804973602295
    4. 'er' → logprob: -2.6999804973602295
    5. 'one' → logprob: -2.6999804973602295
    6. '1' → logprob: -2.8249804973602295
    7. 'ons' → logprob: -3.6999804973602295
    8. '_' → logprob: -4.199980735778809
    9. '(' → logprob: -4.699980735778809
    10. '(p' → logprob: -4.949980735778809

Token 97: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2853747010231018
    2. '_than' → logprob: -1.910374641418457
    3. '(n' → logprob: -2.785374641418457
    4. '_elements' → logprob: -4.285374641418457
    5. '_less' → logprob: -5.535374641418457
    6. '_' → logprob: -5.535374641418457
    7. '_equal' → logprob: -6.410374641418457
    8. '(nums' → logprob: -6.410374641418457
    9. '(num' → logprob: -7.160374641418457
    10. '(p' → logprob: -7.160374641418457

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05922224000096321
    2. '):' → logprob: -2.9342222213745117
    3. ' ,' → logprob: -5.934222221374512
    4. ')' → logprob: -7.809222221374512
    5. ',index' → logprob: -8.684222221374512
    6. ',i' → logprob: -8.809222221374512
    7. ',n' → logprob: -9.059222221374512
    8. '(' → logprob: -9.309222221374512
    9. '(seq' → logprob: -9.434222221374512
    10. '[' → logprob: -9.684222221374512

Token 99: ' cur' (ID: 4396)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2089123725891113
    2. ' n' → logprob: -1.4589123725891113
    3. ' val' → logprob: -1.5839123725891113
    4. ' idx' → logprob: -2.7089123725891113
    5. ' value' → logprob: -3.3339123725891113
    6. ' index' → logprob: -3.4589123725891113
    7. ' seq' → logprob: -3.8339123725891113
    8. ' pos' → logprob: -3.8339123725891113
    9. 'x' → logprob: -4.208912372589111
    10. ' target' → logprob: -4.333912372589111

Token 100: '_val' (ID: 13694)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.506320059299469
    2. '_idx' → logprob: -2.006319999694824
    3. 'uent' → logprob: -2.881319999694824
    4. 'u' → logprob: -2.881319999694824
    5. '_index' → logprob: -3.131319999694824
    6. '):' → logprob: -3.506319999694824
    7. 'e' → logprob: -4.006319999694824
    8. ',' → logprob: -4.506319999694824
    9. '[' → logprob: -4.631319999694824
    10. 'ue' → logprob: -4.631319999694824

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001547002699226141
    2. '):' → logprob: -6.876546859741211
    3. ' ,' → logprob: -7.751546859741211
    4. 's' → logprob: -10.626546859741211
    5. 'u' → logprob: -11.376546859741211
    6. ',u' → logprob: -11.376546859741211
    7. ',index' → logprob: -12.001546859741211
    8. ',n' → logprob: -12.251546859741211
    9. ',i' → logprob: -12.501546859741211
    10. 'e' → logprob: -12.751546859741211

Token 102: ' up' (ID: 869)
  Prédit: ' cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cur' → logprob: -1.5624358654022217
    2. ' n' → logprob: -1.6874358654022217
    3. ' index' → logprob: -2.0624358654022217
    4. ' idx' → logprob: -2.0624358654022217
    5. ' pos' → logprob: -2.1874358654022217
    6. ' val' → logprob: -2.3124358654022217
    7. ' prev' → logprob: -4.062436103820801
    8. ' start' → logprob: -4.062436103820801
    9. ' seq' → logprob: -4.187436103820801
    10. ' counts' → logprob: -4.812436103820801

Token 103: '_to' (ID: 5089)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4509572982788086
    2. 'er' → logprob: -1.4509572982788086
    3. '_to' → logprob: -2.7009572982788086
    4. 'per' → logprob: -3.2009572982788086
    5. 't' → logprob: -5.450957298278809
    6. 'erto' → logprob: -5.450957298278809
    7. ')' → logprob: -5.700957298278809
    8. 'date' → logprob: -6.700957298278809
    9. '):' → logprob: -7.075957298278809
    10. '=' → logprob: -7.700957298278809

Token 104: '_index' (ID: 7748)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12531663477420807
    2. '=' → logprob: -3.125316619873047
    3. '_idx' → logprob: -3.625316619873047
    4. '_index' → logprob: -4.125316619873047
    5. ')' → logprob: -4.125316619873047
    6. ',' → logprob: -5.125316619873047
    7. '_i' → logprob: -6.250316619873047
    8. '):
' → logprob: -6.375316619873047
    9. ' ):' → logprob: -6.625316619873047
    10. '_' → logprob: -6.750316619873047

Token 105: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6338667869567871
    2. ',' → logprob: -0.7588667869567871
    3. ')' → logprob: -7.258866786956787
    4. ' ,' → logprob: -8.383867263793945
    5. ' ):' → logprob: -9.008867263793945
    6. '):
' → logprob: -9.133867263793945
    7. ':' → logprob: -10.508867263793945
    8. '   ' → logprob: -11.383867263793945
    9. '=' → logprob: -11.383867263793945
    10. ' ' → logprob: -11.758867263793945

Token 106: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.664282500743866
    2. '   ' → logprob: -0.789282500743866
    3. ' :' → logprob: -4.289282321929932
    4. '):' → logprob: -4.789282321929932
    5. '(' → logprob: -5.789282321929932
    6. ' ' → logprob: -6.664282321929932
    7. ':
' → logprob: -7.039282321929932
    8. '(n' → logprob: -7.289282321929932
    9. ')' → logprob: -7.289282321929932
    10. '       ' → logprob: -7.664282321929932

Token 107: ' count' (ID: 3605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5286205410957336
    2. '   ' → logprob: -1.4036204814910889
    3. 'for' → logprob: -1.9036204814910889
    4. 'count' (adapté à ' count') → logprob: -4.653620719909668
    5. ' count' → logprob: -5.153620719909668
    6. ' i' → logprob: -9.653620719909668
    7. '    
' → logprob: -10.028620719909668
    8. '
' → logprob: -10.153620719909668
    9. 'result' → logprob: -10.153620719909668
    10. 'cnt' → logprob: -10.153620719909668

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10046017169952393
    2. '=' → logprob: -2.3504600524902344
    3. '_' → logprob: -8.350460052490234
    4. '   ' → logprob: -12.100460052490234
    5. '  ' → logprob: -12.475460052490234
    6. ' ' → logprob: -12.850460052490234
    7. '_=' → logprob: -13.225460052490234
    8. '    ' → logprob: -13.725460052490234
    9. ')' → logprob: -14.600460052490234
    10. '```' → logprob: -14.975460052490234

Token 109: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043074894696474075
    2. ' ' → logprob: -3.1680748462677
    3. ' sum' → logprob: -9.918074607849121
    4. '   ' → logprob: -11.418074607849121
    5. 'sum' → logprob: -11.793074607849121
    6. 'cur' → logprob: -12.543074607849121
    7. ' cur' → logprob: -13.168074607849121
    8. ' seq' → logprob: -14.543074607849121
    9. '  ' → logprob: -15.168074607849121
    10. '[' → logprob: -15.418074607849121

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009856504620984197
    2. 'sum' → logprob: -7.125985622406006
    3. 'cur' → logprob: -9.125986099243164
    4. ' ' → logprob: -9.750986099243164
    5. ' sum' → logprob: -12.000986099243164
    6. 'len' → logprob: -12.750986099243164
    7. '[' → logprob: -13.250986099243164
    8. '   ' → logprob: -13.500986099243164
    9. '1' → logprob: -14.938486099243164
    10. ' cur' → logprob: -15.313486099243164

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26566261053085327
    2. '<|end|>' → logprob: -1.890662670135498
    3. 'for' → logprob: -3.390662670135498
    4. '   ' → logprob: -3.640662670135498
    5. ' ' → logprob: -4.015662670135498
    6. '	for' → logprob: -6.640662670135498
    7. '<|end|>' → logprob: -6.765662670135498
    8. ')' → logprob: -7.515662670135498
    9. '  ' → logprob: -8.14066219329834
    10. '
' → logprob: -8.26566219329834

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20481233298778534
    2. 'for' (adapté à ' for') → logprob: -1.8298122882843018
    3. '   ' → logprob: -3.7048122882843018
    4. '	for' → logprob: -9.204812049865723
    5. ' ' → logprob: -10.454812049865723
    6. '  ' → logprob: -11.954812049865723
    7. '    ' → logprob: -12.454812049865723
    8. ' range' → logprob: -13.204812049865723
    9. '<|end|>' → logprob: -13.204812049865723
    10. 'range' → logprob: -13.204812049865723

Token 114: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0316326729953289
    2. 'i' → logprob: -3.531632661819458
    3. ' j' → logprob: -6.781632900238037
    4. ' idx' → logprob: -7.531632900238037
    5. 'j' → logprob: -9.281632423400879
    6. ' ' → logprob: -9.906632423400879
    7. 'idx' → logprob: -10.781632423400879
    8. ' _' → logprob: -11.531632423400879
    9. ' index' → logprob: -11.656632423400879
    10. ' in' → logprob: -12.156632423400879

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022567142732441425
    2. 'in' → logprob: -6.127256870269775
    3. ' ' → logprob: -9.752256393432617
    4. '	in' → logprob: -12.377256393432617
    5. '<|end|>' → logprob: -13.002256393432617
    6. '  ' → logprob: -13.502256393432617
    7. '    ' → logprob: -13.627256393432617
    8. '   ' → logprob: -13.627256393432617
    9. 'range' → logprob: -14.627256393432617
    10. '```' → logprob: -15.002256393432617

Token 116: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004630672745406628
    2. 'range' → logprob: -5.3796305656433105
    3. ' ' → logprob: -12.504631042480469
    4. '	range' → logprob: -12.629631042480469
    5. '(range' → logprob: -13.879631042480469
    6. '   ' → logprob: -14.004631042480469
    7. ' xrange' → logprob: -14.004631042480469
    8. ' in' → logprob: -15.129631042480469
    9. '  ' → logprob: -15.129631042480469
    10. '```' → logprob: -16.87963104248047

Token 117: '(up' (ID: 72138)
  Prédit: '(up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(up' → logprob: -0.00011248346709180623
    2. '(' → logprob: -9.625112533569336
    3. ' (' → logprob: -10.125112533569336
    4. 'up' → logprob: -12.500112533569336
    5. ' up' → logprob: -13.000112533569336
    6. '	up' → logprob: -15.500112533569336
    7. ' ' → logprob: -17.000112533569336
    8. '(u' → logprob: -17.750112533569336
    9. '/up' → logprob: -17.750112533569336
    10. '(
' → logprob: -17.875112533569336

Token 118: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.011617712676525116
    2. '_up' → logprob: -4.511617660522461
    3. 'p' → logprob: -8.261617660522461
    4. 'to' → logprob: -9.261617660522461
    5. '   ' → logprob: -10.136617660522461
    6. 'o' → logprob: -10.636617660522461
    7. '_u' → logprob: -10.761617660522461
    8. '_for' → logprob: -10.886617660522461
    9. 'pto' → logprob: -10.886617660522461
    10. '_' → logprob: -11.011617660522461

Token 119: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0006911090458743274
    2. '_' → logprob: -8.000691413879395
    3. '_i' → logprob: -9.250691413879395
    4. 'index' → logprob: -9.375691413879395
    5. 'nd' → logprob: -10.875691413879395
    6. 'n' → logprob: -11.125691413879395
    7. '+' → logprob: -11.250691413879395
    8. '```' → logprob: -11.500691413879395
    9. '_val' → logprob: -11.750691413879395
    10. '_n' → logprob: -11.750691413879395

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018437055870890617
    2. '):
' → logprob: -4.018436908721924
    3. ' ):' → logprob: -8.393437385559082
    4. '+' → logprob: -11.018437385559082
    5. '   ' → logprob: -11.393437385559082
    6. ',' → logprob: -11.518437385559082
    7. ')' → logprob: -11.768437385559082
    8. '):
' → logprob: -12.393437385559082
    9. ' ):
' → logprob: -12.393437385559082
    10. '):

' → logprob: -13.518437385559082

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008358067832887173
    2. '<|end|>' → logprob: -5.008358001708984
    3. ' if' → logprob: -6.758358001708984
    4. 'if' → logprob: -8.883358001708984
    5. '   ' → logprob: -9.383358001708984
    6. ' ' → logprob: -9.508358001708984
    7. '<|end|>' → logprob: -9.508358001708984
    8. '    ' → logprob: -11.133358001708984
    9. '        ' → logprob: -11.383358001708984
    10. '        
' → logprob: -11.758358001708984

Token 122: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8130108118057251
    2. ' if' → logprob: -0.8130108118057251
    3. 'if' (adapté à ' if') → logprob: -2.1880106925964355
    4. '<|end|>' → logprob: -7.6880106925964355
    5. ' ' → logprob: -8.938011169433594
    6. '   ' → logprob: -9.188011169433594
    7. '[' → logprob: -10.688011169433594
    8. '    ' → logprob: -11.063011169433594
    9. '
' → logprob: -11.563011169433594
    10. '<|end|>' → logprob: -11.688011169433594

Token 123: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.3485877811908722
    2. 'seq' → logprob: -1.2235877513885498
    3. '(seq' → logprob: -9.098587989807129
    4. '   ' → logprob: -10.848587989807129
    5. ' sequence' → logprob: -12.348587989807129
    6. 'sequence' → logprob: -13.348587989807129
    7. ' sequ' → logprob: -13.598587989807129
    8. ' ' → logprob: -13.598587989807129
    9. '.seq' → logprob: -14.223587989807129
    10. '_seq' → logprob: -14.348587989807129

Token 124: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -11.250020027160645
    3. 'j' → logprob: -12.125020027160645
    4. ' [' → logprob: -14.250020027160645
    5. '[i' → logprob: -15.125020027160645
    6. '```' → logprob: -16.125019073486328
    7. '_j' → logprob: -16.250019073486328
    8. ' j' → logprob: -16.375019073486328
    9. '[
' → logprob: -17.250019073486328
    10. '   ' → logprob: -17.250019073486328

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45650559663772583
    2. ' <' → logprob: -1.706505537033081
    3. ' >' → logprob: -2.331505537033081
    4. '>' → logprob: -3.206505537033081
    5. ' ]' → logprob: -3.581505537033081
    6. '<' → logprob: -4.83150577545166
    7. ')' → logprob: -4.95650577545166
    8. ' ' → logprob: -6.20650577545166
    9. ']>' → logprob: -6.83150577545166
    10. ' )' → logprob: -7.33150577545166

Token 126: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14134258031845093
    2. '<' → logprob: -2.1413426399230957
    3. ' >' → logprob: -4.516342639923096
    4. '>' → logprob: -6.266342639923096
    5. ' ' → logprob: -6.641342639923096
    6. '[' → logprob: -9.516342163085938
    7. ' ==' → logprob: -9.766342163085938
    8. ')' → logprob: -11.766342163085938
    9. '==' → logprob: -12.266342163085938
    10. '<int' → logprob: -12.391342163085938

Token 127: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.31326720118522644
    2. ' cur' → logprob: -1.3132672309875488
    3. '[cur' → logprob: -13.06326675415039
    4. '	cur' → logprob: -13.43826675415039
    5. '(cur' → logprob: -13.68826675415039
    6. '_cur' → logprob: -15.31326675415039
    7. ' ' → logprob: -15.56326675415039
    8. 'c' → logprob: -16.43826675415039
    9. '.cur' → logprob: -16.56326675415039
    10. '-cur' → logprob: -17.06326675415039

Token 128: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.5332478142227046e-05
    2. '_' → logprob: -11.125015258789062
    3. ' _' → logprob: -15.125015258789062
    4. 'val' → logprob: -16.375015258789062
    5. '_va' → logprob: -16.500015258789062
    6. '_v' → logprob: -17.000015258789062
    7. '_VAL' → logprob: -17.125015258789062
    8. 'Val' → logprob: -18.125015258789062
    9. '```' → logprob: -18.125015258789062
    10. '_)' → logprob: -19.125015258789062

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1611032336950302
    2. ':
' → logprob: -1.9111032485961914
    3. '       ' → logprob: -8.036103248596191
    4. ' and' → logprob: -8.036103248596191
    5. '):' → logprob: -9.786103248596191
    6. '):
' → logprob: -9.786103248596191
    7. 'and' → logprob: -10.161103248596191
    8. ' :
' → logprob: -10.786103248596191
    9. ' :' → logprob: -10.911103248596191
    10. '   ' → logprob: -11.536103248596191

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25600048899650574
    2. '       ' → logprob: -1.5060005187988281
    3. ':
' → logprob: -6.631000518798828
    4. '
' → logprob: -7.256000518798828
    5. '               ' → logprob: -7.256000518798828
    6. ':' → logprob: -7.631000518798828
    7. ',' → logprob: -8.131000518798828
    8. '   ' → logprob: -8.756000518798828
    9. 'count' → logprob: -9.381000518798828
    10. '	       ' → logprob: -9.506000518798828

Token 131: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.693831205368042
    2. 'count' (adapté à ' count') → logprob: -0.693831205368042
    3. '
' → logprob: -8.693831443786621
    4. '       ' → logprob: -8.693831443786621
    5. '    ' → logprob: -9.318831443786621
    6. '	count' → logprob: -9.693831443786621
    7. '               ' → logprob: -9.943831443786621
    8. '   ' → logprob: -10.068831443786621
    9. '           ' → logprob: -10.068831443786621
    10. '.count' → logprob: -11.068831443786621

Token 132: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023275645449757576
    2. '+=' → logprob: -3.77327561378479
    3. '<|end|>' → logprob: -10.648275375366211
    4. '+' → logprob: -12.398275375366211
    5. '=' → logprob: -14.273275375366211
    6. ' ' → logprob: -14.648275375366211
    7. ' =' → logprob: -15.148275375366211
    8. ']+=' → logprob: -15.273275375366211
    9. ' +' → logprob: -16.02327537536621
    10. '    ' → logprob: -16.14827537536621

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -18.12506675720215
    4. '   ' → logprob: -19.25006675720215
    5. '```' → logprob: -19.87506675720215
    6. ' ' → logprob: -20.25006675720215
    7. '
' → logprob: -20.25006675720215
    8. '۱' → logprob: -21.00006675720215
    9. '  ' → logprob: -21.37506675720215
    10. '[' → logprob: -21.50006675720215

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '<|end|>' → logprob: -17.25
    4. '```' → logprob: -19.875
    5. '   ' → logprob: -21.0
    6. '-' → logprob: -21.125
    7. '[' → logprob: -21.25
    8. '
' → logprob: -21.25
    9. 'def' → logprob: -21.375
    10. ')' → logprob: -21.625

Token 135: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4552832245826721
    2. '
' → logprob: -1.2052831649780273
    3. '<|end|>' → logprob: -2.9552831649780273
    4. '	return' → logprob: -4.580283164978027
    5. '<|end|>' → logprob: -7.205283164978027
    6. '    
' → logprob: -7.205283164978027
    7. ' return' → logprob: -7.455283164978027
    8. 'return' → logprob: -7.580283164978027
    9. ' 
' → logprob: -8.205283164978027
    10. '  
' → logprob: -8.705283164978027

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002884521847590804
    2. 'return' → logprob: -6.752884387969971
    3. ' return' → logprob: -7.127884387969971
    4. '	return' → logprob: -8.127884864807129
    5. '
' → logprob: -8.252884864807129
    6. '<|end|>' → logprob: -9.127884864807129
    7. ' ' → logprob: -9.502884864807129
    8. '       ' → logprob: -9.877884864807129
    9. 'count' → logprob: -10.627884864807129
    10. '    
' → logprob: -10.877884864807129

Token 137: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4659701883792877
    2. 'return' (adapté à ' return') → logprob: -1.0909701585769653
    3. '   ' → logprob: -3.340970277786255
    4. '	return' → logprob: -7.090970039367676
    5. '
' → logprob: -9.215970039367676
    6. ' ' → logprob: -9.590970039367676
    7. 'count' → logprob: -10.090970039367676
    8. ':return' → logprob: -10.465970039367676
    9. 'eturn' → logprob: -10.840970039367676
    10. ' 
' → logprob: -10.965970039367676

Token 138: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0019287518225610256
    2. ' count' → logprob: -6.251928806304932
    3. '(count' → logprob: -16.501928329467773
    4. '	count' → logprob: -18.626928329467773
    5. '[count' → logprob: -19.251928329467773
    6. '<count' → logprob: -20.876928329467773
    7. ' ' → logprob: -21.001928329467773
    8. '=count' → logprob: -21.126928329467773
    9. '$count' → logprob: -21.876928329467773
    10. '_count' → logprob: -23.001928329467773

Token 139: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019457407295703888
    2. '

' → logprob: -4.2694573402404785
    3. '
' → logprob: -5.6444573402404785
    4. ' def' → logprob: -6.5194573402404785
    5. '<|end|>' → logprob: -9.644457817077637
    6. '*' → logprob: -10.644457817077637
    7. ' 

' → logprob: -10.769457817077637
    8. '_

' → logprob: -11.019457817077637
    9. '```' → logprob: -11.144457817077637
    10. '_def' → logprob: -11.269457817077637

Token 140: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00012844942102674395
    2. '

' → logprob: -9.125128746032715
    3. ' def' → logprob: -11.750128746032715
    4. '
' → logprob: -12.875128746032715
    5. '<|end|>' → logprob: -13.500128746032715
    6. '#' → logprob: -14.000128746032715
    7. 'import' → logprob: -14.000128746032715
    8. '```' → logprob: -14.125128746032715
    9. '0' → logprob: -14.250128746032715
    10. '\' → logprob: -14.750128746032715

Token 141: ' term' (ID: 2914)
  Prédit: ' permutation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutation' → logprob: -0.8259744644165039
    2. ' calculate' → logprob: -2.450974464416504
    3. ' lex' → logprob: -2.450974464416504
    4. ' get' → logprob: -2.950974464416504
    5. ' calc' → logprob: -2.950974464416504
    6. ' factorial' → logprob: -3.075974464416504
    7. ' find' → logprob: -3.325974464416504
    8. 'per' → logprob: -3.325974464416504
    9. ' rank' → logprob: -3.325974464416504
    10. ' perm' → logprob: -3.700974464416504

Token 142: '_for' (ID: 11903)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5103129148483276
    2. '_factor' → logprob: -2.010313034057617
    3. '(' → logprob: -2.510313034057617
    4. '(_' → logprob: -3.385313034057617
    5. 'inal' → logprob: -3.510313034057617
    6. 's' → logprob: -3.760313034057617
    7. '_frequency' → logprob: -4.135313034057617
    8. '_index' → logprob: -4.260313034057617
    9. '_to' → logprob: -4.260313034057617
    10. '_rank' → logprob: -4.385313034057617

Token 143: '_position' (ID: 23739)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.8717342615127563
    2. '_factor' → logprob: -1.3717342615127563
    3. '_index' → logprob: -2.496734142303467
    4. '_perm' → logprob: -2.746734142303467
    5. '_position' → logprob: -2.996734142303467
    6. '_seq' → logprob: -3.871734142303467
    7. '_sequence' → logprob: -3.996734142303467
    8. '_k' → logprob: -4.496734142303467
    9. '_element' → logprob: -4.621734142303467
    10. '_' → logprob: -4.621734142303467

Token 144: '(val' (ID: 17391)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.5928099155426025
    2. '(' → logprob: -0.9678099155426025
    3. ' (' → logprob: -3.4678099155426025
    4. '(n' → logprob: -3.5928099155426025
    5. '(sequence' → logprob: -4.842809677124023
    6. '(s' → logprob: -8.592809677124023
    7. '(p' → logprob: -8.592809677124023
    8. '(pos' → logprob: -9.967809677124023
    9. '(prev' → logprob: -10.217809677124023
    10. '(num' → logprob: -10.467809677124023

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013629183173179626
    2. ' ,' → logprob: -4.388628959655762
    3. '):' → logprob: -7.138628959655762
    4. ',n' → logprob: -9.513628959655762
    5. ')' → logprob: -9.638628959655762
    6. '   ' → logprob: -10.638628959655762
    7. 's' → logprob: -10.763628959655762
    8. '_,' → logprob: -10.763628959655762
    9. ',index' → logprob: -10.888628959655762
    10. ',val' → logprob: -10.888628959655762

Token 146: ' less' (ID: 3760)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.05449560284614563
    2. 'seq' → logprob: -4.179495811462402
    3. ' index' → logprob: -4.304495811462402
    4. ' pos' → logprob: -4.429495811462402
    5. ' idx' → logprob: -6.054495811462402
    6. ' sequence' → logprob: -6.429495811462402
    7. ' up' → logprob: -6.679495811462402
    8. ' n' → logprob: -6.679495811462402
    9. ' p' → logprob: -6.929495811462402
    10. ' facts' → logprob: -6.929495811462402

Token 147: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.01010960340499878
    2. 'er' → logprob: -4.7601094245910645
    3. '_than' → logprob: -7.1351094245910645
    4. '_' → logprob: -9.135109901428223
    5. '```' → logprob: -9.135109901428223
    6. 'ors' → logprob: -9.510109901428223
    7. '_count' → logprob: -9.947609901428223
    8. 's' → logprob: -10.385109901428223
    9. ')' → logprob: -10.510109901428223
    10. ' ers' → logprob: -10.510109901428223

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0039501674473285675
    2. ')' → logprob: -6.628950119018555
    3. ' ,' → logprob: -6.878950119018555
    4. '):' → logprob: -7.253950119018555
    5. '_,' → logprob: -8.503950119018555
    6. ',val' → logprob: -9.253950119018555
    7. ',count' → logprob: -9.503950119018555
    8. '_count' → logprob: -9.628950119018555
    9. '_seq' → logprob: -9.878950119018555
    10. '(seq' → logprob: -10.003950119018555

Token 149: ' remaining' (ID: 15448)
  Prédit: ' facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' facts' → logprob: -0.23730681836605072
    2. 'facts' → logprob: -1.612306833267212
    3. ' fact' → logprob: -5.362306594848633
    4. ' factorial' → logprob: -6.112306594848633
    5. 'fact' → logprob: -6.612306594848633
    6. ' n' → logprob: -6.612306594848633
    7. 'n' → logprob: -6.612306594848633
    8. 'factor' → logprob: -7.737306594848633
    9. ' factor' → logprob: -9.237306594848633
    10. 'f' → logprob: -9.862306594848633

Token 150: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02077123522758484
    2. '_factor' → logprob: -4.770771026611328
    3. ')' → logprob: -5.770771026611328
    4. ' ):' → logprob: -6.020771026611328
    5. ',' → logprob: -6.145771026611328
    6. '):
' → logprob: -6.270771026611328
    7. 's' → logprob: -6.895771026611328
    8. ':' → logprob: -8.020771026611328
    9. '_count' → logprob: -8.645771026611328
    10. '_n' → logprob: -9.020771026611328

Token 151: ' facts' (ID: 19719)
  Prédit: ' facts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facts' → logprob: -0.3879242539405823
    2. 'facts' → logprob: -1.2629241943359375
    3. ' factorial' → logprob: -3.5129241943359375
    4. ' fact' → logprob: -5.7629241943359375
    5. 'factor' → logprob: -5.8879241943359375
    6. 'fact' → logprob: -6.2629241943359375
    7. ' factor' → logprob: -8.012924194335938
    8. 'f' → logprob: -8.762924194335938
    9. ' ' → logprob: -8.887924194335938
    10. ' factors' → logprob: -9.700424194335938

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01935182325541973
    2. ',' → logprob: -4.644351959228516
    3. '[' → logprob: -5.019351959228516
    4. ')' → logprob: -6.269351959228516
    5. '):
' → logprob: -7.269351959228516
    6. ' ):' → logprob: -8.894351959228516
    7. '<|end|>' → logprob: -10.269351959228516
    8. '):
' → logprob: -10.394351959228516
    9. '   ' → logprob: -10.519351959228516
    10. '[]):' → logprob: -11.019351959228516

Token 153: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8669176697731018
    2. ':' → logprob: -1.366917610168457
    3. '   ' → logprob: -2.366917610168457
    4. '):' → logprob: -2.366917610168457
    5. '<|end|>' → logprob: -2.616917610168457
    6. '(' → logprob: -4.241917610168457
    7. '<|end|>' → logprob: -4.991917610168457
    8. '(n' → logprob: -5.241917610168457
    9. ')' → logprob: -5.241917610168457
    10. ',' → logprob: -5.491917610168457

Token 154: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19380202889442444
    2. '   ' → logprob: -2.3188021183013916
    3. ' return' → logprob: -2.5688021183013916
    4. '[' → logprob: -8.318801879882812
    5. '    ' → logprob: -8.943801879882812
    6. 'val' → logprob: -9.068801879882812
    7. 'less' → logprob: -9.443801879882812
    8. 'facts' → logprob: -9.443801879882812
    9. '=' → logprob: -9.943801879882812
    10. ')' → logprob: -10.193801879882812

Token 155: ' (' (ID: 350)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.08057436347007751
    2. ' less' → logprob: -2.5805742740631104
    3. 'facts' → logprob: -7.3305745124816895
    4. 'val' → logprob: -7.5805745124816895
    5. ' val' → logprob: -8.205574035644531
    6. ' facts' → logprob: -9.455574035644531
    7. '   ' → logprob: -10.205574035644531
    8. '(' → logprob: -10.455574035644531
    9. 'fact' → logprob: -10.705574035644531
    10. ' lesser' → logprob: -11.205574035644531

Token 156: 'val' (ID: 1105)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.028812546283006668
    2. 'facts' → logprob: -3.7788126468658447
    3. 'val' → logprob: -5.528812408447266
    4. ' less' → logprob: -7.153812408447266
    5. 'remaining' → logprob: -8.153812408447266
    6. 'fact' → logprob: -9.653812408447266
    7. ' facts' → logprob: -9.653812408447266
    8. '(' → logprob: -9.653812408447266
    9. ' val' → logprob: -9.653812408447266
    10. 'vals' → logprob: -9.778812408447266

Token 157: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2563263773918152
    2. '-' → logprob: -1.50632643699646
    3. ')' → logprob: -5.631326198577881
    4. ' ' → logprob: -7.756326198577881
    5. '-)' → logprob: -9.631326675415039
    6. ' )' → logprob: -10.131326675415039
    7. '   ' → logprob: -10.506326675415039
    8. '[' → logprob: -10.631326675415039
    9. 's' → logprob: -10.818826675415039
    10. '*' → logprob: -10.881326675415039

Token 158: ' ' (ID: 220)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.031705550849437714
    2. '1' → logprob: -3.781705617904663
    3. ' less' → logprob: -4.781705379486084
    4. ' ' → logprob: -10.531705856323242
    5. '_less' → logprob: -11.906705856323242
    6. '-less' → logprob: -12.906705856323242
    7. '   ' → logprob: -14.031705856323242
    8. ')' → logprob: -14.156705856323242
    9. 'len' → logprob: -14.406705856323242
    10. 'lessness' → logprob: -14.531705856323242

Token 159: '1' (ID: 16)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.10090340673923492
    2. '1' → logprob: -2.3509035110473633
    3. ' less' → logprob: -7.600903511047363
    4. ' ' → logprob: -8.975903511047363
    5. 'len' → logprob: -11.163403511047363
    6. 'remaining' → logprob: -11.350903511047363
    7. ')' → logprob: -11.975903511047363
    8. '-less' → logprob: -12.475903511047363
    9. '   ' → logprob: -12.725903511047363
    10. '(' → logprob: -12.725903511047363

Token 160: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15949253737926483
    2. ')' → logprob: -2.2844924926757812
    3. '-' → logprob: -3.2844924926757812
    4. ' )' → logprob: -6.284492492675781
    5. ' *' → logprob: -6.409492492675781
    6. '<|end|>' → logprob: -6.409492492675781
    7. '*' → logprob: -6.909492492675781
    8. ')*' → logprob: -7.409492492675781
    9. ' ' → logprob: -8.034492492675781
    10. ' +' → logprob: -8.284492492675781

Token 161: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.005272772628813982
    2. ' less' → logprob: -5.25527286529541
    3. '_less' → logprob: -10.88027286529541
    4. '<|end|>' → logprob: -11.13027286529541
    5. '-less' → logprob: -12.63027286529541
    6. ')' → logprob: -14.88027286529541
    7. ' menos' → logprob: -15.00527286529541
    8. ' lesser' → logprob: -15.13027286529541
    9. 'eless' → logprob: -15.25527286529541
    10. '.less' → logprob: -15.88027286529541

Token 162: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: 0.0
    2. 'ersi' → logprob: -17.875
    3. '<|end|>' → logprob: -19.5
    4. 'sers' → logprob: -19.625
    5. 'er' → logprob: -20.125
    6. 'erse' → logprob: -20.375
    7. 'ersu' → logprob: -20.5
    8. 'ors' → logprob: -20.5
    9. ' ers' → logprob: -20.625
    10. 'ersa' → logprob: -21.375

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04878368601202965
    2. ' )' → logprob: -3.048783779144287
    3. ')*' → logprob: -9.423783302307129
    4. ' ' → logprob: -9.923783302307129
    5. ' *' → logprob: -10.798783302307129
    6. '*' → logprob: -10.798783302307129
    7. '   ' → logprob: -11.673783302307129
    8. '*)' → logprob: -12.798783302307129
    9. ']' → logprob: -13.298783302307129
    10. '`)' → logprob: -13.423783302307129

Token 164: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026439284905791283
    2. '*' → logprob: -3.6514391899108887
    3. ' ' → logprob: -9.276439666748047
    4. ')' → logprob: -10.901439666748047
    5. ' ' → logprob: -11.776439666748047
    6. ' *
' → logprob: -12.151439666748047
    7. '   ' → logprob: -12.901439666748047
    8. '`' → logprob: -13.526439666748047
    9. '**' → logprob: -14.026439666748047
    10. ' **' → logprob: -14.026439666748047

Token 165: ' facts' (ID: 19719)
  Prédit: 'facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'facts' → logprob: -0.038140181452035904
    2. ' facts' → logprob: -3.288140296936035
    3. 'fact' → logprob: -9.288140296936035
    4. 'f' → logprob: -13.038140296936035
    5. ' fact' → logprob: -13.288140296936035
    6. 'Facts' → logprob: -13.663140296936035
    7. '
' → logprob: -15.413140296936035
    8. ' ' → logprob: -15.788140296936035
    9. ' factorial' → logprob: -15.788140296936035
    10. 'factor' → logprob: -16.16313934326172

Token 166: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7385154428193346e-05
    2. 'remaining' → logprob: -10.62503719329834
    3. '[
' → logprob: -11.87503719329834
    4. '[len' → logprob: -12.62503719329834
    5. ' remaining' → logprob: -14.12503719329834
    6. '[size' → logprob: -15.62503719329834
    7. '_remaining' → logprob: -15.62503719329834
    8. '```' → logprob: -15.62503719329834
    9. '[length' → logprob: -15.75003719329834
    10. ' [' → logprob: -15.75003719329834

Token 167: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -9.77022064034827e-05
    2. ' remaining' → logprob: -9.500097274780273
    3. '[' → logprob: -10.750097274780273
    4. 'rem' → logprob: -15.125097274780273
    5. '   ' → logprob: -15.250097274780273
    6. '
' → logprob: -15.500097274780273
    7. '_remaining' → logprob: -15.625097274780273
    8. '.remaining' → logprob: -15.750097274780273
    9. '{' → logprob: -16.625097274780273
    10. ']' → logprob: -17.000097274780273

Token 168: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010902655776590109
    2. ' )' → logprob: -10.12510871887207
    3. '<|end|>' → logprob: -11.25010871887207
    4. '[' → logprob: -11.37510871887207
    5. ')
' → logprob: -11.62510871887207
    6. '-' → logprob: -11.87510871887207
    7. '   ' → logprob: -12.37510871887207
    8. ']' → logprob: -12.50010871887207
    9. '`)' → logprob: -12.62510871887207
    10. '})' → logprob: -13.00010871887207

Token 169: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7477751970291138
    2. '(' → logprob: -1.1227751970291138
    3. '<|end|>' → logprob: -1.7477751970291138
    4. '(
' → logprob: -4.122775077819824
    5. ')' → logprob: -5.997775077819824
    6. 'def' → logprob: -6.622775077819824
    7. '```' → logprob: -6.872775077819824
    8. '\n' → logprob: -6.997775077819824
    9. '(n' → logprob: -7.122775077819824
    10. '[' → logprob: -7.122775077819824

Token 170: ' sequence' (ID: 16281)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6758733987808228
    2. 'def' → logprob: -2.175873279571533
    3. ' get' → logprob: -2.425873279571533
    4. ' calculate' → logprob: -2.550873279571533
    5. ' compute' → logprob: -3.050873279571533
    6. ' main' → logprob: -3.175873279571533
    7. 'calculate' → logprob: -3.425873279571533
    8. ' factorial' → logprob: -3.800873279571533
    9. ' find' → logprob: -4.175873279571533
    10. 'get' → logprob: -4.425873279571533

Token 171: '_order' (ID: 17446)
  Prédit: '_rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rank' → logprob: -0.6918514966964722
    2. '_to' → logprob: -0.9418514966964722
    3. '_' → logprob: -3.0668516159057617
    4. '_position' → logprob: -3.9418516159057617
    5. '_factor' → logprob: -4.066851615905762
    6. '_index' → logprob: -4.191851615905762
    7. '_value' → logprob: -5.566851615905762
    8. '_order' → logprob: -6.816851615905762
    9. '_length' → logprob: -6.941851615905762
    10. ' _' → logprob: -7.691851615905762

Token 172: '(n' (ID: 2406)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.46762779355049133
    2. '(' → logprob: -1.092627763748169
    3. '(n' → logprob: -3.467627763748169
    4. '(sequence' → logprob: -5.092628002166748
    5. ' (' → logprob: -7.467628002166748
    6. '_index' → logprob: -10.84262752532959
    7. 'def' → logprob: -10.84262752532959
    8. '(s' → logprob: -10.84262752532959
    9. '(arr' → logprob: -11.09262752532959
    10. '_(' → logprob: -11.21762752532959

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.125007629394531
    3. ',p' → logprob: -13.125007629394531
    4. ',n' → logprob: -17.00000762939453
    5. '‌,' → logprob: -17.25000762939453
    6. '_,' → logprob: -18.00000762939453
    7. ',
' → logprob: -18.62500762939453
    8. 'p' → logprob: -18.62500762939453
    9. ',val' → logprob: -18.62500762939453
    10. 's' → logprob: -18.75000762939453

Token 174: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.7675809860229492
    2. 'seq' → logprob: -0.8925809860229492
    3. ' sequence' → logprob: -2.517580986022949
    4. 'sequence' → logprob: -3.392580986022949
    5. ' p' → logprob: -4.767580986022949
    6. 'p' → logprob: -5.767580986022949
    7. 'arr' → logprob: -9.14258098602295
    8. '   ' → logprob: -9.64258098602295
    9. ',' → logprob: -10.64258098602295
    10. ' s' → logprob: -10.64258098602295

Token 175: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0714077353477478
    2. ',' → logprob: -2.6964077949523926
    3. '):
' → logprob: -6.821407794952393
    4. ')' → logprob: -8.446407318115234
    5. ' ,' → logprob: -9.821407318115234
    6. ' ):' → logprob: -10.071407318115234
    7. 's' → logprob: -11.321407318115234
    8. 'u' → logprob: -11.696407318115234
    9. '   ' → logprob: -11.821407318115234
    10. '[' → logprob: -11.946407318115234

Token 176: ' facts' (ID: 19719)
  Prédit: 'facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'facts' → logprob: -0.22580094635486603
    2. ' facts' → logprob: -1.6008009910583496
    3. 'f' → logprob: -8.725800514221191
    4. 'fact' → logprob: -8.850800514221191
    5. ' fact' → logprob: -10.350800514221191
    6. ' ' → logprob: -10.600800514221191
    7. ' factorial' → logprob: -12.100800514221191
    8. ')' → logprob: -12.600800514221191
    9. '   ' → logprob: -12.600800514221191
    10. 'Facts' → logprob: -13.225800514221191

Token 177: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003427458694204688
    2. ',' → logprob: -6.003427505493164
    3. ')' → logprob: -7.003427505493164
    4. ' ):' → logprob: -10.628427505493164
    5. '):
' → logprob: -12.003427505493164
    6. '[' → logprob: -12.378427505493164
    7. '[]):' → logprob: -12.753427505493164
    8. ':' → logprob: -14.003427505493164
    9. '   ' → logprob: -14.503427505493164
    10. ',n' → logprob: -14.753427505493164

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1238727867603302
    2. ':' → logprob: -2.373872756958008
    3. ':
' → logprob: -5.498872756958008
    4. ' :' → logprob: -5.873872756958008
    5. '):
' → logprob: -6.248872756958008
    6. ' order' → logprob: -6.248872756958008
    7. '):' → logprob: -6.373872756958008
    8. ' ' → logprob: -6.498872756958008
    9. '
' → logprob: -6.623872756958008
    10. ' 
' → logprob: -6.998872756958008

Token 179: ' total' (ID: 3609)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4634331464767456
    2. ' order' → logprob: -1.0884331464767456
    3. '   ' → logprob: -4.088433265686035
    4. ' rank' → logprob: -4.838433265686035
    5. 'rank' → logprob: -5.088433265686035
    6. 'index' → logprob: -6.963433265686035
    7. 'pos' → logprob: -6.963433265686035
    8. ' pos' → logprob: -7.963433265686035
    9. ' index' → logprob: -8.338433265686035
    10. 'idx' → logprob: -8.838433265686035

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0350055955350399
    2. '=' → logprob: -3.410005569458008
    3. '_order' → logprob: -7.285005569458008
    4. '_' → logprob: -7.785005569458008
    5. '_rank' → logprob: -8.660005569458008
    6. '_index' → logprob: -10.285005569458008
    7. '   ' → logprob: -11.660005569458008
    8. ' ' → logprob: -11.910005569458008
    9. '_idx' → logprob: -12.160005569458008
    10. ',' → logprob: -12.660005569458008

Token 181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3484507203102112
    2. ' ' → logprob: -1.2234506607055664
    3. '   ' → logprob: -13.098450660705566
    4. '1' → logprob: -13.473450660705566
    5. 'n' → logprob: -14.223450660705566
    6. ' 
' → logprob: -14.848450660705566
    7. '[' → logprob: -15.348450660705566
    8. ' ' → logprob: -15.598450660705566
    9. ' n' → logprob: -15.723450660705566
    10. ' math' → logprob: -15.848450660705566

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. '1' → logprob: -15.875028610229492
    4. 'sum' → logprob: -16.125028610229492
    5. 'n' → logprob: -16.187528610229492
    6. '[' → logprob: -16.625028610229492
    7. '   ' → logprob: -16.687528610229492
    8. '=' → logprob: -17.062528610229492
    9. 'int' → logprob: -17.750028610229492
    10. 'len' → logprob: -18.125028610229492

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024121664464473724
    2. '<|end|>' → logprob: -4.0241217613220215
    3. '  
' → logprob: -6.2741217613220215
    4. '   ' → logprob: -6.6491217613220215
    5. ',' → logprob: -7.2741217613220215
    6. '\n' → logprob: -7.8991217613220215
    7. ' for' → logprob: -8.024121284484863
    8. '    
' → logprob: -8.149121284484863
    9. '<|end|>' → logprob: -8.149121284484863
    10. '
' → logprob: -8.524121284484863

Token 184: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009788908995687962
    2. '<|end|>' → logprob: -5.134788990020752
    3. ' for' → logprob: -6.759788990020752
    4. ' 
' → logprob: -6.884788990020752
    5. '  
' → logprob: -7.759788990020752
    6. ' ' → logprob: -8.384788513183594
    7. '' → logprob: -8.384788513183594
    8. '   ' → logprob: -9.009788513183594
    9. ',' → logprob: -9.134788513183594
    10. '
' → logprob: -9.134788513183594

Token 185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14972732961177826
    2. 'used' → logprob: -2.1497273445129395
    3. ' for' → logprob: -4.2747273445129395
    4. ' used' → logprob: -5.0247273445129395
    5. 'visited' → logprob: -7.1497273445129395
    6. '   ' → logprob: -7.3997273445129395
    7. 'seen' → logprob: -7.6497273445129395
    8. 'remaining' → logprob: -9.149726867675781
    9. 'available' → logprob: -10.524726867675781
    10. 'seq' → logprob: -11.024726867675781

Token 186: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004629603587090969
    2. 'i' → logprob: -5.379629611968994
    3. '	i' → logprob: -12.629629135131836
    4. ' idx' → logprob: -13.379629135131836
    5. ' ' → logprob: -13.629629135131836
    6. '_i' → logprob: -14.129629135131836
    7. '   ' → logprob: -14.754629135131836
    8. '<|end|>' → logprob: -15.004629135131836
    9. 'idx' → logprob: -15.504629135131836
    10. ' in' → logprob: -15.629629135131836

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003449802752584219
    2. 'in' → logprob: -5.7534499168396
    3. ' ' → logprob: -8.378449440002441
    4. '<|end|>' → logprob: -10.878449440002441
    5. '	in' → logprob: -12.253449440002441
    6. ',' → logprob: -12.253449440002441
    7. '(' → logprob: -12.878449440002441
    8. ' i' → logprob: -13.378449440002441
    9. ')' → logprob: -13.753449440002441
    10. '0' → logprob: -13.878449440002441

Token 188: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06285121291875839
    2. 'range' → logprob: -2.8128511905670166
    3. '(range' → logprob: -7.062851428985596
    4. '(' → logprob: -10.812850952148438
    5. '(n' → logprob: -12.437850952148438
    6. '	range' → logprob: -13.812850952148438
    7. ' n' → logprob: -14.312850952148438
    8. ' xrange' → logprob: -14.937850952148438
    9. 'n' → logprob: -15.062850952148438
    10. ' (' → logprob: -15.687850952148438

Token 189: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0020535506773740053
    2. '(' → logprob: -6.252053737640381
    3. 'n' → logprob: -9.002053260803223
    4. ' n' → logprob: -14.002053260803223
    5. ' (' → logprob: -15.252053260803223
    6. '   ' → logprob: -15.752053260803223
    7. '1' → logprob: -16.12705421447754
    8. '(
' → logprob: -16.12705421447754
    9. ',n' → logprob: -16.37705421447754
    10. '	n' → logprob: -16.50205421447754

Token 190: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005063686985522509
    2. '):
' → logprob: -5.630063533782959
    3. ' ):' → logprob: -7.005063533782959
    4. ')' → logprob: -8.130064010620117
    5. ',' → logprob: -9.130064010620117
    6. '   ' → logprob: -9.505064010620117
    7. ':' → logprob: -9.755064010620117
    8. ' ' → logprob: -12.130064010620117
    9. '<|end|>' → logprob: -13.005064010620117
    10. ' ):
' → logprob: -13.255064010620117

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023741062730550766
    2. '<|end|>' → logprob: -4.648741245269775
    3. ' ' → logprob: -5.648741245269775
    4. '
' → logprob: -5.648741245269775
    5. '  
' → logprob: -6.773741245269775
    6. '   ' → logprob: -6.773741245269775
    7. ',' → logprob: -7.148741245269775
    8. '        
' → logprob: -7.273741245269775
    9. ' 
' → logprob: -7.648741245269775
    10. '    ' → logprob: -7.648741245269775

Token 192: ' val' (ID: 1459)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.2822972536087036
    2. ' less' → logprob: -1.4072972536087036
    3. ' val' → logprob: -7.907297134399414
    4. 'count' → logprob: -8.157297134399414
    5. 'val' (adapté à ' val') → logprob: -8.282297134399414
    6. ' count' → logprob: -9.657297134399414
    7. '   ' → logprob: -10.032297134399414
    8. 'total' → logprob: -10.407297134399414
    9. 'les' → logprob: -10.907297134399414
    10. ' total' → logprob: -11.157297134399414

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016945799812674522
    2. '=' → logprob: -4.141945838928223
    3. ',' → logprob: -7.141945838928223
    4. '   ' → logprob: -10.516945838928223
    5. '_' → logprob: -10.641945838928223
    6. '_val' → logprob: -11.016945838928223
    7. ' ,' → logprob: -11.141945838928223
    8. ' ' → logprob: -11.266945838928223
    9. ')' → logprob: -12.141945838928223
    10. '       ' → logprob: -12.766945838928223

Token 194: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.07890840619802475
    2. ' seq' → logprob: -2.5789084434509277
    3. '(seq' → logprob: -11.45390796661377
    4. 'sequence' → logprob: -12.70390796661377
    5. ' sequence' → logprob: -13.20390796661377
    6. '   ' → logprob: -13.70390796661377
    7. '_seq' → logprob: -14.45390796661377
    8. 'se' → logprob: -14.57890796661377
    9. ' sequ' → logprob: -14.95390796661377
    10. 'sequ' → logprob: -15.45390796661377

Token 195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000375380739569664
    2. '[' → logprob: -8.000375747680664
    3. '[
' → logprob: -11.250375747680664
    4. 'i' → logprob: -12.000375747680664
    5. ' [' → logprob: -12.250375747680664
    6. '   ' → logprob: -12.250375747680664
    7. ')' → logprob: -12.375375747680664
    8. '```' → logprob: -13.250375747680664
    9. ' i' → logprob: -13.750375747680664
    10. ',i' → logprob: -14.000375747680664

Token 196: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026826057583093643
    2. ',' → logprob: -3.6518261432647705
    3. ',)' → logprob: -8.401825904846191
    4. ' )' → logprob: -8.776825904846191
    5. ')
' → logprob: -9.901825904846191
    6. ' ,' → logprob: -10.276825904846191
    7. '   ' → logprob: -11.026825904846191
    8. ']' → logprob: -11.026825904846191
    9. '),' → logprob: -11.526825904846191
    10. '])' → logprob: -12.151825904846191

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06649864464998245
    2. ' less' → logprob: -3.0664987564086914
    3. ' count' → logprob: -5.066498756408691
    4. '_less' → logprob: -5.566498756408691
    5. 'count' → logprob: -6.191498756408691
    6. 'less' → logprob: -6.691498756408691
    7. '
' → logprob: -7.316498756408691
    8. '   ' → logprob: -7.316498756408691
    9. ' _' → logprob: -7.316498756408691
    10. ',' → logprob: -7.691498756408691

Token 198: ' less' (ID: 3760)
  Prédit: ' less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' less' → logprob: -0.43388330936431885
    2. 'less' (adapté à ' less') → logprob: -1.0588833093643188
    3. 'count' → logprob: -5.808883190155029
    4. ' count' → logprob: -6.433883190155029
    5. '_less' → logprob: -8.433883666992188
    6. '       ' → logprob: -10.558883666992188
    7. '
' → logprob: -10.683883666992188
    8. ' total' → logprob: -10.683883666992188
    9. 'remaining' → logprob: -10.683883666992188
    10. ' lesser' → logprob: -10.808883666992188

Token 199: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -3.7697225252486533e-06
    2. '<|end|>' → logprob: -14.125003814697266
    3. 's' → logprob: -14.250003814697266
    4. 'er' → logprob: -14.750003814697266
    5. ' =' → logprob: -14.875003814697266
    6. '=' → logprob: -15.125003814697266
    7. '   ' → logprob: -15.375003814697266
    8. '_count' → logprob: -15.500003814697266
    9. '```' → logprob: -16.000003814697266
    10. 'sers' → logprob: -16.125003814697266

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008646240457892418
    2. '=' → logprob: -4.758646011352539
    3. '_count' → logprob: -11.133646011352539
    4. 'count' → logprob: -12.008646011352539
    5. '=count' → logprob: -12.633646011352539
    6. '   ' → logprob: -13.133646011352539
    7. ' ' → logprob: -13.383646011352539
    8. '_' → logprob: -14.258646011352539
    9. ')' → logprob: -14.258646011352539
    10. '_for' → logprob: -14.383646011352539

Token 201: ' decrement' (ID: 121877)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.02342412807047367
    2. ' decrement' → logprob: -3.7734241485595703
    3. ' de' → logprob: -9.64842414855957
    4. '   ' → logprob: -10.89842414855957
    5. '	de' → logprob: -11.27342414855957
    6. '0' → logprob: -11.27342414855957
    7. 'sum' → logprob: -11.77342414855957
    8. '
' → logprob: -11.89842414855957
    9. ' decre' → logprob: -11.89842414855957
    10. 'deque' → logprob: -11.89842414855957

Token 202: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.1782583391759545e-05
    2. '_' → logprob: -10.375031471252441
    3. 'n' → logprob: -15.750031471252441
    4. ' _' → logprob: -16.000032424926758
    5. '_i' → logprob: -16.750032424926758
    6. 's' → logprob: -17.750032424926758
    7. '[' → logprob: -17.875032424926758
    8. ' ' → logprob: -18.125032424926758
    9. '_sequence' → logprob: -18.125032424926758
    10. '<|end|>' → logprob: -18.250032424926758

Token 203: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.00012630375567823648
    2. 'for' → logprob: -9.000125885009766
    3. 'For' → logprob: -13.750125885009766
    4. '_' → logprob: -14.750125885009766
    5. '_FOR' → logprob: -15.125125885009766
    6. '_n' → logprob: -15.250125885009766
    7. '_f' → logprob: -15.500125885009766
    8. '(seq' → logprob: -15.750125885009766
    9. ' for' → logprob: -15.875125885009766
    10. '```' → logprob: -16.000125885009766

Token 204: '_less' (ID: 154196)
  Prédit: '_less'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_less' → logprob: -0.18426848948001862
    2. 'less' → logprob: -1.8092684745788574
    3. 'seq' → logprob: -6.309268474578857
    4. 'ess' → logprob: -6.684268474578857
    5. '(seq' → logprob: -7.184268474578857
    6. 'Less' → logprob: -9.059268951416016
    7. ' less' → logprob: -9.559268951416016
    8. '_' → logprob: -9.684268951416016
    9. '_l' → logprob: -9.809268951416016
    10. 'les' → logprob: -10.059268951416016

Token 205: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.0009225384565070271
    2. '(val' → logprob: -9.000922203063965
    3. '(i' → logprob: -9.125922203063965
    4. '_val' → logprob: -9.375922203063965
    5. 'val' → logprob: -9.625922203063965
    6. 'q' → logprob: -9.750922203063965
    7. 'eq' → logprob: -9.750922203063965
    8. 'er' → logprob: -9.875922203063965
    9. '_n' → logprob: -9.875922203063965
    10. '_' → logprob: -10.250922203063965

Token 206: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.0001628956088097766
    2. '(sequence' → logprob: -9.375163078308105
    3. '(' → logprob: -9.625163078308105
    4. 'seq' → logprob: -12.125163078308105
    5. '(se' → logprob: -13.125163078308105
    6. ' (' → logprob: -13.375163078308105
    7. '(s' → logprob: -13.375163078308105
    8. '(
' → logprob: -14.750163078308105
    9. '(n' → logprob: -14.875163078308105
    10. '(prev' → logprob: -15.375163078308105

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5776956081390381
    2. '(val' → logprob: -1.202695608139038
    3. ',val' → logprob: -2.952695608139038
    4. '(' → logprob: -3.327695608139038
    5. '(seq' → logprob: -3.327695608139038
    6. ' ,' → logprob: -4.827695846557617
    7. '(i' → logprob: -5.452695846557617
    8. '   ' → logprob: -7.452695846557617
    9. ' (' → logprob: -7.452695846557617
    10. '(sequence' → logprob: -7.952695846557617

Token 208: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0004311460361350328
    2. ' val' → logprob: -7.750431060791016
    3. '	val' → logprob: -15.625431060791016
    4. '
' → logprob: -15.875431060791016
    5. '```' → logprob: -17.250431060791016
    6. '(val' → logprob: -17.500431060791016
    7. '[val' → logprob: -17.500431060791016
    8. 'v' → logprob: -17.625431060791016
    9. '   ' → logprob: -17.750431060791016
    10. '_val' → logprob: -17.875431060791016

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011759684421122074
    2. ',i' → logprob: -4.5117597579956055
    3. ' ,' → logprob: -7.3867597579956055
    4. 'i' → logprob: -9.886759757995605
    5. '[i' → logprob: -10.886759757995605
    6. '   ' → logprob: -12.386759757995605
    7. '```' → logprob: -12.636759757995605
    8. 's' → logprob: -13.011759757995605
    9. '_,' → logprob: -13.136759757995605
    10. ')' → logprob: -13.261759757995605

Token 210: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00523719098418951
    2. ' i' → logprob: -5.255237102508545
    3. '   ' → logprob: -13.880237579345703
    4. ')i' → logprob: -14.005237579345703
    5. ')' → logprob: -14.130237579345703
    6. '	i' → logprob: -14.380237579345703
    7. '{i' → logprob: -16.130237579345703
    8. '(i' → logprob: -16.505237579345703
    9. '[i' → logprob: -17.255237579345703
    10. '=i' → logprob: -17.380237579345703

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892636209726334
    2. ')
' → logprob: -2.5789263248443604
    3. ' )' → logprob: -11.703926086425781
    4. '   ' → logprob: -11.828926086425781
    5. ')
' → logprob: -12.078926086425781
    6. ' )
' → logprob: -12.328926086425781
    7. '       ' → logprob: -12.328926086425781
    8. ')

' → logprob: -12.453926086425781
    9. ' ' → logprob: -13.453926086425781
    10. ')`
' → logprob: -15.578926086425781

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.185909703373909
    2. ')' → logprob: -2.4359097480773926
    3. '<|end|>' → logprob: -3.9359097480773926
    4. '   ' → logprob: -4.185909748077393
    5. '
' → logprob: -4.310909748077393
    6. '+' → logprob: -4.435909748077393
    7. '        
' → logprob: -5.435909748077393
    8. '[' → logprob: -5.935909748077393
    9. ' 
' → logprob: -6.185909748077393
    10. '  
' → logprob: -6.310909748077393

Token 213: ' remaining' (ID: 15448)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3333369493484497
    2. ' total' → logprob: -1.3333369493484497
    3. 'remaining' (adapté à ' remaining') → logprob: -4.20833683013916
    4. ' remaining' → logprob: -5.95833683013916
    5. '       ' → logprob: -6.20833683013916
    6. 'term' → logprob: -9.20833683013916
    7. '   ' → logprob: -9.58333683013916
    8. 'rem' → logprob: -10.08333683013916
    9. ' term' → logprob: -10.45833683013916
    10. ' rem' → logprob: -10.58333683013916

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20157422125339508
    2. '=' → logprob: -1.7015742063522339
    3. '<|end|>' → logprob: -9.701574325561523
    4. ')' → logprob: -9.826574325561523
    5. '=n' → logprob: -11.326574325561523
    6. ' ' → logprob: -11.451574325561523
    7. '<|end|>' → logprob: -12.326574325561523
    8. 's' → logprob: -12.576574325561523
    9. '_tokens' → logprob: -13.076574325561523
    10. '  ' → logprob: -13.326574325561523

Token 215: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019393461989238858
    2. ' n' → logprob: -6.251939296722412
    3. '(n' → logprob: -11.75193977355957
    4. '	n' → logprob: -13.37693977355957
    5. '   ' → logprob: -13.87693977355957
    6. '_n' → logprob: -16.62693977355957
    7. '
' → logprob: -16.75193977355957
    8. '(' → logprob: -16.75193977355957
    9. '<n' → logprob: -17.37693977355957
    10. '$n' → logprob: -17.50193977355957

Token 216: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07893407344818115
    2. '-' → logprob: -2.5789341926574707
    3. '-i' → logprob: -10.453933715820312
    4. '   ' → logprob: -11.703933715820312
    5. ' ' → logprob: -12.203933715820312
    6. '  ' → logprob: -14.203933715820312
    7. '
' → logprob: -14.328933715820312
    8. '-
' → logprob: -15.453933715820312
    9. '<|end|>' → logprob: -15.828933715820312
    10. ' -
' → logprob: -16.203933715820312

Token 217: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018229780718684196
    2. ' i' → logprob: -4.518229961395264
    3. '1' → logprob: -5.018229961395264
    4. '(i' → logprob: -7.643229961395264
    5. '(' → logprob: -10.518229484558105
    6. ' (' → logprob: -10.768229484558105
    7. ' ' → logprob: -11.643229484558105
    8. '   ' → logprob: -12.768229484558105
    9. '	i' → logprob: -14.018229484558105
    10. '  ' → logprob: -16.018230438232422

Token 218: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00019305046589579433
    2. ' i' → logprob: -8.625192642211914
    3. '1' → logprob: -11.375192642211914
    4. '(i' → logprob: -13.875192642211914
    5. '   ' → logprob: -14.000192642211914
    6. '	i' → logprob: -16.375192642211914
    7. ')i' → logprob: -16.500192642211914
    8. ')' → logprob: -16.875192642211914
    9. ' ' → logprob: -17.625192642211914
    10. '{i' → logprob: -17.750192642211914

Token 219: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13065214455127716
    2. ')' → logprob: -2.5056521892547607
    3. ' +' → logprob: -3.6306521892547607
    4. '   ' → logprob: -5.255651950836182
    5. '1' → logprob: -5.380651950836182
    6. ' ' → logprob: -6.380651950836182
    7. ')-' → logprob: -6.630651950836182
    8. '-' → logprob: -7.755651950836182
    9. 'i' → logprob: -8.13065242767334
    10. ' -' → logprob: -8.25565242767334

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '2' → logprob: -17.250001907348633
    4. '```' → logprob: -18.250001907348633
    5. ')' → logprob: -18.375001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '<|end|>' → logprob: -20.937501907348633
    8. '۱' → logprob: -21.250001907348633
    9. '१' → logprob: -22.187501907348633
    10. '  ' → logprob: -22.187501907348633

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.500001907348633
    4. ')' → logprob: -18.125001907348633
    5. '```' → logprob: -18.500001907348633
    6. '<|end|>' → logprob: -18.500001907348633
    7. '2' → logprob: -20.625001907348633
    8. '  ' → logprob: -20.750001907348633
    9. '       ' → logprob: -21.312501907348633
    10. '-' → logprob: -21.625001907348633

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003377270477358252
    2. ')
' → logprob: -8.125337600708008
    3. ' )' → logprob: -10.500337600708008
    4. '   ' → logprob: -11.375337600708008
    5. ')

' → logprob: -14.125337600708008
    6. '))' → logprob: -14.875337600708008
    7. '<|end|>' → logprob: -14.875337600708008
    8. ')
' → logprob: -15.750337600708008
    9. ' ' → logprob: -15.875337600708008
    10. ')))' → logprob: -16.250337600708008

Token 223: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.302977442741394
    2. '       ' → logprob: -1.302977442741394
    3. ')' → logprob: -1.927977442741394
    4. '<|end|>' → logprob: -2.0529775619506836
    5. '   ' → logprob: -2.1779775619506836
    6. ' total' → logprob: -3.8029775619506836
    7. ' +' → logprob: -4.802977561950684
    8. '	total' → logprob: -5.052977561950684
    9. 'total' → logprob: -5.177977561950684
    10. '(total' → logprob: -5.177977561950684

Token 224: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.030384857207536697
    2. ' total' → logprob: -3.5303847789764404
    3. 'term' → logprob: -7.5303850173950195
    4. '       ' → logprob: -10.03038501739502
    5. ' term' → logprob: -10.78038501739502
    6. 'token' → logprob: -11.03038501739502
    7. '   ' → logprob: -12.53038501739502
    8. '
' → logprob: -12.78038501739502
    9. '+' → logprob: -12.78038501739502
    10. 'factor' → logprob: -13.78038501739502

Token 225: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04869523644447327
    2. '+=' → logprob: -3.0486953258514404
    3. '+' → logprob: -9.92369556427002
    4. '=' → logprob: -10.04869556427002
    5. ' =' → logprob: -11.29869556427002
    6. ' +' → logprob: -13.42369556427002
    7. ' ' → logprob: -14.42369556427002
    8. ']+=' → logprob: -14.79869556427002
    9. ')' → logprob: -15.17369556427002
    10. '+=(' → logprob: -15.67369556427002

Token 226: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.0019730038475245237
    2. ' term' → logprob: -6.3769731521606445
    3. '(term' → logprob: -8.876973152160645
    4. '(val' → logprob: -9.501973152160645
    5. ' (' → logprob: -10.501973152160645
    6. '(' → logprob: -11.376973152160645
    7. 'val' → logprob: -11.501973152160645
    8. ' val' → logprob: -13.126973152160645
    9. 'sequence' → logprob: -13.251973152160645
    10. 'ter' → logprob: -14.001973152160645

Token 227: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.001574971480295062
    2. '_' → logprob: -6.501574993133545
    3. 'For' → logprob: -10.251574516296387
    4. 'for' → logprob: -10.751574516296387
    5. '[' → logprob: -12.376574516296387
    6. ')' → logprob: -13.251574516296387
    7. '_FOR' → logprob: -13.376574516296387
    8. '_For' → logprob: -13.501574516296387
    9. '(' → logprob: -13.876574516296387
    10. ' for' → logprob: -14.501574516296387

Token 228: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.007624372839927673
    2. 'position' → logprob: -4.88262414932251
    3. 'val' → logprob: -12.007624626159668
    4. '_' → logprob: -12.507624626159668
    5. ' position' → logprob: -13.007624626159668
    6. '_sequence' → logprob: -13.132624626159668
    7. '_value' → logprob: -13.507624626159668
    8. '_val' → logprob: -14.757624626159668
    9. '(position' → logprob: -14.882624626159668
    10. '_positions' → logprob: -15.132624626159668

Token 229: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.00021438424300868064
    2. '(' → logprob: -9.000214576721191
    3. 'val' → logprob: -9.375214576721191
    4. '(
' → logprob: -12.250214576721191
    5. '[val' → logprob: -14.750214576721191
    6. ' val' → logprob: -15.000214576721191
    7. '	val' → logprob: -15.625214576721191
    8. ',val' → logprob: -15.625214576721191
    9. ' (' → logprob: -16.250213623046875
    10. '(value' → logprob: -16.500213623046875

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038479414070025086
    2. ' ,' → logprob: -7.87538480758667
    3. ',val' → logprob: -13.500384330749512
    4. ')' → logprob: -13.875384330749512
    5. '(' → logprob: -14.250384330749512
    6. ',
' → logprob: -14.875384330749512
    7. '<|end|>' → logprob: -15.250384330749512
    8. '‌,' → logprob: -15.250384330749512
    9. ',)' → logprob: -15.500384330749512
    10. ' ' → logprob: -16.375385284423828

Token 231: ' less' (ID: 3760)
  Prédit: 'less'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'less' → logprob: -0.054888833314180374
    2. ' less' → logprob: -2.9298887252807617
    3. '_less' → logprob: -12.929888725280762
    4. '-less' → logprob: -14.054888725280762
    5. '.less' → logprob: -14.554888725280762
    6. ' lesser' → logprob: -14.929888725280762
    7. ' menos' → logprob: -15.179888725280762
    8. 'les' → logprob: -15.179888725280762
    9. 'eless' → logprob: -15.304888725280762
    10. 'Less' → logprob: -15.429888725280762

Token 232: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -1.2664456789934775e-06
    2. 'ors' → logprob: -15.000000953674316
    3. 'er' → logprob: -15.625000953674316
    4. '```' → logprob: -15.625000953674316
    5. '_' → logprob: -16.000001907348633
    6. '_n' → logprob: -16.875001907348633
    7. 'ters' → logprob: -16.875001907348633
    8. 's' → logprob: -17.000001907348633
    9. 'sers' → logprob: -17.250001907348633
    10. 'rs' → logprob: -17.375001907348633

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.52788148727268e-05
    2. ' ,' → logprob: -9.750064849853516
    3. ',
' → logprob: -12.250064849853516
    4. '   ' → logprob: -14.750064849853516
    5. ')' → logprob: -15.000064849853516
    6. 'remaining' → logprob: -15.000064849853516
    7. '_,' → logprob: -15.250064849853516
    8. '       ' → logprob: -15.250064849853516
    9. '```' → logprob: -15.375064849853516
    10. '[' → logprob: -16.750064849853516

Token 234: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.005234002135694027
    2. ' remaining' → logprob: -5.2552337646484375
    3. '.remaining' → logprob: -16.380233764648438
    4. '_remaining' → logprob: -17.380233764648438
    5. '   ' → logprob: -17.505233764648438
    6. 'rem' → logprob: -17.505233764648438
    7. '
' → logprob: -18.505233764648438
    8. ' ' → logprob: -18.505233764648438
    9. '```' → logprob: -18.755233764648438
    10. 'Remaining' → logprob: -19.255233764648438

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -12.125011444091797
    3. ',f' → logprob: -12.500011444091797
    4. ')' → logprob: -13.250011444091797
    5. ',
' → logprob: -15.375011444091797
    6. '   ' → logprob: -15.500011444091797
    7. '),' → logprob: -16.000011444091797
    8. '_,' → logprob: -16.750011444091797
    9. '‌,' → logprob: -16.750011444091797
    10. '```' → logprob: -17.250011444091797

Token 236: ' facts' (ID: 19719)
  Prédit: 'facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'facts' → logprob: -0.018156379461288452
    2. ' facts' → logprob: -4.0181565284729
    3. 'fact' → logprob: -12.143156051635742
    4. 'f' → logprob: -14.768156051635742
    5. 'Facts' → logprob: -14.768156051635742
    6. ' fact' → logprob: -15.393156051635742
    7. ')' → logprob: -16.018156051635742
    8. 'fac' → logprob: -17.268156051635742
    9. 'fa' → logprob: -17.518156051635742
    10. ' Facts' → logprob: -17.768156051635742

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2166411478538066e-05
    2. ')
' → logprob: -9.875052452087402
    3. '   ' → logprob: -15.000052452087402
    4. ' )' → logprob: -15.500052452087402
    5. ')return' → logprob: -16.750051498413086
    6. ')

' → logprob: -17.375051498413086
    7. ')
' → logprob: -17.500051498413086
    8. '))' → logprob: -18.375051498413086
    9. ')`' → logprob: -18.750051498413086
    10. '),' → logprob: -19.750051498413086

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056935057044029236
    2. '
' → logprob: -3.1819350719451904
    3. 'return' → logprob: -4.681934833526611
    4. '    
' → logprob: -6.056934833526611
    5. ' return' → logprob: -6.306934833526611
    6. '  
' → logprob: -9.18193531036377
    7. '\n' → logprob: -9.55693531036377
    8. '	return' → logprob: -9.93193531036377
    9. '```' → logprob: -10.43193531036377
    10. '
' → logprob: -10.68193531036377

Token 239: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2783748209476471
    2. 'return' (adapté à ' return') → logprob: -1.5283747911453247
    3. ' return' → logprob: -3.6533749103546143
    4. '	return' → logprob: -8.903374671936035
    5. '
' → logprob: -10.653374671936035
    6. ' ' → logprob: -10.903374671936035
    7. '    
' → logprob: -12.153374671936035
    8. ':return' → logprob: -12.653374671936035
    9. 'eturn' → logprob: -13.278374671936035
    10. '_return' → logprob: -13.528374671936035

Token 240: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16022422909736633
    2. ' total' → logprob: -1.910224199295044
    3. '(total' → logprob: -17.91022491455078
    4. '	total' → logprob: -19.03522491455078
    5. 'tot' → logprob: -19.28522491455078
    6. 't' → logprob: -19.28522491455078
    7. '0' → logprob: -19.41022491455078
    8. 'int' → logprob: -20.03522491455078
    9. '   ' → logprob: -20.16022491455078
    10. ' ' → logprob: -20.16022491455078

Token 241: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.039646390825510025
    2. '
' → logprob: -3.5396463871002197
    3. '

' → logprob: -4.914646625518799
    4. '<|end|>' → logprob: -6.289646625518799
    5. ' def' → logprob: -9.16464614868164
    6. '(' → logprob: -9.16464614868164
    7. '```' → logprob: -9.41464614868164
    8. '(def' → logprob: -9.91464614868164
    9. '(n' → logprob: -10.03964614868164
    10. '#' → logprob: -10.28964614868164

Token 242: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005975842475891113
    2. 'n' → logprob: -5.630975723266602
    3. '#' → logprob: -7.005975723266602
    4. '
' → logprob: -7.130975723266602
    5. '```' → logprob: -8.255975723266602
    6. '<|end|>' → logprob: -9.255975723266602
    7. 'p' → logprob: -9.630975723266602
    8. ' def' → logprob: -10.255975723266602
    9. '\' → logprob: -10.255975723266602
    10. 'import' → logprob: -10.380975723266602

Token 243: ' compute' (ID: 23864)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08704086393117905
    2. ' main' → logprob: -2.587040901184082
    3. 'per' → logprob: -5.837040901184082
    4. 'factor' → logprob: -5.837040901184082
    5. 'calculate' → logprob: -7.587040901184082
    6. 'solve' → logprob: -7.587040901184082
    7. 'perm' → logprob: -7.837040901184082
    8. 'compare' → logprob: -8.837040901184082
    9. 'lex' → logprob: -8.837040901184082
    10. 'find' → logprob: -9.212040901184082

Token 244: '_difference' (ID: 123771)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8795866370201111
    2. '_order' → logprob: -1.2545866966247559
    3. '_rank' → logprob: -2.379586696624756
    4. '_per' → logprob: -2.754586696624756
    5. '_factor' → logprob: -3.129586696624756
    6. '_difference' → logprob: -3.504586696624756
    7. '_inverse' → logprob: -4.254586696624756
    8. '_distance' → logprob: -4.379586696624756
    9. '_n' → logprob: -4.629586696624756
    10. '_sequence' → logprob: -4.754586696624756

Token 245: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1323772668838501
    2. '(' → logprob: -2.1323771476745605
    3. ' (' → logprob: -5.3823771476745605
    4. '():' → logprob: -7.5073771476745605
    5. '()' → logprob: -9.007377624511719
    6. '_(' → logprob: -9.757377624511719
    7. '(_' → logprob: -10.382377624511719
    8. '(p' → logprob: -11.132377624511719
    9. '_' → logprob: -11.132377624511719
    10. '()(' → logprob: -11.632377624511719

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.265633419388905e-05
    2. ',p' → logprob: -10.375062942504883
    3. ' ,' → logprob: -10.375062942504883
    4. ',n' → logprob: -16.500062942504883
    5. ',
' → logprob: -17.750062942504883
    6. '_,' → logprob: -18.000062942504883
    7. '‌,' → logprob: -19.250062942504883
    8. ',s' → logprob: -19.375062942504883
    9. ',q' → logprob: -19.500062942504883
    10. '   ' → logprob: -19.500062942504883

Token 247: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007678195834159851
    2. ' p' → logprob: -4.882678031921387
    3. '   ' → logprob: -9.632678031921387
    4. 'seq' → logprob: -12.882678031921387
    5. 'def' → logprob: -14.632678031921387
    6. ' ' → logprob: -14.632678031921387
    7. '_p' → logprob: -14.882678031921387
    8. ')' → logprob: -15.007678031921387
    9. 'sequence' → logprob: -15.132678031921387
    10. '  ' → logprob: -15.132678031921387

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2617008400848135e-05
    2. ' ,' → logprob: -10.875032424926758
    3. ',q' → logprob: -11.250032424926758
    4. ',
' → logprob: -15.125032424926758
    5. ',p' → logprob: -16.125032424926758
    6. 'q' → logprob: -16.250032424926758
    7. '_,' → logprob: -16.875032424926758
    8. '‌,' → logprob: -17.000032424926758
    9. ')' → logprob: -17.625032424926758
    10. '   ' → logprob: -17.875032424926758

Token 249: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01815006136894226
    2. ' q' → logprob: -4.0181498527526855
    3. '	q' → logprob: -16.643150329589844
    4. '   ' → logprob: -16.643150329589844
    5. ' ' → logprob: -17.018150329589844
    6. '    ' → logprob: -18.018150329589844
    7. '  ' → logprob: -19.393150329589844
    8. 'def' → logprob: -19.518150329589844
    9. ',q' → logprob: -19.643150329589844
    10. ')' → logprob: -19.893150329589844

Token 250: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021915239631198347
    2. '):
' → logprob: -8.750219345092773
    3. ')' → logprob: -9.750219345092773
    4. '):
' → logprob: -13.625219345092773
    5. ' ):' → logprob: -14.500219345092773
    6. '):

' → logprob: -15.125219345092773
    7. ',' → logprob: -15.250219345092773
    8. ':' → logprob: -16.000219345092773
    9. '}:' → logprob: -17.750219345092773
    10. ''):' → logprob: -17.875219345092773

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061382193118333817
    2. 'facts' → logprob: -2.936382293701172
    3. ' facts' → logprob: -5.436382293701172
    4. 'fact' → logprob: -6.686382293701172
    5. 'f' → logprob: -7.311382293701172
    6. ' fact' → logprob: -10.061382293701172
    7. '```' → logprob: -10.186382293701172
    8. '	f' → logprob: -10.561382293701172
    9. ' factorial' → logprob: -10.811382293701172
    10. 'Facts' → logprob: -11.311382293701172

Token 252: ' facts' (ID: 19719)
  Prédit: 'facts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'facts' (adapté à ' facts') → logprob: -0.003520483383908868
    2. 'fact' → logprob: -6.128520488739014
    3. ' facts' → logprob: -7.128520488739014
    4. '   ' → logprob: -8.378520011901855
    5. 'return' → logprob: -8.878520011901855
    6. 'f' → logprob: -9.378520011901855
    7. 'fac' → logprob: -11.003520011901855
    8. 'factor' → logprob: -11.128520011901855
    9. 'fp' → logprob: -11.503520011901855
    10. ' ' → logprob: -11.753520011901855

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741026759147644
    2. '=' → logprob: -0.9741026759147644
    3. '[' → logprob: -11.099102973937988
    4. '[n' → logprob: -12.224102973937988
    5. ',' → logprob: -13.224102973937988
    6. ')' → logprob: -13.224102973937988
    7. '  ' → logprob: -14.099102973937988
    8. ' ' → logprob: -15.099102973937988
    9. '=n' → logprob: -15.474102973937988
    10. ' =[' → logprob: -16.474102020263672

Token 254: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.1269282102584839
    2. ' pre' → logprob: -2.1269283294677734
    3. '   ' → logprob: -17.001928329467773
    4. '(pre' → logprob: -17.251928329467773
    5. '[' → logprob: -17.626928329467773
    6. '	pre' → logprob: -17.876928329467773
    7. ' ' → logprob: -18.751928329467773
    8. 'preh' → logprob: -18.751928329467773
    9. '  ' → logprob: -19.501928329467773
    10. 'pread' → logprob: -19.626928329467773

Token 255: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -8.77627644513268e-06
    2. 'p' → logprob: -13.125008583068848
    3. 'pute' → logprob: -13.875008583068848
    4. '(n' → logprob: -14.000008583068848
    5. 'n' → logprob: -14.125008583068848
    6. ' compute' → logprob: -14.250008583068848
    7. 'comp' → logprob: -14.250008583068848
    8. 'computed' → logprob: -14.875008583068848
    9. 'com' → logprob: -15.125008583068848
    10. '   ' → logprob: -15.125008583068848

Token 256: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -9.746380237629637e-05
    2. 'factor' → logprob: -9.375097274780273
    3. '_' → logprob: -12.375097274780273
    4. '_f' → logprob: -12.375097274780273
    5. '_fact' → logprob: -13.375097274780273
    6. '(n' → logprob: -13.875097274780273
    7. 'f' → logprob: -14.875097274780273
    8. '(f' → logprob: -15.500097274780273
    9. 'Factor' → logprob: -15.875097274780273
    10. '(p' → logprob: -15.875097274780273

Token 257: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.026341751217842102
    2. 'als' → logprob: -3.651341676712036
    3. '[' → logprob: -11.651341438293457
    4. 's' → logprob: -11.651341438293457
    5. 'ial' → logprob: -12.151341438293457
    6. 'n' → logprob: -12.776341438293457
    7. 'al' → logprob: -12.901341438293457
    8. 'ils' → logprob: -13.401341438293457
    9. 'ails' → logprob: -13.401341438293457
    10. 'icals' → logprob: -13.526341438293457

Token 258: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.176947600673884e-05
    2. 'n' → logprob: -10.875021934509277
    3. '(' → logprob: -13.000021934509277
    4. ' (' → logprob: -14.500021934509277
    5. ' n' → logprob: -18.75002098083496
    6. '[n' → logprob: -19.12502098083496
    7. 's' → logprob: -19.75002098083496
    8. '
' → logprob: -19.87502098083496
    9. ')(' → logprob: -19.87502098083496
    10. '```' → logprob: -20.00002098083496

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003362966235727072
    2. ')
' → logprob: -8.000336647033691
    3. ')

' → logprob: -15.000336647033691
    4. ')
' → logprob: -15.125336647033691
    5. ' )' → logprob: -16.250335693359375
    6. '))' → logprob: -17.375335693359375
    7. ')n' → logprob: -17.750335693359375
    8. ')`' → logprob: -18.375335693359375
    9. '),' → logprob: -18.500335693359375
    10. '+' → logprob: -19.000335693359375

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22594808042049408
    2. ' p' → logprob: -1.7259480953216553
    3. 'p' → logprob: -4.350947856903076
    4. '
' → logprob: -5.100947856903076
    5. ' dp' → logprob: -6.350947856903076
    6. '    
' → logprob: -6.850947856903076
    7. ' return' → logprob: -7.225947856903076
    8. ' order' → logprob: -7.475947856903076
    9. 'order' → logprob: -8.225948333740234
    10. 'dp' → logprob: -8.350948333740234

Token 261: ' ord' (ID: 6608)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.07782083749771118
    2. 'p' → logprob: -2.9528207778930664
    3. 'pos' → logprob: -3.9528207778930664
    4. 'ord' (adapté à ' ord') → logprob: -5.952820777893066
    5. 'rank' → logprob: -8.202820777893066
    6. 'a' → logprob: -8.327820777893066
    7. 'op' → logprob: -9.452820777893066
    8. 'res' → logprob: -9.702820777893066
    9. 'ans' → logprob: -9.827820777893066
    10. 'return' → logprob: -10.452820777893066

Token 262: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.065078504383564
    2. 'p' → logprob: -2.8150784969329834
    3. 'er' → logprob: -5.8150787353515625
    4. '1' → logprob: -9.065078735351562
    5. 'P' → logprob: -12.190078735351562
    6. '_' → logprob: -13.565078735351562
    7. 'inal' → logprob: -14.690078735351562
    8. ' p' → logprob: -15.190078735351562
    9. '-p' → logprob: -15.315078735351562
    10. 'e' → logprob: -15.690078735351562

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762271285057068
    2. '=' → logprob: -0.8262271285057068
    3. '_p' → logprob: -9.451227188110352
    4. '=p' → logprob: -9.826227188110352
    5. 'p' → logprob: -10.076227188110352
    6. '   ' → logprob: -10.326227188110352
    7. ',' → logprob: -10.576227188110352
    8. ' ' → logprob: -10.701227188110352
    9. '_' → logprob: -11.201227188110352
    10. 'u' → logprob: -11.576227188110352

Token 264: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.02975071594119072
    2. ' sequence' → logprob: -3.5297508239746094
    3. '(sequence' → logprob: -15.15475082397461
    4. ' ' → logprob: -17.65475082397461
    5. '   ' → logprob: -18.15475082397461
    6. '.sequence' → logprob: -19.52975082397461
    7. 'Sequence' → logprob: -19.90475082397461
    8. 'series' → logprob: -20.27975082397461
    9. '_sequence' → logprob: -20.65475082397461
    10. 'se' → logprob: -20.65475082397461

Token 265: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -7.896309739408025e-07
    2. 'order' → logprob: -14.250000953674316
    3. '_orders' → logprob: -18.125
    4. 'Order' → logprob: -18.5
    5. '_ORDER' → logprob: -19.25
    6. '_ord' → logprob: -19.375
    7. '_' → logprob: -19.625
    8. '_position' → logprob: -19.625
    9. ' _' → logprob: -19.875
    10. '_sequence' → logprob: -20.25

Token 266: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.8126592193730175e-05
    2. '(' → logprob: -10.0000581741333
    3. ' (' → logprob: -11.3750581741333
    4. '```' → logprob: -14.7500581741333
    5. 'n' → logprob: -15.2500581741333
    6. ' ' → logprob: -15.8750581741333
    7. '<n' → logprob: -16.250057220458984
    8. '<|end|>' → logprob: -16.500057220458984
    9. ' n' → logprob: -17.250057220458984
    10. ',n' → logprob: -17.500057220458984

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004131118766963482
    2. ',p' → logprob: -5.504131317138672
    3. ',n' → logprob: -10.504131317138672
    4. '(p' → logprob: -11.129131317138672
    5. ' ,' → logprob: -11.754131317138672
    6. ',q' → logprob: -13.879131317138672
    7. '(n' → logprob: -14.504131317138672
    8. '(' → logprob: -14.504131317138672
    9. ',
' → logprob: -14.879131317138672
    10. ')' → logprob: -15.754131317138672

Token 268: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023247575387358665
    2. ' p' → logprob: -3.773247480392456
    3. ')' → logprob: -14.273247718811035
    4. 'n' → logprob: -15.148247718811035
    5. '<p' → logprob: -15.648247718811035
    6. '_p' → logprob: -15.648247718811035
    7. ')p' → logprob: -15.648247718811035
    8. '(p' → logprob: -15.898247718811035
    9. ',' → logprob: -16.14824676513672
    10. '	p' → logprob: -16.52324676513672

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.9424725148128346e-05
    2. ' ,' → logprob: -10.375049591064453
    3. ',f' → logprob: -11.000049591064453
    4. ',
' → logprob: -14.750049591064453
    5. ')' → logprob: -15.375049591064453
    6. '),' → logprob: -15.625049591064453
    7. '‌,' → logprob: -16.000049591064453
    8. ',p' → logprob: -16.125049591064453
    9. '   ' → logprob: -16.250049591064453
    10. '_,' → logprob: -16.875049591064453

Token 270: ' facts' (ID: 19719)
  Prédit: 'facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'facts' → logprob: -0.00599267054349184
    2. ' facts' → logprob: -5.130992889404297
    3. 'fact' → logprob: -9.880992889404297
    4. 'f' → logprob: -11.880992889404297
    5. ' ' → logprob: -13.880992889404297
    6. ')' → logprob: -13.880992889404297
    7. '
' → logprob: -14.130992889404297
    8. 'Facts' → logprob: -14.255992889404297
    9. 'fac' → logprob: -14.630992889404297
    10. '   ' → logprob: -14.630992889404297

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011743901995941997
    2. ')
' → logprob: -6.751174449920654
    3. ')
' → logprob: -12.876173973083496
    4. ' )' → logprob: -13.751173973083496
    5. '   ' → logprob: -14.626173973083496
    6. ')

' → logprob: -15.876173973083496
    7. ' )
' → logprob: -17.751174926757812
    8. '),' → logprob: -18.001174926757812
    9. ' ' → logprob: -18.376174926757812
    10. ',' → logprob: -18.626174926757812

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1298447996377945
    2. ' ord' → logprob: -2.629844903945923
    3. 'ord' → logprob: -3.004844903945923
    4. '
' → logprob: -9.629844665527344
    5. '    ' → logprob: -11.254844665527344
    6. '    
' → logprob: -11.254844665527344
    7. '  ' → logprob: -11.254844665527344
    8. ' ' → logprob: -11.504844665527344
    9. 'ords' → logprob: -11.629844665527344
    10. '(ord' → logprob: -12.254844665527344

Token 273: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' (adapté à ' ord') → logprob: -0.04935913905501366
    2. ' ord' → logprob: -3.049359083175659
    3. '   ' → logprob: -7.174359321594238
    4. ' ' → logprob: -12.924359321594238
    5. 'ords' → logprob: -14.174359321594238
    6. '  ' → logprob: -14.674359321594238
    7. '(ord' → logprob: -14.674359321594238
    8. '_ord' → logprob: -15.174359321594238
    9. 'order' → logprob: -15.299359321594238
    10. '    ' → logprob: -15.549359321594238

Token 274: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -6.027225754223764e-05
    2. '_' → logprob: -9.750060081481934
    3. 'q' → logprob: -13.750060081481934
    4. '_p' → logprob: -14.250060081481934
    5. '=' → logprob: -16.25006103515625
    6. ' =' → logprob: -17.12506103515625
    7. ' _' → logprob: -17.37506103515625
    8. '_
' → logprob: -18.25006103515625
    9. '_j' → logprob: -18.62506103515625
    10. '_

' → logprob: -18.62506103515625

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197395175695419
    2. '=' → logprob: -2.811974048614502
    3. ' ' → logprob: -12.186973571777344
    4. '  ' → logprob: -14.186973571777344
    5. ')' → logprob: -14.936973571777344
    6. ',' → logprob: -16.811973571777344
    7. '   ' → logprob: -17.311973571777344
    8. ' ' → logprob: -17.686973571777344
    9. ' =
' → logprob: -17.936973571777344
    10. ' =)' → logprob: -18.311973571777344

Token 276: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.20141343772411346
    2. ' sequence' → logprob: -1.7014133930206299
    3. '(sequence' → logprob: -15.82641315460205
    4. '.sequence' → logprob: -20.201414108276367
    5. '_sequence' → logprob: -20.451414108276367
    6. 'quence' → logprob: -20.701414108276367
    7. 'sequ' → logprob: -20.951414108276367
    8. 'sentence' → logprob: -21.326414108276367
    9. 'se' → logprob: -21.451414108276367
    10. '   ' → logprob: -21.576414108276367

Token 277: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -3.297462171758525e-05
    2. '_q' → logprob: -10.875033378601074
    3. 'Order' → logprob: -11.875033378601074
    4. '_n' → logprob: -12.500033378601074
    5. 'order' → logprob: -13.750033378601074
    6. '_' → logprob: -14.250033378601074
    7. '(n' → logprob: -14.625033378601074
    8. ' _' → logprob: -15.750033378601074
    9. '_ord' → logprob: -15.875033378601074
    10. '_ORDER' → logprob: -16.000032424926758

Token 278: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007609704975038767
    2. '(' → logprob: -4.882609844207764
    3. ' (' → logprob: -13.257609367370605
    4. '(
' → logprob: -13.507609367370605
    5. 'n' → logprob: -14.882609367370605
    6. '```' → logprob: -16.507610321044922
    7. '(

' → logprob: -18.132610321044922
    8. ')' → logprob: -18.132610321044922
    9. ')(' → logprob: -18.257610321044922
    10. '(None' → logprob: -18.507610321044922

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024905700236558914
    2. ',n' → logprob: -4.149905681610107
    3. '(n' → logprob: -4.774905681610107
    4. 'n' → logprob: -8.524906158447266
    5. ' ,' → logprob: -9.399906158447266
    6. '(' → logprob: -9.399906158447266
    7. ')' → logprob: -11.649906158447266
    8. ',
' → logprob: -11.899906158447266
    9. '   ' → logprob: -12.399906158447266
    10. ' (' → logprob: -13.274906158447266

Token 280: ' q' (ID: 2335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0021320602390915155
    2. ' n' → logprob: -6.252131938934326
    3. 'q' → logprob: -8.502132415771484
    4. '(n' → logprob: -15.877132415771484
    5. ' q' → logprob: -15.877132415771484
    6. '	n' → logprob: -16.127132415771484
    7. ' ' → logprob: -18.127132415771484
    8. '
' → logprob: -19.002132415771484
    9. '   ' → logprob: -19.502132415771484
    10. '_n' → logprob: -19.752132415771484

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002817358821630478
    2. ',n' → logprob: -6.377817153930664
    3. ')' → logprob: -7.127817153930664
    4. ' ,' → logprob: -8.252817153930664
    5. '(n' → logprob: -11.002817153930664
    6. '<|end|>' → logprob: -11.752817153930664
    7. ',
' → logprob: -11.877817153930664
    8. '‌,' → logprob: -12.877817153930664
    9. 'n' → logprob: -12.877817153930664
    10. '   ' → logprob: -13.002817153930664

Token 282: ' facts' (ID: 19719)
  Prédit: 'facts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'facts' → logprob: -0.011093802750110626
    2. ' facts' → logprob: -4.511093616485596
    3. 'n' → logprob: -10.886094093322754
    4. 'fact' → logprob: -11.011094093322754
    5. 'f' → logprob: -11.636094093322754
    6. ' n' → logprob: -14.136094093322754
    7. 'Facts' → logprob: -15.011094093322754
    8. ' fact' → logprob: -15.136094093322754
    9. ')' → logprob: -15.636094093322754
    10. ',' → logprob: -16.261093139648438

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001367977005429566
    2. ')
' → logprob: -6.626368045806885
    3. '   ' → logprob: -10.126367568969727
    4. ')
' → logprob: -13.376367568969727
    5. ')return' → logprob: -15.501367568969727
    6. ' )' → logprob: -15.751367568969727
    7. '),' → logprob: -16.876367568969727
    8. ')

' → logprob: -17.126367568969727
    9. '))' → logprob: -17.626367568969727
    10. ')**' → logprob: -17.876367568969727

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008056987426243722
    2. 'return' → logprob: -7.250805854797363
    3. '
' → logprob: -9.625805854797363
    4. ' return' → logprob: -11.125805854797363
    5. '	return' → logprob: -11.250805854797363
    6. '    
' → logprob: -13.500805854797363
    7. '       ' → logprob: -15.750805854797363
    8. '   ' → logprob: -15.750805854797363
    9. '```' → logprob: -16.375804901123047
    10. '
' → logprob: -16.500804901123047

Token 285: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08440953493118286
    2. '   ' → logprob: -2.584409475326538
    3. ' return' → logprob: -5.209409713745117
    4. '
' → logprob: -10.584409713745117
    5. '	return' → logprob: -11.459409713745117
    6. 'print' → logprob: -13.459409713745117
    7. '```' → logprob: -14.084409713745117
    8. ' ' → logprob: -14.834409713745117
    9. '    
' → logprob: -15.209409713745117
    10. '  ' → logprob: -15.459409713745117

Token 286: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04859315976500511
    2. ' abs' → logprob: -3.048593044281006
    3. '   ' → logprob: -12.298593521118164
    4. 'ord' → logprob: -14.048593521118164
    5. ' ord' → logprob: -15.173593521118164
    6. '(abs' → logprob: -15.423593521118164
    7. '.abs' → logprob: -19.673593521118164
    8. '_abs' → logprob: -19.923593521118164
    9. '    ' → logprob: -20.048593521118164
    10. '  ' → logprob: -20.048593521118164

Token 287: '(ord' (ID: 199585)
  Prédit: '(ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. '(order' → logprob: -17.875
    4. 'ord' → logprob: -18.5
    5. '(org' → logprob: -18.875
    6. '(or' → logprob: -19.0
    7. ' (' → logprob: -19.5
    8. '((' → logprob: -20.0
    9. ' ord' → logprob: -20.25
    10. '(orig' → logprob: -20.875

Token 288: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0010342379100620747
    2. '_q' → logprob: -6.876034259796143
    3. '_' → logprob: -13.876033782958984
    4. '(p' → logprob: -15.251033782958984
    5. '(' → logprob: -16.376033782958984
    6. '(_' → logprob: -17.126033782958984
    7. 'p' → logprob: -17.126033782958984
    8. ')' → logprob: -17.251033782958984
    9. ' _' → logprob: -17.626033782958984
    10. '   ' → logprob: -17.751033782958984

Token 289: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02975349873304367
    2. '-' → logprob: -3.5297534465789795
    3. ' ' → logprob: -13.029753684997559
    4. ',' → logprob: -14.904753684997559
    5. ' ord' → logprob: -16.154752731323242
    6. '   ' → logprob: -16.654752731323242
    7. '(ord' → logprob: -16.779752731323242
    8. ' ,' → logprob: -16.904752731323242
    9. '_' → logprob: -17.279752731323242
    10. ' ' → logprob: -17.404752731323242

Token 290: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.009759632870554924
    2. ' ord' → logprob: -4.634759426116943
    3. '(ord' → logprob: -12.759759902954102
    4. 'ords' → logprob: -15.134759902954102
    5. 'order' → logprob: -15.759759902954102
    6. 'orde' → logprob: -16.0097599029541
    7. '   ' → logprob: -16.3847599029541
    8. '_ord' → logprob: -16.7597599029541
    9. ' ' → logprob: -17.3847599029541
    10. 'ordinal' → logprob: -17.6347599029541

Token 291: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.0
    3. 'q' → logprob: -16.0
    4. '_p' → logprob: -16.25
    5. '	q' → logprob: -18.5
    6. ')' → logprob: -18.75
    7. '_u' → logprob: -20.125
    8. '   ' → logprob: -20.5
    9. '```' → logprob: -21.25
    10. '_i' → logprob: -21.25

Token 292: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010282796574756503
    2. '())' → logprob: -9.750102996826172
    3. '()' → logprob: -10.125102996826172
    4. ')
' → logprob: -12.500102996826172
    5. ' )' → logprob: -14.750102996826172
    6. '))' → logprob: -15.625102996826172
    7. '(' → logprob: -16.625102996826172
    8. '）' → logprob: -17.625102996826172
    9. ')`' → logprob: -17.750102996826172
    10. ')}' → logprob: -18.000102996826172

Token 293: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22641520202159882
    2. 'def' → logprob: -2.9764151573181152
    3. 'print' → logprob: -3.3514151573181152
    4. 'n' → logprob: -3.3514151573181152
    5. '<|end|>' → logprob: -3.3514151573181152
    6. '```' → logprob: -3.6014151573181152
    7. '
' → logprob: -4.351415157318115
    8. '#' → logprob: -5.851415157318115
    9. '\n' → logprob: -7.226415157318115
    10. '<|end|>' → logprob: -7.226415157318115

Token 294: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008616345934569836
    2. ' main' → logprob: -4.7586164474487305
    3. 'def' → logprob: -14.25861644744873
    4. '__' → logprob: -14.38361644744873
    5. 'run' → logprob: -15.00861644744873
    6. '_main' → logprob: -16.633615493774414
    7. '
' → logprob: -17.008615493774414
    8. 'if' → logprob: -17.508615493774414
    9. '```' → logprob: -17.758615493774414
    10. 'read' → logprob: -18.008615493774414

Token 295: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.4285862057004124e-05
    2. '():
' → logprob: -10.37503433227539
    3. ' ():' → logprob: -13.00003433227539
    4. '()' → logprob: -14.50003433227539
    5. '():
' → logprob: -15.50003433227539
    6. '(' → logprob: -18.25003433227539
    7. ':' → logprob: -18.87503433227539
    8. '():

' → logprob: -19.37503433227539
    9. '()>' → logprob: -19.62503433227539
    10. '_' → logprob: -20.25003433227539

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08271604776382446
    2. 'n' → logprob: -2.5827159881591797
    3. ' n' → logprob: -5.58271598815918
    4. '	n' → logprob: -10.33271598815918
    5. '    
' → logprob: -11.58271598815918
    6. '
' → logprob: -12.20771598815918
    7. '  ' → logprob: -12.70771598815918
    8. '```' → logprob: -13.20771598815918
    9. '   ' → logprob: -13.20771598815918
    10. ' ' → logprob: -13.95771598815918

Token 297: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.018271567299962044
    2. ' n' → logprob: -4.018271446228027
    3. '   ' → logprob: -9.018271446228027
    4. '	n' → logprob: -14.768271446228027
    5. '```' → logprob: -17.268272399902344
    6. '    
' → logprob: -17.518272399902344
    7. '
' → logprob: -18.018272399902344
    8. ' ' → logprob: -18.768272399902344
    9. '  ' → logprob: -19.518272399902344
    10. ' 
' → logprob: -19.643272399902344

Token 298: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04328610748052597
    2. '=' → logprob: -3.168286085128784
    3. ',' → logprob: -8.168286323547363
    4. ' ' → logprob: -14.293286323547363
    5. '=int' → logprob: -14.293286323547363
    6. ' ,' → logprob: -14.668286323547363
    7. ' =
' → logprob: -14.668286323547363
    8. '   ' → logprob: -14.668286323547363
    9. ')' → logprob: -14.793286323547363
    10. '=input' → logprob: -15.668286323547363

Token 299: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.07889000326395035
    2. 'p' → logprob: -2.578890085220337
    3. '*p' → logprob: -15.703889846801758
    4. ' ' → logprob: -17.203889846801758
    5. ',p' → logprob: -17.328889846801758
    6. '	p' → logprob: -17.328889846801758
    7. '    ' → logprob: -17.828889846801758
    8. '(p' → logprob: -18.453889846801758
    9. '   ' → logprob: -18.703889846801758
    10. '  ' → logprob: -18.703889846801758

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010270876373397186
    2. '=' → logprob: -9.375102996826172
    3. ' ,' → logprob: -11.625102996826172
    4. ' =' → logprob: -12.125102996826172
    5. ',q' → logprob: -12.875102996826172
    6. ',p' → logprob: -14.500102996826172
    7. '<|end|>' → logprob: -16.250102996826172
    8. '‌,' → logprob: -16.500102996826172
    9. ',n' → logprob: -16.875102996826172
    10. '_,' → logprob: -17.500102996826172

Token 301: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01814994215965271
    2. ' q' → logprob: -4.0181498527526855
    3. '	q' → logprob: -16.768150329589844
    4. '   ' → logprob: -19.143150329589844
    5. '    ' → logprob: -19.143150329589844
    6. ' ' → logprob: -19.768150329589844
    7. '_q' → logprob: -21.143150329589844
    8. 'p' → logprob: -21.393150329589844
    9. ',q' → logprob: -21.518150329589844
    10. '  ' → logprob: -21.518150329589844

Token 302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687199354171753
    2. ' =' → logprob: -1.1368720531463623
    3. ',' → logprob: -14.511872291564941
    4. ')' → logprob: -15.386872291564941
    5. '   ' → logprob: -16.011871337890625
    6. ' ' → logprob: -17.136871337890625
    7. '  ' → logprob: -17.386871337890625
    8. '=input' → logprob: -17.386871337890625
    9. ')=' → logprob: -17.636871337890625
    10. '<|end|>' → logprob: -17.636871337890625

Token 303: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.029750604182481766
    2. ' read' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.52975082397461
    4. '	read' → logprob: -20.15475082397461
    5. '  ' → logprob: -21.40475082397461
    6. '(read' → logprob: -22.90475082397461
    7. ' ' → logprob: -23.65475082397461
    8. '_read' → logprob: -24.27975082397461
    9. '.read' → logprob: -24.40475082397461
    10. '    ' → logprob: -25.02975082397461

Token 304: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0005519599071703851
    2. '()' → logprob: -7.875552177429199
    3. '_' → logprob: -8.7505521774292
    4. '_line' → logprob: -12.5005521774292
    5. 'input' → logprob: -13.1255521774292
    6. '()
' → logprob: -13.3755521774292
    7. '(' → logprob: -13.6255521774292
    8. '_inputs' → logprob: -13.7505521774292
    9. '```' → logprob: -14.1255521774292
    10. '_output' → logprob: -14.3755521774292

Token 305: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6317251324653625
    2. '()' → logprob: -1.1317250728607178
    3. '   ' → logprob: -2.5067250728607178
    4. '
' → logprob: -2.7567250728607178
    5. '    
' → logprob: -7.881725311279297
    6. 'print' → logprob: -9.381725311279297
    7. '()\' → logprob: -9.381725311279297
    8. '<|end|>' → logprob: -9.631725311279297
    9. '()
' → logprob: -9.881725311279297
    10. '  
' → logprob: -10.131725311279297

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003458468010649085
    2. 'print' → logprob: -6.003458499908447
    3. 'result' → logprob: -7.003458499908447
    4. '```' → logprob: -10.378458023071289
    5. ' print' → logprob: -10.628458023071289
    6. ' result' → logprob: -11.503458023071289
    7. 'diff' → logprob: -12.378458023071289
    8. '    
' → logprob: -13.378458023071289
    9. '
' → logprob: -13.878458023071289
    10. 'd' → logprob: -14.378458023071289

Token 307: ' diff' (ID: 8868)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011973613873124123
    2. 'diff' (adapté à ' diff') → logprob: -4.7619733810424805
    3. 'result' → logprob: -5.7619733810424805
    4. '   ' → logprob: -8.76197338104248
    5. ' print' → logprob: -10.13697338104248
    6. 'difference' → logprob: -12.38697338104248
    7. 'res' → logprob: -12.63697338104248
    8. '```' → logprob: -12.88697338104248
    9. 'ans' → logprob: -14.26197338104248
    10. 'd' → logprob: -14.38697338104248

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07019851356744766
    2. '=' → logprob: -2.6951985359191895
    3. '_' → logprob: -9.070198059082031
    4. 'er' → logprob: -9.820198059082031
    5. ' ' → logprob: -10.945198059082031
    6. '()' → logprob: -10.945198059082031
    7. '   ' → logprob: -11.070198059082031
    8. 'ence' → logprob: -11.445198059082031
    9. ' ' → logprob: -11.695198059082031
    10. ')' → logprob: -12.195198059082031

Token 309: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.2014133334159851
    2. ' compute' → logprob: -1.7014133930206299
    3. '   ' → logprob: -20.451414108276367
    4. '.compute' → logprob: -21.451414108276367
    5. 'comput' → logprob: -21.701414108276367
    6. 'computer' → logprob: -21.826414108276367
    7. '_compute' → logprob: -21.826414108276367
    8. ' ' → logprob: -23.326414108276367
    9. 'computed' → logprob: -23.826414108276367
    10. 'calculate' → logprob: -24.201414108276367

Token 310: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -2.2200749754119897e-06
    2. 'difference' → logprob: -13.125001907348633
    3. '_' → logprob: -16.750001907348633
    4. ' difference' → logprob: -16.875001907348633
    5. '_d' → logprob: -17.500001907348633
    6. '_diff' → logprob: -18.125001907348633
    7. '_distance' → logprob: -18.500001907348633
    8. 'Difference' → logprob: -19.250001907348633
    9. ' _' → logprob: -19.625001907348633
    10. '_factor' → logprob: -19.750001907348633

Token 311: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.0948158382670954e-05
    2. '(' → logprob: -10.500030517578125
    3. ' (' → logprob: -12.625030517578125
    4. '```' → logprob: -16.875030517578125
    5. '(len' → logprob: -17.500030517578125
    6. 'n' → logprob: -18.500030517578125
    7. '(
' → logprob: -19.000030517578125
    8. '\(' → logprob: -19.500030517578125
    9. '   ' → logprob: -19.750030517578125
    10. ' ' → logprob: -20.000030517578125

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03474956005811691
    2. '(n' → logprob: -3.6597495079040527
    3. ',n' → logprob: -5.409749507904053
    4. '(' → logprob: -5.659749507904053
    5. ' ,' → logprob: -8.284749984741211
    6. ')' → logprob: -8.784749984741211
    7. ',
' → logprob: -10.534749984741211
    8. ' (' → logprob: -11.659749984741211
    9. 'n' → logprob: -12.409749984741211
    10. ',(' → logprob: -12.784749984741211

Token 313: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005294238682836294
    2. ' p' → logprob: -5.255294322967529
    3. 'n' → logprob: -9.880293846130371
    4. ' n' → logprob: -12.005293846130371
    5. '   ' → logprob: -13.255293846130371
    6. 'q' → logprob: -14.255293846130371
    7. ' ' → logprob: -14.505293846130371
    8. '
' → logprob: -16.380294799804688
    9. '  ' → logprob: -16.880294799804688
    10. '    ' → logprob: -17.005294799804688

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.953082341467962e-05
    2. ',q' → logprob: -10.500039100646973
    3. ' ,' → logprob: -11.375039100646973
    4. ')' → logprob: -15.375039100646973
    5. ',
' → logprob: -16.00004005432129
    6. '   ' → logprob: -16.62504005432129
    7. 'q' → logprob: -17.50004005432129
    8. '),' → logprob: -19.25004005432129
    9. '‌,' → logprob: -19.25004005432129
    10. ' ' → logprob: -19.37504005432129

Token 315: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.01815146580338478
    2. ' q' → logprob: -4.01815128326416
    3. '   ' → logprob: -14.14315128326416
    4. ' ' → logprob: -14.39315128326416
    5. '	q' → logprob: -15.89315128326416
    6. '    ' → logprob: -16.893152236938477
    7. '  ' → logprob: -17.393152236938477
    8. '
' → logprob: -17.518152236938477
    9. 'diff' → logprob: -17.768152236938477
    10. ')' → logprob: -18.018152236938477

Token 316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10023729503154755
    2. ')
' → logprob: -2.3502373695373535
    3. '   ' → logprob: -10.850236892700195
    4. ')
' → logprob: -11.475236892700195
    5. ' )' → logprob: -15.350236892700195
    6. '())
' → logprob: -15.600236892700195
    7. '()' → logprob: -15.600236892700195
    8. ' )
' → logprob: -16.100236892700195
    9. '())' → logprob: -16.100236892700195
    10. ')

' → logprob: -16.725236892700195

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004924070090055466
    2. 'print' → logprob: -5.379924297332764
    3. '
' → logprob: -8.254923820495605
    4. ' print' → logprob: -10.504923820495605
    5. '    
' → logprob: -11.879923820495605
    6. '```' → logprob: -12.254923820495605
    7. '	print' → logprob: -12.504923820495605
    8. '
' → logprob: -15.379923820495605
    9. '<|end|>' → logprob: -15.629923820495605
    10. '(print' → logprob: -16.004924774169922

Token 318: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.56233171664644e-05
    2. ' print' → logprob: -10.000055313110352
    3. '   ' → logprob: -11.500055313110352
    4. '	print' → logprob: -20.62505531311035
    5. '```' → logprob: -20.75005531311035
    6. 'pr' → logprob: -23.12505531311035
    7. '_print' → logprob: -23.37505531311035
    8. 'printf' → logprob: -23.50005531311035
    9. '
' → logprob: -23.62505531311035
    10. '#print' → logprob: -23.87505531311035

Token 319: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.048593275249004364
    2. '(' → logprob: -3.048593282699585
    3. '()' → logprob: -12.673593521118164
    4. '(f' → logprob: -13.423593521118164
    5. 'diff' → logprob: -14.173593521118164
    6. '(abs' → logprob: -15.048593521118164
    7. '(
' → logprob: -16.048593521118164
    8. ' (' → logprob: -16.173593521118164
    9. '(

' → logprob: -18.048593521118164
    10. ' diff' → logprob: -18.048593521118164

Token 320: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. '()' → logprob: -16.25
    4. '())' → logprob: -16.625
    5. ' )' → logprob: -16.875
    6. ')`' → logprob: -17.625
    7. '`)' → logprob: -19.25
    8. '')' → logprob: -19.375
    9. '))' → logprob: -19.875
    10. '   ' → logprob: -20.0

Token 321: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003389329882338643
    2. '
' → logprob: -5.753389358520508
    3. 'main' → logprob: -9.253389358520508
    4. ' if' → logprob: -9.753389358520508
    5. '\n' → logprob: -10.128389358520508
    6. '```' → logprob: -11.253389358520508
    7. '  
' → logprob: -13.503389358520508
    8. '    
' → logprob: -14.003389358520508
    9. '\' → logprob: -14.003389358520508
    10. '<|end|>' → logprob: -14.503389358520508

Token 322: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 320
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 286
Précision stricte (1ère position): 50.94%
Précision adaptée (1ère position): 53.44%
Précision (top 10): 89.38%
================================================================================
