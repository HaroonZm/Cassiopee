================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import product, chain
import sys
import math

input = sys.stdin.readline

N, *_ = map(int, [input()] + [''])
xy = [tuple(map(int, input().split())) for _ in range(N)]

pairs = filter(lambda t: t[0] != t[1], product(range(N), repeat=2))

sm = reduce(
    lambda acc, ij: acc + math.hypot(*(a-b for a, b in zip(xy[ij[0]], xy[ij[1]]))),
    pairs,
    0
)

print((lambda s, n: (lambda: s/n)())(sm, N))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.6389057636260986
    2. 'partial' → logprob: -0.8889057636260986
    3. 'reduce' → logprob: -3.5139057636260986
    4. ' wraps' → logprob: -3.7639057636260986
    5. 'l' → logprob: -5.1389055252075195
    6. ' partial' → logprob: -6.6389055252075195
    7. 'cached' → logprob: -8.38890552520752
    8. 'cache' → logprob: -8.51390552520752
    9. ' l' → logprob: -8.63890552520752
    10. 'cmp' → logprob: -9.01390552520752

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01667022332549095
    2. 'import' → logprob: -4.141670227050781
    3. '.' → logprob: -7.891670227050781
    4. ' ' → logprob: -9.141670227050781
    5. ' .' → logprob: -9.516670227050781
    6. '.import' → logprob: -9.891670227050781
    7. '	import' → logprob: -11.391670227050781
    8. '_import' → logprob: -12.016670227050781
    9. ' itertools' → logprob: -12.641670227050781
    10. '<|end|>' → logprob: -13.391670227050781

Token 8: ' product' (ID: 1888)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.4097050726413727
    2. 'group' → logprob: -2.15970516204834
    3. ' accumulate' → logprob: -2.90970516204834
    4. 'acc' → logprob: -3.40970516204834
    5. 'count' → logprob: -3.40970516204834
    6. ' cycle' → logprob: -3.53470516204834
    7. ' chain' → logprob: -3.53470516204834
    8. 'cycle' → logprob: -4.28470516204834
    9. 'chain' → logprob: -4.40970516204834
    10. ' count' → logprob: -5.03470516204834

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009228141978383064
    2. '(
' → logprob: -4.884228229522705
    3. 'def' → logprob: -7.509228229522705
    4. '\' → logprob: -8.259227752685547
    5. '\(' → logprob: -8.509227752685547
    6. ',' → logprob: -9.009227752685547
    7. '```' → logprob: -9.134227752685547
    8. '\n' → logprob: -9.384227752685547
    9. '.' → logprob: -9.884227752685547
    10. '`' → logprob: -10.009227752685547

Token 10: ' chain' (ID: 13464)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8691578507423401
    2. 'count' → logprob: -1.7441577911376953
    3. 'acc' → logprob: -2.3691577911376953
    4. 'st' → logprob: -2.4941577911376953
    5. 'cycle' → logprob: -2.8691577911376953
    6. ' permutations' → logprob: -3.2441577911376953
    7. 'per' → logprob: -3.6191577911376953
    8. 'repeat' → logprob: -3.8691577911376953
    9. 'chain' → logprob: -3.9941577911376953
    10. ' combinations' → logprob: -4.619157791137695

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10611515492200851
    2. '(
' → logprob: -3.6061151027679443
    3. '\n' → logprob: -3.9811151027679443
    4. '\' → logprob: -3.9811151027679443
    5. '.' → logprob: -4.106115341186523
    6. 'def' → logprob: -4.731115341186523
    7. ',' → logprob: -5.231115341186523
    8. '```' → logprob: -6.481115341186523
    9. 'import' → logprob: -6.856115341186523
    10. '[' → logprob: -7.606115341186523

Token 12: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20359383523464203
    2. '(
' → logprob: -2.4535937309265137
    3. 'def' → logprob: -2.5785937309265137
    4. ',' → logprob: -4.703593730926514
    5. '\' → logprob: -6.078593730926514
    6. '```' → logprob: -6.078593730926514
    7. '`' → logprob: -6.578593730926514
    8. '[' → logprob: -6.703593730926514
    9. '\n' → logprob: -6.828593730926514
    10. '.' → logprob: -6.828593730926514

Token 13: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9452400207519531
    2. ' itertools' → logprob: -1.4452400207519531
    3. ' os' → logprob: -2.070240020751953
    4. ' math' → logprob: -2.445240020751953
    5. ' collections' → logprob: -2.445240020751953
    6. ' re' → logprob: -3.070240020751953
    7. ' functools' → logprob: -4.695240020751953
    8. ' numpy' → logprob: -4.945240020751953
    9. ' operator' → logprob: -4.945240020751953
    10. ' sys' → logprob: -6.195240020751953

Token 14: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0225820541381836
    2. '\' → logprob: -1.5225820541381836
    3. '.' → logprob: -2.2725820541381836
    4. '
' → logprob: -2.3975820541381836
    5. '```' → logprob: -2.7725820541381836
    6. 'def' → logprob: -2.8975820541381836
    7. ',' → logprob: -3.0225820541381836
    8. 'import' → logprob: -4.397582054138184
    9. '

' → logprob: -4.397582054138184
    10. '<|end|>' → logprob: -4.647582054138184

Token 15: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3376866579055786
    2. 'def' → logprob: -1.4626866579055786
    3. '.' → logprob: -2.212686538696289
    4. '\n' → logprob: -2.212686538696289
    5. '
' → logprob: -2.587686538696289
    6. '```' → logprob: -2.962686538696289
    7. '\' → logprob: -3.337686538696289
    8. 'import' → logprob: -3.462686538696289
    9. '#' → logprob: -3.837686538696289
    10. '[' → logprob: -3.962686538696289

Token 16: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.020461183041334152
    2. ' math' → logprob: -4.270461082458496
    3. ' re' → logprob: -6.020461082458496
    4. 'os' → logprob: -6.645461082458496
    5. ' collections' → logprob: -6.895461082458496
    6. ' operator' → logprob: -7.020461082458496
    7. ' io' → logprob: -8.895461082458496
    8. ' functools' → logprob: -8.895461082458496
    9. ' built' → logprob: -9.520461082458496
    10. ' itertools' → logprob: -9.645461082458496

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5679246783256531
    2. '

' → logprob: -1.5679247379302979
    3. 'import' → logprob: -2.442924737930298
    4. '\n' → logprob: -2.942924737930298
    5. 'def' → logprob: -3.942924737930298
    6. '```' → logprob: -3.942924737930298
    7. '\' → logprob: -4.192924499511719
    8. ',' → logprob: -4.692924499511719
    9. '<|end|>' → logprob: -4.692924499511719
    10. '#' → logprob: -6.067924499511719

Token 18: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10455796867609024
    2. '```' → logprob: -2.854557991027832
    3. '\' → logprob: -4.354557991027832
    4. ',' → logprob: -4.604557991027832
    5. '#' → logprob: -5.479557991027832
    6. 'import' → logprob: -5.604557991027832
    7. '\n' → logprob: -5.729557991027832
    8. '.' → logprob: -6.729557991027832
    9. '=' → logprob: -6.729557991027832
    10. '`' → logprob: -6.854557991027832

Token 19: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023950329050421715
    2. '.' → logprob: -6.377395153045654
    3. '_' → logprob: -8.502394676208496
    4. '(
' → logprob: -9.252394676208496
    5. '()' → logprob: -9.627394676208496
    6. ')' → logprob: -10.127394676208496
    7. '=' → logprob: -10.377394676208496
    8. ''' → logprob: -10.377394676208496
    9. '```' → logprob: -10.377394676208496
    10. '_data' → logprob: -10.627394676208496

Token 20: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1275060623884201
    2. 'sys' → logprob: -2.1275060176849365
    3. 'input' → logprob: -8.252506256103516
    4. ' input' → logprob: -8.377506256103516
    5. ' lambda' → logprob: -9.877506256103516
    6. 'lambda' → logprob: -11.127506256103516
    7. '	sys' → logprob: -12.002506256103516
    8. '(sys' → logprob: -12.127506256103516
    9. '=sys' → logprob: -12.127506256103516
    10. ' ' → logprob: -13.127506256103516

Token 21: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1445099413394928
    2. '.stdin' → logprob: -2.01951003074646
    3. '.stdout' → logprob: -7.394509792327881
    4. ' .' → logprob: -7.769509792327881
    5. '.readline' → logprob: -7.769509792327881
    6. '.argv' → logprob: -9.769510269165039
    7. '.input' → logprob: -9.769510269165039
    8. '.std' → logprob: -9.769510269165039
    9. '.read' → logprob: -10.269510269165039
    10. '.get' → logprob: -10.394510269165039

Token 22: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5389803647994995
    2. '.readline' → logprob: -0.9139803647994995
    3. '.read' → logprob: -4.163980484008789
    4. '.readlines' → logprob: -9.413980484008789
    5. 'read' → logprob: -9.538980484008789
    6. '.Read' → logprob: -11.663980484008789
    7. '<|end|>' → logprob: -12.538980484008789
    8. '```' → logprob: -13.038980484008789
    9. '.write' → logprob: -13.288980484008789
    10. '.buffer' → logprob: -13.788980484008789

Token 23: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7067686915397644
    2. '
' → logprob: -1.0817687511444092
    3. '(
' → logprob: -2.831768751144409
    4. 'def' → logprob: -3.581768751144409
    5. '()' → logprob: -3.956768751144409
    6. '

' → logprob: -4.20676851272583
    7. '\n' → logprob: -4.83176851272583
    8. '\' → logprob: -5.08176851272583
    9. '#' → logprob: -5.58176851272583
    10. '<|end|>' → logprob: -5.95676851272583

Token 24: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5849402546882629
    2. 'n' → logprob: -0.8349402546882629
    3. 'd' → logprob: -6.209940433502197
    4. 'a' → logprob: -6.459940433502197
    5. '
' → logprob: -6.959940433502197
    6. '\' → logprob: -7.084940433502197
    7. '(n' → logprob: -7.209940433502197
    8. '#' → logprob: -7.459940433502197
    9. 'for' → logprob: -7.834940433502197
    10. '(' → logprob: -8.584939956665039

Token 25: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6239991784095764
    2. ' =' → logprob: -0.9989991784095764
    3. '=' → logprob: -2.8739991188049316
    4. ',' → logprob: -3.7489991188049316
    5. '<|end|>' → logprob: -5.248999118804932
    6. ' ,' → logprob: -5.373999118804932
    7. ')' → logprob: -5.623999118804932
    8. '  ' → logprob: -7.623999118804932
    9. ' )' → logprob: -7.623999118804932
    10. 'space' → logprob: -8.49899959564209

Token 26: ' *_' (ID: 48354)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6807517409324646
    2. ' K' → logprob: -1.3057518005371094
    3. 'M' → logprob: -1.8057518005371094
    4. 'K' → logprob: -2.9307518005371094
    5. ' ' → logprob: -5.430751800537109
    6. '=' → logprob: -9.30575180053711
    7. '  ' → logprob: -9.43075180053711
    8. 'Q' → logprob: -9.55575180053711
    9. 'input' → logprob: -9.68075180053711
    10. ' =' → logprob: -9.80575180053711

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008703332394361496
    2. ' =' → logprob: -4.758703231811523
    3. ',' → logprob: -10.258703231811523
    4. 's' → logprob: -10.883703231811523
    5. '=input' → logprob: -12.258703231811523
    6. '_=' → logprob: -12.508703231811523
    7. 'A' → logprob: -12.883703231811523
    8. '*' → logprob: -13.008703231811523
    9. 'input' → logprob: -13.258703231811523
    10. 'M' → logprob: -13.258703231811523

Token 28: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.005694842431694269
    2. ' map' → logprob: -5.50569486618042
    3. 'input' → logprob: -7.13069486618042
    4. 'list' → logprob: -7.13069486618042
    5. ' input' → logprob: -12.380694389343262
    6. ' list' → logprob: -12.380694389343262
    7. '[' → logprob: -13.255694389343262
    8. '(map' → logprob: -13.380694389343262
    9. 'int' → logprob: -13.505694389343262
    10. '```' → logprob: -14.505694389343262

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0018279805080965161
    2. '(' → logprob: -6.501828193664551
    3. '(input' → logprob: -8.25182819366455
    4. '(str' → logprob: -9.87682819366455
    5. 'int' → logprob: -12.12682819366455
    6. '(eval' → logprob: -12.87682819366455
    7. '(list' → logprob: -13.37682819366455
    8. '(lambda' → logprob: -13.62682819366455
    9. '(tuple' → logprob: -14.37682819366455
    10. 'input' → logprob: -14.37682819366455

Token 30: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.021395936608314514
    2. 'input' → logprob: -4.521396160125732
    3. '(' → logprob: -5.271396160125732
    4. ',input' → logprob: -5.771396160125732
    5. ')' → logprob: -6.521396160125732
    6. ',' → logprob: -8.271395683288574
    7. '(sys' → logprob: -8.396395683288574
    8. ' input' → logprob: -10.521395683288574
    9. '(
' → logprob: -10.896395683288574
    10. '=input' → logprob: -11.021395683288574

Token 31: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12693998217582703
    2. ' input' → logprob: -2.1269400119781494
    3. ')' → logprob: -11.87693977355957
    4. '(input' → logprob: -12.87693977355957
    5. '=input' → logprob: -14.75193977355957
    6. '[input' → logprob: -14.87693977355957
    7. ',input' → logprob: -14.87693977355957
    8. '	input' → logprob: -15.12693977355957
    9. 'list' → logprob: -15.37693977355957
    10. ' ' → logprob: -15.62693977355957

Token 32: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019532525911927223
    2. ' input' → logprob: -6.251953125
    3. '*' → logprob: -12.251953125
    4. '(input' → logprob: -12.251953125
    5. ']' → logprob: -12.876953125
    6. '<input' → logprob: -13.126953125
    7. ')' → logprob: -13.626953125
    8. '```' → logprob: -13.626953125
    9. '0' → logprob: -13.876953125
    10. '1' → logprob: -14.001953125

Token 33: '()]' (ID: 59063)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5877420902252197
    2. '().' → logprob: -0.8377420902252197
    3. '()]' → logprob: -4.462741851806641
    4. '()].' → logprob: -9.08774185180664
    5. '()][' → logprob: -10.33774185180664
    6. '())' → logprob: -10.71274185180664
    7. '()],' → logprob: -11.46274185180664
    8. '()[' → logprob: -12.21274185180664
    9. ']()' → logprob: -12.58774185180664
    10. ' ()' → logprob: -12.96274185180664

Token 34: ' +' (ID: 659)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03965486213564873
    2. '())' → logprob: -3.4146549701690674
    3. '.strip' → logprob: -6.039654731750488
    4. ')' → logprob: -6.164654731750488
    5. '()' → logprob: -6.664654731750488
    6. '()[' → logprob: -9.289654731750488
    7. 'strip' → logprob: -10.414654731750488
    8. '.split' → logprob: -10.789654731750488
    9. '.rstrip' → logprob: -10.789654731750488
    10. '(' → logprob: -10.914654731750488

Token 35: ' ['' (ID: 5140)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5722106695175171
    2. '[input' → logprob: -1.072210669517517
    3. ' input' → logprob: -2.6972107887268066
    4. 'list' → logprob: -4.197210788726807
    5. '[' → logprob: -5.072210788726807
    6. ' [' → logprob: -6.197210788726807
    7. ' list' → logprob: -6.697210788726807
    8. '[list' → logprob: -7.572210788726807
    9. '(input' → logprob: -7.822210788726807
    10. 'sys' → logprob: -8.572210311889648

Token 36: ''])
' (ID: 16733)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008872182108461857
    2. ' input' → logprob: -5.133872032165527
    3. '(input' → logprob: -5.883872032165527
    4. 'list' → logprob: -10.258872032165527
    5. '(' → logprob: -10.633872032165527
    6. ' ' → logprob: -11.758872032165527
    7. '<input' → logprob: -11.758872032165527
    8. '[input' → logprob: -11.883872032165527
    9. ']' → logprob: -12.008872032165527
    10. '*' → logprob: -12.133872032165527

Token 37: 'xy' (ID: 6077)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8423985838890076
    2. '()' → logprob: -1.4673986434936523
    3. '().' → logprob: -1.7173986434936523
    4. '.strip' → logprob: -2.4673986434936523
    5. '())' → logprob: -3.3423986434936523
    6. '.split' → logprob: -3.4673986434936523
    7. '.' → logprob: -6.217398643493652
    8. '(' → logprob: -6.342398643493652
    9. '[' → logprob: -6.967398643493652
    10. 'split' → logprob: -7.092398643493652

Token 38: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2958516478538513
    2. '=' → logprob: -1.795851707458496
    3. ' =' → logprob: -2.420851707458496
    4. '_' → logprob: -7.420851707458496
    5. '_pairs' → logprob: -8.420851707458496
    6. '=[]' → logprob: -9.045851707458496
    7. '_list' → logprob: -9.420851707458496
    8. '_s' → logprob: -10.170851707458496
    9. 'pairs' → logprob: -10.420851707458496
    10. ')' → logprob: -10.670851707458496

Token 39: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2626482248306274
    2. '[]' → logprob: -1.2626482248306274
    3. 'list' → logprob: -1.3876482248306274
    4. '[list' → logprob: -1.7626482248306274
    5. '[input' → logprob: -5.762648105621338
    6. '[int' → logprob: -6.012648105621338
    7. '[(' → logprob: -6.137648105621338
    8. '[x' → logprob: -6.762648105621338
    9. '[line' → logprob: -7.762648105621338
    10. 'map' → logprob: -8.012648582458496

Token 40: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.18524965643882751
    2. 'list' → logprob: -1.81024968624115
    3. ' tuple' → logprob: -6.1852498054504395
    4. '(tuple' → logprob: -6.5602498054504395
    5. 'map' → logprob: -7.0602498054504395
    6. '(list' → logprob: -7.5602498054504395
    7. '*' → logprob: -8.435249328613281
    8. ' list' → logprob: -8.560249328613281
    9. ']' → logprob: -9.310249328613281
    10. '(*' → logprob: -10.435249328613281

Token 41: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0008061755215749145
    2. 'map' → logprob: -7.2508063316345215
    3. '(' → logprob: -9.500805854797363
    4. '(int' → logprob: -11.375805854797363
    5. '(input' → logprob: -12.750805854797363
    6. '()' → logprob: -13.125805854797363
    7. ' map' → logprob: -13.625805854797363
    8. '_map' → logprob: -14.125805854797363
    9. '(
' → logprob: -14.875805854797363
    10. '	map' → logprob: -14.875805854797363

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00022594700567424297
    2. 'int' → logprob: -9.500226020812988
    3. '(' → logprob: -10.000226020812988
    4. ',int' → logprob: -10.125226020812988
    5. '<|end|>' → logprob: -10.500226020812988
    6. '[int' → logprob: -11.250226020812988
    7. '<int' → logprob: -11.375226020812988
    8. ')' → logprob: -12.500226020812988
    9. ']int' → logprob: -12.500226020812988
    10. '<|end|>' → logprob: -13.625226020812988

Token 43: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.435960054397583
    2. ',' → logprob: -1.060960054397583
    3. '(input' → logprob: -5.435959815979004
    4. 'input' → logprob: -5.935959815979004
    5. ' ,' → logprob: -10.310959815979004
    6. '(' → logprob: -10.435959815979004
    7. ',(' → logprob: -10.560959815979004
    8. ',[' → logprob: -10.685959815979004
    9. '[input' → logprob: -10.685959815979004
    10. '),' → logprob: -10.810959815979004

Token 44: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08958521485328674
    2. ' input' → logprob: -2.464585304260254
    3. '[input' → logprob: -7.589585304260254
    4. '(input' → logprob: -9.839585304260254
    5. '[' → logprob: -10.214585304260254
    6. 'x' → logprob: -11.464585304260254
    7. ' ' → logprob: -11.589585304260254
    8. ',input' → logprob: -11.714585304260254
    9. ')' → logprob: -12.339585304260254
    10. '=input' → logprob: -12.714585304260254

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -13.12500286102295
    3. '()))' → logprob: -14.87500286102295
    4. ' ().' → logprob: -14.87500286102295
    5. '.readline' → logprob: -16.875003814697266
    6. '(' → logprob: -17.375003814697266
    7. '()
' → logprob: -17.875003814697266
    8. 'split' → logprob: -18.125003814697266
    9. '.split' → logprob: -18.125003814697266
    10. ' ' → logprob: -19.000003814697266

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16107523441314697
    2. 'strip' → logprob: -1.911075234413147
    3. 'rstrip' → logprob: -7.161075115203857
    4. 'read' → logprob: -9.536075592041016
    5. ' split' → logprob: -14.161075592041016
    6. '(split' → logprob: -14.536075592041016
    7. ')' → logprob: -14.911075592041016
    8. '().' → logprob: -15.286075592041016
    9. 'replace' → logprob: -15.911075592041016
    10. 'rs' → logprob: -16.286075592041016

Token 47: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.39033541083335876
    2. '))' → logprob: -1.1403354406356812
    3. '()' → logprob: -6.390335559844971
    4. '())' → logprob: -6.640335559844971
    5. ')' → logprob: -8.265335083007812
    6. '(' → logprob: -8.890335083007812
    7. '()))
' → logprob: -10.390335083007812
    8. '()),' → logprob: -11.640335083007812
    9. ''))' → logprob: -11.765335083007812
    10. '),' → logprob: -12.140335083007812

Token 48: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.649579644203186
    2. ')' → logprob: -0.899579644203186
    3. 'for' → logprob: -2.7745795249938965
    4. '())' → logprob: -5.2745795249938965
    5. ' for' → logprob: -5.8995795249938965
    6. ')]' → logprob: -7.5245795249938965
    7. '(' → logprob: -9.774580001831055
    8. '()]' → logprob: -9.899580001831055
    9. ' ' → logprob: -10.649580001831055
    10. ']' → logprob: -11.149580001831055

Token 49: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008458074182271957
    2. ' range' → logprob: -5.133458137512207
    3. 'range' → logprob: -6.133458137512207
    4. ' _' → logprob: -8.133458137512207
    5. '_range' → logprob: -10.008458137512207
    6. '_i' → logprob: -11.883458137512207
    7. '(range' → logprob: -12.383458137512207
    8. ' in' → logprob: -12.508458137512207
    9. '	range' → logprob: -14.133458137512207
    10. 'i' → logprob: -14.133458137512207

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04309898614883423
    2. 'in' → logprob: -3.1680989265441895
    3. 'range' → logprob: -9.418099403381348
    4. ' range' → logprob: -12.418099403381348
    5. 'i' → logprob: -12.543099403381348
    6. '_' → logprob: -12.918099403381348
    7. ' ' → logprob: -12.918099403381348
    8. 'N' → logprob: -13.793099403381348
    9. ' _' → logprob: -14.043099403381348
    10. '(' → logprob: -14.293099403381348

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002834111684933305
    2. ' range' → logprob: -5.877834320068359
    3. '[' → logprob: -11.12783432006836
    4. '(range' → logprob: -11.87783432006836
    5. 'r' → logprob: -13.62783432006836
    6. 'x' → logprob: -14.00283432006836
    7. '	range' → logprob: -14.12783432006836
    8. ' ' → logprob: -14.37783432006836
    9. 'rang' → logprob: -14.37783432006836
    10. '```' → logprob: -14.50283432006836

Token 52: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0006463141762651503
    2. '(' → logprob: -7.375646114349365
    3. 'N' → logprob: -11.500646591186523
    4. '(n' → logprob: -11.875646591186523
    5. ' (' → logprob: -13.625646591186523
    6. '(
' → logprob: -13.875646591186523
    7. '(int' → logprob: -15.625646591186523
    8. '((' → logprob: -16.375646591186523
    9. ' N' → logprob: -16.625646591186523
    10. ')' → logprob: -17.250646591186523

Token 53: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.1080467781284824e-05
    2. ')' → logprob: -10.625041007995605
    3. ']' → logprob: -11.500041007995605
    4. ')])' → logprob: -12.875041007995605
    5. '])]' → logprob: -13.625041007995605
    6. '')]' → logprob: -14.125041007995605
    7. '])' → logprob: -14.875041007995605
    8. ')]
' → logprob: -15.000041007995605
    9. ')],' → logprob: -15.125041007995605
    10. ' )' → logprob: -15.125041007995605

Token 54: 'pairs' (ID: 175838)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8051825761795044
    2. '
' → logprob: -1.1801825761795044
    3. 'x' → logprob: -2.930182456970215
    4. '#' → logprob: -2.930182456970215
    5. 'for' → logprob: -3.180182456970215
    6. ']' → logprob: -3.680182456970215
    7. ',' → logprob: -4.430182456970215
    8. '*' → logprob: -4.680182456970215
    9. ' ' → logprob: -5.430182456970215
    10. '=' → logprob: -5.555182456970215

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38195285201072693
    2. '=' → logprob: -1.2569528818130493
    3. '(' → logprob: -4.13195276260376
    4. '<|end|>' → logprob: -5.25695276260376
    5. ')' → logprob: -5.75695276260376
    6. '_' → logprob: -5.75695276260376
    7. 's' → logprob: -6.50695276260376
    8. '_pairs' → logprob: -6.50695276260376
    9. '[' → logprob: -7.50695276260376
    10. '=[]' → logprob: -7.88195276260376

Token 56: ' filter' (ID: 6690)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7802636623382568
    2. 'product' → logprob: -0.7802636623382568
    3. ' list' → logprob: -3.530263662338257
    4. ' product' → logprob: -3.780263662338257
    5. 'chain' → logprob: -4.280263900756836
    6. 'com' → logprob: -4.530263900756836
    7. '[(' → logprob: -6.280263900756836
    8. '[' → logprob: -6.905263900756836
    9. '[]' → logprob: -7.030263900756836
    10. '(product' → logprob: -7.280263900756836

Token 57: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.11371888220310211
    2. '(None' → logprob: -2.8637189865112305
    3. '(' → logprob: -2.9887189865112305
    4. '(False' → logprob: -10.86371898651123
    5. '(bool' → logprob: -11.11371898651123
    6. '(
' → logprob: -11.23871898651123
    7. 'None' → logprob: -11.61371898651123
    8. '(len' → logprob: -12.11371898651123
    9. '(True' → logprob: -12.23871898651123
    10. '((' → logprob: -12.36371898651123

Token 58: ' t' (ID: 260)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.385858952999115
    2. '(lambda' → logprob: -2.1358590126037598
    3. ' x' → logprob: -2.3858590126037598
    4. 'lambda' → logprob: -2.3858590126037598
    5. 'x' → logprob: -5.63585901260376
    6. ' pair' → logprob: -5.88585901260376
    7. ' None' → logprob: -6.13585901260376
    8. '=lambda' → logprob: -6.51085901260376
    9. 'None' → logprob: -6.63585901260376
    10. ' (' → logprob: -6.88585901260376

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005439608823508024
    2. ' :' → logprob: -5.380439758300781
    3. ' t' → logprob: -7.755439758300781
    4. 't' → logprob: -8.505439758300781
    5. '=lambda' → logprob: -9.755439758300781
    6. ':t' → logprob: -9.880439758300781
    7. 'lambda' → logprob: -10.255439758300781
    8. ':
' → logprob: -11.505439758300781
    9. ',' → logprob: -12.630439758300781
    10. ' lambda' → logprob: -12.630439758300781

Token 60: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6515048742294312
    2. ' t' → logprob: -1.0265048742294312
    3. ' abs' → logprob: -2.9015049934387207
    4. 'abs' → logprob: -4.026504993438721
    5. 'len' → logprob: -4.401504993438721
    6. ' len' → logprob: -4.901504993438721
    7. ' all' → logprob: -4.901504993438721
    8. ' (' → logprob: -5.901504993438721
    9. '(abs' → logprob: -5.901504993438721
    10. ' math' → logprob: -6.026504993438721

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017816368490457535
    2. ' !=' → logprob: -5.392816543579102
    3. '!=' → logprob: -5.767816543579102
    4. ' and' → logprob: -6.017816543579102
    5. ')' → logprob: -6.142816543579102
    6. ' ' → logprob: -6.392816543579102
    7. ':' → logprob: -7.142816543579102
    8. 'and' → logprob: -7.517816543579102
    9. ' in' → logprob: -7.767816543579102
    10. ' is' → logprob: -8.017816543579102

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003111995756626129
    2. '1' → logprob: -6.253111839294434
    3. '[' → logprob: -7.878111839294434
    4. ' ' → logprob: -8.003111839294434
    5. ':' → logprob: -9.003111839294434
    6. '!=' → logprob: -9.503111839294434
    7. ' !=' → logprob: -9.628111839294434
    8. '...' → logprob: -10.753111839294434
    9. '2' → logprob: -10.940611839294434
    10. 'None' → logprob: -11.253111839294434

Token 63: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.77854323387146
    2. '!=' → logprob: -1.02854323387146
    3. '<' → logprob: -2.40354323387146
    4. ' !=' → logprob: -2.65354323387146
    5. ' <' → logprob: -5.028543472290039
    6. '==' → logprob: -5.403543472290039
    7. ')' → logprob: -6.653543472290039
    8. ' ' → logprob: -7.028543472290039
    9. ' is' → logprob: -7.278543472290039
    10. '>' → logprob: -7.403543472290039

Token 64: ' !=' (ID: 1666)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9681462645530701
    2. '!=' → logprob: -0.9681462645530701
    3. '<' → logprob: -1.8431463241577148
    4. ' !=' → logprob: -2.968146324157715
    5. ' <' → logprob: -4.218146324157715
    6. '==' → logprob: -4.843146324157715
    7. 'and' → logprob: -6.218146324157715
    8. ' and' → logprob: -6.718146324157715
    9. ' ' → logprob: -7.218146324157715
    10. ' ==' → logprob: -7.593146324157715

Token 65: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.28130945563316345
    2. ' t' → logprob: -1.4063094854354858
    3. ' ' → logprob: -9.031309127807617
    4. '1' → logprob: -11.156309127807617
    5. '   ' → logprob: -12.281309127807617
    6. '  ' → logprob: -12.281309127807617
    7. '<|end|>' → logprob: -13.031309127807617
    8. ')' → logprob: -13.281309127807617
    9. ')t' → logprob: -13.468809127807617
    10. '0' → logprob: -13.593809127807617

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01822357438504696
    2. '1' → logprob: -4.018223762512207
    3. ' ' → logprob: -11.393223762512207
    4. ',' → logprob: -11.643223762512207
    5. '.' → logprob: -11.643223762512207
    6. '][' → logprob: -11.643223762512207
    7. ' [' → logprob: -12.018223762512207
    8. ''s' → logprob: -12.518223762512207
    9. '   ' → logprob: -12.768223762512207
    10. 'and' → logprob: -12.893223762512207

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. '0' → logprob: -12.250008583068848
    3. ' ' → logprob: -12.875008583068848
    4. '```' → logprob: -15.500008583068848
    5. '   ' → logprob: -15.687508583068848
    6. '2' → logprob: -15.750008583068848
    7. '[' → logprob: -15.812508583068848
    8. '-' → logprob: -16.31250762939453
    9. '])' → logprob: -16.68750762939453
    10. ']' → logprob: -16.93750762939453

Token 68: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6961339116096497
    2. '),' → logprob: -0.6961339116096497
    3. ')' → logprob: -6.071134090423584
    4. '],' → logprob: -7.571134090423584
    5. ' ,' → logprob: -9.821133613586426
    6. ' and' → logprob: -10.571133613586426
    7. ' ),' → logprob: -10.696133613586426
    8. '},' → logprob: -11.196133613586426
    9. ',),' → logprob: -11.196133613586426
    10. 'and' → logprob: -11.946133613586426

Token 69: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.015665598213672638
    2. ' product' → logprob: -4.265665531158447
    3. 'chain' → logprob: -7.765665531158447
    4. 'com' → logprob: -8.015666007995605
    5. 'list' → logprob: -8.015666007995605
    6. '   ' → logprob: -8.390666007995605
    7. 'enumer' → logprob: -10.390666007995605
    8. '	product' → logprob: -10.515666007995605
    9. 'per' → logprob: -10.765666007995605
    10. 'pair' → logprob: -10.765666007995605

Token 70: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -3.953082341467962e-05
    2. 'range' → logprob: -10.375039100646973
    3. '(' → logprob: -12.125039100646973
    4. ' (' → logprob: -13.625039100646973
    5. ' range' → logprob: -14.500039100646973
    6. ')(' → logprob: -15.000039100646973
    7. ')' → logprob: -15.375039100646973
    8. '(x' → logprob: -15.875039100646973
    9. '((' → logprob: -16.12504005432129
    10. '([' → logprob: -16.25004005432129

Token 71: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0002776630863081664
    2. '(' → logprob: -8.250277519226074
    3. '(len' → logprob: -11.500277519226074
    4. 'N' → logprob: -12.875277519226074
    5. '(n' → logprob: -13.500277519226074
    6. ' (' → logprob: -13.625277519226074
    7. ')' → logprob: -15.125277519226074
    8. '(
' → logprob: -15.375277519226074
    9. ',N' → logprob: -16.12527847290039
    10. ')(' → logprob: -16.50027847290039

Token 72: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00019376569252926856
    2. ',' → logprob: -9.12519359588623
    3. ' ),' → logprob: -9.50019359588623
    4. ')' → logprob: -11.87519359588623
    5. '),(' → logprob: -13.50019359588623
    6. ',),' → logprob: -14.25019359588623
    7. ' ,' → logprob: -15.00019359588623
    8. ' ' → logprob: -15.37519359588623
    9. '},' → logprob: -16.000194549560547
    10. '   ' → logprob: -16.500194549560547

Token 73: ' repeat' (ID: 22962)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10023395717144012
    2. ' range' → logprob: -2.350234031677246
    3. 'repeat' → logprob: -11.475234031677246
    4. ' ' → logprob: -11.850234031677246
    5. '(range' → logprob: -12.350234031677246
    6. '	range' → logprob: -12.475234031677246
    7. '   ' → logprob: -14.100234031677246
    8. ' repeat' → logprob: -15.350234031677246
    9. '  ' → logprob: -15.475234031677246
    10. ' ' → logprob: -16.35023307800293

Token 74: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. '2' → logprob: -17.0
    4. ' =' → logprob: -17.75
    5. '=(' → logprob: -17.875
    6. ')=' → logprob: -19.0
    7. ')' → logprob: -19.0
    8. '=
' → logprob: -19.5
    9. '=}' → logprob: -19.625
    10. '=N' → logprob: -20.25

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013294065138325095
    2. ' ' → logprob: -6.62632942199707
    3. '3' → logprob: -13.12632942199707
    4. '   ' → logprob: -14.37632942199707
    5. '  ' → logprob: -15.50132942199707
    6. ')' → logprob: -16.00132942199707
    7. '```' → logprob: -16.06382942199707
    8. '4' → logprob: -16.12632942199707
    9. '1' → logprob: -16.37632942199707
    10. '(' → logprob: -17.43882942199707

Token 76: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00021271906734909862
    2. ')' → logprob: -8.500212669372559
    3. '))
' → logprob: -12.750212669372559
    4. ')))' → logprob: -12.875212669372559
    5. ' ))' → logprob: -13.375212669372559
    6. '),' → logprob: -13.625212669372559
    7. '))

' → logprob: -15.375212669372559
    8. '()))' → logprob: -15.625212669372559
    9. '));' → logprob: -15.875212669372559
    10. ')),' → logprob: -16.125213623046875

Token 77: 'sm' (ID: 5635)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04885055124759674
    2. 'for' → logprob: -4.1738505363464355
    3. ',' → logprob: -5.1738505363464355
    4. 'pairs' → logprob: -5.4238505363464355
    5. ':' → logprob: -5.7988505363464355
    6. '(' → logprob: -5.7988505363464355
    7. '[' → logprob: -6.2988505363464355
    8. '*' → logprob: -6.5488505363464355
    9. '<|end|>' → logprob: -6.6738505363464355
    10. '#' → logprob: -6.7988505363464355

Token 78: ' =' (ID: 314)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.4721551835536957
    2. 'all' → logprob: -1.597155213356018
    3. 's' → logprob: -2.9721550941467285
    4. ' =' → logprob: -3.8471550941467285
    5. '=' → logprob: -4.0971550941467285
    6. 'sum' → logprob: -4.3471550941467285
    7. 'alls' → logprob: -4.3471550941467285
    8. 'a' → logprob: -4.4721550941467285
    9. 'aps' → logprob: -5.0971550941467285
    10. 'al' → logprob: -5.3471550941467285

Token 79: ' reduce' (ID: 10389)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5811942219734192
    2. 'sum' → logprob: -2.2061941623687744
    3. '{' → logprob: -2.5811941623687744
    4. '{}' → logprob: -2.9561941623687744
    5. '[' → logprob: -3.0811941623687744
    6. '(lambda' → logprob: -3.3311941623687744
    7. ' lambda' → logprob: -3.5811941623687744
    8. '0' → logprob: -3.7061941623687744
    9. 'math' → logprob: -3.9561941623687744
    10. 'max' → logprob: -4.7061944007873535

Token 80: '(
' (ID: 1607)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.08266820758581161
    2. '(' → logprob: -2.5826683044433594
    3. '(operator' → logprob: -6.082668304443359
    4. '(math' → logprob: -7.082668304443359
    5. '(
' → logprob: -7.707668304443359
    6. '((' → logprob: -9.08266830444336
    7. '(int' → logprob: -10.45766830444336
    8. 'lambda' → logprob: -11.08266830444336
    9. '(+' → logprob: -11.20766830444336
    10. ' (' → logprob: -11.70766830444336

Token 81: '   ' (ID: 271)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.11975926160812378
    2. '(lambda' → logprob: -2.2447593212127686
    3. ' lambda' → logprob: -5.2447590827941895
    4. '   ' → logprob: -6.4947590827941895
    5. '=lambda' → logprob: -10.244759559631348
    6. ')' → logprob: -10.494759559631348
    7. '(' → logprob: -11.119759559631348
    8. 'l' → logprob: -11.619759559631348
    9. ' (' → logprob: -11.994759559631348
    10. '+' → logprob: -12.119759559631348

Token 82: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.024875111877918243
    2. '(lambda' → logprob: -4.149875164031982
    3. '   ' → logprob: -4.899875164031982
    4. ' lambda' → logprob: -6.649875164031982
    5. '       ' → logprob: -10.774874687194824
    6. 'math' → logprob: -11.024874687194824
    7. '=lambda' → logprob: -12.399874687194824
    8. '    ' → logprob: -12.649874687194824
    9. ')' → logprob: -13.149874687194824
    10. ' ' → logprob: -13.149874687194824

Token 83: ' acc' (ID: 1259)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.10522709041833878
    2. 'lambda' → logprob: -3.230226993560791
    3. ' x' → logprob: -3.730226993560791
    4. ' acc' → logprob: -3.980226993560791
    5. ' a' → logprob: -5.480226993560791
    6. ' s' → logprob: -5.855226993560791
    7. ' t' → logprob: -6.105226993560791
    8. '(lambda' → logprob: -6.480226993560791
    9. 'acc' → logprob: -6.605226993560791
    10. 'x' → logprob: -6.605226993560791

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.5649528298527e-05
    2. ' ,' → logprob: -10.250075340270996
    3. ',t' → logprob: -11.500075340270996
    4. ',
' → logprob: -11.750075340270996
    5. 's' → logprob: -12.000075340270996
    6. ',x' → logprob: -12.500075340270996
    7. 'lambda' → logprob: -13.375075340270996
    8. ',s' → logprob: -13.875075340270996
    9. 't' → logprob: -14.000075340270996
    10. 'a' → logprob: -14.250075340270996

Token 85: ' ij' (ID: 38172)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.6330525875091553
    2. 't' → logprob: -0.8830525875091553
    3. 'pair' → logprob: -3.8830525875091553
    4. ' pair' → logprob: -4.133052825927734
    5. 'x' → logprob: -5.758052825927734
    6. 'p' → logprob: -5.883052825927734
    7. 'xy' → logprob: -6.258052825927734
    8. ' xy' → logprob: -6.758052825927734
    9. 'lambda' → logprob: -6.758052825927734
    10. ' x' → logprob: -6.883052825927734

Token 86: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001450187264708802
    2. ',' → logprob: -9.500144958496094
    3. ' :' → logprob: -10.875144958496094
    4. ':
' → logprob: -11.125144958496094
    5. 's' → logprob: -11.875144958496094
    6. 't' → logprob: -11.875144958496094
    7. ':(' → logprob: -12.750144958496094
    8. 'ambda' → logprob: -13.000144958496094
    9. '_:' → logprob: -13.375144958496094
    10. '_pairs' → logprob: -13.375144958496094

Token 87: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.41035276651382446
    2. ' acc' → logprob: -1.4103527069091797
    3. '   ' → logprob: -2.6603527069091797
    4. '(acc' → logprob: -4.03535270690918
    5. '(' → logprob: -6.53535270690918
    6. ' (' → logprob: -7.41035270690918
    7. ' ' → logprob: -7.78535270690918
    8. '[' → logprob: -7.78535270690918
    9. '  ' → logprob: -8.16035270690918
    10. '(
' → logprob: -8.28535270690918

Token 88: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026344425976276398
    2. ' +' → logprob: -3.6513445377349854
    3. '+
' → logprob: -11.776344299316406
    4. '+(' → logprob: -12.151344299316406
    5. '+[' → logprob: -12.151344299316406
    6. '+:' → logprob: -12.526344299316406
    7. '*' → logprob: -12.526344299316406
    8. '   ' → logprob: -12.776344299316406
    9. '|' → logprob: -13.276344299316406
    10. '-' → logprob: -13.401344299316406

Token 89: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4623761475086212
    2. 'abs' → logprob: -2.212376117706299
    3. '(math' → logprob: -2.212376117706299
    4. 'xy' → logprob: -2.962376117706299
    5. ' math' → logprob: -3.337376117706299
    6. '(abs' → logprob: -4.587376117706299
    7. '(' → logprob: -4.587376117706299
    8. 'max' → logprob: -4.712376117706299
    9. '1' → logprob: -4.962376117706299
    10. '((' → logprob: -5.087376117706299

Token 90: '.h' (ID: 1508)
  Prédit: '.dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dist' → logprob: -0.004950054455548525
    2. '.h' → logprob: -5.629950046539307
    3. '.sqrt' → logprob: -6.879950046539307
    4. 'dist' → logprob: -8.129950523376465
    5. '.atan' → logprob: -11.129950523376465
    6. '.' → logprob: -13.004950523376465
    7. '.ceil' → logprob: -13.254950523376465
    8. '.f' → logprob: -13.379950523376465
    9. '.inf' → logprob: -14.129950523376465
    10. ' dist' → logprob: -14.254950523376465

Token 91: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.06339467316865921
    2. 'dist' → logprob: -3.813394784927368
    3. 'av' → logprob: -4.063394546508789
    4. 'a' → logprob: -5.313394546508789
    5. 'ath' → logprob: -5.313394546508789
    6. 'e' → logprob: -5.938394546508789
    7. 'eil' → logprob: -6.563394546508789
    8. 'ash' → logprob: -7.313394546508789
    9. 'eu' → logprob: -7.438394546508789
    10. 'at' → logprob: -7.563394546508789

Token 92: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.01963217370212078
    2. 'at' → logprob: -4.019632339477539
    3. 'dist' → logprob: -7.394632339477539
    4. 't' → logprob: -8.519632339477539
    5. 'd' → logprob: -8.644632339477539
    6. 'id' → logprob: -9.269632339477539
    7. 'a' → logprob: -9.769632339477539
    8. 's' → logprob: -10.519632339477539
    9. 'sq' → logprob: -10.519632339477539
    10. '((' → logprob: -10.644632339477539

Token 93: '(*(' (ID: 103513)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09152807295322418
    2. '(' → logprob: -2.8415281772613525
    3. '(
' → logprob: -3.7165281772613525
    4. 'xy' → logprob: -5.841527938842773
    5. '(*(' → logprob: -7.091527938842773
    6. '(*' → logprob: -7.466527938842773
    7. '(

' → logprob: -7.841527938842773
    8. '((' → logprob: -9.591527938842773
    9. '*(' → logprob: -11.091527938842773
    10. '_xy' → logprob: -12.466527938842773

Token 94: 'a' (ID: 64)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.00523186381906271
    2. ' xy' → logprob: -6.380231857299805
    3. '(x' → logprob: -6.755231857299805
    4. '[x' → logprob: -7.380231857299805
    5. 'x' → logprob: -7.505231857299805
    6. '[' → logprob: -8.130231857299805
    7. 'a' → logprob: -8.380231857299805
    8. '   ' → logprob: -9.505231857299805
    9. '

' → logprob: -9.755231857299805
    10. '[
' → logprob: -9.755231857299805

Token 95: '-b' (ID: 2118)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5573368072509766
    2. 'y' → logprob: -1.4323368072509766
    3. 'xy' → logprob: -2.4323368072509766
    4. ' -' → logprob: -3.5573368072509766
    5. '-y' → logprob: -4.307336807250977
    6. '[' → logprob: -4.557336807250977
    7. '-' → logprob: -4.682336807250977
    8. '[i' → logprob: -4.807336807250977
    9. 'i' → logprob: -5.307336807250977
    10. 'x' → logprob: -5.432336807250977

Token 96: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.031495921313762665
    2. 'for' → logprob: -3.5314958095550537
    3. ')' → logprob: -7.406496047973633
    4. '(i' → logprob: -8.156496047973633
    5. '(x' → logprob: -8.406496047973633
    6. 's' → logprob: -8.656496047973633
    7. 'xy' → logprob: -9.281496047973633
    8. '(' → logprob: -10.031496047973633
    9. ' ' → logprob: -10.281496047973633
    10. '(a' → logprob: -10.281496047973633

Token 97: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47428521513938904
    2. 'a' → logprob: -0.9742852449417114
    3. ',' → logprob: -9.349285125732422
    4. '	a' → logprob: -9.849285125732422
    5. ' i' → logprob: -10.849285125732422
    6. ',a' → logprob: -11.599285125732422
    7. 's' → logprob: -11.974285125732422
    8. ' ' → logprob: -12.099285125732422
    9. 'i' → logprob: -12.224285125732422
    10. '(a' → logprob: -12.724285125732422

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11265307664871216
    2. ',b' → logprob: -2.8626530170440674
    3. ' in' → logprob: -3.2376530170440674
    4. 'ij' → logprob: -5.4876532554626465
    5. 'in' → logprob: -6.3626532554626465
    6. ',i' → logprob: -6.9876532554626465
    7. 'i' → logprob: -7.1126532554626465
    8. 'b' → logprob: -7.7376532554626465
    9. '_i' → logprob: -8.112652778625488
    10. 'a' → logprob: -8.112652778625488

Token 99: ' b' (ID: 287)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.10066726058721542
    2. ' zip' → logprob: -2.3506672382354736
    3. 'pair' → logprob: -7.975667476654053
    4. 'z' → logprob: -10.350666999816895
    5. 'xy' → logprob: -10.725666999816895
    6. 'ij' → logprob: -11.350666999816895
    7. 're' → logprob: -11.600666999816895
    8. 'b' → logprob: -12.100666999816895
    9. 'map' → logprob: -12.225666999816895
    10. ' pair' → logprob: -12.350666999816895

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27734488248825073
    2. ' zip' → logprob: -2.1523449420928955
    3. 'zip' → logprob: -2.2773449420928955
    4. 'in' → logprob: -3.7773449420928955
    5. 'pair' → logprob: -8.777344703674316
    6. ' pair' → logprob: -9.277344703674316
    7. '  ' → logprob: -10.027344703674316
    8. ' ' → logprob: -10.277344703674316
    9. 'z' → logprob: -10.402344703674316
    10. '_zip' → logprob: -10.402344703674316

Token 101: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.023259572684764862
    2. ' zip' → logprob: -3.7732596397399902
    3. '(zip' → logprob: -11.398259162902832
    4. '
' → logprob: -13.773259162902832
    5. '   ' → logprob: -14.273259162902832
    6. '.zip' → logprob: -14.898259162902832
    7. ' ' → logprob: -15.148259162902832
    8. 'pair' → logprob: -15.398259162902832
    9. '  ' → logprob: -15.898259162902832
    10. 'z' → logprob: -16.52326011657715

Token 102: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0017781148198992014
    2. '(' → logprob: -7.1267781257629395
    3. 'xy' → logprob: -7.1267781257629395
    4. '((' → logprob: -9.376777648925781
    5. '(
' → logprob: -9.626777648925781
    6. '   ' → logprob: -12.001777648925781
    7. '  ' → logprob: -13.126777648925781
    8. '(*' → logprob: -13.501777648925781
    9. '(tuple' → logprob: -13.501777648925781
    10. '([' → logprob: -14.001777648925781

Token 103: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001130690099671483
    2. '[y' → logprob: -7.8761305809021
    3. '[' → logprob: -8.126131057739258
    4. '(y' → logprob: -8.501131057739258
    5. 'xy' → logprob: -9.501131057739258
    6. ' y' → logprob: -9.751131057739258
    7. '_y' → logprob: -11.438631057739258
    8. ',y' → logprob: -11.563631057739258
    9. '[i' → logprob: -11.626131057739258
    10. 'ys' → logprob: -11.876131057739258

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009015733376145363
    2. 'ij' → logprob: -7.625901699066162
    3. '[i' → logprob: -8.250901222229004
    4. ' [' → logprob: -9.875901222229004
    5. '   ' → logprob: -10.500901222229004
    6. '[j' → logprob: -11.000901222229004
    7. ' ij' → logprob: -11.750901222229004
    8. '
' → logprob: -11.875901222229004
    9. '[
' → logprob: -12.125901222229004
    10. '```' → logprob: -12.125901222229004

Token 105: 'ij' (ID: 681)
  Prédit: 'ij'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ij' → logprob: -0.00026181264547631145
    2. ' ij' → logprob: -9.125262260437012
    3. '[' → logprob: -9.375262260437012
    4. '   ' → logprob: -10.250262260437012
    5. '(' → logprob: -11.000262260437012
    6. 'i' → logprob: -13.250262260437012
    7. '  ' → logprob: -13.750262260437012
    8. 'ji' → logprob: -13.750262260437012
    9. 'ijk' → logprob: -14.125262260437012
    10. ')' → logprob: -14.125262260437012

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.021534202620387077
    2. 'ij' → logprob: -4.396533966064453
    3. '0' → logprob: -5.396533966064453
    4. ']))' → logprob: -6.396533966064453
    5. '])' → logprob: -7.146533966064453
    6. '1' → logprob: -8.021533966064453
    7. 's' → logprob: -8.646533966064453
    8. '   ' → logprob: -8.771533966064453
    9. '))' → logprob: -8.771533966064453
    10. '(' → logprob: -8.771533966064453

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005032312474213541
    2. '1' → logprob: -8.125503540039062
    3. ' ' → logprob: -9.000503540039062
    4. '[' → logprob: -10.625503540039062
    5. '   ' → logprob: -11.063003540039062
    6. 'ij' → logprob: -11.250503540039062
    7. '
' → logprob: -12.063003540039062
    8. '])' → logprob: -12.813003540039062
    9. ']' → logprob: -13.188003540039062
    10. '(' → logprob: -13.500503540039062

Token 108: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00026622318546287715
    2. '[' → logprob: -9.000266075134277
    3. '   ' → logprob: -10.000266075134277
    4. ' ],' → logprob: -10.875266075134277
    5. ']' → logprob: -11.250266075134277
    6. '],[' → logprob: -11.250266075134277
    7. '       ' → logprob: -11.375266075134277
    8. ']],' → logprob: -11.875266075134277
    9. '()],' → logprob: -12.375266075134277
    10. ' ' → logprob: -12.625266075134277

Token 109: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.05506496876478195
    2. ' xy' → logprob: -2.9300649166107178
    3. '   ' → logprob: -9.805065155029297
    4. '  ' → logprob: -10.180065155029297
    5. ' ' → logprob: -10.180065155029297
    6. '.xy' → logprob: -10.555065155029297
    7. '    ' → logprob: -12.430065155029297
    8. '_xy' → logprob: -12.555065155029297
    9. '           ' → logprob: -12.930065155029297
    10. '
' → logprob: -13.242565155029297

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00028731857310049236
    2. 'ij' → logprob: -8.250287055969238
    3. '[j' → logprob: -11.250287055969238
    4. '   ' → logprob: -12.250287055969238
    5. ' [' → logprob: -12.875287055969238
    6. '  ' → logprob: -13.250287055969238
    7. ' ij' → logprob: -14.125287055969238
    8. '[i' → logprob: -14.375287055969238
    9. '][' → logprob: -14.500287055969238
    10. ' ' → logprob: -14.750287055969238

Token 111: 'ij' (ID: 681)
  Prédit: 'ij'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ij' → logprob: -0.018961574882268906
    2. '1' → logprob: -4.018961429595947
    3. '[' → logprob: -7.268961429595947
    4. ' ij' → logprob: -9.393961906433105
    5. 'j' → logprob: -11.893961906433105
    6. '   ' → logprob: -12.393961906433105
    7. 'ijt' → logprob: -12.393961906433105
    8. 'ji' → logprob: -12.518961906433105
    9. ' ' → logprob: -13.268961906433105
    10. 'ijl' → logprob: -13.643961906433105

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3871647119522095
    2. '1' → logprob: -1.1371647119522095
    3. ']))' → logprob: -8.512165069580078
    4. '])' → logprob: -10.637165069580078
    5. '   ' → logprob: -11.637165069580078
    6. ']' → logprob: -12.012165069580078
    7. ']))
' → logprob: -12.262165069580078
    8. '][' → logprob: -12.387165069580078
    9. '```' → logprob: -12.387165069580078
    10. ']),' → logprob: -12.512165069580078

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.349075556499884e-05
    2. ']))' → logprob: -11.1250638961792
    3. '])' → logprob: -11.2500638961792
    4. '0' → logprob: -12.0000638961792
    5. '[' → logprob: -12.1250638961792
    6. ' ' → logprob: -12.3750638961792
    7. '```' → logprob: -12.5000638961792
    8. '   ' → logprob: -13.3750638961792
    9. '
' → logprob: -13.5625638961792
    10. ']' → logprob: -13.6875638961792

Token 114: ']]' (ID: 8928)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.24392825365066528
    2. '])))' → logprob: -1.8689281940460205
    3. '])),' → logprob: -3.3689281940460205
    4. ']' → logprob: -3.8689281940460205
    5. ']]' → logprob: -5.2439284324646
    6. '[' → logprob: -7.8689284324646
    7. '])))
' → logprob: -7.9939284324646
    8. ')))),' → logprob: -9.243927955627441
    9. '])]' → logprob: -9.243927955627441
    10. ']))
' → logprob: -9.368927955627441

Token 115: '))),
' (ID: 91673)
  Prédit: '))),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))),
' → logprob: -0.2092442512512207
    2. '))),' → logprob: -2.3342442512512207
    3. ')))' → logprob: -2.5842442512512207
    4. '))' → logprob: -4.834244251251221
    5. ')))
' → logprob: -4.959244251251221
    6. ')))),' → logprob: -7.709244251251221
    7. ')' → logprob: -7.959244251251221
    8. ')),
' → logprob: -8.334243774414062
    9. ')),' → logprob: -9.209243774414062
    10. '))))' → logprob: -9.459243774414062

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1567123383283615
    2. ' pairs' → logprob: -2.406712293624878
    3. 'pairs' → logprob: -2.906712293624878
    4. 'sm' → logprob: -9.531712532043457
    5. '    ' → logprob: -9.531712532043457
    6. '  ' → logprob: -10.906712532043457
    7. ' sm' → logprob: -11.031712532043457
    8. ' ' → logprob: -11.156712532043457
    9. '_pairs' → logprob: -11.281712532043457
    10. '       ' → logprob: -11.406712532043457

Token 117: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' (adapté à ' pairs') → logprob: -6.64708495605737e-05
    2. ' pairs' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.875066757202148
    4. 'chains' → logprob: -16.00006675720215
    5. 'Pairs' → logprob: -16.87506675720215
    6. 'pair' → logprob: -17.25006675720215
    7. ' ' → logprob: -17.87506675720215
    8. '_pairs' → logprob: -17.87506675720215
    9. 'chain' → logprob: -18.37506675720215
    10. 'pares' → logprob: -18.50006675720215

Token 118: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001710014621494338
    2. ')' → logprob: -9.250170707702637
    3. ',
' → logprob: -9.875170707702637
    4. '0' → logprob: -11.125170707702637
    5. '   ' → logprob: -12.000170707702637
    6. ' ,' → logprob: -13.000170707702637
    7. ',
' → logprob: -17.750171661376953
    8. '),' → logprob: -17.750171661376953
    9. '1' → logprob: -17.875171661376953
    10. ')
' → logprob: -18.000171661376953

Token 119: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02709120139479637
    2. '   ' → logprob: -3.6520912647247314
    3. ' ' → logprob: -7.152091026306152
    4. '  ' → logprob: -12.527091026306152
    5. '    ' → logprob: -13.652091026306152
    6. ')' → logprob: -13.652091026306152
    7. '1' → logprob: -14.152091026306152
    8. '       ' → logprob: -15.527091026306152
    9. '    
' → logprob: -15.527091026306152
    10. '     ' → logprob: -16.90209197998047

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.500003814697266
    4. '  ' → logprob: -19.375003814697266
    5. '    ' → logprob: -20.375003814697266
    6. ')' → logprob: -21.250003814697266
    7. '    
' → logprob: -21.250003814697266
    8. '.' → logprob: -21.375003814697266
    9. '۰' → logprob: -21.375003814697266
    10. 'math' → logprob: -22.000003814697266

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.9888433093437925e-05
    2. ' ' → logprob: -10.250040054321289
    3. '   ' → logprob: -12.375040054321289
    4. '  ' → logprob: -16.25004005432129
    5. '    ' → logprob: -17.37504005432129
    6. ')' → logprob: -17.75004005432129
    7. '.' → logprob: -18.25004005432129
    8. '     ' → logprob: -19.62504005432129
    9. 'math' → logprob: -19.87504005432129
    10. '
' → logprob: -19.93754005432129

Token 122: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ')
' → logprob: -12.500008583068848
    3. ')

' → logprob: -12.750008583068848
    4. ' )' → logprob: -14.500008583068848
    5. '0' → logprob: -15.000008583068848
    6. '),' → logprob: -15.500008583068848
    7. '))' → logprob: -15.625008583068848
    8. ');' → logprob: -15.875008583068848
    9. ')`' → logprob: -16.12500762939453
    10. ',)' → logprob: -16.50000762939453

Token 123: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. ')
' → logprob: -11.125017166137695
    3. ')

' → logprob: -13.375017166137695
    4. ' )' → logprob: -14.875017166137695
    5. ')+' → logprob: -15.250017166137695
    6. ')`' → logprob: -15.500017166137695
    7. '))' → logprob: -16.250017166137695
    8. '0' → logprob: -16.500017166137695
    9. '),' → logprob: -16.625017166137695
    10. '#' → logprob: -17.000017166137695

Token 124: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07983028143644333
    2. ')' → logprob: -2.5798301696777344
    3. '/' → logprob: -8.454830169677734
    4. 'total' → logprob: -8.829830169677734
    5. 'result' → logprob: -8.829830169677734
    6. '#' → logprob: -8.954830169677734
    7. 'average' → logprob: -9.954830169677734
    8. '
' → logprob: -10.329830169677734
    9. 'pairs' → logprob: -10.579830169677734
    10. 'sm' → logprob: -10.954830169677734

Token 125: '((' (ID: 2054)
  Prédit: '(sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sm' → logprob: -0.00927478726953268
    2. '(' → logprob: -4.759274959564209
    3. '(round' → logprob: -8.38427448272705
    4. '(s' → logprob: -8.50927448272705
    5. 'sm' → logprob: -8.63427448272705
    6. '(f' → logprob: -10.75927448272705
    7. '(math' → logprob: -11.38427448272705
    8. '(int' → logprob: -11.50927448272705
    9. ' sm' → logprob: -12.50927448272705
    10. ' (' → logprob: -13.25927448272705

Token 126: 'lambda' (ID: 35280)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.0026204893365502357
    2. '4' → logprob: -7.002620697021484
    3. ' sm' → logprob: -7.252620697021484
    4. '2' → logprob: -7.877620697021484
    5. 'math' → logprob: -8.252620697021484
    6. 'N' → logprob: -9.002620697021484
    7. 'int' → logprob: -9.877620697021484
    8. '(' → logprob: -10.002620697021484
    9. 'round' → logprob: -10.002620697021484
    10. '(sm' → logprob: -10.502620697021484

Token 127: ' s' (ID: 265)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.44719773530960083
    2. ' d' → logprob: -2.197197675704956
    3. 'x' → logprob: -2.322197675704956
    4. ' s' → logprob: -3.572197675704956
    5. 'd' → logprob: -3.822197675704956
    6. ' total' → logprob: -3.947197675704956
    7. ' sm' → logprob: -4.072197914123535
    8. ' n' → logprob: -4.447197914123535
    9. ' :' → logprob: -4.697197914123535
    10. ':' → logprob: -4.697197914123535

Token 128: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025012213736772537
    2. ':s' → logprob: -6.252501010894775
    3. ' :' → logprob: -7.502501010894775
    4. 's' → logprob: -11.377501487731934
    5. ',' → logprob: -12.502501487731934
    6. ':n' → logprob: -13.627501487731934
    7. ':
' → logprob: -14.127501487731934
    8. ' s' → logprob: -14.127501487731934
    9. '=s' → logprob: -14.502501487731934
    10. ',s' → logprob: -14.502501487731934

Token 129: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3061971068382263
    2. ' n' → logprob: -1.556197166442871
    3. 'N' → logprob: -3.056197166442871
    4. ' N' → logprob: -5.431197166442871
    5. 'x' → logprob: -7.806197166442871
    6. 'l' → logprob: -8.431197166442871
    7. 'k' → logprob: -8.681197166442871
    8. 's' → logprob: -10.056197166442871
    9. ' x' → logprob: -10.056197166442871
    10. 'c' → logprob: -10.181197166442871

Token 130: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004032634024042636
    2. ':s' → logprob: -8.50040340423584
    3. ' :' → logprob: -9.37540340423584
    4. ',' → logprob: -9.75040340423584
    5. 's' → logprob: -10.37540340423584
    6. ':(' → logprob: -11.00040340423584
    7. '=' → logprob: -12.87540340423584
    8. ',s' → logprob: -13.12540340423584
    9. '=s' → logprob: -14.00040340423584
    10. ':
' → logprob: -14.25040340423584

Token 131: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38285818696022034
    2. ' s' → logprob: -1.382858157157898
    3. '(s' → logprob: -3.2578582763671875
    4. '(' → logprob: -5.0078582763671875
    5. '2' → logprob: -5.2578582763671875
    6. ' (' → logprob: -5.5078582763671875
    7. 'math' → logprob: -5.7578582763671875
    8. ' ' → logprob: -6.0078582763671875
    9. ' math' → logprob: -6.5078582763671875
    10. 'round' → logprob: -6.6328582763671875

Token 132: 'lambda' (ID: 35280)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02702018804848194
    2. '2' → logprob: -4.77701997756958
    3. '(s' → logprob: -5.02701997756958
    4. 'math' → logprob: -5.15201997756958
    5. '(' → logprob: -6.15201997756958
    6. ' s' → logprob: -6.77701997756958
    7. '(math' → logprob: -7.65201997756958
    8. '1' → logprob: -8.152020454406738
    9. '((' → logprob: -8.277020454406738
    10. 'sm' → logprob: -8.277020454406738

Token 133: ':' (ID: 25)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8662975430488586
    2. ' x' → logprob: -1.7412974834442139
    3. 's' → logprob: -2.241297483444214
    4. 'x' → logprob: -2.491297483444214
    5. ' lambda' → logprob: -2.741297483444214
    6. 'lambda' → logprob: -3.366297483444214
    7. ' d' → logprob: -4.366297721862793
    8. ' n' → logprob: -4.741297721862793
    9. ':' → logprob: -4.741297721862793
    10. ' (' → logprob: -4.741297721862793

Token 134: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17546731233596802
    2. '(s' → logprob: -2.4254672527313232
    3. ' s' → logprob: -3.0504672527313232
    4. 'math' → logprob: -5.175467491149902
    5. '2' → logprob: -5.300467491149902
    6. '(' → logprob: -5.425467491149902
    7. 'print' → logprob: -5.925467491149902
    8. ' (' → logprob: -7.050467491149902
    9. ' math' → logprob: -7.050467491149902
    10. 'sum' → logprob: -7.050467491149902

Token 135: '/n' (ID: 18292)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6706008911132812
    2. '/' → logprob: -1.6706008911132812
    3. ' /' → logprob: -1.6706008911132812
    4. '()/' → logprob: -2.6706008911132812
    5. '/n' → logprob: -3.2956008911132812
    6. '/s' → logprob: -5.795600891113281
    7. '/(' → logprob: -6.795600891113281
    8. '**' → logprob: -7.420600891113281
    9. '//' → logprob: -8.545600891113281
    10. '*' → logprob: -8.670600891113281

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020070301834493876
    2. '))' → logprob: -6.752007007598877
    3. ' )' → logprob: -7.502007007598877
    4. '**' → logprob: -9.252007484436035
    5. ')))' → logprob: -9.752007484436035
    6. ' ' → logprob: -10.502007484436035
    7. '())' → logprob: -10.877007484436035
    8. '//' → logprob: -11.127007484436035
    9. ')**' → logprob: -11.252007484436035
    10. ',' → logprob: -11.502007484436035

Token 137: '())' (ID: 3516)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.5764005780220032
    2. '(sm' → logprob: -0.8264005780220032
    3. '(s' → logprob: -8.576400756835938
    4. ' )(' → logprob: -9.451400756835938
    5. '(' → logprob: -10.201400756835938
    6. 'sm' → logprob: -10.326400756835938
    7. ')' → logprob: -10.576400756835938
    8. ',' → logprob: -10.826400756835938
    9. ' (' → logprob: -11.201400756835938
    10. ')((' → logprob: -11.451400756835938

Token 138: '(' (ID: 7)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22983026504516602
    2. '(sm' → logprob: -1.854830265045166
    3. ' ,' → logprob: -3.354830265045166
    4. ')(' → logprob: -5.104830265045166
    5. 'sm' → logprob: -5.854830265045166
    6. ')' → logprob: -6.354830265045166
    7. '(' → logprob: -7.354830265045166
    8. '(s' → logprob: -7.604830265045166
    9. ' (' → logprob: -7.604830265045166
    10. ',
' → logprob: -7.729830265045166

Token 139: 'sm' (ID: 5635)
  Prédit: 'sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -1.4974866644479334e-05
    2. ' sm' → logprob: -11.125015258789062
    3. '2' → logprob: -17.125015258789062
    4. '   ' → logprob: -17.750015258789062
    5. 's' → logprob: -18.000015258789062
    6. 'int' → logprob: -19.000015258789062
    7. '	sm' → logprob: -19.000015258789062
    8. '(sm' → logprob: -19.625015258789062
    9. 'sum' → logprob: -20.000015258789062
    10. 'Sm' → logprob: -20.125015258789062

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003842828795313835
    2. ' ,' → logprob: -5.878842830657959
    3. ',N' → logprob: -6.878842830657959
    4. ',
' → logprob: -12.7538423538208
    5. ',len' → logprob: -13.5038423538208
    6. '   ' → logprob: -13.7538423538208
    7. ',n' → logprob: -13.8788423538208
    8. ' ' → logprob: -14.8788423538208
    9. ' /' → logprob: -15.3788423538208
    10. '，' → logprob: -15.8788423538208

Token 141: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002811199810821563
    2. ' N' → logprob: -8.37528133392334
    3. '2' → logprob: -10.50028133392334
    4. 'len' → logprob: -11.00028133392334
    5. ' ' → logprob: -12.50028133392334
    6. '(N' → logprob: -14.12528133392334
    7. '(' → logprob: -14.25028133392334
    8. 'math' → logprob: -14.62528133392334
    9. 'n' → logprob: -15.12528133392334
    10. '   ' → logprob: -15.25028133392334

Token 142: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02072756364941597
    2. ')' → logprob: -4.020727634429932
    3. '**' → logprob: -6.770727634429932
    4. '-' → logprob: -7.770727634429932
    5. '*N' → logprob: -8.145727157592773
    6. '*' → logprob: -8.270727157592773
    7. ')))' → logprob: -8.645727157592773
    8. '))
' → logprob: -9.520727157592773
    9. ' ))' → logprob: -9.895727157592773
    10. '*(' → logprob: -10.020727157592773


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 140
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 108
Précision stricte (1ère position): 36.43%
Précision adaptée (1ère position): 37.86%
Précision (top 10): 77.14%
================================================================================
