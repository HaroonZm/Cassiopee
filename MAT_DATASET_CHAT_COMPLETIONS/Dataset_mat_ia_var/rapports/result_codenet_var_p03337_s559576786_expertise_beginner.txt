================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a_b = input().split()
a = int(a_b[0])
b = int(a_b[1])

add = a + b
sub = a - b
mul = a * b

if add >= sub and add >= mul:
    print(add)
elif sub >= add and sub >= mul:
    print(sub)
else:
    print(mul)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: '_b' (ID: 1535)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01290101744234562
    2. '"' → logprob: -5.5129008293151855
    3. '1' → logprob: -5.6379008293151855
    4. ''' → logprob: -5.7629008293151855
    5. '0' → logprob: -6.8879008293151855
    6. ' []' → logprob: -8.137901306152344
    7. ' "' → logprob: -9.012901306152344
    8. '42' → logprob: -9.387901306152344
    9. '10' → logprob: -9.512901306152344
    10. '`' → logprob: -9.637901306152344

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018674718448892236
    2. '('' → logprob: -6.751867294311523
    3. ''' → logprob: -7.751867294311523
    4. '("("' → logprob: -9.376867294311523
    5. '(
' → logprob: -9.876867294311523
    6. '"' → logprob: -10.001867294311523
    7. '()' → logprob: -10.626867294311523
    8. '.' → logprob: -11.376867294311523
    9. ' (' → logprob: -11.626867294311523
    10. '[' → logprob: -12.001867294311523

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.542549729347229
    2. '+' → logprob: -1.042549729347229
    3. '(' → logprob: -4.1675496101379395
    4. '*' → logprob: -4.2925496101379395
    5. '()' → logprob: -4.9175496101379395
    6. '.strip' → logprob: -4.9175496101379395
    7. '```' → logprob: -5.9175496101379395
    8. ' ' → logprob: -6.1675496101379395
    9. '\' → logprob: -6.2925496101379395
    10. '.split' → logprob: -6.4175496101379395

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020208319183439016
    2. '()' → logprob: -6.252020835876465
    3. '(
' → logprob: -10.627020835876465
    4. '(

' → logprob: -11.002020835876465
    5. '('' → logprob: -11.252020835876465
    6. '("("' → logprob: -11.627020835876465
    7. '"' → logprob: -11.877020835876465
    8. ' (' → logprob: -12.377020835876465
    9. '`' → logprob: -12.627020835876465
    10. '(`' → logprob: -12.752020835876465

Token 7: 'a' (ID: 64)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028750114142894745
    2. '.' → logprob: -6.752874851226807
    3. '#' → logprob: -8.002875328063965
    4. 'for' → logprob: -8.127875328063965
    5. 'a' → logprob: -8.127875328063965
    6. 'print' → logprob: -8.252875328063965
    7. 'if' → logprob: -9.252875328063965
    8. '=' → logprob: -9.502875328063965
    9. '[a' → logprob: -9.502875328063965
    10. '(' → logprob: -9.752875328063965

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9466037750244141
    2. '_b' → logprob: -1.071603775024414
    3. '[' → logprob: -1.321603775024414
    4. '[_' → logprob: -6.321603775024414
    5. '_[' → logprob: -7.821603775024414
    6. '[]' → logprob: -8.821603775024414
    7. '\[' → logprob: -9.196603775024414
    8. '_a' → logprob: -9.321603775024414
    9. 'b' → logprob: -9.696603775024414
    10. '[a' → logprob: -10.196603775024414

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.025957118719816208
    2. ' int' → logprob: -3.9009571075439453
    3. 'a' → logprob: -5.275957107543945
    4. ' a' → logprob: -8.525957107543945
    5. 'list' → logprob: -10.525957107543945
    6. '[int' → logprob: -10.650957107543945
    7. 'float' → logprob: -10.650957107543945
    8. 'len' → logprob: -11.775957107543945
    9. ' list' → logprob: -13.400957107543945
    10. '(int' → logprob: -13.400957107543945

Token 10: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07957369089126587
    2. '(a' → logprob: -2.579573631286621
    3. 'a' → logprob: -7.829573631286621
    4. '('' → logprob: -8.829573631286621
    5. '("("' → logprob: -10.329573631286621
    6. '40' → logprob: -10.579573631286621
    7. '```' → logprob: -10.704573631286621
    8. '_a' → logprob: -10.954573631286621
    9. ' (' → logprob: -12.329573631286621
    10. '(**' → logprob: -12.579573631286621

Token 11: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0006009306525811553
    2. '[' → logprob: -7.750600814819336
    3. '_a' → logprob: -9.250600814819336
    4. 'b' → logprob: -10.625600814819336
    5. ')' → logprob: -10.875600814819336
    6. '_' → logprob: -11.500600814819336
    7. '_)' → logprob: -12.125600814819336
    8. 'a' → logprob: -12.500600814819336
    9. '_[' → logprob: -12.875600814819336
    10. '[_' → logprob: -13.000600814819336

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -15.125000953674316
    3. '\[' → logprob: -15.625000953674316
    4. '0' → logprob: -15.875000953674316
    5. ')' → logprob: -16.000001907348633
    6. '[a' → logprob: -16.125001907348633
    7. '(' → logprob: -16.125001907348633
    8. '```' → logprob: -17.500001907348633
    9. '[
' → logprob: -18.125001907348633
    10. ' ' → logprob: -18.625001907348633

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -16.375
    4. ')' → logprob: -20.0
    5. ''' → logprob: -20.25
    6. '۰' → logprob: -20.625
    7. '```' → logprob: -21.5
    8. '2' → logprob: -21.5
    9. '   ' → logprob: -21.75
    10. '０' → logprob: -21.75

Token 14: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06287863850593567
    2. '])' → logprob: -2.8128786087036133
    3. ']' → logprob: -7.187878608703613
    4. ')]' → logprob: -9.812878608703613
    5. ')])' → logprob: -9.937878608703613
    6. '))' → logprob: -11.312878608703613
    7. ')a' → logprob: -11.687878608703613
    8. ''])' → logprob: -12.062878608703613
    9. ' )' → logprob: -12.187878608703613
    10. '`)' → logprob: -12.812878608703613

Token 15: 'b' (ID: 65)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8726140856742859
    2. '[' → logprob: -1.4976141452789307
    3. ')' → logprob: -1.9976141452789307
    4. ' ' → logprob: -2.2476141452789307
    5. '<|end|>' → logprob: -3.1226141452789307
    6. ' =' → logprob: -3.3726141452789307
    7. '=' → logprob: -4.122613906860352
    8. '  ' → logprob: -5.372613906860352
    9. '<|end|>' → logprob: -5.997613906860352
    10. ' )' → logprob: -6.247613906860352

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01815076172351837
    2. ' int' → logprob: -4.018150806427002
    3. 'a' → logprob: -14.768150329589844
    4. ' ' → logprob: -15.518150329589844
    5. ' a' → logprob: -16.768150329589844
    6. '(int' → logprob: -16.893150329589844
    7. '=int' → logprob: -16.893150329589844
    8. '  ' → logprob: -18.018150329589844
    9. '   ' → logprob: -18.518150329589844
    10. '0' → logprob: -18.643150329589844

Token 18: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47495871782302856
    2. '(a' → logprob: -0.9749587178230286
    3. '(b' → logprob: -7.099958896636963
    4. ' (' → logprob: -10.974958419799805
    5. '((' → logprob: -10.974958419799805
    6. '(ab' → logprob: -12.474958419799805
    7. '('' → logprob: -12.724958419799805
    8. '(
' → logprob: -13.099958419799805
    9. '(

' → logprob: -13.849958419799805
    10. ')(' → logprob: -13.849958419799805

Token 19: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.012715890072286129
    2. '[' → logprob: -4.387715816497803
    3. ')' → logprob: -9.387716293334961
    4. '_' → logprob: -10.262716293334961
    5. '[_' → logprob: -10.262716293334961
    6. '_a' → logprob: -11.512716293334961
    7. '[b' → logprob: -11.887716293334961
    8. 'b' → logprob: -12.262716293334961
    9. '])' → logprob: -12.262716293334961
    10. '_)' → logprob: -12.512716293334961

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. ')' → logprob: -13.875001907348633
    3. ' [' → logprob: -14.500001907348633
    4. '1' → logprob: -15.750001907348633
    5. ')[' → logprob: -15.875001907348633
    6. '```' → logprob: -16.000001907348633
    7. '[
' → logprob: -16.625001907348633
    8. '   ' → logprob: -16.750001907348633
    9. '\[' → logprob: -17.250001907348633
    10. '][' → logprob: -17.625001907348633

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -13.50000286102295
    3. '])' → logprob: -13.87500286102295
    4. ' ' → logprob: -14.37500286102295
    5. '```' → logprob: -16.125003814697266
    6. ']' → logprob: -17.000003814697266
    7. '2' → logprob: -17.500003814697266
    8. '   ' → logprob: -17.500003814697266
    9. ')' → logprob: -17.500003814697266
    10. '１' → logprob: -18.000003814697266

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6776029699249193e-05
    2. ']' → logprob: -11.25002670288086
    3. '])' → logprob: -11.37502670288086
    4. '))' → logprob: -14.25002670288086
    5. ')])' → logprob: -14.62502670288086
    6. ' )' → logprob: -15.00002670288086
    7. '）' → logprob: -15.12502670288086
    8. '[' → logprob: -15.62502670288086
    9. ')]' → logprob: -16.12502670288086
    10. '`)' → logprob: -16.50002670288086

Token 23: 'add' (ID: 964)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004576680716127157
    2. '*' → logprob: -6.879576683044434
    3. 'c' → logprob: -7.004576683044434
    4. '+
' → logprob: -7.379576683044434
    5. 'if' → logprob: -7.504576683044434
    6. '+c' → logprob: -7.754576683044434
    7. '#' → logprob: -8.254576683044434
    8. 'i' → logprob: -8.254576683044434
    9. '=' → logprob: -8.754576683044434
    10. '>' → logprob: -9.004576683044434

Token 24: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02821158617734909
    2. '_' → logprob: -3.6532115936279297
    3. '(a' → logprob: -6.77821159362793
    4. ')' → logprob: -7.90321159362793
    5. '()' → logprob: -9.15321159362793
    6. ' (' → logprob: -9.90321159362793
    7. '(
' → logprob: -10.02821159362793
    8. 'ed' → logprob: -10.27821159362793
    9. '_a' → logprob: -10.77821159362793
    10. 's' → logprob: -10.90321159362793

Token 25: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009115827269852161
    2. ' a' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.125911712646484
    4. '	a' → logprob: -17.750911712646484
    5. '(a' → logprob: -17.750911712646484
    6. '+' → logprob: -18.125911712646484
    7. '  ' → logprob: -18.875911712646484
    8. 'lambda' → logprob: -19.000911712646484
    9. '   ' → logprob: -19.125911712646484
    10. '0' → logprob: -20.250911712646484

Token 26: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003236417192965746
    2. ' +' → logprob: -5.753236293792725
    3. '+b' → logprob: -9.753236770629883
    4. '+B' → logprob: -15.753236770629883
    5. '-' → logprob: -16.128236770629883
    6. '+=' → logprob: -16.503236770629883
    7. '+
' → logprob: -16.878236770629883
    8. '>' → logprob: -17.003236770629883
    9. 'b' → logprob: -17.253236770629883
    10. '_' → logprob: -17.253236770629883

Token 27: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38689061999320984
    2. ' b' → logprob: -1.1368906497955322
    3. ' ' → logprob: -10.886890411376953
    4. '1' → logprob: -14.511890411376953
    5. ' ' → logprob: -16.261890411376953
    6. '_b' → logprob: -16.511890411376953
    7. '	b' → logprob: -16.636890411376953
    8. ' б' → logprob: -16.886890411376953
    9. '_' → logprob: -17.136890411376953
    10. ''' → logprob: -17.511890411376953

Token 28: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0932166576385498
    2. '*' → logprob: -1.4682166576385498
    3. '
' → logprob: -2.21821665763855
    4. '\' → logprob: -2.21821665763855
    5. '<|end|>' → logprob: -2.59321665763855
    6. ')' → logprob: -3.34321665763855
    7. '```' → logprob: -3.34321665763855
    8. 'newline' → logprob: -4.593216896057129
    9. '.' → logprob: -4.718216896057129
    10. '**' → logprob: -4.843216896057129

Token 29: 'sub' (ID: 3834)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024040776770561934
    2. '*' → logprob: -6.87740421295166
    3. '<|end|>' → logprob: -7.87740421295166
    4. '
' → logprob: -8.00240421295166
    5. '```' → logprob: -8.87740421295166
    6. 'p' → logprob: -9.12740421295166
    7. '-' → logprob: -9.50240421295166
    8. '\n' → logprob: -9.75240421295166
    9. '+' → logprob: -10.25240421295166
    10. ' print' → logprob: -10.37740421295166

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11126833409070969
    2. '_' → logprob: -2.8612682819366455
    3. '=' → logprob: -3.1112682819366455
    4. ' ' → logprob: -6.111268520355225
    5. ' _' → logprob: -7.486268520355225
    6. 'stract' → logprob: -7.861268520355225
    7. '  ' → logprob: -9.736268043518066
    8. ')' → logprob: -10.111268043518066
    9. 'a' → logprob: -10.111268043518066
    10. ''' → logprob: -10.611268043518066

Token 31: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3869585394859314
    2. 'a' → logprob: -1.1369585990905762
    3. ' b' → logprob: -9.886958122253418
    4. 'b' → logprob: -10.261958122253418
    5. '	a' → logprob: -14.136958122253418
    6. ' ' → logprob: -14.261958122253418
    7. '(a' → logprob: -16.511959075927734
    8. '_a' → logprob: -16.761959075927734
    9. ' ' → logprob: -16.761959075927734
    10. '0' → logprob: -17.011959075927734

Token 32: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0038824998773634434
    2. '-' → logprob: -5.87888240814209
    3. ' ' → logprob: -7.00388240814209
    4. '_' → logprob: -9.00388240814209
    5. ' ' → logprob: -10.50388240814209
    6. ')' → logprob: -12.25388240814209
    7. ' _' → logprob: -12.50388240814209
    8. '<|end|>' → logprob: -12.50388240814209
    9. ' +' → logprob: -13.50388240814209
    10. '  ' → logprob: -14.75388240814209

Token 33: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001170225441455841
    2. ' b' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.501171112060547
    4. '	b' → logprob: -19.376171112060547
    5. '   ' → logprob: -22.751171112060547
    6. '  ' → logprob: -22.876171112060547
    7. '>b' → logprob: -22.876171112060547
    8. ' б' → logprob: -23.376171112060547
    9. '_b' → logprob: -23.376171112060547
    10. ')b' → logprob: -23.376171112060547

Token 34: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3470118045806885
    2. '*' → logprob: -1.4720118045806885
    3. '\' → logprob: -3.5970118045806885
    4. '*
' → logprob: -4.722011566162109
    5. '<|end|>' → logprob: -4.972011566162109
    6. '
' → logprob: -5.222011566162109
    7. '+' → logprob: -5.472011566162109
    8. '```' → logprob: -6.097011566162109
    9. '+
' → logprob: -6.347011566162109
    10. ' 
' → logprob: -6.847011566162109

Token 35: 'mul' (ID: 44857)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12247946858406067
    2. '*
' → logprob: -2.9974794387817383
    3. '\n' → logprob: -2.9974794387817383
    4. '\' → logprob: -5.497479438781738
    5. 'print' → logprob: -6.622479438781738
    6. '' → logprob: -6.747479438781738
    7. ' 
' → logprob: -6.747479438781738
    8. '```' → logprob: -6.872479438781738
    9. 'mul' → logprob: -7.122479438781738
    10. '
' → logprob: -7.122479438781738

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38994932174682617
    2. '=' → logprob: -1.1399493217468262
    3. '*' → logprob: -6.639949321746826
    4. ' ' → logprob: -6.889949321746826
    5. '_' → logprob: -7.639949321746826
    6. ' *' → logprob: -9.014949798583984
    7. ')' → logprob: -10.014949798583984
    8. '[' → logprob: -10.639949798583984
    9. ' *=' → logprob: -11.014949798583984
    10. '_mul' → logprob: -12.014949798583984

Token 37: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4740802049636841
    2. ' a' → logprob: -0.9740802049636841
    3. 'b' → logprob: -12.849080085754395
    4. ' b' → logprob: -15.349080085754395
    5. '	a' → logprob: -15.349080085754395
    6. ' ' → logprob: -15.849080085754395
    7. ' ' → logprob: -17.34908103942871
    8. '_a' → logprob: -17.47408103942871
    9. '(a' → logprob: -17.59908103942871
    10. '*a' → logprob: -18.47408103942871

Token 38: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02058369852602482
    2. '*' → logprob: -3.8955836296081543
    3. '<|end|>' → logprob: -10.520584106445312
    4. ' ' → logprob: -12.395584106445312
    5. ' ' → logprob: -12.645584106445312
    6. ' **' → logprob: -13.270584106445312
    7. ')' → logprob: -13.895584106445312
    8. '**' → logprob: -14.145584106445312
    9. ' *>' → logprob: -14.395584106445312
    10. ' *
' → logprob: -14.770584106445312

Token 39: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06196948140859604
    2. ' b' → logprob: -2.811969518661499
    3. ' ' → logprob: -13.311969757080078
    4. '	b' → logprob: -16.186969757080078
    5. '_b' → logprob: -17.811969757080078
    6. ' ' → logprob: -18.686969757080078
    7. '  ' → logprob: -18.686969757080078
    8. ' б' → logprob: -19.311969757080078
    9. ')b' → logprob: -19.436969757080078
    10. '   ' → logprob: -19.936969757080078

Token 40: '

' (ID: 279)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.1170287132263184
    2. '\n' → logprob: -1.2420287132263184
    3. '/' → logprob: -1.7420287132263184
    4. '
' → logprob: -2.9920287132263184
    5. ' 
' → logprob: -3.1170287132263184
    6. '/
' → logprob: -3.2420287132263184
    7. '\' → logprob: -3.7420287132263184
    8. '' → logprob: -3.8670287132263184
    9. 'print' → logprob: -4.367028713226318
    10. 'd' → logprob: -5.492028713226318

Token 41: 'if' (ID: 366)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04628171771764755
    2. 'print' → logprob: -3.2962818145751953
    3. 'if' → logprob: -5.421281814575195
    4. '\n' → logprob: -7.421281814575195
    5. 'd' → logprob: -7.546281814575195
    6. 'pri' → logprob: -7.796281814575195
    7. 'pr' → logprob: -8.046281814575195
    8. '' → logprob: -8.296281814575195
    9. '\' → logprob: -8.671281814575195
    10. 'try' → logprob: -8.796281814575195

Token 42: ' add' (ID: 1147)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9026703834533691
    2. ' add' → logprob: -0.9026703834533691
    3. 'a' → logprob: -1.9026703834533691
    4. 'add' → logprob: -3.277670383453369
    5. ' ' → logprob: -6.402670383453369
    6. 'sub' → logprob: -9.277669906616211
    7. ' sub' → logprob: -9.277669906616211
    8. '(add' → logprob: -9.527669906616211
    9. ' ' → logprob: -9.652669906616211
    10. '  ' → logprob: -10.152669906616211

Token 43: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12972627580165863
    2. ' ==' → logprob: -2.6297261714935303
    3. ' >=' → logprob: -3.7547261714935303
    4. ' <=' → logprob: -4.254726409912109
    5. ' ' → logprob: -5.129726409912109
    6. '>' → logprob: -5.754726409912109
    7. ' <' → logprob: -6.129726409912109
    8. ' !=' → logprob: -8.12972640991211
    9. '==' → logprob: -8.75472640991211
    10. '  ' → logprob: -9.87972640991211

Token 44: ' sub' (ID: 1543)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24005571007728577
    2. 'b' → logprob: -1.8650556802749634
    3. ' ' → logprob: -3.740055799484253
    4. '10' → logprob: -4.365055561065674
    5. 'sub' → logprob: -4.615055561065674
    6. ' b' → logprob: -4.740055561065674
    7. 'mul' → logprob: -6.865055561065674
    8. '100' → logprob: -6.990055561065674
    9. ' sub' → logprob: -7.490055561065674
    10. '20' → logprob: -7.865055561065674

Token 45: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19743046164512634
    2. ' :' → logprob: -2.197430372238159
    3. ' and' → logprob: -2.697430372238159
    4. 'and' → logprob: -7.447430610656738
    5. ' ' → logprob: -10.447430610656738
    6. ':
' → logprob: -10.947430610656738
    7. '>' → logprob: -11.072430610656738
    8. ' :
' → logprob: -11.697430610656738
    9. ' >' → logprob: -12.322430610656738
    10. '.' → logprob: -12.322430610656738

Token 46: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.28342369198799133
    2. 'add' → logprob: -1.408423662185669
    3. ' mul' → logprob: -6.658423900604248
    4. 'mul' → logprob: -7.033423900604248
    5. ' sub' → logprob: -10.40842342376709
    6. 'sub' → logprob: -10.53342342376709
    7. '	add' → logprob: -11.53342342376709
    8. ' ad' → logprob: -11.53342342376709
    9. ' a' → logprob: -12.03342342376709
    10. 'a' → logprob: -12.47092342376709

Token 47: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0905560702085495
    2. ' <=' → logprob: -3.0905561447143555
    3. '>=' → logprob: -3.4655561447143555
    4. ' >' → logprob: -4.9655561447143555
    5. '>' → logprob: -6.5905561447143555
    6. '<=' → logprob: -6.5905561447143555
    7. ' ' → logprob: -9.965556144714355
    8. ' <' → logprob: -10.090556144714355
    9. '```' → logprob: -12.215556144714355
    10. '<' → logprob: -12.340556144714355

Token 48: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.2254440188407898
    2. 'mul' → logprob: -1.6004440784454346
    3. '_mul' → logprob: -11.350443840026855
    4. ' mull' → logprob: -11.975443840026855
    5. 'multip' → logprob: -12.975443840026855
    6. ' ' → logprob: -12.975443840026855
    7. 'm' → logprob: -13.475443840026855
    8. '.mul' → logprob: -13.475443840026855
    9. ' multip' → logprob: -13.725443840026855
    10. ' muli' → logprob: -14.225443840026855

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001382241171086207
    2. ' :' → logprob: -9.000138282775879
    3. ':
' → logprob: -11.500138282775879
    4. ' and' → logprob: -13.000138282775879
    5. '):' → logprob: -13.750138282775879
    6. ':**' → logprob: -15.125138282775879
    7. '>:' → logprob: -15.125138282775879
    8. 'and' → logprob: -15.250138282775879
    9. '：' → logprob: -16.250137329101562
    10. ':

' → logprob: -16.625137329101562

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6175425052642822
    2. 'print' → logprob: -1.6175425052642822
    3. ' print' → logprob: -1.7425425052642822
    4. ':' → logprob: -2.7425425052642822
    5. ':
' → logprob: -4.617542266845703
    6. '\n' → logprob: -5.492542266845703
    7. '    
' → logprob: -5.867542266845703
    8. '```' → logprob: -6.242542266845703
    9. '
' → logprob: -6.867542266845703
    10. '	print' → logprob: -7.617542266845703

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00014072739577386528
    2. ' print' → logprob: -9.000141143798828
    3. 'result' → logprob: -11.750141143798828
    4. '   ' → logprob: -11.875141143798828
    5. 'add' → logprob: -14.125141143798828
    6. 'pr' → logprob: -14.375141143798828
    7. ' ' → logprob: -14.500141143798828
    8. '```' → logprob: -15.875141143798828
    9. 'max' → logprob: -16.250141143798828
    10. 'prin' → logprob: -16.375141143798828

Token 52: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.2536091208457947
    2. '(' → logprob: -1.5036091804504395
    3. '("' → logprob: -6.7536091804504395
    4. '(a' → logprob: -8.378608703613281
    5. 'add' → logprob: -8.753608703613281
    6. '('' → logprob: -9.753608703613281
    7. ' (' → logprob: -10.878608703613281
    8. '()' → logprob: -10.878608703613281
    9. '("("' → logprob: -11.378608703613281
    10. '((' → logprob: -12.503608703613281

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.857719275401905e-05
    2. ')
' → logprob: -10.250038146972656
    3. ' )' → logprob: -13.375038146972656
    4. '')' → logprob: -13.750038146972656
    5. '")' → logprob: -15.375038146972656
    6. '）' → logprob: -15.375038146972656
    7. '`)' → logprob: -16.875038146972656
    8. '   ' → logprob: -17.000038146972656
    9. ')

' → logprob: -17.375038146972656
    10. '}' → logprob: -17.625038146972656

Token 54: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.014653963968157768
    2. 'else' → logprob: -4.639654159545898
    3. '\n' → logprob: -6.139654159545898
    4. '
' → logprob: -6.264654159545898
    5. ' elif' → logprob: -8.014654159545898
    6. '<|end|>' → logprob: -9.014654159545898
    7. '```' → logprob: -9.764654159545898
    8. ')' → logprob: -9.889654159545898
    9. '\' → logprob: -10.264654159545898
    10. '    
' → logprob: -10.264654159545898

Token 55: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.0468258336186409
    2. 'sub' → logprob: -3.421825885772705
    3. ' mul' → logprob: -4.421825885772705
    4. ' add' → logprob: -7.546825885772705
    5. ' ' → logprob: -8.171825408935547
    6. 'mul' → logprob: -9.046825408935547
    7. ' ' → logprob: -9.671825408935547
    8. 'add' → logprob: -10.921825408935547
    9. '   ' → logprob: -11.171825408935547
    10. ' b' → logprob: -11.296825408935547

Token 56: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.4796508550643921
    2. ' >' → logprob: -0.9796508550643921
    3. '>' → logprob: -5.479650974273682
    4. '>=' → logprob: -6.729650974273682
    5. ' ' → logprob: -9.479650497436523
    6. ' <' → logprob: -9.604650497436523
    7. ' <=' → logprob: -10.354650497436523
    8. '   ' → logprob: -11.729650497436523
    9. '  ' → logprob: -13.354650497436523
    10. ' ' → logprob: -13.479650497436523

Token 57: ' add' (ID: 1147)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.04719478636980057
    2. 'add' → logprob: -3.172194719314575
    3. ' mul' → logprob: -5.797194957733154
    4. ' add' → logprob: -6.797194957733154
    5. 'a' → logprob: -12.047194480895996
    6. 'm' → logprob: -12.297194480895996
    7. 'mult' → logprob: -12.422194480895996
    8. 'multip' → logprob: -12.422194480895996
    9. ' ' → logprob: -12.547194480895996
    10. '_mul' → logprob: -13.297194480895996

Token 58: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005955583415925503
    2. 'and' → logprob: -5.130955696105957
    3. ' ' → logprob: -10.630955696105957
    4. ':' → logprob: -14.255955696105957
    5. ' or' → logprob: -14.630955696105957
    6. ' ' → logprob: -14.630955696105957
    7. ' an' → logprob: -15.130955696105957
    8. ' a' → logprob: -15.380955696105957
    9. '   ' → logprob: -15.630955696105957
    10. ' :' → logprob: -16.00595474243164

Token 59: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.10024894028902054
    2. ' sub' → logprob: -2.3502490520477295
    3. '	sub' → logprob: -11.100249290466309
    4. ' ' → logprob: -11.350249290466309
    5. '(sub' → logprob: -12.600249290466309
    6. '[sub' → logprob: -13.287749290466309
    7. '   ' → logprob: -13.350249290466309
    8. '_sub' → logprob: -13.600249290466309
    9. ' subi' → logprob: -13.725249290466309
    10. '.sub' → logprob: -13.725249290466309

Token 60: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08895625174045563
    2. '>=' → logprob: -2.463956356048584
    3. ' ' → logprob: -12.088955879211426
    4. '>' → logprob: -12.338955879211426
    5. ' >' → logprob: -12.463955879211426
    6. '   ' → logprob: -13.838955879211426
    7. ')>=' → logprob: -13.963955879211426
    8. ']>=' → logprob: -14.588955879211426
    9. '<|end|>' → logprob: -15.838955879211426
    10. '  ' → logprob: -16.088956832885742

Token 61: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.5760238170623779
    2. 'mul' → logprob: -0.8260238170623779
    3. '_mul' → logprob: -10.451024055480957
    4. 'multip' → logprob: -10.951024055480957
    5. ' mull' → logprob: -11.576024055480957
    6. 'm' → logprob: -12.326024055480957
    7. ' ' → logprob: -12.326024055480957
    8. '.mul' → logprob: -12.326024055480957
    9. 'mult' → logprob: -12.826024055480957
    10. ' muli' → logprob: -12.826024055480957

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002067588793579489
    2. ':
' → logprob: -8.50020694732666
    3. ' :' → logprob: -12.75020694732666
    4. '):' → logprob: -15.12520694732666
    5. '   ' → logprob: -16.750205993652344
    6. ':

' → logprob: -16.875205993652344
    7. ':
' → logprob: -17.375205993652344
    8. ':**' → logprob: -17.500205993652344
    9. ' :
' → logprob: -18.500205993652344
    10. ':`' → logprob: -19.125205993652344

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006035494152456522
    2. 'print' → logprob: -7.625603675842285
    3. ' print' → logprob: -9.875603675842285
    4. '       ' → logprob: -9.875603675842285
    5. '```' → logprob: -11.750603675842285
    6. '   ' → logprob: -12.625603675842285
    7. '	print' → logprob: -14.500603675842285
    8. '    
' → logprob: -15.000603675842285
    9. '``' → logprob: -15.250603675842285
    10. '   ' → logprob: -16.50060272216797

Token 64: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005610156804323196
    2. ' print' → logprob: -8.125560760498047
    3. '   ' → logprob: -8.250560760498047
    4. '```' → logprob: -12.625560760498047
    5. '	print' → logprob: -15.125560760498047
    6. '``' → logprob: -16.500560760498047
    7. ' ' → logprob: -16.875560760498047
    8. '.print' → logprob: -17.500560760498047
    9. 'printf' → logprob: -17.500560760498047
    10. '  ' → logprob: -17.500560760498047

Token 65: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.625004768371582
    3. 'sub' → logprob: -13.875004768371582
    4. ' (' → logprob: -17.750003814697266
    5. '(Sub' → logprob: -17.750003814697266
    6. '(
' → logprob: -18.000003814697266
    7. '(substr' → logprob: -18.125003814697266
    8. '=sub' → logprob: -18.125003814697266
    9. '(s' → logprob: -19.875003814697266
    10. ' sub' → logprob: -20.500003814697266

Token 66: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20161370933055878
    2. ')' → logprob: -1.7016136646270752
    3. 'elif' → logprob: -8.951613426208496
    4. ' )
' → logprob: -9.826613426208496
    5. ' )' → logprob: -12.576613426208496
    6. ')
' → logprob: -12.701613426208496
    7. '   ' → logprob: -12.826613426208496
    8. 'else' → logprob: -12.951613426208496
    9. ')

' → logprob: -13.826613426208496
    10. '')
' → logprob: -14.201613426208496

Token 67: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.014169389382004738
    2. 'elif' → logprob: -4.264169216156006
    3. ' else' → logprob: -12.264169692993164
    4. 'els' → logprob: -14.389169692993164
    5. 'el' → logprob: -15.014169692993164
    6. 'elses' → logprob: -16.014169692993164
    7. 'e' → logprob: -16.639169692993164
    8. 'elseif' → logprob: -16.764169692993164
    9. 'elsif' → logprob: -17.014169692993164
    10. 'eli' → logprob: -17.139169692993164

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.839121826691553e-05
    2. ':
' → logprob: -9.625078201293945
    3. ' :' → logprob: -11.500078201293945
    4. '   ' → logprob: -13.250078201293945
    5. ':
' → logprob: -16.375078201293945
    6. '):' → logprob: -16.500078201293945
    7. '():' → logprob: -16.625078201293945
    8. 'print' → logprob: -16.750078201293945
    9. '：' → logprob: -17.125078201293945
    10. ' :
' → logprob: -17.625078201293945

Token 69: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013691275380551815
    2. '   ' → logprob: -4.763691425323486
    3. ' print' → logprob: -5.513691425323486
    4. 'mul' → logprob: -6.888691425323486
    5. ' mul' → logprob: -11.388690948486328
    6. '(print' → logprob: -14.138690948486328
    7. '	print' → logprob: -15.013690948486328
    8. 'multip' → logprob: -15.138690948486328
    9. '  ' → logprob: -15.513690948486328
    10. '```' → logprob: -15.763690948486328

Token 70: ' print' (ID: 2123)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.061967913061380386
    2. 'print' (adapté à ' print') → logprob: -2.8119678497314453
    3. 'multip' → logprob: -15.561967849731445
    4. ' mul' → logprob: -17.311967849731445
    5. '   ' → logprob: -18.311967849731445
    6. 'mult' → logprob: -18.811967849731445
    7. '```' → logprob: -18.811967849731445
    8. 'multiply' → logprob: -19.311967849731445
    9. '_mul' → logprob: -19.311967849731445
    10. 'mu' → logprob: -19.311967849731445

Token 71: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -11.250019073486328
    3. 'mul' → logprob: -12.000019073486328
    4. '(mult' → logprob: -16.250019073486328
    5. '_mul' → logprob: -17.375019073486328
    6. '(mu' → logprob: -18.500019073486328
    7. 'Mul' → logprob: -19.250019073486328
    8. '(max' → logprob: -19.625019073486328
    9. 'm' → logprob: -19.750019073486328
    10. ' (' → logprob: -20.500019073486328

Token 72: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.9361264946837764e-07
    2. 'u' → logprob: -16.25
    3. 'ult' → logprob: -18.625
    4. '<ul' → logprob: -18.75
    5. 'mul' → logprob: -18.875
    6. ' ul' → logprob: -19.125
    7. 'um' → logprob: -20.125
    8. 'ул' → logprob: -20.5
    9. 'l' → logprob: -21.5
    10. 'ut' → logprob: -22.125

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. '))' → logprob: -16.875
    4. ')
' → logprob: -18.25
    5. ')`' → logprob: -18.25
    6. '')' → logprob: -19.375
    7. '()' → logprob: -19.75
    8. '）' → logprob: -20.75
    9. '`)' → logprob: -20.75
    10. '())' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 59
Précision stricte (1ère position): 40.85%
Précision adaptée (1ère position): 43.66%
Précision (top 10): 83.10%
================================================================================
