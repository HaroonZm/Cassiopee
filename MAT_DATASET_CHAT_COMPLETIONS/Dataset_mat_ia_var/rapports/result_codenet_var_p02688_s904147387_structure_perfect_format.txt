================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, K = map(int, input().split())

Sunuke = [1] * N
for i in range(K):
    d = int(input())
    A = list(map(int, input().split()))
    for ii in range(d):
        Sunuke[A[ii] - 1] = 0

print(sum(Sunuke))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' K' (ID: 658)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012064074166119099
    2. ' =' → logprob: -4.512063980102539
    3. ',' → logprob: -7.012063980102539
    4. ')' → logprob: -10.762063980102539
    5. '```' → logprob: -10.762063980102539
    6. '.' → logprob: -11.262063980102539
    7. ':' → logprob: -11.387063980102539
    8. '[' → logprob: -11.762063980102539
    9. '+' → logprob: -11.762063980102539
    10. ' ' → logprob: -12.012063980102539

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09702791273593903
    2. ' map' → logprob: -3.0970280170440674
    3. '10' → logprob: -3.5970280170440674
    4. 'map' → logprob: -4.597027778625488
    5. '0' → logprob: -6.097027778625488
    6. ' input' → logprob: -6.097027778625488
    7. 'input' → logprob: -6.597027778625488
    8. '5' → logprob: -7.097027778625488
    9. '20' → logprob: -7.097027778625488
    10. '32' → logprob: -7.972027778625488

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015509623102843761
    2. '(lambda' → logprob: -4.515509605407715
    3. '(int' → logprob: -5.640509605407715
    4. '(str' → logprob: -7.765509605407715
    5. '```' → logprob: -9.265509605407715
    6. '<|end|>' → logprob: -9.390509605407715
    7. '(input' → logprob: -9.765509605407715
    8. '(user' → logprob: -9.890509605407715
    9. '(
' → logprob: -10.390509605407715
    10. '(eval' → logprob: -11.140509605407715

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.17418217658996582
    2. ')' → logprob: -2.049182176589966
    3. '(' → logprob: -3.799182176589966
    4. '```' → logprob: -5.799181938171387
    5. 'input' → logprob: -6.549181938171387
    6. '`' → logprob: -6.924181938171387
    7. '`)' → logprob: -7.174181938171387
    8. '(user' → logprob: -7.174181938171387
    9. '(int' → logprob: -8.424181938171387
    10. '(raw' → logprob: -8.424181938171387

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004099058452993631
    2. ' input' → logprob: -5.504098892211914
    3. ')' → logprob: -10.879098892211914
    4. '(input' → logprob: -13.754098892211914
    5. ',input' → logprob: -14.879098892211914
    6. '<input' → logprob: -15.379098892211914
    7. '```' → logprob: -17.254098892211914
    8. '=input' → logprob: -17.379098892211914
    9. '	input' → logprob: -18.004098892211914
    10. '[input' → logprob: -18.254098892211914

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4457366466522217
    2. '()' → logprob: -1.0707366466522217
    3. '().' → logprob: -4.695736885070801
    4. '('' → logprob: -6.695736885070801
    5. '(""))' → logprob: -6.820736885070801
    6. ')' → logprob: -7.070736885070801
    7. '()))' → logprob: -7.070736885070801
    8. '(' → logprob: -7.070736885070801
    9. '());' → logprob: -7.445736885070801
    10. '`()' → logprob: -7.695736885070801

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002525245537981391
    2. 'strip' → logprob: -6.002525329589844
    3. 'rstrip' → logprob: -10.752525329589844
    4. 'read' → logprob: -11.252525329589844
    5. ')' → logprob: -11.752525329589844
    6. ' split' → logprob: -12.002525329589844
    7. 'spl' → logprob: -15.127525329589844
    8. '(split' → logprob: -15.627525329589844
    9. 'startswith' → logprob: -15.627525329589844
    10. 'replace' → logprob: -15.752525329589844

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03583139553666115
    2. '))' → logprob: -3.7858314514160156
    3. '())' → logprob: -4.410831451416016
    4. '()' → logprob: -8.660831451416016
    5. '()))' → logprob: -9.785831451416016
    6. '(' → logprob: -9.910831451416016
    7. '`)' → logprob: -10.160831451416016
    8. ')`' → logprob: -11.660831451416016
    9. '>)' → logprob: -11.910831451416016
    10. ')))' → logprob: -12.285831451416016

Token 11: 'Sun' (ID: 30112)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5216298699378967
    2. 'for' → logprob: -1.896629810333252
    3. 'if' → logprob: -1.896629810333252
    4. 'x' → logprob: -3.146629810333252
    5. 'n' → logprob: -4.271629810333252
    6. 'd' → logprob: -4.396629810333252
    7. 's' → logprob: -4.896629810333252
    8. 'i' → logprob: -5.396629810333252
    9. '#' → logprob: -6.021629810333252
    10. 'print' → logprob: -6.146629810333252

Token 12: 'uke' (ID: 10307)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1701003611087799
    2. 's' → logprob: -3.420100450515747
    3. '=' → logprob: -3.545100450515747
    4. ' =' → logprob: -3.545100450515747
    5. ' ' → logprob: -3.920100450515747
    6. 'shine' → logprob: -4.670100212097168
    7. 'light' → logprob: -4.670100212097168
    8. ''s' → logprob: -5.920100212097168
    9. '()' → logprob: -5.920100212097168
    10. 'ny' → logprob: -6.045100212097168

Token 13: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14922133088111877
    2. ''s' → logprob: -3.399221420288086
    3. '=' → logprob: -3.899221420288086
    4. ''' → logprob: -3.899221420288086
    5. ' =' → logprob: -3.899221420288086
    6. ' ' → logprob: -4.524221420288086
    7. '_' → logprob: -4.524221420288086
    8. 's' → logprob: -5.399221420288086
    9. ' is' → logprob: -6.024221420288086
    10. '```' → logprob: -6.149221420288086

Token 14: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0338214635849
    2. '[]' → logprob: -1.2838214635849
    3. '[' → logprob: -2.1588215827941895
    4. 'K' → logprob: -2.9088215827941895
    5. '[K' → logprob: -3.4088215827941895
    6. ' []' → logprob: -3.6588215827941895
    7. ' [' → logprob: -3.7838215827941895
    8. ' K' → logprob: -4.0338215827941895
    9. ' ' → logprob: -4.0338215827941895
    10. 'set' → logprob: -4.1588215827941895

Token 15: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2270815074443817
    2. '0' → logprob: -1.602081537246704
    3. 'map' → logprob: -7.352081298828125
    4. ']' → logprob: -8.227081298828125
    5. ' int' → logprob: -8.352081298828125
    6. '(int' → logprob: -8.852081298828125
    7. 'i' → logprob: -8.852081298828125
    8. ']int' → logprob: -8.852081298828125
    9. '1' → logprob: -10.727081298828125
    10. 'False' → logprob: -11.227081298828125

Token 16: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44343623518943787
    2. ',' → logprob: -1.0684362649917603
    3. ')' → logprob: -5.193436145782471
    4. ' ]' → logprob: -5.693436145782471
    5. '0' → logprob: -6.693436145782471
    6. '+' → logprob: -6.818436145782471
    7. ')]' → logprob: -7.068436145782471
    8. ' for' → logprob: -7.193436145782471
    9. ']*' → logprob: -8.568436622619629
    10. '2' → logprob: -8.568436622619629

Token 17: ' *' (ID: 425)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0770251750946045
    2. '+' → logprob: -1.2020251750946045
    3. '*' → logprob: -1.9520251750946045
    4. ',' → logprob: -2.3270251750946045
    5. '[' → logprob: -2.5770251750946045
    6. ']' → logprob: -3.8270251750946045
    7. ')' → logprob: -5.202025413513184
    8. ' *' → logprob: -5.702025413513184
    9. ' ' → logprob: -5.702025413513184
    10. ' +' → logprob: -6.077025413513184

Token 18: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.30512332916259766
    2. 'K' → logprob: -1.4301233291625977
    3. ' N' → logprob: -4.805123329162598
    4. '(' → logprob: -4.930123329162598
    5. '(N' → logprob: -5.930123329162598
    6. ' K' → logprob: -6.055123329162598
    7. '(K' → logprob: -6.430123329162598
    8. ' (' → logprob: -6.430123329162598
    9. ' ' → logprob: -11.055123329162598
    10. 'NK' → logprob: -11.805123329162598

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1017106771469116
    2. '
' → logprob: -1.2267106771469116
    3. '\n' → logprob: -2.351710796356201
    4. ' for' → logprob: -2.601710796356201
    5. '[' → logprob: -2.851710796356201
    6. '<|end|>' → logprob: -2.851710796356201
    7. ' 
' → logprob: -3.601710796356201
    8. '```' → logprob: -4.226710796356201
    9. '
' → logprob: -4.476710796356201
    10. '\' → logprob: -4.851710796356201

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20259875059127808
    2. '
' → logprob: -2.452598810195923
    3. ' for' → logprob: -2.702598810195923
    4. ' 
' → logprob: -4.452598571777344
    5. '
' → logprob: -4.452598571777344
    6. '' → logprob: -6.077598571777344
    7. '

' → logprob: -7.077598571777344
    8. '0' → logprob: -7.702598571777344
    9. '\n' → logprob: -7.702598571777344
    10. ' 
' → logprob: -7.952598571777344

Token 21: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6452538967132568
    2. ' i' → logprob: -0.7702538967132568
    3. ' _' → logprob: -5.020254135131836
    4. 'i' → logprob: -5.770254135131836
    5. '_' → logprob: -5.895254135131836
    6. '  ' → logprob: -9.520254135131836
    7. ' ' → logprob: -11.770254135131836
    8. ' ‌' → logprob: -12.270254135131836
    9. ' range' → logprob: -12.395254135131836
    10. '_i' → logprob: -12.520254135131836

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029968809336423874
    2. 'in' → logprob: -3.529968738555908
    3. ' ' → logprob: -8.654969215393066
    4. '  ' → logprob: -11.029969215393066
    5. '	in' → logprob: -11.279969215393066
    6. ' i' → logprob: -12.654969215393066
    7. '+' → logprob: -12.904969215393066
    8. ',' → logprob: -13.404969215393066
    9. 'range' → logprob: -13.404969215393066
    10. 'n' → logprob: -14.217469215393066

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02978045865893364
    2. 'range' → logprob: -3.529780387878418
    3. ' ' → logprob: -10.529780387878418
    4. '	range' → logprob: -13.154780387878418
    5. ' xrange' → logprob: -15.029780387878418
    6. '  ' → logprob: -15.279780387878418
    7. ' ran' → logprob: -15.279780387878418
    8. '(range' → logprob: -15.779780387878418
    9. '   ' → logprob: -16.654781341552734
    10. ' rango' → logprob: -16.654781341552734

Token 24: '(K' (ID: 28797)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019031742122024298
    2. '(N' → logprob: -6.751903057098389
    3. '(K' → logprob: -7.251903057098389
    4. ' (' → logprob: -10.876903533935547
    5. '(n' → logprob: -13.626903533935547
    6. '(i' → logprob: -13.626903533935547
    7. '(
' → logprob: -14.751903533935547
    8. ' ' → logprob: -15.126903533935547
    9. '(len' → logprob: -15.251903533935547
    10. '(S' → logprob: -15.251903533935547

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001674110535532236
    2. '+' → logprob: -7.251674175262451
    3. ' ):' → logprob: -7.751674175262451
    4. ')' → logprob: -8.126673698425293
    5. '-' → logprob: -9.251673698425293
    6. ',' → logprob: -9.751673698425293
    7. '):
' → logprob: -9.751673698425293
    8. ':' → logprob: -11.376673698425293
    9. ' ' → logprob: -13.126673698425293
    10. '**' → logprob: -13.126673698425293

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6397039294242859
    2. ' Sun' → logprob: -1.2647039890289307
    3. ' ' → logprob: -2.7647039890289307
    4. '<|end|>' → logprob: -3.0147039890289307
    5. 'Sun' → logprob: -3.6397039890289307
    6. ' 
' → logprob: -5.014703750610352
    7. '    
' → logprob: -5.014703750610352
    8. '    ' → logprob: -5.264703750610352
    9. ' for' → logprob: -5.514703750610352
    10. ' ind' → logprob: -5.514703750610352

Token 27: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8217505216598511
    2. ' Sun' → logprob: -0.9467505216598511
    3. 'Sun' → logprob: -2.1967506408691406
    4. 'for' → logprob: -4.446750640869141
    5. ' i' → logprob: -4.821750640869141
    6. '0' → logprob: -4.946750640869141
    7. '_' → logprob: -5.321750640869141
    8. ' _' → logprob: -5.446750640869141
    9. ' for' → logprob: -5.446750640869141
    10. 'range' → logprob: -5.696750640869141

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1475352793931961
    2. ' ' → logprob: -2.7725353240966797
    3. '=' → logprob: -2.8975353240966797
    4. '=int' → logprob: -4.77253532409668
    5. ',' → logprob: -5.77253532409668
    6. 'e' → logprob: -6.14753532409668
    7. 'ef' → logprob: -6.64753532409668
    8. '-' → logprob: -7.52253532409668
    9. 'istance' → logprob: -7.77253532409668
    10. 'ay' → logprob: -8.39753532409668

Token 29: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4741740822792053
    2. 'int' → logprob: -0.9741740822792053
    3. '=int' → logprob: -10.349174499511719
    4. '[int' → logprob: -10.474174499511719
    5. ' ' → logprob: -11.474174499511719
    6. '	int' → logprob: -11.849174499511719
    7. '<int' → logprob: -12.224174499511719
    8. '(int' → logprob: -12.224174499511719
    9. '   ' → logprob: -13.599174499511719
    10. 'input' → logprob: -13.599174499511719

Token 30: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001126026691053994
    2. 'input' → logprob: -9.625112533569336
    3. '(' → logprob: -10.000112533569336
    4. ' (' → logprob: -14.375112533569336
    5. ' input' → logprob: -15.750112533569336
    6. '=input' → logprob: -16.000112533569336
    7. ',input' → logprob: -16.125112533569336
    8. '(in' → logprob: -16.875112533569336
    9. '	input' → logprob: -17.375112533569336
    10. '<input' → logprob: -18.125112533569336

Token 31: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0022531491704285145
    2. '()' → logprob: -6.12725305557251
    3. ')' → logprob: -9.752253532409668
    4. '().' → logprob: -12.377253532409668
    5. '())
' → logprob: -12.877253532409668
    6. ' ())' → logprob: -13.377253532409668
    7. '(' → logprob: -14.627253532409668
    8. '()))' → logprob: -15.252253532409668
    9. '();)' → logprob: -15.377253532409668
    10. '()>' → logprob: -15.877253532409668

Token 32: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.21619713306427
    2. '<|end|>' → logprob: -1.21619713306427
    3. '  
' → logprob: -3.0911970138549805
    4. '   ' → logprob: -3.2161970138549805
    5. 'd' → logprob: -3.2161970138549805
    6. '
' → logprob: -3.5911970138549805
    7. '    
' → logprob: -3.7161970138549805
    8. ' 
' → logprob: -3.8411970138549805
    9. 's' → logprob: -3.8411970138549805
    10. '    ' → logprob: -3.9661970138549805

Token 33: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2773915231227875
    2. 'd' → logprob: -2.5273914337158203
    3. 'L' → logprob: -3.2773914337158203
    4. 'for' → logprob: -3.2773914337158203
    5. 'x' → logprob: -3.6523914337158203
    6. 'l' → logprob: -4.27739143371582
    7. 'A' (adapté à ' A') → logprob: -4.77739143371582
    8. 'D' → logprob: -4.77739143371582
    9. ' a' → logprob: -5.65239143371582
    10. '-' → logprob: -5.90239143371582

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5335354804992676
    2. '=' → logprob: -0.9085354804992676
    3. 'rray' → logprob: -5.533535480499268
    4. 'rr' → logprob: -6.283535480499268
    5. '[' → logprob: -6.908535480499268
    6. ' ' → logprob: -7.283535480499268
    7. '[i' → logprob: -7.408535480499268
    8. 'i' → logprob: -7.783535480499268
    9. '_i' → logprob: -8.40853500366211
    10. '=A' → logprob: -8.90853500366211

Token 35: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3133715093135834
    2. 'list' → logprob: -1.3133715391159058
    3. 'input' → logprob: -10.188371658325195
    4. ' input' → logprob: -10.813371658325195
    5. ' map' → logprob: -11.188371658325195
    6. 'map' → logprob: -11.313371658325195
    7. ' [' → logprob: -11.688371658325195
    8. '[' → logprob: -12.438371658325195
    9. ' set' → logprob: -12.438371658325195
    10. 'set' → logprob: -12.938371658325195

Token 36: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.006247173063457012
    2. '(' → logprob: -5.131247043609619
    3. '(int' → logprob: -8.256247520446777
    4. '(input' → logprob: -10.131247520446777
    5. '()' → logprob: -12.256247520446777
    6. ' (' → logprob: -12.256247520446777
    7. '(range' → logprob: -12.506247520446777
    8. '(eval' → logprob: -13.506247520446777
    9. '(s' → logprob: -13.756247520446777
    10. '(filter' → logprob: -14.506247520446777

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012011249782517552
    2. '(' → logprob: -9.125120162963867
    3. 'int' → logprob: -12.000120162963867
    4. '=int' → logprob: -13.250120162963867
    5. ' (' → logprob: -13.875120162963867
    6. '<int' → logprob: -14.375120162963867
    7. ',int' → logprob: -14.500120162963867
    8. '[int' → logprob: -14.750120162963867
    9. ')' → logprob: -15.000120162963867
    10. '```' → logprob: -15.375120162963867

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38817402720451355
    2. ',input' → logprob: -1.138174057006836
    3. '(input' → logprob: -6.763174057006836
    4. 'input' → logprob: -9.638174057006836
    5. ' ,' → logprob: -10.138174057006836
    6. '(' → logprob: -10.263174057006836
    7. ',int' → logprob: -13.263174057006836
    8. ' input' → logprob: -13.638174057006836
    9. '```' → logprob: -14.138174057006836
    10. ')' → logprob: -14.888174057006836

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05488566681742668
    2. ' input' → logprob: -2.9298856258392334
    3. ' ' → logprob: -13.304885864257812
    4. '(input' → logprob: -14.679885864257812
    5. '	input' → logprob: -14.929885864257812
    6. ',input' → logprob: -15.179885864257812
    7. '=input' → logprob: -15.304885864257812
    8. '<input' → logprob: -16.179885864257812
    9. '  ' → logprob: -16.679885864257812
    10. '   ' → logprob: -16.679885864257812

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0445127372804563e-05
    2. ' ().' → logprob: -12.12501049041748
    3. '.' → logprob: -13.12501049041748
    4. '()' → logprob: -13.50001049041748
    5. ' .' → logprob: -14.00001049041748
    6. '(' → logprob: -15.25001049041748
    7. '   ' → logprob: -15.50001049041748
    8. '(.' → logprob: -15.62501049041748
    9. '.split' → logprob: -16.750009536743164
    10. ' ' → logprob: -17.000009536743164

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2352385965641588e-05
    2. 'strip' → logprob: -11.375012397766113
    3. '(split' → logprob: -14.625012397766113
    4. 'rstrip' → logprob: -15.625012397766113
    5. 'spl' → logprob: -16.000011444091797
    6. ' split' → logprob: -16.250011444091797
    7. ')' → logprob: -17.125011444091797
    8. '.split' → logprob: -19.125011444091797
    9. '```' → logprob: -19.625011444091797
    10. 's' → logprob: -20.375011444091797

Token 42: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.14238590002059937
    2. '())' → logprob: -2.142385959625244
    3. '()' → logprob: -4.642385959625244
    4. '))' → logprob: -5.517385959625244
    5. '(' → logprob: -6.892385959625244
    6. ')' → logprob: -7.392385959625244
    7. '()))
' → logprob: -11.142385482788086
    8. '()));' → logprob: -11.392385482788086
    9. '())))' → logprob: -11.767385482788086
    10. '()),' → logprob: -11.892385482788086

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18706627190113068
    2. 'for' → logprob: -2.8120663166046143
    3. ' for' → logprob: -2.8120663166046143
    4. '
' → logprob: -3.4370663166046143
    5. '<|end|>' → logprob: -5.062066078186035
    6. '    
' → logprob: -5.812066078186035
    7. '```' → logprob: -5.937066078186035
    8. '	for' → logprob: -6.187066078186035
    9. ' ' → logprob: -6.187066078186035
    10. '  ' → logprob: -7.062066078186035

Token 44: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04693981260061264
    2. ' for' → logprob: -3.7969398498535156
    3. '   ' → logprob: -4.296939849853516
    4. ' ' → logprob: -5.296939849853516
    5. '
' → logprob: -6.796939849853516
    6. '[' → logprob: -6.796939849853516
    7. '	for' → logprob: -7.296939849853516
    8. '    
' → logprob: -7.796939849853516
    9. '  ' → logprob: -8.171939849853516
    10. '\t' → logprob: -8.296939849853516

Token 45: ' ii' (ID: 28354)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2843702733516693
    2. 'a' → logprob: -1.4093703031539917
    3. ' x' → logprob: -7.034370422363281
    4. ' j' → logprob: -7.159370422363281
    5. ' ' → logprob: -7.409370422363281
    6. 'j' → logprob: -7.909370422363281
    7. 'x' → logprob: -7.909370422363281
    8. 'A' → logprob: -10.659370422363281
    9. ' A' → logprob: -10.909370422363281
    10. '   ' → logprob: -11.284370422363281

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0772043764591217
    2. ' ' → logprob: -3.077204465866089
    3. 'in' → logprob: -3.577204465866089
    4. '  ' → logprob: -8.952204704284668
    5. 'n' → logprob: -10.077204704284668
    6. ' n' → logprob: -10.702204704284668
    7. '   ' → logprob: -11.702204704284668
    8. ',' → logprob: -11.702204704284668
    9. ' :' → logprob: -11.952204704284668
    10. ')' → logprob: -12.202204704284668

Token 47: ' range' (ID: 3352)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06305941939353943
    2. ' A' → logprob: -2.8130593299865723
    3. ' range' → logprob: -7.563059329986572
    4. 'range' → logprob: -7.563059329986572
    5. ' ' → logprob: -10.06305980682373
    6. '	A' → logprob: -12.93805980682373
    7. '   ' → logprob: -13.06305980682373
    8. '  ' → logprob: -13.68805980682373
    9. 'a' → logprob: -14.06305980682373
    10. 'd' → logprob: -14.18805980682373

Token 48: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.09152992814779282
    2. '(len' → logprob: -2.4665298461914062
    3. '(' → logprob: -5.966529846191406
    4. 'd' → logprob: -12.091529846191406
    5. '(N' → logprob: -12.341529846191406
    6. 'len' → logprob: -12.591529846191406
    7. '(K' → logprob: -12.841529846191406
    8. ' (' → logprob: -13.216529846191406
    9. '(n' → logprob: -13.716529846191406
    10. '(D' → logprob: -14.091529846191406

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005068036844022572
    2. '):
' → logprob: -8.000506401062012
    3. ':' → logprob: -8.875506401062012
    4. ' ):' → logprob: -10.750506401062012
    5. ')' → logprob: -12.250506401062012
    6. ',' → logprob: -13.500506401062012
    7. '   ' → logprob: -14.000506401062012
    8. ']:' → logprob: -14.250506401062012
    9. ' ' → logprob: -14.625506401062012
    10. '):
' → logprob: -14.875506401062012

Token 50: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15907809138298035
    2. '       ' → logprob: -2.6590781211853027
    3. 'Sun' → logprob: -3.0340781211853027
    4. ' Sun' → logprob: -3.6590781211853027
    5. '    ' → logprob: -6.909078121185303
    6. '	   ' → logprob: -7.409078121185303
    7. '   ' → logprob: -8.034077644348145
    8. '```' → logprob: -8.034077644348145
    9. '	S' → logprob: -8.534077644348145
    10. ' ' → logprob: -8.784077644348145

Token 51: ' Sun' (ID: 11628)
  Prédit: 'Sun'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sun' (adapté à ' Sun') → logprob: -0.01200671773403883
    2. ' Sun' → logprob: -4.512006759643555
    3. '   ' → logprob: -7.137006759643555
    4. ' ' → logprob: -9.387006759643555
    5. '    ' → logprob: -10.262006759643555
    6. '  ' → logprob: -11.137006759643555
    7. '```' → logprob: -11.887006759643555
    8. '       ' → logprob: -12.262006759643555
    9. 'sun' → logprob: -12.762006759643555
    10. '	S' → logprob: -13.137006759643555

Token 52: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.0027404469437897205
    2. '[' → logprob: -6.002740383148193
    3. '[i' → logprob: -9.627740859985352
    4. 'ke' → logprob: -10.002740859985352
    5. 'u' → logprob: -10.127740859985352
    6. '```' → logprob: -10.127740859985352
    7. '_ke' → logprob: -11.252740859985352
    8. '_[' → logprob: -11.377740859985352
    9. 'uk' → logprob: -11.877740859985352
    10. '_' → logprob: -12.252740859985352

Token 53: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0005745976231992245
    2. '[' → logprob: -7.500574588775635
    3. '[a' → logprob: -11.875575065612793
    4. 'A' → logprob: -12.250575065612793
    5. '[
' → logprob: -13.000575065612793
    6. '[S' → logprob: -13.000575065612793
    7. '[int' → logprob: -13.375575065612793
    8. '[(' → logprob: -14.250575065612793
    9. '[-' → logprob: -14.250575065612793
    10. ' [' → logprob: -14.500575065612793

Token 54: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -2.5776860184123507e-06
    2. '[i' → logprob: -13.12500286102295
    3. 'ii' → logprob: -15.12500286102295
    4. '[' → logprob: -16.500001907348633
    5. '[-' → logprob: -16.750001907348633
    6. '-' → logprob: -18.125001907348633
    7. '(ii' → logprob: -18.250001907348633
    8. '
' → logprob: -18.375001907348633
    9. '[int' → logprob: -18.625001907348633
    10. '```' → logprob: -18.750001907348633

Token 55: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5975193977355957
    2. ']' → logprob: -1.4725193977355957
    3. ']-' → logprob: -2.0975193977355957
    4. '[i' → logprob: -2.5975193977355957
    5. ' -' → logprob: -4.347519397735596
    6. '[' → logprob: -5.472519397735596
    7. '[ii' → logprob: -5.972519397735596
    8. '   ' → logprob: -6.847519397735596
    9. ' ' → logprob: -7.347519397735596
    10. '  ' → logprob: -7.722519397735596

Token 56: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03458661958575249
    2. ']' → logprob: -3.7845866680145264
    3. ' -' → logprob: -4.534586429595947
    4. ']-' → logprob: -7.909586429595947
    5. '[' → logprob: -10.284586906433105
    6. '1' → logprob: -10.284586906433105
    7. ' ' → logprob: -10.284586906433105
    8. '0' → logprob: -11.409586906433105
    9. ' -=' → logprob: -11.409586906433105
    10. '   ' → logprob: -11.784586906433105

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018399098189547658
    2. ' ' → logprob: -8.625184059143066
    3. '<|end|>' → logprob: -12.875184059143066
    4. '   ' → logprob: -14.250184059143066
    5. ']' → logprob: -15.250184059143066
    6. '```' → logprob: -15.500184059143066
    7. '>' → logprob: -16.25018310546875
    8. '<|end|>' → logprob: -16.93768310546875
    9. '１' → logprob: -17.00018310546875
    10. '-' → logprob: -17.18768310546875

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.625011444091797
    3. '<|end|>' → logprob: -13.937511444091797
    4. '```' → logprob: -15.562511444091797
    5. '   ' → logprob: -15.875011444091797
    6. ']' → logprob: -16.250011444091797
    7. '2' → logprob: -16.437511444091797
    8. '１' → logprob: -16.562511444091797
    9. '`' → logprob: -16.687511444091797
    10. '0' → logprob: -16.937511444091797

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014226144412532449
    2. ']=' → logprob: -6.62642240524292
    3. ' ]' → logprob: -9.501422882080078
    4. ']+=' → logprob: -11.626422882080078
    5. '=' → logprob: -11.876422882080078
    6. '-' → logprob: -13.001422882080078
    7. ']=-' → logprob: -13.751422882080078
    8. ']==' → logprob: -14.501422882080078
    9. ']*' → logprob: -15.251422882080078
    10. ')' → logprob: -15.501422882080078

Token 60: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20148654282093048
    2. '*=' → logprob: -1.701486587524414
    3. ' =' → logprob: -10.701486587524414
    4. ' *=' → logprob: -10.951486587524414
    5. '*' → logprob: -11.201486587524414
    6. '-=' → logprob: -11.701486587524414
    7. '+=' → logprob: -12.076486587524414
    8. '//=' → logprob: -14.076486587524414
    9. '%=' → logprob: -14.451486587524414
    10. ']=' → logprob: -14.451486587524414

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.0033853515051305e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.750060081481934
    4. 'Sun' → logprob: -15.125060081481934
    5. '  ' → logprob: -15.312560081481934
    6. '1' → logprob: -15.812560081481934
    7. '    ' → logprob: -16.062559127807617
    8. '```' → logprob: -16.625059127807617
    9. '2' → logprob: -17.000059127807617
    10. '-' → logprob: -17.187559127807617

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.763666947837919e-05
    2. ' ' → logprob: -10.00004768371582
    3. 'Sun' → logprob: -14.37504768371582
    4. '   ' → logprob: -14.81254768371582
    5. '  ' → logprob: -15.00004768371582
    6. '    ' → logprob: -15.56254768371582
    7. '1' → logprob: -15.87504768371582
    8. '2' → logprob: -16.68754768371582
    9. '-' → logprob: -16.75004768371582
    10. '```' → logprob: -16.81254768371582

Token 63: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05139167606830597
    2. 'for' → logprob: -3.0513916015625
    3. 'sum' → logprob: -6.4263916015625
    4. 'if' → logprob: -7.3013916015625
    5. '```' → logprob: -8.8013916015625
    6. 'result' → logprob: -9.1763916015625
    7. '
' → logprob: -9.3013916015625
    8. '0' → logprob: -10.4263916015625
    9. ' for' → logprob: -10.5513916015625
    10. ')' → logprob: -11.0513916015625

Token 65: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025582438334822655
    2. '(S' → logprob: -3.7755825519561768
    3. '(sum' → logprob: -6.150582313537598
    4. '(len' → logprob: -10.025582313537598
    5. '()' → logprob: -10.025582313537598
    6. '((' → logprob: -10.525582313537598
    7. '("("' → logprob: -10.525582313537598
    8. '('' → logprob: -10.775582313537598
    9. '(s' → logprob: -11.150582313537598
    10. '(max' → logprob: -12.525582313537598

Token 66: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.001513312105089426
    2. '(' → logprob: -6.501513481140137
    3. ')' → logprob: -11.501513481140137
    4. '(s' → logprob: -15.376513481140137
    5. ' (' → logprob: -15.501513481140137
    6. '(`' → logprob: -15.876513481140137
    7. '()' → logprob: -16.12651252746582
    8. '(N' → logprob: -16.62651252746582
    9. '(D' → logprob: -17.00151252746582
    10. '(

' → logprob: -17.37651252746582

Token 67: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0001549089647596702
    2. 'Sun' → logprob: -9.500154495239258
    3. 'unene' → logprob: -9.875154495239258
    4. 'Un' → logprob: -11.750154495239258
    5. 'u' → logprob: -11.875154495239258
    6. 'uneka' → logprob: -12.625154495239258
    7. 'uke' → logprob: -13.500154495239258
    8. '	un' → logprob: -13.875154495239258
    9. 'n' → logprob: -13.875154495239258
    10. '(un' → logprob: -14.125154495239258

Token 68: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -6.704273118884885e-07
    2. 'uk' → logprob: -15.375000953674316
    3. 'u' → logprob: -15.625000953674316
    4. ' uke' → logprob: -16.125
    5. '_' → logprob: -16.75
    6. 'ke' → logprob: -17.125
    7. '```' → logprob: -18.0
    8. ')' → logprob: -18.625
    9. 'ukke' → logprob: -18.625
    10. '[' → logprob: -19.125

Token 69: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014164566993713379
    2. '))' → logprob: -4.264164447784424
    3. ' )' → logprob: -14.389164924621582
    4. ')))' → logprob: -15.139164924621582
    5. '())' → logprob: -16.264163970947266
    6. '])' → logprob: -17.139163970947266
    7. ')`' → logprob: -17.389163970947266
    8. ')
' → logprob: -17.514163970947266
    9. '）' → logprob: -17.639163970947266
    10. ')}' → logprob: -17.764163970947266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 43.28%
Précision adaptée (1ère position): 46.27%
Précision (top 10): 89.55%
================================================================================
