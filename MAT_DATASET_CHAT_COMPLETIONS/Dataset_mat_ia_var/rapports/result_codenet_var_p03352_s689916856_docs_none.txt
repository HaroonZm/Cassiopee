================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys, os

f = lambda: list(map(int, input().split()))
if 'local' in os.environ:
    sys.stdin = open('./input.txt', 'r')

def solve():
    x = f()[0]
    a = [0]*10001
    a[1] = 1
    for i in range(2, 1000):
        if i*i <= 1000:
            a[i*i] = 1
            k = 3
            while i**k <= 1000:
                a[i**k] = 1
                k += 1
        else:
            break
    for i in range(x, 0, -1):
        if a[i] == 1:
            print(i)
            break

solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' os' (ID: 1994)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.00407923199236393
    2. ' os' → logprob: -5.504079341888428
    3. 'io' → logprob: -15.00407886505127
    4. 'math' → logprob: -15.50407886505127
    5. 're' → logprob: -16.129079818725586
    6. 'json' → logprob: -16.379079818725586
    7. '"os' → logprob: -16.504079818725586
    8. ' getopt' → logprob: -17.504079818725586
    9. '	os' → logprob: -18.004079818725586
    10. 'sub' → logprob: -18.254079818725586

Token 4: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2262103408575058
    2. '<|end|>' → logprob: -2.226210355758667
    3. '
' → logprob: -3.851210355758667
    4. ',' → logprob: -4.101210117340088
    5. '

' → logprob: -4.226210117340088
    6. '.' → logprob: -4.226210117340088
    7. 'import' → logprob: -4.601210117340088
    8. '```' → logprob: -5.476210117340088
    9. '\' → logprob: -5.601210117340088
    10. 'newline' → logprob: -5.726210117340088

Token 5: 'f' (ID: 69)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.13612741231918335
    2. '
' → logprob: -2.886127471923828
    3. '<|end|>' → logprob: -3.511127471923828
    4. '

' → logprob: -4.261127471923828
    5. 'import' → logprob: -4.886127471923828
    6. ',' → logprob: -5.511127471923828
    7. '.' → logprob: -5.636127471923828
    8. '' → logprob: -5.636127471923828
    9. ';' → logprob: -5.886127471923828
    10. ' ' → logprob: -6.636127471923828

Token 6: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3380614221096039
    2. 'ile' → logprob: -1.5880614519119263
    3. '.' → logprob: -3.4630613327026367
    4. 'o' → logprob: -3.8380613327026367
    5. 'i' → logprob: -4.588061332702637
    6. ' =' → logprob: -5.588061332702637
    7. 'r' → logprob: -6.088061332702637
    8. 'rom' → logprob: -6.213061332702637
    9. '=' → logprob: -6.338061332702637
    10. ')' → logprob: -6.588061332702637

Token 7: ' lambda' (ID: 27871)
  Prédit: ' open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.049805983901023865
    2. 'open' → logprob: -3.0498058795928955
    3. ' sys' → logprob: -7.049806118011475
    4. ' os' → logprob: -8.299805641174316
    5. 'sys' → logprob: -9.424805641174316
    6. 'os' → logprob: -11.549805641174316
    7. '	open' → logprob: -12.549805641174316
    8. ' ' → logprob: -12.674805641174316
    9. '=open' → logprob: -13.424805641174316
    10. '(open' → logprob: -13.549805641174316

Token 8: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05180582031607628
    2. ' ' → logprob: -3.0518057346343994
    3. 'x' → logprob: -6.4268059730529785
    4. '  ' → logprob: -7.6768059730529785
    5. ' s' → logprob: -7.6768059730529785
    6. ' :' → logprob: -8.17680549621582
    7. ' ,' → logprob: -9.42680549621582
    8. ' space' → logprob: -9.67680549621582
    9. '   ' → logprob: -9.80180549621582
    10. ':' → logprob: -10.30180549621582

Token 9: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5464380383491516
    2. 'sys' → logprob: -1.9214379787445068
    3. ' os' → logprob: -2.421437978744507
    4. ' open' → logprob: -2.421437978744507
    5. 'os' → logprob: -3.171437978744507
    6. 'open' → logprob: -3.546437978744507
    7. ' input' → logprob: -4.921438217163086
    8. ' ' → logprob: -5.296438217163086
    9. 'int' → logprob: -5.796438217163086
    10. 'input' → logprob: -5.921438217163086

Token 10: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005021105520427227
    2. '()' → logprob: -6.255021095275879
    3. '[' → logprob: -6.755021095275879
    4. '(range' → logprob: -7.255021095275879
    5. '[int' → logprob: -7.880021095275879
    6. '(int' → logprob: -8.255021095275879
    7. '<|end|>' → logprob: -9.255021095275879
    8. '[str' → logprob: -9.505021095275879
    9. '([]' → logprob: -10.005021095275879
    10. '(
' → logprob: -10.005021095275879

Token 11: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3707873225212097
    2. '(str' → logprob: -1.7457873821258545
    3. '(' → logprob: -2.2457873821258545
    4. '(lambda' → logprob: -3.6207873821258545
    5. 'str' → logprob: -7.370787143707275
    6. '(eval' → logprob: -7.495787143707275
    7. '<|end|>' → logprob: -7.870787143707275
    8. 'int' → logprob: -7.870787143707275
    9. '(ord' → logprob: -9.120787620544434
    10. '(
' → logprob: -9.245787620544434

Token 12: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5047011375427246
    2. '(sys' → logprob: -1.1297011375427246
    3. '(input' → logprob: -3.0047011375427246
    4. '(f' → logprob: -4.629701137542725
    5. ')' → logprob: -4.754701137542725
    6. '(os' → logprob: -6.629701137542725
    7. '(open' → logprob: -7.504701137542725
    8. ',' → logprob: -7.504701137542725
    9. '))' → logprob: -7.754701137542725
    10. '(
' → logprob: -8.254701614379883

Token 13: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.1348366737365723
    2. ' input' → logprob: -1.2598366737365723
    3. 'input' → logprob: -1.5098366737365723
    4. 'sys' → logprob: -1.7598366737365723
    5. '(sys' → logprob: -6.509836673736572
    6. ')' → logprob: -9.009836196899414
    7. ' ' → logprob: -10.134836196899414
    8. '=sys' → logprob: -10.259836196899414
    9. '(input' → logprob: -10.884836196899414
    10. ' raw' → logprob: -11.134836196899414

Token 14: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.8193294405937195
    2. '(' → logprob: -1.8193295001983643
    3. '()' → logprob: -1.8193295001983643
    4. '())' → logprob: -2.1943295001983643
    5. '(()' → logprob: -3.0693295001983643
    6. '()));' → logprob: -3.1943295001983643
    7. '())))' → logprob: -4.194329261779785
    8. '(""))' → logprob: -5.194329261779785
    9. '());' → logprob: -5.319329261779785
    10. '()>' → logprob: -5.819329261779785

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004147376399487257
    2. 'strip' → logprob: -5.504147529602051
    3. 'rstrip' → logprob: -9.62914752960205
    4. ' split' → logprob: -13.50414752960205
    5. 'read' → logprob: -13.50414752960205
    6. '(split' → logprob: -15.37914752960205
    7. ')' → logprob: -16.379146575927734
    8. 'startswith' → logprob: -17.879146575927734
    9. 'spl' → logprob: -18.004146575927734
    10. 'replace' → logprob: -18.629146575927734

Token 16: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4489020109176636
    2. '())' → logprob: -1.8239020109176636
    3. '))' → logprob: -2.198902130126953
    4. ')' → logprob: -3.073902130126953
    5. '()' → logprob: -4.198902130126953
    6. '(' → logprob: -4.448902130126953
    7. ')))' → logprob: -4.573902130126953
    8. '())))' → logprob: -5.198902130126953
    9. '()));' → logprob: -8.948902130126953
    10. '('' → logprob: -9.198902130126953

Token 17: 'if' (ID: 366)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1481988430023193
    2. '\n' → logprob: -1.7731988430023193
    3. '
' → logprob: -2.2731988430023193
    4. 'a' → logprob: -2.3981988430023193
    5. 'x' → logprob: -2.6481988430023193
    6. 'print' → logprob: -2.7731988430023193
    7. 'for' → logprob: -3.0231988430023193
    8. '#' → logprob: -3.2731988430023193
    9. '' → logprob: -3.7731988430023193
    10. 'data' → logprob: -3.8981988430023193

Token 18: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4868208169937134
    2. ' sys' → logprob: -1.2368208169937134
    3. ' len' → logprob: -3.236820697784424
    4. ' not' → logprob: -3.486820697784424
    5. ' os' → logprob: -4.486820697784424
    6. ' __' → logprob: -5.236820697784424
    7. '  ' → logprob: -6.111820697784424
    8. ' f' → logprob: -6.111820697784424
    9. ' ' → logprob: -6.861820697784424
    10. 'sys' → logprob: -7.111820697784424

Token 19: 'local' (ID: 5818)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02206655591726303
    2. '_' → logprob: -4.272066593170166
    3. ''' → logprob: -6.147066593170166
    4. '_'' → logprob: -6.397066593170166
    5. ' __' → logprob: -7.022066593170166
    6. 'sys' → logprob: -7.272066593170166
    7. 'name' → logprob: -7.897066593170166
    8. '_name' → logprob: -8.147066116333008
    9. '___' → logprob: -8.397066116333008
    10. 'f' → logprob: -9.022066116333008

Token 20: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007068181876093149
    2. ')'' → logprob: -5.632068157196045
    3. '')' → logprob: -6.257068157196045
    4. '_'' → logprob: -7.382068157196045
    5. ''in' → logprob: -7.757068157196045
    6. '"'' → logprob: -9.257068634033203
    7. '':' → logprob: -9.757068634033203
    8. '\n' → logprob: -10.757068634033203
    9. '':'' → logprob: -10.757068634033203
    10. ''d' → logprob: -10.757068634033203

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2761833965778351
    2. '()' → logprob: -1.9011833667755127
    3. 'in' → logprob: -3.1511833667755127
    4. '_' → logprob: -4.526183605194092
    5. ' ==' → logprob: -4.776183605194092
    6. ':' → logprob: -4.901183605194092
    7. ' ' → logprob: -4.901183605194092
    8. ' not' → logprob: -5.776183605194092
    9. '  ' → logprob: -6.026183605194092
    10. '==' → logprob: -6.276183605194092

Token 22: ' os' (ID: 1994)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.04725675657391548
    2. ' os' → logprob: -3.1722567081451416
    3. ' __' → logprob: -6.422256946563721
    4. 'sys' → logprob: -6.547256946563721
    5. ' ' → logprob: -7.797256946563721
    6. '__' → logprob: -7.797256946563721
    7. 'os' → logprob: -8.422256469726562
    8. '(sys' → logprob: -10.297256469726562
    9. '	sys' → logprob: -10.672256469726562
    10. ''' → logprob: -10.797256469726562

Token 23: '.environ' (ID: 52020)
  Prédit: '.environ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.environ' → logprob: -0.011649415828287601
    2. '.getenv' → logprob: -4.5116496086120605
    3. '.name' → logprob: -8.136649131774902
    4. '.env' → logprob: -9.136649131774902
    5. '.argv' → logprob: -9.386649131774902
    6. '.getcwd' → logprob: -9.511649131774902
    7. ' .' → logprob: -11.261649131774902
    8. '.' → logprob: -11.636649131774902
    9. ' environ' → logprob: -12.261649131774902
    10. '```' → logprob: -12.511649131774902

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030064133927226067
    2. ' :' → logprob: -3.530064105987549
    3. '.' → logprob: -9.030064582824707
    4. ' and' → logprob: -9.530064582824707
    5. '):' → logprob: -10.780064582824707
    6. '.:' → logprob: -10.905064582824707
    7. '():' → logprob: -11.155064582824707
    8. ':
' → logprob: -11.530064582824707
    9. ':**' → logprob: -11.530064582824707
    10. '.get' → logprob: -11.780064582824707

Token 25: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.17827127873897552
    2. ':' → logprob: -2.8032712936401367
    3. '   ' → logprob: -3.0532712936401367
    4. '_' → logprob: -4.428271293640137
    5. ' sys' → logprob: -4.678271293640137
    6. '(' → logprob: -4.928271293640137
    7. ' :' → logprob: -5.928271293640137
    8. 'import' → logprob: -6.053271293640137
    9. '()' → logprob: -6.178271293640137
    10. ' os' → logprob: -6.303271293640137

Token 26: ' sys' (ID: 12228)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.1809055805206299
    2. '    ' → logprob: -1.3059055805206299
    3. ' sys' → logprob: -2.18090558052063
    4. ' import' → logprob: -2.43090558052063
    5. '   ' → logprob: -2.68090558052063
    6. ' os' → logprob: -2.80590558052063
    7. ' input' → logprob: -3.18090558052063
    8. 'import' → logprob: -4.055905342102051
    9. 'print' → logprob: -4.555905342102051
    10. ' ' → logprob: -5.180905342102051

Token 27: '.stdin' (ID: 93480)
  Prédit: '.stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.094717837870121
    2. '.stdin' → logprob: -2.8447177410125732
    3. '.' → logprob: -4.344717979431152
    4. '.exit' → logprob: -4.844717979431152
    5. '.stderr' → logprob: -4.969717979431152
    6. '.argv' → logprob: -5.594717979431152
    7. '.path' → logprob: -7.594717979431152
    8. ' .' → logprob: -9.219717979431152
    9. '.setdefault' → logprob: -9.844717979431152
    10. '.set' → logprob: -10.844717979431152

Token 28: ' =' (ID: 314)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.21379907429218292
    2. '.read' → logprob: -2.088798999786377
    3. '=open' → logprob: -3.213798999786377
    4. '=' → logprob: -4.463798999786377
    5. '.seek' → logprob: -4.838798999786377
    6. ' =' → logprob: -5.713798999786377
    7. '.write' → logprob: -6.338798999786377
    8. '.flush' → logprob: -6.588798999786377
    9. '.readlines' → logprob: -6.588798999786377
    10. '.is' → logprob: -7.463798999786377

Token 29: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.03805377334356308
    2. 'open' → logprob: -3.2880537509918213
    3. '	open' → logprob: -12.163053512573242
    4. '=open' → logprob: -12.288053512573242
    5. ' sys' → logprob: -13.413053512573242
    6. 'sys' → logprob: -14.788053512573242
    7. ' ' → logprob: -15.913053512573242
    8. '   ' → logprob: -16.038053512573242
    9. 'os' → logprob: -16.038053512573242
    10. ' os' → logprob: -16.038053512573242

Token 30: '('./' (ID: 15493)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3880026936531067
    2. '(' → logprob: -1.138002634048462
    3. '("' → logprob: -7.388002872467041
    4. ' ('' → logprob: -8.513002395629883
    5. ' (' → logprob: -9.138002395629883
    6. '('./' → logprob: -10.513002395629883
    7. '('/' → logprob: -10.638002395629883
    8. '(os' → logprob: -10.888002395629883
    9. ''' → logprob: -11.138002395629883
    10. '<|end|>' → logprob: -11.138002395629883

Token 31: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.037942904978990555
    2. 'in' → logprob: -3.912942886352539
    3. 'local' → logprob: -5.037942886352539
    4. 'test' → logprob: -5.412942886352539
    5. 'data' → logprob: -5.787942886352539
    6. 'inp' → logprob: -7.037942886352539
    7. '1' → logprob: -7.912942886352539
    8. 'tests' → logprob: -7.912942886352539
    9. 'stdin' → logprob: -8.162942886352539
    10. 'a' → logprob: -8.412942886352539

Token 32: '.txt' (ID: 7186)
  Prédit: '.txt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.txt' → logprob: -0.02005091868340969
    2. '.' → logprob: -4.270051002502441
    3. '')' → logprob: -5.145051002502441
    4. '.')' → logprob: -11.395051002502441
    5. '.tx' → logprob: -12.020051002502441
    6. '1' → logprob: -12.145051002502441
    7. '_local' → logprob: -12.645051002502441
    8. '0' → logprob: -12.770051002502441
    9. ''' → logprob: -13.270051002502441
    10. '_test' → logprob: -13.770051002502441

Token 33: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.10413213819265366
    2. '')' → logprob: -2.3541321754455566
    3. '','' → logprob: -5.979132175445557
    4. ''' → logprob: -6.604132175445557
    5. ')' → logprob: -10.729131698608398
    6. '',"' → logprob: -12.854131698608398
    7. '",' → logprob: -13.104131698608398
    8. '")' → logprob: -13.604131698608398
    9. '',
' → logprob: -14.104131698608398
    10. '')
' → logprob: -14.229131698608398

Token 34: ' '' (ID: 461)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.00596979632973671
    2. ' '' → logprob: -5.755970001220703
    3. ''' → logprob: -6.005970001220703
    4. ''w' → logprob: -8.505970001220703
    5. ''t' → logprob: -9.880970001220703
    6. ''m' → logprob: -10.130970001220703
    7. 'r' → logprob: -11.255970001220703
    8. ''a' → logprob: -13.005970001220703
    9. ''u' → logprob: -13.130970001220703
    10. ''s' → logprob: -13.130970001220703

Token 35: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000264315924141556
    2. ''r' → logprob: -8.250264167785645
    3. 'rt' → logprob: -13.000264167785645
    4. ''' → logprob: -14.750264167785645
    5. ' r' → logprob: -15.375264167785645
    6. ')' → logprob: -16.50026512145996
    7. '')' → logprob: -16.75026512145996
    8. '	r' → logprob: -17.87526512145996
    9. 'read' → logprob: -18.37526512145996
    10. 'rb' → logprob: -18.37526512145996

Token 36: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.02324955351650715
    2. ')' → logprob: -3.773249626159668
    3. '")' → logprob: -13.023249626159668
    4. '')
' → logprob: -14.023249626159668
    5. '',' → logprob: -15.148249626159668
    6. ''' → logprob: -15.398249626159668
    7. '+')' → logprob: -16.27324867248535
    8. ''))' → logprob: -16.39824867248535
    9. ' )' → logprob: -16.52324867248535
    10. ''),' → logprob: -17.27324867248535

Token 37: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12801310420036316
    2. 'for' → logprob: -2.1280131340026855
    3. 'a' → logprob: -7.8780131340026855
    4. 't' → logprob: -8.753012657165527
    5. '#' → logprob: -8.878012657165527
    6. 'x' → logprob: -9.503012657165527
    7. 'data' → logprob: -9.503012657165527
    8. '
' → logprob: -10.253012657165527
    9. '\n' → logprob: -10.253012657165527
    10. 'N' → logprob: -10.378012657165527

Token 38: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5506120324134827
    2. ' main' → logprob: -0.9256120324134827
    3. ' ' → logprob: -4.175611972808838
    4. ' process' → logprob: -5.425611972808838
    5. ' solution' → logprob: -6.175611972808838
    6. ' my' → logprob: -7.300611972808838
    7. ' space' → logprob: -7.425611972808838
    8. ' factorial' → logprob: -7.550611972808838
    9. ' foo' → logprob: -7.675611972808838
    10. ' add' → logprob: -7.675611972808838

Token 39: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.25369104743003845
    2. '(' → logprob: -1.5036910772323608
    3. ' ():' → logprob: -7.37869119644165
    4. '_' → logprob: -8.128690719604492
    5. ' (' → logprob: -8.253690719604492
    6. '(:' → logprob: -8.628690719604492
    7. '(f' → logprob: -9.628690719604492
    8. '()' → logprob: -9.878690719604492
    9. '(**' → logprob: -10.128690719604492
    10. '(line' → logprob: -10.753690719604492

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020350338891148567
    2. '    ' → logprob: -4.520350456237793
    3. '<|end|>' → logprob: -6.270350456237793
    4. '    
' → logprob: -6.520350456237793
    5. 'n' → logprob: -6.645350456237793
    6. ' ' → logprob: -7.020350456237793
    7. '\n' → logprob: -7.645350456237793
    8. '\' → logprob: -7.770350456237793
    9. ':' → logprob: -8.020350456237793
    10. ' pass' → logprob: -8.145350456237793

Token 41: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.736229658126831
    2. ' n' → logprob: -0.861229658126831
    3. '   ' → logprob: -2.486229658126831
    4. '    ' → logprob: -4.98622989654541
    5. ' pass' → logprob: -5.48622989654541
    6. 'a' → logprob: -6.73622989654541
    7. ' ' → logprob: -7.36122989654541
    8. ' a' → logprob: -8.11122989654541
    9. 'pass' → logprob: -8.11122989654541
    10. ' for' → logprob: -8.23622989654541

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16180182993412018
    2. ',' → logprob: -2.161801815032959
    3. ' ,' → logprob: -4.036801815032959
    4. '=' → logprob: -4.286801815032959
    5. ' ' → logprob: -6.911801815032959
    6. ' +=' → logprob: -7.661801815032959
    7. '   ' → logprob: -8.286802291870117
    8. '  ' → logprob: -8.411802291870117
    9. '[' → logprob: -8.661802291870117
    10. ',y' → logprob: -8.911802291870117

Token 43: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.6447253823280334
    2. 'f' → logprob: -0.7697253823280334
    3. 'int' → logprob: -5.269725322723389
    4. ' int' → logprob: -5.894725322723389
    5. ' ' → logprob: -6.019725322723389
    6. ' sum' → logprob: -7.394725322723389
    7. 'sum' → logprob: -8.269725799560547
    8. '0' → logprob: -9.019725799560547
    9. '10' → logprob: -9.019725799560547
    10. '20' → logprob: -9.769725799560547

Token 44: '()[' (ID: 20778)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3425219549390022e-05
    2. '())' → logprob: -12.12501335144043
    3. '()
' → logprob: -12.75001335144043
    4. ' ()' → logprob: -13.25001335144043
    5. '()[' → logprob: -13.50001335144043
    6. '()`' → logprob: -14.50001335144043
    7. '()]' → logprob: -14.62501335144043
    8. '()

' → logprob: -15.37501335144043
    9. '(),' → logprob: -15.75001335144043
    10. '();' → logprob: -16.12501335144043

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1186566047836095e-05
    2. ' ' → logprob: -11.125031471252441
    3. '1' → logprob: -12.125031471252441
    4. '-' → logprob: -12.375031471252441
    5. ')' → logprob: -12.875031471252441
    6. '])' → logprob: -13.000031471252441
    7. ']' → logprob: -14.000031471252441
    8. '2' → logprob: -15.125031471252441
    9. '   ' → logprob: -15.250031471252441
    10. ')]' → logprob: -15.625031471252441

Token 46: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012368128227535635
    2. ' )' → logprob: -9.375123977661133
    3. ')
' → logprob: -10.500123977661133
    4. ']' → logprob: -12.125123977661133
    5. '   ' → logprob: -14.375123977661133
    6. '+' → logprob: -14.375123977661133
    7. ')]' → logprob: -14.875123977661133
    8. '))' → logprob: -14.875123977661133
    9. '')' → logprob: -14.875123977661133
    10. ')

' → logprob: -15.125123977661133

Token 47: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5610723495483398
    2. '   ' → logprob: -2.06107234954834
    3. '\n' → logprob: -2.18607234954834
    4. ':' → logprob: -2.81107234954834
    5. '<|end|>' → logprob: -3.06107234954834
    6. '
' → logprob: -3.56107234954834
    7. ' ' → logprob: -4.93607234954834
    8. '\' → logprob: -5.06107234954834
    9. '    
' → logprob: -5.06107234954834
    10. ' 
' → logprob: -5.06107234954834

Token 48: ' a' (ID: 261)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4690715074539185
    2. 'if' → logprob: -1.4690715074539185
    3. 'print' → logprob: -1.5940715074539185
    4. ' ' → logprob: -2.344071388244629
    5. ' if' → logprob: -2.469071388244629
    6. 'return' → logprob: -3.969071388244629
    7. '   ' → logprob: -4.094071388244629
    8. 'n' → logprob: -4.219071388244629
    9. '#' → logprob: -4.219071388244629
    10. 'x' → logprob: -4.594071388244629

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5533335208892822
    2. '=' → logprob: -0.9283335208892822
    3. 'dd' → logprob: -4.053333282470703
    4. ',' → logprob: -5.553333282470703
    5. '+=' → logprob: -6.428333282470703
    6. 'ns' → logprob: -6.553333282470703
    7. ' ' → logprob: -7.178333282470703
    8. '*=' → logprob: -7.303333282470703
    9. 'b' → logprob: -7.678333282470703
    10. ',b' → logprob: -7.678333282470703

Token 50: ' [' (ID: 723)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8633296489715576
    2. 'x' → logprob: -0.9883296489715576
    3. ' ' → logprob: -2.8633296489715576
    4. ' f' → logprob: -3.6133296489715576
    5. ' [' → logprob: -3.7383296489715576
    6. '[]' → logprob: -4.238329887390137
    7. 'f' → logprob: -4.488329887390137
    8. '1' → logprob: -4.613329887390137
    9. '[' → logprob: -4.613329887390137
    10. ' []' → logprob: -4.738329887390137

Token 51: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0944654941558838
    2. '0' → logprob: -1.2194654941558838
    3. 'int' → logprob: -1.3444654941558838
    4. 'f' → logprob: -2.594465494155884
    5. '1' → logprob: -4.219465255737305
    6. '*' → logprob: -5.094465255737305
    7. 'i' → logprob: -5.344465255737305
    8. ']' → logprob: -5.719465255737305
    9. '(x' → logprob: -6.969465255737305
    10. '(' → logprob: -7.469465255737305

Token 52: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09320289641618729
    2. ']*' → logprob: -2.468202829360962
    3. ']*(' → logprob: -5.968203067779541
    4. ',' → logprob: -6.843203067779541
    5. ' ]' → logprob: -7.843203067779541
    6. ' for' → logprob: -8.843202590942383
    7. ']+' → logprob: -9.718202590942383
    8. 'for' → logprob: -10.968202590942383
    9. '()]' → logprob: -12.093202590942383
    10. ']int' → logprob: -13.093202590942383

Token 53: '100' (ID: 1353)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2312055826187134
    2. '100' → logprob: -1.3562055826187134
    3. '(x' → logprob: -1.9812055826187134
    4. 'x' → logprob: -2.356205463409424
    5. '10' → logprob: -2.731205463409424
    6. '101' → logprob: -2.731205463409424
    7. '11' → logprob: -4.231205463409424
    8. '20' → logprob: -5.106205463409424
    9. '200' → logprob: -5.106205463409424
    10. '51' → logprob: -5.231205463409424

Token 54: '01' (ID: 2290)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2176445871591568
    2. '0' → logprob: -2.217644691467285
    3. 'for' → logprob: -3.842644691467285
    4. ' 
' → logprob: -3.967644691467285
    5. '<|end|>' → logprob: -4.092644691467285
    6. '+' → logprob: -5.467644691467285
    7. ' ' → logprob: -5.717644691467285
    8. 'x' → logprob: -5.842644691467285
    9. ' for' → logprob: -6.217644691467285
    10. '
' → logprob: -6.342644691467285

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13650323450565338
    2. '<|end|>' → logprob: -2.761503219604492
    3. ' 
' → logprob: -3.636503219604492
    4. ' ' → logprob: -4.636503219604492
    5. '\n' → logprob: -4.761503219604492
    6. '   ' → logprob: -5.386503219604492
    7. 'for' → logprob: -6.011503219604492
    8. '    
' → logprob: -6.136503219604492
    9. '
' → logprob: -6.511503219604492
    10. ' for' → logprob: -6.761503219604492

Token 56: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1894385814666748
    2. '   ' → logprob: -1.5644385814666748
    3. '<|end|>' → logprob: -1.8144385814666748
    4. 'for' → logprob: -2.314438581466675
    5. ' for' → logprob: -2.689438581466675
    6. 'x' → logprob: -2.939438581466675
    7. '\n' → logprob: -3.439438581466675
    8. ' 
' → logprob: -3.939438581466675
    9. '    
' → logprob: -4.689438819885254
    10. 'b' → logprob: -5.064438819885254

Token 57: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18477191030979156
    2. ' for' → logprob: -1.8097718954086304
    3. 'x' → logprob: -6.68477201461792
    4. 'i' → logprob: -6.80977201461792
    5. '   ' → logprob: -7.05977201461792
    6. 'a' (adapté à ' a') → logprob: -7.43477201461792
    7. 'b' → logprob: -8.184771537780762
    8. 'n' → logprob: -8.559771537780762
    9. ' ' → logprob: -8.934771537780762
    10. 's' → logprob: -9.184771537780762

Token 58: '[' (ID: 58)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.350898414850235
    2. '[' → logprob: -1.2258983850479126
    3. '[a' → logprob: -6.725898265838623
    4. '[int' → logprob: -7.600898265838623
    5. '[f' → logprob: -9.100898742675781
    6. ' [' → logprob: -9.475898742675781
    7. '[:]' → logprob: -9.600898742675781
    8. 'x' → logprob: -9.850898742675781
    9. '[i' → logprob: -10.225898742675781
    10. '[]' → logprob: -10.350898742675781

Token 59: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015644963132217526
    2. '0' → logprob: -6.5015645027160645
    3. '1' → logprob: -10.251564025878906
    4. ' x' → logprob: -10.751564025878906
    5. ' ' → logprob: -12.876564025878906
    6. '-' → logprob: -13.626564025878906
    7. '100' → logprob: -15.376564025878906
    8. ']' → logprob: -15.501564025878906
    9. '2' → logprob: -15.501564025878906
    10. ' -' → logprob: -15.876564025878906

Token 60: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008121250197291374
    2. ']=' → logprob: -5.258121013641357
    3. ' ]' → logprob: -5.883121013641357
    4. ']+=' → logprob: -10.133121490478516
    5. '=' → logprob: -11.383121490478516
    6. '1' → logprob: -11.383121490478516
    7. '0' → logprob: -11.883121490478516
    8. ' =' → logprob: -12.383121490478516
    9. ':]' → logprob: -12.383121490478516
    10. '2' → logprob: -12.758121490478516

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6330150961875916
    2. '=' → logprob: -0.7580150961875916
    3. ' +=' → logprob: -8.508014678955078
    4. '+=' → logprob: -8.508014678955078
    5. ' ' → logprob: -12.633014678955078
    6. ',' → logprob: -12.758014678955078
    7. '=True' → logprob: -13.133014678955078
    8. '=int' → logprob: -14.133014678955078
    9. '+' → logprob: -14.383014678955078
    10. '[' → logprob: -15.008014678955078

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004456228110939264
    2. '0' → logprob: -6.129456043243408
    3. '2' → logprob: -7.504456043243408
    4. ' ' → logprob: -7.504456043243408
    5. 'x' → logprob: -7.754456043243408
    6. 'a' → logprob: -8.004456520080566
    7. '3' → logprob: -9.254456520080566
    8. '-' → logprob: -9.629456520080566
    9. '100' → logprob: -10.254456520080566
    10. '4' → logprob: -10.379456520080566

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0057475874200463295
    2. '0' → logprob: -5.6307477951049805
    3. 'a' → logprob: -7.1307477951049805
    4. 'x' → logprob: -7.3807477951049805
    5. '2' → logprob: -7.7557477951049805
    6. '-' → logprob: -9.63074779510498
    7. '3' → logprob: -9.75574779510498
    8. ' ' → logprob: -10.38074779510498
    9. 'True' → logprob: -10.75574779510498
    10. '100' → logprob: -11.00574779510498

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5423682928085327
    2. '\n' → logprob: -1.6673682928085327
    3. ' 
' → logprob: -2.7923684120178223
    4. ' for' → logprob: -3.5423684120178223
    5. 'for' → logprob: -3.6673684120178223
    6. ' ' → logprob: -3.7923684120178223
    7. '   ' → logprob: -3.9173684120178223
    8. '    
' → logprob: -4.292368412017822
    9. '  
' → logprob: -4.417368412017822
    10. '' → logprob: -4.667368412017822

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0720200538635254
    2. ' ' → logprob: -1.9470200538635254
    3. ' for' → logprob: -2.1970200538635254
    4. '\n' → logprob: -2.3220200538635254
    5. ' 
' → logprob: -2.6970200538635254
    6. '
' → logprob: -2.8220200538635254
    7. 'for' → logprob: -2.8220200538635254
    8. '<|end|>' → logprob: -3.4470200538635254
    9. '   
' → logprob: -3.6970200538635254
    10. '    
' → logprob: -4.197020053863525

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5977594256401062
    2. 'for' (adapté à ' for') → logprob: -0.8477594256401062
    3. ' ' → logprob: -5.097759246826172
    4. 'i' → logprob: -5.597759246826172
    5. '   ' → logprob: -6.097759246826172
    6. '
' → logprob: -6.472759246826172
    7. 'n' → logprob: -6.597759246826172
    8. '\n' → logprob: -6.597759246826172
    9. ' i' → logprob: -6.972759246826172
    10. ',' → logprob: -6.972759246826172

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018464328721165657
    2. ' ' → logprob: -4.1434645652771
    3. ' range' → logprob: -6.7684645652771
    4. ' _' → logprob: -7.2684645652771
    5. 'i' → logprob: -8.143464088439941
    6. '_' → logprob: -8.518464088439941
    7. '  ' → logprob: -10.393464088439941
    8. '(' → logprob: -11.018464088439941
    9. '	i' → logprob: -11.768464088439941
    10. ' x' → logprob: -11.893464088439941

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008250844664871693
    2. 'in' → logprob: -4.883250713348389
    3. ' ' → logprob: -7.758250713348389
    4. ',' → logprob: -9.008251190185547
    5. '  ' → logprob: -11.008251190185547
    6. '   ' → logprob: -11.133251190185547
    7. '(' → logprob: -11.258251190185547
    8. '	in' → logprob: -11.258251190185547
    9. ' ,' → logprob: -11.883251190185547
    10. '1' → logprob: -12.133251190185547

Token 69: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0060823759995400906
    2. 'range' → logprob: -5.131082534790039
    3. ' ' → logprob: -9.006082534790039
    4. '  ' → logprob: -10.881082534790039
    5. '   ' → logprob: -12.506082534790039
    6. '	range' → logprob: -13.256082534790039
    7. '[' → logprob: -13.381082534790039
    8. ' xrange' → logprob: -13.881082534790039
    9. ' ran' → logprob: -14.381082534790039
    10. '    ' → logprob: -14.881082534790039

Token 70: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.941850526549388e-06
    2. ' (' → logprob: -11.875007629394531
    3. ' ' → logprob: -14.375007629394531
    4. '2' → logprob: -15.250007629394531
    5. '1' → logprob: -17.75000762939453
    6. '   ' → logprob: -18.25000762939453
    7. '(
' → logprob: -18.50000762939453
    8. ',' → logprob: -19.62500762939453
    9. '  ' → logprob: -20.12500762939453
    10. '	' → logprob: -20.37500762939453

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0132284639403224
    2. ' ' → logprob: -4.513228416442871
    3. '1' → logprob: -6.138228416442871
    4. '   ' → logprob: -11.638228416442871
    5. '(' → logprob: -12.263228416442871
    6. '  ' → logprob: -13.263228416442871
    7. '10' → logprob: -13.638228416442871
    8. '100' → logprob: -14.138228416442871
    9. '    ' → logprob: -14.638228416442871
    10. '3' → logprob: -15.013228416442871

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10054253041744232
    2. ' ,' → logprob: -2.3505425453186035
    3. ' ' → logprob: -8.725542068481445
    4. ',x' → logprob: -9.350542068481445
    5. '100' → logprob: -10.475542068481445
    6. '1' → logprob: -10.850542068481445
    7. '   ' → logprob: -11.725542068481445
    8. ',int' → logprob: -11.975542068481445
    9. '10' → logprob: -12.600542068481445
    10. ',len' → logprob: -12.850542068481445

Token 73: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6902769804000854
    2. ' x' → logprob: -0.8152769804000854
    3. '100' → logprob: -3.315277099609375
    4. ' ' → logprob: -3.940277099609375
    5. '10' → logprob: -9.315277099609375
    6. ' int' → logprob: -9.815277099609375
    7. '  ' → logprob: -9.815277099609375
    8. '   ' → logprob: -10.815277099609375
    9. '101' → logprob: -11.440277099609375
    10. 'int' → logprob: -11.815277099609375

Token 74: '100' (ID: 1353)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28284022212028503
    2. '100' → logprob: -1.4078402519226074
    3. ' x' → logprob: -7.157840251922607
    4. '10' → logprob: -8.15783977508545
    5. ' ' → logprob: -8.28283977508545
    6. 'len' → logprob: -9.15783977508545
    7. 'int' → logprob: -9.40783977508545
    8. 'i' → logprob: -9.90783977508545
    9. '500' → logprob: -11.15783977508545
    10. '=' → logprob: -11.15783977508545

Token 75: '0' (ID: 15)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.014272449538111687
    2. '02' → logprob: -4.264272212982178
    3. '00' → logprob: -9.264272689819336
    4. '1' → logprob: -12.264272689819336
    5. ')' → logprob: -12.514272689819336
    6. '):' → logprob: -13.264272689819336
    7. '001' → logprob: -13.639272689819336
    8. ' ' → logprob: -14.014272689819336
    9. '0' → logprob: -14.139272689819336
    10. '002' → logprob: -15.264272689819336

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4083389639854431
    2. '1' → logprob: -1.158339023590088
    3. '0' → logprob: -4.408339023590088
    4. '+' → logprob: -5.158339023590088
    5. ')' → logprob: -6.033339023590088
    6. '01' → logprob: -8.40833854675293
    7. '):
' → logprob: -8.65833854675293
    8. '2' → logprob: -8.78333854675293
    9. ' ):' → logprob: -9.15833854675293
    10. ':' → logprob: -9.40833854675293

Token 77: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6369218230247498
    2. ' :' → logprob: -1.5119218826293945
    3. ' ' → logprob: -1.6369218826293945
    4. '    ' → logprob: -3.6369218826293945
    5. '   ' → logprob: -4.2619218826293945
    6. '       ' → logprob: -5.5119218826293945
    7. ' :
' → logprob: -5.8869218826293945
    8. ' i' → logprob: -6.2619218826293945
    9. '  ' → logprob: -6.6369218826293945
    10. ',' → logprob: -7.1369218826293945

Token 78: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6274420619010925
    2. ' a' → logprob: -1.1274421215057373
    3. ' if' → logprob: -3.2524421215057373
    4. 'a' → logprob: -3.6274421215057373
    5. '    ' → logprob: -4.002441883087158
    6. ' j' → logprob: -4.127441883087158
    7. 'for' → logprob: -4.377441883087158
    8. ' ' → logprob: -4.627441883087158
    9. ' i' → logprob: -4.752441883087158
    10. '   ' → logprob: -5.127441883087158

Token 79: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.014234373345971107
    2. 'a' → logprob: -4.26423454284668
    3. ' i' → logprob: -10.63923454284668
    4. ' not' → logprob: -11.13923454284668
    5. ' x' → logprob: -11.51423454284668
    6. ' ' → logprob: -11.63923454284668
    7. 'i' → logprob: -12.51423454284668
    8. '	a' → logprob: -13.01423454284668
    9. 'x' → logprob: -13.13923454284668
    10. ' all' → logprob: -13.51423454284668

Token 80: '*i' (ID: 51147)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3497569262981415
    2. '%' → logprob: -1.2247569561004639
    3. '%i' → logprob: -7.224756717681885
    4. '**' → logprob: -8.724757194519043
    5. '*' → logprob: -8.724757194519043
    6. ' *' → logprob: -9.349757194519043
    7. ' ' → logprob: -9.599757194519043
    8. '*i' → logprob: -9.849757194519043
    9. ' **' → logprob: -10.849757194519043
    10. '2' → logprob: -12.599757194519043

Token 81: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2316274493932724
    2. '<=' → logprob: -1.6066274642944336
    3. ' >' → logprob: -5.606627464294434
    4. '>' → logprob: -6.606627464294434
    5. '<|end|>' → logprob: -7.356627464294434
    6. ' ==' → logprob: -8.231627464294434
    7. '==' → logprob: -9.231627464294434
    8. ' ' → logprob: -9.856627464294434
    9. ' <' → logprob: -10.481627464294434
    10. '<' → logprob: -10.856627464294434

Token 82: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.014452466741204262
    2. ' ' → logprob: -4.2644524574279785
    3. 'x' → logprob: -8.514452934265137
    4. '10' → logprob: -9.889452934265137
    5. 'i' → logprob: -11.514452934265137
    6. '1' → logprob: -11.764452934265137
    7. ' x' → logprob: -12.139452934265137
    8. '  ' → logprob: -12.389452934265137
    9. '999' → logprob: -12.639452934265137
    10. '   ' → logprob: -13.139452934265137

Token 83: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.008378406055271626
    2. 'x' → logprob: -5.008378505706787
    3. ' ' → logprob: -6.508378505706787
    4. '10' → logprob: -9.508378028869629
    5. ' x' → logprob: -10.633378028869629
    6. '1' → logprob: -10.883378028869629
    7. 'i' → logprob: -10.883378028869629
    8. '999' → logprob: -11.633378028869629
    9. 'len' → logprob: -11.883378028869629
    10. '  ' → logprob: -12.258378028869629

Token 84: '0' (ID: 15)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00043221889063715935
    2. '0' → logprob: -8.500432014465332
    3. '01' → logprob: -8.625432014465332
    4. '000' → logprob: -10.375432014465332
    5. '```' → logprob: -12.000432014465332
    6. ' ' → logprob: -12.375432014465332
    7. '   ' → logprob: -12.937932014465332
    8. '۰۰' → logprob: -14.062932014465332
    9. '００' → logprob: -14.500432014465332
    10. '001' → logprob: -14.687932014465332

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3985189199447632
    2. ' and' → logprob: -1.1485189199447632
    3. ' :' → logprob: -5.023519039154053
    4. ':
' → logprob: -5.648519039154053
    5. 'and' → logprob: -6.898519039154053
    6. ' ' → logprob: -8.398518562316895
    7. ' :
' → logprob: -9.148518562316895
    8. '):' → logprob: -10.523518562316895
    9. '   ' → logprob: -10.773518562316895
    10. '       ' → logprob: -11.398518562316895

Token 86: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045644745230674744
    2. '       ' → logprob: -3.920644760131836
    3. ' and' → logprob: -4.795644760131836
    4. '<|end|>' → logprob: -4.920644760131836
    5. ' :' → logprob: -5.045644760131836
    6. '<|end|>' → logprob: -7.545644760131836
    7. '        ' → logprob: -7.795644760131836
    8. ',' → logprob: -7.795644760131836
    9. ':
' → logprob: -8.045644760131836
    10. '           ' → logprob: -8.045644760131836

Token 87: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4461687207221985
    2. ' if' → logprob: -2.0711686611175537
    3. ' a' → logprob: -2.4461686611175537
    4. 'a' (adapté à ' a') → logprob: -3.4461686611175537
    5. 'for' → logprob: -3.5711686611175537
    6. '       ' → logprob: -3.8211686611175537
    7. ' ' → logprob: -4.196168899536133
    8. '   ' → logprob: -4.321168899536133
    9. '           ' → logprob: -4.571168899536133
    10. 'if' → logprob: -4.571168899536133

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.016066161915659904
    2. '[' → logprob: -4.141066074371338
    3. '<|end|>' → logprob: -11.516066551208496
    4. '[a' → logprob: -11.766066551208496
    5. '[int' → logprob: -12.391066551208496
    6. '[]' → logprob: -13.391066551208496
    7. '[j' → logprob: -13.641066551208496
    8. '[
' → logprob: -13.766066551208496
    9. '[...]' → logprob: -13.891066551208496
    10. '[:]' → logprob: -14.266066551208496

Token 89: '*i' (ID: 51147)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.040427498519420624
    2. ']=' → logprob: -3.2904274463653564
    3. ' ]' → logprob: -6.5404276847839355
    4. '=' → logprob: -7.9154276847839355
    5. '-' → logprob: -8.165427207946777
    6. ']+=' → logprob: -8.415427207946777
    7. ' =' → logprob: -10.665427207946777
    8. ']==' → logprob: -11.165427207946777
    9. ' -' → logprob: -11.665427207946777
    10. '//' → logprob: -12.165427207946777

Token 90: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5753605961799622
    2. '=' → logprob: -1.3253605365753174
    3. ' =' → logprob: -2.0753605365753174
    4. ']=' → logprob: -3.2003605365753174
    5. ' ]' → logprob: -5.9503607749938965
    6. ']+=' → logprob: -5.9503607749938965
    7. '+=' → logprob: -8.700360298156738
    8. ' +=' → logprob: -9.075360298156738
    9. ')' → logprob: -11.575360298156738
    10. ' ' → logprob: -12.200360298156738

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47472888231277466
    2. '=' → logprob: -0.9747288823127747
    3. ' +=' → logprob: -7.849729061126709
    4. '+=' → logprob: -8.34972858428955
    5. ' ' → logprob: -10.72472858428955
    6. '=True' → logprob: -13.97472858428955
    7. ' |=' → logprob: -14.09972858428955
    8. '+' → logprob: -14.59972858428955
    9. '   ' → logprob: -15.84972858428955
    10. '  ' → logprob: -15.97472858428955

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014222568133845925
    2. ' ' → logprob: -6.87642240524292
    3. '2' → logprob: -8.751421928405762
    4. '0' → logprob: -9.001421928405762
    5. 'i' → logprob: -9.376421928405762
    6. 'a' → logprob: -12.126421928405762
    7. ' i' → logprob: -12.126421928405762
    8. '-' → logprob: -13.001421928405762
    9. 'True' → logprob: -13.251421928405762
    10. '   ' → logprob: -13.376421928405762

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021665559615939856
    2. '0' → logprob: -7.377166748046875
    3. 'i' → logprob: -7.627166748046875
    4. '2' → logprob: -7.877166748046875
    5. '-' → logprob: -7.877166748046875
    6. ' ' → logprob: -8.627166748046875
    7. 'a' → logprob: -9.502166748046875
    8. 'True' → logprob: -11.377166748046875
    9. ' -' → logprob: -12.127166748046875
    10. '3' → logprob: -12.752166748046875

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5031054019927979
    2. '<|end|>' → logprob: -1.0031054019927979
    3. '\n' → logprob: -3.753105401992798
    4. '   ' → logprob: -6.628105163574219
    5. '<|end|>' → logprob: -6.628105163574219
    6. '    
' → logprob: -7.753105163574219
    7. '  
' → logprob: -8.003105163574219
    8. '```' → logprob: -8.378105163574219
    9. ' ' → logprob: -8.503105163574219
    10. '
' → logprob: -8.503105163574219

Token 95: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4985133707523346
    2. '<|end|>' → logprob: -1.3735133409500122
    3. '\n' → logprob: -2.1235134601593018
    4. '   ' → logprob: -4.873513221740723
    5. '    
' → logprob: -6.373513221740723
    6. ' 
' → logprob: -6.373513221740723
    7. ' ' → logprob: -6.373513221740723
    8. ')' → logprob: -6.623513221740723
    9. '<|end|>' → logprob: -6.873513221740723
    10. '\' → logprob: -7.248513221740723

Token 96: ' k' (ID: 372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18075481057167053
    2. '=' → logprob: -1.8057547807693481
    3. ' +=' → logprob: -7.805754661560059
    4. '+=' → logprob: -8.555754661560059
    5. '=i' → logprob: -8.555754661560059
    6. ' ' → logprob: -9.305754661560059
    7. '+' → logprob: -9.430754661560059
    8. '   ' → logprob: -10.805754661560059
    9. '    ' → logprob: -11.305754661560059
    10. '  ' → logprob: -13.055754661560059

Token 98: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5529823899269104
    2. '2' → logprob: -1.3029823303222656
    3. '1' → logprob: -2.4279823303222656
    4. ' i' → logprob: -2.9279823303222656
    5. ' ' → logprob: -5.302982330322266
    6. '3' → logprob: -6.427982330322266
    7. '100' → logprob: -6.427982330322266
    8. 'a' → logprob: -7.052982330322266
    9. '0' → logprob: -7.052982330322266
    10. '4' → logprob: -7.177982330322266

Token 99: '3' (ID: 18)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22959178686141968
    2. '2' → logprob: -1.8545918464660645
    3. '1' → logprob: -3.1045918464660645
    4. ' i' → logprob: -6.9795918464660645
    5. 'a' → logprob: -7.4795918464660645
    6. '0' → logprob: -7.7295918464660645
    7. '100' → logprob: -7.7295918464660645
    8. '4' → logprob: -7.9795918464660645
    9. '3' → logprob: -8.104591369628906
    10. '(i' → logprob: -8.229591369628906

Token 100: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8957207798957825
    2. '<|end|>' → logprob: -1.3957207202911377
    3. '*i' → logprob: -2.2707207202911377
    4. 'while' (adapté à ' while') → logprob: -2.2707207202911377
    5. ' while' → logprob: -2.5207207202911377
    6. '<|end|>' → logprob: -4.020720958709717
    7. ' *' → logprob: -4.645720958709717
    8. 'i' → logprob: -5.020720958709717
    9. ' ' → logprob: -5.145720958709717
    10. '*' → logprob: -5.395720958709717

Token 103: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2576843500137329
    2. ' i' → logprob: -1.882684350013733
    3. 'k' → logprob: -3.3826842308044434
    4. ' (' → logprob: -3.7576842308044434
    5. '(i' → logprob: -4.507684230804443
    6. '           ' → logprob: -5.882684230804443
    7. ' k' → logprob: -6.132684230804443
    8. ' True' → logprob: -7.757684230804443
    9. '(k' → logprob: -8.132684707641602
    10. '(' → logprob: -8.132684707641602

Token 104: '**' (ID: 410)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.23062004148960114
    2. '*i' → logprob: -1.60562002658844
    3. '**' → logprob: -5.60561990737915
    4. '*' → logprob: -6.60561990737915
    5. ' *' → logprob: -8.980620384216309
    6. '*j' → logprob: -12.355620384216309
    7. '2' → logprob: -12.355620384216309
    8. 'k' → logprob: -12.480620384216309
    9. '```' → logprob: -12.730620384216309
    10. '***' → logprob: -12.730620384216309

Token 105: 'k' (ID: 74)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11355160921812057
    2. 'k' → logprob: -2.238551616668701
    3. '3' → logprob: -7.238551616668701
    4. ' k' → logprob: -12.738551139831543
    5. '*k' → logprob: -13.363551139831543
    6. ' ' → logprob: -13.488551139831543
    7. '```' → logprob: -13.738551139831543
    8. '(k' → logprob: -13.988551139831543
    9. '6' → logprob: -14.238551139831543
    10. '(' → logprob: -14.238551139831543

Token 106: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0061982497572898865
    2. '<=' → logprob: -5.131198406219482
    3. ' <' → logprob: -8.756197929382324
    4. ' ' → logprob: -9.381197929382324
    5. '<' → logprob: -11.631197929382324
    6. ' ≤' → logprob: -12.131197929382324
    7. '<|end|>' → logprob: -12.131197929382324
    8. '*' → logprob: -13.006197929382324
    9. ')<=' → logprob: -14.006197929382324
    10. ' *' → logprob: -14.131197929382324

Token 107: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.08894676715135574
    2. ' ' → logprob: -2.46394681930542
    3. '10' → logprob: -12.088946342468262
    4. '  ' → logprob: -14.713946342468262
    5. '999' → logprob: -15.088946342468262
    6. '   ' → logprob: -15.588946342468262
    7. '101' → logprob: -15.713946342468262
    8. '1' → logprob: -16.463947296142578
    9. '110' → logprob: -16.713947296142578
    10. '0' → logprob: -16.713947296142578

Token 108: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.500011444091797
    3. '10' → logprob: -13.750011444091797
    4. '  ' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.375011444091797
    6. '999' → logprob: -17.250011444091797
    7. '１００' → logprob: -17.250011444091797
    8. '000' → logprob: -18.437511444091797
    9. 'int' → logprob: -18.687511444091797
    10. '1' → logprob: -19.062511444091797

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032863286323845387
    2. '00' → logprob: -5.753286361694336
    3. '000' → logprob: -9.503286361694336
    4. '1' → logprob: -11.878286361694336
    5. '3' → logprob: -12.128286361694336
    6. '01' → logprob: -12.190786361694336
    7. ' ' → logprob: -12.190786361694336
    8. '```' → logprob: -12.315786361694336
    9. '03' → logprob: -14.190786361694336
    10. '   ' → logprob: -14.315786361694336

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12809166312217712
    2. ':
' → logprob: -2.25309157371521
    3. ' and' → logprob: -4.253091812133789
    4. ' :' → logprob: -8.003091812133789
    5. '               ' → logprob: -8.128091812133789
    6. ' :
' → logprob: -9.503091812133789
    7. 'and' → logprob: -9.628091812133789
    8. ':

' → logprob: -10.128091812133789
    9. ':
' → logprob: -10.628091812133789
    10. '           ' → logprob: -10.628091812133789

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004643603693693876
    2. '           ' → logprob: -6.504643440246582
    3. '<|end|>' → logprob: -6.879643440246582
    4. '       ' → logprob: -7.004643440246582
    5. ':' → logprob: -7.754643440246582
    6. ',' → logprob: -8.754643440246582
    7. '   ' → logprob: -8.879643440246582
    8. '<|end|>' → logprob: -9.004643440246582
    9. ':
' → logprob: -9.629643440246582
    10. ' and' → logprob: -10.004643440246582

Token 112: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.20837771892547607
    2. ' a' → logprob: -2.3333778381347656
    3. '               ' → logprob: -3.0833778381347656
    4. '           ' → logprob: -3.3333778381347656
    5. '   ' → logprob: -4.833377838134766
    6. '       ' → logprob: -6.583377838134766
    7. ' ' → logprob: -8.833377838134766
    8. '                   ' → logprob: -10.208377838134766
    9. '	a' → logprob: -10.833377838134766
    10. '<|end|>' → logprob: -11.083377838134766

Token 113: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016218038217630237
    2. '[' → logprob: -8.750162124633789
    3. '[int' → logprob: -13.250162124633789
    4. '[a' → logprob: -14.875162124633789
    5. '[I' → logprob: -14.875162124633789
    6. '[index' → logprob: -15.250162124633789
    7. '[...]' → logprob: -15.500162124633789
    8. '[(' → logprob: -15.500162124633789
    9. '[
' → logprob: -16.12516212463379
    10. 'i' → logprob: -16.62516212463379

Token 114: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.000352266215486452
    2. '<|end|>' → logprob: -8.375351905822754
    3. '^' → logprob: -9.625351905822754
    4. '```' → logprob: -11.000351905822754
    5. '*k' → logprob: -11.500351905822754
    6. ' **' → logprob: -12.125351905822754
    7. '**)' → logprob: -12.125351905822754
    8. '*' → logprob: -12.375351905822754
    9. '**
' → logprob: -12.500351905822754
    10. '
' → logprob: -13.625351905822754

Token 115: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.512236498361744e-07
    2. '<|end|>' → logprob: -15.000000953674316
    3. '{k' → logprob: -16.125
    4. ' k' → logprob: -16.5
    5. ' ' → logprob: -18.75
    6. '[k' → logprob: -19.125
    7. '	k' → logprob: -19.625
    8. '*k' → logprob: -19.75
    9. '<|end|>' → logprob: -19.75
    10. ')' → logprob: -19.875

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023779012262821198
    2. '=' → logprob: -4.148778915405273
    3. ' =' → logprob: -5.148778915405273
    4. ']=' → logprob: -6.898778915405273
    5. ' ]' → logprob: -7.023778915405273
    6. ')' → logprob: -12.148778915405273
    7. '           ' → logprob: -13.898778915405273
    8. ' ' → logprob: -14.398778915405273
    9. '   ' → logprob: -14.648778915405273
    10. '[' → logprob: -15.023778915405273

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692904472351074
    2. ' =' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.37692928314209
    4. '<|end|>' → logprob: -15.62692928314209
    5. ']' → logprob: -15.87692928314209
    6. ']=' → logprob: -16.751928329467773
    7. '   ' → logprob: -17.251928329467773
    8. '  ' → logprob: -17.626928329467773
    9. ')' → logprob: -17.751928329467773
    10. '=True' → logprob: -17.876928329467773

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0297523383051157
    2. ' ' → logprob: -3.529752254486084
    3. '   ' → logprob: -13.779752731323242
    4. '0' → logprob: -14.904752731323242
    5. '  ' → logprob: -15.529752731323242
    6. ' ' → logprob: -16.529752731323242
    7. ' True' → logprob: -16.779752731323242
    8. '    ' → logprob: -16.904752731323242
    9. '<|end|>' → logprob: -17.654752731323242
    10. '```' → logprob: -17.779752731323242

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.375012397766113
    3. '0' → logprob: -14.625012397766113
    4. '<|end|>' → logprob: -14.875012397766113
    5. '   ' → logprob: -16.00001335144043
    6. '  ' → logprob: -17.12501335144043
    7. '...' → logprob: -17.75001335144043
    8. '```' → logprob: -18.31251335144043
    9. 'a' → logprob: -18.50001335144043
    10. '<|end|>' → logprob: -19.12501335144043

Token 120: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00036144492332823575
    2. '           ' → logprob: -8.625361442565918
    3. ',' → logprob: -9.375361442565918
    4. '<|end|>' → logprob: -10.375361442565918
    5. '<|end|>' → logprob: -11.000361442565918
    6. '       ' → logprob: -11.250361442565918
    7. '              ' → logprob: -11.875361442565918
    8. '                   ' → logprob: -12.250361442565918
    9. 'k' → logprob: -12.375361442565918
    10. '```' → logprob: -12.625361442565918

Token 121: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028529210248962045
    2. '           ' → logprob: -9.125285148620605
    3. '<|end|>' → logprob: -9.625285148620605
    4. '<|end|>' → logprob: -9.750285148620605
    5. '       ' → logprob: -11.375285148620605
    6. ',' → logprob: -11.500285148620605
    7. '                   ' → logprob: -12.000285148620605
    8. '              ' → logprob: -12.250285148620605
    9. '   ' → logprob: -12.375285148620605
    10. '```' → logprob: -12.625285148620605

Token 122: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.03002561815083027
    2. ' k' → logprob: -3.5300257205963135
    3. '	k' → logprob: -9.030025482177734
    4. '   ' → logprob: -9.530025482177734
    5. '               ' → logprob: -9.780025482177734
    6. '           ' → logprob: -11.905025482177734
    7. ' ' → logprob: -12.030025482177734
    8. '                   ' → logprob: -12.405025482177734
    9. '{k' → logprob: -12.780025482177734
    10. ',k' → logprob: -12.905025482177734

Token 123: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0022143693640828133
    2. '+' → logprob: -6.502214431762695
    3. ' +=' → logprob: -7.252214431762695
    4. '=' → logprob: -12.877214431762695
    5. ']+=' → logprob: -15.377214431762695
    6. '++' → logprob: -15.877214431762695
    7. '+="' → logprob: -15.877214431762695
    8. '+='' → logprob: -16.252214431762695
    9. '+=(' → logprob: -17.627214431762695
    10. '   ' → logprob: -17.752214431762695

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '１' → logprob: -20.125011444091797
    4. '   ' → logprob: -20.375011444091797
    5. '2' → logprob: -20.625011444091797
    6. '  ' → logprob: -20.750011444091797
    7. '```' → logprob: -20.750011444091797
    8. ' ' → logprob: -20.875011444091797
    9. '<|end|>' → logprob: -21.250011444091797
    10. '۱' → logprob: -21.625011444091797

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '2' → logprob: -19.375
    4. '```' → logprob: -19.5
    5. '１' → logprob: -20.75
    6. '<|end|>' → logprob: -21.0625
    7. '۱' → logprob: -21.375
    8. '   ' → logprob: -22.0
    9. '१' → logprob: -22.0625
    10. '+' → logprob: -22.125

Token 126: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.502219021320343
    2. '       ' → logprob: -1.0022189617156982
    3. '           ' → logprob: -3.7522189617156982
    4. '   ' → logprob: -5.877219200134277
    5. ':
' → logprob: -7.752219200134277
    6. 'break' → logprob: -8.127219200134277
    7. ' break' → logprob: -8.377219200134277
    8. ' :' → logprob: -9.002219200134277
    9. '	break' → logprob: -9.502219200134277
    10. '	' → logprob: -10.002219200134277

Token 130: '           ' (ID: 352)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5857415199279785
    2. '       ' → logprob: -1.0857415199279785
    3. '           ' → logprob: -2.4607415199279785
    4. ' break' → logprob: -3.9607415199279785
    5. '	break' → logprob: -7.4607415199279785
    6. '   ' → logprob: -7.4607415199279785
    7. '               ' → logprob: -10.21074104309082
    8. '```' → logprob: -10.71074104309082
    9. 'pass' → logprob: -12.21074104309082
    10. ' ' → logprob: -12.71074104309082

Token 131: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00021867557370569557
    2. ' break' → logprob: -8.500218391418457
    3. '           ' → logprob: -11.875218391418457
    4. '   ' → logprob: -12.750218391418457
    5. '       ' → logprob: -13.000218391418457
    6. '	break' → logprob: -13.000218391418457
    7. 'pass' → logprob: -15.375218391418457
    8. '```' → logprob: -15.500218391418457
    9. 'return' → logprob: -15.625218391418457
    10. '               ' → logprob: -16.125219345092773

Token 132: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15760250389575958
    2. '<|end|>' → logprob: -2.157602548599243
    3. ' for' → logprob: -4.282602310180664
    4. 'for' (adapté à ' for') → logprob: -5.282602310180664
    5. ' ' → logprob: -5.782602310180664
    6. '#' → logprob: -6.532602310180664
    7. '
' → logprob: -6.657602310180664
    8. '  ' → logprob: -7.157602310180664
    9. '    
' → logprob: -7.157602310180664
    10. 'n' → logprob: -7.532602310180664

Token 135: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2748319208621979
    2. 'i' → logprob: -1.5248318910598755
    3. ' x' → logprob: -5.024831771850586
    4. 'x' → logprob: -5.024831771850586
    5. ' num' → logprob: -5.899831771850586
    6. '_' → logprob: -6.524831771850586
    7. 'n' → logprob: -7.024831771850586
    8. ' n' → logprob: -7.149831771850586
    9. ' j' → logprob: -7.149831771850586
    10. 'num' → logprob: -7.274831771850586

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02419358119368553
    2. 'in' → logprob: -3.774193525314331
    3. ',' → logprob: -7.89919376373291
    4. ' ' → logprob: -8.27419376373291
    5. '(' → logprob: -9.39919376373291
    6. 'range' → logprob: -9.89919376373291
    7. '   ' → logprob: -10.02419376373291
    8. '  ' → logprob: -10.02419376373291
    9. ' ,' → logprob: -11.02419376373291
    10. '1' → logprob: -11.27419376373291

Token 137: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14276857674121857
    2. 'range' → logprob: -2.017768621444702
    3. ' ' → logprob: -10.267768859863281
    4. 'a' → logprob: -11.517768859863281
    5. 'f' → logprob: -11.517768859863281
    6. ' a' → logprob: -12.142768859863281
    7. '  ' → logprob: -12.267768859863281
    8. '[' → logprob: -12.392768859863281
    9. '(range' → logprob: -12.392768859863281
    10. '	range' → logprob: -12.642768859863281

Token 138: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.371605948312208e-05
    2. '(len' → logprob: -10.875053405761719
    3. ' (' → logprob: -11.125053405761719
    4. '(x' → logprob: -11.250053405761719
    5. ' ' → logprob: -12.375053405761719
    6. '(a' → logprob: -14.000053405761719
    7. '((' → logprob: -14.250053405761719
    8. '1' → logprob: -14.875053405761719
    9. '(
' → logprob: -15.625053405761719
    10. '()' → logprob: -16.00005340576172

Token 139: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05820314213633537
    2. '+' → logprob: -3.0582032203674316
    3. ' +' → logprob: -5.433203220367432
    4. ' ):' → logprob: -5.933203220367432
    5. '):
' → logprob: -6.683203220367432
    6. ',' → logprob: -6.933203220367432
    7. '-' → logprob: -8.933202743530273
    8. '//' → logprob: -10.433202743530273
    9. ')):' → logprob: -10.808202743530273
    10. ')' → logprob: -10.808202743530273

Token 140: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.058995261788368225
    2. ' ' → logprob: -2.933995246887207
    3. '0' → logprob: -5.933995246887207
    4. 'len' → logprob: -7.183995246887207
    5. '1' → logprob: -8.558995246887207
    6. ' len' → logprob: -9.058995246887207
    7. '2' → logprob: -9.433995246887207
    8. '101' → logprob: -9.433995246887207
    9. ' -' → logprob: -9.683995246887207
    10. '10' → logprob: -10.183995246887207

Token 141: '0' (ID: 15)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01693350449204445
    2. '0' → logprob: -5.016933441162109
    3. ' ' → logprob: -5.266933441162109
    4. 'len' → logprob: -6.641933441162109
    5. '1' → logprob: -6.766933441162109
    6. '-' → logprob: -6.891933441162109
    7. '2' → logprob: -7.766933441162109
    8. '101' → logprob: -7.766933441162109
    9. '10' → logprob: -8.89193344116211
    10. 'a' → logprob: -9.32943344116211

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044531237334012985
    2. '-' → logprob: -3.4195313453674316
    3. ',-' → logprob: -4.544531345367432
    4. ' ,' → logprob: -9.544530868530273
    5. ' -' → logprob: -9.669530868530273
    6. ' ,-' → logprob: -10.294530868530273
    7. '   ' → logprob: -10.794530868530273
    8. '-,' → logprob: -11.919530868530273
    9. '```' → logprob: -13.544530868530273
    10. ' ' → logprob: -14.169530868530273

Token 143: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5761250853538513
    2. '-' → logprob: -0.8261250853538513
    3. ' ' → logprob: -9.201125144958496
    4. '  ' → logprob: -9.826125144958496
    5. '   ' → logprob: -10.826125144958496
    6. '```' → logprob: -12.826125144958496
    7. ',-' → logprob: -13.076125144958496
    8. '1' → logprob: -13.576125144958496
    9. ')' → logprob: -13.826125144958496
    10. ',' → logprob: -14.201125144958496

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022415895364247262
    2. '-' → logprob: -9.250224113464355
    3. ' ' → logprob: -9.625224113464355
    4. ' -' → logprob: -9.750224113464355
    5. '2' → logprob: -13.000224113464355
    6. ')' → logprob: -14.125224113464355
    7. '```' → logprob: -15.125224113464355
    8. '):
' → logprob: -16.250225067138672
    9. '  ' → logprob: -16.375225067138672
    10. ',-' → logprob: -16.500225067138672

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007249272894114256
    2. ',' → logprob: -6.132249355316162
    3. '):
' → logprob: -6.132249355316162
    4. '-' → logprob: -6.507249355316162
    5. ',-' → logprob: -7.382249355316162
    6. ' ):' → logprob: -7.882249355316162
    7. '   ' → logprob: -8.882248878479004
    8. '):-' → logprob: -9.132248878479004
    9. ' -' → logprob: -9.757248878479004
    10. ')' → logprob: -10.382248878479004

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3113778233528137
    2. ':' → logprob: -1.936377763748169
    3. ' ' → logprob: -2.561377763748169
    4. '<|end|>' → logprob: -3.311377763748169
    5. '    ' → logprob: -6.186378002166748
    6. '   ' → logprob: -6.561378002166748
    7. ' 
' → logprob: -6.686378002166748
    8. ',' → logprob: -6.936378002166748
    9. ' if' → logprob: -7.311378002166748
    10. ':
' → logprob: -7.436378002166748

Token 147: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20248495042324066
    2. ' if' → logprob: -1.8274849653244019
    3. '        ' → logprob: -4.702485084533691
    4. ' 
' → logprob: -5.452485084533691
    5. '       ' → logprob: -6.327485084533691
    6. 'if' (adapté à ' if') → logprob: -6.327485084533691
    7. '    ' → logprob: -6.327485084533691
    8. '<|end|>' → logprob: -6.577485084533691
    9. ' for' → logprob: -7.702485084533691
    10. ' ' → logprob: -7.827485084533691

Token 148: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07633278518915176
    2. 'a' → logprob: -2.7013328075408936
    3. ' not' → logprob: -5.0763325691223145
    4. 'not' → logprob: -9.451333045959473
    5. ' ' → logprob: -10.451333045959473
    6. ' i' → logprob: -11.826333045959473
    7. '   ' → logprob: -12.451333045959473
    8. ' ' → logprob: -12.576333045959473
    9. '	a' → logprob: -12.701333045959473
    10. 'i' → logprob: -12.826333045959473

Token 149: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.255023956531659e-05
    2. '[' → logprob: -9.625072479248047
    3. '[x' → logprob: -12.500072479248047
    4. '[a' → logprob: -13.125072479248047
    5. ' [' → logprob: -15.625072479248047
    6. '[I' → logprob: -16.125072479248047
    7. '[
' → logprob: -16.250072479248047
    8. '[f' → logprob: -16.625072479248047
    9. 'i' → logprob: -17.000072479248047
    10. '[s' → logprob: -17.125072479248047

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4014100432395935
    2. ']==' → logprob: -1.2764101028442383
    3. ']:' → logprob: -3.0264101028442383
    4. ']:
' → logprob: -6.026410102844238
    5. ' ]' → logprob: -7.526410102844238
    6. ']!=' → logprob: -10.026410102844238
    7. ']:

' → logprob: -10.901410102844238
    8. '==' → logprob: -10.901410102844238
    9. ']:
' → logprob: -11.526410102844238
    10. ']>' → logprob: -11.651410102844238

Token 151: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3070044219493866
    2. ':' → logprob: -1.682004451751709
    3. ' ==' → logprob: -2.557004451751709
    4. ']==' → logprob: -7.807004451751709
    5. ':
' → logprob: -8.43200397491455
    6. ')==' → logprob: -9.93200397491455
    7. ' :' → logprob: -10.05700397491455
    8. '):' → logprob: -10.55700397491455
    9. '!=' → logprob: -10.93200397491455
    10. '=' → logprob: -11.43200397491455

Token 152: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004922058433294296
    2. '0' → logprob: -5.629921913146973
    3. ' ' → logprob: -6.629921913146973
    4. '   ' → logprob: -14.129921913146973
    5. '  ' → logprob: -16.44242286682129
    6. '    ' → logprob: -17.69242286682129
    7. ' ' → logprob: -17.87992286682129
    8. '       ' → logprob: -18.00492286682129
    9. '	' → logprob: -18.37992286682129
    10. '=' → logprob: -18.56742286682129

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023119196703191847
    2. '0' → logprob: -8.62523078918457
    3. ' ' → logprob: -9.87523078918457
    4. '<|end|>' → logprob: -16.62523078918457
    5. '   ' → logprob: -17.68773078918457
    6. '```' → logprob: -18.43773078918457
    7. '  ' → logprob: -18.50023078918457
    8. '[' → logprob: -18.87523078918457
    9. '۱' → logprob: -19.25023078918457
    10. ' ' → logprob: -19.62523078918457

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034167028963565826
    2. ':
' → logprob: -3.4091670513153076
    3. ':return' → logprob: -8.034167289733887
    4. ' and' → logprob: -9.534167289733887
    5. '       ' → logprob: -9.909167289733887
    6. '           ' → logprob: -10.284167289733887
    7. ' or' → logprob: -11.659167289733887
    8. ':
' → logprob: -12.159167289733887
    9. '):
' → logprob: -12.284167289733887
    10. '):' → logprob: -12.284167289733887

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006315531209111214
    2. ' return' → logprob: -5.7563157081604
    3. ' print' → logprob: -6.3813157081604
    4. 'print' → logprob: -7.2563157081604
    5. '       ' → logprob: -8.256315231323242
    6. 'return' → logprob: -8.381315231323242
    7. '
' → logprob: -10.131315231323242
    8. '          ' → logprob: -10.381315231323242
    9. '```' → logprob: -10.506315231323242
    10. '\n' → logprob: -10.756315231323242

Token 156: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3905348479747772
    2. ' print' → logprob: -1.1405348777770996
    3. '       ' → logprob: -5.7655348777771
    4. '           ' → logprob: -7.6405348777771
    5. '
' → logprob: -11.265534400939941
    6. '	print' → logprob: -11.640534400939941
    7. '   ' → logprob: -12.015534400939941
    8. '```' → logprob: -12.515534400939941
    9. ' ' → logprob: -13.265534400939941
    10. ' return' → logprob: -13.515534400939941

Token 157: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0009137284359894693
    2. '(' → logprob: -7.000913619995117
    3. '('' → logprob: -13.500913619995117
    4. 'i' → logprob: -15.125913619995117
    5. ' i' → logprob: -15.250913619995117
    6. ' (' → logprob: -16.125913619995117
    7. '("' → logprob: -16.250913619995117
    8. '(f' → logprob: -17.000913619995117
    9. '()' → logprob: -17.750913619995117
    10. '(x' → logprob: -17.875913619995117

Token 158: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31333157420158386
    2. ')' → logprob: -1.3133316040039062
    3. ')
' → logprob: -10.063331604003906
    4. ')return' → logprob: -11.313331604003906
    5. '           ' → logprob: -11.438331604003906
    6. ')

' → logprob: -14.063331604003906
    7. ' )
' → logprob: -14.688331604003906
    8. ')`' → logprob: -14.688331604003906
    9. ')`
' → logprob: -14.813331604003906
    10. '       ' → logprob: -14.813331604003906

Token 159: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00030841029365547
    2. 'break' (adapté à ' break') → logprob: -8.1253080368042
    3. ' break' → logprob: -11.5003080368042
    4. 'return' → logprob: -13.8753080368042
    5. '       ' → logprob: -14.6253080368042
    6. '            
' → logprob: -15.0003080368042
    7. '		' → logprob: -15.7503080368042
    8. '	break' → logprob: -16.250308990478516
    9. '   ' → logprob: -16.250308990478516
    10. '```' → logprob: -16.500308990478516

Token 161: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: 'solve' (ID: 117273)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023688094690442085
    2. '(' → logprob: -3.7736880779266357
    3. '()
' → logprob: -7.898688316345215
    4. '(
' → logprob: -10.773688316345215
    5. '<|end|>' → logprob: -11.648688316345215
    6. '();' → logprob: -11.773688316345215
    7. '```' → logprob: -11.773688316345215
    8. '()\' → logprob: -12.273688316345215
    9. '()

' → logprob: -12.648688316345215
    10. '#' → logprob: -12.773688316345215


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 161
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 39.13%
Précision adaptée (1ère position): 41.61%
Précision (top 10): 81.37%
================================================================================
