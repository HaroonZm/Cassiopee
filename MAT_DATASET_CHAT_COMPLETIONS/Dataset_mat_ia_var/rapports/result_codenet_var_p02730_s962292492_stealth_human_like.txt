================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = list(input())  # on récupère la string et on la transforme en liste, c'est plus pratique (parfois)
n = len(s)
# j'ai inversé le nom des variables en minuscules, par convention... enfin presque partout

def is_palindrome(x):
    # c'est plus parlant, même si bon
    if x == x[::-1]:
        return 0
    else:
        # j'aime bien mettre 1 pour "pas palindrome"
        return 1

# Je prends ce qu’il y a avant le "milieu" (j’espère que la formule est ok)
sb = []
sb = s[:int((n-1)//2)]
# print(sb)  # ça peut toujours servir

sa = []
sa = s[int((n+3)//2-1):]
# print(sa)  # pareil, au cas où

# La condition finale c’est cumulatif : il faut que TOUT soit palindrome, donc que la somme soit 0
if is_palindrome(s) + is_palindrome(sa) + is_palindrome(sb) == 0:
    print("Yes")
else:
    print("No")
# franchement, ça devrait marcher
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' list' (ID: 1562)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04385878145694733
    2. '[' → logprob: -3.418858766555786
    3. 's' → logprob: -4.918859004974365
    4. '```' → logprob: -7.043859004974365
    5. '(s' → logprob: -7.793859004974365
    6. '`' → logprob: -7.918859004974365
    7. '(
' → logprob: -8.418858528137207
    8. ''s' → logprob: -8.668858528137207
    9. ''' → logprob: -8.668858528137207
    10. '`s' → logprob: -8.793858528137207

Token 4: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17044632136821747
    2. ')' → logprob: -2.6704463958740234
    3. '()' → logprob: -2.6704463958740234
    4. '(' → logprob: -4.045446395874023
    5. ' ())' → logprob: -8.920446395874023
    6. 's' → logprob: -9.170446395874023
    7. '()))' → logprob: -9.295446395874023
    8. '`()' → logprob: -9.545446395874023
    9. '();)' → logprob: -9.795446395874023
    10. '(()' → logprob: -9.920446395874023

Token 5: ' ' (ID: 220)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03056592307984829
    2. '[' → logprob: -4.1555657386779785
    3. '+' → logprob: -4.6555657386779785
    4. 's' → logprob: -6.5305657386779785
    5. '=' → logprob: -7.5305657386779785
    6. '#' → logprob: -7.5305657386779785
    7. '.append' → logprob: -7.7805657386779785
    8. '```' → logprob: -7.9055657386779785
    9. '.s' → logprob: -8.405566215515137
    10. ')' → logprob: -8.530566215515137

Token 6: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28879719972610474
    2. 'i' → logprob: -2.78879714012146
    3. 'n' → logprob: -2.91379714012146
    4. 'if' → logprob: -3.03879714012146
    5. 'while' → logprob: -3.53879714012146
    6. 'count' → logprob: -3.66379714012146
    7. 's' → logprob: -4.288797378540039
    8. 'd' → logprob: -5.538797378540039
    9. 'print' → logprob: -5.788797378540039
    10. 'c' → logprob: -5.788797378540039

Token 7: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06846228986978531
    2. 's' → logprob: -3.818462371826172
    3. '.' → logprob: -5.443462371826172
    4. '[' → logprob: -5.443462371826172
    5. ' a' → logprob: -5.693462371826172
    6. ' Enter' → logprob: -5.818462371826172
    7. ')' → logprob: -5.943462371826172
    8. ' s' → logprob: -6.193462371826172
    9. ' space' → logprob: -6.318462371826172
    10. 'Enter' → logprob: -6.443462371826172

Token 8: ' récup' (ID: 62856)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06107822433114052
    2. '=' → logprob: -3.3110783100128174
    3. '[' → logprob: -4.436078071594238
    4. '+' → logprob: -5.936078071594238
    5. ')' → logprob: -6.061078071594238
    6. '_' → logprob: -7.061078071594238
    7. 't' → logprob: -7.186078071594238
    8. 's' → logprob: -7.186078071594238
    9. ':' → logprob: -7.436078071594238
    10. ',' → logprob: -7.561078071594238

Token 9: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.015669235959649086
    2. 'érer' → logprob: -5.515669345855713
    3. 'è' → logprob: -5.765669345855713
    4. 'ére' → logprob: -5.890669345855713
    5. 'éré' → logprob: -6.765669345855713
    6. 'é' → logprob: -7.015669345855713
    7. 'er' → logprob: -7.140669345855713
    8. 'èrent' → logprob: -7.515669345855713
    9. 'ération' → logprob: -7.640669345855713
    10. 'e' → logprob: -7.890669345855713

Token 10: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8326888680458069
    2. 's' → logprob: -1.457688808441162
    3. '_' → logprob: -1.957688808441162
    4. '[' → logprob: -2.707688808441162
    5. ' ' → logprob: -3.082688808441162
    6. ' (' → logprob: -3.457688808441162
    7. '[:]' → logprob: -3.832688808441162
    8. '()' → logprob: -4.332688808441162
    9. 'u' → logprob: -6.082688808441162
    10. ')' → logprob: -6.457688808441162

Token 11: ' string' (ID: 1621)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01885571889579296
    2. 's' → logprob: -4.393855571746826
    3. 'chaine' → logprob: -6.393855571746826
    4. ' ' → logprob: -7.268855571746826
    5. 'm' → logprob: -7.643855571746826
    6. 'l' → logprob: -7.893855571746826
    7. ' chaîne' → logprob: -7.893855571746826
    8. '  ' → logprob: -7.893855571746826
    9. '   ' → logprob: -8.143856048583984
    10. '  ' → logprob: -8.268856048583984

Token 12: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.335684210062027
    2. '.' → logprob: -1.4606841802597046
    3. 's' → logprob: -3.585684299468994
    4. '```' → logprob: -5.710684299468994
    5. '[:]' → logprob: -5.835684299468994
    6. '+' → logprob: -6.085684299468994
    7. '.append' → logprob: -6.335684299468994
    8. '.s' → logprob: -6.460684299468994
    9. ',' → logprob: -6.710684299468994
    10. '\' → logprob: -6.835684299468994

Token 13: ' on' (ID: 402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5517470836639404
    2. ' s' → logprob: -1.5517470836639404
    3. '.append' → logprob: -2.4267470836639404
    4. '[' → logprob: -2.6767470836639404
    5. '[:]' → logprob: -3.9267470836639404
    6. ' ' → logprob: -4.9267473220825195
    7. '.' → logprob: -4.9267473220825195
    8. ' [' → logprob: -6.1767473220825195
    9. '.s' → logprob: -6.4267473220825195
    10. 'n' → logprob: -6.5517473220825195

Token 14: ' la' (ID: 557)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.239660620689392
    2. 's' → logprob: -1.739660620689392
    3. 'append' → logprob: -1.864660620689392
    4. 'convert' → logprob: -2.6146607398986816
    5. '.append' → logprob: -2.8646607398986816
    6. 'split' → logprob: -3.4896607398986816
    7. '.strip' → logprob: -3.7396607398986816
    8. ' transforme' → logprob: -3.7396607398986816
    9. ' continue' → logprob: -3.8646607398986816
    10. 'transform' → logprob: -4.114660739898682

Token 15: ' transforme' (ID: 184109)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.7275148034095764
    2. ' transforme' → logprob: -1.7275147438049316
    3. 'convert' → logprob: -1.9775147438049316
    4. 'transform' → logprob: -2.6025147438049316
    5. ' split' → logprob: -3.1025147438049316
    6. 's' → logprob: -3.8525147438049316
    7. ' convert' → logprob: -4.727514743804932
    8. 'd' → logprob: -4.852514743804932
    9. 'spl' → logprob: -5.477514743804932
    10. 'con' → logprob: -5.477514743804932

Token 16: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.12342275679111481
    2. ' en' → logprob: -2.623422861099243
    3. 's' → logprob: -3.998422861099243
    4. '[:]' → logprob: -4.123422622680664
    5. '[' → logprob: -6.123422622680664
    6. '.' → logprob: -6.248422622680664
    7. '```' → logprob: -6.748422622680664
    8. ''en' → logprob: -7.623422622680664
    9. '[]' → logprob: -7.748422622680664
    10. '[::-' → logprob: -7.748422622680664

Token 17: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.1065433025360107
    2. ' liste' → logprob: -1.2315433025360107
    3. 'list' → logprob: -2.2315433025360107
    4. 's' → logprob: -2.6065433025360107
    5. '['' → logprob: -2.6065433025360107
    6. ' list' → logprob: -2.9815433025360107
    7. 'car' → logprob: -3.4815433025360107
    8. '[]' → logprob: -4.48154354095459
    9. ' ['' → logprob: -4.85654354095459
    10. '```' → logprob: -5.23154354095459

Token 18: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7659386992454529
    2. '.' → logprob: -1.0159387588500977
    3. 's' → logprob: -2.5159387588500977
    4. '[
' → logprob: -4.140938758850098
    5. '+' → logprob: -4.390938758850098
    6. '_' → logprob: -4.515938758850098
    7. ' ' → logprob: -4.890938758850098
    8. '#' → logprob: -5.140938758850098
    9. '
' → logprob: -5.765938758850098
    10. '\' → logprob: -5.890938758850098

Token 19: ' c' (ID: 274)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.56560879945755
    2. ' ' → logprob: -1.3156087398529053
    3. 's' → logprob: -2.8156087398529053
    4. '.' → logprob: -3.5656087398529053
    5. ')' → logprob: -3.6906087398529053
    6. ',' → logprob: -4.815608978271484
    7. '[:]' → logprob: -5.190608978271484
    8. ' 
' → logprob: -5.440608978271484
    9. '[
' → logprob: -5.690608978271484
    10. '_' → logprob: -5.690608978271484

Token 20: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.272467017173767
    2. '[' → logprob: -2.3974671363830566
    3. 'e' → logprob: -2.3974671363830566
    4. 'a' → logprob: -2.6474671363830566
    5. 'o' → logprob: -2.6474671363830566
    6. ''' → logprob: -2.6474671363830566
    7. '_' → logprob: -2.7724671363830566
    8. 'ar' → logprob: -3.0224671363830566
    9. 's' → logprob: -3.2724671363830566
    10. 'ont' → logprob: -3.8974671363830566

Token 21: ' plus' (ID: 2932)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.935425877571106
    2. 'une' → logprob: -1.560425877571106
    3. '_' → logprob: -1.685425877571106
    4. 'à' → logprob: -3.1854257583618164
    5. ' un' → logprob: -3.8104257583618164
    6. ' ' → logprob: -3.8104257583618164
    7. 's' → logprob: -4.060425758361816
    8. ' à' → logprob: -4.185425758361816
    9. ' space' → logprob: -4.435425758361816
    10. ' []' → logprob: -5.185425758361816

Token 22: ' pratique' (ID: 42780)
  Prédit: ' facile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facile' → logprob: -0.6584909558296204
    2. '_' → logprob: -1.7834908962249756
    3. ' pratique' → logprob: -1.7834908962249756
    4. ' simple' → logprob: -2.7834908962249756
    5. ' comm' → logprob: -4.158491134643555
    6. 'pr' → logprob: -4.408491134643555
    7. ' a' → logprob: -5.158491134643555
    8. '```' → logprob: -5.158491134643555
    9. ' space' → logprob: -5.283491134643555
    10. 'fac' → logprob: -5.408491134643555

Token 23: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36145421862602234
    2. '.' → logprob: -1.7364542484283447
    3. 's' → logprob: -2.9864542484283447
    4. ' ' → logprob: -3.8614542484283447
    5. '
' → logprob: -4.736454010009766
    6. '#' → logprob: -4.861454010009766
    7. '[
' → logprob: -5.236454010009766
    8. '_' → logprob: -5.736454010009766
    9. ',' → logprob: -5.861454010009766
    10. '+' → logprob: -5.861454010009766

Token 24: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018101456225849688
    2. ' )' → logprob: -10.125181198120117
    3. 's' → logprob: -10.250181198120117
    4. '')' → logprob: -10.375181198120117
    5. ']' → logprob: -11.375181198120117
    6. '[' → logprob: -11.375181198120117
    7. '#' → logprob: -11.875181198120117
    8. ')
' → logprob: -12.125181198120117
    9. ',' → logprob: -12.125181198120117
    10. '))' → logprob: -12.500181198120117

Token 25: 'fois' (ID: 27733)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.44066593050956726
    2. 'fois' → logprob: -1.6906659603118896
    3. 'ce' → logprob: -2.9406659603118896
    4. ' rapport' → logprob: -4.1906657218933105
    5. 'def' → logprob: -4.3156657218933105
    6. 'fait' → logprob: -4.6906657218933105
    7. ' défaut' → logprob: -5.0656657218933105
    8. 'rapport' → logprob: -5.1906657218933105
    9. 'ent' → logprob: -5.3156657218933105
    10. 'la' → logprob: -5.5656657218933105

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003897226182743907
    2. ' )' → logprob: -5.628897190093994
    3. 's' → logprob: -9.378897666931152
    4. ',' → logprob: -9.878897666931152
    5. ' pour' → logprob: -9.878897666931152
    6. '[' → logprob: -10.378897666931152
    7. 'pour' → logprob: -11.503897666931152
    8. '.' → logprob: -11.878897666931152
    9. '')' → logprob: -11.878897666931152
    10. ')s' → logprob: -12.003897666931152

Token 27: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27562567591667175
    2. '[' → logprob: -1.7756257057189941
    3. 's' → logprob: -3.900625705718994
    4. ' ' → logprob: -4.025625705718994
    5. '#' → logprob: -4.650625705718994
    6. '_' → logprob: -5.900625705718994
    7. ',' → logprob: -6.400625705718994
    8. '=' → logprob: -6.525625705718994
    9. '' → logprob: -6.775625705718994
    10. 'i' → logprob: -6.775625705718994

Token 28: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7386234402656555
    2. ' =' → logprob: -0.9886234402656555
    3. ')' → logprob: -2.4886233806610107
    4. ' ' → logprob: -3.4886233806610107
    5. '_' → logprob: -4.61362361907959
    6. 'um' → logprob: -4.98862361907959
    7. '.' → logprob: -5.73862361907959
    8. 's' → logprob: -6.36362361907959
    9. 'u' → logprob: -6.36362361907959
    10. ']' → logprob: -6.61362361907959

Token 29: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.7076213359832764
    2. ' int' → logprob: -0.8326213359832764
    3. 'int' → logprob: -3.2076213359832764
    4. 'len' → logprob: -3.4576213359832764
    5. ' s' → logprob: -8.832621574401855
    6. ' ' → logprob: -8.957621574401855
    7. 's' → logprob: -11.082621574401855
    8. ' input' → logprob: -11.207621574401855
    9. '10' → logprob: -12.832621574401855
    10. 'input' → logprob: -13.332621574401855

Token 30: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00023655613767914474
    2. '(' → logprob: -8.375236511230469
    3. 's' → logprob: -12.125236511230469
    4. ' (' → logprob: -14.625236511230469
    5. '(n' → logprob: -16.75023651123047
    6. '(t' → logprob: -17.12523651123047
    7. ')' → logprob: -17.62523651123047
    8. '(
' → logprob: -18.12523651123047
    9. '(a' → logprob: -18.37523651123047
    10. '(x' → logprob: -19.12523651123047

Token 31: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ' )' → logprob: -11.625012397766113
    3. 's' → logprob: -13.750012397766113
    4. '))' → logprob: -14.250012397766113
    5. ')s' → logprob: -14.625012397766113
    6. '#' → logprob: -14.875012397766113
    7. ')
' → logprob: -15.000012397766113
    8. ')n' → logprob: -15.875012397766113
    9. ')#' → logprob: -15.875012397766113
    10. '()' → logprob: -16.25001335144043

Token 32: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3802832067012787
    2. 'i' → logprob: -1.380283236503601
    3. ' for' → logprob: -3.5052831172943115
    4. '
' → logprob: -4.255283355712891
    5. 's' → logprob: -4.505283355712891
    6. ' 
' → logprob: -6.130283355712891
    7. ' i' → logprob: -7.255283355712891
    8. '#' → logprob: -7.380283355712891
    9. '_' → logprob: -7.505283355712891
    10. 'd' → logprob: -7.505283355712891

Token 33: ' j' (ID: 441)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46952974796295166
    2. ' for' → logprob: -1.4695297479629517
    3. 'i' → logprob: -3.094529628753662
    4. 's' → logprob: -3.594529628753662
    5. ' ' → logprob: -3.844529628753662
    6. '#' → logprob: -4.094529628753662
    7. 'f' → logprob: -5.219529628753662
    8. 'a' → logprob: -5.594529628753662
    9. '_' → logprob: -5.719529628753662
    10. 'd' → logprob: -5.969529628753662

Token 34: ''ai' (ID: 12480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03811987116932869
    2. 'u' → logprob: -3.6631197929382324
    3. 'i' → logprob: -5.163119792938232
    4. ''' → logprob: -5.913119792938232
    5. 'uste' → logprob: -6.788119792938232
    6. 'a' → logprob: -7.038119792938232
    7. 'ust' → logprob: -7.913119792938232
    8. 's' → logprob: -8.91312026977539
    9. ' i' → logprob: -9.16312026977539
    10. ''i' → logprob: -9.41312026977539

Token 35: ' invers' (ID: 38721)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13537879288196564
    2. 's' → logprob: -3.885378837585449
    3. ' besoin' → logprob: -4.510378837585449
    4. ' s' → logprob: -4.885378837585449
    5. ' #' → logprob: -4.885378837585449
    6. ' une' → logprob: -5.135378837585449
    7. ' ' → logprob: -5.260378837585449
    8. ' choisi' → logprob: -5.385378837585449
    9. ' pas' → logprob: -5.510378837585449
    10. ' ajouté' → logprob: -5.635378837585449

Token 36: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.013552402146160603
    2. 'er' → logprob: -4.638552188873291
    3. 'e' → logprob: -6.638552188873291
    4. 'ée' → logprob: -6.888552188873291
    5. 's' → logprob: -7.888552188873291
    6. 'ér' → logprob: -8.13855266571045
    7. '#' → logprob: -8.38855266571045
    8. 'éré' → logprob: -8.51355266571045
    9. 'ért' → logprob: -9.63855266571045
    10. 'ert' → logprob: -10.01355266571045

Token 37: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16533932089805603
    2. 'for' → logprob: -3.165339231491089
    3. '_' → logprob: -3.540339231491089
    4. '(' → logprob: -4.040339469909668
    5. '(s' → logprob: -4.040339469909668
    6. ' s' → logprob: -4.415339469909668
    7. ')' → logprob: -4.790339469909668
    8. ' for' → logprob: -4.790339469909668
    9. 'n' → logprob: -5.290339469909668
    10. '[:]' → logprob: -6.415339469909668

Token 38: ' nom' (ID: 8080)
  Prédit: ' sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sens' → logprob: -0.5186583399772644
    2. 's' → logprob: -1.2686583995819092
    3. 'n' → logprob: -3.768658399581909
    4. ' code' → logprob: -4.26865816116333
    5. 'sens' → logprob: -4.39365816116333
    6. 'code' → logprob: -4.51865816116333
    7. 'texte' → logprob: -4.89365816116333
    8. 'mot' → logprob: -5.64365816116333
    9. ' s' → logprob: -5.76865816116333
    10. 'indices' → logprob: -5.89365816116333

Token 39: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1415938138961792
    2. '_' → logprob: -1.2665938138961792
    3. 'for' → logprob: -1.7665938138961792
    4. ' ' → logprob: -1.8915938138961792
    5. ' for' → logprob: -3.8915939331054688
    6. ')' → logprob: -4.266593933105469
    7. 'i' → logprob: -4.516593933105469
    8. 'n' → logprob: -5.516593933105469
    9. '#' → logprob: -5.516593933105469
    10. '=' → logprob: -5.641593933105469

Token 40: ' variables' (ID: 13955)
  Prédit: 'variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variables' → logprob: -0.1277434080839157
    2. 'indices' → logprob: -3.1277434825897217
    3. ' variables' → logprob: -3.3777434825897217
    4. 'list' → logprob: -4.627743244171143
    5. 's' → logprob: -5.752743244171143
    6. 'index' → logprob: -6.002743244171143
    7. 'fon' → logprob: -6.127743244171143
    8. ' indices' → logprob: -6.377743244171143
    9. '```' → logprob: -6.377743244171143
    10. 'de' → logprob: -6.502743244171143

Token 41: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3661285638809204
    2. 'i' → logprob: -1.4911285638809204
    3. 'm' → logprob: -2.116128444671631
    4. ' ' → logprob: -2.366128444671631
    5. '_' → logprob: -2.741128444671631
    6. ',' → logprob: -3.116128444671631
    7. 'p' → logprob: -3.241128444671631
    8. 't' → logprob: -3.366128444671631
    9. 'n' → logprob: -3.741128444671631
    10. '
' → logprob: -4.491128444671631

Token 42: ' minus' (ID: 40335)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6307870745658875
    2. 's' → logprob: -1.3807871341705322
    3. ' range' → logprob: -3.0057871341705322
    4. '#' → logprob: -3.5057871341705322
    5. ' s' → logprob: -3.6307871341705322
    6. 'for' → logprob: -3.8807871341705322
    7. 'raison' → logprob: -4.255786895751953
    8. 'l' → logprob: -4.505786895751953
    9. 'n' → logprob: -4.880786895751953
    10. 'i' → logprob: -4.880786895751953

Token 43: 'cules' (ID: 40805)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7669098973274231
    2. 'i' → logprob: -1.0169098377227783
    3. 'm' → logprob: -3.0169098377227783
    4. 'for' → logprob: -3.0169098377227783
    5. 's' → logprob: -4.266910076141357
    6. 'p' → logprob: -4.391910076141357
    7. 'u' → logprob: -4.516910076141357
    8. '_' → logprob: -4.766910076141357
    9. 't' → logprob: -5.141910076141357
    10. 'r' → logprob: -5.266910076141357

Token 44: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44659650325775146
    2. 'i' → logprob: -1.4465965032577515
    3. 'a' → logprob: -3.696596622467041
    4. '' → logprob: -3.946596622467041
    5. 'for' → logprob: -4.196596622467041
    6. 'n' → logprob: -4.446596622467041
    7. 'm' → logprob: -4.446596622467041
    8. ' 
' → logprob: -5.196596622467041
    9. '```' → logprob: -5.321596622467041
    10. ',' → logprob: -5.446596622467041

Token 45: ' par' (ID: 686)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9166914224624634
    2. 'u' → logprob: -1.7916914224624634
    3. 'a' → logprob: -2.541691303253174
    4. 'p' → logprob: -2.916691303253174
    5. 'm' → logprob: -3.166691303253174
    6. 's' → logprob: -3.416691303253174
    7. ' i' → logprob: -3.541691303253174
    8. 'd' → logprob: -3.666691303253174
    9. 'c' → logprob: -3.666691303253174
    10. 't' → logprob: -3.791691303253174

Token 46: ' convention' (ID: 39395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.287736415863037
    2. 'maj' → logprob: -1.787736415863037
    3. 'ma' → logprob: -2.412736415863037
    4. 'ce' → logprob: -2.912736415863037
    5. 's' → logprob: -2.912736415863037
    6. '```' → logprob: -2.912736415863037
    7. 'rapport' → logprob: -2.912736415863037
    8. ' rapport' → logprob: -3.162736415863037
    9. ' maj' → logprob: -4.162736415863037
    10. 'S' → logprob: -4.537736415863037

Token 47: '...' (ID: 1008)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15714703500270844
    2. 'i' → logprob: -2.65714693069458
    3. '' → logprob: -3.40714693069458
    4. 'a' → logprob: -4.78214693069458
    5. ' 
' → logprob: -4.78214693069458
    6. 'n' → logprob: -5.65714693069458
    7. '```' → logprob: -5.65714693069458
    8. 'for' → logprob: -5.90714693069458
    9. ',' → logprob: -6.28214693069458
    10. ' ' → logprob: -6.28214693069458

Token 48: ' enfin' (ID: 50642)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4453466534614563
    2. '
' → logprob: -1.5703465938568115
    3. 'a' → logprob: -2.9453465938568115
    4. 'for' → logprob: -3.5703465938568115
    5. '' → logprob: -4.695346832275391
    6. 'n' → logprob: -4.695346832275391
    7. '#' → logprob: -4.945346832275391
    8. ' 
' → logprob: -4.945346832275391
    9. 'm' → logprob: -5.195346832275391
    10. 'r' → logprob: -5.320346832275391

Token 49: ' presque' (ID: 54207)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18011416494846344
    2. 'a' → logprob: -3.055114269256592
    3. ',' → logprob: -3.930114269256592
    4. 'r' → logprob: -4.430114269256592
    5. 'm' → logprob: -4.555114269256592
    6. 'n' → logprob: -4.805114269256592
    7. 'p' → logprob: -4.805114269256592
    8. ' ' → logprob: -4.930114269256592
    9. 's' → logprob: -5.055114269256592
    10. 'for' → logprob: -5.180114269256592

Token 50: ' partout' (ID: 70478)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2103693038225174
    2. '  
' → logprob: -2.960369348526001
    3. 'n' → logprob: -3.335369348526001
    4. ' 
' → logprob: -3.460369348526001
    5. 'i' → logprob: -3.585369348526001
    6. '' → logprob: -4.585369110107422
    7. '\n' → logprob: -4.960369110107422
    8. 'a' → logprob: -5.210369110107422
    9. '```' → logprob: -5.460369110107422
    10. '
' → logprob: -5.585369110107422

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08018649369478226
    2. 'n' → logprob: -3.705186605453491
    3. '' → logprob: -4.455186367034912
    4. 'i' → logprob: -4.705186367034912
    5. '```' → logprob: -4.705186367034912
    6. 'for' → logprob: -4.955186367034912
    7. 'a' → logprob: -5.830186367034912
    8. ' 
' → logprob: -5.955186367034912
    9. '#' → logprob: -6.330186367034912
    10. '  
' → logprob: -6.455186367034912

Token 52: 'def' (ID: 1314)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5668115019798279
    2. 'for' → logprob: -2.0668115615844727
    3. '
' → logprob: -2.5668115615844727
    4. 'f' → logprob: -2.9418115615844727
    5. 'a' → logprob: -3.4418115615844727
    6. '```' → logprob: -3.5668115615844727
    7. '#' → logprob: -3.6918115615844727
    8. '' → logprob: -4.816811561584473
    9. 'm' → logprob: -4.816811561584473
    10. 'n' → logprob: -4.941811561584473

Token 53: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2782929539680481
    2. ' reverse' → logprob: -1.5282928943634033
    3. ' palindrome' → logprob: -5.153293132781982
    4. ' invers' → logprob: -5.903293132781982
    5. '_' → logprob: -5.903293132781982
    6. ' pal' → logprob: -6.028293132781982
    7. ' r' → logprob: -6.653293132781982
    8. ' reversed' → logprob: -7.153293132781982
    9. ' rev' → logprob: -7.403293132781982
    10. ' re' → logprob: -7.403293132781982

Token 54: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.5546016097068787
    2. '_' → logprob: -1.0546016693115234
    3. '_v' → logprob: -2.8046016693115234
    4. '_valid' → logprob: -5.429601669311523
    5. '_lower' → logprob: -5.929601669311523
    6. '_prime' → logprob: -6.554601669311523
    7. '_bal' → logprob: -6.554601669311523
    8. '_upper' → logprob: -6.554601669311523
    9. '_p' → logprob: -6.679601669311523
    10. '_a' → logprob: -7.304601669311523

Token 55: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0005825805710628629
    2. 'ind' → logprob: -7.500582695007324
    3. 'ndrome' → logprob: -11.500582695007324
    4. '_' → logprob: -11.625582695007324
    5. '```' → logprob: -13.125582695007324
    6. 'ynd' → logprob: -13.250582695007324
    7. '(s' → logprob: -13.375582695007324
    8. 'i' → logprob: -13.375582695007324
    9. 'in' → logprob: -14.250582695007324
    10. 'e' → logprob: -14.500582695007324

Token 56: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05540461838245392
    2. '(s' → logprob: -2.9304046630859375
    3. '_' → logprob: -7.9304046630859375
    4. 's' → logprob: -9.180404663085938
    5. ' (' → logprob: -10.305404663085938
    6. '_(' → logprob: -12.305404663085938
    7. '(word' → logprob: -12.930404663085938
    8. '(x' → logprob: -12.930404663085938
    9. '("("' → logprob: -13.055404663085938
    10. '(t' → logprob: -13.180404663085938

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007777221500873566
    2. ')' → logprob: -4.882777214050293
    3. ' ):' → logprob: -9.007777214050293
    4. ':' → logprob: -10.632777214050293
    5. 's' → logprob: -11.507777214050293
    6. '):
' → logprob: -12.757777214050293
    7. ' )' → logprob: -13.132777214050293
    8. '_list' → logprob: -13.507777214050293
    9. '_' → logprob: -13.882777214050293
    10. ',' → logprob: -13.882777214050293

Token 58: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31196948885917664
    2. '   ' → logprob: -1.561969518661499
    3. '(' → logprob: -3.686969518661499
    4. ' :' → logprob: -3.936969518661499
    5. ')' → logprob: -5.68696928024292
    6. '):' → logprob: -5.81196928024292
    7. ' ' → logprob: -5.81196928024292
    8. ':return' → logprob: -7.43696928024292
    9. '(x' → logprob: -7.43696928024292
    10. 's' → logprob: -7.68696928024292

Token 59: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5742944478988647
    2. '   ' → logprob: -1.0742944478988647
    3. 'return' → logprob: -2.4492945671081543
    4. 's' → logprob: -5.699294567108154
    5. ' s' → logprob: -5.824294567108154
    6. ' for' → logprob: -7.324294567108154
    7. ' x' → logprob: -7.574294567108154
    8. ' ' → logprob: -8.074294090270996
    9. '    ' → logprob: -8.199294090270996
    10. 'n' → logprob: -8.324294090270996

Token 60: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7928947806358337
    2. ' return' → logprob: -0.7928947806358337
    3. 'return' → logprob: -2.5428948402404785
    4. '    ' → logprob: -5.6678948402404785
    5. ' for' → logprob: -6.0428948402404785
    6. 's' → logprob: -6.0428948402404785
    7. ' x' → logprob: -6.2928948402404785
    8. ' ' → logprob: -6.5428948402404785
    9. ' s' → logprob: -6.9178948402404785
    10. 'x' → logprob: -7.0428948402404785

Token 61: ''est' (ID: 6616)
  Prédit: 'heck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heck' → logprob: -1.3001176118850708
    2. '   ' → logprob: -1.8001176118850708
    3. 'urrent' → logprob: -1.8001176118850708
    4. 'x' → logprob: -2.6751174926757812
    5. 'ode' → logprob: -3.3001174926757812
    6. '  ' → logprob: -3.4251174926757812
    7. '=' → logprob: -3.4251174926757812
    8. 'har' → logprob: -3.5501174926757812
    9. ' ' → logprob: -3.8001174926757812
    10. ' =' → logprob: -4.175117492675781

Token 62: ' plus' (ID: 2932)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08430051803588867
    2. 'x' → logprob: -2.7093005180358887
    3. '   ' → logprob: -4.709300518035889
    4. ' return' → logprob: -5.959300518035889
    5. ' ' → logprob: -6.709300518035889
    6. 's' → logprob: -7.709300518035889
    7. ' True' → logprob: -8.084300994873047
    8. '    ' → logprob: -8.209300994873047
    9. '  ' → logprob: -8.459300994873047
    10. 'return' → logprob: -10.209300994873047

Token 63: ' parlant' (ID: 178960)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20485974848270416
    2. ' x' → logprob: -1.704859733581543
    3. ' ' → logprob: -6.454859733581543
    4. 'len' → logprob: -7.079859733581543
    5. '   ' → logprob: -8.329859733581543
    6. ' len' → logprob: -8.329859733581543
    7. '  ' → logprob: -8.829859733581543
    8. 's' → logprob: -9.329859733581543
    9. ' =' → logprob: -10.329859733581543
    10. '(x' → logprob: -10.454859733581543

Token 64: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38677874207496643
    2. '(' → logprob: -1.636778712272644
    3. '   ' → logprob: -2.6367788314819336
    4. 's' → logprob: -3.2617788314819336
    5. '[' → logprob: -5.386778831481934
    6. ')' → logprob: -6.136778831481934
    7. '(x' → logprob: -6.386778831481934
    8. '[:]' → logprob: -6.386778831481934
    9. '=' → logprob: -6.886778831481934
    10. ' :' → logprob: -7.136778831481934

Token 65: ' même' (ID: 9679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5190243721008301
    2. ' return' → logprob: -1.01902437210083
    3. 'return' → logprob: -3.39402437210083
    4. '    ' → logprob: -5.39402437210083
    5. ' s' → logprob: -6.51902437210083
    6. ' ' → logprob: -6.89402437210083
    7. ' x' → logprob: -7.01902437210083
    8. '  ' → logprob: -7.14402437210083
    9. 'x' → logprob: -7.89402437210083
    10. ' for' → logprob: -7.89402437210083

Token 66: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1247708648443222
    2. ':' → logprob: -2.2497708797454834
    3. ' :' → logprob: -5.374770641326904
    4. '    ' → logprob: -6.374770641326904
    5. '  ' → logprob: -6.624770641326904
    6. ')' → logprob: -7.124770641326904
    7. ' ' → logprob: -7.124770641326904
    8. 'return' → logprob: -7.624770641326904
    9. '.' → logprob: -7.749770641326904
    10. ' return' → logprob: -7.999770641326904

Token 67: ' bon' (ID: 4846)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6427409052848816
    2. ' x' → logprob: -0.7677409052848816
    3. ' len' → logprob: -5.142740726470947
    4. 'len' → logprob: -6.642740726470947
    5. ' ' → logprob: -6.767740726470947
    6. ' not' → logprob: -7.267740726470947
    7. ' True' → logprob: -7.517740726470947
    8. '   ' → logprob: -9.267741203308105
    9. '  ' → logprob: -9.517741203308105
    10. 'not' → logprob: -9.767741203308105

Token 68: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7214263081550598
    2. '   ' → logprob: -0.7214263081550598
    3. ' :' → logprob: -4.596426486968994
    4. '    ' → logprob: -5.721426486968994
    5. ':return' → logprob: -5.846426486968994
    6. ')' → logprob: -5.971426486968994
    7. '(' → logprob: -6.346426486968994
    8. '  ' → logprob: -6.596426486968994
    9. ' ' → logprob: -6.846426486968994
    10. 'return' → logprob: -6.971426486968994

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22132596373558044
    2. ':' → logprob: -1.8463259935379028
    3. '    ' → logprob: -4.596325874328613
    4. ')' → logprob: -4.596325874328613
    5. ' :' → logprob: -4.846325874328613
    6. '):' → logprob: -5.346325874328613
    7. '       ' → logprob: -5.971325874328613
    8. ' ' → logprob: -6.346325874328613
    9. '  ' → logprob: -7.221325874328613
    10. ' return' → logprob: -7.471325874328613

Token 70: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7015154957771301
    2. ' return' → logprob: -1.3265154361724854
    3. 'return' → logprob: -1.4515154361724854
    4. 's' → logprob: -6.3265156745910645
    5. ' s' → logprob: -7.0765156745910645
    6. 'x' → logprob: -7.5765156745910645
    7. ' for' → logprob: -7.9515156745910645
    8. ' x' → logprob: -8.076515197753906
    9. 'for' → logprob: -8.326515197753906
    10. '  ' → logprob: -8.701515197753906

Token 71: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04878811165690422
    2. 'x' → logprob: -3.048788070678711
    3. ' len' → logprob: -8.673788070678711
    4. 'len' → logprob: -10.798788070678711
    5. ' ' → logprob: -12.548788070678711
    6. '	x' → logprob: -13.423788070678711
    7. 's' → logprob: -13.673788070678711
    8. ' list' → logprob: -14.298788070678711
    9. '(x' → logprob: -14.548788070678711
    10. ' not' → logprob: -14.923788070678711

Token 72: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14480701088905334
    2. ' ==' → logprob: -2.3948071002960205
    3. '[::-' → logprob: -3.6448071002960205
    4. '[:]' → logprob: -4.519806861877441
    5. '[' → logprob: -5.269806861877441
    6. '!=' → logprob: -7.394806861877441
    7. ' !=' → logprob: -8.144806861877441
    8. ' ' → logprob: -8.144806861877441
    9. '[]' → logprob: -9.394806861877441
    10. '=' → logprob: -9.519806861877441

Token 73: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20151372253894806
    2. ' x' → logprob: -1.7015137672424316
    3. '	x' → logprob: -9.701513290405273
    4. ' ' → logprob: -11.076513290405273
    5. '[::-' → logprob: -11.326513290405273
    6. '   ' → logprob: -12.451513290405273
    7. 'list' → logprob: -13.326513290405273
    8. '  ' → logprob: -13.451513290405273
    9. '[' → logprob: -14.201513290405273
    10. '    ' → logprob: -14.326513290405273

Token 74: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0020918536465615034
    2. '[' → logprob: -6.252091884613037
    3. ' [' → logprob: -8.877091407775879
    4. '[:]' → logprob: -11.502091407775879
    5. '[:' → logprob: -12.252091407775879
    6. '[
' → logprob: -13.627091407775879
    7. '[-' → logprob: -13.877091407775879
    8. '[n' → logprob: -14.127091407775879
    9. 're' → logprob: -14.127091407775879
    10. 's' → logprob: -14.127091407775879

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048298496403731406
    2. '-' → logprob: -7.75048303604126
    3. ']' → logprob: -10.500482559204102
    4. 's' → logprob: -11.250482559204102
    5. ''s' → logprob: -12.625482559204102
    6. 'es' → logprob: -13.750482559204102
    7. 'ed' → logprob: -14.125482559204102
    8. ']:' → logprob: -14.250482559204102
    9. 'sel' → logprob: -14.250482559204102
    10. 'al' → logprob: -14.500482559204102

Token 76: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029824094846844673
    2. ':' → logprob: -4.029824256896973
    3. ']:' → logprob: -5.029824256896973
    4. ')' → logprob: -5.404824256896973
    5. '):
' → logprob: -8.279824256896973
    6. ']' → logprob: -9.529824256896973
    7. ':return' → logprob: -9.529824256896973
    8. ' ):' → logprob: -9.654824256896973
    9. ' ' → logprob: -10.529824256896973
    10. '   ' → logprob: -11.029824256896973

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024696841835975647
    2. ':' → logprob: -4.3996968269348145
    3. ':return' → logprob: -5.2746968269348145
    4. ' return' → logprob: -5.7746968269348145
    5. '   ' → logprob: -6.3996968269348145
    6. 'return' → logprob: -6.6496968269348145
    7. ' :' → logprob: -8.149697303771973
    8. ':
' → logprob: -8.274697303771973
    9. '    ' → logprob: -9.149697303771973
    10. '<|end|>' → logprob: -9.399697303771973

Token 78: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0025315284729004
    2. 'return' (adapté à ' return') → logprob: -1.0025315284729004
    3. ' return' → logprob: -1.3775315284729004
    4. '   ' → logprob: -4.5025315284729
    5. ':return' → logprob: -7.0025315284729
    6. ' ' → logprob: -7.3775315284729
    7. ' 
' → logprob: -7.8775315284729
    8. '    ' → logprob: -8.127531051635742
    9. '	return' → logprob: -8.877531051635742
    10. ' ' → logprob: -9.127531051635742

Token 79: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6931481957435608
    2. ' True' → logprob: -0.6931481957435608
    3. '   ' → logprob: -14.818148612976074
    4. ' ' → logprob: -15.443148612976074
    5. '1' → logprob: -15.943148612976074
    6. '(True' → logprob: -16.068147659301758
    7. 'Tr' → logprob: -17.318147659301758
    8. ' ' → logprob: -17.443147659301758
    9. 'true' → logprob: -18.443147659301758
    10. 'False' → logprob: -18.443147659301758

Token 80: '0' (ID: 15)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007173155900090933
    2. ' True' → logprob: -7.2507171630859375
    3. 'Tr' → logprob: -12.000717163085938
    4. '1' → logprob: -14.250717163085938
    5. 'T' → logprob: -14.500717163085938
    6. ' ' → logprob: -16.875717163085938
    7. '   ' → logprob: -17.500717163085938
    8. '(True' → logprob: -17.625717163085938
    9. 'TRUE' → logprob: -19.375717163085938
    10. 'true' → logprob: -19.500717163085938

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.657184362411499
    2. 'else' → logprob: -1.782184362411499
    3. '<|end|>' → logprob: -1.907184362411499
    4. '    
' → logprob: -3.032184362411499
    5. ' else' → logprob: -3.532184362411499
    6. ' ' → logprob: -3.907184362411499
    7. '1' → logprob: -4.032184600830078
    8. '   ' → logprob: -4.157184600830078
    9. '  
' → logprob: -5.032184600830078
    10. ':' → logprob: -5.532184600830078

Token 82: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22150105237960815
    2. 'else' → logprob: -2.846501111984253
    3. ' else' → logprob: -3.096501111984253
    4. '
' → logprob: -3.346501111984253
    5. '<|end|>' → logprob: -3.721501111984253
    6. '   ' → logprob: -4.471500873565674
    7. ' ' → logprob: -4.596500873565674
    8. '    
' → logprob: -4.846500873565674
    9. '   
' → logprob: -6.596500873565674
    10. '  ' → logprob: -6.721500873565674

Token 83: ' else' (ID: 1203)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015163655392825603
    2. 'else' (adapté à ' else') → logprob: -5.265163421630859
    3. ' ' → logprob: -5.765163421630859
    4. '<|end|>' → logprob: -6.140163421630859
    5. '   ' → logprob: -6.390163421630859
    6. '
' → logprob: -7.140163421630859
    7. ' else' → logprob: -7.265163421630859
    8. '    
' → logprob: -7.515163421630859
    9. '  ' → logprob: -8.76516342163086
    10. 'return' → logprob: -9.26516342163086

Token 84: ':
' (ID: 734)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7751813530921936
    2. '       ' → logprob: -1.0251812934875488
    3. '   ' → logprob: -1.7751812934875488
    4. ' ' → logprob: -5.025181293487549
    5. ':' → logprob: -6.650181293487549
    6. ' return' → logprob: -6.775181293487549
    7. 'return' → logprob: -6.775181293487549
    8. '  ' → logprob: -8.150181770324707
    9. '    ' → logprob: -8.275181770324707
    10. ':return' → logprob: -8.775181770324707

Token 85: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019400931894779205
    2. '   ' → logprob: -4.0194010734558105
    3. ' ' → logprob: -7.1444010734558105
    4. '       ' → logprob: -7.7694010734558105
    5. '  ' → logprob: -10.894400596618652
    6. 'return' → logprob: -11.519400596618652
    7. '    ' → logprob: -12.769400596618652
    8. '2' → logprob: -13.269400596618652
    9. ' return' → logprob: -13.519400596618652
    10. '4' → logprob: -14.394400596618652

Token 86: ' #' (ID: 1069)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012023169983876869
    2. ' ' → logprob: -9.625120162963867
    3. '   ' → logprob: -10.750120162963867
    4. 'return' → logprob: -10.750120162963867
    5. '       ' → logprob: -11.625120162963867
    6. '-' → logprob: -14.000120162963867
    7. '2' → logprob: -15.000120162963867
    8. '  ' → logprob: -15.250120162963867
    9. ' return' → logprob: -15.375120162963867
    10. '7' → logprob: -15.750120162963867

Token 87: ' j' (ID: 441)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028308242559432983
    2. ' ' → logprob: -3.903308153152466
    3. '   ' → logprob: -4.903308391571045
    4. '       ' → logprob: -8.278307914733887
    5. '  ' → logprob: -10.653307914733887
    6. '    ' → logprob: -11.403307914733887
    7. ' return' → logprob: -11.528307914733887
    8. 'return' → logprob: -12.028307914733887
    9. ' ' → logprob: -13.403307914733887
    10. '2' → logprob: -13.653307914733887

Token 88: ''aime' (ID: 57963)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.144932746887207
    2. 'u' → logprob: -1.644932746887207
    3. '    ' → logprob: -2.269932746887207
    4. '   ' → logprob: -2.519932746887207
    5. 'avascript' → logprob: -3.019932746887207
    6. ' ' → logprob: -3.269932746887207
    7. 'udge' → logprob: -3.519932746887207
    8. ''' → logprob: -3.644932746887207
    9. '0' → logprob: -3.894932746887207
    10. ' return' → logprob: -3.894932746887207

Token 89: ' bien' (ID: 5340)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0433313213288784
    2. ' ' → logprob: -3.1683313846588135
    3. '   ' → logprob: -8.668331146240234
    4. '  ' → logprob: -9.293331146240234
    5. '    ' → logprob: -10.418331146240234
    6. ' return' → logprob: -11.293331146240234
    7. 'return' → logprob: -11.793331146240234
    8. 's' → logprob: -12.043331146240234
    9. ' s' → logprob: -12.168331146240234
    10. '    
' → logprob: -13.668331146240234

Token 90: ' mettre' (ID: 25339)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002346992027014494
    2. '   ' → logprob: -6.502346992492676
    3. ' ' → logprob: -7.127346992492676
    4. 'return' → logprob: -10.877346992492676
    5. ' return' → logprob: -11.627346992492676
    6. '  ' → logprob: -11.752346992492676
    7. '    ' → logprob: -13.252346992492676
    8. '       ' → logprob: -13.377346992492676
    9. 's' → logprob: -14.502346992492676
    10. '-' → logprob: -15.127346992492676

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017374205635860562
    2. ' ' → logprob: -6.501737594604492
    3. '   ' → logprob: -8.626737594604492
    4. 'return' → logprob: -10.751737594604492
    5. '  ' → logprob: -11.376737594604492
    6. '-' → logprob: -11.751737594604492
    7. ' return' → logprob: -12.626737594604492
    8. ' ' → logprob: -13.126737594604492
    9. '    ' → logprob: -13.376737594604492
    10. '```' → logprob: -13.626737594604492

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006077215657569468
    2. ' ' → logprob: -8.00060749053955
    3. '   ' → logprob: -9.37560749053955
    4. 'return' → logprob: -9.50060749053955
    5. '-' → logprob: -10.00060749053955
    6. 'True' → logprob: -10.50060749053955
    7. '  ' → logprob: -11.37560749053955
    8. ' True' → logprob: -12.37560749053955
    9. '```' → logprob: -12.50060749053955
    10. ' return' → logprob: -12.87560749053955

Token 93: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' "' (ID: 392)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.48575136065483093
    2. ' ind' → logprob: -1.3607513904571533
    3. ' ' → logprob: -3.8607513904571533
    4. ' signal' → logprob: -3.9857513904571533
    5. ' True' → logprob: -3.9857513904571533
    6. 'l' → logprob: -4.235751152038574
    7. 'le' → logprob: -4.360751152038574
    8. ' l' → logprob: -4.985751152038574
    9. ' représ' → logprob: -5.110751152038574
    10. ' le' → logprob: -5.860751152038574

Token 95: 'pas' (ID: 21122)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.7638094425201416
    2. 'pas' → logprob: -1.7638094425201416
    3. 'not' → logprob: -2.2638094425201416
    4. 'True' → logprob: -2.3888094425201416
    5. 'non' → logprob: -2.3888094425201416
    6. 'f' → logprob: -2.6388094425201416
    7. 'v' → logprob: -2.7638094425201416
    8. 'ind' → logprob: -3.5138094425201416
    9. 'False' → logprob: -3.6388094425201416
    10. ' faux' → logprob: -3.8888094425201416

Token 96: ' palindrome' (ID: 160469)
  Prédit: ' palindrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' palindrome' → logprob: -0.14591482281684875
    2. '_pal' → logprob: -2.7709147930145264
    3. 'pal' → logprob: -3.1459147930145264
    4. ' pal' → logprob: -4.5209150314331055
    5. '_' → logprob: -5.0209150314331055
    6. ' ' → logprob: -5.1459150314331055
    7. ' un' → logprob: -5.8959150314331055
    8. '_p' → logprob: -6.6459150314331055
    9. '<|end|>' → logprob: -7.1459150314331055
    10. 'Palindrome' → logprob: -7.7709150314331055

Token 97: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1413293331861496
    2. '1' → logprob: -2.141329288482666
    3. '   ' → logprob: -5.641329288482666
    4. '<|end|>' → logprob: -6.391329288482666
    5. ',' → logprob: -6.516329288482666
    6. ':' → logprob: -6.641329288482666
    7. '```' → logprob: -6.641329288482666
    8. ' ' → logprob: -7.016329288482666
    9. ' )' → logprob: -7.141329288482666
    10. '(' → logprob: -7.391329288482666

Token 98: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07989191263914108
    2. '   ' → logprob: -2.5798919200897217
    3. ' ' → logprob: -7.454891681671143
    4. '       ' → logprob: -7.954891681671143
    5. '    ' → logprob: -10.9548921585083
    6. ' return' → logprob: -10.9548921585083
    7. 'return' → logprob: -11.0798921585083
    8. '  ' → logprob: -11.7048921585083
    9. ':' → logprob: -13.2048921585083
    10. '```' → logprob: -13.2048921585083

Token 99: ' return' (ID: 622)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.966313281329349e-05
    2. '   ' → logprob: -10.125049591064453
    3. 'return' (adapté à ' return') → logprob: -12.000049591064453
    4. ' ' → logprob: -12.750049591064453
    5. '       ' → logprob: -14.750049591064453
    6. ' return' → logprob: -17.000049591064453
    7. '  ' → logprob: -17.125049591064453
    8. '    ' → logprob: -19.250049591064453
    9. '```' → logprob: -19.375049591064453
    10. '	return' → logprob: -20.000049591064453

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.73446003627032e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -13.625097274780273
    4. '  ' → logprob: -19.125097274780273
    5. ' ' → logprob: -20.625097274780273
    6. '       ' → logprob: -20.875097274780273
    7. '１' → logprob: -21.250097274780273
    8. '    ' → logprob: -21.375097274780273
    9. '۱' → logprob: -22.000097274780273
    10. '<|end|>' → logprob: -22.000097274780273

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -20.75
    4. '  ' → logprob: -22.75
    5. '１' → logprob: -22.875
    6. '<|end|>' → logprob: -23.125
    7. '۱' → logprob: -23.375
    8. '১' → logprob: -23.5
    9. '१' → logprob: -23.75
    10. '' → logprob: -24.125

Token 102: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0824509710073471
    2. '

' → logprob: -2.5824508666992188
    3. '\n' → logprob: -6.457450866699219
    4. '<|end|>' → logprob: -7.332450866699219
    5. '


' → logprob: -8.457450866699219
    6. '' → logprob: -8.707450866699219
    7. 'newline' → logprob: -8.707450866699219
    8. ' ' → logprob: -8.832450866699219
    9. '
' → logprob: -9.207450866699219
    10. '  
' → logprob: -9.332450866699219

Token 103: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08750591427087784
    2. '

' → logprob: -2.58750581741333
    3. 'def' → logprob: -6.71250581741333
    4. 'n' → logprob: -6.71250581741333
    5. '#' → logprob: -6.96250581741333
    6. ' 
' → logprob: -7.08750581741333
    7. '  
' → logprob: -7.21250581741333
    8. '\n' → logprob: -7.21250581741333
    9. '' → logprob: -7.58750581741333
    10. ' 

' → logprob: -8.087506294250488

Token 104: ' Je' (ID: 4678)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4156389534473419
    2. ' 
' → logprob: -2.1656389236450195
    3. '#' → logprob: -2.5406389236450195
    4. 'n' → logprob: -2.7906389236450195
    5. 's' → logprob: -3.6656389236450195
    6. '  
' → logprob: -4.5406389236450195
    7. 'i' → logprob: -4.6656389236450195
    8. 'for' → logprob: -5.0406389236450195
    9. ' for' → logprob: -5.1656389236450195
    10. '
' → logprob: -5.4156389236450195

Token 105: ' prends' (ID: 151723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14288164675235748
    2. 'f' → logprob: -3.7678816318511963
    3. ' =' → logprob: -3.8928816318511963
    4. 'n' → logprob: -3.8928816318511963
    5. ' n' → logprob: -4.267881870269775
    6. ' veux' → logprob: -5.017881870269775
    7. '.' → logprob: -5.142881870269775
    8. 's' → logprob: -5.142881870269775
    9. '=' → logprob: -5.142881870269775
    10. ' f' → logprob: -5.267881870269775

Token 106: ' ce' (ID: 2357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06591623276472092
    2. ' s' → logprob: -4.440916061401367
    3. 's' → logprob: -4.690916061401367
    4. '_' → logprob: -4.815916061401367
    5. ' n' → logprob: -5.190916061401367
    6. ' a' → logprob: -5.315916061401367
    7. 'n' → logprob: -5.315916061401367
    8. ' for' → logprob: -5.440916061401367
    9. ' la' → logprob: -5.940916061401367
    10. 'i' → logprob: -6.190916061401367

Token 107: ' qu' (ID: 474)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5217180252075195
    2. 's' → logprob: -1.5217180252075195
    3. 'n' → logprob: -2.6467180252075195
    4. ' que' → logprob: -3.6467180252075195
    5. ' qui' → logprob: -3.6467180252075195
    6. ' n' → logprob: -4.3967180252075195
    7. ' ' → logprob: -5.1467180252075195
    8. ' code' → logprob: -5.2717180252075195
    9. ' that' → logprob: -5.5217180252075195
    10. 'u' → logprob: -5.5217180252075195

Token 108: '’il' (ID: 14828)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8072388172149658
    2. '[' → logprob: -2.557238817214966
    3. ' qui' → logprob: -2.932238817214966
    4. ' s' → logprob: -3.057238817214966
    5. ' que' → logprob: -3.057238817214966
    6. 'qui' → logprob: -3.307238817214966
    7. '<|end|>' → logprob: -3.307238817214966
    8. ' qu' → logprob: -3.557238817214966
    9. ' ' → logprob: -3.557238817214966
    10. 'u' → logprob: -3.682238817214966

Token 109: ' y' (ID: 342)
  Prédit: ' reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reste' → logprob: -0.7096463441848755
    2. 'reste' → logprob: -1.4596463441848755
    3. 'rest' → logprob: -1.7096463441848755
    4. 'f' → logprob: -2.709646224975586
    5. 's' → logprob: -4.459646224975586
    6. ' rest' → logprob: -4.584646224975586
    7. 'n' → logprob: -6.209646224975586
    8. ' faut' → logprob: -6.834646224975586
    9. ' s' → logprob: -7.959646224975586
    10. 'r' → logprob: -7.959646224975586

Token 110: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009914979338645935
    2. 'reste' → logprob: -5.259914875030518
    3. 'f' → logprob: -6.509914875030518
    4. 's' → logprob: -7.134914875030518
    5. 'avait' → logprob: -7.259914875030518
    6. 'rest' → logprob: -7.384914875030518
    7. ' a' → logprob: -7.759914875030518
    8. 'y' → logprob: -8.884915351867676
    9. 'à' → logprob: -9.134915351867676
    10. ' reste' → logprob: -9.884915351867676

Token 111: ' avant' (ID: 13339)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9600024819374084
    2. ' s' → logprob: -2.0850024223327637
    3. '_' → logprob: -2.5850024223327637
    4. 'next' → logprob: -3.3350024223327637
    5. ' next' → logprob: -3.3350024223327637
    6. 'dans' → logprob: -3.4600024223327637
    7. 'n' → logprob: -3.7100024223327637
    8. 'for' → logprob: -3.7100024223327637
    9. '#' → logprob: -3.7100024223327637
    10. ' ' → logprob: -3.8350024223327637

Token 112: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16636550426483154
    2. ':' → logprob: -2.416365623474121
    3. 's' → logprob: -3.416365623474121
    4. ' ' → logprob: -4.166365623474121
    5. '=' → logprob: -5.291365623474121
    6. ' =' → logprob: -5.791365623474121
    7. '[:]' → logprob: -6.416365623474121
    8. ',' → logprob: -7.166365623474121
    9. ' :' → logprob: -7.416365623474121
    10. 'n' → logprob: -7.541365623474121

Token 113: ' "' (ID: 392)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14741410315036774
    2. 's' → logprob: -3.647414207458496
    3. '"' → logprob: -4.022414207458496
    4. 'prem' → logprob: -4.272414207458496
    5. '=' → logprob: -4.522414207458496
    6. ' ' → logprob: -4.897414207458496
    7. 'n' → logprob: -5.147414207458496
    8. 'e' → logprob: -5.272414207458496
    9. 'underscore' → logprob: -5.522414207458496
    10. 'a' → logprob: -5.647414207458496

Token 114: 'mil' (ID: 42335)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2467757761478424
    2. '"' → logprob: -2.2467758655548096
    3. 's' → logprob: -2.7467758655548096
    4. '#' → logprob: -4.7467756271362305
    5. '=' → logprob: -4.8717756271362305
    6. ':' → logprob: -5.6217756271362305
    7. '[' → logprob: -5.7467756271362305
    8. 'a' → logprob: -5.8717756271362305
    9. 'n' → logprob: -6.4967756271362305
    10. ')' → logprob: -6.6217756271362305

Token 115: 'ieu' (ID: 15541)
  Prédit: 'ieu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieu' → logprob: -0.0007629302563145757
    2. 'ieux' → logprob: -8.000762939453125
    3. 'd' → logprob: -8.750762939453125
    4. '```' → logprob: -9.250762939453125
    5. 'e' → logprob: -9.375762939453125
    6. 'lie' → logprob: -11.125762939453125
    7. '#' → logprob: -11.625762939453125
    8. '`' → logprob: -12.125762939453125
    9. '``' → logprob: -12.125762939453125
    10. 'a' → logprob: -12.375762939453125

Token 116: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12067899852991104
    2. 's' → logprob: -2.8706789016723633
    3. ':' → logprob: -3.8706789016723633
    4. ' ' → logprob: -4.870678901672363
    5. ',' → logprob: -5.370678901672363
    6. 'm' → logprob: -5.620678901672363
    7. '=' → logprob: -5.620678901672363
    8. 'd' → logprob: -6.245678901672363
    9. 'i' → logprob: -6.245678901672363
    10. '#' → logprob: -6.495678901672363

Token 117: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1073351800441742
    2. '_' → logprob: -2.482335090637207
    3. 'i' → logprob: -4.607335090637207
    4. 's' → logprob: -6.232335090637207
    5. ':' → logprob: -6.607335090637207
    6. 'n' → logprob: -6.982335090637207
    7. 'p' → logprob: -7.357335090637207
    8. 'mid' → logprob: -7.732335090637207
    9. 'l' → logprob: -8.357335090637207
    10. 'e' → logprob: -8.357335090637207

Token 118: 'j' (ID: 73)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14098896086215973
    2. ':' → logprob: -2.640989065170288
    3. 'n' → logprob: -4.015988826751709
    4. ' )' → logprob: -4.390988826751709
    5. 's' → logprob: -5.390988826751709
    6. '):' → logprob: -5.515988826751709
    7. ' ' → logprob: -5.640988826751709
    8. ',' → logprob: -5.890988826751709
    9. 'i' → logprob: -6.140988826751709
    10. 'm' → logprob: -6.390988826751709

Token 119: '’espère' (ID: 176706)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4823940396308899
    2. ' =' → logprob: -0.9823940396308899
    3. '=int' → logprob: -6.107394218444824
    4. 'n' → logprob: -6.732394218444824
    5. ')' → logprob: -6.732394218444824
    6. '=n' → logprob: -7.232394218444824
    7. '=len' → logprob: -7.232394218444824
    8. 's' → logprob: -8.232394218444824
    9. 'a' → logprob: -8.482394218444824
    10. '=i' → logprob: -8.982394218444824

Token 120: ' que' (ID: 661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3922041654586792
    2. 's' → logprob: -1.6422041654586792
    3. '=' → logprob: -1.8922041654586792
    4. '_' → logprob: -2.0172042846679688
    5. ')' → logprob: -2.1422042846679688
    6. ' =' → logprob: -2.6422042846679688
    7. 'n' → logprob: -3.2672042846679688
    8. ',' → logprob: -4.267204284667969
    9. '(' → logprob: -5.017204284667969
    10. ' ' → logprob: -5.142204284667969

Token 121: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29652777314186096
    2. 'n' → logprob: -1.4215277433395386
    3. ')' → logprob: -4.671527862548828
    4. ' ' → logprob: -6.671527862548828
    5. ' ce' → logprob: -7.296527862548828
    6. ' ça' → logprob: -7.296527862548828
    7. '<|end|>' → logprob: -7.796527862548828
    8. ' vous' → logprob: -8.296527862548828
    9. ' la' → logprob: -8.296527862548828
    10. 'len' → logprob: -8.421527862548828

Token 122: ' formule' (ID: 84316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9327611327171326
    2. 'n' → logprob: -1.6827611923217773
    3. 's' → logprob: -2.0577611923217773
    4. ' ' → logprob: -2.0577611923217773
    5. '#' → logprob: -3.3077611923217773
    6. 'm' → logprob: -3.5577611923217773
    7. ' n' → logprob: -4.682761192321777
    8. ' s' → logprob: -4.807761192321777
    9. 'user' → logprob: -5.182761192321777
    10. 't' → logprob: -5.432761192321777

Token 123: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3635766506195068
    2. ')' → logprob: -1.7385766506195068
    3. ' s' → logprob: -1.8635766506195068
    4. ':' → logprob: -2.113576650619507
    5. ' n' → logprob: -2.363576650619507
    6. ' )' → logprob: -3.113576650619507
    7. ' =' → logprob: -3.863576650619507
    8. 'n' → logprob: -3.988576650619507
    9. '=' → logprob: -4.738576889038086
    10. ' de' → logprob: -4.863576889038086

Token 124: ' ok' (ID: 4763)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.21507373452186584
    2. ' correcte' → logprob: -2.215073823928833
    3. 'bonne' → logprob: -3.090073823928833
    4. ' correct' → logprob: -4.590073585510254
    5. ' bonne' → logprob: -4.840073585510254
    6. 'valid' → logprob: -5.215073585510254
    7. 'just' → logprob: -5.715073585510254
    8. 'exact' → logprob: -6.215073585510254
    9. 'bon' → logprob: -6.465073585510254
    10. '<|end|>' → logprob: -6.590073585510254

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04499015212059021
    2. ':' → logprob: -3.794990062713623
    3. 's' → logprob: -4.919990062713623
    4. ',' → logprob: -5.294990062713623
    5. ' )' → logprob: -6.294990062713623
    6. 'n' → logprob: -6.419990062713623
    7. '_' → logprob: -6.544990062713623
    8. ' ' → logprob: -7.169990062713623
    9. '=' → logprob: -7.544990062713623
    10. '):' → logprob: -7.919990062713623

Token 126: 'sb' (ID: 25345)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05802711099386215
    2. 'mid' → logprob: -4.433027267456055
    3. 'p' → logprob: -4.558027267456055
    4. 'h' → logprob: -4.558027267456055
    5. 'half' → logprob: -5.433027267456055
    6. 'i' → logprob: -5.558027267456055
    7. 'mil' → logprob: -5.808027267456055
    8. 's' → logprob: -5.933027267456055
    9. 'g' → logprob: -6.433027267456055
    10. 'mi' → logprob: -6.808027267456055

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5284560322761536
    2. ' =' → logprob: -0.9034560322761536
    3. 'efore' → logprob: -6.153456211090088
    4. '_' → logprob: -6.403456211090088
    5. '=s' → logprob: -8.15345573425293
    6. 'e' → logprob: -8.40345573425293
    7. '[:' → logprob: -8.52845573425293
    8. 'egin' → logprob: -8.90345573425293
    9. 's' → logprob: -9.02845573425293
    10. '1' → logprob: -9.77845573425293

Token 128: ' []
' (ID: 8911)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2811688184738159
    2. 's' → logprob: -1.406168818473816
    3. 'n' → logprob: -11.656168937683105
    4. ' n' → logprob: -12.906168937683105
    5. '[' → logprob: -13.531168937683105
    6. ' ' → logprob: -13.781168937683105
    7. '	s' → logprob: -14.156168937683105
    8. '   ' → logprob: -14.531168937683105
    9. ' [' → logprob: -14.656168937683105
    10. '(s' → logprob: -14.656168937683105

Token 129: 'sb' (ID: 25345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0786714106798172
    2. ' for' → logprob: -2.703671455383301
    3. '(' → logprob: -5.578671455383301
    4. 's' → logprob: -6.328671455383301
    5. 'i' → logprob: -6.953671455383301
    6. 'n' → logprob: -7.078671455383301
    7. 'range' → logprob: -7.453671455383301
    8. ' ' → logprob: -8.7036714553833
    9. ' (' → logprob: -9.3286714553833
    10. '=' → logprob: -9.7036714553833

Token 130: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38570934534072876
    2. '=' → logprob: -1.635709285736084
    3. '.append' → logprob: -2.885709285736084
    4. '.extend' → logprob: -2.885709285736084
    5. '+' → logprob: -5.010709285736084
    6. '+=' → logprob: -5.885709285736084
    7. ' =' → logprob: -6.635709285736084
    8. '.=' → logprob: -6.760709285736084
    9. ' +=' → logprob: -7.385709285736084
    10. 's' → logprob: -7.510709285736084

Token 131: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3132845163345337
    2. 's' → logprob: -1.3132845163345337
    3. 'list' → logprob: -12.563284873962402
    4. ' list' → logprob: -12.688284873962402
    5. '[' → logprob: -13.063284873962402
    6. '[s' → logprob: -13.063284873962402
    7. ' ' → logprob: -13.188284873962402
    8. 'n' → logprob: -13.188284873962402
    9. '(s' → logprob: -13.563284873962402
    10. ' [' → logprob: -13.563284873962402

Token 132: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.004189398139715195
    2. '[:]' → logprob: -5.879189491271973
    3. '[' → logprob: -6.754189491271973
    4. '[n' → logprob: -8.879189491271973
    5. '[:-' → logprob: -9.629189491271973
    6. ' [:' → logprob: -12.504189491271973
    7. '[
' → logprob: -12.629189491271973
    8. ':' → logprob: -13.379189491271973
    9. '[s' → logprob: -13.629189491271973
    10. '[::-' → logprob: -13.879189491271973

Token 133: 'int' (ID: 491)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004950054455548525
    2. '(n' → logprob: -5.379950046539307
    3. ' n' → logprob: -8.629950523376465
    4. '(' → logprob: -9.129950523376465
    5. ' (' → logprob: -10.754950523376465
    6. '((' → logprob: -12.004950523376465
    7. 'len' → logprob: -12.129950523376465
    8. 'int' → logprob: -12.129950523376465
    9. '
' → logprob: -13.629950523376465
    10. '   ' → logprob: -14.504950523376465

Token 134: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007323168683797121
    2. '((' → logprob: -8.000732421875
    3. '(' → logprob: -8.125732421875
    4. '(len' → logprob: -9.250732421875
    5. 'n' → logprob: -13.250732421875
    6. ' (' → logprob: -13.375732421875
    7. '(
' → logprob: -14.250732421875
    8. ']' → logprob: -15.625732421875
    9. ' n' → logprob: -15.750732421875
    10. ')' → logprob: -16.000732421875

Token 135: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.050116922706365585
    2. ' n' → logprob: -3.050117015838623
    3. '(n' → logprob: -6.550117015838623
    4. 'len' → logprob: -9.800116539001465
    5. ' (' → logprob: -10.675116539001465
    6. ')n' → logprob: -11.675116539001465
    7. ' len' → logprob: -12.425116539001465
    8. ' ' → logprob: -12.925116539001465
    9. '(len' → logprob: -13.425116539001465
    10. '	n' → logprob: -13.550116539001465

Token 136: '-' (ID: 12)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.023994233459234238
    2. ' /' → logprob: -3.773994207382202
    3. ')' → logprob: -8.148994445800781
    4. ')/' → logprob: -8.648994445800781
    5. ' )' → logprob: -9.148994445800781
    6. '+' → logprob: -9.898994445800781
    7. ' ' → logprob: -10.148994445800781
    8. '0' → logprob: -10.773994445800781
    9. '//' → logprob: -11.148994445800781
    10. '2' → logprob: -11.648994445800781

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016182278341148049
    2. ' ' → logprob: -8.750162124633789
    3. '2' → logprob: -13.000162124633789
    4. '0' → logprob: -14.750162124633789
    5. '```' → logprob: -15.250162124633789
    6. ')' → logprob: -16.75016212463379
    7. '   ' → logprob: -16.81266212463379
    8. '１' → logprob: -17.00016212463379
    9. '+' → logprob: -17.18766212463379
    10. '-' → logprob: -17.25016212463379

Token 138: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4190092086791992
    2. ')/' → logprob: -1.1690092086791992
    3. ' )' → logprob: -3.544009208679199
    4. ')//' → logprob: -5.919009208679199
    5. ' ' → logprob: -11.4190092086792
    6. '/' → logprob: -11.5440092086792
    7. ' /' → logprob: -12.2940092086792
    8. ')
' → logprob: -12.7940092086792
    9. ' ' → logprob: -12.9190092086792
    10. ')
/' → logprob: -13.4190092086792

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008096250821836293
    2. ' ' → logprob: -7.125809669494629
    3. ')' → logprob: -13.125809669494629
    4. '   ' → logprob: -14.750809669494629
    5. '```' → logprob: -14.938309669494629
    6. '

' → logprob: -15.000809669494629
    7. '
' → logprob: -15.125809669494629
    8. '  
' → logprob: -15.813309669494629
    9. '1' → logprob: -15.875809669494629
    10. '  ' → logprob: -16.000808715820312

Token 140: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014158222824335098
    2. '+' → logprob: -4.764158248901367
    3. ')+' → logprob: -5.639158248901367
    4. ')' → logprob: -6.389158248901367
    5. ']' → logprob: -8.764158248901367
    6. ' )' → logprob: -10.014158248901367
    7. ')])' → logprob: -10.514158248901367
    8. ']+' → logprob: -10.639158248901367
    9. ' +' → logprob: -11.014158248901367
    10. '))' → logprob: -11.889158248901367

Token 141: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8778613805770874
    2. '<|end|>' → logprob: -0.8778613805770874
    3. '#' → logprob: -3.127861499786377
    4. '
' → logprob: -3.502861499786377
    5. ' ' → logprob: -3.752861499786377
    6. ']' → logprob: -4.252861499786377
    7. '  
' → logprob: -4.252861499786377
    8. '+' → logprob: -4.502861499786377
    9. '\n' → logprob: -4.627861499786377
    10. ' 
' → logprob: -5.252861499786377

Token 142: ' print' (ID: 2123)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0958163738250732
    2. ' ' → logprob: -1.2208163738250732
    3. 's' → logprob: -2.5958163738250732
    4. 'if' → logprob: -2.5958163738250732
    5. '  
' → logprob: -3.0958163738250732
    6. ' if' → logprob: -3.2208163738250732
    7. '<|end|>' → logprob: -3.2208163738250732
    8. 'n' → logprob: -3.4708163738250732
    9. ' for' → logprob: -3.9708163738250732
    10. 'for' → logprob: -4.095816612243652

Token 143: '(sb' (ID: 69933)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0467563271522522
    2. '(sb' → logprob: -3.2967562675476074
    3. '(s' → logprob: -4.796756267547607
    4. '()' → logprob: -8.921756744384766
    5. 's' → logprob: -9.421756744384766
    6. '('' → logprob: -9.671756744384766
    7. '("("' → logprob: -9.671756744384766
    8. '(len' → logprob: -10.671756744384766
    9. 'sb' → logprob: -10.671756744384766
    10. '(
' → logprob: -11.671756744384766

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029194725211709738
    2. '])' → logprob: -6.002919673919678
    3. ']' → logprob: -8.00291919708252
    4. ' )' → logprob: -10.25291919708252
    5. ')]' → logprob: -10.37791919708252
    6. ')])' → logprob: -10.62791919708252
    7. '))' → logprob: -11.25291919708252
    8. ']))' → logprob: -13.87791919708252
    9. ')
' → logprob: -14.12791919708252
    10. '[' → logprob: -14.25291919708252

Token 145: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6150829792022705
    2. ' 
' → logprob: -1.7400829792022705
    3. '<|end|>' → logprob: -1.7400829792022705
    4. '  
' → logprob: -3.1150829792022705
    5. '
' → logprob: -4.115082740783691
    6. ' if' → logprob: -4.490082740783691
    7. 's' → logprob: -4.615082740783691
    8. 'if' → logprob: -4.740082740783691
    9. 'n' → logprob: -5.115082740783691
    10. '#' → logprob: -6.115082740783691

Token 148: ' peut' (ID: 9216)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' toujours' (ID: 16867)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.00498366355896
    2. ' servir' → logprob: -1.00498366355896
    3. '<|end|>' → logprob: -1.75498366355896
    4. ' aider' → logprob: -3.37998366355896
    5. ' #' → logprob: -4.254983901977539
    6. 'serv' → logprob: -4.379983901977539
    7. ' être' → logprob: -5.004983901977539
    8. 'être' → logprob: -5.129983901977539
    9. '#' → logprob: -5.129983901977539
    10. ' continuer' → logprob: -5.504983901977539

Token 150: ' servir' (ID: 42557)
  Prédit: ' servir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.9065530300140381
    2. ' ' → logprob: -1.031553030014038
    3. ' aider' → logprob: -2.531553030014038
    4. '<|end|>' → logprob: -2.656553030014038
    5. ' fonctionner' → logprob: -3.781553030014038
    6. ' être' → logprob: -5.031553268432617
    7. ' continuer' → logprob: -5.156553268432617
    8. ' faire' → logprob: -5.281553268432617
    9. ' print' → logprob: -5.406553268432617
    10. 's' → logprob: -5.531553268432617

Token 151: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: 'sa' (ID: 4578)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0983589887619019
    2. '#' → logprob: -2.2233591079711914
    3. 'if' → logprob: -2.2233591079711914
    4. '<|end|>' → logprob: -2.3483591079711914
    5. 's' → logprob: -2.4733591079711914
    6. '  
' → logprob: -2.7233591079711914
    7. ' 
' → logprob: -2.8483591079711914
    8. ' ' → logprob: -3.4733591079711914
    9. 'n' → logprob: -3.5983591079711914
    10. ')' → logprob: -4.348359107971191

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42936456203460693
    2. '=' → logprob: -1.054364562034607
    3. ' ' → logprob: -8.804364204406738
    4. '_' → logprob: -9.304364204406738
    5. '=[]' → logprob: -9.554364204406738
    6. 's' → logprob: -9.679364204406738
    7. '[' → logprob: -10.304364204406738
    8. 'r' → logprob: -10.304364204406738
    9. ')' → logprob: -10.304364204406738
    10. 't' → logprob: -10.554364204406738

Token 154: ' []
' (ID: 8911)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20156224071979523
    2. 's' → logprob: -1.7015622854232788
    3. '[]' → logprob: -9.70156192779541
    4. ' []' → logprob: -10.57656192779541
    5. 'list' → logprob: -11.20156192779541
    6. ' ' → logprob: -11.20156192779541
    7. ' list' → logprob: -11.70156192779541
    8. '(s' → logprob: -12.20156192779541
    9. 'n' → logprob: -12.82656192779541
    10. '[s' → logprob: -12.88906192779541

Token 155: 'sa' (ID: 4578)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14916537702083588
    2. ' =' → logprob: -2.024165391921997
    3. 's' → logprob: -5.274165153503418
    4. '=s' → logprob: -6.649165153503418
    5. '=
' → logprob: -10.774165153503418
    6. ' s' → logprob: -11.399165153503418
    7. 'a' → logprob: -11.899165153503418
    8. 'sa' → logprob: -12.399165153503418
    9. ' =
' → logprob: -13.149165153503418
    10. ' sa' → logprob: -13.524165153503418

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759557485580444
    2. '=' → logprob: -0.8259557485580444
    3. '=s' → logprob: -11.075955390930176
    4. 's' → logprob: -15.075955390930176
    5. ' ' → logprob: -16.075956344604492
    6. '<|end|>' → logprob: -16.700956344604492
    7. ' +=' → logprob: -16.950956344604492
    8. ')' → logprob: -17.075956344604492
    9. ' =
' → logprob: -17.325956344604492
    10. '[' → logprob: -17.325956344604492

Token 157: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1427697241306305
    2. 's' → logprob: -2.0177698135375977
    3. 'list' → logprob: -10.892769813537598
    4. ' list' → logprob: -11.017769813537598
    5. ' ' → logprob: -11.142769813537598
    6. '(s' → logprob: -11.705269813537598
    7. ' [' → logprob: -12.142769813537598
    8. '[]' → logprob: -12.205269813537598
    9. ' []' → logprob: -12.642769813537598
    10. '[s' → logprob: -12.642769813537598

Token 158: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.1153520941734314
    2. '[:' → logprob: -2.240352153778076
    3. '[:]' → logprob: -6.490352153778076
    4. '[(' → logprob: -7.365352153778076
    5. '[-' → logprob: -8.990351676940918
    6. '[:-' → logprob: -9.490351676940918
    7. '[' → logprob: -9.490351676940918
    8. '[n' → logprob: -10.115351676940918
    9. '[len' → logprob: -10.240351676940918
    10. '[::-' → logprob: -11.115351676940918

Token 159: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08129613101482391
    2. '(n' → logprob: -2.58129620552063
    3. '(((' → logprob: -6.706295967102051
    4. '(' → logprob: -6.831295967102051
    5. 'n' → logprob: -10.33129596710205
    6. ' ((' → logprob: -10.45629596710205
    7. ' (' → logprob: -11.58129596710205
    8. '((((' → logprob: -11.58129596710205
    9. '(len' → logprob: -11.83129596710205
    10. '(
' → logprob: -12.58129596710205

Token 160: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07134458422660828
    2. 'n' → logprob: -2.6963446140289307
    3. ' (' → logprob: -6.946344375610352
    4. '((' → logprob: -8.571344375610352
    5. '(' → logprob: -8.946344375610352
    6. ' n' → logprob: -9.446344375610352
    7. '   ' → logprob: -12.071344375610352
    8. '1' → logprob: -12.196344375610352
    9. ' ' → logprob: -12.321344375610352
    10. '
' → logprob: -12.321344375610352

Token 161: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24936111271381378
    2. '-' → logprob: -1.7493611574172974
    3. '//' → logprob: -3.874361038208008
    4. '/' → logprob: -4.999361038208008
    5. 'n' → logprob: -5.249361038208008
    6. ' +' → logprob: -5.624361038208008
    7. ')' → logprob: -6.499361038208008
    8. '   ' → logprob: -6.624361038208008
    9. ')//' → logprob: -6.624361038208008
    10. '1' → logprob: -6.874361038208008

Token 162: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010592726175673306
    2. ' ' → logprob: -9.375105857849121
    3. '-' → logprob: -11.125105857849121
    4. '2' → logprob: -13.375105857849121
    5. '   ' → logprob: -13.500105857849121
    6. '0' → logprob: -13.750105857849121
    7. '3' → logprob: -14.000105857849121
    8. '+' → logprob: -15.250105857849121
    9. '```' → logprob: -15.250105857849121
    10. 'n' → logprob: -15.750105857849121

Token 163: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0313548743724823
    2. '//' → logprob: -3.6563549041748047
    3. '-' → logprob: -5.656354904174805
    4. ')' → logprob: -6.656354904174805
    5. '1' → logprob: -9.406354904174805
    6. '2' → logprob: -9.781354904174805
    7. ' -' → logprob: -10.531354904174805
    8. '   ' → logprob: -11.406354904174805
    9. ')/' → logprob: -11.531354904174805
    10. ' )' → logprob: -11.531354904174805

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.392824874026701e-05
    2. ' ' → logprob: -10.37503433227539
    3. '```' → logprob: -14.62503433227539
    4. '   ' → logprob: -14.75003433227539
    5. '
' → logprob: -14.75003433227539
    6. '1' → logprob: -15.37503433227539
    7. ')' → logprob: -15.50003433227539
    8. '  ' → logprob: -15.87503433227539
    9. '-' → logprob: -16.06253433227539
    10. '

' → logprob: -16.25003433227539

Token 165: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16295316815376282
    2. ')]' → logprob: -1.9129531383514404
    3. ')' → logprob: -6.2879533767700195
    4. ']:' → logprob: -8.03795337677002
    5. ':' → logprob: -8.16295337677002
    6. ']' → logprob: -9.78795337677002
    7. ' ):' → logprob: -10.03795337677002
    8. ' )' → logprob: -10.66295337677002
    9. '():' → logprob: -10.66295337677002
    10. '1' → logprob: -11.28795337677002

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024861192796379328
    2. ' ' → logprob: -6.002486228942871
    3. '0' → logprob: -12.127486228942871
    4. '2' → logprob: -12.502486228942871
    5. ')' → logprob: -13.627486228942871
    6. '  ' → logprob: -16.689985275268555
    7. ' )' → logprob: -17.377485275268555
    8. '   ' → logprob: -17.564985275268555
    9. '3' → logprob: -17.814985275268555
    10. '(' → logprob: -17.877485275268555

Token 167: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2845698297023773
    2. ')]' → logprob: -1.4095698595046997
    3. ')' → logprob: -6.65956974029541
    4. ']:' → logprob: -6.65956974029541
    5. ':' → logprob: -8.15956974029541
    6. '):-' → logprob: -8.40956974029541
    7. ']' → logprob: -8.53456974029541
    8. ' ):' → logprob: -9.65956974029541
    9. ' )' → logprob: -11.03456974029541
    10. ':]' → logprob: -11.15956974029541

Token 168: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6275218725204468
    2. 'n' → logprob: -0.8775218725204468
    3. ' n' → logprob: -3.3775219917297363
    4. ' ]' → logprob: -4.127521991729736
    5. ']

' → logprob: -12.502521514892578
    6. ']
' → logprob: -13.127521514892578
    7. '-n' → logprob: -13.252521514892578
    8. 'None' → logprob: -13.502521514892578
    9. ')' → logprob: -13.752521514892578
    10. '_n' → logprob: -13.752521514892578

Token 169: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32835355401039124
    2. 'sa' → logprob: -2.4533536434173584
    3. ' sa' → logprob: -2.8283536434173584
    4. 'if' → logprob: -3.3283536434173584
    5. ' if' → logprob: -3.9533536434173584
    6. '#' → logprob: -3.9533536434173584
    7. ' ' → logprob: -4.203353404998779
    8. ' print' → logprob: -4.453353404998779
    9. '<|end|>' → logprob: -4.453353404998779
    10. ' #' → logprob: -5.078353404998779

Token 171: '(sa' (ID: 183535)
  Prédit: '(sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sa' → logprob: -0.00319993169978261
    2. '(sb' → logprob: -5.753200054168701
    3. '(s' → logprob: -11.128199577331543
    4. '(' → logprob: -12.253199577331543
    5. 'sa' → logprob: -14.378199577331543
    6. '(si' → logprob: -14.628199577331543
    7. '(sr' → logprob: -14.878199577331543
    8. ' (' → logprob: -15.003199577331543
    9. '(sd' → logprob: -15.253199577331543
    10. '(ss' → logprob: -15.378199577331543

Token 172: ')' (ID: 8)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.30788716673851013
    2. ')' → logprob: -1.5578871965408325
    3. ']' → logprob: -2.932887077331543
    4. ')]' → logprob: -7.432887077331543
    5. ')])' → logprob: -8.557887077331543
    6. ' )' → logprob: -8.807887077331543
    7. ' ])' → logprob: -9.057887077331543
    8. '])]' → logprob: -10.057887077331543
    9. ']))' → logprob: -10.432887077331543
    10. ' ]' → logprob: -11.182887077331543

Token 173: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5170354247093201
    2. ')' → logprob: -1.8920354843139648
    3. '<|end|>' → logprob: -1.8920354843139648
    4. ' if' → logprob: -3.017035484313965
    5. ' ' → logprob: -4.392035484313965
    6. 's' → logprob: -4.767035484313965
    7. '  
' → logprob: -5.142035484313965
    8. '
' → logprob: -5.267035484313965
    9. ' 
' → logprob: -5.767035484313965
    10. '[' → logprob: -5.767035484313965

Token 175: ' pareil' (ID: 155569)
  Prédit: ' sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.983015239238739
    2. ' ' → logprob: -1.6080152988433838
    3. 'sa' → logprob: -2.608015298843384
    4. ' True' → logprob: -2.608015298843384
    5. '0' → logprob: -2.733015298843384
    6. 'True' → logprob: -3.108015298843384
    7. 'None' → logprob: -3.733015298843384
    8. '(sa' → logprob: -3.733015298843384
    9. 'False' → logprob: -3.858015298843384
    10. 'len' → logprob: -3.983015298843384

Token 176: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' au' (ID: 2791)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5436963438987732
    2. '<|end|>' → logprob: -1.043696403503418
    3. ' 
' → logprob: -3.543696403503418
    4. '
' → logprob: -4.418696403503418
    5. ' is' → logprob: -4.543696403503418
    6. '  
' → logprob: -5.793696403503418
    7. ')' → logprob: -6.043696403503418
    8. ' if' → logprob: -6.043696403503418
    9. '<|end|>' → logprob: -6.168696403503418
    10. ' ' → logprob: -7.418696403503418

Token 178: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.03212779760360718
    2. 'mil' → logprob: -4.032127857208252
    3. 'moins' → logprob: -5.032127857208252
    4. ' cas' → logprob: -6.532127857208252
    5. 'pas' → logprob: -6.532127857208252
    6. 'pass' → logprob: -6.532127857208252
    7. 'tour' → logprob: -7.657127857208252
    8. 'mo' → logprob: -8.032127380371094
    9. 'm' → logprob: -8.032127380371094
    10. 'print' → logprob: -8.282127380371094

Token 179: ' où' (ID: 15113)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0323970802128315
    2. ' if' → logprob: -4.032397270202637
    3. ' 
' → logprob: -5.407397270202637
    4. ' ' → logprob: -6.032397270202637
    5. 'print' → logprob: -6.532397270202637
    6. 's' → logprob: -6.907397270202637
    7. 'for' → logprob: -6.907397270202637
    8. '  
' → logprob: -7.032397270202637
    9. 'i' → logprob: -8.157397270202637
    10. '#' → logprob: -8.157397270202637

Token 182: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38999059796333313
    2. 'if' → logprob: -1.2649905681610107
    3. ' if' → logprob: -3.5149905681610107
    4. ' print' → logprob: -5.13999080657959
    5. 'for' → logprob: -5.63999080657959
    6. ' for' → logprob: -7.76499080657959
    7. 'pr' → logprob: -8.01499080657959
    8. 'while' → logprob: -8.76499080657959
    9. 'result' → logprob: -9.13999080657959
    10. 's' → logprob: -9.26499080657959

Token 183: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13500097393989563
    2. ' if' → logprob: -2.5100009441375732
    3. 'print' → logprob: -3.7600009441375732
    4. '#' → logprob: -5.010001182556152
    5. 'result' → logprob: -5.010001182556152
    6. ' print' → logprob: -6.510001182556152
    7. ' result' → logprob: -6.760001182556152
    8. ' #' → logprob: -6.885001182556152
    9. 's' → logprob: -7.135001182556152
    10. 'for' → logprob: -7.135001182556152

Token 184: ' finale' (ID: 37759)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6361839771270752
    2. ' if' → logprob: -0.7611839771270752
    3. ':' → logprob: -5.761183738708496
    4. ' for' → logprob: -8.636183738708496
    5. 'for' → logprob: -9.636183738708496
    6. ' =' → logprob: -9.761183738708496
    7. ' not' → logprob: -10.511183738708496
    8. ' :' → logprob: -10.761183738708496
    9. ':
' → logprob: -11.011183738708496
    10. 's' → logprob: -11.011183738708496

Token 185: ' c' (ID: 274)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.481334388256073
    2. 'if' → logprob: -1.4813344478607178
    3. ' if' → logprob: -2.8563344478607178
    4. '<|end|>' → logprob: -3.3563344478607178
    5. ' 
' → logprob: -3.4813344478607178
    6. ':' → logprob: -3.9813344478607178
    7. ':
' → logprob: -4.856334209442139
    8. '  
' → logprob: -6.356334209442139
    9. '

' → logprob: -7.231334209442139
    10. '\n' → logprob: -7.356334209442139

Token 186: '’est' (ID: 6838)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5579977631568909
    2. 'if' → logprob: -1.682997703552246
    3. 'ont' → logprob: -2.182997703552246
    4. 'est' → logprob: -3.182997703552246
    5. '#' → logprob: -4.182997703552246
    6. 'om' → logprob: -4.557997703552246
    7. ' =' → logprob: -4.682997703552246
    8. '=' → logprob: -4.807997703552246
    9. 'o' → logprob: -5.057997703552246
    10. 'omp' → logprob: -5.057997703552246

Token 187: ' cumul' (ID: 163119)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5415088534355164
    2. ' is' → logprob: -1.4165089130401611
    3. 'if' → logprob: -2.291508913040161
    4. ' not' → logprob: -3.166508913040161
    5. ' ' → logprob: -5.416508674621582
    6. ' print' → logprob: -5.416508674621582
    7. 'is' → logprob: -5.541508674621582
    8. ' "' → logprob: -5.791508674621582
    9. 'not' → logprob: -6.041508674621582
    10. ' (' → logprob: -6.041508674621582

Token 188: 'atif' (ID: 23984)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.41874438524246216
    2. 'if' → logprob: -1.7937443256378174
    3. ' if' → logprob: -2.9187443256378174
    4. ':' → logprob: -3.4187443256378174
    5. 'ion' → logprob: -3.4187443256378174
    6. '_' → logprob: -3.7937443256378174
    7. ' ' → logprob: -4.7937445640563965
    8. ' =' → logprob: -5.4187445640563965
    9. '=' → logprob: -5.6687445640563965
    10. '   ' → logprob: -5.7937445640563965

Token 189: ' ' (ID: 5310)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4258464574813843
    2. ' if' → logprob: -1.1758464574813843
    3. '<|end|>' → logprob: -3.925846576690674
    4. ':' → logprob: -4.800846576690674
    5. ' ' → logprob: -5.175846576690674
    6. ' 
' → logprob: -5.925846576690674
    7. '
' → logprob: -7.175846576690674
    8. ' :' → logprob: -8.925846099853516
    9. '  
' → logprob: -9.050846099853516
    10. '<|end|>' → logprob: -9.050846099853516

Token 190: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6323108673095703
    2. ' if' → logprob: -1.2573108673095703
    3. ':' → logprob: -2.5073108673095703
    4. ' ' → logprob: -3.3823108673095703
    5. 'i' → logprob: -3.3823108673095703
    6. ' 
' → logprob: -4.13231086730957
    7. '<|end|>' → logprob: -5.25731086730957
    8. '
' → logprob: -5.50731086730957
    9. ' i' → logprob: -5.50731086730957
    10. ' :' → logprob: -6.38231086730957

Token 191: ' il' (ID: 1793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47417667508125305
    2. ' if' → logprob: -0.9741766452789307
    3. '<|end|>' → logprob: -9.474176406860352
    4. ' 
' → logprob: -11.099176406860352
    5. ' ' → logprob: -13.099176406860352
    6. 'print' → logprob: -13.599176406860352
    7. '
' → logprob: -14.099176406860352
    8. '```' → logprob: -14.224176406860352
    9. '1' → logprob: -14.349176406860352
    10. '0' → logprob: -14.849176406860352

Token 192: ' faut' (ID: 17821)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11802490800619125
    2. 's' → logprob: -3.2430248260498047
    3. '=' → logprob: -3.9930248260498047
    4. 'print' → logprob: -4.368024826049805
    5. ' faut' → logprob: -4.368024826049805
    6. ' if' → logprob: -4.868024826049805
    7. 'f' → logprob: -5.118024826049805
    8. 'is' → logprob: -5.493024826049805
    9. ' =' → logprob: -5.493024826049805
    10. ' s' → logprob: -6.368024826049805

Token 193: ' que' (ID: 661)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8293030261993408
    2. 'is' → logprob: -1.0793030261993408
    3. 'not' → logprob: -2.204303026199341
    4. ' not' → logprob: -2.329303026199341
    5. 'print' → logprob: -5.204302787780762
    6. ' ' → logprob: -5.829302787780762
    7. 'if' → logprob: -6.454302787780762
    8. ' que' → logprob: -6.579302787780762
    9. ' print' → logprob: -6.829302787780762
    10. ' if' → logprob: -7.079302787780762

Token 194: ' T' (ID: 353)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.40502089262008667
    2. ' is' → logprob: -1.1550209522247314
    3. 'not' → logprob: -4.655020713806152
    4. ' not' → logprob: -4.905020713806152
    5. '(is' → logprob: -7.780020713806152
    6. ' (' → logprob: -8.030020713806152
    7. 'len' → logprob: -9.530020713806152
    8. '(' → logprob: -9.655020713806152
    9. '(not' → logprob: -10.530020713806152
    10. ' ' → logprob: -10.530020713806152

Token 195: 'OUT' (ID: 5858)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.058121029287576675
    2. ' is' → logprob: -3.6831209659576416
    3. 'he' → logprob: -4.683121204376221
    4. '(is' → logprob: -5.308121204376221
    5. 'not' → logprob: -5.308121204376221
    6. 'out' → logprob: -5.558121204376221
    7. 'est' → logprob: -6.183121204376221
    8. 's' → logprob: -6.683121204376221
    9. 'r' → logprob: -7.433121204376221
    10. 'a' → logprob: -7.558121204376221

Token 196: ' soit' (ID: 17293)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4566274881362915
    2. 'is' → logprob: -1.5816274881362915
    3. ' not' → logprob: -3.081627368927002
    4. 'not' → logprob: -3.206627368927002
    5. '<|end|>' → logprob: -3.956627368927002
    6. '(is' → logprob: -4.206627368927002
    7. ' (' → logprob: -4.706627368927002
    8. ' ' → logprob: -4.956627368927002
    9. 's' → logprob: -5.081627368927002
    10. '(' → logprob: -5.456627368927002

Token 197: ' palindrome' (ID: 160469)
  Prédit: ' palindrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' palindrome' → logprob: -0.9866276979446411
    2. '0' → logprob: -1.2366276979446411
    3. 'pal' → logprob: -2.1116275787353516
    4. '1' → logprob: -2.4866275787353516
    5. ' ' → logprob: -2.7366275787353516
    6. ' True' → logprob: -3.7366275787353516
    7. ' pal' → logprob: -4.361627578735352
    8. ' not' → logprob: -4.486627578735352
    9. 'not' → logprob: -5.611627578735352
    10. ' vrai' → logprob: -5.736627578735352

Token 198: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5658767819404602
    2. ' if' → logprob: -1.3158767223358154
    3. 'if' → logprob: -2.4408767223358154
    4. ' 
' → logprob: -4.1908769607543945
    5. ':' → logprob: -4.3158769607543945
    6. '
' → logprob: -4.4408769607543945
    7. '<|end|>' → logprob: -4.6908769607543945
    8. '  
' → logprob: -4.9408769607543945
    9. ' i' → logprob: -5.4408769607543945
    10. ' :' → logprob: -5.5658769607543945

Token 199: ' donc' (ID: 14206)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.33940139412879944
    2. ' ' → logprob: -2.3394014835357666
    3. ' and' → logprob: -2.5894014835357666
    4. ' if' → logprob: -2.7144014835357666
    5. 'not' → logprob: -3.9644014835357666
    6. ' or' → logprob: -4.3394012451171875
    7. '0' → logprob: -5.2144012451171875
    8. 'if' → logprob: -5.8394012451171875
    9. 'and' → logprob: -6.0894012451171875
    10. ' but' → logprob: -6.9644012451171875

Token 200: ' que' (ID: 661)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.7490538358688354
    2. 'print' → logprob: -0.8740538358688354
    3. ' is' → logprob: -3.124053955078125
    4. 'if' → logprob: -3.499053955078125
    5. 'not' → logprob: -4.124053955078125
    6. ' print' → logprob: -4.374053955078125
    7. ' not' → logprob: -5.624053955078125
    8. ' if' → logprob: -6.374053955078125
    9. '(is' → logprob: -7.874053955078125
    10. 'int' → logprob: -8.249053955078125

Token 201: ' la' (ID: 557)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.17797788977622986
    2. ' is' → logprob: -1.9279779195785522
    3. 'not' → logprob: -4.302978038787842
    4. ' not' → logprob: -5.552978038787842
    5. '(is' → logprob: -9.302977561950684
    6. 'len' → logprob: -10.927977561950684
    7. 'all' → logprob: -11.177977561950684
    8. ' (' → logprob: -11.177977561950684
    9. '0' → logprob: -11.302977561950684
    10. ' all' → logprob: -11.802977561950684

Token 202: ' somme' (ID: 64484)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.005064991302788258
    2. 'not' → logprob: -6.380064964294434
    3. 'print' → logprob: -6.380064964294434
    4. ' is' → logprob: -6.630064964294434
    5. 'if' → logprob: -8.880064964294434
    6. 'sum' → logprob: -10.130064964294434
    7. ' not' → logprob: -10.380064964294434
    8. 'result' → logprob: -10.880064964294434
    9. 's' → logprob: -11.005064964294434
    10. 'bool' → logprob: -11.005064964294434

Token 203: ' soit' (ID: 17293)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.03985787555575371
    2. 'is' → logprob: -3.289857864379883
    3. '(' → logprob: -6.539857864379883
    4. '(
' → logprob: -8.664857864379883
    5. '=is' → logprob: -9.414857864379883
    6. 'return' → logprob: -10.664857864379883
    7. '=' → logprob: -11.289857864379883
    8. ' is' → logprob: -11.414857864379883
    9. ' (' → logprob: -11.539857864379883
    10. '==' → logprob: -11.539857864379883

Token 204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002836232597474009
    2. ' ' → logprob: -8.625283241271973
    3. '==' → logprob: -9.250283241271973
    4. ' ==' → logprob: -12.250283241271973
    5. '=' → logprob: -13.000283241271973
    6. '```' → logprob: -14.875283241271973
    7. 's' → logprob: -15.750283241271973
    8. 'exact' → logprob: -16.12528419494629
    9. 'zero' → logprob: -16.37528419494629
    10. '>' → logprob: -16.87528419494629

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.221884101862088e-05
    2. '==' → logprob: -9.500092506408691
    3. ' ' → logprob: -11.250092506408691
    4. '=' → logprob: -13.250092506408691
    5. '```' → logprob: -13.875092506408691
    6. ' ==' → logprob: -14.375092506408691
    7. '1' → logprob: -15.375092506408691
    8. '==
' → logprob: -15.750092506408691
    9. 's' → logprob: -16.000091552734375
    10. '   ' → logprob: -16.375091552734375

Token 206: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07866349071264267
    2. 'print' → logprob: -2.7036635875701904
    3. ' if' → logprob: -5.578663349151611
    4. 'result' → logprob: -6.453663349151611
    5. 'sum' → logprob: -7.203663349151611
    6. 'return' → logprob: -7.328663349151611
    7. 'i' → logprob: -7.828663349151611
    8. 's' → logprob: -8.07866382598877
    9. 't' → logprob: -8.20366382598877
    10. 'res' → logprob: -8.82866382598877

Token 207: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5284448862075806
    2. 'print' → logprob: -0.9034448862075806
    3. ' if' → logprob: -6.028444766998291
    4. 'result' → logprob: -6.403444766998291
    5. 'return' → logprob: -7.403444766998291
    6. 'sum' → logprob: -8.90344524383545
    7. 'for' → logprob: -9.40344524383545
    8. ' print' → logprob: -9.65344524383545
    9. 'res' → logprob: -9.90344524383545
    10. 'total' → logprob: -10.02844524383545

Token 208: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.062498968094587326
    2. 'is' → logprob: -2.8124990463256836
    3. ' (' → logprob: -8.187499046325684
    4. '(is' → logprob: -9.437499046325684
    5. ' sum' → logprob: -9.937499046325684
    6. ' not' → logprob: -10.437499046325684
    7. '   ' → logprob: -10.562499046325684
    8. ' ' → logprob: -10.937499046325684
    9. 'sum' → logprob: -11.062499046325684
    10. '(' → logprob: -11.562499046325684

Token 209: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -2.4272752852994017e-05
    2. '_' → logprob: -10.87502384185791
    3. '_p' → logprob: -13.50002384185791
    4. '_pat' → logprob: -13.62502384185791
    5. '_is' → logprob: -14.50002384185791
    6. '_pa' → logprob: -15.00002384185791
    7. 'pal' → logprob: -15.12502384185791
    8. '_pol' → logprob: -15.12502384185791
    9. '_pas' → logprob: -15.62502384185791
    10. '_sa' → logprob: -15.62502384185791

Token 210: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.00013357517309486866
    2. 'ind' → logprob: -9.250133514404297
    3. 'ndrome' → logprob: -10.375133514404297
    4. 'o' → logprob: -12.375133514404297
    5. 'in' → logprob: -14.875133514404297
    6. 'indre' → logprob: -15.500133514404297
    7. '(' → logprob: -15.750133514404297
    8. 'inder' → logprob: -16.250133514404297
    9. '_' → logprob: -16.250133514404297
    10. 'id' → logprob: -16.375133514404297

Token 211: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0008020033710636199
    2. '(sb' → logprob: -8.250802040100098
    3. 's' → logprob: -8.375802040100098
    4. ' (' → logprob: -8.875802040100098
    5. '(sa' → logprob: -9.500802040100098
    6. '(' → logprob: -9.750802040100098
    7. '((' → logprob: -11.875802040100098
    8. '('' → logprob: -12.250802040100098
    9. '(ss' → logprob: -12.750802040100098
    10. '(t' → logprob: -13.000802040100098

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011687572114169598
    2. ')==' → logprob: -4.511687755584717
    3. ' )' → logprob: -7.511687755584717
    4. ')+' → logprob: -9.511687278747559
    5. '==' → logprob: -12.511687278747559
    6. '+' → logprob: -12.886687278747559
    7. '+)' → logprob: -13.136687278747559
    8. '())' → logprob: -13.136687278747559
    9. ')
' → logprob: -13.511687278747559
    10. '   ' → logprob: -13.761687278747559

Token 213: ' +' (ID: 659)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.025972215458750725
    2. ' ==' → logprob: -3.7759721279144287
    3. '+' → logprob: -6.150972366333008
    4. 'or' → logprob: -8.400972366333008
    5. ' +' → logprob: -8.525972366333008
    6. ' or' → logprob: -9.150972366333008
    7. '()==' → logprob: -10.525972366333008
    8. '=' → logprob: -11.150972366333008
    9. '0' → logprob: -11.650972366333008
    10. ' ' → logprob: -12.400972366333008

Token 214: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.2519460618495941
    2. ' is' → logprob: -1.5019460916519165
    3. ' ' → logprob: -12.001946449279785
    4. '   ' → logprob: -12.001946449279785
    5. '  ' → logprob: -13.126946449279785
    6. ' ' → logprob: -14.626946449279785
    7. '	is' → logprob: -14.751946449279785
    8. '    ' → logprob: -14.876946449279785
    9. '0' → logprob: -15.126946449279785
    10. '(is' → logprob: -15.251946449279785

Token 215: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.125000953674316
    3. '_pol' → logprob: -17.375
    4. '_is' → logprob: -17.625
    5. '_pat' → logprob: -18.0
    6. '_p' → logprob: -18.5
    7. '_pas' → logprob: -19.125
    8. 'pal' → logprob: -19.25
    9. '_par' → logprob: -19.5
    10. ' _' → logprob: -19.5

Token 216: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0004135112394578755
    2. 'ind' → logprob: -8.37541389465332
    3. 'ndrome' → logprob: -8.62541389465332
    4. 'indre' → logprob: -14.12541389465332
    5. 'o' → logprob: -14.37541389465332
    6. 'rome' → logprob: -14.50041389465332
    7. 'indle' → logprob: -14.62541389465332
    8. 'd' → logprob: -15.12541389465332
    9. 'e' → logprob: -16.12541389465332
    10. 'in' → logprob: -16.37541389465332

Token 217: '(sa' (ID: 183535)
  Prédit: '(sb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sb' → logprob: -0.0015093892579898238
    2. '(sa' → logprob: -6.501509189605713
    3. '(s' → logprob: -12.876509666442871
    4. ' (' → logprob: -13.126509666442871
    5. '(sr' → logprob: -14.251509666442871
    6. '(si' → logprob: -14.876509666442871
    7. '(tb' → logprob: -15.126509666442871
    8. '(ss' → logprob: -15.376509666442871
    9. '(nb' → logprob: -15.751509666442871
    10. '(sd' → logprob: -15.876509666442871

Token 218: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3981618881225586
    2. ' +' → logprob: -1.1481618881225586
    3. ')' → logprob: -4.523161888122559
    4. '()' → logprob: -8.648161888122559
    5. ')+' → logprob: -9.523161888122559
    6. '()+' → logprob: -10.523161888122559
    7. '==' → logprob: -10.648161888122559
    8. '+s' → logprob: -11.273161888122559
    9. '>' → logprob: -11.523161888122559
    10. '+)' → logprob: -11.648161888122559

Token 219: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34845325350761414
    2. '+' → logprob: -1.2234532833099365
    3. ' ' → logprob: -12.598453521728516
    4. '+
' → logprob: -13.848453521728516
    5. ' +
' → logprob: -14.223453521728516
    6. ' ' → logprob: -14.348453521728516
    7. '==' → logprob: -14.598453521728516
    8. '>' → logprob: -14.723453521728516
    9. '
' → logprob: -15.223453521728516
    10. '0' → logprob: -15.223453521728516

Token 220: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.02054375410079956
    2. ' is' → logprob: -3.8955438137054443
    3. ' ' → logprob: -14.270544052124023
    4. '   ' → logprob: -14.770544052124023
    5. '(is' → logprob: -15.145544052124023
    6. '  ' → logprob: -15.395544052124023
    7. '1' → logprob: -16.270544052124023
    8. '	is' → logprob: -16.395544052124023
    9. 'int' → logprob: -16.645544052124023
    10. '    ' → logprob: -16.645544052124023

Token 221: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -3.531315314830863e-06
    2. 'pal' → logprob: -12.875003814697266
    3. '_p' → logprob: -15.125003814697266
    4. 'Palindrome' → logprob: -15.500003814697266
    5. '_' → logprob: -15.875003814697266
    6. '_pat' → logprob: -16.750003814697266
    7. '_pol' → logprob: -17.125003814697266
    8. '_bal' → logprob: -17.250003814697266
    9. 'Pal' → logprob: -17.250003814697266
    10. 'a' → logprob: -17.500003814697266

Token 222: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0012140447506681085
    2. 'ndrome' → logprob: -7.001214027404785
    3. 'ind' → logprob: -8.251214027404785
    4. 'd' → logprob: -11.751214027404785
    5. 'indre' → logprob: -11.876214027404785
    6. 'o' → logprob: -12.001214027404785
    7. 'and' → logprob: -12.876214027404785
    8. 'ome' → logprob: -13.001214027404785
    9. 'rome' → logprob: -13.126214027404785
    10. 'e' → logprob: -13.251214027404785

Token 223: '(sb' (ID: 69933)
  Prédit: '(sb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sb' → logprob: 0.0
    2. 'sb' → logprob: -18.0
    3. '(tb' → logprob: -19.25
    4. '(' → logprob: -19.375
    5. ' (' → logprob: -19.375
    6. '(rb' → logprob: -19.5
    7. '(sub' → logprob: -19.75
    8. '_sb' → logprob: -19.75
    9. '(nb' → logprob: -19.875
    10. '	sb' → logprob: -20.125

Token 224: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3555232286453247
    2. ' ==' → logprob: -1.6055232286453247
    3. ')' → logprob: -2.480523109436035
    4. ')==' → logprob: -4.230523109436035
    5. ']==' → logprob: -9.480523109436035
    6. ' )' → logprob: -9.980523109436035
    7. '=' → logprob: -11.230523109436035
    8. ' ' → logprob: -11.855523109436035
    9. ']' → logprob: -12.105523109436035
    10. '==
' → logprob: -12.480523109436035

Token 225: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.043058112263679504
    2. ' ==' → logprob: -3.168058156967163
    3. '=' → logprob: -9.918058395385742
    4. '==
' → logprob: -12.043058395385742
    5. '<=' → logprob: -13.543058395385742
    6. ')==' → logprob: -14.543058395385742
    7. '()==' → logprob: -14.793058395385742
    8. ' ' → logprob: -14.793058395385742
    9. ']==' → logprob: -15.293058395385742
    10. ')' → logprob: -15.293058395385742

Token 226: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.62507438659668
    4. '  ' → logprob: -19.75007438659668
    5. '۰' → logprob: -20.37507438659668
    6. '０' → logprob: -21.37507438659668
    7. ' ' → logprob: -21.50007438659668
    8. '    ' → logprob: -21.50007438659668
    9. '00' → logprob: -21.75007438659668
    10. '000' → logprob: -21.87507438659668

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.875035285949707
    4. '  ' → logprob: -18.625036239624023
    5. '۰' → logprob: -20.000036239624023
    6. '00' → logprob: -20.125036239624023
    7. '=' → logprob: -20.375036239624023
    8. '000' → logprob: -20.375036239624023
    9. '０' → logprob: -20.625036239624023
    10. '    ' → logprob: -20.625036239624023

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.690834273584187e-05
    2. ':
' → logprob: -10.25003719329834
    3. ' :' → logprob: -13.87503719329834
    4. '):' → logprob: -15.00003719329834
    5. '   ' → logprob: -16.875036239624023
    6. '>:' → logprob: -16.875036239624023
    7. '():' → logprob: -17.250036239624023
    8. ':def' → logprob: -17.625036239624023
    9. ':**' → logprob: -17.750036239624023
    10. ':return' → logprob: -17.875036239624023

Token 229: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5857834815979004
    2. '   ' → logprob: -0.8357834815979004
    3. ' print' → logprob: -5.4607834815979
    4. ':
' → logprob: -5.7107834815979
    5. 'print' → logprob: -6.2107834815979
    6. ' :' → logprob: -9.085783004760742
    7. '	print' → logprob: -9.960783004760742
    8. '    
' → logprob: -10.835783004760742
    9. '):' → logprob: -12.085783004760742
    10. '
' → logprob: -12.085783004760742

Token 230: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.13631632924079895
    2. '   ' → logprob: -2.6363162994384766
    3. ' print' → logprob: -2.8863162994384766
    4. '	print' → logprob: -10.761316299438477
    5. ' ' → logprob: -12.386316299438477
    6. '  ' → logprob: -13.761316299438477
    7. '    ' → logprob: -15.386316299438477
    8. '
' → logprob: -15.636316299438477
    9. '       ' → logprob: -15.761316299438477
    10. '    
' → logprob: -16.011316299438477

Token 231: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.16589955985546112
    2. '(' → logprob: -1.9158995151519775
    3. '('' → logprob: -5.290899753570557
    4. '(True' → logprob: -8.040899276733398
    5. '(s' → logprob: -8.290899276733398
    6. '("("' → logprob: -11.040899276733398
    7. '("")' → logprob: -11.540899276733398
    8. '(
' → logprob: -12.290899276733398
    9. '(":' → logprob: -12.290899276733398
    10. '()' → logprob: -13.040899276733398

Token 232: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0664149820804596
    2. 'Oui' → logprob: -3.1914150714874268
    3. 'YES' → logprob: -4.066414833068848
    4. 'OK' → logprob: -5.816414833068848
    5. '"' → logprob: -6.941414833068848
    6. 'AK' → logprob: -7.566414833068848
    7. 'O' → logprob: -7.941414833068848
    8. 'oui' → logprob: -7.941414833068848
    9. 'True' → logprob: -8.941414833068848
    10. 'Palindrome' → logprob: -9.441414833068848

Token 233: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02325945533812046
    2. '")
' → logprob: -3.773259401321411
    3. '")
' → logprob: -12.273259162902832
    4. ')' → logprob: -12.648259162902832
    5. '!")' → logprob: -12.648259162902832
    6. ')")' → logprob: -13.398259162902832
    7. '"' → logprob: -15.023259162902832
    8. 'else' → logprob: -15.648259162902832
    9. ')
' → logprob: -15.898259162902832
    10. ' ")' → logprob: -16.02326011657715

Token 234: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00015872348740231246
    2. ' else' → logprob: -8.750158309936523
    3. 'elif' → logprob: -15.500158309936523
    4. ')' → logprob: -18.125158309936523
    5. '```' → logprob: -18.125158309936523
    6. '}else' → logprob: -18.375158309936523
    7. 'e' → logprob: -18.750158309936523
    8. '    
' → logprob: -18.875158309936523
    9. '
' → logprob: -18.875158309936523
    10. 'el' → logprob: -19.250158309936523

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026219089049845934
    2. ':
' → logprob: -6.002622127532959
    3. '   ' → logprob: -9.5026216506958
    4. ' :' → logprob: -9.6276216506958
    5. ' :
' → logprob: -12.3776216506958
    6. '():' → logprob: -14.1276216506958
    7. '(":' → logprob: -15.5026216506958
    8. '):' → logprob: -15.8776216506958
    9. '    ' → logprob: -16.502622604370117
    10. ':

' → logprob: -17.127622604370117

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030506962910294533
    2. 'print' → logprob: -4.0305070877075195
    3. ' print' → logprob: -4.4055070877075195
    4. '	print' → logprob: -10.53050708770752
    5. '    ' → logprob: -10.78050708770752
    6. '   ' → logprob: -11.28050708770752
    7. '   ' → logprob: -12.78050708770752
    8. '       ' → logprob: -13.15550708770752
    9. '(print' → logprob: -13.53050708770752
    10. ' ' → logprob: -13.78050708770752

Token 237: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0025344020687043667
    2. ' print' → logprob: -6.00253438949585
    3. '   ' → logprob: -9.752534866333008
    4. '	print' → logprob: -14.502534866333008
    5. 'Print' → logprob: -18.377534866333008
    6. '.print' → logprob: -18.502534866333008
    7. ' ' → logprob: -18.752534866333008
    8. '(print' → logprob: -19.127534866333008
    9. '"' → logprob: -19.377534866333008
    10. '       ' → logprob: -20.002534866333008

Token 238: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07891115546226501
    2. '(' → logprob: -2.578911066055298
    3. '("")' → logprob: -11.953910827636719
    4. '('' → logprob: -12.078910827636719
    5. '(
' → logprob: -12.703910827636719
    6. '("("' → logprob: -12.703910827636719
    7. ' ("' → logprob: -14.203910827636719
    8. '(False' → logprob: -14.453910827636719
    9. '("""' → logprob: -14.578910827636719
    10. '()' → logprob: -14.578910827636719

Token 239: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0009115827269852161
    2. '"No' → logprob: -7.000911712646484
    3. '"' → logprob: -16.500911712646484
    4. 'NO' → logprob: -17.125911712646484
    5. '“No' → logprob: -18.875911712646484
    6. ' No' → logprob: -19.500911712646484
    7. 'Non' → logprob: -19.750911712646484
    8. '"N' → logprob: -21.000911712646484
    9. '_No' → logprob: -21.125911712646484
    10. '>No' → logprob: -21.250911712646484

Token 240: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00036263695801608264
    2. ')' → logprob: -8.500362396240234
    3. ')")' → logprob: -8.750362396240234
    4. '")
' → logprob: -15.125362396240234
    5. '}")' → logprob: -15.625362396240234
    6. '"' → logprob: -15.875362396240234
    7. '')' → logprob: -17.625362396240234
    8. ')"' → logprob: -17.750362396240234
    9. '!")' → logprob: -17.750362396240234
    10. ' ")' → logprob: -18.375362396240234

Token 241: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' franchement' (ID: 182681)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' ça' (ID: 13590)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' devrait' (ID: 52773)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' marcher' (ID: 171848)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 244
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 119
Précision stricte (1ère position): 22.95%
Précision adaptée (1ère position): 23.77%
Précision (top 10): 48.77%
================================================================================
