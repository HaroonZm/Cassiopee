================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
_ = lambda: [int(x) for x in input().split()]
[A,B,C,D]=_[::][0:4]
try:
 for __ in [0]:
  res1 = -(-A//D)
  res2 = -(-C//B)
  print(['No','Yes'][res1>=res2])
except Exception as e:
 pass
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5160782933235168
    2. ' x' → logprob: -1.391078233718872
    3. ' :' → logprob: -3.516078233718872
    4. ' _' → logprob: -3.766078233718872
    5. '_' → logprob: -3.891078233718872
    6. ' a' → logprob: -4.016078472137451
    7. ' f' → logprob: -4.266078472137451
    8. '  ' → logprob: -4.516078472137451
    9. ' (' → logprob: -4.891078472137451
    10. ' space' → logprob: -5.266078472137451

Token 4: ' [' (ID: 723)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.35352790355682373
    2. ' ' → logprob: -1.9785279035568237
    3. ' True' → logprob: -2.4785280227661133
    4. 'None' → logprob: -3.1035280227661133
    5. '0' → logprob: -4.978528022766113
    6. '1' → logprob: -5.353528022766113
    7. ' (' → logprob: -5.478528022766113
    8. '(' → logprob: -5.978528022766113
    9. '...' → logprob: -6.228528022766113
    10. '<|end|>' → logprob: -6.228528022766113

Token 5: 'int' (ID: 491)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003670509671792388
    2. '0' → logprob: -6.003670692443848
    3. '[]' → logprob: -7.878670692443848
    4. '1' → logprob: -8.878670692443848
    5. '<|end|>' → logprob: -9.253670692443848
    6. ' ]' → logprob: -9.628670692443848
    7. '],' → logprob: -9.753670692443848
    8. ']int' → logprob: -9.878670692443848
    9. '   ' → logprob: -10.003670692443848
    10. '()]' → logprob: -10.128670692443848

Token 6: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02176961861550808
    2. ']' → logprob: -4.1467695236206055
    3. '(x' → logprob: -6.1467695236206055
    4. '('' → logprob: -6.5217695236206055
    5. '<|end|>' → logprob: -7.1467695236206055
    6. '(s' → logprob: -8.271769523620605
    7. '()]' → logprob: -8.271769523620605
    8. '(input' → logprob: -9.271769523620605
    9. ' ' → logprob: -9.396769523620605
    10. ' (' → logprob: -9.521769523620605

Token 7: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10283204168081284
    2. ')]' → logprob: -3.602832078933716
    3. 'for' → logprob: -3.602832078933716
    4. '(x' → logprob: -3.727832078933716
    5. ' for' → logprob: -4.602831840515137
    6. '(' → logprob: -4.852831840515137
    7. ')])' → logprob: -7.602831840515137
    8. ',' → logprob: -8.477831840515137
    9. ']' → logprob: -8.852831840515137
    10. '),' → logprob: -9.852831840515137

Token 8: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0473978519439697
    2. ')' → logprob: -1.1723978519439697
    3. ')]' → logprob: -1.7973978519439697
    4. 'for' → logprob: -2.5473978519439697
    5. '(' → logprob: -3.2973978519439697
    6. ' for' → logprob: -3.4223978519439697
    7. ']' → logprob: -4.047397613525391
    8. '_' → logprob: -5.547397613525391
    9. ',' → logprob: -6.922397613525391
    10. ')])' → logprob: -7.422397613525391

Token 9: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08985830098390579
    2. ' input' → logprob: -4.214858531951904
    3. 'x' → logprob: -4.339858531951904
    4. '_' → logprob: -4.464858531951904
    5. ' ' → logprob: -4.589858531951904
    6. '(x' → logprob: -4.589858531951904
    7. '(' → logprob: -4.589858531951904
    8. ' range' → logprob: -4.714858531951904
    9. 'range' → logprob: -6.339858531951904
    10. ' (' → logprob: -6.464858531951904

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08294155448675156
    2. '(' → logprob: -2.8329415321350098
    3. 'in' → logprob: -4.20794153213501
    4. '<|end|>' → logprob: -5.95794153213501
    5. '(x' → logprob: -6.70794153213501
    6. ' (' → logprob: -7.83294153213501
    7. '_' → logprob: -7.95794153213501
    8. ' ' → logprob: -8.082942008972168
    9. '(range' → logprob: -8.707942008972168
    10. '(in' → logprob: -9.082942008972168

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.633213996887207
    2. ' input' → logprob: -0.758213996887207
    3. '_' → logprob: -7.508213996887207
    4. '(input' → logprob: -10.633213996887207
    5. 'raw' → logprob: -11.758213996887207
    6. ' ' → logprob: -12.133213996887207
    7. ' raw' → logprob: -12.258213996887207
    8. 'range' → logprob: -12.508213996887207
    9. ' _' → logprob: -12.633213996887207
    10. ' range' → logprob: -12.883213996887207

Token 12: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.011233381927013397
    2. '()' → logprob: -4.761233329772949
    3. '(' → logprob: -6.636233329772949
    4. ']' → logprob: -7.636233329772949
    5. '().' → logprob: -8.01123332977295
    6. ']()' → logprob: -8.26123332977295
    7. '()][' → logprob: -8.88623332977295
    8. '())' → logprob: -10.38623332977295
    9. '()].' → logprob: -11.51123332977295
    10. '()],' → logprob: -11.76123332977295

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005832957685925066
    2. 'strip' → logprob: -7.500583171844482
    3. 'rstrip' → logprob: -10.50058364868164
    4. ' split' → logprob: -13.00058364868164
    5. 'spl' → logprob: -15.00058364868164
    6. 'read' → logprob: -16.12558364868164
    7. '(split' → logprob: -16.87558364868164
    8. 'replace' → logprob: -18.75058364868164
    9. 'startswith' → logprob: -19.75058364868164
    10. 's' → logprob: -19.75058364868164

Token 14: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.08264592289924622
    2. '(' → logprob: -2.582645893096924
    3. '()' → logprob: -5.707645893096924
    4. ']' → logprob: -8.332646369934082
    5. '('' → logprob: -9.582646369934082
    6. '())' → logprob: -10.332646369934082
    7. ']()' → logprob: -10.582646369934082
    8. '()],' → logprob: -11.582646369934082
    9. '(()' → logprob: -11.957646369934082
    10. '()][' → logprob: -12.082646369934082

Token 15: '[A' (ID: 58391)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5732532143592834
    2. 'a' → logprob: -1.1982531547546387
    3. '_' → logprob: -3.3232531547546387
    4. '(' → logprob: -3.5732531547546387
    5. '#' → logprob: -4.448253154754639
    6. '(n' → logprob: -4.448253154754639
    7. '\n' → logprob: -4.823253154754639
    8. 'for' → logprob: -5.573253154754639
    9. '[' → logprob: -5.573253154754639
    10. '\' → logprob: -5.698253154754639

Token 16: ',B' (ID: 19853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.465063214302063
    2. '[' → logprob: -1.590063214302063
    3. '_]' → logprob: -2.4650630950927734
    4. ']' → logprob: -3.0900630950927734
    5. 'A' → logprob: -4.340063095092773
    6. '(' → logprob: -4.715063095092773
    7. 'r' → logprob: -5.840063095092773
    8. '[]' → logprob: -6.465063095092773
    9. '[A' → logprob: -6.465063095092773
    10. ',' → logprob: -6.590063095092773

Token 17: ',C' (ID: 26924)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003815756645053625
    2. ' ]' → logprob: -8.500381469726562
    3. ']=' → logprob: -9.125381469726562
    4. ')]' → logprob: -10.250381469726562
    5. ',' → logprob: -11.000381469726562
    6. '])' → logprob: -11.875381469726562
    7. ')' → logprob: -13.125381469726562
    8. '],' → logprob: -13.375381469726562
    9. '`]' → logprob: -13.625381469726562
    10. '=' → logprob: -13.875381469726562

Token 18: ',D' (ID: 61507)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -9.221884101862088e-05
    2. ',' → logprob: -10.625092506408691
    3. ']=' → logprob: -10.625092506408691
    4. ')]' → logprob: -11.000092506408691
    5. ' ]' → logprob: -11.375092506408691
    6. ')' → logprob: -12.375092506408691
    7. '])' → logprob: -12.750092506408691
    8. '],' → logprob: -13.125092506408691
    9. '()]' → logprob: -13.250092506408691
    10. ']()' → logprob: -14.125092506408691

Token 19: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012176171876490116
    2. ',' → logprob: -7.251217842102051
    3. ']=' → logprob: -8.25121784210205
    4. ' ]' → logprob: -8.75121784210205
    5. '()]' → logprob: -10.37621784210205
    6. ')]' → logprob: -10.50121784210205
    7. '_]' → logprob: -12.12621784210205
    8. ']int' → logprob: -12.75121784210205
    9. ']()' → logprob: -12.87621784210205
    10. '],' → logprob: -13.00121784210205

Token 20: '_[' (ID: 27517)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3174668252468109
    2. '_[' → logprob: -1.4424668550491333
    3. '_(' → logprob: -3.5674667358398438
    4. '_.' → logprob: -5.067466735839844
    5. '_<' → logprob: -8.442466735839844
    6. ' _' → logprob: -8.567466735839844
    7. '_=' → logprob: -8.692466735839844
    8. ' _(' → logprob: -9.442466735839844
    9. '_lambda' → logprob: -9.442466735839844
    10. '[' → logprob: -9.692466735839844

Token 21: '::' (ID: 742)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.045417308807373
    2. ')' → logprob: -1.670417308807373
    3. '()]' → logprob: -1.670417308807373
    4. ']()' → logprob: -1.795417308807373
    5. ']' → logprob: -2.295417308807373
    6. '()' → logprob: -6.420417308807373
    7. '())' → logprob: -6.545417308807373
    8. '0' → logprob: -7.545417308807373
    9. ' )' → logprob: -8.045417785644531
    10. ']()
' → logprob: -8.295417785644531

Token 22: '][' (ID: 2696)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1036889553070068
    2. '2' → logprob: -1.1036889553070068
    3. '4' → logprob: -1.3536889553070068
    4. ']' → logprob: -2.728688955307007
    5. '1' → logprob: -4.978689193725586
    6. '3' → logprob: -5.353689193725586
    7. ')]' → logprob: -7.353689193725586
    8. '])' → logprob: -8.603689193725586
    9. ']]' → logprob: -8.728689193725586
    10. ')' → logprob: -8.978689193725586

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.317716121673584
    2. ']' → logprob: -1.692716121673584
    3. '()]' → logprob: -2.817716121673584
    4. '-' → logprob: -4.817716121673584
    5. '2' → logprob: -5.067716121673584
    6. '4' → logprob: -5.192716121673584
    7. ']()' → logprob: -5.442716121673584
    8. ':]' → logprob: -6.942716121673584
    9. ':' → logprob: -7.067716121673584
    10. '(' → logprob: -7.692716121673584

Token 24: ':' (ID: 25)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005695673171430826
    2. ':]' → logprob: -5.380695819854736
    3. ' ]' → logprob: -8.255695343017578
    4. ':' → logprob: -8.380695343017578
    5. '()]' → logprob: -8.880695343017578
    6. ',' → logprob: -9.130695343017578
    7. '],' → logprob: -9.630695343017578
    8. '1' → logprob: -10.255695343017578
    9. ' :]' → logprob: -10.380695343017578
    10. ']]' → logprob: -10.505695343017578

Token 25: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.005588871892541647
    2. '2' → logprob: -5.255589008331299
    3. '3' → logprob: -8.75558853149414
    4. ' ' → logprob: -9.25558853149414
    5. ']' → logprob: -9.88058853149414
    6. '-' → logprob: -11.13058853149414
    7. '1' → logprob: -11.25558853149414
    8. '```' → logprob: -12.56808853149414
    9. '5' → logprob: -12.63058853149414
    10. '   ' → logprob: -12.88058853149414

Token 26: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.588793960167095e-05
    2. ' ]' → logprob: -9.875076293945312
    3. '()]' → logprob: -11.625076293945312
    4. ':]' → logprob: -12.375076293945312
    5. ']
' → logprob: -12.750076293945312
    6. ')]' → logprob: -12.750076293945312
    7. ']]' → logprob: -14.500076293945312
    8. ']

' → logprob: -14.500076293945312
    9. '_]' → logprob: -14.500076293945312
    10. '])' → logprob: -14.750076293945312

Token 27: 'try' (ID: 1806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08459818363189697
    2. '(' → logprob: -3.9595980644226074
    3. '()
' → logprob: -3.9595980644226074
    4. '
' → logprob: -4.084598064422607
    5. '<|end|>' → logprob: -4.834598064422607
    6. ')' → logprob: -4.959598064422607
    7. '#' → logprob: -5.334598064422607
    8. '\n' → logprob: -6.334598064422607
    9. '(
' → logprob: -6.834598064422607
    10. '```' → logprob: -7.584598064422607

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022237090161070228
    2. ' :' → logprob: -8.875222206115723
    3. ':
' → logprob: -9.500222206115723
    4. ' except' → logprob: -12.875222206115723
    5. '{' → logprob: -13.750222206115723
    6. ':**' → logprob: -14.375222206115723
    7. '):' → logprob: -14.625222206115723
    8. '(' → logprob: -14.750222206115723
    9. 'except' → logprob: -14.750222206115723
    10. '   ' → logprob: -15.375222206115723

Token 29: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28709954023361206
    2. '   ' → logprob: -1.5370995998382568
    3. ':
' → logprob: -3.912099599838257
    4. ' :' → logprob: -4.537099361419678
    5. ' ' → logprob: -7.412099361419678
    6. ' except' → logprob: -7.787099361419678
    7. ' :
' → logprob: -8.037099838256836
    8. '    
' → logprob: -8.162099838256836
    9. '[' → logprob: -8.162099838256836
    10. '    ' → logprob: -8.287099838256836

Token 30: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7900159358978271
    2. ' _' → logprob: -1.1650159358978271
    3. '_' → logprob: -2.040015935897827
    4. ' i' → logprob: -2.915015935897827
    5. ' A' → logprob: -3.540015935897827
    6. ' range' → logprob: -4.540016174316406
    7. ' x' → logprob: -5.540016174316406
    8. ' B' → logprob: -6.165016174316406
    9. ' a' → logprob: -7.040016174316406
    10. ' I' → logprob: -7.290016174316406

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.676691472530365
    2. ' :' → logprob: -1.3016915321350098
    3. ' ' → logprob: -1.6766915321350098
    4. 'in' → logprob: -5.05169153213501
    5. '  ' → logprob: -5.05169153213501
    6. ' _' → logprob: -5.05169153213501
    7. '_' → logprob: -5.30169153213501
    8. ':' → logprob: -5.55169153213501
    9. '   ' → logprob: -6.42669153213501
    10. ' (' → logprob: -6.92669153213501

Token 32: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.18796145915985107
    2. 'range' → logprob: -1.812961459159851
    3. '_' → logprob: -5.187961578369141
    4. ' _' → logprob: -6.062961578369141
    5. '_[' → logprob: -9.31296157836914
    6. ' ' → logprob: -9.56296157836914
    7. '[' → logprob: -10.06296157836914
    8. '_range' → logprob: -10.81296157836914
    9. ' [' → logprob: -11.43796157836914
    10. ' xrange' → logprob: -11.43796157836914

Token 33: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5502076745033264
    2. '_' → logprob: -1.5502076148986816
    3. ' range' → logprob: -1.8002076148986816
    4. '0' → logprob: -3.6752076148986816
    5. '_[' → logprob: -4.425207614898682
    6. '[' → logprob: -6.050207614898682
    7. 'int' → logprob: -6.300207614898682
    8. '1' → logprob: -6.800207614898682
    9. '_range' → logprob: -6.925207614898682
    10. ' ' → logprob: -7.175207614898682

Token 34: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36058202385902405
    2. ':' → logprob: -1.8605819940567017
    3. ']:' → logprob: -2.610582113265991
    4. ']' → logprob: -2.985582113265991
    5. '..' → logprob: -4.235581874847412
    6. ' ]' → logprob: -5.860581874847412
    7. ' ' → logprob: -6.485581874847412
    8. '...' → logprob: -6.610581874847412
    9. ':]' → logprob: -7.110581874847412
    10. ']*' → logprob: -7.235581874847412

Token 35: ' ' (ID: 220)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.0314372777938843
    2. '   ' → logprob: -1.1564372777938843
    3. ' ' → logprob: -1.5314372777938843
    4. ' _' → logprob: -3.281437397003174
    5. ' if' → logprob: -3.406437397003174
    6. '_' → logprob: -3.656437397003174
    7. ' print' → logprob: -5.656437397003174
    8. '  ' → logprob: -6.281437397003174
    9. ' while' → logprob: -6.781437397003174
    10. ' pass' → logprob: -7.031437397003174

Token 36: ' res' (ID: 694)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.0336568355560303
    2. ' if' → logprob: -1.7836568355560303
    3. ' result' → logprob: -2.1586568355560303
    4. ' ' → logprob: -2.2836568355560303
    5. '   ' → logprob: -2.9086568355560303
    6. '_' → logprob: -3.0336568355560303
    7. '    ' → logprob: -3.5336568355560303
    8. ' E' → logprob: -3.6586568355560303
    9. ' A' → logprob: -3.9086568355560303
    10. ' print' → logprob: -4.408657073974609

Token 37: '1' (ID: 16)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.656559944152832
    2. ' =' → logprob: -1.281559944152832
    3. '=' → logprob: -1.656559944152832
    4. 'ults' → logprob: -5.031559944152832
    5. 'ultat' → logprob: -6.281559944152832
    6. 't' → logprob: -6.406559944152832
    7. 'ulta' → logprob: -7.031559944152832
    8. 'ul' → logprob: -7.281559944152832
    9. 'u' → logprob: -7.906559944152832
    10. ' ' → logprob: -8.031559944152832

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.695976972579956
    2. ' =' → logprob: -0.695976972579956
    3. ' ' → logprob: -6.445977210998535
    4. ',' → logprob: -7.445977210998535
    5. ' +=' → logprob: -8.070977210998535
    6. '+=' → logprob: -8.945977210998535
    7. '=int' → logprob: -10.070977210998535
    8. ' ,' → logprob: -10.445977210998535
    9. '_' → logprob: -11.070977210998535
    10. ' *=' → logprob: -11.070977210998535

Token 39: ' -' (ID: 533)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2711774408817291
    2. 'A' → logprob: -1.6461774110794067
    3. ' max' → logprob: -3.8961775302886963
    4. ' (' → logprob: -5.021177291870117
    5. ' min' → logprob: -5.396177291870117
    6. 'max' → logprob: -5.396177291870117
    7. '(A' → logprob: -5.896177291870117
    8. 'min' → logprob: -6.146177291870117
    9. ' abs' → logprob: -7.396177291870117
    10. ' ' → logprob: -7.396177291870117

Token 40: '(-' (ID: 8087)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3176785707473755
    2. 'A' → logprob: -1.6926785707473755
    3. '(' → logprob: -2.067678451538086
    4. 'B' → logprob: -2.192678451538086
    5. '(-' → logprob: -2.192678451538086
    6. '-' → logprob: -3.442678451538086
    7. '10' → logprob: -3.442678451538086
    8. '(-(' → logprob: -3.817678451538086
    9. 'float' → logprob: -4.067678451538086
    10. '((' → logprob: -4.067678451538086

Token 41: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.027694569900631905
    2. 'C' → logprob: -4.4026947021484375
    3. 'B' → logprob: -5.0276947021484375
    4. ' A' → logprob: -5.5276947021484375
    5. '(A' → logprob: -5.7776947021484375
    6. '(' → logprob: -7.5276947021484375
    7. 'D' → logprob: -8.152694702148438
    8. ' (' → logprob: -8.652694702148438
    9. '(B' → logprob: -9.027694702148438
    10. '(C' → logprob: -9.152694702148438

Token 42: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4513811469078064
    2. ' //' → logprob: -1.9513812065124512
    3. '*' → logprob: -2.076381206512451
    4. '*C' → logprob: -2.951381206512451
    5. ' *' → logprob: -4.201381206512451
    6. ' ' → logprob: -4.326381206512451
    7. 'C' → logprob: -5.701381206512451
    8. ' C' → logprob: -5.701381206512451
    9. '/D' → logprob: -5.826381206512451
    10. 'B' → logprob: -7.201381206512451

Token 43: 'D' (ID: 35)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.026678074151277542
    2. 'C' → logprob: -3.9016780853271484
    3. ' B' → logprob: -5.276678085327148
    4. 'D' → logprob: -7.151678085327148
    5. ' C' → logprob: -8.901678085327148
    6. '2' → logprob: -10.526678085327148
    7. '1' → logprob: -11.151678085327148
    8. '4' → logprob: -11.526678085327148
    9. ' ' → logprob: -11.901678085327148
    10. '  ' → logprob: -12.276678085327148

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006120019243098795
    2. ' )' → logprob: -7.500611782073975
    3. ')
' → logprob: -9.875612258911133
    4. ')*' → logprob: -13.750612258911133
    5. ' ' → logprob: -13.875612258911133
    6. ')#' → logprob: -13.875612258911133
    7. '))' → logprob: -14.375612258911133
    8. ' )
' → logprob: -14.375612258911133
    9. ')

' → logprob: -14.625612258911133
    10. '+' → logprob: -14.875612258911133

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0657092332839966
    2. '+' → logprob: -1.1907092332839966
    3. '
' → logprob: -2.190709114074707
    4. ' 
' → logprob: -2.315709114074707
    5. '  
' → logprob: -3.190709114074707
    6. '<|end|>' → logprob: -3.940709114074707
    7. '+
' → logprob: -4.065709114074707
    8. 'res' → logprob: -4.315709114074707
    9. ')' → logprob: -4.565709114074707
    10. ' res' → logprob: -4.690709114074707

Token 46: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8297579288482666
    2. '+' → logprob: -1.3297579288482666
    3. ' res' → logprob: -1.5797579288482666
    4. ' ' → logprob: -2.8297579288482666
    5. '
' → logprob: -5.2047576904296875
    6. '+
' → logprob: -5.2047576904296875
    7. ' 
' → logprob: -5.4547576904296875
    8. '*' → logprob: -5.7047576904296875
    9. '-' → logprob: -6.0797576904296875
    10. '  
' → logprob: -6.2047576904296875

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0035732227843254805
    2. '1' → logprob: -6.003573417663574
    3. ' =' → logprob: -7.378573417663574
    4. ' ' → logprob: -8.378573417663574
    5. '=' → logprob: -8.753573417663574
    6. '0' → logprob: -10.503573417663574
    7. '3' → logprob: -10.503573417663574
    8. '_' → logprob: -12.566073417663574
    9. '4' → logprob: -12.941073417663574
    10. '  ' → logprob: -13.191073417663574

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009803197346627712
    2. '=' → logprob: -4.634803295135498
    3. ' ' → logprob: -10.00980281829834
    4. ' ' → logprob: -13.88480281829834
    5. '_' → logprob: -16.009803771972656
    6. ' +=' → logprob: -16.447303771972656
    7. '  ' → logprob: -16.447303771972656
    8. ' =
' → logprob: -16.509803771972656
    9. '>' → logprob: -16.759803771972656
    10. ' -=' → logprob: -16.947303771972656

Token 49: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8157622218132019
    2. ' -' → logprob: -1.4407622814178467
    3. '-B' → logprob: -1.6907622814178467
    4. '-C' → logprob: -2.0657622814178467
    5. ' (' → logprob: -6.190762042999268
    6. '(C' → logprob: -6.690762042999268
    7. 'C' → logprob: -7.190762042999268
    8. '-(' → logprob: -7.190762042999268
    9. ' B' → logprob: -7.315762042999268
    10. '(B' → logprob: -7.315762042999268

Token 50: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.14740115404129028
    2. '(B' → logprob: -2.1474010944366455
    3. '(C' → logprob: -4.022401332855225
    4. '(' → logprob: -7.147401332855225
    5. 'B' → logprob: -7.647401332855225
    6. '(-(' → logprob: -7.897401332855225
    7. '-B' → logprob: -8.147400856018066
    8. '(A' → logprob: -9.522400856018066
    9. 'C' → logprob: -9.647400856018066
    10. '-' → logprob: -9.897400856018066

Token 51: 'C' (ID: 34)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11630655825138092
    2. 'C' → logprob: -2.2413065433502197
    3. ' B' → logprob: -5.866306781768799
    4. ' C' → logprob: -7.741306781768799
    5. 'A' → logprob: -9.24130630493164
    6. ' ' → logprob: -10.74130630493164
    7. 'D' → logprob: -11.05380630493164
    8. '-B' → logprob: -11.30380630493164
    9. '  ' → logprob: -11.61630630493164
    10. '   ' → logprob: -11.67880630493164

Token 52: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00038348292582668364
    2. ' //' → logprob: -7.875383377075195
    3. '//=' → logprob: -13.750383377075195
    4. '#' → logprob: -14.625383377075195
    5. '//#' → logprob: -14.625383377075195
    6. '//*' → logprob: -15.500383377075195
    7. '/' → logprob: -15.875383377075195
    8. '```' → logprob: -15.875383377075195
    9. '/B' → logprob: -16.000383377075195
    10. '1' → logprob: -16.500383377075195

Token 53: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0021971215028315783
    2. ' B' → logprob: -6.252197265625
    3. 'D' → logprob: -8.752197265625
    4. '  ' → logprob: -11.127197265625
    5. '   ' → logprob: -11.127197265625
    6. '-B' → logprob: -11.252197265625
    7. ' ' → logprob: -11.252197265625
    8. '_B' → logprob: -11.564697265625
    9. '	B' → logprob: -11.752197265625
    10. 'A' → logprob: -12.314697265625

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026884564431384206
    2. ')
' → logprob: -9.000268936157227
    3. ' )' → logprob: -9.000268936157227
    4. '))' → logprob: -12.000268936157227
    5. ' ' → logprob: -12.375268936157227
    6. '])' → logprob: -12.875268936157227
    7. ')
' → logprob: -13.250268936157227
    8. ')#' → logprob: -13.250268936157227
    9. ')

' → logprob: -13.625268936157227
    10. '）' → logprob: -14.375268936157227

Token 55: ' ' (ID: 220)
  Prédit: ' except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.07417335361242294
    2. 'except' → logprob: -2.6991734504699707
    3. ' ' → logprob: -5.699173450469971
    4. ' if' → logprob: -8.574172973632812
    5. ' print' → logprob: -8.824172973632812
    6. ' finally' → logprob: -9.449172973632812
    7. '  ' → logprob: -9.449172973632812
    8. '  
' → logprob: -9.449172973632812
    9. '\n' → logprob: -9.699172973632812
    10. '\' → logprob: -10.199172973632812

Token 56: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36832690238952637
    2. ' except' → logprob: -1.9933269023895264
    3. ' ' → logprob: -2.7433269023895264
    4. 'if' → logprob: -3.2433269023895264
    5. 'except' → logprob: -3.3683269023895264
    6. ' print' → logprob: -3.7433269023895264
    7. 'print' → logprob: -4.9933271408081055
    8. ' while' → logprob: -7.1183271408081055
    9. '  ' → logprob: -7.7433271408081055
    10. ' break' → logprob: -8.493327140808105

Token 57: '(['' (ID: 14113)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.7683401107788086
    2. '(res' → logprob: -0.8933401107788086
    3. '(' → logprob: -2.7683401107788086
    4. '(max' → logprob: -3.6433401107788086
    5. '('' → logprob: -4.143340110778809
    6. '("' → logprob: -4.268340110778809
    7. 'min' → logprob: -5.393340110778809
    8. 'res' → logprob: -6.393340110778809
    9. ' (' → logprob: -8.143340110778809
    10. '(abs' → logprob: -8.143340110778809

Token 58: 'No' (ID: 3160)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.5719354152679443
    2. ''D' → logprob: -2.0719354152679443
    3. 'No' → logprob: -2.4469354152679443
    4. 'Yes' → logprob: -2.5719354152679443
    5. '"' → logprob: -2.5719354152679443
    6. 'DRAW' → logprob: -2.6969354152679443
    7. '"D' → logprob: -3.0719354152679443
    8. 'Draw' → logprob: -3.1969354152679443
    9. ''' → logprob: -3.4469354152679443
    10. 'A' → logprob: -3.5719354152679443

Token 59: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0708874836564064
    2. '',' → logprob: -3.070887565612793
    3. ' ','' → logprob: -4.445887565612793
    4. ''' → logprob: -5.820887565612793
    5. ',' → logprob: -5.820887565612793
    6. ' ',' → logprob: -6.820887565612793
    7. ','' → logprob: -7.070887565612793
    8. '',"' → logprob: -7.320887565612793
    9. ' ,' → logprob: -7.570887565612793
    10. ' ' → logprob: -8.445887565612793

Token 60: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.05144013836979866
    2. ' Yes' → logprob: -3.1764402389526367
    3. ''' → logprob: -4.801440238952637
    4. ' '' → logprob: -8.676440238952637
    5. ' ' → logprob: -12.051440238952637
    6. 'No' → logprob: -13.051440238952637
    7. ''A' → logprob: -13.301440238952637
    8. ' yes' → logprob: -13.801440238952637
    9. 'YES' → logprob: -13.801440238952637
    10. '"' → logprob: -13.926440238952637

Token 61: ''][' (ID: 22110)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38924768567085266
    2. ''][' → logprob: -1.1392476558685303
    3. ''])' → logprob: -7.139247894287109
    4. '])' → logprob: -7.264247894287109
    5. '"][' → logprob: -8.01424789428711
    6. '']' → logprob: -8.51424789428711
    7. '')[' → logprob: -9.13924789428711
    8. ''])[' → logprob: -10.13924789428711
    9. ']' → logprob: -10.26424789428711
    10. ')[' → logprob: -10.26424789428711

Token 62: 'res' (ID: 430)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6337230205535889
    2. 'res' → logprob: -0.7587230205535889
    3. '(res' → logprob: -7.383723258972168
    4. ' ' → logprob: -8.508723258972168
    5. ' int' → logprob: -9.383723258972168
    6. ' (' → logprob: -9.633723258972168
    7. 'int' → logprob: -9.758723258972168
    8. '  ' → logprob: -10.133723258972168
    9. '1' → logprob: -11.383723258972168
    10. '(' → logprob: -11.383723258972168

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004330532974563539
    2. '2' → logprob: -7.750432968139648
    3. ' ' → logprob: -13.625432968139648
    4. '```' → logprob: -15.312932968139648
    5. ']' → logprob: -15.875432968139648
    6. 'ult' → logprob: -16.00043296813965
    7. '１' → logprob: -16.50043296813965
    8. '   ' → logprob: -16.62543296813965
    9. 'ults' → logprob: -16.93793296813965
    10. '(' → logprob: -17.06293296813965

Token 64: '>=' (ID: 20974)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.18389296531677246
    2. ' <=' → logprob: -1.8088929653167725
    3. '>=' → logprob: -6.433893203735352
    4. '>' → logprob: -6.558893203735352
    5. '<' → logprob: -7.558893203735352
    6. ' >=' → logprob: -8.308893203735352
    7. ' >' → logprob: -8.558893203735352
    8. ' ' → logprob: -9.558893203735352
    9. ' <' → logprob: -9.933893203735352
    10. '==' → logprob: -11.933893203735352

Token 65: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0006298751104623079
    2. ' res' → logprob: -7.375629901885986
    3. 'ress' → logprob: -13.500629425048828
    4. '0' → logprob: -14.875629425048828
    5. '	res' → logprob: -15.000629425048828
    6. '(res' → logprob: -15.125629425048828
    7. '2' → logprob: -15.750629425048828
    8. '=res' → logprob: -16.000629425048828
    9. '1' → logprob: -16.125629425048828
    10. ' ' → logprob: -16.250629425048828

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019066639652010053
    2. '1' → logprob: -9.000190734863281
    3. ' ' → logprob: -10.250190734863281
    4. 'res' → logprob: -11.125190734863281
    5. 's' → logprob: -11.625190734863281
    6. '```' → logprob: -13.375190734863281
    7. ' res' → logprob: -13.875190734863281
    8. '   ' → logprob: -13.875190734863281
    9. '  ' → logprob: -14.812690734863281
    10. 'x' → logprob: -14.812690734863281

Token 67: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009021693258546293
    2. ')' → logprob: -7.12590217590332
    3. ')])' → logprob: -10.12590217590332
    4. ' ])' → logprob: -10.62590217590332
    5. '])
' → logprob: -11.00090217590332
    6. ']' → logprob: -12.12590217590332
    7. ')]' → logprob: -12.37590217590332
    8. '))' → logprob: -12.62590217590332
    9. ' )' → logprob: -14.25090217590332
    10. ']))' → logprob: -14.37590217590332

Token 68: 'except' (ID: 25035)
  Prédit: ' except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.576469361782074
    2. 'except' → logprob: -0.826469361782074
    3. '```' → logprob: -8.451469421386719
    4. 'ex' → logprob: -8.826469421386719
    5. '
' → logprob: -9.701469421386719
    6. ' 
' → logprob: -10.576469421386719
    7. 'Except' → logprob: -10.576469421386719
    8. '-ex' → logprob: -11.326469421386719
    9. '	except' → logprob: -11.826469421386719
    10. ' ' → logprob: -12.201469421386719

Token 69: ' Exception' (ID: 6851)
  Prédit: ' Exception'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.04626157507300377
    2. ' Index' → logprob: -4.046261787414551
    3. ':' → logprob: -4.296261787414551
    4. ' Zero' → logprob: -5.171261787414551
    5. ' ' → logprob: -6.171261787414551
    6. ' EOF' → logprob: -6.421261787414551
    7. ' Name' → logprob: -6.546261787414551
    8. ' (' → logprob: -6.796261787414551
    9. '(Exception' → logprob: -7.796261787414551
    10. 'Exception' → logprob: -7.921261787414551

Token 70: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6944667100906372
    2. ' as' → logprob: -0.6944667100906372
    3. 'as' → logprob: -7.194466590881348
    4. ' :' → logprob: -7.694466590881348
    5. ':
' → logprob: -9.569466590881348
    6. '):' → logprob: -11.819466590881348
    7. '>:' → logprob: -12.319466590881348
    8. '[:]' → logprob: -12.319466590881348
    9. '	as' → logprob: -12.444466590881348
    10. ' pass' → logprob: -12.694466590881348

Token 71: ' e' (ID: 319)
  Prédit: ' Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.21081599593162537
    2. ' Name' → logprob: -2.210815906524658
    3. ' Index' → logprob: -2.960815906524658
    4. ' ' → logprob: -4.835815906524658
    5. ':' → logprob: -5.085815906524658
    6. 'Exception' → logprob: -5.710815906524658
    7. 'Name' → logprob: -5.960815906524658
    8. 'Index' → logprob: -6.210815906524658
    9. '<|end|>' → logprob: -6.210815906524658
    10. ' e' → logprob: -6.335815906524658

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001775499782525003
    2. ' :' → logprob: -6.75177526473999
    3. ':
' → logprob: -7.50177526473999
    4. ' as' → logprob: -10.501775741577148
    5. '):' → logprob: -11.501775741577148
    6. ' :
' → logprob: -12.376775741577148
    7. ':**' → logprob: -12.376775741577148
    8. ',' → logprob: -14.001775741577148
    9. ':return' → logprob: -14.251775741577148
    10. ':

' → logprob: -14.376775741577148

Token 73: ' pass' (ID: 1853)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.012876415625214577
    2. 'print' → logprob: -4.762876510620117
    3. ' pass' → logprob: -6.262876510620117
    4. '   ' → logprob: -6.887876510620117
    5. ' ' → logprob: -7.262876510620117
    6. ' 
' → logprob: -8.387876510620117
    7. '	print' → logprob: -8.887876510620117
    8. ' raise' → logprob: -9.012876510620117
    9. '    ' → logprob: -10.512876510620117
    10. '
' → logprob: -10.887876510620117


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 29.58%
Précision adaptée (1ère position): 29.58%
Précision (top 10): 74.65%
================================================================================
