================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
lilint = lambda: int(__import__('builtins').input())
lilints = lambda: list(map(int, __import__('builtins').input().split()))
N = lilint()
TheList = [-1]*3
finalAns = 1
# pourquoi pas utiliser 'hue' au lieu de 'color'?
hue = lilints()
for idx, col in enumerate(hue):
    magic = sum([1 for u in TheList if u == col-1])
    finalAns = (finalAns * magic) % 1000000007
    for i, v in enumerate(TheList):
        if v == col-1:
            TheList[i] += 1
            # pas de else ou de flag, juste 'return' l'équivalent ici
            break
print(finalAns)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'l' (ID: 75)
  → Token d'amorce (pas de prédiction)

Token 1: 'il' (ID: 311)
  → Token d'amorce (pas de prédiction)

Token 2: 'int' (ID: 491)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.393113613128662
    2. ' ' → logprob: -1.518113613128662
    3. ':' → logprob: -1.893113613128662
    4. '```' → logprob: -2.393113613128662
    5. '.' → logprob: -3.018113613128662
    6. 't' → logprob: -3.268113613128662
    7. 'l' → logprob: -3.268113613128662
    8. 'i' → logprob: -3.893113613128662
    9. '(' → logprob: -4.018113613128662
    10. ';' → logprob: -4.143113613128662

Token 4: ' lambda' (ID: 27871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6394704580307007
    2. '0' → logprob: -1.5144704580307007
    3. '1' → logprob: -2.1394705772399902
    4. ' []' → logprob: -3.0144705772399902
    5. '"' → logprob: -3.5144705772399902
    6. ''' → logprob: -4.01447057723999
    7. '10' → logprob: -4.13947057723999
    8. '32' → logprob: -5.13947057723999
    9. '[]' → logprob: -5.63947057723999
    10. '[' → logprob: -6.26447057723999

Token 5: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05617170408368111
    2. 'x' → logprob: -3.5561716556549072
    3. ' s' → logprob: -3.9311716556549072
    4. 's' → logprob: -6.181171894073486
    5. ' ' → logprob: -7.056171894073486
    6. ' space' → logprob: -7.431171894073486
    7. 'l' → logprob: -7.556171894073486
    8. ' l' → logprob: -7.806171894073486
    9. ' ' → logprob: -7.806171894073486
    10. ' a' → logprob: -7.806171894073486

Token 6: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.7482066750526428
    2. 'input' → logprob: -0.9982066750526428
    3. 'int' → logprob: -2.373206615447998
    4. ' int' → logprob: -2.873206615447998
    5. ' None' → logprob: -5.373206615447998
    6. 'None' → logprob: -7.123206615447998
    7. ' list' → logprob: -7.373206615447998
    8. ' ' → logprob: -7.748206615447998
    9. ' True' → logprob: -7.748206615447998
    10. 'list' → logprob: -8.248207092285156

Token 7: '(__' (ID: 11782)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009889844805002213
    2. '(l' → logprob: -7.500988960266113
    3. '()' → logprob: -7.875988960266113
    4. '('' → logprob: -11.000988960266113
    5. 'l' → logprob: -11.375988960266113
    6. '(
' → logprob: -12.375988960266113
    7. '(open' → logprob: -12.500988960266113
    8. ' (' → logprob: -12.875988960266113
    9. '(input' → logprob: -12.875988960266113
    10. '(ll' → logprob: -13.375988960266113

Token 8: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.000252160825766623
    2. 'built' → logprob: -8.625251770019531
    3. 'stdin' → logprob: -10.125251770019531
    4. 'input' → logprob: -11.375251770019531
    5. 'name' → logprob: -12.250251770019531
    6. 'code' → logprob: -12.250251770019531
    7. 'loader' → logprob: -13.250251770019531
    8. 'file' → logprob: -13.250251770019531
    9. 'user' → logprob: -13.500251770019531
    10. ' import' → logprob: -13.500251770019531

Token 9: '__('' (ID: 54460)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07573553174734116
    2. '('' → logprob: -2.825735569000244
    3. '("("' → logprob: -4.575735569000244
    4. '__('' → logprob: -6.575735569000244
    5. '("' → logprob: -7.075735569000244
    6. '__("' → logprob: -8.700735092163086
    7. '(
' → logprob: -9.075735092163086
    8. ')' → logprob: -9.450735092163086
    9. '('__' → logprob: -9.700735092163086
    10. '(paren' → logprob: -9.763235092163086

Token 10: 'built' (ID: 81936)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0031836593989282846
    2. 'built' → logprob: -5.753183841705322
    3. '__' → logprob: -12.878183364868164
    4. 'os' → logprob: -14.128183364868164
    5. 'math' → logprob: -14.628183364868164
    6. ' sys' → logprob: -14.878183364868164
    7. 're' → logprob: -14.878183364868164
    8. '_sys' → logprob: -14.878183364868164
    9. ''s' → logprob: -15.128183364868164
    10. ' built' → logprob: -16.003183364868164

Token 11: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -5.4192871175473556e-05
    2. 'in' → logprob: -10.250054359436035
    3. '__' → logprob: -11.750054359436035
    4. 's' → logprob: -12.875054359436035
    5. 'i' → logprob: -12.875054359436035
    6. 'ints' → logprob: -13.625054359436035
    7. '_ins' → logprob: -14.000054359436035
    8. '-ins' → logprob: -14.250054359436035
    9. 'lins' → logprob: -14.625054359436035
    10. 'int' → logprob: -14.750054359436035

Token 12: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.5557156801223755
    2. '').' → logprob: -1.0557156801223755
    3. ').__' → logprob: -2.930715560913086
    4. '.' → logprob: -4.680715560913086
    5. ' ).' → logprob: -4.930715560913086
    6. ')' → logprob: -6.055715560913086
    7. '.__' → logprob: -6.305715560913086
    8. '.input' → logprob: -7.180715560913086
    9. '`).' → logprob: -7.930715560913086
    10. '.b' → logprob: -8.055715560913086

Token 13: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0008276138687506318
    2. '__' → logprob: -7.500827789306641
    3. 'read' → logprob: -9.25082778930664
    4. 'eval' → logprob: -9.75082778930664
    5. 'stdin' → logprob: -9.87582778930664
    6. ' input' → logprob: -10.50082778930664
    7. '_input' → logprob: -11.00082778930664
    8. 'raw' → logprob: -11.62582778930664
    9. 'inp' → logprob: -12.62582778930664
    10. 'open' → logprob: -12.75082778930664

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2185436636209488
    2. ')' → logprob: -1.8435436487197876
    3. '()' → logprob: -3.343543767929077
    4. '(' → logprob: -7.468543529510498
    5. ' ())' → logprob: -7.968543529510498
    6. '`()' → logprob: -7.968543529510498
    7. '```' → logprob: -8.343544006347656
    8. '(()' → logprob: -8.343544006347656
    9. '(),' → logprob: -8.718544006347656
    10. '`)' → logprob: -8.843544006347656

Token 15: 'l' (ID: 75)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014363288879394531
    2. '(
' → logprob: -4.7643632888793945
    3. ')' → logprob: -6.7643632888793945
    4. '#' → logprob: -6.7643632888793945
    5. '*' → logprob: -7.3893632888793945
    6. '```' → logprob: -7.6393632888793945
    7. '()' → logprob: -7.7643632888793945
    8. ',' → logprob: -8.014363288879395
    9. 'newline' → logprob: -8.764363288879395
    10. '\' → logprob: -8.889363288879395

Token 16: 'il' (ID: 311)
  Prédit: 'il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.4972645938396454
    2. 'l' → logprob: -1.3722646236419678
    3. 'i' → logprob: -2.8722646236419678
    4. 'int' → logprob: -3.7472646236419678
    5. 'ist' → logprob: -4.497264385223389
    6. 'ilst' → logprob: -4.622264385223389
    7. 'print' → logprob: -5.122264385223389
    8. 'ili' → logprob: -5.372264385223389
    9. 'in' → logprob: -5.497264385223389
    10. 'en' → logprob: -5.872264385223389

Token 17: 'ints' (ID: 20448)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5213274309644476e-05
    2. 'ent' → logprob: -11.500015258789062
    3. 'nt' → logprob: -13.125015258789062
    4. ' int' → logprob: -14.000015258789062
    5. '_int' → logprob: -14.250015258789062
    6. 't' → logprob: -14.375015258789062
    7. 'intl' → logprob: -14.500015258789062
    8. '(int' → logprob: -16.500015258789062
    9. 'i' → logprob: -16.875015258789062
    10. '<int' → logprob: -17.000015258789062

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5671854615211487
    2. '(' → logprob: -0.9421854615211487
    3. 't' → logprob: -3.192185401916504
    4. 's' → logprob: -7.567185401916504
    5. '('' → logprob: -7.817185401916504
    6. ')' → logprob: -7.817185401916504
    7. '```' → logprob: -9.067185401916504
    8. '[' → logprob: -9.192185401916504
    9. ' (' → logprob: -9.192185401916504
    10. '(t' → logprob: -10.067185401916504

Token 19: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.48994508385658264
    2. 'lambda' → logprob: -0.9899450540542603
    3. '(lambda' → logprob: -4.739944934844971
    4. 'l' → logprob: -5.364944934844971
    5. '=lambda' → logprob: -7.489944934844971
    6. ' l' → logprob: -7.864944934844971
    7. ' []' → logprob: -7.864944934844971
    8. 'int' → logprob: -8.614945411682129
    9. ' lil' → logprob: -8.739945411682129
    10. '[]' → logprob: -8.864945411682129

Token 20: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3142356276512146
    2. '()' → logprob: -1.5642356872558594
    3. '():' → logprob: -3.3142356872558594
    4. ' :' → logprob: -4.689235687255859
    5. ' ()' → logprob: -4.689235687255859
    6. ' ' → logprob: -6.314235687255859
    7. '().__' → logprob: -7.189235687255859
    8. '(lambda' → logprob: -7.314235687255859
    9. '(' → logprob: -7.564235687255859
    10. ' ():' → logprob: -7.939235687255859

Token 21: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04504735395312309
    2. '__' → logprob: -3.5450472831726074
    3. '[int' → logprob: -5.295047283172607
    4. 'list' → logprob: -5.670047283172607
    5. 'map' → logprob: -5.920047283172607
    6. ' int' → logprob: -6.045047283172607
    7. ' __' → logprob: -7.045047283172607
    8. '[' → logprob: -8.420047760009766
    9. ' map' → logprob: -8.920047760009766
    10. '(int' → logprob: -9.045047760009766

Token 22: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.24148757755756378
    2. '(' → logprob: -1.7414876222610474
    3. '(__' → logprob: -3.366487503051758
    4. '(int' → logprob: -5.616487503051758
    5. '(l' → logprob: -7.866487503051758
    6. '()' → logprob: -8.116487503051758
    7. '(range' → logprob: -9.116487503051758
    8. '().__' → logprob: -9.241487503051758
    9. '[int' → logprob: -9.991487503051758
    10. '(
' → logprob: -10.366487503051758

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01614874042570591
    2. '(' → logprob: -4.141148567199707
    3. ')' → logprob: -10.016148567199707
    4. '(l' → logprob: -11.141148567199707
    5. '(
' → logprob: -11.266148567199707
    6. '=int' → logprob: -11.391148567199707
    7. '(lambda' → logprob: -11.766148567199707
    8. 'l' → logprob: -12.266148567199707
    9. '<int' → logprob: -12.641148567199707
    10. '[int' → logprob: -12.891148567199707

Token 24: ',' (ID: 11)
  Prédit: '(__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.056457240134477615
    2. '(' → logprob: -3.181457281112671
    3. ')(__' → logprob: -4.681457042694092
    4. ',__' → logprob: -6.431457042694092
    5. ',' → logprob: -6.806457042694092
    6. '(l' → logprob: -7.806457042694092
    7. '(input' → logprob: -8.30645751953125
    8. ')' → logprob: -9.05645751953125
    9. 'l' → logprob: -9.18145751953125
    10. '))' → logprob: -9.43145751953125

Token 25: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007712985388934612
    2. ' __' → logprob: -5.0077128410339355
    3. 'input' → logprob: -7.8827128410339355
    4. 'l' → logprob: -8.257713317871094
    5. '(__' → logprob: -8.257713317871094
    6. '.__' → logprob: -10.257713317871094
    7. '___' → logprob: -11.382713317871094
    8. ' input' → logprob: -11.507713317871094
    9. ',__' → logprob: -12.132713317871094
    10. 'str' → logprob: -12.382713317871094

Token 26: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3903908133506775
    2. ''import' → logprob: -1.1403908729553223
    3. '__' → logprob: -6.140390872955322
    4. '.import' → logprob: -7.390390872955322
    5. '_import' → logprob: -8.140390396118164
    6. '__('' → logprob: -8.515390396118164
    7. '-import' → logprob: -9.515390396118164
    8. '(import' → logprob: -9.515390396118164
    9. '('' → logprob: -10.515390396118164
    10. 'input' → logprob: -11.140390396118164

Token 27: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0023364010266959667
    2. '__('' → logprob: -6.377336502075195
    3. '(('' → logprob: -7.877336502075195
    4. ' ('' → logprob: -9.377336502075195
    5. '('__' → logprob: -9.752336502075195
    6. '(' → logprob: -9.877336502075195
    7. '(','' → logprob: -11.002336502075195
    8. '=('' → logprob: -11.377336502075195
    9. '>('' → logprob: -11.752336502075195
    10. '(\'' → logprob: -12.377336502075195

Token 28: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.004003961570560932
    2. ''b' → logprob: -5.879004001617432
    3. 'b' → logprob: -6.754004001617432
    4. 'builtin' → logprob: -10.629003524780273
    5. ' built' → logprob: -12.879003524780273
    6. '__' → logprob: -13.629003524780273
    7. '-built' → logprob: -14.004003524780273
    8. ''' → logprob: -14.379003524780273
    9. '	b' → logprob: -14.629003524780273
    10. 'bis' → logprob: -14.754003524780273

Token 29: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.42104804515838623
    2. 'uilt' → logprob: -2.546048164367676
    3. '__('' → logprob: -2.796048164367676
    4. 'uil' → logprob: -3.296048164367676
    5. 'uls' → logprob: -3.546048164367676
    6. 'ils' → logprob: -3.546048164367676
    7. 'lins' → logprob: -3.671048164367676
    8. 'il' → logprob: -4.171048164367676
    9. '__' → logprob: -4.171048164367676
    10. ''s' → logprob: -4.421048164367676

Token 30: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.1606014370918274
    2. '.input' → logprob: -2.4106013774871826
    3. '').' → logprob: -3.1606013774871826
    4. '.' → logprob: -4.660601615905762
    5. '.import' → logprob: -5.660601615905762
    6. ''.' → logprob: -6.785601615905762
    7. ')' → logprob: -7.660601615905762
    8. ' ).' → logprob: -8.160601615905762
    9. '.python' → logprob: -8.785601615905762
    10. '().' → logprob: -9.035601615905762

Token 31: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.3438327843905427e-05
    2. ' input' → logprob: -10.75002384185791
    3. '(input' → logprob: -14.25002384185791
    4. 'import' → logprob: -15.12502384185791
    5. '<input' → logprob: -15.25002384185791
    6. 'open' → logprob: -15.25002384185791
    7. '.input' → logprob: -16.125022888183594
    8. '__' → logprob: -16.375022888183594
    9. '[input' → logprob: -16.375022888183594
    10. 'stdin' → logprob: -16.500022888183594

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.024459784850478172
    2. '()))' → logprob: -4.3994598388671875
    3. '()' → logprob: -4.7744598388671875
    4. '())' → logprob: -7.0244598388671875
    5. '))' → logprob: -7.0244598388671875
    6. ')' → logprob: -7.5244598388671875
    7. '('' → logprob: -7.8994598388671875
    8. '().'' → logprob: -8.274459838867188
    9. '()['' → logprob: -8.899459838867188
    10. '('').' → logprob: -9.149459838867188

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019765726756304502
    2. 'strip' → logprob: -6.251976490020752
    3. 'rstrip' → logprob: -10.75197696685791
    4. ')' → logprob: -11.12697696685791
    5. ' split' → logprob: -11.87697696685791
    6. '().' → logprob: -13.00197696685791
    7. 's' → logprob: -13.75197696685791
    8. '.split' → logprob: -14.37697696685791
    9. '(split' → logprob: -14.75197696685791
    10. 'spl' → logprob: -16.376976013183594

Token 34: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.020081058144569397
    2. '()' → logprob: -4.020081043243408
    3. '))' → logprob: -6.645081043243408
    4. '())' → logprob: -7.645081043243408
    5. '()))
' → logprob: -9.520081520080566
    6. '())))' → logprob: -10.270081520080566
    7. '(' → logprob: -11.020081520080566
    8. '()));' → logprob: -11.270081520080566
    9. '()))

' → logprob: -12.520081520080566
    10. ''))' → logprob: -12.645081520080566

Token 35: 'N' (ID: 45)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8574892282485962
    2. '(' → logprob: -1.9824892282485962
    3. '
' → logprob: -1.9824892282485962
    4. 'n' → logprob: -2.3574891090393066
    5. '#' → logprob: -2.8574891090393066
    6. '[' → logprob: -3.6074891090393066
    7. '\' → logprob: -3.6074891090393066
    8. '(
' → logprob: -3.8574891090393066
    9. '' → logprob: -4.857489109039307
    10. '(n' → logprob: -4.857489109039307

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0228278636932373
    2. ' ' → logprob: -1.5228278636932373
    3. '=' → logprob: -1.7728278636932373
    4. ')' → logprob: -1.8978278636932373
    5. '(' → logprob: -3.1478278636932373
    6. ',' → logprob: -4.272828102111816
    7. ' )' → logprob: -4.647828102111816
    8. '<|end|>' → logprob: -5.022828102111816
    9. '()' → logprob: -5.147828102111816
    10. ' (' → logprob: -5.272828102111816

Token 37: ' lil' (ID: 38368)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31779488921165466
    2. ' lil' → logprob: -1.317794919013977
    3. ' l' → logprob: -5.5677947998046875
    4. ' lill' → logprob: -8.442794799804688
    5. '	l' → logprob: -9.442794799804688
    6. ' ' → logprob: -9.442794799804688
    7. ' Lil' → logprob: -10.567794799804688
    8. '_l' → logprob: -10.630294799804688
    9. '0' → logprob: -10.817794799804688
    10. 's' → logprob: -10.880294799804688

Token 38: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.049755782238208e-05
    2. 'nt' → logprob: -10.25005054473877
    3. 'ent' → logprob: -11.75005054473877
    4. 't' → logprob: -12.50005054473877
    5. 'ints' → logprob: -13.00005054473877
    6. ' int' → logprob: -15.62505054473877
    7. '(int' → logprob: -16.000049591064453
    8. 'i' → logprob: -16.125049591064453
    9. '<int' → logprob: -16.125049591064453
    10. '[int' → logprob: -16.375049591064453

Token 39: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0033538052812218666
    2. '()
' → logprob: -6.003353595733643
    3. '(' → logprob: -7.128353595733643
    4. '()\' → logprob: -10.3783540725708
    5. '()

' → logprob: -11.3783540725708
    6. ')' → logprob: -11.6283540725708
    7. ' ()' → logprob: -11.7533540725708
    8. '<|end|>' → logprob: -12.5033540725708
    9. '(
' → logprob: -12.8783540725708
    10. '();' → logprob: -12.8783540725708

Token 40: 'The' (ID: 976)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5660916566848755
    2. 'A' → logprob: -2.066091537475586
    3. 'for' → logprob: -2.066091537475586
    4. 'arr' → logprob: -2.941091537475586
    5. 'data' → logprob: -3.566091537475586
    6. 'd' → logprob: -4.191091537475586
    7. 's' → logprob: -4.316091537475586
    8. 'r' → logprob: -4.566091537475586
    9. 'result' → logprob: -4.566091537475586
    10. 'numbers' → logprob: -5.066091537475586

Token 41: 'List' (ID: 950)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002417157171294093
    2. '_' → logprob: -7.877417087554932
    3. 'for' → logprob: -8.12741756439209
    4. ' =' → logprob: -8.50241756439209
    5. '  ' → logprob: -8.62741756439209
    6. ' rest' → logprob: -8.75241756439209
    7. ' for' → logprob: -8.87741756439209
    8. 'data' → logprob: -9.12741756439209
    9. ' data' → logprob: -9.50241756439209
    10. ' The' → logprob: -9.87741756439209

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.240031898021698
    2. '=' → logprob: -1.7400319576263428
    3. '.' → logprob: -3.6150319576263428
    4. '[' → logprob: -4.990031719207764
    5. '(' → logprob: -6.865031719207764
    6. '<|end|>' → logprob: -7.115031719207764
    7. 's' → logprob: -7.365031719207764
    8. '[:]' → logprob: -7.615031719207764
    9. ' ' → logprob: -8.865032196044922
    10. '.append' → logprob: -8.865032196044922

Token 43: ' [-' (ID: 20191)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3021644055843353
    2. ' lil' → logprob: -1.4271644353866577
    3. '[l' → logprob: -4.177164554595947
    4. '[]' → logprob: -6.302164554595947
    5. ' []' → logprob: -6.802164554595947
    6. '[' → logprob: -7.177164554595947
    7. ' [' → logprob: -7.677164554595947
    8. ' l' → logprob: -7.802164554595947
    9. 'list' → logprob: -8.177164077758789
    10. ' list' → logprob: -9.177164077758789

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4471813142299652
    2. 'N' → logprob: -1.4471813440322876
    3. 'l' → logprob: -2.572181224822998
    4. 'i' → logprob: -4.197181224822998
    5. '(' → logprob: -4.572181224822998
    6. '100' → logprob: -5.072181224822998
    7. '10' → logprob: -5.197181224822998
    8. 'int' → logprob: -5.947181224822998
    9. 'float' → logprob: -6.572181224822998
    10. '2' → logprob: -6.822181224822998

Token 45: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02493942528963089
    2. ']*' → logprob: -4.02493953704834
    3. ']*(' → logprob: -6.14993953704834
    4. ' ]' → logprob: -6.27493953704834
    5. ' for' → logprob: -6.64993953704834
    6. ',' → logprob: -7.02493953704834
    7. ']+' → logprob: -8.39993953704834
    8. '1' → logprob: -8.52493953704834
    9. 'for' → logprob: -9.52493953704834
    10. '0' → logprob: -10.27493953704834

Token 46: '3' (ID: 18)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06231675669550896
    2. '(N' → logprob: -2.937316656112671
    3. '(' → logprob: -5.06231689453125
    4. '100' → logprob: -7.31231689453125
    5. '10' → logprob: -9.18731689453125
    6. ' N' → logprob: -10.06231689453125
    7. '101' → logprob: -10.06231689453125
    8. ' (' → logprob: -10.31231689453125
    9. '200' → logprob: -10.56231689453125
    10. '300' → logprob: -10.93731689453125

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2644001543521881
    2. '<|end|>' → logprob: -1.5144001245498657
    3. '+' → logprob: -5.139400005340576
    4. ' 
' → logprob: -6.889400005340576
    5. 'N' → logprob: -7.014400005340576
    6. '<|end|>' → logprob: -7.139400005340576
    7. '
' → logprob: -7.514400005340576
    8. 'The' → logprob: -7.639400005340576
    9. '\n' → logprob: -7.764400005340576
    10. '  
' → logprob: -8.264400482177734

Token 48: 'final' (ID: 17196)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34629613161087036
    2. '
' → logprob: -1.8462960720062256
    3. '<|end|>' → logprob: -2.3462960720062256
    4. ' for' → logprob: -3.4712960720062256
    5. ' 
' → logprob: -5.846296310424805
    6. ' The' → logprob: -6.971296310424805
    7. '<|end|>' → logprob: -7.221296310424805
    8. 'The' → logprob: -7.346296310424805
    9. '\n' → logprob: -7.471296310424805
    10. '0' → logprob: -7.846296310424805

Token 49: 'Ans' (ID: 36478)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.7681530714035034
    2. '_sum' → logprob: -1.7681530714035034
    3. '_' → logprob: -2.268153190612793
    4. ' =' → logprob: -2.768153190612793
    5. '_result' → logprob: -2.893153190612793
    6. '_index' → logprob: -2.893153190612793
    7. 'sum' → logprob: -2.893153190612793
    8. 'Sum' → logprob: -3.268153190612793
    9. 'max' → logprob: -3.268153190612793
    10. '_answer' → logprob: -3.518153190612793

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20492956042289734
    2. '=' → logprob: -1.7049295902252197
    3. 's' → logprob: -6.329929351806641
    4. '[' → logprob: -6.954929351806641
    5. '_' → logprob: -8.07992935180664
    6. '[:]' → logprob: -9.20492935180664
    7. '[]' → logprob: -9.32992935180664
    8. ' ' → logprob: -9.57992935180664
    9. ',' → logprob: -9.70492935180664
    10. '=[]' → logprob: -10.07992935180664

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15814246237277985
    2. ' ' → logprob: -2.033142566680908
    3. '[' → logprob: -5.408142566680908
    4. '[]' → logprob: -6.033142566680908
    5. ' []' → logprob: -6.158142566680908
    6. ' [' → logprob: -6.408142566680908
    7. 'float' → logprob: -6.533142566680908
    8. '-' → logprob: -6.783142566680908
    9. ' -' → logprob: -8.03314208984375
    10. '[int' → logprob: -8.03314208984375

Token 52: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04274634271860123
    2. 'float' → logprob: -4.292746543884277
    3. '-' → logprob: -4.667746543884277
    4. '[' → logprob: -5.417746543884277
    5. 'max' → logprob: -5.792746543884277
    6. '[]' → logprob: -6.417746543884277
    7. '1' → logprob: -6.417746543884277
    8. '10' → logprob: -6.542746543884277
    9. 'N' → logprob: -6.792746543884277
    10. 'int' → logprob: -7.042746543884277

Token 53: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4312931299209595
    2. '
' → logprob: -1.8062931299209595
    3. ' for' → logprob: -2.18129301071167
    4. '<|end|>' → logprob: -3.05629301071167
    5. '\n' → logprob: -4.43129301071167
    6. '+' → logprob: -5.18129301071167
    7. '*' → logprob: -5.80629301071167
    8. ' 
' → logprob: -6.30629301071167
    9. '```' → logprob: -7.80629301071167
    10. ' ' → logprob: -7.80629301071167

Token 54: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022324516903609037
    2. ' for' → logprob: -6.502232551574707
    3. '<|end|>' → logprob: -7.752232551574707
    4. '*' → logprob: -9.627232551574707
    5. '\n' → logprob: -9.627232551574707
    6. '
' → logprob: -10.002232551574707
    7. 'i' → logprob: -10.752232551574707
    8. '+' → logprob: -11.002232551574707
    9. 'f' → logprob: -11.127232551574707
    10. 'n' → logprob: -11.252232551574707

Token 55: ' pourquoi' (ID: 39224)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5910494327545166
    2. ' for' → logprob: -0.8410494327545166
    3. ' ' → logprob: -4.2160491943359375
    4. '<|end|>' → logprob: -9.466049194335938
    5. '+' → logprob: -10.466049194335938
    6. ' 
' → logprob: -11.216049194335938
    7. ' ' → logprob: -11.341049194335938
    8. ' ```' → logprob: -11.716049194335938
    9. ' The' → logprob: -11.966049194335938
    10. ' \' → logprob: -11.966049194335938

Token 56: ' pas' (ID: 2173)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47197994589805603
    2. '[' → logprob: -1.4719799757003784
    3. 'for' → logprob: -3.221979856491089
    4. '*' → logprob: -3.846979856491089
    5. '```' → logprob: -4.471980094909668
    6. '_' → logprob: -4.596980094909668
    7. '<|end|>' → logprob: -4.721980094909668
    8. ' ' → logprob: -4.846980094909668
    9. ' for' → logprob: -5.221980094909668
    10. '
' → logprob: -5.471980094909668

Token 57: ' utiliser' (ID: 43227)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014835550682619214
    2. ' for' → logprob: -7.00148344039917
    3. '
' → logprob: -7.50148344039917
    4. '```' → logprob: -12.876483917236328
    5. 'i' → logprob: -13.001483917236328
    6. '\n' → logprob: -13.251483917236328
    7. '*' → logprob: -13.251483917236328
    8. 'f' → logprob: -13.251483917236328
    9. 'if' → logprob: -13.501483917236328
    10. 'n' → logprob: -14.001483917236328

Token 58: ' '' (ID: 461)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5252701044082642
    2. 'The' → logprob: -1.9002701044082642
    3. 'math' → logprob: -2.5252699851989746
    4. 'final' → logprob: -2.5252699851989746
    5. 'sum' → logprob: -2.7752699851989746
    6. 'enumer' → logprob: -2.9002699851989746
    7. ' The' → logprob: -3.0252699851989746
    8. 'l' → logprob: -3.4002699851989746
    9. 'max' → logprob: -3.4002699851989746
    10. ' math' → logprob: -3.5252699851989746

Token 59: 'h' (ID: 71)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'The' → logprob: -1.6425970792770386
    2. ' The' → logprob: -2.142597198486328
    3. ''' → logprob: -2.517597198486328
    4. 'final' → logprob: -2.642597198486328
    5. 'max' → logprob: -2.642597198486328
    6. ' '' → logprob: -3.017597198486328
    7. 'l' → logprob: -3.142597198486328
    8. 'for' → logprob: -3.267597198486328
    9. 'math' → logprob: -3.517597198486328
    10. 'min' → logprob: -3.892597198486328

Token 60: 'ue' (ID: 466)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4649701416492462
    2. 'ash' → logprob: -1.0899701118469238
    3. 'eil' → logprob: -4.214970111846924
    4. 'eight' → logprob: -5.339970111846924
    5. 'elper' → logprob: -6.214970111846924
    6. 'el' → logprob: -6.464970111846924
    7. 'as' → logprob: -6.839970111846924
    8. 'eat' → logprob: -6.964970111846924
    9. 'heap' → logprob: -7.089970111846924
    10. 'ell' → logprob: -7.214970111846924

Token 61: ''' (ID: 6)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.810137927532196
    2. 'r' → logprob: -2.060137987136841
    3. ''' → logprob: -2.310137987136841
    4. 'm' → logprob: -2.435137987136841
    5. 's' → logprob: -2.685137987136841
    6. '#' → logprob: -3.185137987136841
    7. 'hash' → logprob: -4.310137748718262
    8. 'h' → logprob: -4.810137748718262
    9. 'q' → logprob: -4.935137748718262
    10. 'n' → logprob: -5.185137748718262

Token 62: ' au' (ID: 2791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2248531579971313
    2. ' for' → logprob: -1.4748531579971313
    3. '<|end|>' → logprob: -1.4748531579971313
    4. '?' → logprob: -2.599853038787842
    5. '
' → logprob: -2.974853038787842
    6. ',' → logprob: -3.224853038787842
    7. ' The' → logprob: -3.599853038787842
    8. ' ' → logprob: -4.224853038787842
    9. '[' → logprob: -4.599853038787842
    10. ':' → logprob: -5.224853038787842

Token 63: ' lieu' (ID: 23979)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -1.3425503969192505
    2. 'case' → logprob: -1.7175503969192505
    3. 'lie' → logprob: -2.092550277709961
    4. 'jourd' → logprob: -2.467550277709961
    5. 'mil' → logprob: -2.467550277709961
    6. 'c' → logprob: -2.592550277709961
    7. 'tour' → logprob: -4.092550277709961
    8. '#' → logprob: -4.217550277709961
    9. 'l' → logprob: -4.467550277709961
    10. ' lieu' → logprob: -4.592550277709961

Token 64: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.38053154945373535
    2. 'de' → logprob: -1.7555315494537354
    3. '<|end|>' → logprob: -2.2555315494537354
    4. ' of' → logprob: -4.005531311035156
    5. 'd' → logprob: -5.005531311035156
    6. '#' → logprob: -5.505531311035156
    7. ' d' → logprob: -6.755531311035156
    8. ' ' → logprob: -6.880531311035156
    9. 'des' → logprob: -7.005531311035156
    10. '<|end|>' → logprob: -7.130531311035156

Token 65: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6402323246002197
    2. ''h' → logprob: -1.6402323246002197
    3. ''l' → logprob: -1.8902323246002197
    4. 'The' → logprob: -3.3902323246002197
    5. ''H' → logprob: -4.015232086181641
    6. ''t' → logprob: -4.765232086181641
    7. ''s' → logprob: -4.765232086181641
    8. ' '' → logprob: -4.890232086181641
    9. 'final' → logprob: -5.015232086181641
    10. ' The' → logprob: -5.265232086181641

Token 66: 'color' (ID: 4991)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.8821789622306824
    2. ''' → logprob: -1.8821790218353271
    3. 'l' → logprob: -2.632179021835327
    4. 'h' → logprob: -3.132179021835327
    5. ''h' → logprob: -3.132179021835327
    6. '_' → logprob: -3.382179021835327
    7. 'i' → logprob: -3.757179021835327
    8. ''l' → logprob: -4.007178783416748
    9. 'final' → logprob: -4.007178783416748
    10. ' The' → logprob: -4.132178783416748

Token 67: ''' (ID: 6)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.049014586955308914
    2. ',' → logprob: -4.674014568328857
    3. '[' → logprob: -4.674014568328857
    4. ':' → logprob: -4.799014568328857
    5. '<|end|>' → logprob: -5.424014568328857
    6. '#' → logprob: -5.924014568328857
    7. 's' → logprob: -5.924014568328857
    8. ')' → logprob: -6.174014568328857
    9. 'The' → logprob: -6.549014568328857
    10. ' ?' → logprob: -6.674014568328857

Token 68: '?
' (ID: 3901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.876397967338562
    2. '<|end|>' → logprob: -1.501397967338562
    3. '?' → logprob: -2.0013980865478516
    4. ' for' → logprob: -2.3763980865478516
    5. '
' → logprob: -2.3763980865478516
    6. 's' → logprob: -4.876398086547852
    7. 'color' → logprob: -5.251398086547852
    8. ',' → logprob: -5.376398086547852
    9. ';' → logprob: -5.501398086547852
    10. 'The' → logprob: -5.501398086547852

Token 69: 'h' (ID: 71)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6749994158744812
    2. 'for' → logprob: -1.049999475479126
    3. 'color' → logprob: -2.674999475479126
    4. '<|end|>' → logprob: -4.174999237060547
    5. '?' → logprob: -4.299999237060547
    6. ' color' → logprob: -4.674999237060547
    7. 's' → logprob: -4.799999237060547
    8. '
' → logprob: -5.299999237060547
    9. ',' → logprob: -5.424999237060547
    10. ':' → logprob: -5.674999237060547

Token 70: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.011213571764528751
    2. 'e' → logprob: -5.011213779449463
    3. 'u' → logprob: -5.761213779449463
    4. 'color' → logprob: -7.886213779449463
    5. 'i' → logprob: -8.386213302612305
    6. 'ues' → logprob: -9.261213302612305
    7. 'uel' → logprob: -9.636213302612305
    8. 'final' → logprob: -9.761213302612305
    9. 'uei' → logprob: -9.761213302612305
    10. 'The' → logprob: -10.011213302612305

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08394061774015427
    2. 's' → logprob: -3.2089405059814453
    3. ']' → logprob: -3.9589405059814453
    4. '=' → logprob: -4.333940505981445
    5. '_' → logprob: -5.708940505981445
    6. ',' → logprob: -5.958940505981445
    7. '[' → logprob: -8.208940505981445
    8. ')' → logprob: -8.458940505981445
    9. '_index' → logprob: -8.833940505981445
    10. ' ' → logprob: -8.958940505981445

Token 72: ' lil' (ID: 38368)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2036251574754715
    2. '0' → logprob: -2.953625202178955
    3. 'N' → logprob: -3.578625202178955
    4. '[l' → logprob: -3.578625202178955
    5. ''l' → logprob: -3.953625202178955
    6. ' lil' → logprob: -4.078625202178955
    7. '[]' → logprob: -4.703625202178955
    8. '[N' → logprob: -4.828625202178955
    9. '[' → logprob: -4.953625202178955
    10. 'The' → logprob: -5.953625202178955

Token 73: 'ints' (ID: 20448)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06198056787252426
    2. 'ints' → logprob: -2.8119804859161377
    3. 'nt' → logprob: -11.811980247497559
    4. 'nts' → logprob: -13.561980247497559
    5. 'ist' → logprob: -14.686980247497559
    6. '(int' → logprob: -15.311980247497559
    7. 'i' → logprob: -15.311980247497559
    8. 'ent' → logprob: -15.436980247497559
    9. 'intval' → logprob: -15.436980247497559
    10. 'it' → logprob: -15.436980247497559

Token 74: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.842555426876061e-06
    2. '()
' → logprob: -12.750004768371582
    3. ' ()' → logprob: -14.500004768371582
    4. '()]' → logprob: -14.875004768371582
    5. '()

' → logprob: -15.000004768371582
    6. '()`' → logprob: -15.500004768371582
    7. '())' → logprob: -15.875004768371582
    8. '()<' → logprob: -16.3750057220459
    9. '()</' → logprob: -16.6250057220459
    10. '()}' → logprob: -16.8750057220459

Token 75: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27373403310775757
    2. '
' → logprob: -1.8987340927124023
    3. ' for' → logprob: -3.2737340927124023
    4. 'h' → logprob: -3.6487340927124023
    5. 'if' → logprob: -4.023734092712402
    6. 's' → logprob: -6.148734092712402
    7. '<|end|>' → logprob: -6.398734092712402
    8. '[' → logprob: -6.523734092712402
    9. ' if' → logprob: -7.148734092712402
    10. ' 
' → logprob: -8.523734092712402

Token 76: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.057062286883592606
    2. ' _' → logprob: -4.057062149047852
    3. ' color' → logprob: -4.432062149047852
    4. ' x' → logprob: -4.557062149047852
    5. ' c' → logprob: -5.182062149047852
    6. ' ' → logprob: -5.682062149047852
    7. 'i' → logprob: -5.932062149047852
    8. '_' → logprob: -6.557062149047852
    9. ' val' → logprob: -7.432062149047852
    10. ' col' → logprob: -7.682062149047852

Token 77: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06506744772195816
    2. 'in' → logprob: -2.8150675296783447
    3. ',' → logprob: -5.815067291259766
    4. ' ' → logprob: -9.315067291259766
    5. ',in' → logprob: -11.440067291259766
    6. ' ,' → logprob: -12.065067291259766
    7. '```' → logprob: -14.065067291259766
    8. '	in' → logprob: -14.065067291259766
    9. 'In' → logprob: -14.565067291259766
    10. 'range' → logprob: -14.815067291259766

Token 78: ' col' (ID: 996)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.2738252878189087
    2. 'color' → logprob: -1.5238252878189087
    3. 'val' → logprob: -1.6488252878189087
    4. 'col' → logprob: -2.773825168609619
    5. 'value' → logprob: -2.773825168609619
    6. 'num' → logprob: -3.773825168609619
    7. 'v' → logprob: -3.773825168609619
    8. 'c' → logprob: -3.773825168609619
    9. ' val' → logprob: -3.773825168609619
    10. ' color' → logprob: -3.898825168609619

Token 79: ' in' (ID: 306)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.002366966800764203
    2. ',' → logprob: -6.50236701965332
    3. ' in' → logprob: -7.25236701965332
    4. ' or' → logprob: -9.87736701965332
    5. '_or' → logprob: -11.00236701965332
    6. ',color' → logprob: -11.25236701965332
    7. 'r' → logprob: -11.37736701965332
    8. 'ur' → logprob: -11.62736701965332
    9. '(or' → logprob: -12.00236701965332
    10. 'o' → logprob: -12.25236701965332

Token 80: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0001439459010725841
    2. 'enumer' → logprob: -8.875144004821777
    3. '(en' → logprob: -12.750144004821777
    4. ' ' → logprob: -14.625144004821777
    5. ' en' → logprob: -15.875144004821777
    6. '```' → logprob: -16.00014305114746
    7. 'umer' → logprob: -16.87514305114746
    8. ' ' → logprob: -16.87514305114746
    9. 'Enumer' → logprob: -16.87514305114746
    10. ' enumer' → logprob: -17.50014305114746

Token 81: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.002355072181671858
    2. '(' → logprob: -6.627355098724365
    3. 'h' → logprob: -7.002355098724365
    4. ' (' → logprob: -9.502354621887207
    5. '(range' → logprob: -11.502354621887207
    6. ' h' → logprob: -11.627354621887207
    7. '(H' → logprob: -12.377354621887207
    8. '(en' → logprob: -12.377354621887207
    9. '(l' → logprob: -12.627354621887207
    10. '(s' → logprob: -13.002354621887207

Token 82: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0025785129982978106
    2. 'e' → logprob: -6.0025787353515625
    3. 'u' → logprob: -9.752578735351562
    4. 'h' → logprob: -11.627578735351562
    5. 'ues' → logprob: -12.002578735351562
    6. '   ' → logprob: -12.377578735351562
    7. 'eu' → logprob: -12.752578735351562
    8. 'ae' → logprob: -13.127578735351562
    9. ')' → logprob: -13.502578735351562
    10. '  ' → logprob: -13.627578735351562

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023119196703191847
    2. ':' → logprob: -8.75023078918457
    3. ')' → logprob: -9.87523078918457
    4. ' ):' → logprob: -11.00023078918457
    5. '):
' → logprob: -12.62523078918457
    6. '():' → logprob: -15.00023078918457
    7. '}:' → logprob: -15.00023078918457
    8. ':)' → logprob: -15.75023078918457
    9. ',' → logprob: -16.00023078918457
    10. '):
' → logprob: -16.50023078918457

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48963049054145813
    2. ':' → logprob: -1.2396304607391357
    3. ' if' → logprob: -2.8646304607391357
    4. '<|end|>' → logprob: -3.8646304607391357
    5. ':
' → logprob: -4.989630699157715
    6. ' ' → logprob: -5.614630699157715
    7. 'if' → logprob: -6.614630699157715
    8. ' The' → logprob: -6.614630699157715
    9. ',' → logprob: -6.864630699157715
    10. 'If' → logprob: -7.364630699157715

Token 85: ' magic' (ID: 19745)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6973176002502441
    2. '   ' → logprob: -1.3223176002502441
    3. 'if' → logprob: -1.5723176002502441
    4. ' The' → logprob: -3.947317600250244
    5. 'The' → logprob: -5.072317600250244
    6. ' for' → logprob: -6.822317600250244
    7. ' final' → logprob: -7.322317600250244
    8. 'final' → logprob: -8.322317123413086
    9. 'If' → logprob: -8.822317123413086
    10. 'for' → logprob: -8.947317123413086

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14943674206733704
    2. '=' → logprob: -2.1494367122650146
    3. '   ' → logprob: -5.399436950683594
    4. 'if' → logprob: -5.524436950683594
    5. '_val' → logprob: -5.774436950683594
    6. ' ' → logprob: -6.149436950683594
    7. '=color' → logprob: -6.899436950683594
    8. 'color' → logprob: -6.899436950683594
    9. '_color' → logprob: -7.149436950683594
    10. 'col' → logprob: -7.274436950683594

Token 87: ' sum' (ID: 4215)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -1.1563113927841187
    2. 'col' → logprob: -1.1563113927841187
    3. ' (' → logprob: -2.781311511993408
    4. 'The' → logprob: -3.031311511993408
    5. ' The' → logprob: -3.281311511993408
    6. '1' → logprob: -3.531311511993408
    7. '(' → logprob: -3.656311511993408
    8. '(col' → logprob: -3.906311511993408
    9. 'abs' → logprob: -4.156311511993408
    10. ' ' → logprob: -4.156311511993408

Token 88: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3127506971359253
    2. '(The' → logprob: -2.062750816345215
    3. '([' → logprob: -2.812750816345215
    4. '(h' → logprob: -3.062750816345215
    5. '((' → logprob: -5.062750816345215
    6. '(abs' → logprob: -5.187750816345215
    7. '(col' → logprob: -5.312750816345215
    8. '(x' → logprob: -5.437750816345215
    9. '(i' → logprob: -5.812750816345215
    10. '(c' → logprob: -5.937750816345215

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4235190153121948
    2. '(' → logprob: -2.0485191345214844
    3. 'The' → logprob: -2.0485191345214844
    4. ' The' → logprob: -2.2985191345214844
    5. ' col' → logprob: -2.9235191345214844
    6. 'col' → logprob: -2.9235191345214844
    7. ' ' → logprob: -3.0485191345214844
    8. 'abs' → logprob: -3.0485191345214844
    9. ' abs' → logprob: -3.6735191345214844
    10. ' (' → logprob: -3.6735191345214844

Token 90: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07248887419700623
    2. 'for' → logprob: -2.822488784790039
    3. ' if' → logprob: -4.697488784790039
    4. 'if' → logprob: -6.697488784790039
    5. '   ' → logprob: -9.822488784790039
    6. ' ' → logprob: -11.072488784790039
    7. '	for' → logprob: -11.447488784790039
    8. ']' → logprob: -12.072488784790039
    9. 'col' → logprob: -12.072488784790039
    10. ' col' → logprob: -12.322488784790039

Token 91: ' u' (ID: 337)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.987234890460968
    2. ' i' → logprob: -1.4872348308563232
    3. ' j' → logprob: -1.9872348308563232
    4. ' x' → logprob: -2.9872348308563232
    5. ' hue' → logprob: -2.9872348308563232
    6. ' idx' → logprob: -3.4872348308563232
    7. ' h' → logprob: -3.6122348308563232
    8. ' The' → logprob: -3.9872348308563232
    9. ' _' → logprob: -4.487235069274902
    10. ' ' → logprob: -4.487235069274902

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3826492428779602
    2. 'dx' → logprob: -1.7576491832733154
    3. 'x' → logprob: -2.1326491832733154
    4. ',' → logprob: -4.2576494216918945
    5. 'nd' → logprob: -5.3826494216918945
    6. 'idx' → logprob: -5.3826494216918945
    7. 'd' → logprob: -6.5076494216918945
    8. 'in' → logprob: -8.132649421691895
    9. 'dex' → logprob: -8.382649421691895
    10. ' ' → logprob: -8.882649421691895

Token 93: ' The' (ID: 623)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31083810329437256
    2. ' hue' → logprob: -1.8108381032943726
    3. 'h' → logprob: -2.810838222503662
    4. 'range' → logprob: -3.435838222503662
    5. ' The' → logprob: -5.310838222503662
    6. 'The' → logprob: -6.310838222503662
    7. ' ' → logprob: -6.873338222503662
    8. '[' → logprob: -7.185838222503662
    9. '(range' → logprob: -7.748338222503662
    10. ' [' → logprob: -8.123337745666504

Token 94: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -4.656383680412546e-05
    2. 'ist' → logprob: -10.000046730041504
    3. 'int' → logprob: -15.750046730041504
    4. 'list' → logprob: -15.875046730041504
    5. '[' → logprob: -16.000045776367188
    6. 's' → logprob: -16.000045776367188
    7. 'st' → logprob: -16.375045776367188
    8. 'The' → logprob: -16.750045776367188
    9. 'h' → logprob: -17.125045776367188
    10. 'Set' → logprob: -17.250045776367188

Token 95: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0025202499236911535
    2. 'if' → logprob: -6.0025200843811035
    3. ' ' → logprob: -11.002520561218262
    4. '[:' → logprob: -11.252520561218262
    5. '[:-' → logprob: -12.377520561218262
    6. '[:]' → logprob: -12.752520561218262
    7. '   ' → logprob: -13.377520561218262
    8. '[' → logprob: -13.377520561218262
    9. '	if' → logprob: -13.502520561218262
    10. '[::-' → logprob: -13.752520561218262

Token 96: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.015475565567612648
    2. 'u' → logprob: -4.390475749969482
    3. ' col' → logprob: -5.890475749969482
    4. ' ' → logprob: -9.640475273132324
    5. 'col' → logprob: -10.265475273132324
    6. '(u' → logprob: -10.265475273132324
    7. ' abs' → logprob: -11.015475273132324
    8. ' (' → logprob: -11.140475273132324
    9. '	u' → logprob: -11.765475273132324
    10. '  ' → logprob: -12.390475273132324

Token 97: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7110443115234375
    2. ' ==' → logprob: -1.2110443115234375
    3. '!=' → logprob: -2.5860443115234375
    4. ' !=' → logprob: -2.9610443115234375
    5. '<' → logprob: -3.3360443115234375
    6. '>' → logprob: -4.0860443115234375
    7. ' >' → logprob: -4.2110443115234375
    8. ' <' → logprob: -4.7110443115234375
    9. '>=' → logprob: -5.5860443115234375
    10. ' ' → logprob: -6.7110443115234375

Token 98: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.28119343519210815
    2. 'col' → logprob: -1.406193494796753
    3. ' ' → logprob: -11.531193733215332
    4. ' -' → logprob: -11.656193733215332
    5. '-' → logprob: -12.406193733215332
    6. 'color' → logprob: -12.406193733215332
    7. '	col' → logprob: -12.781193733215332
    8. ' idx' → logprob: -13.031193733215332
    9. '0' → logprob: -13.031193733215332
    10. 'idx' → logprob: -13.406193733215332

Token 99: '-' (ID: 12)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.014568318612873554
    2. '])
' → logprob: -4.639568328857422
    3. ' ])' → logprob: -6.139568328857422
    4. '])+' → logprob: -6.764568328857422
    5. ' or' → logprob: -7.014568328857422
    6. '])-' → logprob: -8.264568328857422
    7. ' and' → logprob: -8.889568328857422
    8. ' ])
' → logprob: -9.014568328857422
    9. '])
' → logprob: -11.639568328857422
    10. '])

' → logprob: -11.764568328857422

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04070977121591568
    2. ' ' → logprob: -3.4157097339630127
    3. ' idx' → logprob: -6.040709972381592
    4. 'idx' → logprob: -6.165709972381592
    5. '2' → logprob: -6.415709972381592
    6. '3' → logprob: -8.040709495544434
    7. '0' → logprob: -8.540709495544434
    8. '-' → logprob: -8.790709495544434
    9. '+' → logprob: -10.040709495544434
    10. 'h' → logprob: -10.478209495544434

Token 101: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.008573204278945923
    2. ' or' → logprob: -5.133573055267334
    3. ' ])' → logprob: -6.258573055267334
    4. '])
' → logprob: -7.633573055267334
    5. ' and' → logprob: -9.758573532104492
    6. '])+' → logprob: -9.883573532104492
    7. 'or' → logprob: -10.133573532104492
    8. ')' → logprob: -10.883573532104492
    9. '])-' → logprob: -10.883573532104492
    10. ' ])
' → logprob: -11.633573532104492

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5571905374526978
    2. ')' → logprob: -1.6821905374526978
    3. ' if' → logprob: -2.807190418243408
    4. '<|end|>' → logprob: -2.807190418243408
    5. ' ' → logprob: -3.182190418243408
    6. '+' → logprob: -3.307190418243408
    7. ')
' → logprob: -4.932190418243408
    8. ' 
' → logprob: -5.182190418243408
    9. ' +' → logprob: -5.307190418243408
    10. '<|end|>' → logprob: -5.557190418243408

Token 103: ' final' (ID: 1721)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3711392283439636
    2. ' if' → logprob: -1.7461392879486084
    3. 'if' → logprob: -2.9961392879486084
    4. 'final' (adapté à ' final') → logprob: -3.1211392879486084
    5. ' final' → logprob: -3.4961392879486084
    6. 'The' → logprob: -4.996139049530029
    7. ' The' → logprob: -5.871139049530029
    8. ' magic' → logprob: -8.371139526367188
    9. ' ' → logprob: -8.496139526367188
    10. ' for' → logprob: -8.496139526367188

Token 104: 'Ans' (ID: 36478)
  Prédit: 'Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -5.512236498361744e-07
    2. 'ans' → logprob: -15.250000953674316
    3. '_ans' → logprob: -16.25
    4. 'An' → logprob: -16.5
    5. ' Ans' → logprob: -17.25
    6. '*' → logprob: -17.375
    7. 'Answer' → logprob: -17.875
    8. '=' → logprob: -18.0
    9. 'A' → logprob: -18.625
    10. ' *=' → logprob: -18.75

Token 105: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.04102012515068054
    2. '*=' → logprob: -3.291020154953003
    3. ' =' → logprob: -6.166019916534424
    4. '=' → logprob: -7.416019916534424
    5. '*' → logprob: -8.666020393371582
    6. ' ' → logprob: -10.291020393371582
    7. ' <<=' → logprob: -10.791020393371582
    8. ' *' → logprob: -10.791020393371582
    9. ' +=' → logprob: -11.541020393371582
    10. ' ' → logprob: -11.916020393371582

Token 106: ' (' (ID: 350)
  Prédit: '(final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.055662404745817184
    2. ' (' → logprob: -3.8056623935699463
    3. 'final' → logprob: -3.8056623935699463
    4. ' final' → logprob: -4.680662631988525
    5. '(max' → logprob: -8.555662155151367
    6. '(' → logprob: -8.805662155151367
    7. '(int' → logprob: -11.805662155151367
    8. 'max' → logprob: -12.180662155151367
    9. '(f' → logprob: -12.305662155151367
    10. ' max' → logprob: -13.055662155151367

Token 107: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.032095011323690414
    2. ' final' → logprob: -3.657094955444336
    3. '(final' → logprob: -5.157094955444336
    4. '   ' → logprob: -11.907094955444336
    5. ' (' → logprob: -12.032094955444336
    6. '(' → logprob: -12.907094955444336
    7. ')' → logprob: -14.032094955444336
    8. '	final' → logprob: -14.282094955444336
    9. ' ' → logprob: -14.407094955444336
    10. '  ' → logprob: -14.907094955444336

Token 108: 'Ans' (ID: 36478)
  Prédit: 'Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -4.320199877838604e-07
    2. 'An' → logprob: -15.625
    3. 'ans' → logprob: -16.625
    4. ' Ans' → logprob: -16.75
    5. 'Answer' → logprob: -17.375
    6. '_ans' → logprob: -17.875
    7. '*' → logprob: -18.375
    8. 'A' → logprob: -18.5
    9. 'Ansi' → logprob: -19.25
    10. ' ans' → logprob: -20.125

Token 109: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05576546490192413
    2. '*' → logprob: -2.930765390396118
    3. '*(' → logprob: -7.055765628814697
    4. ' ' → logprob: -11.805765151977539
    5. ')' → logprob: -12.430765151977539
    6. ' *(' → logprob: -12.555765151977539
    7. ' ' → logprob: -13.305765151977539
    8. '**' → logprob: -14.555765151977539
    9. '*f' → logprob: -14.680765151977539
    10. ' *
' → logprob: -15.180765151977539

Token 110: ' magic' (ID: 19745)
  Prédit: 'magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'magic' → logprob: -0.8070662617683411
    2. '(m' → logprob: -1.1820662021636963
    3. '(max' → logprob: -1.9320662021636963
    4. '(' → logprob: -3.1820662021636963
    5. 'max' → logprob: -3.3070662021636963
    6. ' magic' → logprob: -4.807066440582275
    7. 'pow' → logprob: -5.057066440582275
    8. '(pow' → logprob: -5.807066440582275
    9. ' (' → logprob: -6.182066440582275
    10. '2' → logprob: -6.307066440582275

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001818812801502645
    2. ')%' → logprob: -6.626818656921387
    3. ' )' → logprob: -7.751818656921387
    4. '+' → logprob: -10.251818656921387
    5. '%' → logprob: -11.251818656921387
    6. ' +' → logprob: -12.501818656921387
    7. '-' → logprob: -12.876818656921387
    8. '   ' → logprob: -13.001818656921387
    9. ' if' → logprob: -13.376818656921387
    10. ')
' → logprob: -13.876818656921387

Token 112: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.189702570438385
    2. ' %' → logprob: -2.6897025108337402
    3. ' if' → logprob: -3.6897025108337402
    4. '*' → logprob: -3.8147025108337402
    5. '<|end|>' → logprob: -4.06470251083374
    6. 'if' → logprob: -4.31470251083374
    7. ' *' → logprob: -4.68970251083374
    8. '+' → logprob: -5.06470251083374
    9. ' or' → logprob: -5.56470251083374
    10. ' ' → logprob: -5.93970251083374

Token 113: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.008204375393688679
    2. '(' → logprob: -5.258204460144043
    3. '10' → logprob: -6.008204460144043
    4. '998' → logprob: -7.633204460144043
    5. '1' → logprob: -11.008204460144043
    6. ' ' → logprob: -13.133204460144043
    7. '((' → logprob: -13.383204460144043
    8. ' (' → logprob: -13.633204460144043
    9. '(int' → logprob: -14.633204460144043
    10. 'int' → logprob: -14.633204460144043

Token 114: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.07770757377147675
    2. '(' → logprob: -2.827707529067993
    3. '10' → logprob: -4.327707767486572
    4. '998' → logprob: -6.077707767486572
    5. '1' → logprob: -9.577707290649414
    6. '((' → logprob: -10.702707290649414
    7. ' (' → logprob: -11.202707290649414
    8. ' ' → logprob: -11.952707290649414
    9. 'int' → logprob: -12.202707290649414
    10. '(int' → logprob: -12.327707290649414

Token 115: '000' (ID: 1302)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.08183550089597702
    2. '000' → logprob: -3.8318355083465576
    3. '3' → logprob: -3.9568355083465576
    4. '7' → logprob: -4.2068352699279785
    5. '009' → logprob: -4.3318352699279785
    6. '003' → logprob: -5.5818352699279785
    7. '007' → logprob: -6.3318352699279785
    8. '6' → logprob: -6.8318352699279785
    9. '4' → logprob: -7.0818352699279785
    10. '09' → logprob: -7.4568352699279785

Token 116: '000' (ID: 1302)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02832781709730625
    2. '000' → logprob: -3.778327703475952
    3. '007' → logprob: -5.778327941894531
    4. '9' → logprob: -6.653327941894531
    5. '07' → logprob: -7.528327941894531
    6. '3' → logprob: -9.653327941894531
    7. '+' → logprob: -10.153327941894531
    8. '19' → logprob: -10.903327941894531
    9. '0' → logprob: -11.653327941894531
    10. ' ' → logprob: -12.403327941894531

Token 117: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -5.1928003813372925e-05
    2. '07' → logprob: -10.375051498413086
    3. '9' → logprob: -11.375051498413086
    4. ' ' → logprob: -11.875051498413086
    5. '007' → logprob: -14.250051498413086
    6. '0' → logprob: -14.625051498413086
    7. '+' → logprob: -14.875051498413086
    8. '6' → logprob: -15.000051498413086
    9. '```' → logprob: -16.250051498413086
    10. '8' → logprob: -16.562551498413086

Token 118: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011173540260642767
    2. '  ' → logprob: -7.87611722946167
    3. 'The' → logprob: -8.001117706298828
    4. '<|end|>' → logprob: -9.126117706298828
    5. '
' → logprob: -9.251117706298828
    6. '    
' → logprob: -10.126117706298828
    7. ')' → logprob: -10.251117706298828
    8. '[' → logprob: -10.501117706298828
    9. ' ' → logprob: -10.751117706298828
    10. ' if' → logprob: -11.751117706298828

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45663508772850037
    2. 'The' → logprob: -1.5816351175308228
    3. 'if' → logprob: -1.8316351175308228
    4. 'for' → logprob: -8.081635475158691
    5. '```' → logprob: -8.081635475158691
    6. ' if' → logprob: -9.581635475158691
    7. ' The' → logprob: -10.581635475158691
    8. 'print' → logprob: -11.331635475158691
    9. 'l' → logprob: -11.581635475158691
    10. 'If' → logprob: -11.706635475158691

Token 120: ' for' (ID: 395)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.34982728958129883
    2. 'if' → logprob: -1.2248272895812988
    3. '   ' → logprob: -7.224827289581299
    4. 'for' (adapté à ' for') → logprob: -8.09982681274414
    5. 'try' → logprob: -8.34982681274414
    6. 'import' → logprob: -10.59982681274414
    7. 'the' → logprob: -10.72482681274414
    8. 'from' → logprob: -11.09982681274414
    9. 'If' → logprob: -11.47482681274414
    10. ' The' → logprob: -11.72482681274414

Token 121: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.49133574962615967
    2. 'i' → logprob: -1.4913357496261597
    3. ' j' → logprob: -2.741335868835449
    4. 'j' → logprob: -3.491335868835449
    5. 'u' → logprob: -4.116335868835449
    6. ' u' → logprob: -4.116335868835449
    7. ' idx' → logprob: -4.491335868835449
    8. 'x' → logprob: -5.491335868835449
    9. 'idx' → logprob: -5.741335868835449
    10. 'k' → logprob: -6.616335868835449

Token 122: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24067805707454681
    2. 'in' → logprob: -1.615678071975708
    3. ',' → logprob: -4.615677833557129
    4. 'n' → logprob: -5.365677833557129
    5. 'nd' → logprob: -8.615677833557129
    6. ' ' → logprob: -9.365677833557129
    7. 'range' → logprob: -9.365677833557129
    8. 'd' → logprob: -9.490677833557129
    9. 'dx' → logprob: -10.365677833557129
    10. ' range' → logprob: -10.740677833557129

Token 123: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9496521949768066
    2. 'v' → logprob: -1.0746521949768066
    3. 'val' → logprob: -2.1996521949768066
    4. ' val' → logprob: -2.9496521949768066
    5. 'x' → logprob: -3.8246521949768066
    6. ' v' → logprob: -3.9496521949768066
    7. ' u' → logprob: -3.9496521949768066
    8. 'value' → logprob: -4.449652194976807
    9. 'e' → logprob: -4.949652194976807
    10. 'item' → logprob: -5.699652194976807

Token 124: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06199883669614792
    2. ' in' → logprob: -2.8119988441467285
    3. ',' → logprob: -10.43699836730957
    4. 'enumer' → logprob: -14.93699836730957
    5. '	in' → logprob: -15.06199836730957
    6. ',v' → logprob: -15.18699836730957
    7. ' ' → logprob: -15.18699836730957
    8. '_in' → logprob: -15.43699836730957
    9. ',in' → logprob: -15.56199836730957
    10. 'In' → logprob: -16.31199836730957

Token 125: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.04858850687742233
    2. 'enumer' → logprob: -3.048588514328003
    3. '(en' → logprob: -14.423588752746582
    4. ' ' → logprob: -16.048587799072266
    5. 'en' → logprob: -16.048587799072266
    6. '(' → logprob: -16.548587799072266
    7. ' en' → logprob: -16.798587799072266
    8. 'enum' → logprob: -16.923587799072266
    9. ' enumer' → logprob: -16.923587799072266
    10. '```' → logprob: -17.298587799072266

Token 126: '(The' (ID: 137693)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.028004350140690804
    2. '(The' → logprob: -3.7780044078826904
    3. ' The' → logprob: -5.778004169464111
    4. 'h' → logprob: -6.903004169464111
    5. 'range' → logprob: -7.528004169464111
    6. 'the' → logprob: -10.77800464630127
    7. ' range' → logprob: -11.02800464630127
    8. '(h' → logprob: -11.52800464630127
    9. ' ' → logprob: -11.90300464630127
    10. '(range' → logprob: -12.15300464630127

Token 127: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: 0.0
    2. 'ist' → logprob: -17.875
    3. 'Lists' → logprob: -18.375
    4. 'list' → logprob: -18.625
    5. 'Lis' → logprob: -18.75
    6. ' List' → logprob: -19.25
    7. '_list' → logprob: -20.125
    8. 'Liste' → logprob: -20.375
    9. 'Lst' → logprob: -20.5
    10. 'L' → logprob: -20.75

Token 128: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0054024881683290005
    2. '):' → logprob: -5.255402565002441
    3. ' ):
' → logprob: -9.505402565002441
    4. '():
' → logprob: -10.005402565002441
    5. ':' → logprob: -11.005402565002441
    6. '):
' → logprob: -11.255402565002441
    7. ':
' → logprob: -11.505402565002441
    8. '[::-' → logprob: -12.505402565002441
    9. '):

' → logprob: -13.380402565002441
    10. '   ' → logprob: -13.505402565002441

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007334837224334478
    2. ':' → logprob: -5.5073347091674805
    3. '<|end|>' → logprob: -6.2573347091674805
    4. ' if' → logprob: -7.8823347091674805
    5. ':
' → logprob: -8.13233470916748
    6. 'if' → logprob: -8.13233470916748
    7. '```' → logprob: -9.00733470916748
    8. '<|end|>' → logprob: -10.00733470916748
    9. ' that' → logprob: -10.50733470916748
    10. ',' → logprob: -10.75733470916748

Token 130: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9030000567436218
    2. ' if' → logprob: -1.1530001163482666
    3. 'if' (adapté à ' if') → logprob: -1.2780001163482666
    4. '   ' → logprob: -8.777999877929688
    5. '	if' → logprob: -8.902999877929688
    6. '```' → logprob: -10.652999877929688
    7. 'If' → logprob: -10.902999877929688
    8. '<|end|>' → logprob: -11.777999877929688
    9. '    ' → logprob: -12.402999877929688
    10. '[' → logprob: -12.777999877929688

Token 131: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.019043108448386192
    2. ' v' → logprob: -4.01904296875
    3. '   ' → logprob: -7.51904296875
    4. '       ' → logprob: -9.26904296875
    5. '           ' → logprob: -9.64404296875
    6. 'col' → logprob: -10.26904296875
    7. 'i' → logprob: -10.39404296875
    8. 'The' → logprob: -10.51904296875
    9. ' col' → logprob: -10.76904296875
    10. '(v' → logprob: -11.01904296875

Token 132: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39837759733200073
    2. ' ==' → logprob: -1.1483776569366455
    3. '==-' → logprob: -4.523377418518066
    4. '<' → logprob: -7.773377418518066
    5. '>' → logprob: -10.773377418518066
    6. ' <' → logprob: -10.773377418518066
    7. '=' → logprob: -10.898377418518066
    8. '!=' → logprob: -10.898377418518066
    9. ' ' → logprob: -11.023377418518066
    10. '==
' → logprob: -11.148377418518066

Token 133: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.33259493112564087
    2. '-' → logprob: -1.957594871520996
    3. ' col' → logprob: -2.082594871520996
    4. ' -' → logprob: -4.207594871520996
    5. '-col' → logprob: -6.957594871520996
    6. ' ' → logprob: -8.082594871520996
    7. '   ' → logprob: -8.957594871520996
    8. 'h' → logprob: -9.082594871520996
    9. 'color' → logprob: -9.082594871520996
    10. 'The' → logprob: -9.395094871520996

Token 134: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006035092286765575
    2. ':' → logprob: -5.881035327911377
    3. ' -' → logprob: -5.881035327911377
    4. ':
' → logprob: -8.256034851074219
    5. '   ' → logprob: -9.256034851074219
    6. '       ' → logprob: -11.256034851074219
    7. ' ' → logprob: -11.256034851074219
    8. '1' → logprob: -12.131034851074219
    9. '+' → logprob: -12.256034851074219
    10. '           ' → logprob: -12.381034851074219

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005707762204110622
    2. '-' → logprob: -5.755707740783691
    3. ' ' → logprob: -6.755707740783691
    4. '2' → logprob: -6.880707740783691
    5. 'col' → logprob: -8.880707740783691
    6. 'idx' → logprob: -9.755707740783691
    7. ' col' → logprob: -10.755707740783691
    8. ' -' → logprob: -11.005707740783691
    9. 'i' → logprob: -11.005707740783691
    10. 'h' → logprob: -11.255707740783691

Token 136: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26106375455856323
    2. ':' → logprob: -1.511063814163208
    3. '           ' → logprob: -4.886063575744629
    4. ' and' → logprob: -7.636063575744629
    5. 'The' → logprob: -7.761063575744629
    6. '):
' → logprob: -8.636063575744629
    7. ':The' → logprob: -8.636063575744629
    8. '():
' → logprob: -9.886063575744629
    9. ' The' → logprob: -10.011063575744629
    10. ',' → logprob: -10.261063575744629

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015732256695628166
    2. 'The' → logprob: -4.390732288360596
    3. ' The' → logprob: -5.765732288360596
    4. ':' → logprob: -11.140731811523438
    5. '       ' → logprob: -11.140731811523438
    6. '	       ' → logprob: -11.765731811523438
    7. '               ' → logprob: -11.765731811523438
    8. '          ' → logprob: -11.765731811523438
    9. ' and' → logprob: -12.140731811523438
    10. ':
' → logprob: -12.140731811523438

Token 138: ' The' (ID: 623)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' (adapté à ' The') → logprob: -0.001158438972197473
    2. ' The' → logprob: -7.251158237457275
    3. '           ' → logprob: -7.876158237457275
    4. '               ' → logprob: -9.626158714294434
    5. '   ' → logprob: -13.751158714294434
    6. 'the' → logprob: -14.751158714294434
    7. '       ' → logprob: -14.876158714294434
    8. '	The' → logprob: -15.751158714294434
    9. '              ' → logprob: -16.001157760620117
    10. ' ' → logprob: -16.501157760620117

Token 139: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: 0.0
    2. 'ist' → logprob: -18.625
    3. '_list' → logprob: -20.625
    4. 'Lists' → logprob: -21.375
    5. '_List' → logprob: -21.875
    6. ' List' → logprob: -22.5
    7. 'list' → logprob: -22.625
    8. 'The' → logprob: -22.875
    9. '	List' → logprob: -23.5
    10. 'Lis' → logprob: -23.75

Token 140: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5577775128767826e-06
    2. '.pop' → logprob: -12.500005722045898
    3. '.insert' → logprob: -14.125005722045898
    4. '=' → logprob: -15.125005722045898
    5. '[' → logprob: -15.250005722045898
    6. '.append' → logprob: -16.1250057220459
    7. '[index' → logprob: -16.3750057220459
    8. ' =' → logprob: -17.0000057220459
    9. '[idx' → logprob: -17.2500057220459
    10. '.__' → logprob: -17.8750057220459

Token 141: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16033592820167542
    2. ' =' → logprob: -1.910335898399353
    3. ')' → logprob: -10.160335540771484
    4. ']' → logprob: -10.285335540771484
    5. '+=' → logprob: -11.785335540771484
    6. '=-' → logprob: -11.785335540771484
    7. ']=' → logprob: -12.410335540771484
    8. '=None' → logprob: -13.160335540771484
    9. ')=' → logprob: -13.285335540771484
    10. '=user' → logprob: -13.410335540771484

Token 142: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889749854803085
    2. ' =' → logprob: -2.578897476196289
    3. '+=' → logprob: -12.328897476196289
    4. '=-' → logprob: -13.328897476196289
    5. ' +=' → logprob: -15.578897476196289
    6. '=None' → logprob: -15.578897476196289
    7. ',' → logprob: -15.953897476196289
    8. '-=' → logprob: -15.953897476196289
    9. '=user' → logprob: -16.07889747619629
    10. ' ' → logprob: -16.07889747619629

Token 143: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017350474081467837
    2. ' ' → logprob: -8.750173568725586
    3. '2' → logprob: -11.875173568725586
    4. '+' → logprob: -12.625173568725586
    5. '   ' → logprob: -13.000173568725586
    6. '0' → logprob: -14.125173568725586
    7. '100' → logprob: -14.625173568725586
    8. '  ' → logprob: -14.750173568725586
    9. 'col' → logprob: -15.250173568725586
    10. '3' → logprob: -15.875173568725586

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.76759916334413e-05
    2. ' ' → logprob: -10.250077247619629
    3. '2' → logprob: -11.000077247619629
    4. '100' → logprob: -11.125077247619629
    5. '3' → logprob: -12.625077247619629
    6. '0' → logprob: -13.000077247619629
    7. 'N' → logprob: -13.125077247619629
    8. '+' → logprob: -13.750077247619629
    9. '10' → logprob: -14.875077247619629
    10. '   ' → logprob: -15.000077247619629

Token 145: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10620853304862976
    2. 'The' → logprob: -2.856208562850952
    3. ' The' → logprob: -3.481208562850952
    4. '<|end|>' → logprob: -4.731208324432373
    5. ' print' → logprob: -7.106208324432373
    6. '   ' → logprob: -7.231208324432373
    7. ')' → logprob: -7.356208324432373
    8. 'final' → logprob: -8.106208801269531
    9. 'return' → logprob: -8.356208801269531
    10. '#' → logprob: -8.731208801269531

Token 147: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006293982733041048
    2. 'break' → logprob: -8.875629425048828
    3. '<|end|>' → logprob: -9.000629425048828
    4. ' break' → logprob: -9.250629425048828
    5. '		' → logprob: -9.500629425048828
    6. '   ' → logprob: -9.750629425048828
    7. '       ' → logprob: -10.000629425048828
    8. '               ' → logprob: -11.125629425048828
    9. '	break' → logprob: -11.125629425048828
    10. '<|end|>' → logprob: -11.375629425048828

Token 148: ' pas' (ID: 2173)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2524941563606262
    2. '<|end|>' → logprob: -2.5024940967559814
    3. 'break' → logprob: -2.7524940967559814
    4. ' final' → logprob: -3.6274940967559814
    5. 'final' → logprob: -4.2524943351745605
    6. ' The' → logprob: -4.2524943351745605
    7. '           ' → logprob: -5.0024943351745605
    8. '    ' → logprob: -5.7524943351745605
    9. ' if' → logprob: -6.1274943351745605
    10. '#' → logprob: -6.1274943351745605

Token 149: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: ' else' (ID: 1203)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.350721150636673
    2. ' break' → logprob: -1.2257211208343506
    3. 'continue' → logprob: -7.72572135925293
    4. ' ' → logprob: -8.10072135925293
    5. 'd' → logprob: -8.22572135925293
    6. ' continue' → logprob: -9.10072135925293
    7. 'return' → logprob: -9.35072135925293
    8. 'b' → logprob: -9.60072135925293
    9. 'comment' → logprob: -9.60072135925293
    10. 'place' → logprob: -9.72572135925293

Token 151: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7292960286140442
    2. ' continue' → logprob: -1.3542959690093994
    3. ' #' → logprob: -2.3542959690093994
    4. 'continue' → logprob: -3.2292959690093994
    5. ' break' → logprob: -4.1042962074279785
    6. '   ' → logprob: -4.2292962074279785
    7. ':' → logprob: -4.3542962074279785
    8. ' if' → logprob: -4.4792962074279785
    9. 'break' → logprob: -4.4792962074279785
    10. 'if' → logprob: -4.4792962074279785

Token 153: ' flag' (ID: 9641)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5123807191848755
    2. 'continue' → logprob: -1.5123807191848755
    3. ' break' → logprob: -2.512380599975586
    4. ' continue' → logprob: -2.762380599975586
    5. 'elif' → logprob: -3.762380599975586
    6. 'if' → logprob: -5.262380599975586
    7. 'pass' → logprob: -5.762380599975586
    8. '#' → logprob: -6.512380599975586
    9. ' if' → logprob: -6.887380599975586
    10. '```' → logprob: -7.762380599975586

Token 154: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' juste' (ID: 31553)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04034597426652908
    2. ' The' → logprob: -4.915346145629883
    3. 'break' → logprob: -5.040346145629883
    4. ' break' → logprob: -5.415346145629883
    5. '       ' → logprob: -5.415346145629883
    6. '#' → logprob: -5.665346145629883
    7. '            ' → logprob: -5.915346145629883
    8. '<|end|>' → logprob: -6.040346145629883
    9. ' continue' → logprob: -6.165346145629883
    10. 'The' → logprob: -6.790346145629883

Token 156: ' '' (ID: 461)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.13957524299621582
    2. ' continue' → logprob: -2.389575242996216
    3. 'break' → logprob: -3.639575242996216
    4. '           ' → logprob: -5.139575004577637
    5. 'continue' → logprob: -5.514575004577637
    6. '   ' → logprob: -6.264575004577637
    7. '       ' → logprob: -8.764575004577637
    8. '               ' → logprob: -9.139575004577637
    9. ' pass' → logprob: -9.889575004577637
    10. ' The' → logprob: -10.014575004577637

Token 157: 'return' (ID: 1034)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6951996088027954
    2. 'continue' → logprob: -1.0701996088027954
    3. 'break' → logprob: -2.570199489593506
    4. ' break' → logprob: -2.570199489593506
    5. 'pass' → logprob: -6.445199489593506
    6. '   ' → logprob: -6.820199489593506
    7. ' The' → logprob: -7.320199489593506
    8. ' pass' → logprob: -8.070199966430664
    9. '```' → logprob: -8.320199966430664
    10. 'The' → logprob: -8.570199966430664

Token 158: ''' (ID: 6)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: ' l' (ID: 305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12615899741649628
    2. '<|end|>' → logprob: -2.2511589527130127
    3. '       ' → logprob: -4.751159191131592
    4. '   ' → logprob: -6.251159191131592
    5. '               ' → logprob: -7.126159191131592
    6. '<|end|>' → logprob: -7.376159191131592
    7. '            ' → logprob: -8.376158714294434
    8. '          ' → logprob: -8.501158714294434
    9. '```' → logprob: -8.751158714294434
    10. ' ' → logprob: -9.251158714294434

Token 160: ''équ' (ID: 170507)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21670641005039215
    2. 'break' → logprob: -2.4667065143585205
    3. ' continue' → logprob: -3.2167065143585205
    4. '```' → logprob: -3.3417065143585205
    5. 'ine' → logprob: -4.591706275939941
    6. ' break' → logprob: -4.841706275939941
    7. 'if' → logprob: -4.966706275939941
    8. 'inue' → logprob: -6.591706275939941
    9. 'Continue' → logprob: -6.591706275939941
    10. 'e' → logprob: -6.841706275939941

Token 161: 'ivalent' (ID: 19253)
  Prédit: 'ilibre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilibre' → logprob: -0.23045530915260315
    2. 'ivalent' → logprob: -2.8554553985595703
    3. 'alité' → logprob: -3.1054553985595703
    4. 'ile' → logprob: -3.4804553985595703
    5. 'ation' → logprob: -4.10545539855957
    6. 'ale' → logprob: -4.60545539855957
    7. 'ité' → logprob: -4.85545539855957
    8. 'ilibr' → logprob: -4.98045539855957
    9. 'ival' → logprob: -5.10545539855957
    10. 'ivalence' → logprob: -5.85545539855957

Token 162: ' ici' (ID: 27994)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012355184182524681
    2. '<|end|>' → logprob: -4.512355327606201
    3. '<|end|>' → logprob: -8.387354850769043
    4. '               ' → logprob: -8.387354850769043
    5. '		' → logprob: -8.887354850769043
    6. '```' → logprob: -9.137354850769043
    7. '       ' → logprob: -9.387354850769043
    8. '            ' → logprob: -9.637354850769043
    9. 'continue' → logprob: -9.762354850769043
    10. '   ' → logprob: -9.762354850769043

Token 163: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001272258348762989
    2. '       ' → logprob: -7.001272201538086
    3. '               ' → logprob: -9.126272201538086
    4. 'continue' → logprob: -9.626272201538086
    5. 'break' → logprob: -10.001272201538086
    6. '   ' → logprob: -10.376272201538086
    7. '<|end|>' → logprob: -10.876272201538086
    8. 'else' → logprob: -11.001272201538086
    9. '```' → logprob: -11.126272201538086
    10. '		' → logprob: -11.251272201538086

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007682943833060563
    2. '       ' → logprob: -7.875768184661865
    3. '               ' → logprob: -8.750768661499023
    4. '		' → logprob: -10.250768661499023
    5. '   ' → logprob: -10.375768661499023
    6. ' break' → logprob: -10.500768661499023
    7. 'continue' → logprob: -10.500768661499023
    8. 'break' → logprob: -10.625768661499023
    9. '<|end|>' → logprob: -10.625768661499023
    10. '	       ' → logprob: -11.500768661499023

Token 165: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4841850996017456
    2. 'break' (adapté à ' break') → logprob: -0.9841850996017456
    3. ' break' → logprob: -5.109185218811035
    4. 'continue' → logprob: -5.859185218811035
    5. '       ' → logprob: -7.484185218811035
    6. '   ' → logprob: -7.609185218811035
    7. '               ' → logprob: -10.609185218811035
    8. ' continue' → logprob: -10.734185218811035
    9. 'return' → logprob: -10.984185218811035
    10. '	break' → logprob: -10.984185218811035

Token 166: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 168: '(final' (ID: 14111)
  Prédit: '(final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(final' → logprob: -0.07896227389574051
    2. '(' → logprob: -2.5789623260498047
    3. '(f' → logprob: -9.578962326049805
    4. '((' → logprob: -13.578962326049805
    5. 'final' → logprob: -14.203962326049805
    6. '(`' → logprob: -14.703962326049805
    7. '('' → logprob: -15.078962326049805
    8. '("("' → logprob: -15.828962326049805
    9. '(fin' → logprob: -16.078962326049805
    10. ' final' → logprob: -16.203962326049805

Token 169: 'Ans' (ID: 36478)
  Prédit: 'Ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ans' → logprob: -6.704273118884885e-07
    2. 'An' → logprob: -14.625000953674316
    3. 'Answer' → logprob: -15.625000953674316
    4. 's' → logprob: -17.375
    5. ' Ans' → logprob: -17.5
    6. 'ans' → logprob: -18.25
    7. 'A' → logprob: -18.375
    8. 't' → logprob: -19.375
    9. 'Ast' → logprob: -19.875
    10. '_ans' → logprob: -20.0

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')`' → logprob: -16.250001907348633
    4. '))' → logprob: -16.625001907348633
    5. ')}' → logprob: -18.750001907348633
    6. ')
' → logprob: -18.750001907348633
    7. ')#' → logprob: -18.875001907348633
    8. '')' → logprob: -18.875001907348633
    9. '),' → logprob: -19.500001907348633
    10. '```' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 168
Tokens correctement prédits (1ère position, stricte): 62
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 114
Précision stricte (1ère position): 36.90%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 67.86%
================================================================================
