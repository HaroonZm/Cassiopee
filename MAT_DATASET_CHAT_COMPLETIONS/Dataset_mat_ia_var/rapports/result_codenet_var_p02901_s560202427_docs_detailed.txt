================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/python

from itertools import *
import sys

#################### Library ####################
# (No library functions are defined in the original code,
# but this section is reserved for utility/helper functions.)

#################### Naive ####################
# (No naive implementation is provided in the original script.)

#################### Process ####################

def read_input():
    """
    Reads the input data from stdin.

    Returns:
        tuple: A tuple (N, v) where:
            - N (int): Number of items (universally indexed from 1 to N)
            - v (list of tuples): Each tuple (a, flag) represents:
                a (int): The cost associated with selecting the subset
                flag (int): Bitmask representing the items included in the subset
    Input format:
        The first line contains two integers N and M.
        The next M blocks each describe a subset (set, cost) as:
            - a b   : a is the cost of the subset, b is not used
            - cs... : space-separated list of integer item indices included in the subset
    """
    [N, M] = map(int, raw_input().split())
    v = []
    for k in range(M):
        a, b = map(int, raw_input().split())
        # Read the next line: indices of elements in the current subset
        cs = [int(e) for e in raw_input().split()]
        # Compute the bitmask 'flag' with bits set for each element in cs
        flag = reduce(lambda x, y: x | (1 << (y - 1)), cs, 0)
        v.append((a, flag))
    return (N, v)

def proc():
    """
    Solves the problem using Dynamic Programming (DP) with bitmasks.

    For N items and M available sets with costs, it calculates the minimal
    total cost required to cover all items by selecting from the provided sets.

    Returns:
        int: The minimal cost to cover all N items, or -1 if not possible.
    """
    N, v = read_input()
    L = 1 << N  # Total possible combinations of N items (as bitmask)
    memo = [10 ** 9] * L  # DP array: minimal cost for each subset (bitmask)
    memo[0] = 0  # Base case: cost to cover no items is 0

    # Iterate through all possible subsets (bitmask n)
    for n in range(L - 1):
        # Try using each available set (a: cost, flag: items provided)
        for a, flag in v:
            n1 = n | flag  # New subset after using this set
            # Take the minimal cost: previous cost to create n + cost of this set
            memo[n1] = min(memo[n1], memo[n] + a)

    # If it's impossible to cover all items, return -1
    if memo[L - 1] == 10 ** 9:
        return -1
    else:
        return memo[L - 1]

#################### Main ####################

# Run the process and print result
print proc()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/python' (ID: 56900)
  Prédit: '/env'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/env' → logprob: -0.3339137136936188
    2. '/' → logprob: -2.083913803100586
    3. '/python' → logprob: -2.083913803100586
    4. '/bin' → logprob: -3.583913803100586
    5. '/bash' → logprob: -4.958913803100586
    6. 'python' → logprob: -8.708913803100586
    7. '/b' → logprob: -11.083913803100586
    8. '/usr' → logprob: -11.958913803100586
    9. 'env' → logprob: -12.458913803100586
    10. ' /' → logprob: -12.833913803100586

Token 4: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.48417791724205017
    2. '3' → logprob: -1.9841779470443726
    3. '  
' → logprob: -2.484177827835083
    4. ' 
' → logprob: -2.984177827835083
    5. '\' → logprob: -3.359177827835083
    6. 'import' → logprob: -3.609177827835083
    7. '```' → logprob: -4.109178066253662
    8. 'newline' → logprob: -5.109178066253662
    9. '
' → logprob: -5.234178066253662
    10. '' → logprob: -5.484178066253662

Token 5: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.09333060681819916
    2. 'import' → logprob: -2.7183306217193604
    3. '3' → logprob: -5.218330383300781
    4. '\' → logprob: -5.468330383300781
    5. '```' → logprob: -5.718330383300781
    6. ' 
' → logprob: -5.968330383300781
    7. '
' → logprob: -6.218330383300781
    8. '  
' → logprob: -6.343330383300781
    9. '-import' → logprob: -6.593330383300781
    10. '-' → logprob: -7.593330383300781

Token 6: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.10835757106542587
    2. ' sys' → logprob: -2.6083576679229736
    3. ' flask' → logprob: -4.2333574295043945
    4. ' math' → logprob: -5.6083574295043945
    5. ' collections' → logprob: -5.7333574295043945
    6. 'os' → logprob: -6.3583574295043945
    7. ' ' → logprob: -6.8583574295043945
    8. ' subprocess' → logprob: -7.3583574295043945
    9. ' import' → logprob: -7.6083574295043945
    10. ' system' → logprob: -7.8583574295043945

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023300565779209137
    2. 'import' → logprob: -3.7733006477355957
    3. '	import' → logprob: -10.773300170898438
    4. ' ' → logprob: -11.398300170898438
    5. '.import' → logprob: -11.398300170898438
    6. ' im' → logprob: -12.898300170898438
    7. ' .' → logprob: -12.898300170898438
    8. '.' → logprob: -13.273300170898438
    9. '_import' → logprob: -13.648300170898438
    10. ' itertools' → logprob: -13.648300170898438

Token 8: ' *
' (ID: 2099)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.5616382956504822
    2. ' product' → logprob: -1.686638355255127
    3. ' cycle' → logprob: -2.186638355255127
    4. ' combinations' → logprob: -2.936638355255127
    5. ' group' → logprob: -3.186638355255127
    6. 'com' → logprob: -4.311638355255127
    7. ' count' → logprob: -4.811638355255127
    8. 'per' → logprob: -5.186638355255127
    9. ' chain' → logprob: -5.811638355255127
    10. 'product' → logprob: -5.811638355255127

Token 9: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02774721570312977
    2. '(' → logprob: -4.15274715423584
    3. 'from' → logprob: -5.40274715423584
    4. 'im' → logprob: -5.90274715423584
    5. ' import' → logprob: -6.52774715423584
    6. 'count' → logprob: -6.77774715423584
    7. '.' → logprob: -8.02774715423584
    8. 'com' → logprob: -8.52774715423584
    9. 'def' → logprob: -8.65274715423584
    10. 'product' → logprob: -8.90274715423584

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.30404800176620483
    2. ' os' → logprob: -1.4290480613708496
    3. ' re' → logprob: -4.42904806137085
    4. ' itertools' → logprob: -4.92904806137085
    5. ' math' → logprob: -6.42904806137085
    6. ' ' → logprob: -6.80404806137085
    7. ' functools' → logprob: -8.554047584533691
    8. ' random' → logprob: -8.929047584533691
    9. 'sys' → logprob: -9.054047584533691
    10. ' json' → logprob: -9.429047584533691

Token 11: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5037358403205872
    2. '<|end|>' → logprob: -2.1287357807159424
    3. '
' → logprob: -2.3787357807159424
    4. 'import' → logprob: -2.7537357807159424
    5. ' ' → logprob: -4.0037360191345215
    6. '#' → logprob: -4.1287360191345215
    7. '\' → logprob: -4.3787360191345215
    8. 'def' → logprob: -4.7537360191345215
    9. 'print' → logprob: -4.8787360191345215
    10. '.' → logprob: -4.8787360191345215

Token 12: '################' (ID: 5152)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.543377161026001
    2. 'd' → logprob: -1.543377161026001
    3. 'for' → logprob: -2.168377161026001
    4. 'def' → logprob: -3.168377161026001
    5. 'n' → logprob: -3.918377161026001
    6. 'i' → logprob: -4.668376922607422
    7. 'a' → logprob: -5.668376922607422
    8. 'c' → logprob: -5.918376922607422
    9. 'p' → logprob: -6.043376922607422
    10. '#' → logprob: -6.168376922607422

Token 13: '####' (ID: 1509)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.057036396116018295
    2. 'def' → logprob: -3.6820363998413086
    3. '####' → logprob: -4.057036399841309
    4. '#####' → logprob: -4.932036399841309
    5. '###' → logprob: -5.807036399841309
    6. '######' → logprob: -7.432036399841309
    7. '##' → logprob: -7.807036399841309
    8. '=' → logprob: -8.557036399841309
    9. 'import' → logprob: -8.682036399841309
    10. ' #' → logprob: -8.682036399841309

Token 14: ' Library' (ID: 16583)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3255985975265503
    2. 'def' → logprob: -1.3255985975265503
    3. ' 
' → logprob: -5.95059871673584
    4. ' ' → logprob: -6.07559871673584
    5. '\' → logprob: -6.20059871673584
    6. 'import' → logprob: -6.95059871673584
    7. '#####' → logprob: -7.45059871673584
    8. ' 

' → logprob: -7.82559871673584
    9. '####' → logprob: -7.82559871673584
    10. '\n' → logprob: -8.07559871673584

Token 15: ' ################' (ID: 93769)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7445849180221558
    2. '_' → logprob: -1.4945849180221558
    3. 'import' → logprob: -2.1195850372314453
    4. ' =' → logprob: -2.8695850372314453
    5. '.' → logprob: -3.2445850372314453
    6. ' ' → logprob: -3.9945850372314453
    7. '(' → logprob: -4.119585037231445
    8. 'from' → logprob: -4.744585037231445
    9. '=' → logprob: -5.244585037231445
    10. '```' → logprob: -5.369585037231445

Token 16: '####
' (ID: 198418)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5611732602119446
    2. '_' → logprob: -1.6861732006072998
    3. ' ' → logprob: -2.1861732006073
    4. '#' → logprob: -2.9361732006073
    5. 'import' → logprob: -3.4361732006073
    6. '.' → logprob: -4.936173439025879
    7. '###' → logprob: -4.936173439025879
    8. ' =' → logprob: -5.311173439025879
    9. '```' → logprob: -5.561173439025879
    10. ' 
' → logprob: -5.686173439025879

Token 17: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023626625537872314
    2. 'class' → logprob: -4.148626804351807
    3. '#' → logprob: -5.398626804351807
    4. '################' → logprob: -6.648626804351807
    5. 'import' → logprob: -7.648626804351807
    6. ' def' → logprob: -8.273626327514648
    7. '############' → logprob: -8.398626327514648
    8. '
' → logprob: -8.648626327514648
    9. ' ' → logprob: -8.773626327514648
    10. '_' → logprob: -9.523626327514648

Token 18: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5966500043869019
    2. 'def' → logprob: -1.0966500043869019
    3. ' 
' → logprob: -2.9716501235961914
    4. ' def' → logprob: -3.0966501235961914
    5. '#' → logprob: -5.221650123596191
    6. 'class' → logprob: -5.596650123596191
    7. '_' → logprob: -5.971650123596191
    8. 'd' → logprob: -6.346650123596191
    9. ' 

' → logprob: -6.596650123596191
    10. '  
' → logprob: -6.596650123596191

Token 19: 'No' (ID: 3160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2575199007987976
    2. 'def' → logprob: -1.6325199604034424
    3. ' )' → logprob: -4.632519721984863
    4. ',' → logprob: -5.382519721984863
    5. '#' → logprob: -5.882519721984863
    6. 'define' → logprob: -6.007519721984863
    7. ' def' → logprob: -6.257519721984863
    8. 'from' → logprob: -7.007519721984863
    9. 'class' → logprob: -7.507519721984863
    10. '...' → logprob: -7.507519721984863

Token 20: ' library' (ID: 11282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8135656118392944
    2. 'def' → logprob: -1.9385656118392944
    3. ' code' → logprob: -2.313565731048584
    4. ' ' → logprob: -2.813565731048584
    5. ' need' → logprob: -3.688565731048584
    6. ' def' → logprob: -3.688565731048584
    7. ' )' → logprob: -3.938565731048584
    8. ' more' → logprob: -3.938565731048584
    9. ' newline' → logprob: -4.188565731048584
    10. '()' → logprob: -4.438565731048584

Token 21: ' functions' (ID: 9964)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5055764317512512
    2. ' code' → logprob: -1.1305763721466064
    3. ' functions' → logprob: -3.0055763721466064
    4. ' lines' → logprob: -5.8805766105651855
    5. ' imports' → logprob: -6.0055766105651855
    6. 'functions' → logprob: -6.1305766105651855
    7. 'code' → logprob: -6.5055766105651855
    8. ' function' → logprob: -6.6305766105651855
    9. ' import' → logprob: -6.7555766105651855
    10. ' usage' → logprob: -6.7555766105651855

Token 22: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6173648238182068
    2. ')' → logprob: -1.1173648834228516
    3. ' used' → logprob: -2.6173648834228516
    4. ' defined' → logprob: -3.6173648834228516
    5. 'def' → logprob: -4.617364883422852
    6. ' were' → logprob: -4.867364883422852
    7. 'are' → logprob: -5.367364883422852
    8. ' will' → logprob: -5.492364883422852
    9. 'defined' → logprob: -6.117364883422852
    10. ' have' → logprob: -7.617364883422852

Token 23: ' defined' (ID: 9113)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.7068052887916565
    2. ' defined' → logprob: -2.4568052291870117
    3. ' shown' → logprob: -2.8318052291870117
    4. ' provided' → logprob: -2.8318052291870117
    5. 'used' → logprob: -2.9568052291870117
    6. ' imported' → logprob: -3.4568052291870117
    7. 'defined' → logprob: -3.4568052291870117
    8. ' allowed' → logprob: -3.7068052291870117
    9. ' being' → logprob: -4.206805229187012
    10. 'shown' → logprob: -4.206805229187012

Token 24: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012502350145950913
    2. ' yet' → logprob: -7.626250267028809
    3. '#' → logprob: -8.251250267028809
    4. '################' → logprob: -9.001250267028809
    5. ' here' → logprob: -9.126250267028809
    6. '```' → logprob: -9.876250267028809
    7. ')

' → logprob: -10.626250267028809
    8. '.' → logprob: -10.626250267028809
    9. ')
' → logprob: -11.001250267028809
    10. ' at' → logprob: -11.126250267028809

Token 25: ' the' (ID: 290)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.17063850164413452
    2. 'this' → logprob: -2.0456385612487793
    3. 'the' → logprob: -4.295638561248779
    4. ' the' → logprob: -4.295638561248779
    5. ' code' → logprob: -8.670638084411621
    6. ' ' → logprob: -10.170638084411621
    7. '```' → logprob: -10.545638084411621
    8. 't' → logprob: -10.795638084411621
    9. 'code' → logprob: -10.920638084411621
    10. ' your' → logprob: -12.170638084411621

Token 26: ' original' (ID: 4756)
  Prédit: 'provided'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'provided' → logprob: -1.5391076803207397
    2. 'code' → logprob: -1.9141076803207397
    3. ' snippet' → logprob: -2.1641077995300293
    4. ' provided' → logprob: -2.2891077995300293
    5. ' code' → logprob: -2.4141077995300293
    6. 'visible' → logprob: -2.5391077995300293
    7. 'following' → logprob: -2.9141077995300293
    8. 'library' → logprob: -2.9141077995300293
    9. ' following' → logprob: -3.9141077995300293
    10. 'snippet' → logprob: -4.039107799530029

Token 27: ' code' (ID: 3490)
  Prédit: ' code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.03766661137342453
    2. 'code' → logprob: -3.9126665592193604
    3. ')' → logprob: -4.9126667976379395
    4. ' script' → logprob: -5.1626667976379395
    5. ' file' → logprob: -6.9126667976379395
    6. '#' → logprob: -7.4126667976379395
    7. 'script' → logprob: -7.4126667976379395
    8. 'file' → logprob: -8.037666320800781
    9. ' snippet' → logprob: -8.287666320800781
    10. ')
' → logprob: -8.662666320800781

Token 28: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014090436743572354
    2. '#' → logprob: -7.12640905380249
    3. ')

' → logprob: -7.87640905380249
    4. ')
' → logprob: -8.751408576965332
    5. 'def' → logprob: -11.251408576965332
    6. '```' → logprob: -11.501408576965332
    7. '################' → logprob: -12.001408576965332
    8. '###' → logprob: -12.126408576965332
    9. ')#' → logprob: -12.626408576965332
    10. ',' → logprob: -12.626408576965332

Token 29: '#' (ID: 2)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.2228798270225525
    2. ' so' → logprob: -2.4728798866271973
    3. ')' → logprob: -2.9728798866271973
    4. '#' → logprob: -3.2228798866271973
    5. 'but' → logprob: -4.347879886627197
    6. ' only' → logprob: -5.972879886627197
    7. ' 
' → logprob: -6.222879886627197
    8. '
' → logprob: -6.722879886627197
    9. 'so' → logprob: -6.722879886627197
    10. 'def' → logprob: -6.972879886627197

Token 30: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1471463441848755
    2. ' but' → logprob: -1.3971463441848755
    3. ' so' → logprob: -1.5221463441848755
    4. '#' → logprob: -1.6471463441848755
    5. 'def' → logprob: -5.522146224975586
    6. ' 
' → logprob: -5.647146224975586
    7. 'but' → logprob: -5.772146224975586
    8. 'so' → logprob: -6.022146224975586
    9. ' only' → logprob: -6.272146224975586
    10. ' )' → logprob: -6.397146224975586

Token 31: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.24148344993591309
    2. ' this' → logprob: -2.116483449935913
    3. ' it' → logprob: -3.366483449935913
    4. ' a' → logprob: -5.116483688354492
    5. ' we' → logprob: -5.241483688354492
    6. ' you' → logprob: -5.241483688354492
    7. ' they' → logprob: -5.366483688354492
    8. 'the' → logprob: -5.491483688354492
    9. ' all' → logprob: -5.616483688354492
    10. ' itertools' → logprob: -5.866483688354492

Token 32: ' section' (ID: 7102)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8176009654998779
    2. ' is' → logprob: -0.9426009654998779
    3. ' ' → logprob: -3.317600965499878
    4. ' could' → logprob: -3.817600965499878
    5. ' can' → logprob: -3.942600965499878
    6. ' section' → logprob: -3.942600965499878
    7. ' seems' → logprob: -4.192601203918457
    8. ' appears' → logprob: -4.692601203918457
    9. ' might' → logprob: -4.942601203918457
    10. ' part' → logprob: -5.192601203918457

Token 33: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.036407470703125
    2. ' continues' → logprob: -1.536407470703125
    3. ')' → logprob: -1.661407470703125
    4. ' could' → logprob: -3.161407470703125
    5. ' seems' → logprob: -3.161407470703125
    6. ' can' → logprob: -3.411407470703125
    7. ' )' → logprob: -3.661407470703125
    8. ' contains' → logprob: -4.286407470703125
    9. ' appears' → logprob: -4.286407470703125
    10. ' might' → logprob: -4.411407470703125

Token 34: ' reserved' (ID: 9924)
  Prédit: ' empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' empty' → logprob: -1.3184462785720825
    2. ' where' → logprob: -1.9434462785720825
    3. ' reserved' → logprob: -2.193446159362793
    4. ' left' → logprob: -2.193446159362793
    5. ' presumably' → logprob: -2.568446159362793
    6. ' likely' → logprob: -2.943446159362793
    7. 'reserved' → logprob: -3.818446159362793
    8. ' available' → logprob: -3.943446159362793
    9. ' usually' → logprob: -4.068446159362793
    10. ' intended' → logprob: -4.068446159362793

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02424640581011772
    2. 'for' → logprob: -3.7742464542388916
    3. ' ' → logprob: -7.3992462158203125
    4. ')' → logprob: -8.274246215820312
    5. ' )' → logprob: -9.149246215820312
    6. ' to' → logprob: -11.899246215820312
    7. '<|end|>' → logprob: -12.524246215820312
    8. '    ' → logprob: -12.649246215820312
    9. '  ' → logprob: -12.774246215820312
    10. '#' → logprob: -13.149246215820312

Token 36: ' utility' (ID: 24779)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5354322791099548
    2. ' user' → logprob: -2.0354323387145996
    3. ' future' → logprob: -2.7854323387145996
    4. ' any' → logprob: -2.9104323387145996
    5. ' additional' → logprob: -2.9104323387145996
    6. ' custom' → logprob: -3.0354323387145996
    7. ' library' → logprob: -3.5354323387145996
    8. ' your' → logprob: -4.1604323387146
    9. ' the' → logprob: -5.1604323387146
    10. ' functions' → logprob: -5.4104323387146

Token 37: '/helper' (ID: 175030)
  Prédit: ' functions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functions' → logprob: -0.004818257410079241
    2. 'functions' → logprob: -5.504818439483643
    3. ' ' → logprob: -8.254817962646484
    4. 's' → logprob: -8.504817962646484
    5. ' code' → logprob: -9.129817962646484
    6. '_functions' → logprob: -9.879817962646484
    7. '
' → logprob: -10.129817962646484
    8. 'def' → logprob: -10.504817962646484
    9. ' function' → logprob: -11.254817962646484
    10. ' 
' → logprob: -11.629817962646484

Token 38: ' functions' (ID: 9964)
  Prédit: ' functions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functions' → logprob: -0.008460205048322678
    2. 'functions' → logprob: -4.88346004486084
    3. 's' → logprob: -8.00846004486084
    4. ' ' → logprob: -8.50846004486084
    5. '_functions' → logprob: -8.88346004486084
    6. ' code' → logprob: -10.00846004486084
    7. 'def' → logprob: -10.13346004486084
    8. ' 

' → logprob: -10.50846004486084
    9. '
' → logprob: -10.75846004486084
    10. ' 
' → logprob: -11.00846004486084

Token 39: '.)

' (ID: 16803)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002627662615850568
    2. '#' → logprob: -8.750263214111328
    3. ')
' → logprob: -10.000263214111328
    4. ' )' → logprob: -10.125263214111328
    5. ')

' → logprob: -11.750263214111328
    6. 'def' → logprob: -12.500263214111328
    7. ')#' → logprob: -13.000263214111328
    8. '
' → logprob: -13.500263214111328
    9. '```' → logprob: -14.375263214111328
    10. '###' → logprob: -14.625263214111328

Token 40: '################' (ID: 5152)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6800175309181213
    2. '\n' → logprob: -1.5550174713134766
    3. 'def' → logprob: -2.1800174713134766
    4. '#' → logprob: -2.5550174713134766
    5. '<|end|>' → logprob: -3.3050174713134766
    6. '<|end|>' → logprob: -4.180017471313477
    7. '

' → logprob: -4.305017471313477
    8. '\' → logprob: -4.305017471313477
    9. 'class' → logprob: -5.805017471313477
    10. '#!/' → logprob: -6.055017471313477

Token 41: '####' (ID: 1509)
  Prédit: '####'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '####' → logprob: -0.2898727059364319
    2. 'def' → logprob: -1.539872646331787
    3. '#' → logprob: -4.664872646331787
    4. '############' → logprob: -4.789872646331787
    5. '###' → logprob: -5.289872646331787
    6. '####
' → logprob: -5.664872646331787
    7. '#####' → logprob: -5.914872646331787
    8. 'if' → logprob: -6.164872646331787
    9. 'class' → logprob: -6.414872646331787
    10. ' def' → logprob: -6.539872646331787

Token 42: ' Na' (ID: 6888)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2492438554763794
    2. 'def' → logprob: -1.6242438554763794
    3. ' Main' → logprob: -1.9992438554763794
    4. 'Main' → logprob: -1.9992438554763794
    5. ' 
' → logprob: -3.24924373626709
    6. 'if' → logprob: -3.74924373626709
    7. '
' → logprob: -4.12424373626709
    8. 'main' → logprob: -4.12424373626709
    9. 'class' → logprob: -4.37424373626709
    10. ' #' → logprob: -4.37424373626709

Token 43: 'ive' (ID: 585)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9734157919883728
    2. 'me' → logprob: -1.3484158515930176
    3. 'ive' → logprob: -1.5984158515930176
    4. 't' → logprob: -2.7234158515930176
    5. 'ï' → logprob: -3.7234158515930176
    6. 'm' → logprob: -3.9734158515930176
    7. 'mes' → logprob: -4.598415851593018
    8. 'def' → logprob: -5.098415851593018
    9. 've' → logprob: -5.223415851593018
    10. '#' → logprob: -5.223415851593018

Token 44: ' ################' (ID: 93769)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1626018285751343
    2. 'def' → logprob: -2.287601947784424
    3. 'Search' → logprob: -2.412601947784424
    4. ' def' → logprob: -2.787601947784424
    5. 'Solution' → logprob: -2.912601947784424
    6. ' approach' → logprob: -3.037601947784424
    7. '_solution' → logprob: -3.162601947784424
    8. 'Solver' → logprob: -3.287601947784424
    9. 'Appro' → logprob: -3.412601947784424
    10. ' solution' → logprob: -3.912601947784424

Token 45: '####
' (ID: 198418)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008528522215783596
    2. ' def' → logprob: -5.383528709411621
    3. '#' → logprob: -6.633528709411621
    4. '_' → logprob: -7.133528709411621
    5. '############' → logprob: -7.508528709411621
    6. '####' → logprob: -8.258528709411621
    7. '################' → logprob: -8.258528709411621
    8. 'class' → logprob: -9.008528709411621
    9. '```' → logprob: -9.133528709411621
    10. '###' → logprob: -9.758528709411621

Token 46: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03548998013138771
    2. 'd' → logprob: -3.660490036010742
    3. '
' → logprob: -5.660490036010742
    4. '#' → logprob: -5.660490036010742
    5. '\' → logprob: -6.910490036010742
    6. 'class' → logprob: -8.035490036010742
    7. 'de' → logprob: -8.160490036010742
    8. ' 
' → logprob: -8.535490036010742
    9. '

' → logprob: -9.285490036010742
    10. ' def' → logprob: -9.785490036010742

Token 47: ' (' (ID: 350)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6246480345726013
    2. 'def' → logprob: -1.624648094177246
    3. ' d' → logprob: -2.124648094177246
    4. 'd' → logprob: -2.124648094177246
    5. ' class' → logprob: -4.624648094177246
    6. ' 
' → logprob: -5.499648094177246
    7. ' ' → logprob: -5.624648094177246
    8. ' de' → logprob: -5.749648094177246
    9. 'de' → logprob: -6.249648094177246
    10. ' #' → logprob: -6.499648094177246

Token 48: 'No' (ID: 3160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13013213872909546
    2. ')' → logprob: -2.8801321983337402
    3. ' )' → logprob: -3.5051321983337402
    4. ' def' → logprob: -3.6301321983337402
    5. '#' → logprob: -5.25513219833374
    6. 'class' → logprob: -7.75513219833374
    7. ' ' → logprob: -7.75513219833374
    8. 'd' → logprob: -7.88013219833374
    9. ' #' → logprob: -8.130131721496582
    10. 'de' → logprob: -8.255131721496582

Token 49: ' naive' (ID: 105687)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.03016350045800209
    2. 'code' → logprob: -5.155163288116455
    3. ' additional' → logprob: -5.405163288116455
    4. ' more' → logprob: -5.655163288116455
    5. ' functions' → logprob: -5.780163288116455
    6. ' further' → logprob: -6.030163288116455
    7. ' implementation' → logprob: -6.155163288116455
    8. ' naive' → logprob: -6.905163288116455
    9. 'def' → logprob: -7.155163288116455
    10. 'na' → logprob: -7.280163288116455

Token 50: ' implementation' (ID: 13847)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.2991330623626709
    2. ' implementation' → logprob: -1.799133062362671
    3. ' code' → logprob: -2.924133062362671
    4. ' functions' → logprob: -3.924133062362671
    5. '_' → logprob: -5.79913330078125
    6. ' ' → logprob: -6.04913330078125
    7. 'solution' → logprob: -6.04913330078125
    8. ' approach' → logprob: -6.17413330078125
    9. ' implementations' → logprob: -6.29913330078125
    10. '_solution' → logprob: -6.54913330078125

Token 51: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28829553723335266
    2. ' is' → logprob: -2.4132955074310303
    3. ' was' → logprob: -2.6632955074310303
    4. ' )' → logprob: -3.7882955074310303
    5. ' code' → logprob: -3.9132955074310303
    6. ' provided' → logprob: -4.413295745849609
    7. ' here' → logprob: -4.413295745849609
    8. '_' → logprob: -5.038295745849609
    9. ' implemented' → logprob: -5.913295745849609
    10. ' yet' → logprob: -6.163295745849609

Token 52: ' provided' (ID: 5181)
  Prédit: ' provided'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' provided' → logprob: -0.14468953013420105
    2. 'provided' → logprob: -3.0196895599365234
    3. ' given' → logprob: -3.1446895599365234
    4. 'present' → logprob: -4.144689559936523
    5. ' present' → logprob: -4.644689559936523
    6. ' shown' → logprob: -4.894689559936523
    7. 'given' → logprob: -5.894689559936523
    8. ' included' → logprob: -6.394689559936523
    9. 'shown' → logprob: -6.394689559936523
    10. ' defined' → logprob: -6.769689559936523

Token 53: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005107218865305185
    2. ' here' → logprob: -5.755107402801514
    3. ' )' → logprob: -6.880107402801514
    4. ' for' → logprob: -8.255106925964355
    5. ' yet' → logprob: -8.255106925964355
    6. ')

' → logprob: -8.755106925964355
    7. ' in' → logprob: -9.505106925964355
    8. '#' → logprob: -10.630106925964355
    9. ',' → logprob: -10.755106925964355
    10. ')
' → logprob: -11.505106925964355

Token 54: ' the' (ID: 290)
  Prédit: ' this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.2252548485994339
    2. ' the' → logprob: -1.8502548933029175
    3. 'this' → logprob: -3.475254774093628
    4. 'the' → logprob: -4.350255012512207
    5. ' code' → logprob: -7.850255012512207
    6. ' original' → logprob: -9.225255012512207
    7. ' ' → logprob: -10.100255012512207
    8. '#' → logprob: -10.600255012512207
    9. ' your' → logprob: -10.850255012512207
    10. '```' → logprob: -11.475255012512207

Token 55: ' original' (ID: 4756)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.16711007058620453
    2. ' original' → logprob: -2.542109966278076
    3. ' provided' → logprob: -3.792109966278076
    4. ' current' → logprob: -4.042109966278076
    5. ' given' → logprob: -4.792109966278076
    6. ' snippet' → logprob: -5.042109966278076
    7. 'original' → logprob: -5.667109966278076
    8. ' context' → logprob: -5.792109966278076
    9. 'code' → logprob: -5.917109966278076
    10. ' prompt' → logprob: -6.167109966278076

Token 56: ' script' (ID: 11713)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.027136096730828285
    2. ' ' → logprob: -4.152136325836182
    3. ' implementation' → logprob: -5.027136325836182
    4. '_code' → logprob: -5.652136325836182
    5. 'code' → logprob: -7.902136325836182
    6. ' solution' → logprob: -8.527135848999023
    7. ' section' → logprob: -9.027135848999023
    8. ' version' → logprob: -9.277135848999023
    9. ')' → logprob: -10.777135848999023
    10. 'implementation' → logprob: -10.777135848999023

Token 57: '.)

' (ID: 16803)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009026841260492802
    2. '
' → logprob: -5.509027004241943
    3. ' )' → logprob: -6.259027004241943
    4. ' yet' → logprob: -6.884027004241943
    5. '<|end|>' → logprob: -7.759027004241943
    6. ')

' → logprob: -7.884027004241943
    7. '

' → logprob: -8.134026527404785
    8. '#' → logprob: -8.384026527404785
    9. ',' → logprob: -8.884026527404785
    10. '<|end|>' → logprob: -8.884026527404785

Token 58: '################' (ID: 5152)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26670101284980774
    2. '################' → logprob: -1.7667009830474854
    3. 'class' → logprob: -3.7667009830474854
    4. '#' → logprob: -4.0167012214660645
    5. '
' → logprob: -5.2667012214660645
    6. 'if' → logprob: -5.5167012214660645
    7. '#!/' → logprob: -5.6417012214660645
    8. '

' → logprob: -6.1417012214660645
    9. '\' → logprob: -6.3917012214660645
    10. 'import' → logprob: -7.2667012214660645

Token 59: '####' (ID: 1509)
  Prédit: '####'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '####' → logprob: -0.09250621497631073
    2. 'def' → logprob: -2.592506170272827
    3. 'Optim' → logprob: -5.342506408691406
    4. 'Gre' → logprob: -5.717506408691406
    5. '###' → logprob: -7.467506408691406
    6. '####
' → logprob: -7.717506408691406
    7. 'Basic' → logprob: -7.967506408691406
    8. 'Fast' → logprob: -7.967506408691406
    9. 'Optimal' → logprob: -7.967506408691406
    10. '#####' → logprob: -8.092506408691406

Token 60: ' Process' (ID: 12482)
  Prédit: 'Optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optim' → logprob: -1.490007996559143
    2. 'Bit' → logprob: -1.865007996559143
    3. 'DP' → logprob: -2.1150078773498535
    4. 'Optimal' → logprob: -2.7400078773498535
    5. 'Main' → logprob: -3.2400078773498535
    6. ' Bit' → logprob: -3.2400078773498535
    7. 'Eff' → logprob: -3.3650078773498535
    8. 'Fast' → logprob: -3.7400078773498535
    9. ' Optim' → logprob: -3.8650078773498535
    10. 'dp' → logprob: -3.9900078773498535

Token 61: ' ################' (ID: 93769)
  Prédit: '################'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '################' → logprob: -0.35654380917549133
    2. ' ################' → logprob: -1.606543779373169
    3. 's' → logprob: -3.106543779373169
    4. 'def' → logprob: -3.731543779373169
    5. 'ing' → logprob: -5.231544017791748
    6. 'es' → logprob: -5.481544017791748
    7. '############' → logprob: -5.606544017791748
    8. '()' → logprob: -5.981544017791748
    9. '_' → logprob: -5.981544017791748
    10. 'ed' → logprob: -6.231544017791748

Token 62: '####' (ID: 1509)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2448694407939911
    2. ':' → logprob: -2.9948694705963135
    3. '#' → logprob: -3.2448694705963135
    4. '################' → logprob: -3.8698694705963135
    5. '###' → logprob: -4.244869232177734
    6. '####' → logprob: -4.244869232177734
    7. '.' → logprob: -4.244869232177734
    8. '_' → logprob: -4.369869232177734
    9. ' ################' → logprob: -4.744869232177734
    10. ' def' → logprob: -4.869869232177734

Token 63: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011090386658906937
    2. '#' → logprob: -4.761090278625488
    3. '
' → logprob: -7.261090278625488
    4. '\' → logprob: -7.386090278625488
    5. 'class' → logprob: -8.011090278625488
    6. ' def' → logprob: -8.761090278625488
    7. '_' → logprob: -8.886090278625488
    8. 'd' → logprob: -9.011090278625488
    9. 'import' → logprob: -9.511090278625488
    10. '################' → logprob: -9.636090278625488

Token 64: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03918522223830223
    2. 'if' → logprob: -3.9141852855682373
    3. 'class' → logprob: -4.664185047149658
    4. 'n' → logprob: -5.914185047149658
    5. 'for' → logprob: -6.289185047149658
    6. '#' → logprob: -6.789185047149658
    7. 'input' → logprob: -7.164185047149658
    8. 'N' → logprob: -7.289185047149658
    9. 'data' → logprob: -7.664185047149658
    10. 'a' → logprob: -8.289185523986816

Token 65: ' read' (ID: 1729)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.15093040466308594
    2. ' main' → logprob: -2.025930404663086
    3. ' solve' → logprob: -6.025930404663086
    4. ' parse' → logprob: -6.150930404663086
    5. ' ' → logprob: -6.900930404663086
    6. ' proces' → logprob: -7.775930404663086
    7. ' calculate' → logprob: -7.775930404663086
    8. 'process' → logprob: -7.775930404663086
    9. ' pro' → logprob: -8.775930404663086
    10. ' compute' → logprob: -8.900930404663086

Token 66: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.12734989821910858
    2. '_line' → logprob: -2.877349853515625
    3. '_data' → logprob: -3.627349853515625
    4. '_' → logprob: -3.877349853515625
    5. '()' → logprob: -5.127349853515625
    6. '_lines' → logprob: -5.627349853515625
    7. 'line' → logprob: -6.127349853515625
    8. '_in' → logprob: -6.877349853515625
    9. ' _' → logprob: -7.627349853515625
    10. '_inputs' → logprob: -7.752349853515625

Token 67: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004214094020426273
    2. ' ():' → logprob: -5.504214286804199
    3. '():
' → logprob: -9.3792142868042
    4. '()' → logprob: -10.6292142868042
    5. '(' → logprob: -11.1292142868042
    6. ' ()' → logprob: -11.8792142868042
    7. '_line' → logprob: -13.3792142868042
    8. '_data' → logprob: -14.1292142868042
    9. '_input' → logprob: -14.3792142868042
    10. ' (' → logprob: -14.7542142868042

Token 68: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14465539157390594
    2. '()' → logprob: -3.019655466079712
    3. '   ' → logprob: -3.269655466079712
    4. '():
' → logprob: -3.394655466079712
    5. ':' → logprob: -4.394655227661133
    6. ':
' → logprob: -7.894655227661133
    7. ' ():' → logprob: -8.019655227661133
    8. '(' → logprob: -8.144655227661133
    9. '
' → logprob: -9.019655227661133
    10. ' ' → logprob: -9.144655227661133

Token 69: ' """
' (ID: 7037)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8138328790664673
    2. '   ' → logprob: -1.1888328790664673
    3. ' return' → logprob: -1.9388328790664673
    4. ' lines' → logprob: -3.4388327598571777
    5. ' data' → logprob: -3.6888327598571777
    6. ' n' → logprob: -4.563832759857178
    7. ' sys' → logprob: -4.813832759857178
    8. ' s' → logprob: -4.938832759857178
    9. 'return' → logprob: -5.313832759857178
    10. 'line' → logprob: -5.438832759857178

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.53919517993927
    2. ' Reads' → logprob: -1.78919517993927
    3. 'Reads' → logprob: -2.0391950607299805
    4. ' reads' → logprob: -2.9141950607299805
    5. '       ' → logprob: -3.1641950607299805
    6. '"""' → logprob: -5.0391950607299805
    7. ' lines' → logprob: -5.7891950607299805
    8. 'Read' → logprob: -5.9141950607299805
    9. ' Read' → logprob: -6.1641950607299805
    10. ' """' → logprob: -6.2891950607299805

Token 71: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17413748800754547
    2. 'Reads' (adapté à ' Reads') → logprob: -2.424137592315674
    3. ' Reads' → logprob: -3.174137592315674
    4. ' reads' → logprob: -4.799137592315674
    5. '"""' → logprob: -5.174137592315674
    6. 'Read' → logprob: -5.299137592315674
    7. ' Read' → logprob: -5.799137592315674
    8. ' """' → logprob: -5.799137592315674
    9. ' lines' → logprob: -6.799137592315674
    10. ' input' → logprob: -7.799137592315674

Token 72: ' the' (ID: 290)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0411549806594849
    2. ' the' → logprob: -1.4161549806594849
    3. ' lines' → logprob: -1.4161549806594849
    4. ' a' → logprob: -2.6661548614501953
    5. ' from' → logprob: -3.6661548614501953
    6. '()' → logprob: -3.7911548614501953
    7. 'input' → logprob: -4.291154861450195
    8. '   ' → logprob: -4.791154861450195
    9. 'from' → logprob: -5.541154861450195
    10. 'the' → logprob: -5.916154861450195

Token 73: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06294333934783936
    2. 'input' → logprob: -3.187943458557129
    3. ' next' → logprob: -4.437943458557129
    4. ' standard' → logprob: -5.687943458557129
    5. ' number' → logprob: -6.687943458557129
    6. ' lines' → logprob: -7.187943458557129
    7. ' rest' → logprob: -7.312943458557129
    8. 'next' → logprob: -7.687943458557129
    9. ' data' → logprob: -8.062943458557129
    10. ' remaining' → logprob: -8.312943458557129

Token 74: ' data' (ID: 1238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3341706097126007
    2. ' from' → logprob: -2.2091705799102783
    3. '()' → logprob: -2.2091705799102783
    4. '():' → logprob: -4.334170818328857
    5. ' line' → logprob: -4.459170818328857
    6. ' lines' → logprob: -4.959170818328857
    7. ' data' → logprob: -5.334170818328857
    8. 'from' → logprob: -5.459170818328857
    9. '():
' → logprob: -6.084170818328857
    10. 'data' → logprob: -6.084170818328857

Token 75: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026398995891213417
    2. ' from' → logprob: -4.7763991355896
    3. 'from' → logprob: -5.0263991355896
    4. '(' → logprob: -5.2763991355896
    5. '()' → logprob: -6.1513991355896
    6. '():' → logprob: -6.5263991355896
    7. '```' → logprob: -8.151398658752441
    8. 'def' → logprob: -8.151398658752441
    9. '       ' → logprob: -8.401398658752441
    10. '():
' → logprob: -8.401398658752441

Token 76: ' stdin' (ID: 75143)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.061119820922613144
    2. ' stdin' → logprob: -3.436119794845581
    3. ' standard' → logprob: -4.43612003326416
    4. 'sys' → logprob: -4.68612003326416
    5. ' the' → logprob: -5.93612003326416
    6. 'stdin' → logprob: -6.81112003326416
    7. ' input' → logprob: -7.18612003326416
    8. ')' → logprob: -8.18612003326416
    9. '	sys' → logprob: -8.31112003326416
    10. '=sys' → logprob: -8.31112003326416

Token 77: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025324789807200432
    2. '()' → logprob: -4.150324821472168
    3. '.' → logprob: -5.650324821472168
    4. ')' → logprob: -5.775324821472168
    5. ' and' → logprob: -7.900324821472168
    6. '```' → logprob: -8.150324821472168
    7. '(' → logprob: -8.275324821472168
    8. ',' → logprob: -8.400324821472168
    9. '):' → logprob: -8.400324821472168
    10. '():' → logprob: -8.525324821472168

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008795426110737026
    2. '    
' → logprob: -7.625879764556885
    3. '
' → logprob: -8.875879287719727
    4. '```' → logprob: -9.000879287719727
    5. '"""' → logprob: -10.000879287719727
    6. '    ' → logprob: -10.625879287719727
    7. 'def' → logprob: -11.500879287719727
    8. ')' → logprob: -11.625879287719727
    9. '   
' → logprob: -11.875879287719727
    10. '  
' → logprob: -12.125879287719727

Token 79: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43373531103134155
    2. ' lines' → logprob: -1.3087353706359863
    3. 'lines' → logprob: -3.1837353706359863
    4. 'data' → logprob: -4.433735370635986
    5. 'input' → logprob: -4.933735370635986
    6. ' n' → logprob: -5.058735370635986
    7. ' data' → logprob: -5.183735370635986
    8. 'n' → logprob: -5.308735370635986
    9. ' input' → logprob: -5.683735370635986
    10. ' line' → logprob: -8.558734893798828

Token 80: ':
' (ID: 734)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.5702359676361084
    2. ':' → logprob: -1.9452359676361084
    3. '   ' → logprob: -1.9452359676361084
    4. ' :' → logprob: -2.3202359676361084
    5. ' data' → logprob: -2.6952359676361084
    6. 'data' → logprob: -2.9452359676361084
    7. ' list' → logprob: -3.1952359676361084
    8. ' ' → logprob: -3.1952359676361084
    9. '    ' → logprob: -3.3202359676361084
    10. ' tuple' → logprob: -3.5702359676361084

Token 81: '       ' (ID: 309)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03909294679760933
    2. '   ' → logprob: -3.789093017578125
    3. '    ' → logprob: -5.039093017578125
    4. '[]' → logprob: -5.664093017578125
    5. ' )' → logprob: -6.664093017578125
    6. ' ' → logprob: -7.039093017578125
    7. 'data' → logprob: -7.539093017578125
    8. ' list' → logprob: -7.914093017578125
    9. ' sys' → logprob: -8.039093017578125
    10. ' a' → logprob: -8.164093017578125

Token 82: ' tuple' (ID: 31311)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8794335722923279
    2. ' list' → logprob: -1.5044336318969727
    3. 'data' → logprob: -2.5044336318969727
    4. 'int' → logprob: -2.6294336318969727
    5. ' lines' → logprob: -3.1294336318969727
    6. ' sys' → logprob: -3.7544336318969727
    7. ' tuple' → logprob: -4.129433631896973
    8. 'lines' → logprob: -4.254433631896973
    9. 'str' → logprob: -4.254433631896973
    10. ' data' → logprob: -4.379433631896973

Token 83: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2433510273694992
    2. ' (' → logprob: -2.3683509826660156
    3. ' ' → logprob: -2.9933509826660156
    4. '   ' → logprob: -4.118350982666016
    5. '[' → logprob: -4.243350982666016
    6. '(
' → logprob: -4.868350982666016
    7. ',' → logprob: -4.868350982666016
    8. ':' → logprob: -4.993350982666016
    9. '<|end|>' → logprob: -5.368350982666016
    10. '    ' → logprob: -5.743350982666016

Token 84: ' A' (ID: 355)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1904253214597702
    2. '(int' → logprob: -2.815425395965576
    3. '(' → logprob: -2.940425395965576
    4. ' (
' → logprob: -4.190425395965576
    5. '   ' → logprob: -4.315425395965576
    6. '(len' → logprob: -5.440425395965576
    7. ' int' → logprob: -5.940425395965576
    8. '    ' → logprob: -6.065425395965576
    9. ' ()' → logprob: -6.190425395965576
    10. '(
' → logprob: -6.315425395965576

Token 85: ' tuple' (ID: 31311)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02544240839779377
    2. 'n' → logprob: -4.400442600250244
    3. ' space' → logprob: -5.400442600250244
    4. ' n' → logprob: -6.150442600250244
    5. 's' → logprob: -6.400442600250244
    6. ' )' → logprob: -7.025442600250244
    7. ')' → logprob: -7.275442600250244
    8. 'space' → logprob: -7.525442600250244
    9. ' tuple' → logprob: -7.650442600250244
    10. '_' → logprob: -7.900442600250244

Token 86: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6914216876029968
    2. ' (' → logprob: -1.3164217472076416
    3. '(
' → logprob: -2.6914217472076416
    4. ' of' → logprob: -3.1914217472076416
    5. ' (
' → logprob: -3.1914217472076416
    6. ' consisting' → logprob: -3.6914217472076416
    7. ' containing' → logprob: -4.3164215087890625
    8. '<|end|>' → logprob: -4.6914215087890625
    9. ':' → logprob: -5.0664215087890625
    10. '[' → logprob: -5.1914215087890625

Token 87: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4354538917541504
    2. ' n' → logprob: -1.8104538917541504
    3. 'int' → logprob: -1.8104538917541504
    4. ')' → logprob: -1.9354538917541504
    5. ' int' → logprob: -2.8104538917541504
    6. 'num' → logprob: -2.9354538917541504
    7. 'data' → logprob: -3.1854538917541504
    8. ' data' → logprob: -4.31045389175415
    9. 'input' → logprob: -4.43545389175415
    10. ' lines' → logprob: -4.43545389175415

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014704519708175212
    2. ' ,' → logprob: -9.000146865844727
    3. ',int' → logprob: -10.750146865844727
    4. ')' → logprob: -14.375146865844727
    5. 'int' → logprob: -14.750146865844727
    6. ',)' → logprob: -15.500146865844727
    7. ',
' → logprob: -15.625146865844727
    8. ',n' → logprob: -16.250146865844727
    9. ',num' → logprob: -16.375146865844727
    10. ',Integer' → logprob: -16.375146865844727

Token 89: ' v' (ID: 323)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.44610312581062317
    2. 'data' → logprob: -2.196103096008301
    3. ' points' → logprob: -4.008603096008301
    4. ' items' → logprob: -4.321103096008301
    5. ' lines' → logprob: -4.696103096008301
    6. ' edges' → logprob: -4.696103096008301
    7. ' sequences' → logprob: -4.821103096008301
    8. ' intervals' → logprob: -5.196103096008301
    9. ' M' → logprob: -5.321103096008301
    10. ' numbers' → logprob: -5.321103096008301

Token 90: ')' (ID: 8)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.2536044716835022
    2. ')' → logprob: -1.8786044120788574
    3. 'als' → logprob: -3.0036044120788574
    4. 'alue' → logprob: -4.003604412078857
    5. 'alid' → logprob: -6.753604412078857
    6. 'ector' → logprob: -7.628604412078857
    7. 's' → logprob: -7.628604412078857
    8. ',' → logprob: -8.128604888916016
    9. 'ectors' → logprob: -8.628604888916016
    10. '),' → logprob: -9.503604888916016

Token 91: ' where' (ID: 1919)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025085093453526497
    2. ')' → logprob: -4.775084972381592
    3. ',
' → logprob: -4.775084972381592
    4. '(' → logprob: -5.900084972381592
    5. '   ' → logprob: -5.900084972381592
    6. ' ,' → logprob: -7.400084972381592
    7. '(
' → logprob: -7.650084972381592
    8. ':' → logprob: -8.40008544921875
    9. '[' → logprob: -8.52508544921875
    10. ' ' → logprob: -9.27508544921875

Token 92: ':
' (ID: 734)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.0562104731798172
    2. '    ' → logprob: -3.556210517883301
    3. 'N' → logprob: -4.306210517883301
    4. '   ' → logprob: -5.431210517883301
    5. ' ' → logprob: -5.931210517883301
    6. 'n' → logprob: -6.306210517883301
    7. ' n' → logprob: -6.431210517883301
    8. ' the' → logprob: -7.431210517883301
    9. ')' → logprob: -8.1812105178833
    10. '  ' → logprob: -8.3062105178833

Token 93: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8325870037078857
    2. '   ' → logprob: -1.2075870037078857
    3. ' N' → logprob: -2.0825870037078857
    4. 'N' → logprob: -2.0825870037078857
    5. '           ' → logprob: -5.207587242126465
    6. 'n' → logprob: -5.957587242126465
    7. '```' → logprob: -5.957587242126465
    8. '    
' → logprob: -6.957587242126465
    9. 'int' → logprob: -6.957587242126465
    10. '    ' → logprob: -7.207587242126465

Token 94: ' -' (ID: 533)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03727401793003082
    2. ' N' → logprob: -3.412274122238159
    3. 'int' → logprob: -6.16227388381958
    4. '   ' → logprob: -6.78727388381958
    5. ' int' → logprob: -9.162274360656738
    6. 'n' → logprob: -9.537274360656738
    7. '           ' → logprob: -9.537274360656738
    8. '       ' → logprob: -10.412274360656738
    9. '```' → logprob: -10.537274360656738
    10. '-' (adapté à ' -') → logprob: -10.787274360656738

Token 95: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5254054665565491
    2. ' N' → logprob: -0.9004054665565491
    3. 'int' → logprob: -6.275405406951904
    4. ' int' → logprob: -8.275405883789062
    5. 'n' → logprob: -9.650405883789062
    6. '   ' → logprob: -10.525405883789062
    7. ' n' → logprob: -11.400405883789062
    8. ' ' → logprob: -11.650405883789062
    9. ')' → logprob: -12.400405883789062
    10. '```' → logprob: -12.400405883789062

Token 96: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17854972183704376
    2. ' =' → logprob: -2.4285497665405273
    3. ' is' → logprob: -2.9285497665405273
    4. '=' → logprob: -4.803549766540527
    5. ' ,' → logprob: -5.178549766540527
    6. ' ' → logprob: -5.928549766540527
    7. '<|end|>' → logprob: -6.178549766540527
    8. ')' → logprob: -6.803549766540527
    9. '=int' → logprob: -6.803549766540527
    10. '  ' → logprob: -7.678549766540527

Token 97: 'int' (ID: 491)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1144918203353882
    2. 'int' → logprob: -1.1144918203353882
    3. ')' → logprob: -1.9894918203353882
    4. ' int' → logprob: -2.2394919395446777
    5. ' )' → logprob: -2.6144919395446777
    6. ',int' → logprob: -4.364491939544678
    7. ' ,' → logprob: -5.114491939544678
    8. ' ' → logprob: -5.864491939544678
    9. '=int' → logprob: -6.364491939544678
    10. ',)' → logprob: -6.864491939544678

Token 98: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01454822439700365
    2. ',' → logprob: -4.639548301696777
    3. '):' → logprob: -5.389548301696777
    4. ' )' → logprob: -9.139548301696777
    5. '),' → logprob: -10.139548301696777
    6. ',)' → logprob: -10.389548301696777
    7. '   ' → logprob: -11.139548301696777
    8. '):
' → logprob: -11.889548301696777
    9. ')=' → logprob: -12.139548301696777
    10. ' ' → logprob: -12.389548301696777

Token 99: ' Number' (ID: 9184)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0820465087890625
    2. ')' → logprob: -1.4570465087890625
    3. '    ' → logprob: -2.0820465087890625
    4. 'the' → logprob: -2.4570465087890625
    5. ' ' → logprob: -2.5820465087890625
    6. ' The' → logprob: -3.2070465087890625
    7. 'The' → logprob: -3.5820465087890625
    8. '   ' → logprob: -3.7070465087890625
    9. 'int' → logprob: -3.9570465087890625
    10. ' int' → logprob: -4.5820465087890625

Token 100: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134356439113617
    2. '_of' → logprob: -2.1884355545043945
    3. ')' → logprob: -2.5634355545043945
    4. ' of' → logprob: -3.0634355545043945
    5. 'of' → logprob: -4.8134355545043945
    6. ' =' → logprob: -5.3134355545043945
    7. '=int' → logprob: -5.4384355545043945
    8. '_' → logprob: -5.8134355545043945
    9. ' ' → logprob: -6.0634355545043945
    10. '_tokens' → logprob: -6.3134355545043945

Token 101: ' items' (ID: 4732)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.6981717944145203
    2. ' items' → logprob: -1.073171854019165
    3. ' cards' → logprob: -3.073171854019165
    4. ' ' → logprob: -3.698171854019165
    5. ' points' → logprob: -4.323171615600586
    6. ' vertices' → logprob: -4.698171615600586
    7. ' objects' → logprob: -4.948171615600586
    8. ' integers' → logprob: -5.073171615600586
    9. ' nodes' → logprob: -5.323171615600586
    10. 'items' → logprob: -5.448171615600586

Token 102: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0625237226486206
    2. ')' → logprob: -2.93752384185791
    3. '   ' → logprob: -5.18752384185791
    4. ',
' → logprob: -6.68752384185791
    5. ' ,' → logprob: -7.43752384185791
    6. ' )' → logprob: -9.68752384185791
    7. '),' → logprob: -10.31252384185791
    8. ' ' → logprob: -11.43752384185791
    9. '<|end|>' → logprob: -11.43752384185791
    10. 's' → logprob: -11.81252384185791

Token 103: 'univers' (ID: 166170)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004358433187007904
    2. ' )' → logprob: -6.004358291625977
    3. ')
' → logprob: -6.754358291625977
    4. '   ' → logprob: -8.004358291625977
    5. ',' → logprob: -9.629358291625977
    6. 'tokens' → logprob: -9.879358291625977
    7. 'int' → logprob: -10.004358291625977
    8. ' )
' → logprob: -10.129358291625977
    9. '),' → logprob: -10.504358291625977
    10. '```' → logprob: -10.629358291625977

Token 104: 'ally' (ID: 2146)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.06876970827579498
    2. 'e' → logprob: -2.943769693374634
    3. 's' → logprob: -4.693769931793213
    4. 'ity' → logprob: -6.318769931793213
    5. 'ities' → logprob: -7.568769931793213
    6. 'al' → logprob: -7.568769931793213
    7. 't' → logprob: -7.693769931793213
    8. 'm' → logprob: -8.068769454956055
    9. 'se' → logprob: -8.068769454956055
    10. 'ses' → logprob: -8.568769454956055

Token 105: ' indexed' (ID: 44010)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033177271485328674
    2. ' )' → logprob: -3.533177375793457
    3. ' ' → logprob: -7.408177375793457
    4. '=' → logprob: -7.408177375793457
    5. ',' → logprob: -7.908177375793457
    6. '   ' → logprob: -8.033177375793457
    7. 's' → logprob: -8.408177375793457
    8. '_items' → logprob: -8.408177375793457
    9. '_' → logprob: -9.158177375793457
    10. '_remaining' → logprob: -9.783177375793457

Token 106: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01355251856148243
    2. ' )' → logprob: -4.638552665710449
    3. ',' → logprob: -6.513552665710449
    4. '_' → logprob: -7.138552665710449
    5. '_items' → logprob: -7.888552665710449
    6. 's' → logprob: -7.888552665710449
    7. '),' → logprob: -8.51355266571045
    8. '_tokens' → logprob: -9.38855266571045
    9. '[' → logprob: -9.76355266571045
    10. ' ' → logprob: -9.76355266571045

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12196338921785355
    2. ' ' → logprob: -2.2469635009765625
    3. '1' → logprob: -4.7469635009765625
    4. ' zero' → logprob: -8.621963500976562
    5. '   ' → logprob: -9.246963500976562
    6. ')' → logprob: -9.996963500976562
    7. '    ' → logprob: -10.996963500976562
    8. 'zero' → logprob: -11.121963500976562
    9. ' )' → logprob: -11.496963500976562
    10. ' ' → logprob: -11.871963500976562

Token 108: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06539690494537354
    2. '1' → logprob: -3.190396785736084
    3. ' ' → logprob: -3.815396785736084
    4. ' zero' → logprob: -10.315397262573242
    5. '   ' → logprob: -10.815397262573242
    6. 'zero' → logprob: -11.190397262573242
    7. '2' → logprob: -11.940397262573242
    8. ')' → logprob: -12.002897262573242
    9. '  ' → logprob: -12.752897262573242
    10. '```' → logprob: -12.752897262573242

Token 109: ' to' (ID: 316)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.578049898147583
    2. ')' → logprob: -0.828049898147583
    3. ',' → logprob: -6.703049659729004
    4. ' ,' → logprob: -7.828049659729004
    5. ' ),' → logprob: -8.578049659729004
    6. '   ' → logprob: -9.453049659729004
    7. '),' → logprob: -9.703049659729004
    8. ' to' → logprob: -10.328049659729004
    9. ' )
' → logprob: -10.453049659729004
    10. ' ' → logprob: -10.578049659729004

Token 110: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.057176005095243454
    2. 'N' → logprob: -2.932176113128662
    3. ' ' → logprob: -6.682176113128662
    4. ' the' → logprob: -8.307175636291504
    5. ')' → logprob: -8.432175636291504
    6. ' )' → logprob: -8.432175636291504
    7. ' len' → logprob: -9.057175636291504
    8. '   ' → logprob: -10.057175636291504
    9. ' n' → logprob: -10.057175636291504
    10. 'len' → logprob: -10.307175636291504

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023584060836583376
    2. ' )' → logprob: -6.252358436584473
    3. ',' → logprob: -8.502358436584473
    4. '),' → logprob: -8.752358436584473
    5. '   ' → logprob: -10.627358436584473
    6. ')
' → logprob: -10.627358436584473
    7. ').' → logprob: -11.377358436584473
    8. '+' → logprob: -13.502358436584473
    9. '```' → logprob: -13.877358436584473
    10. ' ),' → logprob: -14.002358436584473

Token 112: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26672255992889404
    2. ',' → logprob: -1.516722559928894
    3. ')' → logprob: -4.641722679138184
    4. ',
' → logprob: -5.391722679138184
    5. ' ,' → logprob: -8.016722679138184
    6. ')
' → logprob: -9.891722679138184
    7. ' )' → logprob: -10.641722679138184
    8. '),' → logprob: -10.641722679138184
    9. '       ' → logprob: -11.266722679138184
    10. '```' → logprob: -11.266722679138184

Token 113: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933786869049072
    2. ')' → logprob: -1.3183786869049072
    3. ',' → logprob: -2.1933786869049072
    4. '           ' → logprob: -2.5683786869049072
    5. ')
' → logprob: -3.8183786869049072
    6. '
' → logprob: -4.818378448486328
    7. ',
' → logprob: -4.818378448486328
    8. '\n' → logprob: -6.443378448486328
    9. 'v' → logprob: -7.068378448486328
    10. ' ,' → logprob: -7.318378448486328

Token 114: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1603603959083557
    2. 'v' → logprob: -1.910360336303711
    3. ')' → logprob: -9.785360336303711
    4. ' ' → logprob: -10.410360336303711
    5. '    ' → logprob: -11.035360336303711
    6. '   ' → logprob: -12.285360336303711
    7. ' ' → logprob: -12.285360336303711
    8. '	v' → logprob: -12.535360336303711
    9. ')v' → logprob: -12.535360336303711
    10. '
' → logprob: -12.660360336303711

Token 115: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37241941690444946
    2. ',' → logprob: -1.3724193572998047
    3. '=' → logprob: -3.2474193572998047
    4. ')' → logprob: -5.372419357299805
    5. '   ' → logprob: -5.372419357299805
    6. ':' → logprob: -5.622419357299805
    7. ' ,' → logprob: -5.747419357299805
    8. ' ' → logprob: -6.622419357299805
    9. '):' → logprob: -8.247419357299805
    10. '  ' → logprob: -8.622419357299805

Token 116: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25900664925575256
    2. '[]' → logprob: -2.0090067386627197
    3. ')' → logprob: -3.5090067386627197
    4. '[int' → logprob: -3.5090067386627197
    5. '[])' → logprob: -4.509006500244141
    6. '[' → logprob: -4.509006500244141
    7. ' list' → logprob: -5.384006500244141
    8. '[list' → logprob: -5.759006500244141
    9. ' []' → logprob: -6.634006500244141
    10. 'int' → logprob: -6.634006500244141

Token 117: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33117467164993286
    2. '[int' → logprob: -1.706174612045288
    3. '):' → logprob: -2.581174612045288
    4. '(int' → logprob: -5.081174850463867
    5. '   ' → logprob: -5.456174850463867
    6. '=' → logprob: -6.206174850463867
    7. ' )' → logprob: -6.206174850463867
    8. ':' → logprob: -6.456174850463867
    9. '=int' → logprob: -6.456174850463867
    10. '):
' → logprob: -6.581174850463867

Token 118: ' tuples' (ID: 112464)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.024746958166360855
    2. ' int' → logprob: -3.774746894836426
    3. ')' → logprob: -7.524746894836426
    4. 'ints' → logprob: -7.649746894836426
    5. 'float' → logprob: -8.649746894836426
    6. ' ints' → logprob: -9.274746894836426
    7. '[int' → logprob: -9.274746894836426
    8. 'list' → logprob: -11.024746894836426
    9. ' )' → logprob: -11.149746894836426
    10. '   ' → logprob: -11.149746894836426

Token 119: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009274906478822231
    2. '):' → logprob: -5.759274959564209
    3. '[int' → logprob: -6.134274959564209
    4. '   ' → logprob: -6.384274959564209
    5. ' )' → logprob: -6.634274959564209
    6. ',' → logprob: -8.25927448272705
    7. '(int' → logprob: -8.63427448272705
    8. '[' → logprob: -9.13427448272705
    9. ' of' → logprob: -9.13427448272705
    10. '):
' → logprob: -9.25927448272705

Token 120: ' Each' (ID: 11555)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0611398220062256
    2. ')' → logprob: -1.5611398220062256
    3. ' (' → logprob: -2.0611398220062256
    4. '<|end|>' → logprob: -2.1861398220062256
    5. '[]' → logprob: -2.8111398220062256
    6. ' [(' → logprob: -3.8111398220062256
    7. ' ' → logprob: -3.9361398220062256
    8. '[(' → logprob: -4.186140060424805
    9. ' Each' → logprob: -4.936140060424805
    10. ' []' → logprob: -4.936140060424805

Token 121: ' tuple' (ID: 31311)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.9299362897872925
    2. ' of' → logprob: -1.3049362897872925
    3. ' (' → logprob: -2.054936408996582
    4. 'token' → logprob: -3.429936408996582
    5. 'element' → logprob: -3.554936408996582
    6. ' token' → logprob: -3.804936408996582
    7. ' tuple' → logprob: -3.929936408996582
    8. ' consisting' → logprob: -4.054936408996582
    9. ' ' → logprob: -4.429936408996582
    10. ' item' → logprob: -4.429936408996582

Token 122: ' (' (ID: 350)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.8156142830848694
    2. ' consists' → logprob: -1.0656142234802246
    3. ' contains' → logprob: -2.5656142234802246
    4. ' with' → logprob: -3.0656142234802246
    5. ' (' → logprob: -3.6906142234802246
    6. ' is' → logprob: -3.9406142234802246
    7. ' consisting' → logprob: -4.440614223480225
    8. ' containing' → logprob: -4.940614223480225
    9. '(int' → logprob: -5.440614223480225
    10. ',' → logprob: -5.690614223480225

Token 123: 'a' (ID: 64)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10947434604167938
    2. '(int' → logprob: -2.9844744205474854
    3. 'a' → logprob: -4.234474182128906
    4. ')' → logprob: -4.359474182128906
    5. ' int' → logprob: -5.359474182128906
    6. ',int' → logprob: -6.109474182128906
    7. 'str' → logprob: -6.234474182128906
    8. ',' → logprob: -6.484474182128906
    9. 'x' → logprob: -6.484474182128906
    10. 'index' → logprob: -6.609474182128906

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016523292288184166
    2. ',int' → logprob: -7.876652240753174
    3. ' ,' → logprob: -7.876652240753174
    4. ')' → logprob: -8.626652717590332
    5. ',b' → logprob: -8.751652717590332
    6. ',v' → logprob: -9.251652717590332
    7. 'a' → logprob: -9.251652717590332
    8. 'int' → logprob: -9.501652717590332
    9. ',n' → logprob: -9.501652717590332
    10. ',a' → logprob: -10.126652717590332

Token 125: ' flag' (ID: 9641)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02169683389365673
    2. ' b' → logprob: -3.8966968059539795
    3. 'd' → logprob: -7.896697044372559
    4. 'p' → logprob: -9.271697044372559
    5. 'w' → logprob: -9.521697044372559
    6. 'l' → logprob: -9.646697044372559
    7. 'c' → logprob: -9.771697044372559
    8. 's' → logprob: -9.834197044372559
    9. 't' → logprob: -9.959197044372559
    10. 'x' → logprob: -10.209197044372559

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2852162718772888
    2. ',' → logprob: -1.4102163314819336
    3. 'a' → logprob: -6.160216331481934
    4. '_a' → logprob: -7.285216331481934
    5. ' )' → logprob: -7.910216331481934
    6. ',)' → logprob: -8.910216331481934
    7. '1' → logprob: -9.160216331481934
    8. 's' → logprob: -9.160216331481934
    9. ' ,' → logprob: -9.410216331481934
    10. '_flag' → logprob: -9.660216331481934

Token 127: ' represents' (ID: 18627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1164289116859436
    2. ',' → logprob: -2.616428852081299
    3. '   ' → logprob: -3.741428852081299
    4. '):' → logprob: -4.991428852081299
    5. '),' → logprob: -5.866428852081299
    6. ' for' → logprob: -7.616428852081299
    7. ' )' → logprob: -7.866428852081299
    8. ' of' → logprob: -7.991428852081299
    9. ' =' → logprob: -7.991428852081299
    10. ' ,' → logprob: -8.241429328918457

Token 128: ':
' (ID: 734)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.45968812704086304
    2. ' a' → logprob: -1.4596881866455078
    3. ' the' → logprob: -2.459688186645508
    4. 'a' → logprob: -4.084688186645508
    5. '<|end|>' → logprob: -4.084688186645508
    6. '   ' → logprob: -5.334688186645508
    7. ')' → logprob: -5.834688186645508
    8. 'the' → logprob: -5.834688186645508
    9. '    ' → logprob: -6.334688186645508
    10. '<|end|>' → logprob: -6.709688186645508

Token 129: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.759566605091095
    2. ' (' → logprob: -1.0095665454864502
    3. '   ' → logprob: -2.88456654548645
    4. '    ' → logprob: -3.13456654548645
    5. 'a' → logprob: -3.63456654548645
    6. ' a' → logprob: -3.88456654548645
    7. '(a' → logprob: -4.759566783905029
    8. '(int' → logprob: -5.509566783905029
    9. ' an' → logprob: -6.134566783905029
    10. ')' → logprob: -6.759566783905029

Token 130: ' a' (ID: 261)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0637423992156982
    2. '   ' → logprob: -1.6887423992156982
    3. ' (' → logprob: -1.9387423992156982
    4. 'a' (adapté à ' a') → logprob: -2.0637423992156982
    5. '(int' → logprob: -2.6887423992156982
    6. '(a' → logprob: -3.1887423992156982
    7. 'int' → logprob: -3.8137423992156982
    8. '       ' → logprob: -4.313742637634277
    9. ' a' → logprob: -4.313742637634277
    10. '               ' → logprob: -4.938742637634277

Token 131: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0076959445141255856
    2. ' ,' → logprob: -5.257696151733398
    3. ',int' → logprob: -7.632696151733398
    4. 'int' → logprob: -8.007696151733398
    5. '   ' → logprob: -8.382696151733398
    6. ')' → logprob: -8.632696151733398
    7. 'a' → logprob: -8.757696151733398
    8. '<|end|>' → logprob: -9.007696151733398
    9. ' (' → logprob: -9.257696151733398
    10. ',
' → logprob: -9.382696151733398

Token 132: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007645991281606257
    2. ' int' → logprob: -7.2507643699646
    3. ')' → logprob: -10.250764846801758
    4. ',int' → logprob: -12.375764846801758
    5. '[int' → logprob: -12.625764846801758
    6. 'str' → logprob: -12.750764846801758
    7. ',' → logprob: -12.750764846801758
    8. '   ' → logprob: -13.375764846801758
    9. '(int' → logprob: -14.125764846801758
    10. ':int' → logprob: -14.375764846801758

Token 133: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019230410689488053
    2. ')' → logprob: -6.626923084259033
    3. ' ,' → logprob: -7.876923084259033
    4. '   ' → logprob: -9.376922607421875
    5. '<|end|>' → logprob: -10.251922607421875
    6. '),' → logprob: -11.376922607421875
    7. ',a' → logprob: -11.376922607421875
    8. ',int' → logprob: -11.376922607421875
    9. 'a' → logprob: -11.376922607421875
    10. ',
' → logprob: -11.501922607421875

Token 134: ' The' (ID: 623)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0343146324157715
    2. 'the' → logprob: -1.6593146324157715
    3. ' a' → logprob: -2.1593146324157715
    4. ' flag' → logprob: -2.2843146324157715
    5. ' ' → logprob: -2.5343146324157715
    6. 'a' → logprob: -3.2843146324157715
    7. 'flag' → logprob: -3.4093146324157715
    8. 'The' → logprob: -4.1593146324157715
    9. ' The' → logprob: -4.2843146324157715
    10. ' an' → logprob: -4.4093146324157715

Token 135: ' cost' (ID: 3097)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7203783392906189
    2. ' next' → logprob: -1.7203783988952637
    3. ' number' → logprob: -1.8453783988952637
    4. 'value' → logprob: -2.5953783988952637
    5. ' first' → logprob: -3.9703783988952637
    6. ' amount' → logprob: -4.345378398895264
    7. 'a' → logprob: -4.470378398895264
    8. ' index' → logprob: -4.845378398895264
    9. ' flag' → logprob: -4.845378398895264
    10. 'number' → logprob: -5.345378398895264

Token 136: ' associated' (ID: 8668)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01729946956038475
    2. ' ,' → logprob: -5.017299652099609
    3. ')' → logprob: -5.142299652099609
    4. '   ' → logprob: -6.267299652099609
    5. '<|end|>' → logprob: -6.892299652099609
    6. '               ' → logprob: -7.517299652099609
    7. '),' → logprob: -8.51729965209961
    8. ',
' → logprob: -8.64229965209961
    9. '<|end|>' → logprob: -8.64229965209961
    10. ' of' → logprob: -8.76729965209961

Token 137: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7163332104682922
    2. ')' → logprob: -0.8413332104682922
    3. ' )' → logprob: -3.3413331508636475
    4. ' ,' → logprob: -4.091333389282227
    5. '<|end|>' → logprob: -4.591333389282227
    6. ' of' → logprob: -5.091333389282227
    7. '=' → logprob: -5.341333389282227
    8. '   ' → logprob: -5.591333389282227
    9. '),' → logprob: -7.216333389282227
    10. ' with' → logprob: -7.591333389282227

Token 138: ' selecting' (ID: 31615)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.21586255729198456
    2. 'the' → logprob: -2.465862512588501
    3. ' an' → logprob: -2.715862512588501
    4. ' each' → logprob: -3.465862512588501
    5. ' a' → logprob: -5.09086275100708
    6. 'each' → logprob: -5.96586275100708
    7. ' item' → logprob: -6.96586275100708
    8. 'a' → logprob: -7.21586275100708
    9. '<|end|>' → logprob: -7.59086275100708
    10. ')' → logprob: -8.090862274169922

Token 139: ' the' (ID: 290)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -1.0746331214904785
    2. ' the' → logprob: -1.3246331214904785
    3. ',' → logprob: -2.3246331214904785
    4. '<|end|>' → logprob: -2.3246331214904785
    5. 'the' → logprob: -2.5746331214904785
    6. ')' → logprob: -3.0746331214904785
    7. ' a' → logprob: -3.4496331214904785
    8. ' )' → logprob: -4.0746331214904785
    9. ' ,' → logprob: -4.1996331214904785
    10. ' ' → logprob: -6.1996331214904785

Token 140: ' subset' (ID: 58845)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.36304399371147156
    2. ' next' → logprob: -2.238044023513794
    3. 'item' → logprob: -2.488044023513794
    4. ' element' → logprob: -3.363044023513794
    5. ' option' → logprob: -3.738044023513794
    6. 'a' → logprob: -4.238043785095215
    7. ' a' → logprob: -4.863043785095215
    8. '<|end|>' → logprob: -4.863043785095215
    9. 'element' → logprob: -5.613043785095215
    10. ' ith' → logprob: -5.738043785095215

Token 141: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1406385451555252
    2. ')' → logprob: -3.015638589859009
    3. ' ,' → logprob: -3.265638589859009
    4. ',
' → logprob: -3.640638589859009
    5. '),' → logprob: -5.14063835144043
    6. '   ' → logprob: -5.76563835144043
    7. ' of' → logprob: -5.89063835144043
    8. 's' → logprob: -6.14063835144043
    9. '<|end|>' → logprob: -7.14063835144043
    10. ' ,
' → logprob: -7.39063835144043

Token 142: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37989068031311035
    2. ',' → logprob: -1.2548906803131104
    3. '   ' → logprob: -3.6298906803131104
    4. ',
' → logprob: -6.379890441894531
    5. ' )' → logprob: -6.754890441894531
    6. '),' → logprob: -7.879890441894531
    7. ' ,' → logprob: -8.504890441894531
    8. ')
' → logprob: -8.754890441894531
    9. '[' → logprob: -8.754890441894531
    10. ',)' → logprob: -8.879890441894531

Token 143: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.2570607364177704
    2. 'flag' (adapté à ' flag') → logprob: -1.5070607662200928
    3. '   ' → logprob: -6.382060527801514
    4. ',' → logprob: -6.382060527801514
    5. ')' → logprob: -7.757060527801514
    6. ' ' → logprob: -7.882060527801514
    7. ' ,' → logprob: -8.632061004638672
    8. '(flag' → logprob: -8.882061004638672
    9. '
' → logprob: -9.132061004638672
    10. ' 
' → logprob: -9.757061004638672

Token 144: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.538692831993103
    2. ')' → logprob: -1.163692831993103
    3. '):' → logprob: -2.5386929512023926
    4. '   ' → logprob: -4.913692951202393
    5. ':' → logprob: -5.163692951202393
    6. '),' → logprob: -5.913692951202393
    7. '=' → logprob: -6.163692951202393
    8. ' )' → logprob: -6.663692951202393
    9. ' ,' → logprob: -6.663692951202393
    10. ',
' → logprob: -6.788692951202393

Token 145: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37621909379959106
    2. ' int' → logprob: -2.0012190341949463
    3. 'bool' → logprob: -2.5012190341949463
    4. 'str' → logprob: -3.5012190341949463
    5. ' bool' → logprob: -3.6262190341949463
    6. ' str' → logprob: -3.7512190341949463
    7. ')' → logprob: -4.376219272613525
    8. '   ' → logprob: -7.501219272613525
    9. ' None' → logprob: -7.876219272613525
    10. ' )' → logprob: -8.126218795776367

Token 146: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0385366752743721
    2. ')' → logprob: -3.288536787033081
    3. ',' → logprob: -8.41353702545166
    4. '):
' → logprob: -9.03853702545166
    5. '),' → logprob: -9.53853702545166
    6. ' ):' → logprob: -10.16353702545166
    7. '):

' → logprob: -11.66353702545166
    8. ' ' → logprob: -12.03853702545166
    9. '   ' → logprob: -12.03853702545166
    10. '#' → logprob: -12.41353702545166

Token 147: ' Bit' (ID: 9422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5886919498443604
    2. ' The' → logprob: -1.2136919498443604
    3. ' the' → logprob: -3.4636919498443604
    4. '0' → logprob: -3.4636919498443604
    5. 'The' → logprob: -3.8386919498443604
    6. '1' → logprob: -4.213691711425781
    7. ' Whether' → logprob: -4.588691711425781
    8. ' whether' → logprob: -4.713691711425781
    9. 'Whether' → logprob: -5.213691711425781
    10. ' flag' → logprob: -5.338691711425781

Token 148: 'mask' (ID: 22527)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6096161603927612
    2. ' _' → logprob: -0.8596161603927612
    3. 'mask' → logprob: -4.234616279602051
    4. ')' → logprob: -5.609616279602051
    5. 'wise' → logprob: -5.859616279602051
    6. ' ' → logprob: -6.359616279602051
    7. '_mask' → logprob: -6.359616279602051
    8. '   ' → logprob: -6.609616279602051
    9. 's' → logprob: -6.734616279602051
    10. 'flag' → logprob: -7.109616279602051

Token 149: ' representing' (ID: 25389)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02582724206149578
    2. ' )' → logprob: -4.275827407836914
    3. '   ' → logprob: -5.275827407836914
    4. '[' → logprob: -6.525827407836914
    5. '
' → logprob: -6.775827407836914
    6. ' of' → logprob: -6.775827407836914
    7. ' ' → logprob: -7.150827407836914
    8. ',' → logprob: -8.525827407836914
    9. '\n' → logprob: -8.525827407836914
    10. ')
' → logprob: -9.025827407836914

Token 150: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.31171777844429016
    2. ' which' → logprob: -1.8117177486419678
    3. ' selected' → logprob: -2.9367177486419678
    4. ' subsets' → logprob: -3.9367177486419678
    5. 'the' → logprob: -4.311717987060547
    6. '<|end|>' → logprob: -5.436717987060547
    7. 'selected' → logprob: -5.561717987060547
    8. 'which' → logprob: -5.686717987060547
    9. ' subset' → logprob: -6.061717987060547
    10. ' a' → logprob: -6.561717987060547

Token 151: ' items' (ID: 4732)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.784507155418396
    2. ' subset' → logprob: -1.284507155418396
    3. ' selected' → logprob: -2.5345072746276855
    4. 'subset' → logprob: -3.4095072746276855
    5. ' elements' → logprob: -3.5345072746276855
    6. ' chosen' → logprob: -3.6595072746276855
    7. ' presence' → logprob: -3.7845072746276855
    8. ' items' → logprob: -4.1595072746276855
    9. 'selected' → logprob: -4.5345072746276855
    10. ' available' → logprob: -5.5345072746276855

Token 152: ' included' (ID: 7360)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044455528259277344
    2. ' )' → logprob: -4.044455528259277
    3. '   ' → logprob: -4.544455528259277
    4. ' selected' → logprob: -5.294455528259277
    5. ' of' → logprob: -5.919455528259277
    6. '       ' → logprob: -6.669455528259277
    7. ')
' → logprob: -6.794455528259277
    8. 'selected' → logprob: -7.169455528259277
    9. '           ' → logprob: -7.294455528259277
    10. ' ' → logprob: -7.294455528259277

Token 153: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3249692916870117
    2. ' in' → logprob: -1.4499692916870117
    3. ' )' → logprob: -3.5749692916870117
    4. '   ' → logprob: -4.574969291687012
    5. ',' → logprob: -6.449969291687012
    6. 'in' → logprob: -7.324969291687012
    7. '),' → logprob: -7.699969291687012
    8. ' ,' → logprob: -8.449969291687012
    9. ' selected' → logprob: -8.824969291687012
    10. ' of' → logprob: -8.949969291687012

Token 154: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03239868953824043
    2. 'the' → logprob: -3.5323987007141113
    3. 'v' → logprob: -7.282398700714111
    4. ')' → logprob: -7.282398700714111
    5. ' v' → logprob: -7.532398700714111
    6. ' subset' → logprob: -9.032398223876953
    7. ' that' → logprob: -9.157398223876953
    8. ' )' → logprob: -9.532398223876953
    9. ' subsets' → logprob: -9.532398223876953
    10. ' a' → logprob: -9.532398223876953

Token 155: ' subset' (ID: 58845)
  Prédit: ' subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.06355734914541245
    2. 'subset' → logprob: -2.8135573863983154
    3. ' selected' → logprob: -7.688557147979736
    4. ' set' → logprob: -8.188557624816895
    5. ' subsets' → logprob: -8.188557624816895
    6. 'selected' → logprob: -8.938557624816895
    7. ')' → logprob: -9.063557624816895
    8. 'sub' → logprob: -9.313557624816895
    9. 'set' → logprob: -10.188557624816895
    10. '   ' → logprob: -10.438557624816895

Token 156: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09615100920200348
    2. '   ' → logprob: -2.471151113510132
    3. ')
' → logprob: -5.846150875091553
    4. ' )' → logprob: -6.096150875091553
    5. '       ' → logprob: -7.596150875091553
    6. '               ' → logprob: -7.596150875091553
    7. '           ' → logprob: -7.721150875091553
    8. 'def' → logprob: -7.846150875091553
    9. ' )
' → logprob: -10.221151351928711
    10. ')

' → logprob: -10.846151351928711

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20261366665363312
    2. ')' → logprob: -1.7026137113571167
    3. ')
' → logprob: -7.077613830566406
    4. '       ' → logprob: -8.577613830566406
    5. ' )' → logprob: -9.577613830566406
    6. '):' → logprob: -10.327613830566406
    7. '):
' → logprob: -10.452613830566406
    8. 'def' → logprob: -11.327613830566406
    9. '           ' → logprob: -12.202613830566406
    10. ',' → logprob: -12.827613830566406

Token 158: ' Input' (ID: 10090)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03852371126413345
    2. '   ' → logprob: -3.4135236740112305
    3. '):' → logprob: -5.7885236740112305
    4. ')
' → logprob: -7.0385236740112305
    5. '):
' → logprob: -7.6635236740112305
    6. ' )' → logprob: -8.53852367401123
    7. '"""' → logprob: -9.28852367401123
    8. ' ' → logprob: -10.28852367401123
    9. '       ' → logprob: -10.41352367401123
    10. '```' → logprob: -10.66352367401123

Token 159: ' format' (ID: 6011)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4658758044242859
    2. ':' → logprob: -2.3408758640289307
    3. '():
' → logprob: -2.4658758640289307
    4. ' =' → logprob: -2.4658758640289307
    5. '):' → logprob: -3.0908758640289307
    6. '()' → logprob: -4.090875625610352
    7. '   ' → logprob: -4.215875625610352
    8. '=' → logprob: -4.590875625610352
    9. '):
' → logprob: -5.340875625610352
    10. '_data' → logprob: -5.715875625610352

Token 160: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5478740334510803
    2. ':' → logprob: -1.6728739738464355
    3. '():' → logprob: -1.6728739738464355
    4. '():
' → logprob: -3.9228739738464355
    5. ' =' → logprob: -4.6728739738464355
    6. '):' → logprob: -4.6728739738464355
    7. '       ' → logprob: -6.5478739738464355
    8. ':
' → logprob: -6.6728739738464355
    9. '=' → logprob: -6.9228739738464355
    10. '
' → logprob: -7.0478739738464355

Token 161: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2321580648422241
    2. ' 
' → logprob: -1.3571580648422241
    3. '   ' → logprob: -1.6071580648422241
    4. '    
' → logprob: -2.4821581840515137
    5. '    ' → logprob: -2.6071581840515137
    6. '     
' → logprob: -3.6071581840515137
    7. '  
' → logprob: -4.357158184051514
    8. '
' → logprob: -4.607158184051514
    9. ' \' → logprob: -5.107158184051514
    10. '"""' → logprob: -5.232158184051514

Token 162: ' The' (ID: 623)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6045576930046082
    2. '   ' → logprob: -0.9795576930046082
    3. ' n' → logprob: -4.354557514190674
    4. ' N' → logprob: -4.354557514190674
    5. ' \' → logprob: -4.979557514190674
    6. ' 
' → logprob: -4.979557514190674
    7. '    
' → logprob: -5.104557514190674
    8. 'n' → logprob: -5.104557514190674
    9. '
' → logprob: -5.354557514190674
    10. ' ' → logprob: -5.604557514190674

Token 163: ' first' (ID: 1577)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03209316357970238
    2. '  ' → logprob: -4.657093048095703
    3. ' input' → logprob: -5.032093048095703
    4. ' next' → logprob: -5.407093048095703
    5. ' n' → logprob: -5.657093048095703
    6. 'n' → logprob: -6.407093048095703
    7. '    ' → logprob: -6.907093048095703
    8. ' space' → logprob: -7.282093048095703
    9. ' )' → logprob: -7.407093048095703
    10. '   ' → logprob: -7.407093048095703

Token 164: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15183240175247192
    2. ' line' → logprob: -3.151832342147827
    3. ' )' → logprob: -3.526832342147827
    4. '()' → logprob: -4.401832580566406
    5. '_line' → logprob: -4.401832580566406
    6. ' space' → logprob: -4.776832580566406
    7. '  ' → logprob: -4.776832580566406
    8. ')' → logprob: -4.776832580566406
    9. '_' → logprob: -5.151832580566406
    10. ' _' → logprob: -6.151832580566406

Token 165: ' contains' (ID: 8895)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1805855631828308
    2. '=' → logprob: -2.5555856227874756
    3. ':' → logprob: -3.5555856227874756
    4. '()' → logprob: -3.8055856227874756
    5. ' is' → logprob: -4.1805853843688965
    6. '   ' → logprob: -4.4305853843688965
    7. ' ' → logprob: -5.8055853843688965
    8. ')' → logprob: -6.5555853843688965
    9. ' contains' → logprob: -7.0555853843688965
    10. '  ' → logprob: -7.6805853843688965

Token 166: ' two' (ID: 1920)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.656903862953186
    2. ' a' → logprob: -0.906903862953186
    3. ' ' → logprob: -3.5319037437438965
    4. ' N' → logprob: -3.6569037437438965
    5. ' the' → logprob: -4.1569037437438965
    6. ' n' → logprob: -5.9069037437438965
    7. 'n' → logprob: -6.0319037437438965
    8. ' two' → logprob: -7.2819037437438965
    9. '   ' → logprob: -8.156904220581055
    10. 'a' → logprob: -8.281904220581055

Token 167: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.00012403888104017824
    2. ' ' → logprob: -10.125123977661133
    3. ' numbers' → logprob: -10.250123977661133
    4. 'inte' → logprob: -10.500123977661133
    5. ' space' → logprob: -11.500123977661133
    6. 'int' → logprob: -13.125123977661133
    7. ' ints' → logprob: -13.250123977661133
    8. ' spaces' → logprob: -13.375123977661133
    9. ' integer' → logprob: -13.750123977661133
    10. ' int' → logprob: -13.750123977661133

Token 168: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0882933959364891
    2. ' N' → logprob: -2.9632933139801025
    3. ' )' → logprob: -5.213293552398682
    4. '  ' → logprob: -5.463293552398682
    5. ' n' → logprob: -5.463293552398682
    6. '()' → logprob: -5.463293552398682
    7. ' ,' → logprob: -5.713293552398682
    8. ''' → logprob: -5.963293552398682
    9. ',' → logprob: -5.963293552398682
    10. ' '' → logprob: -6.588293552398682

Token 169: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006976616568863392
    2. ',k' → logprob: -8.37569808959961
    3. ' ,' → logprob: -8.87569808959961
    4. ',K' → logprob: -9.37569808959961
    5. ',m' → logprob: -9.87569808959961
    6. ' M' → logprob: -10.00069808959961
    7. ',M' → logprob: -10.00069808959961
    8. ' and' → logprob: -10.12569808959961
    9. 'M' → logprob: -11.12569808959961
    10. ' K' → logprob: -11.62569808959961

Token 170: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6263087391853333
    2. ' M' → logprob: -1.3763086795806885
    3. 'K' → logprob: -2.0013086795806885
    4. ' K' → logprob: -2.6263086795806885
    5. 'k' → logprob: -5.876308917999268
    6. 'm' → logprob: -7.501308917999268
    7. 'Q' → logprob: -7.751308917999268
    8. ' k' → logprob: -7.751308917999268
    9. ' ' → logprob: -8.12630844116211
    10. '   ' → logprob: -9.06380844116211

Token 171: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39421916007995605
    2. '\n' → logprob: -1.644219160079956
    3. '   ' → logprob: -3.019219160079956
    4. ',' → logprob: -3.519219160079956
    5. '.' → logprob: -4.269219398498535
    6. '
' → logprob: -4.519219398498535
    7. ' ' → logprob: -4.894219398498535
    8. '<|end|>' → logprob: -5.394219398498535
    9. ' )' → logprob: -5.519219398498535
    10. ',
' → logprob: -5.894219398498535

Token 172: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6684390902519226
    2. '   ' → logprob: -0.7934390902519226
    3. '
' → logprob: -4.043438911437988
    4. '    
' → logprob: -4.293438911437988
    5. '  
' → logprob: -6.918438911437988
    6. ')' → logprob: -7.668438911437988
    7. '\
' → logprob: -7.918438911437988
    8. 'newline' → logprob: -7.918438911437988
    9. '   
' → logprob: -8.543438911437988
    10. ' 
' → logprob: -8.668438911437988

Token 173: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08404551446437836
    2. 'The' (adapté à ' The') → logprob: -3.20904541015625
    3. ' The' → logprob: -3.45904541015625
    4. '\n' → logprob: -5.83404541015625
    5. 'Next' → logprob: -6.20904541015625
    6. '
' → logprob: -6.58404541015625
    7. '    
' → logprob: -7.70904541015625
    8. ' lines' → logprob: -7.83404541015625
    9. '       ' → logprob: -8.08404541015625
    10. 'Second' → logprob: -8.70904541015625

Token 174: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.0049466160126030445
    2. ' second' → logprob: -6.254946708679199
    3. 'next' → logprob: -6.504946708679199
    4. ' following' → logprob: -6.754946708679199
    5. ' rest' → logprob: -9.2549467086792
    6. ' subsequent' → logprob: -9.3799467086792
    7. ' M' → logprob: -9.6299467086792
    8. ' first' → logprob: -9.7549467086792
    9. ' remaining' → logprob: -11.3799467086792
    10. 'following' → logprob: -11.7549467086792

Token 175: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.01024825219064951
    2. 'M' → logprob: -4.635248184204102
    3. ' lines' → logprob: -8.385248184204102
    4. ' ' → logprob: -9.635248184204102
    5. ' line' → logprob: -9.760248184204102
    6. '  ' → logprob: -10.260248184204102
    7. 'm' → logprob: -10.760248184204102
    8. 'line' → logprob: -10.885248184204102
    9. '   ' → logprob: -11.260248184204102
    10. ' m' → logprob: -11.385248184204102

Token 176: ' blocks' (ID: 18125)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.0005785312969237566
    2. ' ' → logprob: -8.750578880310059
    3. 'lines' → logprob: -8.875578880310059
    4. ' line' → logprob: -9.375578880310059
    5. '_lines' → logprob: -9.750578880310059
    6. ' tokens' → logprob: -10.375578880310059
    7. '   ' → logprob: -10.625578880310059
    8. '	lines' → logprob: -10.625578880310059
    9. '<|end|>' → logprob: -11.125578880310059
    10. '<|end|>' → logprob: -11.750578880310059

Token 177: ' each' (ID: 2454)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5491682887077332
    2. '   ' → logprob: -1.299168348312378
    3. ' each' → logprob: -3.174168348312378
    4. ':' → logprob: -3.174168348312378
    5. 'each' → logprob: -3.924168348312378
    6. 'of' → logprob: -4.549168109893799
    7. ' =' → logprob: -4.799168109893799
    8. ' are' → logprob: -5.424168109893799
    9. ':
' → logprob: -6.049168109893799
    10. ',' → logprob: -6.049168109893799

Token 178: ' describe' (ID: 12886)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.7143154740333557
    2. ' consist' → logprob: -1.464315414428711
    3. 'cons' → logprob: -2.964315414428711
    4. ' consists' → logprob: -3.589315414428711
    5. 'contain' → logprob: -3.589315414428711
    6. '   ' → logprob: -3.964315414428711
    7. ' are' → logprob: -3.964315414428711
    8. ' describe' → logprob: -3.964315414428711
    9. 'describe' → logprob: -4.214315414428711
    10. ' line' → logprob: -4.589315414428711

Token 179: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.18289576470851898
    2. ' one' → logprob: -2.4328956604003906
    3. 'a' → logprob: -3.0578956604003906
    4. ' the' → logprob: -3.8078956604003906
    5. ' subsets' → logprob: -5.682895660400391
    6. ' an' → logprob: -6.182895660400391
    7. 'one' → logprob: -6.307895660400391
    8. 'the' → logprob: -6.557895660400391
    9. ' ' → logprob: -7.057895660400391
    10. '   ' → logprob: -8.55789566040039

Token 180: ' subset' (ID: 58845)
  Prédit: ' subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.1143496036529541
    2. 'subset' → logprob: -2.239349603652954
    3. ' block' → logprob: -7.239349365234375
    4. 'n' → logprob: -7.864349365234375
    5. ' set' → logprob: -9.364349365234375
    6. 'sub' → logprob: -9.864349365234375
    7. 'block' → logprob: -10.239349365234375
    8. ' single' → logprob: -10.364349365234375
    9. ' group' → logprob: -10.364349365234375
    10. ' subsets' → logprob: -10.364349365234375

Token 181: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3287190198898315
    2. '   ' → logprob: -1.3287190198898315
    3. ',' → logprob: -2.453719139099121
    4. ':
' → logprob: -2.453719139099121
    5. ' line' → logprob: -2.828719139099121
    6. ' with' → logprob: -3.078719139099121
    7. ' of' → logprob: -3.203719139099121
    8. '.' → logprob: -3.203719139099121
    9. ' consisting' → logprob: -3.203719139099121
    10. ' and' → logprob: -3.578719139099121

Token 182: 'set' (ID: 977)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.026166319847107
    2. '):
' → logprob: -1.401166319847107
    3. ')' → logprob: -1.776166319847107
    4. '   ' → logprob: -2.6511664390563965
    5. '),' → logprob: -3.1511664390563965
    6. ' of' → logprob: -3.6511664390563965
    7. ').' → logprob: -4.0261664390563965
    8. 'of' → logprob: -4.7761664390563965
    9. ',' → logprob: -4.9011664390563965
    10. ' with' → logprob: -5.2761664390563965

Token 183: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.617904007434845
    2. '_size' → logprob: -1.6179039478302002
    3. ')' → logprob: -2.4929039478302
    4. '   ' → logprob: -3.2429039478302
    5. '_count' → logprob: -3.4929039478302
    6. 'size' → logprob: -3.8679039478302
    7. '_name' → logprob: -4.242904186248779
    8. '_' → logprob: -4.742904186248779
    9. '_lines' → logprob: -4.992904186248779
    10. ' ' → logprob: -5.492904186248779

Token 184: ' cost' (ID: 3097)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7670524716377258
    2. ' including' → logprob: -2.517052412033081
    3. '   ' → logprob: -2.892052412033081
    4. ' with' → logprob: -3.142052412033081
    5. 'with' → logprob: -3.392052412033081
    6. 'including' → logprob: -3.517052412033081
    7. '#' → logprob: -3.767052412033081
    8. ' containing' → logprob: -4.01705265045166
    9. 'def' → logprob: -4.26705265045166
    10. 'count' → logprob: -4.39205265045166

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30782046914100647
    2. '):' → logprob: -1.557820439338684
    3. '):
' → logprob: -3.5578205585479736
    4. ').' → logprob: -4.1828203201293945
    5. ',' → logprob: -5.9328203201293945
    6. '),' → logprob: -6.3078203201293945
    7. '):

' → logprob: -6.5578203201293945
    8. ' line' → logprob: -7.1828203201293945
    9. ')
' → logprob: -7.3078203201293945
    10. '):
' → logprob: -7.3078203201293945

Token 186: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3749713897705078
    2. ':' → logprob: -2.624971389770508
    3. '
' → logprob: -2.624971389770508
    4. '\n' → logprob: -3.499971389770508
    5. '    
' → logprob: -3.624971389770508
    6. ')' → logprob: -3.624971389770508
    7. '):' → logprob: -3.874971389770508
    8. ',' → logprob: -4.249971389770508
    9. '  
' → logprob: -5.124971389770508
    10. '.' → logprob: -5.249971389770508

Token 187: ':
' (ID: 734)
  Prédit: ' follows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' follows' → logprob: -0.00746003445237875
    2. 'f' → logprob: -5.382460117340088
    3. '   ' → logprob: -7.257460117340088
    4. ' a' → logprob: -7.882460117340088
    5. ':' → logprob: -8.38245964050293
    6. ' two' → logprob: -8.75745964050293
    7. ' f' → logprob: -8.88245964050293
    8. ' ' → logprob: -9.00745964050293
    9. ' described' → logprob: -9.25745964050293
    10. 'a' → logprob: -9.50745964050293

Token 188: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36838817596435547
    2. '   ' → logprob: -1.6183881759643555
    3. '    ' → logprob: -2.6183881759643555
    4. ' ' → logprob: -5.1183881759643555
    5. '           ' → logprob: -5.2433881759643555
    6. ' n' → logprob: -5.4933881759643555
    7. '        ' → logprob: -5.4933881759643555
    8. ')' → logprob: -5.8683881759643555
    9. '    
' → logprob: -6.6183881759643555
    10. 'n' → logprob: -6.7433881759643555

Token 189: ' -' (ID: 533)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.3590855300426483
    2. '   ' → logprob: -1.7340855598449707
    3. 'M' → logprob: -2.7340855598449707
    4. ' for' → logprob: -3.7340855598449707
    5. ' N' → logprob: -4.734085559844971
    6. ' n' → logprob: -5.359085559844971
    7. '       ' → logprob: -5.484085559844971
    8. 'N' → logprob: -5.984085559844971
    9. 'for' → logprob: -5.984085559844971
    10. '    ' → logprob: -6.234085559844971

Token 190: ' a' (ID: 261)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.7617478370666504
    2. 'M' → logprob: -1.8867478370666504
    3. ' a' → logprob: -2.6367478370666504
    4. 'm' → logprob: -2.6367478370666504
    5. ' m' → logprob: -3.5117478370666504
    6. ' for' → logprob: -3.5117478370666504
    7. 'int' → logprob: -3.7617478370666504
    8. 'a' → logprob: -3.8867478370666504
    9. 'for' → logprob: -4.13674783706665
    10. ' line' → logprob: -4.26174783706665

Token 191: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1994490921497345
    2. ' ,' → logprob: -2.699449062347412
    3. ' ' → logprob: -3.199449062347412
    4. '    ' → logprob: -3.699449062347412
    5. ')' → logprob: -3.949449062347412
    6. '   ' → logprob: -4.824449062347412
    7. '  ' → logprob: -4.949449062347412
    8. ' =' → logprob: -5.824449062347412
    9. ' )' → logprob: -6.074449062347412
    10. '<|end|>' → logprob: -6.324449062347412

Token 192: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: ' :' (ID: 712)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8404372334480286
    2. '<|end|>' → logprob: -1.2154371738433838
    3. '<|end|>' → logprob: -2.340437173843384
    4. ' 
' → logprob: -2.840437173843384
    5. '
' → logprob: -3.340437173843384
    6. ' ' → logprob: -3.340437173843384
    7. ')' → logprob: -4.340437412261963
    8. '  
' → logprob: -4.590437412261963
    9. '   ' → logprob: -5.340437412261963
    10. '    ' → logprob: -5.715437412261963

Token 194: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.7936657667160034
    2. ''' → logprob: -1.7936657667160034
    3. ' ' → logprob: -2.168665885925293
    4. '<|end|>' → logprob: -2.543665885925293
    5. ' '' → logprob: -2.793665885925293
    6. '    ' → logprob: -2.793665885925293
    7. '   ' → logprob: -2.918665885925293
    8. ')' → logprob: -3.043665885925293
    9. ' "' → logprob: -3.168665885925293
    10. ' readline' → logprob: -3.668665885925293

Token 195: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5061357617378235
    2. '<|end|>' → logprob: -1.3811357021331787
    3. ')' → logprob: -2.5061357021331787
    4. '<|end|>' → logprob: -4.131135940551758
    5. ',' → logprob: -4.756135940551758
    6. '  ' → logprob: -4.881135940551758
    7. ' )' → logprob: -5.006135940551758
    8. ' ,' → logprob: -5.131135940551758
    9. '    ' → logprob: -5.256135940551758
    10. ' 
' → logprob: -5.881135940551758

Token 196: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.39095592498779297
    2. 'the' → logprob: -1.765955924987793
    3. ' number' → logprob: -2.390955924987793
    4. 'number' → logprob: -3.890955924987793
    5. ' an' → logprob: -4.515955924987793
    6. ' integers' → logprob: -4.515955924987793
    7. ' a' → logprob: -5.265955924987793
    8. 'int' → logprob: -5.515955924987793
    9. ' ' → logprob: -6.765955924987793
    10. 'a' → logprob: -7.015955924987793

Token 197: ' cost' (ID: 3097)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.25154078006744385
    2. ' number' → logprob: -1.8765407800674438
    3. 'subset' → logprob: -3.6265406608581543
    4. '<|end|>' → logprob: -4.001540660858154
    5. ' subset' → logprob: -4.626540660858154
    6. 'M' → logprob: -5.626540660858154
    7. 'count' → logprob: -6.376540660858154
    8. ' M' → logprob: -6.501540660858154
    9. 'a' → logprob: -6.751540660858154
    10. 'size' → logprob: -7.126540660858154

Token 198: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17242957651615143
    2. ' ' → logprob: -2.9224295616149902
    3. ' ,' → logprob: -3.1724295616149902
    4. ' b' → logprob: -3.9224295616149902
    5. '   ' → logprob: -4.04742956161499
    6. '<|end|>' → logprob: -4.42242956161499
    7. '    ' → logprob: -6.04742956161499
    8. '  ' → logprob: -6.29742956161499
    9. ' and' → logprob: -6.54742956161499
    10. '           ' → logprob: -6.54742956161499

Token 199: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.026138424873352
    2. 'b' → logprob: -1.651138424873352
    3. ' the' → logprob: -1.776138424873352
    4. ' subset' → logprob: -2.0261383056640625
    5. 'subset' → logprob: -2.2761383056640625
    6. ' b' → logprob: -3.7761383056640625
    7. ' subsets' → logprob: -4.2761383056640625
    8. 'sub' → logprob: -5.2761383056640625
    9. 'number' → logprob: -7.0261383056640625
    10. ' number' → logprob: -7.2761383056640625

Token 200: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.15983152389526367
    2. ' subset' → logprob: -2.0348315238952637
    3. 'sub' → logprob: -4.784831523895264
    4. 'set' → logprob: -5.909831523895264
    5. 'number' → logprob: -6.159831523895264
    6. ' subsets' → logprob: -6.284831523895264
    7. 'b' → logprob: -7.284831523895264
    8. ' number' → logprob: -7.909831523895264
    9. ' set' → logprob: -7.909831523895264
    10. ' next' → logprob: -8.909832000732422

Token 201: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6311382055282593
    2. '<|end|>' → logprob: -1.7561382055282593
    3. '\n' → logprob: -2.756138324737549
    4. ',' → logprob: -3.006138324737549
    5. '    
' → logprob: -3.131138324737549
    6. ' ' → logprob: -3.131138324737549
    7. ' 
' → logprob: -3.631138324737549
    8. '
' → logprob: -4.131138324737549
    9. '<|end|>' → logprob: -4.381138324737549
    10. '    ' → logprob: -4.631138324737549

Token 202: ' b' (ID: 287)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.795752227306366
    2. '<|end|>' → logprob: -1.0457522869110107
    3. ' ' → logprob: -2.5457522869110107
    4. ' n' → logprob: -3.5457522869110107
    5. '            ' → logprob: -4.295752048492432
    6. ' b' → logprob: -4.545752048492432
    7. '   ' → logprob: -4.670752048492432
    8. 'n' → logprob: -4.670752048492432
    9. '    ' → logprob: -4.795752048492432
    10. 'b' → logprob: -5.170752048492432

Token 203: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9684865474700928
    2. ',' → logprob: -1.4684865474700928
    3. '<|end|>' → logprob: -2.2184865474700928
    4. '   ' → logprob: -2.5934865474700928
    5. ')' → logprob: -3.0934865474700928
    6. ' ,' → logprob: -3.2184865474700928
    7. '    ' → logprob: -3.3434865474700928
    8. '  ' → logprob: -3.8434865474700928
    9. '<|end|>' → logprob: -4.093486785888672
    10. ' =' → logprob: -4.468486785888672

Token 204: ' not' (ID: 625)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.10096202045679092
    2. 'the' → logprob: -2.475961923599243
    3. '<|end|>' → logprob: -5.100962162017822
    4. 'number' → logprob: -5.850962162017822
    5. ' number' → logprob: -6.475962162017822
    6. ' ' → logprob: -7.725962162017822
    7. ' an' → logprob: -8.100961685180664
    8. ' a' → logprob: -8.225961685180664
    9. '<|end|>' → logprob: -8.350961685180664
    10. 'n' → logprob: -9.725961685180664

Token 205: ' used' (ID: 2061)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7963578701019287
    2. '\n' → logprob: -1.5463578701019287
    3. '<|end|>' → logprob: -2.6713578701019287
    4. ' ' → logprob: -3.4213578701019287
    5. ' \' → logprob: -3.4213578701019287
    6. ')' → logprob: -3.5463578701019287
    7. '0' → logprob: -3.9213578701019287
    8. ' used' → logprob: -4.046358108520508
    9. 'ignored' → logprob: -4.296358108520508
    10. 'n' → logprob: -4.546358108520508

Token 206: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.47508755326271057
    2. '   ' → logprob: -1.7250875234603882
    3. '
' → logprob: -2.2250876426696777
    4. ')' → logprob: -3.7250876426696777
    5. '    
' → logprob: -3.7250876426696777
    6. '  
' → logprob: -4.225087642669678
    7. ')
' → logprob: -4.975087642669678
    8. ' 
' → logprob: -5.725087642669678
    9. '\' → logprob: -5.975087642669678
    10. ',' → logprob: -6.350087642669678

Token 207: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1729879379272461
    2. ')' → logprob: -2.672987937927246
    3. '\n' → logprob: -3.172987937927246
    4. '           ' → logprob: -3.547987937927246
    5. '       ' → logprob: -5.047987937927246
    6. '
' → logprob: -5.547987937927246
    7. '    
' → logprob: -6.672987937927246
    8. ')
' → logprob: -7.047987937927246
    9. '    ' → logprob: -7.297987937927246
    10. ',' → logprob: -7.297987937927246

Token 208: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23821598291397095
    2. '   ' → logprob: -1.7382159233093262
    3. '       ' → logprob: -4.488215923309326
    4. '\n' → logprob: -4.863215923309326
    5. '
' → logprob: -5.113215923309326
    6. ' n' → logprob: -5.863215923309326
    7. 'n' → logprob: -6.238215923309326
    8. '               ' → logprob: -6.363215923309326
    9. ')' → logprob: -7.113215923309326
    10. ' for' → logprob: -7.363215923309326

Token 209: ' cs' (ID: 14980)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1142750978469849
    2. 'c' → logprob: -2.3642749786376953
    3. ' for' → logprob: -2.3642749786376953
    4. 'a' → logprob: -2.6142749786376953
    5. 's' → logprob: -3.4892749786376953
    6. ' c' → logprob: -3.6142749786376953
    7. 'next' → logprob: -3.7392749786376953
    8. 'int' → logprob: -3.8642749786376953
    9. '[' → logprob: -3.8642749786376953
    10. 'n' → logprob: -4.114274978637695

Token 210: '...' (ID: 1008)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15587565302848816
    2. 's' → logprob: -2.9058756828308105
    3. '=' → logprob: -3.2808756828308105
    4. '   ' → logprob: -4.0308756828308105
    5. ')' → logprob: -4.9058756828308105
    6. ',' → logprob: -5.1558756828308105
    7. ' ' → logprob: -5.4058756828308105
    8. 'et' → logprob: -6.0308756828308105
    9. '  ' → logprob: -6.4058756828308105
    10. ' s' → logprob: -6.5308756828308105

Token 211: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24578912556171417
    2. '   ' → logprob: -2.620789051055908
    3. ' =' → logprob: -2.745789051055908
    4. '=' → logprob: -4.120789051055908
    5. ' )' → logprob: -4.745789051055908
    6. '...' → logprob: -4.995789051055908
    7. '  ' → logprob: -5.370789051055908
    8. '[' → logprob: -5.495789051055908
    9. ' ' → logprob: -5.620789051055908
    10. '_' → logprob: -5.745789051055908

Token 212: ' space' (ID: 4918)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.7525962591171265
    2. ' c' → logprob: -1.8775962591171265
    3. ' cs' → logprob: -2.252596378326416
    4. 'cs' → logprob: -2.377596378326416
    5. '   ' → logprob: -2.627596378326416
    6. ' ' → logprob: -2.627596378326416
    7. ' list' → logprob: -2.877596378326416
    8. 's' → logprob: -2.877596378326416
    9. ' n' → logprob: -4.002596378326416
    10. ' for' → logprob: -4.127596378326416

Token 213: '-separated' (ID: 189658)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2309937477111816
    2. '-separated' → logprob: -1.7309937477111816
    3. 's' → logprob: -2.4809937477111816
    4. 'split' → logprob: -2.7309937477111816
    5. 'v' → logprob: -3.3559937477111816
    6. ' ' → logprob: -3.3559937477111816
    7. '<|end|>' → logprob: -3.6059937477111816
    8. 'n' → logprob: -3.9809937477111816
    9. 'tokens' → logprob: -4.230993747711182
    10. ' separated' → logprob: -4.230993747711182

Token 214: ' list' (ID: 1562)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4991578459739685
    2. '<|end|>' → logprob: -1.3741579055786133
    3. 'of' → logprob: -2.2491579055786133
    4. '<|end|>' → logprob: -4.749157905578613
    5. ' ' → logprob: -4.874157905578613
    6. '   ' → logprob: -4.874157905578613
    7. '_of' → logprob: -5.999157905578613
    8. ')' → logprob: -6.374157905578613
    9. 's' → logprob: -6.624157905578613
    10. '    ' → logprob: -6.749157905578613

Token 216: ' integer' (ID: 16336)
  Prédit: ' integers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.5636119842529297
    2. 'inte' → logprob: -1.1886119842529297
    3. 'item' → logprob: -2.9386119842529297
    4. ' item' → logprob: -3.3136119842529297
    5. 'items' → logprob: -4.06361198425293
    6. ' items' → logprob: -4.68861198425293
    7. 'ints' → logprob: -4.81361198425293
    8. 'int' → logprob: -7.06361198425293
    9. 'indices' → logprob: -7.56361198425293
    10. 'numbers' → logprob: -8.06361198425293

Token 217: ' item' (ID: 2169)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007049367763102055
    2. ' s' → logprob: -5.382049560546875
    3. '<|end|>' → logprob: -7.007049560546875
    4. '(s' → logprob: -8.132049560546875
    5. ')' → logprob: -8.257049560546875
    6. ' tokens' → logprob: -8.507049560546875
    7. ' ' → logprob: -8.507049560546875
    8. 'tokens' → logprob: -8.632049560546875
    9. '()' → logprob: -9.632049560546875
    10. ' items' → logprob: -9.882049560546875

Token 218: ' indices' (ID: 30378)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007752607110887766
    2. ' s' → logprob: -4.882752418518066
    3. '_list' → logprob: -10.757752418518066
    4. '<|end|>' → logprob: -11.007752418518066
    5. '_items' → logprob: -11.132752418518066
    6. '(s' → logprob: -11.382752418518066
    7. '_s' → logprob: -11.507752418518066
    8. ' ' → logprob: -11.757752418518066
    9. '_ids' → logprob: -11.882752418518066
    10. ' numbers' → logprob: -12.007752418518066

Token 219: ' included' (ID: 7360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5066444873809814
    2. '
' → logprob: -1.2566444873809814
    3. '\n' → logprob: -2.5066444873809814
    4. '    
' → logprob: -4.506644248962402
    5. 'def' → logprob: -5.381644248962402
    6. '  
' → logprob: -5.881644248962402
    7. ')' → logprob: -6.006644248962402
    8. ')
' → logprob: -6.381644248962402
    9. '):
' → logprob: -6.756644248962402
    10. '       ' → logprob: -7.006644248962402

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14319811761379242
    2. '   ' → logprob: -3.393198013305664
    3. 'in' → logprob: -3.768198013305664
    4. ')' → logprob: -3.893198013305664
    5. ' )' → logprob: -4.393198013305664
    6. ' ' → logprob: -4.518198013305664
    7. '  ' → logprob: -5.018198013305664
    8. '    ' → logprob: -5.143198013305664
    9. '<|end|>' → logprob: -5.393198013305664
    10. ' =' → logprob: -5.643198013305664

Token 221: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5776582360267639
    2. 'the' → logprob: -0.8276582360267639
    3. 'v' → logprob: -7.202658176422119
    4. ' v' → logprob: -7.827658176422119
    5. 'this' → logprob: -9.327658653259277
    6. 'subset' → logprob: -9.327658653259277
    7. ' subset' → logprob: -9.452658653259277
    8. ' this' → logprob: -9.577658653259277
    9. ' a' → logprob: -9.827658653259277
    10. 'a' → logprob: -10.452658653259277

Token 222: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.2802393138408661
    2. ' subset' → logprob: -1.6552393436431885
    3. 'set' → logprob: -3.2802393436431885
    4. 'sub' → logprob: -5.155239105224609
    5. ' set' → logprob: -5.655239105224609
    6. 'input' → logprob: -6.030239105224609
    7. ' subsets' → logprob: -6.530239105224609
    8. ' input' → logprob: -6.905239105224609
    9. '   ' → logprob: -8.15523910522461
    10. 'sets' → logprob: -8.28023910522461

Token 223: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21101872622966766
    2. '\n' → logprob: -2.5860188007354736
    3. '
' → logprob: -2.9610188007354736
    4. 'def' → logprob: -4.0860185623168945
    5. ')' → logprob: -4.7110185623168945
    6. '    
' → logprob: -4.7110185623168945
    7. ')
' → logprob: -4.9610185623168945
    8. '):
' → logprob: -5.3360185623168945
    9. '):' → logprob: -5.3360185623168945
    10. '  
' → logprob: -6.5860185623168945

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045279111713171005
    2. ')' → logprob: -3.795279026031494
    3. '\n' → logprob: -4.420279026031494
    4. '
' → logprob: -5.795279026031494
    5. '       ' → logprob: -6.545279026031494
    6. '    
' → logprob: -6.795279026031494
    7. ')
' → logprob: -7.045279026031494
    8. 'def' → logprob: -7.295279026031494
    9. '):
' → logprob: -7.295279026031494
    10. '           ' → logprob: -8.420279502868652

Token 225: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10694845020771027
    2. ')' → logprob: -2.9819483757019043
    3. '"""' → logprob: -3.7319483757019043
    4. '\n' → logprob: -3.9819483757019043
    5. '):' → logprob: -6.606948375701904
    6. '
' → logprob: -6.731948375701904
    7. '```' → logprob: -7.231948375701904
    8. '"' → logprob: -7.231948375701904
    9. ' """' → logprob: -7.356948375701904
    10. 'def' → logprob: -7.481948375701904

Token 226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020111948251724243
    2. '    
' → logprob: -6.252011299133301
    3. '
' → logprob: -10.3770112991333
    4. '    ' → logprob: -10.8770112991333
    5. 'def' → logprob: -11.6270112991333
    6. '       ' → logprob: -11.8770112991333
    7. '    
    
' → logprob: -12.6270112991333
    8. '   
' → logprob: -13.1270112991333
    9. '```' → logprob: -13.2520112991333
    10. '  
' → logprob: -13.5020112991333

Token 227: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22232718765735626
    2. 'N' → logprob: -2.34732723236084
    3. 'line' → logprob: -2.59732723236084
    4. ' line' → logprob: -4.47232723236084
    5. 'lines' → logprob: -5.09732723236084
    6. ' lines' → logprob: -5.72232723236084
    7. 'n' → logprob: -5.97232723236084
    8. 'data' → logprob: -6.47232723236084
    9. ' N' → logprob: -6.47232723236084
    10. 'input' → logprob: -6.59732723236084

Token 228: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1494578868150711
    2. 'line' → logprob: -2.5244579315185547
    3. 'n' → logprob: -2.8994579315185547
    4. '   ' → logprob: -6.649457931518555
    5. 'l' → logprob: -7.024457931518555
    6. 'raw' → logprob: -7.274457931518555
    7. 'lines' → logprob: -8.899457931518555
    8. ' line' → logprob: -9.149457931518555
    9. 'int' → logprob: -9.524457931518555
    10. 'input' → logprob: -9.524457931518555

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015739024383947253
    2. ',M' → logprob: -6.5015740394592285
    3. ' ,' → logprob: -10.00157356262207
    4. 'M' → logprob: -11.37657356262207
    5. ',
' → logprob: -11.62657356262207
    6. ' M' → logprob: -13.00157356262207
    7. ',m' → logprob: -14.25157356262207
    8. ',

' → logprob: -15.50157356262207
    9. ',
' → logprob: -15.56407356262207
    10. '_,' → logprob: -15.68907356262207

Token 230: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3869318664073944
    2. ' M' → logprob: -1.1369318962097168
    3. ' ' → logprob: -10.511931419372559
    4. '   ' → logprob: -11.511931419372559
    5. '    ' → logprob: -11.636931419372559
    6. ' ' → logprob: -13.386931419372559
    7. '  ' → logprob: -13.699431419372559
    8. ',M' → logprob: -13.699431419372559
    9. ']' → logprob: -13.761931419372559
    10. ',' → logprob: -13.824431419372559

Token 231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007468560361303389
    2. ']=' → logprob: -7.250746726989746
    3. ' ]' → logprob: -10.875746726989746
    4. '=' → logprob: -11.250746726989746
    5. '[' → logprob: -13.875746726989746
    6. ')' → logprob: -14.000746726989746
    7. ']
' → logprob: -14.000746726989746
    8. '   ' → logprob: -14.250746726989746
    9. ' =' → logprob: -14.375746726989746
    10. '],' → logprob: -14.750746726989746

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741477072238922
    2. ' =' → logprob: -0.9741476774215698
    3. ',' → logprob: -10.47414779663086
    4. '=sys' → logprob: -10.72414779663086
    5. '=list' → logprob: -11.84914779663086
    6. '=input' → logprob: -12.47414779663086
    7. '=line' → logprob: -12.84914779663086
    8. '=int' → logprob: -13.47414779663086
    9. ' ' → logprob: -14.22414779663086
    10. '=
' → logprob: -14.34914779663086

Token 233: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.70439612865448
    2. ' map' → logprob: -1.07939612865448
    3. ' list' → logprob: -2.3293962478637695
    4. 'list' → logprob: -2.7043962478637695
    5. '[' → logprob: -6.7043962478637695
    6. ' [' → logprob: -8.32939624786377
    7. 'm' → logprob: -10.45439624786377
    8. '	map' → logprob: -11.82939624786377
    9. '[list' → logprob: -11.95439624786377
    10. ' ' → logprob: -12.07939624786377

Token 234: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08010319620370865
    2. 'int' → logprob: -2.5801031589508057
    3. ' int' → logprob: -7.455103397369385
    4. '(' → logprob: -7.455103397369385
    5. '<int' → logprob: -10.205102920532227
    6. 'list' → logprob: -12.205102920532227
    7. ' (' → logprob: -12.705102920532227
    8. '[int' → logprob: -12.830102920532227
    9. '(
' → logprob: -13.330102920532227
    10. ']int' → logprob: -13.580102920532227

Token 235: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.25997447967529297
    2. ',' → logprob: -2.509974479675293
    3. 'sys' → logprob: -2.634974479675293
    4. ')' → logprob: -2.884974479675293
    5. 'input' → logprob: -4.509974479675293
    6. '(input' → logprob: -5.634974479675293
    7. ',input' → logprob: -6.009974479675293
    8. '(' → logprob: -6.759974479675293
    9. ' sys' → logprob: -6.759974479675293
    10. '=sys' → logprob: -8.384974479675293

Token 236: ' raw' (ID: 11428)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005251660477370024
    2. ' sys' → logprob: -5.255251884460449
    3. 'input' → logprob: -11.00525188446045
    4. '=sys' → logprob: -15.13025188446045
    5. '   ' → logprob: -15.50525188446045
    6. '(sys' → logprob: -15.63025188446045
    7. '	sys' → logprob: -15.63025188446045
    8. 'stdin' → logprob: -15.63025188446045
    9. ' input' → logprob: -15.88025188446045
    10. ')' → logprob: -16.130250930786133

Token 237: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0010164948180317879
    2. '_' → logprob: -7.251016616821289
    3. 'input' → logprob: -8.376016616821289
    4. ' _' → logprob: -10.376016616821289
    5. '_in' → logprob: -10.876016616821289
    6. ')' → logprob: -12.251016616821289
    7. '(' → logprob: -12.501016616821289
    8. '()' → logprob: -12.501016616821289
    9. '_inputs' → logprob: -13.001016616821289
    10. '(_' → logprob: -13.251016616821289

Token 238: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010412635747343302
    2. '()' → logprob: -6.876041412353516
    3. '())' → logprob: -12.251041412353516
    4. '()[' → logprob: -13.626041412353516
    5. '(' → logprob: -14.001041412353516
    6. '('' → logprob: -14.876041412353516
    7. ' ().' → logprob: -15.251041412353516
    8. '().'' → logprob: -15.376041412353516
    9. ')' → logprob: -15.501041412353516
    10. '()
' → logprob: -15.501041412353516

Token 239: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019408921943977475
    2. 'strip' → logprob: -6.251940727233887
    3. ' split' → logprob: -12.501940727233887
    4. '().' → logprob: -12.751940727233887
    5. 'rstrip' → logprob: -12.751940727233887
    6. '(split' → logprob: -13.126940727233887
    7. '()' → logprob: -15.376940727233887
    8. 'decode' → logprob: -15.876940727233887
    9. ')' → logprob: -16.001941680908203
    10. 'read' → logprob: -16.126941680908203

Token 240: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.013235875405371189
    2. ')' → logprob: -4.763236045837402
    3. '()' → logprob: -5.388236045837402
    4. '(' → logprob: -10.888236045837402
    5. '())
' → logprob: -11.263236045837402
    6. ' ())' → logprob: -13.013236045837402
    7. '());' → logprob: -13.638236045837402
    8. '()))' → logprob: -13.763236045837402
    9. '().' → logprob: -14.013236045837402
    10. '('' → logprob: -14.138236045837402

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0643589049577713
    2. '    
' → logprob: -3.314358949661255
    3. '
' → logprob: -4.689358711242676
    4. ' 
' → logprob: -5.689358711242676
    5. '[N' → logprob: -6.314358711242676
    6. '[' → logprob: -6.439358711242676
    7. '  
' → logprob: -6.689358711242676
    8. 'v' → logprob: -6.814358711242676
    9. '<|end|>' → logprob: -6.939358711242676
    10. 'tokens' → logprob: -7.189358711242676

Token 242: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.29406535625457764
    2. ' v' → logprob: -1.4190653562545776
    3. '   ' → logprob: -4.544065475463867
    4. '	v' → logprob: -7.794065475463867
    5. '    
' → logprob: -7.794065475463867
    6. ' subsets' → logprob: -7.794065475463867
    7. 'M' → logprob: -9.169065475463867
    8. ' sets' → logprob: -9.169065475463867
    9. '
' → logprob: -9.294065475463867
    10. 'tokens' → logprob: -9.544065475463867

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20189177989959717
    2. ' =' → logprob: -1.7018917798995972
    3. '.append' → logprob: -8.451891899108887
    4. '.' → logprob: -8.701891899108887
    5. '=[]' → logprob: -10.451891899108887
    6. ',' → logprob: -11.326891899108887
    7. ')' → logprob: -11.826891899108887
    8. '[' → logprob: -11.826891899108887
    9. ' =
' → logprob: -11.826891899108887
    10. '=
' → logprob: -11.951891899108887

Token 244: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2684411108493805
    2. ' []' → logprob: -1.518441081047058
    3. '[' → logprob: -4.143441200256348
    4. ' [' → logprob: -7.643441200256348
    5. '[]
' → logprob: -10.893441200256348
    6. ' ' → logprob: -13.018441200256348
    7. ' []
' → logprob: -13.143441200256348
    8. '[
' → logprob: -13.268441200256348
    9. '[]>' → logprob: -14.143441200256348
    10. '[]=' → logprob: -14.143441200256348

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2281038761138916
    2. 'for' → logprob: -1.8531038761138916
    3. ' for' → logprob: -3.3531038761138916
    4. '
' → logprob: -4.8531036376953125
    5. '	for' → logprob: -6.2281036376953125
    6. '    
' → logprob: -6.4781036376953125
    7. '<|end|>' → logprob: -7.9781036376953125
    8. '  
' → logprob: -8.603103637695312
    9. '	
' → logprob: -8.978103637695312
    10. '    ' → logprob: -9.978103637695312

Token 246: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008498627692461014
    2. ' for' → logprob: -4.883498668670654
    3. '   ' → logprob: -7.258498668670654
    4. '
' → logprob: -8.883498191833496
    5. '	for' → logprob: -10.133498191833496
    6. '    
' → logprob: -12.008498191833496
    7. ' 
' → logprob: -13.258498191833496
    8. '    ' → logprob: -15.008498191833496
    9. '	
' → logprob: -15.008498191833496
    10. ' ' → logprob: -15.008498191833496

Token 247: ' k' (ID: 372)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.40384265780448914
    2. '_' → logprob: -1.1538426876068115
    3. ' i' → logprob: -4.278842449188232
    4. 'i' → logprob: -6.028842449188232
    5. '_i' → logprob: -8.02884292602539
    6. ' ' → logprob: -8.77884292602539
    7. ' in' → logprob: -11.27884292602539
    8. ' line' → logprob: -11.65384292602539
    9. ' range' → logprob: -11.65384292602539
    10. '__' → logprob: -11.90384292602539

Token 248: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3169991374015808
    2. 'in' → logprob: -1.3169991970062256
    3. ' ' → logprob: -5.6919989585876465
    4. '_' → logprob: -8.191999435424805
    5. '	in' → logprob: -10.566999435424805
    6. ' _' → logprob: -11.066999435424805
    7. '    ' → logprob: -11.441999435424805
    8. '  ' → logprob: -12.441999435424805
    9. ' ,' → logprob: -12.566999435424805
    10. '0' → logprob: -13.066999435424805

Token 249: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11079573631286621
    2. ' range' → logprob: -2.610795736312866
    3. ' xrange' → logprob: -3.610795736312866
    4. 'x' → logprob: -5.610795974731445
    5. 'raw' → logprob: -7.485795974731445
    6. ' ' → logprob: -9.735795974731445
    7. '	range' → logprob: -10.610795974731445
    8. ' raw' → logprob: -10.985795974731445
    9. '  ' → logprob: -11.360795974731445
    10. '   ' → logprob: -11.985795974731445

Token 250: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.004113069735467434
    2. '(' → logprob: -5.50411319732666
    3. ' (' → logprob: -11.50411319732666
    4. '(m' → logprob: -11.87911319732666
    5. 'M' → logprob: -12.00411319732666
    6. '(
' → logprob: -12.25411319732666
    7. ' M' → logprob: -12.37911319732666
    8. '   ' → logprob: -14.25411319732666
    9. '(int' → logprob: -14.37911319732666
    10. '	M' → logprob: -15.62911319732666

Token 251: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055927690118551254
    2. '):
' → logprob: -2.9309277534484863
    3. ' ):' → logprob: -7.555927753448486
    4. ')' → logprob: -8.805927276611328
    5. ':' → logprob: -9.055927276611328
    6. '+' → logprob: -9.180927276611328
    7. '   ' → logprob: -9.305927276611328
    8. '):
' → logprob: -10.555927276611328
    9. ' ):
' → logprob: -10.805927276611328
    10. ' ' → logprob: -12.930927276611328

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017653238028287888
    2. 'a' → logprob: -5.142653465270996
    3. '   ' → logprob: -5.392653465270996
    4. ' a' → logprob: -5.767653465270996
    5. ' line' → logprob: -6.392653465270996
    6. '    ' → logprob: -7.517653465270996
    7. '	' → logprob: -8.267653465270996
    8. 'line' → logprob: -8.267653465270996
    9. '	   ' → logprob: -8.642653465270996
    10. '[' → logprob: -9.392653465270996

Token 253: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.016343440860509872
    2. ' a' → logprob: -4.391343593597412
    3. 'line' → logprob: -6.391343593597412
    4. '   ' → logprob: -7.016343593597412
    5. '       ' → logprob: -7.266343593597412
    6. ' line' → logprob: -8.641343116760254
    7. 'l' → logprob: -9.516343116760254
    8. 's' → logprob: -10.016343116760254
    9. '	a' → logprob: -10.016343116760254
    10. '[a' → logprob: -10.266343116760254

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004559592343866825
    2. ',b' → logprob: -5.754559516906738
    3. ' ,' → logprob: -6.879559516906738
    4. 'b' → logprob: -8.879559516906738
    5. '=' → logprob: -9.254559516906738
    6. ' b' → logprob: -9.754559516906738
    7. ' ' → logprob: -10.879559516906738
    8. ' =' → logprob: -11.254559516906738
    9. '[' → logprob: -13.004559516906738
    10. ',int' → logprob: -13.129559516906738

Token 255: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08108026534318924
    2. ' b' → logprob: -2.581080198287964
    3. '_' → logprob: -6.331080436706543
    4. '_=' → logprob: -8.956080436706543
    5. ' _' → logprob: -9.206080436706543
    6. '_b' → logprob: -9.831080436706543
    7. 'flag' → logprob: -9.956080436706543
    8. ' ' → logprob: -10.456080436706543
    9. ' flag' → logprob: -11.706080436706543
    10. '	b' → logprob: -11.956080436706543

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08894721418619156
    2. ' =' → logprob: -2.463947296142578
    3. ')' → logprob: -12.588947296142578
    4. '[' → logprob: -14.088947296142578
    5. ')=' → logprob: -14.213947296142578
    6. ',' → logprob: -14.338947296142578
    7. '   ' → logprob: -14.588947296142578
    8. ' ' → logprob: -14.838947296142578
    9. '=input' → logprob: -15.213947296142578
    10. '<|end|>' → logprob: -15.213947296142578

Token 257: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.038057904690504074
    2. 'map' → logprob: -3.288057804107666
    3. ' list' → logprob: -11.538058280944824
    4. '	map' → logprob: -12.663058280944824
    5. 'list' → logprob: -13.163058280944824
    6. ' ' → logprob: -14.538058280944824
    7. 'm' → logprob: -15.663058280944824
    8. ' raw' → logprob: -15.788058280944824
    9. '(map' → logprob: -15.788058280944824
    10. ' tuple' → logprob: -15.913058280944824

Token 258: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001720742875477299
    2. '(' → logprob: -9.000171661376953
    3. 'int' → logprob: -10.000171661376953
    4. '<int' → logprob: -14.125171661376953
    5. '=int' → logprob: -14.375171661376953
    6. '(lambda' → logprob: -14.500171661376953
    7. '(
' → logprob: -14.625171661376953
    8. '[int' → logprob: -14.750171661376953
    9. ' (' → logprob: -15.625171661376953
    10. ' int' → logprob: -15.750171661376953

Token 259: ',' (ID: 11)
  Prédit: '(raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.0413079634308815
    2. '(' → logprob: -4.2913079261779785
    3. ')' → logprob: -4.5413079261779785
    4. ',' → logprob: -4.7913079261779785
    5. 'raw' → logprob: -4.9163079261779785
    6. '(sys' → logprob: -9.041308403015137
    7. '(
' → logprob: -9.291308403015137
    8. ' raw' → logprob: -9.666308403015137
    9. '	raw' → logprob: -10.041308403015137
    10. '(input' → logprob: -10.416308403015137

Token 260: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.07027740776538849
    2. ' raw' → logprob: -2.695277452468872
    3. 'sys' → logprob: -8.195277214050293
    4. ' sys' → logprob: -10.445277214050293
    5. '(raw' → logprob: -11.320277214050293
    6. 'input' → logprob: -11.445277214050293
    7. '	raw' → logprob: -11.445277214050293
    8. ' input' → logprob: -14.195277214050293
    9. ' ' → logprob: -14.320277214050293
    10. '.raw' → logprob: -14.945277214050293

Token 261: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.03398890048265457
    2. 'input' → logprob: -3.4089889526367188
    3. 'split' → logprob: -8.408988952636719
    4. 'put' → logprob: -10.033988952636719
    5. 'import' → logprob: -10.283988952636719
    6. 'Input' → logprob: -10.533988952636719
    7. 'in' → logprob: -13.033988952636719
    8. 'v' → logprob: -13.658988952636719
    9. 's' → logprob: -13.783988952636719
    10. '```' → logprob: -13.783988952636719

Token 262: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010986098641296849
    2. '()' → logprob: -9.125109672546387
    3. '()
' → logprob: -15.500109672546387
    4. '()[' → logprob: -15.750109672546387
    5. '())' → logprob: -15.875109672546387
    6. ')' → logprob: -15.875109672546387
    7. '(' → logprob: -15.875109672546387
    8. ' ().' → logprob: -16.250110626220703
    9. '().
' → logprob: -17.250110626220703
    10. '().'' → logprob: -17.375110626220703

Token 263: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.1008713702030946e-06
    2. 'strip' → logprob: -13.375001907348633
    3. ' split' → logprob: -15.250001907348633
    4. '().' → logprob: -16.500001907348633
    5. '(split' → logprob: -16.500001907348633
    6. '.split' → logprob: -17.125001907348633
    7. 'rstrip' → logprob: -19.125001907348633
    8. 'spl' → logprob: -19.250001907348633
    9. ')' → logprob: -19.500001907348633
    10. ').' → logprob: -21.000001907348633

Token 264: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1844196617603302
    2. ')' → logprob: -1.9344196319580078
    3. '()' → logprob: -4.184419631958008
    4. '())
' → logprob: -4.809419631958008
    5. ')
' → logprob: -8.184419631958008
    6. '())
' → logprob: -9.309419631958008
    7. '(' → logprob: -9.809419631958008
    8. '()
' → logprob: -9.934419631958008
    9. '   ' → logprob: -11.434419631958008
    10. '());' → logprob: -11.559419631958008

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5897576808929443
    2. '<|end|>' → logprob: -1.3397576808929443
    3. '
' → logprob: -2.0897576808929443
    4. '        
' → logprob: -3.3397576808929443
    5. '<|end|>' → logprob: -4.839757919311523
    6. '  
' → logprob: -5.839757919311523
    7. ')' → logprob: -6.214757919311523
    8. '    
' → logprob: -6.464757919311523
    9. '   ' → logprob: -6.714757919311523
    10. '[' → logprob: -6.964757919311523

Token 266: ' #' (ID: 1069)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.6446540951728821
    2. 'items' → logprob: -1.7696540355682373
    3. 's' → logprob: -2.2696540355682373
    4. '       ' → logprob: -2.2696540355682373
    5. '   ' → logprob: -3.0196540355682373
    6. 'c' → logprob: -4.144654273986816
    7. ' items' → logprob: -4.519654273986816
    8. 'line' → logprob: -5.644654273986816
    9. 'subset' → logprob: -5.644654273986816
    10. ' cs' → logprob: -5.769654273986816

Token 267: ' Read' (ID: 5405)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' items' → logprob: -1.1081124544143677
    2. 'items' → logprob: -1.1081124544143677
    3. 'cs' → logprob: -1.7331124544143677
    4. 's' → logprob: -3.233112335205078
    5. ' cs' → logprob: -3.608112335205078
    6. ' line' → logprob: -3.733112335205078
    7. 'line' → logprob: -3.983112335205078
    8. ' s' → logprob: -4.108112335205078
    9. ' subset' → logprob: -4.608112335205078
    10. 'subset' → logprob: -4.733112335205078

Token 268: ' the' (ID: 290)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.7221431136131287
    2. 'cs' → logprob: -1.5971431732177734
    3. 'items' → logprob: -2.2221431732177734
    4. ' cs' → logprob: -2.7221431732177734
    5. ' line' → logprob: -3.0971431732177734
    6. '   ' → logprob: -3.3471431732177734
    7. 'line' → logprob: -4.472143173217773
    8. '       ' → logprob: -4.972143173217773
    9. ' s' → logprob: -5.097143173217773
    10. ' subset' → logprob: -5.222143173217773

Token 269: ' next' (ID: 2613)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.5380346179008484
    2. 'items' → logprob: -1.1630346775054932
    3. ' items' → logprob: -3.163034677505493
    4. ' cs' → logprob: -4.038034439086914
    5. 'c' → logprob: -4.538034439086914
    6. 'line' → logprob: -4.913034439086914
    7. 'subset' → logprob: -5.413034439086914
    8. ' line' → logprob: -5.538034439086914
    9. 'indices' → logprob: -5.663034439086914
    10. ' subset' → logprob: -6.038034439086914

Token 270: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.28443342447280884
    2. ' line' → logprob: -1.409433364868164
    3. '   ' → logprob: -7.534433364868164
    4. 'raw' → logprob: -7.534433364868164
    5. 'v' → logprob: -8.159433364868164
    6. '_line' → logprob: -8.284433364868164
    7. ' ' → logprob: -8.409433364868164
    8. 'input' → logprob: -8.534433364868164
    9. 'cs' → logprob: -8.534433364868164
    10. ' raw' → logprob: -8.534433364868164

Token 271: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03455198183655739
    2. ',' → logprob: -5.159552097320557
    3. 'items' → logprob: -5.159552097320557
    4. ' line' → logprob: -5.409552097320557
    5. 'tokens' → logprob: -5.534552097320557
    6. ' items' → logprob: -5.659552097320557
    7. 'line' → logprob: -6.159552097320557
    8. 'cs' → logprob: -6.909552097320557
    9. '   ' → logprob: -7.159552097320557
    10. 's' → logprob: -7.284552097320557

Token 272: ' indices' (ID: 30378)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3347342610359192
    2. 'items' → logprob: -2.4597342014312744
    3. 'cs' → logprob: -2.4597342014312744
    4. ' items' → logprob: -3.0847342014312744
    5. 's' → logprob: -3.9597342014312744
    6. '   ' → logprob: -3.9597342014312744
    7. ' s' → logprob: -5.5847344398498535
    8. ' cs' → logprob: -5.5847344398498535
    9. 'line' → logprob: -5.7097344398498535
    10. ' parts' → logprob: -6.3347344398498535

Token 273: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4070046842098236
    2. '=' → logprob: -1.282004714012146
    3. '   ' → logprob: -3.6570045948028564
    4. '       ' → logprob: -4.5320048332214355
    5. 'tokens' → logprob: -5.5320048332214355
    6. ' of' → logprob: -6.1570048332214355
    7. 'v' → logprob: -6.5320048332214355
    8. 'items' → logprob: -6.9070048332214355
    9. '_items' → logprob: -7.0320048332214355
    10. '    ' → logprob: -7.0320048332214355

Token 274: ' elements' (ID: 8632)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9532844424247742
    2. 'items' → logprob: -1.078284502029419
    3. 'subset' → logprob: -1.578284502029419
    4. ' the' → logprob: -3.828284502029419
    5. 'selected' → logprob: -3.953284502029419
    6. ' subset' → logprob: -4.95328426361084
    7. ' items' → logprob: -4.95328426361084
    8. 'sub' → logprob: -5.07828426361084
    9. ' subsets' → logprob: -6.20328426361084
    10. 'included' → logprob: -6.95328426361084

Token 275: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10139329731464386
    2. ' =' → logprob: -3.726393222808838
    3. 's' → logprob: -4.601393222808838
    4. ' elems' → logprob: -4.601393222808838
    5. 'elements' → logprob: -4.976393222808838
    6. 'items' → logprob: -5.226393222808838
    7. 'indices' → logprob: -5.351393222808838
    8. 'tokens' → logprob: -5.351393222808838
    9. 'subset' → logprob: -5.351393222808838
    10. '=' → logprob: -5.601393222808838

Token 276: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6178668737411499
    2. 'v' → logprob: -1.49286687374115
    3. ' the' → logprob: -2.8678669929504395
    4. ' v' → logprob: -3.1178669929504395
    5. 'raw' → logprob: -3.2428669929504395
    6. 'set' → logprob: -3.3678669929504395
    7. 'subset' → logprob: -3.4928669929504395
    8. ' subsets' → logprob: -5.1178669929504395
    9. 'sets' → logprob: -5.6178669929504395
    10. ' subset' → logprob: -5.6178669929504395

Token 277: ' current' (ID: 2208)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.013518180698156357
    2. ' subset' → logprob: -5.013518333435059
    3. 'set' → logprob: -5.138518333435059
    4. 'sub' → logprob: -8.638518333435059
    5. 'current' → logprob: -8.638518333435059
    6. 'selected' → logprob: -9.138518333435059
    7. 'v' → logprob: -9.138518333435059
    8. 'k' → logprob: -9.138518333435059
    9. 'next' → logprob: -9.638518333435059
    10. ' set' → logprob: -10.388518333435059

Token 278: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -0.288970023393631
    2. ' subset' → logprob: -1.6639699935913086
    3. 'set' → logprob: -3.2889699935913086
    4. 'v' → logprob: -4.288969993591309
    5. ' set' → logprob: -5.288969993591309
    6. '_subset' → logprob: -6.288969993591309
    7. ' v' → logprob: -6.288969993591309
    8. ' subsets' → logprob: -7.163969993591309
    9. '   ' → logprob: -8.663969993591309
    10. '_set' → logprob: -9.038969993591309

Token 279: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01549000758677721
    2. 'elements' → logprob: -6.0154900550842285
    3. 'indices' → logprob: -6.5154900550842285
    4. '
' → logprob: -6.5154900550842285
    5. '<|end|>' → logprob: -6.7654900550842285
    6. '        
' → logprob: -6.8904900550842285
    7. ',' → logprob: -7.0154900550842285
    8. '   ' → logprob: -7.1404900550842285
    9. '<|end|>' → logprob: -7.1404900550842285
    10. 'tokens' → logprob: -7.3904900550842285

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019373690709471703
    2. 's' → logprob: -6.269373893737793
    3. ' s' → logprob: -6.269373893737793
    4. ' line' → logprob: -6.394373893737793
    5. 'indices' → logprob: -6.519373893737793
    6. 'elements' → logprob: -6.519373893737793
    7. ' elems' → logprob: -6.519373893737793
    8. ',' → logprob: -6.644373893737793
    9. '   ' → logprob: -6.644373893737793
    10. ' elements' → logprob: -6.769373893737793

Token 281: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' (adapté à ' cs') → logprob: -0.5526448488235474
    2. 'items' → logprob: -1.9276448488235474
    3. 'subset' → logprob: -2.177644729614258
    4. 'elements' → logprob: -2.552644729614258
    5. 'indices' → logprob: -3.302644729614258
    6. '   ' → logprob: -4.677644729614258
    7. 's' → logprob: -4.677644729614258
    8. ' items' → logprob: -5.177644729614258
    9. ' subset' → logprob: -5.552644729614258
    10. ' elems' → logprob: -5.677644729614258

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1427767425775528
    2. ' =' → logprob: -2.0177767276763916
    3. '   ' → logprob: -9.267776489257812
    4. '    ' → logprob: -13.267776489257812
    5. ' ' → logprob: -13.517776489257812
    6. '=line' → logprob: -13.892776489257812
    7. '	' → logprob: -14.267776489257812
    8. '  ' → logprob: -14.267776489257812
    9. '=list' → logprob: -14.517776489257812
    10. '=[]' → logprob: -15.017776489257812

Token 283: ' [' (ID: 723)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.27050796151161194
    2. 'list' → logprob: -1.5205079317092896
    3. ' map' → logprob: -4.5205078125
    4. ' list' → logprob: -4.8955078125
    5. 'set' → logprob: -10.5205078125
    6. '	map' → logprob: -12.5205078125
    7. '[' → logprob: -12.6455078125
    8. 'raw' → logprob: -13.2705078125
    9. 'tuple' → logprob: -13.5205078125
    10. ' ' → logprob: -13.5205078125

Token 284: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.729906196298543e-06
    2. 'map' → logprob: -12.000009536743164
    3. ' int' → logprob: -13.000009536743164
    4. ']int' → logprob: -15.125009536743164
    5. ']' → logprob: -15.375009536743164
    6. ' ' → logprob: -15.500009536743164
    7. '  ' → logprob: -15.875009536743164
    8. '   ' → logprob: -15.875009536743164
    9. '[int' → logprob: -16.125009536743164
    10. '0' → logprob: -16.250009536743164

Token 285: '(e' (ID: 3454)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.08151482045650482
    2. '(i' → logprob: -2.581514835357666
    3. '(' → logprob: -6.831514835357666
    4. '(token' → logprob: -7.331514835357666
    5. '(s' → logprob: -8.581514358520508
    6. '()]' → logprob: -8.956514358520508
    7. 'x' → logprob: -9.206514358520508
    8. '(tok' → logprob: -9.331514358520508
    9. '(raw' → logprob: -9.581514358520508
    10. '()' → logprob: -9.831514358520508

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002605268033221364
    2. 'for' → logprob: -6.627605438232422
    3. '()' → logprob: -7.377605438232422
    4. '())' → logprob: -7.752605438232422
    5. ' for' → logprob: -9.627605438232422
    6. 'raw' → logprob: -10.502605438232422
    7. ' )' → logprob: -10.627605438232422
    8. 'token' → logprob: -10.627605438232422
    9. '(x' → logprob: -10.877605438232422
    10. '(' → logprob: -11.377605438232422

Token 287: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1491639614105225
    2. '()' → logprob: -1.1491639614105225
    3. 'for' → logprob: -1.3991639614105225
    4. ')' → logprob: -2.1491639614105225
    5. '())' → logprob: -6.274164199829102
    6. '()]' → logprob: -8.899164199829102
    7. ' )' → logprob: -9.024164199829102
    8. ' ()' → logprob: -9.149164199829102
    9. '()
' → logprob: -9.274164199829102
    10. ' ' → logprob: -9.399164199829102

Token 288: ' e' (ID: 319)
  Prédit: ' raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.2813243865966797
    2. 'raw' → logprob: -1.4063243865966797
    3. '(raw' → logprob: -9.78132438659668
    4. '	raw' → logprob: -10.15632438659668
    5. ' sys' → logprob: -10.28132438659668
    6. '_raw' → logprob: -11.03132438659668
    7. 'sys' → logprob: -11.53132438659668
    8. ' ' → logprob: -12.03132438659668
    9. '_' → logprob: -13.15632438659668
    10. 'x' → logprob: -13.53132438659668

Token 289: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5924787521362305
    2. 'in' → logprob: -1.0924787521362305
    3. 'raw' → logprob: -2.3424787521362305
    4. ' raw' → logprob: -4.2174787521362305
    5. '(raw' → logprob: -7.4674787521362305
    6. '	raw' → logprob: -9.09247875213623
    7. ' ' → logprob: -10.09247875213623
    8. '_raw' → logprob: -10.34247875213623
    9. '  ' → logprob: -11.34247875213623
    10. ',' → logprob: -11.77997875213623

Token 290: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.007654422894120216
    2. ' raw' → logprob: -5.132654190063477
    3. 'sys' → logprob: -6.382654190063477
    4. ' sys' → logprob: -11.007654190063477
    5. '(raw' → logprob: -11.882654190063477
    6. '	raw' → logprob: -12.507654190063477
    7. '
' → logprob: -13.632654190063477
    8. '   ' → logprob: -14.382654190063477
    9. 'strip' → logprob: -14.382654190063477
    10. '_raw' → logprob: -14.507654190063477

Token 291: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.38762736320495605
    2. 'input' → logprob: -1.137627363204956
    3. 'split' → logprob: -8.012627601623535
    4. 'in' → logprob: -8.512627601623535
    5. 'put' → logprob: -10.637627601623535
    6. 'strip' → logprob: -10.762627601623535
    7. '_line' → logprob: -10.762627601623535
    8. 'line' → logprob: -10.887627601623535
    9. '   ' → logprob: -11.012627601623535
    10. 'import' → logprob: -11.137627601623535

Token 292: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.6312321753939614e-05
    2. '()' → logprob: -10.250036239624023
    3. ' ().' → logprob: -14.375036239624023
    4. '()]' → logprob: -15.625036239624023
    5. '()].' → logprob: -16.250036239624023
    6. '.split' → logprob: -17.250036239624023
    7. '()
' → logprob: -18.375036239624023
    8. '(' → logprob: -18.375036239624023
    9. '()[' → logprob: -18.625036239624023
    10. 'split' → logprob: -19.250036239624023

Token 293: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.693425714969635
    2. 'strip' → logprob: -0.693425714969635
    3. 'rstrip' → logprob: -8.193426132202148
    4. ' strip' → logprob: -13.943426132202148
    5. '(split' → logprob: -14.693426132202148
    6. ' split' → logprob: -14.818426132202148
    7. 'read' → logprob: -15.818426132202148
    8. 'spl' → logprob: -16.19342613220215
    9. '(strip' → logprob: -17.19342613220215
    10. '.strip' → logprob: -17.31842613220215

Token 294: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0015398615505546331
    2. '()' → logprob: -6.501539707183838
    3. ']' → logprob: -10.751540184020996
    4. '()]
' → logprob: -11.876540184020996
    5. '())' → logprob: -12.251540184020996
    6. '(' → logprob: -13.126540184020996
    7. ' ()' → logprob: -14.376540184020996
    8. ')]' → logprob: -14.626540184020996
    9. '()][' → logprob: -14.876540184020996
    10. ']()' → logprob: -15.376540184020996

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015793971717357635
    2. '        
' → logprob: -5.390793800354004
    3. '<|end|>' → logprob: -5.390793800354004
    4. '
' → logprob: -6.015793800354004
    5. '   ' → logprob: -6.265793800354004
    6. '    
' → logprob: -7.765793800354004
    7. '<|end|>' → logprob: -7.765793800354004
    8. ')' → logprob: -7.765793800354004
    9. ' 
' → logprob: -8.515793800354004
    10. '  
' → logprob: -8.890793800354004

Token 296: ' #' (ID: 1069)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.3247605860233307
    2. 'mask' → logprob: -1.8247605562210083
    3. '   ' → logprob: -2.949760675430298
    4. 'f' → logprob: -3.324760675430298
    5. 'bit' → logprob: -5.074760437011719
    6. ' flag' → logprob: -5.324760437011719
    7. 'm' → logprob: -5.574760437011719
    8. 's' → logprob: -6.574760437011719
    9. ' mask' → logprob: -6.574760437011719
    10. 'ms' → logprob: -6.824760437011719

Token 297: ' Compute' (ID: 45438)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.07445599138736725
    2. 'mask' → logprob: -2.949455976486206
    3. 'bit' → logprob: -5.199456214904785
    4. 'v' → logprob: -5.824456214904785
    5. ' flag' → logprob: -5.949456214904785
    6. 'f' → logprob: -6.449456214904785
    7. '   ' → logprob: -6.699456214904785
    8. 's' → logprob: -6.824456214904785
    9. '#' → logprob: -7.324456214904785
    10. 'val' → logprob: -8.074456214904785

Token 298: ' the' (ID: 290)
  Prédit: ' flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.6047361493110657
    2. 'flag' → logprob: -0.8547361493110657
    3. ' mask' → logprob: -4.354736328125
    4. 'mask' → logprob: -4.854736328125
    5. '   ' → logprob: -5.854736328125
    6. '(flag' → logprob: -6.604736328125
    7. ' the' → logprob: -7.354736328125
    8. ' bit' → logprob: -7.604736328125
    9. ' subset' → logprob: -8.604736328125
    10. ' s' → logprob: -8.604736328125

Token 299: ' bit' (ID: 3546)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.043103668838739395
    2. 'mask' → logprob: -3.5431036949157715
    3. 'bit' → logprob: -4.7931036949157715
    4. ' flag' → logprob: -6.1681036949157715
    5. 'f' → logprob: -7.5431036949157715
    6. '_flag' → logprob: -7.9181036949157715
    7. 'bits' → logprob: -8.168103218078613
    8. 'sum' → logprob: -8.418103218078613
    9. 'subset' → logprob: -8.668103218078613
    10. ' mask' → logprob: -8.793103218078613

Token 300: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.08174509555101395
    2. '_' → logprob: -3.456745147705078
    3. '_mask' → logprob: -3.456745147705078
    4. '   ' → logprob: -5.831745147705078
    5. 'm' → logprob: -5.956745147705078
    6. '=' → logprob: -5.956745147705078
    7. ' =' → logprob: -6.581745147705078
    8. ')' → logprob: -7.081745147705078
    9. ' <<=' → logprob: -7.081745147705078
    10. ' _' → logprob: -7.831745147705078

Token 301: ' '' (ID: 461)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2359082698822021
    2. 'mask' → logprob: -1.6109082698822021
    3. ' =' → logprob: -1.9859082698822021
    4. 'flag' → logprob: -2.360908269882202
    5. ' flag' → logprob: -2.610908269882202
    6. ' mask' → logprob: -2.860908269882202
    7. ' for' → logprob: -2.985908269882202
    8. '   ' → logprob: -3.610908269882202
    9. ' s' → logprob: -3.985908269882202
    10. 's' → logprob: -4.610908508300781

Token 302: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.024799063801765442
    2. 'mask' → logprob: -4.02479887008667
    3. ' flag' → logprob: -5.64979887008667
    4. 's' → logprob: -7.02479887008667
    5. 'cs' → logprob: -8.024799346923828
    6. 'flags' → logprob: -8.274799346923828
    7. 'for' → logprob: -8.399799346923828
    8. 'f' → logprob: -8.524799346923828
    9. 'subset' → logprob: -8.774799346923828
    10. 'sum' → logprob: -8.774799346923828

Token 303: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2559898793697357
    2. '=' → logprob: -1.505989909172058
    3. '   ' → logprob: -6.130990028381348
    4. ' |=' → logprob: -6.630990028381348
    5. '|' → logprob: -8.880990028381348
    6. ' ' → logprob: -9.005990028381348
    7. ')' → logprob: -9.880990028381348
    8. '       ' → logprob: -10.005990028381348
    9. ' =
' → logprob: -10.005990028381348
    10. 's' → logprob: -10.755990028381348

Token 304: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.359148770570755
    2. '=' → logprob: -1.2341487407684326
    3. '       ' → logprob: -5.734148979187012
    4. 'flag' → logprob: -5.734148979187012
    5. '   ' → logprob: -6.234148979187012
    6. ' =
' → logprob: -7.609148979187012
    7. ' flag' → logprob: -7.859148979187012
    8. '    ' → logprob: -8.359148979187012
    9. ',' → logprob: -8.484148979187012
    10. '=
' → logprob: -8.609148979187012

Token 305: ' bits' (ID: 18189)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05609844624996185
    2. 'flag' → logprob: -3.431098461151123
    3. 'sum' → logprob: -4.306098461151123
    4. 'cs' → logprob: -5.306098461151123
    5. '1' → logprob: -6.556098461151123
    6. ' ' → logprob: -7.181098461151123
    7. ' sum' → logprob: -7.556098461151123
    8. ' flag' → logprob: -7.931098461151123
    9. '(' → logprob: -8.806097984313965
    10. ' cs' → logprob: -8.931097984313965

Token 306: ' set' (ID: 920)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -1.0145856142044067
    2. '=' → logprob: -1.1395856142044067
    3. ' |=' → logprob: -1.5145856142044067
    4. ' <<=' → logprob: -3.889585494995117
    5. ' =' → logprob: -4.139585494995117
    6. 'set' → logprob: -4.389585494995117
    7. ' set' → logprob: -4.389585494995117
    8. '   ' → logprob: -5.014585494995117
    9. '_set' → logprob: -5.014585494995117
    10. '(' → logprob: -5.264585494995117

Token 307: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.644866406917572
    2. '=' → logprob: -1.8948664665222168
    3. ' =' → logprob: -2.269866466522217
    4. ' for' → logprob: -2.394866466522217
    5. ' |=' → logprob: -3.144866466522217
    6. '           ' → logprob: -4.144866466522217
    7. '       ' → logprob: -4.269866466522217
    8. '   ' → logprob: -4.394866466522217
    9. '(' → logprob: -4.394866466522217
    10. '|' → logprob: -5.144866466522217

Token 308: ' each' (ID: 2454)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7504051923751831
    2. ' e' → logprob: -1.250405192375183
    3. 'c' → logprob: -2.6254053115844727
    4. 'each' → logprob: -3.1254053115844727
    5. ' c' → logprob: -3.3754053115844727
    6. 'cs' → logprob: -3.7504053115844727
    7. ' each' → logprob: -4.250405311584473
    8. 'x' → logprob: -4.375405311584473
    9. 'i' → logprob: -4.500405311584473
    10. ' x' → logprob: -5.125405311584473

Token 309: ' element' (ID: 3577)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -1.3034381866455078
    2. ' e' → logprob: -1.4284381866455078
    3. ' cs' → logprob: -2.428438186645508
    4. ' c' → logprob: -2.553438186645508
    5. 'cs' → logprob: -2.553438186645508
    6. 'e' → logprob: -2.678438186645508
    7. 'c' → logprob: -2.678438186645508
    8. 'item' → logprob: -3.303438186645508
    9. ' element' → logprob: -3.303438186645508
    10. ' ' → logprob: -4.928438186645508

Token 310: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8536333441734314
    2. ' =' → logprob: -1.4786334037780762
    3. '       ' → logprob: -1.8536334037780762
    4. '   ' → logprob: -2.353633403778076
    5. ' <<=' → logprob: -3.603633403778076
    6. ' for' → logprob: -3.853633403778076
    7. 'for' → logprob: -4.478633403778076
    8. ' |=' → logprob: -4.603633403778076
    9. ' in' → logprob: -4.978633403778076
    10. 'flag' → logprob: -5.478633403778076

Token 311: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.3869505226612091
    2. ' cs' → logprob: -1.1369504928588867
    3. '	cs' → logprob: -9.886950492858887
    4. '(cs' → logprob: -11.261950492858887
    5. ' the' → logprob: -12.261950492858887
    6. ' ' → logprob: -12.761950492858887
    7. '   ' → logprob: -13.261950492858887
    8. 'the' → logprob: -13.886950492858887
    9. '_cs' → logprob: -13.886950492858887
    10. 'c' → logprob: -14.386950492858887

Token 312: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4379444420337677
    2. '       ' → logprob: -1.1879444122314453
    3. ' =' → logprob: -4.437944412231445
    4. '
' → logprob: -4.687944412231445
    5. ' flag' → logprob: -4.687944412231445
    6. '    
' → logprob: -5.437944412231445
    7. '    ' → logprob: -5.937944412231445
    8. '=' → logprob: -6.062944412231445
    9. 'flag' → logprob: -6.062944412231445
    10. '        
' → logprob: -6.562944412231445

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04767975956201553
    2. '   ' → logprob: -3.9226796627044678
    3. 'flag' → logprob: -4.422679901123047
    4. ' flag' → logprob: -5.047679901123047
    5. ' =' → logprob: -5.922679901123047
    6. '        
' → logprob: -6.672679901123047
    7. '	flag' → logprob: -7.297679901123047
    8. ',' → logprob: -7.297679901123047
    9. '
' → logprob: -7.422679901123047
    10. '=' → logprob: -7.797679901123047

Token 314: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.014123071916401386
    2. ' flag' → logprob: -4.51412296295166
    3. '   ' → logprob: -6.26412296295166
    4. '       ' → logprob: -6.88912296295166
    5. '	flag' → logprob: -9.76412296295166
    6. 'flags' → logprob: -11.13912296295166
    7. '(flag' → logprob: -11.13912296295166
    8. '           ' → logprob: -11.51412296295166
    9. 'sum' → logprob: -11.76412296295166
    10. 'f' → logprob: -11.88912296295166

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12827831506729126
    2. ' =' → logprob: -2.1282782554626465
    3. ' |=' → logprob: -7.0032782554626465
    4. '|' → logprob: -7.7532782554626465
    5. ' ' → logprob: -11.628278732299805
    6. '   ' → logprob: -14.128278732299805
    7. ' |' → logprob: -15.253278732299805
    8. '  ' → logprob: -15.378278732299805
    9. ' <<=' → logprob: -15.753278732299805
    10. ' ' → logprob: -15.878278732299805

Token 316: ' reduce' (ID: 10389)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014673690311610699
    2. ' ' → logprob: -6.876467227935791
    3. 'sum' → logprob: -7.876467227935791
    4. ' sum' → logprob: -10.50146770477295
    5. '   ' → logprob: -10.62646770477295
    6. '(' → logprob: -13.50146770477295
    7. '1' → logprob: -14.50146770477295
    8. '  ' → logprob: -14.87646770477295
    9. '       ' → logprob: -15.68896770477295
    10. '(sum' → logprob: -15.81396770477295

Token 317: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.010598400607705116
    2. '(operator' → logprob: -4.760598182678223
    3. '(' → logprob: -6.510598182678223
    4. '(
' → logprob: -8.260598182678223
    5. 'lambda' → logprob: -9.260598182678223
    6. '(int' → logprob: -10.385598182678223
    7. '   ' → logprob: -10.885598182678223
    8. 'operator' → logprob: -10.885598182678223
    9. '```' → logprob: -11.010598182678223
    10. '(or' → logprob: -11.135598182678223

Token 318: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3675578236579895
    2. ' x' → logprob: -1.2425577640533447
    3. 'lambda' → logprob: -4.367558002471924
    4. ' lambda' → logprob: -5.242558002471924
    5. 'acc' → logprob: -7.992558002471924
    6. ' ' → logprob: -8.867557525634766
    7. ' acc' → logprob: -9.242557525634766
    8. '(lambda' → logprob: -9.242557525634766
    9. 'a' → logprob: -9.992557525634766
    10. '   ' → logprob: -9.992557525634766

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008785214275121689
    2. ',x' → logprob: -4.758785247802734
    3. 'x' → logprob: -10.508785247802734
    4. ',y' → logprob: -10.508785247802734
    5. ',v' → logprob: -10.883785247802734
    6. ' ,' → logprob: -11.008785247802734
    7. ',l' → logprob: -11.258785247802734
    8. ',f' → logprob: -11.383785247802734
    9. ',val' → logprob: -12.258785247802734
    10. ',int' → logprob: -12.383785247802734

Token 320: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20974986255168915
    2. ' y' → logprob: -2.334749937057495
    3. 'x' → logprob: -2.959749937057495
    4. 'lambda' → logprob: -4.084749698638916
    5. 'acc' → logprob: -4.209749698638916
    6. ' lambda' → logprob: -5.834749698638916
    7. ' acc' → logprob: -6.209749698638916
    8. ' x' → logprob: -6.334749698638916
    9. 'a' → logprob: -7.334749698638916
    10. ',' → logprob: -7.834749698638916

Token 321: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014809117652475834
    2. ',x' → logprob: -5.0148091316223145
    3. ':' → logprob: -5.5148091316223145
    4. 'x' → logprob: -6.0148091316223145
    5. ' ,' → logprob: -7.2648091316223145
    6. ' x' → logprob: -8.389808654785156
    7. ',
' → logprob: -8.389808654785156
    8. '=' → logprob: -9.014808654785156
    9. ' :' → logprob: -9.514808654785156
    10. ' ' → logprob: -10.514808654785156

Token 322: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.020667193457484245
    2. ' x' → logprob: -3.89566707611084
    3. ' ' → logprob: -10.14566707611084
    4. '   ' → logprob: -10.52066707611084
    5. '(x' → logprob: -10.89566707611084
    6. '  ' → logprob: -10.89566707611084
    7. ' (' → logprob: -12.39566707611084
    8. '1' → logprob: -12.77066707611084
    9. '    ' → logprob: -13.27066707611084
    10. '	x' → logprob: -13.27066707611084

Token 323: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.023557808250188828
    2. ' |' → logprob: -3.7735579013824463
    3. '|(' → logprob: -8.148557662963867
    4. '(' → logprob: -11.273557662963867
    5. '1' → logprob: -12.773557662963867
    6. ' (' → logprob: -13.523557662963867
    7. '|
' → logprob: -14.523557662963867
    8. '   ' → logprob: -14.648557662963867
    9. '(x' → logprob: -14.773557662963867
    10. '    ' → logprob: -15.023557662963867

Token 324: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011373177170753479
    2. '1' → logprob: -4.636373043060303
    3. ' (' → logprob: -6.511373043060303
    4. ' ' → logprob: -9.511373519897461
    5. '   ' → logprob: -10.386373519897461
    6. '  ' → logprob: -11.511373519897461
    7. 'y' → logprob: -12.011373519897461
    8. '    ' → logprob: -12.886373519897461
    9. '     ' → logprob: -13.511373519897461
    10. '(y' → logprob: -14.011373519897461

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018625585653353482
    2. '(' → logprob: -8.8751859664917
    3. ' ' → logprob: -10.0001859664917
    4. ' (' → logprob: -14.7501859664917
    5. '   ' → logprob: -15.1251859664917
    6. '  ' → logprob: -16.375186920166016
    7. '0' → logprob: -17.312686920166016
    8. '{' → logprob: -17.375186920166016
    9. '[' → logprob: -17.875186920166016
    10. '           ' → logprob: -17.875186920166016

Token 326: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.026432780548930168
    2. ' <<' → logprob: -3.651432752609253
    3. '<<(' → logprob: -9.401432991027832
    4. '<' → logprob: -10.151432991027832
    5. '<<<' → logprob: -12.401432991027832
    6. ' ' → logprob: -13.026432991027832
    7. '   ' → logprob: -14.401432991027832
    8. ' ' → logprob: -14.401432991027832
    9. 'L' → logprob: -14.651432991027832
    10. '  ' → logprob: -14.776432991027832

Token 327: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.02509520947933197
    2. 'y' → logprob: -4.150094985961914
    3. ' (' → logprob: -5.150094985961914
    4. '(' → logprob: -6.150094985961914
    5. ' y' → logprob: -7.150094985961914
    6. '(int' → logprob: -9.025094985961914
    7. ' ' → logprob: -10.650094985961914
    8. '(x' → logprob: -11.025094985961914
    9. '(
' → logprob: -11.525094985961914
    10. '((' → logprob: -11.775094985961914

Token 328: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0489940382540226
    2. '(y' → logprob: -3.0489940643310547
    3. ' y' → logprob: -8.173994064331055
    4. 'e' → logprob: -9.798994064331055
    5. '(e' → logprob: -10.798994064331055
    6. '(' → logprob: -11.173994064331055
    7. ' (' → logprob: -11.423994064331055
    8. '[y' → logprob: -12.548994064331055
    9. ' ' → logprob: -12.798994064331055
    10. '   ' → logprob: -13.048994064331055

Token 329: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013199062086641788
    2. ' -' → logprob: -4.3881988525390625
    3. ' y' → logprob: -8.013198852539062
    4. 'y' → logprob: -8.263198852539062
    5. ' ' → logprob: -10.013198852539062
    6. ')' → logprob: -10.263198852539062
    7. '[' → logprob: -11.763198852539062
    8. 's' → logprob: -13.013198852539062
    9. '-y' → logprob: -13.138198852539062
    10. '1' → logprob: -13.388198852539062

Token 330: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003079334564972669
    2. 'y' → logprob: -8.3753080368042
    3. ' ' → logprob: -9.8753080368042
    4. 'e' → logprob: -11.7503080368042
    5. '0' → logprob: -12.2503080368042
    6. '2' → logprob: -12.5003080368042
    7. ' y' → logprob: -13.2503080368042
    8. '   ' → logprob: -13.7503080368042
    9. '-' → logprob: -14.0628080368042
    10. '`' → logprob: -14.3128080368042

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.625031471252441
    3. '2' → logprob: -13.312531471252441
    4. '   ' → logprob: -13.500031471252441
    5. '0' → logprob: -13.937531471252441
    6. '```' → logprob: -15.187531471252441
    7. '`' → logprob: -15.250031471252441
    8. '3' → logprob: -16.000030517578125
    9. '11' → logprob: -16.062530517578125
    10. '           ' → logprob: -16.125030517578125

Token 332: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0028910634573549032
    2. ')),' → logprob: -6.6278910636901855
    3. ')' → logprob: -7.0028910636901855
    4. ' ),' → logprob: -7.5028910636901855
    5. '   ' → logprob: -10.127890586853027
    6. ' ' → logprob: -11.502890586853027
    7. '       ' → logprob: -11.752890586853027
    8. '),
' → logprob: -11.752890586853027
    9. '  ' → logprob: -11.752890586853027
    10. '))' → logprob: -12.502890586853027

Token 333: ' cs' (ID: 14980)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.0005551783833652735
    2. ' cs' → logprob: -7.500555038452148
    3. '[' → logprob: -13.750555038452148
    4. '	cs' → logprob: -14.500555038452148
    5. '   ' → logprob: -15.000555038452148
    6. '(cs' → logprob: -15.750555038452148
    7. 'csrf' → logprob: -17.25055503845215
    8. ' ' → logprob: -17.50055503845215
    9. 'c' → logprob: -17.75055503845215
    10. ' [' → logprob: -18.50055503845215

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002048551570624113
    2. ' ,' → logprob: -6.377048492431641
    3. '0' → logprob: -8.12704849243164
    4. '1' → logprob: -11.12704849243164
    5. ')' → logprob: -11.25204849243164
    6. '   ' → logprob: -11.50204849243164
    7. 'flag' → logprob: -12.12704849243164
    8. ',
' → logprob: -12.50204849243164
    9. '),' → logprob: -14.25204849243164
    10. ' flag' → logprob: -14.62704849243164

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001855406299000606
    2. ' ' → logprob: -8.6251859664917
    3. '   ' → logprob: -12.3751859664917
    4. '           ' → logprob: -14.5001859664917
    5. '  ' → logprob: -15.2501859664917
    6. '       ' → logprob: -15.6251859664917
    7. '               ' → logprob: -16.000185012817383
    8. '                   ' → logprob: -16.062685012817383
    9. '    ' → logprob: -16.125185012817383
    10. '     ' → logprob: -16.375185012817383

Token 336: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.000009536743164
    4. '000' → logprob: -16.687509536743164
    5. '00' → logprob: -17.937509536743164
    6. '  ' → logprob: -18.062509536743164
    7. '۰' → logprob: -18.062509536743164
    8. 'int' → logprob: -18.312509536743164
    9. '           ' → logprob: -18.687509536743164
    10. ')' → logprob: -18.875009536743164

Token 337: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04458538442850113
    2. ')
' → logprob: -3.2945854663848877
    3. '   ' → logprob: -5.044585227966309
    4. '       ' → logprob: -9.794585227966309
    5. ')
' → logprob: -11.794585227966309
    6. ' )' → logprob: -12.044585227966309
    7. ')return' → logprob: -12.419585227966309
    8. ')

' → logprob: -13.544585227966309
    9. ' )
' → logprob: -13.669585227966309
    10. ' ' → logprob: -14.669585227966309

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30042484402656555
    2. '   ' → logprob: -1.4254248142242432
    3. ')' → logprob: -5.550425052642822
    4. '
' → logprob: -5.550425052642822
    5. '        
' → logprob: -5.550425052642822
    6. 'v' → logprob: -6.175425052642822
    7. '    
' → logprob: -6.300425052642822
    8. '  
' → logprob: -7.050425052642822
    9. '	' → logprob: -7.425425052642822
    10. '	v' → logprob: -7.925425052642822

Token 339: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.15725001692771912
    2. '   ' → logprob: -2.407249927520752
    3. '       ' → logprob: -2.907249927520752
    4. ' v' → logprob: -7.407249927520752
    5. '
' → logprob: -9.15725040435791
    6. '	v' → logprob: -9.65725040435791
    7. '        
' → logprob: -11.78225040435791
    8. '  ' → logprob: -11.90725040435791
    9. ' ' → logprob: -12.15725040435791
    10. '     ' → logprob: -12.40725040435791

Token 340: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.790129555156454e-05
    2. '.' → logprob: -9.625067710876465
    3. '.app' → logprob: -13.875067710876465
    4. 'append' → logprob: -15.000067710876465
    5. '.Append' → logprob: -15.750067710876465
    6. '.push' → logprob: -16.00006866455078
    7. '.ap' → logprob: -16.25006866455078
    8. ' .' → logprob: -16.75006866455078
    9. '.setdefault' → logprob: -17.37506866455078
    10. '.py' → logprob: -17.75006866455078

Token 341: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0067170290276408195
    2. '(' → logprob: -5.006717205047607
    3. '   ' → logprob: -14.50671672821045
    4. ' ((' → logprob: -15.13171672821045
    5. '(a' → logprob: -15.38171672821045
    6. '(
' → logprob: -15.50671672821045
    7. ' (' → logprob: -15.88171672821045
    8. '(('' → logprob: -16.256717681884766
    9. ' ' → logprob: -16.381717681884766
    10. '([' → logprob: -17.631717681884766

Token 342: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4974866644479334e-05
    2. ' a' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.250015258789062
    4. '	a' → logprob: -17.000015258789062
    5. ' ' → logprob: -17.125015258789062
    6. '
' → logprob: -17.625015258789062
    7. ')a' → logprob: -18.000015258789062
    8. '(a' → logprob: -18.250015258789062
    9. '  ' → logprob: -18.250015258789062
    10. '#a' → logprob: -18.375015258789062

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.9153885558771435e-06
    2. ' ,' → logprob: -12.750005722045898
    3. ',
' → logprob: -12.875005722045898
    4. '<|end|>' → logprob: -15.500005722045898
    5. ',

' → logprob: -16.8750057220459
    6. '‌,' → logprob: -16.8750057220459
    7. ')' → logprob: -17.3750057220459
    8. ',v' → logprob: -18.0000057220459
    9. ',)' → logprob: -18.2500057220459
    10. ',
' → logprob: -18.5000057220459

Token 344: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.029757777228951454
    2. ' flag' → logprob: -3.5297577381134033
    3. '	flag' → logprob: -12.779757499694824
    4. '   ' → logprob: -13.029757499694824
    5. '(flag' → logprob: -13.779757499694824
    6. ' ' → logprob: -14.904757499694824
    7. ')' → logprob: -15.654757499694824
    8. 'flags' → logprob: -15.779757499694824
    9. '    ' → logprob: -15.904757499694824
    10. '_flag' → logprob: -16.40475845336914

Token 345: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023436354473233223
    2. '))' → logprob: -3.7734363079071045
    3. ')
' → logprob: -8.648436546325684
    4. '))
' → logprob: -11.773436546325684
    5. ' )' → logprob: -12.523436546325684
    6. ')}' → logprob: -13.648436546325684
    7. '   ' → logprob: -14.023436546325684
    8. ')))' → logprob: -14.773436546325684
    9. '));' → logprob: -15.148436546325684
    10. ')

' → logprob: -15.273436546325684

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22228862345218658
    2. '
' → logprob: -1.8472886085510254
    3. 'return' → logprob: -3.4722886085510254
    4. '    
' → logprob: -5.597288608551025
    5. '<|end|>' → logprob: -5.597288608551025
    6. ' return' → logprob: -6.597288608551025
    7. '	return' → logprob: -6.722288608551025
    8. '  
' → logprob: -8.972289085388184
    9. '	
' → logprob: -8.972289085388184
    10. '
' → logprob: -9.347289085388184

Token 347: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5007293820381165
    2. '
' → logprob: -1.5007293224334717
    3. 'return' (adapté à ' return') → logprob: -2.1257293224334717
    4. '    
' → logprob: -3.8757293224334717
    5. ' return' → logprob: -4.625729560852051
    6. '	return' → logprob: -4.625729560852051
    7. '	
' → logprob: -5.500729560852051
    8. '<|end|>' → logprob: -5.500729560852051
    9. ' 
' → logprob: -6.875729560852051
    10. '  
' → logprob: -7.375729560852051

Token 348: ' (' (ID: 350)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005922515876591206
    2. ' N' → logprob: -5.255922317504883
    3. '(N' → logprob: -7.380922317504883
    4. ' (' → logprob: -10.630922317504883
    5. '   ' → logprob: -10.755922317504883
    6. ' ' → logprob: -11.880922317504883
    7. '[N' → logprob: -12.005922317504883
    8. '	N' → logprob: -12.130922317504883
    9. '  ' → logprob: -14.255922317504883
    10. ' ' → logprob: -15.630922317504883

Token 349: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.849109119386412e-06
    2. ' N' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.750009536743164
    4. '	N' → logprob: -16.250009536743164
    5. '
' → logprob: -16.625009536743164
    6. ' ' → logprob: -16.625009536743164
    7. '[N' → logprob: -16.625009536743164
    8. '  ' → logprob: -18.250009536743164
    9. ')' → logprob: -18.500009536743164
    10. '(N' → logprob: -18.750009536743164

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4617256056226324e-05
    2. ',v' → logprob: -11.625014305114746
    3. ',
' → logprob: -12.250014305114746
    4. ' ,' → logprob: -14.625014305114746
    5. 'v' → logprob: -15.500014305114746
    6. '<|end|>' → logprob: -16.875015258789062
    7. '‌,' → logprob: -17.125015258789062
    8. '   ' → logprob: -17.750015258789062
    9. ',N' → logprob: -18.375015258789062
    10. ')' → logprob: -18.375015258789062

Token 351: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01815006136894226
    2. ' v' → logprob: -4.0181498527526855
    3. '	v' → logprob: -16.518150329589844
    4. ')v' → logprob: -16.768150329589844
    5. '   ' → logprob: -17.893150329589844
    6. ' ' → logprob: -18.643150329589844
    7. '    ' → logprob: -18.893150329589844
    8. ')' → logprob: -19.143150329589844
    9. '_v' → logprob: -19.268150329589844
    10. '[v' → logprob: -19.768150329589844

Token 352: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -14.750004768371582
    4. '<|end|>' → logprob: -15.500004768371582
    5. ')#' → logprob: -16.2500057220459
    6. ')return' → logprob: -17.0000057220459
    7. '),' → logprob: -17.3750057220459
    8. ')

' → logprob: -17.3750057220459
    9. ')}' → logprob: -18.5000057220459
    10. '}' → logprob: -18.6250057220459

Token 353: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' proc' (ID: 14550)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20806969702243805
    2. 'main' → logprob: -2.5830698013305664
    3. ' solve' → logprob: -3.0830698013305664
    4. ' process' → logprob: -3.7080698013305664
    5. 'process' → logprob: -4.458069801330566
    6. 'solve' → logprob: -4.833069801330566
    7. ' minimal' → logprob: -5.083069801330566
    8. ' min' → logprob: -5.458069801330566
    9. 'min' → logprob: -6.208069801330566
    10. ' set' → logprob: -6.458069801330566

Token 355: '():
' (ID: 8595)
  Prédit: 'ess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ess' → logprob: -2.0219828002154827e-05
    2. 'essing' → logprob: -12.000020027160645
    3. 'essor' → logprob: -12.250020027160645
    4. '_' → logprob: -12.500020027160645
    5. ' ess' → logprob: -13.500020027160645
    6. '```' → logprob: -13.625020027160645
    7. 'es' → logprob: -14.125020027160645
    8. 'e' → logprob: -14.375020027160645
    9. 'essed' → logprob: -14.875020027160645
    10. 'ESS' → logprob: -15.500020027160645

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02270420454442501
    2. '    
' → logprob: -4.272704124450684
    3. '
' → logprob: -5.147704124450684
    4. '	
' → logprob: -6.772704124450684
    5. ' 
' → logprob: -8.647704124450684
    6. '\n' → logprob: -8.647704124450684
    7. '	n' → logprob: -8.772704124450684
    8. '    ' → logprob: -9.147704124450684
    9. '	return' → logprob: -9.397704124450684
    10. '<|end|>' → logprob: -9.397704124450684

Token 357: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062420353293418884
    2. '    ' → logprob: -4.31242036819458
    3. ' N' → logprob: -4.43742036819458
    4. '[N' → logprob: -5.06242036819458
    5. 'N' → logprob: -5.18742036819458
    6. '    
' → logprob: -5.43742036819458
    7. '	N' → logprob: -5.56242036819458
    8. ' ' → logprob: -5.81242036819458
    9. '(N' → logprob: -6.56242036819458
    10. '
' → logprob: -6.56242036819458

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11997338384389877
    2. '"' → logprob: -3.3699734210968018
    3. 'def' → logprob: -3.8699734210968018
    4. '    ' → logprob: -4.119973182678223
    5. 'n' → logprob: -4.994973182678223
    6. ' ' → logprob: -5.119973182678223
    7. '       ' → logprob: -5.494973182678223
    8. '"""' → logprob: -5.494973182678223
    9. ' """' → logprob: -5.869973182678223
    10. ''' → logprob: -5.994973182678223

Token 359: ' Sol' (ID: 6615)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23555275797843933
    2. 'N' → logprob: -2.2355527877807617
    3. ' N' → logprob: -2.4855527877807617
    4. '#' → logprob: -5.360552787780762
    5. ' #' → logprob: -5.985552787780762
    6. '"""' → logprob: -6.235552787780762
    7. '"""
' → logprob: -6.360552787780762
    8. ' ' → logprob: -6.735552787780762
    9. ' """
' → logprob: -7.235552787780762
    10. ' input' → logprob: -7.485552787780762

Token 360: 'ves' (ID: 3350)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -1.0003752708435059
    2. 'def' → logprob: -1.0003752708435059
    3. 'ves' → logprob: -1.3753752708435059
    4. 'ved' → logprob: -5.500375270843506
    5. '   ' → logprob: -5.875375270843506
    6. 'id' → logprob: -6.750375270843506
    7. 'ution' → logprob: -7.125375270843506
    8. 'ving' → logprob: -7.375375270843506
    9. '=' → logprob: -7.500375270843506
    10. 'v' → logprob: -8.125375747680664

Token 361: ' the' (ID: 290)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5859916806221008
    2. ' the' → logprob: -1.585991621017456
    3. 'the' → logprob: -1.960991621017456
    4. '   ' → logprob: -2.960991621017456
    5. '()' → logprob: -3.460991621017456
    6. '(N' → logprob: -5.460991859436035
    7. '():
' → logprob: -6.085991859436035
    8. '):' → logprob: -6.210991859436035
    9. 'def' → logprob: -6.460991859436035
    10. ':' → logprob: -6.710991859436035

Token 362: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -1.1950899362564087
    2. 'set' → logprob: -1.5700899362564087
    3. 'subset' → logprob: -1.8200899362564087
    4. ' problem' → logprob: -2.070089817047119
    5. ' set' → logprob: -2.945089817047119
    6. ' subset' → logprob: -3.320089817047119
    7. 'minimum' → logprob: -3.820089817047119
    8. '#' → logprob: -4.320089817047119
    9. 'complete' → logprob: -4.570089817047119
    10. 'next' → logprob: -5.070089817047119

Token 363: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3077816665172577
    2. ':' → logprob: -1.43278169631958
    3. '):' → logprob: -4.80778169631958
    4. '<|end|>' → logprob: -5.80778169631958
    5. '
' → logprob: -5.93278169631958
    6. ',' → logprob: -6.05778169631958
    7. '       ' → logprob: -6.18278169631958
    8. '():' → logprob: -6.55778169631958
    9. '.' → logprob: -6.68278169631958
    10. ':
' → logprob: -6.80778169631958

Token 364: ' Dynamic' (ID: 37191)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.4844670295715332
    2. 'dynamic' → logprob: -0.9844670295715332
    3. 'DP' → logprob: -5.984467029571533
    4. '   ' → logprob: -5.984467029571533
    5. 'dp' → logprob: -6.109467029571533
    6. 'def' → logprob: -6.734467029571533
    7. ' DP' → logprob: -7.859467029571533
    8. 'Dynamic' → logprob: -7.859467029571533
    9. ' a' → logprob: -8.484466552734375
    10. 'a' → logprob: -8.609466552734375

Token 365: ' Programming' (ID: 65103)
  Prédit: 'Programming'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Programming' → logprob: -0.45799827575683594
    2. ' Programming' → logprob: -1.582998275756836
    3. ' programming' → logprob: -2.332998275756836
    4. '_' → logprob: -2.832998275756836
    5. ' ' → logprob: -5.707998275756836
    6. '<|end|>' → logprob: -6.707998275756836
    7. '   ' → logprob: -7.082998275756836
    8. '  ' → logprob: -8.707998275756836
    9. '_program' → logprob: -8.957998275756836
    10. '<|end|>' → logprob: -9.207998275756836

Token 366: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6169532537460327
    2. ':' → logprob: -1.2419532537460327
    3. '(' → logprob: -2.7419533729553223
    4. '.' → logprob: -3.8669533729553223
    5. '
' → logprob: -4.241953372955322
    6. ' (' → logprob: -4.491953372955322
    7. '<|end|>' → logprob: -4.491953372955322
    8. ')' → logprob: -4.616953372955322
    9. ',' → logprob: -4.866953372955322
    10. ' ' → logprob: -5.491953372955322

Token 367: 'DP' (ID: 16851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26647746562957764
    2. '):
' → logprob: -2.266477584838867
    3. '   ' → logprob: -3.266477584838867
    4. ' )' → logprob: -3.391477584838867
    5. '):' → logprob: -3.641477584838867
    6. ')
' → logprob: -4.016477584838867
    7. ' ):
' → logprob: -6.016477584838867
    8. '
' → logprob: -6.266477584838867
    9. ').' → logprob: -6.641477584838867
    10. ' )
' → logprob: -6.766477584838867

Token 368: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9164698123931885
    2. '):' → logprob: -1.1664698123931885
    3. ')' → logprob: -1.2914698123931885
    4. ').' → logprob: -4.791469573974609
    5. ')
' → logprob: -6.416469573974609
    6. '   ' → logprob: -6.916469573974609
    7. ' approach' → logprob: -7.166469573974609
    8. '):

' → logprob: -7.291469573974609
    9. '
' → logprob: -7.916469573974609
    10. '):
' → logprob: -8.29146957397461

Token 369: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08440252393484116
    2. ':' → logprob: -3.209402561187744
    3. '):' → logprob: -4.459402561187744
    4. '<|end|>' → logprob: -4.459402561187744
    5. '
' → logprob: -4.709402561187744
    6. ')' → logprob: -6.084402561187744
    7. '<|end|>' → logprob: -6.584402561187744
    8. '):
' → logprob: -6.834402561187744
    9. 'def' → logprob: -7.334402561187744
    10. ':
' → logprob: -7.334402561187744

Token 370: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.27616748213768005
    2. ' bit' → logprob: -1.7761675119400024
    3. 'memo' → logprob: -3.901167392730713
    4. 'subset' → logprob: -4.276167392730713
    5. ' memo' → logprob: -5.026167392730713
    6. ' subset' → logprob: -5.401167392730713
    7. ' subsets' → logprob: -5.526167392730713
    8. 'state' → logprob: -5.776167392730713
    9. 'sys' → logprob: -5.776167392730713
    10. 'the' → logprob: -6.526167392730713

Token 371: 'm' (ID: 76)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.014455054886639118
    2. 'mask' → logprob: -5.0144548416137695
    3. 'wise' → logprob: -6.0144548416137695
    4. '_mask' → logprob: -6.2644548416137695
    5. ' _' → logprob: -6.3894548416137695
    6. 'm' → logprob: -7.1394548416137695
    7. '_
' → logprob: -8.38945484161377
    8. '_masks' → logprob: -9.01445484161377
    9. '   ' → logprob: -9.26445484161377
    10. '-' → logprob: -9.51445484161377

Token 372: 'asks' (ID: 9523)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.6437128186225891
    2. 'ask' → logprob: -0.8937128186225891
    3. 'a' → logprob: -3.0187127590179443
    4. 'asks' → logprob: -4.893712997436523
    5. 'asking' → logprob: -5.143712997436523
    6. 'aps' → logprob: -6.643712997436523
    7. 'apping' → logprob: -6.893712997436523
    8. '
' → logprob: -7.518712997436523
    9. 'asked' → logprob: -8.768712997436523
    10. 'as' → logprob: -9.143712997436523

Token 373: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38725197315216064
    2. ':' → logprob: -1.3872519731521606
    3. '):' → logprob: -3.137251853942871
    4. '.' → logprob: -4.887251853942871
    5. ':
' → logprob: -5.012251853942871
    6. '):
' → logprob: -5.512251853942871
    7. ')' → logprob: -5.887251853942871
    8. '
' → logprob: -6.012251853942871
    9. ',' → logprob: -6.762251853942871
    10. '<|end|>' → logprob: -6.887251853942871

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002762675518169999
    2. '
' → logprob: -6.002762794494629
    3. '    
' → logprob: -8.627762794494629
    4. '    ' → logprob: -10.002762794494629
    5. 'def' → logprob: -11.627762794494629
    6. 'n' → logprob: -11.752762794494629
    7. ')' → logprob: -11.877762794494629
    8. '<|end|>' → logprob: -11.877762794494629
    9. '       ' → logprob: -12.127762794494629
    10. '```' → logprob: -12.627762794494629

Token 375: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017926206812262535
    2. '
' → logprob: -5.392926216125488
    3. 'N' → logprob: -5.642926216125488
    4. 'dp' → logprob: -5.892926216125488
    5. '    ' → logprob: -6.392926216125488
    6. ' N' → logprob: -6.517926216125488
    7. '    
' → logprob: -6.642926216125488
    8. 'n' → logprob: -7.392926216125488
    9. ' dp' → logprob: -8.017926216125488
    10. ' 
' → logprob: -8.392926216125488

Token 376: ' N' (ID: 478)
  Prédit: ' covering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' covering' → logprob: -0.5323809385299683
    2. ' i' → logprob: -2.157381057739258
    3. 'i' → logprob: -2.532381057739258
    4. 'cover' → logprob: -2.782381057739258
    5. ' coverage' → logprob: -3.032381057739258
    6. ' ' → logprob: -4.407381057739258
    7. ' _' → logprob: -4.532381057739258
    8. '_' → logprob: -4.657381057739258
    9. ' the' → logprob: -4.657381057739258
    10. ' N' → logprob: -4.657381057739258

Token 377: ' items' (ID: 4732)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48310089111328125
    2. '   ' → logprob: -1.8581008911132812
    3. '=' → logprob: -2.6081008911132812
    4. ' <=' → logprob: -2.6081008911132812
    5. ' items' → logprob: -3.3581008911132812
    6. '):' → logprob: -4.983100891113281
    7. '    ' → logprob: -5.358100891113281
    8. ')' → logprob: -5.358100891113281
    9. ' >=' → logprob: -5.358100891113281
    10. 'items' → logprob: -5.358100891113281

Token 378: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025394180789589882
    2. '   ' → logprob: -4.025393962860107
    3. ' in' → logprob: -6.150393962860107
    4. ' (' → logprob: -6.650393962860107
    5. ',
' → logprob: -7.150393962860107
    6. '=' → logprob: -7.525393962860107
    7. ':' → logprob: -7.775393962860107
    8. ' ,' → logprob: -7.775393962860107
    9. 'in' → logprob: -8.400394439697266
    10. ' =' → logprob: -8.525394439697266

Token 379: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.15769098699092865
    2. 'v' → logprob: -2.53269100189209
    3. ' M' → logprob: -3.65769100189209
    4. 'sub' → logprob: -4.03269100189209
    5. 'a' → logprob: -5.28269100189209
    6. 'the' → logprob: -5.28269100189209
    7. ' subsets' → logprob: -5.40769100189209
    8. 'each' → logprob: -5.53269100189209
    9. 'their' → logprob: -7.40769100189209
    10. 'for' → logprob: -7.65769100189209

Token 380: ' available' (ID: 2839)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.01573718711733818
    2. ',' → logprob: -4.890737056732178
    3. ' items' → logprob: -6.015737056732178
    4. 'sub' → logprob: -7.015737056732178
    5. '=' → logprob: -7.140737056732178
    6. '):' → logprob: -7.390737056732178
    7. ')' → logprob: -7.640737056732178
    8. '):
' → logprob: -7.640737056732178
    9. ' sets' → logprob: -8.015737533569336
    10. ' sub' → logprob: -8.015737533569336

Token 381: ' sets' (ID: 11982)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.028709113597869873
    2. 'sub' → logprob: -3.6537091732025146
    3. ' sub' → logprob: -6.9037089347839355
    4. '   ' → logprob: -7.7787089347839355
    5. ' sets' → logprob: -7.7787089347839355
    6. ' subset' → logprob: -8.653709411621094
    7. 'subset' → logprob: -8.778709411621094
    8. 'sets' → logprob: -9.403709411621094
    9. '
' → logprob: -11.153709411621094
    10. '_sub' → logprob: -11.216209411621094

Token 382: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023122260347008705
    2. '   ' → logprob: -3.8981223106384277
    3. ',
' → logprob: -6.273122310638428
    4. ':' → logprob: -7.898122310638428
    5. '.' → logprob: -9.89812183380127
    6. ' of' → logprob: -10.27312183380127
    7. '
' → logprob: -10.52312183380127
    8. ' to' → logprob: -11.02312183380127
    9. 'to' → logprob: -11.14812183380127
    10. ' ,' → logprob: -11.14812183380127

Token 383: ' costs' (ID: 8959)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -2.1872384548187256
    2. ' their' → logprob: -2.1872384548187256
    3. 'cost' → logprob: -2.1872384548187256
    4. ' coverage' → logprob: -2.3122384548187256
    5. ' bit' → logprob: -2.4372384548187256
    6. ' cost' → logprob: -2.5622384548187256
    7. ' costs' → logprob: -2.6872384548187256
    8. 'the' → logprob: -2.9372384548187256
    9. 'their' → logprob: -3.3122384548187256
    10. 'bit' → logprob: -3.4372384548187256

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058546897023916245
    2. '   ' → logprob: -3.808546781539917
    3. ' and' → logprob: -3.933546781539917
    4. 'and' → logprob: -4.433547019958496
    5. ',
' → logprob: -5.933547019958496
    6. '.' → logprob: -8.683547019958496
    7. ' ,' → logprob: -9.058547019958496
    8. ':' → logprob: -9.183547019958496
    9. '<|end|>' → logprob: -10.308547019958496
    10. '    ' → logprob: -10.933547019958496

Token 385: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3484845757484436
    2. ' the' → logprob: -1.8484845161437988
    3. 'def' → logprob: -2.973484516143799
    4. ' finds' → logprob: -4.223484516143799
    5. 'the' → logprob: -4.473484516143799
    6. '#' → logprob: -4.598484516143799
    7. ' we' → logprob: -4.973484516143799
    8. '
' → logprob: -4.973484516143799
    9. ' def' → logprob: -5.098484516143799
    10. ' calculates' → logprob: -5.473484516143799

Token 386: ' calculates' (ID: 101920)
  Prédit: ' finds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' finds' → logprob: -0.5180649757385254
    2. ' attempts' → logprob: -2.3930649757385254
    3. ' aims' → logprob: -2.5180649757385254
    4. ' calculates' → logprob: -2.7680649757385254
    5. '   ' → logprob: -3.1430649757385254
    6. ' computes' → logprob: -3.3930649757385254
    7. ' tries' → logprob: -3.5180649757385254
    8. 'find' → logprob: -4.018064975738525
    9. ' selects' → logprob: -5.018064975738525
    10. ' uses' → logprob: -5.518064975738525

Token 387: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.38988420367240906
    2. 'the' → logprob: -1.1398842334747314
    3. '   ' → logprob: -6.014883995056152
    4. '<|end|>' → logprob: -8.764883995056152
    5. 'minimum' → logprob: -9.139883995056152
    6. '
' → logprob: -9.264883995056152
    7. 'minimal' → logprob: -9.889883995056152
    8. ' minimal' → logprob: -10.139883995056152
    9. '<|end|>' → logprob: -10.514883995056152
    10. '#' → logprob: -11.139883995056152

Token 388: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.8634942770004272
    2. 'minimum' → logprob: -1.2384942770004272
    3. ' minimum' → logprob: -1.3634942770004272
    4. 'minimal' → logprob: -3.488494396209717
    5. ' smallest' → logprob: -7.113494396209717
    6. 'min' → logprob: -8.238493919372559
    7. '#' → logprob: -8.613493919372559
    8. '   ' → logprob: -8.863493919372559
    9. '
' → logprob: -9.238493919372559
    10. ' least' → logprob: -9.613493919372559

Token 389: '
' (ID: 198)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.12890097498893738
    2. 'cost' → logprob: -2.2539010047912598
    3. '_cost' → logprob: -5.50390100479126
    4. ' ' → logprob: -5.75390100479126
    5. ' total' → logprob: -6.00390100479126
    6. '-cost' → logprob: -6.37890100479126
    7. '   ' → logprob: -6.75390100479126
    8. ' _' → logprob: -7.62890100479126
    9. '_' → logprob: -7.62890100479126
    10. ' possible' → logprob: -8.503900527954102

Token 390: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6245454549789429
    2. ' cost' → logprob: -0.9995454549789429
    3. ' total' → logprob: -2.7495455741882324
    4. 'total' → logprob: -3.8745455741882324
    5. '   ' → logprob: -5.624545574188232
    6. ' number' → logprob: -6.749545574188232
    7. ' additional' → logprob: -6.999545574188232
    8. '
' → logprob: -7.499545574188232
    9. ' sum' → logprob: -7.499545574188232
    10. '#' → logprob: -7.624545574188232

Token 391: ' total' (ID: 3609)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3659389615058899
    2. ' cost' → logprob: -1.8659389019012451
    3. ' total' → logprob: -2.615938901901245
    4. 'total' (adapté à ' total') → logprob: -2.740938901901245
    5. '   ' → logprob: -5.365939140319824
    6. '#' → logprob: -6.365939140319824
    7. 'cover' → logprob: -6.615939140319824
    8. 'additional' → logprob: -7.115939140319824
    9. 'possible' → logprob: -7.365939140319824
    10. 'sum' → logprob: -7.615939140319824

Token 392: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.04500279203057289
    2. 'cost' → logprob: -3.1700026988983154
    3. '_cost' → logprob: -7.5450029373168945
    4. ' ' → logprob: -7.5450029373168945
    5. ' _' → logprob: -8.795002937316895
    6. ' possible' → logprob: -8.795002937316895
    7. '_' → logprob: -8.920002937316895
    8. '-cost' → logprob: -9.545002937316895
    9. '   ' → logprob: -9.670002937316895
    10. ' amount' → logprob: -10.295002937316895

Token 393: ' required' (ID: 3759)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1908164620399475
    2. ' for' → logprob: -2.1908164024353027
    3. '   ' → logprob: -3.1908164024353027
    4. ' that' → logprob: -4.315816402435303
    5. 'to' → logprob: -5.815816402435303
    6. ' of' → logprob: -6.315816402435303
    7. 'for' → logprob: -6.565816402435303
    8. 'that' → logprob: -8.690816879272461
    9. '<|end|>' → logprob: -8.940816879272461
    10. ' and' → logprob: -8.940816879272461

Token 394: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.12736375629901886
    2. 'to' → logprob: -2.127363681793213
    3. '   ' → logprob: -7.752363681793213
    4. '	to' → logprob: -13.627364158630371
    5. ' for' → logprob: -13.877364158630371
    6. '<|end|>' → logprob: -14.002364158630371
    7. ' ' → logprob: -14.252364158630371
    8. 'for' → logprob: -14.502364158630371
    9. '_to' → logprob: -14.877364158630371
    10. ')' → logprob: -15.127364158630371

Token 395: ' cover' (ID: 4321)
  Prédit: ' cover'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.2332979142665863
    2. 'cover' → logprob: -1.6082979440689087
    3. ' select' → logprob: -6.608297824859619
    4. 'choose' → logprob: -6.733297824859619
    5. 'select' → logprob: -6.983297824859619
    6. 'collect' → logprob: -7.233297824859619
    7. 'include' → logprob: -8.233298301696777
    8. ' have' → logprob: -8.233298301696777
    9. ' obtain' → logprob: -8.358298301696777
    10. '_cover' → logprob: -8.545798301696777

Token 396: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.012827699072659016
    2. 'all' → logprob: -4.3878278732299805
    3. ' the' → logprob: -8.13782787322998
    4. ' ' → logprob: -12.01282787322998
    5. ' every' → logprob: -12.13782787322998
    6. '_all' → logprob: -13.01282787322998
    7. '    ' → logprob: -13.26282787322998
    8. 'the' → logprob: -13.26282787322998
    9. '   ' → logprob: -13.38782787322998
    10. ' each' → logprob: -13.76282787322998

Token 397: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.3367137908935547
    2. ' N' → logprob: -1.7117137908935547
    3. 'items' → logprob: -2.5867137908935547
    4. 'N' → logprob: -4.336713790893555
    5. '   ' → logprob: -5.086713790893555
    6. ' the' → logprob: -5.461713790893555
    7. ' subsets' → logprob: -6.211713790893555
    8. ' elements' → logprob: -6.711713790893555
    9. ' ' → logprob: -7.461713790893555
    10. ' possible' → logprob: -7.586713790893555

Token 398: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6975587606430054
    2. '.' → logprob: -1.6975587606430054
    3. ' (' → logprob: -2.197558879852295
    4. ' with' → logprob: -2.572558879852295
    5. '<|end|>' → logprob: -2.947558879852295
    6. ',' → logprob: -3.322558879852295
    7. 'with' → logprob: -5.197558879852295
    8. '    ' → logprob: -5.447558879852295
    9. '  ' → logprob: -5.572558879852295
    10. ' ' → logprob: -5.697558879852295

Token 399: ' selecting' (ID: 31615)
  Prédit: ' combining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combining' → logprob: -1.1169154644012451
    2. ' selecting' → logprob: -1.4919154644012451
    3. '   ' → logprob: -2.116915464401245
    4. ' covering' → logprob: -2.991915464401245
    5. ' choosing' → logprob: -2.991915464401245
    6. 'comb' → logprob: -3.366915464401245
    7. ' using' → logprob: -3.491915464401245
    8. ' union' → logprob: -3.741915464401245
    9. 'cover' → logprob: -4.116915702819824
    10. 'union' → logprob: -4.241915702819824

Token 400: ' from' (ID: 591)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.16833190619945526
    2. ' a' → logprob: -3.1683318614959717
    3. ' some' → logprob: -3.2933318614959717
    4. ' at' → logprob: -3.5433318614959717
    5. 'some' → logprob: -4.168332099914551
    6. 'sub' → logprob: -4.918332099914551
    7. 'a' → logprob: -5.043332099914551
    8. ' the' → logprob: -5.293332099914551
    9. ' all' → logprob: -5.793332099914551
    10. 'all' → logprob: -6.168332099914551

Token 401: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5457016229629517
    2. ' available' → logprob: -1.6707016229629517
    3. 'the' → logprob: -1.7957016229629517
    4. 'available' → logprob: -3.670701503753662
    5. ' subsets' → logprob: -3.920701503753662
    6. '   ' → logprob: -5.170701503753662
    7. ' v' → logprob: -5.295701503753662
    8. ' sets' → logprob: -5.795701503753662
    9. ' all' → logprob: -6.420701503753662
    10. 'v' → logprob: -6.545701503753662

Token 402: ' provided' (ID: 5181)
  Prédit: ' available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' available' → logprob: -0.43445131182670593
    2. ' sets' → logprob: -1.8094513416290283
    3. ' subsets' → logprob: -2.4344513416290283
    4. ' given' → logprob: -3.4344513416290283
    5. ' v' → logprob: -3.5594513416290283
    6. 'available' → logprob: -3.6844513416290283
    7. '   ' → logprob: -5.684451103210449
    8. 'sets' → logprob: -5.809451103210449
    9. ' provided' → logprob: -6.184451103210449
    10. 'v' → logprob: -6.559451103210449

Token 403: ' sets' (ID: 11982)
  Prédit: ' subsets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subsets' → logprob: -0.5948781371116638
    2. ' sets' → logprob: -0.8448781371116638
    3. ' available' → logprob: -4.969878196716309
    4. 'sets' → logprob: -5.094878196716309
    5. '   ' → logprob: -5.719878196716309
    6. ' subset' → logprob: -7.594878196716309
    7. 'sub' → logprob: -7.594878196716309
    8. 'available' → logprob: -7.844878196716309
    9. ' sub' → logprob: -8.719878196716309
    10. 'subset' → logprob: -8.969878196716309

Token 404: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30797818303108215
    2. '.' → logprob: -1.4329781532287598
    3. ',' → logprob: -3.8079781532287598
    4. ':' → logprob: -6.80797815322876
    5. '<|end|>' → logprob: -7.30797815322876
    6. ')' → logprob: -7.43297815322876
    7. ' to' → logprob: -7.68297815322876
    8. ' that' → logprob: -8.182978630065918
    9. ' with' → logprob: -8.682978630065918
    10. 'def' → logprob: -8.682978630065918

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028492707759141922
    2. '
' → logprob: -4.0284929275512695
    3. '    
' → logprob: -4.6534929275512695
    4. ' 
' → logprob: -8.52849292755127
    5. '  
' → logprob: -9.15349292755127
    6. ')' → logprob: -9.27849292755127
    7. 'def' → logprob: -9.40349292755127
    8. '```' → logprob: -10.02849292755127
    9. ')
' → logprob: -10.27849292755127
    10. '    ' → logprob: -10.90349292755127

Token 406: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5840466022491455
    2. 'N' → logprob: -0.9590466022491455
    3. '
' → logprob: -3.0840466022491455
    4. 'def' → logprob: -5.084046363830566
    5. '"""
' → logprob: -5.834046363830566
    6. '    
' → logprob: -6.584046363830566
    7. '#' → logprob: -7.584046363830566
    8. 'import' → logprob: -7.709046363830566
    9. ' N' → logprob: -7.834046363830566
    10. 'dp' → logprob: -8.584046363830566

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0488472618162632
    2. ' :' → logprob: -3.673847198486328
    3. '   ' → logprob: -4.423847198486328
    4. '    ' → logprob: -5.673847198486328
    5. '<|end|>' → logprob: -5.923847198486328
    6. '):' → logprob: -7.423847198486328
    7. ' None' → logprob: -7.423847198486328
    8. ':
' → logprob: -7.423847198486328
    9. '  ' → logprob: -8.048847198486328
    10. ',' → logprob: -8.298847198486328

Token 408: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007856692187488079
    2. '    ' → logprob: -5.507856845855713
    3. 'int' → logprob: -6.882856845855713
    4. ' int' → logprob: -6.882856845855713
    5. ' None' → logprob: -7.007856845855713
    6. '
' → logprob: -8.757856369018555
    7. '"' → logprob: -8.882856369018555
    8. '       ' → logprob: -9.382856369018555
    9. 'None' → logprob: -9.382856369018555
    10. ' ' → logprob: -9.507856369018555

Token 409: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.10340621322393417
    2. ' int' → logprob: -2.3534061908721924
    3. '   ' → logprob: -5.8534064292907715
    4. '
' → logprob: -8.978405952453613
    5. ' tuple' → logprob: -9.853405952453613
    6. ' list' → logprob: -9.978405952453613
    7. 'list' → logprob: -9.978405952453613
    8. 'tuple' → logprob: -11.228405952453613
    9. ' None' → logprob: -12.103405952453613
    10. '       ' → logprob: -12.228405952453613

Token 410: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10806015878915787
    2. '<|end|>' → logprob: -2.983060121536255
    3. '   ' → logprob: -4.108060359954834
    4. '
' → logprob: -4.233060359954834
    5. ' :' → logprob: -4.733060359954834
    6. ':
' → logprob: -5.108060359954834
    7. '):' → logprob: -6.483060359954834
    8. '<|end|>' → logprob: -7.108060359954834
    9. ',' → logprob: -7.608060359954834
    10. '    ' → logprob: -7.733060359954834

Token 411: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2360901832580566
    2. ' float' → logprob: -1.2360901832580566
    3. ' sys' → logprob: -1.4860901832580566
    4. ' min' → logprob: -2.9860901832580566
    5. ' -' → logprob: -3.2360901832580566
    6. ' The' → logprob: -3.3610901832580566
    7. ' ' → logprob: -4.361090183258057
    8. 'float' → logprob: -4.486090183258057
    9. ' (' → logprob: -5.111090183258057
    10. '0' → logprob: -5.486090183258057

Token 412: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.550970196723938
    2. ' minimum' → logprob: -1.425970196723938
    3. 'minimum' → logprob: -1.800970196723938
    4. 'minimal' → logprob: -4.050970077514648
    5. 'min' → logprob: -7.675970077514648
    6. ' min' → logprob: -9.050970077514648
    7. ' best' → logprob: -10.800970077514648
    8. ' total' → logprob: -10.800970077514648
    9. ' cost' → logprob: -10.925970077514648
    10. 'cost' → logprob: -10.925970077514648

Token 413: ' cost' (ID: 3097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49716460704803467
    2. ' _' → logprob: -1.3721646070480347
    3. '_cost' → logprob: -2.372164726257324
    4. ' cost' → logprob: -3.872164726257324
    5. '_total' → logprob: -4.747164726257324
    6. 'cost' → logprob: -5.247164726257324
    7. ' total' → logprob: -6.497164726257324
    8. ')' → logprob: -6.872164726257324
    9. '_space' → logprob: -6.997164726257324
    10. '_possible' → logprob: -7.122164726257324

Token 414: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4599660038948059
    2. '   ' → logprob: -1.0849659442901611
    3. 'to' → logprob: -4.95996618270874
    4. ' required' → logprob: -5.20996618270874
    5. ' that' → logprob: -5.20996618270874
    6. ' for' → logprob: -5.83496618270874
    7. ' covering' → logprob: -6.45996618270874
    8. ' of' → logprob: -6.70996618270874
    9. ' needed' → logprob: -6.95996618270874
    10. '_to' → logprob: -7.08496618270874

Token 415: ' cover' (ID: 4321)
  Prédit: ' cover'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.20244084298610687
    2. 'cover' → logprob: -1.702440857887268
    3. '   ' → logprob: -7.3274407386779785
    4. '_cover' → logprob: -9.577441215515137
    5. ' ' → logprob: -10.327441215515137
    6. '
' → logprob: -10.702441215515137
    7. 'choose' → logprob: -10.952441215515137
    8. 'select' → logprob: -10.952441215515137
    9. '#' → logprob: -11.077441215515137
    10. '1' → logprob: -11.452441215515137

Token 416: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.1799580454826355
    2. 'all' → logprob: -1.8049581050872803
    3. '   ' → logprob: -8.80495834350586
    4. ' N' → logprob: -10.55495834350586
    5. ' the' → logprob: -10.92995834350586
    6. 'N' → logprob: -12.17995834350586
    7. '```' → logprob: -12.80495834350586
    8. ' ' → logprob: -13.05495834350586
    9. 'the' → logprob: -13.42995834350586
    10. '    ' → logprob: -13.42995834350586

Token 417: ' N' (ID: 478)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.023053985089063644
    2. 'items' → logprob: -4.523054122924805
    3. '   ' → logprob: -5.648054122924805
    4. ' the' → logprob: -6.398054122924805
    5. ')' → logprob: -6.523054122924805
    6. ' N' → logprob: -6.523054122924805
    7. ' )' → logprob: -6.773054122924805
    8. '_items' → logprob: -6.773054122924805
    9. ' elements' → logprob: -7.148054122924805
    10. ' ' → logprob: -8.273054122924805

Token 418: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.4119321405887604
    2. 'items' → logprob: -1.161932110786438
    3. ')' → logprob: -4.036931991577148
    4. '_items' → logprob: -5.786931991577148
    5. '   ' → logprob: -6.661931991577148
    6. ' elements' → logprob: -7.786931991577148
    7. ' ' → logprob: -7.911931991577148
    8. '_' → logprob: -8.161931991577148
    9. ' of' → logprob: -8.661931991577148
    10. ',' → logprob: -8.911931991577148

Token 419: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36432063579559326
    2. ':' → logprob: -2.239320755004883
    3. '
' → logprob: -2.364320755004883
    4. ')' → logprob: -2.989320755004883
    5. '):' → logprob: -3.239320755004883
    6. ',' → logprob: -5.364320755004883
    7. ',
' → logprob: -6.114320755004883
    8. ':
' → logprob: -6.614320755004883
    9. '.' → logprob: -6.614320755004883
    10. '):
' → logprob: -6.864320755004883

Token 420: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.040362805128097534
    2. 'or' → logprob: -3.66536283493042
    3. '   ' → logprob: -4.54036283493042
    4. ' default' → logprob: -6.91536283493042
    5. '
' → logprob: -7.16536283493042
    6. 'default' → logprob: -7.91536283493042
    7. ' -' → logprob: -8.540362358093262
    8. '-' → logprob: -8.790362358093262
    9. '0' → logprob: -9.040362358093262
    10. ' None' → logprob: -9.540362358093262

Token 421: ' -' (ID: 533)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.3921869993209839
    2. '   ' → logprob: -1.6421869993209839
    3. ' -' → logprob: -1.7671869993209839
    4. '-' → logprob: -2.0171871185302734
    5. ' float' → logprob: -2.3921871185302734
    6. 'None' → logprob: -2.6421871185302734
    7. 'float' → logprob: -2.7671871185302734
    8. ' sys' → logprob: -4.017187118530273
    9. 'sys' → logprob: -5.392187118530273
    10. ' ' → logprob: -6.517187118530273

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.268254896393046e-05
    2. ' ' → logprob: -10.000082969665527
    3. '   ' → logprob: -10.625082969665527
    4. 'inf' → logprob: -12.625082969665527
    5. '
' → logprob: -12.875082969665527
    6. 'float' → logprob: -13.625082969665527
    7. ' -' → logprob: -14.000082969665527
    8. '       ' → logprob: -14.000082969665527
    9. '-' → logprob: -14.125082969665527
    10. '2' → logprob: -14.250082969665527

Token 423: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3470257818698883
    2. ')' → logprob: -1.472025752067566
    3. '   ' → logprob: -3.3470258712768555
    4. '<|end|>' → logprob: -3.8470258712768555
    5. 'if' → logprob: -5.2220258712768555
    6. '
' → logprob: -7.4720258712768555
    7. ',' → logprob: -8.097025871276855
    8. '	if' → logprob: -8.972025871276855
    9. '<|end|>' → logprob: -9.097025871276855
    10. ' for' → logprob: -9.347025871276855

Token 424: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1433929204940796
    2. ' impossible' → logprob: -3.143393039703369
    3. ' coverage' → logprob: -3.643393039703369
    4. 'not' → logprob: -3.768393039703369
    5. '   ' → logprob: -4.018393039703369
    6. ' all' → logprob: -4.268393039703369
    7. ' the' → logprob: -5.518393039703369
    8. ' no' → logprob: -5.893393039703369
    9. 'all' → logprob: -7.643393039703369
    10. ' None' → logprob: -7.768393039703369

Token 425: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.630598247051239
    2. 'possible' → logprob: -1.2555983066558838
    3. ' achievable' → logprob: -2.755598306655884
    4. '<|end|>' → logprob: -3.380598306655884
    5. ' feasible' → logprob: -3.880598306655884
    6. ' available' → logprob: -4.005598068237305
    7. 'found' → logprob: -4.255598068237305
    8. 'available' → logprob: -4.880598068237305
    9. '_possible' → logprob: -5.005598068237305
    10. ' found' → logprob: -5.380598068237305

Token 426: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05921325087547302
    2. ')' → logprob: -3.434213161468506
    3. '):' → logprob: -4.184213161468506
    4. ':' → logprob: -5.559213161468506
    5. ',' → logprob: -5.934213161468506
    6. '<|end|>' → logprob: -6.684213161468506
    7. '.' → logprob: -6.809213161468506
    8. '```' → logprob: -8.309213638305664
    9. '):
' → logprob: -8.684213638305664
    10. '
' → logprob: -9.059213638305664

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07715063542127609
    2. '
' → logprob: -2.827150583267212
    3. '    
' → logprob: -4.952150821685791
    4. ':' → logprob: -5.577150821685791
    5. 'def' → logprob: -7.077150821685791
    6. ':
' → logprob: -7.077150821685791
    7. '):' → logprob: -7.202150821685791
    8. ')' → logprob: -7.327150821685791
    9. '):
' → logprob: -7.577150821685791
    10. ')
' → logprob: -9.452150344848633

Token 428: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16864162683486938
    2. '
' → logprob: -1.9186415672302246
    3. '    
' → logprob: -5.043641567230225
    4. ':' → logprob: -7.418641567230225
    5. ')' → logprob: -8.293642044067383
    6. '\n' → logprob: -8.918642044067383
    7. '):
' → logprob: -8.918642044067383
    8. '```' → logprob: -8.918642044067383
    9. ':
' → logprob: -9.168642044067383
    10. '
' → logprob: -9.293642044067383

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017978310585021973
    2. '
' → logprob: -4.267978191375732
    3. '    
' → logprob: -5.767978191375732
    4. ' 
' → logprob: -8.76797866821289
    5. '	N' → logprob: -9.39297866821289
    6. 'N' → logprob: -9.51797866821289
    7. ' N' → logprob: -9.64297866821289
    8. 'def' → logprob: -9.76797866821289
    9. '```' → logprob: -9.76797866821289
    10. 'import' → logprob: -9.76797866821289

Token 430: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.006856154650449753
    2. '(N' → logprob: -5.2568559646606445
    3. '   ' → logprob: -6.6318559646606445
    4. 'import' → logprob: -9.006855964660645
    5. '[N' → logprob: -9.631855964660645
    6. '#' → logprob: -10.756855964660645
    7. 'def' → logprob: -10.881855964660645
    8. ' N' → logprob: -11.506855964660645
    9. 'input' → logprob: -11.506855964660645
    10. 'global' → logprob: -11.631855964660645

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05468308553099632
    2. ' =' → logprob: -3.554682970046997
    3. '   ' → logprob: -4.054683208465576
    4. ',v' → logprob: -5.554683208465576
    5. '=' → logprob: -6.054683208465576
    6. ' ,' → logprob: -8.554682731628418
    7. ',M' → logprob: -8.554682731628418
    8. 'import' → logprob: -9.179682731628418
    9. 'v' → logprob: -9.429682731628418
    10. ',N' → logprob: -9.429682731628418

Token 432: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11287853121757507
    2. ' v' → logprob: -2.2378785610198975
    3. '   ' → logprob: -11.112878799438477
    4. '    ' → logprob: -11.487878799438477
    5. '	v' → logprob: -12.237878799438477
    6. '_v' → logprob: -12.237878799438477
    7. '  ' → logprob: -12.487878799438477
    8. '*v' → logprob: -12.487878799438477
    9. 'read' → logprob: -12.862878799438477
    10. ' ' → logprob: -12.862878799438477

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03819216787815094
    2. ' =' → logprob: -3.2881922721862793
    3. '   ' → logprob: -8.913191795349121
    4. ',' → logprob: -12.163191795349121
    5. ')' → logprob: -12.413191795349121
    6. '    ' → logprob: -13.163191795349121
    7. '=v' → logprob: -13.538191795349121
    8. '=
' → logprob: -14.288191795349121
    9. ')=' → logprob: -14.288191795349121
    10. 'v' → logprob: -14.413191795349121

Token 434: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0019286326132714748
    2. ' read' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.876928329467773
    4. '	read' → logprob: -19.501928329467773
    5. '(read' → logprob: -21.001928329467773
    6. '
' → logprob: -21.126928329467773
    7. ' ' → logprob: -21.251928329467773
    8. '  ' → logprob: -21.751928329467773
    9. '
' → logprob: -22.251928329467773
    10. '.read' → logprob: -22.751928329467773

Token 435: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0006028342177160084
    2. '_' → logprob: -7.500602722167969
    3. '_inputs' → logprob: -10.375602722167969
    4. 'input' → logprob: -12.375602722167969
    5. '_in' → logprob: -13.125602722167969
    6. '```' → logprob: -13.250602722167969
    7. '_output' → logprob: -13.375602722167969
    8. ')' → logprob: -13.500602722167969
    9. '_
' → logprob: -13.875602722167969
    10. ' _' → logprob: -14.125602722167969

Token 436: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09290061891078949
    2. '   ' → logprob: -2.842900514602661
    3. '    
' → logprob: -3.592900514602661
    4. '  
' → logprob: -6.71790075302124
    5. '

' → logprob: -7.71790075302124
    6. '   
' → logprob: -7.71790075302124
    7. '
' → logprob: -8.342900276184082
    8. '	
' → logprob: -8.342900276184082
    9. ' 
' → logprob: -8.967900276184082
    10. '
    
' → logprob: -10.217900276184082

Token 437: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06832557171583176
    2. '   ' → logprob: -2.9433255195617676
    3. '    
' → logprob: -4.818325519561768
    4. 'dp' → logprob: -6.068325519561768
    5. ' 
' → logprob: -6.693325519561768
    6. ' dp' → logprob: -6.943325519561768
    7. '  
' → logprob: -8.693325996398926
    8. '	
' → logprob: -9.068325996398926
    9. '
' → logprob: -9.318325996398926
    10. '\n' → logprob: -9.693325996398926

Token 438: ' L' (ID: 451)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7352598309516907
    2. '   ' → logprob: -1.610259771347046
    3. 'INF' → logprob: -1.610259771347046
    4. 'full' → logprob: -3.360259771347046
    5. 'all' → logprob: -3.735259771347046
    6. 'ALL' → logprob: -4.485260009765625
    7. 'FULL' → logprob: -4.485260009765625
    8. 'max' → logprob: -4.610260009765625
    9. 'MAX' → logprob: -5.110260009765625
    10. 'DP' → logprob: -5.235260009765625

Token 439: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032134950160980225
    2. '=' → logprob: -3.782135009765625
    3. '   ' → logprob: -5.282135009765625
    4. 'en' → logprob: -6.532135009765625
    5. 'EN' → logprob: -6.657135009765625
    6. '=len' → logprob: -8.532135009765625
    7. 'v' → logprob: -8.657135009765625
    8. 'et' → logprob: -9.157135009765625
    9. 'max' → logprob: -9.282135009765625
    10. 'ist' → logprob: -10.282135009765625

Token 440: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010868242010474205
    2. '(' → logprob: -4.635868072509766
    3. ' ' → logprob: -7.135868072509766
    4. '[' → logprob: -8.510868072509766
    5. '2' → logprob: -10.010868072509766
    6. ' (' → logprob: -11.135868072509766
    7. '   ' → logprob: -11.260868072509766
    8. 'N' → logprob: -11.510868072509766
    9. '[]' → logprob: -12.010868072509766
    10. '(N' → logprob: -12.260868072509766

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004646811168640852
    2. '(' → logprob: -5.6296467781066895
    3. 'N' → logprob: -7.5046467781066895
    4. '2' → logprob: -8.754647254943848
    5. '[' → logprob: -8.879647254943848
    6. ' ' → logprob: -9.754647254943848
    7. '(N' → logprob: -10.379647254943848
    8. '[]' → logprob: -10.879647254943848
    9. 'len' → logprob: -10.879647254943848
    10. '[N' → logprob: -10.879647254943848

Token 442: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03813593089580536
    2. ' <<' → logprob: -3.2881360054016113
    3. '<' → logprob: -9.413135528564453
    4. '   ' → logprob: -12.288135528564453
    5. '
' → logprob: -12.913135528564453
    6. '<<(' → logprob: -13.663135528564453
    7. '<<<' → logprob: -13.788135528564453
    8. '0' → logprob: -14.038135528564453
    9. '```' → logprob: -14.663135528564453
    10. ' ' → logprob: -14.913135528564453

Token 443: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.27099974633893e-05
    2. ' N' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.125012397766113
    4. '(N' → logprob: -14.875012397766113
    5. '	N' → logprob: -16.62501335144043
    6. ' ' → logprob: -18.37501335144043
    7. 'n' → logprob: -18.87501335144043
    8. '`' → logprob: -19.00001335144043
    9. '[N' → logprob: -19.25001335144043
    10. '```' → logprob: -19.25001335144043

Token 444: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.056507036089897156
    2. '   ' → logprob: -3.056507110595703
    3. 'dp' → logprob: -4.931507110595703
    4. ' dp' → logprob: -8.056507110595703
    5. '    
' → logprob: -9.306507110595703
    6. '
' → logprob: -9.431507110595703
    7. 'DP' → logprob: -9.681507110595703
    8. ' DP' → logprob: -10.931507110595703
    9. 'dist' → logprob: -11.056507110595703
    10. ',' → logprob: -11.056507110595703

Token 445: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005630824714899063
    2. 'dp' → logprob: -5.630630970001221
    3. '   ' → logprob: -6.505630970001221
    4. '
' → logprob: -8.255630493164062
    5. '    
' → logprob: -9.005630493164062
    6. ' dp' → logprob: -9.755630493164062
    7. 'DP' → logprob: -10.255630493164062
    8. ' DP' → logprob: -11.505630493164062
    9. '  
' → logprob: -12.005630493164062
    10. ' 
' → logprob: -12.005630493164062

Token 446: ' Total' (ID: 17565)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.27437981963157654
    2. '
' → logprob: -3.1493797302246094
    3. '17' → logprob: -3.3993797302246094
    4. '(N' → logprob: -3.5243797302246094
    5. '20' → logprob: -3.8993797302246094
    6. '16' → logprob: -4.274379730224609
    7. '31' → logprob: -4.774379730224609
    8. '1' → logprob: -4.774379730224609
    9. 'sys' → logprob: -4.774379730224609
    10. 'L' → logprob: -4.899379730224609

Token 447: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4518846273422241
    2. 'L' → logprob: -1.4518846273422241
    3. '   ' → logprob: -2.5768847465515137
    4. '<|end|>' → logprob: -2.5768847465515137
    5. '_N' → logprob: -2.8268847465515137
    6. ' L' → logprob: -2.9518847465515137
    7. 'N' → logprob: -3.0768847465515137
    8. 'states' → logprob: -3.5768847465515137
    9. '
' → logprob: -3.7018847465515137
    10. '_states' → logprob: -4.076884746551514

Token 448: ' combinations' (ID: 43835)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.1433158665895462
    2. 'sub' → logprob: -3.5183157920837402
    3. ' states' → logprob: -3.7683157920837402
    4. '   ' → logprob: -3.8933157920837402
    5. ' subsets' → logprob: -4.26831579208374
    6. 'com' → logprob: -4.51831579208374
    7. 'cost' → logprob: -4.51831579208374
    8. 'sets' → logprob: -5.01831579208374
    9. 'config' → logprob: -6.14331579208374
    10. 'm' → logprob: -6.26831579208374

Token 449: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06103144958615303
    2. '   ' → logprob: -3.4360313415527344
    3. 'dp' → logprob: -3.6860313415527344
    4. ' dp' → logprob: -7.186031341552734
    5. '
' → logprob: -7.686031341552734
    6. '    
' → logprob: -7.936031341552734
    7. 'DP' → logprob: -9.561031341552734
    8. '	dp' → logprob: -9.561031341552734
    9. '_dp' → logprob: -9.936031341552734
    10. '  
' → logprob: -10.186031341552734

Token 450: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7971330285072327
    2. 'items' → logprob: -0.7971330285072327
    3. ' items' → logprob: -2.547132968902588
    4. ' N' → logprob: -4.172132968902588
    5. ' subsets' → logprob: -6.047132968902588
    6. 'selected' → logprob: -7.047132968902588
    7. ' the' → logprob: -7.922132968902588
    8. 'the' → logprob: -8.047133445739746
    9. 'sets' → logprob: -8.672133445739746
    10. 'sub' → logprob: -8.922133445739746

Token 451: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.4768541157245636
    2. ' items' → logprob: -0.9768540859222412
    3. 'bits' → logprob: -7.10185432434082
    4. '_items' → logprob: -7.60185432434082
    5. ')' → logprob: -7.85185432434082
    6. ' bits' → logprob: -8.10185432434082
    7. '-items' → logprob: -8.47685432434082
    8. '   ' → logprob: -9.22685432434082
    9. 'elements' → logprob: -9.35185432434082
    10. ' subsets' → logprob: -9.35185432434082

Token 452: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012669390998780727
    2. '   ' → logprob: -4.762669563293457
    3. 'dp' → logprob: -5.887669563293457
    4. '
' → logprob: -7.637669563293457
    5. '    
' → logprob: -8.012669563293457
    6. ' dp' → logprob: -8.387669563293457
    7. ' 
' → logprob: -10.137669563293457
    8. '  
' → logprob: -10.137669563293457
    9. '

' → logprob: -10.637669563293457
    10. '' → logprob: -10.887669563293457

Token 453: 'as' (ID: 288)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010748189873993397
    2. ' )' → logprob: -5.010748386383057
    3. ')
' → logprob: -6.510748386383057
    4. '   ' → logprob: -6.635748386383057
    5. 'N' → logprob: -6.885748386383057
    6. ' )
' → logprob: -9.885747909545898
    7. ' N' → logprob: -10.010747909545898
    8. ' ' → logprob: -11.135747909545898
    9. ')

' → logprob: -11.510747909545898
    10. '')' → logprob: -11.635747909545898

Token 454: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6704448461532593
    2. ' bit' → logprob: -1.2954448461532593
    3. 'bits' → logprob: -3.045444965362549
    4. ' states' → logprob: -3.170444965362549
    5. 'states' → logprob: -3.295444965362549
    6. '   ' → logprob: -3.545444965362549
    7. ' subsets' → logprob: -4.045444965362549
    8. ')' → logprob: -4.795444965362549
    9. ' integers' → logprob: -5.045444965362549
    10. ' bits' → logprob: -5.670444965362549

Token 455: 'mask' (ID: 22527)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.654202401638031
    2. 'mask' → logprob: -1.0292024612426758
    3. ')' → logprob: -2.654202461242676
    4. '_' → logprob: -3.154202461242676
    5. '_mask' → logprob: -5.654202461242676
    6. '   ' → logprob: -5.904202461242676
    7. '_masks' → logprob: -6.029202461242676
    8. ' masks' → logprob: -7.779202461242676
    9. '-' → logprob: -8.404202461242676
    10. '_m' → logprob: -8.904202461242676

Token 456: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030187202617526054
    2. '   ' → logprob: -3.7801871299743652
    3. ')
' → logprob: -5.655187129974365
    4. ' )' → logprob: -6.530187129974365
    5. '
' → logprob: -6.905187129974365
    6. 's' → logprob: -7.655187129974365
    7. 'states' → logprob: -9.530187606811523
    8. ')
' → logprob: -10.280187606811523
    9. '    
' → logprob: -10.405187606811523
    10. ' ' → logprob: -10.405187606811523

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1349560022354126
    2. 'dp' → logprob: -2.134955883026123
    3. 'INF' → logprob: -5.884955883026123
    4. ' dp' → logprob: -6.509955883026123
    5. 'import' → logprob: -6.634955883026123
    6. 'DP' → logprob: -6.884955883026123
    7. '
' → logprob: -7.384955883026123
    8. '	dp' → logprob: -8.509956359863281
    9. ' INF' → logprob: -9.009956359863281
    10. 'inf' → logprob: -9.009956359863281

Token 458: ' memo' (ID: 46393)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02953721210360527
    2. 'INF' → logprob: -4.279537200927734
    3. 'DP' → logprob: -5.154537200927734
    4. '   ' → logprob: -5.154537200927734
    5. 'import' → logprob: -6.904537200927734
    6. 'inf' → logprob: -7.529537200927734
    7. ' dp' → logprob: -7.654537200927734
    8. 'cost' → logprob: -8.279537200927734
    9. 'dist' → logprob: -8.404537200927734
    10. ' INF' → logprob: -8.529537200927734

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231916904449463
    2. ' =' → logprob: -0.8981916904449463
    3. '=[' → logprob: -10.523191452026367
    4. '[' → logprob: -10.523191452026367
    5. '   ' → logprob: -12.398191452026367
    6. ' ' → logprob: -13.398191452026367
    7. '	' → logprob: -13.773191452026367
    8. ' =[' → logprob: -13.773191452026367
    9. ',' → logprob: -14.148191452026367
    10. ')' → logprob: -14.148191452026367

Token 460: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013844124041497707
    2. '[-' → logprob: -5.138844013214111
    3. '{' → logprob: -5.513844013214111
    4. ' [' → logprob: -6.013844013214111
    5. '{}' → logprob: -7.138844013214111
    6. '[L' → logprob: -8.76384449005127
    7. '[l' → logprob: -9.51384449005127
    8. '[N' → logprob: -10.01384449005127
    9. '[a' → logprob: -10.13884449005127
    10. '[int' → logprob: -10.13884449005127

Token 461: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.20373640954494476
    2. '10' → logprob: -2.0787363052368164
    3. '-' → logprob: -2.9537363052368164
    4. '1' → logprob: -6.578736305236816
    5. 'None' → logprob: -6.578736305236816
    6. '100' → logprob: -6.578736305236816
    7. '0' → logprob: -6.953736305236816
    8. '999' → logprob: -7.078736305236816
    9. 'int' → logprob: -8.453736305236816
    10. '(' → logprob: -8.578736305236816

Token 462: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1443740576505661
    2. '9' → logprob: -2.019374132156372
    3. '7' → logprob: -7.269373893737793
    4. '10' → logprob: -7.894373893737793
    5. ' **' → logprob: -8.644373893737793
    6. '15' → logprob: -8.769373893737793
    7. '8' → logprob: -9.394373893737793
    8. '18' → logprob: -9.394373893737793
    9. '6' → logprob: -9.769373893737793
    10. '000' → logprob: -11.019373893737793

Token 463: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.26853662729263306
    2. '15' → logprob: -1.8935365676879883
    3. '10' → logprob: -2.6435365676879883
    4. '12' → logprob: -5.018536567687988
    5. '8' → logprob: -6.268536567687988
    6. '18' → logprob: -6.393536567687988
    7. '11' → logprob: -7.143536567687988
    8. '7' → logprob: -7.393536567687988
    9. '20' → logprob: -7.393536567687988
    10. '14' → logprob: -7.393536567687988

Token 464: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.29697075486183167
    2. '15' → logprob: -1.7969707250595093
    3. '10' → logprob: -2.671970844268799
    4. '12' → logprob: -4.796970844268799
    5. '18' → logprob: -5.421970844268799
    6. '8' → logprob: -5.796970844268799
    7. '14' → logprob: -6.671970844268799
    8. '7' → logprob: -6.671970844268799
    9. '11' → logprob: -6.796970844268799
    10. '13' → logprob: -7.046970844268799

Token 465: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011387789621949196
    2. '+' → logprob: -5.011387825012207
    3. ']+' → logprob: -5.886387825012207
    4. ']*' → logprob: -6.761387825012207
    5. ' +' → logprob: -7.886387825012207
    6. ' ]' → logprob: -8.386387825012207
    7. '+]' → logprob: -9.386387825012207
    8. ' for' → logprob: -11.136387825012207
    9. ']*(' → logprob: -11.511387825012207
    10. '   ' → logprob: -12.261387825012207

Token 466: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08486717939376831
    2. ' for' → logprob: -3.209867238998413
    3. ' ]' → logprob: -3.834867238998413
    4. ']*' → logprob: -5.334867000579834
    5. ' ' → logprob: -5.709867000579834
    6. '
' → logprob: -5.834867000579834
    7. 'for' → logprob: -6.084867000579834
    8. ']+' → logprob: -6.209867000579834
    9. ',' → logprob: -6.834867000579834
    10. '+' → logprob: -6.959867000579834

Token 467: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0032446200493723154
    2. '(L' → logprob: -5.753244400024414
    3. ' L' → logprob: -10.003244400024414
    4. '(' → logprob: -11.003244400024414
    5. '   ' → logprob: -13.128244400024414
    6. ' (' → logprob: -14.003244400024414
    7. '	L' → logprob: -14.128244400024414
    8. '((' → logprob: -15.628244400024414
    9. '[L' → logprob: -15.753244400024414
    10. ' ' → logprob: -15.753244400024414

Token 468: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17263774573802948
    2. '<|end|>' → logprob: -2.172637701034546
    3. '   ' → logprob: -3.672637701034546
    4. ' 
' → logprob: -5.297637939453125
    5. '    
' → logprob: -5.547637939453125
    6. '  
' → logprob: -5.672637939453125
    7. '<|end|>' → logprob: -6.297637939453125
    8. '[m' → logprob: -7.172637939453125
    9. '[' → logprob: -7.297637939453125
    10. '[mem' → logprob: -7.547637939453125

Token 469: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32055601477622986
    2. 'memo' → logprob: -1.6955560445785522
    3. '<|end|>' → logprob: -3.1955559253692627
    4. '   ' → logprob: -4.195556163787842
    5. ' memo' → logprob: -4.695556163787842
    6. '    
' → logprob: -5.320556163787842
    7. 'm' → logprob: -5.320556163787842
    8. '[m' → logprob: -5.695556163787842
    9. '<|end|>' → logprob: -6.320556163787842
    10. '	
' → logprob: -6.570556163787842

Token 470: ' DP' (ID: 51992)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.015940988436341286
    2. '0' → logprob: -4.515941143035889
    3. '[' → logprob: -6.390941143035889
    4. ' memo' → logprob: -6.515941143035889
    5. '
' → logprob: -7.640941143035889
    6. '1' → logprob: -8.14094066619873
    7. 'm' → logprob: -8.26594066619873
    8. '   ' → logprob: -8.51594066619873
    9. 'mem' → logprob: -8.76594066619873
    10. ' ' → logprob: -9.89094066619873

Token 471: ' array' (ID: 2644)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025395924225449562
    2. '<|end|>' → logprob: -4.27539587020874
    3. '[' → logprob: -4.90039587020874
    4. '[mem' → logprob: -6.77539587020874
    5. '  
' → logprob: -7.65039587020874
    6. '<|end|>' → logprob: -7.77539587020874
    7. 'memo' → logprob: -7.90039587020874
    8. '[m' → logprob: -7.90039587020874
    9. '
' → logprob: -8.400396347045898
    10. '[
' → logprob: -8.400396347045898

Token 472: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6752508282661438
    2. '[' → logprob: -2.175250768661499
    3. '<|end|>' → logprob: -2.175250768661499
    4. '[m' → logprob: -2.675250768661499
    5. 'memo' → logprob: -3.050250768661499
    6. '   ' → logprob: -3.175250768661499
    7. '[mem' → logprob: -3.175250768661499
    8. '    
' → logprob: -4.175251007080078
    9. '<|end|>' → logprob: -4.550251007080078
    10. ' memo' → logprob: -5.050251007080078

Token 473: ' minimal' (ID: 19957)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.06411250680685043
    2. ' memo' → logprob: -3.564112424850464
    3. '0' → logprob: -4.064112663269043
    4. '   ' → logprob: -4.439112663269043
    5. '[' → logprob: -6.314112663269043
    6. ' ' → logprob: -7.189112663269043
    7. 'm' → logprob: -7.564112663269043
    8. '```' → logprob: -7.939112663269043
    9. 'mem' → logprob: -8.439112663269043
    10. '1' → logprob: -8.564112663269043

Token 474: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.19574807584285736
    2. ' cost' → logprob: -1.8207480907440186
    3. '_cost' → logprob: -4.8207478523254395
    4. '<|end|>' → logprob: -5.9457478523254395
    5. ' costs' → logprob: -6.0707478523254395
    6. 'memo' → logprob: -6.5707478523254395
    7. ' memo' → logprob: -7.8207478523254395
    8. ' ' → logprob: -8.820748329162598
    9. '-cost' → logprob: -8.820748329162598
    10. '[' → logprob: -8.945748329162598

Token 475: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.41165974736213684
    2. ' each' → logprob: -1.5366597175598145
    3. 'mask' → logprob: -3.5366597175598145
    4. ' all' → logprob: -4.5366597175598145
    5. 'all' → logprob: -4.5366597175598145
    6. 'state' → logprob: -4.5366597175598145
    7. '   ' → logprob: -4.9116597175598145
    8. 'subset' → logprob: -5.2866597175598145
    9. 'states' → logprob: -5.4116597175598145
    10. ' subsets' → logprob: -5.4116597175598145

Token 477: ' subset' (ID: 58845)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subset' → logprob: -1.0487093925476074
    2. 'mask' → logprob: -1.1737093925476074
    3. 'state' → logprob: -1.5487093925476074
    4. ' subset' → logprob: -2.5487093925476074
    5. ' mask' → logprob: -4.298709392547607
    6. ' state' → logprob: -4.798709392547607
    7. ' combination' → logprob: -4.798709392547607
    8. 'comb' → logprob: -5.298709392547607
    9. 'covered' → logprob: -5.798709392547607
    10. 'coverage' → logprob: -6.048709392547607

Token 478: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32608723640441895
    2. '<|end|>' → logprob: -2.076087236404419
    3. 'memo' → logprob: -2.826087236404419
    4. '[' → logprob: -3.951087236404419
    5. '<|end|>' → logprob: -4.45108699798584
    6. '   ' → logprob: -4.82608699798584
    7. 'm' → logprob: -4.95108699798584
    8. '[m' → logprob: -5.07608699798584
    9. '[mem' → logprob: -5.20108699798584
    10. ' memo' → logprob: -5.32608699798584

Token 479: 'bit' (ID: 6516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.142173632979393
    2. 'state' → logprob: -2.8921735286712646
    3. ']' → logprob: -3.8921735286712646
    4. ' state' → logprob: -4.767173767089844
    5. ' )' → logprob: -5.017173767089844
    6. '   ' → logprob: -5.142173767089844
    7. 'subset' → logprob: -5.267173767089844
    8. 'mask' → logprob: -5.767173767089844
    9. 'index' → logprob: -6.142173767089844
    10. ' subset' → logprob: -6.142173767089844

Token 480: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.6834196448326111
    2. '_' → logprob: -0.9334196448326111
    3. ')' → logprob: -2.683419704437256
    4. '_mask' → logprob: -3.808419704437256
    5. '   ' → logprob: -5.433419704437256
    6. ')_' → logprob: -6.683419704437256
    7. '[' → logprob: -7.183419704437256
    8. ' _' → logprob: -7.308419704437256
    9. 'm' → logprob: -7.308419704437256
    10. ']' → logprob: -7.808419704437256

Token 481: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015508684329688549
    2. ')
' → logprob: -4.640508651733398
    3. '<|end|>' → logprob: -6.265508651733398
    4. '
' → logprob: -6.515508651733398
    5. ']' → logprob: -6.890508651733398
    6. '   ' → logprob: -7.640508651733398
    7. '<|end|>' → logprob: -8.515508651733398
    8. '[' → logprob: -8.515508651733398
    9. 's' → logprob: -9.015508651733398
    10. ' )' → logprob: -9.765508651733398

Token 482: '   ' (ID: 271)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.3065013289451599
    2. '
' → logprob: -1.6815013885498047
    3. '   ' → logprob: -3.4315013885498047
    4. '[m' → logprob: -4.306501388549805
    5. ' memo' → logprob: -4.306501388549805
    6. 'm' → logprob: -5.181501388549805
    7. '[' → logprob: -5.306501388549805
    8. 'mem' → logprob: -6.181501388549805
    9. '    
' → logprob: -6.306501388549805
    10. '[mem' → logprob: -7.056501388549805

Token 483: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.0056800260208547115
    2. ' memo' → logprob: -5.380680084228516
    3. '   ' → logprob: -7.630680084228516
    4. 'm' → logprob: -7.880680084228516
    5. 'mem' → logprob: -9.380680084228516
    6. '
' → logprob: -10.255680084228516
    7. '```' → logprob: -10.755680084228516
    8. '	m' → logprob: -11.130680084228516
    9. ' ' → logprob: -12.255680084228516
    10. 'memory' → logprob: -12.505680084228516

Token 484: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -13.12500286102295
    3. ' [' → logprob: -14.75000286102295
    4. '   ' → logprob: -15.25000286102295
    5. '[
' → logprob: -16.000003814697266
    6. '\[' → logprob: -16.375003814697266
    7. '[m' → logprob: -17.000003814697266
    8. '[-' → logprob: -17.375003814697266
    9. '[len' → logprob: -17.500003814697266
    10. 'def' → logprob: -17.875003814697266

Token 485: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '   ' → logprob: -15.250004768371582
    4. '000' → logprob: -15.437504768371582
    5. '
' → logprob: -16.3750057220459
    6. ')' → logprob: -16.5000057220459
    7. '00' → logprob: -16.5000057220459
    8. '[' → logprob: -16.6250057220459
    9. '(' → logprob: -17.3125057220459
    10. ']' → logprob: -17.5000057220459

Token 486: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011248346709180623
    2. ' ]' → logprob: -9.375112533569336
    3. ']=' → logprob: -10.500112533569336
    4. '=' → logprob: -16.875112533569336
    5. '[' → logprob: -18.250112533569336
    6. '   ' → logprob: -18.625112533569336
    7. ']
' → logprob: -18.750112533569336
    8. ' =' → logprob: -19.125112533569336
    9. '']' → logprob: -19.375112533569336
    10. ')' → logprob: -19.625112533569336

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006715728435665369
    2. ' =' → logprob: -5.006715774536133
    3. ']=' → logprob: -15.631715774536133
    4. '=
' → logprob: -16.756715774536133
    5. '＝' → logprob: -16.881715774536133
    6. ')=' → logprob: -17.256715774536133
    7. '.=' → logprob: -17.256715774536133
    8. '=}' → logprob: -18.006715774536133
    9. '[' → logprob: -18.131715774536133
    10. ']' → logprob: -18.256715774536133

Token 488: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '000' → logprob: -18.625
    4. '   ' → logprob: -18.875
    5. '00' → logprob: -19.375
    6. '۰' → logprob: -19.875
    7. '０' → logprob: -21.4375
    8. '#' → logprob: -21.5
    9. '    ' → logprob: -21.875
    10. '  ' → logprob: -22.0625

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '000' → logprob: -18.625
    4. '   ' → logprob: -19.25
    5. '1' → logprob: -19.625
    6. '۰' → logprob: -20.1875
    7. '00' → logprob: -20.375
    8. '10' → logprob: -20.75
    9. '  ' → logprob: -20.9375
    10. '
' → logprob: -20.9375

Token 490: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12388183176517487
    2. '   ' → logprob: -2.4988818168640137
    3. '    
' → logprob: -3.9988818168640137
    4. '<|end|>' → logprob: -4.998881816864014
    5. '	
' → logprob: -5.498881816864014
    6. '  
' → logprob: -6.248881816864014
    7. ' 
' → logprob: -6.498881816864014
    8. '' → logprob: -8.248882293701172
    9. '<|end|>' → logprob: -8.248882293701172
    10. ' for' → logprob: -8.373882293701172

Token 491: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02306586690247059
    2. 'for' → logprob: -5.02306604385376
    3. '   ' → logprob: -5.39806604385376
    4. ' for' → logprob: -5.52306604385376
    5. '	
' → logprob: -5.64806604385376
    6. '    
' → logprob: -6.52306604385376
    7. '	for' → logprob: -6.77306604385376
    8. ' 
' → logprob: -7.14806604385376
    9. '  
' → logprob: -7.77306604385376
    10. '
' → logprob: -8.648065567016602

Token 492: ' Base' (ID: 8729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3537336587905884
    2. ' for' → logprob: -1.3537336587905884
    3. '   ' → logprob: -3.353733539581299
    4. '	for' → logprob: -6.228733539581299
    5. ' ' → logprob: -7.478733539581299
    6. '
' → logprob: -7.978733539581299
    7. ' 
' → logprob: -8.228734016418457
    8. '    
' → logprob: -8.228734016418457
    9. '<|end|>' → logprob: -8.603734016418457
    10. '0' → logprob: -8.728734016418457

Token 493: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.8539095520973206
    2. '_' → logprob: -1.2289094924926758
    3. '<|end|>' → logprob: -2.353909492492676
    4. ' case' → logprob: -3.103909492492676
    5. ' line' → logprob: -3.603909492492676
    6. 'line' → logprob: -3.603909492492676
    7. '[' → logprob: -4.228909492492676
    8. '
' → logprob: -4.728909492492676
    9. '    
' → logprob: -4.853909492492676
    10. '   ' → logprob: -5.228909492492676

Token 494: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6076046228408813
    2. '<|end|>' → logprob: -1.9826046228408813
    3. '   ' → logprob: -2.232604503631592
    4. '    
' → logprob: -2.357604503631592
    5. '\n' → logprob: -3.232604503631592
    6. '  
' → logprob: -3.857604503631592
    7. '' → logprob: -4.607604503631592
    8. ' 
' → logprob: -4.607604503631592
    9. '<|end|>' → logprob: -4.857604503631592
    10. 'newline' → logprob: -5.357604503631592

Token 495: ' cost' (ID: 3097)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6187750101089478
    2. '<|end|>' → logprob: -1.6187750101089478
    3. ' for' → logprob: -1.9937750101089478
    4. ' ' → logprob: -1.9937750101089478
    5. ' 
' → logprob: -2.493774890899658
    6. 'for' → logprob: -2.618774890899658
    7. '    
' → logprob: -2.868774890899658
    8. '
' → logprob: -2.993774890899658
    9. '[' → logprob: -4.493774890899658
    10. '  
' → logprob: -4.743774890899658

Token 496: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: ' cover' (ID: 4321)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.06979046761989594
    2. ' cover' → logprob: -3.3197903633117676
    3. 'select' → logprob: -4.194790363311768
    4. 'choose' → logprob: -4.569790363311768
    5. '0' → logprob: -6.694790363311768
    6. 'collect' → logprob: -6.694790363311768
    7. 'reach' → logprob: -7.444790363311768
    8. 'pick' → logprob: -7.819790363311768
    9. 'complete' → logprob: -7.944790363311768
    10. 'get' → logprob: -8.069790840148926

Token 498: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.533569872379303
    2. ' no' → logprob: -0.908569872379303
    3. '0' → logprob: -5.533569812774658
    4. 'empty' → logprob: -6.033569812774658
    5. 'none' → logprob: -6.783569812774658
    6. 'nothing' → logprob: -6.908569812774658
    7. ' nothing' → logprob: -7.533569812774658
    8. ' ' → logprob: -7.783569812774658
    9. 'the' → logprob: -8.533570289611816
    10. ' none' → logprob: -8.533570289611816

Token 499: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.3972654342651367
    2. 'items' → logprob: -1.2722654342651367
    3. ' subset' → logprob: -3.6472654342651367
    4. '_' → logprob: -4.772265434265137
    5. 'subset' → logprob: -5.272265434265137
    6. ' ' → logprob: -6.272265434265137
    7. '_items' → logprob: -6.272265434265137
    8. ' elements' → logprob: -6.522265434265137
    9. ' set' → logprob: -7.397265434265137
    10. 'elements' → logprob: -7.522265434265137

Token 500: ' is' (ID: 382)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4047890603542328
    2. '<|end|>' → logprob: -1.7797890901565552
    3. '   ' → logprob: -2.1547889709472656
    4. '    
' → logprob: -3.7797889709472656
    5. '<|end|>' → logprob: -5.154788970947266
    6. '  
' → logprob: -5.529788970947266
    7. '\n' → logprob: -5.779788970947266
    8. ' 
' → logprob: -6.279788970947266
    9. ' ' → logprob: -6.404788970947266
    10. '' → logprob: -6.654788970947266

Token 501: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.588793960167095e-05
    2. ' ' → logprob: -9.500076293945312
    3. 'zero' → logprob: -14.125076293945312
    4. ' zero' → logprob: -15.375076293945312
    5. '   ' → logprob: -17.625076293945312
    6. '000' → logprob: -20.750076293945312
    7. '```' → logprob: -21.000076293945312
    8. '  ' → logprob: -21.125076293945312
    9. '=' → logprob: -21.250076293945312
    10. ' ' → logprob: -21.875076293945312

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. 'zero' → logprob: -14.000011444091797
    4. '   ' → logprob: -18.125011444091797
    5. ' zero' → logprob: -19.000011444091797
    6. '000' → logprob: -21.125011444091797
    7. '```' → logprob: -21.500011444091797
    8. 'exact' → logprob: -21.625011444091797
    9. '
' → logprob: -22.250011444091797
    10. '  ' → logprob: -22.250011444091797

Token 503: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.587397575378418
    2. '   ' → logprob: -1.462397575378418
    3. '<|end|>' → logprob: -2.337397575378418
    4. '    
' → logprob: -3.587397575378418
    5. ' for' → logprob: -3.962397575378418
    6. '	for' → logprob: -4.087397575378418
    7. ' 
' → logprob: -4.587397575378418
    8. '	
' → logprob: -4.587397575378418
    9. '\n' → logprob: -4.712397575378418
    10. 'for' → logprob: -4.837397575378418

Token 504: '   ' (ID: 271)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.5917189717292786
    2. '   ' → logprob: -1.5917189121246338
    3. ' for' → logprob: -1.8417189121246338
    4. 'for' → logprob: -2.591718912124634
    5. '
' → logprob: -5.591719150543213
    6. '	
' → logprob: -5.716719150543213
    7. '    
' → logprob: -6.466719150543213
    8. ' 
' → logprob: -8.216718673706055
    9. '\t' → logprob: -8.466718673706055
    10. '  
' → logprob: -9.591718673706055

Token 505: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000514548271894455
    2. '   ' → logprob: -7.750514507293701
    3. ' for' → logprob: -9.50051498413086
    4. '	for' → logprob: -11.62551498413086
    5. 'from' → logprob: -15.62551498413086
    6. '    
' → logprob: -17.25051498413086
    7. '```' → logprob: -17.50051498413086
    8. '
' → logprob: -17.50051498413086
    9. ' ' → logprob: -18.50051498413086
    10. 'import' → logprob: -19.50051498413086

Token 506: ' Iterate' (ID: 129410)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02121284231543541
    2. '   ' → logprob: -4.146213054656982
    3. ' for' → logprob: -5.271213054656982
    4. '	for' → logprob: -10.646212577819824
    5. ' ' → logprob: -13.896212577819824
    6. 'from' → logprob: -14.146212577819824
    7. '       ' → logprob: -15.146212577819824
    8. 'i' → logprob: -15.271212577819824
    9. '  ' → logprob: -15.271212577819824
    10. '```' → logprob: -15.271212577819824

Token 507: ' through' (ID: 1819)
  Prédit: ' over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' over' → logprob: -0.08343265950679779
    2. 'over' → logprob: -3.208432674407959
    3. '   ' → logprob: -4.208432674407959
    4. 'for' → logprob: -4.958432674407959
    5. ' for' → logprob: -5.083432674407959
    6. ' through' → logprob: -5.833432674407959
    7. ' i' → logprob: -6.208432674407959
    8. ' in' → logprob: -6.208432674407959
    9. '_' → logprob: -6.708432674407959
    10. 'i' → logprob: -6.958432674407959

Token 508: ' all' (ID: 722)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.37868252396583557
    2. 'range' → logprob: -1.7536824941635132
    3. ' v' → logprob: -2.3786826133728027
    4. ' range' → logprob: -3.2536826133728027
    5. '   ' → logprob: -5.628682613372803
    6. 'memo' → logprob: -6.003682613372803
    7. 'm' → logprob: -6.503682613372803
    8. 'i' → logprob: -6.878682613372803
    9. 'x' → logprob: -7.628682613372803
    10. ' memo' → logprob: -8.128682136535645

Token 509: ' possible' (ID: 4149)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.4330300092697144
    2. 'subset' → logprob: -2.058030128479004
    3. 'i' → logprob: -2.308030128479004
    4. ' subsets' → logprob: -2.308030128479004
    5. ' v' → logprob: -2.808030128479004
    6. ' i' → logprob: -2.933030128479004
    7. ' s' → logprob: -2.933030128479004
    8. 'v' → logprob: -3.058030128479004
    9. ' subset' → logprob: -3.308030128479004
    10. ' mask' → logprob: -3.308030128479004

Token 510: ' subsets' (ID: 165377)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8698410391807556
    2. 'mask' → logprob: -0.8698410391807556
    3. 's' → logprob: -2.7448410987854004
    4. 'S' → logprob: -3.7448410987854004
    5. 'subset' → logprob: -3.9948410987854004
    6. 'state' → logprob: -4.1198410987854
    7. ' i' → logprob: -4.3698410987854
    8. ' s' → logprob: -5.2448410987854
    9. ' mask' → logprob: -5.4948410987854
    10. 'flag' → logprob: -5.6198410987854

Token 511: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9208858609199524
    2. 'for' → logprob: -1.1708858013153076
    3. ' for' → logprob: -1.2958858013153076
    4. ' in' → logprob: -5.295886039733887
    5. ':' → logprob: -5.545886039733887
    6. ',' → logprob: -6.295886039733887
    7. 'range' → logprob: -6.420886039733887
    8. ' of' → logprob: -6.545886039733887
    9. 'i' → logprob: -6.795886039733887
    10. 'in' → logprob: -7.045886039733887

Token 512: 'bit' (ID: 6516)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.977631688117981
    2. 's' → logprob: -1.602631688117981
    3. 'mask' → logprob: -1.602631688117981
    4. 'S' → logprob: -2.3526315689086914
    5. 'subset' → logprob: -3.4776315689086914
    6. ')' → logprob: -3.7276315689086914
    7. 'state' → logprob: -3.8526315689086914
    8. 'l' → logprob: -4.227631568908691
    9. 'L' → logprob: -4.727631568908691
    10. 'memo' → logprob: -5.352631568908691

Token 513: 'mask' (ID: 22527)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.236669659614563
    2. 'mask' → logprob: -1.361669659614563
    3. '_' → logprob: -1.736669659614563
    4. '   ' → logprob: -1.861669659614563
    5. '_mask' → logprob: -3.1116695404052734
    6. 'for' → logprob: -4.111669540405273
    7. ')' → logprob: -4.361669540405273
    8. '_masks' → logprob: -4.361669540405273
    9. ' _' → logprob: -4.486669540405273
    10. '=' → logprob: -5.611669540405273

Token 514: ' n' (ID: 297)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5446531176567078
    2. ')' → logprob: -1.4196531772613525
    3. ':' → logprob: -2.7946531772613525
    4. '):
' → logprob: -3.2946531772613525
    5. '   ' → logprob: -3.9196531772613525
    6. ',' → logprob: -4.169652938842773
    7. 's' → logprob: -4.919652938842773
    8. 'for' → logprob: -5.044652938842773
    9. ' for' → logprob: -5.294652938842773
    10. ' )' → logprob: -5.544652938842773

Token 515: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2628304064273834
    2. '):' → logprob: -1.887830376625061
    3. 's' → logprob: -3.2628304958343506
    4. '):
' → logprob: -4.1378302574157715
    5. ' )' → logprob: -4.1378302574157715
    6. ' ):' → logprob: -5.6378302574157715
    7. '   ' → logprob: -6.2628302574157715
    8. '_' → logprob: -7.0128302574157715
    9. '[' → logprob: -7.8878302574157715
    10. '=' → logprob: -8.13783073425293

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1412879377603531
    2. ' for' → logprob: -2.2662880420684814
    3. 'for' → logprob: -3.7662880420684814
    4. ':' → logprob: -6.141287803649902
    5. '	for' → logprob: -7.391287803649902
    6. ' ' → logprob: -7.516287803649902
    7. 'n' → logprob: -7.891287803649902
    8. ' n' → logprob: -8.391287803649902
    9. ' in' → logprob: -8.516287803649902
    10. '  ' → logprob: -8.766287803649902

Token 517: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3498648405075073
    2. 'for' (adapté à ' for') → logprob: -1.3498648405075073
    3. '   ' → logprob: -3.349864959716797
    4. ' n' → logprob: -7.599864959716797
    5. 'n' → logprob: -8.474864959716797
    6. '	for' → logprob: -9.099864959716797
    7. ' ' → logprob: -11.224864959716797
    8. ' ' → logprob: -12.349864959716797
    9. '	n' → logprob: -13.224864959716797
    10. '  ' → logprob: -13.224864959716797

Token 518: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25194162130355835
    2. ' n' → logprob: -1.5019416809082031
    3. '	n' → logprob: -12.751941680908203
    4. 'i' → logprob: -12.876941680908203
    5. ' ' → logprob: -13.751941680908203
    6. '_n' → logprob: -14.001941680908203
    7. 'v' → logprob: -14.251941680908203
    8. '   ' → logprob: -14.501941680908203
    9. 'memo' → logprob: -14.689441680908203
    10. ' i' → logprob: -14.814441680908203

Token 519: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3490237295627594
    2. 'in' → logprob: -1.224023699760437
    3. ' ' → logprob: -7.724023818969727
    4. ',' → logprob: -10.224023818969727
    5. '  ' → logprob: -10.599023818969727
    6. '	in' → logprob: -10.974023818969727
    7. '   ' → logprob: -11.474023818969727
    8. 'space' → logprob: -11.849023818969727
    9. 'n' → logprob: -11.974023818969727
    10. ')' → logprob: -11.974023818969727

Token 520: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06291570514440536
    2. ' range' → logprob: -2.812915802001953
    3. ' xrange' → logprob: -7.312915802001953
    4. 'x' → logprob: -8.562915802001953
    5. ')' → logprob: -10.687915802001953
    6. 'memo' → logprob: -10.812915802001953
    7. '   ' → logprob: -11.812915802001953
    8. '(range' → logprob: -12.312915802001953
    9. '	range' → logprob: -12.312915802001953
    10. '0' → logprob: -12.562915802001953

Token 521: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10934900492429733
    2. '(L' → logprob: -2.359349012374878
    3. ' L' → logprob: -5.234348773956299
    4. '(' → logprob: -6.109348773956299
    5. '1' → logprob: -6.734348773956299
    6. '   ' → logprob: -8.234349250793457
    7. '0' → logprob: -9.859349250793457
    8. '	L' → logprob: -10.984349250793457
    9. ' (' → logprob: -11.859349250793457
    10. ' ' → logprob: -12.734349250793457

Token 522: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06284651160240173
    2. '):
' → logprob: -2.8128464221954346
    3. '+' → logprob: -7.312846660614014
    4. '   ' → logprob: -9.187846183776855
    5. '):
' → logprob: -10.312846183776855
    6. ')' → logprob: -10.437846183776855
    7. ':' → logprob: -10.562846183776855
    8. '       ' → logprob: -11.812846183776855
    9. ' ):' → logprob: -11.812846183776855
    10. ',' → logprob: -12.812846183776855

Token 523: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.79811754100956e-05
    2. ' ' → logprob: -10.750038146972656
    3. '+' → logprob: -11.750038146972656
    4. '2' → logprob: -13.000038146972656
    5. '   ' → logprob: -13.000038146972656
    6. '0' → logprob: -14.000038146972656
    7. ')' → logprob: -14.500038146972656
    8. '```' → logprob: -14.500038146972656
    9. '100' → logprob: -15.312538146972656
    10. '
' → logprob: -15.375038146972656

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.227250610711053e-05
    2. '2' → logprob: -10.125041961669922
    3. '-' → logprob: -13.750041961669922
    4. '0' → logprob: -15.250041961669922
    5. '3' → logprob: -15.562541961669922
    6. '```' → logprob: -16.125041961669922
    7. '
' → logprob: -16.187541961669922
    8. ' ' → logprob: -16.687541961669922
    9. '4' → logprob: -16.812541961669922
    10. '100' → logprob: -17.062541961669922

Token 525: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23425942659378052
    2. ' +' → logprob: -2.6092593669891357
    3. '):' → logprob: -2.8592593669891357
    4. '):
' → logprob: -2.9842593669891357
    5. ',' → logprob: -3.8592593669891357
    6. '   ' → logprob: -5.359259605407715
    7. '-' → logprob: -7.359259605407715
    8. '       ' → logprob: -8.359259605407715
    9. ' -' → logprob: -8.609259605407715
    10. ':' → logprob: -9.234259605407715

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1311761885881424
    2. '   ' → logprob: -2.256176233291626
    3. ',' → logprob: -5.006175994873047
    4. ' for' → logprob: -5.131175994873047
    5. ':' → logprob: -6.506175994873047
    6. 'for' → logprob: -6.756175994873047
    7. '        
' → logprob: -7.506175994873047
    8. '    
' → logprob: -7.506175994873047
    9. ':
' → logprob: -8.631175994873047
    10. '    ' → logprob: -8.756175994873047

Token 527: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0175203084945679
    2. 'for' → logprob: -1.0175203084945679
    3. 'cost' → logprob: -2.0175204277038574
    4. '   ' → logprob: -2.7675204277038574
    5. 'a' → logprob: -3.2675204277038574
    6. '       ' → logprob: -3.2675204277038574
    7. 'c' → logprob: -6.017520427703857
    8. ' for' → logprob: -7.517520427703857
    9. ' if' → logprob: -7.767520427703857
    10. 'cur' → logprob: -7.892520427703857

Token 528: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4740169942378998
    2. 'a' → logprob: -1.9740170240402222
    3. 'if' → logprob: -2.2240169048309326
    4. 'cost' → logprob: -2.7240169048309326
    5. '   ' → logprob: -2.8490169048309326
    6. '       ' → logprob: -6.224017143249512
    7. ' for' → logprob: -6.349017143249512
    8. 'c' → logprob: -6.599017143249512
    9. 'cur' → logprob: -7.849017143249512
    10. ' if' → logprob: -8.224017143249512

Token 529: ' using' (ID: 2360)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.595875084400177
    2. '       ' → logprob: -1.7208750247955322
    3. ' for' → logprob: -1.9708750247955322
    4. '   ' → logprob: -2.4708750247955322
    5. '           ' → logprob: -4.095875263214111
    6. 'v' → logprob: -4.845875263214111
    7. 'range' → logprob: -4.845875263214111
    8. 'n' → logprob: -5.970875263214111
    9. ' in' → logprob: -6.095875263214111
    10. ' range' → logprob: -6.220875263214111

Token 530: ' each' (ID: 2454)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.42226964235305786
    2. '_,' → logprob: -1.922269582748413
    3. 'for' → logprob: -2.922269582748413
    4. ',' → logprob: -3.797269582748413
    5. 'm' → logprob: -4.172269821166992
    6. ' v' → logprob: -4.172269821166992
    7. 'memo' → logprob: -4.172269821166992
    8. 'n' → logprob: -4.422269821166992
    9. '   ' → logprob: -4.547269821166992
    10. '_' → logprob: -4.797269821166992

Token 531: ' available' (ID: 2839)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2945021390914917
    2. 'subset' → logprob: -2.4195022583007812
    3. '   ' → logprob: -3.6695022583007812
    4. 'for' → logprob: -3.7945022583007812
    5. 'n' → logprob: -3.9195022583007812
    6. '(' → logprob: -4.544502258300781
    7. ' v' → logprob: -4.669502258300781
    8. 'set' → logprob: -4.669502258300781
    9. ' subset' → logprob: -5.044502258300781
    10. 'a' → logprob: -5.044502258300781

Token 532: ' set' (ID: 920)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6711448431015015
    2. 'a' → logprob: -1.1711448431015015
    3. 'subset' → logprob: -2.671144962310791
    4. 'cost' → logprob: -3.296144962310791
    5. 'v' → logprob: -4.421144962310791
    6. '   ' → logprob: -4.546144962310791
    7. 'set' → logprob: -4.546144962310791
    8. 's' → logprob: -4.921144962310791
    9. '[a' → logprob: -5.296144962310791
    10. '(v' → logprob: -5.796144962310791

Token 533: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06493429094552994
    2. ':' → logprob: -3.939934253692627
    3. ' in' → logprob: -4.564934253692627
    4. '   ' → logprob: -4.689934253692627
    5. ' for' → logprob: -5.064934253692627
    6. ':
' → logprob: -5.439934253692627
    7. ',' → logprob: -5.439934253692627
    8. '           ' → logprob: -6.439934253692627
    9. ' :' → logprob: -6.439934253692627
    10. 'for' → logprob: -7.189934253692627

Token 534: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12439072132110596
    2. 'for' → logprob: -2.6243906021118164
    3. 'cost' → logprob: -3.7493906021118164
    4. 'v' → logprob: -5.374390602111816
    5. '   ' → logprob: -5.749390602111816
    6. 'c' → logprob: -5.749390602111816
    7. 'i' → logprob: -6.374390602111816
    8. ' a' → logprob: -6.624390602111816
    9. '_,' → logprob: -6.624390602111816
    10. ' for' → logprob: -6.874390602111816

Token 535: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004917914047837257
    2. ' ,' → logprob: -9.250492095947266
    3. ',v' → logprob: -9.500492095947266
    4. ')' → logprob: -9.750492095947266
    5. ',n' → logprob: -9.875492095947266
    6. ',
' → logprob: -9.875492095947266
    7. '),' → logprob: -10.375492095947266
    8. '   ' → logprob: -10.625492095947266
    9. '       ' → logprob: -10.750492095947266
    10. ',a' → logprob: -10.875492095947266

Token 536: ' cost' (ID: 3097)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13265228271484375
    2. ' a' → logprob: -2.3826522827148438
    3. 'v' → logprob: -4.132652282714844
    4. 'cost' → logprob: -5.257652282714844
    5. ' v' → logprob: -6.007652282714844
    6. ' cost' → logprob: -6.632652282714844
    7. ',' → logprob: -6.757652282714844
    8. '[' → logprob: -7.007652282714844
    9. '_,' → logprob: -7.382652282714844
    10. ',a' → logprob: -7.382652282714844

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024001303245313466
    2. '       ' → logprob: -9.250240325927734
    3. ',
' → logprob: -10.375240325927734
    4. ',n' → logprob: -10.375240325927734
    5. ' ,' → logprob: -10.500240325927734
    6. ',v' → logprob: -11.625240325927734
    7. ')' → logprob: -11.750240325927734
    8. '           ' → logprob: -12.125240325927734
    9. '   ' → logprob: -12.250240325927734
    10. '),' → logprob: -12.375240325927734

Token 538: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0303797610104084
    2. ' flag' → logprob: -3.7803797721862793
    3. 'f' → logprob: -5.405379772186279
    4. 'v' → logprob: -7.030379772186279
    5. '   ' → logprob: -7.530379772186279
    6. '       ' → logprob: -8.280379295349121
    7. 'mask' → logprob: -8.280379295349121
    8. ' f' → logprob: -9.655379295349121
    9. ' v' → logprob: -9.905379295349121
    10. 's' → logprob: -10.280379295349121

Token 539: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3719884157180786
    2. ',' → logprob: -1.2469884157180786
    3. '):' → logprob: -4.496988296508789
    4. '       ' → logprob: -5.746988296508789
    5. '):
' → logprob: -5.996988296508789
    6. ' )' → logprob: -6.621988296508789
    7. '   ' → logprob: -6.746988296508789
    8. ',)' → logprob: -7.371988296508789
    9. '),' → logprob: -7.746988296508789
    10. ' in' → logprob: -7.746988296508789

Token 540: ' items' (ID: 4732)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0010586526477709413
    2. ' flag' → logprob: -6.876058578491211
    3. '   ' → logprob: -12.376058578491211
    4. 'v' → logprob: -12.501058578491211
    5. '(flag' → logprob: -12.626058578491211
    6. ')' → logprob: -12.751058578491211
    7. 'n' → logprob: -13.126058578491211
    8. 'mask' → logprob: -13.376058578491211
    9. '	flag' → logprob: -13.876058578491211
    10. 'cost' → logprob: -14.126058578491211

Token 541: ' provided' (ID: 5181)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2297588288784027
    2. ',' → logprob: -1.854758858680725
    3. 'in' → logprob: -3.8547587394714355
    4. 'included' → logprob: -4.9797587394714355
    5. ' in' → logprob: -5.3547587394714355
    6. '):' → logprob: -5.9797587394714355
    7. '   ' → logprob: -6.2297587394714355
    8. '):
' → logprob: -6.3547587394714355
    9. '       ' → logprob: -6.3547587394714355
    10. 'covered' → logprob: -6.4797587394714355

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06170053407549858
    2. '):' → logprob: -3.3117005825042725
    3. '):
' → logprob: -4.311700344085693
    4. '   ' → logprob: -6.186700344085693
    5. 'in' → logprob: -6.186700344085693
    6. 'by' → logprob: -6.561700344085693
    7. ',' → logprob: -6.811700344085693
    8. '       ' → logprob: -6.936700344085693
    9. ' by' → logprob: -8.061700820922852
    10. ' in' → logprob: -8.186700820922852

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02308672107756138
    2. ':' → logprob: -4.1480865478515625
    3. ',' → logprob: -6.0230865478515625
    4. '	' → logprob: -6.7730865478515625
    5. ':
' → logprob: -7.5230865478515625
    6. '           ' → logprob: -7.6480865478515625
    7. ' for' → logprob: -7.7730865478515625
    8. '   ' → logprob: -7.8980865478515625
    9. '[' → logprob: -8.273086547851562
    10. '        
' → logprob: -8.273086547851562

Token 544: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4080750346183777
    2. 'a' → logprob: -1.1580750942230225
    3. '       ' → logprob: -4.158074855804443
    4. 'cost' → logprob: -6.158074855804443
    5. '   ' → logprob: -6.408074855804443
    6. ' for' → logprob: -6.658074855804443
    7. ' a' → logprob: -8.908075332641602
    8. 'if' → logprob: -9.533075332641602
    9. '           ' → logprob: -10.658075332641602
    10. '(a' → logprob: -11.033075332641602

Token 545: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03795071318745613
    2. '(a' → logprob: -3.4129507541656494
    3. ' a' → logprob: -6.16295051574707
    4. 'cost' → logprob: -6.41295051574707
    5. ' (' → logprob: -8.03795051574707
    6. '[a' → logprob: -9.28795051574707
    7. '   ' → logprob: -9.91295051574707
    8. ' cost' → logprob: -11.03795051574707
    9. 'i' → logprob: -11.28795051574707
    10. '(cost' → logprob: -11.53795051574707

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008971701608970761
    2. ',v' → logprob: -8.000897407531738
    3. ' ,' → logprob: -8.250897407531738
    4. ',n' → logprob: -8.875897407531738
    5. ',f' → logprob: -9.125897407531738
    6. 'in' → logprob: -11.500897407531738
    7. ',c' → logprob: -11.875897407531738
    8. ',b' → logprob: -12.125897407531738
    9. ',
' → logprob: -12.500897407531738
    10. ',a' → logprob: -12.875897407531738

Token 547: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0016303133452311158
    2. 'f' → logprob: -6.5016303062438965
    3. ' flag' → logprob: -9.126630783081055
    4. 'fl' → logprob: -11.376630783081055
    5. 'b' → logprob: -12.751630783081055
    6. 'mask' → logprob: -13.001630783081055
    7. 'flags' → logprob: -14.126630783081055
    8. '(flag' → logprob: -14.376630783081055
    9. '	flag' → logprob: -14.751630783081055
    10. '```' → logprob: -15.501630783081055

Token 548: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023544883355498314
    2. 'in' → logprob: -3.7735447883605957
    3. '       ' → logprob: -9.148545265197754
    4. '   ' → logprob: -9.398545265197754
    5. ')' → logprob: -10.773545265197754
    6. '	in' → logprob: -10.773545265197754
    7. '           ' → logprob: -11.523545265197754
    8. ':' → logprob: -11.898545265197754
    9. 'n' → logprob: -11.898545265197754
    10. ',' → logprob: -11.898545265197754

Token 549: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.65101717156358e-05
    2. ' v' → logprob: -9.250096321105957
    3. '	v' → logprob: -15.875096321105957
    4. '[v' → logprob: -16.000097274780273
    5. '(v' → logprob: -16.875097274780273
    6. ')v' → logprob: -17.625097274780273
    7. 'memo' → logprob: -17.750097274780273
    8. '   ' → logprob: -18.000097274780273
    9. '[(' → logprob: -18.000097274780273
    10. ' ' → logprob: -19.125097274780273

Token 550: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5242894887924194
    2. ':
' → logprob: -0.8992894887924194
    3. '           ' → logprob: -7.524289608001709
    4. '       ' → logprob: -7.899289608001709
    5. '):
' → logprob: -8.89928913116455
    6. ':
' → logprob: -10.02428913116455
    7. ',' → logprob: -10.77428913116455
    8. '[' → logprob: -11.89928913116455
    9. ' :
' → logprob: -11.89928913116455
    10. '   ' → logprob: -12.14928913116455

Token 551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02619265578687191
    2. ' if' → logprob: -3.9011926651000977
    3. '	       ' → logprob: -5.901192665100098
    4. '		' → logprob: -6.151192665100098
    5. ' new' → logprob: -8.901192665100098
    6. 'if' → logprob: -9.151192665100098
    7. '		   ' → logprob: -9.776192665100098
    8. '               ' → logprob: -9.901192665100098
    9. ',' → logprob: -10.151192665100098
    10. '    	' → logprob: -10.401192665100098

Token 552: ' n' (ID: 297)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.4405966997146606
    2. ' new' → logprob: -1.5655966997146606
    3. 'next' → logprob: -2.065596580505371
    4. ' nxt' → logprob: -2.190596580505371
    5. 'n' (adapté à ' n') → logprob: -2.315596580505371
    6. 'new' → logprob: -2.940596580505371
    7. ' if' → logprob: -2.940596580505371
    8. ' n' → logprob: -3.440596580505371
    9. '               ' → logprob: -3.565596580505371
    10. 'if' → logprob: -4.315596580505371

Token 553: '1' (ID: 16)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.01204228401184082
    2. ' |' → logprob: -5.887042045593262
    3. 'flag' → logprob: -6.137042045593262
    4. ' |=' → logprob: -6.512042045593262
    5. 'new' → logprob: -6.887042045593262
    6. ' =' → logprob: -7.387042045593262
    7. '_flag' → logprob: -7.387042045593262
    8. '=' → logprob: -7.387042045593262
    9. 'next' → logprob: -7.637042045593262
    10. '+' → logprob: -7.762042045593262

Token 554: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06216250732541084
    2. ' =' → logprob: -2.812162399291992
    3. '=n' → logprob: -8.562162399291992
    4. '|' → logprob: -13.562162399291992
    5. '=
' → logprob: -13.937162399291992
    6. '＝' → logprob: -15.062162399291992
    7. 'n' → logprob: -15.312162399291992
    8. ']' → logprob: -15.687162399291992
    9. ' ' → logprob: -15.937162399291992
    10. ' |=' → logprob: -16.187162399291992

Token 555: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024763736873865128
    2. ' n' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.127476692199707
    4. '	n' → logprob: -15.377476692199707
    5. '(n' → logprob: -16.25247573852539
    6. '[n' → logprob: -16.37747573852539
    7. '    ' → logprob: -17.87747573852539
    8. ' ' → logprob: -18.12747573852539
    9. '     ' → logprob: -18.87747573852539
    10. ')n' → logprob: -19.00247573852539

Token 556: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.5759446620941162
    2. ' |' → logprob: -0.8259446620941162
    3. '|get' → logprob: -13.325944900512695
    4. '|(' → logprob: -14.325944900512695
    5. ' |=' → logprob: -14.825944900512695
    6. '|max' → logprob: -14.825944900512695
    7. '|
' → logprob: -15.200944900512695
    8. '│' → logprob: -15.450944900512695
    9. ' ' → logprob: -15.450944900512695
    10. ' or' → logprob: -15.450944900512695

Token 557: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0031794982496649027
    2. ' flag' → logprob: -5.753179550170898
    3. '(flag' → logprob: -13.253179550170898
    4. '	flag' → logprob: -17.6281795501709
    5. '_flag' → logprob: -21.1281795501709
    6. ' ' → logprob: -22.2531795501709
    7. ' ' → logprob: -22.5031795501709
    8. 'flags' → logprob: -22.5031795501709
    9. '   ' → logprob: -22.8781795501709
    10. '.flag' → logprob: -23.2531795501709

Token 558: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26334619522094727
    2. '
' → logprob: -1.5133461952209473
    3. ' if' → logprob: -6.138346195220947
    4. '               ' → logprob: -6.388346195220947
    5. '            
' → logprob: -6.513346195220947
    6. '
' → logprob: -6.513346195220947
    7. '<|end|>' → logprob: -6.763346195220947
    8. 'if' → logprob: -6.888346195220947
    9. '       ' → logprob: -7.388346195220947
    10. '		' → logprob: -8.138345718383789

Token 559: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12355867028236389
    2. 'if' → logprob: -3.123558759689331
    3. ' if' → logprob: -3.748558759689331
    4. '           ' → logprob: -3.998558759689331
    5. '<|end|>' → logprob: -4.373558521270752
    6. '            
' → logprob: -4.623558521270752
    7. '
' → logprob: -5.873558521270752
    8. '<|end|>' → logprob: -7.123558521270752
    9. '  
' → logprob: -7.248558521270752
    10. ' 
' → logprob: -7.373558521270752

Token 560: ' New' (ID: 2036)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1510683298110962
    2. ' if' → logprob: -1.2760683298110962
    3. 'n' → logprob: -1.5260683298110962
    4. ' n' → logprob: -3.1510682106018066
    5. '           ' → logprob: -3.6510682106018066
    6. 'a' → logprob: -3.6510682106018066
    7. 'flag' → logprob: -3.9010682106018066
    8. '1' → logprob: -4.526068210601807
    9. 'memo' → logprob: -5.401068210601807
    10. 'min' → logprob: -5.401068210601807

Token 561: ' subset' (ID: 58845)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.37271130084991455
    2. '_' → logprob: -2.497711181640625
    3. '_cost' → logprob: -2.747711181640625
    4. 'n' → logprob: -2.997711181640625
    5. 'cost' → logprob: -3.247711181640625
    6. ')' → logprob: -3.997711181640625
    7. ' cost' → logprob: -4.497711181640625
    8. ' _' → logprob: -4.497711181640625
    9. ' n' → logprob: -5.122711181640625
    10. ']' → logprob: -5.622711181640625

Token 562: ' after' (ID: 1934)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8639170527458191
    2. '
' → logprob: -1.1139171123504639
    3. ']' → logprob: -2.863917112350464
    4. ' if' → logprob: -3.113917112350464
    5. ',' → logprob: -4.363916873931885
    6. '               ' → logprob: -4.363916873931885
    7. '[' → logprob: -4.363916873931885
    8. '<|end|>' → logprob: -4.363916873931885
    9. '            
' → logprob: -4.363916873931885
    10. 'if' → logprob: -4.863916873931885

Token 563: ' using' (ID: 2360)
  Prédit: 'adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adding' → logprob: -0.43973299860954285
    2. ' adding' → logprob: -1.6897330284118652
    3. 'including' → logprob: -2.9397330284118652
    4. ' including' → logprob: -3.3147330284118652
    5. ' selecting' → logprob: -4.189733028411865
    6. '   ' → logprob: -4.314733028411865
    7. 'select' → logprob: -4.564733028411865
    8. 'union' → logprob: -4.689733028411865
    9. 'using' → logprob: -4.939733028411865
    10. '|' → logprob: -5.439733028411865

Token 564: ' this' (ID: 495)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.13690541684627533
    2. ' flag' → logprob: -2.7619054317474365
    3. 'n' → logprob: -3.7619054317474365
    4. ' n' → logprob: -4.636905193328857
    5. 'set' → logprob: -4.761905193328857
    6. 'a' → logprob: -5.511905193328857
    7. '(flag' → logprob: -5.511905193328857
    8. 'the' → logprob: -5.761905193328857
    9. ' the' → logprob: -6.011905193328857
    10. '   ' → logprob: -6.136905193328857

Token 565: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -1.0990501642227173
    2. '_set' → logprob: -1.0990501642227173
    3. 'set' → logprob: -1.5990501642227173
    4. ')' → logprob: -2.8490500450134277
    5. ' ' → logprob: -3.9740500450134277
    6. '_' → logprob: -4.349050045013428
    7. 'subset' → logprob: -4.599050045013428
    8. ' subset' → logprob: -5.224050045013428
    9. '           ' → logprob: -5.599050045013428
    10. '   ' → logprob: -5.599050045013428

Token 566: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7552648186683655
    2. '
' → logprob: -0.8802648186683655
    3. ' if' → logprob: -2.7552647590637207
    4. '            
' → logprob: -4.630264759063721
    5. 'if' → logprob: -4.630264759063721
    6. '               ' → logprob: -4.755264759063721
    7. '<|end|>' → logprob: -5.130264759063721
    8. '
' → logprob: -5.880264759063721
    9. '       ' → logprob: -6.505264759063721
    10. ' 
' → logprob: -6.630264759063721

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13760563731193542
    2. ' if' → logprob: -2.637605667114258
    3. '
' → logprob: -3.137605667114258
    4. 'if' → logprob: -5.762605667114258
    5. '<|end|>' → logprob: -6.012605667114258
    6. '            
' → logprob: -6.262605667114258
    7. '       ' → logprob: -6.387605667114258
    8. '	if' → logprob: -7.512605667114258
    9. '               ' → logprob: -7.512605667114258
    10. '		' → logprob: -7.887605667114258

Token 568: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2165220081806183
    2. 'memo' → logprob: -1.966521978378296
    3. '           ' → logprob: -3.216521978378296
    4. ' if' → logprob: -4.341522216796875
    5. ' memo' → logprob: -7.716522216796875
    6. 'cost' → logprob: -7.966522216796875
    7. '               ' → logprob: -8.091522216796875
    8. 'm' → logprob: -8.091522216796875
    9. 'new' → logprob: -9.466522216796875
    10. 'mem' → logprob: -10.216522216796875

Token 569: ' Take' (ID: 14166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25317153334617615
    2. 'memo' → logprob: -1.5031715631484985
    3. '           ' → logprob: -6.753171443939209
    4. ' if' → logprob: -10.378171920776367
    5. 'm' → logprob: -11.628171920776367
    6. ' memo' → logprob: -11.753171920776367
    7. '               ' → logprob: -12.003171920776367
    8. 'mem' → logprob: -12.128171920776367
    9. '
' → logprob: -12.753171920776367
    10. 'cost' → logprob: -13.628171920776367

Token 570: ' the' (ID: 290)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023258524015545845
    2. ' min' → logprob: -3.7732584476470947
    3. '   ' → logprob: -12.273258209228516
    4. '1' → logprob: -13.398258209228516
    5. '```' → logprob: -13.523258209228516
    6. '
' → logprob: -13.773258209228516
    7. '	min' → logprob: -13.773258209228516
    8. '[min' → logprob: -14.023258209228516
    9. 'max' → logprob: -14.398258209228516
    10. '=min' → logprob: -14.523258209228516

Token 571: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.012285939417779446
    2. ' min' → logprob: -4.5122857093811035
    3. 'max' → logprob: -7.3872857093811035
    4. '=min' → logprob: -8.387286186218262
    5. 'if' → logprob: -9.137286186218262
    6. 'minimum' → logprob: -9.512286186218262
    7. '[min' → logprob: -9.512286186218262
    8. '1' → logprob: -9.887286186218262
    9. '=' → logprob: -10.387286186218262
    10. ']' → logprob: -11.887286186218262

Token 572: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2601429522037506
    2. ' of' → logprob: -2.3851430416107178
    3. ' cost' → logprob: -2.3851430416107178
    4. 'of' → logprob: -4.510142803192139
    5. 'memo' → logprob: -4.760142803192139
    6. '_cost' → logprob: -5.260142803192139
    7. 'if' → logprob: -5.885142803192139
    8. '[' → logprob: -5.885142803192139
    9. ' if' → logprob: -6.260142803192139
    10. ' =' → logprob: -6.510142803192139

Token 573: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8315228819847107
    2. ' if' → logprob: -1.3315229415893555
    3. 'if' → logprob: -1.9565229415893555
    4. ' =' → logprob: -2.4565229415893555
    5. '=' → logprob: -3.9565229415893555
    6. 'memo' → logprob: -3.9565229415893555
    7. ' of' → logprob: -4.2065229415893555
    8. 'n' → logprob: -5.5815229415893555
    9. ' between' → logprob: -5.8315229415893555
    10. ' memo' → logprob: -5.9565229415893555

Token 574: ' previous' (ID: 5880)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.8365782499313354
    2. 'if' → logprob: -1.0865782499313354
    3. '           ' → logprob: -2.336578369140625
    4. ' if' → logprob: -2.711578369140625
    5. ' memo' → logprob: -3.086578369140625
    6. '               ' → logprob: -4.711578369140625
    7. 'min' → logprob: -5.336578369140625
    8. '   ' → logprob: -6.211578369140625
    9. '                   ' → logprob: -6.586578369140625
    10. '10' → logprob: -7.336578369140625

Token 575: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.6911126375198364
    2. '[n' → logprob: -1.9411126375198364
    3. ']' → logprob: -2.066112518310547
    4. 'memo' → logprob: -2.441112518310547
    5. 'of' → logprob: -2.941112518310547
    6. '=' → logprob: -3.066112518310547
    7. ' of' → logprob: -3.066112518310547
    8. ',' → logprob: -3.191112518310547
    9. '[' → logprob: -3.191112518310547
    10. ')' → logprob: -3.441112518310547

Token 576: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6180987358093262
    2. '[n' → logprob: -1.8680987358093262
    3. '           ' → logprob: -2.243098735809326
    4. '=' → logprob: -2.368098735809326
    5. 'if' → logprob: -2.493098735809326
    6. 'or' → logprob: -2.493098735809326
    7. 'memo' → logprob: -3.118098735809326
    8. ' or' → logprob: -3.118098735809326
    9. ' =' → logprob: -3.243098735809326
    10. 'n' → logprob: -3.868098735809326

Token 577: ' create' (ID: 2501)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.0561211034655571
    2. 'memo' → logprob: -3.5561211109161377
    3. ' cover' → logprob: -4.431120872497559
    4. 'n' → logprob: -4.806120872497559
    5. '
' → logprob: -6.306120872497559
    6. '   ' → logprob: -7.056120872497559
    7. 'complete' → logprob: -7.806120872497559
    8. 'reach' → logprob: -7.806120872497559
    9. 'get' → logprob: -7.931120872497559
    10. ' memo' → logprob: -8.181120872497559

Token 578: ' n' (ID: 297)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.1875835359096527
    2. 'n' → logprob: -2.1875834465026855
    3. ' memo' → logprob: -3.1875834465026855
    4. ' n' → logprob: -4.4375834465026855
    5. '`' → logprob: -6.5625834465026855
    6. '[n' → logprob: -6.8125834465026855
    7. 'the' → logprob: -7.5625834465026855
    8. '           ' → logprob: -7.5625834465026855
    9. 'm' → logprob: -7.9375834465026855
    10. '   ' → logprob: -8.062583923339844

Token 579: ' +' (ID: 659)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.7440893054008484
    2. 'n' → logprob: -1.2440893650054932
    3. '1' → logprob: -1.8690893650054932
    4. ']' → logprob: -4.619089126586914
    5. '[' → logprob: -4.744089126586914
    6. '+' → logprob: -4.869089126586914
    7. ' n' → logprob: -4.994089126586914
    8. '_n' → logprob: -4.994089126586914
    9. ' +' → logprob: -5.119089126586914
    10. 'memo' → logprob: -5.244089126586914

Token 580: ' cost' (ID: 3097)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026302969083189964
    2. ' a' → logprob: -3.6513030529022217
    3. '```' → logprob: -14.6513032913208
    4. '           ' → logprob: -15.0263032913208
    5. '1' → logprob: -15.2763032913208
    6. '	a' → logprob: -15.4013032913208
    7. '   ' → logprob: -15.6513032913208
    8. 'n' → logprob: -16.026302337646484
    9. ' ' → logprob: -16.151302337646484
    10. '10' → logprob: -16.276302337646484

Token 581: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2991759479045868
    2. 'of' → logprob: -2.299175977706909
    3. '           ' → logprob: -2.799175977706909
    4. ' if' → logprob: -3.924175977706909
    5. 'a' → logprob: -4.42417573928833
    6. ' for' → logprob: -4.67417573928833
    7. ' a' → logprob: -4.67417573928833
    8. '+' → logprob: -4.79917573928833
    9. ' +' → logprob: -4.92417573928833
    10. 'if' → logprob: -5.17417573928833

Token 582: ' this' (ID: 495)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17599840462207794
    2. ' a' → logprob: -2.0509984493255615
    3. ' the' → logprob: -4.550998210906982
    4. 'the' → logprob: -4.675998210906982
    5. 'this' → logprob: -5.175998210906982
    6. ' this' → logprob: -5.300998210906982
    7. 'set' → logprob: -7.175998210906982
    8. ' set' → logprob: -7.425998210906982
    9. 'flag' → logprob: -7.800998210906982
    10. ' flag' → logprob: -8.67599868774414

Token 583: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7922168374061584
    2. 'a' → logprob: -1.6672167778015137
    3. ' set' → logprob: -2.6672167778015137
    4. ' a' → logprob: -2.6672167778015137
    5. '[' → logprob: -3.5422167778015137
    6. ' ' → logprob: -3.5422167778015137
    7. '_set' → logprob: -3.5422167778015137
    8. 'n' → logprob: -3.9172167778015137
    9. ' n' → logprob: -4.167216777801514
    10. '   ' → logprob: -4.792216777801514

Token 584: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.527399480342865
    2. '           ' → logprob: -1.4023995399475098
    3. 'if' → logprob: -2.1523995399475098
    4. '               ' → logprob: -4.27739953994751
    5. ',' → logprob: -5.02739953994751
    6. ')' → logprob: -5.77739953994751
    7. '
' → logprob: -5.77739953994751
    8. '                   ' → logprob: -5.90239953994751
    9. ' =' → logprob: -6.02739953994751
    10. '[' → logprob: -6.40239953994751

Token 585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0732746422290802
    2. ' if' → logprob: -3.198274612426758
    3. '<|end|>' → logprob: -4.823274612426758
    4. '
' → logprob: -4.948274612426758
    5. 'if' → logprob: -5.823274612426758
    6. ' =' → logprob: -6.198274612426758
    7. '               ' → logprob: -6.448274612426758
    8. '[' → logprob: -7.073274612426758
    9. '<|end|>' → logprob: -7.073274612426758
    10. ',' → logprob: -7.073274612426758

Token 586: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.6038104295730591
    2. 'if' → logprob: -0.8538104295730591
    3. '           ' → logprob: -4.1038103103637695
    4. ' if' → logprob: -4.9788103103637695
    5. ' memo' → logprob: -5.8538103103637695
    6. 'cost' → logprob: -7.7288103103637695
    7. 'm' → logprob: -8.35381031036377
    8. '               ' → logprob: -8.47881031036377
    9. 'mem' → logprob: -9.22881031036377
    10. 'new' → logprob: -9.97881031036377

Token 587: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00011808603449026123
    2. '[' → logprob: -9.375118255615234
    3. '[m' → logprob: -10.875118255615234
    4. 'n' → logprob: -12.500118255615234
    5. '[
' → logprob: -12.875118255615234
    6. '[min' → logprob: -13.125118255615234
    7. '```' → logprob: -13.250118255615234
    8. '[next' → logprob: -13.625118255615234
    9. ' [' → logprob: -13.625118255615234
    10. '\[' → logprob: -14.625118255615234

Token 588: '1' (ID: 16)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.48260799050331116
    2. ']' → logprob: -1.8576079607009888
    3. '1' → logprob: -2.3576080799102783
    4. '[' → logprob: -2.9826080799102783
    5. 'n' → logprob: -2.9826080799102783
    6. '+' → logprob: -3.9826080799102783
    7. ']+' → logprob: -5.732607841491699
    8. '][' → logprob: -6.107607841491699
    9. '+n' → logprob: -6.607607841491699
    10. ' n' → logprob: -7.107607841491699

Token 589: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4239377975463867
    2. '=' → logprob: -1.6739377975463867
    3. ']' → logprob: -1.9239377975463867
    4. ']=' → logprob: -4.673937797546387
    5. ')' → logprob: -6.673937797546387
    6. '           ' → logprob: -8.423937797546387
    7. ' ]' → logprob: -8.423937797546387
    8. '=min' → logprob: -8.548937797546387
    9. '   ' → logprob: -8.798937797546387
    10. ',' → logprob: -8.798937797546387

Token 590: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02345370687544346
    2. ' =' → logprob: -3.773453712463379
    3. '=min' → logprob: -8.523453712463379
    4. 'min' → logprob: -11.648453712463379
    5. '   ' → logprob: -15.773453712463379
    6. ']=' → logprob: -16.273452758789062
    7. ')=' → logprob: -16.523452758789062
    8. '.=' → logprob: -16.523452758789062
    9. '=
' → logprob: -16.648452758789062
    10. 'n' → logprob: -16.773452758789062

Token 591: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00026169343618676066
    2. ' min' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.375261306762695
    4. '	min' → logprob: -15.750261306762695
    5. '[min' → logprob: -19.625261306762695
    6. '(min' → logprob: -20.375261306762695
    7. ' ' → logprob: -20.500261306762695
    8. '  ' → logprob: -20.625261306762695
    9. 'mini' → logprob: -20.875261306762695
    10. '=min' → logprob: -21.000261306762695

Token 592: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00593117019161582
    2. '(' → logprob: -5.130931377410889
    3. '(
' → logprob: -13.38093090057373
    4. ' (' → logprob: -14.50593090057373
    5. 'memo' → logprob: -15.50593090057373
    6. 'm' → logprob: -16.380931854248047
    7. '(mem' → logprob: -17.005931854248047
    8. '[m' → logprob: -17.380931854248047
    9. '(

' → logprob: -17.505931854248047
    10. '((' → logprob: -17.630931854248047

Token 593: 'emo' (ID: 7196)
  Prédit: 'emo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emo' → logprob: -0.0007131471065804362
    2. 'em' → logprob: -7.250713348388672
    3. 'omo' → logprob: -13.750713348388672
    4. '[' → logprob: -14.250713348388672
    5. 'om' → logprob: -15.000713348388672
    6. '(' → logprob: -15.000713348388672
    7. '(m' → logprob: -15.625713348388672
    8. 'memo' → logprob: -15.875713348388672
    9. 'o' → logprob: -16.250713348388672
    10. '{' → logprob: -16.375713348388672

Token 594: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0010854477295652032
    2. '[m' → logprob: -7.00108528137207
    3. '[' → logprob: -8.75108528137207
    4. '[
' → logprob: -11.50108528137207
    5. '[mem' → logprob: -13.25108528137207
    6. 'n' → logprob: -13.75108528137207
    7. '[token' → logprob: -14.37608528137207
    8. '```' → logprob: -14.62608528137207
    9. ')' → logprob: -14.87608528137207
    10. ' [' → logprob: -15.25108528137207

Token 595: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006976552773267031
    2. '[n' → logprob: -5.00697660446167
    3. ']' → logprob: -8.756976127624512
    4. '][' → logprob: -10.131976127624512
    5. 'n' → logprob: -11.381976127624512
    6. '[' → logprob: -11.506976127624512
    7. '[m' → logprob: -11.881976127624512
    8. 'ext' → logprob: -12.381976127624512
    9. '(n' → logprob: -12.756976127624512
    10. '+' → logprob: -12.756976127624512

Token 596: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007619291078299284
    2. ',m' → logprob: -5.007619380950928
    3. ' ,' → logprob: -7.882619380950928
    4. '],' → logprob: -7.882619380950928
    5. ',n' → logprob: -9.75761890411377
    6. ',
' → logprob: -10.13261890411377
    7. 'memo' → logprob: -10.63261890411377
    8. '[m' → logprob: -11.13261890411377
    9. 'm' → logprob: -12.00761890411377
    10. '   ' → logprob: -13.50761890411377

Token 597: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.016224635764956474
    2. ' memo' → logprob: -4.1412248611450195
    3. 'm' → logprob: -9.76622486114502
    4. '               ' → logprob: -9.89122486114502
    5. '           ' → logprob: -10.51622486114502
    6. '                   ' → logprob: -11.14122486114502
    7. '   ' → logprob: -11.64122486114502
    8. '             ' → logprob: -12.26622486114502
    9. 'mem' → logprob: -12.26622486114502
    10. ' ' → logprob: -12.64122486114502

Token 598: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.037835580878891e-05
    2. 'n' → logprob: -10.62505054473877
    3. '[' → logprob: -11.12505054473877
    4. '[
' → logprob: -11.87505054473877
    5. ' [' → logprob: -12.75005054473877
    6. '```' → logprob: -15.25005054473877
    7. '
' → logprob: -15.37505054473877
    8. '[m' → logprob: -15.75005054473877
    9. '   ' → logprob: -16.125049591064453
    10. ' n' → logprob: -16.250049591064453

Token 599: ']' (ID: 60)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06261654943227768
    2. '[n' → logprob: -2.8126165866851807
    3. ']' → logprob: -7.812616348266602
    4. '[' → logprob: -8.812616348266602
    5. ' n' → logprob: -10.062616348266602
    6. '[
' → logprob: -10.937616348266602
    7. '(n' → logprob: -12.187616348266602
    8. '_n' → logprob: -12.187616348266602
    9. '```' → logprob: -12.687616348266602
    10. ' [' → logprob: -12.937616348266602

Token 600: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2747294008731842
    2. '+' → logprob: -1.7747293710708618
    3. '+a' → logprob: -2.6497294902801514
    4. 'a' → logprob: -12.14972972869873
    5. '[a' → logprob: -12.64972972869873
    6. '+n' → logprob: -13.02472972869873
    7. ' a' → logprob: -13.14972972869873
    8. '   ' → logprob: -13.52472972869873
    9. '           ' → logprob: -13.77472972869873
    10. '+
' → logprob: -13.77472972869873

Token 601: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004306692280806601
    2. ' a' → logprob: -7.750430583953857
    3. '	a' → logprob: -18.750431060791016
    4. '   ' → logprob: -19.625431060791016
    5. ' ' → logprob: -20.625431060791016
    6. '_a' → logprob: -21.625431060791016
    7. '           ' → logprob: -22.125431060791016
    8. '(a' → logprob: -22.125431060791016
    9. 'а' → logprob: -22.250431060791016
    10. '```' → logprob: -22.250431060791016

Token 602: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9650025428272784e-05
    2. ')
' → logprob: -10.375040054321289
    3. ' )' → logprob: -12.375040054321289
    4. '           ' → logprob: -13.125040054321289
    5. '<|end|>' → logprob: -13.875040054321289
    6. '       ' → logprob: -14.750040054321289
    7. '   ' → logprob: -15.375040054321289
    8. '))' → logprob: -16.25004005432129
    9. '               ' → logprob: -16.37504005432129
    10. ')return' → logprob: -17.00004005432129

Token 603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23431602120399475
    2. 'return' → logprob: -1.9843159914016724
    3. ' return' → logprob: -3.109316110610962
    4. '
' → logprob: -4.984315872192383
    5. '    
' → logprob: -5.359315872192383
    6. 'if' → logprob: -5.609315872192383
    7. '	return' → logprob: -5.734315872192383
    8. ' if' → logprob: -6.359315872192383
    9. '```' → logprob: -6.609315872192383
    10. '<|end|>' → logprob: -6.609315872192383

Token 604: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23555774986743927
    2. '   ' → logprob: -2.235557794570923
    3. 'print' → logprob: -2.610557794570923
    4. 'if' → logprob: -3.860557794570923
    5. 'result' → logprob: -5.610557556152344
    6. 'res' → logprob: -6.110557556152344
    7. ' return' → logprob: -7.110557556152344
    8. '```' → logprob: -7.235557556152344
    9. 'answer' → logprob: -7.735557556152344
    10. 'ans' → logprob: -8.360557556152344

Token 605: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12032002210617065
    2. 'ret' → logprob: -2.9953200817108154
    3. 'res' → logprob: -4.120319843292236
    4. 'ans' → logprob: -4.120319843292236
    5. 'result' → logprob: -4.370319843292236
    6. 'if' → logprob: -4.620319843292236
    7. 'answer' → logprob: -5.370319843292236
    8. 'print' → logprob: -6.120319843292236
    9. 'r' → logprob: -7.745319843292236
    10. '#' → logprob: -8.120320320129395

Token 606: ' it's' (ID: 4275)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.02631063386797905
    2. ' memo' → logprob: -3.651310682296753
    3. 'mem' → logprob: -11.901310920715332
    4. '   ' → logprob: -13.151310920715332
    5. 'm' → logprob: -14.651310920715332
    6. 'mn' → logprob: -16.026309967041016
    7. '
' → logprob: -16.276309967041016
    8. ' memoir' → logprob: -16.276309967041016
    9. '.memo' → logprob: -16.276309967041016
    10. ' ' → logprob: -16.526309967041016

Token 607: ' impossible' (ID: 19786)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.25499391555786133
    2. ' memo' → logprob: -1.5049939155578613
    3. '   ' → logprob: -6.879993915557861
    4. '-' → logprob: -7.254993915557861
    5. '[m' → logprob: -7.504993915557861
    6. ' not' → logprob: -8.379993438720703
    7. 'm' → logprob: -8.754993438720703
    8. ' -' → logprob: -9.129993438720703
    9. 'not' → logprob: -9.879993438720703
    10. '```' → logprob: -10.379993438720703

Token 608: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.226312056183815
    2. 'to' → logprob: -1.6013120412826538
    3. '   ' → logprob: -7.601312160491943
    4. '==' → logprob: -8.101311683654785
    5. 'if' → logprob: -10.226311683654785
    6. ' if' → logprob: -10.976311683654785
    7. ' ==' → logprob: -11.351311683654785
    8. ',' → logprob: -11.976311683654785
    9. '[m' → logprob: -12.101311683654785
    10. '[' → logprob: -12.226311683654785

Token 609: ' cover' (ID: 4321)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.0891464427113533
    2. ' cover' → logprob: -2.464146375656128
    3. 'reach' → logprob: -9.589146614074707
    4. ' reach' → logprob: -10.839146614074707
    5. '_cover' → logprob: -10.964146614074707
    6. 'complete' → logprob: -10.964146614074707
    7. '
' → logprob: -11.214146614074707
    8. 'ach' → logprob: -11.339146614074707
    9. 'fully' → logprob: -11.839146614074707
    10. '1' → logprob: -12.089146614074707

Token 610: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.12313684821128845
    2. ' all' → logprob: -2.2481367588043213
    3. 'N' → logprob: -5.6231369972229
    4. 'L' → logprob: -6.3731369972229
    5. 'memo' → logprob: -6.4981369972229
    6. ' N' → logprob: -7.3731369972229
    7. 'len' → logprob: -7.3731369972229
    8. ' memo' → logprob: -7.4981369972229
    9. ' L' → logprob: -7.7481369972229
    10. 'range' → logprob: -8.248136520385742

Token 611: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.30445578694343567
    2. ' items' → logprob: -1.4294557571411133
    3. 'N' → logprob: -4.804455757141113
    4. ' (' → logprob: -4.929455757141113
    5. ' N' → logprob: -5.804455757141113
    6. '(' → logprob: -6.429455757141113
    7. '_items' → logprob: -6.429455757141113
    8. '(N' → logprob: -8.054455757141113
    9. '((' → logprob: -8.179455757141113
    10. 'L' → logprob: -8.554455757141113

Token 612: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9827262163162231
    2. ':' → logprob: -1.9827262163162231
    3. ' if' → logprob: -2.1077260971069336
    4. ',' → logprob: -2.6077260971069336
    5. ' or' → logprob: -2.6077260971069336
    6. ':
' → logprob: -2.8577260971069336
    7. '[m' → logprob: -3.2327260971069336
    8. '[' → logprob: -3.2327260971069336
    9. '[n' → logprob: -3.4827260971069336
    10. ' else' → logprob: -4.107726097106934

Token 613: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3550659716129303
    2. 'return' → logprob: -1.355065941810608
    3. ' print' → logprob: -4.230065822601318
    4. 'print' → logprob: -4.480065822601318
    5. '   ' → logprob: -4.855065822601318
    6. ' if' → logprob: -5.855065822601318
    7. 'if' → logprob: -6.480065822601318
    8. 'res' → logprob: -7.105065822601318
    9. ' res' → logprob: -7.105065822601318
    10. 'result' → logprob: -7.980065822601318

Token 614: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020190885290503502
    2. ' -' → logprob: -4.020190715789795
    3. 'memo' → logprob: -6.520190715789795
    4. '-m' → logprob: -7.770190715789795
    5. ' memo' → logprob: -9.145191192626953
    6. '   ' → logprob: -10.645191192626953
    7. ' ' → logprob: -12.770191192626953
    8. '`' → logprob: -13.270191192626953
    9. '
' → logprob: -13.270191192626953
    10. '```' → logprob: -13.395191192626953

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '-' → logprob: -12.500008583068848
    3. 'memo' → logprob: -13.250008583068848
    4. '10' → logprob: -14.250008583068848
    5. ' ' → logprob: -14.500008583068848
    6. '```' → logprob: -14.625008583068848
    7. '2' → logprob: -15.250008583068848
    8. '   ' → logprob: -15.500008583068848
    9. '`' → logprob: -15.750008583068848
    10. '11' → logprob: -16.00000762939453

Token 616: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06785997003316879
    2. 'return' → logprob: -2.8178598880767822
    3. ' return' → logprob: -5.442860126495361
    4. '
' → logprob: -6.942860126495361
    5. 'if' → logprob: -8.442859649658203
    6. ' if' → logprob: -8.942859649658203
    7. '	return' → logprob: -9.192859649658203
    8. '    
' → logprob: -9.317859649658203
    9. '```' → logprob: -11.442859649658203
    10. ':return' → logprob: -11.817859649658203

Token 617: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03928001597523689
    2. 'return' → logprob: -3.7892799377441406
    3. ' return' → logprob: -5.289279937744141
    4. 'if' → logprob: -5.414279937744141
    5. ' if' → logprob: -5.664279937744141
    6. '
' → logprob: -5.914279937744141
    7. '    
' → logprob: -8.53927993774414
    8. '```' → logprob: -11.53927993774414
    9. '	return' → logprob: -11.78927993774414
    10. '[' → logprob: -12.53927993774414

Token 618: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007283003535121679
    2. ' return' → logprob: -5.5072832107543945
    3. '   ' → logprob: -6.3822832107543945
    4. 'if' (adapté à ' if') → logprob: -6.7572832107543945
    5. 'result' → logprob: -9.132283210754395
    6. '```' → logprob: -9.257283210754395
    7. 'ret' → logprob: -9.382283210754395
    8. 'res' → logprob: -10.632283210754395
    9. ' if' → logprob: -11.382283210754395
    10. '`' → logprob: -11.882283210754395

Token 619: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.38689324259757996
    2. 'memo' → logprob: -1.1368932723999023
    3. 'm' → logprob: -12.011893272399902
    4. 'mem' → logprob: -12.136893272399902
    5. '   ' → logprob: -12.261893272399902
    6. ' mem' → logprob: -12.386893272399902
    7. ' ' → logprob: -14.886893272399902
    8. ' memoir' → logprob: -15.136893272399902
    9. ' meme' → logprob: -15.261893272399902
    10. '[m' → logprob: -16.136892318725586

Token 620: '[L' (ID: 112100)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.2618720531463623
    2. '[L' → logprob: -1.5118720531463623
    3. '[(' → logprob: -4.761872291564941
    4. '[' → logprob: -6.636872291564941
    5. '[len' → logprob: -10.761872291564941
    6. '[N' → logprob: -12.386872291564941
    7. 'L' → logprob: -13.636872291564941
    8. '==' → logprob: -14.011872291564941
    9. '```' → logprob: -14.136872291564941
    10. '(L' → logprob: -14.636872291564941

Token 621: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004891923628747463
    2. '1' → logprob: -6.004891872406006
    3. ' -' → logprob: -6.504891872406006
    4. '[-' → logprob: -7.254891872406006
    5. '[' → logprob: -9.129892349243164
    6. ']' → logprob: -9.504892349243164
    7. ']==' → logprob: -11.754892349243164
    8. '==' → logprob: -11.754892349243164
    9. ']-' → logprob: -12.754892349243164
    10. '   ' → logprob: -13.129892349243164

Token 622: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.250003814697266
    3. '2' → logprob: -13.500003814697266
    4. '   ' → logprob: -15.125003814697266
    5. '
' → logprob: -15.875003814697266
    6. '```' → logprob: -16.437503814697266
    7. ']' → logprob: -16.687503814697266
    8. '>' → logprob: -16.812503814697266
    9. '...' → logprob: -17.437503814697266
    10. '#' → logprob: -17.500003814697266

Token 623: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -13.750000953674316
    3. ' ' → logprob: -16.687501907348633
    4. '```' → logprob: -16.937501907348633
    5. '
' → logprob: -17.187501907348633
    6. '１' → logprob: -18.187501907348633
    7. ']' → logprob: -18.250001907348633
    8. '-' → logprob: -18.312501907348633
    9. '۱' → logprob: -18.437501907348633
    10. '   ' → logprob: -18.750001907348633

Token 624: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2755015194416046
    2. ']==' → logprob: -2.0255014896392822
    3. ']' → logprob: -2.6505014896392822
    4. ' ==' → logprob: -3.2755014896392822
    5. '[' → logprob: -8.650501251220703
    6. '==-' → logprob: -9.275501251220703
    7. ')==' → logprob: -9.525501251220703
    8. ')' → logprob: -10.025501251220703
    9. '']==' → logprob: -11.150501251220703
    10. '==
' → logprob: -11.400501251220703

Token 625: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023288333788514137
    2. ' ==' → logprob: -3.7732882499694824
    3. '[' → logprob: -10.52328872680664
    4. '>=' → logprob: -12.39828872680664
    5. '=' → logprob: -13.02328872680664
    6. '==
' → logprob: -13.02328872680664
    7. '```' → logprob: -13.77328872680664
    8. '===' → logprob: -13.89828872680664
    9. '==-' → logprob: -13.89828872680664
    10. ']==' → logprob: -14.02328872680664

Token 626: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0022467232774943113
    2. '100' → logprob: -6.127246856689453
    3. ' ' → logprob: -10.252246856689453
    4. '(' → logprob: -10.877246856689453
    5. '999' → logprob: -12.502246856689453
    6. 'int' → logprob: -13.627246856689453
    7. '1' → logprob: -14.252246856689453
    8. '   ' → logprob: -14.377246856689453
    9. '0' → logprob: -15.377246856689453
    10. 'float' → logprob: -15.627246856689453

Token 627: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009252764866687357
    2. '100' → logprob: -7.000925064086914
    3. '(' → logprob: -11.625925064086914
    4. 'int' → logprob: -12.625925064086914
    5. ' ' → logprob: -14.375925064086914
    6. '999' → logprob: -15.000925064086914
    7. '1' → logprob: -15.250925064086914
    8. '0' → logprob: -15.750925064086914
    9. 'float' → logprob: -16.750925064086914
    10. 'pow' → logprob: -16.875925064086914

Token 628: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0016848169034346938
    2. ' **' → logprob: -6.501684665679932
    3. '9' → logprob: -8.62668514251709
    4. '*' → logprob: -13.00168514251709
    5. '^' → logprob: -14.50168514251709
    6. '```' → logprob: -14.87668514251709
    7. '\xe2\x81' → logprob: -17.126684188842773
    8. '***' → logprob: -17.376684188842773
    9. '7' → logprob: -17.751684188842773
    10. ' ' → logprob: -17.751684188842773

Token 629: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.375000953674316
    3. '10' → logprob: -16.0
    4. '12' → logprob: -16.125
    5. '15' → logprob: -16.75
    6. '09' → logprob: -17.625
    7. '8' → logprob: -17.6875
    8. '``' → logprob: -18.25
    9. '18' → logprob: -18.3125
    10. '6' → logprob: -18.75

Token 630: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '```' → logprob: -18.75
    3. '``' → logprob: -20.125
    4. '
' → logprob: -21.125
    5. '6' → logprob: -21.5
    6. '09' → logprob: -21.5
    7. '{' → logprob: -21.875
    8. '９' → logprob: -22.3125
    9. '10' → logprob: -22.375
    10. '8' → logprob: -22.375

Token 631: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.179921492934227
    2. ':
' → logprob: -1.9299215078353882
    3. ':return' → logprob: -4.054921627044678
    4. '   ' → logprob: -6.304921627044678
    5. 'else' → logprob: -9.17992115020752
    6. '       ' → logprob: -9.17992115020752
    7. '-' → logprob: -10.17992115020752
    8. ')' → logprob: -10.92992115020752
    9. ' else' → logprob: -11.17992115020752
    10. '==' → logprob: -11.17992115020752

Token 632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004479254595935345
    2. 'return' → logprob: -5.50447940826416
    3. '	return' → logprob: -8.87947940826416
    4. '   ' → logprob: -8.87947940826416
    5. ' return' → logprob: -9.87947940826416
    6. '	' → logprob: -10.00447940826416
    7. '	   ' → logprob: -11.25447940826416
    8. 'print' → logprob: -12.25447940826416
    9. ':return' → logprob: -12.87947940826416
    10. '{return' → logprob: -13.12947940826416

Token 633: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02429923601448536
    2. '       ' → logprob: -3.774299144744873
    3. 'print' → logprob: -7.649299144744873
    4. '   ' → logprob: -7.774299144744873
    5. ' return' → logprob: -9.149299621582031
    6. '	return' → logprob: -10.024299621582031
    7. '{return' → logprob: -12.899299621582031
    8. '	' → logprob: -14.149299621582031
    9. '```' → logprob: -14.399299621582031
    10. '
' → logprob: -14.774299621582031

Token 634: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.2729995988775045e-06
    2. ' -' → logprob: -12.000006675720215
    3. '-print' → logprob: -18.2500057220459
    4. '   ' → logprob: -19.8750057220459
    5. '-int' → logprob: -20.3750057220459
    6. '−' → logprob: -21.5000057220459
    7. '\-' → logprob: -21.6250057220459
    8. '(-' → logprob: -22.2500057220459
    9. '-str' → logprob: -22.3750057220459
    10. '	' → logprob: -22.3750057220459

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '-' → logprob: -19.5
    4. '```' → logprob: -20.0
    5. '１' → logprob: -22.0
    6. '2' → logprob: -22.125
    7. '0' → logprob: -22.125
    8. '{' → logprob: -22.1875
    9. '`' → logprob: -22.4375
    10. '3' → logprob: -22.8125

Token 636: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017211705446243286
    2. 'return' → logprob: -4.1422119140625
    3. 'else' → logprob: -6.7672119140625
    4. '
' → logprob: -11.3922119140625
    5. ' return' → logprob: -11.8922119140625
    6. '	return' → logprob: -13.1422119140625
    7. '    
' → logprob: -13.6422119140625
    8. 'm' → logprob: -14.0172119140625
    9. ':return' → logprob: -14.1422119140625
    10. ' else' → logprob: -14.5172119140625

Token 637: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002500152215361595
    2. 'return' → logprob: -6.002500057220459
    3. 'else' → logprob: -11.127500534057617
    4. '
' → logprob: -12.002500534057617
    5. '	return' → logprob: -13.252500534057617
    6. ' return' → logprob: -14.252500534057617
    7. '    
' → logprob: -14.377500534057617
    8. '```' → logprob: -14.752500534057617
    9. 'print' → logprob: -15.752500534057617
    10. '       ' → logprob: -16.877500534057617

Token 638: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2206036001443863
    2. 'return' → logprob: -1.720603585243225
    3. 'else' (adapté à ' else') → logprob: -3.9706037044525146
    4. '    
' → logprob: -9.595603942871094
    5. '
' → logprob: -10.095603942871094
    6. '	return' → logprob: -11.095603942871094
    7. ' return' → logprob: -11.470603942871094
    8. ' else' → logprob: -12.470603942871094
    9. '       ' → logprob: -13.095603942871094
    10. '```' → logprob: -14.095603942871094

Token 639: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02391066774725914
    2. 'return' → logprob: -4.3989105224609375
    3. ' return' → logprob: -4.5239105224609375
    4. '   ' → logprob: -7.6489105224609375
    5. '	return' → logprob: -12.273910522460938
    6. ':return' → logprob: -12.523910522460938
    7. '{return' → logprob: -12.898910522460938
    8. '	' → logprob: -14.273910522460938
    9. '     ' → logprob: -15.148910522460938
    10. '           ' → logprob: -15.523910522460938

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21119815111160278
    2. 'return' → logprob: -1.711198091506958
    3. '   ' → logprob: -5.211198329925537
    4. ' return' → logprob: -5.461198329925537
    5. '	return' → logprob: -10.461197853088379
    6. '	' → logprob: -12.961197853088379
    7. '	   ' → logprob: -14.461197853088379
    8. '{return' → logprob: -14.586197853088379
    9. '     ' → logprob: -14.836197853088379
    10. '           ' → logprob: -14.961197853088379

Token 641: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.975612187583465e-05
    2. '   ' → logprob: -11.000029563903809
    3. ' return' → logprob: -11.500029563903809
    4. '       ' → logprob: -13.000029563903809
    5. 'memo' → logprob: -14.375029563903809
    6. 'print' → logprob: -18.125030517578125
    7. '	return' → logprob: -18.500030517578125
    8. '{return' → logprob: -20.500030517578125
    9. ':return' → logprob: -20.750030517578125
    10. '           ' → logprob: -20.875030517578125

Token 642: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -2.2246291337069124e-05
    2. ' memo' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.625021934509277
    4. 'mem' → logprob: -15.125021934509277
    5. 'm' → logprob: -18.625022888183594
    6. 'memory' → logprob: -19.125022888183594
    7. 'mime' → logprob: -19.750022888183594
    8. '.memo' → logprob: -19.875022888183594
    9. 'memor' → logprob: -20.000022888183594
    10. 'mongo' → logprob: -20.625022888183594

Token 643: '[L' (ID: 112100)
  Prédit: '[L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -3.2617008400848135e-05
    2. '[' → logprob: -11.000032424926758
    3. '[m' → logprob: -11.375032424926758
    4. '[len' → logprob: -13.125032424926758
    5. '[-' → logprob: -13.875032424926758
    6. '[n' → logprob: -14.125032424926758
    7. '[N' → logprob: -15.250032424926758
    8. '[l' → logprob: -16.125032424926758
    9. '[M' → logprob: -16.875032424926758
    10. '[mem' → logprob: -17.125032424926758

Token 644: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010500772623345256
    2. '[' → logprob: -7.626049995422363
    3. '1' → logprob: -8.126049995422363
    4. ' -' → logprob: -8.751049995422363
    5. '[-' → logprob: -9.251049995422363
    6. ']' → logprob: -12.251049995422363
    7. '   ' → logprob: -12.876049995422363
    8. ']-' → logprob: -13.126049995422363
    9. ' ' → logprob: -14.126049995422363
    10. ')' → logprob: -14.751049995422363

Token 645: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.375005722045898
    3. '   ' → logprob: -15.250005722045898
    4. '```' → logprob: -15.375005722045898
    5. '0' → logprob: -15.500005722045898
    6. '2' → logprob: -15.687505722045898
    7. '
' → logprob: -15.812505722045898
    8. '11' → logprob: -17.6875057220459
    9. '１' → logprob: -17.6875057220459
    10. '       ' → logprob: -17.8125057220459

Token 646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -13.125003814697266
    3. '0' → logprob: -14.625003814697266
    4. '2' → logprob: -14.750003814697266
    5. '   ' → logprob: -15.062503814697266
    6. '11' → logprob: -15.500003814697266
    7. '```' → logprob: -17.125003814697266
    8. '111' → logprob: -17.687503814697266
    9. '۱' → logprob: -17.812503814697266
    10. '[' → logprob: -17.875003814697266

Token 647: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049175530672073364
    2. '<|end|>' → logprob: -3.174175500869751
    3. '}' → logprob: -5.67417573928833
    4. ']' → logprob: -6.04917573928833
    5. '   ' → logprob: -9.424175262451172
    6. '<|end|>' → logprob: -9.799175262451172
    7. '+' → logprob: -10.174175262451172
    8. '
' → logprob: -10.299175262451172
    9. '()' → logprob: -10.424175262451172
    10. '```' → logprob: -10.549175262451172

Token 648: '################' (ID: 5152)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002657701028510928
    2. 'print' → logprob: -6.002657890319824
    3. '
' → logprob: -9.002657890319824
    4. '<|end|>' → logprob: -10.377657890319824
    5. '\n' → logprob: -11.752657890319824
    6. ' if' → logprob: -11.877657890319824
    7. '#' → logprob: -12.252657890319824
    8. '#!/' → logprob: -12.752657890319824
    9. '```' → logprob: -13.002657890319824
    10. '#if' → logprob: -14.002657890319824

Token 649: '####' (ID: 1509)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.040238454937934875
    2. 'def' → logprob: -3.540238380432129
    3. '
' → logprob: -4.665238380432129
    4. '

' → logprob: -7.665238380432129
    5. ' if' → logprob: -9.040238380432129
    6. '()' → logprob: -9.540238380432129
    7. '<|end|>' → logprob: -9.790238380432129
    8. '#' → logprob: -10.040238380432129
    9. '```' → logprob: -10.290238380432129
    10. '  
' → logprob: -10.665238380432129

Token 650: ' Main' (ID: 7956)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011808603449026123
    2. ' if' → logprob: -9.750118255615234
    3. 'def' → logprob: -10.125118255615234
    4. 'print' → logprob: -12.000118255615234
    5. '#' → logprob: -12.750118255615234
    6. '```' → logprob: -12.750118255615234
    7. '
' → logprob: -12.875118255615234
    8. '\n' → logprob: -13.500118255615234
    9. '<|end|>' → logprob: -13.625118255615234
    10. '  
' → logprob: -14.375118255615234

Token 651: ' ################' (ID: 93769)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.749237060546875
    2. 'if' → logprob: -1.124237060546875
    3. '()' → logprob: -2.374237060546875
    4. '()

' → logprob: -2.874237060546875
    5. '

' → logprob: -3.624237060546875
    6. '
' → logprob: -4.249237060546875
    7. '()
' → logprob: -4.624237060546875
    8. '():' → logprob: -7.249237060546875
    9. '():
' → logprob: -7.499237060546875
    10. '():

' → logprob: -7.999237060546875

Token 652: '####' (ID: 1509)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06886451691389084
    2. 'if' → logprob: -2.818864583969116
    3. '
' → logprob: -5.068864345550537
    4. '

' → logprob: -8.443864822387695
    5. '()
' → logprob: -8.693864822387695
    6. '()

' → logprob: -8.943864822387695
    7. '()' → logprob: -10.693864822387695
    8. '\' → logprob: -11.068864822387695
    9. '```' → logprob: -11.568864822387695
    10. '#
' → logprob: -12.318864822387695

Token 653: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25198978185653687
    2. 'def' → logprob: -1.5019898414611816
    3. '
' → logprob: -9.751989364624023
    4. '    
' → logprob: -13.501989364624023
    5. '  
' → logprob: -14.251989364624023
    6. '

' → logprob: -15.626989364624023
    7. '\' → logprob: -15.876989364624023
    8. ' 
' → logprob: -16.876989364624023
    9. ' if' → logprob: -17.001989364624023
    10. 'for' → logprob: -17.251989364624023

Token 654: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.547789674485102e-05
    2. 'def' → logprob: -10.250035285949707
    3. ' if' → logprob: -17.125036239624023
    4. '```' → logprob: -17.375036239624023
    5. 'print' → logprob: -18.125036239624023
    6. 'for' → logprob: -20.625036239624023
    7. '``' → logprob: -21.375036239624023
    8. 'import' → logprob: -22.125036239624023
    9. '
' → logprob: -22.375036239624023
    10. '#if' → logprob: -24.500036239624023

Token 655: ' Run' (ID: 14581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038085438311100006
    2. 'print' → logprob: -3.288085460662842
    3. 'def' → logprob: -10.038084983825684
    4. ' if' → logprob: -16.1630859375
    5. 'import' → logprob: -16.4130859375
    6. 'result' → logprob: -16.6630859375
    7. 'for' → logprob: -19.0380859375
    8. '#!/' → logprob: -19.7880859375
    9. '
' → logprob: -19.9130859375
    10. 'sys' → logprob: -20.0380859375

Token 656: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00271726050414145
    2. 'proc' → logprob: -6.8777174949646
    3. 'print' → logprob: -7.1277174949646
    4. 'def' → logprob: -7.5027174949646
    5. ' if' → logprob: -8.752717018127441
    6. 'result' → logprob: -9.377717018127441
    7. '
' → logprob: -9.752717018127441
    8. '```' → logprob: -11.252717018127441
    9. '__' → logprob: -12.002717018127441
    10. '(proc' → logprob: -12.502717018127441

Token 657: ' process' (ID: 2273)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.058381613343954086
    2. 'proc' → logprob: -2.9333815574645996
    3. 'def' → logprob: -6.4333815574646
    4. '__' → logprob: -6.5583815574646
    5. ' if' → logprob: -8.558382034301758
    6. 'pro' → logprob: -9.558382034301758
    7. 'main' → logprob: -9.933382034301758
    8. 'process' → logprob: -10.058382034301758
    9. '```' → logprob: -10.558382034301758
    10. ' proc' → logprob: -10.808382034301758

Token 658: ' and' (ID: 326)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.314317911863327
    2. 'print' → logprob: -1.3143179416656494
    3. 'result' → logprob: -7.06431770324707
    4. 'def' → logprob: -8.68931770324707
    5. '
' → logprob: -10.81431770324707
    6. 'res' → logprob: -12.06431770324707
    7. ' if' → logprob: -12.43931770324707
    8. '```' → logprob: -15.56431770324707
    9. '#print' → logprob: -15.56431770324707
    10. ' print' → logprob: -15.68931770324707

Token 659: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.127333340875339e-06
    2. 'if' → logprob: -12.750003814697266
    3. ' print' → logprob: -13.625003814697266
    4. '
' → logprob: -17.375003814697266
    5. '#print' → logprob: -18.875003814697266
    6. 'import' → logprob: -19.250003814697266
    7. 'result' → logprob: -19.750003814697266
    8. '#' → logprob: -20.500003814697266
    9. 'exit' → logprob: -20.750003814697266
    10. 'sys' → logprob: -20.875003814697266

Token 660: ' result' (ID: 1534)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.010563496500253677
    2. '(proc' → logprob: -4.760563373565674
    3. ' proc' → logprob: -6.260563373565674
    4. 'print' → logprob: -10.385563850402832
    5. 'pro' → logprob: -12.510563850402832
    6. 'process' → logprob: -13.885563850402832
    7. '(pro' → logprob: -14.385563850402832
    8. 'result' → logprob: -15.010563850402832
    9. 'func' → logprob: -16.010562896728516
    10. '(' → logprob: -16.135562896728516

Token 661: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038203977048397064
    2. 'if' → logprob: -3.2882039546966553
    3. '
' → logprob: -8.788204193115234
    4. 'result' → logprob: -11.913204193115234
    5. '```' → logprob: -14.163204193115234
    6. '(print' → logprob: -14.788204193115234
    7. '    
' → logprob: -15.038204193115234
    8. ' print' → logprob: -15.038204193115234
    9. '()
' → logprob: -15.163204193115234
    10. '  
' → logprob: -15.288204193115234

Token 662: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.306760805164231e-05
    2. 'if' → logprob: -11.25001335144043
    3. ' print' → logprob: -17.62501335144043
    4. 'result' → logprob: -20.87501335144043
    5. '
' → logprob: -21.25001335144043
    6. '```' → logprob: -21.87501335144043
    7. 'println' → logprob: -22.25001335144043
    8. 'import' → logprob: -23.25001335144043
    9. '#print' → logprob: -23.37501335144043
    10. 'def' → logprob: -23.75001335144043

Token 663: ' proc' (ID: 14550)
  Prédit: '(proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(proc' → logprob: -0.0004331725067459047
    2. 'proc' → logprob: -7.750432968139648
    3. '(' → logprob: -13.000432968139648
    4. ' proc' → logprob: -15.375432968139648
    5. '_proc' → logprob: -18.50043296813965
    6. '(process' → logprob: -18.75043296813965
    7. '.proc' → logprob: -19.12543296813965
    8. 'Proc' → logprob: -19.37543296813965
    9. '(prob' → logprob: -19.75043296813965
    10. '(pro' → logprob: -19.75043296813965

Token 664: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.327856630785391e-05
    2. '()
' → logprob: -9.625082969665527
    3. '()\' → logprob: -11.625082969665527
    4. '(' → logprob: -12.000082969665527
    5. '()`' → logprob: -14.625082969665527
    6. '();' → logprob: -15.000082969665527
    7. ' ()' → logprob: -15.125082969665527
    8. '()<' → logprob: -15.500082969665527
    9. '().' → logprob: -15.875082969665527
    10. '()]' → logprob: -16.125083923339844


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 662
Tokens correctement prédits (1ère position, stricte): 167
Tokens correctement prédits (1ère position, avec adaptation): 180
Tokens correctement prédits (top 10): 425
Précision stricte (1ère position): 25.23%
Précision adaptée (1ère position): 27.19%
Précision (top 10): 64.20%
================================================================================
