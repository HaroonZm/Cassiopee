================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Data:
    pass

a, b, c = map(int, input().split())

def swap(lst, i, j):
    lst[i], lst[j] = lst[j], lst[i]

d = Data()
vals = [a, b, c]

# Style impératif
d.x = vals[0]
d.y = vals[1]
d.z = vals[2]

# Style fonctionnel
swap(vals, 0, 1)  # échange a et b

# Style objet
d.x, d.y, d.z = vals[1], vals[0], vals[2]

# Procédural
tmp = d.x
d.x = d.z
d.z = tmp

# Tuple unpacking
x, y, z = d.x, d.y, d.z

print(x, y, z)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Data' (ID: 4833)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3088185489177704
    2. '(' → logprob: -1.4338185787200928
    3. '```' → logprob: -4.308818340301514
    4. '.' → logprob: -4.808818340301514
    5. '():' → logprob: -6.683818340301514
    6. ':
' → logprob: -7.183818340301514
    7. '\' → logprob: -7.308818340301514
    8. '   ' → logprob: -7.308818340301514
    9. '{' → logprob: -7.308818340301514
    10. '()' → logprob: -7.808818340301514

Token 4: ' pass' (ID: 1853)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6816031336784363
    2. '   ' → logprob: -1.181603193283081
    3. 'def' → logprob: -2.431603193283081
    4. ':' → logprob: -3.306603193283081
    5. '```' → logprob: -3.806603193283081
    6. ' ' → logprob: -4.681602954864502
    7. 'pass' (adapté à ' pass') → logprob: -4.931602954864502
    8. '\' → logprob: -5.056602954864502
    9. '_' → logprob: -5.306602954864502
    10. ' def' → logprob: -5.681602954864502

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08725927770137787
    2. '(' → logprob: -3.587259292602539
    3. '()' → logprob: -4.337259292602539
    4. '<|end|>' → logprob: -4.837259292602539
    5. '
' → logprob: -4.962259292602539
    6. '(
' → logprob: -5.087259292602539
    7. '\n' → logprob: -5.212259292602539
    8. '```' → logprob: -5.462259292602539
    9. '\' → logprob: -5.712259292602539
    10. ':' → logprob: -5.962259292602539

Token 6: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.056212168186903
    2. '<|end|>' → logprob: -4.056211948394775
    3. '\n' → logprob: -4.431211948394775
    4. '```' → logprob: -4.681211948394775
    5. '
' → logprob: -5.556211948394775
    6. '\' → logprob: -5.931211948394775
    7. 'class' → logprob: -5.931211948394775
    8. 'newline' → logprob: -6.806211948394775
    9. '<|end|>' → logprob: -6.931211948394775
    10. '(' → logprob: -7.306211948394775

Token 7: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01848340593278408
    2. ' ' → logprob: -4.893483638763428
    3. ' .' → logprob: -5.393483638763428
    4. '=' → logprob: -5.518483638763428
    5. ' =' → logprob: -6.643483638763428
    6. 'a' → logprob: -7.768483638763428
    7. '[' → logprob: -7.893483638763428
    8. '.b' → logprob: -10.51848316192627
    9. '(' → logprob: -10.64348316192627
    10. '.a' → logprob: -10.76848316192627

Token 8: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04401712492108345
    2. 'b' → logprob: -3.6690170764923096
    3. ' ' → logprob: -4.044017314910889
    4. '_' → logprob: -11.54401683807373
    5. '_b' → logprob: -12.04401683807373
    6. ' =' → logprob: -12.41901683807373
    7. ' _' → logprob: -12.79401683807373
    8. 'space' → logprob: -12.91901683807373
    9. ' space' → logprob: -13.54401683807373
    10. 'data' → logprob: -13.54401683807373

Token 9: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002326171612367034
    2. '=' → logprob: -6.502326011657715
    3. ',' → logprob: -7.127326011657715
    4. ' ,' → logprob: -11.627326011657715
    5. ' ' → logprob: -12.127326011657715
    6. ' =)' → logprob: -13.377326011657715
    7. ')' → logprob: -13.502326011657715
    8. ' =
' → logprob: -13.752326011657715
    9. '<|end|>' → logprob: -14.377326011657715
    10. '.' → logprob: -15.252326011657715

Token 10: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07061370462179184
    2. 'c' → logprob: -2.8206136226654053
    3. ' =' → logprob: -4.820613861083984
    4. ' ' → logprob: -7.945613861083984
    5. '=' → logprob: -8.820613861083984
    6. '_c' → logprob: -11.320613861083984
    7. ' data' → logprob: -12.445613861083984
    8. ',c' → logprob: -12.445613861083984
    9. ' Data' → logprob: -12.570613861083984
    10. ',' → logprob: -12.695613861083984

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0038357097655534744
    2. '=' → logprob: -5.628835678100586
    3. ',' → logprob: -8.378835678100586
    4. ' ,' → logprob: -13.503835678100586
    5. ')' → logprob: -13.753835678100586
    6. ' =
' → logprob: -14.128835678100586
    7. ' =)' → logprob: -14.128835678100586
    8. '.' → logprob: -14.753835678100586
    9. '<|end|>' → logprob: -14.878835678100586
    10. '  ' → logprob: -15.128835678100586

Token 12: ' map' (ID: 4014)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7494474053382874
    2. ' ' → logprob: -0.7494474053382874
    3. '0' → logprob: -3.4994473457336426
    4. ' Data' → logprob: -4.374447345733643
    5. 'Data' → logprob: -5.874447345733643
    6. ' None' → logprob: -5.999447345733643
    7. '[' → logprob: -6.499447345733643
    8. ' [' → logprob: -6.874447345733643
    9. 'None' → logprob: -7.124447345733643
    10. ' [],' → logprob: -7.249447345733643

Token 13: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17518578469753265
    2. '(lambda' → logprob: -2.1751856803894043
    3. '(int' → logprob: -3.1751856803894043
    4. '(str' → logprob: -6.050185680389404
    5. '(list' → logprob: -6.175185680389404
    6. '(len' → logprob: -9.050186157226562
    7. '(
' → logprob: -9.300186157226562
    8. '()' → logprob: -9.300186157226562
    9. '(input' → logprob: -9.550186157226562
    10. '(eval' → logprob: -9.675186157226562

Token 14: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3692214787006378
    2. '(' → logprob: -1.2442214488983154
    3. ')' → logprob: -4.1192216873168945
    4. '()' → logprob: -6.2442216873168945
    5. 'input' → logprob: -7.6192216873168945
    6. ' (' → logprob: -7.8692216873168945
    7. '())' → logprob: -8.369221687316895
    8. '('' → logprob: -8.869221687316895
    9. '(`' → logprob: -8.994221687316895
    10. '(data' → logprob: -8.994221687316895

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5789438486099243
    2. ' input' → logprob: -0.8289438486099243
    3. ')' → logprob: -6.078943729400635
    4. '(input' → logprob: -7.328943729400635
    5. ' )' → logprob: -10.203944206237793
    6. '))' → logprob: -12.328944206237793
    7. '=input' → logprob: -12.328944206237793
    8. ',input' → logprob: -13.203944206237793
    9. '),' → logprob: -13.953944206237793
    10. ' ' → logprob: -14.328944206237793

Token 16: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.33426305651664734
    2. '()' → logprob: -1.3342630863189697
    3. '(' → logprob: -4.709262847900391
    4. ')' → logprob: -5.709262847900391
    5. '(()' → logprob: -6.084262847900391
    6. '());' → logprob: -6.209262847900391
    7. '()))' → logprob: -6.959262847900391
    8. '().' → logprob: -7.459262847900391
    9. '(""))' → logprob: -7.459262847900391
    10. '('' → logprob: -8.08426284790039

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7146746763028204e-05
    2. 'strip' → logprob: -10.25003719329834
    3. 'rstrip' → logprob: -14.00003719329834
    4. ' split' → logprob: -14.12503719329834
    5. '(split' → logprob: -16.750036239624023
    6. 'spl' → logprob: -17.375036239624023
    7. 's' → logprob: -19.125036239624023
    8. 'read' → logprob: -19.250036239624023
    9. ')' → logprob: -19.625036239624023
    10. '```' → logprob: -20.500036239624023

Token 18: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.45604023337364197
    2. ')' → logprob: -1.2060402631759644
    3. '))' → logprob: -3.081040143966675
    4. '()))' → logprob: -4.081040382385254
    5. '(' → logprob: -6.206040382385254
    6. '()' → logprob: -6.706040382385254
    7. '('' → logprob: -7.331040382385254
    8. '(','' → logprob: -10.081040382385254
    9. ' ())' → logprob: -11.206040382385254
    10. ')))' → logprob: -11.331040382385254

Token 19: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4155803322792053
    2. 'd' → logprob: -1.4155802726745605
    3. '\n' → logprob: -4.1655802726745605
    4. 'data' → logprob: -4.5405802726745605
    5. 'x' → logprob: -4.5405802726745605
    6. '\' → logprob: -4.6655802726745605
    7. '
' → logprob: -4.6655802726745605
    8. 'for' → logprob: -4.9155802726745605
    9. 'a' → logprob: -5.0405802726745605
    10. ' if' → logprob: -5.6655802726745605

Token 20: ' swap' (ID: 25489)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.8626104593276978
    2. ' ' → logprob: -1.9876104593276978
    3. ' my' → logprob: -2.112610340118408
    4. ' process' → logprob: -2.237610340118408
    5. ' factorial' → logprob: -2.362610340118408
    6. ' foo' → logprob: -2.487610340118408
    7. ' func' → logprob: -2.987610340118408
    8. ' f' → logprob: -3.362610340118408
    9. ' data' → logprob: -3.362610340118408
    10. ' compute' → logprob: -3.487610340118408

Token 21: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20524168014526367
    2. '(a' → logprob: -1.7052416801452637
    3. '(_' → logprob: -6.455241680145264
    4. '_' → logprob: -6.955241680145264
    5. '_tokens' → logprob: -7.955241680145264
    6. '_items' → logprob: -8.330242156982422
    7. '_values' → logprob: -8.580242156982422
    8. '_data' → logprob: -9.705242156982422
    9. '(x' → logprob: -10.080242156982422
    10. '(s' → logprob: -10.080242156982422

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3729231059551239
    2. '[' → logprob: -1.8729231357574463
    3. '):' → logprob: -1.8729231357574463
    4. ')' → logprob: -5.997922897338867
    5. '[i' → logprob: -7.247922897338867
    6. '[]):' → logprob: -8.622922897338867
    7. '   ' → logprob: -8.997922897338867
    8. '[n' → logprob: -9.247922897338867
    9. ' ,' → logprob: -9.747922897338867
    10. '[index' → logprob: -10.622922897338867

Token 23: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0125474464148283
    2. ' i' → logprob: -4.387547492980957
    3. ')' → logprob: -10.887547492980957
    4. 'a' → logprob: -11.262547492980957
    5. ' ' → logprob: -13.262547492980957
    6. 'x' → logprob: -13.387547492980957
    7. '   ' → logprob: -14.012547492980957
    8. '	i' → logprob: -14.387547492980957
    9. 'idx' → logprob: -14.887547492980957
    10. '  ' → logprob: -15.387547492980957

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007682943833060563
    2. ' ,' → logprob: -7.750768184661865
    3. ')' → logprob: -8.375768661499023
    4. '+' → logprob: -9.750768661499023
    5. ',j' → logprob: -11.500768661499023
    6. '1' → logprob: -11.750768661499023
    7. ' ' → logprob: -12.000768661499023
    8. ',)' → logprob: -12.375768661499023
    9. '-' → logprob: -12.625768661499023
    10. '):' → logprob: -13.000768661499023

Token 25: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1603415161371231
    2. ' j' → logprob: -1.910341501235962
    3. 'i' → logprob: -9.160341262817383
    4. ' i' → logprob: -11.910341262817383
    5. '	j' → logprob: -13.285341262817383
    6. ' ' → logprob: -13.410341262817383
    7. '   ' → logprob: -13.785341262817383
    8. '    ' → logprob: -14.785341262817383
    9. '  ' → logprob: -14.910341262817383
    10. '<|end|>' → logprob: -15.285341262817383

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020573651418089867
    2. ')' → logprob: -3.895573616027832
    3. ' ):' → logprob: -11.020573616027832
    4. '):
' → logprob: -12.270573616027832
    5. ''):' → logprob: -12.270573616027832
    6. ':' → logprob: -12.770573616027832
    7. '   ' → logprob: -14.895573616027832
    8. ')：' → logprob: -15.145573616027832
    9. ' )' → logprob: -15.270573616027832
    10. '"):' → logprob: -15.270573616027832

Token 27: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8631488680839539
    2. '   ' → logprob: -1.3631489276885986
    3. ':' → logprob: -1.7381489276885986
    4. ')' → logprob: -2.2381489276885986
    5. '<|end|>' → logprob: -3.9881489276885986
    6. ' ' → logprob: -5.4881486892700195
    7. '):
' → logprob: -5.8631486892700195
    8. '  ' → logprob: -6.2381486892700195
    9. ' ):' → logprob: -6.7381486892700195
    10. '<|end|>' → logprob: -6.7381486892700195

Token 28: ' lst' (ID: 33384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9078878164291382
    2. ' lst' → logprob: -0.9078878164291382
    3. 'lst' (adapté à ' lst') → logprob: -1.6578878164291382
    4. '    ' → logprob: -7.157887935638428
    5. '    
' → logprob: -7.157887935638428
    6. '[' → logprob: -8.40788745880127
    7. ' ' → logprob: -8.53288745880127
    8. '_lst' → logprob: -8.65788745880127
    9. '  ' → logprob: -9.03288745880127
    10. ')' → logprob: -9.90788745880127

Token 29: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31393253803253174
    2. '[i' → logprob: -1.3139325380325317
    3. '[j' → logprob: -7.438932418823242
    4. '[
' → logprob: -10.938932418823242
    5. '[I' → logprob: -11.438932418823242
    6. '.swap' → logprob: -11.563932418823242
    7. ',' → logprob: -11.813932418823242
    8. '[int' → logprob: -11.813932418823242
    9. '[:]' → logprob: -11.938932418823242
    10. '[...]' → logprob: -12.438932418823242

Token 30: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4114397466182709
    2. '],' → logprob: -1.5364397764205933
    3. ',' → logprob: -2.1614396572113037
    4. ' ]' → logprob: -5.536439895629883
    5. ' ],' → logprob: -6.161439895629883
    6. ')' → logprob: -7.661439895629883
    7. ' ,' → logprob: -8.661439895629883
    8. '),' → logprob: -9.036439895629883
    9. ']=' → logprob: -10.036439895629883
    10. '=' → logprob: -11.161439895629883

Token 31: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.6931492686271667
    2. 'lst' → logprob: -0.6931492686271667
    3. '_lst' → logprob: -13.81814956665039
    4. '(lst' → logprob: -13.94314956665039
    5. '<|end|>' → logprob: -17.06814956665039
    6. 'Lst' → logprob: -17.69314956665039
    7. '.lst' → logprob: -18.31814956665039
    8. 'l' → logprob: -18.31814956665039
    9. '    ' → logprob: -18.69314956665039
    10. ' ' → logprob: -18.81814956665039

Token 32: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012439649435691535
    2. '[' → logprob: -9.000123977661133
    3. ',j' → logprob: -15.125123977661133
    4. '```' → logprob: -15.500123977661133
    5. '[js' → logprob: -15.750123977661133
    6. '[
' → logprob: -15.875123977661133
    7. 'j' → logprob: -16.000123977661133
    8. ']' → logprob: -16.125123977661133
    9. '[i' → logprob: -17.000123977661133
    10. '[...]' → logprob: -17.250123977661133

Token 33: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023387916386127472
    2. ')' → logprob: -3.773387908935547
    3. ']=' → logprob: -9.273387908935547
    4. '=' → logprob: -10.648387908935547
    5. '<|end|>' → logprob: -11.148387908935547
    6. ')=' → logprob: -12.773387908935547
    7. '}' → logprob: -13.023387908935547
    8. '<|end|>' → logprob: -13.398387908935547
    9. ' ]' → logprob: -13.898387908935547
    10. ')]' → logprob: -14.523387908935547

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019558717031031847
    2. ' =' → logprob: -6.251955986022949
    3. '<|end|>' → logprob: -10.75195598602295
    4. '=
' → logprob: -12.37695598602295
    5. '=

' → logprob: -14.25195598602295
    6. '=}' → logprob: -15.25195598602295
    7. ' ' → logprob: -16.251955032348633
    8. ' =
' → logprob: -16.626955032348633
    9. ',' → logprob: -16.626955032348633
    10. '.=' → logprob: -16.876955032348633

Token 35: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.38687655329704285
    2. 'lst' → logprob: -1.1368765830993652
    3. '(lst' → logprob: -12.761876106262207
    4. '_lst' → logprob: -13.511876106262207
    5. '    ' → logprob: -14.886876106262207
    6. '   ' → logprob: -15.261876106262207
    7. ' ' → logprob: -15.386876106262207
    8. '.lst' → logprob: -16.136877059936523
    9. 'list' → logprob: -16.636877059936523
    10. 'Lst' → logprob: -16.636877059936523

Token 36: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0004284043679945171
    2. '[' → logprob: -7.875428199768066
    3. '[i' → logprob: -10.000428199768066
    4. '[
' → logprob: -13.625428199768066
    5. '[js' → logprob: -14.875428199768066
    6. '```' → logprob: -15.125428199768066
    7. 'j' → logprob: -15.500428199768066
    8. '<|end|>' → logprob: -15.625428199768066
    9. '[a' → logprob: -16.000429153442383
    10. ' [' → logprob: -16.375429153442383

Token 37: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5869290828704834
    2. ',' → logprob: -1.3369290828704834
    3. ']' → logprob: -1.7119290828704834
    4. ' ,' → logprob: -8.086929321289062
    5. ',i' → logprob: -8.461929321289062
    6. ' ],' → logprob: -9.086929321289062
    7. '[i' → logprob: -9.711929321289062
    8. '   ' → logprob: -10.711929321289062
    9. '],
' → logprob: -10.836929321289062
    10. ' ]' → logprob: -11.086929321289062

Token 38: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.061967913061380386
    2. ' lst' → logprob: -2.8119678497314453
    3. '(lst' → logprob: -16.061967849731445
    4. '_lst' → logprob: -16.311967849731445
    5. ' ' → logprob: -17.436967849731445
    6. '.lst' → logprob: -17.561967849731445
    7. 'l' → logprob: -18.561967849731445
    8. 'ls' → logprob: -18.686967849731445
    9. '   ' → logprob: -19.436967849731445
    10. 'list' → logprob: -19.436967849731445

Token 39: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010306637705070898
    2. '[' → logprob: -9.250102996826172
    3. '[j' → logprob: -12.000102996826172
    4. '[I' → logprob: -15.125102996826172
    5. '```' → logprob: -15.375102996826172
    6. '[
' → logprob: -17.125102996826172
    7. '[idx' → logprob: -17.250102996826172
    8. '[index' → logprob: -17.250102996826172
    9. '[in' → logprob: -17.375102996826172
    10. '[int' → logprob: -17.625102996826172

Token 40: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023334341123700142
    2. ']' → logprob: -3.773334264755249
    3. '])' → logprob: -10.273334503173828
    4. ')]' → logprob: -10.273334503173828
    5. '}' → logprob: -12.023334503173828
    6. '）' → logprob: -12.523334503173828
    7. '<|end|>' → logprob: -12.773334503173828
    8. ')])' → logprob: -13.273334503173828
    9. '[' → logprob: -13.523334503173828
    10. '   ' → logprob: -14.273334503173828

Token 41: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5070178508758545
    2. 'def' → logprob: -1.6320178508758545
    3. 'if' → logprob: -2.0070178508758545
    4. 'd' → logprob: -3.2570178508758545
    5. 'data' → logprob: -4.632018089294434
    6. 'n' → logprob: -5.257018089294434
    7. 'a' → logprob: -5.632018089294434
    8. 'i' → logprob: -6.132018089294434
    9. 'result' → logprob: -6.507018089294434
    10. 'while' → logprob: -6.757018089294434

Token 42: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5147836804389954
    2. 'ata' → logprob: -1.1397836208343506
    3. ' =' → logprob: -3.0147836208343506
    4. 'a' → logprob: -3.8897836208343506
    5. '=' → logprob: -5.01478385925293
    6. 'ef' → logprob: -6.26478385925293
    7. 'd' → logprob: -6.38978385925293
    8. 'data' → logprob: -8.01478385925293
    9. 'at' → logprob: -8.01478385925293
    10. '<|end|>' → logprob: -8.26478385925293

Token 43: ' Data' (ID: 4833)
  Prédit: 'Data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Data' → logprob: -0.13163599371910095
    2. '[' → logprob: -3.256635904312134
    3. '[a' → logprob: -3.256635904312134
    4. '[]' → logprob: -4.256636142730713
    5. '{}' → logprob: -4.256636142730713
    6. 'a' → logprob: -4.506636142730713
    7. ' [' → logprob: -6.506636142730713
    8. ' Data' → logprob: -6.506636142730713
    9. '{' → logprob: -7.131636142730713
    10. '[c' → logprob: -7.381636142730713

Token 44: '()
' (ID: 1234)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.48643040657043457
    2. '<|end|>' → logprob: -1.9864304065704346
    3. 'a' → logprob: -2.3614304065704346
    4. 'if' → logprob: -2.7364304065704346
    5. 'd' → logprob: -2.8614304065704346
    6. '[' → logprob: -4.7364301681518555
    7. '<|end|>' → logprob: -5.2364301681518555
    8. '
' → logprob: -5.3614301681518555
    9. '.
' → logprob: -5.7364301681518555
    10. ' if' → logprob: -6.7364301681518555

Token 45: 'vals' (ID: 44567)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8307197093963623
    2. 'd' → logprob: -1.5807197093963623
    3. 'i' → logprob: -2.0807197093963623
    4. 'a' → logprob: -2.0807197093963623
    5. 'for' → logprob: -2.9557197093963623
    6. '[' → logprob: -3.5807197093963623
    7. '.' → logprob: -5.080719947814941
    8. '#' → logprob: -5.330719947814941
    9. 'def' → logprob: -5.830719947814941
    10. 'c' → logprob: -5.830719947814941

Token 46: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024210833944380283
    2. '.a' → logprob: -6.752420902252197
    3. '.val' → logprob: -7.502420902252197
    4. '.values' → logprob: -9.252421379089355
    5. ' =' → logprob: -9.377421379089355
    6. ' .' → logprob: -9.502421379089355
    7. '=' → logprob: -9.752421379089355
    8. '.data' → logprob: -10.002421379089355
    9. '.e' → logprob: -10.127421379089355
    10. '[' → logprob: -10.252421379089355

Token 47: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.02597605064511299
    2. '[' → logprob: -4.525976181030273
    3. '[]' → logprob: -5.150976181030273
    4. '[list' → logprob: -5.900976181030273
    5. 'list' → logprob: -6.150976181030273
    6. '[b' → logprob: -6.275976181030273
    7. ' [' → logprob: -7.275976181030273
    8. '[c' → logprob: -7.525976181030273
    9. 'a' → logprob: -7.775976181030273
    10. '[input' → logprob: -8.025976181030273

Token 48: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011152983643114567
    2. ' a' → logprob: -9.12511157989502
    3. '0' → logprob: -13.25011157989502
    4. '1' → logprob: -15.37511157989502
    5. '   ' → logprob: -16.125110626220703
    6. '10' → logprob: -16.500110626220703
    7. ']' → logprob: -16.750110626220703
    8. '3' → logprob: -16.750110626220703
    9. ' ' → logprob: -16.750110626220703
    10. 'b' → logprob: -17.250110626220703

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016128160059452057
    2. ' ,' → logprob: -7.126612663269043
    3. ',b' → logprob: -7.126612663269043
    4. ' ' → logprob: -13.001612663269043
    5. ',
' → logprob: -13.376612663269043
    6. 'b' → logprob: -14.876612663269043
    7. ',d' → logprob: -15.626612663269043
    8. ',c' → logprob: -16.37661361694336
    9. ' b' → logprob: -16.87661361694336
    10. ',a' → logprob: -17.50161361694336

Token 50: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3869050443172455
    2. 'b' → logprob: -1.1369050741195679
    3. ' ' → logprob: -10.3869047164917
    4. ' ' → logprob: -13.5119047164917
    5. ' б' → logprob: -14.6369047164917
    6. '>b' → logprob: -15.1369047164917
    7. ',' → logprob: -15.3869047164917
    8. ',b' → logprob: -15.5119047164917
    9. '	b' → logprob: -15.8869047164917
    10. ' ,' → logprob: -16.011905670166016

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001487140398239717
    2. ',c' → logprob: -9.50014877319336
    3. ' ,' → logprob: -9.62514877319336
    4. 'c' → logprob: -12.37514877319336
    5. ']' → logprob: -13.50014877319336
    6. ',
' → logprob: -13.50014877319336
    7. ')' → logprob: -15.50014877319336
    8. '<|end|>' → logprob: -15.62514877319336
    9. ' c' → logprob: -16.75014877319336
    10. ' ' → logprob: -16.75014877319336

Token 52: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022484004497528
    2. ' c' → logprob: -1.9102247953414917
    3. ' ' → logprob: -15.160224914550781
    4. ')c' → logprob: -15.910224914550781
    5. ',c' → logprob: -16.53522491455078
    6. ',' → logprob: -16.66022491455078
    7. '	c' → logprob: -16.91022491455078
    8. '_c' → logprob: -17.41022491455078
    9. '```' → logprob: -18.28522491455078
    10. ' ' → logprob: -18.41022491455078

Token 53: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.0590548703912646e-05
    2. ' ]' → logprob: -10.875030517578125
    3. ']
' → logprob: -12.125030517578125
    4. ',' → logprob: -13.000030517578125
    5. ')' → logprob: -13.250030517578125
    6. ']

' → logprob: -13.375030517578125
    7. '])' → logprob: -15.500030517578125
    8. ']
' → logprob: -16.000030517578125
    9. ')]' → logprob: -16.125030517578125
    10. '']' → logprob: -17.000030517578125

Token 54: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0983290895819664
    2. 'vals' → logprob: -3.8483290672302246
    3. 'i' → logprob: -3.9733290672302246
    4. 'swap' → logprob: -4.223329067230225
    5. 'd' → logprob: -4.348329067230225
    6. 'def' → logprob: -4.473329067230225
    7. 'if' → logprob: -5.473329067230225
    8. ' for' → logprob: -5.848329067230225
    9. 'n' → logprob: -6.223329067230225
    10. 's' → logprob: -6.848329067230225

Token 55: ' Style' (ID: 17602)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30499061942100525
    2. 'vals' → logprob: -1.9299906492233276
    3. ' for' → logprob: -3.179990530014038
    4. 'i' → logprob: -4.179990768432617
    5. 'swap' → logprob: -4.179990768432617
    6. 'd' → logprob: -4.304990768432617
    7. '#' → logprob: -4.804990768432617
    8. 'if' → logprob: -5.179990768432617
    9. ' vals' → logprob: -5.304990768432617
    10. 'def' → logprob: -5.554990768432617

Token 56: ' impér' (ID: 148162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6003013253211975
    2. ' =' → logprob: -1.3503012657165527
    3. '.' → logprob: -2.9753012657165527
    4. ' ' → logprob: -3.8503012657165527
    5. '_' → logprob: -3.9753012657165527
    6. 'def' → logprob: -3.9753012657165527
    7. 'd' → logprob: -4.100301265716553
    8. 'for' → logprob: -4.350301265716553
    9. ':' → logprob: -4.475301265716553
    10. '[' → logprob: -4.725301265716553

Token 57: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.13701675832271576
    2. 'at' → logprob: -2.887016773223877
    3. 'atique' → logprob: -3.387016773223877
    4. 'rat' → logprob: -4.512016773223877
    5. 'ative' → logprob: -4.762016773223877
    6. 'atic' → logprob: -4.762016773223877
    7. 'ativement' → logprob: -6.012016773223877
    8. 'cat' → logprob: -6.387016773223877
    9. 'e' → logprob: -6.512016773223877
    10. 't' → logprob: -7.012016773223877

Token 58: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2435285896062851
    2. 'i' → logprob: -2.2435286045074463
    3. ':' → logprob: -3.3685286045074463
    4. 'd' → logprob: -3.7435286045074463
    5. 'f' → logprob: -4.243528366088867
    6. ' for' → logprob: -4.493528366088867
    7. 'def' → logprob: -4.868528366088867
    8. '#' → logprob: -5.118528366088867
    9. 'if' → logprob: -5.368528366088867
    10. 'n' → logprob: -6.368528366088867

Token 59: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005294003989547491
    2. 'i' → logprob: -5.880293846130371
    3. ' for' → logprob: -6.505293846130371
    4. 'def' → logprob: -7.630293846130371
    5. 'while' → logprob: -8.755293846130371
    6. 'd' → logprob: -8.880293846130371
    7. '```' → logprob: -9.755293846130371
    8. 'vals' → logprob: -9.880293846130371
    9. 'f' → logprob: -10.255293846130371
    10. 'if' → logprob: -10.755293846130371

Token 60: '.x' (ID: 3700)
  Prédit: '.val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.1045277863740921
    2. '.' → logprob: -2.479527711868286
    3. '.values' → logprob: -4.979527950286865
    4. '.swap' → logprob: -5.479527950286865
    5. '.attrs' → logprob: -6.104527950286865
    6. 'vals' → logprob: -7.729527950286865
    7. '.s' → logprob: -8.104527473449707
    8. '.v' → logprob: -8.479527473449707
    9. '.sw' → logprob: -8.729527473449707
    10. '.data' → logprob: -9.229527473449707

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02233821526169777
    2. '=' → logprob: -4.022338390350342
    3. ',' → logprob: -5.772338390350342
    4. '.' → logprob: -7.022338390350342
    5. ' ' → logprob: -9.147337913513184
    6. ' ,' → logprob: -10.897337913513184
    7. ')' → logprob: -11.397337913513184
    8. 's' → logprob: -11.772337913513184
    9. '.=' → logprob: -12.272337913513184
    10. '<|end|>' → logprob: -12.772337913513184

Token 62: ' vals' (ID: 58985)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.163112074136734
    2. 'vals' → logprob: -2.038112163543701
    3. ' a' → logprob: -4.288112163543701
    4. ' vals' → logprob: -5.163112163543701
    5. 'val' → logprob: -7.788112163543701
    6. '0' → logprob: -9.163111686706543
    7. 'v' → logprob: -9.788111686706543
    8. ' ' → logprob: -9.913111686706543
    9. 'values' → logprob: -10.163111686706543
    10. '(vals' → logprob: -10.413111686706543

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.922563963802531e-05
    2. '0' → logprob: -9.625079154968262
    3. ' [' → logprob: -12.375079154968262
    4. '.' → logprob: -12.875079154968262
    5. ' ' → logprob: -13.750079154968262
    6. '[:]' → logprob: -13.875079154968262
    7. '[
' → logprob: -14.250079154968262
    8. '\[' → logprob: -14.750079154968262
    9. '```' → logprob: -15.000079154968262
    10. '[-' → logprob: -15.187579154968262

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002466774603817612
    2. '1' → logprob: -8.50024700164795
    3. '2' → logprob: -10.50024700164795
    4. ' ' → logprob: -11.12524700164795
    5. '۰' → logprob: -16.062746047973633
    6. '-' → logprob: -16.125246047973633
    7. '٠' → logprob: -16.312746047973633
    8. ']' → logprob: -16.562746047973633
    9. '   ' → logprob: -16.750246047973633
    10. '```' → logprob: -17.250246047973633

Token 65: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.827200897736475e-05
    2. ']
' → logprob: -10.000078201293945
    3. ' ]' → logprob: -10.375078201293945
    4. ']

' → logprob: -13.625078201293945
    5. ']
' → logprob: -15.375078201293945
    6. ')' → logprob: -16.750078201293945
    7. '];' → logprob: -17.500078201293945
    8. '],' → logprob: -17.750078201293945
    9. '']' → logprob: -18.000078201293945
    10. ']

' → logprob: -18.625078201293945

Token 66: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3589193522930145
    2. '
' → logprob: -1.233919382095337
    3. '<|end|>' → logprob: -5.358919143676758
    4. ' 
' → logprob: -5.858919143676758
    5. ' d' → logprob: -7.108919143676758
    6. '  
' → logprob: -7.608919143676758
    7. '
' → logprob: -7.858919143676758
    8. ';' → logprob: -8.108919143676758
    9. ' ' → logprob: -8.483919143676758
    10. ';
' → logprob: -9.108919143676758

Token 67: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0033446596935391426
    2. '.x' → logprob: -6.128344535827637
    3. '.y' → logprob: -6.878344535827637
    4. '<|end|>' → logprob: -10.378344535827637
    5. ' .' → logprob: -11.503344535827637
    6. '.<' → logprob: -11.628344535827637
    7. '.z' → logprob: -11.878344535827637
    8. ' ' → logprob: -12.003344535827637
    9. '.e' → logprob: -12.253344535827637
    10. '.s' → logprob: -12.378344535827637

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859861359000206
    2. '=' → logprob: -3.048598527908325
    3. ' ' → logprob: -11.798598289489746
    4. '<|end|>' → logprob: -13.548598289489746
    5. ',' → logprob: -13.798598289489746
    6. ' =
' → logprob: -15.048598289489746
    7. ')' → logprob: -15.048598289489746
    8. '.' → logprob: -15.173598289489746
    9. 's' → logprob: -16.048599243164062
    10. ' ' → logprob: -16.548599243164062

Token 69: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.1427091509103775
    2. 'vals' → logprob: -2.017709255218506
    3. 'val' → logprob: -11.642708778381348
    4. '(vals' → logprob: -11.767708778381348
    5. ' ' → logprob: -12.017708778381348
    6. ' val' → logprob: -12.892708778381348
    7. ' values' → logprob: -13.017708778381348
    8. '_vals' → logprob: -13.392708778381348
    9. ' vall' → logprob: -13.392708778381348
    10. 'v' → logprob: -13.767708778381348

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002661039761733264
    2. '1' → logprob: -8.375266075134277
    3. ' [' → logprob: -11.375266075134277
    4. '2' → logprob: -11.875266075134277
    5. '```' → logprob: -12.000266075134277
    6. '][' → logprob: -13.000266075134277
    7. '[-' → logprob: -13.500266075134277
    8. '3' → logprob: -13.750266075134277
    9. ')[' → logprob: -14.125266075134277
    10. '[
' → logprob: -14.375266075134277

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. ']' → logprob: -14.500004768371582
    4. '   ' → logprob: -17.625003814697266
    5. '```' → logprob: -18.000003814697266
    6. '  ' → logprob: -18.125003814697266
    7. '2' → logprob: -18.750003814697266
    8. '0' → logprob: -18.812503814697266
    9. '' → logprob: -19.000003814697266
    10. ')' → logprob: -19.437503814697266

Token 72: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012218938209116459
    2. ']
' → logprob: -6.751221656799316
    3. ' ]' → logprob: -10.001221656799316
    4. '']' → logprob: -13.001221656799316
    5. ']

' → logprob: -13.126221656799316
    6. ']
' → logprob: -14.376221656799316
    7. '<|end|>' → logprob: -14.501221656799316
    8. ')' → logprob: -15.001221656799316
    9. '}' → logprob: -16.001222610473633
    10. 'd' → logprob: -16.126222610473633

Token 73: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.514650183613412e-05
    2. ' d' → logprob: -10.250055313110352
    3. '<|end|>' → logprob: -11.625055313110352
    4. '```' → logprob: -12.375055313110352
    5. ' 
' → logprob: -13.125055313110352
    6. '   ' → logprob: -14.250055313110352
    7. '  
' → logprob: -14.500055313110352
    8. '\' → logprob: -14.500055313110352
    9. '#' → logprob: -14.625055313110352
    10. ' ' → logprob: -14.625055313110352

Token 74: '.z' (ID: 9161)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018231185153126717
    2. '.y' → logprob: -4.518231391906738
    3. '.x' → logprob: -5.143231391906738
    4. '.z' → logprob: -7.143231391906738
    5. '<|end|>' → logprob: -8.143231391906738
    6. ' .' → logprob: -10.268231391906738
    7. '```' → logprob: -10.393231391906738
    8. '<|end|>' → logprob: -10.518231391906738
    9. '`.' → logprob: -10.893231391906738
    10. '.q' → logprob: -11.018231391906738

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09020539373159409
    2. '=' → logprob: -2.465205430984497
    3. '<|end|>' → logprob: -6.840205192565918
    4. ' ' → logprob: -8.715205192565918
    5. ')' → logprob: -11.340205192565918
    6. ' =
' → logprob: -12.590205192565918
    7. ']' → logprob: -12.715205192565918
    8. ' ' → logprob: -13.215205192565918
    9. '```' → logprob: -13.215205192565918
    10. '[' → logprob: -13.465205192565918

Token 76: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.07889452576637268
    2. 'vals' → logprob: -2.57889461517334
    3. '(vals' → logprob: -13.20389461517334
    4. 'val' → logprob: -13.70389461517334
    5. ' val' → logprob: -14.95389461517334
    6. ' ' → logprob: -14.95389461517334
    7. 'v' → logprob: -15.20389461517334
    8. ' values' → logprob: -15.32889461517334
    9. '_vals' → logprob: -15.45389461517334
    10. ' vall' → logprob: -15.45389461517334

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.3596853831550106e-05
    2. '2' → logprob: -9.875053405761719
    3. ' [' → logprob: -14.000053405761719
    4. '```' → logprob: -14.125053405761719
    5. 's' → logprob: -15.500053405761719
    6. '\[' → logprob: -16.37505340576172
    7. '   ' → logprob: -16.75005340576172
    8. '[
' → logprob: -17.25005340576172
    9. ' ' → logprob: -17.37505340576172
    10. '[-' → logprob: -17.50005340576172

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.5
    3. '0' → logprob: -16.625
    4. '```' → logprob: -16.625
    5. ']' → logprob: -16.875
    6. '-' → logprob: -17.5
    7. '   ' → logprob: -17.6875
    8. '۲' → logprob: -18.625
    9. '২' → logprob: -18.875
    10. '२' → logprob: -19.0625

Token 79: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011240453459322453
    2. '}' → logprob: -4.511240482330322
    3. ']' → logprob: -9.011240005493164
    4. '<|end|>' → logprob: -9.636240005493164
    5. ')
' → logprob: -13.261240005493164
    6. '```' → logprob: -14.011240005493164
    7. '>' → logprob: -14.386240005493164
    8. ' }' → logprob: -14.636240005493164
    9. '<|end|>' → logprob: -15.011240005493164
    10. ')}' → logprob: -15.136240005493164

Token 80: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10763967037200928
    2. '#' → logprob: -3.232639789581299
    3. '
' → logprob: -3.982639789581299
    4. 'if' → logprob: -4.732639789581299
    5. 'for' → logprob: -4.857639789581299
    6. 'print' → logprob: -5.107639789581299
    7. '<|end|>' → logprob: -5.107639789581299
    8. 'x' → logprob: -5.732639789581299
    9. 'def' → logprob: -5.857639789581299
    10. 'a' → logprob: -6.482639789581299

Token 81: ' Style' (ID: 17602)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6328275203704834
    2. 'd' → logprob: -2.0078275203704834
    3. 'Style' → logprob: -2.5078275203704834
    4. 'if' → logprob: -2.8828275203704834
    5. 'for' → logprob: -3.2578275203704834
    6. 'style' → logprob: -3.3828275203704834
    7. ' Style' → logprob: -3.3828275203704834
    8. ' for' → logprob: -4.2578277587890625
    9. ' style' → logprob: -4.2578277587890625
    10. ' if' → logprob: -4.2578277587890625

Token 82: ' fonction' (ID: 17610)
  Prédit: ' fonction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.8716761469841003
    2. 'fonction' → logprob: -1.1216762065887451
    3. ' functional' → logprob: -1.8716762065887451
    4. 'functional' → logprob: -2.996676206588745
    5. ' python' → logprob: -4.371675968170166
    6. ' Python' → logprob: -4.996675968170166
    7. 'python' → logprob: -5.371675968170166
    8. '#' → logprob: -5.496675968170166
    9. ' function' → logprob: -5.496675968170166
    10. '_' → logprob: -6.121675968170166

Token 83: 'nel' (ID: 10085)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45701733231544495
    2. 'd' → logprob: -1.5820173025131226
    3. ' d' → logprob: -3.207017421722412
    4. 'al' → logprob: -3.707017421722412
    5. '#' → logprob: -3.832017421722412
    6. ' =' → logprob: -4.707017421722412
    7. 's' → logprob: -4.957017421722412
    8. ' def' → logprob: -5.082017421722412
    9. 'vals' → logprob: -5.082017421722412
    10. ' ' → logprob: -5.207017421722412

Token 84: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.34012821316719055
    2. 'vals' → logprob: -1.3401281833648682
    3. 'def' → logprob: -4.465128421783447
    4. ' =' → logprob: -5.590128421783447
    5. ' vals' → logprob: -6.465128421783447
    6. ' d' → logprob: -6.590128421783447
    7. 'x' → logprob: -6.965128421783447
    8. 'for' → logprob: -7.090128421783447
    9. 'values' → logprob: -7.215128421783447
    10. 'sorted' → logprob: -7.215128421783447

Token 85: 'swap' (ID: 55961)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14432917535305023
    2. 'vals' → logprob: -2.394329071044922
    3. ' d' → logprob: -3.894329071044922
    4. 'def' → logprob: -4.519329071044922
    5. ' vals' → logprob: -5.519329071044922
    6. 'x' → logprob: -6.019329071044922
    7. 'from' → logprob: -6.394329071044922
    8. 'values' → logprob: -7.644329071044922
    9. '(vals' → logprob: -7.769329071044922
    10. ' def' → logprob: -8.019329071044922

Token 86: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -3.1782583391759545e-05
    2. '(' → logprob: -11.125031471252441
    3. '(val' → logprob: -11.250031471252441
    4. '(values' → logprob: -13.375031471252441
    5. ' (' → logprob: -14.250031471252441
    6. '(lst' → logprob: -14.375031471252441
    7. '(nums' → logprob: -14.750031471252441
    8. '(ids' → logprob: -15.500031471252441
    9. ' vals' → logprob: -15.750031471252441
    10. '(vars' → logprob: -15.750031471252441

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.313949316740036
    2. '(' → logprob: -1.3139493465423584
    3. ')' → logprob: -7.813949108123779
    4. ')(' → logprob: -9.063949584960938
    5. ' ,' → logprob: -9.313949584960938
    6. ',(' → logprob: -10.313949584960938
    7. '0' → logprob: -11.438949584960938
    8. ' (' → logprob: -11.563949584960938
    9. ',val' → logprob: -12.188949584960938
    10. ',
' → logprob: -12.438949584960938

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026636049151420593
    2. '1' → logprob: -3.6516361236572266
    3. ' ' → logprob: -8.276636123657227
    4. ')' → logprob: -9.901636123657227
    5. '2' → logprob: -10.776636123657227
    6. '```' → logprob: -13.401636123657227
    7. '),' → logprob: -13.526636123657227
    8. '   ' → logprob: -13.589136123657227
    9. '-' → logprob: -14.464136123657227
    10. '    ' → logprob: -14.901636123657227

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076578580774366856
    2. '1' → logprob: -4.882658004760742
    3. ' ' → logprob: -10.132658004760742
    4. '2' → logprob: -11.882658004760742
    5. ')' → logprob: -13.695158004760742
    6. '```' → logprob: -13.882658004760742
    7. '-' → logprob: -14.570158004760742
    8. '

' → logprob: -15.070158004760742
    9. '   ' → logprob: -15.632658004760742
    10. '۰' → logprob: -16.070158004760742

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. ' ,' → logprob: -10.750022888183594
    3. '1' → logprob: -14.875022888183594
    4. ',

' → logprob: -15.000022888183594
    5. ',
' → logprob: -15.625022888183594
    6. '2' → logprob: -15.875022888183594
    7. ' ' → logprob: -17.000022888183594
    8. '3' → logprob: -17.500022888183594
    9. '0' → logprob: -17.750022888183594
    10. '‌,' → logprob: -17.875022888183594

Token 91: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2830258905887604
    2. '1' → logprob: -1.408025860786438
    3. ' ' → logprob: -6.283025741577148
    4. '   ' → logprob: -13.220525741577148
    5. '```' → logprob: -13.408025741577148
    6. '  ' → logprob: -13.783025741577148
    7. ')' → logprob: -14.470525741577148
    8. '

' → logprob: -15.970525741577148
    9. '    ' → logprob: -16.09552574157715
    10. '-' → logprob: -16.15802574157715

Token 92: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2014283388853073
    2. '1' → logprob: -1.7014282941818237
    3. ' ' → logprob: -11.638928413391113
    4. '```' → logprob: -13.388928413391113
    5. '   ' → logprob: -14.076428413391113
    6. '-' → logprob: -14.826428413391113
    7. ')' → logprob: -15.138928413391113
    8. '２' → logprob: -15.451428413391113
    9. '२' → logprob: -15.701428413391113
    10. '

' → logprob: -15.701428413391113

Token 93: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')
' → logprob: -14.250001907348633
    4. ')

' → logprob: -16.125001907348633
    5. '),' → logprob: -18.125001907348633
    6. '))' → logprob: -18.250001907348633
    7. ')#' → logprob: -18.375001907348633
    8. ')`' → logprob: -19.125001907348633
    9. ')**' → logprob: -19.500001907348633
    10. ').' → logprob: -19.750001907348633

Token 94: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4874917268753052
    2. 'swap' → logprob: -1.1124917268753052
    3. '<|end|>' → logprob: -3.7374916076660156
    4. 'print' → logprob: -4.487491607666016
    5. ')' → logprob: -4.862491607666016
    6. ' swap' → logprob: -5.987491607666016
    7. '#' → logprob: -6.237491607666016
    8. '.swap' → logprob: -6.237491607666016
    9. 'newline' → logprob: -6.487491607666016
    10. ' 
' → logprob: -6.862491607666016

Token 96: ' échange' (ID: 139953)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23603452742099762
    2. 'vals' → logprob: -1.9860345125198364
    3. 'd' → logprob: -3.736034631729126
    4. ' #' → logprob: -4.361034393310547
    5. 'swap' → logprob: -4.736034393310547
    6. ' vals' → logprob: -5.111034393310547
    7. ' ' → logprob: -5.361034393310547
    8. 'print' → logprob: -5.611034393310547
    9. 'a' → logprob: -5.861034393310547
    10. 'val' → logprob: -6.736034393310547

Token 97: ' a' (ID: 261)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.17678476870059967
    2. ')' → logprob: -2.1767847537994385
    3. '<|end|>' → logprob: -4.176784992218018
    4. '(vals' → logprob: -4.426784992218018
    5. 's' → logprob: -5.176784992218018
    6. '#' → logprob: -5.301784992218018
    7. ' vals' → logprob: -5.801784992218018
    8. ')
' → logprob: -6.301784992218018
    9. '
' → logprob: -6.926784992218018
    10. 'swap' → logprob: -7.051784992218018

Token 98: ' et' (ID: 859)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.41893789172172546
    2. ',' → logprob: -1.1689379215240479
    3. ' et' → logprob: -4.043937683105469
    4. '[' → logprob: -5.668937683105469
    5. ' and' → logprob: -5.668937683105469
    6. 't' → logprob: -6.918937683105469
    7. '`' → logprob: -7.418937683105469
    8. ',b' → logprob: -7.543937683105469
    9. 'et' → logprob: -7.918937683105469
    10. 'r' → logprob: -7.918937683105469

Token 99: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04317205771803856
    2. ' b' → logprob: -3.1681721210479736
    3. 'c' → logprob: -9.043171882629395
    4. ' c' → logprob: -10.293171882629395
    5. ' ' → logprob: -11.543171882629395
    6. 'vals' → logprob: -12.168171882629395
    7. ' vals' → logprob: -13.168171882629395
    8. ' ' → logprob: -14.293171882629395
    9. 'val' → logprob: -14.418171882629395
    10. '	b' → logprob: -14.668171882629395

Token 100: '

' (ID: 279)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.5511201620101929
    2. '
' → logprob: -0.9261201620101929
    3. '<|end|>' → logprob: -4.426120281219482
    4. ')' → logprob: -5.551120281219482
    5. '  
' → logprob: -6.051120281219482
    6. 'vals' → logprob: -6.301120281219482
    7. 'print' → logprob: -6.426120281219482
    8. ' swap' → logprob: -6.926120281219482
    9. '\n' → logprob: -7.176120281219482
    10. '	swap' → logprob: -7.426120281219482

Token 101: '#' (ID: 2)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.0071976701728999615
    2. 'print' → logprob: -5.007197856903076
    3. '
' → logprob: -9.007197380065918
    4. 'vals' → logprob: -9.507197380065918
    5. '<|end|>' → logprob: -9.632197380065918
    6. 'd' → logprob: -9.882197380065918
    7. ' swap' → logprob: -10.382197380065918
    8. '	swap' → logprob: -10.507197380065918
    9. '.swap' → logprob: -10.507197380065918
    10. 'newline' → logprob: -11.132197380065918

Token 102: ' Style' (ID: 17602)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.5235190987586975
    2. 'print' → logprob: -1.1485190391540527
    3. 'd' → logprob: -2.5235190391540527
    4. 'vals' → logprob: -4.773519039154053
    5. 'for' → logprob: -6.523519039154053
    6. ' swap' → logprob: -8.773519515991211
    7. '#' → logprob: -10.273519515991211
    8. 'c' → logprob: -10.523519515991211
    9. ' d' → logprob: -10.648519515991211
    10. 'values' → logprob: -11.398519515991211

Token 103: ' objet' (ID: 13839)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.1884191781282425
    2. 'fonction' → logprob: -1.813419222831726
    3. ' function' → logprob: -6.313419342041016
    4. ' impér' → logprob: -6.438419342041016
    5. ' déclar' → logprob: -7.563419342041016
    6. ' fonctionnal' → logprob: -7.688419342041016
    7. 'function' → logprob: -7.813419342041016
    8. 'functional' → logprob: -7.813419342041016
    9. '```' → logprob: -8.063419342041016
    10. ' functional' → logprob: -8.063419342041016

Token 104: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006815896835178137
    2. '
' → logprob: -5.1318159103393555
    3. ' d' → logprob: -7.2568159103393555
    4. 'swap' → logprob: -10.381815910339355
    5. 'class' → logprob: -10.631815910339355
    6. 'vals' → logprob: -10.756815910339355
    7. 'print' → logprob: -10.756815910339355
    8. 'for' → logprob: -11.006815910339355
    9. ' setattr' → logprob: -11.756815910339355
    10. '

' → logprob: -11.756815910339355

Token 105: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0069455336779356
    2. 'set' → logprob: -5.756945610046387
    3. 'temp' → logprob: -6.256945610046387
    4. 'tmp' → logprob: -7.256945610046387
    5. 'vals' → logprob: -7.381945610046387
    6. 'class' → logprob: -8.756945610046387
    7. 'print' → logprob: -8.756945610046387
    8. 'swap' → logprob: -9.881945610046387
    9. 'for' → logprob: -10.131945610046387
    10. 'get' → logprob: -10.506945610046387

Token 106: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009205120149999857
    2. '.x' → logprob: -7.500920295715332
    3. '<|end|>' → logprob: -8.125920295715332
    4. ' .' → logprob: -10.625920295715332
    5. '.<' → logprob: -11.375920295715332
    6. '<|end|>' → logprob: -11.875920295715332
    7. '.
' → logprob: -12.125920295715332
    8. '​.' → logprob: -12.750920295715332
    9. '.

' → logprob: -13.125920295715332
    10. '.​' → logprob: -13.250920295715332

Token 107: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12037952989339828
    2. ' d' → logprob: -2.2453794479370117
    3. '<|end|>' → logprob: -5.495379447937012
    4. 'vals' → logprob: -5.995379447937012
    5. ' vals' → logprob: -7.120379447937012
    6. ' ' → logprob: -9.870379447937012
    7. '  ' → logprob: -11.057879447937012
    8. '	d' → logprob: -11.807879447937012
    9. '_vals' → logprob: -12.120379447937012
    10. '<|end|>' → logprob: -12.182879447937012

Token 109: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.070855051279068
    2. '.z' → logprob: -2.695855140686035
    3. '.' → logprob: -7.070855140686035
    4. 'y' → logprob: -10.695855140686035
    5. '.x' → logprob: -10.695855140686035
    6. '.py' → logprob: -12.195855140686035
    7. ' .' → logprob: -12.820855140686035
    8. '`.' → logprob: -13.445855140686035
    9. '```' → logprob: -13.570855140686035
    10. '.s' → logprob: -13.570855140686035

Token 110: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5484392642974854
    2. ' =' → logprob: -1.2984392642974854
    3. ',' → logprob: -1.9234392642974854
    4. '<|end|>' → logprob: -5.798439025878906
    5. ' ' → logprob: -10.673439025878906
    6. ' ,' → logprob: -11.173439025878906
    7. '<|end|>' → logprob: -12.673439025878906
    8. ')' → logprob: -13.423439025878906
    9. 'd' → logprob: -13.423439025878906
    10. '```' → logprob: -13.423439025878906

Token 111: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14796337485313416
    2. ' d' → logprob: -2.022963285446167
    3. 'vals' → logprob: -5.522963523864746
    4. ' vals' → logprob: -6.772963523864746
    5. ' ' → logprob: -10.897963523864746
    6. '_vals' → logprob: -11.147963523864746
    7. '<|end|>' → logprob: -11.210463523864746
    8. ' =' → logprob: -11.335463523864746
    9. 'val' → logprob: -11.460463523864746
    10. '  ' → logprob: -11.585463523864746

Token 112: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.0006628761766478419
    2. '.x' → logprob: -7.875662803649902
    3. '.' → logprob: -8.375662803649902
    4. '.y' → logprob: -10.875662803649902
    5. '.s' → logprob: -11.000662803649902
    6. '.q' → logprob: -12.625662803649902
    7. 'z' → logprob: -13.125662803649902
    8. '.a' → logprob: -13.750662803649902
    9. '.v' → logprob: -13.875662803649902
    10. ' .' → logprob: -14.000662803649902

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6456747651100159
    2. '<|end|>' → logprob: -1.270674705505371
    3. '=' → logprob: -1.645674705505371
    4. ' ' → logprob: -6.895674705505371
    5. ',' → logprob: -7.770674705505371
    6. '<|end|>' → logprob: -8.020674705505371
    7. ')' → logprob: -8.395674705505371
    8. '
' → logprob: -10.395674705505371
    9. '[' → logprob: -10.395674705505371
    10. ' =
' → logprob: -11.395674705505371

Token 114: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.16095010936260223
    2. ' vals' → logprob: -1.9109500646591187
    3. '(vals' → logprob: -7.660950183868408
    4. 'val' → logprob: -9.41094970703125
    5. 'tuple' → logprob: -10.41094970703125
    6. 'c' → logprob: -10.66094970703125
    7. 'd' → logprob: -10.91094970703125
    8. 'values' → logprob: -11.03594970703125
    9. '   ' → logprob: -11.03594970703125
    10. 'b' → logprob: -11.41094970703125

Token 115: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05368791148066521
    2. '2' → logprob: -3.053687810897827
    3. ':' → logprob: -6.053688049316406
    4. ']' → logprob: -6.303688049316406
    5. ':]' → logprob: -7.428688049316406
    6. ')' → logprob: -9.053688049316406
    7. '])' → logprob: -9.428688049316406
    8. ' ' → logprob: -9.803688049316406
    9. ')]' → logprob: -10.928688049316406
    10. '1' → logprob: -11.803688049316406

Token 117: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6406263709068298
    2. '],' → logprob: -0.7656263709068298
    3. ']' → logprob: -5.390626430511475
    4. ' ,' → logprob: -6.015626430511475
    5. ' ],' → logprob: -7.015626430511475
    6. '>,' → logprob: -10.890625953674316
    7. '‌,' → logprob: -11.140625953674316
    8. ' ]' → logprob: -11.765625953674316
    9. '<|end|>' → logprob: -11.765625953674316
    10. '],
' → logprob: -11.890625953674316

Token 118: ' vals' (ID: 58985)
  Prédit: ' vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.6326607465744019
    2. 'vals' → logprob: -0.7576607465744019
    3. 'val' → logprob: -10.382660865783691
    4. '(vals' → logprob: -11.632660865783691
    5. 'values' → logprob: -12.007660865783691
    6. ' ' → logprob: -12.757660865783691
    7. '_vals' → logprob: -12.757660865783691
    8. ' val' → logprob: -13.132660865783691
    9. ' values' → logprob: -13.257660865783691
    10. '   ' → logprob: -13.632660865783691

Token 119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.919942486798391e-05
    2. '0' → logprob: -10.375059127807617
    3. '2' → logprob: -11.625059127807617
    4. '][' → logprob: -11.875059127807617
    5. ' [' → logprob: -12.500059127807617
    6. '[
' → logprob: -12.625059127807617
    7. ']' → logprob: -14.125059127807617
    8. 's' → logprob: -14.750059127807617
    9. '```' → logprob: -14.750059127807617
    10. '>[' → logprob: -15.000059127807617

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010401944164186716
    2. '2' → logprob: -6.876039981842041
    3. ' ' → logprob: -11.8760404586792
    4. '1' → logprob: -14.8760404586792
    5. '   ' → logprob: -17.188539505004883
    6. '[' → logprob: -17.438539505004883
    7. '۰' → logprob: -18.001039505004883
    8. 'x' → logprob: -18.251039505004883
    9. '  ' → logprob: -18.376039505004883
    10. '3' → logprob: -18.876039505004883

Token 121: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022181766107678413
    2. ' ,' → logprob: -6.127218246459961
    3. '],' → logprob: -11.002218246459961
    4. '},' → logprob: -12.877218246459961
    5. '>,' → logprob: -13.002218246459961
    6. '`,' → logprob: -13.002218246459961
    7. ',val' → logprob: -13.002218246459961
    8. '‌,' → logprob: -13.127218246459961
    9. '),' → logprob: -14.252218246459961
    10. ' ' → logprob: -14.252218246459961

Token 122: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.3132860064506531
    2. ' vals' → logprob: -1.3132860660552979
    3. '(vals' → logprob: -11.438285827636719
    4. 'val' → logprob: -11.688285827636719
    5. '_vals' → logprob: -13.063285827636719
    6. 'values' → logprob: -14.313285827636719
    7. ' ' → logprob: -14.438285827636719
    8. '   ' → logprob: -15.063285827636719
    9. 'Vals' → logprob: -15.188285827636719
    10. 'v' → logprob: -15.313285827636719

Token 123: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.996708104154095e-05
    2. '2' → logprob: -9.250100135803223
    3. ' [' → logprob: -13.625100135803223
    4. '```' → logprob: -13.750100135803223
    5. '   ' → logprob: -14.875100135803223
    6. '\[' → logprob: -15.375100135803223
    7. '][' → logprob: -15.875100135803223
    8. ' ' → logprob: -16.125099182128906
    9. '[
' → logprob: -16.250099182128906
    10. '}[' → logprob: -16.500099182128906

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.875012397766113
    3. ']' → logprob: -13.125012397766113
    4. '-' → logprob: -13.375012397766113
    5. '])' → logprob: -13.875012397766113
    6. '[' → logprob: -15.250012397766113
    7. '   ' → logprob: -15.250012397766113
    8. '0' → logprob: -15.250012397766113
    9. '```' → logprob: -15.625012397766113
    10. '  ' → logprob: -16.25001335144043

Token 125: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.0259150157216936e-05
    2. '}' → logprob: -10.37505054473877
    3. ')
' → logprob: -11.25005054473877
    4. '<|end|>' → logprob: -12.87505054473877
    5. ' )' → logprob: -13.50005054473877
    6. ']' → logprob: -13.75005054473877
    7. ')

' → logprob: -15.00005054473877
    8. '）' → logprob: -15.25005054473877
    9. '```' → logprob: -15.87505054473877
    10. '   ' → logprob: -17.250049591064453

Token 126: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: ' Proc' (ID: 61817)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011237873695790768
    2. ' print' → logprob: -7.501123905181885
    3. 'd' → logprob: -8.126123428344727
    4. 'swap' → logprob: -9.251123428344727
    5. 'for' → logprob: -9.376123428344727
    6. ' for' → logprob: -10.626123428344727
    7. '#' → logprob: -11.001123428344727
    8. 'if' → logprob: -11.251123428344727
    9. 'vals' → logprob: -11.501123428344727
    10. ' d' → logprob: -11.876123428344727

Token 128: 'éd' (ID: 6383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3034543991088867
    2. 'éd' → logprob: -1.5534543991088867
    3. 'édé' → logprob: -1.5534543991088867
    4. 'ess' → logprob: -1.8034543991088867
    5. 'ed' → logprob: -2.3034543991088867
    6. 'éder' → logprob: -4.303454399108887
    7. 'é' → logprob: -4.553454399108887
    8. 'd' → logprob: -5.553454399108887
    9. 'essing' → logprob: -5.803454399108887
    10. '#' → logprob: -5.803454399108887

Token 129: 'ural' (ID: 4900)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.08785808086395264
    2. 'def' → logprob: -2.837858200073242
    3. 'd' → logprob: -4.462858200073242
    4. 'ur' → logprob: -5.087858200073242
    5. 'é' → logprob: -5.837858200073242
    6. 'ural' → logprob: -6.087858200073242
    7. 'e' → logprob: -6.587858200073242
    8. 'ed' → logprob: -7.962858200073242
    9. 'de' → logprob: -8.462858200073242
    10. '```' → logprob: -9.837858200073242

Token 130: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6569104194641113
    2. 'def' → logprob: -1.9069104194641113
    3. '
' → logprob: -2.1569104194641113
    4. 'print' → logprob: -2.9069104194641113
    5. ' for' → logprob: -2.9069104194641113
    6. 'swap' → logprob: -2.9069104194641113
    7. '#' → logprob: -4.156910419464111
    8. 'd' → logprob: -4.781910419464111
    9. 'if' → logprob: -5.031910419464111
    10. 'vals' → logprob: -5.406910419464111

Token 131: 'tmp' (ID: 11669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14669109880924225
    2. 'print' → logprob: -2.521691083908081
    3. ' for' → logprob: -3.646691083908081
    4. 'vals' → logprob: -4.52169132232666
    5. 'def' → logprob: -4.64669132232666
    6. 'd' → logprob: -5.64669132232666
    7. 'swap' → logprob: -5.77169132232666
    8. 'if' → logprob: -7.64669132232666
    9. 'temp' → logprob: -7.89669132232666
    10. 'a' → logprob: -8.14669132232666

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04333416745066643
    2. '=' → logprob: -3.1683342456817627
    3. ' ' → logprob: -8.918334007263184
    4. ',' → logprob: -9.293334007263184
    5. '_' → logprob: -9.918334007263184
    6. ' ' → logprob: -10.793334007263184
    7. '  ' → logprob: -11.418334007263184
    8. ')' → logprob: -11.918334007263184
    9. 's' → logprob: -12.293334007263184
    10. '[' → logprob: -13.293334007263184

Token 133: ' d' (ID: 272)
  Prédit: ' vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.5860050916671753
    2. 'vals' → logprob: -0.8360050916671753
    3. 'd' → logprob: -5.336005210876465
    4. ' d' → logprob: -5.461005210876465
    5. 'a' → logprob: -8.086005210876465
    6. 'b' → logprob: -8.586005210876465
    7. 'val' → logprob: -8.961005210876465
    8. ' a' → logprob: -9.336005210876465
    9. ' b' → logprob: -9.961005210876465
    10. 'v' → logprob: -10.336005210876465

Token 134: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.011455196887254715
    2. '.y' → logprob: -4.761455059051514
    3. '.z' → logprob: -6.011455059051514
    4. '.' → logprob: -8.136455535888672
    5. 'x' → logprob: -9.886455535888672
    6. '.a' → logprob: -10.761455535888672
    7. ' .' → logprob: -11.636455535888672
    8. '.s' → logprob: -13.136455535888672
    9. '.b' → logprob: -13.136455535888672
    10. 'y' → logprob: -13.636455535888672

Token 135: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004131711088120937
    2. '<|end|>' → logprob: -6.25413179397583
    3. ' 
' → logprob: -6.87913179397583
    4. 'd' → logprob: -7.12913179397583
    5. '  
' → logprob: -8.879131317138672
    6. '
' → logprob: -9.004131317138672
    7. '' → logprob: -10.629131317138672
    8. ' ' → logprob: -11.129131317138672
    9. 'tmp' → logprob: -11.629131317138672
    10. '

' → logprob: -11.754131317138672

Token 136: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012579817324876785
    2. '
' → logprob: -4.387579917907715
    3. ' d' → logprob: -9.762579917907715
    4. ' 
' → logprob: -12.012579917907715
    5. '  
' → logprob: -13.762579917907715
    6. '\n' → logprob: -14.137579917907715
    7. '' → logprob: -14.262579917907715
    8. '<|end|>' → logprob: -14.387579917907715
    9. '
' → logprob: -14.512579917907715
    10. ',
' → logprob: -14.637579917907715

Token 137: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.436450636712834e-05
    2. '.' → logprob: -9.750094413757324
    3. '.y' → logprob: -10.250094413757324
    4. 'x' → logprob: -15.250094413757324
    5. ' .' → logprob: -15.500094413757324
    6. '```' → logprob: -16.125093460083008
    7. '.z' → logprob: -17.250093460083008
    8. '\.' → logprob: -17.875093460083008
    9. ' ' → logprob: -18.125093460083008
    10. '​.' → logprob: -18.750093460083008

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09051448106765747
    2. '=' → logprob: -2.4655144214630127
    3. ',' → logprob: -6.465514659881592
    4. ' ,' → logprob: -11.465514183044434
    5. ' ' → logprob: -12.340514183044434
    6. ' =
' → logprob: -13.590514183044434
    7. ' =)' → logprob: -15.090514183044434
    8. ')' → logprob: -15.215514183044434
    9. '=

' → logprob: -15.590514183044434
    10. ' ' → logprob: -16.59051513671875

Token 139: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015199800254777074
    2. ' d' → logprob: -6.501520156860352
    3. 'vals' → logprob: -11.251520156860352
    4. ' ' → logprob: -13.626520156860352
    5. 'tmp' → logprob: -13.751520156860352
    6. ' vals' → logprob: -15.001520156860352
    7. ''d' → logprob: -15.376520156860352
    8. 'b' → logprob: -15.376520156860352
    9. '	d' → logprob: -15.376520156860352
    10. 'val' → logprob: -15.751520156860352

Token 140: '.z' (ID: 9161)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0012601142516359687
    2. '.z' → logprob: -7.001260280609131
    3. 'y' → logprob: -8.251259803771973
    4. '.' → logprob: -10.251259803771973
    5. 'tmp' → logprob: -10.501259803771973
    6. ' .' → logprob: -12.251259803771973
    7. '.x' → logprob: -12.376259803771973
    8. '`.' → logprob: -12.751259803771973
    9. ''.' → logprob: -12.876259803771973
    10. ' y' → logprob: -13.501259803771973

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006376175209879875
    2. 'd' → logprob: -5.506376266479492
    3. 'tmp' → logprob: -6.131376266479492
    4. ' 
' → logprob: -9.631376266479492
    5. '
' → logprob: -10.881376266479492
    6. '  
' → logprob: -11.256376266479492
    7. ' tmp' → logprob: -12.131376266479492
    8. '\n' → logprob: -12.131376266479492
    9. '\' → logprob: -12.756376266479492
    10. '    
' → logprob: -12.881376266479492

Token 142: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07121236622333527
    2. 'tmp' → logprob: -2.8212122917175293
    3. '
' → logprob: -4.696212291717529
    4. ' tmp' → logprob: -10.946212768554688
    5. '<|end|>' → logprob: -11.196212768554688
    6. ' d' → logprob: -11.696212768554688
    7. '  
' → logprob: -12.071212768554688
    8. ' 
' → logprob: -12.321212768554688
    9. 'temp' → logprob: -12.446212768554688
    10. '$tmp' → logprob: -12.696212768554688

Token 143: '.z' (ID: 9161)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.012236728332936764
    2. '.z' → logprob: -4.512236595153809
    3. '.' → logprob: -6.887236595153809
    4. '.x' → logprob: -9.262236595153809
    5. 'y' → logprob: -9.887236595153809
    6. 'tmp' → logprob: -11.762236595153809
    7. ' .' → logprob: -12.512236595153809
    8. '```' → logprob: -12.887236595153809
    9. '.tmp' → logprob: -14.012236595153809
    10. '`.' → logprob: -14.262236595153809

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16027560830116272
    2. '=' → logprob: -1.9102755784988403
    3. ',' → logprob: -10.53527545928955
    4. 'tmp' → logprob: -11.41027545928955
    5. ' tmp' → logprob: -12.16027545928955
    6. ' ' → logprob: -12.28527545928955
    7. ',tmp' → logprob: -13.53527545928955
    8. ' =
' → logprob: -13.91027545928955
    9. '/tmp' → logprob: -14.28527545928955
    10. '[tmp' → logprob: -14.41027545928955

Token 145: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0005530327325686812
    2. ' tmp' → logprob: -7.500553131103516
    3. '	tmp' → logprob: -16.750553131103516
    4. 'temp' → logprob: -17.625553131103516
    5. '/tmp' → logprob: -18.750553131103516
    6. 'txt' → logprob: -18.875553131103516
    7. 't' → logprob: -19.000553131103516
    8. '$tmp' → logprob: -19.375553131103516
    9. ' ' → logprob: -19.625553131103516
    10. '(tmp' → logprob: -19.875553131103516

Token 146: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5407482385635376
    2. '<|end|>' → logprob: -0.9157482385635376
    3. '#' → logprob: -4.290748119354248
    4. ')' → logprob: -6.665748119354248
    5. '
' → logprob: -6.790748119354248
    6. '```' → logprob: -7.665748119354248
    7. '<|end|>' → logprob: -7.915748119354248
    8. ' print' → logprob: -8.415748596191406
    9. '\n' → logprob: -9.040748596191406
    10. '#print' → logprob: -9.040748596191406

Token 148: ' Tuple' (ID: 50841)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1875571544806007e-05
    2. ' print' → logprob: -12.375011444091797
    3. 'for' → logprob: -12.625011444091797
    4. '#' → logprob: -12.750011444091797
    5. '#print' → logprob: -14.375011444091797
    6. 'd' → logprob: -14.750011444091797
    7. 'pr' → logprob: -16.125011444091797
    8. '```' → logprob: -16.625011444091797
    9. ')' → logprob: -17.375011444091797
    10. 'prin' → logprob: -17.375011444091797

Token 149: ' unpack' (ID: 61704)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2797159254550934
    2. 'd' → logprob: -2.5297160148620605
    3. 'vals' → logprob: -2.7797160148620605
    4. '_vals' → logprob: -2.9047160148620605
    5. '=' → logprob: -4.0297160148620605
    6. 's' → logprob: -4.6547160148620605
    7. '_values' → logprob: -5.2797160148620605
    8. 'a' → logprob: -5.5297160148620605
    9. ' d' → logprob: -6.2797160148620605
    10. '_' → logprob: -6.6547160148620605

Token 150: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.03124719113111496
    2. '=' → logprob: -3.531247138977051
    3. 'd' → logprob: -7.281247138977051
    4. ' =' → logprob: -7.906247138977051
    5. ',' → logprob: -8.03124713897705
    6. 'ng' → logprob: -10.28124713897705
    7. 'ed' → logprob: -10.65624713897705
    8. '=d' → logprob: -11.15624713897705
    9. 'a' → logprob: -11.90624713897705
    10. 'x' → logprob: -12.40624713897705

Token 151: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011918948730453849
    2. ',' → logprob: -7.126192092895508
    3. 'a' → logprob: -8.626192092895508
    4. ' d' → logprob: -8.751192092895508
    5. 'tmp' → logprob: -11.126192092895508
    6. ',d' → logprob: -11.251192092895508
    7. '(d' → logprob: -11.501192092895508
    8. '_,' → logprob: -12.626192092895508
    9. ',
' → logprob: -13.376192092895508
    10. ' ,' → logprob: -13.751192092895508

Token 152: 'x' (ID: 87)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.065608562901616e-05
    2. 'a' → logprob: -10.000081062316895
    3. ' d' → logprob: -10.500081062316895
    4. '(d' → logprob: -12.375081062316895
    5. 'vals' → logprob: -13.375081062316895
    6. 'b' → logprob: -14.125081062316895
    7. 'x' → logprob: -15.000081062316895
    8. 'tmp' → logprob: -15.250081062316895
    9. 'c' → logprob: -15.625081062316895
    10. 'values' → logprob: -16.250080108642578

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005119257839396596
    2. '1' → logprob: -8.87551212310791
    3. 's' → logprob: -9.25051212310791
    4. ',y' → logprob: -9.25051212310791
    5. ' =' → logprob: -9.37551212310791
    6. ' ,' → logprob: -9.87551212310791
    7. '=' → logprob: -11.25051212310791
    8. '_,' → logprob: -11.25051212310791
    9. '_' → logprob: -12.75051212310791
    10. 'y' → logprob: -12.87551212310791

Token 154: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04048221558332443
    2. ' y' → logprob: -3.41548228263855
    3. 'd' → logprob: -5.040482044219971
    4. ' d' → logprob: -8.415482521057129
    5. 'z' → logprob: -9.165482521057129
    6. '	y' → logprob: -12.415482521057129
    7. '  ' → logprob: -12.915482521057129
    8. ' z' → logprob: -13.165482521057129
    9. ' ' → logprob: -13.665482521057129
    10. ''y' → logprob: -13.790482521057129

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013607845176011324
    2. '=' → logprob: -9.750136375427246
    3. ' =' → logprob: -10.000136375427246
    4. ' ,' → logprob: -11.000136375427246
    5. ',z' → logprob: -11.250136375427246
    6. 'z' → logprob: -13.250136375427246
    7. ' z' → logprob: -15.375136375427246
    8. ',y' → logprob: -15.375136375427246
    9. '<|end|>' → logprob: -16.62513542175293
    10. ' ' → logprob: -16.81263542175293

Token 156: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.020554613322019577
    2. ' z' → logprob: -3.895554542541504
    3. '	z' → logprob: -13.020554542541504
    4. 'x' → logprob: -13.145554542541504
    5. ' ' → logprob: -13.145554542541504
    6. '=' → logprob: -13.270554542541504
    7. ' =' → logprob: -13.520554542541504
    8. '  ' → logprob: -14.020554542541504
    9. '_z' → logprob: -14.270554542541504
    10. 'd' → logprob: -14.395554542541504

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759533643722534
    2. '=' → logprob: -0.8259533643722534
    3. ',' → logprob: -11.325953483581543
    4. ')' → logprob: -14.200953483581543
    5. '<|end|>' → logprob: -14.700953483581543
    6. ' ' → logprob: -15.575953483581543
    7. ' =
' → logprob: -15.950953483581543
    8. '>' → logprob: -16.950952529907227
    9. '=
' → logprob: -17.200952529907227
    10. '＝' → logprob: -17.200952529907227

Token 158: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07240771502256393
    2. ' d' → logprob: -2.6974077224731445
    3. 'vals' → logprob: -6.1974077224731445
    4. ' vals' → logprob: -7.9474077224731445
    5. '(d' → logprob: -10.822407722473145
    6. 'tmp' → logprob: -11.197407722473145
    7. '(vals' → logprob: -11.322407722473145
    8. ' ' → logprob: -11.447407722473145
    9. '   ' → logprob: -12.447407722473145
    10. '	d' → logprob: -12.572407722473145

Token 159: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.005968730431050062
    2. '.' → logprob: -5.1309685707092285
    3. 'x' → logprob: -10.755969047546387
    4. ' .' → logprob: -11.630969047546387
    5. '.z' → logprob: -12.630969047546387
    6. '.y' → logprob: -13.630969047546387
    7. '```' → logprob: -13.880969047546387
    8. ' ' → logprob: -14.005969047546387
    9. '._' → logprob: -14.630969047546387
    10. ' x' → logprob: -15.130969047546387

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011852304451167583
    2. ' ,' → logprob: -6.876185417175293
    3. ',d' → logprob: -9.001185417175293
    4. 'd' → logprob: -11.126185417175293
    5. ' ' → logprob: -12.751185417175293
    6. ',y' → logprob: -12.876185417175293
    7. ',
' → logprob: -13.251185417175293
    8. '',' → logprob: -13.501185417175293
    9. '<|end|>' → logprob: -14.251185417175293
    10. '",' → logprob: -14.376185417175293

Token 161: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5760214328765869
    2. 'd' → logprob: -0.8260214328765869
    3. ' ' → logprob: -9.701021194458008
    4. ' ' → logprob: -11.451021194458008
    5. '  ' → logprob: -12.951021194458008
    6. '	d' → logprob: -13.201021194458008
    7. ' 
' → logprob: -13.326021194458008
    8. '<|end|>' → logprob: -13.326021194458008
    9. '  
' → logprob: -14.201021194458008
    10. '   ' → logprob: -15.076021194458008

Token 162: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0010543649550527334
    2. '.z' → logprob: -7.251054286956787
    3. '.' → logprob: -8.001054763793945
    4. 'y' → logprob: -11.751054763793945
    5. ' .' → logprob: -14.376054763793945
    6. ''.' → logprob: -15.376054763793945
    7. '.x' → logprob: -15.876054763793945
    8. '```' → logprob: -16.126054763793945
    9. '`.' → logprob: -16.501054763793945
    10. '	y' → logprob: -17.001054763793945

Token 163: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.030713671818375587
    2. ' d' → logprob: -3.5307135581970215
    3. ',' → logprob: -7.0307135581970215
    4. ',d' → logprob: -10.15571403503418
    5. '   ' → logprob: -11.28071403503418
    6. ' ' → logprob: -11.28071403503418
    7. ' ,' → logprob: -12.15571403503418
    8. '  ' → logprob: -12.40571403503418
    9. '	d' → logprob: -13.40571403503418
    10. '```' → logprob: -14.15571403503418

Token 164: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31326398253440857
    2. 'd' → logprob: -1.313264012336731
    3. ' ' → logprob: -13.938263893127441
    4. '	d' → logprob: -14.188263893127441
    5. ' ' → logprob: -14.563263893127441
    6. '  ' → logprob: -17.063264846801758
    7. '_d' → logprob: -17.188264846801758
    8. '.d' → logprob: -17.438264846801758
    9. '   ' → logprob: -18.188264846801758
    10. '    ' → logprob: -19.063264846801758

Token 165: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -4.4849443838757e-06
    2. 'z' → logprob: -12.500004768371582
    3. '.y' → logprob: -14.625004768371582
    4. '.' → logprob: -16.000003814697266
    5. '.x' → logprob: -16.625003814697266
    6. ' .' → logprob: -19.375003814697266
    7. 'Z' → logprob: -19.875003814697266
    8. '	z' → logprob: -20.000003814697266
    9. ''z' → logprob: -20.125003814697266
    10. ' z' → logprob: -20.875003814697266

Token 166: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00010521204239921644
    2. '#' → logprob: -9.625104904174805
    3. ' print' → logprob: -11.250104904174805
    4. '```' → logprob: -11.625104904174805
    5. '<|end|>' → logprob: -11.875104904174805
    6. '
' → logprob: -12.625104904174805
    7. '#print' → logprob: -12.625104904174805
    8. 'x' → logprob: -13.000104904174805
    9. '(print' → logprob: -14.875104904174805
    10. 'for' → logprob: -15.625104904174805

Token 168: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16111743450164795
    2. '(' → logprob: -1.911117434501648
    3. '(f' → logprob: -7.6611175537109375
    4. '((' → logprob: -7.7861175537109375
    5. '()' → logprob: -13.661117553710938
    6. '(
' → logprob: -13.786117553710938
    7. '('' → logprob: -13.911117553710938
    8. '(a' → logprob: -13.911117553710938
    9. '("("' → logprob: -13.911117553710938
    10. '(s' → logprob: -14.661117553710938

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009030037908814847
    2. ')' → logprob: -7.250903129577637
    3. ' ,' → logprob: -8.875903129577637
    4. ',y' → logprob: -10.125903129577637
    5. ',)' → logprob: -11.875903129577637
    6. ' ' → logprob: -13.125903129577637
    7. ',end' → logprob: -14.000903129577637
    8. ',,' → logprob: -14.625903129577637
    9. ',",' → logprob: -14.750903129577637
    10. ',
' → logprob: -14.875903129577637

Token 170: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048882268369198
    2. ' y' → logprob: -4.511048793792725
    3. ''y' → logprob: -14.136049270629883
    4. '"' → logprob: -15.761049270629883
    5. ''' → logprob: -16.386049270629883
    6. ' ' → logprob: -16.886049270629883
    7. ' ' → logprob: -16.886049270629883
    8. '    ' → logprob: -17.636049270629883
    9. '	y' → logprob: -17.636049270629883
    10. '  ' → logprob: -17.761049270629883

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ')' → logprob: -12.750016212463379
    4. ',z' → logprob: -15.375016212463379
    5. 'z' → logprob: -17.625017166137695
    6. ' z' → logprob: -19.125017166137695
    7. '```' → logprob: -19.500017166137695
    8. ',
' → logprob: -19.500017166137695
    9. ' ' → logprob: -19.750017166137695
    10. ',y' → logprob: -20.375017166137695

Token 172: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00861468818038702
    2. ' z' → logprob: -4.758614540100098
    3. '	z' → logprob: -17.008615493774414
    4. ''z' → logprob: -17.383615493774414
    5. 'x' → logprob: -18.133615493774414
    6. ' ' → logprob: -19.133615493774414
    7. ')' → logprob: -19.633615493774414
    8. '_z' → logprob: -20.133615493774414
    9. ' ' → logprob: -20.633615493774414
    10. '.z' → logprob: -20.633615493774414

Token 173: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.375
    3. '))' → logprob: -17.625
    4. ')`' → logprob: -18.5
    5. ')
' → logprob: -19.25
    6. '')' → logprob: -20.25
    7. '),' → logprob: -20.25
    8. ')}' → logprob: -20.75
    9. ')#' → logprob: -20.75
    10. ').' → logprob: -21.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 171
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 40.94%
Précision adaptée (1ère position): 40.94%
Précision (top 10): 76.61%
================================================================================
