================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n,p = map(int,input().split())
s = list(map(int, list(input())))

def solve():
    if p in [2,5]:
        ret = 0
        for i in range(n):
            lsd = s[n-1-i]
            if lsd % p == 0: ret += n - i
        return ret

    ten = 1
    cnt = [0]*p
    r = 0
    cnt[r] += 1
    for i in range(n):
        msd = s[n-1-i]
        r = (msd * ten + r) % p
        ten = ten * 10 % p
        cnt[r] += 1

    ret = 0
    for r in range(p):
        ret += cnt[r] * (cnt[r] - 1) // 2
    return ret

print(solve())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',p' (ID: 14835)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4790441989898682
    2. '0' → logprob: -1.6040441989898682
    3. 'map' → logprob: -1.7290441989898682
    4. ' map' → logprob: -1.7290441989898682
    5. ' n' → logprob: -2.229044198989868
    6. ' np' → logprob: -3.729044198989868
    7. ' input' → logprob: -3.854044198989868
    8. 'input' → logprob: -3.854044198989868
    9. '10' → logprob: -4.354043960571289
    10. 'n' → logprob: -4.604043960571289

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008898298256099224
    2. '(int' → logprob: -5.6338982582092285
    3. '(lambda' → logprob: -6.3838982582092285
    4. '<|end|>' → logprob: -6.3838982582092285
    5. '(str' → logprob: -7.1338982582092285
    6. ')' → logprob: -8.633898735046387
    7. '```' → logprob: -8.883898735046387
    8. '(user' → logprob: -8.883898735046387
    9. '(n' → logprob: -9.633898735046387
    10. '<|end|>' → logprob: -9.633898735046387

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0650801807641983
    2. '(' → logprob: -3.190080165863037
    3. ')' → logprob: -3.940080165863037
    4. 'input' → logprob: -7.440080165863037
    5. '(str' → logprob: -7.940080165863037
    6. '```' → logprob: -7.940080165863037
    7. '(int' → logprob: -8.565080642700195
    8. '`)' → logprob: -8.940080642700195
    9. '(user' → logprob: -9.190080642700195
    10. '(raw' → logprob: -9.315080642700195

Token 6: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4767996668815613
    2. '().' → logprob: -1.851799726486206
    3. '(' → logprob: -2.101799726486206
    4. '())' → logprob: -2.851799726486206
    5. '('' → logprob: -3.976799726486206
    6. ')' → logprob: -5.226799488067627
    7. '`()' → logprob: -6.226799488067627
    8. '("")' → logprob: -6.351799488067627
    9. '()>' → logprob: -6.476799488067627
    10. '(()' → logprob: -6.726799488067627

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001029471677611582
    2. 'strip' → logprob: -9.250102996826172
    3. ')' → logprob: -12.625102996826172
    4. ' split' → logprob: -13.125102996826172
    5. '(split' → logprob: -14.250102996826172
    6. 'rstrip' → logprob: -14.375102996826172
    7. 'spl' → logprob: -15.250102996826172
    8. 'replace' → logprob: -17.000102996826172
    9. 'read' → logprob: -18.000102996826172
    10. 'startswith' → logprob: -18.250102996826172

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035507739521563053
    2. '())' → logprob: -6.128551006317139
    3. '))' → logprob: -7.503551006317139
    4. '(' → logprob: -7.503551006317139
    5. '`)' → logprob: -8.75355052947998
    6. '()' → logprob: -9.75355052947998
    7. '')' → logprob: -10.87855052947998
    8. ' )' → logprob: -12.25355052947998
    9. ')`' → logprob: -12.25355052947998
    10. '('' → logprob: -13.25355052947998

Token 9: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4291425347328186
    2. 'for' → logprob: -1.5541424751281738
    3. '\n' → logprob: -2.929142475128174
    4. '
' → logprob: -4.054142475128174
    5. 'x' → logprob: -4.554142475128174
    6. '```' → logprob: -5.054142475128174
    7. '`' → logprob: -5.179142475128174
    8. '#' → logprob: -5.429142475128174
    9. 'if' → logprob: -5.554142475128174
    10. 's' → logprob: -5.554142475128174

Token 10: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5085132718086243
    2. '.' → logprob: -1.6335132122039795
    3. '=' → logprob: -1.7585132122039795
    4. ' =' → logprob: -4.258513450622559
    5. '[i' → logprob: -5.758513450622559
    6. 'um' → logprob: -5.758513450622559
    7. '[:]' → logprob: -5.883513450622559
    8. '_' → logprob: -7.258513450622559
    9. '[:' → logprob: -7.258513450622559
    10. '\[' → logprob: -7.508513450622559

Token 11: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04636479541659355
    2. ' input' → logprob: -3.1713647842407227
    3. '""' → logprob: -6.671364784240723
    4. 'list' → logprob: -7.171364784240723
    5. '''' → logprob: -7.921364784240723
    6. '"' → logprob: -8.171364784240723
    7. ''' → logprob: -8.671364784240723
    8. '[input' → logprob: -9.046364784240723
    9. '[]' → logprob: -9.296364784240723
    10. ' ' → logprob: -9.671364784240723

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01894953101873398
    2. '(s' → logprob: -4.393949508666992
    3. '(input' → logprob: -5.518949508666992
    4. '(str' → logprob: -6.768949508666992
    5. '()' → logprob: -8.268949508666992
    6. '("("' → logprob: -8.893949508666992
    7. '((' → logprob: -9.018949508666992
    8. '(range' → logprob: -9.143949508666992
    9. '(int' → logprob: -9.143949508666992
    10. '('' → logprob: -9.268949508666992

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014491601614281535
    2. '(' → logprob: -7.126449108123779
    3. 'int' → logprob: -8.001449584960938
    4. '<int' → logprob: -9.001449584960938
    5. '[int' → logprob: -9.626449584960938
    6. '=int' → logprob: -10.126449584960938
    7. '(input' → logprob: -10.626449584960938
    8. '```' → logprob: -11.126449584960938
    9. '(str' → logprob: -11.376449584960938
    10. ',int' → logprob: -11.751449584960938

Token 14: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0068507008254528046
    2. ',input' → logprob: -5.631850719451904
    3. '(' → logprob: -5.756850719451904
    4. ' (' → logprob: -11.131850242614746
    5. '(int' → logprob: -11.381850242614746
    6. '=input' → logprob: -11.506850242614746
    7. ',' → logprob: -11.506850242614746
    8. ')' → logprob: -11.881850242614746
    9. 'input' → logprob: -12.131850242614746
    10. '```' → logprob: -12.256850242614746

Token 15: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00030197695014066994
    2. ' input' → logprob: -8.1253023147583
    3. '(input' → logprob: -12.6253023147583
    4. 'list' → logprob: -13.6253023147583
    5. ',input' → logprob: -14.0003023147583
    6. ')' → logprob: -15.6253023147583
    7. '=input' → logprob: -16.000301361083984
    8. 's' → logprob: -16.125301361083984
    9. '<input' → logprob: -16.750301361083984
    10. '[input' → logprob: -16.750301361083984

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003445216570980847
    2. '(' → logprob: -8.000344276428223
    3. 'input' → logprob: -12.375344276428223
    4. '(str' → logprob: -13.000344276428223
    5. '(s' → logprob: -13.625344276428223
    6. ' (' → logprob: -14.375344276428223
    7. '```' → logprob: -15.250344276428223
    8. '=input' → logprob: -16.00034523010254
    9. ',input' → logprob: -16.12534523010254
    10. ' input' → logprob: -16.50034523010254

Token 17: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.24110564589500427
    2. '()' → logprob: -1.8661056756973267
    3. '())' → logprob: -3.116105556488037
    4. '()))' → logprob: -4.241105556488037
    5. '().' → logprob: -7.991105556488037
    6. '()));' → logprob: -8.741106033325195
    7. '()>' → logprob: -9.991106033325195
    8. '`()' → logprob: -10.366106033325195
    9. '()`' → logprob: -10.616106033325195
    10. ')))' → logprob: -10.741106033325195

Token 18: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20235371589660645
    2. '))' → logprob: -1.7023537158966064
    3. '[' → logprob: -7.702353477478027
    4. ')))' → logprob: -8.202353477478027
    5. '`)' → logprob: -8.827353477478027
    6. ')`' → logprob: -11.577353477478027
    7. ')
' → logprob: -11.827353477478027
    8. '`' → logprob: -12.077353477478027
    9. '))
' → logprob: -12.077353477478027
    10. '])' → logprob: -12.452353477478027

Token 19: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5248523950576782
    2. 'for' → logprob: -1.8998523950576782
    3. '[' → logprob: -2.2748522758483887
    4. '
' → logprob: -3.3998522758483887
    5. ':' → logprob: -4.149852275848389
    6. '+' → logprob: -4.399852275848389
    7. '```' → logprob: -4.774852275848389
    8. 'p' → logprob: -4.774852275848389
    9. '\n' → logprob: -5.024852275848389
    10. '_' → logprob: -5.149852275848389

Token 20: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2875370979309082
    2. ' f' → logprob: -1.5375370979309082
    3. ' count' → logprob: -1.6625370979309082
    4. ' solve' → logprob: -2.162537097930908
    5. ' p' → logprob: -2.412537097930908
    6. ' process' → logprob: -4.287537097930908
    7. ' check' → logprob: -4.287537097930908
    8. ' a' → logprob: -4.537537097930908
    9. ' solution' → logprob: -4.537537097930908
    10. ' binary' → logprob: -5.412537097930908

Token 21: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016368528828024864
    2. '_' → logprob: -4.641368389129639
    3. '(n' → logprob: -5.766368389129639
    4. '(p' → logprob: -6.141368389129639
    5. '(s' → logprob: -7.766368389129639
    6. '():' → logprob: -8.516368865966797
    7. '(_' → logprob: -9.016368865966797
    8. '(:' → logprob: -9.641368865966797
    9. '(a' → logprob: -10.016368865966797
    10. ':' → logprob: -10.016368865966797

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28732120990753174
    2. '\n' → logprob: -2.912321090698242
    3. '\' → logprob: -3.162321090698242
    4. '    ' → logprob: -3.162321090698242
    5. ' ' → logprob: -4.037321090698242
    6. '<|end|>' → logprob: -4.162321090698242
    7. 'n' → logprob: -4.287321090698242
    8. '
' → logprob: -4.412321090698242
    9. '```' → logprob: -4.412321090698242
    10. '\t' → logprob: -4.912321090698242

Token 23: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.7368401288986206
    2. ' result' → logprob: -2.36184024810791
    3. '   ' → logprob: -2.73684024810791
    4. 'for' → logprob: -2.98684024810791
    5. ' dp' → logprob: -3.11184024810791
    6. ' res' → logprob: -3.23684024810791
    7. ' max' → logprob: -3.36184024810791
    8. ' ans' → logprob: -3.36184024810791
    9. 'dp' → logprob: -3.36184024810791
    10. 'c' → logprob: -3.61184024810791

Token 24: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5419713854789734
    2. ' n' → logprob: -1.1669714450836182
    3. ' s' → logprob: -2.791971445083618
    4. 'p' → logprob: -4.041971206665039
    5. ' ' → logprob: -4.541971206665039
    6. 'n' → logprob: -4.666971206665039
    7. ' len' → logprob: -5.416971206665039
    8. 's' → logprob: -5.916971206665039
    9. ' not' → logprob: -7.541971206665039
    10. 'len' → logprob: -8.666971206665039

Token 25: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.237473487854004
    2. ' >' → logprob: -1.487473487854004
    3. '==' → logprob: -1.612473487854004
    4. '>' → logprob: -1.987473487854004
    5. '%' → logprob: -2.862473487854004
    6. ' <=' → logprob: -2.987473487854004
    7. ' %' → logprob: -3.862473487854004
    8. '<=' → logprob: -4.237473487854004
    9. ' <' → logprob: -6.737473487854004
    10. ' >=' → logprob: -7.112473487854004

Token 26: ' [' (ID: 723)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12709157168865204
    2. ' s' → logprob: -2.127091646194458
    3. 'n' → logprob: -10.002091407775879
    4. '   ' → logprob: -10.127091407775879
    5. '[' → logprob: -10.752091407775879
    6. ' ' → logprob: -11.127091407775879
    7. ' n' → logprob: -11.377091407775879
    8. '[s' → logprob: -12.252091407775879
    9. 'range' → logprob: -12.502091407775879
    10. ' [' → logprob: -12.502091407775879

Token 27: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5640375018119812
    2. '[' → logprob: -1.064037561416626
    3. '{' → logprob: -2.814037561416626
    4. '(' → logprob: -4.189037322998047
    5. 'range' → logprob: -5.064037322998047
    6. '{s' → logprob: -5.814037322998047
    7. '[s' → logprob: -7.939037322998047
    8. 'list' → logprob: -8.189037322998047
    9. 'set' → logprob: -8.814037322998047
    10. ' s' → logprob: -8.939037322998047

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008042682893574238
    2. ' ,' → logprob: -7.625804424285889
    3. ']:' → logprob: -9.00080394744873
    4. ']' → logprob: -9.50080394744873
    5. '6' → logprob: -10.50080394744873
    6. '4' → logprob: -11.00080394744873
    7. ' ' → logprob: -11.37580394744873
    8. '7' → logprob: -11.87580394744873
    9. ',p' → logprob: -11.87580394744873
    10. ',n' → logprob: -11.87580394744873

Token 29: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5271091461181641
    2. ' ' → logprob: -0.9021091461181641
    3. '4' → logprob: -5.652109146118164
    4. '3' → logprob: -7.902109146118164
    5. '   ' → logprob: -10.777109146118164
    6. '  ' → logprob: -11.152109146118164
    7. '10' → logprob: -11.527109146118164
    8. '1' → logprob: -11.964609146118164
    9. ' ' → logprob: -12.027109146118164
    10. '8' → logprob: -12.027109146118164

Token 30: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004381467122584581
    2. ']:
' → logprob: -5.7543816566467285
    3. ']' → logprob: -7.1293816566467285
    4. ' ]' → logprob: -8.00438117980957
    5. ']:
' → logprob: -10.00438117980957
    6. ':' → logprob: -11.87938117980957
    7. ',' → logprob: -12.00438117980957
    8. '):' → logprob: -12.62938117980957
    9. ']:

' → logprob: -13.37938117980957
    10. '   ' → logprob: -13.87938117980957

Token 31: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5600172281265259
    2. '       ' → logprob: -0.9350172281265259
    3. '   ' → logprob: -3.5600171089172363
    4. ':
' → logprob: -5.935017108917236
    5. ' :' → logprob: -6.435017108917236
    6. ':return' → logprob: -6.685017108917236
    7. '):' → logprob: -7.310017108917236
    8. '<|end|>' → logprob: -8.185017585754395
    9. ' ' → logprob: -8.435017585754395
    10. '    ' → logprob: -8.685017585754395

Token 32: ' ret' (ID: 2881)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8335283398628235
    2. '
' → logprob: -1.2085282802581787
    3. '   ' → logprob: -2.2085282802581787
    4. '       ' → logprob: -3.0835282802581787
    5. 'for' → logprob: -3.3335282802581787
    6. ' return' → logprob: -3.5835282802581787
    7. ' 
' → logprob: -4.208528518676758
    8. ' print' → logprob: -5.083528518676758
    9. 'return' → logprob: -5.208528518676758
    10. 'print' → logprob: -5.458528518676758

Token 33: ' =' (ID: 314)
  Prédit: 'urn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urn' → logprob: -0.0009845776949077845
    2. 'u' → logprob: -7.3759846687316895
    3. ' =' → logprob: -8.250984191894531
    4. '=' → logprob: -10.000984191894531
    5. 'ur' → logprob: -10.125984191894531
    6. 'urning' → logprob: -12.500984191894531
    7. '   ' → logprob: -13.375984191894531
    8. ' urn' → logprob: -13.750984191894531
    9. ' ' → logprob: -14.000984191894531
    10. 'turn' → logprob: -14.500984191894531

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48359814286231995
    2. 'sum' → logprob: -1.1085981130599976
    3. '[' → logprob: -4.108598232269287
    4. '[s' → logprob: -4.733598232269287
    5. ' sum' → logprob: -4.858598232269287
    6. 'len' → logprob: -5.108598232269287
    7. ' ' → logprob: -5.858598232269287
    8. '[n' → logprob: -5.858598232269287
    9. 's' → logprob: -6.108598232269287
    10. '[]' → logprob: -6.233598232269287

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.41689395904541016
    2. 'sum' → logprob: -1.1668939590454102
    3. 'len' → logprob: -4.54189395904541
    4. 's' → logprob: -4.54189395904541
    5. '[s' → logprob: -5.54189395904541
    6. '[' → logprob: -6.79189395904541
    7. 'n' → logprob: -7.04189395904541
    8. '[n' → logprob: -7.29189395904541
    9. '[len' → logprob: -8.16689395904541
    10. ' sum' → logprob: -8.29189395904541

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9089763760566711
    2. '<|end|>' → logprob: -1.4089763164520264
    3. ' for' → logprob: -1.5339763164520264
    4. '   ' → logprob: -2.6589763164520264
    5. '       ' → logprob: -3.6589763164520264
    6. ' ' → logprob: -4.5339765548706055
    7. 'for' → logprob: -4.5339765548706055
    8. '' → logprob: -5.7839765548706055
    9. '	for' → logprob: -5.7839765548706055
    10. '<|end|>' → logprob: -5.9089765548706055

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10110479593276978
    2. '   ' → logprob: -2.976104736328125
    3. '<|end|>' → logprob: -3.476104736328125
    4. ' for' → logprob: -5.101104736328125
    5. '
' → logprob: -5.101104736328125
    6. ' ' → logprob: -6.851104736328125
    7. '<|end|>' → logprob: -8.226104736328125
    8. '        
' → logprob: -8.976104736328125
    9. '    
' → logprob: -9.601104736328125
    10. '    ' → logprob: -9.726104736328125

Token 38: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04424034431576729
    2. ' for' → logprob: -3.1692402362823486
    3. '
' → logprob: -7.669240474700928
    4. '	for' → logprob: -8.04423999786377
    5. '   ' → logprob: -8.29423999786377
    6. '       ' → logprob: -8.79423999786377
    7. '```' → logprob: -11.29423999786377
    8. ' ' → logprob: -11.54423999786377
    9. '    
' → logprob: -12.04423999786377
    10. '    ' → logprob: -12.41923999786377

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23102952539920807
    2. 'i' → logprob: -1.6060295104980469
    3. ' s' → logprob: -5.606029510498047
    4. ' range' → logprob: -6.606029510498047
    5. 's' → logprob: -7.606029510498047
    6. 'range' → logprob: -10.356029510498047
    7. ' ' → logprob: -10.856029510498047
    8. '	i' → logprob: -12.231029510498047
    9. ' idx' → logprob: -12.856029510498047
    10. '_i' → logprob: -13.356029510498047

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07119526714086533
    2. 'in' → logprob: -2.696195363998413
    3. ',' → logprob: -7.071195125579834
    4. 'range' → logprob: -8.446195602416992
    5. ' range' → logprob: -9.446195602416992
    6. ' ' → logprob: -9.571195602416992
    7. ' ,' → logprob: -11.446195602416992
    8. '   ' → logprob: -11.946195602416992
    9. 's' → logprob: -12.321195602416992
    10. ',n' → logprob: -12.321195602416992

Token 41: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519325315952301
    2. ' range' → logprob: -1.5019325017929077
    3. '	range' → logprob: -13.501932144165039
    4. 's' → logprob: -14.126932144165039
    5. '(range' → logprob: -14.501932144165039
    6. ' ' → logprob: -15.626932144165039
    7. ' xrange' → logprob: -16.00193214416504
    8. '

' → logprob: -16.25193214416504
    9. 'rang' → logprob: -16.50193214416504
    10. 'n' → logprob: -16.50193214416504

Token 42: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009992756880819798
    2. '(len' → logprob: -4.634992599487305
    3. '(' → logprob: -8.384992599487305
    4. 'n' → logprob: -12.509992599487305
    5. 'len' → logprob: -13.259992599487305
    6. '   ' → logprob: -14.384992599487305
    7. '(s' → logprob: -14.634992599487305
    8. '(p' → logprob: -15.009992599487305
    9. ' ' → logprob: -15.134992599487305
    10. ' (' → logprob: -15.384992599487305

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.27661776542663574
    2. '-' → logprob: -1.5266177654266357
    3. '):
' → logprob: -3.7766177654266357
    4. '):
' → logprob: -7.026618003845215
    5. ' -' → logprob: -8.026618003845215
    6. '   ' → logprob: -9.651618003845215
    7. ')' → logprob: -9.776618003845215
    8. ' ' → logprob: -10.026618003845215
    9. ' ):' → logprob: -10.276618003845215
    10. '       ' → logprob: -10.776618003845215

Token 44: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012606780976057053
    2. ' ' → logprob: -5.137606620788574
    3. ' if' → logprob: -5.512606620788574
    4. '               ' → logprob: -7.012606620788574
    5. ',' → logprob: -8.012606620788574
    6. '	       ' → logprob: -8.262606620788574
    7. '<|end|>' → logprob: -8.512606620788574
    8. '          ' → logprob: -8.637606620788574
    9. ':' → logprob: -9.137606620788574
    10. '            
' → logprob: -9.512606620788574

Token 45: ' l' (ID: 305)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3047598600387573
    2. '           ' → logprob: -1.4297598600387573
    3. ' if' → logprob: -3.929759979248047
    4. 'if' → logprob: -6.929759979248047
    5. '              ' → logprob: -7.304759979248047
    6. ' ' → logprob: -7.429759979248047
    7. '   ' → logprob: -8.179759979248047
    8. '          ' → logprob: -8.554759979248047
    9. '	           ' → logprob: -8.804759979248047
    10. '       ' → logprob: -8.929759979248047

Token 46: 'sd' (ID: 19879)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23014718294143677
    2. '=' → logprob: -2.355147123336792
    3. '   ' → logprob: -3.605147123336792
    4. '=len' → logprob: -3.855147123336792
    5. '=i' → logprob: -4.230147361755371
    6. 'en' → logprob: -4.230147361755371
    7. 'ist' → logprob: -4.980147361755371
    8. 'f' → logprob: -5.605147361755371
    9. 'i' → logprob: -5.605147361755371
    10. 'n' → logprob: -5.855147361755371

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4763462543487549
    2. '=' → logprob: -0.9763462543487549
    3. '=s' → logprob: -6.101346015930176
    4. 's' → logprob: -11.476346015930176
    5. '=int' → logprob: -12.101346015930176
    6. '＝' → logprob: -13.226346015930176
    7. ' ' → logprob: -13.351346015930176
    8. ']' → logprob: -14.226346015930176
    9. '=d' → logprob: -14.226346015930176
    10. 'f' → logprob: -14.476346015930176

Token 48: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20141811668872833
    2. ' s' → logprob: -1.701418161392212
    3. '	s' → logprob: -12.701417922973633
    4. ' ' → logprob: -14.701417922973633
    5. '_s' → logprob: -14.826417922973633
    6. '(s' → logprob: -15.076417922973633
    7. 'int' → logprob: -15.451417922973633
    8. '   ' → logprob: -15.576417922973633
    9. '`s' → logprob: -16.576417922973633
    10. '10' → logprob: -17.451417922973633

Token 49: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.387458365177736e-05
    2. '[-' → logprob: -9.625083923339844
    3. '[' → logprob: -11.750083923339844
    4. '[n' → logprob: -11.875083923339844
    5. 'i' → logprob: -13.375083923339844
    6. ' [' → logprob: -14.500083923339844
    7. '[
' → logprob: -15.375083923339844
    8. '[len' → logprob: -15.750083923339844
    9. '```' → logprob: -15.750083923339844
    10. '-i' → logprob: -16.875083923339844

Token 50: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05418161302804947
    2. ' -' → logprob: -3.3041815757751465
    3. '1' → logprob: -4.6791815757751465
    4. 'i' → logprob: -5.6791815757751465
    5. '-i' → logprob: -5.8041815757751465
    6. '[i' → logprob: -9.179182052612305
    7. ' ' → logprob: -9.679182052612305
    8. ']' → logprob: -9.929182052612305
    9. ' i' → logprob: -10.554182052612305
    10. ']-' → logprob: -11.304182052612305

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07893561571836472
    2. 'i' → logprob: -2.5789356231689453
    3. ' ' → logprob: -10.828935623168945
    4. ' i' → logprob: -11.203935623168945
    5. '-' → logprob: -12.453935623168945
    6. '(i' → logprob: -12.953935623168945
    7. '(' → logprob: -13.328935623168945
    8. '   ' → logprob: -14.328935623168945
    9. '

' → logprob: -14.766435623168945
    10. '	i' → logprob: -14.828935623168945

Token 52: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.27445563673973083
    2. ' -' → logprob: -1.5244556665420532
    3. '-' → logprob: -4.399455547332764
    4. ']' → logprob: -4.899455547332764
    5. '[i' → logprob: -7.024455547332764
    6. ']-' → logprob: -7.774455547332764
    7. 'i' → logprob: -8.149456024169922
    8. '][' → logprob: -9.024456024169922
    9. '+i' → logprob: -9.024456024169922
    10. ' i' → logprob: -9.024456024169922

Token 53: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007788925431668758
    2. ']
' → logprob: -8.000779151916504
    3. ' ]' → logprob: -8.250779151916504
    4. ']%' → logprob: -8.750779151916504
    5. ']

' → logprob: -12.000779151916504
    6. '])' → logprob: -12.125779151916504
    7. ']
' → logprob: -12.875779151916504
    8. ']*' → logprob: -13.000779151916504
    9. '`]' → logprob: -13.875779151916504
    10. ']]' → logprob: -14.125779151916504

Token 54: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.014266341924667358
    2. ' %' → logprob: -4.514266490936279
    3. ']' → logprob: -6.764266490936279
    4. ']%' → logprob: -7.514266490936279
    5. '
' → logprob: -7.764266490936279
    6. '%n' → logprob: -8.764266014099121
    7. ' if' → logprob: -8.764266014099121
    8. '```' → logprob: -9.014266014099121
    9. '%
' → logprob: -9.264266014099121
    10. '+' → logprob: -9.264266014099121

Token 55: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11511796712875366
    2. '%' → logprob: -2.4901180267333984
    3. ' if' → logprob: -3.9901180267333984
    4. ' %=' → logprob: -6.365118026733398
    5. 'f' → logprob: -6.740118026733398
    6. '=' → logprob: -6.865118026733398
    7. '           ' → logprob: -7.740118026733398
    8. ' =' → logprob: -7.740118026733398
    9. ' ' → logprob: -8.240118026733398
    10. '          ' → logprob: -8.490118026733398

Token 56: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.004947916604578495
    2. 'l' → logprob: -5.629948139190674
    3. 'ls' → logprob: -7.379948139190674
    4. ' (' → logprob: -7.754948139190674
    5. '%' → logprob: -9.629947662353516
    6. '(' → logprob: -9.754947662353516
    7. '0' → logprob: -9.879947662353516
    8. '(ls' → logprob: -10.129947662353516
    9. 'ld' → logprob: -10.504947662353516
    10. ' ' → logprob: -10.754947662353516

Token 57: 'sd' (ID: 19879)
  Prédit: 'sd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sd' → logprob: -0.00042114028474316
    2. 's' → logprob: -7.875421047210693
    3. '%' → logprob: -10.625421524047852
    4. 'st' → logprob: -12.375421524047852
    5. '%d' → logprob: -12.875421524047852
    6. 'ast' → logprob: -13.000421524047852
    7. 'd' → logprob: -13.750421524047852
    8. ' sd' → logprob: -13.875421524047852
    9. 'l' → logprob: -14.000421524047852
    10. '   ' → logprob: -14.375421524047852

Token 58: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.016285261139273643
    2. ' %' → logprob: -4.141285419464111
    3. '%n' → logprob: -9.641284942626953
    4. '%e' → logprob: -9.641284942626953
    5. '%i' → logprob: -9.641284942626953
    6. '%x' → logprob: -10.891284942626953
    7. '%c' → logprob: -11.266284942626953
    8. '==' → logprob: -11.891284942626953
    9. '%s' → logprob: -12.266284942626953
    10. '%d' → logprob: -12.516284942626953

Token 59: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000916935910936445
    2. ' p' → logprob: -7.000916957855225
    3. '2' → logprob: -12.375916481018066
    4. ' ' → logprob: -14.500916481018066
    5. '	p' → logprob: -14.750916481018066
    6. '<p' → logprob: -15.625916481018066
    7. '  ' → logprob: -17.000917434692383
    8. '(p' → logprob: -17.000917434692383
    9. '10' → logprob: -17.500917434692383
    10. '   ' → logprob: -17.750917434692383

Token 60: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0005132370279170573
    2. ' ==' → logprob: -7.625513076782227
    3. '=' → logprob: -11.000513076782227
    4. '0' → logprob: -12.750513076782227
    5. '==
' → logprob: -12.750513076782227
    6. '===' → logprob: -13.750513076782227
    7. ']==' → logprob: -14.125513076782227
    8. '```' → logprob: -15.000513076782227
    9. ')==' → logprob: -15.125513076782227
    10. '()==' → logprob: -16.000513076782227

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '=' → logprob: -16.750295639038086
    4. '==' → logprob: -17.000295639038086
    5. '  ' → logprob: -17.375295639038086
    6. '۰' → logprob: -17.625295639038086
    7. '   ' → logprob: -17.875295639038086
    8. '<|end|>' → logprob: -18.250295639038086
    9. '```' → logprob: -18.312795639038086
    10. ' ' → logprob: -19.062795639038086

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.250036239624023
    3. '۰' → logprob: -15.375036239624023
    4. '<|end|>' → logprob: -16.000036239624023
    5. '```' → logprob: -17.125036239624023
    6. '০' → logprob: -17.250036239624023
    7. '０' → logprob: -17.312536239624023
    8. '०' → logprob: -17.687536239624023
    9. '٠' → logprob: -18.000036239624023
    10. '=' → logprob: -18.062536239624023

Token 63: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009176280349493027
    2. ':
' → logprob: -4.759176254272461
    3. '               ' → logprob: -8.009176254272461
    4. '           ' → logprob: -8.634176254272461
    5. ':return' → logprob: -10.884176254272461
    6. ' :' → logprob: -12.009176254272461
    7. ':

' → logprob: -12.134176254272461
    8. '              ' → logprob: -12.259176254272461
    9. ',' → logprob: -12.634176254272461
    10. '):' → logprob: -12.759176254272461

Token 64: ' ret' (ID: 2881)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33201953768730164
    2. ' ' → logprob: -1.957019567489624
    3. '1' → logprob: -2.332019567489624
    4. '
' → logprob: -4.332019329071045
    5. '<|end|>' → logprob: -4.707019329071045
    6. '           ' → logprob: -4.832019329071045
    7. ' ret' → logprob: -5.457019329071045
    8. '              ' → logprob: -6.332019329071045
    9. ' 
' → logprob: -6.332019329071045
    10. '```' → logprob: -7.332019329071045

Token 65: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3545165956020355
    2. ' +=' → logprob: -1.604516625404358
    3. '+=' → logprob: -2.3545165061950684
    4. ' +' → logprob: -6.229516506195068
    5. ' ' → logprob: -7.729516506195068
    6. '=' → logprob: -9.354516983032227
    7. ' =' → logprob: -10.479516983032227
    8. '++' → logprob: -11.854516983032227
    9. ']+=' → logprob: -12.354516983032227
    10. '+='' → logprob: -12.604516983032227

Token 66: ' n' (ID: 297)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.449573814868927
    2. 'i' → logprob: -1.4495737552642822
    3. 'n' → logprob: -2.9495737552642822
    4. ' i' → logprob: -3.0745737552642822
    5. ' n' → logprob: -4.074573993682861
    6. ' ' → logprob: -4.574573993682861
    7. ' (' → logprob: -7.699573993682861
    8. '(i' → logprob: -7.699573993682861
    9. '(' → logprob: -8.324573516845703
    10. 'l' → logprob: -9.199573516845703

Token 67: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.5240386128425598
    2. '-' → logprob: -1.024038553237915
    3. ' -' → logprob: -3.024038553237915
    4. '-n' → logprob: -10.774038314819336
    5. ' ' → logprob: -11.399038314819336
    6. '-end' → logprob: -11.649038314819336
    7. '-u' → logprob: -11.649038314819336
    8. '-ip' → logprob: -11.774038314819336
    9. '-t' → logprob: -11.899038314819336
    10. 'i' → logprob: -11.899038314819336

Token 68: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5282692313194275
    2. 'i' → logprob: -0.9032692313194275
    3. ' i' → logprob: -5.403269290924072
    4. ' ' → logprob: -8.028268814086914
    5. '	i' → logprob: -9.278268814086914
    6. '(i' → logprob: -9.528268814086914
    7. '(' → logprob: -10.528268814086914
    8. '-i' → logprob: -10.528268814086914
    9. ' (' → logprob: -10.653268814086914
    10. '   ' → logprob: -11.715768814086914

Token 69: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.948988676071167
    2. '1' → logprob: -1.948988676071167
    3. '\n' → logprob: -1.948988676071167
    4. '+' → logprob: -2.198988676071167
    5. '   ' → logprob: -2.948988676071167
    6. 'print' → logprob: -3.698988676071167
    7. '       ' → logprob: -3.698988676071167
    8. ' return' → logprob: -3.948988676071167
    9. '```' → logprob: -3.948988676071167
    10. 'else' → logprob: -4.323988914489746

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9939322471618652
    2. 'return' → logprob: -1.1189322471618652
    3. '   ' → logprob: -1.6189322471618652
    4. ' return' → logprob: -2.3689322471618652
    5. '	return' → logprob: -5.618932247161865
    6. 'else' → logprob: -5.868932247161865
    7. ' else' → logprob: -6.118932247161865
    8. '           ' → logprob: -6.368932247161865
    9. ' ' → logprob: -7.993932247161865
    10. '```' → logprob: -8.493932723999023

Token 71: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11993299424648285
    2. '   ' → logprob: -3.1199328899383545
    3. ' return' → logprob: -3.1199328899383545
    4. '	return' → logprob: -3.9949328899383545
    5. '       ' → logprob: -5.494933128356934
    6. ':return' → logprob: -6.744933128356934
    7. ' ' → logprob: -7.994933128356934
    8. '           ' → logprob: -8.619933128356934
    9. '```' → logprob: -8.869933128356934
    10. 'else' → logprob: -9.119933128356934

Token 72: ' ret' (ID: 2881)
  Prédit: ' ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ret' → logprob: -0.04995092749595642
    2. 'ret' → logprob: -3.0499508380889893
    3. '0' → logprob: -6.674951076507568
    4. ' ' → logprob: -9.42495059967041
    5. ' None' → logprob: -12.04995059967041
    6. '(ret' → logprob: -12.54995059967041
    7. 'None' → logprob: -13.42495059967041
    8. '	ret' → logprob: -13.67495059967041
    9. ' ' → logprob: -13.92495059967041
    10. ' p' → logprob: -14.04995059967041

Token 73: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1420729011297226
    2. ')' → logprob: -2.767072916030884
    3. ' ' → logprob: -3.517072916030884
    4. '<|end|>' → logprob: -5.267072677612305
    5. '```' → logprob: -5.392072677612305
    6. '...' → logprob: -5.392072677612305
    7. '#' → logprob: -5.642072677612305
    8. 'n' → logprob: -5.892072677612305
    9. '(' → logprob: -5.892072677612305
    10. '  ' → logprob: -6.142072677612305

Token 75: ' ten' (ID: 4325)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16281551122665405
    2. '   ' → logprob: -3.162815570831299
    3. '<|end|>' → logprob: -3.162815570831299
    4. '    ' → logprob: -3.287815570831299
    5. '*' → logprob: -4.787815570831299
    6. '  ' → logprob: -5.287815570831299
    7. '...' → logprob: -5.912815570831299
    8. ')' → logprob: -6.037815570831299
    9. '.' → logprob: -6.912815570831299
    10. '(' → logprob: -6.912815570831299

Token 76: ' =' (ID: 314)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.8684119582176208
    2. 'pow' → logprob: -1.4934120178222656
    3. '_p' → logprob: -1.6184120178222656
    4. '=' → logprob: -2.8684120178222656
    5. '_power' → logprob: -3.2434120178222656
    6. 's' → logprob: -3.4934120178222656
    7. ' =' → logprob: -4.243412017822266
    8. '```' → logprob: -4.993412017822266
    9. 'p' → logprob: -5.618412017822266
    10. '**' → logprob: -6.368412017822266

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004700326360762119
    2. '[' → logprob: -5.629700183868408
    3. 'pow' → logprob: -7.754700183868408
    4. ' ' → logprob: -8.254700660705566
    5. '0' → logprob: -8.504700660705566
    6. '10' → logprob: -9.129700660705566
    7. '[p' → logprob: -10.504700660705566
    8. ' [' → logprob: -10.629700660705566
    9. '(' → logprob: -10.879700660705566
    10. '{' → logprob: -12.504700660705566

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0244703721255064
    2. '[' → logprob: -3.774470329284668
    3. 'pow' → logprob: -7.399470329284668
    4. '10' → logprob: -8.524470329284668
    5. '[p' → logprob: -8.899470329284668
    6. '0' → logprob: -9.024470329284668
    7. '(' → logprob: -10.024470329284668
    8. '{' → logprob: -10.649470329284668
    9. ' [' → logprob: -11.149470329284668
    10. '[n' → logprob: -11.274470329284668

Token 79: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2282350063323975
    2. 'ret' → logprob: -1.3532350063323975
    3. ' ret' → logprob: -2.2282350063323975
    4. '   ' → logprob: -2.7282350063323975
    5. '0' → logprob: -2.8532350063323975
    6. '
' → logprob: -2.8532350063323975
    7. ':' → logprob: -3.4782350063323975
    8. ' ' → logprob: -3.9782350063323975
    9. '%' → logprob: -4.228235244750977
    10. 'mod' → logprob: -4.478235244750977

Token 81: ' cnt' (ID: 27340)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.004480323754251003
    2. 'res' → logprob: -6.629480361938477
    3. ' ret' → logprob: -6.754480361938477
    4. 'ans' → logprob: -7.004480361938477
    5. 'mod' → logprob: -8.129480361938477
    6. '   ' → logprob: -8.254480361938477
    7. 'result' → logprob: -8.754480361938477
    8. 'answer' → logprob: -9.629480361938477
    9. 'total' → logprob: -9.879480361938477
    10. 'cur' → logprob: -10.129480361938477

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17990565299987793
    2. '=' → logprob: -1.804905652999878
    3. '={}' → logprob: -9.429905891418457
    4. 's' → logprob: -10.179905891418457
    5. ' ' → logprob: -10.679905891418457
    6. '={' → logprob: -11.679905891418457
    7. '[' → logprob: -12.679905891418457
    8. '  ' → logprob: -13.179905891418457
    9. ' ={' → logprob: -13.179905891418457
    10. '={'' → logprob: -13.804905891418457

Token 83: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10593567788600922
    2. ' {' → logprob: -2.480935573577881
    3. '{}' → logprob: -4.605935573577881
    4. ' defaultdict' → logprob: -6.105935573577881
    5. '0' → logprob: -6.355935573577881
    6. 'default' → logprob: -6.605935573577881
    7. ' {}' → logprob: -6.855935573577881
    8. ' ' → logprob: -7.855935573577881
    9. '[' → logprob: -9.980936050415039
    10. 'collections' → logprob: -11.480936050415039

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07203364372253418
    2. '1' → logprob: -2.697033643722534
    3. '{' → logprob: -6.197033882141113
    4. ' ' → logprob: -10.572033882141113
    5. '{}' → logprob: -11.072033882141113
    6. 'default' → logprob: -11.822033882141113
    7. '[' → logprob: -12.572033882141113
    8. ']' → logprob: -12.697033882141113
    9. '(' → logprob: -14.322033882141113
    10. ' {' → logprob: -14.697033882141113

Token 85: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21975260972976685
    2. ']*' → logprob: -1.719752550125122
    3. ']*(' → logprob: -4.219752788543701
    4. '0' → logprob: -6.094752788543701
    5. ',' → logprob: -6.844752788543701
    6. ' for' → logprob: -9.594752311706543
    7. ']+' → logprob: -9.844752311706543
    8. '[' → logprob: -11.969752311706543
    9. 'for' → logprob: -12.219752311706543
    10. '(' → logprob: -12.344752311706543

Token 86: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.896309739408025e-07
    2. ' p' → logprob: -14.500000953674316
    3. '100' → logprob: -15.375000953674316
    4. '<p' → logprob: -17.625
    5. '999' → logprob: -19.125
    6. '(p' → logprob: -19.375
    7. '{' → logprob: -20.625
    8. '	p' → logprob: -20.75
    9. '[p' → logprob: -21.125
    10. '(' → logprob: -21.125

Token 87: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.012951615266501904
    2. '[' → logprob: -4.512951850891113
    3. '[cnt' → logprob: -6.887951850891113
    4. ' cnt' → logprob: -7.762951850891113
    5. '0' → logprob: -8.512951850891113
    6. '(cnt' → logprob: -9.012951850891113
    7. '	cnt' → logprob: -9.762951850891113
    8. '
' → logprob: -11.137951850891113
    9. ' ' → logprob: -11.512951850891113
    10. '   ' → logprob: -11.512951850891113

Token 88: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.004439016804099083
    2. '   ' → logprob: -6.129438877105713
    3. '	cnt' → logprob: -7.004438877105713
    4. ' cnt' → logprob: -7.379438877105713
    5. '<|end|>' → logprob: -8.254439353942871
    6. '[cnt' → logprob: -8.379439353942871
    7. '```' → logprob: -9.879439353942871
    8. '(cnt' → logprob: -10.129439353942871
    9. '0' → logprob: -10.379439353942871
    10. ' ' → logprob: -10.629439353942871

Token 89: ' r' (ID: 428)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0008876374922692776
    2. ' cnt' → logprob: -7.125887870788574
    3. '[cnt' → logprob: -10.125887870788574
    4. '	cnt' → logprob: -10.625887870788574
    5. '   ' → logprob: -12.250887870788574
    6. ' ' → logprob: -12.250887870788574
    7. '(cnt' → logprob: -13.000887870788574
    8. '0' → logprob: -13.625887870788574
    9. '[' → logprob: -13.750887870788574
    10. 'counter' → logprob: -14.000887870788574

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1354340761899948
    2. ' =' → logprob: -2.385434150695801
    3. 'ema' → logprob: -4.260434150695801
    4. 'em' → logprob: -4.385434150695801
    5. 'es' → logprob: -5.635434150695801
    6. 'unning' → logprob: -6.385434150695801
    7. 'sum' → logprob: -7.510434150695801
    8. 'emain' → logprob: -7.635434150695801
    9. 'e' → logprob: -7.885434150695801
    10. 'r' → logprob: -8.1354341506958

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03805101290345192
    2. ' ' → logprob: -3.288051128387451
    3. '1' → logprob: -12.413050651550293
    4. '<|end|>' → logprob: -13.538050651550293
    5. '   ' → logprob: -14.225550651550293
    6. '  ' → logprob: -14.788050651550293
    7. '[' → logprob: -14.850550651550293
    8. '10' → logprob: -15.100550651550293
    9. '000' → logprob: -15.475550651550293
    10. 's' → logprob: -15.663050651550293

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.774276774493046e-05
    2. ' ' → logprob: -10.250038146972656
    3. '1' → logprob: -13.500038146972656
    4. '[' → logprob: -14.625038146972656
    5. '10' → logprob: -15.625038146972656
    6. 'n' → logprob: -16.750038146972656
    7. '<|end|>' → logprob: -17.187538146972656
    8. '=' → logprob: -17.375038146972656
    9. 's' → logprob: -17.500038146972656
    10. 'r' → logprob: -17.500038146972656

Token 93: '
' (ID: 198)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.08447559922933578
    2. '   ' → logprob: -2.584475517272949
    3. '<|end|>' → logprob: -6.834475517272949
    4. '[cnt' → logprob: -7.084475517272949
    5. ' cnt' → logprob: -7.209475517272949
    6. '
' → logprob: -7.334475517272949
    7. '0' → logprob: -7.584475517272949
    8. '	cnt' → logprob: -7.709475517272949
    9. ' ' → logprob: -7.834475517272949
    10. '  ' → logprob: -8.70947551727295

Token 94: '   ' (ID: 271)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.49724453687667847
    2. '   ' → logprob: -1.1222445964813232
    3. '<|end|>' → logprob: -3.2472445964813232
    4. 'count' → logprob: -5.372244358062744
    5. 'ret' → logprob: -5.497244358062744
    6. ' ' → logprob: -5.747244358062744
    7. '<|end|>' → logprob: -6.247244358062744
    8. 'for' → logprob: -6.372244358062744
    9. '0' → logprob: -6.372244358062744
    10. ' cnt' → logprob: -6.622244358062744

Token 95: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.11360173672437668
    2. 'ans' → logprob: -2.7386016845703125
    3. 'ret' → logprob: -3.4886016845703125
    4. '   ' → logprob: -5.3636016845703125
    5. 'res' → logprob: -5.9886016845703125
    6. 'for' → logprob: -6.1136016845703125
    7. 'total' → logprob: -7.6136016845703125
    8. 'answer' → logprob: -7.6136016845703125
    9. ' cnt' → logprob: -7.7386016845703125
    10. 'counter' → logprob: -7.8636016845703125

Token 96: '[r' (ID: 33265)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030195412691682577
    2. '[r' → logprob: -5.878019332885742
    3. '[p' → logprob: -8.503019332885742
    4. '0' → logprob: -13.253019332885742
    5. '[s' → logprob: -13.253019332885742
    6. '[n' → logprob: -13.628019332885742
    7. '[int' → logprob: -14.128019332885742
    8. ' [' → logprob: -14.253019332885742
    9. '[(' → logprob: -14.253019332885742
    10. '```' → logprob: -14.253019332885742

Token 97: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01107282005250454
    2. ']+=' → logprob: -4.511072635650635
    3. ' ]' → logprob: -10.761073112487793
    4. '']' → logprob: -13.761073112487793
    5. '`]' → logprob: -13.761073112487793
    6. '"]' → logprob: -14.136073112487793
    7. ']+' → logprob: -14.761073112487793
    8. '+=' → logprob: -15.761073112487793
    9. '+]' → logprob: -16.511072158813477
    10. ')' → logprob: -17.011072158813477

Token 98: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0703558549284935
    2. ' +=' → logprob: -2.9453558921813965
    3. '=' → logprob: -4.1953558921813965
    4. ']+=' → logprob: -8.945355415344238
    5. ' =' → logprob: -9.070355415344238
    6. '+' → logprob: -10.195355415344238
    7. '```' → logprob: -13.570355415344238
    8. '<|end|>' → logprob: -13.570355415344238
    9. '  ' → logprob: -14.195355415344238
    10. '1' → logprob: -14.445355415344238

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -16.81259536743164
    4. '   ' → logprob: -16.93759536743164
    5. '  ' → logprob: -17.81259536743164
    6. '<|end|>' → logprob: -17.87509536743164
    7. '۱' → logprob: -18.18759536743164
    8. '0' → logprob: -18.31259536743164
    9. '+' → logprob: -18.50009536743164
    10. '１' → logprob: -18.81259536743164

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '10' → logprob: -16.562536239624023
    4. '```' → logprob: -17.875036239624023
    5. '0' → logprob: -17.937536239624023
    6. '   ' → logprob: -18.187536239624023
    7. '  ' → logprob: -18.250036239624023
    8. '۱' → logprob: -18.437536239624023
    9. '<|end|>' → logprob: -18.437536239624023
    10. '{' → logprob: -18.500036239624023

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4227438271045685
    2. ' for' → logprob: -2.047743797302246
    3. 'for' → logprob: -2.297743797302246
    4. '<|end|>' → logprob: -2.547743797302246
    5. '	for' → logprob: -4.422743797302246
    6. '
' → logprob: -4.422743797302246
    7. '```' → logprob: -4.797743797302246
    8. ' ' → logprob: -6.797743797302246
    9. '<|end|>' → logprob: -6.797743797302246
    10. ',' → logprob: -7.422743797302246

Token 102: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34027013182640076
    2. ' for' → logprob: -1.3402701616287231
    3. '   ' → logprob: -3.7152700424194336
    4. '	for' → logprob: -6.965270042419434
    5. '```' → logprob: -7.715270042419434
    6. '<|end|>' → logprob: -7.840270042419434
    7. 'result' → logprob: -8.590270042419434
    8. '
' → logprob: -9.340270042419434
    9. ' ' → logprob: -9.340270042419434
    10. ',' → logprob: -11.215270042419434

Token 103: ' for' (ID: 395)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.038218434900045395
    2. 'for' (adapté à ' for') → logprob: -3.7882184982299805
    3. 'ans' → logprob: -5.0382184982299805
    4. '   ' → logprob: -5.7882184982299805
    5. 'res' → logprob: -5.7882184982299805
    6. 'result' → logprob: -6.7882184982299805
    7. ' ret' → logprob: -7.4132184982299805
    8. 'answer' → logprob: -7.6632184982299805
    9. ' for' → logprob: -10.28821849822998
    10. 'total' → logprob: -12.41321849822998

Token 104: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.029756275936961174
    2. 'i' → logprob: -3.5297563076019287
    3. '	i' → logprob: -13.154756546020508
    4. '_' → logprob: -13.654756546020508
    5. '_i' → logprob: -14.029756546020508
    6. ' ' → logprob: -14.154756546020508
    7. ' _' → logprob: -15.279756546020508
    8. '(i' → logprob: -15.529756546020508
    9. ')' → logprob: -15.529756546020508
    10. '   ' → logprob: -16.529756546020508

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020581595599651337
    2. 'in' → logprob: -3.8955814838409424
    3. ' range' → logprob: -11.020581245422363
    4. 'range' → logprob: -11.395581245422363
    5. ' ' → logprob: -11.895581245422363
    6. '   ' → logprob: -13.020581245422363
    7. '	in' → logprob: -13.895581245422363
    8. ',' → logprob: -14.395581245422363
    9. 'n' → logprob: -14.895581245422363
    10. '  ' → logprob: -15.020581245422363

Token 106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023346781730652
    2. ' range' → logprob: -1.910233497619629
    3. ' ' → logprob: -12.535233497619629
    4. '(range' → logprob: -13.410233497619629
    5. '   ' → logprob: -13.535233497619629
    6. '	range' → logprob: -14.035233497619629
    7. 're' → logprob: -14.285233497619629
    8. '  ' → logprob: -14.535233497619629
    9. ' reversed' → logprob: -14.785233497619629
    10. 'n' → logprob: -15.285233497619629

Token 107: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010292385704815388
    2. '(' → logprob: -7.001029014587402
    3. 'n' → logprob: -9.626029014587402
    4. ' n' → logprob: -10.001029014587402
    5. ' (' → logprob: -12.501029014587402
    6. '(len' → logprob: -14.001029014587402
    7. '(s' → logprob: -14.251029014587402
    8. '	n' → logprob: -15.501029014587402
    9. ' ' → logprob: -15.751029014587402
    10. '   ' → logprob: -15.876029014587402

Token 108: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0021374132484197617
    2. ' -' → logprob: -6.502137184143066
    3. '):
' → logprob: -7.377137184143066
    4. '   ' → logprob: -12.252137184143066
    5. '):' → logprob: -12.502137184143066
    6. ' ' → logprob: -14.377137184143066
    7. '):
' → logprob: -16.627138137817383
    8. '1' → logprob: -16.752138137817383
    9. '):

' → logprob: -17.002138137817383
    10. ')' → logprob: -17.252138137817383

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01448372658342123
    2. ' r' → logprob: -4.38948392868042
    3. '   ' → logprob: -7.63948392868042
    4. ',' → logprob: -8.264483451843262
    5. '```' → logprob: -8.264483451843262
    6. '<|end|>' → logprob: -8.389483451843262
    7. 'r' → logprob: -8.764483451843262
    8. ' s' → logprob: -8.889483451843262
    9. '	' → logprob: -9.264483451843262
    10. '    ' → logprob: -10.264483451843262

Token 110: ' ms' (ID: 15217)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5251177549362183
    2. 'r' → logprob: -0.9001177549362183
    3. '   ' → logprob: -7.150117874145508
    4. '           ' → logprob: -7.150117874145508
    5. '       ' → logprob: -8.525117874145508
    6. '```' → logprob: -8.650117874145508
    7. '``' → logprob: -11.025117874145508
    8. '
' → logprob: -11.150117874145508
    9. ' ' → logprob: -12.900117874145508
    10. ' ten' → logprob: -13.025117874145508

Token 111: 'd' (ID: 67)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6552699208259583
    2. '=' → logprob: -1.5302698612213135
    3. ' =' → logprob: -2.1552698612213135
    4. 's' → logprob: -3.0302698612213135
    5. '   ' → logprob: -3.9052698612213135
    6. '+=' → logprob: -3.9052698612213135
    7. 'i' → logprob: -4.155270099639893
    8. 'd' → logprob: -4.280270099639893
    9. ' +=' → logprob: -5.030270099639893
    10. '[i' → logprob: -5.780270099639893

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020626209676265717
    2. '=' → logprob: -3.8956263065338135
    3. '   ' → logprob: -10.395626068115234
    4. ' ' → logprob: -11.645626068115234
    5. 's' → logprob: -11.770626068115234
    6. ' +=' → logprob: -11.895626068115234
    7. ']' → logprob: -11.895626068115234
    8. '    ' → logprob: -12.270626068115234
    9. '+=' → logprob: -12.520626068115234
    10. ' s' → logprob: -12.645626068115234

Token 113: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.43609362840652466
    2. 's' → logprob: -1.0610935688018799
    3. '   ' → logprob: -5.311093807220459
    4. ' (' → logprob: -6.936093807220459
    5. '(s' → logprob: -7.811093807220459
    6. ' ' → logprob: -8.1860933303833
    7. ' n' → logprob: -8.3110933303833
    8. '(' → logprob: -8.4360933303833
    9. 'n' → logprob: -9.1860933303833
    10. '    ' → logprob: -9.6860933303833

Token 114: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.695381760597229
    2. '[n' → logprob: -0.695381760597229
    3. '[-' → logprob: -6.1953816413879395
    4. '[' → logprob: -9.195382118225098
    5. 'i' → logprob: -10.195382118225098
    6. 'n' → logprob: -10.445382118225098
    7. '[(' → logprob: -11.695382118225098
    8. '   ' → logprob: -12.570382118225098
    9. '[len' → logprob: -12.570382118225098
    10. '[m' → logprob: -13.070382118225098

Token 115: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001980260480195284
    2. '1' → logprob: -6.501980304718018
    3. ' -' → logprob: -7.751980304718018
    4. '-i' → logprob: -10.00197982788086
    5. ' ' → logprob: -13.62697982788086
    6. '−' → logprob: -14.75197982788086
    7. '
' → logprob: -15.12697982788086
    8. 'i' → logprob: -15.62697982788086
    9. '-
' → logprob: -16.00197982788086
    10. '   ' → logprob: -16.62697982788086

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002950124442577362
    2. 'i' → logprob: -5.877950191497803
    3. '(' → logprob: -10.127949714660645
    4. '(i' → logprob: -10.252949714660645
    5. '-' → logprob: -10.502949714660645
    6. ' ' → logprob: -10.627949714660645
    7. '   ' → logprob: -12.502949714660645
    8. '2' → logprob: -12.627949714660645
    9. ' i' → logprob: -12.627949714660645
    10. '-i' → logprob: -13.690449714660645

Token 117: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6627932786941528
    2. '-i' → logprob: -1.0377932786941528
    3. ' -' → logprob: -2.0377931594848633
    4. '-
' → logprob: -10.787793159484863
    5. ']' → logprob: -12.537793159484863
    6. 'i' → logprob: -12.787793159484863
    7. ']-' → logprob: -12.912793159484863
    8. ' ' → logprob: -13.037793159484863
    9. '-ai' → logprob: -13.412793159484863
    10. '   ' → logprob: -14.537793159484863

Token 118: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13063761591911316
    2. ']
' → logprob: -2.1306376457214355
    3. ']*' → logprob: -5.6306376457214355
    4. ']

' → logprob: -9.505637168884277
    5. ']
' → logprob: -10.255637168884277
    6. ']*(' → logprob: -13.505637168884277
    7. ' ]' → logprob: -13.755637168884277
    8. ' ]
' → logprob: -14.255637168884277
    9. '   ' → logprob: -14.630637168884277
    10. '
' → logprob: -14.755637168884277

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01444237306714058
    2. '   ' → logprob: -4.764442443847656
    3. 'r' → logprob: -5.889442443847656
    4. ' r' → logprob: -6.014442443847656
    5. '
' → logprob: -8.389442443847656
    6. '```' → logprob: -9.639442443847656
    7. '           ' → logprob: -9.764442443847656
    8. ',' → logprob: -10.264442443847656
    9. '        
' → logprob: -10.389442443847656
    10. '        ' → logprob: -10.514442443847656

Token 120: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.025844555348157883
    2. ' r' → logprob: -3.9008445739746094
    3. '       ' → logprob: -5.900844573974609
    4. '   ' → logprob: -6.025844573974609
    5. 'ten' → logprob: -9.90084457397461
    6. '```' → logprob: -10.15084457397461
    7. ' ten' → logprob: -11.15084457397461
    8. '``' → logprob: -11.40084457397461
    9. '           ' → logprob: -11.52584457397461
    10. '
' → logprob: -12.27584457397461

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018598902970552444
    2. ' =' → logprob: -4.018599033355713
    3. '*=' → logprob: -7.768599033355713
    4. ' *=' → logprob: -11.143598556518555
    5. '+=' → logprob: -12.018598556518555
    6. '%=' → logprob: -12.393598556518555
    7. ' +=' → logprob: -14.143598556518555
    8. '*' → logprob: -15.518598556518555
    9. '=(' → logprob: -15.893598556518555
    10. ' <<=' → logprob: -15.893598556518555

Token 122: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.06794708222150803
    2. ' (' → logprob: -2.8179471492767334
    3. '(ms' → logprob: -5.317946910858154
    4. '(' → logprob: -7.692946910858154
    5. '(rs' → logprob: -8.067947387695312
    6. '(ls' → logprob: -9.442947387695312
    7. '(mod' → logprob: -9.942947387695312
    8. '(ret' → logprob: -9.942947387695312
    9. '(m' → logprob: -10.067947387695312
    10. '   ' → logprob: -11.067947387695312

Token 123: 'ms' (ID: 1782)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.061442840844392776
    2. '(r' → logprob: -2.9364428520202637
    3. ' r' → logprob: -5.311442852020264
    4. ' (' → logprob: -7.436442852020264
    5. 'ms' → logprob: -7.811442852020264
    6. '(ms' → logprob: -7.811442852020264
    7. '(' → logprob: -9.186442375183105
    8. '   ' → logprob: -10.561442375183105
    9. ')' → logprob: -10.686442375183105
    10. ' ms' → logprob: -11.186442375183105

Token 124: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.209963900502771e-05
    2. 'r' → logprob: -9.625092506408691
    3. '[r' → logprob: -11.500092506408691
    4. '[d' → logprob: -12.500092506408691
    5. '[' → logprob: -12.750092506408691
    6. '%d' → logprob: -12.875092506408691
    7. 'D' → logprob: -13.500092506408691
    8. 'д' → logprob: -13.625092506408691
    9. '_d' → logprob: -14.000092506408691
    10. '*d' → logprob: -14.625092506408691

Token 125: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931487321853638
    2. ' *' → logprob: -0.6931487321853638
    3. '*r' → logprob: -14.318148612976074
    4. ' ' → logprob: -15.193148612976074
    5. '*p' → logprob: -15.318148612976074
    6. '+' → logprob: -15.693148612976074
    7. ' +' → logprob: -16.06814956665039
    8. '10' → logprob: -16.69314956665039
    9. ')' → logprob: -16.81814956665039
    10. '```' → logprob: -17.06814956665039

Token 126: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' → logprob: -0.10026814788579941
    2. ' ten' → logprob: -2.3502681255340576
    3. ' ' → logprob: -10.975268363952637
    4. '
' → logprob: -11.225268363952637
    5. '   ' → logprob: -11.225268363952637
    6. '10' → logprob: -12.225268363952637
    7. '  ' → logprob: -12.475268363952637
    8. '    ' → logprob: -13.975268363952637
    9. ')' → logprob: -13.975268363952637
    10. '(' → logprob: -14.100268363952637

Token 127: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4788607954978943
    2. '+' → logprob: -0.9788607954978943
    3. '+r' → logprob: -5.353860855102539
    4. '%' → logprob: -10.228860855102539
    5. '+p' → logprob: -13.228860855102539
    6. ' plus' → logprob: -13.978860855102539
    7. ')' → logprob: -13.978860855102539
    8. '+y' → logprob: -14.603860855102539
    9. '＋' → logprob: -14.603860855102539
    10. '+x' → logprob: -15.103860855102539

Token 128: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0067154900170862675
    2. ' r' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.256715774536133
    4. ' ' → logprob: -17.006715774536133
    5. ')' → logprob: -17.756715774536133
    6. '	r' → logprob: -18.131715774536133
    7. '       ' → logprob: -18.381715774536133
    8. '  ' → logprob: -18.756715774536133
    9. '    ' → logprob: -18.756715774536133
    10. '_r' → logprob: -19.006715774536133

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.066919301403686e-05
    2. ' )' → logprob: -9.625090599060059
    3. ')%' → logprob: -10.625090599060059
    4. '   ' → logprob: -15.625090599060059
    5. '）' → logprob: -16.375091552734375
    6. ']' → logprob: -17.500091552734375
    7. '*' → logprob: -18.125091552734375
    8. '`)' → logprob: -18.500091552734375
    9. ')
' → logprob: -18.625091552734375
    10. '%' → logprob: -18.750091552734375

Token 130: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47414135932922363
    2. '%' → logprob: -0.9741413593292236
    3. ')' → logprob: -10.724141120910645
    4. '%n' → logprob: -10.849141120910645
    5. '%i' → logprob: -11.974141120910645
    6. ')%' → logprob: -12.224141120910645
    7. ' %=' → logprob: -13.224141120910645
    8. '%b' → logprob: -13.349141120910645
    9. '%x' → logprob: -13.349141120910645
    10. '%c' → logprob: -13.599141120910645

Token 131: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.615255839889869e-05
    2. ' p' → logprob: -9.250096321105957
    3. '	p' → logprob: -22.00009536743164
    4. '<p' → logprob: -22.00009536743164
    5. '*p' → logprob: -22.50009536743164
    6. ' ' → logprob: -23.12509536743164
    7. '<|end|>' → logprob: -23.62509536743164
    8. ')p' → logprob: -24.00009536743164
    9. '   ' → logprob: -24.25009536743164
    10. '
' → logprob: -24.50009536743164

Token 132: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044353955308906734
    2. '	' → logprob: -9.125443458557129
    3. 'ten' → logprob: -9.250443458557129
    4. ',' → logprob: -9.875443458557129
    5. ' ten' → logprob: -9.875443458557129
    6. '        
' → logprob: -10.375443458557129
    7. '   ' → logprob: -10.375443458557129
    8. '<|end|>' → logprob: -10.375443458557129
    9. '      ' → logprob: -11.625443458557129
    10. '10' → logprob: -11.750443458557129

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012377295643091202
    2. 'ten' → logprob: -7.001237869262695
    3. ' ten' → logprob: -8.501237869262695
    4. '        
' → logprob: -9.626237869262695
    5. '   ' → logprob: -11.126237869262695
    6. '	' → logprob: -11.626237869262695
    7. '<|end|>' → logprob: -11.876237869262695
    8. '```' → logprob: -11.876237869262695
    9. '
' → logprob: -12.376237869262695
    10. '      ' → logprob: -12.376237869262695

Token 134: ' ten' (ID: 4325)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ten' (adapté à ' ten') → logprob: -0.01826455257833004
    2. '       ' → logprob: -4.5182647705078125
    3. '   ' → logprob: -5.0182647705078125
    4. ' ten' → logprob: -7.5182647705078125
    5. '           ' → logprob: -12.018264770507812
    6. 'cnt' → logprob: -12.268264770507812
    7. '     ' → logprob: -12.393264770507812
    8. '
' → logprob: -12.518264770507812
    9. '    ' → logprob: -12.768264770507812
    10. '```' → logprob: -13.143264770507812

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0034291273914277554
    2. ' =' → logprob: -6.253428936004639
    3. '*=' → logprob: -6.503428936004639
    4. '%=' → logprob: -14.003429412841797
    5. ' *=' → logprob: -15.753429412841797
    6. '=(' → logprob: -16.628429412841797
    7. '*' → logprob: -17.253429412841797
    8. '＝' → logprob: -17.628429412841797
    9. '.=' → logprob: -18.503429412841797
    10. '   ' → logprob: -18.628429412841797

Token 136: ' ten' (ID: 4325)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.946405094116926e-05
    2. ' (' → logprob: -9.500079154968262
    3. 'ten' → logprob: -12.875079154968262
    4. '(t' → logprob: -13.375079154968262
    5. '(T' → logprob: -15.625079154968262
    6. '10' → logprob: -15.750079154968262
    7. '(te' → logprob: -17.375080108642578
    8. '((' → logprob: -17.500080108642578
    9. ' ten' → logprob: -17.875080108642578
    10. ' ' → logprob: -18.250080108642578

Token 137: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04427991807460785
    2. ' *' → logprob: -3.7942798137664795
    3. '(' → logprob: -3.9192798137664795
    4. '10' → logprob: -8.419280052185059
    5. '*(' → logprob: -8.669280052185059
    6. '(p' → logprob: -8.794280052185059
    7. '(n' → logprob: -9.044280052185059
    8. ' (' → logprob: -9.169280052185059
    9. '7' → logprob: -10.544280052185059
    10. '*p' → logprob: -10.794280052185059

Token 138: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.0536883615423e-05
    2. '(' → logprob: -10.125080108642578
    3. ' ' → logprob: -10.250080108642578
    4. '100' → logprob: -12.250080108642578
    5. 'pow' → logprob: -16.125080108642578
    6. '   ' → logprob: -16.750080108642578
    7. 'mod' → logprob: -18.750080108642578
    8. '20' → logprob: -18.875080108642578
    9. '  ' → logprob: -19.125080108642578
    10. ' (' → logprob: -19.375080108642578

Token 139: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.250003814697266
    3. '(' → logprob: -13.500003814697266
    4. '100' → logprob: -14.750003814697266
    5. '   ' → logprob: -17.875003814697266
    6. 'pow' → logprob: -19.000003814697266
    7. '{' → logprob: -19.500003814697266
    8. '0' → logprob: -19.750003814697266
    9. '
' → logprob: -19.875003814697266
    10. '  ' → logprob: -19.875003814697266

Token 140: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12869912385940552
    2. ' %' → logprob: -2.1286990642547607
    3. '%n' → logprob: -6.50369930267334
    4. '%i' → logprob: -9.00369930267334
    5. '%d' → logprob: -9.25369930267334
    6. '%x' → logprob: -10.50369930267334
    7. '%m' → logprob: -11.62869930267334
    8. '%b' → logprob: -12.37869930267334
    9. '%s' → logprob: -12.62869930267334
    10. '
' → logprob: -13.00369930267334

Token 141: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.704273118884885e-07
    2. ' p' → logprob: -14.250000953674316
    3. '*p' → logprob: -24.625
    4. '<p' → logprob: -24.875
    5. '$p' → logprob: -24.875
    6. '	p' → logprob: -25.25
    7. '   ' → logprob: -25.375
    8. ' ' → logprob: -25.875
    9. '```' → logprob: -26.5
    10. '
' → logprob: -26.625

Token 142: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08110026270151138
    2. '   ' → logprob: -2.5811002254486084
    3. 'cnt' → logprob: -6.3311004638671875
    4. 'count' → logprob: -8.956100463867188
    5. '	cnt' → logprob: -9.831100463867188
    6. '           ' → logprob: -10.706100463867188
    7. '```' → logprob: -10.706100463867188
    8. ' ' → logprob: -10.956100463867188
    9. '<|end|>' → logprob: -10.956100463867188
    10. '    ' → logprob: -11.081100463867188

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05143798887729645
    2. '   ' → logprob: -3.051438093185425
    3. 'cnt' → logprob: -6.176437854766846
    4. '	cnt' → logprob: -8.676438331604004
    5. '<|end|>' → logprob: -9.176438331604004
    6. 'count' → logprob: -9.426438331604004
    7. '```' → logprob: -9.426438331604004
    8. '    ' → logprob: -9.926438331604004
    9. '           ' → logprob: -10.426438331604004
    10. '      ' → logprob: -10.426438331604004

Token 144: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0006934931734576821
    2. '   ' → logprob: -7.500693321228027
    3. '       ' → logprob: -9.250693321228027
    4. ' cnt' → logprob: -10.125693321228027
    5. 'ret' → logprob: -13.875693321228027
    6. '	cnt' → logprob: -13.875693321228027
    7. 'ans' → logprob: -14.250693321228027
    8. 'counter' → logprob: -14.500693321228027
    9. '[cnt' → logprob: -14.625693321228027
    10. '(cnt' → logprob: -15.125693321228027

Token 145: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00018220659694634378
    2. '[' → logprob: -8.625182151794434
    3. 'r' → logprob: -13.625182151794434
    4. '[s' → logprob: -14.750182151794434
    5. '[
' → logprob: -15.375182151794434
    6. '[(' → logprob: -15.375182151794434
    7. '[m' → logprob: -16.25018310546875
    8. '[c' → logprob: -16.25018310546875
    9. '[n' → logprob: -16.62518310546875
    10. '```' → logprob: -16.75018310546875

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06240680441260338
    2. ']+=' → logprob: -2.8124067783355713
    3. '+=' → logprob: -7.81240701675415
    4. '+]' → logprob: -10.687406539916992
    5. '+' → logprob: -12.562406539916992
    6. ' ]' → logprob: -12.687406539916992
    7. ' +=' → logprob: -12.937406539916992
    8. '[' → logprob: -13.562406539916992
    9. '`]' → logprob: -14.437406539916992
    10. ']+' → logprob: -15.687406539916992

Token 147: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0015366430161520839
    2. ' +=' → logprob: -6.501536846160889
    3. ']+=' → logprob: -10.50153636932373
    4. '=' → logprob: -12.25153636932373
    5. '+' → logprob: -13.50153636932373
    6. '[' → logprob: -15.62653636932373
    7. '```' → logprob: -15.75153636932373
    8. '+='' → logprob: -16.251537322998047
    9. '++' → logprob: -16.626537322998047
    10. '+=(' → logprob: -16.876537322998047

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -19.125015258789062
    4. '   ' → logprob: -20.000015258789062
    5. '
' → logprob: -20.500015258789062
    6. '１' → logprob: -20.625015258789062
    7. '0' → logprob: -21.000015258789062
    8. '(' → logprob: -21.000015258789062
    9. ' ' → logprob: -21.750015258789062
    10. '۱' → logprob: -22.000015258789062

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -19.750001907348633
    4. '
' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '１' → logprob: -21.375001907348633
    7. '۱' → logprob: -21.750001907348633
    8. '0' → logprob: -21.875001907348633
    9. '{' → logprob: -22.000001907348633
    10. '(' → logprob: -22.250001907348633

Token 150: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003492327407002449
    2. '
' → logprob: -6.12849235534668
    3. 'ret' → logprob: -8.25349235534668
    4. 'from' → logprob: -8.50349235534668
    5. '       ' → logprob: -8.75349235534668
    6. '    
' → logprob: -8.87849235534668
    7. 'result' → logprob: -9.37849235534668
    8. ' ' → logprob: -9.75349235534668
    9. ' from' → logprob: -10.00349235534668
    10. '  
' → logprob: -10.25349235534668

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6388304829597473
    2. 'ret' → logprob: -0.7638304829597473
    3. ' ret' → logprob: -5.763830661773682
    4. 'result' → logprob: -6.763830661773682
    5. 'res' → logprob: -7.888830661773682
    6. '```' → logprob: -8.013830184936523
    7. 'ans' → logprob: -8.138830184936523
    8. 'return' → logprob: -8.138830184936523
    9. 'answer' → logprob: -9.013830184936523
    10. '	ret' → logprob: -9.138830184936523

Token 152: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.00662845466285944
    2. 'ans' → logprob: -5.506628513336182
    3. 'res' → logprob: -6.006628513336182
    4. 'answer' → logprob: -10.506628036499023
    5. 'result' → logprob: -10.756628036499023
    6. '   ' → logprob: -10.881628036499023
    7. 'return' → logprob: -11.631628036499023
    8. ' ret' → logprob: -12.381628036499023
    9. '```' → logprob: -12.881628036499023
    10. '    
' → logprob: -14.631628036499023

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02692040242254734
    2. '=' → logprob: -3.6519203186035156
    3. ' +=' → logprob: -7.401920318603516
    4. '+=' → logprob: -12.026920318603516
    5. ',' → logprob: -13.401920318603516
    6. ' ' → logprob: -14.776920318603516
    7. '   ' → logprob: -14.901920318603516
    8. '  ' → logprob: -15.401920318603516
    9. ' ,' → logprob: -15.526920318603516
    10. ' =)' → logprob: -15.651920318603516

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017274183919653296
    2. ' ' → logprob: -6.37672758102417
    3. 'sum' → logprob: -10.751727104187012
    4. ' sum' → logprob: -13.001727104187012
    5. '   ' → logprob: -13.501727104187012
    6. '  ' → logprob: -16.251728057861328
    7. 'ret' → logprob: -16.751728057861328
    8. '
' → logprob: -17.001728057861328
    9. '```' → logprob: -17.001728057861328
    10. '[' → logprob: -18.376728057861328

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007170771714299917
    2. 'sum' → logprob: -7.2507171630859375
    3. ' ' → logprob: -12.125717163085938
    4. 'ret' → logprob: -14.500717163085938
    5. '   ' → logprob: -15.375717163085938
    6. 'ans' → logprob: -15.500717163085938
    7. 'p' → logprob: -16.250717163085938
    8. '1' → logprob: -16.250717163085938
    9. '(' → logprob: -16.875717163085938
    10. '[' → logprob: -17.000717163085938

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27953845262527466
    2. 'for' → logprob: -2.40453839302063
    3. ' for' → logprob: -2.52953839302063
    4. '
' → logprob: -2.65453839302063
    5. '<|end|>' → logprob: -6.404538631439209
    6. '```' → logprob: -7.029538631439209
    7. '	for' → logprob: -7.154538631439209
    8. '  
' → logprob: -10.15453815460205
    9. '    
' → logprob: -10.27953815460205
    10. '<|end|>' → logprob: -10.77953815460205

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05368722975254059
    2. 'for' → logprob: -3.053687334060669
    3. ' for' → logprob: -5.30368709564209
    4. '```' → logprob: -9.92868709564209
    5. '
' → logprob: -10.30368709564209
    6. '	for' → logprob: -10.55368709564209
    7. '<|end|>' → logprob: -13.55368709564209
    8. '  ' → logprob: -13.67868709564209
    9. ' ' → logprob: -13.80368709564209
    10. '       ' → logprob: -14.30368709564209

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.9040898880339228e-05
    2. 'from' → logprob: -10.500028610229492
    3. '   ' → logprob: -13.625028610229492
    4. ' for' → logprob: -15.250028610229492
    5. '```' → logprob: -17.125028610229492
    6. '
' → logprob: -17.375028610229492
    7. '	for' → logprob: -20.500028610229492
    8. '       ' → logprob: -20.625028610229492
    9. 'import' → logprob: -21.125028610229492
    10. '    
' → logprob: -21.250028610229492

Token 159: ' r' (ID: 428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3614732027053833
    2. 'x' → logprob: -1.9864732027053833
    3. ' i' → logprob: -2.8614730834960938
    4. 'c' → logprob: -3.1114730834960938
    5. ' x' → logprob: -3.3614730834960938
    6. ' c' → logprob: -4.361473083496094
    7. 'v' → logprob: -4.861473083496094
    8. 'r' → logprob: -5.486473083496094
    9. ' v' → logprob: -6.236473083496094
    10. 'j' → logprob: -7.111473083496094

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007400614558719099
    2. 'in' → logprob: -7.250740051269531
    3. '   ' → logprob: -12.125740051269531
    4. 'range' → logprob: -12.250740051269531
    5. ' ' → logprob: -12.625740051269531
    6. '1' → logprob: -12.750740051269531
    7. 'p' → logprob: -12.875740051269531
    8. '_' → logprob: -13.000740051269531
    9. ',' → logprob: -13.625740051269531
    10. '[' → logprob: -13.750740051269531

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.013429495505988598
    2. 'cnt' → logprob: -5.013429641723633
    3. ' range' → logprob: -5.013429641723633
    4. ' cnt' → logprob: -10.263429641723633
    5. 'p' → logprob: -12.638429641723633
    6. '(range' → logprob: -12.638429641723633
    7. '(cnt' → logprob: -14.263429641723633
    8. 'count' → logprob: -14.513429641723633
    9. '[cnt' → logprob: -14.763429641723633
    10. '   ' → logprob: -16.263429641723633

Token 162: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.7491250875755213e-05
    2. 'p' → logprob: -11.000027656555176
    3. '(' → logprob: -12.125027656555176
    4. '(len' → logprob: -12.250027656555176
    5. '   ' → logprob: -15.375027656555176
    6. '(cnt' → logprob: -16.50002670288086
    7. 'len' → logprob: -16.75002670288086
    8. '[p' → logprob: -17.00002670288086
    9. '(
' → logprob: -17.12502670288086
    10. ' p' → logprob: -17.25002670288086

Token 163: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05112122744321823
    2. '):' → logprob: -3.051121234893799
    3. '+' → logprob: -6.051121234893799
    4. '   ' → logprob: -9.30112075805664
    5. '):
' → logprob: -10.42612075805664
    6. ']:
' → logprob: -11.17612075805664
    7. ':
' → logprob: -11.42612075805664
    8. ' +' → logprob: -12.30112075805664
    9. ' ):
' → logprob: -12.30112075805664
    10. ':' → logprob: -12.55112075805664

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007841374608688056
    2. 'ret' → logprob: -7.625783920288086
    3. ' ret' → logprob: -9.500783920288086
    4. '   ' → logprob: -9.750783920288086
    5. ' for' → logprob: -9.750783920288086
    6. 'count' → logprob: -10.125783920288086
    7. 'cnt' → logprob: -11.250783920288086
    8. '```' → logprob: -11.375783920288086
    9. 'n' → logprob: -11.625783920288086
    10. 'for' → logprob: -11.875783920288086

Token 165: ' ret' (ID: 2881)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5293650031089783
    2. 'ret' (adapté à ' ret') → logprob: -1.279365062713623
    3. '       ' → logprob: -2.904365062713623
    4. '   ' → logprob: -3.154365062713623
    5. 'if' → logprob: -4.154365062713623
    6. 'x' → logprob: -4.529365062713623
    7. 'cnt' → logprob: -5.654365062713623
    8. 'k' → logprob: -6.029365062713623
    9. 'm' → logprob: -7.029365062713623
    10. 'count' → logprob: -7.654365062713623

Token 166: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12865237891674042
    2. ' +=' → logprob: -2.128652334213257
    3. '+=(' → logprob: -6.878652572631836
    4. '   ' → logprob: -7.378652572631836
    5. '```' → logprob: -11.253652572631836
    6. '	' → logprob: -11.253652572631836
    7. ']+=' → logprob: -11.753652572631836
    8. '*(' → logprob: -11.878652572631836
    9. '       ' → logprob: -12.253652572631836
    10. '=' → logprob: -12.253652572631836

Token 167: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -5.2166411478538066e-05
    2. ' cnt' → logprob: -10.500052452087402
    3. '(cnt' → logprob: -10.750052452087402
    4. '   ' → logprob: -12.875052452087402
    5. ' ' → logprob: -15.625052452087402
    6. '(' → logprob: -15.875052452087402
    7. '	cnt' → logprob: -15.875052452087402
    8. '[cnt' → logprob: -16.625051498413086
    9. '  ' → logprob: -17.250051498413086
    10. '
' → logprob: -18.375051498413086

Token 168: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.00000286102295
    3. 'r' → logprob: -14.37500286102295
    4. '[i' → logprob: -16.875003814697266
    5. '```' → logprob: -17.000003814697266
    6. ' [' → logprob: -17.250003814697266
    7. '[
' → logprob: -17.375003814697266
    8. '(r' → logprob: -18.125003814697266
    9. '[p' → logprob: -18.250003814697266
    10. '   ' → logprob: -18.500003814697266

Token 169: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4118718206882477
    2. '*(' → logprob: -1.6618717908859253
    3. ' *' → logprob: -1.9118717908859253
    4. ' ' → logprob: -12.786871910095215
    5. ' *(' → logprob: -14.911871910095215
    6. '-' → logprob: -15.036871910095215
    7. '   ' → logprob: -15.786871910095215
    8. '  ' → logprob: -15.911871910095215
    9. ' ' → logprob: -16.2868709564209
    10. '
' → logprob: -17.0368709564209

Token 170: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.49792730808258057
    2. '*(' → logprob: -0.9979273080825806
    3. ' *' → logprob: -3.747927188873291
    4. ' ' → logprob: -14.49792766571045
    5. '**' → logprob: -14.74792766571045
    6. ' *(' → logprob: -16.247926712036133
    7. '```' → logprob: -16.372926712036133
    8. '-' → logprob: -16.622926712036133
    9. '*((' → logprob: -16.622926712036133
    10. '*[' → logprob: -16.747926712036133

Token 171: ' (' (ID: 350)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.00030269217677414417
    2. ' (' → logprob: -8.5003023147583
    3. '[cnt' → logprob: -9.8753023147583
    4. '(max' → logprob: -10.8753023147583
    5. '(ct' → logprob: -11.6253023147583
    6. '(ret' → logprob: -12.1253023147583
    7. '(c' → logprob: -12.6253023147583
    8. '(count' → logprob: -12.7503023147583
    9. '(ans' → logprob: -14.1253023147583
    10. '(cont' → logprob: -14.2503023147583

Token 172: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.011278292164206505
    2. '(cnt' → logprob: -4.51127815246582
    3. '[cnt' → logprob: -8.63627815246582
    4. ' cnt' → logprob: -10.38627815246582
    5. '	cnt' → logprob: -10.88627815246582
    6. '       ' → logprob: -13.51127815246582
    7. '   ' → logprob: -13.76127815246582
    8. '_cnt' → logprob: -14.51127815246582
    9. ' ' → logprob: -15.38627815246582
    10. '
' → logprob: -16.88627815246582

Token 173: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.961759259458631e-06
    2. 'r' → logprob: -12.250004768371582
    3. '[' → logprob: -16.8750057220459
    4. '[
' → logprob: -18.1250057220459
    5. '```' → logprob: -18.8750057220459
    6. '[c' → logprob: -19.5000057220459
    7. '(r' → logprob: -19.6250057220459
    8. '	r' → logprob: -20.0000057220459
    9. ' [' → logprob: -20.2500057220459
    10. '
' → logprob: -20.6250057220459

Token 174: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01815134845674038
    2. ' -' → logprob: -4.01815128326416
    3. ' ' → logprob: -13.64315128326416
    4. '```' → logprob: -16.143152236938477
    5. '   ' → logprob: -16.768152236938477
    6. ')' → logprob: -17.393152236938477
    7. '  ' → logprob: -17.518152236938477
    8. '1' → logprob: -18.018152236938477
    9. '       ' → logprob: -18.143152236938477
    10. ']' → logprob: -18.268152236938477

Token 175: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018150178715586662
    2. ' -' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.893150329589844
    4. '```' → logprob: -16.268150329589844
    5. ')' → logprob: -17.268150329589844
    6. '−' → logprob: -17.518150329589844
    7. '–' → logprob: -17.893150329589844
    8. '-ret' → logprob: -18.518150329589844
    9. '
' → logprob: -19.018150329589844
    10. '-)' → logprob: -19.143150329589844

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '```' → logprob: -17.250003814697266
    5. '
' → logprob: -18.000003814697266
    6. '  ' → logprob: -20.250003814697266
    7. '       ' → logprob: -20.500003814697266
    8. '<|end|>' → logprob: -20.875003814697266
    9. ')' → logprob: -21.125003814697266
    10. '

' → logprob: -21.375003814697266

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -17.750001907348633
    4. '
' → logprob: -18.375001907348633
    5. '<|end|>' → logprob: -19.000001907348633
    6. ')' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '  ' → logprob: -20.562501907348633
    9. '{' → logprob: -20.562501907348633
    10. '۱' → logprob: -21.062501907348633

Token 178: ')' (ID: 8)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.0001438856124878
    2. '//' → logprob: -1.1251438856124878
    3. ')' → logprob: -1.2501438856124878
    4. ')//' → logprob: -3.8751440048217773
    5. '```' → logprob: -9.000144004821777
    6. ' )' → logprob: -9.125144004821777
    7. '   ' → logprob: -10.375144004821777
    8. ']' → logprob: -10.750144004821777
    9. '")' → logprob: -10.875144004821777
    10. '
' → logprob: -11.375144004821777

Token 179: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0181842390447855
    2. ' //' → logprob: -4.018184185028076
    3. '```' → logprob: -11.143184661865234
    4. '#' → logprob: -12.018184661865234
    5. '
' → logprob: -12.018184661865234
    6. '   ' → logprob: -12.768184661865234
    7. '0' → logprob: -13.768184661865234
    8. '>>' → logprob: -14.143184661865234
    9. ')//' → logprob: -14.268184661865234
    10. '       ' → logprob: -14.643184661865234

Token 180: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.875
    4. '```' → logprob: -19.25
    5. '
' → logprob: -19.625
    6. '       ' → logprob: -22.25
    7. '
' → logprob: -22.375
    8. '           ' → logprob: -22.75
    9. '۲' → logprob: -22.75
    10. '  ' → logprob: -22.75

Token 181: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '   ' → logprob: -21.5
    4. '
' → logprob: -21.75
    5. '```' → logprob: -22.125
    6. '۲' → logprob: -22.625
    7. '202' → logprob: -23.625
    8. '２' → logprob: -24.375
    9. '२' → logprob: -24.5
    10. '22' → logprob: -24.5

Token 182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005723286420106888
    2. 'return' → logprob: -5.880723476409912
    3. ' return' → logprob: -6.130723476409912
    4. '
' → logprob: -7.630723476409912
    5. '	return' → logprob: -8.755722999572754
    6. '    
' → logprob: -9.505722999572754
    7. '```' → logprob: -11.130722999572754
    8. '  
' → logprob: -13.380722999572754
    9. '<|end|>' → logprob: -13.755722999572754
    10. ' 
' → logprob: -13.755722999572754

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017975156661123037
    2. 'return' → logprob: -6.501797676086426
    3. '
' → logprob: -8.876797676086426
    4. ' return' → logprob: -9.501797676086426
    5. '    
' → logprob: -10.251797676086426
    6. '	return' → logprob: -10.501797676086426
    7. '```' → logprob: -11.001797676086426
    8. '  
' → logprob: -14.376797676086426
    9. '       ' → logprob: -15.376797676086426
    10. '
' → logprob: -15.876797676086426

Token 184: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04350469261407852
    2. 'return' (adapté à ' return') → logprob: -3.2935047149658203
    3. ' return' → logprob: -5.29350471496582
    4. '	return' → logprob: -7.79350471496582
    5. '    
' → logprob: -11.91850471496582
    6. ':return' → logprob: -13.91850471496582
    7. '<|end|>' → logprob: -14.04350471496582
    8. '
' → logprob: -14.29350471496582
    9. '```' → logprob: -14.41850471496582
    10. '       ' → logprob: -14.66850471496582

Token 185: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.001170225441455841
    2. ' ret' → logprob: -6.7511701583862305
    3. '(ret' → logprob: -19.251171112060547
    4. '	ret' → logprob: -19.876171112060547
    5. '$ret' → logprob: -20.376171112060547
    6. '   ' → logprob: -21.001171112060547
    7. 'rets' → logprob: -21.001171112060547
    8. '```' → logprob: -21.376171112060547
    9. 'retval' → logprob: -21.876171112060547
    10. '_ret' → logprob: -22.251171112060547

Token 186: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01981556974351406
    2. '<|end|>' → logprob: -4.019815444946289
    3. ')' → logprob: -7.394815444946289
    4. '<|end|>' → logprob: -8.519815444946289
    5. '#' → logprob: -8.769815444946289
    6. '```' → logprob: -8.769815444946289
    7. 'solve' → logprob: -9.019815444946289
    8. '()' → logprob: -9.144815444946289
    9. ' print' → logprob: -9.394815444946289
    10. '
' → logprob: -9.394815444946289

Token 187: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. ' print' → logprob: -13.875000953674316
    3. 'if' → logprob: -17.750001907348633
    4. 'result' → logprob: -18.500001907348633
    5. '#print' → logprob: -19.125001907348633
    6. 'n' → logprob: -19.250001907348633
    7. '```' → logprob: -19.625001907348633
    8. 'for' → logprob: -20.250001907348633
    9. '#' → logprob: -20.375001907348633
    10. '	print' → logprob: -20.500001907348633

Token 188: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7649979591369629
    2. '(s' → logprob: -1.014997959136963
    3. '(print' → logprob: -1.764997959136963
    4. '()' → logprob: -7.639997959136963
    5. 'solve' → logprob: -8.139997482299805
    6. '(sol' → logprob: -9.014997482299805
    7. '(solution' → logprob: -10.014997482299805
    8. 'print' → logprob: -10.014997482299805
    9. '('' → logprob: -10.264997482299805
    10. '(sum' → logprob: -11.264997482299805

Token 189: 'olve' (ID: 11460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024397077038884163
    2. '))' → logprob: -3.899397134780884
    3. 'olve' → logprob: -5.649396896362305
    4. '[' → logprob: -9.024396896362305
    5. ')))' → logprob: -9.399396896362305
    6. '])' → logprob: -10.899396896362305
    7. 'ol' → logprob: -11.399396896362305
    8. ')])' → logprob: -11.524396896362305
    9. '())' → logprob: -11.899396896362305
    10. ')`' → logprob: -11.899396896362305

Token 190: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014198064804077148
    2. '()' → logprob: -4.264198303222656
    3. '();)' → logprob: -10.889198303222656
    4. ')' → logprob: -11.764198303222656
    5. '()]' → logprob: -12.764198303222656
    6. ' ())' → logprob: -13.264198303222656
    7. '())
' → logprob: -14.514198303222656
    8. '().' → logprob: -14.889198303222656
    9. '()))' → logprob: -14.889198303222656
    10. '()
' → logprob: -15.014198303222656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 188
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 159
Précision stricte (1ère position): 35.64%
Précision adaptée (1ère position): 40.43%
Précision (top 10): 84.57%
================================================================================
